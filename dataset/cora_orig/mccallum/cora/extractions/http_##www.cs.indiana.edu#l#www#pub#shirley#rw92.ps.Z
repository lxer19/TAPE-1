URL: http://www.cs.indiana.edu/l/www/pub/shirley/rw92.ps.Z
Refering-URL: http://www.cs.indiana.edu/l/www/pub/shirley/
Root-URL: http://www.cs.indiana.edu
Title: Distribution Ray Tracing: Theory and Practice  
Author: Peter Shirley Changyaw Wang 
Note: Proceedings of the Third Eurographics Workshop on Rendering  
Affiliation: Computer Science Department Indiana University  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> James Arvo and David Kirk. </author> <title> Particle transport and image synthesis. </title> <journal> Computer Graphics, </journal> <volume> 24(3) </volume> <pages> 63-66, </pages> <month> August </month> <year> 1990. </year> <booktitle> ACM Siggraph '90 Conference Proceedings. </booktitle>
Reference-contexts: In other words, the bright spots will not favor particular places on the film. Once a w is chosen for filtering, implementation is straightforward provided that w is strictly positive (as it must be if negative pixel colors are disallowed). Points can be chosen uniformly from <ref> [0; 1] </ref> 2 and then a warping transformation can be applied to distribute the points according to w [32, 28, 16]. <p> Points can be chosen uniformly from [0; 1] 2 and then a warping transformation can be applied to distribute the points according to w [32, 28, 16]. For several practical and theoretical reasons [27] we have chosen the width 2 weighting function that is non-zero on (x; y) 2 <ref> [1; 1] </ref> 2 : w (x; y) = (1 jxj) (1 jyj) (4) We generate random points with density equal to w by applying a transformation to a uniform random pair (r 1 ; r 2 ) 2 [0; 1] 2 . <p> the width 2 weighting function that is non-zero on (x; y) 2 [1; 1] 2 : w (x; y) = (1 jxj) (1 jyj) (4) We generate random points with density equal to w by applying a transformation to a uniform random pair (r 1 ; r 2 ) 2 <ref> [0; 1] </ref> 2 . <p> The reflectivity term is simply: R (x; ) = incoming 0 (x; ; 0 ) cos d! For an ideal specular surface, the ~ will always be the ideal reflection direction. For a dielectric, ~ can be chosen randomly between reflected and transmitted directions <ref> [1] </ref>, or it can be split into two integrals as is done in a Whitted-style ray tracer [42]. For a diffuse surface, ~ will be follow cosine distribution: p ( 0 ) = cos =. When Equation 6 is used, the sampling takes place over all surfaces in the environment. <p> A scattered direction can be generated with the warping function (ff; fi) = (2 arccos [(1 r 1 ) 1 where r 1 and r 2 are random numbers on <ref> [0; 1] </ref>. <p> The most important consideration here is the selection of basis functions that disallow negative spectral values at any wavelength. This can be accomplished by using the RGB primaries associated with the RGB input as basis functions. For sample point selection, we choose N sampling points from <ref> [0; 1] </ref> N in the spirit of [19], and then use appropriate warping transforms for our sample points to be distributed properly (e.g. points on the disk of the camera lens, reflected ray directions).
Reference: [2] <author> Norman F. Barnes. </author> <title> Color characteristics of artists' pigments. </title> <journal> Journal of the Optical Society of America, </journal> <month> May </month> <year> 1939. </year> <month> 14 </month>
Reference-contexts: In all other ways, the four samples were satisfactory. We have had difficulty finding spectral reflectance data for many materials. Two of our most valuable sources have been [22] for conductor parameters, and <ref> [2] </ref> for the reflectance data for common artist pigments. We still support the input of RGB data for texture maps and diffuse reflectances, and use the Glassner's method [6] to choose a plausible spectrum associated with the RGB triple.
Reference: [3] <author> Shenchang Eric Chen, Holly Rushmeier, Gavin Miller, and Douglass Turner. </author> <title> A progressive multi-pass method for global illumination. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 165-174, </pages> <month> July </month> <year> 1991. </year> <booktitle> ACM Siggraph '91 Conference Proceedings. </booktitle>
Reference-contexts: Distribution ray tracing has been extended and modified by many researchers, most notably by Kajiya who added true indirect illumination [12]. Distribution ray tracing has also been used as the viewing component of radiosity systems (e.g <ref> [37, 3] </ref>). In this paper we examine some of the central issues of distribution ray tracing that have been overlooked in the literature but are still of importance. Our interest in distribution ray tracing arises for three basic reasons.
Reference: [4] <author> Robert L. Cook. </author> <title> Stochastic sampling in computer graphics. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 5(1) </volume> <pages> 51-72, </pages> <month> January </month> <year> 1986. </year>
Reference-contexts: , where each ~ i is distributed according to a probability density function p: I = x2S N X f (~ i ) (1) Although distribution ray tracing is usually phrased as an application of Equation 1, many researchers replace the ~ i with more evenly distributed (quasi-random) samples (e.g. <ref> [4, 19] </ref>). This approach can be shown to be sound by analyzing decreasing error in terms of some discrepancy measure [44, 43, 19, 28] rather than in terms of variance. <p> When Equation 6 is used, the sampling takes place over all surfaces in the environment. In practice, only the direct lighting is calculated, so the integration space becomes all luminaire surfaces. This can be split into one integral for each surface <ref> [4] </ref>, or can be viewed as a single sampling space [16, 30]. To simplify this discussion, we will assume only one luminaire, so the sampling space is just a single surface. <p> We outline some of our more recent design decisions in this section. In implementing a camera model <ref> [4] </ref>, we have assumed a thin-lens camera model based on the fundamental rules of a thin-lens. We have not modeled the cos 4 falloff in intensity at the film-plane, because real cameras include corrections for this effect [20]. We have also allowed moving a camera with changing field-of-view.
Reference: [5] <author> Robert L. Cook, Thomas Porter, and Loren Carpenter. </author> <title> Distributed ray tracing. </title> <journal> Computer Graphics, </journal> <volume> 18(4) </volume> <pages> 165-174, </pages> <month> July </month> <year> 1984. </year> <booktitle> ACM Siggraph '84 Conference Proceedings. </booktitle>
Reference-contexts: 1 Introduction Distribution ray tracing uses Monte Carlo integration to solve the rendering equation. This technique was introduced by Cook et. al, and was notable because of its simplicity and its ability to simulate areal luminaires, camera lens effects, motion blur, and imperfect specular reflection <ref> [5] </ref>. Distribution ray tracing has been extended and modified by many researchers, most notably by Kajiya who added true indirect illumination [12]. Distribution ray tracing has also been used as the viewing component of radiosity systems (e.g [37, 3]). <p> In practice, this isn't practical because the geometry term g and the BRDF can be very difficult to characterize. Instead, many researchers <ref> [5, 12] </ref> sample uniformly within the solid angle subtended by the luminaire, which yields: p (x 0 ) = C 0 cos 0 Even this must only be approximated 1 for polygonal luminaires [38], but can be exactly applied for spherical luminaires [14, 38].
Reference: [6] <author> Andrew S. Glassner. </author> <title> How to derive a spectrum from an rgb triplet. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 9(7) </volume> <pages> 95-99, </pages> <year> 1989. </year>
Reference-contexts: Two of our most valuable sources have been [22] for conductor parameters, and [2] for the reflectance data for common artist pigments. We still support the input of RGB data for texture maps and diffuse reflectances, and use the Glassner's method <ref> [6] </ref> to choose a plausible spectrum associated with the RGB triple. The most important consideration here is the selection of basis functions that disallow negative spectral values at any wavelength. This can be accomplished by using the RGB primaries associated with the RGB input as basis functions.
Reference: [7] <author> Xiao D. He, Kenneth E. Torrence, Francois X. Sillion, and Donald P. Greenberg. </author> <title> A comprehensive physical model for light reflection. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 175-186, </pages> <month> July </month> <year> 1991. </year> <booktitle> ACM Siggraph '91 Conference Proceedings. </booktitle>
Reference-contexts: The chief difference between our model and more traditional ones is the inclusion of Fresnel Equations for the reflectivity of conductors, dielectrics, and polished materials. We have not implemented a more physically based model for BRDF functions, such as the one recently presented in <ref> [7] </ref>, because we have not found an analytical attack on the mathematics of scattered ray distribution. We also allow solid textures [23] to modify material parameters such as the amount of polish on a surface.
Reference: [8] <author> Paul S. Heckbert. </author> <title> Writing a ray tracer. </title> <editor> In Andrew S. Glassner, editor, </editor> <title> An Introduction to Ray Tracing. </title> <publisher> Academic Press, </publisher> <address> San Diego, CA, </address> <year> 1989. </year>
Reference-contexts: For especially bright spots in a scene, effects such as those used used by Nakamae et al.[21] have proven effective. 6 Implementational Issues Although usually talked about is if trivial, writing a full-blown ray tracer is difficult, and object-oriented design techniques have proven useful <ref> [13, 8, 29] </ref>. We outline some of our more recent design decisions in this section. In implementing a camera model [4], we have assumed a thin-lens camera model based on the fundamental rules of a thin-lens.
Reference: [9] <author> Paul S. Heckbert. </author> <title> What are the coordinates of a pixel? In Andrew Glassner, editor, Graphics Gems. </title> <publisher> Academic Press, </publisher> <address> New York, NY, </address> <year> 1990. </year>
Reference-contexts: X w (x k ; y k )L (i + 0:5 + x k ; j + 0:5 + y k ) (3) This assumes a coordinate system where a pixel (i; j) has unit area and is centered at (i + 0:5; j + 0:5) as suggested by Heckbert <ref> [9] </ref>.
Reference: [10] <author> David S. Immel, Michael F. Cohen, and Donald P. Greenberg. </author> <title> A radiosity method for non-diffuse environments. </title> <journal> Computer Graphics, </journal> <volume> 20(4) </volume> <pages> 133-142, </pages> <month> August </month> <year> 1986. </year> <booktitle> ACM Siggraph '86 Conference Proceedings. </booktitle>
Reference-contexts: It can be written down in terms of all directions visible to x (as in <ref> [10] </ref>): L (x; ) = incoming 0 (x; ; 0 )L (x; 0 ) cos d! 0 (5) or it can written down as an integral over all surfaces (as in [12]): L (x; ) = all x 0 dA 0 cos 0 Equations 5 and 6 suggest two different Monte <p> A more interesting case is imperfect mirrors. We use a Phong-like BRDF similar to the one used in <ref> [10] </ref>. The probability scattering function for a direction is: p (ff; fi) = 8 2 where ff is the angle relative to the ideal reflection direction, fi is an angle around the reflection direction, and N is a Phong-like exponent.
Reference: [11] <author> Frederik W. Jansen. </author> <title> Data structures for ray tracing. </title> <editor> In L. R. A. Kessener, F. J. Peters, and M. L. P. van Lierop, editors, </editor> <booktitle> Data Sturctures for Raster Graphics, </booktitle> <pages> pages 57-373. </pages> <publisher> Springer-Verlag, </publisher> <address> Netherlands, </address> <year> 1986. </year>
Reference-contexts: We organize our objects by maintaining a linked list, where each unbounded or infinite primitive (e.g. infinite plane, field of multiple instance grass) occupy one node in the list, and all bounded primitives reside in a BSP tree <ref> [11, 33] </ref>. The BSP tree also occupies one node in the list.
Reference: [12] <author> James T. Kajiya. </author> <title> The rendering equation. </title> <journal> Computer Graphics, </journal> <volume> 20(4) </volume> <pages> 143-150, </pages> <month> August </month> <year> 1986. </year> <booktitle> ACM Siggraph '86 Conference Proceedings. </booktitle> <pages> 15 </pages>
Reference-contexts: Distribution ray tracing has been extended and modified by many researchers, most notably by Kajiya who added true indirect illumination <ref> [12] </ref>. Distribution ray tracing has also been used as the viewing component of radiosity systems (e.g [37, 3]). In this paper we examine some of the central issues of distribution ray tracing that have been overlooked in the literature but are still of importance. <p> It can be written down in terms of all directions visible to x (as in [10]): L (x; ) = incoming 0 (x; ; 0 )L (x; 0 ) cos d! 0 (5) or it can written down as an integral over all surfaces (as in <ref> [12] </ref>): L (x; ) = all x 0 dA 0 cos 0 Equations 5 and 6 suggest two different Monte Carlo solutions. If Equation 5 is used, then a scattered ray is sent from x in a random direction. <p> In practice, this isn't practical because the geometry term g and the BRDF can be very difficult to characterize. Instead, many researchers <ref> [5, 12] </ref> sample uniformly within the solid angle subtended by the luminaire, which yields: p (x 0 ) = C 0 cos 0 Even this must only be approximated 1 for polygonal luminaires [38], but can be exactly applied for spherical luminaires [14, 38]. <p> For a diffuse surface, the explicit method is usually used for direct lighting, and the implicit method is used only for indirect lighting <ref> [12, 41, 16] </ref>. To decide which method to use we analyze the variance of each method in a simplified case: a diffuse luminaire S subtending solid angle ! with emitted radiance E, and no absorption 2 .
Reference: [13] <author> David Kirk and James Arvo. </author> <title> The ray tracing kernel. </title> <booktitle> In Proceedings of Ausgraph, </booktitle> <pages> pages 75-82, </pages> <month> July </month> <year> 1988. </year>
Reference-contexts: For especially bright spots in a scene, effects such as those used used by Nakamae et al.[21] have proven effective. 6 Implementational Issues Although usually talked about is if trivial, writing a full-blown ray tracer is difficult, and object-oriented design techniques have proven useful <ref> [13, 8, 29] </ref>. We outline some of our more recent design decisions in this section. In implementing a camera model [4], we have assumed a thin-lens camera model based on the fundamental rules of a thin-lens. <p> We have also allowed moving a camera with changing field-of-view. When doing this, it is important to generate the rays in the original object space, rather than transforming the objects into a canonical viewing space, because the latter would force the objects to be transformed for every ray. Both <ref> [13] </ref> and [29] suggest that objects have a simple hit routine and a query function to later determine material properties for the nearest object. <p> The BSP tree also occupies one node in the list. Our code has been designed in the spirit of <ref> [13] </ref>, where every object or object collection can be treated with the same interface, so the management of a list containing both simple primitives and a BSP tree is straightforward to manage. To support multiple instancing, we allow subdivision structures to be nested arbitrarily as in [13]. <p> in the spirit of <ref> [13] </ref>, where every object or object collection can be treated with the same interface, so the management of a list containing both simple primitives and a BSP tree is straightforward to manage. To support multiple instancing, we allow subdivision structures to be nested arbitrarily as in [13]. We have adopted a fairly simple adaptive sampling strategy in the spirit of [17, 24]. More effective strategies have been demonstrated for textures [36], but we have not pursued these because our system is targeted at environments where most complexity comes from geometry rather than texture.
Reference: [14] <author> David Kirk and James Arvo. </author> <title> Unbiased variance reduction for global illumination. </title> <booktitle> In Proceedings of the Second Eurographics Workshop on Rendering, </booktitle> <year> 1991. </year>
Reference-contexts: Instead, many researchers [5, 12] sample uniformly within the solid angle subtended by the luminaire, which yields: p (x 0 ) = C 0 cos 0 Even this must only be approximated 1 for polygonal luminaires [38], but can be exactly applied for spherical luminaires <ref> [14, 38] </ref>.
Reference: [15] <author> A. Kok and F. Jansen. </author> <title> Source selection for the direct lighting calculation in global illumination. </title> <booktitle> In Proceedings of the Second Eurographics Workshop on Rendering, </booktitle> <year> 1991. </year>
Reference-contexts: This will prevent reflections of shadows being noisier than directly viewed shadows. For scenes with many luminaires, it is important to optimize the generation and use of shadow rays. Instead of pruning methods, which have been shown to work on scenes with many luminaires <ref> [39, 15] </ref>, we use prob 13 abilistic methods. We send only one shadow ray to all luminaires [30].
Reference: [16] <author> Brigitta Lange. </author> <title> The simulation of radiant light transfer with stochastic ray-tracing. </title> <booktitle> In Proceedings of the Second Eurographics Workshop on Rendering, </booktitle> <year> 1991. </year>
Reference-contexts: Points can be chosen uniformly from [0; 1] 2 and then a warping transformation can be applied to distribute the points according to w <ref> [32, 28, 16] </ref>. <p> In practice, only the direct lighting is calculated, so the integration space becomes all luminaire surfaces. This can be split into one integral for each surface [4], or can be viewed as a single sampling space <ref> [16, 30] </ref>. To simplify this discussion, we will assume only one luminaire, so the sampling space is just a single surface. <p> For a diffuse surface, the explicit method is usually used for direct lighting, and the implicit method is used only for indirect lighting <ref> [12, 41, 16] </ref>. To decide which method to use we analyze the variance of each method in a simplified case: a diffuse luminaire S subtending solid angle ! with emitted radiance E, and no absorption 2 .
Reference: [17] <author> Mark E. Lee, Richard A. Redner, and Samuel P. Uselton. </author> <title> Statistically optimized sampling for distributed ray tracing. </title> <journal> Computer Graphics, </journal> <volume> 19(3) </volume> <pages> 61-68, </pages> <month> July </month> <year> 1985. </year> <booktitle> ACM Siggraph '85 Conference Proceedings. </booktitle>
Reference-contexts: To support multiple instancing, we allow subdivision structures to be nested arbitrarily as in [13]. We have adopted a fairly simple adaptive sampling strategy in the spirit of <ref> [17, 24] </ref>. More effective strategies have been demonstrated for textures [36], but we have not pursued these because our system is targeted at environments where most complexity comes from geometry rather than texture.
Reference: [18] <author> Gary W. Meyer. </author> <title> Wavelength selection for synthetic image generation. Computer Vision, </title> <journal> Graphics, and Image Processing, </journal> <volume> 41 </volume> <pages> 57-79, </pages> <year> 1988. </year>
Reference-contexts: We originally implemented the four unevenly spaced spectral samples suggested by Meyer <ref> [18] </ref>, but we found that metallic colors generated using the Fresnel Equations lacked richness with only four samples. In all other ways, the four samples were satisfactory. We have had difficulty finding spectral reflectance data for many materials.
Reference: [19] <author> Don P. Mitchell. </author> <title> Spectrally optimal sampling for distribution ray tracing. </title> <journal> Computer Graphics, </journal> <volume> 25(4), </volume> <month> July </month> <year> 1991. </year> <note> To appear in ACM Siggraph '88 Conference Proceedings. </note>
Reference-contexts: , where each ~ i is distributed according to a probability density function p: I = x2S N X f (~ i ) (1) Although distribution ray tracing is usually phrased as an application of Equation 1, many researchers replace the ~ i with more evenly distributed (quasi-random) samples (e.g. <ref> [4, 19] </ref>). This approach can be shown to be sound by analyzing decreasing error in terms of some discrepancy measure [44, 43, 19, 28] rather than in terms of variance. <p> This approach can be shown to be sound by analyzing decreasing error in terms of some discrepancy measure <ref> [44, 43, 19, 28] </ref> rather than in terms of variance. However, it is often convenient to develop a sampling strategy using variance analysis on random samples, and to instead use non-random, but equidistributed samples in an implementation. <p> This can be accomplished by using the RGB primaries associated with the RGB input as basis functions. For sample point selection, we choose N sampling points from [0; 1] N in the spirit of <ref> [19] </ref>, and then use appropriate warping transforms for our sample points to be distributed properly (e.g. points on the disk of the camera lens, reflected ray directions). Whether better distributions could be obtained by sampling directly (without warping) in the integration domain is an open question.
Reference: [20] <author> Earl N. Mitchell. </author> <title> Photographic Science. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, N.Y., </address> <year> 1984. </year>
Reference-contexts: In implementing a camera model [4], we have assumed a thin-lens camera model based on the fundamental rules of a thin-lens. We have not modeled the cos 4 falloff in intensity at the film-plane, because real cameras include corrections for this effect <ref> [20] </ref>. We have also allowed moving a camera with changing field-of-view. When doing this, it is important to generate the rays in the original object space, rather than transforming the objects into a canonical viewing space, because the latter would force the objects to be transformed for every ray.
Reference: [21] <author> Eihachiro Nakamae, Kazufumi Kaneda, Takashi Okamoto, and To-moyuki Nishita. </author> <title> A lighting model aiming at drive simulators. </title> <journal> Computer Graphics, </journal> <volume> 24(3) </volume> <pages> 395-404, </pages> <month> August </month> <year> 1990. </year> <booktitle> ACM Siggraph '90 Conference Proceedings. </booktitle>
Reference: [22] <author> Edward D. Palik. </author> <title> Handbook of Optical Constants of Solids. </title> <publisher> Academic Press, </publisher> <address> New York, N.Y., </address> <year> 1985. </year>
Reference-contexts: In all other ways, the four samples were satisfactory. We have had difficulty finding spectral reflectance data for many materials. Two of our most valuable sources have been <ref> [22] </ref> for conductor parameters, and [2] for the reflectance data for common artist pigments. We still support the input of RGB data for texture maps and diffuse reflectances, and use the Glassner's method [6] to choose a plausible spectrum associated with the RGB triple.
Reference: [23] <author> Ken Perlin and Eric M. Hoffert. </author> <title> Hypertexture. </title> <journal> Computer Graphics, </journal> <volume> 23(3) </volume> <pages> 253-262, </pages> <month> July </month> <year> 1989. </year> <booktitle> ACM Siggraph '89 Conference Proceedings. </booktitle> <pages> 16 </pages>
Reference-contexts: We have not implemented a more physically based model for BRDF functions, such as the one recently presented in [7], because we have not found an analytical attack on the mathematics of scattered ray distribution. We also allow solid textures <ref> [23] </ref> to modify material parameters such as the amount of polish on a surface. We have tried to allow effects such as those in [35] while still disallowing physically invalid materials.
Reference: [24] <author> Werner Purgathofer. </author> <title> A statistical method for adaptive stochastic sam-pling. </title> <journal> Computers & Graphics, </journal> <volume> 11(2) </volume> <pages> 157-162, </pages> <year> 1987. </year>
Reference-contexts: To support multiple instancing, we allow subdivision structures to be nested arbitrarily as in [13]. We have adopted a fairly simple adaptive sampling strategy in the spirit of <ref> [17, 24] </ref>. More effective strategies have been demonstrated for textures [36], but we have not pursued these because our system is targeted at environments where most complexity comes from geometry rather than texture.
Reference: [25] <author> John Salmon and Jeff Goldsmith. </author> <title> A hypercube ray-tracer. </title> <booktitle> In The 3rd Conference on Hypercube Concurrent Computers and Applications Vol. II, </booktitle> <pages> pages 1194-1206, </pages> <address> 1988. </address> <publisher> ACM Press. </publisher>
Reference-contexts: Second, distribution ray tracing is a natural way to render outdoor scenes, where the effects of single and double reflection dominate color, and where the geometry is extremely complex. Third, it is possible to run ray tracing on large distributed memory multiprocessors <ref> [25] </ref>. Although the implementation of a simple distribution ray tracer is usually implied to be straightforward, there are several important implementational 1 issues that have not been discussed in the literature, and the relationship be-tween distribution ray tracing code and distribution ray tracing theory has never been completely stated.
Reference: [26] <author> Christophe Schlick. </author> <title> An adaptive sampling technique for multidimensional integration by ray-tracing. </title> <booktitle> In Proceedings of the Second Euro-graphics Workshop on Rendering, </booktitle> <year> 1991. </year>
Reference-contexts: More effective strategies have been demonstrated for textures [36], but we have not pursued these because our system is targeted at environments where most complexity comes from geometry rather than texture. Schlick has implemented an effective antialiasing scheme for distribution ray tracing <ref> [26] </ref>, but his initial sampling phase could miss detail in a highly complex environment, so we have not implemented his method. For a material model, we allow five types of surfaces [29], luminaires, lam-bertian, conductors, dielectrics, and polished. The last three allow a Phong style exponent to control specularity.
Reference: [27] <author> Peter Shirley. </author> <title> Physically Based Lighting Calculations for Computer Graphics. </title> <type> PhD thesis, </type> <institution> University of Illinois at Urbana-Champaign, </institution> <month> November </month> <year> 1990. </year>
Reference-contexts: Points can be chosen uniformly from [0; 1] 2 and then a warping transformation can be applied to distribute the points according to w [32, 28, 16]. For several practical and theoretical reasons <ref> [27] </ref> we have chosen the width 2 weighting function that is non-zero on (x; y) 2 [1; 1] 2 : w (x; y) = (1 jxj) (1 jyj) (4) We generate random points with density equal to w by applying a transformation to a uniform random pair (r 1 ; r
Reference: [28] <author> Peter Shirley. </author> <title> Discrepancy as a quality measure for sampling distributions. </title> <booktitle> In Eurographics '91, </booktitle> <pages> pages 183-193, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: This approach can be shown to be sound by analyzing decreasing error in terms of some discrepancy measure <ref> [44, 43, 19, 28] </ref> rather than in terms of variance. However, it is often convenient to develop a sampling strategy using variance analysis on random samples, and to instead use non-random, but equidistributed samples in an implementation. <p> Points can be chosen uniformly from [0; 1] 2 and then a warping transformation can be applied to distribute the points according to w <ref> [32, 28, 16] </ref>.
Reference: [29] <author> Peter Shirley, Kelvin Sung, and William Brown. </author> <title> A ray tracing framework for global illumination. </title> <booktitle> In Graphics Interface '91, </booktitle> <pages> pages 117-128, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: For especially bright spots in a scene, effects such as those used used by Nakamae et al.[21] have proven effective. 6 Implementational Issues Although usually talked about is if trivial, writing a full-blown ray tracer is difficult, and object-oriented design techniques have proven useful <ref> [13, 8, 29] </ref>. We outline some of our more recent design decisions in this section. In implementing a camera model [4], we have assumed a thin-lens camera model based on the fundamental rules of a thin-lens. <p> When doing this, it is important to generate the rays in the original object space, rather than transforming the objects into a canonical viewing space, because the latter would force the objects to be transformed for every ray. Both [13] and <ref> [29] </ref> suggest that objects have a simple hit routine and a query function to later determine material properties for the nearest object. We have found that this is an unnatural approach if procedural objects are used, because the objects will have to be regenerated to get orientation and material information. <p> Schlick has implemented an effective antialiasing scheme for distribution ray tracing [26], but his initial sampling phase could miss detail in a highly complex environment, so we have not implemented his method. For a material model, we allow five types of surfaces <ref> [29] </ref>, luminaires, lam-bertian, conductors, dielectrics, and polished. The last three allow a Phong style exponent to control specularity. The chief difference between our model and more traditional ones is the inclusion of Fresnel Equations for the reflectivity of conductors, dielectrics, and polished materials.
Reference: [30] <author> Peter Shirley and Changyaw Wang. </author> <title> Direct lighting by monte carlo integration. </title> <booktitle> In Proceedings of the Second Eurographics Workshop on Rendering, </booktitle> <year> 1991. </year>
Reference-contexts: In practice, only the direct lighting is calculated, so the integration space becomes all luminaire surfaces. This can be split into one integral for each surface [4], or can be viewed as a single sampling space <ref> [16, 30] </ref>. To simplify this discussion, we will assume only one luminaire, so the sampling space is just a single surface. <p> For scenes with many luminaires, it is important to optimize the generation and use of shadow rays. Instead of pruning methods, which have been shown to work on scenes with many luminaires [39, 15], we use prob 13 abilistic methods. We send only one shadow ray to all luminaires <ref> [30] </ref>. For extremely complex scenes with thousands of luminaires, we construct a spatial subdivision structure with each spatial cell containing a list of important luminaires [31]. 7 Conclusion In this paper we have discussed some theoretical and practical issues involving distribution ray tracing.
Reference: [31] <author> Peter Shirley and Changyaw Wang. </author> <title> Luminaire sampling in distribution ray tracing. </title> <type> Technical Report 340, </type> <institution> Department of Computer Science,Indiana University, </institution> <month> January </month> <year> 1992. </year>
Reference-contexts: We send only one shadow ray to all luminaires [30]. For extremely complex scenes with thousands of luminaires, we construct a spatial subdivision structure with each spatial cell containing a list of important luminaires <ref> [31] </ref>. 7 Conclusion In this paper we have discussed some theoretical and practical issues involving distribution ray tracing.
Reference: [32] <author> Y. A. Shreider. </author> <title> The Monte Carlo Method. </title> <publisher> Pergamon Press, </publisher> <address> New York, N.Y., </address> <year> 1966. </year>
Reference-contexts: Points can be chosen uniformly from [0; 1] 2 and then a warping transformation can be applied to distribute the points according to w <ref> [32, 28, 16] </ref>.
Reference: [33] <author> Kelvin Sung. </author> <title> Ray tracing with the bsp tree. </title> <editor> In David Kirk, editor, </editor> <title> Graphics Gems 3. </title> <publisher> Academic Press, </publisher> <address> New York, NY, </address> <year> 1992. </year> <note> (to appear). </note>
Reference-contexts: We organize our objects by maintaining a linked list, where each unbounded or infinite primitive (e.g. infinite plane, field of multiple instance grass) occupy one node in the list, and all bounded primitives reside in a BSP tree <ref> [11, 33] </ref>. The BSP tree also occupies one node in the list.
Reference: [34] <author> Jack Tumblin and Holly Rushmeier. </author> <title> Tone reproduction for realistic computer generated images. </title> <type> Technical Report GIT-GVU-91-13, </type> <institution> Graphics, Visualization, and Usuability Center, Georgia Institute of Technology, </institution> <year> 1991. </year>
Reference-contexts: One way around this problem is to use a floating point output format such as that used in Ward's Radiance program [40], and to convert to a displayed image using a perceptually based spatially varying map such as the one used by Tumblin and Rushmeier <ref> [34] </ref>. This will map the same radiance values to possibly different pixel colors on different parts of the image, and will thus be much more complicated than the spatially constant map, but will solve the problem of images with great ranges in radiance.
Reference: [35] <author> Steve Upstill. </author> <title> The Renderman Companion. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1990. </year>
Reference-contexts: We also allow solid textures [23] to modify material parameters such as the amount of polish on a surface. We have tried to allow effects such as those in <ref> [35] </ref> while still disallowing physically invalid materials.
Reference: [36] <author> Theo van Walsum, Peter R. van Nieuwenhuizen, and Frederik Jansen. </author> <title> Refinement criteria for adaptive stochastic ray tracing of textures. </title> <booktitle> In Eurographics '91, </booktitle> <pages> pages 155-166, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: To support multiple instancing, we allow subdivision structures to be nested arbitrarily as in [13]. We have adopted a fairly simple adaptive sampling strategy in the spirit of [17, 24]. More effective strategies have been demonstrated for textures <ref> [36] </ref>, but we have not pursued these because our system is targeted at environments where most complexity comes from geometry rather than texture.
Reference: [37] <author> John R. Wallace, Michael F. Cohen, and Donald P. Greenberg. </author> <title> A two-pass solution to the rendering equation: a synthesis of ray tracing and radiosity methods. </title> <journal> Computer Graphics, </journal> <volume> 21(4) </volume> <pages> 311-320, </pages> <month> July </month> <year> 1987. </year> <booktitle> ACM Siggraph '87 Conference Proceedings. </booktitle>
Reference-contexts: Distribution ray tracing has been extended and modified by many researchers, most notably by Kajiya who added true indirect illumination [12]. Distribution ray tracing has also been used as the viewing component of radiosity systems (e.g <ref> [37, 3] </ref>). In this paper we examine some of the central issues of distribution ray tracing that have been overlooked in the literature but are still of importance. Our interest in distribution ray tracing arises for three basic reasons.
Reference: [38] <author> Changyaw Wang. </author> <title> Physically correct direct lighting for distribution ray tracing. </title> <editor> In David Kirk, editor, </editor> <title> Graphics Gems 3. </title> <publisher> Academic Press, </publisher> <address> New York, NY, </address> <year> 1992. </year> <note> (to appear). </note>
Reference-contexts: Instead, many researchers [5, 12] sample uniformly within the solid angle subtended by the luminaire, which yields: p (x 0 ) = C 0 cos 0 Even this must only be approximated 1 for polygonal luminaires <ref> [38] </ref>, but can be exactly applied for spherical luminaires [14, 38]. <p> Instead, many researchers [5, 12] sample uniformly within the solid angle subtended by the luminaire, which yields: p (x 0 ) = C 0 cos 0 Even this must only be approximated 1 for polygonal luminaires [38], but can be exactly applied for spherical luminaires <ref> [14, 38] </ref>.
Reference: [39] <author> Greg Ward. </author> <title> Adaptive shadow testing for ray tracing. </title> <booktitle> In Proceedings of the Second Eurographics Workshop on Rendering, </booktitle> <year> 1991. </year>
Reference-contexts: This will prevent reflections of shadows being noisier than directly viewed shadows. For scenes with many luminaires, it is important to optimize the generation and use of shadow rays. Instead of pruning methods, which have been shown to work on scenes with many luminaires <ref> [39, 15] </ref>, we use prob 13 abilistic methods. We send only one shadow ray to all luminaires [30].
Reference: [40] <author> Greg Ward. </author> <title> Real pixels. </title> <editor> In James Arvo, editor, </editor> <title> Graphics Gems 2. </title> <publisher> Academic Press, </publisher> <address> New York, NY, </address> <year> 1991. </year>
Reference-contexts: This problem stems from the finite dynamic range of computer graphics 10 display medium. This problem is very serious in any system that has visible luminaires. One way around this problem is to use a floating point output format such as that used in Ward's Radiance program <ref> [40] </ref>, and to convert to a displayed image using a perceptually based spatially varying map such as the one used by Tumblin and Rushmeier [34].
Reference: [41] <author> Gregory J. Ward, Francis M. Rubinstein, and Robert D. </author> <title> Clear. A ray tracing solution for diffuse interreflection. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 85-92, </pages> <month> August </month> <year> 1988. </year> <booktitle> ACM Siggraph '88 Conference Proceedings. </booktitle>
Reference-contexts: For a diffuse surface, the explicit method is usually used for direct lighting, and the implicit method is used only for indirect lighting <ref> [12, 41, 16] </ref>. To decide which method to use we analyze the variance of each method in a simplified case: a diffuse luminaire S subtending solid angle ! with emitted radiance E, and no absorption 2 .
Reference: [42] <author> Turner Whitted. </author> <title> An improved illumination model for shaded display. </title> <journal> Communications of the ACM, </journal> <volume> 23(6) </volume> <pages> 343-349, </pages> <month> June </month> <year> 1980. </year>
Reference-contexts: For a dielectric, ~ can be chosen randomly between reflected and transmitted directions [1], or it can be split into two integrals as is done in a Whitted-style ray tracer <ref> [42] </ref>. For a diffuse surface, ~ will be follow cosine distribution: p ( 0 ) = cos =. When Equation 6 is used, the sampling takes place over all surfaces in the environment. In practice, only the direct lighting is calculated, so the integration space becomes all luminaire surfaces.
Reference: [43] <author> H. Wozniakowski. </author> <title> Average case complexity of multivariate integration. </title> <journal> Bulliten (New Series) of the American Mathematical Society, </journal> <volume> 24(1) </volume> <pages> 185-193, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: This approach can be shown to be sound by analyzing decreasing error in terms of some discrepancy measure <ref> [44, 43, 19, 28] </ref> rather than in terms of variance. However, it is often convenient to develop a sampling strategy using variance analysis on random samples, and to instead use non-random, but equidistributed samples in an implementation.
Reference: [44] <author> S. K. Zeremba. </author> <title> The mathematical basis of monte carlo and quasi-monte carlo methods. </title> <journal> SIAM Review, </journal> <volume> 10(3) </volume> <pages> 303-314, </pages> <month> July </month> <year> 1968. </year> <month> 18 </month>
Reference-contexts: This approach can be shown to be sound by analyzing decreasing error in terms of some discrepancy measure <ref> [44, 43, 19, 28] </ref> rather than in terms of variance. However, it is often convenient to develop a sampling strategy using variance analysis on random samples, and to instead use non-random, but equidistributed samples in an implementation.
References-found: 44

