URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1997/1997-15.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Computing a Single Cell in the Overlay of two Simple Polygons note combines the lazy
Author: Mark de Berg a Olivier Devillers b; Katrin Dobrindt a; Otfried Schwarzkopf a; 
Note: This  
Address: P.O. Box 80.089, 3508 TB Utrecht, the Netherlands. b INRIA, B.P. 93, 06902 Sophia-Antipolis Cedex, France.  
Affiliation: a Dept. of Computer Science, Utrecht University,  
Abstract-found: 0
Intro-found: 1
Reference: [BDSTY92] <author> J.-D. Boissonnat, O. Devillers, R. Schott, M. Teillaud, and M. Yvinec. </author> <title> Applications of random sampling to on-line algorithms in computational geometry. </title> <journal> Discrete Comput. Geom., </journal> <volume> 8 </volume> <pages> 51-71, </pages> <year> 1992. </year>
Reference-contexts: Theorem 1 <ref> [BDSTY92, Proposition 3.4] </ref> An arrangement of n line segments can be computed in O (n log n + A) expected time, where A is the complexity of the arrangement. 3 Lazy randomized incremental algorithms While the entire arrangement induced by a set of n line segments might have quadratic combinatorial complexity,
Reference: [CCT92] <author> K. L. Clarkson, R. Cole, and R. E. Tarjan. </author> <title> Randomized parallel algorithms for trapezoidal diagrams. </title> <journal> Internat. J. Comput. Geom. Appl., </journal> <volume> 2(2) </volume> <pages> 117-133, </pages> <year> 1992. </year>
Reference: [CS89] <author> K. L. Clarkson and P. W. Shor. </author> <title> Applications of random sampling in computational geometry, II. </title> <journal> Discrete Comput. Geom., </journal> <volume> 4 </volume> <pages> 387-421, </pages> <year> 1989. </year>
Reference: [BDS94] <author> M. de Berg, K. Dobrindt, and O. Schwarzkopf. </author> <title> On lazy randomized incremental construction. </title> <booktitle> In Proc. 26th Annu. ACM Sympos. Theory Comput., </booktitle> <pages> pages 105-114, </pages> <year> 1994. </year>
Reference-contexts: If we are only interested in a single face of the arrangement, marked by a given point|the origin, say|the lazy cleaning scheme of de Berg et al. <ref> [BDS94] </ref> can be used, resulting in an O (nff (n) log n) algorithm. 4 If, on the other hand, the line ? This research was supported by the Netherlands' Organization for Scientific Research (NWO) and was partially supported by the ESPRIT III Basic Research Action 6546 (PROMotion). 1 Part of this <p> To be more precise, we compute the trapezoidation of this face. However, single faces in arrangements do not fit into the usual framework of randomized incremental construction, because it cannot be decided locally whether a trapezoid belongs to the current structure <ref> [BDS94] </ref>. More precisely, a newly inserted segment may cut off parts of the current face by separating them from the origin. It is difficult to determine the trapezoids that are 3 cut off, as it depends on the complete configuration of the segments. <p> The expected time to compute a single face in an arrangement of n segments is therefore O (nff (n) log n). Theorem 2 <ref> [BDS94, Theorem 4] </ref> Given a set of n line segments in the plane, the face in the arrangement containing the origin can be computed in O (nff (n) log n) using O (nff (n)) storage. 4 Accelerated randomized incremental algorithms If the input segments are somehow connected|for instance, if they form <p> By Theorem 3 (v), locating the rth segment costs O (rff (r) log (r=last log)). Summing over all n segments we get O (nff (n) log ? n). Lines 6 and 8. As in <ref> [BDS94, Section 5.2] </ref>, the update of the history graph in line 6 and the clean-up in line 8 can be done in O (nff (n)) time in total. Line 11. One iteration of line 11 takes O (rff (r)) time ([BDS94, Section 5.2]). Line 12. <p> We have A = O (nff (r)), and m = O (n + rff (r)), since the complexity of C r is at most O (rff (r)) <ref> [BDS94, Theorem 5] </ref>. It follows that one iteration of line 12 takes O (rff (r) + n log ? n) time. p Line 13. The conflict graph can be computed in time proportional to its size. The expected size is O (nff (r)) [BDS94, Theorem 5]. Lines 9-13. <p> r is at most O (rff (r)) <ref> [BDS94, Theorem 5] </ref>. It follows that one iteration of line 12 takes O (rff (r) + n log ? n) time. p Line 13. The conflict graph can be computed in time proportional to its size. The expected size is O (nff (r)) [BDS94, Theorem 5]. Lines 9-13.
Reference: [Dev92] <author> O. Devillers. </author> <title> Randomization yields simple O(n log fl n) algorithms for difficult (n) problems. </title> <journal> Internat. J. Comput. Geom. Appl., </journal> <volume> 2(1) </volume> <pages> 97-111, </pages> <year> 1992. </year>
Reference-contexts: We now summarize results on accelerated randomized incremental construc 4 Origin P P " Q cell containing the origin Fig. 2. Example of the overlay of two simple polygons tion for line segments, specializing <ref> [Dev92, Theorem 1] </ref> for the case of A = O (nff (n)).
Reference: [GKS92] <author> L. J. Guibas, D. E. Knuth, and M. Sharir. </author> <title> Randomized incremental construction of Delaunay and Voronoi diagrams. </title> <journal> Algorithmica, </journal> <volume> 7 </volume> <pages> 381-413, </pages> <year> 1992. </year>
Reference: [GSS89] <author> L. J. Guibas, M. Sharir, and S. Sifrony. </author> <title> On the general motion planning problem with two degrees of freedom. </title> <journal> Discrete Comput. Geom., </journal> <volume> 4 </volume> <pages> 491-521, </pages> <year> 1989. </year>
Reference-contexts: (n log n + A) expected time, where A is the complexity of the arrangement. 3 Lazy randomized incremental algorithms While the entire arrangement induced by a set of n line segments might have quadratic combinatorial complexity, the combinatorial complexity of any of its faces is only O (nff (n)) <ref> [GSS89] </ref>. In the following we are interested in computing a single face in the arrangement of line segments, say the face containing the origin, instead of the entire arrangement. To be more precise, we compute the trapezoidation of this face.
Reference: [Mul94] <author> K. Mulmuley. </author> <title> Computational Geometry: An Introduction Through Randomized Algorithms. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1994. </year>
Reference: [Sei91] <author> R. Seidel. </author> <title> A simple and fast incremental randomized algorithm for computing trapezoidal decompositions and for triangulating polygons. </title> <journal> Comput. Geom. Theory Appl., </journal> <volume> 1 </volume> <pages> 51-64, </pages> <year> 1991. </year> <month> 8 </month>
References-found: 9

