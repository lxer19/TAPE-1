URL: http://www.cs.berkeley.edu/~tecklee/atobj/atobj.ps
Refering-URL: http://www.cs.berkeley.edu/~tecklee/atobj.html
Root-URL: 
Email: &lt;tecklee@cs.berkeley.edu&gt;  
Title: A Framework for Disseminating Animations using IP Multicast CS 268 Spring 97 Class Project  
Author: Teck-Lee Tung 
Abstract: We describe the design and implementation of a flexible framework that enable dissemination of animations over IP Multicast in a scalable manner. An animation stream is being represented as a sequence of animation events. Each animation event corresponds to an animation object which is active within a certain time period of the animation time. Active objects are animation specific code segments that performs simple computations and calls simple drawing primitives to draw themselves. Active object operations are required to be idempotent so that important optimizations can be made. The animation is being distributed over SRM. The framework make uses of the application level semantics of SRM to make specific optimizations in order to achieve scalability. To handle new animation types, only the code for the animation objects need to be added. The framework handles all other aspects of the animation transparently. We also describe the implementation of the framework and a prototype Network Animation tool built using the framework. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> BRIDGES, J. </author> <title> Grasp file format. </title> <booktitle> Microtex Industries 7 </booktitle> . 
Reference-contexts: The contrasts with the active objects scheme where we could skip over a whole section of code when repositioning. The similarity between both schemes is that both schemes uses code fragments to represent the command stream. The GRASP animation format <ref> [1] </ref> also uses simple drawing primitives and commands to represent a command stream. Example commands in the animation language include looping constructs, user interface specifications, etc. There is no indication that there is an attempt to make this format streamable.
Reference: [2] <author> CHIUEH, T.-C. </author> <title> Distributed systems support for net-worked games. </title> <booktitle> In International Symposium on Technologies and Systems for Voice, Video, and Data Communications (Philadelphia PA, </booktitle> <month> October </month> <year> 1995). </year> <type> TR-19, </type> <institution> Experimental Computer Systems Laboratory, State University of New York at Stony Brook. </institution>
Reference-contexts: The startup latency of new animation receivers would also be approximately in the same time scale, assuming that the directives do not get lost repeatedly. This approach is motivated by the dead reckoning technique used in <ref> [2] </ref> in the context of distributed network games. 3 these are application level control messages, not SRM control mes sages 4 3.3.3 Discovering active events After discovering the rendering time, the receivers need to discover the active events corresponding to the rendering time.
Reference: [3] <author> CLARK, D. D., AND TENNENHOUSE, D. L. </author> <title> Architectural considerations for a new generation of protocols. </title> <booktitle> In Proceedings of SIGCOMM '90 (Philadelphia, </booktitle> <address> PA, </address> <month> Sept. </month> <year> 1990), </year> <note> ACM. </note>
Reference-contexts: Uses of such schemes would further enhance the performance of our scheme. Another feature of SRM is the use of Application Level Framing (ALF, <ref> [3] </ref>). Packets are being handed to the application as soon as they arrived, regardless of the order they were being sent. The responsibility of requesting for retransmissions in the event that some needed data is missing is left entirely up to the application.
Reference: [4] <author> DEERING, S. E. </author> <title> Multicast routing in a datagram internet-work. </title> <type> PhD thesis, </type> <institution> Stanford University, Palo Alto, Califor-nia, </institution> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: 1 Introduction The Internet has enabled collaboration and information sharing among geographically distant users. Also, the IP multicast backbone (MBone) <ref> [4] </ref> has enabled collaboration among groups of people. While many collaboration tools have been developed for conferencing over MBone, there are no tools that disseminates animations. Animations are very powerful tools for visualizing sequences of events.
Reference: [5] <editor> Animator pro file formats. </editor> <publisher> AutoDesk Inc., </publisher> <pages> 8 </pages> . 
Reference-contexts: A lot of existing formats are designed for playback on a single machine. There are usually dependencies between data types that makes streaming difficult. For example the FLC format <ref> [5] </ref> by Autodesk stores animations in frames of images, with most frames (except the first) stored as a difference to the previous frame. Another example is the use of custom Java [8] applets to render animations.
Reference: [6] <author> FLOYD, S., JACOBSON, V., MCCANNE, S., LIU, C.-G., AND ZHANG, L. </author> <title> A reliable multicast framework for lightweight sessions and application level framing. </title> <booktitle> In Proceedings of SIGCOMM '95 (Boston, </booktitle> <address> MA, </address> <month> Sept. </month> <year> 1995), </year> <note> ACM. </note>
Reference-contexts: There are basically two choices, namely Real Time Protocol (RTP, [19]), or Scalable, Reliable Multicast (SRM, <ref> [6] </ref>). Both protocol gives us the application level framing that we need to develop an efficient framework for supporting animation events and objects. We chose SRM because SRM's application level reliability semantics can be used to develop an efficient framework. <p> Together with suppression of similar 2 SRM sends session messages between end hosts to estimate the delay, the initial random delay is called the back-off period requests and replies, the aggregate bandwidth consumed by requests and replies is kept small. The SRM proposal <ref> [6] </ref> also describes local recovery schemes that group receivers with similar loss characteristics, and restrict mul-ticasting of requests and replies to such groups. Uses of such schemes would further enhance the performance of our scheme. Another feature of SRM is the use of Application Level Framing (ALF, [3]).
Reference: [7] <author> GIANOUTSOS, S. </author> <title> Animation file formats and tools. Computer Graphics (0657.504A) class project, </title> <address> http://www.cs.waikato.ac.nz/ gianouts/courses/504A/animation/title page.html, </address> <month> June 96. </month>
Reference-contexts: The scheme should be able to support the develop ment of such an archiving tool. 3 Design of the Framework 3.1 Why not use existing formats There are many existing formats <ref> [7] </ref> that allows us to specify animations. A straw man approach would be to make use of or to extend these formats, and develop applications that uses them.
Reference: [8] <author> GOSLING, J., AND MCGILTON, H. </author> <title> The java language environment a white paper. </title> <type> Tech. rep., </type> <institution> Sun Microsystems, Inc., </institution> <month> May 96. 9 </month> . 
Reference-contexts: There are usually dependencies between data types that makes streaming difficult. For example the FLC format [5] by Autodesk stores animations in frames of images, with most frames (except the first) stored as a difference to the previous frame. Another example is the use of custom Java <ref> [8] </ref> applets to render animations. In this case it is hard to separate out the code components so that they are independent and can be executed before the whole program in being downloaded. 3.1.2 Not the right representation Some animation formats does not display certain image types well.
Reference: [9] <author> HERLOCKER, J. L., AND KONSTAN, J. A. </author> <title> Commands as media: Design and implementation of a command stream. </title> <note> 7 http://cica-gopher.cica.indiana.edu/graphics/movie specs/grasp.format.txt 8 ftp://avalon.viewpoint.com/pub/format specs/- Autodesk fli and flc format.txt 9 http://java.sun.com/docs/language environment/ In Proceedings of ACM Multimedia 95 (San Francisco, CA, Nov 95). http://www.cs.umn.edu/research/GIMME. </note>
Reference-contexts: However, there has been a number of work on sending presentation on a point to point link using unicast. One example of such work is <ref> [9] </ref>, which looked at sending a presentation as a stream of commands. Each command had five fragments. The first fragment is the logical time. The primary code fragment is executed during a normal execution, the inverse code fragment is executed when the execution need to go backwards in logical time.
Reference: [10] <author> JACOBSON, V. </author> <title> Multimedia conferencing on the internet. </title> <booktitle> In SIGCOMM. IEEE, </booktitle> <month> Aug </month> <year> 1994. </year> <note> Tutorial 4. </note>
Reference-contexts: encounters an event with start time larger than the target (interpolated) rendering time 5 number of losses and estimate the variance of delay, then use these values to calculate an optimal play-out point in a manner similar to the way adaptive audio and video applications calculate the optimal play-out point <ref> [10] </ref>. We leave the development of such an adaptive algorithm as future work. 4 Implementation Using our design, we implemented a first-cut version of a flexible framework for disseminating animations. 4.1 Architecture The framework is implemented as part of the MASH [13] shell.
Reference: [11] <author> LE GALL, D. </author> <title> MPEG: A video compression standard for multimedia applications. </title> <journal> Communications of the ACM 34, </journal> <month> 4 (Apr. </month> <year> 1991), </year> <month> 4758. </month>
Reference-contexts: In this case it is hard to separate out the code components so that they are independent and can be executed before the whole program in being downloaded. 3.1.2 Not the right representation Some animation formats does not display certain image types well. For example, the MPEG standard <ref> [11] </ref> uses compression techniques that does not display textual information well. Another common problem with conventional animation standards, particularly with animation formats 2 based on video, is that they typically encode the contin-uous animation stream into frames at discrete intervals.
Reference: [12] <author> MCCANNE, S. </author> <title> UCB/LBNL Network Animator. </title> <institution> Univeristy of California, Berkeley and Lawrence Berkeley Laboratory. </institution> <note> Software on-line 10 </note> . 
Reference: [13] <author> MCCANNE, S., BREWER, E., KATZ, R., ROWE, L., AMIR, E., CHAWATHE, Y., COOPERSMITH, A., MAYER-PATEL, K., RAMAN, S., SCHUETT, A., SIMPSONA, D., SWAN, A., TUNG, T.-L., WU, D., AND SMITH, B. </author> <title> Toward a common infrastructure for multimedia-networking middleware. </title> <booktitle> In 7th Intl. Workshop on Network and Operating Systems Support for Digital Audio and Video (97). </booktitle>
Reference-contexts: We leave the development of such an adaptive algorithm as future work. 4 Implementation Using our design, we implemented a first-cut version of a flexible framework for disseminating animations. 4.1 Architecture The framework is implemented as part of the MASH <ref> [13] </ref> shell. The code is made up C++ modules and Tcl/Tk [15] and OTcl [22] scripts. Tcl/Tk provides us with convenient mechanisms for composing the user interface elements. OTcl implements an object oriented language on top of Tcl. C++ code is used to implement performance critical components of the system.
Reference: [14] <author> MCCANNE, S., AND JACOBSON, V. </author> <title> vic: a flexible framework for packet video. </title> <booktitle> In Proceedings of ACM Multimedia '95 (Nov. 1995), ACM. </booktitle>
Reference-contexts: There are also mechanisms to create conglomerate C++/OTcl objects that can be accessed both using scripts as well as using C++. Together, the MASH shell provides an efficient environment for rapid prototyp-ing. The MASH shell consists of the other collaboration tools such as the video conferencing tool (vic, <ref> [14] </ref>), visual audio tool (vat), a distributed whiteboard application, MediaBoard [17], as well as archiving and indexing tools for Internet conferencing. By implementing the animation framework in the MASH shell, we will be able to interface with the rest of the collaboration tools in the future.
Reference: [15] <author> OUSTERHOUT, J. K. </author> <title> Tcl and the Tk Toolkit. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: The code is made up C++ modules and Tcl/Tk <ref> [15] </ref> and OTcl [22] scripts. Tcl/Tk provides us with convenient mechanisms for composing the user interface elements. OTcl implements an object oriented language on top of Tcl. C++ code is used to implement performance critical components of the system.
Reference: [16] <author> RAMAN, S. </author> <title> Generalized data naming for reliable multicast. CS 268 Computer Networks Term Project Report, </title> <institution> University of California, Berkeley, </institution> <year> 1997. </year>
Reference-contexts: The other area that we plan to look into is more effective use of the SRM generic naming scheme that Raman is developing <ref> [16] </ref>. We would like to explore using the generic naming scheme to come up with more effective ways of specifying the dependencies between rendering times and the animation events. Further, we would like to develop a scheme for dynamic distribution of active object code on the fly.
Reference: [17] <author> RAMAN, S., AND TUNG, T.-L. </author> <title> Mediaboard using the scalable, reliable multicast toolkit. CS 294-3 Multimedia Systems and Applications and CS 262 Advanced Topics in Operating Systems Term Project Report, </title> <year> 1996. </year>
Reference-contexts: Together, the MASH shell provides an efficient environment for rapid prototyp-ing. The MASH shell consists of the other collaboration tools such as the video conferencing tool (vic, [14]), visual audio tool (vat), a distributed whiteboard application, MediaBoard <ref> [17] </ref>, as well as archiving and indexing tools for Internet conferencing. By implementing the animation framework in the MASH shell, we will be able to interface with the rest of the collaboration tools in the future. Also the MASH shell contains the SRM toolkit [17] which is a class library that <p> (vat), a distributed whiteboard application, MediaBoard <ref> [17] </ref>, as well as archiving and indexing tools for Internet conferencing. By implementing the animation framework in the MASH shell, we will be able to interface with the rest of the collaboration tools in the future. Also the MASH shell contains the SRM toolkit [17] which is a class library that implements SRM. The animation framework is built on top of the SRM toolkit.
Reference: [18] <institution> Safe-tcl and the tk plugin. Sun Microsystems, Inc. </institution> <month> 11 </month> . 
Reference-contexts: Further, we would like to develop a scheme for dynamic distribution of active object code on the fly. Finally, the execution of arbitrary code poses several security problems. We will be looking into ways to enforce security, possible by using SafeTcl <ref> [18] </ref> or Java. 7 Conclusion We described a flexible framework for disseminating animations in a scalable way to many users over the Internet using IP multicast. The main components of the framework are as follows.
Reference: [19] <author> SCHULZRINNE, H., CASNER, S., FREDERICK, R., AND JACOBSON, V. RTP: </author> <title> A Transport Protocol for Real-Time Applications. </title> <institution> Internet Engineering Task Force, Audio-Video Transport Working Group, </institution> <month> Nov. </month> <year> 1991. </year> <note> Internet Draft expires 3/1/96. </note>
Reference-contexts: There are basically two choices, namely Real Time Protocol (RTP, <ref> [19] </ref>), or Scalable, Reliable Multicast (SRM, [6]). Both protocol gives us the application level framing that we need to develop an efficient framework for supporting animation events and objects. We chose SRM because SRM's application level reliability semantics can be used to develop an efficient framework.
Reference: [20] <author> SMITH, B., ROWE, L., AND YEN, S. C. </author> <title> Tcl distributed programming. </title> <booktitle> In Proceedings of the 1993 Tcl/Tk Workshop (Berkeley, </booktitle> <address> CA, </address> <month> June 93). </month>
Reference-contexts: In addition, there are rush-forward and rush-behind code fragments that gets executed when the stream is to be positioned in a further away position. The command stream is send over TCP using TCL-DP <ref> [20] </ref> and the CMT [21] toolkit. The commands could execute arbitrary commands including creation of user interface elements like buttons that takes user input, and commands that outputs audio, or control other applications.
Reference: [21] <author> SMITH, B. C., AND ROWE, L. </author> <title> A continuous media player. </title> <booktitle> In Proceedings of the Third International Workshop on Network and OS Support for Digital Audio and Video (1993), ACM. </booktitle>
Reference-contexts: In addition, there are rush-forward and rush-behind code fragments that gets executed when the stream is to be positioned in a further away position. The command stream is send over TCP using TCL-DP [20] and the CMT <ref> [21] </ref> toolkit. The commands could execute arbitrary commands including creation of user interface elements like buttons that takes user input, and commands that outputs audio, or control other applications.
Reference: [22] <author> WETHERALL, D., AND LINDBLAD, C. J. </author> <title> Extending tcl for dynamic object-oriented programming. </title> <booktitle> In Proceedings of the Tcl/Tk Workshop '95 (Toronto, </booktitle> <month> July </month> <year> 1995). </year> <note> 10 http://www-mash.cs.berkeley.edu/ns/nam.html 11 http://sunscript.sun.com/products/plug safetcl 11 </note>
Reference-contexts: The code is made up C++ modules and Tcl/Tk [15] and OTcl <ref> [22] </ref> scripts. Tcl/Tk provides us with convenient mechanisms for composing the user interface elements. OTcl implements an object oriented language on top of Tcl. C++ code is used to implement performance critical components of the system.
References-found: 22

