URL: http://www.cs.utah.edu/~sci/publications/lic.ps.Z
Refering-URL: http://www.cs.utah.edu/~sci/projects/visualization.html
Root-URL: 
Title: Global and Local Vector Field Visualization Using Enhanced Line Integral Convolution  
Author: Han-Wei Shen Christopher R. Johnson Kwan-Liu Ma 
Address: Salt Lake City, UT Hampton, Virginia  
Affiliation: Department of Computer Science ICASE University of Utah NASA Langley Research Center  
Abstract: We present local and global techniques to visualize three dimensional vector field data. Using the Line Integral Convolution (LIC) method to image the global vector field, our new algorithm allows the user to introduce colored "dye" into the vector field to highlight local flow features. A fast algorithm is proposed that quickly recomputes the dyed LIC images. In addition, we introduce a volume rendering method that can display the LIC texture on any contour surface and/or translucent region defined by additional scalar quantities. This new rendering model can be used not only to render the three dimensional LIC data, but also to explore data sets that have multiple scalar fields. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Crawfis and N. Max. </author> <title> Direct volume visualiza tion of three-dimensional vector fields. </title> <booktitle> In Proceedings of 1992 Workshop on Volume Visualization, </booktitle> <pages> pages 55-60. </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> CA, </address> <year> 1992. </year>
Reference-contexts: In addition, interactive guidance that shows the user where to probe locally to obtain specific information is usually not avaliable. Additional techniques for vector field visualization include global imaging techniques. Crawfis and Max <ref> [1] </ref> [2] proposed direct volume rendering methods to create images of entire vector fields. <p> The fi 2 <ref> [0; 1] </ref> is a weight between the primary and secondary data specified by the user. When fi is 1, the volume mixture is equivalent to the primary volume; when fi is 0, the volume mixture is the same as the secondary volume data.
Reference: [2] <author> R. Crawfis and N. Max. </author> <title> Texture splats for 3d scalar and vector field visualization. </title> <booktitle> In Proceedings of Visualization '93, </booktitle> <pages> pages 261-265. </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> CA, </address> <year> 1993. </year>
Reference-contexts: In addition, interactive guidance that shows the user where to probe locally to obtain specific information is usually not avaliable. Additional techniques for vector field visualization include global imaging techniques. Crawfis and Max [1] <ref> [2] </ref> proposed direct volume rendering methods to create images of entire vector fields.
Reference: [3] <author> J.J. van Wijk. </author> <title> Spot noise: Texture synthesis for data visualization. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 309-318, </pages> <year> 1991. </year>
Reference-contexts: Additional techniques for vector field visualization include global imaging techniques. Crawfis and Max [1] [2] proposed direct volume rendering methods to create images of entire vector fields. Vector kernels and texture splats are used to construct three dimensional scalar signals from the vector data. van Wijk <ref> [3] </ref> proposed a Spot Noise method using stretched ellipses to create two-dimensional textures that can be mapped onto parametric surfaces. Max et al.[4] further utilized the spot noise method to visualize three dimensional velocity fields near contour surfaces.
Reference: [4] <author> N. Max, R. Crawfis, and C. Grant. </author> <title> Visualizing 3d velocity fields near contour surfaces. </title> <booktitle> In Proceedings of Visualization '94, </booktitle> <pages> pages 248-255. </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> CA, </address> <year> 1994. </year>
Reference: [5] <author> B. Cabral and C. Leedom. </author> <title> Imaging vector fields using line integral convolution. </title> <booktitle> In Proceedings of SIGGRAPH 93, </booktitle> <pages> pages 263-270. </pages> <publisher> ACM SIG-GRAPH, </publisher> <year> 1993. </year>
Reference-contexts: Max et al.[4] further utilized the spot noise method to visualize three dimensional velocity fields near contour surfaces. Cabral and Leedom <ref> [5] </ref> presented a Line Integral Convolution (LIC) method, which uses a one dimensional low pass filter to convolve a white noise texture based on the directional information of the vector field. <p> We conclude the paper by presenting results of the new local and global flow algorithms on a variety of large-scale scientific data sets. 2 Background In this section, we give an overview of the LIC algorithm originally proposed by Cabral and Leedom <ref> [5] </ref>. Although the method can be applied to both two-and three-dimensional vector data, in this section we restrict our discussion to the two-dimensional case to illustrate the basic algorithm. <p> The low pass filter used in <ref> [5] </ref> is a Hanning ripple function, which has a period of 2. By shifting the phase of the filter function while performing the convolution, algorithm can generate a sequence of LIC images to create a periodic motion effect. <p> This allows the user to generate motion blur and additional artistic effects, as demonstrated in <ref> [5] </ref>. The dye insertion method utilizes the LIC's natural "smear-ing" to simulate advection of dye within the flow field. We simulate the dye injection by assigning colors to isolated local regions in the input white noise texture. Cells whose streamlines pass through such regions receive color contributions from the dye. <p> To create the effect of periodic motion, we generate multiple LIC output files at a time, using the phase shift method described in <ref> [5] </ref>. These multiple LIC data sets all serve as the secondary data and are rendered and played back in order. 5 Results and Discussion We have implemented our algorithms using C++ and OpenGL. The software combines modules of Line Integral Convolution with Dye Injection and BiVariate volume rendering.
Reference: [6] <author> L.K. Forssell and S.D. Cohen. </author> <title> Using line inte gral convolution for flow visualization: Curvilinear grids, variable-speed animation, and unsteady flows. </title> <journal> IEEE Transaction on Visualization and Computer Graphics, </journal> <volume> 1(2) </volume> <pages> 133-141, </pages> <year> 1995. </year>
Reference-contexts: Although the method can be applied to both two-and three-dimensional vector data, in this section we restrict our discussion to the two-dimensional case to illustrate the basic algorithm. We will omit the description of some recent improvements to the LIC algorithm subsequently proposed by Forssell and Cohen <ref> [6] </ref> and by Stalling and Hege [7]. However, we note that these newer methods can be easily adapted to our new algorithm. The LIC algorithm takes a vector field and a texture as inputs. The input texture is usually white noise data with the same resolution as the vector field.
Reference: [7] <author> D. Stalling and H.-C. Hege. </author> <title> Fast and resolution independent line integral convolution. </title> <booktitle> In Proceedings of SIGGRAPH 95, </booktitle> <pages> pages 249-256. </pages> <publisher> ACM SIG-GRAPH, </publisher> <year> 1995. </year>
Reference-contexts: We will omit the description of some recent improvements to the LIC algorithm subsequently proposed by Forssell and Cohen [6] and by Stalling and Hege <ref> [7] </ref>. However, we note that these newer methods can be easily adapted to our new algorithm. The LIC algorithm takes a vector field and a texture as inputs. The input texture is usually white noise data with the same resolution as the vector field.
Reference: [8] <author> K.-L. Ma, M.F. Cohen, and J.S. Painter. </author> <title> Vol ume seeds: A volume exploration technique. </title> <journal> The Journal of Visualization and Computer Animation, </journal> <volume> 2 </volume> <pages> 135-140, </pages> <year> 1991. </year>
Reference-contexts: Our software provides the capability of changing the transfer function and quickly updating the rendering results using the Ray Cache data structure <ref> [8] </ref>. This facilitates the users ability to define local areas and visualize the vector texture on those regions. A secondary renderer class instance is created for each LIC output in the animation sequence.
References-found: 8

