URL: http://www.cs.umass.edu/~kutlu/postscript/icpr94.ps
Refering-URL: http://www.cs.umass.edu/~kutlu/publications/icpr94.html
Root-URL: 
Title: ISR3: Communication and Data Storage for an Unmanned Ground Vehicle  
Author: Bruce A. Draper Gokhan Kutlu Edward M. Riseman Allen R. Hanson 
Address: Amherst, MA 01003  
Affiliation: Computer Vision Laboratory, Dept. of Computer Science University of Massachusetts,  
Abstract: Computer vision researchers working in mobile robotics and other real-time domains are forced to confront issues not normally addressed in the computer vision literature. Among these are communication, or how to get data from one process to another, data storage and retrieval, primarily for transient, image-based data, and database management, for maps, object models and other permanent (typically 3D) data. This paper reviews efforts at CMU, SRI and UMass to build real-time computer vision systems for mobile robotics, and presents a new tool, called ISR3, for communication, data storage/retrieval and database management on the UMass Mobile Perception Laboratory (MPL), a NAVLAB-like autonomous vehicle. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Aloimonos. </author> <title> Purposive and Qualitative Active Vision. </title> <booktitle> In IUW, </booktitle> <address> Pittsburgh, PA, </address> <pages> pages 816-828, </pages> <month> Sept. </month> <year> 1990. </year>
Reference-contexts: Although many open subproblems remain, the need to demonstrate success on real-world applications and the growing belief that vision is inherently task-oriented <ref> [1, 2, 5] </ref> are spurring research into the practical issues of building working systems. Much of this work has focused on supporting algorithm development and integration.
Reference: [2] <author> D. Ballard. </author> <title> Animate Vision. </title> <journal> Artificial Intelligence, </journal> <volume> 48 </volume> <pages> 57-86, </pages> <year> 1991. </year>
Reference-contexts: Although many open subproblems remain, the need to demonstrate success on real-world applications and the growing belief that vision is inherently task-oriented <ref> [1, 2, 5] </ref> are spurring research into the practical issues of building working systems. Much of this work has focused on supporting algorithm development and integration.
Reference: [3] <author> R. Beveridge. </author> <title> Local Search Algorithms for Geometric Object Recognition: Optimal Correspondence and Pose. </title> <type> PhD thesis, </type> <institution> Univ. of Massachusetts, </institution> <year> 1993. </year>
Reference-contexts: of landmarks from the model base (or "map") based on the vehicle's estimated position, one which extracted 2D line segments from images (after using color and texture to focus attention), and one of which matched image lines to model lines, determining the vehicle's position and orientation relative to the map <ref> [3] </ref>. In this case, the speed of communication between these processes was less critical; the vehicle was stopped during landmark recognition, so delays were not a hazard. Moreover, the model matching algorithm took on the order of a minute to execute, so any communication delays were comparatively small.
Reference: [4] <author> J. Brolio, B. Draper, R. Beveridge, and A. Han-son. </author> <title> The ISR: an Intermediate Symbolic Representation for Computer Vision. </title> <journal> IEEE Computer, </journal> <volume> 22(12) </volume> <pages> 22-30, </pages> <year> 1989. </year>
Reference-contexts: Researchers who apply computer vision to applications such as mobile robotics need support for inter-process communication, short-term data storage and retrieval, and long-term data management. This paper reviews some of the approaches that have been tried for solving these problems, such as ISR <ref> [4] </ref>, CODGER [9] and the Core Knowledge System (CKS; [10]). <p> Memory management was handled by giving each knowledge source a memory budget, which it could allocate to messages it wrote or intended to read. Another type of data store, called ISR <ref> [4] </ref>, was developed at the University of Massachusetts. Unlike CODGER and CKS, ISR was designed as a tool for offline algorithm development. As ISR's developers, we were interested in the knowledge-directed interpretation of outdoor scenes, and the control issues thereof. <p> To support this project, we designed a prototype data store for real-time vision called ISR3, which was implemented on board MPL. ISR (an acronym for intermediate symbolic representation) has been the name of a series of symbolic databases for vision developed at the University of Massachusetts <ref> [4] </ref>.
Reference: [5] <author> K. Ikeuchi and M. Hebert. </author> <title> Task Oriented Vision. </title> <booktitle> Conf. on Intelligent Robots and Systems, </booktitle> <address> Raleigh, NC, </address> <pages> pages 2187-2194, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Although many open subproblems remain, the need to demonstrate success on real-world applications and the growing belief that vision is inherently task-oriented <ref> [1, 2, 5] </ref> are spurring research into the practical issues of building working systems. Much of this work has focused on supporting algorithm development and integration.
Reference: [6] <author> K. Kluge. </author> <title> Multisensor System Integration for Autonomous Navigation Tasks. </title> <note> To appear in Intelligent Vehicles. </note>
Reference-contexts: Unfortunately, the central blackboard of CODGER became a bottleneck since all data messages passed from one process to another had to go through CODGER. This problem was exacerbated by CODGER's role as a data fusion mechanism: Kluge reports that CODGER spent most of its time computing coordinate transformations <ref> [6] </ref>, slowing the central communication process down even further. After CODGER was abandoned, a point-to-point communication package called EDDIE [12] was developed for NAVLAB. EDDIE was built on standard interprocess communication (IPC) protocols, and allowed processes to exchange instances of predefined message types.
Reference: [7] <author> D. Pomerleau. </author> <title> Neural Network Perception for Mobile Robot Guidance. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, </institution> <year> 1992. </year>
Reference-contexts: ISR3 was therefore forced to support a wide variety of image processing needs. At one extreme were groups of processes that only used ISR3 as a low-latency communications channel. For example, ALVINN <ref> [7] </ref> (a neural network road follower), its video preprocessor, and the MPL's steering/throttle controller used ISR3 in this way, with the video preprocessor passing reduced (32x32 intensity) images to ALVINN at approximately 10Hz, and ALVINN sending steering commands to the controller at the same rate.
Reference: [8] <author> B. Rochwerger, C. Fennema, B. Draper, A. Han-son and E. Riseman. </author> <title> An Architecture for Reactive Behavior. </title> <journal> ICPR (this volume). </journal>
Reference-contexts: These demonstrations showed the integration of low-level, reactive behaviors such as road following and obstacle avoidance with high-level perceptual capabilities such as landmark recognition, as described in <ref> [8] </ref>. ISR3 was therefore forced to support a wide variety of image processing needs. At one extreme were groups of processes that only used ISR3 as a low-latency communications channel.
Reference: [9] <author> A. Stentz. </author> <title> The CODGER System for Mobile Robot Navigation. </title> <booktitle> In [11], </booktitle> <year> 1990. </year>
Reference-contexts: Researchers who apply computer vision to applications such as mobile robotics need support for inter-process communication, short-term data storage and retrieval, and long-term data management. This paper reviews some of the approaches that have been tried for solving these problems, such as ISR [4], CODGER <ref> [9] </ref> and the Core Knowledge System (CKS; [10]). <p> is persistent and must be managed over time by efficient storage and access mechanisms which are geared to the nature (e.g. spatial, temporal, 3D) of the data. 2.2 Current Technology One of the first tools to support real-time image understanding was CODGER, a blackboard-style data store developed for CMU's NAVLAB <ref> [9] </ref>. The idea behind CODGER was that its "whiteboard" would serve as the central data store, with all other processes reading data from the white board and posting results to it. CODGER was also an information fusion mechanism that merged data by computing coordinate transformations and adjusting for time delays.
Reference: [10] <author> T. Strat and G. Smith. </author> <title> Core Knowledge System: Storage and Retrieval of Inconsistent Information. </title> <booktitle> IUW, </booktitle> <pages> pages 660-665, </pages> <year> 1988. </year>
Reference-contexts: This paper reviews some of the approaches that have been tried for solving these problems, such as ISR [4], CODGER [9] and the Core Knowledge System (CKS; <ref> [10] </ref>). We then present a further development of ISR, called ISR3, for managing these issues on board an unmanned vehicle (MPL). 2 Real-time Integration 2.1 Issues When algorithms developed off-line are to be combined for a real-time application such as an unmanned vehicle, several basic problems need to be solved. <p> EDDIE has since been replaced on board NAVLAB by TCX [11], a point-to-point communication package, and the Annotated Map System [12] for controlling vehicles behaviors based on location. At about the same time as CODGER, researchers at SRI proposed a blackboard system called the Core Knowledge System (CKS; <ref> [10] </ref>). CKS, like CODGER, was intended as a blackboard-style data store for an autonomous vehicle. Unlike CODGER, however, it was not intended for data fusion.
Reference: [11] <author> C. Thorpe. </author> <title> Vision and Navigation: </title> <publisher> The Carnegie Mellon Navlab. Kluwer Academic Publishers, </publisher> <year> 1990. </year>
Reference-contexts: EDDIE also included simple control mechanisms, such as the ability to "wake up" a process when a message arrives, and a small geometric modeling and map system. EDDIE has since been replaced on board NAVLAB by TCX <ref> [11] </ref>, a point-to-point communication package, and the Annotated Map System [12] for controlling vehicles behaviors based on location. At about the same time as CODGER, researchers at SRI proposed a blackboard system called the Core Knowledge System (CKS; [10]). <p> into a single system, and therefore to develop common data structures and mechanisms for passing data from one procedure to the next. 3 ISR3 Under the ARPA Unmanned Ground Vehicle (UGV) program, the University of Massachusetts was developing the Mobile Perception Laboratory (MPL), an autonomous vehicle similar to CMU's NAVLAB <ref> [11] </ref>. The goal for MPL was a system that integrates low-level behaviors, such as road following and obstacle detection, with high-level behaviors such as landmark-based navigation and map building. To support this project, we designed a prototype data store for real-time vision called ISR3, which was implemented on board MPL.
Reference: [12] <author> C. Thorpe and J. Gowdy. </author> <title> Annotated Maps for Autonomous Land Vehicles. </title> <booktitle> In IUW, </booktitle> <address> Pittsburgh, PA, </address> <pages> pages 765-771, </pages> <month> Sept. </month> <year> 1990. </year>
Reference-contexts: This problem was exacerbated by CODGER's role as a data fusion mechanism: Kluge reports that CODGER spent most of its time computing coordinate transformations [6], slowing the central communication process down even further. After CODGER was abandoned, a point-to-point communication package called EDDIE <ref> [12] </ref> was developed for NAVLAB. EDDIE was built on standard interprocess communication (IPC) protocols, and allowed processes to exchange instances of predefined message types. <p> EDDIE also included simple control mechanisms, such as the ability to "wake up" a process when a message arrives, and a small geometric modeling and map system. EDDIE has since been replaced on board NAVLAB by TCX [11], a point-to-point communication package, and the Annotated Map System <ref> [12] </ref> for controlling vehicles behaviors based on location. At about the same time as CODGER, researchers at SRI proposed a blackboard system called the Core Knowledge System (CKS; [10]). CKS, like CODGER, was intended as a blackboard-style data store for an autonomous vehicle.
Reference: [13] <author> T. Williams. </author> <title> Image Understanding Tools. </title> <booktitle> In ICPR, </booktitle> <address> Atlantic City, N.J., </address> <pages> pages 606-610, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: One version, ISR1.5, is now commercially available as part of KBVision <ref> [13] </ref>, while the most recent version, ISR3, was used on-board MPL.
References-found: 13

