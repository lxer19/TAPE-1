URL: http://www.cs.ucsb.edu/~kienle/ooodb2.ps
Refering-URL: http://www.cs.ucsb.edu/~kienle/prj/prj.html
Root-URL: http://www.cs.ucsb.edu
Email: kienle@cs.ucsb.edu  pfortier@umassd.edu  
Title: EXCEPTION-HANDLING EXTENSION FOR AN OBJECTORIENTED DBMS  
Author: Holger M. Kienle Paul J. Fortier 
Address: Stuttgart, Germany  USA  
Affiliation: University of  University of Massachusetts Dartmouth,  
Abstract: This paper describes the implementation of an exception handling facility for the Open OODB, a research database system developed by Texas Instruments. The initial OODB database has been extended and modified to support exception handling. An extended exception handling model was designed and implemented which fits into the existing Open OODB architecture and computation model. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Atwood, J. Duhl, G. Ferran, M. Loomis, and D. Wade. </author> <title> The Object Database Standard, ODMG-93. </title> <publisher> Morgan Kaufmann Publisher, </publisher> <address> release 1.1 edition, </address> <year> 1994. </year>
Reference-contexts: Object and Computation Model The Open OODB object model defines the meaning of types, classes, objects, extents, relationships between objects, persistence, and transactions. The Open OODB object model is nearly isomorphic to the ODMG object model <ref> [1] </ref>. In the Open OODB computational model, all objects exist in a flat universe of objects ( meaning that all objects are manipulated in the same way). The universe of objects is divided into environments by environmental attributes, hidden and not accessible in the programming language.
Reference: [2] <author> C. Dony, J. Purchase, and R. Winder. </author> <title> Exception Handling in Object-oriented Systems. </title> <journal> OOPS Messenger, </journal> <volume> 3(2):1730, </volume> <month> April </month> <year> 1992. </year>
Reference-contexts: A transaction is a sequence of grouped operations on (persistent) objects treated as a logical unit of work. The Open OODB object model supports nested transactions, with dynamic scoping of transactions 1 , whose scope is not known during compile time. 3. Exception Handling Exception handling [4] <ref> [2] </ref> is an approach to programming which attempts to contain and handle error situations. The goal is to make systems more reliable by providing a framework for implementing software fault tolerance. A domain is a section of code associated with a particular exception handler.
Reference: [3] <author> M. A. Ellis and B. Stroustrup. </author> <title> The Annotated C++ Reference Manual. </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: Instead, a handwritten lexer has been written, making it very hard to modify and extend the lexer and hence it violates the principle of openness and reusability of the Open OODB requirements. * The C++ grammar of the preprocessor is taken from <ref> [3] </ref>, a superset of the actual C++ language: This summary of the C++ syntax is intended to be an aid to comprehension.
Reference: [4] <author> J. B. Goodenough. </author> <title> Exception Handling: Issues and a Proposed Notation. </title> <journal> Communications of the ACM, </journal> <volume> 18(12):683 696, </volume> <month> December </month> <year> 1975. </year>
Reference-contexts: A transaction is a sequence of grouped operations on (persistent) objects treated as a logical unit of work. The Open OODB object model supports nested transactions, with dynamic scoping of transactions 1 , whose scope is not known during compile time. 3. Exception Handling Exception handling <ref> [4] </ref> [2] is an approach to programming which attempts to contain and handle error situations. The goal is to make systems more reliable by providing a framework for implementing software fault tolerance. A domain is a section of code associated with a particular exception handler.
Reference: [5] <author> H. M. Kienle. </author> <title> Exception-Handling Extension for the Open OODB. </title> <type> Master's thesis, </type> <institution> University of Massachusetts Dart-mouth, </institution> <month> June </month> <year> 1995. </year>
Reference-contexts: If an exception belonging to Group G x , must be raised by the PM, the corresponding exception object must be of type OODB Excpt Px. classes The described design has been used in <ref> [5] </ref> to implement exceptions for the Transaction PM. For example, the Transaction PM raises an exception if an attempt has been made to commit or abort a transaction, but no active transaction exists.
Reference: [6] <author> W. M. Waite. </author> <title> Beyond LEX and YACC: How to Generate the Whole Compiler. </title>
Reference-contexts: oodb tryscopef public: oodb tryscope () :excpt (1)f inform the Exception PM that a new try-block starts g; ~ oodb tryscope ()f // try-block ends if (excpt) f inform the Exception PM that current try-block ends (exception occurred) 2 Scanning and parsing account for only 15% of a typical compiler <ref> [6] </ref>. 5 g elsef inform the Exception PM that current try-block ends (no exception occurred) g void end (void) f excpt= 0 g; private: // indicates if we abandoned the try-block // with an exception int excpt; g The class variable excpt stores exception occurance information.
Reference: [7] <author> D. Wells. </author> <title> Open OODB Technical Overview Release 0.2 (Alpha). </title> <type> Technical report, </type> <institution> Texas Instruments Inc., </institution> <year> 1993. </year>
Reference-contexts: Design The first step in designing the exception handling facility is to choose a suitable exception handling model. The Open OODB has no exception handling model. <ref> [7] </ref> points out that Open OODB will define a collection of exception classes and required handlers to provide traceability for exceptions signaled by [policy managers]. But this proposed exception mechanism has not been further specified or implemented at this writing.
Reference: [8] <author> D. L. Wells, J. A. Blakeley, and C. W. Thompson. </author> <title> Architecture of an Open Object-Oriented Database Management System. </title> <journal> Computer, </journal> <volume> 25(10), </volume> <year> 1992. </year> <month> 6 </month>
Reference-contexts: In order to implement the design, the API of the Open OODB is extended and the Open OODB preprocessor is modified. The paper closes with conclusions drawn from this work. 2. Open OODB The Open OODB <ref> [8] </ref> was developed by Texas Instruments as an effort to build an open and extensible system to serve as a platform for research. The database is written in C and C++ and is portable to various UNIX systems. 2.1.
References-found: 8

