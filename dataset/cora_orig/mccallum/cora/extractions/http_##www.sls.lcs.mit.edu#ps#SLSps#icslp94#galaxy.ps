URL: http://www.sls.lcs.mit.edu/ps/SLSps/icslp94/galaxy.ps
Refering-URL: http://www.sls.lcs.mit.edu/raylau/webgal/
Root-URL: 
Title: GALAXY: A HUMAN-LANGUAGE INTERFACE TO ON-LINE TRAVEL INFORMATION 1  
Author: David Goddeau, Eric Brill James Glass, Christine Pao Michael Phillips, Joseph Polifroni, Stephanie Seneff, and Victor Zue 
Address: Cambridge, Massachusetts 02139 U.S.A.  
Affiliation: Spoken Language Systems Group Laboratory for Computer Science Massachusetts Institute of Technology  
Abstract: This paper introduces galaxy, a distributed system for providing access and intelligent mediation for on-line information and services via human-language technology. We have chosen to focus our initial implementation on the travel domain (including air travel, local navigation, and weather) largely to leverage off our past experience in the development of the voyager [1], atis [2], and pegasus [3] systems. Galaxy is designed to access real databases that are distributed among various information networks (e.g., Internet, LAN, or commercial networks such as Com-puserve). Our initial system utilizes American Airlines' eaasy sabre, the NYNEX Electronic Yellow Pages, the US Census Bureau's map database, and the National Weather Service database. Galaxy was developed as an environment for exploring important research issues in human language technology. Moreover, galaxy will provide a demonstration of an interface that will enable users to efficiently access, process, and manipulate a vast amount of on-line information. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Glass, J., Goodine, D., Phillips, M., Sakai, S., Seneff, S., and Zue, V. </author> <title> "A Bilingual Voyager System," </title> <booktitle> Proc. Eurospeech, </booktitle> <pages> pp. 2063-2066, </pages> <month> September, </month> <year> 1993. </year>
Reference-contexts: Over the past five years, our group has been an active participant in the development of such conversational systems, i.e., systems that can understand and respond verbally in order to help a user access information and solve specific problems <ref> [1, 2, 3] </ref>. Such rapid technological progress raises several timely questions.
Reference: [2] <author> Zue, V., Glass, J., Goddeau, D., Goodine, D., Hirschman, L., Phillips, M., Polifroni, J., and Seneff, S. </author> <title> "The MIT Atis System: February 1992 Progress Report," </title> <booktitle> Proc. DARPA Speech and NL Workshop, </booktitle> <address> Harriman, NY, </address> <pages> pp. 84-88, </pages> <month> February, </month> <year> 1992. </year>
Reference-contexts: Over the past five years, our group has been an active participant in the development of such conversational systems, i.e., systems that can understand and respond verbally in order to help a user access information and solve specific problems <ref> [1, 2, 3] </ref>. Such rapid technological progress raises several timely questions.
Reference: [3] <author> Zue, V., Glass, J., Goddeau, D., Goodine, D., Pao, C., Phillips, M., Polfroni, J., and Seneff, S. </author> <title> "Pegasus: A Spoken Dialogue Interface for On-line Air Travel Planning," </title> <booktitle> Proc. International Symposium of Spoken Dialogue, </booktitle> <address> Tokyo, Japan, </address> <pages> pp. 157-160, </pages> <address> Novem-ber, </address> <year> 1993. </year>
Reference-contexts: Over the past five years, our group has been an active participant in the development of such conversational systems, i.e., systems that can understand and respond verbally in order to help a user access information and solve specific problems <ref> [1, 2, 3] </ref>. Such rapid technological progress raises several timely questions. <p> The domain server connects to eaasy sabre through its dialup interface, which was designed for human-machine interaction. The server must therefore analyze the returned screens and extract the important information for responding to the user's request. The implementation of this server was initially derived from the MIT pegasus system <ref> [3] </ref>, although it currently lacks many of the more sophisticated features of that system. The current server allows queries about flight schedules, properties, availability and fares between 220 major cities throughout the world. Additional capabilities from pegasus will be included in future versions.
Reference: [4] <institution> Bureau of the Census, TIGER/Line TM Files, 1992 Technical Documentation, Washington DC: The Bureau, </institution> <year> 1993. </year>
Reference-contexts: Its current information sources consist of an on-line version of the NYNEX Yellow Pages for the 617 Area Code 3 , an additional database of local points of interest, including a personal rolodex, and geographical information from a subset of the US Census Bureau's TIGER files <ref> [4] </ref>. The server can answer queries about general classes of objects ("Are there any Indian restaurants in Cambridge?"), provide information about a specific location ("What is the phone number of the Back Bay Hilton?"), and deal with a variety of constraints ("on Main Street", "near MIT," etc.).
Reference: [5] <author> Zue, V., Glass, J., Goodine, D., Phillips, M., and Seneff, S., </author> <title> "The SUMMIT Speech Recognition System: Phonological Modelling and Lexical Access," </title> <address> Proc.ICASSP-90,Albuquerque, NM, </address> <pages> pp. 49-52, </pages> <month> April, </month> <year> 1990. </year>
Reference-contexts: Speech Recognition The recognition server uses the MIT real-time summit recognizer <ref> [5] </ref>. This recognizer uses a set of context-independent models, a class-bigram language model, a forward Viterbi search with fastmatch [6] and a backward A fl search to produce an N -best list of recognition hypotheses.
Reference: [6] <author> Phillips, M. and Goddeau, D., </author> <title> "Lexical Tree Based Pruning for Segment-Based Speech Recognition", </title> <booktitle> These Proceedings, </booktitle> <address> Septem-ber, </address> <year> 1994. </year>
Reference-contexts: Speech Recognition The recognition server uses the MIT real-time summit recognizer [5]. This recognizer uses a set of context-independent models, a class-bigram language model, a forward Viterbi search with fastmatch <ref> [6] </ref> and a backward A fl search to produce an N -best list of recognition hypotheses. Lexicon construction was problematic because the usual source of the recognition lexicon, a large domain specific corpus, was not available.
Reference: [7] <author> MADCOW, </author> <title> "Multi-Site Data Collection for a Spoken Language Corpora", </title> <booktitle> Fifth DARPA Speech and Natural Language Workshop, </booktitle> <pages> pp. 7-14, </pages> <month> February, </month> <year> 1992. </year>
Reference-contexts: Lexicon construction was problematic because the usual source of the recognition lexicon, a large domain specific corpus, was not available. The lexicon for this implementation contains words derived from a number of language corpora including atis <ref> [7] </ref> and voyager [8]. In addition, domain-specific vocabularies, consisting mostly of proper names, including cities and towns, street names, and business establishments, were extracted from the databases. This results in a vocabulary of over 4000 words.
Reference: [8] <author> Zue, V., Daly, N., Glass, J., Goodine, D., Leung, H., Phillips, M., Polifroni, J., Seneff, S., and Soclof, M., </author> <title> "The Collection and Preliminary Analysis of a Spontaneous Speech Database", </title> <booktitle> DARPA Speech and Natural Language Workshop, </booktitle> <pages> pp. 160-167, </pages> <month> October, </month> <year> 1989. </year>
Reference-contexts: Lexicon construction was problematic because the usual source of the recognition lexicon, a large domain specific corpus, was not available. The lexicon for this implementation contains words derived from a number of language corpora including atis [7] and voyager <ref> [8] </ref>. In addition, domain-specific vocabularies, consisting mostly of proper names, including cities and towns, street names, and business establishments, were extracted from the databases. This results in a vocabulary of over 4000 words.
Reference: [9] <author> Alberti, B., Anklesaria, F., Lindner, P., McCahill, M., and Tor-rey, D., </author> <title> "The Internet Gopher Protocol: a distributed document search and retrieval protocol", </title> <institution> University of Minn. Microcomputer and Workstation Networks Center, </institution> <month> Spring </month> <year> 1992. </year>
Reference-contexts: Additional capabilities from pegasus will be included in future versions. Weather Information The Weather Server provides access to several different sources of weather data originating with the US Weather Service, stored at a number of Internet sites and available via the Gopher protocol <ref> [9] </ref>. Currently, data is available for around 120 U.S. cities, and includes current forecasts and climatological data, temperature maps, and satellite images.
Reference: [10] <author> Glass, J., Polifroni, J., and Seneff, S. </author> <title> "MultilingualLanguage Generation Across Multiple Domains," </title> <booktitle> These Proceedings, </booktitle> <month> September, </month> <year> 1994. </year>
Reference-contexts: Genesis is configured so that the language-dependent aspects of generated strings are controlled via external tables, with the procedures operating language-independently from a semantic frame representation common to all languages. A detailed description of genesis can be found in <ref> [10] </ref>. The paraphrase provides convenient confirmation that the system has properly understood the user query. Paraphrasing also provides the possibility of translating user queries among the various languages supported by the system. We have begun to develop such paraphrasing capabilities within galaxy for Spanish, Mandarin Chinese, and Japanese.
Reference: [11] <author> Seneff, S. "Tina: </author> <title> A Natural Language System for Spoken Language Applications," </title> <journal> Computational Linguistics, </journal> <volume> Vol. 18, No. 1, </volume> <pages> pp. 61-86, </pages> <year> 1992. </year>
Reference-contexts: Natural Language Understanding The natural language processing for galaxy makes use of the tina formalism <ref> [11] </ref>. In the current implementation the parser is compiled into the client program, since it imposes very little computational overhead. The parser processes the N -best list returned by the recognizer, selecting the first parsable hypothesis.
References-found: 11

