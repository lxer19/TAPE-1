URL: ftp://ftp.cs.colorado.edu/pub/distribs/Nutt/smallComputers.ps
Refering-URL: http://www.cs.colorado.edu/~nutt/Home.html
Root-URL: http://www.cs.colorado.edu
Email: nutt@cs.colorado.edu  
Title: Software for Small, Communicating Computers  
Author: Gary J. Nutt 
Date: March 1997  
Address: Boulder, CO 80309-0430  Boulder  
Affiliation: Department of Computer Science, CB 430 University of Colorado  ffi University of Colorado at  
Pubnum: CU-CS-835-97  
Abstract: Technical Report CU-CS-835-97 Department of Computer Science Campus Box 430 University of Colorado Boulder, Colorado 80309 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Javastations | an overview. </author> <note> WWW page at http://www.sun.com/961029/JES/whitepapers.orig/, 1996. </note>
Reference-contexts: The terms thin client and network computer are used to describe these machines | ones that depend on HCI technology similar to a web browser, but where additional software is incorporated into the machine. The Sun JavaStation product line is intended to operate in this environment <ref> [1] </ref>. Evolving Embedded Systems These applications have evolved due to the need to use computers to automate increasingly complex tasks in a hostile environment. For example, the SCC may be an in-flight computer for spacecraft or a weapon or control a robot working in a mine.
Reference: [2] <author> Tim Berners-Lee, Rober Cailliau, Ari Luotonen, Henrik Frystyk Nielsen, and Arthur Secret. </author> <title> The world-wide web. </title> <journal> Communications of the ACM, </journal> <volume> 37(8) </volume> <pages> 76-82, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: The browser can then use the Java Virtual Machine to execute the program. Web Browsers. The World Wide Web (WWW) was originally developed to support geographically dispersed set of collaborators <ref> [2] </ref>. <p> Information is referenced by having the client use a hypertext link to identify information within the web (i.e., by identifying a server and the information on that server). The WWW defines <ref> [2, 3] </ref>: * An address system (Universal Resource Identifier, or URI) to reference information. * The HTTP protocol for accepting requests and transferring information. * The HTML markup language for describing information.
Reference: [3] <author> Michael Bieber and Fabio Vitali. </author> <title> Toward support for hypermedia on the world wide web. </title> <journal> IEEE Computer, </journal> <volume> 30(1) </volume> <pages> 62-70, </pages> <month> January </month> <year> 1997. </year>
Reference-contexts: Information is referenced by having the client use a hypertext link to identify information within the web (i.e., by identifying a server and the information on that server). The WWW defines <ref> [2, 3] </ref>: * An address system (Universal Resource Identifier, or URI) to reference information. * The HTTP protocol for accepting requests and transferring information. * The HTML markup language for describing information.
Reference: [4] <author> Borko Furht, Deven Kalra, Frederick L. Kitson, Arturo A. Rodriguez, and William E. Wall. </author> <title> Design issues for interactive television systems. </title> <journal> IEEE Computer, </journal> <volume> 28(5) </volume> <pages> 25-39, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: Interactive Television Interactive television (ITV) is expected to provide consumer services including basic TV, interactive entertainment, digital audio, video-on-demand, home shopping, financial transactions, games, digital multimedia libraries, and electronic versions of tradi tional print media <ref> [4] </ref>. The set-top box is the SCC in this application world. Web Browsing The availability of information over the Internet grew tremendously in popularity beginning in 1996. Today, commercial advertisers, print media, sports teams, etc. frequently list a home page where detailed information can be retrieved over the Internet.
Reference: [5] <author> James Gosling. </author> <title> Java language tutorials your first jolt. </title> <type> Videotape, </type> <year> 1996. </year>
Reference-contexts: Of 11 course it depends on there being a "standard" interface between the applet and the client application. Java. Java programs are portable, object-oriented programs, described by Gosling (the language inventor) as "... C++ without guns and knives ..." <ref> [5] </ref>. This means that Java explicitly limits the ability to reference arbitrary objects within a program, a concession to help ensure secure operation of programs written in Java. When Java programs are compiled, they are translated into a pseudo code language ("byte-codes") rather than into a native machine language.
Reference: [6] <author> Marc A. Hamilton. </author> <title> Java and the shift to net-centric computing. </title> <journal> IEEE Computer, </journal> <volume> 29(8) </volume> <pages> 31-39, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Hamilton <ref> [6] </ref> and others refer to this as a shift to net-centric computing. Encapsulated application technology has emerged as a commercially viable way to produce applications for SCCs (as well as other classes of computers).
Reference: [7] <author> Tim Lindholm and Frank Yellin. </author> <title> The Java(TM) Virtual Machine Specification. </title> <publisher> Addison Wesley, </publisher> <year> 1997. </year>
Reference-contexts: This means that compiled Java programs cannot be executed directly on target hardware, but that they must be interpreted by another package that has been implemented on the target hardware; this interpreter is called the Java Virtual Machine <ref> [7] </ref>.
Reference: [8] <author> Gary J. Nutt. </author> <title> Open Systems. </title> <publisher> Prentice Hall, </publisher> <year> 1992. </year>
Reference-contexts: For example, the X window system is built on this model. The client-server model was also a natural way to accommodate the evolution from "legacy mainframe computing" to distributed models (see <ref> [8] </ref>). It provided a technological evolution path that allowed organizations to begin displacing their large mainframe computers with a network of clients and servers, where the servers were initially the extant mainframe computers.
Reference: [9] <author> Gary J. Nutt. </author> <title> Operating Systems: A Modern Approach. </title> <publisher> Addison Wesley, </publisher> <year> 1997. </year> <month> 17 </month>
Reference-contexts: The earliest commercial servers were the disk and file servers to manage shared information (see Chapter 16 of <ref> [9] </ref>), print servers to manage a shared printer, communications servers, to manage a shared data multiplexor connected to modems, etc. <p> This avoids the problem of f i 's thread overwriting the memory space used by f k 's thread since it is no longer possible for the thread executing f i to even access the memory being used by the thread executing f k (see Chapters 6 and 11 of <ref> [9] </ref>). Mainstream compiler technology evolved with the hardware to have translation systems construct f i 's program within its own address space. Unfortunately, the address space isolation mechanism also prevents f i from cooperatively passing information to f k by writing information into a shared memory location. <p> Any OS can be systematically studied by considering the way it provides a general class of functions: process and resource management, device management, memory management, and file management <ref> [9] </ref>. Process and Resource Management. The process and resource management function is the heart of a multitasking OS. It create the software environment that has the illusion of multiple virtual machines to be used by the multiple tasks. <p> This resulted in an approach in which core OS functionality was implemented in a kernel, with other aspects of the OS 15 being treated as ordinary user programs by the kernel. The kernel-organization is the main design style used in today's OSs (see Chapter 18 of <ref> [9] </ref>). UNIX is a common example of this approach. As the need for OSs appeared in embedded systems, a new approach began to evolve: configurable OSs.
Reference: [10] <author> Sam Siewert. </author> <title> Operating systems support for parametric control of isochronous and sporadic execution streams in multiple time frames, 1996. </title> <type> Ph.D. dissertation proposal. </type>
Reference-contexts: The work performed by these SCCs is well-characterized by navigation and control applications. The emerging work on telepresence over the network and agent-based automation takes advantage of the approach <ref> [10] </ref>. In these applications, the embedded system reads onboard sensors regarding attitude, direction, etc., and assists in flying the craft within acceptable value ranges. It could also respond to external commands to follow a particular course, etc. In the remainder of this paper, we consider the software for SCCs. <p> As an example of a typical SCC application, we briefly review one of our own experimental systems that relies on the SCC technology. The FLOATERS blimp is an unoccupied air vehicle developed to explore several facets of SCC software technology <ref> [10, 11] </ref>. FLOATERS is physically about 4 feet long, 3 feet tall, and 2 feet wide. The onboard computer is a 80486 laptop connected to other microprocessors to control components of the blimp. There are two propeller motors that have individual speed controls, and a ganged pitch control.
Reference: [11] <author> Sam Siewert and Gary J. Nutt. </author> <title> A space system testbed for situated agent observability and interaction. </title> <booktitle> In The 5th Intl. Conf. and Exposition on Engineering, Construction, and Operations in Space and The 2nd Conf. and Exposition/Demonstration on Robotics for Challenging Environments, </booktitle> <month> June </month> <year> 1996. </year>
Reference-contexts: As an example of a typical SCC application, we briefly review one of our own experimental systems that relies on the SCC technology. The FLOATERS blimp is an unoccupied air vehicle developed to explore several facets of SCC software technology <ref> [10, 11] </ref>. FLOATERS is physically about 4 feet long, 3 feet tall, and 2 feet wide. The onboard computer is a 80486 laptop connected to other microprocessors to control components of the blimp. There are two propeller motors that have individual speed controls, and a ganged pitch control.
Reference: [12] <institution> Webtv technical specifications. </institution> <note> WWW page at http://www.webtv.net/HTML/home.specs.html, 1996. </note>
Reference-contexts: In 1996 Web TV T M began offer a prod-uct resembling a set-top box with a built-in web browser <ref> [12] </ref>. WebTV's display is the TV set, the input device is a remote control (or optional keyboard), and the 2-way communication network is the telephone network. It is a SCC especially designed to run only a specific web browser program.
Reference: [13] <author> Mark Weiser. </author> <title> Hot topics: Ubiquitous computing. </title> <journal> IEEE Computer, </journal> <volume> 26(10) </volume> <pages> 71-72, </pages> <month> October </month> <year> 1993. </year>
Reference-contexts: SCCs have evolved because people want to buy them for their features (or perceived features) rather than because they are an application of a new technology. The following application areas are significant driving forces: Ubiquitous Computing Weiser introduced ubiquitous computers in 1993 <ref> [14, 13] </ref>. The key elements of ubiquitous computers are that they are pervasive, nonintrusive devices that provide useful service while being essentially invisible to users. Further, they are fully connected into a global network.
Reference: [14] <author> Mark Weiser. </author> <title> Some computer science issues in ubiquitous computing. </title> <journal> Communications of the ACM, </journal> <volume> 36(7) </volume> <pages> 75-84, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: SCCs have evolved because people want to buy them for their features (or perceived features) rather than because they are an application of a new technology. The following application areas are significant driving forces: Ubiquitous Computing Weiser introduced ubiquitous computers in 1993 <ref> [14, 13] </ref>. The key elements of ubiquitous computers are that they are pervasive, nonintrusive devices that provide useful service while being essentially invisible to users. Further, they are fully connected into a global network. <p> Further, they are fully connected into a global network. An important aspect of ubiquitous computing is that they are an enabler of collaboration from the perspective of situated work <ref> [14] </ref>. Interactive Television Interactive television (ITV) is expected to provide consumer services including basic TV, interactive entertainment, digital audio, video-on-demand, home shopping, financial transactions, games, digital multimedia libraries, and electronic versions of tradi tional print media [4]. The set-top box is the SCC in this application world.
Reference: [15] <author> Edward Yourdon. </author> <title> Java, the web, and software development. </title> <journal> IEEE Computer, </journal> <volume> 29(8) </volume> <pages> 25-30, </pages> <month> August </month> <year> 1996. </year> <month> 18 </month>
Reference-contexts: As the next century approaches, we are seeing striking interest in the application of small computers within a distributed computing environment. Part of the interest in SCCs stems from a trend of "thinning down" computer systems in general <ref> [15] </ref>, and distributed systems in particular; embedded systems developers are interested in SCC technology since they have "fattened up" to the point that they need substantially more sophisticated systems to manage their software. <p> Embedded systems are developed almost exclusively using this code development model. 3.2 Thin Applications What's the big deal about Java and the Web? The fact that they mark the death of fat ware and the birth of dynamic computing built on rented components. Edward Yourdon, <ref> [15] </ref> In Section 1 we explained how SCCs have evolved from distributed computing by a recent trend toward loading less software onto the user's machine (contrasted with the trend where software packages are becoming increasingly large.) While one part of computing is to configure the computer with a faster processor, more
References-found: 15

