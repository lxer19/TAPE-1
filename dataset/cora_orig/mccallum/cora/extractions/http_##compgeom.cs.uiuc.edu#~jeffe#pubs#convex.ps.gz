URL: http://compgeom.cs.uiuc.edu/~jeffe/pubs/convex.ps.gz
Refering-URL: http://compgeom.cs.uiuc.edu/~jeffe/pubs/convex.html
Root-URL: http://www.cs.uiuc.edu
Title: NEW LOWER BOUNDS FOR CONVEX HULL PROBLEMS IN ODD DIMENSIONS  
Author: JEFF ERICKSON 
Keyword: Key words. computational geometry, convex polytopes, lower bounds, decision trees, adversary arguments  
Note: AMS subject classifications. 68Q25, 68U05, 52B55, 52B05  
Abstract: We show that in the worst case, (n dd=2e1 + n log n) sidedness queries are required to determine whether the convex hull of n points in IR d is simplicial, or to determine the number of convex hull facets. This lower bound matches known upper bounds in any odd dimension. Our result follows from a straightforward adversary argument. A key step in the proof is the construction of a quasi-simplicial n-vertex polytope with (n dd=2e1 ) degenerate facets. While it has been known for several years that d-dimensional convex hulls can have (n bd=2c ) facets, the previously best lower bound for these problems is only (n log n). Using similar techniques, we also obtain simple and correct proofs of Erickson and Seidel's lower bounds for detecting affine degeneracies in arbitrary dimensions and circular degeneracies in the plane. As a related result, we show that detecting simplicial convex hulls in IR d is dd=2esum-hard, in the sense of Gajentaan and Overmars. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. K. Agarwal and J. Matou sek, </author> <title> Ray shooting and parametric search, </title> <journal> SIAM J. Comput., </journal> <volume> 22 (1993), </volume> <pages> pp. 794-806. </pages>
Reference-contexts: Chan [11] describes an improvement of the gift-wrapping algorithm that uses ray shooting data structures of Agarwal and Matousek <ref> [1] </ref> and Matousek and Schwarzkopf [36] to speed up the pivoting step. In each pivoting step, the gift-wrapping algorithm finds a new facet containing a given ridge of the convex hull. <p> The four-dimensional version of their algorithm uses primitives involving up to 22 points. 2 Higher-dimensional versions of their algorithm require the use of linear programming queries and ray-shooting queries in certain (d 1)-dimensional projections of the input; the fastest known algorithms to answer these queries <ref> [1, 11, 35, 36] </ref> do not even fit into the algebraic decision tree model. 7. Related Problems. 7.1. Affine Degeneracies. Theorem 7.1. Any decision tree that decides whether a set of n points in IR d is affinely nondegenerate, using only sidedness queries, must have depth (n d ).
Reference: [2] <author> N. M. Amato and E. A. Ramos, </author> <title> On computing Voronoi diagrams by divide-prune-and-conquer, </title> <booktitle> in Proc. 12th Annu. ACM Sympos. </booktitle> <institution> Comput. Geom., </institution> <year> 1996, </year> <pages> pp. 166-175. </pages>
Reference-contexts: Seidel's "shelling" algorithm runs in time O (n 2 + f log n) [43]. A divide-and-conquer algorithm of Chan, Snoeyink, and Yap [12] constructs four-dimensional hulls in time O ((n + f ) log 2 f ), and a recent improvement by Amato and Ramos <ref> [2] </ref> constructs five-dimensional hulls in time fl This research was done while the author was a graduate student at U. C. Berkeley, with the support of a Graduate Assistance in Areas of National Need Fellowship. <p> There are a few convex hull algorithms which seem to fall outside our framework, most notably the divide-and-conquer algorithm of Chan, Snoeyink, and Yap [12], and its improvement by Amato and Ramos <ref> [2] </ref>.
Reference: [3] <author> N. Amenta and G. Ziegler, </author> <title> Deformed products and maximal shadows of polytopes, </title> <type> Report 502-1996, </type> <institution> Technische Univesitat Berlin, </institution> <month> May </month> <year> 1996. </year> <title> Full version of [4]. [4] , Shadows and slices of polytopes, </title> <booktitle> in Proc. 12th Annu. ACM Sympos. </booktitle> <institution> Comput. Geom., </institution> <year> 1996, </year> <pages> pp. 10-19. </pages>
Reference-contexts: Simple variations on the weird moment curve will not suffice, since an "evenness condition" like Lemma 2.2 always forces the number of degenerate facets to be linear. Arguments based on merging facets of cyclic or product polytopes also fail, as do variations on Amenta and Ziegler's deformed products <ref> [3, 4] </ref>. The best example we can construct is the connected sum of n=5 1 copies of a bipyramid over a cube, which has n vertices and 2n 8 facets, each a square pyramid. A common application of convex hull algorithms is the construction of Delaunay triangulations and Voronoi diagrams.
Reference: [5] <author> D. Avis, D. Bremner, and R. Seidel, </author> <title> How good are convex hull algorithms?, </title> <journal> Comput. Geom. Theory Appl., </journal> <volume> 7 (1997), </volume> <pages> pp. 265-302. </pages>
Reference-contexts: Moreover, most of these algorithms compute either the complete face lattice of the convex hull or a triangulation of its boundary, both of which can be significantly larger than the number of facets if the input is not in general position. Avis, Bremner, and Seidel <ref> [5] </ref> describe families of polytopes on which current convex hull algorithms perform quite badly, sometimes requiring exponential time (in d) even when the number of facets is only polynomial.
Reference: [6] <author> D. Avis and K. Fukuda, </author> <title> A pivoting algorithm for convex hulls and vertex enumeration of arrangements and polyhedra, </title> <journal> Discrete Comput. Geom., </journal> <volume> 8 (1992), </volume> <pages> pp. 295-313. </pages>
Reference-contexts: For related results, see <ref> [6, 13, 17, 18, 34, 45] </ref>. Except when f is extremely small or extremely large, there are still large gaps between all these upper bounds and the lower bound (n log f + f ). <p> Seidel's "shelling" al LOWER BOUNDS FOR CONVEX HULL PROBLEMS 11 gorithm [43] and the space-efficient gift-wrapping algorithms of Avis and Fukuda (at least if Bland's pivoting rule is used) <ref> [6] </ref> and Rote [39] require only sidedness queries and second-order comparisons. Matousek [35] and Chan [11] improve the running times of these algorithms (in an output-sensitive sense), by finding the extreme points more quickly. Clarkson [17] describes a similar improvement to a randomized incremental algorithm.
Reference: [7] <author> M. Ben-Or, </author> <title> Lower bounds for algebraic computation trees, </title> <booktitle> in Proc. 15th Annu. ACM Sympos. Theory Comput., </booktitle> <year> 1983, </year> <pages> pp. 80-86. </pages>
Reference-contexts: Yao [48] proved a lower bound of (n log n) on the complexity of identifying the convex hull vertices, in the quadratic decision tree model. This lower bound was later generalized to the algebraic decision tree and algebraic computation tree models by Ben-Or <ref> [7] </ref>. It follows that both Graham's scan and Preparata and Hong's algorithm are optimal in the worst case. <p> This matches known upper bounds when d is odd [15]. The only lower bound previously known for either of these problems is (n log n), following from the techniques of Yao [48] and Ben-Or <ref> [7] </ref>. When the dimension is allowed to vary with the input size, deciding if a convex hull is simplicial is coNP-complete [14, 19], and counting the number of facets is #P-hard [19]. Our lower bounds follow from a straightforward adversary argument. <p> problem. 3sum: Given a set of n distinct integers, do any three sum to zero? This problem can be easily solved in O (n 2 ) time, and this is believed to be optimal, but the best lower bound in any general model of computation is only (n log n) <ref> [7] </ref>. Formally, a problem is 3sum-hard if there is a sub-quadratic reduction from 3sum to the problem in question. <p> We conjecture that these algorithms are optimal; however, the best lower bound in any general model of computation, for any fixed r, is again only (n log n) <ref> [7] </ref>. Higher-dimensional versions of many 3sum-hard problems are rsum-hard for larger values of r. For example, Lemma 2.1 immediately implies that detecting affine degeneracies in IR d is dsum-hard. Theorem 3.1. Deciding whether the convex hull of n points in IR d is simplicial, for any fixed d, is dd=2esum-hard. <p> There are (n dd=2e1 ) collapsible simplices, one for each degenerate facet in conv (! d (X)). Finally, the n log n term follows from the algebraic decision tree lower bound of Ben-Or <ref> [7] </ref>. A three-dimensional version of our construction is illustrated in Figure 4.1. (See also the proof of Theorem 7.4 below.) Our lower bound matches known upper bounds when d is odd [15]. <p> This upper bound can be improved to O (n 2bd=2c=(bd=2c1) polylog n) using an algorithm due to Chan [11]. Except for the polylogarithmic term, this algorithm is almost certainly optimal, but as usual the only known lower bound is (n log n) <ref> [7] </ref>. It seems unlikely that a collapsible simplex argument could be used to imply a reasonable lower bound for this problem. LOWER BOUNDS FOR CONVEX HULL PROBLEMS 15 Another interesting open problem is to strengthen the models in which our lower bounds hold.
Reference: [8] <author> S. Bloch, J. Buss, and J. Goldsmith, </author> <title> How hard are n 2 -hard problems?, </title> <journal> SIGACT News, </journal> <volume> 25 (1994), </volume> <pages> pp. 83-85. </pages>
Reference-contexts: Thus, a sub-quadratic algorithm for any 3sum-hard problem would imply a sub-quadratic algorithm for 3sum, and a sufficiently powerful quadratic lower bound for 3sum would imply similar lower bounds for every 3sum-hard problem. (For this reason, some earlier papers call these problems "n 2 -hard", but see <ref> [8] </ref>.) Examples of 3sum-hard problems include several degeneracy detection, separation, hidden surface removal, and motion planning problems in two and three dimensions.
Reference: [9] <author> S. A. Burr, B. Gr unbaum, and N. J. A. Sloane, </author> <title> The orchard problem, </title> <journal> Geom. Dedicata, </journal> <volume> 2 (1974), </volume> <pages> pp. 397-424. </pages>
Reference-contexts: Acknowledgments: I would like to thank Raimund Seidel for several helpful discussions, David Bremner for pointing out the NP-hardness results in [14, 19], and Jack Snoeyink for pointing out <ref> [9] </ref>.
Reference: [10] <author> T. M. Chan, </author> <title> Optimal output-sensitive convex hull algorithms in two and three dimensions, </title> <journal> Discrete Comput. Geom., </journal> <volume> 16 (1996), </volume> <pages> pp. </pages> <month> 361-368. </month> <title> [11] , Output-sensitive results on convex hulls, extreme points, and related problems, </title> <journal> Discrete Comput. Geom., </journal> <volume> 16 (1996), </volume> <pages> pp. 369-387. </pages>
Reference-contexts: It follows that both Graham's scan and Preparata and Hong's algorithm are optimal in the worst case. If the output size f is also taken into account, the lower bound drops to (n log f ) [34], and a number of algorithms match this bound both in the plane <ref> [34, 12, 10] </ref> and in three dimensions [18, 16, 10]. In higher dimensions, the problem is not quite so completely solved. Seidel's "beneath-beyond" algorithm [41] constructs d-dimensional convex hulls in time O (n dd=2e ). <p> If the output size f is also taken into account, the lower bound drops to (n log f ) [34], and a number of algorithms match this bound both in the plane [34, 12, 10] and in three dimensions <ref> [18, 16, 10] </ref>. In higher dimensions, the problem is not quite so completely solved. Seidel's "beneath-beyond" algorithm [41] constructs d-dimensional convex hulls in time O (n dd=2e ).
Reference: [12] <author> T. M. Chan, J. Snoeyink, and C.-K. Yap, </author> <title> Primal dividing and dual pruning: Output-sensitive construction of 4-d polytopes and 3-d Voronoi diagrams, </title> <journal> Disc. Comput. Geom., </journal> <volume> 18 (1997), </volume> <pages> pp. 433-454. </pages>
Reference-contexts: It follows that both Graham's scan and Preparata and Hong's algorithm are optimal in the worst case. If the output size f is also taken into account, the lower bound drops to (n log f ) [34], and a number of algorithms match this bound both in the plane <ref> [34, 12, 10] </ref> and in three dimensions [18, 16, 10]. In higher dimensions, the problem is not quite so completely solved. Seidel's "beneath-beyond" algorithm [41] constructs d-dimensional convex hulls in time O (n dd=2e ). <p> In 1970, Chand and Ka-pur [13] described a "gift-wrapping" algorithm that constructs convex hulls in arbitrary dimensions in time O (nf ); see also [47]. Seidel's "shelling" algorithm runs in time O (n 2 + f log n) [43]. A divide-and-conquer algorithm of Chan, Snoeyink, and Yap <ref> [12] </ref> constructs four-dimensional hulls in time O ((n + f ) log 2 f ), and a recent improvement by Amato and Ramos [2] constructs five-dimensional hulls in time fl This research was done while the author was a graduate student at U. C. <p> In dimensions higher than five, the fastest algorithms are an improvement of the gift-wrapping algorithm by Chan [11] with running time O (n log f + (nf ) 11=(bd=2c+1) polylog n), an extension of Chan, Snoeyink, and Yap's divide-and-conquer algorithm <ref> [12] </ref> with running time O ((n+(nf ) 11=dd=2e +f n 12=dd=2e ) polylog n), and an improvement of Seidel's shelling algorithm by Matousek [35] with running time O (n 11=(bd=2c+1) polylog n + f log n). For related results, see [6, 13, 17, 18, 34, 45]. <p> Thus, even if we allow a pivoting step to be performed in constant time, our lower bound still holds. There are a few convex hull algorithms which seem to fall outside our framework, most notably the divide-and-conquer algorithm of Chan, Snoeyink, and Yap <ref> [12] </ref>, and its improvement by Amato and Ramos [2].
Reference: [13] <author> D. R. Chand and S. S. Kapur, </author> <title> An algorithm for convex polytopes, </title> <journal> J. ACM, </journal> <volume> 17 (1970), </volume> <pages> pp. 78-86. </pages>
Reference-contexts: Several faster algorithms are known when the output size f is also considered, at least when the input points are in general position. In 1970, Chand and Ka-pur <ref> [13] </ref> described a "gift-wrapping" algorithm that constructs convex hulls in arbitrary dimensions in time O (nf ); see also [47]. Seidel's "shelling" algorithm runs in time O (n 2 + f log n) [43]. <p> For related results, see <ref> [6, 13, 17, 18, 34, 45] </ref>. Except when f is extremely small or extremely large, there are still large gaps between all these upper bounds and the lower bound (n log f + f ). <p> Our Models vs. Real Convex Hull Algorithms. A large number of convex hull algorithms rely (or can be made to rely) exclusively on sidedness queries. These include the "gift-wrapping" algorithms of Chand and Kapur <ref> [13] </ref> and Swart [47], the "beneath-beyond" method of Seidel [41], Clarkson and Shor's [18] and Sei-del's [44] randomized incremental algorithms, Chazelle's worst-case optimal algorithm [15], and the recursive partial-order algorithm of Clarkson [17].
Reference: [14] <author> R. Chandrasekaran, S. N. Kabadi, and K. G. Murty, </author> <title> Some NP-complete problems in linear programming, </title> <journal> Oper. Res. Lett., </journal> <volume> 1 (1982), </volume> <pages> pp. 101-104. </pages>
Reference-contexts: The only lower bound previously known for either of these problems is (n log n), following from the techniques of Yao [48] and Ben-Or [7]. When the dimension is allowed to vary with the input size, deciding if a convex hull is simplicial is coNP-complete <ref> [14, 19] </ref>, and counting the number of facets is #P-hard [19]. Our lower bounds follow from a straightforward adversary argument. We start by constructing a set whose convex hull contains a large number of independent degenerate facets. <p> We can use this fact to to give simple proofs that certain geometric problems in arbitrary dimensions are NP-hard. For example, Khachiyan [33] proves that detecting affine degeneracies is NP-complete. This result follows directly from Lemma 2.1. Chandrasekaran et al. <ref> [14] </ref> and Dyer [19] independently prove that deciding whether the convex hull of a set of points is simplicial is coNP-complete; this result also follows immediately from Theorem 3.1. Moreover, since the reductions are parsimonious [28], the corresponding counting problems (how many degenerate simplices/facets?) are #P-complete. 4. <p> Acknowledgments: I would like to thank Raimund Seidel for several helpful discussions, David Bremner for pointing out the NP-hardness results in <ref> [14, 19] </ref>, and Jack Snoeyink for pointing out [9].
Reference: [15] <author> B. Chazelle, </author> <title> An optimal convex hull algorithm in any fixed dimension, </title> <journal> Discrete Comput. Geom., </journal> <volume> 10 (1993), </volume> <pages> pp. 377-409. </pages>
Reference-contexts: In higher dimensions, the problem is not quite so completely solved. Seidel's "beneath-beyond" algorithm [41] constructs d-dimensional convex hulls in time O (n dd=2e ). After a ten-year wait, Chazelle <ref> [15] </ref> improved the running time to O (n bd=2c ) by deran-domizing a randomized incremental algorithm of Clarkson and Shor [18]; see also [44]. <p> This matches known upper bounds when d is odd <ref> [15] </ref>. The only lower bound previously known for either of these problems is (n log n), following from the techniques of Yao [48] and Ben-Or [7]. <p> Finally, the n log n term follows from the algebraic decision tree lower bound of Ben-Or [7]. A three-dimensional version of our construction is illustrated in Figure 4.1. (See also the proof of Theorem 7.4 below.) Our lower bound matches known upper bounds when d is odd <ref> [15] </ref>. <p> These include the "gift-wrapping" algorithms of Chand and Kapur [13] and Swart [47], the "beneath-beyond" method of Seidel [41], Clarkson and Shor's [18] and Sei-del's [44] randomized incremental algorithms, Chazelle's worst-case optimal algorithm <ref> [15] </ref>, and the recursive partial-order algorithm of Clarkson [17]. Seidel's "shelling" al LOWER BOUNDS FOR CONVEX HULL PROBLEMS 11 gorithm [43] and the space-efficient gift-wrapping algorithms of Avis and Fukuda (at least if Bland's pivoting rule is used) [6] and Rote [39] require only sidedness queries and second-order comparisons.
Reference: [16] <author> B. Chazelle and J. Matou sek, </author> <title> Derandomizing an output-sensitive convex hull algorithm in three dimensions, </title> <journal> Comput. Geom. Theory Appl., </journal> <volume> 5 (1995), </volume> <pages> pp. 27-32. </pages>
Reference-contexts: If the output size f is also taken into account, the lower bound drops to (n log f ) [34], and a number of algorithms match this bound both in the plane [34, 12, 10] and in three dimensions <ref> [18, 16, 10] </ref>. In higher dimensions, the problem is not quite so completely solved. Seidel's "beneath-beyond" algorithm [41] constructs d-dimensional convex hulls in time O (n dd=2e ).
Reference: [17] <author> K. L. Clarkson, </author> <title> More output-sensitive geometric algorithms, </title> <booktitle> in Proc. 35th Annu. IEEE Sym-pos. </booktitle> <institution> Found. Comput. Sci., </institution> <year> 1994, </year> <pages> pp. 695-702. </pages>
Reference-contexts: For related results, see <ref> [6, 13, 17, 18, 34, 45] </ref>. Except when f is extremely small or extremely large, there are still large gaps between all these upper bounds and the lower bound (n log f + f ). <p> These include the "gift-wrapping" algorithms of Chand and Kapur [13] and Swart [47], the "beneath-beyond" method of Seidel [41], Clarkson and Shor's [18] and Sei-del's [44] randomized incremental algorithms, Chazelle's worst-case optimal algorithm [15], and the recursive partial-order algorithm of Clarkson <ref> [17] </ref>. Seidel's "shelling" al LOWER BOUNDS FOR CONVEX HULL PROBLEMS 11 gorithm [43] and the space-efficient gift-wrapping algorithms of Avis and Fukuda (at least if Bland's pivoting rule is used) [6] and Rote [39] require only sidedness queries and second-order comparisons. <p> Matousek [35] and Chan [11] improve the running times of these algorithms (in an output-sensitive sense), by finding the extreme points more quickly. Clarkson <ref> [17] </ref> describes a similar improvement to a randomized incremental algorithm. Since every point in our adversary configuration is extreme, our lower bound still holds even if the extremity of a point can be decided for free.
Reference: [18] <author> K. L. Clarkson and P. W. Shor, </author> <title> Applications of random sampling in computational geometry, II, </title> <journal> Discrete Comput. Geom., </journal> <volume> 4 (1989), </volume> <pages> pp. 387-421. </pages> <note> 16 JEFF ERICKSON </note>
Reference-contexts: If the output size f is also taken into account, the lower bound drops to (n log f ) [34], and a number of algorithms match this bound both in the plane [34, 12, 10] and in three dimensions <ref> [18, 16, 10] </ref>. In higher dimensions, the problem is not quite so completely solved. Seidel's "beneath-beyond" algorithm [41] constructs d-dimensional convex hulls in time O (n dd=2e ). <p> Seidel's "beneath-beyond" algorithm [41] constructs d-dimensional convex hulls in time O (n dd=2e ). After a ten-year wait, Chazelle [15] improved the running time to O (n bd=2c ) by deran-domizing a randomized incremental algorithm of Clarkson and Shor <ref> [18] </ref>; see also [44]. Since an n-vertex polytope in IR d can have (n bd=2c ) facets [27], Seidel's algorithm is optimal in even dimensions, and Chazelle's algorithm is optimal in all dimensions, in the worst case. <p> For related results, see <ref> [6, 13, 17, 18, 34, 45] </ref>. Except when f is extremely small or extremely large, there are still large gaps between all these upper bounds and the lower bound (n log f + f ). <p> Our Models vs. Real Convex Hull Algorithms. A large number of convex hull algorithms rely (or can be made to rely) exclusively on sidedness queries. These include the "gift-wrapping" algorithms of Chand and Kapur [13] and Swart [47], the "beneath-beyond" method of Seidel [41], Clarkson and Shor's <ref> [18] </ref> and Sei-del's [44] randomized incremental algorithms, Chazelle's worst-case optimal algorithm [15], and the recursive partial-order algorithm of Clarkson [17].
Reference: [19] <author> M. E. Dyer, </author> <title> The complexity of vertex enumeration methods, </title> <journal> Math. Oper. Res., </journal> <volume> 8 (1983), </volume> <pages> pp. 381-402. </pages>
Reference-contexts: The only lower bound previously known for either of these problems is (n log n), following from the techniques of Yao [48] and Ben-Or [7]. When the dimension is allowed to vary with the input size, deciding if a convex hull is simplicial is coNP-complete <ref> [14, 19] </ref>, and counting the number of facets is #P-hard [19]. Our lower bounds follow from a straightforward adversary argument. We start by constructing a set whose convex hull contains a large number of independent degenerate facets. <p> When the dimension is allowed to vary with the input size, deciding if a convex hull is simplicial is coNP-complete [14, 19], and counting the number of facets is #P-hard <ref> [19] </ref>. Our lower bounds follow from a straightforward adversary argument. We start by constructing a set whose convex hull contains a large number of independent degenerate facets. <p> We can use this fact to to give simple proofs that certain geometric problems in arbitrary dimensions are NP-hard. For example, Khachiyan [33] proves that detecting affine degeneracies is NP-complete. This result follows directly from Lemma 2.1. Chandrasekaran et al. [14] and Dyer <ref> [19] </ref> independently prove that deciding whether the convex hull of a set of points is simplicial is coNP-complete; this result also follows immediately from Theorem 3.1. Moreover, since the reductions are parsimonious [28], the corresponding counting problems (how many degenerate simplices/facets?) are #P-complete. 4. Lower Bounds for Convex Hull Problems. <p> Acknowledgments: I would like to thank Raimund Seidel for several helpful discussions, David Bremner for pointing out the NP-hardness results in <ref> [14, 19] </ref>, and Jack Snoeyink for pointing out [9].
Reference: [20] <author> P. Erd -os and G. Purdy, </author> <title> Two combinatorial problems in the plane, </title> <journal> Discrete Comput. Geom., </journal> <volume> 13 (1995), </volume> <pages> pp. 441-443. </pages>
Reference: [21] <author> J. Erickson, </author> <title> Lower bounds for linear satisfiability problems, </title> <booktitle> in Proc. 6th ACM-SIAM Sympos. Discrete Algorithms, </booktitle> <year> 1995, </year> <pages> pp. </pages> <month> 388-395. </month> <title> [22] , New lower bounds for convex hull problems in odd dimensions, </title> <booktitle> in Proc. 12th Annu. ACM Sympos. </booktitle> <institution> Comput. Geom., </institution> <year> 1996, </year> <pages> pp. 1-9. </pages>
Reference-contexts: In particular, Theorem 3.1 tells us absolutely nothing about the four-dimensional case, since we already have a lower bound of (n log n) in all dimensions. In an earlier paper <ref> [21] </ref>, we derive an (n dr=2e ) lower bound for rsum in the r-linear decision tree model. In this model, decisions are based on the signs of arbitrary affine combinations of r or fewer input variables. <p> be solved in O (n dd=4e ) time if dd=2e is odd, and in O (n dd=4e log n) time if dd=2e is even, by an algorithm that uses more complicated queries not allowed by Theorem 4.2, namely, evaluating the signs of certain linear combinations of x 1 -coordinates. (See <ref> [21] </ref>.) The convex hull of the adversary configuration ! d (X 0 ) has dd=2e 1 more facets than the convex hull of any collapsed configuration. Thus, we immediately have the following lower bound. 8 JEFF ERICKSON (a) (b) (c) Fig. 4.1. Our adversary construction in three dimensions. <p> Quadratic lower bounds for either the five-dimensional convex hull problem or the two-dimensional affine degeneracy problem in stronger models of computation would imply similar lower bounds for a number of other 3sum-hard problems. While the lower bounds we prove here and in earlier papers <ref> [23, 21] </ref> are in fairly natural models, there are still 3sum-hard problems that cannot even be solved in these models. For example, one of the simplest problems for which our techniques fail is finding the minimum area triangle determined by a set of points in the plane.
Reference: [23] <author> J. Erickson and R. Seidel, </author> <title> Better lower bounds on detecting affine and spherical degeneracies, </title> <journal> Discrete Comput. Geom., </journal> <volume> 13 (1995), </volume> <pages> pp. </pages> <month> 41-57. </month> <title> [24] , Erratum to "Better lower bounds on detecting affine and sphereical degeneracies", </title> <journal> Discrete Comput. Geom., </journal> <volume> 18 (1997), </volume> <pages> pp. 239-240. </pages>
Reference-contexts: An adversary can reintroduce any one of the degenerate facets, by moving its vertices back to their original position, without changing the result of any other sidedness query. Our argument is similar to earlier arguments of Erickson and Seidel <ref> [23] </ref>; however, many of the the proofs in that paper were flawed [24]. Our proof technique yields correct and very simple proofs of Erickson and Seidel's claimed lower bounds for affine degeneracy detection in arbitrary dimensions and circular degeneracy detection in the plane. The paper is organized as follows. <p> There are at least n = (n d ) such simplices. If d 3, the original point set and each collapsed point set is in convex position. Erickson and Seidel <ref> [23] </ref> prove an (n d ) lower bound for a restricted problem: Do any d + 1 points lie on a nonvertical hyperplane? Except in the two-dimensional case, where an explicit adversary construction is given, their extension to the general problem is flawed [24]. <p> Thus, we cannot hope to prove a lower bound bigger than n 2 =3 + (n) using collapsible triangles. 7.3. Circular Degeneracies. We also easily prove the following related theorem first proven in <ref> [23] </ref>. A set of points in the plane is circularly degenerate if any four points lie on a circle. <p> For example, in three dimensions, we need (n 4 ) 5-tuples in the zeroset of the polynomial 1 + 1ij5 Erickson and Seidel <ref> [23] </ref> prove that (n d+1 ) in-sphere queries are required to detect proper spherical degeneracies, i.e., sets of d + 2 points on a sphere of finite radius, but their proof for the general problem was flawed [24]. <p> Quadratic lower bounds for either the five-dimensional convex hull problem or the two-dimensional affine degeneracy problem in stronger models of computation would imply similar lower bounds for a number of other 3sum-hard problems. While the lower bounds we prove here and in earlier papers <ref> [23, 21] </ref> are in fairly natural models, there are still 3sum-hard problems that cannot even be solved in these models. For example, one of the simplest problems for which our techniques fail is finding the minimum area triangle determined by a set of points in the plane.
Reference: [25] <author> Z. F uredi and I. Pal asti, </author> <title> Arrangements of lines with a large number of triangles, </title> <journal> Proc. Amer. Math. Soc., </journal> <volume> 92 (1984), </volume> <pages> pp. 561-566. </pages>
Reference-contexts: An Alternate Proof in Two Dimensions. A. H. Stone observed that a set of n integer points on the unit cubic can have n 2 =8 collinear triples [31]. Furedi and Palasti <ref> [25] </ref> discovered an elegant construction, which we describe below, that improves this lower bound to roughly n 2 =6. We can use their construction to slightly improve our lower bound for the two-dimensional affine degeneracy problem.
Reference: [26] <author> A. Gajentaan and M. H. Overmars, </author> <title> On a class of O(n 2 ) problems in computational geometry, </title> <journal> Comput. Geom. Theory Appl., </journal> <volume> 5 (1995), </volume> <pages> pp. 165-185. </pages>
Reference-contexts: It follows that f (y) and f (z) both have the same sign if and only if an even number of x i 's lie between y and z. 3. dd=2eSUM Hardness. Gajentaan and Overmars <ref> [26] </ref> define the class of 3 sum-hard problems, all of which are harder than the following base problem. 3sum: Given a set of n distinct integers, do any three sum to zero? This problem can be easily solved in O (n 2 ) time, and this is believed to be optimal,
Reference: [27] <author> D. Gale, </author> <title> Neighborly and cyclic polytopes, in Convexity, </title> <editor> V. Klee, ed., </editor> <volume> no. </volume> <booktitle> VII in Proc. Symposia in Pure Mathematics, </booktitle> <publisher> Amer. Math. Soc., </publisher> <year> 1963, </year> <pages> pp. 225-232. </pages>
Reference-contexts: After a ten-year wait, Chazelle [15] improved the running time to O (n bd=2c ) by deran-domizing a randomized incremental algorithm of Clarkson and Shor [18]; see also [44]. Since an n-vertex polytope in IR d can have (n bd=2c ) facets <ref> [27] </ref>, Seidel's algorithm is optimal in even dimensions, and Chazelle's algorithm is optimal in all dimensions, in the worst case. Several faster algorithms are known when the output size f is also considered, at least when the input points are in general position. <p> A determinantal formula for Schur polynomials was discovered by Jacobi in the mid-1800's [32]. 1 The next lemma characterizes degenerate convex hull facets on the weird moment curve. The result is similar to Gale's "evenness condition" <ref> [27] </ref>, which describes which vertices of a cyclic polytope form its facets. Lemma 2.2. Let X be a set of real numbers, and let x 0 &lt; x 1 &lt; &lt; x d be elements of X such that P d i=0 x i = 0.
Reference: [28] <author> M. R. Garey and D. S. Johnson, </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness, </title> <editor> W. H. </editor> <publisher> Freeman, </publisher> <address> New York, NY, </address> <year> 1979. </year>
Reference-contexts: In the next section of the paper, we derive such lower bounds directly. Remark: If r is not fixed, the problem rsum is NP-complete, by a simple reduction to Subset Sum <ref> [28] </ref>. We can use this fact to to give simple proofs that certain geometric problems in arbitrary dimensions are NP-hard. For example, Khachiyan [33] proves that detecting affine degeneracies is NP-complete. This result follows directly from Lemma 2.1. <p> This result follows directly from Lemma 2.1. Chandrasekaran et al. [14] and Dyer [19] independently prove that deciding whether the convex hull of a set of points is simplicial is coNP-complete; this result also follows immediately from Theorem 3.1. Moreover, since the reductions are parsimonious <ref> [28] </ref>, the corresponding counting problems (how many degenerate simplices/facets?) are #P-complete. 4. Lower Bounds for Convex Hull Problems. Our main result is based on the following combinatorial construction. Lemma 4.1.
Reference: [29] <author> R. L. Graham, </author> <title> An efficient algorithm for determining the convex hull of a finite planar set, </title> <journal> Inform. Process. Lett., </journal> <volume> 1 (1972), </volume> <pages> pp. 132-133. </pages>
Reference-contexts: Over twenty years ago, Graham described an algorithm that constructs the convex hull of n points in the plane in O (n log n) time <ref> [29] </ref>. The same running time was first achieved in three dimensions by Preparata and Hong [38]. Yao [48] proved a lower bound of (n log n) on the complexity of identifying the convex hull vertices, in the quadratic decision tree model.
Reference: [30] <author> B. Gr unbaum, </author> <title> Convex Polytopes, </title> <publisher> Wiley, </publisher> <address> New York, NY, </address> <year> 1967. </year> <note> Revised edition, </note> <editor> V. Klee and P. Kleinschmidt, editors, </editor> <title> Graduate Texts in Mathematics, </title> <note> Springer-Verlag, in preparation. [31] , Arrangements and Spreads, no. 10 in Regional Conf. Ser. Math., Amer. </note> <institution> Math. Soc., Providence, RI, </institution> <year> 1972. </year>
Reference-contexts: Finally, in Section 8, we summarize and suggest directions for further research. 2. Geometric Preliminaries. 2.1. Definitions. We begin by reviewing basic terminology from the theory of convex polytopes. For a more detailed introduction, we refer the reader to Ziegler [49] or Grunbaum <ref> [30] </ref>. The convex hull of a set of points is the smallest convex set that contains it. A polytope is the convex hull of a finite set of points.
Reference: [32] <author> C. G. J. Jacobi, De functionibus alternantibus earumque divisione per productum e differentiis elementorum conflatum, J. </author> <title> Reine Angew. </title> <journal> Mathematik, </journal> <volume> 22 (1841), </volume> <pages> pp. 360-371. </pages> <note> Reprinted in Gesammelten Werke III, </note> <editor> G. Reimer, </editor> <address> Berlin, </address> <month> 1884. </month>
Reference-contexts: If we replace the weird moment curve by any polynomial curve, the orientation of a simplex is given by the sign of a symmetric Schur polynomial [40]. A determinantal formula for Schur polynomials was discovered by Jacobi in the mid-1800's <ref> [32] </ref>. 1 The next lemma characterizes degenerate convex hull facets on the weird moment curve. The result is similar to Gale's "evenness condition" [27], which describes which vertices of a cyclic polytope form its facets. Lemma 2.2.
Reference: [33] <author> L. Khachiyan, </author> <title> On the complexity of approximating determinants in matrices, </title> <journal> J. Complexity, </journal> <volume> 11 (1995), </volume> <pages> pp. 138-153. </pages>
Reference-contexts: Remark: If r is not fixed, the problem rsum is NP-complete, by a simple reduction to Subset Sum [28]. We can use this fact to to give simple proofs that certain geometric problems in arbitrary dimensions are NP-hard. For example, Khachiyan <ref> [33] </ref> proves that detecting affine degeneracies is NP-complete. This result follows directly from Lemma 2.1. Chandrasekaran et al. [14] and Dyer [19] independently prove that deciding whether the convex hull of a set of points is simplicial is coNP-complete; this result also follows immediately from Theorem 3.1.
Reference: [34] <author> D. G. Kirkpatrick and R. Seidel, </author> <title> The ultimate planar convex hull algorithm?, </title> <journal> SIAM J. Comput., </journal> <volume> 15 (1986), </volume> <pages> pp. 287-299. </pages>
Reference-contexts: It follows that both Graham's scan and Preparata and Hong's algorithm are optimal in the worst case. If the output size f is also taken into account, the lower bound drops to (n log f ) <ref> [34] </ref>, and a number of algorithms match this bound both in the plane [34, 12, 10] and in three dimensions [18, 16, 10]. In higher dimensions, the problem is not quite so completely solved. Seidel's "beneath-beyond" algorithm [41] constructs d-dimensional convex hulls in time O (n dd=2e ). <p> It follows that both Graham's scan and Preparata and Hong's algorithm are optimal in the worst case. If the output size f is also taken into account, the lower bound drops to (n log f ) [34], and a number of algorithms match this bound both in the plane <ref> [34, 12, 10] </ref> and in three dimensions [18, 16, 10]. In higher dimensions, the problem is not quite so completely solved. Seidel's "beneath-beyond" algorithm [41] constructs d-dimensional convex hulls in time O (n dd=2e ). <p> For related results, see <ref> [6, 13, 17, 18, 34, 45] </ref>. Except when f is extremely small or extremely large, there are still large gaps between all these upper bounds and the lower bound (n log f + f ).
Reference: [35] <author> J. Matou sek, </author> <title> Linear optimization queries, </title> <journal> J. Algorithms, </journal> <volume> 14 (1993), </volume> <pages> pp. 432-448. </pages>
Reference-contexts: gift-wrapping algorithm by Chan [11] with running time O (n log f + (nf ) 11=(bd=2c+1) polylog n), an extension of Chan, Snoeyink, and Yap's divide-and-conquer algorithm [12] with running time O ((n+(nf ) 11=dd=2e +f n 12=dd=2e ) polylog n), and an improvement of Seidel's shelling algorithm by Matousek <ref> [35] </ref> with running time O (n 11=(bd=2c+1) polylog n + f log n). For related results, see [6, 13, 17, 18, 34, 45]. <p> Seidel's "shelling" al LOWER BOUNDS FOR CONVEX HULL PROBLEMS 11 gorithm [43] and the space-efficient gift-wrapping algorithms of Avis and Fukuda (at least if Bland's pivoting rule is used) [6] and Rote [39] require only sidedness queries and second-order comparisons. Matousek <ref> [35] </ref> and Chan [11] improve the running times of these algorithms (in an output-sensitive sense), by finding the extreme points more quickly. Clarkson [17] describes a similar improvement to a randomized incremental algorithm. <p> The four-dimensional version of their algorithm uses primitives involving up to 22 points. 2 Higher-dimensional versions of their algorithm require the use of linear programming queries and ray-shooting queries in certain (d 1)-dimensional projections of the input; the fastest known algorithms to answer these queries <ref> [1, 11, 35, 36] </ref> do not even fit into the algebraic decision tree model. 7. Related Problems. 7.1. Affine Degeneracies. Theorem 7.1. Any decision tree that decides whether a set of n points in IR d is affinely nondegenerate, using only sidedness queries, must have depth (n d ).
Reference: [36] <author> J. Matou sek and O. Schwarzkopf, </author> <title> On ray shooting in convex polytopes, </title> <journal> Discrete Comput. Geom., </journal> <volume> 10 (1993), </volume> <pages> pp. 215-232. </pages>
Reference-contexts: Chan [11] describes an improvement of the gift-wrapping algorithm that uses ray shooting data structures of Agarwal and Matousek [1] and Matousek and Schwarzkopf <ref> [36] </ref> to speed up the pivoting step. In each pivoting step, the gift-wrapping algorithm finds a new facet containing a given ridge of the convex hull. In the dual, this is equivalent to shooting a ray from a vertex of the dual polytope along one of its outgoing edges. <p> The four-dimensional version of their algorithm uses primitives involving up to 22 points. 2 Higher-dimensional versions of their algorithm require the use of linear programming queries and ray-shooting queries in certain (d 1)-dimensional projections of the input; the fastest known algorithms to answer these queries <ref> [1, 11, 35, 36] </ref> do not even fit into the algebraic decision tree model. 7. Related Problems. 7.1. Affine Degeneracies. Theorem 7.1. Any decision tree that decides whether a set of n points in IR d is affinely nondegenerate, using only sidedness queries, must have depth (n d ).
Reference: [37] <author> N. Megiddo, </author> <title> Linear programming in linear time when the dimension is fixed, </title> <journal> J. ACM, </journal> <volume> 31 (1984), </volume> <pages> pp. 114-127. </pages>
Reference-contexts: Another similar problem is deciding, given a set of points, which ones are vertices of the set's convex hull. This problem can be decided in O (n 2 ) time (using only sidedness queries!) by invoking a linear-time linear programming algorithm once for each point <ref> [37] </ref>. This upper bound can be improved to O (n 2bd=2c=(bd=2c1) polylog n) using an algorithm due to Chan [11]. Except for the polylogarithmic term, this algorithm is almost certainly optimal, but as usual the only known lower bound is (n log n) [7].
Reference: [38] <author> F. P. Preparata and S. J. Hong, </author> <title> Convex hulls of finite sets of points in two and three dimensions, </title> <journal> Commun. ACM, </journal> <volume> 20 (1977), </volume> <pages> pp. 87-93. </pages>
Reference-contexts: Over twenty years ago, Graham described an algorithm that constructs the convex hull of n points in the plane in O (n log n) time [29]. The same running time was first achieved in three dimensions by Preparata and Hong <ref> [38] </ref>. Yao [48] proved a lower bound of (n log n) on the complexity of identifying the convex hull vertices, in the quadratic decision tree model. This lower bound was later generalized to the algebraic decision tree and algebraic computation tree models by Ben-Or [7].
Reference: [39] <author> G. </author> <title> Rote, Degenerate convex hulls in high dimensions without extra storage, </title> <booktitle> in Proc. 8th Annu. ACM Sympos. </booktitle> <institution> Comput. Geom., </institution> <year> 1992, </year> <pages> pp. 26-32. </pages>
Reference-contexts: Seidel's "shelling" al LOWER BOUNDS FOR CONVEX HULL PROBLEMS 11 gorithm [43] and the space-efficient gift-wrapping algorithms of Avis and Fukuda (at least if Bland's pivoting rule is used) [6] and Rote <ref> [39] </ref> require only sidedness queries and second-order comparisons. Matousek [35] and Chan [11] improve the running times of these algorithms (in an output-sensitive sense), by finding the extreme points more quickly. Clarkson [17] describes a similar improvement to a randomized incremental algorithm.
Reference: [40] <author> I. </author> <title> Schur, Uber eine Klasse von Matrizen, die sich einer gegebenen Matrix zuordnen lassen, </title> <type> thesis, </type> <address> Berlin, </address> <year> 1901. </year> <note> Reprinted in Gesammelte Abhandlungen, Springer, </note> <year> 1973. </year>
Reference-contexts: If we replace the weird moment curve by any polynomial curve, the orientation of a simplex is given by the sign of a symmetric Schur polynomial <ref> [40] </ref>. A determinantal formula for Schur polynomials was discovered by Jacobi in the mid-1800's [32]. 1 The next lemma characterizes degenerate convex hull facets on the weird moment curve. The result is similar to Gale's "evenness condition" [27], which describes which vertices of a cyclic polytope form its facets.

Reference: [46] <author> J. Stolfi, </author> <title> Oriented Projective Geometry: A Framework for Geometric Computations, </title> <publisher> Academic Press, </publisher> <address> New York, NY, </address> <year> 1991. </year>
Reference-contexts: If we represent the points of IR d in homogeneous coordinates, a projective transformation is equivalent to a linear transformation of IR d+1 . In Stolfi's two-sided projective model <ref> [46] </ref>, projective maps preserve (or reverse) the orientation of every simplex in IR d , and thus preserve the combinatorial structure of convex hulls. See Chapter 14 of [46]. Let X be the set of numbers described in the proof of Lemma 4.1. <p> In Stolfi's two-sided projective model <ref> [46] </ref>, projective maps preserve (or reverse) the orientation of every simplex in IR d , and thus preserve the combinatorial structure of convex hulls. See Chapter 14 of [46]. Let X be the set of numbers described in the proof of Lemma 4.1. We call an algebraic query allowable if for some projective transformation , the configuration (! d (X)) is nondegenerate with respect to that query. Our choice of terminology is justified by the following theorem.
Reference: [47] <author> G. F. Swart, </author> <title> Finding the convex hull facet by facet, </title> <journal> J. Algorithms, </journal> <volume> 6 (1985), </volume> <pages> pp. 17-48. </pages>
Reference-contexts: Several faster algorithms are known when the output size f is also considered, at least when the input points are in general position. In 1970, Chand and Ka-pur [13] described a "gift-wrapping" algorithm that constructs convex hulls in arbitrary dimensions in time O (nf ); see also <ref> [47] </ref>. Seidel's "shelling" algorithm runs in time O (n 2 + f log n) [43]. <p> Our Models vs. Real Convex Hull Algorithms. A large number of convex hull algorithms rely (or can be made to rely) exclusively on sidedness queries. These include the "gift-wrapping" algorithms of Chand and Kapur [13] and Swart <ref> [47] </ref>, the "beneath-beyond" method of Seidel [41], Clarkson and Shor's [18] and Sei-del's [44] randomized incremental algorithms, Chazelle's worst-case optimal algorithm [15], and the recursive partial-order algorithm of Clarkson [17].
Reference: [48] <author> A. C. Yao, </author> <title> A lower bound to finding convex hulls, </title> <journal> J. ACM, </journal> <volume> 28 (1981), </volume> <pages> pp. 780-787. </pages>
Reference-contexts: Over twenty years ago, Graham described an algorithm that constructs the convex hull of n points in the plane in O (n log n) time [29]. The same running time was first achieved in three dimensions by Preparata and Hong [38]. Yao <ref> [48] </ref> proved a lower bound of (n log n) on the complexity of identifying the convex hull vertices, in the quadratic decision tree model. This lower bound was later generalized to the algebraic decision tree and algebraic computation tree models by Ben-Or [7]. <p> This matches known upper bounds when d is odd [15]. The only lower bound previously known for either of these problems is (n log n), following from the techniques of Yao <ref> [48] </ref> and Ben-Or [7]. When the dimension is allowed to vary with the input size, deciding if a convex hull is simplicial is coNP-complete [14, 19], and counting the number of facets is #P-hard [19]. Our lower bounds follow from a straightforward adversary argument.
Reference: [49] <author> G. M. Ziegler, </author> <title> Lectures on Polytopes, no. 152 in Graduate Texts in Mathematics, </title> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: Finally, in Section 8, we summarize and suggest directions for further research. 2. Geometric Preliminaries. 2.1. Definitions. We begin by reviewing basic terminology from the theory of convex polytopes. For a more detailed introduction, we refer the reader to Ziegler <ref> [49] </ref> or Grunbaum [30]. The convex hull of a set of points is the smallest convex set that contains it. A polytope is the convex hull of a finite set of points. <p> This result is the best possible when d is odd, since an odd-dimensional n-vertex polytope has at most O (n (d1)=2 ) facets <ref> [49] </ref>. In the case where d is even, the best known upper bound is O (n d=2 ), which is a factor of n bigger than the result we prove here. We conjecture that this upper bound is tight.
References-found: 39

