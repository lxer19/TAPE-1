URL: http://www.csc.ncsu.edu/eos/users/s/stamant/www/papers/aaai99.ps
Refering-URL: http://www.csc.ncsu.edu/eos/users/s/stamant/www/home.html
Root-URL: http://www.csc.ncsu.edu
Email: stamant@csc.ncsu.edu  
Title: Physical schemas for planning domain analysis  
Author: Robert St. Amant 
Address: Box 7534 Raleigh, NC 27695-7534  
Affiliation: Department of Computer Science North Carolina State University  
Abstract: Analysis of a planning domain has been shown to produce information that can greatly reduce the space of plans a controller must search through. Domain analysis is generally based on the logical inferences one can make given a set of planning operators and sometimes information about goals. An alternative heuristic approach is possible as well. We have developed a small set of physical schemas for classifying operators in planning domains. We show how they perform on some commonly available domains and describe how this information can help to explain the structure of a plan in physical, task-oriented terms. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Atkin, M.; Westbrook, D. L.; Cohen, P. R.; and Jorstad, G. D. </author> <year> 1998. </year> <title> Afs and hac: Domain-general agent simulation and control. </title> <booktitle> In AAAI-98 Workshop on Software Tools for Developing Agents, </booktitle> <pages> 89-95. </pages>
Reference-contexts: AFS During the past year we have been working with the Abstract Force Simulator, a general-purpose simulation system that supports experimentation with interactive, distributed planning techniques and their relationship to physical processes <ref> (Atkin et al. 1998) </ref>. AFS provides a physical domain for objects to interact in, based in general on Newtonian physics.
Reference: <author> Ferguson, G., and Allen, J. </author> <year> 1998. </year> <title> TRIPS: An intelligent integrated problem-solving assistant. </title> <booktitle> In Proceedings of the Fifteenth National Conference on Artificial Intelligence. </booktitle>
Reference-contexts: For many collaborative planning systems, even those based on domain-independent planners, the interaction must take place in the environment of a domain-dependent user interface; trips is one familiar example <ref> (Ferguson & Allen 1998) </ref>.
Reference: <author> Gerevini, A., and Schubert, L. </author> <year> 1998. </year> <title> Inferring state constraints for domain-independent planning. </title> <booktitle> In Proceedings of the Fifteenth National Conference on Artificial Intelligence, </booktitle> <pages> 905-912. </pages>
Reference-contexts: In other, simpler domains, the operator may assume that all locations are adjacent to all others, and either asserts or assumes that the current location and new location are not identical. This kind of information is not always explicit but can often be automatically derived (as an implicative constraint <ref> (Gerevini & Schubert 1998) </ref>); our classifier does not do such processing. An example of a movement operator is given in Figure 1, with the relevant terms in boldface.
Reference: <author> Ghallab, M.; Howe, A.; Knoblock, C.; McDermott, D.; Ram, A.; Veloso, M.; Weld, D.; and Wilkins, D. </author> <year> 1998. </year> <title> PDDL|The Planning Domain Definition Language. </title> <note> AIPS-98 Planning Committee. </note>
Reference-contexts: These templates capture problem space representations of movement, ordering, accessibility, operator pairs, and other types of operators. We give a sample of their results for some of the ucpop domains supplied with the pddl specification software <ref> (Ghallab et al. 1998) </ref>. In the plan interpretation section we describe how these templates can be used to generate descriptions of plans. The resulting descriptions do not provide major abstractions, but they do create a useful link between predicates and physical concepts. <p> Does this apparent generality extend to conventional domain-independent planning? We discuss this issue in the next two sections. Classifying operators A set of planning operators represents the physics of a domain <ref> (Ghallab et al. 1998) </ref>. This physics is commonly much more abstract than that described for AFS. <p> Such aspects, present to some extent in most planning domains, motivate our development of a relatively simple set of operator classifiers to analyze the structure of an operator in isolation or in comparison to other operators in a domain. The classifiers parse operators in pddl format <ref> (Ghallab et al. 1998) </ref>, handling conditionals but not quantification. In the symbolic description of each classifier, we assume that each operator has a precondition and an effect, each of which is a conjunction of predicates, accessible through the functions p (M ) and e (M ).
Reference: <author> Lakoff, G. </author> <year> 1984. </year> <title> Women, Fire, and Dangerous Things. </title> <publisher> University of Chicago Press. </publisher>
Reference-contexts: In another sense, however, this knowledge is extremely general: some researchers have argued that our experience with physical objects and environments provides the foundation for our understanding of more abstract concepts, via metaphor <ref> (Lakoff 1984) </ref>. The domains we encounter in planning research reflect our natural interest in physical domains. <p> One of the ways people use their physical understanding of a situation is to organize relevant information. Imagine a long, staged sequence of movement and ordering operators, for example, that I can summarize by aggregating into gathering objects, carrying them, and distributing them again|the container/conduit metaphor <ref> (Lakoff 1984) </ref>. The added structure, imposed by a physical interpretation of the operators, can make plans easier to understand. We have developed a small number of methods for automatically generating descriptions of totally ordered plans, using the classifications of their operators.
Reference: <author> McDermott, D. </author> <year> 1996. </year> <title> A heuristic estimator for means-ends analysis in planning. </title> <booktitle> In Proceedings of the Third International Conference on Artificial Intelligence Planning Systems. </booktitle>
Reference: <author> McDermott, D. </author> <year> 1997. </year> <title> Using regression-match graphs to control search in planning. Under review. </title>
Reference: <author> Weld, D. S. </author> <year> 1999. </year> <title> Recent advances in ai planning. </title> <journal> AI Magazine. </journal> <note> To appear. </note>
Reference-contexts: Introduction Planning algorithms have taken dramatic steps over the past few years. Modern planning algorithms such as GraphPlan and SAT-based algorithms can solve problems that are orders of magnitude more difficult than earlier algorithms <ref> (Weld 1999) </ref>. Still, as might be expected, many large or difficult problems remain beyond the abilities of the current generation of planners, and may always do so. <p> The second set of techniques infers predicate domains, co-occurrences of predicate arguments. Weld briefly discusses other approaches to domain analysis <ref> (Weld 1999) </ref>. Our work has similar aims, and could benefit from these techniques. One difference is that instead of examining heuristics that classes of planners find helpful, we are interested in general-purpose heuristic knowledge about common tasks that can impose external structure on plans.

References-found: 8

