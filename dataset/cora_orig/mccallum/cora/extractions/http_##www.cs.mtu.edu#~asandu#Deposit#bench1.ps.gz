URL: http://www.cs.mtu.edu/~asandu/Deposit/bench1.ps.gz
Refering-URL: http://www.cs.mtu.edu/~asandu/publications.html
Root-URL: http://www.cs.mtu.edu
Email: (sandu@cgrer.uiowa.edu)  (janv@cwi.nl)  (vanloon@cwi.nl)  (gcarmich@icaen.uiowa.edu)  (potra@math.uiowa.edu)  (dabdub@masaya.eng.uci.edu)  seinfeld@starbase1.caltech.edu)  
Title: Benchmarking Stiff ODE Solvers for Atmospheric Chemistry Problems I: Implicit versus Explicit  
Author: A. Sandu J.G. Verwer M. van Loon G.R. Carmichael F.A. Potra D. Dabdub k J.H. Seinfeld flfl k (john 
Keyword: Atmospheric chemistry, Air pollution modeling, Numerical stiff ODEs, Benchmarking, Ded icated explicit solvers, Sparse implicit solvers.  
Address: Iowa, Iowa City, IA 52246  (CWI), P.O. Box 94079, 1090 GB Amsterdam, The Netherlands  (CWI), P.O. Box 94079, 1090 GB Amsterdam, The Netherlands.  Iowa, Iowa City, IA 52246  Iowa, Iowa City, IA 52246  Irvine, Irvine, CA 92717-3975  Pasadena, CA 91125  
Affiliation: Applied Mathematics and Computational Sciences, The University of  Center for Mathematics and Computer Science  Center for Mathematics and Computer Science  Center for Global and Regional Environmental Research and the Department of Chemical and Biochemical Engineering, The University of  Departments of Mathematics and Computer Science, The University of  Department of Mechanical and Aerospace Engineering, University of California  flfl Department of Chemical Engineering, California Institute of Technology,  
Note: Program in  
Abstract: January 27, 1996 REPORTS ON COMPUTATIONAL MATHEMATICS, NO. 85/1996, DEPARTMENT OF MATHEMATICS, THE UNIVERSITY OF IOWA AND CWI REPORT NM-R9603/1996, DEPARTMENT OF NUMERICAL MATHEMATICS, CWI, AMSTERDAM Abstract In many applications of atmospheric transport-chemistry problems, a major task is the numerical integration of the stiff systems of ordinary differential equations describing the chemical transformations. This paper presents a comprehensive numerical comparison between five dedicated explicit and four implicit solvers for a set of seven benchmark problems from actual applications. The implicit solvers use sparse matrix techniques to economize on the numerical linear algebra overhead. As a result they are often more efficient than the dedicated explicit ones, particularly when approximately two or more figures of accuracy are required. In most test cases, sparse rodas, a Rosenbrock solver, came out as most competitive in the 1% error region. Of the dedicated explicit solvers, twostep came out as best. When less than 1% accuracy is aimed at, this solver performs very efficiently for tropospheric gas-phase problems. However, like all other dedicated explicit solvers, it cannot efficiently deal with gas-liquid phase chemistry. The results presented may constitute a guide for atmospheric modelers to select a suitable integrator based on the type and dimension of their chemical mechanism and on the desired level of accuracy. Furthermore, we would like to consider this paper an open invitation for other groups to add new representative test problems to those described here and to benchmark their numerical algorithms in our standard computational environment. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R.D. Atkinson, D.L. Baulch, R.A. Cox, R.F.JR. Hampson, J.A. Kerr, and J. Troe. </author> <title> Evaluated kinetic and photochemical data for atmospheric chemistry. </title> <journal> Journal of Chemical Kinetics, </journal> <volume> 21 </volume> <pages> 115-190, </pages> <year> 1989. </year>
Reference-contexts: They employ the kinetic mechanism that is presently used in the stem-ii regional-scale/transport/chemistry/removal model [3], consisting of 84 chemical species 4 involved in 142 thermal and 36 photolytic reactions. The mechanism, based on the work of Atkinson et. al. <ref> [1] </ref> and Lurmann et al. [17] can be used to study the chemistry of both highly polluted (e.g., near urban centers) and remote (e.g., marine) environments. Problem D is an urban scenario, while problem E a rural one, based on ipcc scenario 3.
Reference: [2] <author> P.N. Brown, G.D. Byrne, and A.C. Hindmarsh. VODE: </author> <title> A variable coefficient ODE Solver. </title> <journal> SIAM J. Sci. Stat. Comput., </journal> <volume> 10 </volume> <pages> 1038-1051, </pages> <year> 1989. </year>
Reference-contexts: We have tested nine existing solvers, namely twostep [25, 26, 27], chemeq [30], the most simple qssa solver, an extrapolated qssa solver [16], the qssa solver et based on the extrapolation technique of [4], as well as the implicit solvers lsodes [14], vode <ref> [2] </ref>, sdirk4 [11] and rodas 1 [11]. The first five of these are special purpose and compute the solution in an explicit way, as opposed to the last four which are all implicit and state-of-the-art in the numerical stiff ode field. <p> This is less than one-step solvers usually allow, but still quite acceptable in view of the explicit iteration process. For more details on the code we refer to [26, 27] and [9]. 3.5 VODE Vode is a "Variable coefficient Ordinary Differential Equation" solver based on the implicit bdf formulas <ref> [2, 11] </ref> and a successor of the "Livermore Solver" lsode from [14]. The latter is popular in the field of atmospheric chemistry. For a discussion of the mathematical techniques implemented we refer to [2, 11]. <p> 3.5 VODE Vode is a "Variable coefficient Ordinary Differential Equation" solver based on the implicit bdf formulas <ref> [2, 11] </ref> and a successor of the "Livermore Solver" lsode from [14]. The latter is popular in the field of atmospheric chemistry. For a discussion of the mathematical techniques implemented we refer to [2, 11]. We used vode as a black box with its user parameter istart = 1, except that we modified the code to carefully exploit the sparsity of the Jacobian matrix. This reduces the costs of solving the linear algebraic systems arising in the modified Newton iteration.
Reference: [3] <author> G.R. Carmichael, L.K. Peters, and T. Kitada. </author> <title> A second generation model for regional-scale transport/chemistry/deposition. </title> <journal> Atmospheric Environment, </journal> <volume> 20 </volume> <pages> 173-188, </pages> <year> 1986. </year>
Reference-contexts: They employ the kinetic mechanism that is presently used in the stem-ii regional-scale/transport/chemistry/removal model <ref> [3] </ref>, consisting of 84 chemical species 4 involved in 142 thermal and 36 photolytic reactions.
Reference: [4] <author> D. Dabdub and J.H. Seinfeld. </author> <title> Extrapolation techniques used in the solution of stiff ODEs associated with chemical kinetics of air quality models. </title> <journal> Atmospheric Environment, </journal> <volume> 29 </volume> <pages> 403-410, </pages> <year> 1995. </year>
Reference-contexts: Section 3 is devoted to the solvers. We have tested nine existing solvers, namely twostep [25, 26, 27], chemeq [30], the most simple qssa solver, an extrapolated qssa solver [16], the qssa solver et based on the extrapolation technique of <ref> [4] </ref>, as well as the implicit solvers lsodes [14], vode [2], sdirk4 [11] and rodas 1 [11]. <p> However, following chemeq philosophy, a local error greater than tol does not force a step rejection. It only restricts h new . See [9] for more details. 10 3.3 ET The solver et uses an extrapolation algorithm proposed in <ref> [4] </ref>. The approximations used for the extrapolation are computed with a predictor-corrector pair of which the corrector is a QSSA type formula. To describe the formulas used, we adopt the implicit notation used for chemeq. <p> For details about how the extrapolation is organized and the corrector is used we refer to <ref> [4] </ref>.
Reference: [5] <author> V. Damian-Iordache and A. Sandu. </author> <title> KPP A symbolic preprocessor for chemistry kinetics - User's guide. </title> <type> Technical report, </type> <institution> University of Iowa, Department of Mathematics, </institution> <year> 1995. </year>
Reference-contexts: Four of them describe gas-phase, and one describes gas-liquid phase chemistry. All are fully documented elsewhere. Before briefly describing each problem, several general remarks are in order: * All the test problems were uniformly coded in fortran using the KPP symbolic preprocessor <ref> [5] </ref>. This uniformity is important for a meaningful intercomparison, since part of the algorithms need the derivative function in production-destruction form, part need it in the standard form, and some of them need an analytical Jacobian. <p> In [15] and [26] it has been shown that this is very profitable for atmospheric chemistry problems. We used the sparse linear algebra implementation described in [20]. The necessary routines are automatically generated by the symbolic chemical preprocessor kpp <ref> [5] </ref>, which transparently: * determines the sparse analytical Jacobian, * reorders the species using a diagonal Markowitz criterion, in order to minimize the fill-in resulting from the lu decomposition of the matrix used in the modified Newton process, * analyses the pattern of zeros in the Jacobian and builds the data
Reference: [6] <author> S.C. Eisenstat, M.C. Gursky, M.H. Schultz, and A.H. Sherman. </author> <title> Yale Sparse Matrix Package. ii. The nonsymmetric codes. </title> <type> Research Report 114, </type> <institution> Department of Computer Science, Yale University, </institution> <year> 1977. </year>
Reference-contexts: All strategies were unaltered. See [9] for specific parameter settings. 3.8 LSODES Lsodes is a version of the popular bdf code lsode which exploits the sparsity in the Jacobian matrix by calling linear algebra routines from the Yale Sparse Matrix Package <ref> [7, 6] </ref>. It is obvious that vode and lsodes are closely related.
Reference: [7] <author> S.C. Eisenstat, M.C. Gursky, M.H. Schultz, and A.H. Sherman. </author> <title> Yale Sparse Matrix Package. i. The symmetric codes. </title> <journal> Int. J. Num. Meth. Eng., </journal> <volume> 18 </volume> <pages> 1145-1151, </pages> <year> 1982. </year>
Reference-contexts: All strategies were unaltered. See [9] for specific parameter settings. 3.8 LSODES Lsodes is a version of the popular bdf code lsode which exploits the sparsity in the Jacobian matrix by calling linear algebra routines from the Yale Sparse Matrix Package <ref> [7, 6] </ref>. It is obvious that vode and lsodes are closely related.
Reference: [8] <editor> M. Prather et. al. </editor> <booktitle> Intercomparison of tropospheric chemistry/transport models. Scientific assesment of ozone depletion, World meteorological organization, </booktitle> <year> 1995. </year> <title> [9] ftp.cgrer.uiowa.edu. Ftp site at the Center for Global and Regional Environmental Research, </title> <institution> University of Iowa (cd pub=Ode benchmark; mget fl), </institution> <year> 1996. </year>
Reference-contexts: This helps to relate our results to those presented in the above mentioned paper. Test problem C describes a rural scenario and simulates a clean atmosphere. It follows the ipcc Chemistry Intercomparison Study, third Bio scenario (see <ref> [8] </ref>). The values of initial concentrations and the values of hourly emissions are given in Table 5. The emission was released in equal quantities at the beginning of each time interval.
Reference: [10] <author> M.W. Gery, G.Z. Whitten, J.P. Killus, and M.C. Dodge. </author> <title> A photochemical kinetics mechanism for urban and regional scale computer modeling. </title> <journal> Journal of Geophysical Research, </journal> <volume> 94 </volume> <pages> 12925-12956, </pages> <year> 1989. </year>
Reference-contexts: 3 T O 2 4:27 4:2 All other 2 [1:5; 0] [0:14; 0] Table 3: Distribution of real part of the spectrum of the Jacobian for cbm-iv problems B and C. 2.2 Problems B and C: The cbm-iv model These problems are based on the Carbon Bond Mechanism IV (cbm-iv) <ref> [10] </ref>, consisting of 32 chemical species involved in 70 thermal and 11 photolytic reactions. The concentration of H 2 O was held fixed throughout simulation. The cbm-iv mechanism was designed for the numerical simulation of chemical processes in urban and in regional scale models. <p> Species i Re ( i ) HN O 3 (aq) 2:2 10 9 OH SO 2 HCOOH (aq) , SO 2 (aq) , -1.25e+7, -3.65e+6, -1e+6, HCOO (aq) , N H 3 (aq) , O 2 HO 2 (aq) , OH, O, H + HSO N O All other 2 <ref> [10; 0] </ref> Table 8: Distribution of real part of the spectrum of the Jacobian for the wet problem G.
Reference: [11] <author> E. Hairer and G. Wanner. </author> <title> Solving Ordinary Differential Equations II. Stiff and Differential-Algebraic Problems. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1991. </year> <note> [12] . Hov, </note> <author> I. Isaksen, and E. Hesstvedt. </author> <title> A numerical method to predict secondary air pollutants with an application on oxidant generation in an urban atmosphere. </title> <journal> WMO publication, </journal> <volume> 510 </volume> <pages> 219-226, </pages> <year> 1978. </year>
Reference-contexts: Consequently, a full transport-chemistry computation involves a huge number of stiff ode integrations. Although the numerical stiff ode field is well developed and a variety of efficient and quite reliable stiff ode solvers is available <ref> [11] </ref>, the general experience is that still faster solvers are needed. There are many such solvers in use in atmospheric models. Often the numerical methods are adapted for a particular chemistry scheme, like qssa methods [12, 13, 27]. <p> We have tested nine existing solvers, namely twostep [25, 26, 27], chemeq [30], the most simple qssa solver, an extrapolated qssa solver [16], the qssa solver et based on the extrapolation technique of [4], as well as the implicit solvers lsodes [14], vode [2], sdirk4 <ref> [11] </ref> and rodas 1 [11]. The first five of these are special purpose and compute the solution in an explicit way, as opposed to the last four which are all implicit and state-of-the-art in the numerical stiff ode field. <p> We have tested nine existing solvers, namely twostep [25, 26, 27], chemeq [30], the most simple qssa solver, an extrapolated qssa solver [16], the qssa solver et based on the extrapolation technique of [4], as well as the implicit solvers lsodes [14], vode [2], sdirk4 <ref> [11] </ref> and rodas 1 [11]. The first five of these are special purpose and compute the solution in an explicit way, as opposed to the last four which are all implicit and state-of-the-art in the numerical stiff ode field. <p> This is less than one-step solvers usually allow, but still quite acceptable in view of the explicit iteration process. For more details on the code we refer to [26, 27] and [9]. 3.5 VODE Vode is a "Variable coefficient Ordinary Differential Equation" solver based on the implicit bdf formulas <ref> [2, 11] </ref> and a successor of the "Livermore Solver" lsode from [14]. The latter is popular in the field of atmospheric chemistry. For a discussion of the mathematical techniques implemented we refer to [2, 11]. <p> 3.5 VODE Vode is a "Variable coefficient Ordinary Differential Equation" solver based on the implicit bdf formulas <ref> [2, 11] </ref> and a successor of the "Livermore Solver" lsode from [14]. The latter is popular in the field of atmospheric chemistry. For a discussion of the mathematical techniques implemented we refer to [2, 11]. We used vode as a black box with its user parameter istart = 1, except that we modified the code to carefully exploit the sparsity of the Jacobian matrix. This reduces the costs of solving the linear algebraic systems arising in the modified Newton iteration. <p> We therefore set them componentwise as atol i = max 10 2 ; 10 2 rtol i where i estimates the magnitude of the concentration of species i. See [9] for other specific parameter settings. 3.6 SDIRK4 This solver has been borrowed from Hairer and Wanner <ref> [11] </ref> where a full description along with numerical results can be found. It is based on a 4-th order, diagonally implicit Runge-Kutta method using five stages. Because this solver is of one-step type, it allows a fast increase in step size after a restart. <p> For atmospheric chemistry applications this is an obvious advantage. We have only modified it for the treatment of sparsity as described in Section 3.5. Hence all strategies were unaltered. See [9] for specific parameter settings. 3.7 RODAS This solver has also been borrowed from Hairer and Wanner <ref> [11] </ref>. It is based on a 4-th order, Runge-Kutta-Rosenbrock method using six stages. This solver is also of one-step type and hence shares the advantage of a fast increase in step size after a restart with sdirk4. <p> All the runs were made in double precision on a HP-UX 935 A workstation with a cpu clock frequency of 125 megaherz and 160 Mbytes ram. The numerical results for all test problems are compared to a very accurate reference solution computed by the code radau5 from <ref> [11] </ref> with the very tight tolerances rtol = 10 12 ; atol i = 10 15 i , where i estimates the magnitude of the concentration of species i in unit mlc/cm . Our measure of accuracy is based on a modified root mean square norm of the relative error.
Reference: [13] <author> E. Hesstvedt, . Hov, and I. Isaksen. </author> <title> Quasi-steady-state-approximation in air pollution modelling: comparison of two numerical schemes for oxidant prediction. </title> <journal> Int. J. Chem. Kinet., </journal> <volume> 10 </volume> <pages> 971-994, </pages> <year> 1978. </year>
Reference-contexts: There are many such solvers in use in atmospheric models. Often the numerical methods are adapted for a particular chemistry scheme, like qssa methods <ref> [12, 13, 27] </ref>. In such a case a change in the chemistry scheme necessitates a reconsideration of the numerical scheme as well, which is a disadvantage. Furthermore, this adaptation makes it very hard to really assess and compare the numerical efficiency and accuracy for different solvers. <p> With lumping we mean here the technique of grouping species into chemical families to reduce, for example, the stiffness, or to enforce conservation for a chemical family (see <ref> [12, 13] </ref> where this form of lumping was proposed first for the qssa method). Hence our comparison emphasizes the numerical properties and performance of the solvers applied. * The variable step size control requires the choice of a relative error tolerance rtol and an absolute error tolerance atol.
Reference: [14] <author> A.C. Hindmarsh. ODEPACK: </author> <title> A systematized collection of ODE solvers. In: R.S. Stepleman (ed.), </title> <journal> IMACS Trans. on Scientific Computation, </journal> <volume> Vol. 1, </volume> <publisher> Scientific Computing, North Holland, </publisher> <address> Amsterdam, </address> <year> 1983. </year>
Reference-contexts: Section 3 is devoted to the solvers. We have tested nine existing solvers, namely twostep [25, 26, 27], chemeq [30], the most simple qssa solver, an extrapolated qssa solver [16], the qssa solver et based on the extrapolation technique of [4], as well as the implicit solvers lsodes <ref> [14] </ref>, vode [2], sdirk4 [11] and rodas 1 [11]. The first five of these are special purpose and compute the solution in an explicit way, as opposed to the last four which are all implicit and state-of-the-art in the numerical stiff ode field. <p> For our purpose, the solvers vode, sdirk4 and rodas have been provided with a sparse-matrix technique [20] to economize on the numerical algebra overhead in the modified Newton solution. lsodes has already built in a sparse-matrix technique and is a successor of lsode <ref> [14] </ref> which is popular amongst atmospheric chemists as a reference code. By providing the implicit solvers with sparse matrix techniques, they belong to the fastest of their kind. In Section 4 we describe the set up of the experiments. <p> For more details on the code we refer to [26, 27] and [9]. 3.5 VODE Vode is a "Variable coefficient Ordinary Differential Equation" solver based on the implicit bdf formulas [2, 11] and a successor of the "Livermore Solver" lsode from <ref> [14] </ref>. The latter is popular in the field of atmospheric chemistry. For a discussion of the mathematical techniques implemented we refer to [2, 11].
Reference: [15] <author> M.Z. Jacobson and R.P. Turco. SMVGEAR: </author> <title> a sparse-matrix, vectorized Gear code for atmospheric models. </title> <journal> Atmospheric Environment, </journal> <volume> 17 </volume> <pages> 273-284, </pages> <year> 1994. </year>
Reference-contexts: All experiments discussed in this paper were carried out on a single processor workstation and concern box-model tests. We emphasize that promising solvers should also be compared in actual 3D transport applications where the issues of memory use, vectorization <ref> [15, 28] </ref> and parallelization are of great practical importance. Code changes connected with vectorization and/or parallelization for a particular architecture can result in cpu time decreases of orders of magnitude. <p> We used vode as a black box with its user parameter istart = 1, except that we modified the code to carefully exploit the sparsity of the Jacobian matrix. This reduces the costs of solving the linear algebraic systems arising in the modified Newton iteration. In <ref> [15] </ref> and [26] it has been shown that this is very profitable for atmospheric chemistry problems. We used the sparse linear algebra implementation described in [20]. <p> Also robustness and ease of use are important in 3D models, since a subtle tuning of the ode code is cumbersome due to the large variety of conditions that will occur at different gridpoints. Finally, the issues of memory use, vectorization <ref> [15, 28] </ref> and parallelization are of great practical importance too. Optimal ode solvers should be tested in a 3D software environment where vectorization and parallelization take place.
Reference: [16] <author> L.O. Jay, A. Sandu, F.A. Potra, and G.R. </author> <title> Carmichael. Improved QSSA methods for atmospheric chemistry integration. </title> <type> Technical report 67, </type> <institution> University of Iowa, Department of Mathematics, </institution> <year> 1995. </year>
Reference-contexts: In such a case a change in the chemistry scheme necessitates a reconsideration of the numerical scheme as well, which is a disadvantage. Furthermore, this adaptation makes it very hard to really assess and compare the numerical efficiency and accuracy for different solvers. Continuing our previous work (see <ref> [16, 26] </ref> and the references therein), the purpose of the current paper is a comprehensive benchmark comparison between a number of solvers which have been proposed in the literature. We apply them as normal ode solvers without any adaptation for the chemistry scheme. The paper is organized as follows. <p> Because of the diverse applications, these chemical schemes constitute a representative test set for evaluating and comparing numerical solvers. Section 3 is devoted to the solvers. We have tested nine existing solvers, namely twostep [25, 26, 27], chemeq [30], the most simple qssa solver, an extrapolated qssa solver <ref> [16] </ref>, the qssa solver et based on the extrapolation technique of [4], as well as the implicit solvers lsodes [14], vode [2], sdirk4 [11] and rodas 1 [11]. <p> This formula is explicit because the loss matrix L is diagonal. The notion explicit thus means that no systems of algebraic 9 equations need to be solved. The second is based on a Richardson extrapolated form of (2) and reads <ref> [16] </ref> y n+1 n+1=2 y n+1 n+1=2 h=2 y n+1 where Q (y n ; h) refers to (2). The extrapolated scheme is slightly more than two times expensive per time step of length h. The order of accuracy of (3) equals two, whereas (2) is of order one.
Reference: [17] <author> F.W. Lurmann, A.C. Loyd, and R. Atkinson. </author> <title> A chemical mechanism for use in long-range transport/acid deposition computer modeling. </title> <journal> Journal of Geophysical Research, </journal> <volume> 91:10,905-10,936, </volume> <year> 1986. </year> <month> 22 </month>
Reference-contexts: They employ the kinetic mechanism that is presently used in the stem-ii regional-scale/transport/chemistry/removal model [3], consisting of 84 chemical species 4 involved in 142 thermal and 36 photolytic reactions. The mechanism, based on the work of Atkinson et. al. [1] and Lurmann et al. <ref> [17] </ref> can be used to study the chemistry of both highly polluted (e.g., near urban centers) and remote (e.g., marine) environments. Problem D is an urban scenario, while problem E a rural one, based on ipcc scenario 3.
Reference: [18] <author> G.J. McRae, W.R. Goodin, and J.H. Seinfeld. </author> <title> Numerical solution of the atmospheric diffusion equation for chemically reacting flows. </title> <journal> J. Comput. Phys., </journal> <volume> 45 </volume> <pages> 1-42, </pages> <year> 1982. </year>
Reference-contexts: The difference between the numbers in the third and second row is the fill-in. the loss term L i (t; y) is close to a stiff eigenvalue of the Jacobian matrix, and that no stiff eigenvalues exist which are not close to a loss term. Following <ref> [18] </ref>, the following reasoning explains this. Consider atomic oxygen O which is a very fast reacting species. <p> For each problem we therefore illustrate the eigenvalue relationship in a table showing the species and eigenvalues for which the relationship is found to exist and the distribution of the remaining part of the spectrum 3 of the Jacobian (see also Fig. 8 in <ref> [18] </ref>). In this remaining part, eigenvalues thus can be of two sorts, either they are small and hence do not introduce stiffness, or they are large but cannot be associated with a single short lived species. If these latter eigenvalues exist, then the special purpose explicit methods can fail completely.
Reference: [19] <author> J. Matthijssen. </author> <type> Private communication, </type> <institution> Laboratoire d'Aerologie OMP, Toulouse, France, </institution> <year> 1995. </year>
Reference-contexts: This set consists of seven problems based on three tropospheric gas-phase chemistry schemes, namely a small, a medium and a large scheme, one stratospheric scheme coming from nasa, and one hybrid gas-liquid phase scheme from cloud modeling which we obtained from Matthijsen <ref> [19] </ref>. Because of the diverse applications, these chemical schemes constitute a representative test set for evaluating and comparing numerical solvers. Section 3 is devoted to the solvers. <p> It contains 65 species 7 involved in 77 thermal and 11 photolytic gas-phase chemical reactions, 39 liquid-phase chemical reactions and 39 gas-liquid mass transfer reactions. The gas-phase mechanism is based on cbm-iv, while the liquid-phase mechanism is based on a chemical scheme the authors obtained from <ref> [19] </ref>. Initial concentrations are given in Table 9. Information about the stiffness of the problem in terms of the eigenvalues of the Jacobian is given in Table 8.
Reference: [20] <author> A. Sandu, F.A. Potra, V. Damian, and G.R. </author> <title> Carmichael. Efficient implementation of fully implicit methods for atmospheric chemistry. </title> <type> Technical report 79, </type> <institution> University of Iowa, Department of Mathematics, </institution> <year> 1995. </year>
Reference-contexts: For our purpose, the solvers vode, sdirk4 and rodas have been provided with a sparse-matrix technique <ref> [20] </ref> to economize on the numerical algebra overhead in the modified Newton solution. lsodes has already built in a sparse-matrix technique and is a successor of lsode [14] which is popular amongst atmospheric chemists as a reference code. <p> Although the chemical conditions are identical and the calculated results very close, the performances of the numerical solvers depend on the chemical mechanism used. We will make this point later in the paper. * An important issue in our numerical comparison is the use of a sparse matrix technique <ref> [20] </ref> to economize on the linear algebra costs which the stiff solvers spend in the modified Newton iteration. <p> This reduces the costs of solving the linear algebraic systems arising in the modified Newton iteration. In [15] and [26] it has been shown that this is very profitable for atmospheric chemistry problems. We used the sparse linear algebra implementation described in <ref> [20] </ref>.
Reference: [21] <author> R. D. Saylor and G. D. Ford. </author> <title> On the comparison of numerical methods for the integration of kinetic equations in atmospheric chemistry and transport models. </title> <journal> Atmospheric Environment, </journal> <volume> 29 </volume> <pages> 2585-2593, </pages> <year> 1995. </year>
Reference-contexts: The cbm-iv mechanism was designed for the numerical simulation of chemical processes in urban and in regional scale models. Test problem B describes an urban scenario and simulates a heavily polluted atmosphere. The initial concentrations and the levels of hourly emissions follow those described in <ref> [21] </ref>. This helps to relate our results to those presented in the above mentioned paper. Test problem C describes a rural scenario and simulates a clean atmosphere. It follows the ipcc Chemistry Intercomparison Study, third Bio scenario (see [8]). <p> Each category is integrated with a special predictor-corrector formula. Our implementation of chemeq follows the one described in <ref> [21] </ref> and is based on the following predictor-corrector pairs (the abbreviation P n k stands for P k (t n ; y n ), etc.): * If t k &gt; 5h (slow species): predictor : y n+1 k = y n k L n k ) (4a) corrector : y n+1 <p> For our application an important difference is that vode uses a dedicated sparsity technique, whereas lsodes uses the general Yale package, which is less efficient, in general. lsode and lsodes are often used to solve atmospheric chemical kinetics equations (see e.g. <ref> [21] </ref>). The code was applied with its user parameter setting mf = 121, i.e. analytical Jacobian with an inner estimation of the sparsity structure. See [9] for other specific parameter settings. 4 Setup of experiments The solvers are tested as if they were used in an operator splitting environment.
Reference: [22] <author> D. Simpson, Y. Andersson-Skold, and M.E. Jenkin. </author> <title> Updating the chemical scheme for the EMEP MSC-W oxidant model: current status. </title> <type> Technical Report 2/93, </type> <institution> EMEP MSC-W, The Norwegian Meteorological Institute, Oslo, </institution> <year> 1993. </year>
Reference-contexts: The problem is a highly parameterized version of the emep msw-w ozone chemistry scheme <ref> [22] </ref>. It consists of 15 reactions between 15 species and is extensively described in [23]. It has been used before in the comparisons reported in [26], where it has also been documented.
Reference: [23] <author> M. van Loon. </author> <title> Numerical smog prediction I: The physical and chemical model. </title> <type> CWI Report NM-R9411, </type> <institution> Center for Mathematics and Computer Science, </institution> <address> Amsterdam, </address> <year> 1995. </year>
Reference-contexts: This observation is in line with our test results. 2.1 Problem A: The eusmog model This problem is borrowed from a model which is currently implemented and tested at the cwi in a Dutch smog prediction code in the framework of the project eusmog <ref> [23, 24] </ref>. The problem is a highly parameterized version of the emep msw-w ozone chemistry scheme [22]. It consists of 15 reactions between 15 species and is extensively described in [23]. It has been used before in the comparisons reported in [26], where it has also been documented. <p> The problem is a highly parameterized version of the emep msw-w ozone chemistry scheme [22]. It consists of 15 reactions between 15 species and is extensively described in <ref> [23] </ref>. It has been used before in the comparisons reported in [26], where it has also been documented.
Reference: [24] <author> M. van Loon. </author> <title> Numerical smog prediction II: Grid refinement and its application to the Dutch smog prediction model. </title> <type> CWI Report NM-R9523, </type> <institution> Center for Mathematics and Computer Science, </institution> <address> Amsterdam, </address> <year> 1995. </year>
Reference-contexts: This observation is in line with our test results. 2.1 Problem A: The eusmog model This problem is borrowed from a model which is currently implemented and tested at the cwi in a Dutch smog prediction code in the framework of the project eusmog <ref> [23, 24] </ref>. The problem is a highly parameterized version of the emep msw-w ozone chemistry scheme [22]. It consists of 15 reactions between 15 species and is extensively described in [23]. It has been used before in the comparisons reported in [26], where it has also been documented.
Reference: [25] <author> J.G. Verwer. </author> <title> Gauss-Seidel iterations for stiff ODEs from chemical kinetics. </title> <journal> SIAM Journal of Scientific Computing, </journal> <volume> 15 </volume> <pages> 1243-1250, </pages> <year> 1994. </year>
Reference-contexts: Because of the diverse applications, these chemical schemes constitute a representative test set for evaluating and comparing numerical solvers. Section 3 is devoted to the solvers. We have tested nine existing solvers, namely twostep <ref> [25, 26, 27] </ref>, chemeq [30], the most simple qssa solver, an extrapolated qssa solver [16], the qssa solver et based on the extrapolation technique of [4], as well as the implicit solvers lsodes [14], vode [2], sdirk4 [11] and rodas 1 [11]. <p> For details about how the extrapolation is organized and the corrector is used we refer to [4]. See also [9] for more details. 3.4 TWOSTEP twostep <ref> [25, 26, 27] </ref> is based on the variable step size, two-step backward differentiation formula (bdf) y n+1 = Y n + flhf (t n+1 ; y n+1 ); h = t n+1 t n ; (12) where fl = (c + 1)=(c + 2), c = (t n t n1 )=(t
Reference: [26] <author> J.G. Verwer, J.G. Blom, M. van Loon, and E.J. Spee. </author> <title> A comparison of stiff ODE solvers for atmospheric chemistry problems. </title> <journal> Atmospheric Environment, </journal> <volume> 30 </volume> <pages> 49-58, </pages> <year> 1996. </year>
Reference-contexts: In such a case a change in the chemistry scheme necessitates a reconsideration of the numerical scheme as well, which is a disadvantage. Furthermore, this adaptation makes it very hard to really assess and compare the numerical efficiency and accuracy for different solvers. Continuing our previous work (see <ref> [16, 26] </ref> and the references therein), the purpose of the current paper is a comprehensive benchmark comparison between a number of solvers which have been proposed in the literature. We apply them as normal ode solvers without any adaptation for the chemistry scheme. The paper is organized as follows. <p> Because of the diverse applications, these chemical schemes constitute a representative test set for evaluating and comparing numerical solvers. Section 3 is devoted to the solvers. We have tested nine existing solvers, namely twostep <ref> [25, 26, 27] </ref>, chemeq [30], the most simple qssa solver, an extrapolated qssa solver [16], the qssa solver et based on the extrapolation technique of [4], as well as the implicit solvers lsodes [14], vode [2], sdirk4 [11] and rodas 1 [11]. <p> Lest we miss the obvious, for problems of a small dimension for which the dense matrix numerical algebra costs are not dominating, the gain in using a more efficient matrix solution will be hardly noticeable in the overall costs. This is the case for Problem A (see also <ref> [26] </ref>). The dedicated explicit algorithms are scalarly implicit and exploit the production-loss form of the ode system. They are based on the assumption that all short lived species, causing the problem to be stiff, are only weakly coupled to all other species. <p> The problem is a highly parameterized version of the emep msw-w ozone chemistry scheme [22]. It consists of 15 reactions between 15 species and is extensively described in [23]. It has been used before in the comparisons reported in <ref> [26] </ref>, where it has also been documented. <p> Before briefly describing the solvers, several general remarks are in order: * The explicit solvers are applied to the given ode system (1) without problem dependent modifications. Modifications, such as lumping, can improve their performance notably (see e.g. <ref> [26] </ref> where this is illustrated for the eusmog problem), but have the disadvantage of being problem dependent. <p> For details about how the extrapolation is organized and the corrector is used we refer to [4]. See also [9] for more details. 3.4 TWOSTEP twostep <ref> [25, 26, 27] </ref> is based on the variable step size, two-step backward differentiation formula (bdf) y n+1 = Y n + flhf (t n+1 ; y n+1 ); h = t n+1 t n ; (12) where fl = (c + 1)=(c + 2), c = (t n t n1 )=(t <p> Here we will use both types of iteration techniques. Note that for the Gauss-Seidel technique the order of the species plays a role when only a small number of iterations are used. In all experiments we in fact restrict the number of iterations to only two. In <ref> [26, 27] </ref> this has been shown to work well. twostep is based on a two-step formula which cannot be applied at an operator-split restart. At restart the one-step backward Euler formula is therefore used, which simply means that Y n = y n . <p> This is less than one-step solvers usually allow, but still quite acceptable in view of the explicit iteration process. For more details on the code we refer to <ref> [26, 27] </ref> and [9]. 3.5 VODE Vode is a "Variable coefficient Ordinary Differential Equation" solver based on the implicit bdf formulas [2, 11] and a successor of the "Livermore Solver" lsode from [14]. The latter is popular in the field of atmospheric chemistry. <p> We used vode as a black box with its user parameter istart = 1, except that we modified the code to carefully exploit the sparsity of the Jacobian matrix. This reduces the costs of solving the linear algebraic systems arising in the modified Newton iteration. In [15] and <ref> [26] </ref> it has been shown that this is very profitable for atmospheric chemistry problems. We used the sparse linear algebra implementation described in [20]. <p> The good performance of implicit integrators is due in part to the small dimension of the system which means less work with the linear algebra. Note that the jacobi and (gauss-)seidel versions of twostep have similar performance for this test problem (see also <ref> [26] </ref>). It is clear that the simplest qssa solver, et and chemeq are the slowest among the tested routines.
Reference: [27] <author> J.G. Verwer and D. Simpson. </author> <title> Explicit Methods for stiff ODEs from atmospheric chemistry. </title> <journal> Applied Numerical Mathematics, </journal> <volume> 18 </volume> <pages> 413-430, </pages> <year> 1995. </year>
Reference-contexts: There are many such solvers in use in atmospheric models. Often the numerical methods are adapted for a particular chemistry scheme, like qssa methods <ref> [12, 13, 27] </ref>. In such a case a change in the chemistry scheme necessitates a reconsideration of the numerical scheme as well, which is a disadvantage. Furthermore, this adaptation makes it very hard to really assess and compare the numerical efficiency and accuracy for different solvers. <p> Because of the diverse applications, these chemical schemes constitute a representative test set for evaluating and comparing numerical solvers. Section 3 is devoted to the solvers. We have tested nine existing solvers, namely twostep <ref> [25, 26, 27] </ref>, chemeq [30], the most simple qssa solver, an extrapolated qssa solver [16], the qssa solver et based on the extrapolation technique of [4], as well as the implicit solvers lsodes [14], vode [2], sdirk4 [11] and rodas 1 [11]. <p> For details about how the extrapolation is organized and the corrector is used we refer to [4]. See also [9] for more details. 3.4 TWOSTEP twostep <ref> [25, 26, 27] </ref> is based on the variable step size, two-step backward differentiation formula (bdf) y n+1 = Y n + flhf (t n+1 ; y n+1 ); h = t n+1 t n ; (12) where fl = (c + 1)=(c + 2), c = (t n t n1 )=(t <p> Here we will use both types of iteration techniques. Note that for the Gauss-Seidel technique the order of the species plays a role when only a small number of iterations are used. In all experiments we in fact restrict the number of iterations to only two. In <ref> [26, 27] </ref> this has been shown to work well. twostep is based on a two-step formula which cannot be applied at an operator-split restart. At restart the one-step backward Euler formula is therefore used, which simply means that Y n = y n . <p> This is less than one-step solvers usually allow, but still quite acceptable in view of the explicit iteration process. For more details on the code we refer to <ref> [26, 27] </ref> and [9]. 3.5 VODE Vode is a "Variable coefficient Ordinary Differential Equation" solver based on the implicit bdf formulas [2, 11] and a successor of the "Livermore Solver" lsode from [14]. The latter is popular in the field of atmospheric chemistry.
Reference: [28] <author> J.G. Verwer, J.G. Blom and W.H. Hundsdorfer. </author> <title> An implicit-explicit approach for atmospheric transport-chemistry problems. </title> <journal> Applied Numerical Mathematics, </journal> <volume> 20 </volume> <pages> 191-209, </pages> <year> 1996. </year>
Reference-contexts: All experiments discussed in this paper were carried out on a single processor workstation and concern box-model tests. We emphasize that promising solvers should also be compared in actual 3D transport applications where the issues of memory use, vectorization <ref> [15, 28] </ref> and parallelization are of great practical importance. Code changes connected with vectorization and/or parallelization for a particular architecture can result in cpu time decreases of orders of magnitude. <p> Also robustness and ease of use are important in 3D models, since a subtle tuning of the ode code is cumbersome due to the large variety of conditions that will occur at different gridpoints. Finally, the issues of memory use, vectorization <ref> [15, 28] </ref> and parallelization are of great practical importance too. Optimal ode solvers should be tested in a 3D software environment where vectorization and parallelization take place.
Reference: [29] <author> R. Yamartino, J. Scire, G.R. Carmichael, and Y.S. Chang. </author> <title> The CALGRID mesoscale photochemical grid model. Atmospheric Environment, </title> <address> 26 A:1493-1512, </address> <year> 1992. </year>
Reference-contexts: See [9] for more details. 3.2 CHEMEQ One of the first dedicated, explicit methods for solving chemical equations in comprehensive advection-reaction models is the hybrid algorithm of Young and Boris [30]. It is currently implemented in the calgrid mesoscale model <ref> [29] </ref>. In the original algorithm, the species are dynamically separated into two categories (fast and slow) according to the relative magnitude of their life-times t k = 1=L k with respect to the current step size h. Each category is integrated with a special predictor-corrector formula.
Reference: [30] <author> T. R. Young and J. P. Boris. </author> <title> A numerical technique for solving stiff ODEs associated with the chemical kinetics of reactive flow problems. </title> <journal> Journal of Physical Chemistry, </journal> <volume> 81 </volume> <pages> 2424-2427, </pages> <year> 1977. </year> <month> 23 </month>
Reference-contexts: Because of the diverse applications, these chemical schemes constitute a representative test set for evaluating and comparing numerical solvers. Section 3 is devoted to the solvers. We have tested nine existing solvers, namely twostep [25, 26, 27], chemeq <ref> [30] </ref>, the most simple qssa solver, an extrapolated qssa solver [16], the qssa solver et based on the extrapolation technique of [4], as well as the implicit solvers lsodes [14], vode [2], sdirk4 [11] and rodas 1 [11]. <p> The order of accuracy of (3) equals two, whereas (2) is of order one. See [9] for more details. 3.2 CHEMEQ One of the first dedicated, explicit methods for solving chemical equations in comprehensive advection-reaction models is the hybrid algorithm of Young and Boris <ref> [30] </ref>. It is currently implemented in the calgrid mesoscale model [29]. In the original algorithm, the species are dynamically separated into two categories (fast and slow) according to the relative magnitude of their life-times t k = 1=L k with respect to the current step size h.
References-found: 28

