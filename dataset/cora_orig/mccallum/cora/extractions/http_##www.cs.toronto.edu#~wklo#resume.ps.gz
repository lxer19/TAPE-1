URL: http://www.cs.toronto.edu/~wklo/resume.ps.gz
Refering-URL: http://www.cs.toronto.edu/~wklo/
Root-URL: http://www.cs.toronto.edu
Email: Email: wklo@cs.toronto.edu  
Title: My research interests are in fault-tolerant distributed computing, with emphasis on shared-memory systems in which
Phone: Phone: (416) 978-4837  Phone: (416) 296-0663  
Author: Wai-Kau Lo 
Degree: Doctor of Philosophy in Computer Science, January, 1997.  Master of Science in Computer Science, January, 1993.  Advisor: Professor Vassos  Advisor: Professor Vassos Hadzilacos.  
Address: Toronto, Ontario M5S 3G4 Canada  Home Address 88 Cooperate Drive, Suite No. 1017 Scarborough, Ontario M1H 3G6 Canada  
Affiliation: Department of Computer Science University of Toronto  UNIVERSITY EDUCATION University of Toronto.  University of Toronto.  University of Hong Kong. Bachelor of Science in Computer Studies  Hadzilacos.  
Note: Work Address  (first class honours), June, 1990. RESEARCH INTERESTS  Master thesis:  
Abstract: A fundamental question in distributed shared-memory computing is to determine whether a given set of base object types can be used to implement a new type. In my Ph.D. thesis, I studied this problem in a fault-tolerant setting, where implementations must work even if all but one processes that share the objects may crash. Such implementations are called wait-free. A wait-free hierarchy classifies object types on the basis of their strength in supporting wait-free implementations of other types. Such a hierarchy is robust if it is impossible to implement objects of types that it classifies as strong by combining objects of types that it classifies as weak. I proved that, if nondeterministic types are allowed, the only wait-free hierarchy that is robust is the trivial one, which lumps all types into a single level. This result implies that, in general, it is not possible to determine the power of a concurrent system that supports a given set of primitive object types by reasoning about the power of each primitive type in isolation. It is well-known that Consensus is unsolvable in asynchronous shared-memory systems consisting of only registers where processes may crash. In my Master thesis, I studied the use of failure detectors introduced by Chandra and Toueg to overcome this impossibilityresult. Informally, a failure detector is a device that provides information about which processes have crashed. I presented several Consensus algorithms using different types of failure detectors, established some lower bounds and impossibility results, and determined the weakest failure detector that can be used to solve Consensus in asynchronous shared-memory systems. 
Abstract-found: 1
Intro-found: 1
Reference: <institution> Professor Vassos Hadzilacos Department of Computing Imperial College 180 Queens' Gate London SW7 2BZ England Phone: +44-171-594-8355 Fax: +44-171-581-8024 Email: vh3@doc.ic.ac.uk Professor Faith Fich Department of Computer Science University of Toronto 10 King's College Road Toronto, </institution> <address> Ontario M5S 3G4 Canada Phone: (416) 978-6183 Fax: (416) 978-1931 Email: </address> <institution> fich@cs.toronto.edu Professor Prasad Jayanti Room H1-B51 IBM T.J. Watson Research Center 30 Saw Mill Road Hawthorne, </institution> <address> NY 10532 USA Phone: </address> <note> (914) 784-7316 Fax: (914) 784-7455 Email: jayanti@watson.ibm.com Other references available upon request. </note>
References-found: 1

