URL: http://www.cs.ucsd.edu/users/goguen/ps/recon.ps.gz
Refering-URL: http://www.cs.ucsd.edu/users/goguen/pubs/
Root-URL: http://www.cs.ucsd.edu
Title: Requirements Engineering as the Reconciliation of Technical and Social Issues  
Author: Joseph A. Goguen 
Address: Oxford OX1 3QD, United Kingdom  
Note: Requirements and Foundations, Programming Research  
Affiliation: Centre for  Group Oxford University Computing Lab,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Russell Abbott. </author> <title> Program design by informal English descriptions. </title> <journal> Communications of the Association for Computing Machinery, </journal> <volume> 26(11) </volume> <pages> 882-894, </pages> <year> 1983. </year>
Reference-contexts: There is a growing body of evidence that natural language is far more structured than most people realise, and that discourse structure carries much important information about what is being described. For example, work by Abbott <ref> [1] </ref>, and by Enomoto, Horai and others [43] shows that the nouns and verbs used in stating requirements can provide important clues to an object oriented design for the system. In particular, the nouns give clues about classes and their attributes, and the verbs give clues about methods.
Reference: [2] <author> Jon Barwise and John Perry. </author> <title> Situations and Attitudes. </title> <publisher> MIT, </publisher> <address> 1983. </address> <publisher> (Bradford Books). </publisher>
Reference-contexts: This subsection presents what may be some initial steps towards a social theory of information. Objective and quantitative theories of information, such as the statistical theory of Shannon [44], as well as objective but qualitative theories, such as the situation semantics of Barwise and Perry <ref> [2] </ref>, are not adequate for our purpose. Although each may illuminate certain aspects of information, neither considers the social processes that create and sustain information through interpretation and negotiation. <p> By contrast, a representational theory of meaning claims that a meaningful configuration of signs represents something in the real world. In sophisticed representational theories, such as situation semantics <ref> [2] </ref>, what is represented by (say) a given phrase of English can vary with context, and need not be a simple object, but can be a complex relationship, such as a situation. This may be quite adequate for some purposes.
Reference: [3] <editor> Alton L. Becker. Text-building, epistemology, and aesthetics in Javanese shadow theatre. In Alton L. Becker and A. Yengoyan, editors, </editor> <booktitle> The Imagination of Reality: Essays on Southeast Asian Symbolic Systems. </booktitle> <publisher> Ablex, </publisher> <year> 1979. </year>
Reference-contexts: Thus, in the first verse, they first went up, then Jack fell down, then he broke his crown, and then Jill came tumbling after. This basic principle is called the narrative presupposition. Note that it is a convention, and not a necessary feature of narratives; for example, Becker <ref> [3] </ref> shows that in Balinese narratives, if no special care is taken then the events reported in a sequence of narrative clauses are taken as occurring simultaneously rather than sequentially 5 .
Reference: [4] <author> Matthew Bickerton and Jawed Siddiqi. </author> <title> The classification of requirements engineering methods. </title> <editor> In Stephen Fickas and Anthony Finkelstein, editors, </editor> <booktitle> Requirements Engineering '93, </booktitle> <pages> pages 182-186. </pages> <publisher> IEEE, </publisher> <year> 1993. </year> <title> Also, </title> <type> Technical Report, </type> <institution> Centre for Requirements and Foundations, Oxford University Computing Lab, </institution> <year> 1992. </year>
Reference-contexts: The first criterion used for classification is the social theory that underlies the method, based on our hypothesis that the most important determinant of success is that this social theory should match the actual social organisation where the system will be deployed. See <ref> [4] </ref> for more details on this project. It is interesting to consider the methodological aspect of this classification scheme.
Reference: [5] <author> Barry Boehm. </author> <title> Software Engineering Economics. </title> <publisher> Prentice-Hall, </publisher> <year> 1981. </year>
Reference-contexts: The need for progress in Requirements Engineering is acute: large projects have a embarrassingly high failure rate 2 . Moreover, the requirements phase of a large system development project is the most error-prone, and these errors are the most expensive to correct <ref> [5, 9] </ref>. Consequently, this phase has the greatest economic leverage. Unfortunately, it is also the least explored, and has the least satisfactory intellectual foundations. Therefore it seems a promising area in which to invest research effort.
Reference: [6] <author> Barry Boehm. </author> <title> A sprial model of program development and enhancement. </title> <journal> Software Engineering Notes, </journal> <volume> 11(4) </volume> <pages> 14-24, </pages> <year> 1986. </year>
Reference-contexts: Software Engineering has developed process models that are more flexible than the waterfall model, such as the "spiral" models of Boehm <ref> [6] </ref>. However, we can predict that following any process model too rigidly will lead to difficulties, because one cannot really be certain where one is in the lifecycle except retrospectively.
Reference: [7] <author> Richard Boland. </author> <title> In search of management accounting: Explorations of self and organization. </title> <type> Technical report, </type> <institution> Case Western University, </institution> <year> 1991. </year>
Reference-contexts: This means that they can be sources of power. Consequently, the design of an information system is a natural occasion for power struggles, and it is important that the human interests of all stakeholders should be recognised and protected; Boland <ref> [7] </ref> describes an interesting case study that illustrates the importance of power struggles in understanding organisations. The failure to take account of such factors explains why many large information systems have not worked well in practice.
Reference: [8] <author> J. Conklin and M. Bergman. gIBIS: </author> <title> A hypertext tool for exploratory policy discussion. </title> <journal> ACM Transactions on Office Information Systems, </journal> <volume> 6 </volume> <pages> 303-331, </pages> <year> 1988. </year>
Reference-contexts: Moreover, Requirements Engineering has recently developed special tools to help collect and organise large volumes of requirements information. One class of tools organises information about designs on selected requirements issues. For example, the gIBIS tool <ref> [8] </ref> is organised around issues, positions and arguments. These tools are based on normatively given presuppositions about the way that projects should be organised. Moreover, it will be difficult for ordinary users and managers to use such tools themselves. Information systems seem a particularly interesting site for research.
Reference: [9] <author> Alan M. Davis. </author> <title> Software Requirements: Analysis & Specification. </title> <publisher> Prentice-Hall, </publisher> <year> 1990. </year>
Reference-contexts: The need for progress in Requirements Engineering is acute: large projects have a embarrassingly high failure rate 2 . Moreover, the requirements phase of a large system development project is the most error-prone, and these errors are the most expensive to correct <ref> [5, 9] </ref>. Consequently, this phase has the greatest economic leverage. Unfortunately, it is also the least explored, and has the least satisfactory intellectual foundations. Therefore it seems a promising area in which to invest research effort.
Reference: [10] <author> Anthony Finkelstein, J. Kramer, and M. Goedicke. </author> <title> Viewpoint oriented software development. </title> <booktitle> In Proceedings, Third International Workshop on Software Engineering and its Applications, </booktitle> <pages> pages 337-351. </pages> <publisher> Springer Verlag, </publisher> <year> 1990. </year>
Reference-contexts: For example, the notion of a view in that field already reflects the idea that it may be useful to present information in different ways to different users. Similarly, a requirements document must serve a number of different stakeholders, and thus may need to incorporate multiple views <ref> [10] </ref>.
Reference: [11] <author> Harold Garfinkel. </author> <title> Studies in Ethnomethodology. </title> <publisher> Prentice-Hall, </publisher> <year> 1967. </year>
Reference-contexts: I do not suggest that statistics and questionnaires are never useful, only that they are not always valid, and in particular, that they should not be used in situations where context plays a significant role. (See [19] for a more detailed discussion of questionnaires and interviews.) Ethnomethodology <ref> [11] </ref> can be seen as a reaction against the "scientific" methodology of traditional sociology. (More detailed discussion of ethnomethodology and science may be found in [45] and [46]).
Reference: [12] <author> Joseph Goguen. </author> <title> Types as theories. </title> <editor> In George Michael Reed, Andrew William Roscoe, and Ralph F. Wachter, editors, </editor> <booktitle> Topology and Category Theory in Computer Science, </booktitle> <pages> pages 357-390. </pages> <address> Oxford, </address> <year> 1991. </year> <booktitle> Proceedings of a Conference held at Oxford, </booktitle> <month> June </month> <year> 1989. </year>
Reference-contexts: Thus, it is not surprising that each of the examples discussed here has a tree representation 14 . (There is also a somewhat more sophisticated approach, based on behavioural satisfaction, that does not require initiality; see <ref> [12] </ref>.) A complete formal specification of our Henley Regatta abstract data type is given in the appendix, using the specification language OBJ3 [23]. <p> The second module, named "LIST", is a parameterised module for forming lists of anything; the list constructor has the syntax "_._" for placing a new element at the head of a list; nil is the empty list. Inside the third module, we form and import the module LIST <ref> [12] </ref>, renaming its principal sort List to be Index; these lists are used for picking out particular instances of a boat racing in a regatta; a typical term of sort Index is "1 . 1 . 2 . nil". <p> LIST [X :: TRIV] is sort List . op nil : -&gt; List . op _ _ : Elt List -&gt; List . endo obj HENLEY is sorts Boat Reg Boat? Reg? . pr QID . subsorts Id &lt; Boat &lt; Reg Boat? &lt; Reg? . dfn Index is LIST <ref> [12] </ref>. op ? : -&gt; Boat? . op heat : Reg? Reg? Boat? -&gt; Reg? . op heat : Reg Reg Boat -&gt; Reg . var B B' : Boat? . vars R R' R'' : Reg? . var I : Index . op winner : Reg? Index -&gt; Boat? .
Reference: [13] <author> Joseph Goguen. </author> <title> The denial of error. </title> <editor> In Christiane Floyd, Heinz Zullighoven, Reinhard Budde, and Reinhard Keil-Slawik, editors, </editor> <booktitle> Software Development and Reality Construction, </booktitle> <pages> pages 193-202. </pages> <publisher> Springer Verlag, </publisher> <year> 1992. </year> <title> Also in Four Pieces on Error, Truth and Reality, </title> <institution> Programmming Research Group Technical Monograph PRG-89, </institution> <month> October </month> <year> 1990, </year> <institution> Oxford. </institution>
Reference: [14] <author> Joseph Goguen. </author> <title> The dry and the wet. </title> <editor> In Eckhard Falkenberg, Colette Rolland, and El-Sayed Nasr-El-Dein El-Sayed, editors, </editor> <booktitle> Information Systems Concepts, </booktitle> <pages> pages 1-17. </pages> <publisher> Else-vier North-Holland, </publisher> <year> 1992. </year> <booktitle> Proceedings, IFIP Working Group 8.1 Conference (Alexandria, Egypt); also, Programming research Group, Technical Monograph PRG-100, </booktitle> <address> March 1992, Oxford. </address> <month> 27 </month>
Reference-contexts: We suggest that both the formal, context insensitive, and the informal, socially situated aspects of information are crucial to the success of Requirements Engineering projects. Elsewhere, we have called these two aspects "the dry" and "the wet," respectively <ref> [14] </ref>. Here, we suggest that Requirements Engineering has a strong practical need to reconcile them, and that this kind of reconciliation may be the very essence of Requirements Engineering. <p> We call these types of information dry and wet, respectively, follow-ing <ref> [14] </ref>. Note that there is really a continuum of intermediate cases, e.g., "damp" information, such as cookery recipes.
Reference: [15] <author> Joseph Goguen. </author> <title> Theorem Proving and Algebra. MIT, </title> <note> to appear. </note>
Reference-contexts: This subsection explains this concept in more detail, while applying it to the Henley Regatta. Unfortunately, the formalism is rather technical; further mathematical details may be found, for example, in [21] and <ref> [15] </ref>. Several different kinds of entity are involved in a regatta. Some of these can be arranged in a hierarchical classification scheme according to what we will call their sorts.
Reference: [16] <author> Joseph Goguen and Charlotte Linde. </author> <title> Cost-benefit analysis of a proposed computer system. </title> <type> Technical report, Structural Semantics, </type> <year> 1978. </year>
Reference-contexts: Nonetheless, any such interpretation can be considered to be some part of the meaning of the text; of course, each interpretation will seem more cogent to some analysts and groups than others, and some may seem dubious to most. Work by Goguen and Linde <ref> [16, 17] </ref> shows that information extracted from naturally occurring instructional discourse can often be translated without much difficulty into dataflow diagrams of the kind used in structured design methodologies, such as those of De Marco [35] and Yourdon [51]; nevertheless, there are questions about how such translations can be justified. <p> Of course, the requirements methods that we classified are in the world of working requirements engineers, even though no single engineer can be expected to have had experience with all of them. 5 Value Systems Goguen and Linde <ref> [16, 17] </ref> have developed a method that yields a value system for an organisa-tion (or part thereof) from a collection of naturally occurring stories (and possibly jokes 9 ) told by members of an organisation among themselves on informal occasions, such as their coffee and lunch breaks.
Reference: [17] <author> Joseph Goguen and Charlotte Linde. </author> <title> Structural semantic analysis of the information structure of organizations. </title> <type> Technical report, Structural Semantics, </type> <year> 1981. </year>
Reference-contexts: Nonetheless, any such interpretation can be considered to be some part of the meaning of the text; of course, each interpretation will seem more cogent to some analysts and groups than others, and some may seem dubious to most. Work by Goguen and Linde <ref> [16, 17] </ref> shows that information extracted from naturally occurring instructional discourse can often be translated without much difficulty into dataflow diagrams of the kind used in structured design methodologies, such as those of De Marco [35] and Yourdon [51]; nevertheless, there are questions about how such translations can be justified. <p> Of course, the requirements methods that we classified are in the world of working requirements engineers, even though no single engineer can be expected to have had experience with all of them. 5 Value Systems Goguen and Linde <ref> [16, 17] </ref> have developed a method that yields a value system for an organisa-tion (or part thereof) from a collection of naturally occurring stories (and possibly jokes 9 ) told by members of an organisation among themselves on informal occasions, such as their coffee and lunch breaks.
Reference: [18] <author> Joseph Goguen and Charlotte Linde. </author> <title> Linguistic methodology for the analysis of aviation accidents. </title> <type> Technical report, Structural Semantics, </type> <month> December </month> <year> 1983. </year> <type> NASA Contractor Report 3741, </type> <institution> Ames Research Center. </institution>
Reference-contexts: Other research by Goguen and Linde <ref> [32, 22, 18, 20] </ref> shows that plans, explanations, directions, and other everyday types of discourse have a high level structure that relates directly to their social and semantic domains. <p> Other research by Goguen and Linde [32, 22, 18, 20] shows that plans, explanations, directions, and other everyday types of discourse have a high level structure that relates directly to their social and semantic domains. What is called "command and control" discourse in <ref> [18] </ref> seems especially relevant to Requirements Engineering, because its analysis can be used to reveal the structure of tasks unfolding in real time.
Reference: [19] <author> Joseph Goguen and Charlotte Linde. </author> <title> Techniques for requirements elicitation. </title> <editor> In Stephen Fickas and Anthony Finkelstein, editors, </editor> <booktitle> Requirements Engineering '93, </booktitle> <pages> pages 152-164. </pages> <publisher> IEEE, </publisher> <year> 1993. </year> <note> Also Technical Report, </note> <institution> Centre for Requirements and Foundations, Oxford University Computing Lab, </institution> <year> 1992. </year>
Reference-contexts: Various techniques from sociology and sociolinguistics seem promising for this purpose, and some of these are discussed later in this section; a more detailed exposition of these techniques with further comparison is given in <ref> [19] </ref>. 2.1 Ethnomethodology Traditional sociology has been much influenced by what it considers to be orthodox science, where a scientist first formulates a theory, on the basis of which he makes predictions, which 2 he then tests empirically. <p> I do not suggest that statistics and questionnaires are never useful, only that they are not always valid, and in particular, that they should not be used in situations where context plays a significant role. (See <ref> [19] </ref> for a more detailed discussion of questionnaires and interviews.) Ethnomethodology [11] can be seen as a reaction against the "scientific" methodology of traditional sociology. (More detailed discussion of ethnomethodology and science may be found in [45] and [46]). <p> Also, Suchman [48] gives a rather similar list of qualities for plans. Unfortunately, Ethnomethodology can be difficult to understand; however, relatively comprehensible expositions of certain points have been given by [25], [31], [48] and <ref> [19] </ref>. Conversation Analysis grew out of Ethnomethodology through the work of Sacks on how speakers organise such details as timing, overlap, response, interruption, and repair in ordinary conversation (see [41, 42]). Interaction Analysis extends Conversation Analysis to include video data, particularly in institutional settings. <p> However, it is far from the only way to elicit requirements, and it is not the best method for all circumstances. (Further discussion of these issues, with examples, may be found in <ref> [19] </ref>.) 2.2 Discourse Analysis Although natural language is often criticised, e.g., by advocates of formal methods, for its informality, ambiguity, and lack of explicit structure, these features can actually be advantages for requirements.
Reference: [20] <author> Joseph Goguen, Charlotte Linde, and Miles Murphy. </author> <title> Crew communication as a factor in aviation accidents. </title> <editor> In E. James Hartzell and Sandra Hart, editors, </editor> <booktitle> Papers from the 20th Annual Conference on Manual Control. </booktitle> <institution> NASA Ames Research Center, </institution> <year> 1984. </year>
Reference-contexts: Other research by Goguen and Linde <ref> [32, 22, 18, 20] </ref> shows that plans, explanations, directions, and other everyday types of discourse have a high level structure that relates directly to their social and semantic domains.
Reference: [21] <author> Joseph Goguen, James Thatcher, and Eric Wagner. </author> <title> An initial algebra approach to the specification, correctness and implementation of abstract data types. </title> <type> Technical Report RC 6487, </type> <institution> IBM T.J. Watson Research Center, </institution> <month> October </month> <year> 1976. </year> <title> In Current Trends in Programming Methodology, IV, </title> <editor> Raymond Yeh, editor, </editor> <publisher> Prentice-Hall, </publisher> <year> 1978, </year> <pages> pages 80-149. </pages>
Reference-contexts: This subsection explains this concept in more detail, while applying it to the Henley Regatta. Unfortunately, the formalism is rather technical; further mathematical details may be found, for example, in <ref> [21] </ref> and [15]. Several different kinds of entity are involved in a regatta. Some of these can be arranged in a hierarchical classification scheme according to what we will call their sorts. <p> The above has sketched a precise mathematical theory of abstract data types, in which an abstract type is an isomorphism class of many-sorted algebras; see <ref> [21] </ref> for some further details. One particular result in this theory is that any computable many-sorted algebra, and thus any abstract data type, has a representation by trees. <p> Perhaps this language could be simplified, but the approach presented here was developed in the context of Computing Science, where there is a strong preference for a rigorous mathematical development <ref> [21] </ref>. In fact, the abstract data type concept is rather sophisticated, and I have simplified many details, and omitted others. However, the emphasis on the social situatedness of abstract data types seems to be entirely new.
Reference: [22] <author> Joseph Goguen, James Weiner, and Charlotte Linde. </author> <title> Reasoning and natural explanation. </title> <journal> International Journal of Man-Machine Studies, </journal> <volume> 19 </volume> <pages> 521-559, </pages> <year> 1983. </year>
Reference-contexts: Other research by Goguen and Linde <ref> [32, 22, 18, 20] </ref> shows that plans, explanations, directions, and other everyday types of discourse have a high level structure that relates directly to their social and semantic domains. <p> Support for this principle can be found in the empical work on plans and explanations reported in [32] and <ref> [22] </ref>, as well as in the work of Suchman. In particular, the interpretation of requirements, indicating whether or not they have been successfully met, is the outcome of a complex social process that typically involves negotiation and retrospective reconstruction; it may even involve legal action.
Reference: [23] <author> Joseph Goguen, Timothy Winkler, Jose Meseguer, Kokichi Futatsugi, and Jean-Pierre Jouannaud. </author> <title> Introducing OBJ. In Joseph Goguen, editor, Applications of Algebraic Specification using OBJ. </title> <address> Cambridge, </address> <note> to appear 1993. Also to appear as Technical Report from SRI International. </note>
Reference-contexts: For example, heat (heat ('JesusCam, 'ChristCh, ?), 'LadyM, ?) is a well formed term, in which OBJ3-style identifiers are used as constants for the names of boats; these identifiers begin with a quote and contain no spaces <ref> [23] </ref> (we have also further abbreviated the boat names). Given any term t and algebra A over the same signature, that term denotes a unique representation in A. <p> the examples discussed here has a tree representation 14 . (There is also a somewhat more sophisticated approach, based on behavioural satisfaction, that does not require initiality; see [12].) A complete formal specification of our Henley Regatta abstract data type is given in the appendix, using the specification language OBJ3 <ref> [23] </ref>. This specification is executable, and has actually been executed. (Experience shows that it is necessary to test all but the most trivial specifications in order to eliminate bugs.) It may seem surprising how complex the complete specification is, with its various sorts, subsorts, methods, and especially equations. <p> It is not feasible to give a complete tutorial on OBJ3 here; the interested reader should look elsewhere for details, e.g., <ref> [23] </ref>. However, a few remarks may help the untutored reader to obtain a rough overview of the specification given below. There are four modules, each of which begins with the keyword "obj" and end with the keyword "endo." Immediately after "obj" comes the name of the module.
Reference: [24] <author> Charles Goodwin and John Heritage. </author> <title> Conversation analysis. </title> <journal> Annual Review of Anthropology, </journal> <volume> 19 </volume> <pages> 283-307, </pages> <year> 1990. </year>
Reference-contexts: Conversation Analysis grew out of Ethnomethodology through the work of Sacks on how speakers organise such details as timing, overlap, response, interruption, and repair in ordinary conversation (see [41, 42]). Interaction Analysis extends Conversation Analysis to include video data, particularly in institutional settings. See <ref> [24] </ref> for a recent overview of Conversation Analysis, and [27] for a collection of essays on and applications of Interaction Analysis. All these fields are strongly empirically based. Typical projects can involve hundreds of hours of work in recording, transcribing and analysing data.
Reference: [25] <author> Marina Jirotka. </author> <title> Ethnomethodology and requirements engineering. </title> <type> Technical Report PRG-TR-92-27, </type> <institution> Centre for Requirements and Foundations, Oxford University Computing Lab, </institution> <year> 1991. </year>
Reference-contexts: Also, Suchman [48] gives a rather similar list of qualities for plans. Unfortunately, Ethnomethodology can be difficult to understand; however, relatively comprehensible expositions of certain points have been given by <ref> [25] </ref>, [31], [48] and [19]. Conversation Analysis grew out of Ethnomethodology through the work of Sacks on how speakers organise such details as timing, overlap, response, interruption, and repair in ordinary conversation (see [41, 42]). Interaction Analysis extends Conversation Analysis to include video data, particularly in institutional settings. <p> Unfortunately, the data on which these structural theories of large grain discourse were based was not collected with the rigour of Ethnomethod-ology (see <ref> [25] </ref>); nevertheless, we hope that a more careful ethnomethodological study might support at least some aspects of such theories. 5 A Computing Scientist might say that the default connective for a narrative sequence in English is sequential composition (";"), whereas in Balinese it is parallel composition ("jj"). 6 2.3 Towards a
Reference: [26] <author> Jiro Kawakita. </author> <title> KJ Method: a Scientific Approach to Problem Solving. </title> <institution> Kawakita Research Institute, </institution> <year> 1975. </year>
Reference-contexts: Many interior nodes, which express superordinate values, are also situated in this sense, but others were created by the analysts, by clustering nodes into larger and larger related groups, in the general style of the KJ method 11 <ref> [26] </ref>. The edges in Figure 3 express relationships of subordination; these are situated to the extent that there is evidence for them in the structure of the discourse; moreover, members could have been asked about them.
Reference: [27] <author> Adam Kendon. </author> <title> Conducting Interaction: Patterns of Behavior in Focused Encounters. </title> <institution> Cam-bridge University, </institution> <year> 1990. </year> <title> Studies in Interactional Sociolinguistics Number 7. </title>
Reference-contexts: Interaction Analysis extends Conversation Analysis to include video data, particularly in institutional settings. See [24] for a recent overview of Conversation Analysis, and <ref> [27] </ref> for a collection of essays on and applications of Interaction Analysis. All these fields are strongly empirically based. Typical projects can involve hundreds of hours of work in recording, transcribing and analysing data.
Reference: [28] <author> William Labov. </author> <title> The transformation of experience in narrative syntax. </title> <booktitle> In Language in the Inner City, </booktitle> <pages> pages 354-396. </pages> <institution> University of Pennsylvania, </institution> <year> 1972. </year>
Reference-contexts: According to the principle of accountability, a member of some group who tells an informal story must establish to the audience the relevance of the actions reported. The classic case, studied by William Labov <ref> [28] </ref>, is the narrative of personal experience, where the narrator is an agent in the story. The most typical way to accomplish accountability is to include specific evaluative material within the body of the story that relates the narrative material to shared social values. <p> To further explain and illustrate these ideas, let us analyse a simple story. The nursery rhyme that we use is not, strictly speaking, a naturally occurring spontaneous story, let alone a narrative of personal experience, as studied by Labov <ref> [28] </ref>. However, it is often read, or repeated from memory, to children in natural social settings, and thus an analysis of the values in it should tell us something about what our society teaches its children. <p> Note that, unlike the nursery example given in Section 2.2, here we are primarily concerned with what Labov called narratives of personal experience, in which an individual relates events that were personally experienced <ref> [28] </ref>. The method classifies the evaluative material (in the sense discussed in Section 2.2) of the stories collected, using a formal structure called a value system tree, in which higher level nodes correspond to higher level values, and lower level nodes correspond to refinements, applications, or corrections of superordinate nodes.
Reference: [29] <editor> Bruno Latour. </editor> <booktitle> Science in Action. </booktitle> <publisher> Open University, </publisher> <year> 1987. </year>
Reference-contexts: One exciting voice in this field is Bruno Latour, who has identified certain properties that distinguish the work of scientists from other kinds of work <ref> [29] </ref>. Latour introduced the phrase immutable mobile for a representation that can be interpreted in (what counts as) the same way in a variety of contexts; thus, immutable mobiles are information structures that have been (at least partially) dried out. <p> These considerations suggest that formalisation may be a key technique for making information drier. Let us call this the formalisation hypothesis; several illustrations of it are given in the following sections. We can also relate this point to the immutable mobiles described by Bruno Latour <ref> [29] </ref>, which are distinguished by the possibility of their being interpreted in what counts as the same way for practical purposes in a variety of contexts.
Reference: [30] <author> Claude Levi-Strauss. </author> <title> The Raw and the Cooked. </title> <publisher> Penguin, </publisher> <year> 1964. </year> <title> Translation by John and Doreen Weightman, </title> <booktitle> 1986. </booktitle> <pages> 28 </pages>
Reference-contexts: On the contrary, it derives its plausibility from its general similarity to many other such lists. For example, qualities like these are familiar to anthropologists (e.g., see various comments in Levi-Strauss <ref> [30] </ref>); however, anthropologists have not (to my knowledge) been very precise in distinguishing among different qualities. Also, Suchman [48] gives a rather similar list of qualities for plans.
Reference: [31] <author> Steven Levinson. </author> <title> Pragmatics. </title> <address> Cambridge University, </address> <year> 1983. </year>
Reference-contexts: Also, Suchman [48] gives a rather similar list of qualities for plans. Unfortunately, Ethnomethodology can be difficult to understand; however, relatively comprehensible expositions of certain points have been given by [25], <ref> [31] </ref>, [48] and [19]. Conversation Analysis grew out of Ethnomethodology through the work of Sacks on how speakers organise such details as timing, overlap, response, interruption, and repair in ordinary conversation (see [41, 42]). Interaction Analysis extends Conversation Analysis to include video data, particularly in institutional settings.
Reference: [32] <author> Charlotte Linde and Joseph Goguen. </author> <title> Structure of planning discourse. </title> <journal> Journal of Social and Biological Structures, </journal> <volume> 1 </volume> <pages> 219-251, </pages> <year> 1978. </year>
Reference-contexts: Other research by Goguen and Linde <ref> [32, 22, 18, 20] </ref> shows that plans, explanations, directions, and other everyday types of discourse have a high level structure that relates directly to their social and semantic domains. <p> Support for this principle can be found in the empical work on plans and explanations reported in <ref> [32] </ref> and [22], as well as in the work of Suchman. In particular, the interpretation of requirements, indicating whether or not they have been successfully met, is the outcome of a complex social process that typically involves negotiation and retrospective reconstruction; it may even involve legal action.
Reference: [33] <author> Eric Livingston. </author> <title> The Ethnomethodology of Mathematics. </title> <publisher> Routledge & Kegan Paul, </publisher> <year> 1987. </year>
Reference-contexts: It also seems promising to apply techniques from Ethnomethodology to the information in computer-based systems. Work that may help point the way has been done by Eric Livingston <ref> [33] </ref>, showing the lived work involved in mathematical proofs.
Reference: [34] <author> Jean-Fran~cois Lyotard. </author> <title> The Postmodern Condition: a Report on Knowledge. </title> <institution> Manchester University, </institution> <year> 1984. </year> <title> Theory and History of Literature, </title> <booktitle> Volume 10. </booktitle>
Reference-contexts: From this it follows that a good classification of sociological theories would provide a good basis for classifying requirements methods. We found a useful starting point in the work of French philosopher Jean-Fran~cois Lyotard <ref> [34] </ref>. His scheme first distinguishes between (what he calls) modern and postmodern theories of society; a modern theory relies upon a so-called meta-narrative, or "grand unifying story," to legitimate its claim to universality. Modern theories are further divided into (what we call) unitary and dual theories. <p> Lyotard's definition of postmodernism <ref> [34] </ref> says that societies are composed of many "local language games" that cannot necessarily be unified, or neatly divided into parts. Many other notions of postmodernism appear in the literature, some of which seem very superficial.
Reference: [35] <author> Tom De Marco. </author> <title> Structured Analysis and System Specification. </title> <publisher> Yourdon, </publisher> <year> 1978. </year>
Reference-contexts: Work by Goguen and Linde [16, 17] shows that information extracted from naturally occurring instructional discourse can often be translated without much difficulty into dataflow diagrams of the kind used in structured design methodologies, such as those of De Marco <ref> [35] </ref> and Yourdon [51]; nevertheless, there are questions about how such translations can be justified. Other research by Goguen and Linde [32, 22, 18, 20] shows that plans, explanations, directions, and other everyday types of discourse have a high level structure that relates directly to their social and semantic domains.
Reference: [36] <author> U.S. </author> <title> Government Accounting Office. Contracting for computer software development serious problems require management attention to avoid wasting additional millions. </title> <type> Technical Report FFGMSD-80-4, U.S. </type> <institution> Government Accounting Office, </institution> <month> November </month> <year> 1979. </year>
Reference-contexts: Government Accounting Office <ref> [36] </ref> reported that 95% of funds spent in a sample of nine projects totaling nearly 7 million dollars did not result in a system that was actually used.
Reference: [37] <author> Iona Opie and Peter Opie. </author> <title> The Oxford Dictionary of Nursery Rhymes. </title> <publisher> Oxford, </publisher> <year> 1951. </year>
Reference-contexts: Up Jack got, and home did trot, as fast as he could caper, 5 Jill put him to bed and plastered his head with vinegar and brown paper. (The second verse is one among several variations; see <ref> [37] </ref> for this and other background information.) The first line is a straightforward narrative clause, recounting an action in the narrative past tense, while the second line is an evaluative clause, giving a reason for the action of the first clause.
Reference: [38] <author> Roger Penrose. </author> <title> The Emperor's New Mind. </title> <publisher> Oxford, </publisher> <address> 1989. Vintage paperback edition, </address> <year> 1990. </year>
Reference-contexts: Local. This refers to the claim that actions and their interpretations are constructed in 3 Penrose <ref> [38] </ref> gives an elegant and readable exposition that illustrates just how strange the theories of con temporary physics can be. 4 Of course, this does not imply that such accounts are always, or even usually, requested by members of the group, or that they are necessarily given when requested. 3 some
Reference: [39] <author> Michael Polanyi. </author> <title> The Tacit Dimension. </title> <publisher> Routledge and Kegan Paul, </publisher> <year> 1967. </year>
Reference-contexts: This is not because managers are incompetent; on the contrary, they are (usually) genuine experts at their own job. Rather, it is due to what philosophers <ref> [39] </ref> call the problem of tacit knowledge, i.e., the phenomenon that people may know how to do something, without being able to articulate how they do it. Examples include riding bicycles, speaking languages, negotiating contracts, reconciling personal differences, and evaluating employees.
Reference: [40] <author> Harvey Sacks. </author> <title> An analysis of the course of a joke's telling in conversation. </title> <editor> In Richard Baumann and Joel Scherzer, editors, </editor> <booktitle> Explorations in the Ethnography of Speaking, </booktitle> <pages> pages 337-353. </pages> <address> Cambridge University, </address> <year> 1974. </year>
Reference-contexts: formal summary of the data that was collected, and of the analysts' understanding of it; its structure is open, in the sense that it remains subject to revision in the light of further data and further analysis, and contingent in 9 See the classical work on jokes by Harvey Sacks <ref> [40] </ref>. 10 Note that this representation differs from trees on earth, which have their roots at the bottom. 11 This method was introduced by the Japanese anthropologist Jiro Kawakita for classifying artifacts, and it is now rather widely used by Japanese businessmen and computing scientists.
Reference: [41] <author> Harvey Sacks. </author> <title> Lectures on Conversation. </title> <publisher> Blackwell, </publisher> <year> 1992. </year> <note> Edited by Gail Jefferson. </note>
Reference-contexts: Conversation Analysis grew out of Ethnomethodology through the work of Sacks on how speakers organise such details as timing, overlap, response, interruption, and repair in ordinary conversation (see <ref> [41, 42] </ref>). Interaction Analysis extends Conversation Analysis to include video data, particularly in institutional settings. See [24] for a recent overview of Conversation Analysis, and [27] for a collection of essays on and applications of Interaction Analysis. All these fields are strongly empirically based.
Reference: [42] <author> Harvey Sacks, Emanuel Schegloff, and Gail Jefferson. </author> <title> A simplest systematics of the organization of turn-taking in conversation. </title> <booktitle> Language, </booktitle> <volume> 504 </volume> <pages> 696-735, </pages> <year> 1974. </year>
Reference-contexts: Conversation Analysis grew out of Ethnomethodology through the work of Sacks on how speakers organise such details as timing, overlap, response, interruption, and repair in ordinary conversation (see <ref> [41, 42] </ref>). Interaction Analysis extends Conversation Analysis to include video data, particularly in institutional settings. See [24] for a recent overview of Conversation Analysis, and [27] for a collection of essays on and applications of Interaction Analysis. All these fields are strongly empirically based.
Reference: [43] <author> Motoshi Saeki, Hisayuki Horai, Katsuyasu Toyama, Naoya Uematsu, and Hajime Enomoto. </author> <title> Specification framework based on natural language. </title> <booktitle> In Proceedings of the Fourth International Workshop on Software Specification and Design, </booktitle> <pages> pages 87-94. </pages> <publisher> IEEE, </publisher> <year> 1987. </year>
Reference-contexts: There is a growing body of evidence that natural language is far more structured than most people realise, and that discourse structure carries much important information about what is being described. For example, work by Abbott [1], and by Enomoto, Horai and others <ref> [43] </ref> shows that the nouns and verbs used in stating requirements can provide important clues to an object oriented design for the system. In particular, the nouns give clues about classes and their attributes, and the verbs give clues about methods.
Reference: [44] <author> Claude Shannon and Warren Weaver. </author> <title> The Mathematical Theory of Communication. </title> <institution> University of Illinois, </institution> <year> 1964. </year>
Reference-contexts: This subsection presents what may be some initial steps towards a social theory of information. Objective and quantitative theories of information, such as the statistical theory of Shannon <ref> [44] </ref>, as well as objective but qualitative theories, such as the situation semantics of Barwise and Perry [2], are not adequate for our purpose. Although each may illuminate certain aspects of information, neither considers the social processes that create and sustain information through interpretation and negotiation.
Reference: [45] <editor> Wes Sharrock and Bob Anderson. Epistemology: Professional scepticism. In Graham Button, editor, </editor> <booktitle> Ethnomethodology and the Human Sciences, </booktitle> <pages> pages 51-76. </pages> <address> Cambridge, </address> <year> 1991. </year>
Reference-contexts: they should not be used in situations where context plays a significant role. (See [19] for a more detailed discussion of questionnaires and interviews.) Ethnomethodology [11] can be seen as a reaction against the "scientific" methodology of traditional sociology. (More detailed discussion of ethnomethodology and science may be found in <ref> [45] </ref> and [46]).
Reference: [46] <author> Wes Sharrock and Graham Button. </author> <title> The social actor: Social action in real time. </title> <editor> In Graham Button, editor, </editor> <booktitle> Ethnomethodology and the Human Sciences, </booktitle> <pages> pages 137-175. </pages> <address> Cambridge, </address> <year> 1991. </year>
Reference-contexts: not be used in situations where context plays a significant role. (See [19] for a more detailed discussion of questionnaires and interviews.) Ethnomethodology [11] can be seen as a reaction against the "scientific" methodology of traditional sociology. (More detailed discussion of ethnomethodology and science may be found in [45] and <ref> [46] </ref>).
Reference: [47] <author> Susan Leigh Star. </author> <title> The structure of ill-structured solutions: heterogeneous problem-solving, boundary objects and distributed artificial intelligence. </title> <editor> In Michael Huhns and Les Gasser, editors, </editor> <booktitle> Distributed Artificial Intelligence, </booktitle> <volume> volume 3, </volume> <pages> pages 37-54. </pages> <publisher> Morgan Kauffmann, </publisher> <year> 1988. </year>
Reference-contexts: The failure to take account of such factors explains why many large information systems have not worked well in practice. Leigh Star <ref> [47] </ref> has introduced the term "boundary object" to describe objects that are used in different ways by different social groups.
Reference: [48] <author> Lucy Suchman. </author> <title> Plans and Situated Actions: The Problem of Human-machine Communication. </title> <address> Cambridge University, </address> <year> 1987. </year>
Reference-contexts: The following list of qualities of situatedness (inspired in part by work of Lucy Suchman <ref> [48] </ref> on plans) may help to further clarify this point: 1. Emergent. <p> On the contrary, it derives its plausibility from its general similarity to many other such lists. For example, qualities like these are familiar to anthropologists (e.g., see various comments in Levi-Strauss [30]); however, anthropologists have not (to my knowledge) been very precise in distinguishing among different qualities. Also, Suchman <ref> [48] </ref> gives a rather similar list of qualities for plans. Unfortunately, Ethnomethodology can be difficult to understand; however, relatively comprehensible expositions of certain points have been given by [25], [31], [48] and [19]. <p> Also, Suchman <ref> [48] </ref> gives a rather similar list of qualities for plans. Unfortunately, Ethnomethodology can be difficult to understand; however, relatively comprehensible expositions of certain points have been given by [25], [31], [48] and [19]. Conversation Analysis grew out of Ethnomethodology through the work of Sacks on how speakers organise such details as timing, overlap, response, interruption, and repair in ordinary conversation (see [41, 42]). Interaction Analysis extends Conversation Analysis to include video data, particularly in institutional settings. <p> In fact, at least in successful large projects, the phases are constantly overlapping, and many actions and events are difficult to assign to phases. However, this is precisely what Suchman's work on plans <ref> [48] </ref> should lead us to expect, because lifecycle models are actually plans. As Suchman points out, plans serve as resources for action, rather than as rigid programs for future action. <p> done, and by the time the system is deployed (if it is), all that remains of the requirements process may be some colourful stories. (This is explained by the principle of volume.) Another basic principle of a Social Theory of Information may be an extension of Such-man's work on plans <ref> [48] </ref> to the broader claim that only our post hoc explanations for situated events appear to attain relative stability and independence from context; let us call this the retrospective hypothesis.
Reference: [49] <author> Stephen Toulmin. </author> <title> The Uses of Argument. </title> <address> Cambridge University, </address> <year> 1958. </year> <month> 29 </month>
Reference-contexts: For an even more detailed analysis, weights could be assigned to values based on their frequency in the data that support them. 6 The Structure of Sporting Events An interestingly different example comes from Stephen Toulmin's suggestive book The Uses of Argument <ref> [49] </ref>. Here the nodes and the tree itself are familiar categories to members; in particular, members have technical terms for these and many similar categories. This example is the annual regatta at Henley. Figures 4 and 5 show part of an initial "draw" for this regatta. Toulmin [49] presented his data <p> Uses of Argument <ref> [49] </ref>. Here the nodes and the tree itself are familiar categories to members; in particular, members have technical terms for these and many similar categories. This example is the annual regatta at Henley. Figures 4 and 5 show part of an initial "draw" for this regatta. Toulmin [49] presented his data in the form shown in Figure 4, saying that it came from "the sports page of a Sunday paper," presumably the (London) Times in the mid-1950s. Figure 5 presents the same information in the form of a traditional Computing Science tree. <p> Of course, the above discussion does not imply that members of a social group some of whose behaviour can be formalised by an abstract data type are familiar with the concept of an abstract data type; even Toulmin <ref> [49] </ref> only uses concrete representations, without realising that they are algebras, that different representations give isomorphic algebras, or that there is no unique best representation. Similarly, there is no implication that members are familiar with the social aspects of formalisation.
Reference: [50] <author> Alfred North Whitehead. </author> <title> A Treatise on Universal Algebra, with Applications, </title> <editor> I. </editor> <address> Cambridge, </address> <note> 1898. Reprinted 1960. </note>
Reference-contexts: A collection of functions f s that has all these properties (of preserving all the operations and being bijective) is called an isomorphism. The development and use of algebras in the sense explained above was a major advance in mathematics. Alfred North Whitehead <ref> [50] </ref> prefigured this revolution in the late nineteenth century, but it was Emmy Nother who is largely responsible for systematising and widely applying these concepts, thus creating what is now called "modern algebra" or "abstract algebra," and widely taught in undergraduate mathematics curricula. But we are still dealing with representations.
Reference: [51] <author> Edward Yourdon. </author> <title> Modern Structured Analysis. </title> <publisher> Prentice-Hall, </publisher> <year> 1989. </year> <month> 30 </month>
Reference-contexts: Work by Goguen and Linde [16, 17] shows that information extracted from naturally occurring instructional discourse can often be translated without much difficulty into dataflow diagrams of the kind used in structured design methodologies, such as those of De Marco [35] and Yourdon <ref> [51] </ref>; nevertheless, there are questions about how such translations can be justified. Other research by Goguen and Linde [32, 22, 18, 20] shows that plans, explanations, directions, and other everyday types of discourse have a high level structure that relates directly to their social and semantic domains.
References-found: 51

