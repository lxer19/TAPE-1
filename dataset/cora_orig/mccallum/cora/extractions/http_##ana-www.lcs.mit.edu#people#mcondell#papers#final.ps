URL: http://ana-www.lcs.mit.edu/people/mcondell/papers/final.ps
Refering-URL: http://ana-www.lcs.mit.edu/people/mcondell/resume.html
Root-URL: 
Title: Security Requirements for Uniform Resource Identifiers  
Author: Matthew Condell 
Date: December 7, 1995  
Abstract: The Internet Engineering Task Force(IETF) is currently designing an information infrastructure based on Uniform Resource Identifiers (URIs). This paper presents both the security services these identifiers might require and some services they may provide. By looking at these services, we can suggest which of them should be a required part of the infrastructure and what the infrastructure should look like so it can support the optional services. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Architecture Projects Management Limited "ANSA Security Services" AR.009.00 1993 </institution>
Reference-contexts: A similar scheme has been proposed in an environment where every object controls its own security policy [5] and is being incorporated into the security model for the ANSA system being developed by Architecture Projects Management Ltd. <ref> [1] </ref>. We can use a similar cascaded authentication scheme without using the URN as the capability. The capability can be an encrypted message chosen by the resource. It can be stored in the URC and distributed to anyone who has permission to read the URC.
Reference: [2] <author> Arms, W. and Ely, D. </author> <title> "The Handle System" Internet Draft draft-ietf-uri-urn-handles-00.txt June 1995 </title>
Reference-contexts: Based on these requirements, several competing URN schemes have been proposed. The path scheme [12] proposes a uniformly hierarchical name space which uses existing DNS technology to resolve URNs into a set of URLs. The Handle System <ref> [2] </ref> proposes a URN that has the from n/d where n is the name of a naming authority and d is an arbitrary string which is unique for that naming authority. A similar system based on OIDs and a DNS-based infrastructure has also been proposed [13].
Reference: [3] <author> Berners-Lee, T. </author> <title> "Universal Resource Identifiers in WWW: A Unifying Syntax for the Expression fo Names and Addresses of Objects on the Network as used in the WorldWide Web" RFC 1630. </title> <month> June </month> <year> 1994. </year>
Reference-contexts: They are the first identifier to be on a standards track. Much of this progress is due to their widespread use as locators for the World Wide Web <ref> [3] </ref>. Two RFCs have been written to define URLs, one that describes the basic URL [4] and a second that describes relative URLs [8].
Reference: [4] <author> Berners-Lee, T. et al. </author> <title> "Uniform Resource Locators (URL)" RFC 1738. </title> <month> Dec. </month> <year> 1994. </year>
Reference-contexts: They are the first identifier to be on a standards track. Much of this progress is due to their widespread use as locators for the World Wide Web [3]. Two RFCs have been written to define URLs, one that describes the basic URL <ref> [4] </ref> and a second that describes relative URLs [8]. A basic URL has the form: &lt;scheme&gt;:&lt;scheme-specific-part&gt; where &lt;scheme&gt; is a string defining the scheme (such as http, ftp, gopher, news, etc.) and the &lt;scheme-specific-part&gt; is a string that is interpreted based on the scheme. <p> For all schemes that use IP-based protocols, the &lt;scheme-specific-part&gt; has the following syntax: //&lt;user&gt;:&lt;password&gt;@&lt;host&gt;:&lt;port&gt;/&lt;url-path&gt; A URL may omit many of these fields when they are not needed, the details of which are described in <ref> [4] </ref>, but are not necessary for this paper. One should note that the URL specification allows a user to send her password as part of the URL.
Reference: [5] <author> Bull, J., Gong, L. and Sollins, K. </author> <booktitle> "Toward Security in an Open Systems Federation" ESORICS 92. </booktitle> <pages> pp 3-20. </pages> <publisher> Springer-Verlag LNCS Series, </publisher> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: When it is presented, the layers of encryption can be stripped off and the path of the URN can be checked against a security policy. A similar scheme has been proposed in an environment where every object controls its own security policy <ref> [5] </ref> and is being incorporated into the security model for the ANSA system being developed by Architecture Projects Management Ltd. [1]. We can use a similar cascaded authentication scheme without using the URN as the capability. The capability can be an encrypted message chosen by the resource.
Reference: [6] <author> Daniel, R. and Allen, T. </author> <note> "An SGML-based URC Service" Internet Draft draft-ietf-uri-urc-sgml-00.txt June 1995. </note>
Reference-contexts: A trivial URC has been defined [9], though it does not contain all the functionallity URCs will need. A possible specification for a full-fledged URC service based on SGML has also been suggested <ref> [6] </ref>. There has not been any formal agreement on the specifications for a URC, though. 2.3 Uniform Resource Locators Uniform Resource Locators are universally unique locators that facilitate the location and accessing of resources. They are the first identifier to be on a standards track.
Reference: [7] <author> Daniel, R. and Mealling, M. </author> <title> "URC Scenarios and Requirements" Internet Draft draft-ietf-uri-urc-req-01.txt March 1995. </title>
Reference-contexts: The only information that a URC must contain is location information (URLs) which describe where the resource can be found. Beyond that, little has been decided about URCs. Some thought has been put into how a URC authority may be used and some requirements they may have <ref> [7] </ref>. These requirements include: machine consumption, consistent external representation, transport friendliness, human readability, simplicity, rearrangeabil-ity, generality, structure, ignorability, searchability, incrementally modifiable, versioning, and backwards compatibility. A trivial URC has been defined [9], though it does not contain all the functionallity URCs will need. <p> These extras include a capability, digital signatures of the resource and the URN, access control hints, and owner and authority specific data. To enable such flexibility, we would like the structure of the URC to be unlimitedly extensible. This requirement was suggested in <ref> [7] </ref>. The extensibility would allow different URC authorities to offer different sets of security services without requiring that all URCs contain the same sets of meta-data. This would suggest that URCs should be structured as a set of attribute value pairs.
Reference: [8] <author> Fielding, R. </author> <title> "Relative Uniform Resource Locators" RFC 1808. </title> <month> June </month> <year> 1995. </year>
Reference-contexts: Much of this progress is due to their widespread use as locators for the World Wide Web [3]. Two RFCs have been written to define URLs, one that describes the basic URL [4] and a second that describes relative URLs <ref> [8] </ref>. A basic URL has the form: &lt;scheme&gt;:&lt;scheme-specific-part&gt; where &lt;scheme&gt; is a string defining the scheme (such as http, ftp, gopher, news, etc.) and the &lt;scheme-specific-part&gt; is a string that is interpreted based on the scheme.
Reference: [9] <author> Hoffman, P.E. and Daniel, R. </author> <note> "Trivial URC Syntax" urc0" Internet Draft draft-ietf-uri-urc-trivial-00.txt April 1995. </note>
Reference-contexts: These requirements include: machine consumption, consistent external representation, transport friendliness, human readability, simplicity, rearrangeabil-ity, generality, structure, ignorability, searchability, incrementally modifiable, versioning, and backwards compatibility. A trivial URC has been defined <ref> [9] </ref>, though it does not contain all the functionallity URCs will need. A possible specification for a full-fledged URC service based on SGML has also been suggested [6].
Reference: [10] <institution> IETF URI-WG. "URI Working Group Charter" &lt;URL:http://www.ietf.cnri.reston.va.us/html.charters/uri-charter.html&gt; </institution>
Reference-contexts: The security of such resource discovery services will also be considered to be an integral part of the work of this group." <ref> [10] </ref> While the security required for this framework hasn't been ignored, no analysis of what the requirements are has yet been done.
Reference: [11] <author> Kunze, J. </author> <title> "Functional Recommendations for Internet Resource Locators" RFC 1736. </title> <month> Feb. </month> <year> 1995. </year>
Reference: [12] <author> LaLiberte, D. and Shapiro, M. </author> <title> "The Path URN Specification" Internet Draft draft-ietf-uri-urn-path-01.txt July 1995. </title>
Reference-contexts: These requirements include the functional requirements: global scope, global uniqueness, persistence, scalability, legacy support, extensibility, independence, and resolution; and encoding requirements: single encoding, simple comparison, human transcribeablility, transport friendliness, machine consumption, and test recognition. Based on these requirements, several competing URN schemes have been proposed. The path scheme <ref> [12] </ref> proposes a uniformly hierarchical name space which uses existing DNS technology to resolve URNs into a set of URLs.
Reference: [13] <author> Mealling, M. et al. </author> <title> "Uniform Resource Names, ISO OIDs and DNS" Internet Draft draft-mealling-oid-dns-00.txt Nov. </title> <year> 1995. </year>
Reference-contexts: The Handle System [2] proposes a URN that has the from n/d where n is the name of a naming authority and d is an arbitrary string which is unique for that naming authority. A similar system based on OIDs and a DNS-based infrastructure has also been proposed <ref> [13] </ref>. This scheme is defined by the following syntax: URN:&lt;collection name&gt;[:&lt;CUI&gt;] where &lt;collection name&gt; is a hierarchical name describing the collection where the resource was originally published and &lt;CUI&gt;, a collection-unique identifier which is unique within the collection.
Reference: [14] <author> Sollins, K. </author> <title> "Cascaded Authentication" Proc. </title> <booktitle> of the IEEE Symp. on Security and Privacy, </booktitle> <address> Oakland, CA, pp.156-163, </address> <month> April </month> <year> 1988. </year>
Reference-contexts: It is also possible for specialized, local authorities to enforce security policies using access control lists (ACL). We can turn a URN into a capability using a scheme similar to the cascaded authentication scheme proposed in <ref> [14] </ref>. The capability is created by encrypting the name using a key held by the resource or the authority that controls it. Every time the capability is passed to 8 a new principal, that principal reencrypts it with its own key.
Reference: [15] <author> Sollins, K. and Masinter, L. </author> <title> "Functional Requirements for Uniform Resource Names" RFC 1737. </title> <month> Dec. </month> <year> 1994. </year> <month> 13 </month>
Reference-contexts: URNs should be unique through space and time. There is currently no specification for what form a URN should have, but a minimum set of requirements for them has been defined <ref> [15] </ref>. These requirements include the functional requirements: global scope, global uniqueness, persistence, scalability, legacy support, extensibility, independence, and resolution; and encoding requirements: single encoding, simple comparison, human transcribeablility, transport friendliness, machine consumption, and test recognition. Based on these requirements, several competing URN schemes have been proposed.
References-found: 15

