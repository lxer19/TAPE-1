URL: http://c.gp.cs.cmu.edu:5103/afs/cs/user/birkedal/pub/smlbta.ps.gz
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs/user/birkedal/www/papers.html
Root-URL: http://www.cs.cmu.edu
Title: A Normalization Code in Standard ML The following Standard ML code can be used for
Author: (CONSTR c) =&gt; apply (fn n=&gt;mk_eqconstraint (n,Dnode)) (r::c) =&gt; bt BTLINK bt) (BTVAR (dps,_),DYNAMIC =&gt; (apply update_dps (!dps); bt BTLINK bt) (DYNAMIC _,BTVAR (dps,_)) =&gt; (apply update_dps (!dps); bt BTLINK bt) =&gt; apply eq_S btvarlist 
Affiliation: end  
Date: 2.1].  
Note: scribed earlier has been  quires that the append operation on lists is O(1) in time  has been omitted for space reasons. The code has been replaced by  
Pubnum: [Tar83, Section  
Abstract: used a lot and we believe that this must be done for the For readability we have used standard list notation for the dependency lists although our complexity analysis re complexity analysis to hold.
Abstract-found: 1
Intro-found: 1
Reference: [And92] <author> Lars Ole Andersen. </author> <title> C program specialization. </title> <type> Tech nical Report 92/14, </type> <institution> DIKU, Department of Computer Science, University of Copenhagen, </institution> <month> May </month> <year> 1992. </year>
Reference: [And93] <author> Lars Ole Andersen. </author> <title> Binding time analysis and the taming of C pointers. </title> <booktitle> In Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation, </booktitle> <pages> pages 47-58. </pages> <publisher> ACM Press, </publisher> <month> June </month> <year> 1993. </year>
Reference: [BJ93] <author> Anders Bondorf and Jesper Jtrgensen. </author> <title> Efficient analyses for realistic off-line partial evaluation. </title> <journal> Journal of Functional Programming, special issue on partial evaluation, </journal> <volume> 3, </volume> <month> July </month> <year> 1993. </year>
Reference: [BW93] <author> Lars Birkedal and Morten Welinder. </author> <title> Partial evalua tion of Standard ML. </title> <type> Technical Report 93/22, </type> <institution> DIKU, </institution> <month> October </month> <year> 1993. </year>
Reference: [dN93] <author> Anne de Niel. </author> <title> Self-applicable Partial Evaluation of Polymorphically Typed Functional Languages. </title> <type> PhD thesis, </type> <institution> Katholieke Universiteit Leuven, </institution> <month> January </month> <year> 1993. </year>
Reference: [Hen91] <author> Fritz Henglein. </author> <title> Efficient type inference for higher-order binding-time analysis. </title> <editor> In John Hughes, editor, </editor> <booktitle> Functional Programming Languages and Computer Architecture, </booktitle> <address> Cambridge, Massachusetts, </address> <month> August </month> <year> 1991. </year> <booktitle> (Lecture Notes in Computer Science, </booktitle> <volume> vol. 523), </volume> <pages> pages 448-472. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference: [JGS93] <author> Neil D. Jones, Carsten K. Gomard, and Peter Sestoft. </author> <title> Partial Evaluation and Program Generation. </title> <publisher> Prentice-Hall, </publisher> <year> 1993. </year>
Reference: [Lau91] <author> John Launchbury. </author> <title> Projection Factorisations in Partial Evaluation. </title> <publisher> Cambridge University Press, </publisher> <year> 1991. </year>
Reference: [MT91] <author> Robin Milner and Mads Tofte. </author> <title> Commentary on Standard ML. </title> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference: [MTH90] <author> Robin Milner, Mads Tofte, and Robert Harper. </author> <title> The Definition of Standard ML. </title> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference: [NN88] <author> Hanne Riis Nielson and Flemming Nielson. </author> <title> Automatic binding time analysis for a typed -calculus. </title> <booktitle> Science of Computer Programming, </booktitle> <volume> 10 </volume> <pages> 139-176, </pages> <year> 1988. </year>
Reference: [PS94] <author> Jens Palsberg and Michael I. Schwartzbach. </author> <title> Binding-time analysis: Abstract interpretation versus type inference. </title> <booktitle> In Proc. ICCL'94, Fith IEEE International Conference on Computer Languages, </booktitle> <address> Toulouse, France, </address> <month> May </month> <year> 1994. </year> <note> To Appear. </note>


References-found: 12

