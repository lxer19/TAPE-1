URL: http://www.research.att.com/~stubblebine/97ccs.ps
Refering-URL: http://www.research.att.com/~stubblebine/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: freiter,stubblebineg@research.att.com  
Title: Path Independence for Authentication in Large-Scale Systems  
Author: Michael K. Reiter Stuart G. Stubblebine 
Address: Laboratories|Research, Murray Hill, New Jersey, USA  
Affiliation: AT&T  
Abstract: Authenticating the source of a message in a large distributed system can be difficult due to the lack of a single authority that can tell for whom a channel speaks. This has led many to propose the use of a path of authorities, each able to authenticate the next in the path, such that the first in the path can be authenticated by the message recipient and the last can authenticate the message source. In this paper we suggest the use of multiple paths to provide redundant confirmation of the message source, and focus on two related notions of path independence that seem to bolster authentication. We formalize the problems of locating maximum sets of paths with these independence properties in a graph-theoretic framework, give evidence that they are not polynomial-time solvable, and propose approximation algorithms for these problems. We also introduce PathServer for PGP, a service for finding sets of such paths to support authentication in PGP applications. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Beth, M. Borcherding, and B. Klein. </author> <title> Valuation of trust in open networks. </title> <editor> In D. Gollman, ed., </editor> <booktitle> Computer Security | ESORICS '94 (Lecture Notes in Computer Science 875), </booktitle> <pages> pages 3-18, </pages> <publisher> Springer Verlag, </publisher> <year> 1994. </year>
Reference-contexts: Much of this work has focused on assigning numerical measures of trustworthiness to paths or collections of paths (e.g., <ref> [20, 1, 15] </ref>). These efforts have recognized that shorter paths and multiple paths lend additional credibility to the authentication of a channel, and the derived numerical measures tend to reflect these observations. <p> In this paper we consider the following evaluation functions for locating a path that is "likely" to intersect the fewest other paths. 1. Length: In each iteration of the algorithm, choose the path from s to t of shortest length (in the range <ref> [1; : : : ; b] </ref>); i.e., (p) is the length of p. Intuitively, shorter paths have fewer nodes to share with other paths, and thus should be likely to intersect fewer other paths. The shortest path from s to t can be 6 1.
Reference: [2] <author> A. D. Birrell, B. W. Lampson, R. M. Needham and M. D. Schroeder. </author> <title> A global authentication service without global trust. </title> <booktitle> In Proceedings of the 1986 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 223-230, </pages> <month> April </month> <year> 1986. </year>
Reference-contexts: If the user is willing to trust the statements of each channel on the path, then the user authenticates the target channel according to the statement that c ` made about it. Such approaches have also been promoted in <ref> [2, 8, 13, 22] </ref>. Relying on a single path of channels can be unreliable since it assumes trust in all intermediate channels on the path, and a single instance of misplaced trust can result in a false authentication of the target channel. <p> Prior work on locating paths of channels typically focuses on finding a single path to a channel, and either assumes a known "topology" regarding what channels make statements about others <ref> [2, 8, 13] </ref> or exhibits exponential worst-case complexity as a function of the number of channels and statements [20, 21, 22].
Reference: [3] <author> International Telegraph and Telephone Consultative Committee (CCITT). </author> <title> The Directory Authentication Framework, </title> <type> Recommendation X.509, </type> <year> 1988. </year>
Reference: [4] <author> E. W. Dijkstra. </author> <title> A note on two problems in connexion with graphs. </title> <journal> Numerische Mathematik, </journal> <volume> 1 </volume> <pages> 269-271, </pages> <year> 1959. </year>
Reference-contexts: The path of length at most b from s to t with the smallest degree can be found in O (bm + bn log (bn)) time where n = jV j and m = jEj, using a variation of Dijkstra's shortest path algorithm <ref> [4] </ref>. 3. Random: Prior to executing the algorithm of Figure 3, assign a random weight w (c) to each c 2 V .
Reference: [5] <author> R. C. Entringer, D. E. Jackson, and P. J. Slater. </author> <title> Geodetic connectivity of graphs. </title> <journal> IEEE Transactions on Circuits and Systems CAS-24(8):460-463, </journal> <month> August </month> <year> 1977. </year>
Reference-contexts: Note that if s 6! t, then any k disjoint b-bounded paths from s to t are k-connective, but in general a set of b-bounded k-connective paths from s to t are not disjoint. For comparisons of these concepts on undirected graphs, see <ref> [5, 14] </ref>. Though we contend that solutions to BDP and BCP can be useful in supporting authentication of a target channel, it is up to individual users' policies to deter mine exactly how they are used. <p> We hope that work such as [16] will shed light on this issue. 6 Finding bounded connective paths To our knowledge, the Bounded Connective Paths (BCP) problem of Section 3 has not been considered from the algorithmic and complexity-theoretic viewpoints in the past. Given its close relationships to BDP <ref> [5, 14] </ref>, we might be inclined to think that analogs of the results and techniques for BDP in the previous section could be developed for BCP. In fact, this is somewhat true, and in this section we summarize these results and techniques.
Reference: [6] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: Specifically, the former is NP-hard and the latter is coNP-hard <ref> [6] </ref>. Moreover, the foremost practical instances of these problems that we are targeting (i.e., public key certification systems such as PGP) induce graphs of sufficient size to make this a severe limitation. We thus propose efficient heuristics to approximate solutions to these problems. <p> By an "approximation algorithm," we intuitively mean an efficient algorithm that usually comes close to the actual answer; a more careful definition and discussion can be found in <ref> [6] </ref>. The only prior work of which we are aware on approximation algorithms for BDP is due to Ronen and Perl [17]. They proposed an algorithm and showed empirically that it performs well on small random undirected graphs of 50 nodes. <p> The first of these properties (which is also required by the definition of an approximation algorithm <ref> [6] </ref>) indicates that our algorithms are fail-secure, in the sense that they will never return a set of paths from a source channel s to a target channel t that exaggerates the actual maximum set of disjoint paths from s to t. <p> Any set V 0 V such that no two nodes in V 0 are joined is said to be an independent set. Such a set V 0 of largest cardinality is said to be a maximum independent set. MIS is a well-known NP-hard problem (see <ref> [6] </ref>). In [10], Johnson presented a simple approximation algorithm for this problem; the algorithm is detailed in Figure 2. <p> With regards to complexity, computing whether bcp (G; b; s; t) k for some given k is coNP-complete (see Appendix A), which, like NP-completeness, is widely believed to imply that bcp (G; b; s; t) cannot be computed in polynomial time <ref> [6] </ref>. This complexity also has other implications that we care about.
Reference: [7] <author> M. R. Garey, D. S. Johnson, and L. Stockmeyer. </author> <title> Some simplified NP-complete graph problems. </title> <booktitle> Theoretical Computer Science 1 </booktitle> <pages> 237-267, </pages> <year> 1976. </year> <month> 10 </month>
Reference: [8] <author> V. D. Gligor, S. Luan, and J. N. Pato. </author> <booktitle> On inter-realm au-thentication in large distributed systems. In Proceedings of the 1992 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 2-17, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: If the user is willing to trust the statements of each channel on the path, then the user authenticates the target channel according to the statement that c ` made about it. Such approaches have also been promoted in <ref> [2, 8, 13, 22] </ref>. Relying on a single path of channels can be unreliable since it assumes trust in all intermediate channels on the path, and a single instance of misplaced trust can result in a false authentication of the target channel. <p> Prior work on locating paths of channels typically focuses on finding a single path to a channel, and either assumes a known "topology" regarding what channels make statements about others <ref> [2, 8, 13] </ref> or exhibits exponential worst-case complexity as a function of the number of channels and statements [20, 21, 22].
Reference: [9] <author> A. Itai, Y. Perl, and Y. Shiloach. </author> <title> The complexity of finding maximum disjoint paths with length constraints. </title> <booktitle> Networks 12 </booktitle> <pages> 277-286, </pages> <year> 1982. </year>
Reference-contexts: BDP has been previously studied from a complexity-theoretic point of view, and has been proved to be NP-hard <ref> [9] </ref>. 1 Thus, there is little hope of finding an efficient solution to BDP, and we turn to finding approximation algorithms for this problem. <p> While we introduce this first algorithm primarily for motivational purposes, it can be argued to be "efficient" in the following senses. First, if P 6= NP, then there is no algorithm for solving BDP exactly that is polynomial in n, since BDP remains NP-hard for any fixed b 4 <ref> [9] </ref>. <p> user that always chooses a fixed bound b 4 1 More precisely, BDP remains NP-hard for any fixed b 4, but can be solved in O (m p n) time on a graph with n nodes and m edges if b &lt; 4 using maximum matching and maximum flow techniques <ref> [9] </ref>.
Reference: [10] <author> D. S. Johnson. </author> <title> Worst case behavior of graph coloring algorithms. </title> <booktitle> In Proceedings of the 5th Southeastern Conference on Combinatorics, Graph Theory, and Computing, </booktitle> <pages> pages 513-527, </pages> <month> February </month> <year> 1974. </year>
Reference-contexts: Any set V 0 V such that no two nodes in V 0 are joined is said to be an independent set. Such a set V 0 of largest cardinality is said to be a maximum independent set. MIS is a well-known NP-hard problem (see [6]). In <ref> [10] </ref>, Johnson presented a simple approximation algorithm for this problem; the algorithm is detailed in Figure 2. <p> It is instructive to note that by applying Johnson's algorithm to ^ G we are choosing paths from s to t in G that intersect the fewest other paths from s to t. The proof of <ref> [10, Theorem 3.1] </ref> shows that the algorithm in Figure 2 is guaranteed to find an independent set of size at least blog k ^nc in any undirected graph ^ G = ( ^ V ; ^ E), where ^n = j ^ V j and k is the smallest integer such
Reference: [11] <author> S. Kent. </author> <title> Internet privacy enhanced mail. </title> <journal> Communications of the ACM 36(8) </journal> <pages> 48-60, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: In a distributed system there typically is no such central authority for this information. As the distributed system gets larger and more diverse, the difficulty of reliably authenticating a channel can increase substantially. This difficulty is exemplified in secure electronic mail systems such as PEM <ref> [11] </ref> and a number of systems based on the PGP [23] public key management and encryption tools. An e-mail message in these systems would typically contain a digital signature that is intended to enable the recipient of the message to determine the user who sent the message.
Reference: [12] <author> V. King, S. Rao, and R. Tarjan. </author> <title> A faster deterministic maximum flow algorithm. </title> <booktitle> In Proceedings of the 3rd ACM Symposium on Discrete Algorithms, </booktitle> <pages> pages 157-164, </pages> <year> 1992. </year>
Reference-contexts: Regarding our algorithms for finding bounded disjoint paths, accuracy testing of the algorithm due to Ronen and Perl [17] on certification graphs would make for an interesting comparison. David Johnson suggested computing a maximum flow (e.g., <ref> [12] </ref>) with capacity-constrained nodes for finding the number of disjoint paths from the source to the target.
Reference: [13] <author> B. Lampson, M. Abadi, M. Burrows and E. Wobber. </author> <title> Authentication in distributed systems: </title> <journal> Theory and practice. ACM Transactions on Computer Systems 10(4) </journal> <pages> 265-310, </pages> <month> Novem-ber </month> <year> 1992. </year>
Reference-contexts: An e-mail message in these systems would typically contain a digital signature that is intended to enable the recipient of the message to determine the user who sent the message. Following <ref> [13] </ref>, the channel in this case is the public key that can be used to verify the signature on the message, and authenticating the channel means determining the principals that could have generated that signature. <p> If the user is willing to trust the statements of each channel on the path, then the user authenticates the target channel according to the statement that c ` made about it. Such approaches have also been promoted in <ref> [2, 8, 13, 22] </ref>. Relying on a single path of channels can be unreliable since it assumes trust in all intermediate channels on the path, and a single instance of misplaced trust can result in a false authentication of the target channel. <p> Though PathServer currently supports only PGP, our work can also be applied to other public key management systems (e.g., those based on X.509) as well as to systems that employ other types of channels (e.g., shared keys, protected physical links, or a combination of these <ref> [13] </ref>). While our experience with PathServer suggests that these independence concepts are useful in bolstering assurance in authentication, they also have certain limitations. First, our insistence on independent paths is an effort to avoid depending heavily on a few principals in the process of authenticating a target channel. <p> Prior work on locating paths of channels typically focuses on finding a single path to a channel, and either assumes a known "topology" regarding what channels make statements about others <ref> [2, 8, 13] </ref> or exhibits exponential worst-case complexity as a function of the number of channels and statements [20, 21, 22]. <p> Our PathServer service highlights both of these goals. Prior work on the algorithmic aspects of our problem will be discussed in subsequent sections. 3 Problem statement In formalizing our problem, we borrow concepts and terminology from <ref> [13] </ref>. Our system consists of a set of principals (e.g., people, machines, roles), some of which are channels (e.g., network addresses or encryption keys). Channels are the only principals that can make statements directly.
Reference: [14] <author> L. Lovasz, V. Neumann-Lara, and M. Plummer. </author> <title> Mengerian theorems for paths of bounded length. </title> <booktitle> Periodica Mathemat-ica Hungarica 9(4) </booktitle> <pages> 269-276, </pages> <year> 1978. </year>
Reference-contexts: Note that if s 6! t, then any k disjoint b-bounded paths from s to t are k-connective, but in general a set of b-bounded k-connective paths from s to t are not disjoint. For comparisons of these concepts on undirected graphs, see <ref> [5, 14] </ref>. Though we contend that solutions to BDP and BCP can be useful in supporting authentication of a target channel, it is up to individual users' policies to deter mine exactly how they are used. <p> We hope that work such as [16] will shed light on this issue. 6 Finding bounded connective paths To our knowledge, the Bounded Connective Paths (BCP) problem of Section 3 has not been considered from the algorithmic and complexity-theoretic viewpoints in the past. Given its close relationships to BDP <ref> [5, 14] </ref>, we might be inclined to think that analogs of the results and techniques for BDP in the previous section could be developed for BCP. In fact, this is somewhat true, and in this section we summarize these results and techniques. <p> This choice of is motivated by the fact that the b-connectivity from s to t is at most b 2 times the size of a maximum set of disjoint paths from s to t <ref> [14] </ref>. Once the condition is met, the algorithm determines k such that the (s; t; b)-closure of D is k-connective (ignoring the path s ! t if it is present in D).
Reference: [15] <author> U. Maurer. </author> <title> Modelling a public-key infrastructure. </title> <editor> In E. Bertino, H. Kurth, G. Martella, and E. Montolivo, ed., </editor> <booktitle> Computer Security | ESORICS '96 (Lecture Notes in Computer Science 1146), </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: Much of this work has focused on assigning numerical measures of trustworthiness to paths or collections of paths (e.g., <ref> [20, 1, 15] </ref>). These efforts have recognized that shorter paths and multiple paths lend additional credibility to the authentication of a channel, and the derived numerical measures tend to reflect these observations.
Reference: [16] <author> N. McBurnett. </author> <title> PGP web of trust statistics. </title> <note> http://bcn.boulder.co.us/~neal/pgpstat/, 1996. </note>
Reference-contexts: In the context of PGP, there have been efforts to gather statistics about the graph of channels (public keys) induced by PGP certificates worldwide <ref> [16] </ref>. This work focuses on characterizing the structure of the graph, and in particular identifying its strongly-connected components, determining mean and maximum shortest path distances between channels, and 2 identifying channels in the graph that are central to its connectivity. <p> Since the characteristics of such graphs are yet to be conclusively identified, however, even generating such test graphs remains an open problem. We hope that work such as <ref> [16] </ref> will shed light on this issue. 6 Finding bounded connective paths To our knowledge, the Bounded Connective Paths (BCP) problem of Section 3 has not been considered from the algorithmic and complexity-theoretic viewpoints in the past.
Reference: [17] <author> D. Ronen and Y. </author> <title> Perl. Heuristics for finding a maximum number of disjoint bounded paths. </title> <booktitle> Networks 14 </booktitle> <pages> 531-544, </pages> <year> 1984. </year>
Reference-contexts: By an "approximation algorithm," we intuitively mean an efficient algorithm that usually comes close to the actual answer; a more careful definition and discussion can be found in [6]. The only prior work of which we are aware on approximation algorithms for BDP is due to Ronen and Perl <ref> [17] </ref>. They proposed an algorithm and showed empirically that it performs well on small random undirected graphs of 50 nodes. <p> Their algorithm runs in O (b 2 n 2 m) time and O (b 2 nm) space with a path bound b on a graph with n nodes and m edges. The class of algorithms that we describe in this section is much simpler than that in <ref> [17] </ref>, and offers superior time and space complexity. In one instantiation, our algorithm runs in O (nm) time and O (n+m) space. Another runs in O (bnm + bn 2 log (bn)) time and O (bn + m) space. <p> Regarding our algorithms for finding bounded disjoint paths, accuracy testing of the algorithm due to Ronen and Perl <ref> [17] </ref> on certification graphs would make for an interesting comparison. David Johnson suggested computing a maximum flow (e.g., [12]) with capacity-constrained nodes for finding the number of disjoint paths from the source to the target.
Reference: [18] <author> F. B. Schneider. </author> <title> Implementing fault-tolerant services using the state machine approach: A tutorial. </title> <journal> ACM Computing Surveys 22(4) </journal> <pages> 299-319, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: This approach is inspired by prior work in nullifying Byzantine-faulty sources of information by consulting multiple "independent" sources of information and accepting as true the information returned by a majority of them (e.g., <ref> [18] </ref>). In this context, our multiple sources of information are multiple paths of bounded length resulting in statements about the target channel. Proceedings of the 4th ACM Conference on Computer and Communications Security, April 1997, pp. 57-66.
Reference: [19] <author> J. W. Suurballe. </author> <title> Disjoint paths in a network. </title> <booktitle> Networks 4 </booktitle> <pages> 125-145, </pages> <year> 1974. </year>
Reference-contexts: It is interesting to note that the related problem of finding a requested number of disjoint paths of minimum total length can be solved in polynomial time <ref> [19] </ref>. 4 will observe polynomial growth in the running time of this algorithm as a function of the graph size, whereas there is no known algorithm that can solve BDP exactly for a fixed b 4 and provide polynomial growth as a function of graph size if P 6= NP.
Reference: [20] <author> A. Tarah and C. Huitema. </author> <title> Associating metrics to certification paths. </title> <booktitle> In Computer Security | ESORICS '92 (Lecture Notes in Computer Science 648), </booktitle> <pages> pages 175-189, </pages> <publisher> Springer Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Much of this work has focused on assigning numerical measures of trustworthiness to paths or collections of paths (e.g., <ref> [20, 1, 15] </ref>). These efforts have recognized that shorter paths and multiple paths lend additional credibility to the authentication of a channel, and the derived numerical measures tend to reflect these observations. <p> Prior work on locating paths of channels typically focuses on finding a single path to a channel, and either assumes a known "topology" regarding what channels make statements about others [2, 8, 13] or exhibits exponential worst-case complexity as a function of the number of channels and statements <ref> [20, 21, 22] </ref>. A contribution of our work is to look beyond a single path to locate a collection of paths with desired independence properties, without assuming a known topology on the relationships between channels and often without suffering from exponential complexity.
Reference: [21] <author> R. Yahalom, B. Klein and T. Beth. </author> <title> Trust relationships in secure systems|A distributed authentication perspective. </title> <booktitle> In Proceedings of the 1993 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 150-164, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Prior work on locating paths of channels typically focuses on finding a single path to a channel, and either assumes a known "topology" regarding what channels make statements about others [2, 8, 13] or exhibits exponential worst-case complexity as a function of the number of channels and statements <ref> [20, 21, 22] </ref>. A contribution of our work is to look beyond a single path to locate a collection of paths with desired independence properties, without assuming a known topology on the relationships between channels and often without suffering from exponential complexity.
Reference: [22] <editor> R. Yahalom, B. Klein and T. Beth. </editor> <booktitle> Trust-based navigation in distributed systems. Computing Systems 7(1) </booktitle> <pages> 45-73, </pages> <year> 1994. </year>
Reference-contexts: If the user is willing to trust the statements of each channel on the path, then the user authenticates the target channel according to the statement that c ` made about it. Such approaches have also been promoted in <ref> [2, 8, 13, 22] </ref>. Relying on a single path of channels can be unreliable since it assumes trust in all intermediate channels on the path, and a single instance of misplaced trust can result in a false authentication of the target channel. <p> Prior work on locating paths of channels typically focuses on finding a single path to a channel, and either assumes a known "topology" regarding what channels make statements about others [2, 8, 13] or exhibits exponential worst-case complexity as a function of the number of channels and statements <ref> [20, 21, 22] </ref>. A contribution of our work is to look beyond a single path to locate a collection of paths with desired independence properties, without assuming a known topology on the relationships between channels and often without suffering from exponential complexity.
Reference: [23] <author> P. Zimmerman. </author> <title> The Official PGP User's Guide. </title> <publisher> MIT Press, </publisher> <year> 1995. </year>
Reference-contexts: As the distributed system gets larger and more diverse, the difficulty of reliably authenticating a channel can increase substantially. This difficulty is exemplified in secure electronic mail systems such as PEM [11] and a number of systems based on the PGP <ref> [23] </ref> public key management and encryption tools. An e-mail message in these systems would typically contain a digital signature that is intended to enable the recipient of the message to determine the user who sent the message.
References-found: 23

