URL: http://www.cs.uchicago.edu/publications/tech-reports/TR-98-04.ps
Refering-URL: http://cs-www.uchicago.edu/publications/tech-reports/
Root-URL: 
Email: schaefer@cs.uchicago.edu  
Title: Graph Ramsey Theory and the Polynomial Hierarchy Preliminary Draft  
Author: Marcus Schaefer 
Date: March 30, 1998  
Address: 1100 East 58th Street Chicago, Illinois 60637, USA  
Affiliation: Department of Computer Science University of Chicago  
Abstract: In the Ramsey theory of graphs F ! (G; H) means that for every way of coloring the edges of F red and blue F will contain either a red G or a blue H. The problem arrowing of deciding whether F ! (G; H) lies in coNP NP and it was shown to be coNP hard by Burr [7]. We prove that arrowing is actually coNP NP -complete, simultaneously settling a conjecture of Burr and providing a rare natural example of a problem complete for a higher level of the polynomial hierarchy. We also show that strong arrowing, the version for induced subgraphs, is complete for coNP NP under Turing-reductions.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Manindra Agrawal, Thomas Thierauf. </author> <title> The Boolean Isomorphism Problem. </title> <booktitle> In: Proceedings of the 37th Annual Symposium on Foundations of Computer Science. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1996. </year>
Reference-contexts: Finally there is an analogue of the graph isomorphism problem, the boolean isomorphismproblem which asks whether two formulas are equivalent up to a permutation of the variables. boolean iso morphism is p 1 -hard, but not known to lie in p 1 . Agrawal and Thierauf <ref> [1] </ref> recently showed that the complement of boolean isomorphism lies in AM p 1 which means that we do not expect it to be complete for p 2 since this would collapse the polynomial hierarchy to p 2 Arrowing This section is devoted to a proof of Theorem 1.3.
Reference: [2] <author> Stefan A. Burr. </author> <title> A Survey of Noncomplete Ramsey Theory for Graphs. </title> <editor> In: Harary, F. (ed): </editor> <booktitle> Topics in Graph Theory. </booktitle> <institution> New York Academy of Sciences, </institution> <address> New York, </address> <month> 5875, </month> <journal> (Annals of the New York Academy of Sciences vol. </journal> <volume> 328), </volume> <year> 1979. </year>
Reference-contexts: Lemma 3.1 We can construct a graph F such that F (K 1;2 ; K n ) in polynomial time in n. 9 It is quite possible that this result is known already, but I have not been able to locate a reference. Burr <ref> [2] </ref> mentions that not much is known about r fl (G; H) (the order of the smallest graph F for which F (G; H)). As we mentioned earlier, the known proofs of the induced subgraph theorems only yield exponential upper bounds on r fl (G; H).
Reference: [3] <author> Stefan A. Burr. </author> <title> An NP-complete Problem in Euclidean Ramsey Theory. </title> <journal> Congressus Numerantium, </journal> <volume> 35, 131138, </volume> <year> 1982. </year>
Reference-contexts: Burr showed that deciding whether a tnite set of points in the plane can be colored with three colors such that no two points within distance K have the same color is NP-complete <ref> [3] </ref>. This seems to be the only computational result in Euclidean Ramsey theory. 12 The case of general Ramsey theory (as opposed to Graph Ramsey theory) is covered in a forthcoming survey by Bill Gasarch [14], hence we will not go into it.
Reference: [4] <author> Stefan A. Burr. </author> <title> Determining Generalized Ramsey Numbers is NP-hard. </title> <journal> Ars Combinatoria, </journal> <volume> 17, 2125, </volume> <year> 1984. </year>
Reference-contexts: For this reason Burr <ref> [4] </ref> considered the question of how hard it is to decide whether r (G; H) &lt; m, where m is part of the input. He showed that this problem is p 1 -hard.
Reference: [5] <author> Stefan A. Burr. </author> <title> Some Undecidable Problems Involving the Edge-Coloring and Vertex-Coloring of Graphs. </title> <journal> Discrete Mathematics, </journal> <volume> 50, 171177, </volume> <year> 1984. </year>
Reference-contexts: This observation is complemented by a result of Burr's <ref> [5] </ref> who showed that ; 0 can be m-reduced to arrowing even if F is restricted to be a highly computable (essentially tnite and periodic) graph. Hence this intnite version of arrowing is 1 -complete.
Reference: [6] <author> Stefan A. Burr. </author> <title> What can we Hope to Accomplish in Generalized Ramsey Theory? Discrete Mathematics, </title> <type> 67, 215225, </type> <year> 1987. </year>
Reference-contexts: Burr's result implies that arrowing is p 1 -hard, and it is easy to see that it is also p 1 -hard (if H is a single edge and G = K n , then the arrowing relation codes the clique problem). Burr <ref> [6, 7] </ref> conjectured that arrowing is p 2 -complete. This conjecture is indeed true: Theorem 1.3 arrowing is p 2 -complete.
Reference: [7] <author> Stefan A. Burr. </author> <title> On the Computational Complexity of Ramsey-Type Problems. </title> <editor> In: Jaroslav Neetil, Vojtch Rdl. </editor> <booktitle> Mathematics of Ramsey Theory, </booktitle> <publisher> Springer, </publisher> <year> 1990. </year> <month> 13 </month>
Reference-contexts: Stefan Burr showed that this problem is complete for p 1 for a large class of G's and H's. Theorem 1.2 (Burr <ref> [7] </ref>) If G and H are txed, three-connected graphs or triangles, then the problem of determining whether F ! (G; H) is p 1 -complete. An earlier version of this result (again by Burr) where G = H = K 3 is already mentioned by Garey and Johnson [13, GT6]. <p> Burr's result implies that arrowing is p 1 -hard, and it is easy to see that it is also p 1 -hard (if H is a single edge and G = K n , then the arrowing relation codes the clique problem). Burr <ref> [6, 7] </ref> conjectured that arrowing is p 2 -complete. This conjecture is indeed true: Theorem 1.3 arrowing is p 2 -complete. <p> The use of the clique in the proof seems to be essential, since arrowing can be solved in polynomial time if both G and H are restricted to be stars (by reducing it to a matching problem as shown by Burr <ref> [7] </ref>). We will talk more about related results in Ramsey theory in the conclusion of the paper. As general references we will use the book by Graham, Rothschild and Spencer on Ramsey theory [15] and the book by Diestel on graph theory [12]. <p> This problem we can circumvent by allowing Turing-reductions instead of m-reductions. In this way we can compute both Ramsey numbers and Ramsey-minimal graphs, but we run into another obstacle which is more serious. The constructions of determiners and senders as suggested by Burr <ref> [7] </ref> based on work by Burr, Erdfis and Lovsz [8], Burr, Neetil and Rdl [10] and Burr, Faudree and Schelp [9] require the use of exponentially sized hypergraphs (to avoid small circuits) which is something we cannot do in polynomial time.
Reference: [8] <author> Stefan A. Burr, Paul Erdfis, Laszlo Lovsz. </author> <title> On Graphs of Ramsey Type. </title> <journal> Ars Combinatoria, </journal> <volume> 1, 167190, </volume> <year> 1976. </year>
Reference-contexts: In this way we can compute both Ramsey numbers and Ramsey-minimal graphs, but we run into another obstacle which is more serious. The constructions of determiners and senders as suggested by Burr [7] based on work by Burr, Erdfis and Lovsz <ref> [8] </ref>, Burr, Neetil and Rdl [10] and Burr, Faudree and Schelp [9] require the use of exponentially sized hypergraphs (to avoid small circuits) which is something we cannot do in polynomial time.
Reference: [9] <author> Stefan A. Burr, R. J. Faudree, R. H. Schelp. </author> <title> On Ramsey-minimal Graphs. </title> <booktitle> In: Proceedings of the 8th Southeastern Conference on Combinatorics, Graph Theory and Computing, 115124, </booktitle> <address> Winnipeg, </address> <year> 1977. </year>
Reference-contexts: The constructions of determiners and senders as suggested by Burr [7] based on work by Burr, Erdfis and Lovsz [8], Burr, Neetil and Rdl [10] and Burr, Faudree and Schelp <ref> [9] </ref> require the use of exponentially sized hypergraphs (to avoid small circuits) which is something we cannot do in polynomial time. Perhaps, however, there is a way to build smaller determiners and senders for particular graphs; K 3 would obviously be the trst candidate to investigate. <p> Hence all we need are determiners and senders. Burr, Neetil, and Rdl [10] based on an idea from a paper by Burr, Faudree and Schelp <ref> [9] </ref>) showed that (G; H)-senders (both positive and negative) could be constructed if there were (G; H)-determiners and (H; G)-determiners (which is really the same thing as a blue determiner).
Reference: [10] <author> Stefan A. Burr, Jaroslav Neetil, Vojtech Rdl. </author> <title> On the Use of Senders in Generalized Ramsey Theory of Graphs. </title> <journal> Discrete Mathematics, </journal> <volume> 54, 113, </volume> <year> 1985. </year>
Reference-contexts: In this way we can compute both Ramsey numbers and Ramsey-minimal graphs, but we run into another obstacle which is more serious. The constructions of determiners and senders as suggested by Burr [7] based on work by Burr, Erdfis and Lovsz [8], Burr, Neetil and Rdl <ref> [10] </ref> and Burr, Faudree and Schelp [9] require the use of exponentially sized hypergraphs (to avoid small circuits) which is something we cannot do in polynomial time. <p> Hence all we need are determiners and senders. Burr, Neetil, and Rdl <ref> [10] </ref> based on an idea from a paper by Burr, Faudree and Schelp [9]) showed that (G; H)-senders (both positive and negative) could be constructed if there were (G; H)-determiners and (H; G)-determiners (which is really the same thing as a blue determiner). <p> As a matter of fact the existence of (G; H)-determiners is sucient: Lemma 4.3 Positive and negative senders for three-connected graphs and K 3 can be constructed in polynomial time from a determiner for the same graphs. Proof Lemma 2.3 in Burr, Neetil and Rdl <ref> [10] </ref> shows that if there is a (G; H) determiner and a (H; G) determiner for some three-connected G and H, then there is a negative (G; H)-sender with adjacent signal edges. Their construction works in polynomial time.
Reference: [11] <author> Vclav Chvtal. </author> <title> Tree-Complete Graph Ramsey Numbers. </title> <journal> Journal of Graph Theory, </journal> <volume> vol. 1, 93, </volume> <year> 1977. </year>
Reference-contexts: Determiners force a particular edge to be red. We will sometimes talk of red-determiners to make this point explicit. Lemma 2.3 (Chvtal, 1977 <ref> [11] </ref>) If T is a tree on t vertices, then r (T; K n ) = (t 1)(n 1) + 1. The lower bound of Chvtals result is established by coloring a subgraph (n 1)K t1 of K (t1)(n1) red and its complement blue. <p> Neither, however, is possible, since a red T would also be contained in the original graph, and a blue K n2 together with x would form a blue K n1 in the original graph. fl It is a graph-theoretical folklore fact (a proof can be found in Chvtal's note <ref> [11] </ref>) that a graph of minimum degree t 1 contains every tree on t points. Hence we can draw the following conclusion. Corollary 2.5 The minimum red degree in any (T; K n )-good coloring of K (t1)(n1) is t 2 where T is a tree of order t.
Reference: [12] <author> Reinhard Diestel. </author> <title> Graph Theory. </title> <publisher> Springer, </publisher> <address> New York, </address> <year> 1997. </year>
Reference-contexts: We will talk more about related results in Ramsey theory in the conclusion of the paper. As general references we will use the book by Graham, Rothschild and Spencer on Ramsey theory [15] and the book by Diestel on graph theory <ref> [12] </ref>. For now we turn to a closer look at the lower levels of the polynomial hierarchy (all unexplained notions from computational complexity can be found in Papadimitriou's book [20]). <p> The existence for every G and H of an F such that F (G; H) was only proved around 1973, independently, by Deuber, by Erdfis, Hajnal and Psa, and by Rdl <ref> [12] </ref>. Though these proofs are constructive the graph F they construct will be of doubly exponential size in the input graphs. Hence we have to prove our own induced subgraph result for two very simple graphs: K 1;2 and K n .
Reference: [13] <author> Michael R. Garey, David S. Johnson. </author> <title> Computers and Intractability. </title> <publisher> Springer, </publisher> <year> 1979. </year>
Reference-contexts: An earlier version of this result (again by Burr) where G = H = K 3 is already mentioned by Garey and Johnson <ref> [13, GT6] </ref>. If we drop the requirement that G and H be txed we get the arrowing problem. In the notation of Garey and Johnson: arrowing Instance: (Finite) graphs F , G and H. Question: Does F ! (G; H)? strong arrowing Instance: (Finite) graphs F , G and H. <p> The classes P and NP excel on both accounts and have become the most popular classes of computational complexity even outside the teld. Nothing similar is true for the higher levels of the polynomial hierarchy, and Garey and Johnson <ref> [13, Section 7.2] </ref> went so far as to say that the interest of the hierarchy was mainly theoretical and not practical. There is some evidence, however, that even p p 2 are natural classes of more than theoretical interest. <p> There is some evidence, however, that even p p 2 are natural classes of more than theoretical interest. Probably the trst natural problem to be shown p 2 -complete was integer expression inequiva lence by Stockmeyer <ref> [13, AN18] </ref> in 1976 shortly after the polynomial hierarchy was detned. A couple of problems related to integer expression inequivalence were later shown to be p 2 -complete and 2 2 -complete by Wagner [22] (he even mentions one p 3 -complete problem). <p> Later Stockmeyer detned the retned problem minimum equivalent expression dnf of deciding whether for a given DNF formula ' there is a formula of size at most k which is equivalent to it. Garey and Johnson <ref> [13] </ref> also mention the variant minimum equivalent expression where the requirement that ' be in DNF is dropped. Both minimum equivalent expression dnf and minimum equivalent expression are in p 2 whereas minimal is in p 2 .
Reference: [14] <author> William Ian Gasarch. </author> <title> A Survey of Recursive Combinatorics In: </title> <editor> Ershov, Goncharov, Nerode, Remmel (eds), </editor> <title> Handbook of Recursive Algebra. </title> <journal> North-Holland, </journal> <note> in preparation. </note>
Reference-contexts: This seems to be the only computational result in Euclidean Ramsey theory. 12 The case of general Ramsey theory (as opposed to Graph Ramsey theory) is covered in a forthcoming survey by Bill Gasarch <ref> [14] </ref>, hence we will not go into it. Most of the results in this area belong to computability rather than complexity. There is one exception though which also establishes a link to Graph Ramsey Theory, and that is the computation of Ramsey numbers.
Reference: [15] <author> Ronald L. Graham, Bruce L. Rothschild, Joel H. Spencer. </author> <title> Ramsey Theory. </title> <publisher> Wiley, </publisher> <year> 1990. </year>
Reference-contexts: We will talk more about related results in Ramsey theory in the conclusion of the paper. As general references we will use the book by Graham, Rothschild and Spencer on Ramsey theory <ref> [15] </ref> and the book by Diestel on graph theory [12]. For now we turn to a closer look at the lower levels of the polynomial hierarchy (all unexplained notions from computational complexity can be found in Papadimitriou's book [20]).
Reference: [16] <author> Edith Hemaspaandra, Gerd Wechsung. </author> <title> The Minimization Problem for Boolean Formulas. </title> <booktitle> Proceedings of the IEEE Symposium on Foundations of Computer Science (FOCS), </booktitle> <volume> 575584, </volume> <year> 1997. </year>
Reference-contexts: investigated in detail, and in parallel to research done in computability, Meyer and Stockmeyer detned the minimal problem of deciding whether for a given formula ' there is no formula of smaller size that is equivalent to it (the following information is taken from the paper by Hemaspaandra and Wechsung <ref> [16] </ref>). Later Stockmeyer detned the retned problem minimum equivalent expression dnf of deciding whether for a given DNF formula ' there is a formula of size at most k which is equivalent to it. <p> Both minimum equivalent expression dnf and minimum equivalent expression are in p 2 whereas minimal is in p 2 . It is a trivial observation that minimum equivalent expression dnf and therefore minimum equivalent expression are p 1 -hard. Only recently did Hemaspaandra and Wechsung <ref> [16] </ref> show that minimal too is p 1 -hard, and the proof is far from trivial.
Reference: [17] <author> Dung T. Huynh. </author> <title> Deciding the Inequivalence of Context-free Grammars with 1-Letter Terminal Alphabet is p 2 -Complete. </title> <journal> Theoretical Computer Science, </journal> <volume> 33, 305326, </volume> <year> 1984. </year>
Reference-contexts: same object is at the root of at least two other completeness results for the second level: Sagiv and Yannakakis [21] proved that deciding whether two monotonic relational expressions are equivalent is 2 -complete (monotonic expressions contain only the operators select, project, join and union), and a result by Huynh <ref> [17] </ref> shows that deciding whether two context-free grammars with only one terminal letter generate the same language is p 2 -complete. In a similar spirit Lin [19] recently showed a problem related to pattern matching (and program optimization) to be p 2 -complete.
Reference: [18] <author> Ker-I Ko, Wen-Guey Tzeng. </author> <title> Three P 2 -Complete Problems in Computational Learning Theory. </title> <journal> Computational Complexity, </journal> <volume> 1, 269310, </volume> <year> 1991. </year>
Reference-contexts: In a similar spirit Lin [19] recently showed a problem related to pattern matching (and program optimization) to be p 2 -complete. Ko and Tzeng <ref> [18] </ref> exhibited three p 2 -complete problems that belong to the realm of computational learning theory.
Reference: [19] <author> Chih-Long Lin. </author> <title> Optimizing TRIEs for Ordered Pattern Matching is P 2 -Complete. </title> <booktitle> Proceedings of the Tenth Annual Conference of Structure in Complexity Theory (Structures), </booktitle> <volume> 238244, </volume> <year> 1995. </year>
Reference-contexts: In a similar spirit Lin <ref> [19] </ref> recently showed a problem related to pattern matching (and program optimization) to be p 2 -complete. Ko and Tzeng [18] exhibited three p 2 -complete problems that belong to the realm of computational learning theory.
Reference: [20] <author> Christos H. Papadimitriou. </author> <title> Computational Complexity. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: For now we turn to a closer look at the lower levels of the polynomial hierarchy (all unexplained notions from computational complexity can be found in Papadimitriou's book <ref> [20] </ref>). The world between the trst and the second level of the polynomial hierarchy is not overcrowded, but in the twenty years since the hierarchy was trst detned some problems have been placed there, and several of them have been shown to be complete.
Reference: [21] <author> Yehoshua Sagiv, Mihalis Yannakakis. </author> <title> Equivalences Among Relational Expressions with the Union and Dierence Operators. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 27 (4), 633655, </volume> <year> 1980. </year>
Reference-contexts: The basic structure of integer expression inequivalence of testing whether two representations denote the same object is at the root of at least two other completeness results for the second level: Sagiv and Yannakakis <ref> [21] </ref> proved that deciding whether two monotonic relational expressions are equivalent is 2 -complete (monotonic expressions contain only the operators select, project, join and union), and a result by Huynh [17] shows that deciding whether two context-free grammars with only one terminal letter generate the same language is p 2 -complete.
Reference: [22] <author> Klaus W. </author> <title> Wagner The Complexity of Combinatorial Problems with Succinct Input Representations. </title> <journal> Acta Informatica, </journal> <volume> 23, 325356, </volume> <year> 1986. </year> <month> 14 </month>
Reference-contexts: A couple of problems related to integer expression inequivalence were later shown to be p 2 -complete and 2 2 -complete by Wagner <ref> [22] </ref> (he even mentions one p 3 -complete problem).
References-found: 22

