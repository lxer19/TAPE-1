URL: http://www.cs.tamu.edu/faculty/vaidya/papers/mobile-computing/96-017.ps.Z
Refering-URL: http://www.cs.tamu.edu/faculty/vaidya/mobile.html
Root-URL: http://www.cs.tamu.edu
Email: E-mail: fvaidya,shameedg@cs.tamu.edu  
Phone: Phone: (409) 845-0512 FAX: (409) 847-8578  
Title: Data Broadcast Scheduling On-line and Off-line Algorithms  
Author: Nitin H. Vaidya Sohail Hameed 
Date: July 1996  
Address: College Station, TX 77843-3112  
Affiliation: Department of Computer Science Texas A&M University  
Pubnum: Technical Report 96-017  
Abstract: With the increasing popularity of portable wireless computers, mechanisms to efficiently transmit information to such clients are of significant interest. The environment under consideration is asymmetric in that the information server has much more bandwidth available, as compared to the clients. In such environments, often it is not possible (or not desirable) for the clients to send explicit requests to the server. It has been proposed that in such systems the server should broadcast the data periodically. One challenge in implementing this solution is to determine the schedule for broadcasting the data, such that the wait encountered by the clients is minimized. A broadcast schedule determines what is broadcast by the server and when. In this report, we present three algorithms for determining broadcast schedules that minimize the wait time. Simulation results are presented to demonstrate that our algorithms perform well. Variations of our algorithms for environments subject to errors, and systems where different clients may listen to different number of broadcast channels are also considered. fl Research reported is supported in part by Texas Advanced Technology Program grant 009741-052-C. y This report supersedes most material in report 96-012 [13] and contains more recent results. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Acharya, M. Franklin, and S. Zdonik, </author> <title> "Prefetching from a broadcast disk," </title> <booktitle> in 12th International Conference on Data Engineering, </booktitle> <month> Feb. </month> <year> 1996. </year>
Reference-contexts: The existing schemes can be roughly divided into two categories (some schemes may belong to both categories, we have listed them in the most appropriate category): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 8, 12, 7, 6, 15, 16] </ref> and schemes attempting to reduce the tuning time [10, 9, 11]. 22 Ammar and Wong [4, 15] have performed extensive research on broadcast scheduling and obtained many interesting results. <p> Our on-line algorithm results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic on-line algorithm in [8, 15]. Chiueh [6] and Acharya et al. <ref> [3, 2, 1] </ref> present schemes that transmit the more frequently used items more often. However, they do not use optimal degree of replication, unlike our schemes. Jain and Werth [12] note that reducing the variance of spacing between consecutive instances of an item reduces the mean access time.
Reference: [2] <author> S. Acharya, R. Alonso, M. Franklin, and S. Zdonik, </author> <title> "Broadcast disks data management for asymmetric communications environment," </title> <booktitle> in ACM SIGMOD Conference, </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: Approaches for determining what to transmit and when, is the subject of this report. In the environment under consideration, the downstream communication capacity, from server to clients, is relatively much greater than the upstream communication capacity, from clients to server. Such environments are, hence, called asymmetric communication environments <ref> [2] </ref>. In an asymmetric environment, broadcasting the information is an effective way of making the information available simultaneously to a large number of users. For asymmetric environment, researchers have previously proposed algorithms for designing broadcast schedules [4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16]. <p> It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [4, 6, 10, 11, 12, 7, 3, 2, 15, 16] </ref> * Tuning time: This is the amount of time a client must listen to the broadcast until it receives the information it needs. <p> The existing schemes can be roughly divided into two categories (some schemes may belong to both categories, we have listed them in the most appropriate category): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 8, 12, 7, 6, 15, 16] </ref> and schemes attempting to reduce the tuning time [10, 9, 11]. 22 Ammar and Wong [4, 15] have performed extensive research on broadcast scheduling and obtained many interesting results. <p> Our on-line algorithm results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic on-line algorithm in [8, 15]. Chiueh [6] and Acharya et al. <ref> [3, 2, 1] </ref> present schemes that transmit the more frequently used items more often. However, they do not use optimal degree of replication, unlike our schemes. Jain and Werth [12] note that reducing the variance of spacing between consecutive instances of an item reduces the mean access time.
Reference: [3] <author> S. Acharya, M. Franklin, and S. Zdonik, </author> <title> "Dissemination-based data delivery using broadcast disks," </title> <journal> IEEE Personal Communication, </journal> <pages> pp. 50-60, </pages> <month> Dec. </month> <year> 1995. </year>
Reference-contexts: It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [4, 6, 10, 11, 12, 7, 3, 2, 15, 16] </ref> * Tuning time: This is the amount of time a client must listen to the broadcast until it receives the information it needs. <p> The first observation stated in Lemma 1 below is intuitive. This observation also follows from a result presented in [12], and has been implicitly used by others (e.g., <ref> [3, 4, 15] </ref>). Lemma 1 The broadcast schedule with minimum overall mean access time results when the instances of each item are equally spaced. Proof of the lemma is omitted here for brevity. In reality, it is not always possible to space instances of an item equally. <p> This is pictorially depicted in Figure 4. The above heuristic executes in O (M ) time. equal-sized sub-intervals. An item i whose p p i =l i value belongs to the j-th sub-interval is assigned to bucket B j (1 j k). 11 3.3.1 Comparison of Buckets and Multi-disk <ref> [3] </ref> The notion of a bucket is similar to that of a broadcast disk in the multi-disk approach proposed by Acharya et al. [3]. Therefore, the result in Equation 6 can be used to determine suitable frequencies for the broadcast disks. <p> p p i =l i value belongs to the j-th sub-interval is assigned to bucket B j (1 j k). 11 3.3.1 Comparison of Buckets and Multi-disk <ref> [3] </ref> The notion of a bucket is similar to that of a broadcast disk in the multi-disk approach proposed by Acharya et al. [3]. Therefore, the result in Equation 6 can be used to determine suitable frequencies for the broadcast disks. The differences between the two approaches are as follows: (a) Our algorithm is on-line in that the broadcast schedule is not predetermined. <p> The differences between the two approaches are as follows: (a) Our algorithm is on-line in that the broadcast schedule is not predetermined. This allows our algorithm to quickly react to any changes in parameters (such as demand probabilities). (b) The algorithm in <ref> [3] </ref> imposes a constraint that the instances of each item be equally spaced at the risk of introducing "holes" in the schedule (which may be filled with other information). Our algorithm does not create such holes. (c) Our algorithm works well with items of arbitrary sizes. [3] is constrained to fixed <p> (b) The algorithm in <ref> [3] </ref> imposes a constraint that the instances of each item be equally spaced at the risk of introducing "holes" in the schedule (which may be filled with other information). Our algorithm does not create such holes. (c) Our algorithm works well with items of arbitrary sizes. [3] is constrained to fixed size items. (d) Acharya et al. do not have a way of determining the optimal frequencies for the different disks, whereas, our algorithm automatically tries to use the optimal frequencies. 3.4 Cyclic Scheduling Algorithm We can use the on-line algorithm to generate off-line a schedule of <p> The existing schemes can be roughly divided into two categories (some schemes may belong to both categories, we have listed them in the most appropriate category): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 8, 12, 7, 6, 15, 16] </ref> and schemes attempting to reduce the tuning time [10, 9, 11]. 22 Ammar and Wong [4, 15] have performed extensive research on broadcast scheduling and obtained many interesting results. <p> Our on-line algorithm results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic on-line algorithm in [8, 15]. Chiueh [6] and Acharya et al. <ref> [3, 2, 1] </ref> present schemes that transmit the more frequently used items more often. However, they do not use optimal degree of replication, unlike our schemes. Jain and Werth [12] note that reducing the variance of spacing between consecutive instances of an item reduces the mean access time.
Reference: [4] <author> M. H. Ammar and J. W. Wong, </author> <title> "On the Optimality of Cyclic Transmission in Teletex Systems", </title> <journal> in IEEE Transactions on Communications, </journal> <volume> Vol. COM-35 No. 1, </volume> <pages> pp. 68-73, </pages> <month> Jan. </month> <year> 1987. </year>
Reference-contexts: Such environments are, hence, called asymmetric communication environments [2]. In an asymmetric environment, broadcasting the information is an effective way of making the information available simultaneously to a large number of users. For asymmetric environment, researchers have previously proposed algorithms for designing broadcast schedules <ref> [4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16] </ref>. Two metrics are used to evaluate these algorithms: * Access time: This is the amount of time a client has to wait for some information that it needs. <p> It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [4, 6, 10, 11, 12, 7, 3, 2, 15, 16] </ref> * Tuning time: This is the amount of time a client must listen to the broadcast until it receives the information it needs. <p> This result is a generalized version of a result presented in <ref> [4, 15] </ref>. * We present three algorithms for scheduling broadcasts, based on the above square-root rule. The first algorithm is an "on-line" algorithm that can be used by a server to determine which item to transmit next [13]. <p> The first observation stated in Lemma 1 below is intuitive. This observation also follows from a result presented in [12], and has been implicitly used by others (e.g., <ref> [3, 4, 15] </ref>). Lemma 1 The broadcast schedule with minimum overall mean access time results when the instances of each item are equally spaced. Proof of the lemma is omitted here for brevity. In reality, it is not always possible to space instances of an item equally. <p> That is, f i / p i l i To put it differently, for items i and j, f i = p i s l i Proof: Appendix A presents the proof. 2 A special case of Theorem 1 when all items are of identical size was derived in <ref> [4, 15] </ref> For cycle size N , P M j=1 f j l j = N . Therefore, the above theorem implies that, f i = p P M p . <p> In the figure, the normal on-line algorithm is labeled as on-line, whereas the modified version which does not take lengths into account is labeled without lengths. Note that some of the previous work <ref> [4, 13, 15, 14] </ref> does not take into account lengths of different items (or assumes lengths to be uniform). <p> The existing schemes can be roughly divided into two categories (some schemes may belong to both categories, we have listed them in the most appropriate category): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 8, 12, 7, 6, 15, 16] </ref> and schemes attempting to reduce the tuning time [10, 9, 11]. 22 Ammar and Wong [4, 15] have performed extensive research on broadcast scheduling and obtained many interesting results. <p> two categories (some schemes may belong to both categories, we have listed them in the most appropriate category): Schemes attempting to reduce the access time [4, 3, 2, 1, 8, 12, 7, 6, 15, 16] and schemes attempting to reduce the tuning time [10, 9, 11]. 22 Ammar and Wong <ref> [4, 15] </ref> have performed extensive research on broadcast scheduling and obtained many interesting results. Our square root rule is a generalization of that obtained by Ammar and Wong.
Reference: [5] <author> P. M. Chen, E. K. Lee, G. A. Gibson, R. H. Katz, and D. A. Patterson, </author> <title> "RAID: High-performance, reliable secondary storage," </title> <journal> ACM Computing Surveys, </journal> <volume> vol. 26, no. 2, </volume> <pages> pp. 145-185, </pages> <year> 1994. </year>
Reference-contexts: Their solution to this problem is to use error control codes (ECC) for forward error correction, and a RAID-like approach (dubbed airRAID) that stripes the data. The server is required to transmit the stripes on different frequencies, much like the RAID approach spreads stripes of data on different disks <ref> [5] </ref>. This requires the clients to receive broadcasts on multiple frequencies.
Reference: [6] <author> T. Chiueh, </author> <title> "Scheduling for broadcast-based file systems," </title> <booktitle> in MOBIDATA Workshop, </booktitle> <month> Nov. </month> <year> 1994. </year>
Reference-contexts: Such environments are, hence, called asymmetric communication environments [2]. In an asymmetric environment, broadcasting the information is an effective way of making the information available simultaneously to a large number of users. For asymmetric environment, researchers have previously proposed algorithms for designing broadcast schedules <ref> [4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16] </ref>. Two metrics are used to evaluate these algorithms: * Access time: This is the amount of time a client has to wait for some information that it needs. <p> It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [4, 6, 10, 11, 12, 7, 3, 2, 15, 16] </ref> * Tuning time: This is the amount of time a client must listen to the broadcast until it receives the information it needs. <p> The existing schemes can be roughly divided into two categories (some schemes may belong to both categories, we have listed them in the most appropriate category): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 8, 12, 7, 6, 15, 16] </ref> and schemes attempting to reduce the tuning time [10, 9, 11]. 22 Ammar and Wong [4, 15] have performed extensive research on broadcast scheduling and obtained many interesting results. <p> Our on-line algorithm results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic on-line algorithm in [8, 15]. Chiueh <ref> [6] </ref> and Acharya et al. [3, 2, 1] present schemes that transmit the more frequently used items more often. However, they do not use optimal degree of replication, unlike our schemes.
Reference: [7] <author> V. A. Gondhalekar, </author> <title> "Scheduling periodic wireless data broadcast," </title> <month> Dec. </month> <year> 1995. </year> <title> M.S. </title> <type> Thesis, </type> <institution> The University of Texas at Austin. </institution>
Reference-contexts: Such environments are, hence, called asymmetric communication environments [2]. In an asymmetric environment, broadcasting the information is an effective way of making the information available simultaneously to a large number of users. For asymmetric environment, researchers have previously proposed algorithms for designing broadcast schedules <ref> [4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16] </ref>. Two metrics are used to evaluate these algorithms: * Access time: This is the amount of time a client has to wait for some information that it needs. <p> It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [4, 6, 10, 11, 12, 7, 3, 2, 15, 16] </ref> * Tuning time: This is the amount of time a client must listen to the broadcast until it receives the information it needs. <p> The existing schemes can be roughly divided into two categories (some schemes may belong to both categories, we have listed them in the most appropriate category): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 8, 12, 7, 6, 15, 16] </ref> and schemes attempting to reduce the tuning time [10, 9, 11]. 22 Ammar and Wong [4, 15] have performed extensive research on broadcast scheduling and obtained many interesting results.
Reference: [8] <author> T. Imielinski and S. Viswanathan, </author> <title> "Adaptive wireless information systems," </title> <booktitle> in Proceedings of SIGDBS (Special Interest Group in DataBase Systems) Conference, </booktitle> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: Such environments are, hence, called asymmetric communication environments [2]. In an asymmetric environment, broadcasting the information is an effective way of making the information available simultaneously to a large number of users. For asymmetric environment, researchers have previously proposed algorithms for designing broadcast schedules <ref> [4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16] </ref>. Two metrics are used to evaluate these algorithms: * Access time: This is the amount of time a client has to wait for some information that it needs. <p> The existing schemes can be roughly divided into two categories (some schemes may belong to both categories, we have listed them in the most appropriate category): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 8, 12, 7, 6, 15, 16] </ref> and schemes attempting to reduce the tuning time [10, 9, 11]. 22 Ammar and Wong [4, 15] have performed extensive research on broadcast scheduling and obtained many interesting results. <p> Our square root rule is a generalization of that obtained by Ammar and Wong. Wong [15] and Imielinski and Viswanathan <ref> [8, 14] </ref> present an on-line scheme that uses a probabilistic approach for deciding which item to transmit. Our on-line algorithm results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic on-line algorithm in [8, 15]. <p> Wong [15] and Imielinski and Viswanathan [8, 14] present an on-line scheme that uses a probabilistic approach for deciding which item to transmit. Our on-line algorithm results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic on-line algorithm in <ref> [8, 15] </ref>. Chiueh [6] and Acharya et al. [3, 2, 1] present schemes that transmit the more frequently used items more often. However, they do not use optimal degree of replication, unlike our schemes.
Reference: [9] <author> T. Imielinski, S. Viswanathan, and B. R. Badrinath, </author> <title> "Power efficient filtering of data on air," </title> <booktitle> in 4th International Conference on Extending Database Technology, </booktitle> <month> Mar. </month> <year> 1984. </year>
Reference-contexts: Such environments are, hence, called asymmetric communication environments [2]. In an asymmetric environment, broadcasting the information is an effective way of making the information available simultaneously to a large number of users. For asymmetric environment, researchers have previously proposed algorithms for designing broadcast schedules <ref> [4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16] </ref>. Two metrics are used to evaluate these algorithms: * Access time: This is the amount of time a client has to wait for some information that it needs. <p> Previous work has tried to minimize the tuning time by providing the clients with an index that provides hints to the client of when the required data is scheduled to be broadcast <ref> [9, 10, 11, 14] </ref>. Without this information, the client must listen continually until the necessary information is received. This report presents an approach to minimize the access time. Our results can be combined with the schemes for reducing tuning time to obtain a comprehensive solution. <p> existing schemes can be roughly divided into two categories (some schemes may belong to both categories, we have listed them in the most appropriate category): Schemes attempting to reduce the access time [4, 3, 2, 1, 8, 12, 7, 6, 15, 16] and schemes attempting to reduce the tuning time <ref> [10, 9, 11] </ref>. 22 Ammar and Wong [4, 15] have performed extensive research on broadcast scheduling and obtained many interesting results. Our square root rule is a generalization of that obtained by Ammar and Wong.
Reference: [10] <author> T. Imielinski, S. Viswanathan, and B. R. Badrinath, </author> <title> "Energy efficient indexing on air," </title> <month> May </month> <year> 1994. </year>
Reference-contexts: Such environments are, hence, called asymmetric communication environments [2]. In an asymmetric environment, broadcasting the information is an effective way of making the information available simultaneously to a large number of users. For asymmetric environment, researchers have previously proposed algorithms for designing broadcast schedules <ref> [4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16] </ref>. Two metrics are used to evaluate these algorithms: * Access time: This is the amount of time a client has to wait for some information that it needs. <p> It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [4, 6, 10, 11, 12, 7, 3, 2, 15, 16] </ref> * Tuning time: This is the amount of time a client must listen to the broadcast until it receives the information it needs. <p> Previous work has tried to minimize the tuning time by providing the clients with an index that provides hints to the client of when the required data is scheduled to be broadcast <ref> [9, 10, 11, 14] </ref>. Without this information, the client must listen continually until the necessary information is received. This report presents an approach to minimize the access time. Our results can be combined with the schemes for reducing tuning time to obtain a comprehensive solution. <p> The third algorithm generates cyclic schedule for a specified cycle size. This algorithm is off-line in that it a priori produces an entire schedule, which is then used repeatedly. The ideas presented here can be combined with previous work <ref> [10, 14] </ref> to minimize tuning time as well as access time. * Impact of errors on the scheduling policy is evaluated. <p> existing schemes can be roughly divided into two categories (some schemes may belong to both categories, we have listed them in the most appropriate category): Schemes attempting to reduce the access time [4, 3, 2, 1, 8, 12, 7, 6, 15, 16] and schemes attempting to reduce the tuning time <ref> [10, 9, 11] </ref>. 22 Ammar and Wong [4, 15] have performed extensive research on broadcast scheduling and obtained many interesting results. Our square root rule is a generalization of that obtained by Ammar and Wong.
Reference: [11] <author> T. Imielinski, S. Viswanathan, and B. R. Badrinath, </author> <title> "Data on the air organization and access," </title> <note> submitted for publication. </note>
Reference-contexts: Such environments are, hence, called asymmetric communication environments [2]. In an asymmetric environment, broadcasting the information is an effective way of making the information available simultaneously to a large number of users. For asymmetric environment, researchers have previously proposed algorithms for designing broadcast schedules <ref> [4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16] </ref>. Two metrics are used to evaluate these algorithms: * Access time: This is the amount of time a client has to wait for some information that it needs. <p> It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [4, 6, 10, 11, 12, 7, 3, 2, 15, 16] </ref> * Tuning time: This is the amount of time a client must listen to the broadcast until it receives the information it needs. <p> Previous work has tried to minimize the tuning time by providing the clients with an index that provides hints to the client of when the required data is scheduled to be broadcast <ref> [9, 10, 11, 14] </ref>. Without this information, the client must listen continually until the necessary information is received. This report presents an approach to minimize the access time. Our results can be combined with the schemes for reducing tuning time to obtain a comprehensive solution. <p> existing schemes can be roughly divided into two categories (some schemes may belong to both categories, we have listed them in the most appropriate category): Schemes attempting to reduce the access time [4, 3, 2, 1, 8, 12, 7, 6, 15, 16] and schemes attempting to reduce the tuning time <ref> [10, 9, 11] </ref>. 22 Ammar and Wong [4, 15] have performed extensive research on broadcast scheduling and obtained many interesting results. Our square root rule is a generalization of that obtained by Ammar and Wong.
Reference: [12] <author> R. Jain and J. Werth, </author> <title> "Airdisks and airRAID : Modelling and scheduling periodic wireless data broadcast (extended abstract)," </title> <type> Tech. Rep. DIMACS Tech. Report 95-11, </type> <institution> Rutgers University, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: Such environments are, hence, called asymmetric communication environments [2]. In an asymmetric environment, broadcasting the information is an effective way of making the information available simultaneously to a large number of users. For asymmetric environment, researchers have previously proposed algorithms for designing broadcast schedules <ref> [4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16] </ref>. Two metrics are used to evaluate these algorithms: * Access time: This is the amount of time a client has to wait for some information that it needs. <p> It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [4, 6, 10, 11, 12, 7, 3, 2, 15, 16] </ref> * Tuning time: This is the amount of time a client must listen to the broadcast until it receives the information it needs. <p> The first observation stated in Lemma 1 below is intuitive. This observation also follows from a result presented in <ref> [12] </ref>, and has been implicitly used by others (e.g., [3, 4, 15]). Lemma 1 The broadcast schedule with minimum overall mean access time results when the instances of each item are equally spaced. Proof of the lemma is omitted here for brevity. <p> The existing schemes can be roughly divided into two categories (some schemes may belong to both categories, we have listed them in the most appropriate category): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 8, 12, 7, 6, 15, 16] </ref> and schemes attempting to reduce the tuning time [10, 9, 11]. 22 Ammar and Wong [4, 15] have performed extensive research on broadcast scheduling and obtained many interesting results. <p> Chiueh [6] and Acharya et al. [3, 2, 1] present schemes that transmit the more frequently used items more often. However, they do not use optimal degree of replication, unlike our schemes. Jain and Werth <ref> [12] </ref> note that reducing the variance of spacing between consecutive instances of an item reduces the mean access time. The two schemes presented in this report do attempt to achieve a low variance. Similar to our discussion in Section 4, Jain and Werth [12] also note that errors may occur in <p> Jain and Werth <ref> [12] </ref> note that reducing the variance of spacing between consecutive instances of an item reduces the mean access time. The two schemes presented in this report do attempt to achieve a low variance. Similar to our discussion in Section 4, Jain and Werth [12] also note that errors may occur in transmission of data. Their solution to this problem is to use error control codes (ECC) for forward error correction, and a RAID-like approach (dubbed airRAID) that stripes the data.
Reference: [13] <author> N. H. Vaidya and S. Hameed, </author> <title> "Data Broadcast Scheduling (Part I)," </title> <type> Tech. Report 96-012, </type> <institution> Computer Science Dept., Texas A&M University, </institution> <month> May </month> <year> 1996. </year>
Reference-contexts: This result is a generalized version of a result presented in [4, 15]. * We present three algorithms for scheduling broadcasts, based on the above square-root rule. The first algorithm is an "on-line" algorithm that can be used by a server to determine which item to transmit next <ref> [13] </ref>. We demonstrate that the proposed on-line algorithm achieves performance comparable to an optimal off-line algorithm. Also, the proposed on-line algorithm reduces the average access time by a factor of 2, as compared to a previously proposed on-line algorithm [14]. <p> In this case, the client must wait for the next transmission of the required data item. We evaluate how optimal broadcast frequencies of the items are affected in presence of errors <ref> [13] </ref>. * We consider systems where different clients may listen to different number of broadcast channels, depending on how many they can afford. In such an environment, the schedules on different broadcast channels should be designed so as to minimize the access time for most (if not all) clients. <p> The third algorithm uses the first algorithm to generate a broadcast cycle with length approximately equal to a given size N . 3.2 On-line Scheduling Algorithm Whenever the server is ready to transmit a new item, it calls the on-line algorithm presented here <ref> [13] </ref>. The on-line algorithm determines the item to be transmitted next using a decision rule this decision rule is motivated by the result obtained in Theorem 1. <p> In the asymmetric environment under consideration here it is not always possible for the client to ask the server to retransmit the data. 2 In this section, we evaluate the impact of uncorrectable errors on the scheduling strategy for broadcasts <ref> [13] </ref>. 2 Even if it were possible for a client to send a retransmit request to the server, it is not clear that a broadcast scheme should allow such requests, because it is possible that many clients receive the original broadcast correctly, but only a few do not due to some <p> In the figure, the normal on-line algorithm is labeled as on-line, whereas the modified version which does not take lengths into account is labeled without lengths. Note that some of the previous work <ref> [4, 13, 15, 14] </ref> does not take into account lengths of different items (or assumes lengths to be uniform). <p> Thus, clients send requests for items from class (ii), and simply wait for the server to transmit an item from class (i). We suggest another approach that does not divide items into two classes as above <ref> [13] </ref>. Instead, when a client needs some item, say i, it waits for some time bounded by a time-out t . If an interval of t is exceeded, then the client sends a request to the server.
Reference: [14] <author> S. Viswanathan, </author> <title> Publishing in Wireless and Wireline Environments. </title> <type> PhD thesis, </type> <institution> Rutgers, </institution> <month> Nov. </month> <year> 1994. </year>
Reference-contexts: Such environments are, hence, called asymmetric communication environments [2]. In an asymmetric environment, broadcasting the information is an effective way of making the information available simultaneously to a large number of users. For asymmetric environment, researchers have previously proposed algorithms for designing broadcast schedules <ref> [4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16] </ref>. Two metrics are used to evaluate these algorithms: * Access time: This is the amount of time a client has to wait for some information that it needs. <p> Previous work has tried to minimize the tuning time by providing the clients with an index that provides hints to the client of when the required data is scheduled to be broadcast <ref> [9, 10, 11, 14] </ref>. Without this information, the client must listen continually until the necessary information is received. This report presents an approach to minimize the access time. Our results can be combined with the schemes for reducing tuning time to obtain a comprehensive solution. <p> We demonstrate that the proposed on-line algorithm achieves performance comparable to an optimal off-line algorithm. Also, the proposed on-line algorithm reduces the average access time by a factor of 2, as compared to a previously proposed on-line algorithm <ref> [14] </ref>. On-line algorithms are of significant interest as they are easy to adapt to time-varying demands for the data items. 3 The second algorithm is also an on-line algorithm obtained by modifying the first algo-rithm. <p> The third algorithm generates cyclic schedule for a specified cycle size. This algorithm is off-line in that it a priori produces an entire schedule, which is then used repeatedly. The ideas presented here can be combined with previous work <ref> [10, 14] </ref> to minimize tuning time as well as access time. * Impact of errors on the scheduling policy is evaluated. <p> As this term is the largest for item 1, item 1 is transmitted at time 100. 2 Performance measurements for the above algorithm are presented in Section 6. Our algorithm improves performance by a factor of 2 as compared to the probabilistic on-line algorithms presented in <ref> [14, 15] </ref>. <p> In the figure, the normal on-line algorithm is labeled as on-line, whereas the modified version which does not take lengths into account is labeled without lengths. Note that some of the previous work <ref> [4, 13, 15, 14] </ref> does not take into account lengths of different items (or assumes lengths to be uniform). <p> While we did not evaluate the adaptive behavior of our algorithms, we believe that our on-line schemes can quickly adapt to any changes in the demand probabilities. To achieve adaptive behavior, the server must have some way to update its estimates of demand probability (p i ). Viswanathan <ref> [14] </ref> describes several ways in which this information can be conveyed to the server, including (i) when a mobile client moves from one cell to another, and (ii) when the client sends some other message, the access frequency information is piggybacked on these messages. <p> The idea is to minimize the need to send messages just to update the user access profiles at the server. Viswanathan <ref> [14] </ref> divides items into two classes: (i) items that are broadcast by the server, and (ii) items that are sent to clients only on-demand (i.e., when a request is received from the client for the item). <p> Our square root rule is a generalization of that obtained by Ammar and Wong. Wong [15] and Imielinski and Viswanathan <ref> [8, 14] </ref> present an on-line scheme that uses a probabilistic approach for deciding which item to transmit. Our on-line algorithm results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic on-line algorithm in [8, 15].
Reference: [15] <author> J. W. Wong, </author> <title> "Broadcast Delivery", </title> <booktitle> in Proceedings of IEEE, </booktitle> <pages> pp. 1566-1577, </pages> <month> Dec. </month> <year> 1988, </year>
Reference-contexts: Such environments are, hence, called asymmetric communication environments [2]. In an asymmetric environment, broadcasting the information is an effective way of making the information available simultaneously to a large number of users. For asymmetric environment, researchers have previously proposed algorithms for designing broadcast schedules <ref> [4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16] </ref>. Two metrics are used to evaluate these algorithms: * Access time: This is the amount of time a client has to wait for some information that it needs. <p> It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [4, 6, 10, 11, 12, 7, 3, 2, 15, 16] </ref> * Tuning time: This is the amount of time a client must listen to the broadcast until it receives the information it needs. <p> This result is a generalized version of a result presented in <ref> [4, 15] </ref>. * We present three algorithms for scheduling broadcasts, based on the above square-root rule. The first algorithm is an "on-line" algorithm that can be used by a server to determine which item to transmit next [13]. <p> The first observation stated in Lemma 1 below is intuitive. This observation also follows from a result presented in [12], and has been implicitly used by others (e.g., <ref> [3, 4, 15] </ref>). Lemma 1 The broadcast schedule with minimum overall mean access time results when the instances of each item are equally spaced. Proof of the lemma is omitted here for brevity. In reality, it is not always possible to space instances of an item equally. <p> That is, f i / p i l i To put it differently, for items i and j, f i = p i s l i Proof: Appendix A presents the proof. 2 A special case of Theorem 1 when all items are of identical size was derived in <ref> [4, 15] </ref> For cycle size N , P M j=1 f j l j = N . Therefore, the above theorem implies that, f i = p P M p . <p> As this term is the largest for item 1, item 1 is transmitted at time 100. 2 Performance measurements for the above algorithm are presented in Section 6. Our algorithm improves performance by a factor of 2 as compared to the probabilistic on-line algorithms presented in <ref> [14, 15] </ref>. <p> In the figure, the normal on-line algorithm is labeled as on-line, whereas the modified version which does not take lengths into account is labeled without lengths. Note that some of the previous work <ref> [4, 13, 15, 14] </ref> does not take into account lengths of different items (or assumes lengths to be uniform). <p> The existing schemes can be roughly divided into two categories (some schemes may belong to both categories, we have listed them in the most appropriate category): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 8, 12, 7, 6, 15, 16] </ref> and schemes attempting to reduce the tuning time [10, 9, 11]. 22 Ammar and Wong [4, 15] have performed extensive research on broadcast scheduling and obtained many interesting results. <p> two categories (some schemes may belong to both categories, we have listed them in the most appropriate category): Schemes attempting to reduce the access time [4, 3, 2, 1, 8, 12, 7, 6, 15, 16] and schemes attempting to reduce the tuning time [10, 9, 11]. 22 Ammar and Wong <ref> [4, 15] </ref> have performed extensive research on broadcast scheduling and obtained many interesting results. Our square root rule is a generalization of that obtained by Ammar and Wong. <p> Our square root rule is a generalization of that obtained by Ammar and Wong. Wong <ref> [15] </ref> and Imielinski and Viswanathan [8, 14] present an on-line scheme that uses a probabilistic approach for deciding which item to transmit. Our on-line algorithm results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic on-line algorithm in [8, 15]. <p> Wong [15] and Imielinski and Viswanathan [8, 14] present an on-line scheme that uses a probabilistic approach for deciding which item to transmit. Our on-line algorithm results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic on-line algorithm in <ref> [8, 15] </ref>. Chiueh [6] and Acharya et al. [3, 2, 1] present schemes that transmit the more frequently used items more often. However, they do not use optimal degree of replication, unlike our schemes.
Reference: [16] <author> Z. Zdonik, R. Alonso, M. Franklin, and S. Acharya, </author> <title> "Are disks in the air, just pie in the sky?," </title> <booktitle> in IEEE Workshop on Mobile Comp. System, </booktitle> <month> Dec. </month> <year> 1994. </year> <month> 29 </month>
Reference-contexts: Such environments are, hence, called asymmetric communication environments [2]. In an asymmetric environment, broadcasting the information is an effective way of making the information available simultaneously to a large number of users. For asymmetric environment, researchers have previously proposed algorithms for designing broadcast schedules <ref> [4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16] </ref>. Two metrics are used to evaluate these algorithms: * Access time: This is the amount of time a client has to wait for some information that it needs. <p> It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [4, 6, 10, 11, 12, 7, 3, 2, 15, 16] </ref> * Tuning time: This is the amount of time a client must listen to the broadcast until it receives the information it needs. <p> The existing schemes can be roughly divided into two categories (some schemes may belong to both categories, we have listed them in the most appropriate category): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 8, 12, 7, 6, 15, 16] </ref> and schemes attempting to reduce the tuning time [10, 9, 11]. 22 Ammar and Wong [4, 15] have performed extensive research on broadcast scheduling and obtained many interesting results.
References-found: 16

