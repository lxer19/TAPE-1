URL: http://www.cs.toronto.edu/~mitchell/papers/ai92-hsat.ps
Refering-URL: http://www.cs.toronto.edu/~mitchell/
Root-URL: http://www.cs.toronto.edu
Email: mitchell@cs.sfu.ca  selman@research.att.com  hector@ai.toronto.edu  
Title: Hard and Easy Distributions of SAT Problems  
Author: David Mitchell Bart Selman Hector Levesque 
Address: Burnaby, Canada V5A 1S6  Murray Hill, NJ 07974  Toronto, Canada M5S 1A4  
Affiliation: Dept. of Computing Science Simon Fraser University  AT&T Bell Laboratories  Dept. of Computer Science University of Toronto  
Abstract: We report results from large-scale experiments in satis-fiability testing. As has been observed by others, testing the satisfiability of random formulas often appears surprisingly easy. Here we show that by using the right distribution of instances, and appropriate parameter values, it is possible to generate random formulas that are hard, that is, for which satisfiability testing is quite difficult. Our results provide a benchmark for the evaluation of satisfiability-testing procedures. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Chao, Ming-te and Franco, </author> <title> John (1990). Probabilistic Analysis of a Generalization of the Unit-Clause Literal Selection Heuristics for the k Satisfiability Problem. </title> <journal> Inform. Sci., </journal> <volume> 51, </volume> <year> 1990, </year> <pages> 23-42. </pages>
Reference: <author> Cheeseman, Peter and Kanefsky, Bob and Taylor, William M. </author> <year> (1991). </year> <title> Where the Really Hard Problems Are. </title> <booktitle> Proceedings IJCAI-91, </booktitle> <year> 1991, </year> <pages> 163-169. </pages> <editor> Chvatal,V. and Szemeredi, E. </editor> <year> (1988). </year> <title> Many hard examples for resolution. </title> <journal> JACM, val. </journal> <volume> 35, no. 4, </volume> <year> 1988, </year> <pages> 759-208. </pages>
Reference: <author> Cook, S.A. </author> <year> (1971). </year> <title> The complexity of theorem-proving procedures. </title> <booktitle> Proceedings of the 3rd Annual ACM Symposium on the Theory of Computing, </booktitle> <year> 1971, </year> <pages> 151-158. </pages>
Reference: <author> Davis, M. and Putnam, H. </author> <year> (1960). </year> <title> A computing procedure for quantification theory. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 7, </volume> <year> 1960, </year> <pages> 201-215. </pages>
Reference-contexts: In the following section we consider a second distribution, the constant-probability model, and argue that it is not useful in the evaluation of satisfiability-testing procedures. We then briefly review related work, and summarize our results. The Davis-Putnam Procedure The Davis-Putnam (DP) procedure <ref> (Davis and Put nam 1960) </ref> is sketched in Figure 1. It takes as input a set of clauses over a set of variables V; and returns either "satisfiable" or "unsatisfiable." (A clause is a disjunction of literals.
Reference: <author> Franco, J. </author> <year> (1986). </year> <title> Probabilistic analysis of algorithms for NP-complete problems. United States Air Force Annual Scientific Report, </title> <year> 1986. </year>
Reference: <author> Franco, J. and Ho, Y.C. </author> <year> (1988). </year> <title> Probabilistic performance of a heuristic for the satisfiability problem. </title> <journal> Discrete Applied Math., </journal> <volume> 22, </volume> <year> 1988, </year> <pages> 35-51. </pages>
Reference: <author> Franco, J. and Paull, M. </author> <year> (1983). </year> <title> Probabilistic analysis of the Davis Putnam procedure for solving the sat-isfiability problem. </title> <journal> Discrete Applied Math. </journal> <volume> 5, </volume> <year> 1983, </year> <month> 77-87. </month> <title> 2 Recently developed by Jim Crawford and Larry Auton (1992, </title> <type> personal communication). </type>
Reference: <author> Galil, </author> <title> Zvi (1977). On the complexity of regular reso-lution and the Davis-Putnam procedure. </title> <journal> Theoretical Computer Science, </journal> <volume> 4, </volume> <year> 1977, </year> <pages> 23-46. </pages>
Reference: <author> Gallo, Giorgio and Urbani, </author> <title> Giampaolo (1989). Algorithms for Testing the Satisfiability of Propositional Formulae. </title> <journal> J. Logic Programming, </journal> <volume> 7, </volume> <year> 1989, </year> <pages> 45-61. </pages>
Reference: <author> Garey, M.R. and Johnson, D.S. </author> <year> (1979). </year> <title> Computers and Intractability, A Guide to the Theory of NP-Completeness. </title> <address> New York, NY: </address> <publisher> W.H. Freeman, </publisher> <year> 1979. </year>
Reference: <author> Goldberg, A. </author> <year> (1979). </year> <title> On the complexity of the satisfi-ability problem. </title> <journal> Courant Computer Science Report, </journal> <volume> No. </volume> <pages> 16, </pages> <address> New York University, NY, </address> <year> 1979. </year>
Reference: <author> Goldberg, A., Purdom, Jr. P.W., and Brown, C.A. </author> <year> (1982). </year> <title> Average time analysis of simplified Davis-Putnam procedures. Information Process. </title> <journal> Lett., </journal> <volume> 15, </volume> <year> 1982, </year> <note> 72-75; see also "Errata", vol. 16, 1983, p. 213. </note>
Reference: <author> Kamath, A.P., Karmarker, N.K., Ramakrishnan, K.G., and Resende, M.G.C. </author> <year> (1990). </year> <title> Computational experience with an interior point algorithm on the satisfiability problem. Proceedings, Integer Programming and Combinatorial Optimization, Waterloo, Canada: </title> <journal> Mathematical Programming Society, </journal> <year> 1990, </year> <pages> 333-349. </pages>
Reference: <author> Haken, A. </author> <year> (1985). </year> <title> The intractability of resolution. </title> <journal> Theoretical Computer Science, </journal> <volume> 39, </volume> <year> 1985, </year> <pages> 297-308. </pages>
Reference: <author> Hooker, J.N. </author> <year> (1988). </year> <title> Resolution vs. cutting plane solution of inference problems: Some computational experience. </title> <journal> Operations Research Letter, </journal> <volume> 7(1), </volume> <year> 1988, </year> <pages> 1-7. </pages>
Reference: <author> Hooker, J.N. and Fedjki, C. </author> <year> (1989). </year> <title> Branch-and-cut solution of inference problems in propositional logic, </title> <note> Working paper 77-88-89, </note> <institution> Graduate School of Industrial Administration, Carnegie Mellon University, </institution> <year> 1989. </year>
Reference-contexts: In Figure 5, we compare the number of recursive DP calls to solve instances of random P-SAT with the same figures for random 3-SAT. Although we see a slight easy-hard-easy pattern <ref> (previously noted by Hooker and Fedjki, 1989) </ref>, the hard area is not nearly so pronounced, and in absolute terms 0 40 80 120 160 2 3 4 5 6 7 8 9 10 DP calls Ratio of clauses-to-variables Average clause-length of 3 3 3 3 3 3 3 3 3 3
Reference: <author> Selman, B. and Levesque, H.J., and Mitchell, D.G. </author> <year> (1992). </year> <title> A New Method for Solving Hard Satisfia-bility Problems. </title> <note> This proceedings. </note>
Reference-contexts: Assign it a value, and call DP on the simplified formula. If this call returns "satisfiable", then return "satisfiable". Otherwise, set v to the opposite value, and return the result of calling DP on the re-simplified formula. selves <ref> (Selman et al., 1992) </ref>! How are we to evaluate these empirical results, given the danger of biasing the sample to suit the procedure in question, or of simply using easy problems (even if unwittingly)? In this paper, we present empirical results showing that random instances of satisfiability can be generated in <p> While the easy cases we have found can be solved by almost any reasonable method, it is the hard cases ultimately that separate the winners from the losers. Thus, our data is presented as challenging test material for developers of SAT procedures <ref> (see Selman et al., 1992, for example) </ref>. The SAT procedure we used for our tests is the Davis-Putnam procedure, which we describe below.
Reference: <author> Vellino, A. </author> <year> (1989). </year> <title> The complexity of automated reasoning. </title> <type> Ph.D. thesis, </type> <institution> Dept. of Philosophy, University of Toronto, Toronto, Canada, </institution> <year> 1989. </year>
Reference-contexts: The SAT procedure we used for our tests is the Davis-Putnam procedure, which we describe below. We believe this was a good choice for two reasons: First, it has been shown to be a variant of resolution <ref> (Vellino 1989, Galil 1977) </ref>, the most widely used general reasoning method in AI; second, almost all empirical work on SAT testing has used one or another refinement of this method, which facilitates comparison.
Reference: <author> Zabih, R. and McAllester, D. </author> <year> (1988). </year> <title> A rearrangement search strategy for determining propositional satisfiability. </title> <booktitle> Proc. AAAI-88, </booktitle> <year> 1988, </year> <pages> 155-160. </pages>
Reference-contexts: Finally, note that we did not specify a method for choosing which variable to guess in the "splitting" step of DP. In our implementation, we simply set variables in lexical order (except when there are unit clauses.) DP can be made faster by using clever selection strategies <ref> (e.g., Zabih and McAllester 1988) </ref>, but it seems unlikely that such heuristics will qualitatively alter the 0 2000 4000 6000 8000 10000 Number of calls Ratio of clauses-to-variables Composite 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 Satisfiable + + + + +
References-found: 19

