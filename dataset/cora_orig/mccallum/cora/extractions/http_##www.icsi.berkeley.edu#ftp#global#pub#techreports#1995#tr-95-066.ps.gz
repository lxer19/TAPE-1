URL: http://www.icsi.berkeley.edu/ftp/global/pub/techreports/1995/tr-95-066.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/ftp/global/pub/techreports/1995/
Root-URL: http://www.icsi.berkeley.edu
Title: An Exponential Lower Bound on the Size of Algebraic Decision Trees for MAX  
Author: Dima Grigoriev Marek Karpinski Andrew C. Yao 
Note: Pennsylvania 16802. The research of this author is supported in part by the Volkswagen-Stiftung.  08544. The research of this author is supported in part by National Science Foundation under grant CCR-9301430.  
Address: Park,  Princeton, New Jersey  
Affiliation: Departments of Computer Science and Mathematics, Pennsylvania State University, University  Department of Computer Science, Princeton University,  
Pubnum: TR-95-066  
Email: Email: grigorie@cse.psu.edu  Email: yao@cs.princeton.edu  
Date: November 1995  
Abstract: We prove an exponential lower bound on the size of any fixed-degree algebraic decision tree for solving MAX, the problem of finding the maximum of n real numbers. This complements the n 1 lower bound of Rabin [R72] on the depth of algebraic decision trees for this problem. The proof in fact gives an exponential lower bound on size for the polyhedral decision problem MAX= of testing whether the j-th number is the maximum among a list of n real numbers. Previously, except for linear decision trees, no nontrivial lower bounds on the size of algebraic decision trees for any familiar problems are known. We also establish an interesting connection between our lower bound and the maximum number of minimal cutsets for any rank-d hypergraphs on n vertices. y Department of Computer Science, University of Bonn, 53117 Bonn, and International Computer Science Institute, Berkeley, California. The research of this author is supported in part by the DFG Grant KA 673/4-1, and by the ESPRIT BR Grants 7097 and EC-US 030. Email: marek@theory.cs.uni-bonn.de 
Abstract-found: 1
Intro-found: 1
Reference: [B83] <author> M. Ben-Or, </author> <title> Lower Bounds for Algebraic Computation Trees, </title> <booktitle> Proc. 15th ACM STOC (1983), </booktitle> <pages> pp. 80-86. 6 </pages>
Reference-contexts: To our knowledge, no lower bound better than n 1 is known before this paper. Remark 3 We consider in the paper standard ternary decision trees (cf. [SY82], <ref> [B83] </ref>) branching according to the signs &gt;; =; &lt;.
Reference: [BFMUW87] <author> A. Borodin, F. Fich, F. Meyer auf der Heide, E. Upfal, and A. Wigderson, </author> <title> A Time-Space Tradeoff for Element Distinctness, </title> <journal> SIAM J. on Computing 16 (1987), </journal> <pages> pp. 97-99. </pages>
Reference-contexts: Notice that this tree is nonlinear. Remark 4 A more refined way to model space requirement is to consider branching programs (see e.g., [BFKLT81], <ref> [BFMUW87] </ref>) in which "equivalent" nodes are permitted to be merged together. Very little is known about branching programs with algebraic decision elements (however, see [Y82]). 2 Summary of Results Consider an input n-tuple of real numbers (x 1 ; : : : ; x n ) 2 IR n .
Reference: [BFKLT81] <author> A. Borodin, M. Fischer, D. Kirkpatrick, N. Lynch, and M. Tompa, </author> <title> A Time-Space Tradeoff for Sorting on Oblivious Machines, </title> <editor> J. </editor> <booktitle> of Computer and System Sciences 22 (1981), </booktitle> <pages> pp. 351-364. </pages>
Reference-contexts: Notice that this tree is nonlinear. Remark 4 A more refined way to model space requirement is to consider branching programs (see e.g., <ref> [BFKLT81] </ref>, [BFMUW87]) in which "equivalent" nodes are permitted to be merged together.
Reference: [BKL93] <author> P. Buergisser, M. Karpinski, T. Lickteig, </author> <title> On Randomized Algebraic Test Complexity, </title> <editor> J. </editor> <booktitle> of Complexity 9 (1993), </booktitle> <pages> pp. 231-251. </pages>
Reference: [BLY92] <author> A. Bjorner, L. Lovasz, and A. Yao, </author> <title> Linear Decision Treees: Volume Estimates and Topological Bounds, </title> <booktitle> Proc. 24th ACM STOC (1992), </booktitle> <pages> pp. 170-177. </pages>
Reference-contexts: Other than this obvious observation, the only lower bounds known are those for linear decision trees (where only linear functions are used for branching, see e.g., [DL75], <ref> [BLY92] </ref>), typically exponential in the depth. For higher degree algebraic decision trees, no superpolynomial lower bounds are known for natural problems, except with further constraints on the test polynomials.
Reference: [DL75] <author> D. Dobkin and R.J. Lipton, </author> <title> On the complexity of computations under varying sets of primitives, in Automata Theory and Formal Languages (edited by H. </title> <booktitle> Brad-hage), Lecture Notes in Computer Science, </booktitle> <volume> Volume 33, </volume> <publisher> Springer-Verlag, </publisher> <year> 1975, </year> <pages> pp. 110-117. </pages>
Reference-contexts: Other than this obvious observation, the only lower bounds known are those for linear decision trees (where only linear functions are used for branching, see e.g., <ref> [DL75] </ref>, [BLY92]), typically exponential in the depth. For higher degree algebraic decision trees, no superpolynomial lower bounds are known for natural problems, except with further constraints on the test polynomials.
Reference: [F93] <author> R. Fleischer, </author> <title> Decision Trees: Old and New Results, </title> <booktitle> Proc. 25th ACM STOC (1993), </booktitle> <pages> pp. 468-477. </pages>
Reference-contexts: It is well known that Farkas Lemma implies a d;n = 2 n1 for d = 1. In [Y89] and <ref> [F93] </ref>, it was proved that a d;n = 2 n1 if the test polynomials are restricted to (x j x k )(x h x s ) and 1 products of linear forms, respectively, leading to lower bounds n + (i 1) log 2 n + O (1) or the selection problems
Reference: [FG79] <author> F. Fussenegger, H.N. Gabow, </author> <title> A Counting Approach to Lower Bounds for Selection Problems, </title> <journal> J. Assoc. Comput. Mach. </journal> <note> 25 (1979), pp.227-238. </note>
Reference-contexts: Then any degree-d algebraic decision tree for selecting the i largest elements must have depth greater than log 2 (a d;n n This approach to the selection problem was first formulated in <ref> [FG79] </ref> for the case d = 1. It is well known that Farkas Lemma implies a d;n = 2 n1 for d = 1.
Reference: [GS79] <author> C. Gane and T. Sarson, </author> <title> Structured Systems Analysis: Tools and Techniques, </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1979. </year>
Reference-contexts: 1 Introduction The minimum depth of decision trees has been extensively studied for many computational problems in the literature. However, another natural complexity measure, the minimum size of decision trees is much less understood. For business applications (e.g. <ref> [GS79] </ref>) and for some computational problems, the size of decision trees gives a reasonable measure of the space required to implement the corresponding algorithms. For example, consider the membership problem for a given polyhedron in n dimensions.
Reference: [GK93] <author> D. Grigoriev, M. Karpinski, </author> <title> Lower Bounds on Complexity of Testing Membership to a Polygon for Algebraic and Randomized Computation Trees, </title> <type> Technical Report TR-93-042, </type> <institution> International Computer Science Institute, Berkeley, </institution> <year> 1993. </year>
Reference: [GKV95] <author> D. Grigoriev, M. Karpinski, N. Vorobjov, </author> <title> Improved Lower Bound on Testing Membership to a Polyhedron by Algebraic Decision Trees, </title> <booktitle> Proc. 36th IEEE FOCS (1995), </booktitle> <pages> pp. 258-265. </pages>
Reference-contexts: : : : ; x 1 x n1 . (More generally, this construction shows that the membership problem for any polyhedron defined by k inequalities has a linear decision tree of size k+1 in this binary tree model; compare this with the lower bound on the depth (logN ) of <ref> [GKV95] </ref> where N is the number of all the faces of a polyhedron). On the other hand, MAX does not seem to have any polynomial-size trees in the binary tree model. Conjecture 2: Any binary algebraic decision tree (of any degree) for MAX must have size 2 (n) .
Reference: [K73] <author> D. E. Knuth, </author> <booktitle> The Art of Computer Programming, </booktitle> <volume> Vol. 3, </volume> <publisher> Addison-Wesley, </publisher> <year> 1973. </year>
Reference-contexts: In this paper we investigate the size complexity of algebraic decision trees for MAX, the problem of finding the maximum of n real numbers, which was studied extensively in the literature (cf., e.g., <ref> [K73] </ref>, [R72], [TY94]).
Reference: [MM65] <author> J. W. Moon, L. Moser, </author> <title> On Cliques in Graphs, </title> <journal> Israel J. Math. </journal> <volume> 3(1965), </volume> <pages> pp. 23-28. </pages>
Reference-contexts: It is not hard to show that for d = 2, m 2;N is equal to the maximum number of maximal cliques of any N -vertex graph, which by a result of Moon and Moser <ref> [MM65] </ref> is equal to (3 N=3 ). A slight variation of the proof of Theorem 1 leads to an interesting connection of our lower bound to the combinatorial quantity m d;N .
Reference: [MPR94] <author> L. J. Montana, L. M. Pardo, T. Recio, </author> <title> A Note on Rabin's Width of a Complete Proof, </title> <journal> Computational Complexity, </journal> <volume> 4(1994), </volume> <pages> pp. 12-36. </pages>
Reference-contexts: Rabin [R72] established the sharp lower bound n 1 on the depth of any algebraic decision tree (for any d) solving this problem (see also <ref> [MPR94] </ref>). Except for linear decision trees (d = 1) and for cases with special restricted forms of polynomial tests (see Remark 1), no nonlinear lower bound is known on the size. Let "MAX=" denote the problem of verifying x 1 x k for all 1 k n.
Reference: [R72] <author> M. O. Rabin, </author> <title> Proving Simultaneous Positivity of Linear Forms, </title> <journal> J. Comput. Sci. </journal> <volume> 6 (1972), </volume> <pages> pp. 639-650. </pages>
Reference-contexts: In this paper we investigate the size complexity of algebraic decision trees for MAX, the problem of finding the maximum of n real numbers, which was studied extensively in the literature (cf., e.g., [K73], <ref> [R72] </ref>, [TY94]). We use the standard degree-d ternary algebraic decision tree model in which each internal node performs a test p (x 1 ; x 2 ; ; x n ) : 0 (where p is any real polynomial of degree d) with &lt;; =; &gt; as the possible outcomes. <p> We use the standard degree-d ternary algebraic decision tree model in which each internal node performs a test p (x 1 ; x 2 ; ; x n ) : 0 (where p is any real polynomial of degree d) with &lt;; =; &gt; as the possible outcomes. Rabin <ref> [R72] </ref> established the sharp lower bound n 1 on the depth of any algebraic decision tree (for any d) solving this problem (see also [MPR94]). <p> To our knowledge, no lower bound better than n 1 is known before this paper. Remark 3 We consider in the paper standard ternary decision trees (cf. [SY82], [B83]) branching according to the signs &gt;; =; &lt;. Notice that for binary decision trees studied in <ref> [R72] </ref> (branching according to the signs ; &gt;), MAX= has an (n 1)-size linear decision tree, namely the tree which successively tests x 1 x 2 ; x 1 x 3 ; : : : ; x 1 x n1 . (More generally, this construction shows that the membership problem for <p> The size (resp. depth) of T is the number of its leaves (resp. the maximum length of its paths). It is well 2 known <ref> [R72] </ref> that the depth of an ADT for MAX is at least n 1. This bound is optimal as one can easily construct T with the depth n 1 and size 2 n1 . We prove an exponential lower bound on the size.
Reference: [SY82] <author> J.M. Steele, A.C. Yao, </author> <title> Lower Bounds for Algebraic Decision Trees, </title> <editor> J. </editor> <booktitle> of Algorithms, 3 (1982), </booktitle> <pages> pp. 1-8. 7 </pages>
Reference-contexts: To our knowledge, no lower bound better than n 1 is known before this paper. Remark 3 We consider in the paper standard ternary decision trees (cf. <ref> [SY82] </ref>, [B83]) branching according to the signs &gt;; =; &lt;.
Reference: [TY94] <author> H. F. Ting and A. C. Yao, </author> <title> A Randomized Algorithm for Finding Maximum with O((log n) 2 ) Polynomial Tests, </title> <booktitle> Information Processing Letters 49 (1994), </booktitle> <pages> pp. 39-43. </pages>
Reference-contexts: In this paper we investigate the size complexity of algebraic decision trees for MAX, the problem of finding the maximum of n real numbers, which was studied extensively in the literature (cf., e.g., [K73], [R72], <ref> [TY94] </ref>). We use the standard degree-d ternary algebraic decision tree model in which each internal node performs a test p (x 1 ; x 2 ; ; x n ) : 0 (where p is any real polynomial of degree d) with &lt;; =; &gt; as the possible outcomes.
Reference: [Y75] <author> A. C. Yao, </author> <title> On the Complexity of Comparison Problems Using Linear Functions, </title> <booktitle> Proc. 16th IEEE FOCS (1975), </booktitle> <pages> pp. 85-89. </pages>
Reference: [Y82] <author> A. C. Yao, </author> <title> On the Time-Space Tradeoff for Sorting with Linear Queries, </title> <booktitle> Theoretical Computer Science 19 (1982), </booktitle> <pages> pp. 203-218. </pages>
Reference-contexts: Notice that this tree is nonlinear. Remark 4 A more refined way to model space requirement is to consider branching programs (see e.g., [BFKLT81], [BFMUW87]) in which "equivalent" nodes are permitted to be merged together. Very little is known about branching programs with algebraic decision elements (however, see <ref> [Y82] </ref>). 2 Summary of Results Consider an input n-tuple of real numbers (x 1 ; : : : ; x n ) 2 IR n .
Reference: [Y89] <author> A. C. Yao, </author> <title> On Selecting the k Largest with Median Tests, </title> <booktitle> Algorithmica 4 (1989), </booktitle> <pages> pp. 293-300. </pages>
Reference-contexts: It is well known that Farkas Lemma implies a d;n = 2 n1 for d = 1. In <ref> [Y89] </ref> and [F93], it was proved that a d;n = 2 n1 if the test polynomials are restricted to (x j x k )(x h x s ) and 1 products of linear forms, respectively, leading to lower bounds n + (i 1) log 2 n + O (1) or the
References-found: 20

