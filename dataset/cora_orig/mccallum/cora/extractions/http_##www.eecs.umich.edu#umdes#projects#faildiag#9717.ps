URL: http://www.eecs.umich.edu/umdes/projects/faildiag/9717.ps
Refering-URL: http://www.eecs.umich.edu/umdes/projects/faildiag/diagnosis.html
Root-URL: http://www.eecs.umich.edu
Title: Coordinated Decentralized Protocols for Failure Diagnosis of Discrete Event Systems  
Author: Rami Debouk, Stephane Lafortune and Demosthenis Teneketzis 
Degree: ALL RIGHTS RESERVED  
Address: Room 4234, EECS Building Ann Arbor, MI 48109-2122 USA  
Affiliation: THE UNIVERSITY OF MICHIGAN SYSTEM SCIENCE AND ENGINEERING DIVISION DEPARTMENT OF ELECTRICAL ENGINEERING AND COMPUTER SCIENCE  
Date: (Revised) May 1998  
Pubnum: Report No. CGR-97-17  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> M. Sampath, R. Sengupta, S. Lafortune, K. Sinnamohideen, and D. Teneketzis. </author> <title> Diagnosability of discrete-event systems. </title> <journal> IEEE Trans. Automat. Contr., </journal> <volume> 40(9) </volume> <pages> 1555-1575, </pages> <month> September </month> <year> 1995. </year>
Reference-contexts: Consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree [2] and analytical redundancy [3, 4] methods to discrete event system (DES) approaches <ref> [1, 5, 6, 7, 8, 9] </ref>, model based reasoning [10] and expert systems [11] methods, have been proposed to approach this problem. For a brief description of these methods and additional references, the interested reader is referred to [12] and the introduction of [1]. <p> For a brief description of these methods and additional references, the interested reader is referred to [12] and the introduction of <ref> [1] </ref>. Almost all of the abovementioned approaches have been developed for systems where the information used for fault diagnosis is centralized. A notable exception is [7], where the authors present a distributed fault monitoring method, time templates. <p> This fact is also recognized in [7] and [8]. In this paper, we investigate failure diagnosis problems in DES under decentralized information. Having adopted a DES approach to failure diagnosis, we extend the notion of diagnosability, introduced in <ref> [1] </ref> for centralized systems, to a coordinated decentralized architecture consisting of local sites communicating with a coordinator that is responsible for diagnosing the failures occurring in the system. We present three specific protocols that realize the architecture under consideration. <p> We present and discuss the diagnostic properties of the suggested protocols. We state and prove necessary and sufficient conditions for a language to be diagnosable under these protocols and provide off-line tests to check the diagnosability property. The on-line diagnostic process is carried out by the diagnosers introduced in <ref> [1] </ref> or a slight variation of these diagnosers. <p> In this regard, we partition the set of failure events into disjoint sets corresponding to different failure types f = f1 [ f2 [ : : : [ fj : (2) Let f denote this partition. For the motivation of such a partition, the reader is referred to <ref> [1, 16] </ref>. Hereafter, when we write a failure of type F i has occurred, we will mean that some event of the set fi has occurred. 2.2 Notation The empty trace is denoted by *. Let s denote the prefix-closure of any trace s 2 fl . <p> The generator G 0 (see <ref> [1, 15] </ref>) is the nondeterministic FSM, G 0 = (X o ; o ; ffi G 0 ; x 0 ); (10) where X o ; o , and x 0 are defined as previously, and the transition relation of G 0 is given by ffi G 0 (X o fi <p> More rigorously, diagnosability is defined as follows <ref> [1, 15] </ref>: 4 Definition 2.1 A prefix-closed and live language L is said to be diagnosable with respect to the projection P and with respect to the partition f on f if the following holds (8i 2 f )(9n i 2 N )(8s 2 ( fi ))(8t 2 L=s)(k t k <p> For more information about the construction of the diagnoser, the reader is referred to <ref> [1, 15] </ref>. The state space Q d is the resulting subset of Q o composed of the states of the diagnoser that are reachable from q 0 under ffi d . <p> Next, we provide some definitions that are necessary in order to state the main diagnosability result for centralized systems in Section 2.5. For a detailed discussion and interpretation of this material the reader is referred to <ref> [1, 15] </ref>. Definition 2.2 (Definition 6-1 in [1]). A state q 2 Q d is said to be F i -certain if 8 (x; l) 2 q, F i 2 l: Definition 2.3 (Definition 6-3 in [1]). <p> Next, we provide some definitions that are necessary in order to state the main diagnosability result for centralized systems in Section 2.5. For a detailed discussion and interpretation of this material the reader is referred to [1, 15]. Definition 2.2 (Definition 6-1 in <ref> [1] </ref>). A state q 2 Q d is said to be F i -certain if 8 (x; l) 2 q, F i 2 l: Definition 2.3 (Definition 6-3 in [1]). <p> Definition 2.2 (Definition 6-1 in <ref> [1] </ref>). A state q 2 Q d is said to be F i -certain if 8 (x; l) 2 q, F i 2 l: Definition 2.3 (Definition 6-3 in [1]). A state q 2 Q d is said to be F i -uncertain if 9 (x; l), (y; l 0 ) 2 q, x not necessarily distinct from y, such that F i 2 l and F i 62 l 0 : Definition 2.4 (Definition 7 in [1]). <p> 6-3 in <ref> [1] </ref>). A state q 2 Q d is said to be F i -uncertain if 9 (x; l), (y; l 0 ) 2 q, x not necessarily distinct from y, such that F i 2 l and F i 62 l 0 : Definition 2.4 (Definition 7 in [1]). <p> if 9s 2 L (G; x 1 ) such that s = oe 1 oe 2 : : : oe n , and ffi (x l ; oe l ) = x (l+1) mod n , l = 1; 2; : : : ; n: Definition 2.5 (Definition 8 in <ref> [1] </ref>). <p> Finally, the following lemma relates the properties of a diagnoser state to the properties of the traces in the language. Lemma 2.1 (Lemma 2 in <ref> [1] </ref>). i) Let ffi d (q 0 ; u) = q. <p> This condition is stated formally as follows: Theorem 2.1 (Theorem 2 in <ref> [1] </ref>). <p> Assumption A5 ensures that 7 the global order of all messages received by the coordinator is preserved. Assumptions A6 and A7 are self explanatory. Finally, Assumption A8 is consistent with features of hierarchical organizations. 3.2 Definition of diagnosability As noted in Section 2.3, the definition of diagnosability in <ref> [1] </ref> (Definition 2.1 in this paper) assumes centralization of the available information; hence it is not directly applicable to coordinated decentralized systems. Moreover, the coordinated decentralized architecture in Figure 1 represents a class of realizations of the same architecture where the choice of communication and decision rules, defines one realization. <p> aspect that every state of G that appears in a state component of G d is associated with its immediate predecessor state in G 0 (along the subtrace of events under consideration) and both states carry their labels; these labels are attained following the same label propagation rules as in <ref> [1] </ref>. The state space Q e d is the resulting subset of Q o fi Q o composed of the states of the extended diagnoser that are reachable from q e 0 under ffi e d . <p> Therefore, an extended diagnoser state potentially carries more information than a diagnoser state. In the case of centralized systems, G d and G e d are equivalent from the point of view of diagnosability as defined in Definition 2.1; it is for that reason that prior work <ref> [1, 15, 16, 17] </ref> only considered the simpler G d . Example 4.2 Again consider the system shown in Figure 2 with = fa,b,c,d,e,oeg, uo = foeg, f1 = foeg. The diagnoser G d and extended diagnoser G e d for this system are shown in Figure 4. <p> s of y 0 s in G 0 , and (iii) l s , l 0 s are the failure labels corresponding to y s ; y 0 s , obtained by propagating the label l 0 k of x 0 k according to the label propagation function defined in <ref> [1] </ref>. The unobservable reach appends to the components of each state of the extended diagnoser G e dj some additional components (along with failure labels and predecessors) that may have been reached following an additional event or a sequence of events that are not observable by the local site j. <p> Then, by assumption, st 0 , t 0 2 t does not lead to an F i -indeterminate cycle in G e d . Consequently, an argument similar to the one used in the proof of Theorem 2 in <ref> [1] </ref> shows that G e d will enter an F i -certain state within a finite number of steps, say n 0 i . <p> some x k , k 2 f1; : : : ; ng, after subtrace s 2 S j (q), and (ii) l s is the failure label corresponding to y s , obtained by propagating the label l k of x k according to the label propagation function defined in <ref> [1] </ref>. The unobservable reach of a diagnoser at a state represents all possible states where the system may be after the execution of a trace in the language. <p> Note here that in such a case, a mechanism should be implemented at the coordinator site to take care of who saw what and when. 8 Conclusion In this paper, we have extended the theory of diagnosability of systems in the framework of formal languages <ref> [1, 15] </ref> to a class of coordinated decentralized systems. We presented three coordinated decentralized protocols that are capable under certain assumptions of diagnosing all failure types diagnosed by the centralized diagnoser. We identified necessary and sufficient conditions for diagnosability under the proposed protocols.
Reference: [2] <author> S. Lapp and G. </author> <title> Powers. Computer-aided synthesis of fault trees. </title> <journal> IEEE Trans. Reliability Engineering, </journal> <volume> 26(1) </volume> <pages> 2-13, </pages> <month> April </month> <year> 1977. </year>
Reference-contexts: In order to guarantee a reliable system performance, the control engineer should guarantee that the system is running safely within its normal boundaries. Consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree <ref> [2] </ref> and analytical redundancy [3, 4] methods to discrete event system (DES) approaches [1, 5, 6, 7, 8, 9], model based reasoning [10] and expert systems [11] methods, have been proposed to approach this problem.
Reference: [3] <author> A. Willsky. </author> <title> A survey of design methods for failure detection in dynamic syst ems. </title> <journal> Automatica, </journal> <volume> 12 </volume> <pages> 601-611, </pages> <year> 1976. </year>
Reference-contexts: In order to guarantee a reliable system performance, the control engineer should guarantee that the system is running safely within its normal boundaries. Consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree [2] and analytical redundancy <ref> [3, 4] </ref> methods to discrete event system (DES) approaches [1, 5, 6, 7, 8, 9], model based reasoning [10] and expert systems [11] methods, have been proposed to approach this problem.
Reference: [4] <author> P. Frank. </author> <title> Fault diagnosis in dynamic systems using analytical and knowledge based redundancy. </title> <journal> Auto-matica, </journal> <volume> 26 </volume> <pages> 459-474, </pages> <year> 1990. </year>
Reference-contexts: In order to guarantee a reliable system performance, the control engineer should guarantee that the system is running safely within its normal boundaries. Consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree [2] and analytical redundancy <ref> [3, 4] </ref> methods to discrete event system (DES) approaches [1, 5, 6, 7, 8, 9], model based reasoning [10] and expert systems [11] methods, have been proposed to approach this problem.
Reference: [5] <author> F. Lin. </author> <title> Diagnosability of discrete event systems and its application. Discrete Event Dynamic Systems: </title> <journal> Theory and Applications, </journal> <volume> 4(2) </volume> <pages> 197-212, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: Consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree [2] and analytical redundancy [3, 4] methods to discrete event system (DES) approaches <ref> [1, 5, 6, 7, 8, 9] </ref>, model based reasoning [10] and expert systems [11] methods, have been proposed to approach this problem. For a brief description of these methods and additional references, the interested reader is referred to [12] and the introduction of [1].
Reference: [6] <author> S. Bavishi and E. Chong. </author> <title> Automated fault diagnosis using a discrete event systems framework. </title> <booktitle> In Proc. 9th IEEE International Symposium on Intelligent Control, </booktitle> <pages> pages 213-218, </pages> <year> 1994. </year>
Reference-contexts: Consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree [2] and analytical redundancy [3, 4] methods to discrete event system (DES) approaches <ref> [1, 5, 6, 7, 8, 9] </ref>, model based reasoning [10] and expert systems [11] methods, have been proposed to approach this problem. For a brief description of these methods and additional references, the interested reader is referred to [12] and the introduction of [1].
Reference: [7] <author> L. Holloway and S. Chand. </author> <title> Time templates for discrete event fault monitoring in manufacturing systems. </title> <booktitle> In Proc. 1994 American Control Conference, </booktitle> <pages> pages 701-706, </pages> <year> 1994. </year>
Reference-contexts: Consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree [2] and analytical redundancy [3, 4] methods to discrete event system (DES) approaches <ref> [1, 5, 6, 7, 8, 9] </ref>, model based reasoning [10] and expert systems [11] methods, have been proposed to approach this problem. For a brief description of these methods and additional references, the interested reader is referred to [12] and the introduction of [1]. <p> For a brief description of these methods and additional references, the interested reader is referred to [12] and the introduction of [1]. Almost all of the abovementioned approaches have been developed for systems where the information used for fault diagnosis is centralized. A notable exception is <ref> [7] </ref>, where the authors present a distributed fault monitoring method, time templates. Time templates monitoring is cited to have the advantage of being easily implemented in distributed control architectures. <p> The authors can be reached by email at ridebouk@eecs.umich.edu, stephane@eecs.umich.edu and teneket@eecs.umich.edu. 2 Last revised May 1998 2 develop diagnostic methodologies for informationally decentralized systems. This fact is also recognized in <ref> [7] </ref> and [8]. In this paper, we investigate failure diagnosis problems in DES under decentralized information.
Reference: [8] <author> R. Boubour, C. Jard, A. Aghasaryan, E. Fabre, and A. Benveniste. </author> <title> Petri net approach to fault detection and diagnosis in distributed systems: application to telecommunication networks, motivations, and modelling. </title> <booktitle> In Proc. 36th IEEE Conf. on Decision and Control, </booktitle> <address> San Diego, CA, </address> <month> December </month> <year> 1997. </year>
Reference-contexts: Consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree [2] and analytical redundancy [3, 4] methods to discrete event system (DES) approaches <ref> [1, 5, 6, 7, 8, 9] </ref>, model based reasoning [10] and expert systems [11] methods, have been proposed to approach this problem. For a brief description of these methods and additional references, the interested reader is referred to [12] and the introduction of [1]. <p> The authors can be reached by email at ridebouk@eecs.umich.edu, stephane@eecs.umich.edu and teneket@eecs.umich.edu. 2 Last revised May 1998 2 develop diagnostic methodologies for informationally decentralized systems. This fact is also recognized in [7] and <ref> [8] </ref>. In this paper, we investigate failure diagnosis problems in DES under decentralized information.
Reference: [9] <author> C.G. Cassandras and S. Lafortune. </author> <title> Discrete event systems: The state of the art and some recent trends. </title> <editor> In B. Datta, editor, </editor> <title> Applied and computational control, signals and circuits. </title> <publisher> Birkhauser, </publisher> <year> 1998. </year>
Reference-contexts: Consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree [2] and analytical redundancy [3, 4] methods to discrete event system (DES) approaches <ref> [1, 5, 6, 7, 8, 9] </ref>, model based reasoning [10] and expert systems [11] methods, have been proposed to approach this problem. For a brief description of these methods and additional references, the interested reader is referred to [12] and the introduction of [1].
Reference: [10] <author> R. Davis and W. Hamscher. </author> <title> Model based reasoning: Troubleshooting. </title> <editor> In W. Hamscher, L. Console, and J. Kleer, editors, </editor> <booktitle> Readings in Model Based Diagnosis, </booktitle> <pages> pages 3-24. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year>
Reference-contexts: Consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree [2] and analytical redundancy [3, 4] methods to discrete event system (DES) approaches [1, 5, 6, 7, 8, 9], model based reasoning <ref> [10] </ref> and expert systems [11] methods, have been proposed to approach this problem. For a brief description of these methods and additional references, the interested reader is referred to [12] and the introduction of [1].
Reference: [11] <author> W.T. Scherer and C.C. White. </author> <title> A survey of expert systems for equipment maintenance and diagnostics. </title> <editor> In M.G. Singh, K.S. Hindi, G. Schmidt, and S. Tzafestas, editors, </editor> <title> Fault Detection and Reliability: Knowledge Based & Other Approaches. </title> <publisher> Pergamon Press, </publisher> <year> 1987. </year>
Reference-contexts: Consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree [2] and analytical redundancy [3, 4] methods to discrete event system (DES) approaches [1, 5, 6, 7, 8, 9], model based reasoning [10] and expert systems <ref> [11] </ref> methods, have been proposed to approach this problem. For a brief description of these methods and additional references, the interested reader is referred to [12] and the introduction of [1].
Reference: [12] <author> A.D. Pouliezos and G.S. Stavrakakis. </author> <title> Real time fault monitoring of industrial processes. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1994. </year>
Reference-contexts: For a brief description of these methods and additional references, the interested reader is referred to <ref> [12] </ref> and the introduction of [1]. Almost all of the abovementioned approaches have been developed for systems where the information used for fault diagnosis is centralized. A notable exception is [7], where the authors present a distributed fault monitoring method, time templates.
Reference: [13] <author> P.J. Ramadge and W.M. Wonham. </author> <title> The control of discrete-event systems. </title> <journal> Proc. IEEE, </journal> <volume> 77(1) </volume> <pages> 81-98, </pages> <year> 1989. </year>
Reference-contexts: The model G accounts for the normal and failed behavior of the system. The behavior of the system is described by the prefix-closed language <ref> [13] </ref> L (G) generated by G. L (G) is a subset of fl , where fl denotes the Kleene closure of the set [14]. In this paper we will use the language L (G), or simply L, and the system interchangeably. <p> Let s denote the prefix-closure of any trace s 2 fl . We denote by L=s the post-language of L after s, i.e., L=s = ft 2 fl jst 2 Lg: (3) We define the projection P : fl ! fl o in the usual manner <ref> [13] </ref> P (*) = * P (oe) = * if oe 2 uo The inverse projection operator P 1 L is defined as P 1 Let s f denote the final event of trace s.
Reference: [14] <author> J. Hopcroft and J. Ullman. </author> <title> Introduction to automata theory, languages, and computation. </title> <publisher> Addison Wesley, </publisher> <address> Reading, MA, USA, </address> <year> 1979. </year>
Reference-contexts: The model G accounts for the normal and failed behavior of the system. The behavior of the system is described by the prefix-closed language [13] L (G) generated by G. L (G) is a subset of fl , where fl denotes the Kleene closure of the set <ref> [14] </ref>. In this paper we will use the language L (G), or simply L, and the system interchangeably. Some of the events in are observable, i.e., their occurrence can be observed, while the rest are unobservable. <p> The initial state of the diagnoser is defined to be f (x 0 ; fN g)g. The transition function ffi d of the diagnoser is constructed in a similar manner to the transition function of an observer of G <ref> [14] </ref>, with an additional aspect that includes attaching failure labels to the states and propagating these labels from state to state. For more information about the construction of the diagnoser, the reader is referred to [1, 15].
Reference: [15] <author> M. Sampath. </author> <title> A Discrete Event Systems Approach to Failure Diagnosis. </title> <type> PhD thesis, </type> <institution> The University of Michigan, </institution> <year> 1995. </year>
Reference-contexts: The unobservable events may be failure events or other events that cause changes in the system state not recorded by sensors (see <ref> [15, 16] </ref>). Let f denote the set of failure events which are to be diagnosed. We assume, without loss of generality, that f uo , since an observable failure event can be trivially diagnosed. <p> The generator G 0 (see <ref> [1, 15] </ref>) is the nondeterministic FSM, G 0 = (X o ; o ; ffi G 0 ; x 0 ); (10) where X o ; o , and x 0 are defined as previously, and the transition relation of G 0 is given by ffi G 0 (X o fi <p> More rigorously, diagnosability is defined as follows <ref> [1, 15] </ref>: 4 Definition 2.1 A prefix-closed and live language L is said to be diagnosable with respect to the projection P and with respect to the partition f on f if the following holds (8i 2 f )(9n i 2 N )(8s 2 ( fi ))(8t 2 L=s)(k t k <p> For more information about the construction of the diagnoser, the reader is referred to <ref> [1, 15] </ref>. The state space Q d is the resulting subset of Q o composed of the states of the diagnoser that are reachable from q 0 under ffi d . <p> Next, we provide some definitions that are necessary in order to state the main diagnosability result for centralized systems in Section 2.5. For a detailed discussion and interpretation of this material the reader is referred to <ref> [1, 15] </ref>. Definition 2.2 (Definition 6-1 in [1]). A state q 2 Q d is said to be F i -certain if 8 (x; l) 2 q, F i 2 l: Definition 2.3 (Definition 6-3 in [1]). <p> We present protocols that realize the architecture in Sections 4, 5 and 6. In Figure 1, the top block represents the system model, or G in the notation of Section 2.1. G models the synchronization of the interaction of all the components that constitute the system (see <ref> [15, 16] </ref>). Each site is composed of two modules: an observation module and a diagnostic module. The site i, i 2 f1; 2g, locally observes the system based on its available sensing capabilities. <p> A8 The coordinator does not have a model of the system. It has a simple structure; specifically, it has limited memory and limited processing capabilities. Assumption A1 ensures that there are no deadlocks. This assumption can be relaxed easily as discussed in <ref> [15, 17] </ref>. <p> Therefore, an extended diagnoser state potentially carries more information than a diagnoser state. In the case of centralized systems, G d and G e d are equivalent from the point of view of diagnosability as defined in Definition 2.1; it is for that reason that prior work <ref> [1, 15, 16, 17] </ref> only considered the simpler G d . Example 4.2 Again consider the system shown in Figure 2 with = fa,b,c,d,e,oeg, uo = foeg, f1 = foeg. The diagnoser G d and extended diagnoser G e d for this system are shown in Figure 4. <p> Note here that in such a case, a mechanism should be implemented at the coordinator site to take care of who saw what and when. 8 Conclusion In this paper, we have extended the theory of diagnosability of systems in the framework of formal languages <ref> [1, 15] </ref> to a class of coordinated decentralized systems. We presented three coordinated decentralized protocols that are capable under certain assumptions of diagnosing all failure types diagnosed by the centralized diagnoser. We identified necessary and sufficient conditions for diagnosability under the proposed protocols. <p> Our analysis has been based on a set of assumptions, some of which, namely the liveness of the language and the nonexistence of cycles of unobservable events, can be relaxed easily as discussed in <ref> [15, 17] </ref>. However, the assumptions on ordering are critical, and reveal some fundamental limitations of the untimed DES mathematical model used in this paper. 38
Reference: [16] <author> M. Sampath, R. Sengupta, S. Lafortune, K. Sinnamohideen, and D. Teneketzis. </author> <title> Failure diagnosis using discrete-event models. </title> <journal> IEEE Trans. Contr. Syst. Tech., </journal> <volume> 4(2) </volume> <pages> 105-124, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: The unobservable events may be failure events or other events that cause changes in the system state not recorded by sensors (see <ref> [15, 16] </ref>). Let f denote the set of failure events which are to be diagnosed. We assume, without loss of generality, that f uo , since an observable failure event can be trivially diagnosed. <p> In this regard, we partition the set of failure events into disjoint sets corresponding to different failure types f = f1 [ f2 [ : : : [ fj : (2) Let f denote this partition. For the motivation of such a partition, the reader is referred to <ref> [1, 16] </ref>. Hereafter, when we write a failure of type F i has occurred, we will mean that some event of the set fi has occurred. 2.2 Notation The empty trace is denoted by *. Let s denote the prefix-closure of any trace s 2 fl . <p> We present protocols that realize the architecture in Sections 4, 5 and 6. In Figure 1, the top block represents the system model, or G in the notation of Section 2.1. G models the synchronization of the interaction of all the components that constitute the system (see <ref> [15, 16] </ref>). Each site is composed of two modules: an observation module and a diagnostic module. The site i, i 2 f1; 2g, locally observes the system based on its available sensing capabilities. <p> Therefore, an extended diagnoser state potentially carries more information than a diagnoser state. In the case of centralized systems, G d and G e d are equivalent from the point of view of diagnosability as defined in Definition 2.1; it is for that reason that prior work <ref> [1, 15, 16, 17] </ref> only considered the simpler G d . Example 4.2 Again consider the system shown in Figure 2 with = fa,b,c,d,e,oeg, uo = foeg, f1 = foeg. The diagnoser G d and extended diagnoser G e d for this system are shown in Figure 4.
Reference: [17] <author> M. Sampath, S. Lafortune, and D. Teneketzis. </author> <title> Active diagnosis of discrete-event systems. </title> <journal> IEEE Trans. Automat. Contr., </journal> <volume> 43(7), </volume> <month> July </month> <year> 1998. </year>
Reference-contexts: A8 The coordinator does not have a model of the system. It has a simple structure; specifically, it has limited memory and limited processing capabilities. Assumption A1 ensures that there are no deadlocks. This assumption can be relaxed easily as discussed in <ref> [15, 17] </ref>. <p> Therefore, an extended diagnoser state potentially carries more information than a diagnoser state. In the case of centralized systems, G d and G e d are equivalent from the point of view of diagnosability as defined in Definition 2.1; it is for that reason that prior work <ref> [1, 15, 16, 17] </ref> only considered the simpler G d . Example 4.2 Again consider the system shown in Figure 2 with = fa,b,c,d,e,oeg, uo = foeg, f1 = foeg. The diagnoser G d and extended diagnoser G e d for this system are shown in Figure 4. <p> Our analysis has been based on a set of assumptions, some of which, namely the liveness of the language and the nonexistence of cycles of unobservable events, can be relaxed easily as discussed in <ref> [15, 17] </ref>. However, the assumptions on ordering are critical, and reveal some fundamental limitations of the untimed DES mathematical model used in this paper. 38
Reference: [18] <author> M. Sampath. </author> <note> The extended diagnoser, </note> <month> November </month> <year> 1993. </year> <note> Unpublished memorandum. </note>
Reference-contexts: We begin by specifying the type of diagnostic information generated at local sites. 8 4.1.1 Diagnostic information at local sites The diagnostic information at the local site is generated by the extended diagnoser defined below. The extended diagnoser for G was first introduced in <ref> [18] </ref>, and it is the FSM G e d ; o ; ffi e 0 ) (16) where Q e d ; o ; ffi e 0 have the usual interpretation of state space, event set, transition function, and initial state. <p> 4.3 A state q 2 Q e d is said to be F i -uncertain if 9 (x; l), (y; l 0 ) 2 SP (q), x not necessarily distinct from y, such that F i 2 l and F i 62 l 0 : Definition 4.4 (Definition 1 in <ref> [18] </ref>). <p> Q e d is said to form a cycle in G e d if the following is true: ffi e d (q n ; oe n ) = q 1 for some observable events oe i , i = 1; : : : ; n: Definition 4.5 (Definition 2 in <ref> [18] </ref>). <p> Definition 4.6 (Definition 3 in <ref> [18] </ref>). <p> We denote by " c the intersection scheme that acts on q 1 and q 0 , and we define it as follows: 3 This theorem is presented as an unproved claim in <ref> [18] </ref>. 13 q 1 " c q 0 = f ((z; l); (z 0 ; l 0 )) 2 Q o fi Q o : (z; l) = (x i ; l i ) = (y 0 j ), for some i; j, i 2 f1; 2; : : : ;
Reference: [19] <author> J. L. Speyer. </author> <title> Computation and transmission requirements for a decentralized linear-quadratic-gaussian control problem. </title> <journal> IEEE Trans. Automat. Contr., </journal> <volume> 24 </volume> <pages> 266-269, </pages> <month> April </month> <year> 1979. </year> <month> 39 </month>
Reference-contexts: Thus communication is reduced while achieving the same performance. Situations where savings in communication are of paramount importance arise in networks where the nodes (sites) are low energy battery-powered mobile units. The feature of Protocol 2 discussed above is also present in decentralized estimation of linear Gaussian systems, <ref> [19] </ref> and [20]. However, in [19] and [20] there are no restrictions on the structure of the linear Gaussian system. On the other hand, the estimation problems in [19] and [20] are linear, whereas Protocol 2 deals with a nonlinear estimation problem. <p> Situations where savings in communication are of paramount importance arise in networks where the nodes (sites) are low energy battery-powered mobile units. The feature of Protocol 2 discussed above is also present in decentralized estimation of linear Gaussian systems, <ref> [19] </ref> and [20]. However, in [19] and [20] there are no restrictions on the structure of the linear Gaussian system. On the other hand, the estimation problems in [19] and [20] are linear, whereas Protocol 2 deals with a nonlinear estimation problem. Decentralized nonlinear estimation problems for stochastic systems have been investigated in [21]. <p> The feature of Protocol 2 discussed above is also present in decentralized estimation of linear Gaussian systems, <ref> [19] </ref> and [20]. However, in [19] and [20] there are no restrictions on the structure of the linear Gaussian system. On the other hand, the estimation problems in [19] and [20] are linear, whereas Protocol 2 deals with a nonlinear estimation problem. Decentralized nonlinear estimation problems for stochastic systems have been investigated in [21].
Reference: [20] <author> A. S. Willsky, M. Bello, D. A. Castanon, B. C. Levy, and G. Verghese. </author> <title> Combining and updating of local estimates and regional maps along sets of one-dimensional tracks. </title> <journal> IEEE Trans. Automat. Contr., </journal> <volume> 27(4) </volume> <pages> 799-813, </pages> <month> August </month> <year> 1982. </year>
Reference-contexts: Situations where savings in communication are of paramount importance arise in networks where the nodes (sites) are low energy battery-powered mobile units. The feature of Protocol 2 discussed above is also present in decentralized estimation of linear Gaussian systems, [19] and <ref> [20] </ref>. However, in [19] and [20] there are no restrictions on the structure of the linear Gaussian system. On the other hand, the estimation problems in [19] and [20] are linear, whereas Protocol 2 deals with a nonlinear estimation problem. <p> Situations where savings in communication are of paramount importance arise in networks where the nodes (sites) are low energy battery-powered mobile units. The feature of Protocol 2 discussed above is also present in decentralized estimation of linear Gaussian systems, [19] and <ref> [20] </ref>. However, in [19] and [20] there are no restrictions on the structure of the linear Gaussian system. On the other hand, the estimation problems in [19] and [20] are linear, whereas Protocol 2 deals with a nonlinear estimation problem. Decentralized nonlinear estimation problems for stochastic systems have been investigated in [21]. <p> The feature of Protocol 2 discussed above is also present in decentralized estimation of linear Gaussian systems, [19] and <ref> [20] </ref>. However, in [19] and [20] there are no restrictions on the structure of the linear Gaussian system. On the other hand, the estimation problems in [19] and [20] are linear, whereas Protocol 2 deals with a nonlinear estimation problem. Decentralized nonlinear estimation problems for stochastic systems have been investigated in [21].
Reference: [21] <author> D. A. Castanon and D. Teneketzis. </author> <title> Distributed estimation algorithms for nonlinear systems. </title> <journal> IEEE Trans. Automat. Contr., </journal> <volume> 30(5) </volume> <pages> 418-425, </pages> <month> May </month> <year> 1985. </year>
Reference-contexts: On the other hand, the estimation problems in [19] and [20] are linear, whereas Protocol 2 deals with a nonlinear estimation problem. Decentralized nonlinear estimation problems for stochastic systems have been investigated in <ref> [21] </ref>. The coordinated decentralized estimation protocol proposed in [21] achieves the same performance as the optimal centralized estimator under no restrictions on the system structure, but requires continuous communication between the local sites and the coordinator and assumes that the coordinator has knowledge of the system structure. <p> On the other hand, the estimation problems in [19] and [20] are linear, whereas Protocol 2 deals with a nonlinear estimation problem. Decentralized nonlinear estimation problems for stochastic systems have been investigated in <ref> [21] </ref>. The coordinated decentralized estimation protocol proposed in [21] achieves the same performance as the optimal centralized estimator under no restrictions on the system structure, but requires continuous communication between the local sites and the coordinator and assumes that the coordinator has knowledge of the system structure.
Reference: [22] <author> D. Bertsekas and R. Gallager. </author> <title> Data Networks. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1992. </year>
Reference-contexts: Assumptions A4 and A5 address this issue, since they guarantee the arrival of messages in the order they are sent locally and globally. However, part of this assumption, namely the preservation of the global order, is admittedly strong. From network theory <ref> [22] </ref>, we know that sender/receiver protocols that guarantee the correct and ordered reception of messages at the receiver end exist, and they apply to one network layer connection. Therefore, one can assume that the communication between one local site and the coordinator is correct and ordered.
Reference: [23] <author> K. Wong and J. H. van Schuppen. </author> <title> Decentralized supervisory control of discrete event systems with communications. </title> <booktitle> In Proc. of WODES 1996, International Workshop on Discrete Event Systems, </booktitle> <pages> pages 284-289. </pages> <publisher> Published by IEE, </publisher> <address> London, England, </address> <month> August </month> <year> 1996. </year> <month> 40 </month>
Reference-contexts: A similar problem is also discussed in <ref> [23] </ref>. The above example reveals a fundamental limitation of the mathematical model used in this paper. To relax assumptions such as Assumption A5, we submit that timed discrete-event models have to be used. 7.3 Extension to m sites In our discussion, we have considered the generic case of two sites.
References-found: 23

