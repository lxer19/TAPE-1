URL: http://www.cs.umn.edu/Users/dept/users/kencham/SyncStorage.ps.gz
Refering-URL: http://www.cs.umn.edu/Users/dept/users/kencham/
Root-URL: http://www.cs.umn.edu
Email: fkencham,srivastag@cs.umn.edu  
Title: Efficient Storage for Synchronized Digital Audio and Video  
Author: Deepak R. Kenchammana-Hosekote Jaideep Srivastava 
Address: MN 55455  
Affiliation: Department of Computer Science, University of Minnesota,  
Abstract-found: 0
Intro-found: 1
Reference: [CKY94] <author> M. Chen, D. Kandlur, and P.S. Yu. </author> <title> Support For Fully Interactive Playout in a disk-array based Video Server. </title> <booktitle> In Proceedings of 2 nd ACM Multimedia Conference. ACM, </booktitle> <month> October </month> <year> 1994. </year>
Reference-contexts: In Section 3 we present our solutions and their evaluations in Section 4. Section 5 presents our conclusions. Previous work in this area includes [LS92], [CL93], [GR93], [ONWC87],[RV93],[YSB + 89], <ref> [CKY94] </ref>, [FC91], [GC92].[YSB + 89] and [RV93] discuss supporting synchronized retrieval without maintaining distinct storage for components of a composition.[GR93] considers the storage of such data in disk arrays to increase retrieval bandwidth. [GC92] discusses optimizing storage for frequently accessed data.
Reference: [CL93] <author> H.-J. Chen and T.D.C Little. </author> <title> Physical storage organization for time dependent multimedia data. </title> <booktitle> In 4 th Intl. Conference on Foundation of Data Organization and Algorithms, </booktitle> <year> 1993. </year>
Reference-contexts: In Section 3 we present our solutions and their evaluations in Section 4. Section 5 presents our conclusions. Previous work in this area includes [LS92], <ref> [CL93] </ref>, [GR93], [ONWC87],[RV93],[YSB + 89], [CKY94], [FC91], [GC92].[YSB + 89] and [RV93] discuss supporting synchronized retrieval without maintaining distinct storage for components of a composition.[GR93] considers the storage of such data in disk arrays to increase retrieval bandwidth. [GC92] discusses optimizing storage for frequently accessed data.
Reference: [FC91] <author> D.A. Ford and S. Christodoulakis. </author> <title> Optimal placement of high-probability randomly retrieved blocks on CLV optical disks. </title> <journal> ACM Transactions of Information Systems, </journal> <volume> 9(1) </volume> <pages> 1-30, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: In Section 3 we present our solutions and their evaluations in Section 4. Section 5 presents our conclusions. Previous work in this area includes [LS92], [CL93], [GR93], [ONWC87],[RV93],[YSB + 89], [CKY94], <ref> [FC91] </ref>, [GC92].[YSB + 89] and [RV93] discuss supporting synchronized retrieval without maintaining distinct storage for components of a composition.[GR93] considers the storage of such data in disk arrays to increase retrieval bandwidth. [GC92] discusses optimizing storage for frequently accessed data.
Reference: [GC92] <author> J. Gemmell and S. Christodoulakis. </author> <title> Principles of Delay-sensitive Multimedia Storage and Re--trieval. </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 10(1) </volume> <pages> 51-90, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: Previous work in this area includes [LS92], [CL93], [GR93], [ONWC87],[RV93],[YSB + 89], [CKY94], [FC91], <ref> [GC92] </ref>.[YSB + 89] and [RV93] discuss supporting synchronized retrieval without maintaining distinct storage for components of a composition.[GR93] considers the storage of such data in disk arrays to increase retrieval bandwidth. [GC92] discusses optimizing storage for frequently accessed data.
Reference: [GR93] <author> S Gandharizadeh and L. Ramos. </author> <title> Continuous retrieval of multimedia data using parallelism. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 5(4), </volume> <month> August </month> <year> 1993. </year>
Reference-contexts: In Section 3 we present our solutions and their evaluations in Section 4. Section 5 presents our conclusions. Previous work in this area includes [LS92], [CL93], <ref> [GR93] </ref>, [ONWC87],[RV93],[YSB + 89], [CKY94], [FC91], [GC92].[YSB + 89] and [RV93] discuss supporting synchronized retrieval without maintaining distinct storage for components of a composition.[GR93] considers the storage of such data in disk arrays to increase retrieval bandwidth. [GC92] discusses optimizing storage for frequently accessed data.
Reference: [IBM94] <author> IBM. </author> <title> 0644 N1H Model SCSI Disk Drives, </title> <booktitle> 1994. Data Sheet. </booktitle>
Reference-contexts: We simulated the storage of audiovisual compostions on a IBM 0664 N1H <ref> [IBM94] </ref> disk. This disk has a per-block access time, v = 0:5 ms with a data transfer rate R of 4MBps.
Reference: [Jai92] <editor> R. Jain. </editor> <booktitle> Nsf workshop on visual information systems. Report of a Workshop, </booktitle> <month> January </month> <year> 1992. </year>
Reference: [KHS94] <author> D.R. Kenchammana-Hosekote and J. Srivastava. </author> <title> Data Placement for Continuous Media. </title> <type> Technical report, </type> <institution> Department of Computer Science, University of Minnesota, </institution> <month> December </month> <year> 1994. </year> <note> In prepartion. </note>
Reference-contexts: X using the GCDI technique turns out to be X 1 : : : X 1 | -z - GCD (b 1 ;:::; b n ) blocks X n : : : X n | -z - GCD (b 1 ;:::; b n ) blocks Detailed derivations are provided in <ref> [KHS94] </ref>. 3.2.2 Quasi-Periodic Interleaving Technique (QPI) The main drawback of GCDI is that the technique generates large placement cycles when j X 1 j; : : :; j X n j are relatively prime. Large placement cycles increase T s , BMX , and BTP. <p> Large placement cycles increase T s , BMX , and BTP. Some adaptive techniques have been proposed in <ref> [KHS94] </ref> that modify GCDI by scaling down the cycle length by a constant and thereafter 5 Greatest Common Divisor 4 use a combination of ceiling and floor values to lay the composite stream on the block sequence. However, each of those techniques adds undue complexity. <p> QPI: X 2 X 1 X 2 X 2 X 1 X 2 X 2 X 1 X 2 X 1 X 2 X 2 X 1 X 1 X 1 X 2 X 2 A O (j X j) algorithm given in <ref> [KHS94] </ref> can generate a QPI interleaving for a composition and thus imposes no substantial overhead. 4 Evaluation In this section we present evaluation of the two storage techniques proposed in Section 3. We simulated the storage of audiovisual compostions on a IBM 0664 N1H [IBM94] disk. <p> Other results like the effect of independent retrievals of component streams and the effect of random seeks and reverse plays on T s , BMX , and BTP, etc. on the two storage strategies are discussed in <ref> [KHS94] </ref>. 5 Conclusions Compositional information in digital audio and video like synchronization can be used to derive their placement in storage systems. In some applications it is useful to store such component data in distinct, homogeneous disk blocks as they allow re-compositions and independent accesses with minimal re-organization.
Reference: [KKHLS92] <author> W. Kim, D.R. Kenchammana-Hosekote, E. Lim, and J. Srivastava. </author> <title> Synchronization Relation Tree : A Model for Temporal Synchronization in Multi-Media Presentations. </title> <type> Technical Report TR92-42(Revised), </type> <institution> University Of Minnesota, </institution> <year> 1992. </year>
Reference-contexts: A composite stream, on the other hand, is composed temporally 1 from other (simple or composite) streams. Constructs like those proposed in [Rea91], [LG90], and <ref> [KKHLS92] </ref> allow specification of temporal relationships between time intervals of play-out of the component streams. Such sets of constructs are useful for specifying compositions as well as deriving placement for two reasons.
Reference: [LG90] <author> T.D.C. Little and A. Gafoor. </author> <title> Synchronization and storage model for multimedia objects. </title> <journal> Selected Areas in Communications, </journal> <volume> 8(3), </volume> <month> April </month> <year> 1990. </year>
Reference-contexts: A composite stream, on the other hand, is composed temporally 1 from other (simple or composite) streams. Constructs like those proposed in [Rea91], <ref> [LG90] </ref>, and [KKHLS92] allow specification of temporal relationships between time intervals of play-out of the component streams. Such sets of constructs are useful for specifying compositions as well as deriving placement for two reasons.
Reference: [LS92] <author> P. Lougher and D. Shepherd. </author> <title> Design and implementation of a continuous media storage server. </title> <booktitle> In Proc. of 3 rd Intl. Workshop on Network and Operating Systems, </booktitle> <year> 1992. </year>
Reference-contexts: In Section 3 we present our solutions and their evaluations in Section 4. Section 5 presents our conclusions. Previous work in this area includes <ref> [LS92] </ref>, [CL93], [GR93], [ONWC87],[RV93],[YSB + 89], [CKY94], [FC91], [GC92].[YSB + 89] and [RV93] discuss supporting synchronized retrieval without maintaining distinct storage for components of a composition.[GR93] considers the storage of such data in disk arrays to increase retrieval bandwidth. [GC92] discusses optimizing storage for frequently accessed data.
Reference: [ONWC87] <author> B.C. Ooi, A.N. Narasimalu, K.Y. Wang, and I.F. Chang. </author> <title> Design of a multi-media files server using optical disks for office automation. </title> <booktitle> In IEEE Computer Society Office Automation Symposium, </booktitle> <pages> pages 157-163, </pages> <year> 1987. </year>
Reference: [Rea91] <author> Venkat P. Rangan and et al. </author> <title> A test bed for digital audio and video. </title> <booktitle> In USENIX Proceedings, </booktitle> <month> Summer </month> <year> 1991. </year>
Reference-contexts: A composite stream, on the other hand, is composed temporally 1 from other (simple or composite) streams. Constructs like those proposed in <ref> [Rea91] </ref>, [LG90], and [KKHLS92] allow specification of temporal relationships between time intervals of play-out of the component streams. Such sets of constructs are useful for specifying compositions as well as deriving placement for two reasons.
Reference: [RV93] <author> V.P. Rangan and H.M. Vin. </author> <title> Efficient storage techniques for digital continuous multimedia. </title> <journal> IEEE Trans. on Knowledge and Data Engg., </journal> <volume> 5(4) </volume> <pages> 564-573, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: In Section 3 we present our solutions and their evaluations in Section 4. Section 5 presents our conclusions. Previous work in this area includes [LS92], [CL93], [GR93], [ONWC87],<ref> [RV93] </ref>,[YSB + 89], [CKY94], [FC91], [GC92].[YSB + 89] and [RV93] discuss supporting synchronized retrieval without maintaining distinct storage for components of a composition.[GR93] considers the storage of such data in disk arrays to increase retrieval bandwidth. [GC92] discusses optimizing storage for frequently accessed data.
Reference: [Sch91] <author> M.R. Schroeder. </author> <title> Fractals, Chaos, and Power Laws:Minutes from an Infinite Paradise. </title> <publisher> Freeman, W.H., </publisher> <year> 1991. </year>
Reference: [YSB + 89] <author> C Yu, W Sun, D Bitton, Q. Yang, Y. Bruno, and J. Yus. </author> <title> Efficient placment of audio data on optical disks for real-time applications. </title> <journal> Communications of ACM, </journal> <volume> 7, </volume> <month> July </month> <year> 1989. </year> <month> 8 </month>
References-found: 16

