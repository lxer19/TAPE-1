URL: http://www.isi.edu/~gil/papers/gil-linster-kaw95.ps
Refering-URL: http://www.isi.edu/expect/papers/papers-ka.html
Root-URL: 
Affiliation: Information Sciences Institute Workplace Integration Technologies University of Southern California Digital Equipment Corporation  
Address: Banff, Alberta, Canada.  4676 Admiralty Way 200 Forest Road Marina del Rey, CA 90292 Marlboro, MA 01752  
Date: February  
Note: In Proceedings of the Ninth Knowledge Acquisition for Knowledge-Based Systems Workshop,  26-March 3, 1995.  
Abstract: Yolanda Gil Marc Linster Dimensions to Analyze Applications Applications should be an invaluable experimental source of information and challenges for AI research. The real world always stretches the limitations of our AI systems, pointing toward new research themes in many areas. In the process of implementing an application, the designer continually makes choices based on (1) the baseline architecture used to implement the application, (2) the characteristics of the problem itself, or (3) arbitrary decisions and assumptions. All these decisions are intertwined in the resulting application, and as a result, it is not easy to abstract a description of the functionality provided by the architecture itself. At the same time, we would like to base our science on real-world applications that are subject to controllable experiments whose parameters can be modified to obtain experimental results of our programs' behavior. However, real applications rarely facilitate this task. Although the AI community has developed formalisms to describe AI architectures, we are still lacking a formal language to describe tasks and problems that provides a good qualitative understanding of AI applications. We argue that this is a major deficiency that stops feedback from applications to research. This work is an effort towards descriptions of applications in terms that are useful 1) to extract conclusions from particular implementations, 2) to facilitate cross-comparisons among different architectures applied to the same problem, and 3) to facilitate comparisons among different tasks. We analyze the Sisyphus experience, and we propose a set of dimensions to describe applications that distinghish between descriptions of the properties of the architecture, the type of problem, and the data sets. We show how these dimensions can be used to produce useful distinctions in the context of the first Sisyphus task, an office assignment problem. Our hope is that the same dimensions will be useful to other researchers in describing, characterizing, and producing qualitative evaluations of their applications, as well as a useful point of comparison for future Sisyphus efforts. gil@isi.edu linster@guess.enet.dec.com
Abstract-found: 1
Intro-found: 1
Reference: [ Allemang & Rothenfluh, 1992 ] <author> Allemang, D., and Rothenfluh, T. </author> <year> 1992. </year> <title> Acquiring knowledge of knowledge acquisition: A self-study of Generic Tasks. </title> <editor> In Wetter, T.; Althoff, K.-D.; Boose, J.; Gaines, B.; Linster, M.; and Schmalhofer, F., eds., </editor> , <booktitle> volume 599 of , 353 - 372. </booktitle> <address> Heidelberg: GI, ECCAI. </address>
Reference-contexts: The analysis does not look at the methodological aspects of the approaches either, that is, it does not study how much guidance the approaches provide for the practitioner developing a model (see <ref> [ Allemang & Rothenfluh, 1992 ] </ref> for such a study). Building blocks were defined as discrete and identifiable constructs that the framework provides to describe the knowledge that goes into an application.
Reference: [ Brachman & Schmolze, 1985 ] <author> Brachman, R., and Schmolze, G. </author> <year> 1985. </year> <title> An overwiev of the KL-ONE knowledge representation system. </title> <booktitle> 9(11) </booktitle> <pages> 216-260. </pages>
Reference-contexts: The knowledge engineer identifies recurring and potentially more abstract structures in the domain. These structures can be of different kinds. (a) The knowledge engineer develops a structured terminology for the domain, for example she can define a T-box in KL-ONE-like approaches <ref> [ Brachman & Schmolze, 1985 ] </ref> or a set of classes in an object-oriented approach. (b) The knowledge engineer defines the actions, goals, and decision criteria to give an abstract (possibly knowledge level) descrip tion of the problem-solver. (c) such as, task sharing, task decomposition, data flow, or modality. (d) The
Reference: [ Burton , 1990 ] <author> Burton, A. M.; Shadbolt, N. R.; Rugg, G.; and Hedgecock, A. </author> <year> 1990. </year> <title> The efficacy of knowledge elicitation techniques: A comparison across domains and levels of expertise. </title> <address> 2(2):167 - 178. </address>
Reference-contexts: Who is the user of the tool or methodology? These dimensions reflect an engineering point of view on knowledge modeling, instead of a cognition-oriented one. For example the analysis does not consider the adequacy of the models nor the efficiency of the approaches in capturing the of knowledge (see <ref> [ Burton , 1990 ] </ref> for such a study).
Reference: [ Karbach et al, 1990 ] <author> Karbach, W., Linster, M. and Vo, A. </author> <year> 1990. </year> <title> Models, methods, roles and tasks: Many labels one idea?. </title> <address> 2(4):279 - 300. </address>
Reference-contexts: First analyses of Sisyphus contributions [ Linster, 1993b ] have shown that it is possible and fruitful to compare the use of different approaches and architectures to solving the same problem. Karbach, Linster, and Vo <ref> [ Karbach et al, 1990 ] </ref> analyzed operational knowledge-based problem solvers. They focussed on how different approaches model and represent problem-solving capabilities and the knowledge required to implement those capabilities. Besides looking at the use of terms like and , they focus on a unifying description of the problem-solving method.
Reference: [ Karbach & Vo, 1991 ] <author> Karbach, W., and Vo, A. </author> <year> 1991. </year> <title> Glueing together small solutions: An office planning model in MODEL-K. </title> <editor> In Linster, M., ed., </editor> , <booktitle> volume 663 of . St. </booktitle> <institution> Augustin: GMD. </institution>
Reference: [ LaFrance, 1987 ] <author> LaFrance, M. </author> <year> 1987. </year> <title> The knowledge acquisition grid: A method for training knowledge engineers. </title> <booktitle> 26 </booktitle> <pages> 245-255. </pages>
Reference-contexts: A more detailed description of this view on the development cycle is given in [ Linster, 1993a ] . 1. The knowledge engineer goes through initial interviews with the domain expert, records first protocols, and if possible she uses techniques such as the knowledge acquisition grid <ref> [ LaFrance, 1987 ] </ref> to obtain initial structures and to get a first overview of the application task. 2. The knowledge engineer identifies recurring and potentially more abstract structures in the domain.
Reference: [ Linster, 1993a ] <author> Linster, M. </author> <year> 1993a. </year> <title> Explicit and operational models as a basis for second generation knowledge-acquisition tools. </title> <editor> In David, J.-M.; Krivine, J.-P.; and Simmons, R., eds., </editor> . <publisher> Springer Verlag. </publisher> <month> 477 - 506. </month> <title> 13 Knowledge Acquisition for Knowledge-Based Systems Int. </title> <journal> Journal of Human-Computer Studies Artificial Intelligence AI Magazine Automating Knowledge Acquisition for Expert Systems Artificial Intelligence et al. Artificial Intelligence et al. Current Trends in Knowledge Acquisition; Proceedings of EKAW90 </journal>
Reference-contexts: A more detailed description of this view on the development cycle is given in <ref> [ Linster, 1993a ] </ref> . 1.
Reference: [ Linster, 1993b ] <author> Linster, M. </author> <year> 1993b. </year> <title> A review of Sisyphus 91 & 92: Models of problem-solving knowledge. </title> <editor> In Aussenac, N.; Boy, G.; Gaines, B.; Linster, M.; Ganascia, J.-G.; and Kodratoff, Y., eds., </editor> , <volume> volume 723. </volume> <pages> Toulouse: </pages> <publisher> Springer Verlag. </publisher>
Reference-contexts: This statement can be abstracted into rules, constraints, action classes, or schemas [ Linster, 1994 ] . At the same time, the Sisyphus problems are small enough for easy documentation, thus allowing many research groups to participate in the experiments. First analyses of Sisyphus contributions <ref> [ Linster, 1993b ] </ref> have shown that it is possible and fruitful to compare the use of different approaches and architectures to solving the same problem. Karbach, Linster, and Vo [ Karbach et al, 1990 ] analyzed operational knowledge-based problem solvers. <p> Finally, we propose some questions for discussion at the workshop that could provide further insight in solutions to Sisyphus problems. Linster <ref> [ Linster, 1993b ] </ref> compares several Sisyphus solutions along different dimensions to address the following questions: 2 What are the building blocks used to model knowledge? What is the purpose of the tool/methodology? right kind et al. knowledge con ceptualization visualization implementation knowledge management 1. <p> We render these conclusions to illustrate the potential that an agreed-upon system of dimensions and an agreed-upon assessment method have. Right now, the conclusions are only of interest in the framework used in <ref> [ Linster, 1993b ] </ref> to evaluate the Office-Allocation contributions. Linster [ Linster, 1993b ] takes a very knowledge-engineering oriented point of view, looking at systems to find out how they support the knowledge engineer in his/her tasks. <p> We render these conclusions to illustrate the potential that an agreed-upon system of dimensions and an agreed-upon assessment method have. Right now, the conclusions are only of interest in the framework used in <ref> [ Linster, 1993b ] </ref> to evaluate the Office-Allocation contributions. Linster [ Linster, 1993b ] takes a very knowledge-engineering oriented point of view, looking at systems to find out how they support the knowledge engineer in his/her tasks.
Reference: [ Linster, 1994 ] <author> Linster, M. </author> <year> 1994. </year> <title> Special Issue on Sisyphus: Models of Problem Solving. </title> <editor> M. Linster (Ed.) </editor> <volume> 40 (2). </volume>
Reference-contexts: For example, the office-assignment problem states that smokers and non-smokers should not share offices. This statement can be abstracted into rules, constraints, action classes, or schemas <ref> [ Linster, 1994 ] </ref> . At the same time, the Sisyphus problems are small enough for easy documentation, thus allowing many research groups to participate in the experiments. <p> We focus our discussion on the Sisyphus office assignment problem, because 1) it is the most manageable in size, 2) it is the one that has been implemented by most groups to date, and 3) it has already produced some comparative studies (see <ref> [ Linster, 1994 ] </ref> for a description of the problem and various alternative solutions). Finally, we propose some questions for discussion at the workshop that could provide further insight in solutions to Sisyphus problems. <p> Many different approaches were used to solve the Sisyphus tasks, including configuration design, situated classification, constraint satisfaction, and genetic algorithms <ref> [ Linster, 1994 ] </ref> . <p> The Sisyphus office assignment problem statement <ref> [ Linster, 1994 ] </ref> asks for the design of a running system that assigns members of an imaginary research group to their offices.
Reference: [ Marcus & McDermott, 1989 ] <author> Marcus, S., and McDermott, J. </author> <year> 1989. </year> <title> SALT: A knowledge acquisition language for propose-and-revise systems. </title> <booktitle> 39(1) </booktitle> <pages> 1-37. </pages>
Reference: [ Sandra Marcus, 1988 ] <author> Sandra Marcus, Jeffrey Stout, J. M. </author> <year> 1988. </year> <title> VT: An expert elevator designer that uses knowledge-based backtracking. </title> <type> 9(1). </type>
Reference: [ McDermott, 1988 ] <author> McDermott, J. </author> <year> 1988. </year> <title> Preliminary Steps Towards a Taxonomy of Problem-Solving Methods. </title> <editor> In S. Marcus ed., </editor> . <address> Boston: </address> <publisher> Kluwer Academic Publishers. </publisher>
Reference-contexts: They focussed on how different approaches model and represent problem-solving capabilities and the knowledge required to implement those capabilities. Besides looking at the use of terms like and , they focus on a unifying description of the problem-solving method. The definition by McDermott <ref> [ McDermott, 1988 ] </ref> (i.e., that a ) is extended to account for more complex 1 ARCHITECTURE ASSUMPTIONS PROBLEM APPLICATION search space 2 Previous Work they automate, and assumptions about the problem made by the designers. models of methods, such as they are found in KADS or Generic Tasks.
Reference: [ Newell, 1982 ] <author> Newell, A. </author> <year> 1982. </year> <title> The knowledge level. </title> <address> 18:87 - 127. </address>
Reference: [ Stefik , 1982 ] <author> Stefik, M.; Aikins, J.; Balzer, R.; Benoit, J.; Birnbaum, L.; Hayes-Roth, F.; and Sacerdoti, E. </author> <year> 1982. </year> <title> The organization of expert systems: A tutorial. </title> <type> 18(2). </type>
Reference: [ Wielinga , 1990 ] <editor> Wielinga, B.; Boose, J.; Gaines, B.; Schreiber, G.; and Someren, M. V., eds. </editor> <address> 1990. , Amsterdam: ECCAI. </address>
Reference-contexts: Frequently, one well-defined feature of the toy problem is all that is being addressed. However, in real-world problems, it is hard to define the features of a problem before starting to solve it. The Sisyphus effort | initiated at EKAW'90 in Amsterdam <ref> [ Wielinga , 1990 ] </ref> | invited research groups to provide their solutions to reasonably complex problems that bridge the gap between real-world tasks and toy problems.
Reference: [ Yost, 1993 ] <author> Yost, G. R. </author> <year> 1993. </year> <month> Sisyphus </month> <year> 1993: </year> <title> Configuring elevator systems. </title> <type> Technical report, </type> <institution> Workplace Integration Technologies Group, Digital Equipment Corporation, </institution> <address> 111 Locke Drive (LM02/K11), Marlboro, MA 01752. </address> <note> Unpublished. 14 </note>
References-found: 16

