URL: http://ballade.cs.ucla.edu:8080/~cong/papers/integration92_scgr.ps.Z
Refering-URL: http://ballade.cs.ucla.edu/~cong/publications.html
Root-URL: http://www.cs.ucla.edu
Title: A New Algorithm for Standard Cell Global Routing  
Author: Jason Cong Bryan Preas 
Keyword: Global routing, standard cell design, spanning forests.  
Address: Los Angeles Los Angeles, CA 90024  3333 Coyote Hill Road, Palo Alto, CA 94304  
Affiliation: Department of Computer Science University of California at  Xerox Palo Alto Research Center  
Abstract: In this paper, we present a new algorithm for standard cell global routing. The algorithm considers all of the interconnection nets simultaneously; this produces superior results since information about all of the nets is available throughout the global routing process. We formulate the global routing problem as one of finding the optimal spanning forest on a graph that contains all of the interconnection information. The result of an important theorems allow us to prune many non-optimal connections before the global routing process begins. This approach successfully solves the net ordering and congestion prediction problems which other approaches suffer. The new algorithm was implemented as part of the DATools system at Xerox PARC. The benchmarks from the Physical Design Workshop are used as part of the comparison suite. The new algorithm achieves up to 11% area reduction compared to the previous global routing package used in the DATools system and obtains up to 17% reduction in the total channel density compared to the Timberwolf 4.2 package. 
Abstract-found: 1
Intro-found: 1
Reference: [AhHU74] <author> Aho, A., J. E. Hopcraft and J. D. Ullman, </author> <title> The Design and Analysis of Computer Algorithms. </title> <publisher> Addison-Wesley Publishing Co., </publisher> <address> Reading, MA, </address> <year> 1974. </year>
Reference-contexts: Additional feedthroughs can often reduce track density and thus reduce chip height with no expense in width. An additional feedthrough on other than the longest row will not increase the width of the chip. We generalize Kruskal's minimum spanning tree algorithm <ref> [AhHU74] </ref> to build a minimum spanning forest of the net connection graph. Feedthroughs are determined by the intersections of cell rows and the edges in the minimum weighted spanning forest. We weight each edge according to the length of the edge and the cost to insert feedthroughs for the edge. <p> However, there is no efficient algorithm available to determine an optimal net order. In order to avoid the net ordering problem, our algorithm builds a minimum spanning forest directly by considering all of the nets simultaneously based on a generalization of the Kruskal's minimum spanning tree algorithm <ref> [AhHU74] </ref>. It keeps adding the minimum weighted edge selected from the entire net connection graph into the spanning forest as long as no cycle is introduced. The edge insertion process ends when all the nets are connected. <p> that c V m c - c F m c = c V 0 c - c F 0 c - m It follows that k = n - m , i.e., m = n - k . ` In the implementation of Algorithm 1, we use the union-find operations <ref> [AhHU74] </ref>. Initially, we start with n sets. Each set contains a single vertex. When we include an edge (u , v ), we union the two sets that vertices u and v belong to, together with the set of new vertices introduced by adding feedthroughs.
Reference: [AoKu83] <author> Aoshima, K. and E. S. Kuh, </author> <title> ``Multi-channel optimization in gate-array LSI layout,'' </title> <booktitle> Proc. of IEEE International Symposium of Circuits and Systems (1983) pp. </booktitle> <pages> 1005-1008. </pages>
Reference-contexts: In <ref> [AoKu83] </ref> and [LiSS86], a similar problem was addressed for gate array designs, where the objective was to minimize the maximum channel density.
Reference: [BaMS88] <author> Barth, R., L. Monier, and B. Serlet, ``PatchWork: </author> <title> layout from schematic notations,'' </title> <booktitle> Proc. of 25th Design Automation Conference (1988) pp. </booktitle> <pages> 250-255. </pages>
Reference-contexts: Then it employs an iteration algorithm (simulated annealing with t = 0) to improve the assignment of net segments to channels. The previous standard cell global router [Pr86] used in the DATools system at Xerox PARC <ref> [BaMS88] </ref> generates the minimum number of feedthroughs. Feedthroughs are added only to connect the nets. Feedthroughs are then placed, along with the other cells, as part of a row-based placement improvement step.
Reference: [BlKL87] <author> Blair, J., S. Kapoor, E. Lloyd, and K. Supowit, </author> <title> ``Minimizing Channel Density in Standard Cell Layout,'' </title> <booktitle> Algorithmica (1987) 2, </booktitle> <pages> pp. 267-282. </pages>
Reference-contexts: In fact, the problem of determining net segments itself is already NP-hard even for a small number of cell rows (assuming that no feedthroughs need to be added). To be more precise, we state the following theorem based on a result in <ref> [BlKL87] </ref>: Theorem 1 Given a standard cell placement in which no feedthroughs are needed to complete the net connections, the problem of choosing net segments to minimize total channel density is NP-hard if there are five or more cell rows in the design. <p> Therefore, the TLNR problem is a special case of the general net segment selection problem that we are interested. However, the TLNR problem was shown to be NP-hard if there are five or more cell rows in the design <ref> [BlKL87] </ref>. Thus, the net segment selection problem is NP-hard if there are five or more cell rows in the design. ` In the remainder of this paper, we present an efficient heuristic algorithm for computing a standard cell global routing solution. 3.
Reference: [BrBa90] <author> Brouwer, R. and P. Banerjee, ``Phigure: </author> <title> A Parallel Hierarchical Global Router,'' </title> <booktitle> Proc. of 27th Design Automation Conference (1990), </booktitle> <pages> pp. 650-653. </pages>
Reference-contexts: Mowchenko and Ma [MoMa87] which generalized the left edge algorithm for channel routing to global routing, the work by Lee and Sechen [LeSe88] which generated Steiner trees from minimum spanning trees, a parallel router by Rose [Ro88] which enumerated all possible two-bend nets, a parallel router by Brouwer and Banerjee <ref> [BrBa90] </ref> which is based on Burstein and Pelavin's hierarchical approach, and a global router by Meixner and Lauther [MeLa90] based on network flow computation. In [AoKu83] and [LiSS86], a similar problem was addressed for gate array designs, where the objective was to minimize the maximum channel density.
Reference: [CoPr88] <author> Cong, J. and B. Preas, </author> <title> ``A New Algorithm for Standard Cell Global Routing,'' </title> <booktitle> Proc. of Int'l Conf. on Computer-Aided Design (1988), </booktitle> <pages> pp. 176-179. </pages>
Reference-contexts: The remainder of this paper describes the algorithm. Section 2 defines the problem formulation. The two-stage algorithm is discussed in Section 3. The comparative results are presented in Section 4. An extended abstract of this paper was presented in ICCAD'88 <ref> [CoPr88] </ref>. 2. Formulation of the Problem The goal of global routing is to determine the connection pattern for each net and achieve the best utilization of chip area.
Reference: [Ka86] <author> Kapoor, S., </author> <title> Topics in the Design and Analysis of Combinatorial Algorithms, </title> <type> Ph. D. Thesis, </type> <institution> Dept. of Computer Science, Univ. of Illinois, Urbana, IL, </institution> <year> 1986. </year>
Reference-contexts: Proof First, let us look at a simplified net segment selection problem. Suppose that each net has two logical pins. Moreover, the two logical pins in each net are in the cells of the same row. Such a net is called a two-pin linear net <ref> [Su83, Ka86] </ref>. Since each logical pin has two physical pins, there are two possible ways to connect each linear net, one way to use the channel below the net and the other to use the channel above the net (see Figure 4).
Reference: [LiSe88] <author> Lee, K. W. and C. Sechen, </author> <title> ``A New Global Router for Row-Based Layout,'' </title> <booktitle> Proc. of Int'l Conf on Computer-Aided Design (1988), </booktitle> <pages> pp. 180-183. </pages>
Reference: [LiSS86] <author> Lin, L., S. Sahni and E. Shragowitz, </author> <title> ``An enhanced heuristic for multi-channel optimization in gate-array layout,'' </title> <booktitle> Proc. of Int'l Conf on Computer-Aided Design (1986), </booktitle> <pages> pp. 242-244. </pages>
Reference-contexts: In [AoKu83] and <ref> [LiSS86] </ref>, a similar problem was addressed for gate array designs, where the objective was to minimize the maximum channel density.
Reference: [MeLa90] <author> G. Meixner and U. Lauther, </author> <title> ``A New Global Router Based on a Flow Model and Linear Assignment,'' </title> <booktitle> Proc. of Int'l Conf on Computer-Aided Design (1990), </booktitle> <pages> pp. 44-47. </pages>
Reference-contexts: by Lee and Sechen [LeSe88] which generated Steiner trees from minimum spanning trees, a parallel router by Rose [Ro88] which enumerated all possible two-bend nets, a parallel router by Brouwer and Banerjee [BrBa90] which is based on Burstein and Pelavin's hierarchical approach, and a global router by Meixner and Lauther <ref> [MeLa90] </ref> based on network flow computation. In [AoKu83] and [LiSS86], a similar problem was addressed for gate array designs, where the objective was to minimize the maximum channel density.
Reference: [MoMa87] <author> Mowchenko, J. T. and C. S. R. Ma, </author> <title> ``A new global routing algorithm for standard cell ICs,'' </title> <booktitle> Proc. of IEEE International Symposium on Circuits and Systems (May, 1987) pp. </booktitle> <pages> 27-30. </pages>
Reference-contexts: Feedthroughs are added only to connect the nets. Feedthroughs are then placed, along with the other cells, as part of a row-based placement improvement step. More recent work on standard cell global routing includes the work by Mowchenko and Ma <ref> [MoMa87] </ref> which generalized the left edge algorithm for channel routing to global routing, the work by Lee and Sechen [LeSe88] which generated Steiner trees from minimum spanning trees, a parallel router by Rose [Ro88] which enumerated all possible two-bend nets, a parallel router by Brouwer and Banerjee [BrBa90] which is based <p> However, little is known about what is a good net order. (In <ref> [MoMa87] </ref>, they avoided net ordering problems by carrying out the routing on a channel by channel basis. But still, it is difficult to choose a good channel order.) 1 (2) These global routers are not capable of predicting congested area in channels when they add net segments. <p> In some standard cell families, many cells have build-in feedthroughs. In this case, the feedthrough insertion problem is eliminated or simplified. In [Su83] and <ref> [MoMa87] </ref>, it was assumed that all the feedthroughs have been added and only the problem of determining the net segments was studied. In [SeSa86] and [Pr86], simple methods were used to determine feedthrough locations for completing the connections. Their algorithms concentrated on the problem of determining the net segments.
Reference: [Pr86] <author> Preas, B., </author> <title> ``The Standard Cell Package,'' </title> <note> Xerox PARC internal document, </note> <year> 1986. </year>
Reference-contexts: It first connects each net by a minimum spanning tree based on wire length. Then it employs an iteration algorithm (simulated annealing with t = 0) to improve the assignment of net segments to channels. The previous standard cell global router <ref> [Pr86] </ref> used in the DATools system at Xerox PARC [BaMS88] generates the minimum number of feedthroughs. Feedthroughs are added only to connect the nets. Feedthroughs are then placed, along with the other cells, as part of a row-based placement improvement step. <p> In some standard cell families, many cells have build-in feedthroughs. In this case, the feedthrough insertion problem is eliminated or simplified. In [Su83] and [MoMa87], it was assumed that all the feedthroughs have been added and only the problem of determining the net segments was studied. In [SeSa86] and <ref> [Pr86] </ref>, simple methods were used to determine feedthrough locations for completing the connections. Their algorithms concentrated on the problem of determining the net segments. In our global router, we also use a rather straightforward method to compute the feedthroughs first. Then, we focus on the optimal selection of net segments.
Reference: [Pr87] <author> Preas, B., </author> <title> ``Benchmarks for cell-based layout systems,'' </title> <booktitle> Proc. of 24th Design -18- Automation Conference (1987) pp. </booktitle> <pages> 319-320. </pages>
Reference-contexts: This paper studies the global routing problem in standard cell designs. The global router in the Highland system [Ro84] was used as the benchmark for standard cell global routing at the Physical Design Workshop on Placement and Floorplanning <ref> [Pr87] </ref>. It builds a minimum spanning tree for each net. The cost for each net edge is a function of channel density, feedthrough availability and wire length. An subsequent optimization step tries to improve the solution. Supowit [Su83] gives an odd-even heuristic algorithm for standard cell global routing. <p> The counters and adders are the circuits synthesized by the DATools system when no performance requirements are imposed. Both types of circuits are simple, ripple-carry designs. Primary 1 and Primary 2 are the benchmarks from the Physical Design Workshop <ref> [Pr87] </ref>. -14- J 4 J 2 J 7 J 3 [ 5, 8 ] [ 1, 4 ] 4/0 3/04/03/03/0 2/0 3/0 3/0 3/0 4/0 4/0 3/0 2/0 The labels at each node X specify X_density /X_delete , respectively.
Reference: [PrSh85] <author> Preparata, F. P. and M. I. Shamos, </author> <title> Computational Geometry. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1985. </year>
Reference: [ReND77] <author> Reingold, E. M., J. Nievergelt and N. Deo, </author> <title> Combinatorial Algorithms: Theory and Practice. </title> <publisher> Prentice-Hall Inc., </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1977. </year>
Reference-contexts: Algorithm 2 Determine the Net Segments (Stage 2 of Global Routing) In our implementation, we use the graph biconnectivity algorithm in <ref> [ReND77] </ref> to identify all the edges which are in some cycles. An edge is in some cycle if and only if it belongs to a biconnected component with no less than 3 vertices.
Reference: [Ro84] <author> Roberts, K. A., </author> <title> ``Automatic layout in the Highland system,'' </title> <booktitle> Proc. of Int'l Conf. on Computer-Aided Design (1984), </booktitle> <pages> pp. 224-226. </pages>
Reference-contexts: Then, each channel is routed individually by a channel router which assigns specific layers and tracks for wires to implement the connection -2- patterns determined by global routing. This paper studies the global routing problem in standard cell designs. The global router in the Highland system <ref> [Ro84] </ref> was used as the benchmark for standard cell global routing at the Physical Design Workshop on Placement and Floorplanning [Pr87]. It builds a minimum spanning tree for each net. The cost for each net edge is a function of channel density, feedthrough availability and wire length. <p> The spanning tree for each net gets an equal chance to grow. Information about all nets is available throughout the process. It is necessary to show that this algorithm will converge since we keep adding new vertices (induced by feedthroughs) to the net connection graph. In <ref> [Ro84] </ref>, a limit is set on the total number of vertices allowed for each net.
Reference: [Ro88] <author> Rose, J., ``LocusRoute: </author> <title> A Parallel Global Router for Standard cells,'' </title> <booktitle> Proc. of 25th Design Automationn Conf. </booktitle> <year> (1988), </year> <pages> pp. 189-195. </pages>
Reference-contexts: More recent work on standard cell global routing includes the work by Mowchenko and Ma [MoMa87] which generalized the left edge algorithm for channel routing to global routing, the work by Lee and Sechen [LeSe88] which generated Steiner trees from minimum spanning trees, a parallel router by Rose <ref> [Ro88] </ref> which enumerated all possible two-bend nets, a parallel router by Brouwer and Banerjee [BrBa90] which is based on Burstein and Pelavin's hierarchical approach, and a global router by Meixner and Lauther [MeLa90] based on network flow computation.
Reference: [SeSa86] <author> Sechen, C. and A. Sangiovanni-Vincentelli, ``Timberwolf3.2: </author> <title> a new standard cell placement and global routing package,'' </title> <booktitle> Proc. of 23rd Design Automation Conference (1986) pp. </booktitle> <pages> 432-439. </pages>
Reference-contexts: It produces a solution within a factor of 1.5 of the optimal solution (in terms of total channel density). However, Supowit's result applies only to problems in which all the nets are two-pin linear nets. Another global router developed for standard cell designs is part of the Timberwolf package <ref> [SeSa86] </ref>. It first connects each net by a minimum spanning tree based on wire length. Then it employs an iteration algorithm (simulated annealing with t = 0) to improve the assignment of net segments to channels. <p> In some standard cell families, many cells have build-in feedthroughs. In this case, the feedthrough insertion problem is eliminated or simplified. In [Su83] and [MoMa87], it was assumed that all the feedthroughs have been added and only the problem of determining the net segments was studied. In <ref> [SeSa86] </ref> and [Pr86], simple methods were used to determine feedthrough locations for completing the connections. Their algorithms concentrated on the problem of determining the net segments. In our global router, we also use a rather straightforward method to compute the feedthroughs first. <p> 223 1120 190 23.2% 17.4% iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii P2 29 4621 474 3761 449 22.9% 5.6% iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiic c c c c c c c c c c c c c c c c c c c c c c c c Table 3 Comparisons with the global routing algorithm in Timberwolf 4.2 <ref> [SeSa86] </ref> on Primary 1 and Primary 2 benchmarks from the Physical Design Workshop. 5. Remarks and Conclusions In this paper, we present a new algorithm for standard cell global routing.
Reference: [Su83] <author> Supowit, K. J., </author> <title> ``Reducing channel density in standard cell layout,'' </title> <booktitle> Proc. of 20th Design Automation Conference (1983). </booktitle>
Reference-contexts: It builds a minimum spanning tree for each net. The cost for each net edge is a function of channel density, feedthrough availability and wire length. An subsequent optimization step tries to improve the solution. Supowit <ref> [Su83] </ref> gives an odd-even heuristic algorithm for standard cell global routing. It produces a solution within a factor of 1.5 of the optimal solution (in terms of total channel density). However, Supowit's result applies only to problems in which all the nets are two-pin linear nets. <p> In some standard cell families, many cells have build-in feedthroughs. In this case, the feedthrough insertion problem is eliminated or simplified. In <ref> [Su83] </ref> and [MoMa87], it was assumed that all the feedthroughs have been added and only the problem of determining the net segments was studied. In [SeSa86] and [Pr86], simple methods were used to determine feedthrough locations for completing the connections. <p> Proof First, let us look at a simplified net segment selection problem. Suppose that each net has two logical pins. Moreover, the two logical pins in each net are in the cells of the same row. Such a net is called a two-pin linear net <ref> [Su83, Ka86] </ref>. Since each logical pin has two physical pins, there are two possible ways to connect each linear net, one way to use the channel below the net and the other to use the channel above the net (see Figure 4).
References-found: 19

