URL: http://vlsicad.cs.ucla.edu/~abk/papers/conference/c63.ps
Refering-URL: http://vlsicad.cs.ucla.edu/~abk/publications.html
Root-URL: http://www.cs.ucla.edu
Phone: 27 41 27 27(32) bm1 50 48(53) primary1 47 53 47 47(54) test04 52 49(52) test03 59 62(66) test02 90 95(96) test06 76 94(93) struct 33 40 41 33(34) test05 79 104(109) 19ks 105 106(110) primary2 143 146 139 142(158) s9234 41 74 41 43(45) biomed 83 135 84 102(83) s13207 75 91 66 74(70) industry2 220 193 211 177(204) industry3 267 241 243(286) s35932 62 41 57(55) avqsmall 224 144(145) s38417 49 81 69(77) avqlarge 139 145(144)  16 16 24 14 bm1 20 12 primary1 19 18 16 12 test04 49 21 test03 51 23 test02 64 26 test06 75 32 struct 42 35 80 27 test05 97 46 19ks 87 39 primary2 139 137 224 53 s9234 139 490 672 58 biomed 250 711 1440 95  867 1367 4320 245 industry3 761 4000 299 s35932 2627 10160 266 avqsmall 4099 328  avqlarge 4135 417  
Title: Test Cuts Case PROP Paraboli GFM GMetis(bal) "A General Framework for Vertex Orderings, with Applications
Author: C. J. Alpert and A. B. Kahng, C. J. Alpert and A. B. Kahng, K. D. Boese, A. B. Kahng, and S. Muddu, T. Bui, C. Heigham, C. Jones, and T. Leighton, 
Keyword: Test CPU Case PROP Paraboli GFM GMetis  
Address: s38417 2042 11280 281  
Date: s13207 177 2060 1920 102  
Note: balu  REFERENCES [1]  IEEE Trans. on VLSI 4(2), 1996, pp. 240-246. [2]  Journal, 19(1-2), 1995, pp. 1-81. [3]  Research Letters, 16(20), 1994, pp. 101-13. [4]  Proc. ACM/IEEE DAC, 1989, pp. 775-778.  balu  industry2  
Abstract: Table 3. Cut comparisons of GMetis with PROP, Paraboli, and GFM allowing 10% deviation from bisection. Exact bisection results for GMetis are given in parentheses. and 55% of the total number of modules. Table 4 quotes the CPU times in seconds for PROP, Paraboli, and GFM on a Sun Sparc 5, a DEC 3000 Model 500 AXP, and a Sun Sparc 10 respectively. We modified GMetis to handle varying size constraints but found that GMetis with r = 0:1 was sometimes outperformed by GMetis with r = 0 (exact bisection). Hence, in Table 3, we present results for GMetis with r = 0:1 and r = 0 (given in parentheses). We report runtimes for GMetis for r = 0. These experiments used s = log 2 n (jV j = n) solutions and 12 generations. Observe that GMetis cuts are competitive with the other methods, especially for several larger benchmarks. The big win for GMetis is its short run-time, e.g., generating a single solution for avqlarge takes 417=(12 log 2 25178) = 2:5 seconds. In conclusion, we have integrated the Metis multilevel partitioning package of [13] into a genetic algorithm. We show that (i) Metis outperforms previous FM-based approaches, (ii) GMetis improves upon Metis for large benchmarks, and (iii) GMetis is competitive with previous methods while using less CPU. We have recently implemented our own hypergraph multilevel algorithm and integrated it into a new cell placement tool. [5] J. Cong and M. Smith, "A Parallel Bottom-up Clustering Algorithm with Applications to Circuit Partitioning in VLSI Design" Proc. ACM/IEEE DAC, 1993, pp. 755-760. [6] S. Dutt and W. Deng, "A Probability-Based Approach to VLSI Circuit Partitioning", Proc. ACM/IEEE DAC, 1996, pp. 100-105. [7] S. Dutt and W. Deng, "VLSI Circuit Partitioning by Cluster-Removal Using Iterative Improvement Techniques", Technical Report, Department of Electrical Engineering, University of Minnesota, Nov. 1995. [8] C. M. Fiduccia and R. M. Mattheyses, "A Linear Time Heuristic for Improving Network Partitions", Proc. ACM/IEEE DAC, 1982, pp. 175-181. [9] L. W. Hagen, D. J.-H. Huang, and A. B. Kahng, "On Implementation Choices for Iterative Improvement Partitioning Algorithms", Proc. European Design Automation Conf., 1995, pp. 144-149. [10] L. W. Hagen and A. B. Kahng, "Combining Problem Reduction and Adaptive Multi-Start: A New Technique for Superior Iterative Partitioning", to appear in IEEE Trans. on CAD. [11] S. Hauck and G. Borriello, "An Evaluation of Biparti-tioning Techniques", Proc. Chapel Hill Conf. on Adv. Research in VLSI, 1995. [12] B. Hendrickson and R. Leland, "A Multilevel Algorithm for Partitioning Graphs", Technical Report SAND93-1301, Sandia National Laboratories, 1993. [13] G. Karypis and V. Kumar, "Unstructured Graph Partitioning and Sparse Matrix Ordering", Technical Report, CS Dept., Univ. of Minnesota, 1995. [14] B. W. Kernighan and S. Lin, "An Efficient Heuristic Procedure for Partitioning Graphs", Bell Systems Tech. J., 49(2), 1970, pp. 291-307. [15] B. Krishnamurthy, "An Improved Min-Cut Algorithm for Partitioning VLSI Networks", IEEE Trans. Computers, 33(5), 1984, pp. 438-446. [16] L.-T. Liu, M.-T. Kuo, S.-C. Huang, and C.-K. Cheng, "A Gradient Method on the Initial Partition of Fiduccia-Mattheyses Algorithm", Proc. IEEE Intl. Conf. Computer-Aided Design, 1995, pp. 229-234. [17] B. M. Riess, K. Doll, and F. M. Johannes, "Partitioning Very Large Circuits Using Analytical Placement Techniques", Proc. ACM/IEEE DAC, 1994, pp. 646-651. [18] W. Sun and C. Sechen, "Efficient and Effective Placements for Very Large Circuits" Proc. IEEE Intl. Conf. on Computer-Aided Design, 1993, pp. 170-177. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. J. Alpert and A. B. Kahng, </author> <title> "A General Framework for Vertex Orderings, with Applications to Netlist Clustering", </title> <journal> IEEE Trans. on VLSI 4(2), </journal> <year> 1996, </year> <pages> pp. 240-246. </pages>
Reference: [2] <author> C. J. Alpert and A. B. Kahng, </author> <title> "Recent Directions in Netlist Partitioning: A Survey", Integration, </title> <journal> the VLSI Journal, </journal> <pages> 19(1-2), </pages> <year> 1995, </year> <pages> pp. 1-81. </pages>
Reference: [3] <author> K. D. Boese, A. B. Kahng, and S. Muddu, </author> <title> "A New Adaptive Multi-Start Technique for Combinatorial Global Optimizations", </title> <journal> Operations Research Letters, </journal> <volume> 16(20), </volume> <year> 1994, </year> <pages> pp. 101-13. </pages>

Reference: [5] <author> J. Cong and M. Smith, </author> <title> "A Parallel Bottom-up Clustering Algorithm with Applications to Circuit Partitioning in VLSI Design" Proc. </title> <journal> ACM/IEEE DAC, </journal> <year> 1993, </year> <pages> pp. 755-760. </pages>
Reference: [6] <author> S. Dutt and W. Deng, </author> <title> "A Probability-Based Approach to VLSI Circuit Partitioning", </title> <booktitle> Proc. ACM/IEEE DAC, </booktitle> <year> 1996, </year> <pages> pp. 100-105. </pages>
Reference: [7] <author> S. Dutt and W. Deng, </author> <title> "VLSI Circuit Partitioning by Cluster-Removal Using Iterative Improvement Techniques", </title> <type> Technical Report, </type> <institution> Department of Electrical Engineering, University of Minnesota, </institution> <month> Nov. </month> <year> 1995. </year>
Reference: [8] <author> C. M. Fiduccia and R. M. Mattheyses, </author> <title> "A Linear Time Heuristic for Improving Network Partitions", </title> <booktitle> Proc. ACM/IEEE DAC, </booktitle> <year> 1982, </year> <pages> pp. 175-181. </pages>
Reference: [9] <author> L. W. Hagen, D. J.-H. Huang, and A. B. Kahng, </author> <title> "On Implementation Choices for Iterative Improvement Partitioning Algorithms", </title> <booktitle> Proc. European Design Automation Conf., </booktitle> <year> 1995, </year> <pages> pp. 144-149. </pages>
Reference: [10] <author> L. W. Hagen and A. B. Kahng, </author> <title> "Combining Problem Reduction and Adaptive Multi-Start: A New Technique for Superior Iterative Partitioning", </title> <note> to appear in IEEE Trans. on CAD. </note>
Reference: [11] <author> S. Hauck and G. Borriello, </author> <title> "An Evaluation of Biparti-tioning Techniques", </title> <booktitle> Proc. Chapel Hill Conf. on Adv. Research in VLSI, </booktitle> <year> 1995. </year>
Reference: [12] <author> B. Hendrickson and R. Leland, </author> <title> "A Multilevel Algorithm for Partitioning Graphs", </title> <type> Technical Report SAND93-1301, </type> <institution> Sandia National Laboratories, </institution> <year> 1993. </year>
Reference: [13] <author> G. Karypis and V. Kumar, </author> <title> "Unstructured Graph Partitioning and Sparse Matrix Ordering", </title> <type> Technical Report, </type> <institution> CS Dept., Univ. of Minnesota, </institution> <year> 1995. </year>
Reference: [14] <author> B. W. Kernighan and S. Lin, </author> <title> "An Efficient Heuristic Procedure for Partitioning Graphs", </title> <journal> Bell Systems Tech. J., </journal> <volume> 49(2), </volume> <year> 1970, </year> <pages> pp. 291-307. </pages>
Reference: [15] <author> B. Krishnamurthy, </author> <title> "An Improved Min-Cut Algorithm for Partitioning VLSI Networks", </title> <journal> IEEE Trans. Computers, </journal> <volume> 33(5), </volume> <year> 1984, </year> <pages> pp. 438-446. </pages>
Reference: [16] <author> L.-T. Liu, M.-T. Kuo, S.-C. Huang, and C.-K. Cheng, </author> <title> "A Gradient Method on the Initial Partition of Fiduccia-Mattheyses Algorithm", </title> <booktitle> Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <year> 1995, </year> <pages> pp. 229-234. </pages>
Reference: [17] <author> B. M. Riess, K. Doll, and F. M. Johannes, </author> <title> "Partitioning Very Large Circuits Using Analytical Placement Techniques", </title> <booktitle> Proc. ACM/IEEE DAC, </booktitle> <year> 1994, </year> <pages> pp. 646-651. </pages>


References-found: 16

