URL: ftp://ftp.cse.ucsc.edu/pub/hsnlab/Infocom97-2way.ps.Z
Refering-URL: http://www.cse.ucsc.edu/research/hsnlab/projects/cong-control.html
Root-URL: http://www.cse.ucsc.edu
Email: flampros, varmag@cse.ucsc.edu  kkrama@research.att.com  
Title: Two-Way TCP Traffic over ATM: Effects and Analysis  
Author: Lampros Kalampoukas and Anujan Varma K. K. Ramakrishnan 
Address: Santa Cruz, CA, 96064  Murray Hill, NJ 07974  
Affiliation: Computer Engineering Department University of California  AT&T Research  
Abstract: We examine the performance of bidirectional TCP/IP connections over Asynchronous Transfer Mode (ATM) networks using the Available Bit Rate (ABR) service. The problem of "ack-compression" re-appears, although the queues are primarily at the end-systems. We further the understanding of the problem by quantitatively analyzing the periodic bursty behavior of the source IP queue. We are able to predict the peak values for the queue and arrive at a simple robust predictor for the degraded throughput, applicable for relatively general situations. The degradation in throughput due to bidirectional traffic can be significant. For example, even in the simple case of symmetrical connections with adequate window sizes, the throughput of each connection is only 66.67% of that under one-way traffic. We validate our analysis using simulation, where the ATM network uses the Explicit Rate option. We show that the analysis predicts the behavior of the queue and the throughput degradation. We observe the need to separate the flow of acknowledgments and data for the bidirectional TCP connection and for inter-leaving their processing at the end-systems to overcome the problem of ack compression. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> V. Jacobson, </author> <title> "Congestion avoidance and control," </title> <booktitle> in Proceedings of ACM SIGCOMM'88, </booktitle> <pages> pp. 314-329, </pages> <year> 1988. </year>
Reference-contexts: 1 Introduction The Transmission Control Protocol (TCP) has become the most widely used transport-layer protocol today, due largely to the explosive growth of the TCP/IP Internet in recent years. An important component of TCP is the collection of algorithms used to perform congestion control and recovery <ref> [1, 2] </ref>. These algorithms give rise to a variety of interesting dynamics, some of which have been studied extensively [3, 4, 5, 6]. In this paper, our interest is in analyzing the dynamics of TCP connections in an Asynchronous Transfer Mode (ATM) network in the presence of two-way traffic.
Reference: [2] <author> V. Jacobson, </author> <title> "Modified TCP Congestion Avoidance Algorithm." message to end2end-interest mailing list, </title> <month> April </month> <year> 1990. </year>
Reference-contexts: 1 Introduction The Transmission Control Protocol (TCP) has become the most widely used transport-layer protocol today, due largely to the explosive growth of the TCP/IP Internet in recent years. An important component of TCP is the collection of algorithms used to perform congestion control and recovery <ref> [1, 2] </ref>. These algorithms give rise to a variety of interesting dynamics, some of which have been studied extensively [3, 4, 5, 6]. In this paper, our interest is in analyzing the dynamics of TCP connections in an Asynchronous Transfer Mode (ATM) network in the presence of two-way traffic.
Reference: [3] <author> S. Floyd and V. Jacobson, </author> <title> "On Traffic Phase Effects in Packet-Switched Gateways," Internetworking: </title> <journal> Research and Experience, </journal> <volume> vol. 3, no. 3, </volume> <pages> pp. 115-156, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: An important component of TCP is the collection of algorithms used to perform congestion control and recovery [1, 2]. These algorithms give rise to a variety of interesting dynamics, some of which have been studied extensively <ref> [3, 4, 5, 6] </ref>. In this paper, our interest is in analyzing the dynamics of TCP connections in an Asynchronous Transfer Mode (ATM) network in the presence of two-way traffic.
Reference: [4] <author> J. C. Mogul, </author> <title> "Observing TCP dynamics in real networks," </title> <booktitle> in Proceedings of ACM SIGCOMM'92, </booktitle> <pages> pp. 305-317, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: An important component of TCP is the collection of algorithms used to perform congestion control and recovery [1, 2]. These algorithms give rise to a variety of interesting dynamics, some of which have been studied extensively <ref> [3, 4, 5, 6] </ref>. In this paper, our interest is in analyzing the dynamics of TCP connections in an Asynchronous Transfer Mode (ATM) network in the presence of two-way traffic.
Reference: [5] <author> L. Zhang and D. D. Clark, </author> <title> "Oscillating Behavior of Network Traffic: A Case Study Simulation," </title> <journal> Intenetwork-ing: Research and Experience, </journal> <volume> vol. 1, no. 2, </volume> <pages> pp. 101-112, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: An important component of TCP is the collection of algorithms used to perform congestion control and recovery [1, 2]. These algorithms give rise to a variety of interesting dynamics, some of which have been studied extensively <ref> [3, 4, 5, 6] </ref>. In this paper, our interest is in analyzing the dynamics of TCP connections in an Asynchronous Transfer Mode (ATM) network in the presence of two-way traffic.
Reference: [6] <author> L. Zhang, S. Shenker, and D. D. Clark, </author> <title> "Observations on the Dynamics of a Congestion Control Algorithm: The Effects of Two-Way Traffic," </title> <booktitle> in Proceedings of ACM SIGCOMM'91, </booktitle> <pages> pp. 133-147, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: An important component of TCP is the collection of algorithms used to perform congestion control and recovery [1, 2]. These algorithms give rise to a variety of interesting dynamics, some of which have been studied extensively <ref> [3, 4, 5, 6] </ref>. In this paper, our interest is in analyzing the dynamics of TCP connections in an Asynchronous Transfer Mode (ATM) network in the presence of two-way traffic. <p> These packets and acknowledgements may share a common buffer in the end systems as well as network switches/routers. This sharing has been shown to result in an effect called ack compression, where acks of a connection arrive at the source bunched together <ref> [6, 7] </ref>. The result of ack-compression is a marked unfairness in the throughput received with competing connections, and reduced overall throughput compared to what could be expected without this effect [7]. Ack compression may occur either at the end system or in a switch/router.
Reference: [7] <author> R. Wilder, K. K. Ramakrishnan, and A. Mankin, </author> <title> "Dynamics of Congestion Control and Avoidance of Two-Way Traffic in an OSI Testbed," </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 21, no. 2, </volume> <pages> pp. 43-58, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: These packets and acknowledgements may share a common buffer in the end systems as well as network switches/routers. This sharing has been shown to result in an effect called ack compression, where acks of a connection arrive at the source bunched together <ref> [6, 7] </ref>. The result of ack-compression is a marked unfairness in the throughput received with competing connections, and reduced overall throughput compared to what could be expected without this effect [7]. Ack compression may occur either at the end system or in a switch/router. <p> The result of ack-compression is a marked unfairness in the throughput received with competing connections, and reduced overall throughput compared to what could be expected without this effect <ref> [7] </ref>. Ack compression may occur either at the end system or in a switch/router. In either case, the smooth flow of acknowledgements to the source is disturbed, potentially resulting in reduction of throughput for the TCP connections involved.
Reference: [8] <author> D. E. Comer and J. C. Lin, </author> <title> "TCP Buffering and Performance over an ATM Network," Internetworking: </title> <journal> Research and Experience, </journal> <volume> vol. 6, </volume> <pages> pp. 1-13, </pages> <year> 1995. </year>
Reference-contexts: Although our analysis is focussed on TCP over ABR, the results apply equally well to TCP operating over other networks providing a steady rate, predictable delay, and in-order delivery. Several earlier studies have been reported on the behavior of TCP in ATM networks <ref> [8, 9, 10] </ref>, but none of them considers the effects of two-way traffic on TCP behavior. The use of ABR service with the explicit-rate option can facilitate a smooth flow of TCP traffic in the network, mitigating the effects due to interaction of traffic flows in the switches.
Reference: [9] <author> S. Floyd and A. Romanow, </author> <title> "Dynamics of TCP traffic over ATM networks," </title> <booktitle> in Proceedings of ACM SIG-COMM'94, </booktitle> <pages> pp. 79-88, </pages> <month> September </month> <year> 1994. </year>
Reference-contexts: Although our analysis is focussed on TCP over ABR, the results apply equally well to TCP operating over other networks providing a steady rate, predictable delay, and in-order delivery. Several earlier studies have been reported on the behavior of TCP in ATM networks <ref> [8, 9, 10] </ref>, but none of them considers the effects of two-way traffic on TCP behavior. The use of ABR service with the explicit-rate option can facilitate a smooth flow of TCP traffic in the network, mitigating the effects due to interaction of traffic flows in the switches.
Reference: [10] <author> L. Kalampoukas and A. Varma, </author> <title> "Performance of TCP over Multi-Hop ATM Networks: A Comparative Study of ATM Layer Congestion Control Schemes," </title> <booktitle> in Proceedings of ICC'95, </booktitle> <pages> pp. 1472-1477, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: Although our analysis is focussed on TCP over ABR, the results apply equally well to TCP operating over other networks providing a steady rate, predictable delay, and in-order delivery. Several earlier studies have been reported on the behavior of TCP in ATM networks <ref> [8, 9, 10] </ref>, but none of them considers the effects of two-way traffic on TCP behavior. The use of ABR service with the explicit-rate option can facilitate a smooth flow of TCP traffic in the network, mitigating the effects due to interaction of traffic flows in the switches.
Reference: [11] <author> L. Kalampoukas, A. Varma, and K. K. Ramakrishnan, </author> <title> "Two-Way TCP Traffic over ATM: Effects and Analysis," </title> <type> Tech. Rep. </type> <institution> UCSC-CRL-96-23, Univ. of California, Santa Cruz, </institution> <year> 1996. </year>
Reference-contexts: In addition, we also ignore the effect of TCP processing time in the end systems. The case of asymmetric link rates, as well as the effect of TCP processing time, are considered in <ref> [11] </ref>. 2.1 End-System and Network Models The basic network configuration we consider has of two nodes i and j communicating over a rate-controlled network providing in-order delivery, such as the Available Bit-Rate (ABR) service offered by an ATM network (Figure 1). <p> The queueing delays in network switches are taken into account in the simulation results in an expanded version of this paper <ref> [11] </ref>. The data segments transmitted by the TCP connection in one direction shares a common outgoing ATM virtual channel with the acks transmitted by the connection in the other direction. <p> Due to space constraints we present simulation results for only one network configuration. Simulation results for more general network configurations, as well as a discussion of the effect of non-zero TCP processing time, can be found in <ref> [11] </ref>. SWITCH-1 SWITCH-2 1L 1R 8usecs8msecs 0.8usecs TCP connection in each direction. The simulations were performed using the OPNET simulation tool. The links in the network are full-duplex with a capacity of 155 Mbits/second each, unless otherwise specified. The switches are nonblocking, output-buffered crossbars. <p> For example, with symmetric bandwidths in each direction and window sizes large enough to fill the round-trip pipe, the throughput of each connection is only 66.67% of that under one-way traffic. The analysis in this paper is extended to the more general asymmetric case in <ref> [11] </ref>, where the transmission rates of the connections in opposite directions are different. This is likely to be a common case even with non-ATM networks, such as cable access or satellite links where the bandwidth in one direction can be large compared to that in the opposite direction.
Reference: [12] <author> L. Kalampoukas, A. Varma, and K. K. Ramakrish-nan, </author> <title> "Dynamics of an Explicit Rate Allocation Algorithm for ATM Networks," </title> <booktitle> in Proceedings of International IEEE-IFIP Conference on Broadband Communications, </booktitle> <address> Montreal, Canada, </address> <pages> pp. 111-122, </pages> <month> April </month> <year> 1996. </year>
Reference-contexts: Furthermore, in the analysis of Section 3, we assume that the network provides a constant-delay path between the end nodes. Such an assumption is realistic in the ATM ABR environment when the switches employ explicit rate allocation, since the queue sizes in the switches can be maintained small <ref> [12] </ref>. The queueing delays in network switches are taken into account in the simulation results in an expanded version of this paper [11]. <p> There is one queue per output port for ABR traffic and its scheduling policy is FIFO, with each output queue being shared by all the virtual channels (VCs) sharing the outgoing link. The switches support the explicit rate allocation algorithm of Kalampoukas, et al. <ref> [12] </ref>. Each of the nodes implements the ABR source policy defined by ATM Forum [14]. At the source, we implemented models of ATM Adaptation Layer Type 5 (AAL 5), IP, and TCP. The AAL performs segmentation and re-assembly between IP packets and ATM cells. <p> For example, with a one-way delay of 5 milliseconds, window size of 128 Kbytes, and transmission rates of 155 Mbits/second and 30 Mbits/second in the two directions, the high-speed connection is able to achieve only 20% of its throughput under one-way traffic. In an earlier paper <ref> [12] </ref> we examined the performance of TCP connections having very different round-trip times (RTT) in an ATM network. The maintenance of a current bandwidth allocation per virtual channel (VC) at the ATM switches was shown to achieve fairness in throughput superior to that in a datagram network.
Reference: [13] <author> W. R. Stevens and G. R. </author> <title> Wright, </title> <journal> TCP/IP Illustrated, </journal> <volume> vol. 2, </volume> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1995. </year>
Reference-contexts: Therefore, to avoid packet losses at the source node, we assume that the IP queue has a size equal to the maximum window size of the sending TCP. The interaction between TCP and IP described above is consistent with the 4.4 BSD-Lite Unix Release <ref> [13] </ref>. 2.2 The Onset of Ack Compression We will now illustrate with an example how the window-growth process during the TCP slow-start phase leads to ack compression in a two-way configuration.
Reference: [14] <author> S. S. Sathaye, </author> <title> Traffic Management Specification, Version 4.0, ATM-Forum/95-0013R10, ATM Forum, Traffic Management Working Group, </title> <month> April </month> <year> 1996. </year>
Reference-contexts: The switches support the explicit rate allocation algorithm of Kalampoukas, et al. [12]. Each of the nodes implements the ABR source policy defined by ATM Forum <ref> [14] </ref>. At the source, we implemented models of ATM Adaptation Layer Type 5 (AAL 5), IP, and TCP. The AAL performs segmentation and re-assembly between IP packets and ATM cells. Each IP packet is extended by eight bytes to accommodate the AAL5 trailer.
References-found: 14

