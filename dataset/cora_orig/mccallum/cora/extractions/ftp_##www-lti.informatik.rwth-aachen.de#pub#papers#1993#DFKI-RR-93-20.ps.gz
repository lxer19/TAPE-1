URL: ftp://www-lti.informatik.rwth-aachen.de/pub/papers/1993/DFKI-RR-93-20.ps.gz
Refering-URL: 
Root-URL: 
Email: e-mail: hlast namei@dfki.uni-sb.de  
Title: Embedding Defaults into Terminological Knowledge Representation Formalisms  
Author: Franz Baader and Bernhard Hollunder 
Address: Stuhlsatzenhausweg 3, 6600 Saarbrucken 11, Germany  
Affiliation: German Research Center for AI (DFKI)  
Abstract: We consider the problem of integrating Reiter's default logic into terminological representation systems. It turns out that such an integration is less straightforward than we expected, considering the fact that the terminological language is a decidable sublanguage of first-order logic. Semantically, one has the unpleasant effect that the consequences of a terminological default theory may be rather unintuitive, and may even vary with the syntactic structure of equivalent concept expressions. This is due to the unsatisfactory treatment of open defaults via Skolemization in Reiter's semantics. On the algorithmic side, we show that this treatment may lead to an undecidable default consequence relation, even though our base language is decidable, and we have only finitely many (open) defaults. Because of these problems, we then consider a restricted semantics for open defaults in our terminological default theories: default rules are only applied to individuals that are explicitly present in the knowledge base. In this semantics it is possible to compute all extensions of a finite terminological default theory, which means that this type of default reasoning is decidable. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. Baader and P. Hanschke. </author> <title> A Scheme for Integrating Concrete Domains into Concept Languages. </title> <note> Research Report RR-91-10, DFKI Kaisers-lautern, </note> <year> 1991. </year>
Reference-contexts: In the following we shall describe a more efficient method of finding these minimal (maximal) sets. The method is an extension of the tableaux-based consistency algorithms for ABoxes described in <ref> [1, 10] </ref>. The idea of employing tableaux-based methods for such purposes was already used in [18, 28], but these papers restricted themselves to propositional logic, which is a much easier case. <p> The following facts make clear why the rules of Figure 2 provide us with a decision procedure for consistency of ABoxes of ALC (see <ref> [10, 1] </ref> for a proof). Proposition 6.1 1. If A 1 is obtained from A 0 by application of the conjunction, exists-restriction, or value-restriction rule then A 0 is consistent iff A 1 is con sistent. 2. <p> As for the unlabelled consistency algorithm, there cannot be an infinite chain of rule applications. This can, for example, be shown by a straightforward adaptation to the labelled case of the termination ordering used in <ref> [1] </ref>. Thus the labelled consistency algorithm also terminates with a finite set of complete ABoxes, i.e., labelled ABoxes to which no rules apply. The labels occurring in these ABoxes can be used to describe which of the original facts in B are responsible for the obvious contradictions.
Reference: [2] <author> F. Baader and P. Hanschke. </author> <title> A scheme for integrating concrete domains into concept languages. </title> <booktitle> In Proceedings of the 12th International Joint Conference on Artificial Intelligence, </booktitle> <address> Sydney, Australia, </address> <year> 1991. </year>
Reference-contexts: If the answer is yes we say that a is an instance of C with respect to A (A j= C (a)). Algorithms which solve this inference problem have, for example, been described in <ref> [10, 2] </ref>. 2.2 Reiter's default logic Reiter [25] deals with the problem of how to formalize nonmonotonic reasoning by introducing nonstandard, nonmonotonic inference rules, which he calls default rules.
Reference: [3] <author> F. Baader and B. </author> <title> Hollunder. How to prefer more specific defaults in terminological default logic. </title> <booktitle> Research Report RR-92-58, DFKI Saarbrucken, 1992. Also to appear in Proceedings of the 13th International Joint Conference on Artificial Intelligence, </booktitle> <address> Chambery, France, </address> <year> 1993. </year>
Reference-contexts: Instead, they are used to define a preference relation on models, which is then treated with a modified preferential approach. According to Reiter's semantics the specificity of prerequisites of rules has no influence on the order in which defaults rules are supposed to fire. In <ref> [3] </ref> we describe a modification of terminological default logic in which more specific defaults are preferred. 31 Acknowledgements We should like to thank Bernhard Nebel and Peter Patel-Schneider for helpful comments. This work has been supported by the German Ministry for Research and Technology (BMFT) under research contract ITW 8903 0.
Reference: [4] <author> F. Baader and K. Schlechta. </author> <title> A semantics for open normal defaults via a modified preferential approach. </title> <note> Research Report RR-93-13, DFKI Saarbrucken, </note> <year> 1993. </year>
Reference-contexts: As an alternative to the pragmatic solution described in the present paper, <ref> [4] </ref> proposes a new semantics for open defaults, in which defaults are also applied to implicit individuals. To make this possible without encountering the problems pointed out in Section 3, open defaults are not viewed as schemata for certain instantiated defaults.
Reference: [5] <author> R. J. Brachman. </author> <title> `I lied about the trees' or, defaults and definitions in knowledge representation. </title> <journal> The AI Magazine, </journal> <volume> 6(3) </volume> <pages> 80-93, </pages> <year> 1985. </year>
Reference-contexts: If one wants to use terminological systems for this kind of commonsense reasoning, one needs a formalism that can handle such default assumptions, but does not destroy the definitional character of concept descriptions|because otherwise the advantage of automatic concept classification, etc., would be lost (see <ref> [5] </ref>).
Reference: [6] <author> R. J. Brachman, D. L. McGuinness, P. F. Patel-Schneider, L. A. Resnick, and A. Borgida. </author> <title> Living with CLASSIC: When and how to use a KL-ONE-like language. </title> <editor> In J. Sowa, editor, </editor> <booktitle> Principles of Semantic Networks, </booktitle> <pages> pages 401-456. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, Calif., </address> <year> 1991. </year>
Reference-contexts: Several existing terminological systems, such as back [20], classic <ref> [6] </ref>, k-rep [16], loom [19], or sb-one [14], have been or will be extended to provide the user with some kind of default reasoning facilities.
Reference: [7] <author> R. J. Brachman and J. G. Schmolze. </author> <title> An overview of the KL-ONE knowledge representation system. </title> <journal> Cognitive Science, </journal> <volume> 9(2) </volume> <pages> 171-216, </pages> <year> 1985. </year>
Reference-contexts: We shall see that this not only applies for algorithmic, but also for semantic considerations. We shall here consider the problem of integrating Reiter's default logic into a terminological representation formalism. This treatment of defaults in terminological systems has already been proposed by Brachman and Schmolze <ref> [7] </ref>, but to the best of our knowledge, this proposal was never followed up. Reiter's default rule approach seems to fit well into the philosophy of terminological systems because most of them already provide their users with a form of "monotonic" rules.
Reference: [8] <author> J. Doyle. </author> <title> A truth maintenance system. </title> <journal> Artificial Intelligence, </journal> <volume> 12 </volume> <pages> 231-272, </pages> <year> 1979. </year>
Reference-contexts: we shall describe below try to avoid considering all subsets, thus making the search for (the sets of generating defaults of) all extensions more efficient. 5.1 Junker and Konolige's method Junker and Konolige [12] translate a closed default theory (A; D) into a Truth Maintenance Network (TMN) a la Doyle <ref> [8] </ref>. The nodes of the TMN are the consequents C D , and the prerequisites and negated justifications L D of the defaults.
Reference: [9] <author> M. Garey and D. Johnson. </author> <title> Computers and Intractability A Guide to the Theory of NP-Completeness. </title> <publisher> Freeman, </publisher> <address> San Francisco, </address> <institution> Cal., </institution> <year> 1979. </year> <month> 32 </month>
Reference-contexts: In fact, if is in conjunctive normal form, this is just the well-known problem of finding minimal hitting sets <ref> [26, 9] </ref>. On the other hand, if is in disjunctive normal form, the minimal valuations can be found in polynomial time. However, transforming a given monotonic boolean formula into disjunctive normal form may cause an exponential blow-up.
Reference: [10] <author> B. </author> <title> Hollunder. Hybrid inferences in KL-ONE-based knowledge represen-tation systems. </title> <booktitle> In 14th German Workshop on Artificial Intelligence, volume 251 of Informatik-Fachberichte, </booktitle> <pages> pages 38-47, </pages> <address> Ebingerfeld, Ger-many, 1990. </address> <publisher> Springer. </publisher>
Reference-contexts: If the answer is yes we say that a is an instance of C with respect to A (A j= C (a)). Algorithms which solve this inference problem have, for example, been described in <ref> [10, 2] </ref>. 2.2 Reiter's default logic Reiter [25] deals with the problem of how to formalize nonmonotonic reasoning by introducing nonstandard, nonmonotonic inference rules, which he calls default rules. <p> In the following we shall describe a more efficient method of finding these minimal (maximal) sets. The method is an extension of the tableaux-based consistency algorithms for ABoxes described in <ref> [1, 10] </ref>. The idea of employing tableaux-based methods for such purposes was already used in [18, 28], but these papers restricted themselves to propositional logic, which is a much easier case. <p> The following facts make clear why the rules of Figure 2 provide us with a decision procedure for consistency of ABoxes of ALC (see <ref> [10, 1] </ref> for a proof). Proposition 6.1 1. If A 1 is obtained from A 0 by application of the conjunction, exists-restriction, or value-restriction rule then A 0 is consistent iff A 1 is con sistent. 2.
Reference: [11] <author> B. Hollunder and W. Nutt. </author> <title> Subsumption Algorithms for Concept Languages. </title> <institution> Research Report RR-90-04, DFKI Kaiserslautern, </institution> <year> 1990. </year>
Reference-contexts: In Section 6 we shall point out how the tableaux-based methods for assertional reasoning developed in our group ([10, 2]) can be modified to solve these problems. 2 The Representation Formalisms First we shall briefly review the terminological language ALCF <ref> [11] </ref> and Reiter's default logic. Then terminological default logic is defined as the specialization of default logic to ALCF . <p> New individuals are not subjected to the unique name assumption. In order to make the constraint that c; d have to be interpreted by the same individual explicit, the consistency algorithm for ALCF (see <ref> [11] </ref>) identifies these two individual names, e.g., by replacing every occurrence of c by d. In the labelled consistency algorithm, instead of making an actual replacement, we just introduce an equality fact c = d.
Reference: [12] <author> U. Junker and K. Konolige. </author> <title> Computing extensions of autoepistemic and default logics with a truth maintenance system. </title> <booktitle> In Proceedings of the 8th National Conference on Artificial Intelligence, </booktitle> <pages> pages 278-283, </pages> <address> Boston, Ma., </address> <year> 1990. </year>
Reference-contexts: A similar problem arises when considering the integration from the algorithmic point of view. In the abstract of their paper on how to compute extensions for default logic, Junker and Konolige <ref> [12] </ref> write that their method 4 is applicable if the default theory "consists of a finite number of defaults and premises and classical derivability for the base language is decidable." A related formulation can be found in the abstract of Schwind and Risch's paper on the same topic [28]. <p> The two methods which we shall describe below try to avoid considering all subsets, thus making the search for (the sets of generating defaults of) all extensions more efficient. 5.1 Junker and Konolige's method Junker and Konolige <ref> [12] </ref> translate a closed default theory (A; D) into a Truth Maintenance Network (TMN) a la Doyle [8]. The nodes of the TMN are the consequents C D , and the prerequisites and negated justifications L D of the defaults.
Reference: [13] <author> H. A. Kautz and B. Selman. </author> <title> Hard problems for simple defaults. </title> <booktitle> In Proceedings of the 1st International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 189-197, </pages> <address> Toronto, Ont., </address> <year> 1989. </year>
Reference-contexts: Reiter's default logic [25], Circumscription [17]) use full first-order predicate logic as their base language. In this general form, the formalisms are usually highly undecidable (see e.g. [25] Theorem 4.9). For this reason, work on decision procedures for decidable subcases was mostly restricted to propositional logic (see e.g. <ref> [13] </ref>), thus leaving the wide gap between propositional logic and full first-order logic almost unexplored. Since most terminological representation languages can be viewed as decidable subclasses of first-order logic|but are nevertheless much more expressive than propositional logic|they can serve as interesting test cases for nonmonotonic reasoning formalisms.
Reference: [14] <author> A. Kobsa. </author> <title> The SB-ONE knowledge representation workbench. </title> <booktitle> In Preprints of the Workshop on Formal Aspects of Semantic Networks, Two Habours, Calif., </booktitle> <year> 1989. </year>
Reference-contexts: Several existing terminological systems, such as back [20], classic [6], k-rep [16], loom [19], or sb-one <ref> [14] </ref>, have been or will be extended to provide the user with some kind of default reasoning facilities.
Reference: [15] <author> V. Lifschitz. </author> <title> On open defaults. </title> <booktitle> In Proceedings of the Symposium on Computational Logics, Brussel, </booktitle> <address> Belgium, </address> <year> 1990. </year>
Reference-contexts: Consequently, we have a in 9R:C as a default consequence of the first ABox, but not of the second one, even though these two ABoxes are equivalent. Lifschitz <ref> [15] </ref> proposes a treatment of open defaults which avoids Skolem-ization by working with classes of models instead of sets of formulae in the definition of default extensions. Obviously, working with models means that 11 logically equivalent formulae must yield the same results. <p> Obviously, working with models means that 11 logically equivalent formulae must yield the same results. This shows that Lifschitz's approach can overcome the problem pointed out in the previous two examples, even though it was not motivated by the problems connected with Skolemization (see footnote 1 in <ref> [15] </ref>: "Skolemization ... is irrelevant for this discussion.") Lifschitz's motivation was to make it possible to derive by default universally quantified formulae of the form 8x: C (x), which is not possible with Reiter's approach, but which is not necessary in our context (because the terminological inference service is only meant
Reference: [16] <author> E. Mays and B. Dionne. </author> <title> Making KR systems useful. </title> <booktitle> In Terminological Logic Users Workshop Proceedings, </booktitle> <pages> pages 11-12, </pages> <address> KIT-Report 95, TU Berlin, </address> <year> 1991. </year>
Reference-contexts: Several existing terminological systems, such as back [20], classic [6], k-rep <ref> [16] </ref>, loom [19], or sb-one [14], have been or will be extended to provide the user with some kind of default reasoning facilities.
Reference: [17] <author> J. McCarthy. </author> <title> Circumscription a form of non-monotonic reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 13 </volume> <pages> 27-39, </pages> <year> 1980. </year>
Reference-contexts: Our arguments for the importance of default extensions for terminological representation languages so far were given from the viewpoint of the terminological systems community. However, these investigations may also be of interest for research in nonmonotonic reasoning itself. Most nonmonotonic reasoning formalisms (e.g. Reiter's default logic [25], Circumscription <ref> [17] </ref>) use full first-order predicate logic as their base language. In this general form, the formalisms are usually highly undecidable (see e.g. [25] Theorem 4.9).
Reference: [18] <author> D. McDermott and J. Doyle. </author> <title> Non-monotonic logic I. </title> <journal> Artificial Intelligence, </journal> <volume> 13 </volume> <pages> 41-72, </pages> <year> 1980. </year>
Reference-contexts: In the following we shall describe a more efficient method of finding these minimal (maximal) sets. The method is an extension of the tableaux-based consistency algorithms for ABoxes described in [1, 10]. The idea of employing tableaux-based methods for such purposes was already used in <ref> [18, 28] </ref>, but these papers restricted themselves to propositional logic, which is a much easier case. In order to decide whether an ABox A is consistent, the tableaux-based consistency algorithm tries to generate a finite model of A.
Reference: [19] <author> R. McGregor. </author> <title> Statement of interest. </title> <editor> In K. von Luck, B. Nebel, and C. Peltason, editors, </editor> <booktitle> Statement of Interest for the 2nd International Workshop on Terminological Logics. Document D-91-13, DFKI Kaiser-slautern, </booktitle> <year> 1991. </year>
Reference-contexts: Several existing terminological systems, such as back [20], classic [6], k-rep [16], loom <ref> [19] </ref>, or sb-one [14], have been or will be extended to provide the user with some kind of default reasoning facilities.
Reference: [20] <author> BACK. </author> <title> System presentation. </title> <booktitle> In Terminological Logic Users Workshop Proceedings, </booktitle> <pages> page 186, </pages> <address> KIT-Report 95, TU Berlin, </address> <year> 1991. </year>
Reference-contexts: Several existing terminological systems, such as back <ref> [20] </ref>, classic [6], k-rep [16], loom [19], or sb-one [14], have been or will be extended to provide the user with some kind of default reasoning facilities.
Reference: [21] <author> B. Nebel and G. Smolka. </author> <title> Attributive description formalisms . . . and the rest of the world. </title> <editor> In C. Rollinger O. Herzog, editor, </editor> <booktitle> Text Understanding in LILOG, </booktitle> <publisher> LNAI 546. Springer-Verlag, </publisher> <address> Berlin, Germany, </address> <year> 1991. </year> <month> 33 </month>
Reference-contexts: In addition, this shows that the consequences of rule applications in the classic system would become undecidable, if classic applied rules not only to individuals explicitly present in the ABox, but also to implicit individuals. This result for classic rules has already been mentioned by Nebel and Smolka <ref> [21] </ref>, but without proof.
Reference: [22] <author> C. Peltason, K. v. Luck, and C. Kindermann (Org.). </author> <title> Terminological logic users workshop Proceedings. </title> <type> KIT Report 95, </type> <institution> TU Berlin, </institution> <year> 1991. </year>
Reference-contexts: arguments for the importance of reasoning with defaults, which can be found in the nonmonotonic reasoning literature, the need for embedding defaults into terminological representation formalisms is also substantiated by the fact that this is an important item on the wish list of users of terminological representation systems (see e.g. <ref> [22] </ref>). Several existing terminological systems, such as back [20], classic [6], k-rep [16], loom [19], or sb-one [14], have been or will be extended to provide the user with some kind of default reasoning facilities.
Reference: [23] <author> D. L. Poole. </author> <title> Variables in hypothesis. </title> <booktitle> In Proceedings of the 10th International Joint Conference on Artificial Intelligence, </booktitle> <address> Milano, Italy, </address> <year> 1987. </year>
Reference: [24] <author> E. L. Post. </author> <title> Recursive unsolvability of a problem of Thue. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 12 </volume> <pages> 1-10, </pages> <year> 1947. </year>
Reference-contexts: This is achieved by reducing the word problem for semigroups <ref> [24] </ref> to the consequence problem of a default theory. Let be a finite alphabet, and let R = f (u 1 ; v 1 ); . . . , (u n ; v n )g be a finite set of relations presenting a semigroup over .
Reference: [25] <author> R. Reiter. </author> <title> A logic for default reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 13(1-2):81-132, </volume> <year> 1980. </year>
Reference-contexts: Our arguments for the importance of default extensions for terminological representation languages so far were given from the viewpoint of the terminological systems community. However, these investigations may also be of interest for research in nonmonotonic reasoning itself. Most nonmonotonic reasoning formalisms (e.g. Reiter's default logic <ref> [25] </ref>, Circumscription [17]) use full first-order predicate logic as their base language. In this general form, the formalisms are usually highly undecidable (see e.g. [25] Theorem 4.9). <p> However, these investigations may also be of interest for research in nonmonotonic reasoning itself. Most nonmonotonic reasoning formalisms (e.g. Reiter's default logic <ref> [25] </ref>, Circumscription [17]) use full first-order predicate logic as their base language. In this general form, the formalisms are usually highly undecidable (see e.g. [25] Theorem 4.9). For this reason, work on decision procedures for decidable subcases was mostly restricted to propositional logic (see e.g. [13]), thus leaving the wide gap between propositional logic and full first-order logic almost unexplored. <p> If the answer is yes we say that a is an instance of C with respect to A (A j= C (a)). Algorithms which solve this inference problem have, for example, been described in [10, 2]. 2.2 Reiter's default logic Reiter <ref> [25] </ref> deals with the problem of how to formalize nonmonotonic reasoning by introducing nonstandard, nonmonotonic inference rules, which he calls default rules. <p> Formally, the consequences of a closed default theory are defined with reference to the notion of an extension, which is a set of deductively closed first-order formulae defined by a fixed point construction (see <ref> [25] </ref>, p.89). In general, 7 a default theory may have more than one extension, or even no extension. <p> In general, this consequence relation is not even recursively enumerable (see <ref> [25] </ref>, Theorem 4.9). Reiter also gives an alternative characterization of an extension, which we shall use, in a slightly modified way, as the definition of extension. Here and in the following, Th () stands for the deductive closure of a set of formulae . <p> Another easy consequence of Definition 2.2 is that (W; D) has an inconsistent extension iff W is inconsistent. Reiter defines extensions of arbitrary default theories (W; D), i.e., default theories with open defaults, as follows. First, the formulae of W and the consequents of the defaults are Skolemized (see <ref> [25] </ref>, Section 7). Second, a set D 0 of closed default rules is generated by taking all ground instances (over the initial signature together with the newly introduced Skolem functions) of the defaults of D.
Reference: [26] <author> R. Reiter. </author> <title> A theory of diagnosis from first principles. </title> <journal> Artificial Intelligence, </journal> <volume> 32 </volume> <pages> 57-95, </pages> <year> 1987. </year>
Reference-contexts: In fact, if is in conjunctive normal form, this is just the well-known problem of finding minimal hitting sets <ref> [26, 9] </ref>. On the other hand, if is in disjunctive normal form, the minimal valuations can be found in polynomial time. However, transforming a given monotonic boolean formula into disjunctive normal form may cause an exponential blow-up.
Reference: [27] <author> R. Rymon. </author> <title> Search through systematic set enumeration. </title> <booktitle> In Proceedings of the 3rd International Conference on Knowledge Representation and Reasoning, </booktitle> <address> Cambridge, Mass., </address> <year> 1992. </year>
Reference-contexts: On the other hand, if is in disjunctive normal form, the minimal valuations can be found in polynomial time. However, transforming a given monotonic boolean formula into disjunctive normal form may cause an exponential blow-up. To optimize the search for minimal valuations one can use the method described in <ref> [27] </ref>. The rules of the labelled consistency algorithm as described have the unpleasant property that deciding whether or not a rule is applicable is an NP-hard problem. In fact, the preconditions of the rules include an entailment test for monotonic boolean formulae, which is NP-hard.
Reference: [28] <author> C. Schwind and V. </author> <title> Risch. A tableau-based characterisation for default logic. </title> <booktitle> In Proceedings of the 1st European Conference on Symbolic and Quantitative Approaches for Uncertainty, </booktitle> <pages> pages 310-317, </pages> <address> Marseille, France, </address> <year> 1991. </year> <month> 34 </month>
Reference-contexts: and Konolige [12] write that their method 4 is applicable if the default theory "consists of a finite number of defaults and premises and classical derivability for the base language is decidable." A related formulation can be found in the abstract of Schwind and Risch's paper on the same topic <ref> [28] </ref>. Since our base language is decidable, and we certainly do not want to have infinitely many default rules, these methods seem to apply in our case. <p> In fact, one has to compute the corresponding minimal sets for all elements q in L D , even though this information may not contribute to the computation of an extension. 5.2 A method based on a theorem by Schwind and Risch Schwind and Risch <ref> [28] </ref> give a theorem which characterizes those subsets b D of D which are sets of generating defaults of an extension of a closed default theory (W; D). They use this characterization for computing extensions of 16 propositional default theories. <p> We define D 0 = ; and, for i 0, D i+1 = D i [ fd = fl Then D is called grounded in W iff D = S 1 This definition of groundedness differs from the one given in <ref> [28] </ref>, but it is easy to see that both formulations are equivalent. The advantage of our formulation is that it can directly be used as a procedure for deciding groundedness, if D is finite and the entailment problem in the base language is decidable. <p> In the following we shall describe a more efficient method of finding these minimal (maximal) sets. The method is an extension of the tableaux-based consistency algorithms for ABoxes described in [1, 10]. The idea of employing tableaux-based methods for such purposes was already used in <ref> [18, 28] </ref>, but these papers restricted themselves to propositional logic, which is a much easier case. In order to decide whether an ABox A is consistent, the tableaux-based consistency algorithm tries to generate a finite model of A.
References-found: 28

