URL: http://www.cs.cmu.edu/~madhu/papers/paper-1.ps
Refering-URL: http://www.cs.cmu.edu/~madhu/
Root-URL: 
Title: A CASE-BASED REASONING APPROACH FOR SYNTHESIS OF ELECTRO-MECHANICAL DEVICES USING BOND GRAPHS  
Author: T.N. Madhusudan Katia Sycara D. Navin-Chandra 
Keyword: Bond graphs, Conceptual design, Case-based reasoning  
Address: Pittsburgh, Pennsylvania, 15213, USA.  
Affiliation: Robotics Institute, Carnegie-Mellon University  
Date: 13 December 1995 17:31  
Abstract: Developing a computational representation for electromechanical devices that supports conceptual synthesis of complex devices from simpler subsystems both in terms of device behavior and form has been of serious interest. Proposed approaches in literature consider either the synthesis of device behavior or only of shape depending on the limitations of the device model and computational approaches used such as rule-based systems, constraint satisfaction, qualitative reasoning and graph grammars. This paper suggests an approach for electro-mechanical device synthesis based on Bond graph models of devices whereby problems of representational ambiguity and incompleteness are overcome. We describe the utility of bond graphs as a comprehensive device model that enables synthesis of physically feasible devices, integrates parametric information regarding form and materials and provides a convenient link to device validation using simulation. A Case-based design scheme for behavioral synthesis of electro-mechanical systems is described. We illustrate the process of elaboration whereby design cases are retrieved and composed into composite systems with an example. We also suggest how this approach may provide a convenient framework to integrate conceptual, parametric and configuration design in a consistent manner. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. M. Paynter. </author> <title> Analysis and Design of Engineering Systems. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1961. </year>
Reference-contexts: This is because physical reality is ultimately continuous and one needs to model this continuum to predict real-world device behavior. This paper outlines a comprehensive representation of electro-mechanical devices using bond graphs. Bond graphs <ref> [1, 2] </ref> view electro-mechanical device behavior from the standpoint of energy continuity and power balance. Systems and subsystems are classified both with respect to the number of energy ports through which energy is exchanged and also in terms of the particular internal power transformations involved.
Reference: [2] <author> D. Karnopp and R. Rosenberg. </author> <title> Analysis and Simulation of Multiport Systems. </title> <publisher> The M.I.T. Press, </publisher> <year> 1968. </year>
Reference-contexts: This is because physical reality is ultimately continuous and one needs to model this continuum to predict real-world device behavior. This paper outlines a comprehensive representation of electro-mechanical devices using bond graphs. Bond graphs <ref> [1, 2] </ref> view electro-mechanical device behavior from the standpoint of energy continuity and power balance. Systems and subsystems are classified both with respect to the number of energy ports through which energy is exchanged and also in terms of the particular internal power transformations involved. <p> The bond graph model provides a convenient scheme for capturing behavior for individual components and also the behavior of an overall system that is assembled from these components. First we describe the basic characteristics of bond graphs and then consider its implications for synthesis. The bond graph formalism <ref> [2, 13, 14] </ref> models devices in terms of the energy flow in the device. The formalism identifies three types of energy interactions among all physical devices. The energy behaviors of devices are energy storage, energy dissipation and energy transmission.
Reference: [3] <author> J. R. Rinderle Finger, S. </author> <title> A transformational approach to mechanical design using a bond graph grammer. </title> <booktitle> In Proceedings of the First ASME International Design Theory and Methodology Conference, </booktitle> <month> September </month> <year> 1989. </year>
Reference-contexts: Though bond graphs are well-known to the controls and analysis community, the utility of bond graphs as a good device model and representation for design has largely been unexplored except for <ref> [3, 4] </ref>. It is interesting to note that the use of a bond graph based scheme to develop a unified engineering database and its ability to support development of design tools is suggested in [5]. <p> Each combination of cases is consequently verified based on the relationships between ports. In this way, viable systems are selected. Our proposed approach to using bond graphs is in contrast to <ref> [3, 4] </ref> mentioned earlier. In [3], the representation uses the symbolic device definitions of bond graphs such as resistors, gyrators etc. as vocabulary elements of a behavioral grammar and transformation rules that combine these elements as a grammar sequence are defined. <p> Each combination of cases is consequently verified based on the relationships between ports. In this way, viable systems are selected. Our proposed approach to using bond graphs is in contrast to [3, 4] mentioned earlier. In <ref> [3] </ref>, the representation uses the symbolic device definitions of bond graphs such as resistors, gyrators etc. as vocabulary elements of a behavioral grammar and transformation rules that combine these elements as a grammar sequence are defined.
Reference: [4] <author> K. Ulrich and W. Seering. </author> <title> Computation and conceptual design. </title> <journal> Robotics and Computer-Integrated Manufacturing, </journal> 4(3/4):309-315, 1988. 
Reference-contexts: Though bond graphs are well-known to the controls and analysis community, the utility of bond graphs as a good device model and representation for design has largely been unexplored except for <ref> [3, 4] </ref>. It is interesting to note that the use of a bond graph based scheme to develop a unified engineering database and its ability to support development of design tools is suggested in [5]. <p> Each combination of cases is consequently verified based on the relationships between ports. In this way, viable systems are selected. Our proposed approach to using bond graphs is in contrast to <ref> [3, 4] </ref> mentioned earlier. In [3], the representation uses the symbolic device definitions of bond graphs such as resistors, gyrators etc. as vocabulary elements of a behavioral grammar and transformation rules that combine these elements as a grammar sequence are defined. <p> However, the representation does not distinguish between devices that may be represented by a single grammatic term such as all devices that function as transformers but with different input-output power transforming relations. In <ref> [4] </ref>, bond graph elements are viewed as analogous to primitives that provide computational functions such as integration, differentiation, summation etc.; given the differential equation of the device to be synthesized as a specification, an analog computer equivalent is generated.
Reference: [5] <author> R.C. Rosenberg. </author> <title> The bond graph as a unified data base for engineering system design. </title> <journal> ASME Journal of Engineering for Industry, </journal> <pages> pages 1333-1337, </pages> <month> November </month> <year> 1975. </year>
Reference-contexts: It is interesting to note that the use of a bond graph based scheme to develop a unified engineering database and its ability to support development of design tools is suggested in <ref> [5] </ref>. Further, we believe that a synthesis process that proceeds from behavioral synthesis to shape and form may provide a more fruitful approach in the effort to formalize the design process and building tools to support the same.
Reference: [6] <author> A. Goel. </author> <title> Integration of case-based reasoning and model-based reasoning for adaptive design problem solving. </title> <type> PhD thesis, </type> <institution> Dept. of Computer and Information Science, Ohio State University, </institution> <year> 1989. </year>
Reference-contexts: The rationale behind such a viewpoint is that constraints on behavior can be well-defined and formalized and the search of designs guided better in comparison to constraints on shape and geometry. We use the Case-based design <ref> [6, 7, 8] </ref> computational framework. Case-based design is a computational paradigm that aims at reusing previous designs archived in a repository with well-defined design principles to generate new designs given specifications. <p> There is no representation of dynamics nor other physical effects. In [20] a qualitative representation for mechanism motion is proposed. A predicate-logic formalism to model form dependence of mechanisms is proposed in [21], but is limited by its ability to deal with dynamic variations. In <ref> [6, 22] </ref>, devices are modelled in terms of the Structure-Behavior-Function framework. The representation assumes that there exists a well-defined directional, mechanistic explanation for all physical mechanisms. All the above mentioned approaches suffer from ambiguity, when multiple physical systems are combined in a single device.
Reference: [7] <author> D. Navin Chandra, Sycara, K. </author> <title> Index transformation techniques for facilitating creative use of multiple cases. </title> <booktitle> In Proceedings of the twelfth International Joint Conference on Artificial Intelligence, (IJCAI-91), </booktitle> <year> 1991. </year>
Reference-contexts: The rationale behind such a viewpoint is that constraints on behavior can be well-defined and formalized and the search of designs guided better in comparison to constraints on shape and geometry. We use the Case-based design <ref> [6, 7, 8] </ref> computational framework. Case-based design is a computational paradigm that aims at reusing previous designs archived in a repository with well-defined design principles to generate new designs given specifications.
Reference: [8] <author> S. Narasimhan, Navin Chandra D., </author> <title> K.P. Sycara. Behavioral synthesis in cadet, a case-based design tool. </title> <booktitle> In Proceedings of the Seventh Conference on Artificial Intelligence Applications, </booktitle> <address> Miami, Florida, </address> <month> Feb, </month> <year> 1991. </year> <note> IEEE. </note>
Reference-contexts: The rationale behind such a viewpoint is that constraints on behavior can be well-defined and formalized and the search of designs guided better in comparison to constraints on shape and geometry. We use the Case-based design <ref> [6, 7, 8] </ref> computational framework. Case-based design is a computational paradigm that aims at reusing previous designs archived in a repository with well-defined design principles to generate new designs given specifications.
Reference: [9] <author> G. Pahl and W. Beitz. </author> <title> Engineering Design. The Design Council, </title> <publisher> Springer-Verlag, </publisher> <address> London, </address> <year> 1984. </year>
Reference-contexts: a convenient indexing scheme to retrieve electromechanical devices in Section 4 and in Section 5 we provide some ideas to extend this model further and concluding remarks. 2 A SYSTEMIC FRAMEWORK FOR BEHAVIORAL SYNTHESIS OF ELECTROMECHANICAL DEVICES Electro-mechanical devices can be envisioned as a coordinated collection of interacting physical systems <ref> [9, 10, 11] </ref>. A system is assumed to be an entity separable from the environment of the system by means of a physical or conceptual boundary. Further, a system may be composed of interact ing parts. We model a device as a dynamic system S as shown in Figure 1.a.
Reference: [10] <author> V. Hubka. </author> <booktitle> Principles of Engineering Design. Butter-worth Scientific, </booktitle> <address> London, </address> <year> 1980. </year>
Reference-contexts: a convenient indexing scheme to retrieve electromechanical devices in Section 4 and in Section 5 we provide some ideas to extend this model further and concluding remarks. 2 A SYSTEMIC FRAMEWORK FOR BEHAVIORAL SYNTHESIS OF ELECTROMECHANICAL DEVICES Electro-mechanical devices can be envisioned as a coordinated collection of interacting physical systems <ref> [9, 10, 11] </ref>. A system is assumed to be an entity separable from the environment of the system by means of a physical or conceptual boundary. Further, a system may be composed of interact ing parts. We model a device as a dynamic system S as shown in Figure 1.a.
Reference: [11] <author> W. Gosling. </author> <title> The design of engineering systems. </title> <publisher> Wiley, </publisher> <year> 1962. </year>
Reference-contexts: a convenient indexing scheme to retrieve electromechanical devices in Section 4 and in Section 5 we provide some ideas to extend this model further and concluding remarks. 2 A SYSTEMIC FRAMEWORK FOR BEHAVIORAL SYNTHESIS OF ELECTROMECHANICAL DEVICES Electro-mechanical devices can be envisioned as a coordinated collection of interacting physical systems <ref> [9, 10, 11] </ref>. A system is assumed to be an entity separable from the environment of the system by means of a physical or conceptual boundary. Further, a system may be composed of interact ing parts. We model a device as a dynamic system S as shown in Figure 1.a.
Reference: [12] <author> Navin Chandra, D, K. Sycara and S. </author> <title> Narasimhan A transformational approach to case based synthesis. </title> <journal> AI EDAM, </journal> <volume> 5(1), </volume> <year> 1991. </year>
Reference-contexts: In case-based design, indices for retrieval of systems, subsystems and components from the repository of previous designs are generated based on the design specifications of device input and output (i.e U (t) and Y (t)); the retrieved systems are combined using domain specific laws and physical principles and validated <ref> [12] </ref>. Design alternatives thus generated are presented to the user for perusal. Detailed discussion of parametric and configurational synthesis procedures is beyond the scope of this paper.
Reference: [13] <author> D. Karnopp and R. Rosenberg. </author> <title> System Dynamics: A Unified Approach. </title> <publisher> John Wiley Sons, </publisher> <address> New York, </address> <year> 1975. </year>
Reference-contexts: The bond graph model provides a convenient scheme for capturing behavior for individual components and also the behavior of an overall system that is assembled from these components. First we describe the basic characteristics of bond graphs and then consider its implications for synthesis. The bond graph formalism <ref> [2, 13, 14] </ref> models devices in terms of the energy flow in the device. The formalism identifies three types of energy interactions among all physical devices. The energy behaviors of devices are energy storage, energy dissipation and energy transmission.
Reference: [14] <author> R. Rosenberg and Karnopp. D. </author> <title> Introduction to Physical System Dynamics. </title> <publisher> McGraw-Hill Book Co., </publisher> <year> 1983. </year>
Reference-contexts: The bond graph model provides a convenient scheme for capturing behavior for individual components and also the behavior of an overall system that is assembled from these components. First we describe the basic characteristics of bond graphs and then consider its implications for synthesis. The bond graph formalism <ref> [2, 13, 14] </ref> models devices in terms of the energy flow in the device. The formalism identifies three types of energy interactions among all physical devices. The energy behaviors of devices are energy storage, energy dissipation and energy transmission.
Reference: [15] <author> T.N.Madhusudan. </author> <title> A bond graph based approach to case-based synthesis. </title> <type> Technical Report CMU-RI-TR-95-29, </type> <institution> The Robotics Institute, Carnegie-Mellon University, </institution> <address> Pittsburgh, PA 15213, </address> <month> July </month> <year> 1995. </year>
Reference-contexts: The synthesis task can be formulated as a combinatorial search problem since subsystems and primitives can be composed in numerous ways to meet a behavioral specification. The graph-based systemic model provides a convenient computational framework where systems can be composed algorithmically <ref> [15] </ref>. The creative aspect in the behavioral synthesis task is generating only feasible candidates from the numerous that are possible. This selective generation process is largely guided by expertise gained in building previous designs and systems and has motivated our efforts to build a case-based design system. <p> If the design specifications provide values and ranges for the effort and flow variables at the input and output ports, parametric design can be performed by searching for cases with satisfactory combination of values. For more details on bridging the conceptual and parametric design phases, see <ref> [15] </ref>. 5.4 Linking configuration design As mentioned in Section 2, configuration design is of concern after the physical realizations of different components are obtained and it is necessary to assemble them into one single unit.
Reference: [16] <author> B. Williams. </author> <title> Invention from First Principles via Topologies of Interaction. </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <year> 1989. </year>
Reference-contexts: Devices have been primarily modelled as directional signal devices and the bilateral nature of power transfer in devices has been disregarded. Equations that model physical mechanisms have been represented as directed graphs with an apriori choice of directionality in <ref> [16, 17] </ref>. Further, these relations have been modelled in a qualitative manner in [17, 18]. Device models to represent only kinematics of linked mechanisms are presented in [19, 20, 21]. In [19], only linkage mechanisms are modelled in terms of configuration spaces.
Reference: [17] <editor> D.Navin-Chandra et al. Cadet: </editor> <title> A case-based synthesis tool for engineering design. </title> <journal> International Journal of Expert Systems, </journal> <volume> 4(2) </volume> <pages> 157-188, </pages> <year> 1992. </year>
Reference-contexts: Devices have been primarily modelled as directional signal devices and the bilateral nature of power transfer in devices has been disregarded. Equations that model physical mechanisms have been represented as directed graphs with an apriori choice of directionality in <ref> [16, 17] </ref>. Further, these relations have been modelled in a qualitative manner in [17, 18]. Device models to represent only kinematics of linked mechanisms are presented in [19, 20, 21]. In [19], only linkage mechanisms are modelled in terms of configuration spaces. <p> Equations that model physical mechanisms have been represented as directed graphs with an apriori choice of directionality in [16, 17]. Further, these relations have been modelled in a qualitative manner in <ref> [17, 18] </ref>. Device models to represent only kinematics of linked mechanisms are presented in [19, 20, 21]. In [19], only linkage mechanisms are modelled in terms of configuration spaces. The focus is only on kinematics i.e. the relationship between flow variables at the input and output ports of mechanisms.
Reference: [18] <author> J. DeKleer and Brown.J. </author> <title> A qualitative physics based on confluences. </title> <journal> Artificial Intelligence, </journal> <volume> 24 </volume> <pages> 7-83, </pages> <year> 1984. </year>
Reference-contexts: Equations that model physical mechanisms have been represented as directed graphs with an apriori choice of directionality in [16, 17]. Further, these relations have been modelled in a qualitative manner in <ref> [17, 18] </ref>. Device models to represent only kinematics of linked mechanisms are presented in [19, 20, 21]. In [19], only linkage mechanisms are modelled in terms of configuration spaces. The focus is only on kinematics i.e. the relationship between flow variables at the input and output ports of mechanisms.
Reference: [19] <author> S. Addanki Joskowicz, L. </author> <title> From kinematics to shape: An approach to innovative design. </title> <booktitle> In Proceedings of the seventh National Conference on Artificial Intelligence (AAAI88), </booktitle> <pages> pages 347-352, </pages> <year> 1988. </year>
Reference-contexts: Equations that model physical mechanisms have been represented as directed graphs with an apriori choice of directionality in [16, 17]. Further, these relations have been modelled in a qualitative manner in [17, 18]. Device models to represent only kinematics of linked mechanisms are presented in <ref> [19, 20, 21] </ref>. In [19], only linkage mechanisms are modelled in terms of configuration spaces. The focus is only on kinematics i.e. the relationship between flow variables at the input and output ports of mechanisms. There is no representation of dynamics nor other physical effects. <p> Equations that model physical mechanisms have been represented as directed graphs with an apriori choice of directionality in [16, 17]. Further, these relations have been modelled in a qualitative manner in [17, 18]. Device models to represent only kinematics of linked mechanisms are presented in [19, 20, 21]. In <ref> [19] </ref>, only linkage mechanisms are modelled in terms of configuration spaces. The focus is only on kinematics i.e. the relationship between flow variables at the input and output ports of mechanisms. There is no representation of dynamics nor other physical effects.
Reference: [20] <author> S. Kota. </author> <title> A qualitative matrix representation scheme for the conceptual design of mechanisms. </title> <booktitle> In Proc. of the ASME Design Automation Conference (21st Biannual ASME Mechanisms Conference), </booktitle> <year> 1990. </year>
Reference-contexts: Equations that model physical mechanisms have been represented as directed graphs with an apriori choice of directionality in [16, 17]. Further, these relations have been modelled in a qualitative manner in [17, 18]. Device models to represent only kinematics of linked mechanisms are presented in <ref> [19, 20, 21] </ref>. In [19], only linkage mechanisms are modelled in terms of configuration spaces. The focus is only on kinematics i.e. the relationship between flow variables at the input and output ports of mechanisms. There is no representation of dynamics nor other physical effects. <p> In [19], only linkage mechanisms are modelled in terms of configuration spaces. The focus is only on kinematics i.e. the relationship between flow variables at the input and output ports of mechanisms. There is no representation of dynamics nor other physical effects. In <ref> [20] </ref> a qualitative representation for mechanism motion is proposed. A predicate-logic formalism to model form dependence of mechanisms is proposed in [21], but is limited by its ability to deal with dynamic variations. In [6, 22], devices are modelled in terms of the Structure-Behavior-Function framework.
Reference: [21] <author> Srikanth M. Kannapan and Kurt M. Marshek. </author> <title> An algebraic and predicate logic approach to representation and reasoning in machine design. </title> <journal> Mechanisms and Machine Theory, </journal> <volume> 25(3) </volume> <pages> 335-353, </pages> <year> 1990. </year> <note> To be published.Locate journal issue and volume. </note>
Reference-contexts: Equations that model physical mechanisms have been represented as directed graphs with an apriori choice of directionality in [16, 17]. Further, these relations have been modelled in a qualitative manner in [17, 18]. Device models to represent only kinematics of linked mechanisms are presented in <ref> [19, 20, 21] </ref>. In [19], only linkage mechanisms are modelled in terms of configuration spaces. The focus is only on kinematics i.e. the relationship between flow variables at the input and output ports of mechanisms. There is no representation of dynamics nor other physical effects. <p> There is no representation of dynamics nor other physical effects. In [20] a qualitative representation for mechanism motion is proposed. A predicate-logic formalism to model form dependence of mechanisms is proposed in <ref> [21] </ref>, but is limited by its ability to deal with dynamic variations. In [6, 22], devices are modelled in terms of the Structure-Behavior-Function framework. The representation assumes that there exists a well-defined directional, mechanistic explanation for all physical mechanisms.
Reference: [22] <author> A. Goel and B. Chandrasekaran. </author> <title> Integrating model-based reasoning and case based reasoning for design problem solving. </title> <booktitle> In AAAI-88 Design Workshop, </booktitle> <address> St. Paul, MN., </address> <note> Expected in 1989. </note>
Reference-contexts: There is no representation of dynamics nor other physical effects. In [20] a qualitative representation for mechanism motion is proposed. A predicate-logic formalism to model form dependence of mechanisms is proposed in [21], but is limited by its ability to deal with dynamic variations. In <ref> [6, 22] </ref>, devices are modelled in terms of the Structure-Behavior-Function framework. The representation assumes that there exists a well-defined directional, mechanistic explanation for all physical mechanisms. All the above mentioned approaches suffer from ambiguity, when multiple physical systems are combined in a single device.
Reference: [23] <author> Vadim Shapiro and Herb Voelcker. </author> <title> On the role of geometry in mechanical design. </title> <booktitle> Research in Engineering Design, </booktitle> <pages> pages 69-73, </pages> <year> 1989. </year> <month> 12 </month>
Reference-contexts: However, there are limitations to this representation. It does not enable shape synthesis of components. A possible approach for synthesis of device geometry based on energy transfer between subsystems is suggested in <ref> [23] </ref>. The suggested approach starts with the principle of continuity of energy and the Poynting vector of energy flux and attempts to the solve the overall PDE with necessary boundary conditions so as to capture shape information.
References-found: 23

