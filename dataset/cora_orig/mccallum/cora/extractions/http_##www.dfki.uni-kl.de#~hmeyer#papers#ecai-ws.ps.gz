URL: http://www.dfki.uni-kl.de/~hmeyer/papers/ecai-ws.ps.gz
Refering-URL: http://www.dfki.uni-kl.de/~hmeyer/papers/
Root-URL: http://www.dfki.uni-kl.de/~hmeyer/papers/
Title: Partial Satisfaction of Constraint Hierarchies in Reactive and Interactive Configuration  
Author: Harald Meyer auf'm Hofe 
Address: Postfach 2080 D-67608 Kaiserslautern  
Affiliation: Deutsches Forschungsinstitut fur Kunstliche Intelligenz  
Date: Dec. 1996  
Note: ECAI-96 Workshop 27  This is a revised version of the contribution to the ECAI-96 Workshop 27.  
Abstract-found: 0
Intro-found: 1
Reference: [Abecker et al., 1996] <editor> A. Abecker, H. Meyer auf'm Hofe, J. P. Muller, and J. Wurtz, editors. </editor> <title> Notes on the DFKI-Workshop: Constraint-Based Problem Solving, Document D-96-02. </title> <institution> Deutsches Forschungszentrum fur kunstliche In-telligenz, </institution> <year> 1996. </year> <note> URL http://www.dfki.uni-kl.de /aabecker/WS-CO.html. </note>
Reference: [Baader et al., 1996] <editor> F. Baader, H.-J. Burckert, A. Gunter, and W. Nutt, editors. WRKP-96: </editor> <booktitle> Proceedings of the Workshop on Knowledge Representation and Configuration, number D-96-04 in DFKI Document, </booktitle> <month> August </month> <year> 1996. </year>
Reference: [Bacchus and van Run, 1995] <author> Fahiem Bacchus and Paul van Run. </author> <title> Dynamic variable ordering in CSPs. </title> <editor> In [Montanari and Rossi, </editor> <year> 1995], </year> <pages> pages 258-275, </pages> <year> 1995. </year>
Reference-contexts: Another field of constraint processing techniques are variable reordering heuristics. The mostly used variable reordering heuristics are minimal width (static) and minimum remaining values (dynamic) that is also known as first fail. The minimum remaining values (MRV) heuristic is especially useful if prospective constraint processing is done <ref> [Bacchus and van Run, 1995] </ref>, because it then does not demand additional constraint checks. When the tree-search algorithm determines which variable to label next, it chooses the one with the minimal number of values compatible with the previous assignments.
Reference: [Bistarelli et al., 1995] <author> Stefano Bistarelli, Ugo Montanari, and Francesca Rossi. </author> <title> Constraint solving over semirings. </title> <booktitle> In [IJCAI-95, </booktitle> <year> 1995], </year> <pages> pages 624-630, </pages> <year> 1995. </year>
Reference-contexts: Such weighted constraints are appropriate to relate the selection of each possible label of a variable with certain costs. Certain integrating views on soft constraints have been proposed <ref> [Schiex et al., 1995, Bistarelli et al., 1995] </ref> in order to achieve a better understanding of constraint processing techniques. Contrarily, this view aims at making the formalization of real world problems by CSPs easier.
Reference: [Borning et al., 1992] <author> Alan Borning, Bjorn Freeman-Benson, and Molly Wilson. </author> <title> Constraint hierarchies. </title> <journal> Lisp and Symbolic Computation, </journal> <volume> 5 </volume> <pages> 233-270, </pages> <year> 1992. </year>
Reference-contexts: Additionally, this procedure only improves the management of conflicts, but neglects the management of incomplete specifications. The integration of both procedures is necessary to cope with many real-world problems because both have their limitations. This article claims that processing of constraint hierarchies <ref> [Borning et al., 1992] </ref> in conjunction with other notions of soft constraints [Freuder and Wallace, 1992, Dubois et al., 1994] can be employed to integrate both approaches. In order to prove this claim, this paper starts describing a framework Harald Meyer auf'm Hofe: Partial Satisfaction of Constraint Hierarchies. . . <p> The paradigm of hierarchical logic programming (HCLP) <ref> [Borning et al., 1992] </ref> provides some useful ideas to introduce lexical combinations of preference orderings among sets of constraints. A hierarchical constraint satisfaction problem (HCSP) is defined to adopt this framework to the CSP context avoiding certain disadvantages of the HCLP scheme e.g. concerning the comparison of different hierarchies.
Reference: [Doyle, 1979] <author> Jon Doyle. </author> <title> A truth maintenance system. </title> <journal> Artificial Intelligence, </journal> <volume> 12(3) </volume> <pages> 231-272, </pages> <year> 1979. </year>
Reference-contexts: To support this process the system is able to compute the opportunities to resolve the current conflict and display them to the expert. Resolving conflicts is viewed as conflict directed backtracking as indicated in fig. 1. Consequently, JTMS-like <ref> [Doyle, 1979] </ref> inferences are often used to find the point in the search tree of previously explored decisions where to proceed at best. Harald Meyer auf'm Hofe: Partial Satisfaction of Constraint Hierarchies. . .
Reference: [Dubois et al., 1994] <author> Didier Dubois, Helene Fargier, and Henri Prade. </author> <title> Propagation and satisfaction of flexible constraints. </title> <editor> In R. Yager and L. A. Zadeh, editors, </editor> <title> Fuzzy Sets, </title> <booktitle> Neural Networks and Soft Computing, </booktitle> <pages> pages 166-187, </pages> <address> New York, 1994. </address> <publisher> Van Nostrand Reinhold. </publisher>
Reference-contexts: The integration of both procedures is necessary to cope with many real-world problems because both have their limitations. This article claims that processing of constraint hierarchies [Borning et al., 1992] in conjunction with other notions of soft constraints <ref> [Freuder and Wallace, 1992, Dubois et al., 1994] </ref> can be employed to integrate both approaches. In order to prove this claim, this paper starts describing a framework Harald Meyer auf'm Hofe: Partial Satisfaction of Constraint Hierarchies. . . <p> Such a preference ordering generally depends on some attributes of the constraints, e.g. a weight [Freuder and Wallace, 1992] or a priority <ref> [Schiex, 1992, Dubois et al., 1994] </ref>. As an example assume for each constraint c a weight !(c) is given. <p> ECAI-96 Workshop 27 4 1.: Expert specifications form the most important level comprising soft constraints, because an expert should be able to rule everything. Preferences may be given as a partial ordering among constraints O c . 2.: Prioritized or possibilistic constraints <ref> [Schiex, 1992, Dubois et al., 1994] </ref> may be appropriate to represent defaults. 3.: Cost optimization can be specified by weighted constraints O ! . <p> These methods are appropriate to trigger warnings on conflicting specifications and have often been used for this purpose. For prioritized constraints respectively fuzzy constraints another level of consistency has been proposed that can be established efficiently <ref> [Schiex, 1992, Dubois et al., 1994] </ref>. A prioritized constraint c is preferred due to a priority index p (c) 2 ]0; 1].
Reference: [Freuder and Wallace, 1992] <author> Eugene C. Freuder and Rick J. Wallace. </author> <title> Partial constraint satisfaction. </title> <journal> Artificial Intelligence, </journal> <volume> 58 </volume> <pages> 21-70, </pages> <year> 1992. </year>
Reference-contexts: The integration of both procedures is necessary to cope with many real-world problems because both have their limitations. This article claims that processing of constraint hierarchies [Borning et al., 1992] in conjunction with other notions of soft constraints <ref> [Freuder and Wallace, 1992, Dubois et al., 1994] </ref> can be employed to integrate both approaches. In order to prove this claim, this paper starts describing a framework Harald Meyer auf'm Hofe: Partial Satisfaction of Constraint Hierarchies. . . <p> Such a preference ordering generally depends on some attributes of the constraints, e.g. a weight <ref> [Freuder and Wallace, 1992] </ref> or a priority [Schiex, 1992, Dubois et al., 1994]. As an example assume for each constraint c a weight !(c) is given. <p> These methods concern on the one hand the processing of consistent compatibility levels and on the other hand some specific heuristics for dynamic variable reordering. Exhaustive search: Generally, adoptions of the branch&bound algorithms are used to search solutions of softly constrained problems exhaustively <ref> [Freuder and Wallace, 1992] </ref>. Variants of the forward checking and backmarking technique have been beneficially applied to increase efficiency.
Reference: [Hower and Ruttkay, 1996] <editor> Walter Hower and Zsofia Ruttkay, editors. </editor> <booktitle> Non-Standard Constraint Processing, Working Notes of the ECAI'96 Workshop W27, </booktitle> <address> Budapest, Hungary, </address> <year> 1996. </year>
Reference: [IJCAI-95, 1995] <editor> IJCAI-95. </editor> <booktitle> Proceedings, 14th International Joint Conference on Artificial Intelligence, </booktitle> <address> San Francisco, 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [Jampel et al., 1995] <editor> Michael Jampel, Eugene Freuder, and Michael Maher, editors. </editor> <booktitle> Workshop Notes CP95 Workshop on Over-Constrained Systems, </booktitle> <address> Cassis, France, </address> <year> 1995. </year>
Reference: [Mackworth, 1977] <author> Alan Mackworth. </author> <title> Consistency in networks of relations. </title> <journal> Artificial Intelligence, </journal> <volume> 8(1) </volume> <pages> 99-118, </pages> <year> 1977. </year>
Reference-contexts: Detection of Conflicting Specifications This section will point out the use of effective inferences on constraint hierarchies to improve interaction with an expert during the process of problem specification. 3.1 Applicable Inferences Several algorithms are known to establish a certain level of consistency between compulsory constraints and the variables' domains <ref> [Mackworth, 1977] </ref>. These methods are appropriate to trigger warnings on conflicting specifications and have often been used for this purpose. For prioritized constraints respectively fuzzy constraints another level of consistency has been proposed that can be established efficiently [Schiex, 1992, Dubois et al., 1994].
Reference: [Meyer auf'm Hofe, 1996a] <author> Harald Meyer auf'm Hofe. </author> <title> Representation of requirements through preference orderings of soft constraints. </title> <editor> In [Abecker et al., </editor> <year> 1996], </year> <month> January </month> <year> 1996. </year>
Reference-contexts: An efficient algorithm often referred to as the MAX-MIN algorithm is known to infer compatibility values [Snow and Freuder, 1990]. Unfortunately, prioritized constraints do not suffice to represent certain important aspects of configuration problems like cost measures or optional user requirement <ref> [Meyer auf'm Hofe, 1996a] </ref>. Preferences on constraint hierarchies have the nice property to be related to preferences in a special system of prioritized constraints. To illustrate this relation consider an arbitrary hierarchy H. <p> The compatibility level of a value can be treated as an optimistic estimation on the constraints that can not be avoided to violate assigning that value. Thus, arc-consistent compatibilities can be used in conjunction with forward checking results to assign probably good values first to their variable <ref> [Meyer auf'm Hofe, 1996a] </ref>. If the compatibility level of a value is smaller than the hierarchy levels of all constraints in the bound, this value can be pruned.
Reference: [Meyer auf'm Hofe, 1996b] <author> Harald Meyer auf'm Hofe. </author> <title> What is still to do in order to solve configuration problems in practice? In [Baader et al., </title> <booktitle> 1996], </booktitle> <pages> pages 25-32, </pages> <year> 1996. </year> <editor> Harald Meyer auf'm Hofe: </editor> <title> Partial Satisfaction of Constraint Hierarchies. </title> . . <booktitle> ECAI-96 Workshop 27 15 </booktitle>
Reference-contexts: However, the step from a given problem to the related formalization of the problem has still to be done. Our practical experience with real-world problems revealed, that there is usually a significant gap between the problem in the expert's mind and its formal specification <ref> [Meyer auf'm Hofe, 1996b] </ref>. When working with common systems this gap has to be bridged by the expert. But in complex domains or if the expertise of the expert is limited | as is usually the case | incomplete or conflicting specifications can not be avoided.
Reference: [Minton et al., 1992] <author> Steven Minton, Mark Johnston, Andrew Philips, and Philip Laird. </author> <title> Minimizing conflicts: a heuristic repair method for constraint satisfaction problem and scheduling problems. </title> <journal> Artificial Intelligence, </journal> <volume> 58 </volume> <pages> 161-205, </pages> <year> 1992. </year>
Reference-contexts: Heuristic search: Techniques of local search are especially useful to solve large problems, where static knowledge does not suffice to degrade search. For example an adopted version of the minimize conflicts method <ref> [Wallace and Freuder, 1995, Minton et al., 1992] </ref> computes a Pareto-optimal solution avoiding the complexity of tree search algorithms. Single assignments are changed until a labeling is found, that can not be improved further this way. This hill climbing algorithm is the easiest version of local search.
Reference: [Montanari and Rossi, 1995] <editor> Ugo Montanari and Francesca Rossi, editors. CP-95: </editor> <booktitle> Proceedings of the First International Conference on Principles and Practice of Constraint Programming, </booktitle> <address> LNCS-976. </address> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference: [Paulokat, 1995] <editor> Jurgen Paulokat. Entscheidungsorientierte Rechtfertigungsverwaltung zur Unterstutzung des Konfigu-rationsprozesses in IDAX. In [Richter and Maurer, </editor> <year> 1995], </year> <pages> pages 19-36, </pages> <year> 1995. </year>
Reference-contexts: Thus, i = 1p p can be considered as a compatibility with respect to the hierarchy H: A compatibility level. 3.2 Application Fig. 1 illustrates the organization of user interaction in common system for example based on the REDUX-model <ref> [Paulokat, 1995, Petrie et al., 1996] </ref>. The search space of possible configurations is presented diagrammatically by triangles. The bold lines represent the tree of previously explored decisions. Arc consistency with compulsory constraints is used to prune conflicting decisions from the list of possibilities of the expert.
Reference: [Petrie et al., 1996] <author> Charles Petrie, Heecheol Jeon, and Mark Cutkosky. </author> <title> Combining constraint propagation and backtracking for distributed engineering. </title> <editor> In [Hower and Ruttkay, </editor> <year> 1996], </year> <pages> pages 84-94, </pages> <year> 1996. </year>
Reference-contexts: Thus, i = 1p p can be considered as a compatibility with respect to the hierarchy H: A compatibility level. 3.2 Application Fig. 1 illustrates the organization of user interaction in common system for example based on the REDUX-model <ref> [Paulokat, 1995, Petrie et al., 1996] </ref>. The search space of possible configurations is presented diagrammatically by triangles. The bold lines represent the tree of previously explored decisions. Arc consistency with compulsory constraints is used to prune conflicting decisions from the list of possibilities of the expert.
Reference: [Richter and Maurer, 1995] <editor> Michael Richter and Frank Maurer, editors. </editor> <booktitle> Expertensysteme '95, volume 2 of Proceedings in Artificial Intelligence, </booktitle> <address> St. Augustin, Germany, 1995. </address> <publisher> infix Verlag. </publisher>
Reference: [Schiex et al., 1995] <author> Thomas Schiex, Helene Fargier, and Gerard Verfaillie. </author> <title> Valued constraint satisfaction problems: Hard and easy problems. </title> <booktitle> In [IJCAI-95, </booktitle> <year> 1995], </year> <pages> pages 631-637, </pages> <year> 1995. </year>
Reference-contexts: Such weighted constraints are appropriate to relate the selection of each possible label of a variable with certain costs. Certain integrating views on soft constraints have been proposed <ref> [Schiex et al., 1995, Bistarelli et al., 1995] </ref> in order to achieve a better understanding of constraint processing techniques. Contrarily, this view aims at making the formalization of real world problems by CSPs easier.
Reference: [Schiex, 1992] <author> Thomas Schiex. </author> <title> Possibilistic constraint satisfaction problems or: </title> <booktitle> How to handle soft constraints? In Proceedings of the Eighth Conference on Uncertainty in AI, </booktitle> <pages> pages 269-275, </pages> <address> Stanford (CA), USA, </address> <year> 1992. </year>
Reference-contexts: Such a preference ordering generally depends on some attributes of the constraints, e.g. a weight [Freuder and Wallace, 1992] or a priority <ref> [Schiex, 1992, Dubois et al., 1994] </ref>. As an example assume for each constraint c a weight !(c) is given. <p> ECAI-96 Workshop 27 4 1.: Expert specifications form the most important level comprising soft constraints, because an expert should be able to rule everything. Preferences may be given as a partial ordering among constraints O c . 2.: Prioritized or possibilistic constraints <ref> [Schiex, 1992, Dubois et al., 1994] </ref> may be appropriate to represent defaults. 3.: Cost optimization can be specified by weighted constraints O ! . <p> These methods are appropriate to trigger warnings on conflicting specifications and have often been used for this purpose. For prioritized constraints respectively fuzzy constraints another level of consistency has been proposed that can be established efficiently <ref> [Schiex, 1992, Dubois et al., 1994] </ref>. A prioritized constraint c is preferred due to a priority index p (c) 2 ]0; 1].
Reference: [Snow and Freuder, 1990] <author> Paul Snow and Eugene C. Freuder. </author> <title> Improved relaxation and search methods for approximate constraint satisfaction with a maximin criterion. </title> <booktitle> In Proc. of the 8 th biennal conf. of the canadian society for comput. studies of intelligence, </booktitle> <pages> pages 227-230, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: ECAI-96 Workshop 27 5 The priority of the most important constraint whose violation can not be avoided assigning that value. An efficient algorithm often referred to as the MAX-MIN algorithm is known to infer compatibility values <ref> [Snow and Freuder, 1990] </ref>. Unfortunately, prioritized constraints do not suffice to represent certain important aspects of configuration problems like cost measures or optional user requirement [Meyer auf'm Hofe, 1996a]. Preferences on constraint hierarchies have the nice property to be related to preferences in a special system of prioritized constraints.
Reference: [Wallace and Freuder, 1995] <author> Rick J. Wallace and Eugene C. Freuder. </author> <title> Heuristic methods for over-constrained constraint satisfaction problems. </title> <editor> In [Jampel et al., </editor> <year> 1995], </year> <pages> pages 97-101, </pages> <year> 1995. </year> <editor> Harald Meyer auf'm Hofe: </editor> <title> Partial Satisfaction of Constraint Hierarchies. </title> . . <booktitle> ECAI-96 Workshop 27 </booktitle>
Reference-contexts: Heuristic search: Techniques of local search are especially useful to solve large problems, where static knowledge does not suffice to degrade search. For example an adopted version of the minimize conflicts method <ref> [Wallace and Freuder, 1995, Minton et al., 1992] </ref> computes a Pareto-optimal solution avoiding the complexity of tree search algorithms. Single assignments are changed until a labeling is found, that can not be improved further this way. This hill climbing algorithm is the easiest version of local search.
References-found: 23

