URL: http://cs.uni-bonn.de/~marek/publications/STCbMC.ps.Z
Refering-URL: http://cs.uni-bonn.de/~marek/index-en.html
Root-URL: http://cs.uni-bonn.de
Title: Simulating Threshold Circuits by Majority Circuits  
Author: Mikael Goldmann Marek Karpinski and 
Keyword: Key words. threshold circuits, majority circuits, circuit complexity.  
Web: 68Q05, 68Q22, 68Q25.  
Note: AMS subject classification.  
Address: Stockholm  53117 Bonn  Berkeley, California  
Affiliation: Numerical Analysis and Computing Science Royal Institute of Technology  Department of Computer Science, University of Bonn  International Computer Science Institute  
Abstract: We prove that a single threshold gate with arbitrary weights can be simulated by an explicit polynomial-size depth 2 majority circuit. In general we show that a polynomial-size, depth-d threshold circuit can be simulated uniformly by a polynomial-size majority circuit of depth d + 1. Goldmann, Hastad, and Razborov showed in [10] that a non-uniform simulation exists. Our construction answers two open questions posed in [10]: we give an explicit construction whereas [10] uses a randomized existence argument, and we show that such a simulation is possible even if the depth d grows with the number of variables n (the simulation in [10] gives polynomial-size circuits only when d is constant). fl A preliminary version of this paper appeared in Proc. 25th ACM STOC (1993), pp. 551-560. y Email: migo@theory.lcs.mit.edu. This author's work was done in part while visiting the University of Bonn z Email: marek@cs.bonn.edu. Supported in part by Leibniz Center for Research in Computer Science, by the DFG Grant KA 673/4-1, and by the ESPRIT BR Grant 7097. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Allender. </author> <title> A note on the power of threshold circuts. </title> <booktitle> In Proc. 30th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 580-584, </pages> <year> 1989. </year>
Reference-contexts: Threshold circuits have been shown to be surprisingly powerful. It is implicit in work by Beame, Cook, and Hoover [4] that integer division can be carried out by polynomial-size threshold circuits of constant depth. Allender <ref> [1] </ref> (inspired by Toda [29]) shows that any function in AC 0 can be computed by depth 3 majority circuits of quasi-polynomial size. Yao [34] extends this to all of ACC 0 (see also [5]). There are some strong lower bounds for majority circuits of very small depth.
Reference: [2] <author> N. Alon and R. B. Boppana. </author> <title> The monotone circuit complexity of boolean functions. </title> <journal> Com-binatorica, </journal> <volume> 7 </volume> <pages> 1-22, </pages> <year> 1987. </year> <month> 17 </month>
Reference: [3] <author> N. Alon and J. Bruck. </author> <title> Explicit constructions of depth-2 majority circuits for comparison and addition. </title> <type> Technical Report RJ 8300 (75661), </type> <institution> IBM Research Division, </institution> <month> August </month> <year> 1991. </year> <note> To appear in SIAM J. Disc. Math. </note>
Reference-contexts: In [25] Siu and Bruck gave a non-constructive proof that polynomial-size, depth-d threshold circuits can be simulated by polynomial-size, depth-2d + 1 majority circuits. Alon and Bruck gave a uniform construction in <ref> [3] </ref> achieving this. Goldmann, Hastad, and Razborov showed in [10] that any function computed by a depth d, polynomial-size threshold circuit is computable by a depth d + 1, polynomial-size majority circuit (note that for d = 1; 2 this is optimal). <p> Most of the constructions follow from non-uniform versions in [27] and [26] (see also [22]). The uniform constructions for ADDITION,COMPARISON, and SORTING follow from <ref> [3] </ref>.
Reference: [4] <author> P. W. Beame, S. A. Cook, and H. J. </author> <title> Hoover. Log depth circuits for division and related problems. </title> <journal> SIAM J. Comp., </journal> <volume> 15 </volume> <pages> 994-1003, </pages> <year> 1986. </year>
Reference-contexts: This only leads to a polynomial increase in the number of wires. Hence, depth d polynomial-size majority circuits are equivalent to depth d polynomial-size, small weight threshold circuits. Threshold circuits have been shown to be surprisingly powerful. It is implicit in work by Beame, Cook, and Hoover <ref> [4] </ref> that integer division can be carried out by polynomial-size threshold circuits of constant depth. Allender [1] (inspired by Toda [29]) shows that any function in AC 0 can be computed by depth 3 majority circuits of quasi-polynomial size. <p> (p + k + l) = O (log n). 7 Conclusions and Open Problems Our results entail the first explicit constructions for the optimal depth, polynomial-size majority circuits for the number of basic functions including, among others, powering (depth 3), integer multiplication and integer division (depth 3), see [27] and <ref> [4] </ref>. More generally, our results entail the uniformity of the classes of majority circuits simulating the corresponding classes of threshold circuits. We look at the following functions. ADDITION: given two n-bit numbers, compute their sum. MULTIPLE ADDITION: given n n-bit numbers, compute their sum.
Reference: [5] <author> R. Beigel and J. Tarui. </author> <booktitle> On ACC. In Proc. 32nd IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 783-792, </pages> <year> 1991. </year>
Reference-contexts: Allender [1] (inspired by Toda [29]) shows that any function in AC 0 can be computed by depth 3 majority circuits of quasi-polynomial size. Yao [34] extends this to all of ACC 0 (see also <ref> [5] </ref>). There are some strong lower bounds for majority circuits of very small depth.
Reference: [6] <author> J. Bruck. </author> <title> Harmonic analysis of polynomial threshold functions. </title> <journal> SIAM J. Disc. Math., </journal> <volume> 3(2) </volume> <pages> 168-177, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: A family of circuits fC n g is said to compute a function f : f1; 1g fl ! f1; 1g fl provided f f1;1g n= f C n for all n. Definition 1 We use the following notation from <ref> [6] </ref>. * LT d is the class of functions computable by depth d polynomial-size threshold circuits. * c LT d is the class of functions computable by depth d polynomial-size threshold circuits with polynomially bounded integer weights. 3 Note that if we allow a gate to have multiple wires from an
Reference: [7] <author> J. Bruck and R. Smolensky. </author> <title> Polynomial threshold functions, AC 0 functions and spectral norms. </title> <booktitle> In Proc. 31st IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 632-641, </pages> <year> 1990. </year>
Reference: [8] <author> A. Chandra, L. Stockmeyer, and U. Vishkin. </author> <title> Constant depth reducibility. </title> <journal> SIAM J. Comp., </journal> <volume> 13 </volume> <pages> 423-439, </pages> <year> 1984. </year>
Reference-contexts: Also, it was recently shown that depth 2, polynomial-size threshold circuits are more powerful than depth 2, polynomial-size, small-weight threshold circuits [10]. On the other hand, it was proved by Chandra, Stockmeyer, and Vishkin <ref> [8] </ref> that addition of n binary encoded integers can be performed by constant depth majority circuits (see also [21]). This implies that depth d, polynomial-size threshold circuits can be simulated by depth O (d), polynomial-size, small-weight threshold circuits.
Reference: [9] <author> S. A. Cook. </author> <title> A taxonomy of problems with fast parallel algorithms. </title> <journal> Information and Control, </journal> <volume> 64 </volume> <pages> 2-22, </pages> <year> 1985. </year>
Reference-contexts: We introduce also uniform classes of threshold circuits. In doing so we can use the threshold circuit descriptions, e.g. similar to the "Direct Connection Language" of Ruzzo [24] (see also <ref> [9] </ref>). Let BIN be the set of binary encodings of the positive integers. A threshold circuit C n with n inputs is described by a labeled multi-graph (V n ; E n ). <p> We call a sequence of circuits P -uniform if the description of the nth circuit can be generated in polynomial time on input 1 n (cf., e.g. <ref> [9] </ref>). We define the following operator. Definition 3 The operator rem is defined as follows.
Reference: [10] <author> M. Goldmann, J. Hastad, and A. Razborov. </author> <title> Majority gates vs. general weighted threshold gates. </title> <journal> Computational Complexity, </journal> <volume> 2 </volume> <pages> 277-300, </pages> <year> 1992. </year>
Reference-contexts: Also, it was recently shown that depth 2, polynomial-size threshold circuits are more powerful than depth 2, polynomial-size, small-weight threshold circuits <ref> [10] </ref>. On the other hand, it was proved by Chandra, Stockmeyer, and Vishkin [8] that addition of n binary encoded integers can be performed by constant depth majority circuits (see also [21]). <p> In [25] Siu and Bruck gave a non-constructive proof that polynomial-size, depth-d threshold circuits can be simulated by polynomial-size, depth-2d + 1 majority circuits. Alon and Bruck gave a uniform construction in [3] achieving this. Goldmann, Hastad, and Razborov showed in <ref> [10] </ref> that any function computed by a depth d, polynomial-size threshold circuit is computable by a depth d + 1, polynomial-size majority circuit (note that for d = 1; 2 this is optimal). Two open questions were posed in [10]: Can one make an explicit construction, and can one make it <p> Goldmann, Hastad, and Razborov showed in <ref> [10] </ref> that any function computed by a depth d, polynomial-size threshold circuit is computable by a depth d + 1, polynomial-size majority circuit (note that for d = 1; 2 this is optimal). Two open questions were posed in [10]: Can one make an explicit construction, and can one make it 2 work also for non-constant depth? ([10] uses a probablilistic argument, and the blowup in size is super-polynomial if the depth grows with the number of variables.) We give positive answers to both questions. <p> Equation (4) is not such a bad idea though, because it works for most x. 4 The Approximator To get an approximator based on the ideas of the previous section we want to spread the value F (x) in some random fashion. This was done in <ref> [10] </ref> by considering sign (ffF (x)) for a randomly chosen integer ff 2 f1; 2; : : :; 2 2n g, and since ff &gt; 0 one has sign (F (x)) = sign (ffF (x)). <p> In our case the probability space is small enough that we may take the average over all possible choices of parameter values. Just like in <ref> [10] </ref> we will use a multiplier ff, but it will be much smaller. For a random ff, the probability of a truncation error is small. <p> This is a constructive version of Theorem 7.8 from <ref> [10] </ref>. Theorem 10 LT 1 ( c LT 2 : Proof. We will prove the inclusion. That it is strict follows from the fact that parity is in c LT 2 n LT 1 . Assume n 100, smaller inputs are handled by writing the function in disjuntive normal form. <p> We will now generalize this to show that a depth d, polynomial-size, threshold circuit can be simulated by a depth d + 1, polynomial-size, majority circuit. In <ref> [10] </ref> Goldmann, Hastad, and Razborov introduced a circuit class that mixes small and large weights. Definition 6 f LT d is the class of functions computable by depth d, polynomial-size, circuits where the top gate has polynomially bounded weights. We will show the following theorem.
Reference: [11] <author> A. Hajnal, W. Maass, P. Pudlak, M. Szegedy, and G. Turan. </author> <title> Threshold circuits of bounded depth. </title> <booktitle> In Proc. 28th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 99-110, </pages> <year> 1987. </year>
Reference-contexts: Yao [34] extends this to all of ACC 0 (see also [5]). There are some strong lower bounds for majority circuits of very small depth. Hajnal et al. <ref> [11] </ref> prove exponetial lower bounds on the size of depth 2 majority circuits computing "inner product mod 2." These results were extended in [13] to depth 3 majority circuits where the gates on the bottom level have very small fanin, and recently super-polynomial bounds were proved for depth 3 majority circuits <p> If one considers threshold circuits with arbitrary weights, even less is known. There is no super-polynomial lower bound for depth 2 threshold circuits computing some function in NP. As we mentioned above, such bounds exist for majority circuits <ref> [11] </ref>. It is therefore interesting to explore the power of large weights in threshold circuits. It has long been known that a single threshold gate is strictly more powerful than a single small-weight threshold gate. <p> Most of the constructions follow from non-uniform versions in [27] and [26] (see also [22]). The uniform constructions for ADDITION,COMPARISON, and SORTING follow from [3]. Uniform Depth Lower Function Upper Bound Bound ADDITION 2,L-uniform 2 MULTIPLE ADDITION 2,L-uniform 2 MULTIPLICATION 3,L-uniform 3 <ref> [11] </ref> MULTIPLE MULTIPLICATION 4,L-uniform 3 [11] DIVISION 3,P -uniform 3 [33] SQUARING 3,L-uniform 3 [33] POWERING 3,P -uniform 2 [33] COMPARISON 2,L-uniform 2 [25] MAXIMUM 3,L-uniform 2 SORTING 3,L-uniform 3 [26] We conclude with the list of open problems: 1. <p> Most of the constructions follow from non-uniform versions in [27] and [26] (see also [22]). The uniform constructions for ADDITION,COMPARISON, and SORTING follow from [3]. Uniform Depth Lower Function Upper Bound Bound ADDITION 2,L-uniform 2 MULTIPLE ADDITION 2,L-uniform 2 MULTIPLICATION 3,L-uniform 3 <ref> [11] </ref> MULTIPLE MULTIPLICATION 4,L-uniform 3 [11] DIVISION 3,P -uniform 3 [33] SQUARING 3,L-uniform 3 [33] POWERING 3,P -uniform 2 [33] COMPARISON 2,L-uniform 2 [25] MAXIMUM 3,L-uniform 2 SORTING 3,L-uniform 3 [26] We conclude with the list of open problems: 1. If the original circuit is monotone, our construction yields a non-monotone majority circuit.
Reference: [12] <author> J. Hastad. </author> <title> On the size of weights for threshold gates. </title> <journal> SIAM. J. Disc. Math., </journal> <volume> 7 </volume> <pages> 484-492, </pages> <year> 1994. </year>
Reference-contexts: f (x) can be written as f (x) = sign n X w i x i ; where for all i = 0; : : : ; n, w i 2 Z and jw i j 2 n (n + 1) (n+1)=2 : Remark 1 A recent result by Hastad <ref> [12] </ref> gives a lower bound on the weights required for a particular threshold function. The lower bound nearly matches the upper bound in Theorem 1. A threshold circuit is a directed acyclic graph the nodes of which are either threshold gates or input variables.
Reference: [13] <author> J. Hastad and M. Goldmann. </author> <title> On the power of small-depth threshold circuits. </title> <journal> Computational Complexity, </journal> <volume> 1(2) </volume> <pages> 113-129, </pages> <year> 1991. </year>
Reference-contexts: There are some strong lower bounds for majority circuits of very small depth. Hajnal et al. [11] prove exponetial lower bounds on the size of depth 2 majority circuits computing "inner product mod 2." These results were extended in <ref> [13] </ref> to depth 3 majority circuits where the gates on the bottom level have very small fanin, and recently super-polynomial bounds were proved for depth 3 majority circuits where the gates on the bottom level are arbitrary gates of fan-in n 1* [23].
Reference: [14] <author> T. Hofmeister and P. Pudlak. </author> <title> A Proof that Division Is Not in T C 0 2 . Research Report No. </title> <type> 447, </type> <institution> Dept. of Computer Science, Univ. of Dortmund, </institution> <year> 1992. </year>
Reference: [15] <author> R. Impagliazzo, R. Paturi, and M. Saks. </author> <title> Size-depth trade-offs for threshold circuits. </title> <booktitle> In Proc. 25th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 541-550, </pages> <year> 1993. </year>
Reference-contexts: Siu, Roychowdhury, and Kailath proved super-linear lower bounds on the number of wires in constant-depth majority circuits computing parity [28]. Recently Impagliazzo, Paturi, and Saks extended the results of [28] to constant-depth threshold circuits (with large weights) computing parity <ref> [15] </ref>. If one considers threshold circuits with arbitrary weights, even less is known. There is no super-polynomial lower bound for depth 2 threshold circuits computing some function in NP. As we mentioned above, such bounds exist for majority circuits [11].
Reference: [16] <author> S. Muroga. </author> <title> Threshold Logic and its Applications. </title> <publisher> Wiley-Interscience, </publisher> <year> 1971. </year>
Reference-contexts: The following well-known result by Muroga <ref> [16] </ref> gives a bound on the magnitude of the weights. Theorem 1 ([16, Theorem 9.3.2.1]) Let f (x) be an arbitrary n-variable threshold function.
Reference: [17] <author> J. Myhill and W. H. Kautz. </author> <title> On the size of weights required for linear-input switching functions. </title> <journal> IRE Trans. on Electronic Computers, </journal> <volume> EC-10(2):288-290, </volume> <year> 1961. </year>
Reference-contexts: For instance, Myhill and Kautz showed in 1961 that there are functions computable by a single threshold gate that require weights of size (2 n =n), where n is the number of inputs <ref> [17] </ref>. Also, it was recently shown that depth 2, polynomial-size threshold circuits are more powerful than depth 2, polynomial-size, small-weight threshold circuits [10].
Reference: [18] <author> P. Orponen. </author> <title> Neural networks and complexity theory. </title> <booktitle> In Proc. 17th International Symposium on Mathematical Foundations of Computer Science, </booktitle> <pages> pages 50-61. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year> <note> Lecture Notes in Computer Science 629. </note>
Reference: [19] <author> I. Parberry. </author> <title> A primer on the complexity theory of neural networks. </title> <booktitle> In Formal Techniques in Artificial Intelligence: A Sourcebook. </booktitle> <publisher> Elsevier, </publisher> <year> 1990. </year> <month> 18 </month>
Reference: [20] <author> I. Parberry and G. Schnitger. </author> <title> Parallel computation with threshold functions. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 36(3) </volume> <pages> 278-302, </pages> <month> June </month> <year> 1988. </year>
Reference: [21] <author> N. Pippenger. </author> <title> The complexity of computation by networks. </title> <journal> IBM J. of Research and Development, </journal> <volume> 31(2) </volume> <pages> 235-243, </pages> <month> March </month> <year> 1987. </year>
Reference-contexts: On the other hand, it was proved by Chandra, Stockmeyer, and Vishkin [8] that addition of n binary encoded integers can be performed by constant depth majority circuits (see also <ref> [21] </ref>). This implies that depth d, polynomial-size threshold circuits can be simulated by depth O (d), polynomial-size, small-weight threshold circuits. In [25] Siu and Bruck gave a non-constructive proof that polynomial-size, depth-d threshold circuits can be simulated by polynomial-size, depth-2d + 1 majority circuits.
Reference: [22] <author> A. A. Razborov. </author> <title> On small depth threshold circuits. </title> <booktitle> In Proc. 3rd Scandinavian Workshop on Algorithm Theory, </booktitle> <pages> pages 42-52. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year> <note> Lecture Notes in Computer Science 621. </note>
Reference-contexts: For a thourough survey of complexity theoretic results on threshold circuits, see <ref> [22] </ref>. 2 Preliminaries It will be convenient to work over f1; 1g rather than f0; 1g. An n-variable Boolean function thus maps f1; 1g n to f1; 1g. This is a simple transformation that does not affect the power of threshold gates. <p> Most of the constructions follow from non-uniform versions in [27] and [26] (see also <ref> [22] </ref>). The uniform constructions for ADDITION,COMPARISON, and SORTING follow from [3].
Reference: [23] <author> A. A. Razborov and A. Wigderson. </author> <title> n (log n) lower bounds on the size of depth 3 threshold circuits with AND gates at the bottom. </title> <journal> Information Processing Letters, </journal> <volume> 45(6) </volume> <pages> 303-307, </pages> <year> 1993. </year>
Reference-contexts: product mod 2." These results were extended in [13] to depth 3 majority circuits where the gates on the bottom level have very small fanin, and recently super-polynomial bounds were proved for depth 3 majority circuits where the gates on the bottom level are arbitrary gates of fan-in n 1* <ref> [23] </ref>. For depth 3 majority circuits with no extra restrictions, no super-polynomial lower bounds are known. Siu, Roychowdhury, and Kailath proved super-linear lower bounds on the number of wires in constant-depth majority circuits computing parity [28].
Reference: [24] <author> W. L. Ruzzo. </author> <title> On uniform circuit complexity. </title> <journal> J. Computer and System Sciences, </journal> <volume> 22 </volume> <pages> 365-383, </pages> <year> 1981. </year>
Reference-contexts: We introduce also uniform classes of threshold circuits. In doing so we can use the threshold circuit descriptions, e.g. similar to the "Direct Connection Language" of Ruzzo <ref> [24] </ref> (see also [9]). Let BIN be the set of binary encodings of the positive integers. A threshold circuit C n with n inputs is described by a labeled multi-graph (V n ; E n ).
Reference: [25] <author> K. Y. Siu and J. Bruck. </author> <title> On the power of threshold circuits with small weights. </title> <journal> SIAM J. Disc. Math., </journal> <volume> 4 </volume> <pages> 423-435, </pages> <year> 1991. </year>
Reference-contexts: This implies that depth d, polynomial-size threshold circuits can be simulated by depth O (d), polynomial-size, small-weight threshold circuits. In <ref> [25] </ref> Siu and Bruck gave a non-constructive proof that polynomial-size, depth-d threshold circuits can be simulated by polynomial-size, depth-2d + 1 majority circuits. Alon and Bruck gave a uniform construction in [3] achieving this. <p> Uniform Depth Lower Function Upper Bound Bound ADDITION 2,L-uniform 2 MULTIPLE ADDITION 2,L-uniform 2 MULTIPLICATION 3,L-uniform 3 [11] MULTIPLE MULTIPLICATION 4,L-uniform 3 [11] DIVISION 3,P -uniform 3 [33] SQUARING 3,L-uniform 3 [33] POWERING 3,P -uniform 2 [33] COMPARISON 2,L-uniform 2 <ref> [25] </ref> MAXIMUM 3,L-uniform 2 SORTING 3,L-uniform 3 [26] We conclude with the list of open problems: 1. If the original circuit is monotone, our construction yields a non-monotone majority circuit.
Reference: [26] <author> K. Y. Siu, J. Bruck, T. Kailath, and T. Hofmeister. </author> <title> Depth-efficient neural networks for division and related problems. </title> <type> Technical Report RJ 7946, </type> <institution> IBM Research Division, </institution> <month> January </month> <year> 1991. </year> <journal> IEEE Trans. Information Theory, </journal> <volume> 39 </volume> <pages> 946-956, </pages> <year> 1993. </year>
Reference-contexts: SORTING: given n n-bit numbers, output them in sorted order. 16 The following table surveys the uniform upper bounds known before and stemming from the present paper and compares it with the best known (nonuniform) lower bounds. Most of the constructions follow from non-uniform versions in [27] and <ref> [26] </ref> (see also [22]). The uniform constructions for ADDITION,COMPARISON, and SORTING follow from [3]. <p> Uniform Depth Lower Function Upper Bound Bound ADDITION 2,L-uniform 2 MULTIPLE ADDITION 2,L-uniform 2 MULTIPLICATION 3,L-uniform 3 [11] MULTIPLE MULTIPLICATION 4,L-uniform 3 [11] DIVISION 3,P -uniform 3 [33] SQUARING 3,L-uniform 3 [33] POWERING 3,P -uniform 2 [33] COMPARISON 2,L-uniform 2 [25] MAXIMUM 3,L-uniform 2 SORTING 3,L-uniform 3 <ref> [26] </ref> We conclude with the list of open problems: 1. If the original circuit is monotone, our construction yields a non-monotone majority circuit. It is an open question if an arbitrary monotone threshold gate can be simulated by constant depth monotone majority circuits of polynomial size. 2.
Reference: [27] <author> K. Y. Siu and V. Roychowdhury. </author> <title> On optimal depth threshold circuits for multiplication and related problems. </title> <journal> SIAM J. Disc. Math., </journal> <volume> 7 </volume> <pages> 284-292, </pages> <year> 1994. </year>
Reference-contexts: space O (p + k + l) = O (log n). 7 Conclusions and Open Problems Our results entail the first explicit constructions for the optimal depth, polynomial-size majority circuits for the number of basic functions including, among others, powering (depth 3), integer multiplication and integer division (depth 3), see <ref> [27] </ref> and [4]. More generally, our results entail the uniformity of the classes of majority circuits simulating the corresponding classes of threshold circuits. We look at the following functions. ADDITION: given two n-bit numbers, compute their sum. MULTIPLE ADDITION: given n n-bit numbers, compute their sum. <p> SORTING: given n n-bit numbers, output them in sorted order. 16 The following table surveys the uniform upper bounds known before and stemming from the present paper and compares it with the best known (nonuniform) lower bounds. Most of the constructions follow from non-uniform versions in <ref> [27] </ref> and [26] (see also [22]). The uniform constructions for ADDITION,COMPARISON, and SORTING follow from [3].
Reference: [28] <author> K. Y. Siu, V. Roychowdhury, and T. Kailath. </author> <title> Computing with optimal size threshold circuits. </title> <type> Technical Report, </type> <institution> Stanford University, </institution> <year> 1990. </year>
Reference-contexts: For depth 3 majority circuits with no extra restrictions, no super-polynomial lower bounds are known. Siu, Roychowdhury, and Kailath proved super-linear lower bounds on the number of wires in constant-depth majority circuits computing parity <ref> [28] </ref>. Recently Impagliazzo, Paturi, and Saks extended the results of [28] to constant-depth threshold circuits (with large weights) computing parity [15]. If one considers threshold circuits with arbitrary weights, even less is known. There is no super-polynomial lower bound for depth 2 threshold circuits computing some function in NP. <p> For depth 3 majority circuits with no extra restrictions, no super-polynomial lower bounds are known. Siu, Roychowdhury, and Kailath proved super-linear lower bounds on the number of wires in constant-depth majority circuits computing parity <ref> [28] </ref>. Recently Impagliazzo, Paturi, and Saks extended the results of [28] to constant-depth threshold circuits (with large weights) computing parity [15]. If one considers threshold circuits with arbitrary weights, even less is known. There is no super-polynomial lower bound for depth 2 threshold circuits computing some function in NP. As we mentioned above, such bounds exist for majority circuits [11].
Reference: [29] <author> S. </author> <title> Toda. </title> <booktitle> On the computational power of P P and P . In Proc. 30th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 514-519, </pages> <year> 1989. </year>
Reference-contexts: Threshold circuits have been shown to be surprisingly powerful. It is implicit in work by Beame, Cook, and Hoover [4] that integer division can be carried out by polynomial-size threshold circuits of constant depth. Allender [1] (inspired by Toda <ref> [29] </ref>) shows that any function in AC 0 can be computed by depth 3 majority circuits of quasi-polynomial size. Yao [34] extends this to all of ACC 0 (see also [5]). There are some strong lower bounds for majority circuits of very small depth.
Reference: [30] <author> J. Toran. </author> <title> An oracle characterization of the counting hierarchies. </title> <booktitle> In Proc. 3rd Annual Structure in Complexity Theory Conference, </booktitle> <pages> pages 213-223, </pages> <year> 1988. </year>
Reference: [31] <author> J. Toran. </author> <title> A combinatorial technique for separating counting complexity classes. </title> <booktitle> In Proc. 16th International Colloquium on Automata, Languages and Programming, </booktitle> <pages> pages 732-744. </pages> <publisher> Springer-Verlag, </publisher> <year> 1989. </year> <note> Lecture Notes in Computer Science 372. </note>
Reference: [32] <author> K. W. Wagner. </author> <title> The complexity of combinatorial problems with succinct input representation. </title> <journal> Acta Informatica, </journal> <volume> 23 </volume> <pages> 325-356, </pages> <year> 1986. </year>
Reference: [33] <author> I. Wegener. </author> <title> Optimal Lower Bounds on the Depth of Polynomial Size Threshold Circuits for some Arithmetic Functions. </title> <journal> Information Processing Letters, </journal> <volume> 46 </volume> <pages> 85-87, </pages> <year> 1993. </year>
Reference-contexts: The uniform constructions for ADDITION,COMPARISON, and SORTING follow from [3]. Uniform Depth Lower Function Upper Bound Bound ADDITION 2,L-uniform 2 MULTIPLE ADDITION 2,L-uniform 2 MULTIPLICATION 3,L-uniform 3 [11] MULTIPLE MULTIPLICATION 4,L-uniform 3 [11] DIVISION 3,P -uniform 3 <ref> [33] </ref> SQUARING 3,L-uniform 3 [33] POWERING 3,P -uniform 2 [33] COMPARISON 2,L-uniform 2 [25] MAXIMUM 3,L-uniform 2 SORTING 3,L-uniform 3 [26] We conclude with the list of open problems: 1. If the original circuit is monotone, our construction yields a non-monotone majority circuit. <p> The uniform constructions for ADDITION,COMPARISON, and SORTING follow from [3]. Uniform Depth Lower Function Upper Bound Bound ADDITION 2,L-uniform 2 MULTIPLE ADDITION 2,L-uniform 2 MULTIPLICATION 3,L-uniform 3 [11] MULTIPLE MULTIPLICATION 4,L-uniform 3 [11] DIVISION 3,P -uniform 3 <ref> [33] </ref> SQUARING 3,L-uniform 3 [33] POWERING 3,P -uniform 2 [33] COMPARISON 2,L-uniform 2 [25] MAXIMUM 3,L-uniform 2 SORTING 3,L-uniform 3 [26] We conclude with the list of open problems: 1. If the original circuit is monotone, our construction yields a non-monotone majority circuit. <p> The uniform constructions for ADDITION,COMPARISON, and SORTING follow from [3]. Uniform Depth Lower Function Upper Bound Bound ADDITION 2,L-uniform 2 MULTIPLE ADDITION 2,L-uniform 2 MULTIPLICATION 3,L-uniform 3 [11] MULTIPLE MULTIPLICATION 4,L-uniform 3 [11] DIVISION 3,P -uniform 3 <ref> [33] </ref> SQUARING 3,L-uniform 3 [33] POWERING 3,P -uniform 2 [33] COMPARISON 2,L-uniform 2 [25] MAXIMUM 3,L-uniform 2 SORTING 3,L-uniform 3 [26] We conclude with the list of open problems: 1. If the original circuit is monotone, our construction yields a non-monotone majority circuit.
Reference: [34] <author> A. C. Yao. </author> <title> On ACC and threshold circuits. </title> <booktitle> In Proc. 31st IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 619-627, </pages> <year> 1990. </year> <month> 19 </month>
Reference-contexts: Allender [1] (inspired by Toda [29]) shows that any function in AC 0 can be computed by depth 3 majority circuits of quasi-polynomial size. Yao <ref> [34] </ref> extends this to all of ACC 0 (see also [5]). There are some strong lower bounds for majority circuits of very small depth.
References-found: 34

