URL: http://www.isi.edu/soar/galk/Publications/98/aa98fin.ps.gz
Refering-URL: http://www.isi.edu/soar/galk/Publications/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: galk, tambe-@isi.edu  
Title: A Synergy of Agent Components: Social Comparison for Failure Detection well known problem of agent
Author: Gal A. Kaminka Milind Tambe 
Note: SOCFAD addresses the  e.g., [4]. This problem is exacerbated in multi-agent  
Date: 1 Overview  
Address: 4676 Admiralty Way, Marina del Rey, CA 90292  
Affiliation: Information Sciences Institute and Computer Science Department University of Southern California  
Abstract: Recently, encouraging progress has been made in integrating independent components in complete agents for real-world environments. While such systems demonstrate component integration, they often do not explicitly utilize synergistic interactions, which allow each component to function beyond its original capabilities because of the presence of other components. This abstract presents an implemented illustration of such explicit component synergy and its usefulness in dynamic multi-agent environments. In such environments, agents often have three important abilities: (a) collaboration with other agents (teamwork), (b) monitoring the agents own progress (execution monitoring), and (c) modeling other agents beliefs/goals (agent-modeling). Generally, these capabilities are independently developed, and are integrated in a single system such that each component operates independently of the others, e.g., monitoring techniques do not take into account the modeled plans of other agents, etc. In contrast, we highlight a synergy between these three agent components that results in significant improvement in capabilities of each component: (a) The collaboration component constrains the search space for the agent-modeling component via maintenance of mutual beliefs and facilitates better modeling, (b) the modeling and collaboration components enable SOCFAD (Social Comparison for Failure Detection), a novel execution monitoring technique which uses other agents to detect and diagnose failures (the focus of this abstract), and (c) the monitoring component, using SOCFAD, detects failures in individual performance that affect coordination, and allows the collaboration component to replan. To detect failures, an agent must have information about the ideal behavior expected of it. This ideal is compared to the agents actual behavior to detect discrepancies indicating possible failure. Previous approaches to this problem (e.g., [4]) have focused on the designer or planner supplying the agent with redundant information, either in the form of explicitly specified execution-monitoring conditions, or a model of the agent itself which may be used for comparison. While powerful in themselves, these approaches have limitations which render them insufficient in dynamic multi-agent environments: (a) They fail to take into account information from sensors that monitor other agents, and are thus less robust. For example, a driver may not see an obstacle on the road, but if she sees another car swerve, she can infer the presence of the obstacle; (b) Monitoring conditions on agent behavior can be too rigid in highly dynamic environments, as agents must often adjust their behavior flexibly to respond to actual circumstances; and (c) Both approaches require the designer to supply redundant information, which entails further work for the designer, and encounters difficulties in scaling up to more complex domains. We propose a novel complementary approach to failure detection and recovery, which is unique to multi-agent settings. This approach, SOCFAD, is inspired by ideas from Social Comparison Theory [1], a theory from social psychology. The key idea in SOCFAD is that agents use other agents as information sources on the situation and the ideal behavior. The agents compare their own behavior, beliefs, goals, and plans to those of other agents, in order to detect failures and correct their behavior. The agents do not necessarily adapt the other agents beliefs, but can reason about the differences in belief and behavior, and draw 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Newell A., </author> <year> 1990. </year> <title> Unified Theories of Cognition. </title> <publisher> Harvard University Press. </publisher>
Reference-contexts: We propose a novel complementary approach to failure detection and recovery, which is unique to multi-agent settings. This approach, SOCFAD, is inspired by ideas from Social Comparison Theory <ref> [1] </ref>, a theory from social psychology. The key idea in SOCFAD is that agents use other agents as information sources on the situation and the ideal behavior. <p> Our implementation of SOCFAD relies instead on the agent modeling component that infers an agents beliefs, goals, and plans from its observable behavior and surroundings for comparison. 2 Implementation Our agents design is based on reactive plans (operators) <ref> [1] </ref>, which form hierarchies that control each agent. The design implements an domain-independent explicit model of teamwork [3]. Operators may be team operators (shared by the team) or individual (specific to one agent).
Reference: [2] <author> Tambe, M. </author> <year> 1996. </year> <title> Tracking Dynamic Team Activity, </title> <booktitle> in Proceedings of the National Conference on Artificial Intelligence (AAAI-96), </booktitle> <address> Portland, Oregon. </address>
Reference-contexts: Operators may be team operators (shared by the team) or individual (specific to one agent). Team operators achieve and maintain joint goals, and require coordination with the other members of the team as part of their application. We use the RESC team <ref> [2] </ref> agent-modeling technique to infer the operator-hierarchies of other agents in the team from their observable actions. The agent therefore has unified representation of its own plans and those of its teammates.
Reference: [3] <author> Tambe, M. </author> <year> 1997. </year> <title> Agent Architectures for Flexible, Practical Teamwork, </title> <booktitle> in Proceedings of the National Conference on Artificial Intelligence, </booktitle> <address> Providence, Rhode Island. </address>
Reference-contexts: The design implements an domain-independent explicit model of teamwork <ref> [3] </ref>. Operators may be team operators (shared by the team) or individual (specific to one agent). Team operators achieve and maintain joint goals, and require coordination with the other members of the team as part of their application.
Reference: [4] <author> Williams, B. C.; and Nayak, P. P. </author> <year> 1996. </year> <title> A Model Based Approach to Reactive Self-Configuring Systems. </title> <booktitle> In Proceedings of the Thirteenth National Conference on Artificial Intelligence (AAAI-96), </booktitle> <address> Portland, Oregon. </address>
Reference-contexts: SOCFAD addresses the well known problem of agent execution monitoring in complex dynamic environments, e.g., <ref> [4] </ref>. This problem is exacerbated in multi-agent environments due to the added requirements for coordination. The complexity and unpredictability of these environments causes an explosion of state space complexity, which inhibits the ability of any designer to enumerate the correct response in each possible state in advance. <p> To detect failures, an agent must have information about the ideal behavior expected of it. This ideal is compared to the agents actual behavior to detect discrepancies indicating possible failure. Previous approaches to this problem (e.g., <ref> [4] </ref>) have focused on the designer or planner supplying the agent with redundant information, either in the form of explicitly specified execution-monitoring conditions, or a model of the agent itself which may be used for comparison.
References-found: 4

