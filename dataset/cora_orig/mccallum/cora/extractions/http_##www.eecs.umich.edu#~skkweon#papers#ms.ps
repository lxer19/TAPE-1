URL: http://www.eecs.umich.edu/~skkweon/papers/ms.ps
Refering-URL: http://www.eecs.umich.edu/~skkweon/papers/papers_area.html
Root-URL: http://www.cs.umich.edu
Title: Distributed Route Selection for Establishing Real-Time Channels  
Author: Kang G. Shin, Chih-Che Chou, and Seok-Kyu Kweon 
Keyword: Key Words Hard real-time communication systems, real-time channel/connection, deadline guarantees, distributed route selection, message scheduling.  
Address: Ann Arbor, MI 48109-2122  
Affiliation: Real-Time Computing Laboratory Department of Electrical Engineering and Computer Science The University of Michigan  
Email: Email: fkgshin,ccchou,skkweong@eecs.umich.edu;  
Phone: 313-763-0391 (voice); 313-763-4617 (Fax)  
Date: January 23, 1998  
Abstract: To guarantee the delivery of real-time messages before their deadline, a real-time channel or connection must be established before the transmission of any message belonging to the connection. During this channel-establishment phase, one must first select a route between the source and destination of this channel and then reserve sufficient resources along this route so that the worst-case end-to-end delay over the selected route may not exceed the user-specified delay bound. We propose an efficient distributed route-selection scheme that is guaranteed to find a "qualified" route, if any, satisfying the performance requirement of the requested channel without compromising any of the existing guarantees. The proposed scheme can also eliminate the common reliability/performance bottleneck of a centralized route-selection scheme, while improving efficiency over the centralized and other distributed schemes. Although the proposed solution starts with searching all possible routes in parallel , it prunes infeasible routes quickly and its worst-case operational overhead is shown to be only a linear function of the number of links in the network. Several examples and simulation results are presented to demonstrate the effectiveness of the proposed distributed route-selection scheme as compared to sequential route-search schemes. The work described in this paper was supported in part by the Office of Naval Research under Grant N00014-J-94-1-0229 and the National Science Foundation under Grant MIP-9203895. Any opinions, findings, and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the view of the funding agencies. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. P. Anderson, S. Y. Tzou, R. Wahbe, R. Govindan, and M. Andrews, </author> <title> "Support for continuous media in the dash system," </title> <booktitle> Proc. 10-th Int'l. Conf. on Distributed Computing Systems, </booktitle> <pages> pp. 54-61, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: The underlying network is an arbitrary point-to-point network. As in <ref> [1, 7, 11, 12, 15] </ref>, the generation of real-time messages is assumed to be governed by the linear-bounded model that is characterized by three parameters: maximum message size S max (bytes), maximum message rate R max (messages/second), and maximum burst size B max (messages).
Reference: [2] <author> D. Bertsekas and R. Gallager, </author> <title> Data Networks, </title> <booktitle> Prentice-Hall International, </booktitle> <address> Englewood Cliffs, New Jersey, </address> <note> second edition, </note> <year> 1992. </year>
Reference-contexts: Determination of each channel's MWRT on a link will henceforth be referred to as link-delay estimation. 3.2 The Route-Selection Algorithm Based on the above definition of link delay, we can apply a variation of the Bellman-Ford algorithm <ref> [2, 16] </ref> to solve the route-selection problem. The proposed algorithm is not exactly the same as the original Bellman-Ford shortest path algorithm in terms of the number of routes explored. Under the original Bellman-Ford algorithm, only the one which has the shortest delay is explored at any time. <p> For a single request, the Bellman-Ford (shortest-delay path) <ref> [2, 16] </ref> algorithm can ensure the least MWRT path to be found, although other larger-delay routes may be found first when the number of hops of these routes are smaller than that of the least MWRT path. <p> As can be seen in Fig. 11, our scheme is significantly better than the SPF-5. In addition to its larger channel-establishment time, the sequential search based on SPF requires to find the shortest path for each trial using an appropriate algorithm such as Dijkstra's <ref> [2] </ref>, which is itself time-consuming. By contrast, our scheme does not require execution of such an algorithm.
Reference: [3] <author> C.-C. Chou and K. G. Shin, </author> <title> "Statistical real-time video channels over a multiaccess network," </title> <booktitle> Proc. High-Speed Networking and Multimedia Computing Symposium,IS&T/SPIE Symposium on Electronic Imaging Science and Technology, </booktitle> <pages> pp. 86-96, </pages> <month> February </month> <year> 1994. </year>
Reference: [4] <author> C.-C. Chou and K. G. Shin, </author> <title> "Statistical real-time channels on multiaccess networks," </title> <booktitle> Proc. The International Conference on Computer Communication, </booktitle> <pages> pp. 29-34, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: There are basically two approaches to the route selection problem: centralized or distributed. Most existing channel-establishment schemes are based on the centralized approach <ref> [4, 5, 10, 11, 14] </ref>.
Reference: [5] <author> C.-C. Chou and K. G. Shin, </author> <title> "Multiplexing statistical real-time channels on a multiaccess network," </title> <booktitle> Proc. 16-th Int'l. Conf. on Distributed Computing Systems, </booktitle> <pages> pp. 133-140, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: There are basically two approaches to the route selection problem: centralized or distributed. Most existing channel-establishment schemes are based on the centralized approach <ref> [4, 5, 10, 11, 14] </ref>.
Reference: [6] <author> D. E. Comer, </author> <title> Internetworking with TCP/IP volume I, </title> <booktitle> principles, protocols, and architecture, Prentice-Hall International, </booktitle> <address> Englewood Cliffs, New Jersey, third edition, </address> <year> 1995. </year>
Reference-contexts: Second, the system is susceptible to single-point failures of the network manager, since, without the network manager, no new real-time channel can be established. To eliminate/alleviate performance and reliability bottlenecks, one may use distributed link-state routing <ref> [6] </ref>. In this approach, each node maintains the information on the entire network at a local database by exchanging link-state information with all other nodes, so that the source or the destination can determine a route for a new requested channel solely based on the information kept in its database.
Reference: [7] <author> R. L. Cruz, </author> <title> A Calculus for Network Delay and a Note on Topologies of Interconnection Networks, </title> <type> PhD thesis, </type> <institution> University of Illinois at Urbana-Champaign, </institution> <month> July </month> <year> 1987. </year>
Reference-contexts: The underlying network is an arbitrary point-to-point network. As in <ref> [1, 7, 11, 12, 15] </ref>, the generation of real-time messages is assumed to be governed by the linear-bounded model that is characterized by three parameters: maximum message size S max (bytes), maximum message rate R max (messages/second), and maximum burst size B max (messages).
Reference: [8] <author> J. W. Dolter, </author> <title> A Programmable Routing Controller Supporting Multi-Mode Routing and Switching in Distributed Real-Time Systems, </title> <type> PhD thesis, </type> <institution> Department of Elec. Eng. and Comput. Sci., The University of Michigan, </institution> <address> Ann Arbor, MI 48109-2122, </address> <month> September </month> <year> 1993. </year>
Reference-contexts: Thus, the request message will be appropriately stored and forwarded (with procedure insert req and f orward req) if the sum of the accumulated delay and the MWRT of the corresponding next link is less than D. 2 One can build hardware to do this <ref> [8] </ref>.
Reference: [9] <author> D. Ferrari and D. C. Verma, </author> <title> "A scheme for real-time channel establishment in wide-area networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-8, </volume> <pages> pp. 368-379, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: 1 Introduction The increasing demand of real-time network services has generated considerable interest in the development of real-time communication protocols. The concept of "real-time channel" proposed by Ferrari and Verma <ref> [9] </ref> and refined by Kandlur et al. [11] is one of the most notable solutions to the problem of meeting message/packet 1 delivery deadlines in wide area networks (WANs). <p> A real-time channel is a unidirectional virtual circuit which, once established, is guaranteed to meet user-specified performance requirements as long as the user does not violate his a priori specified traffic-generation characteristics <ref> [9] </ref>. Generally, two distinct phases are required to realize the concept of real-time channel: off-line channel establishment and run-time message scheduling.
Reference: [10] <author> D. D. Kandlur and K. G. Shin, </author> <title> "Design of a communication subsystem for HARTS," </title> <type> Technical Report CSE-TR-109-91, </type> <institution> CSE Division, Department of Electrical Engineering and Computer Science, The University of Michigan, </institution> <year> 1991. </year>
Reference-contexts: There are basically two approaches to the route selection problem: centralized or distributed. Most existing channel-establishment schemes are based on the centralized approach <ref> [4, 5, 10, 11, 14] </ref>.
Reference: [11] <author> D. D. Kandlur, K. G. Shin, and D. Ferrari, </author> <title> "Real-time communication in multi-hop networks," </title> <booktitle> Proc. 11-th Int'l. Conf. on Distributed Computing Systems, </booktitle> <pages> pp. 300-307, </pages> <year> 1991. </year> <note> (An expanded version appeared in IEEE Trans. on Parallel and Distributed Systems, </note> <editor> vol. </editor> <volume> 5, no. 10, </volume> <pages> pp. 1044-1056, </pages> <address> Oct. 1994.). </address> <month> 34 </month>
Reference-contexts: 1 Introduction The increasing demand of real-time network services has generated considerable interest in the development of real-time communication protocols. The concept of "real-time channel" proposed by Ferrari and Verma [9] and refined by Kandlur et al. <ref> [11] </ref> is one of the most notable solutions to the problem of meeting message/packet 1 delivery deadlines in wide area networks (WANs). <p> There are basically two approaches to the route selection problem: centralized or distributed. Most existing channel-establishment schemes are based on the centralized approach <ref> [4, 5, 10, 11, 14] </ref>. <p> For example, for the real-time channel approach in <ref> [11] </ref> | which is based on the linear-bounded arrival process | local delay bounds, minimum message inter-arrival times and maximum message sizes of all the real-time connections established over each link must be broadcast over the entire network whenever a new channel is established or an old channel is torn down. <p> The underlying network is an arbitrary point-to-point network. As in <ref> [1, 7, 11, 12, 15] </ref>, the generation of real-time messages is assumed to be governed by the linear-bounded model that is characterized by three parameters: maximum message size S max (bytes), maximum message rate R max (messages/second), and maximum burst size B max (messages). <p> In the linear bounded model, the number of messages generated in any time interval of length t does not exceed B max + tR max . Based on this message arrival model, the authors of <ref> [11, 12] </ref> proposed a scheme to estimate the 5 worst-case delay on each link and a run-time scheduling algorithm for real-time messages. By adding the worst-case delays of all links that a channel runs through, one can calculate the worst-case end-to-end delivery delay. <p> Note that these schemes have been developed under the assumption that a proper route for the requested channel was already available. Using the delay-estimation method in <ref> [11, 12] </ref> and a Bellman-Ford-like algorithm, we will in this paper develop a scheme to find a qualified route for each channel-establishment request. 3.1 Link-Delay Estimation Since real-time messages are given priority over non-real-time ones, we will ignore the effects of non-real-time traffic in the rest of the paper unless stated <p> We will thus assess the delay of a link based only on the underlying real-time traffic. Since the algorithm in <ref> [11, 12] </ref> will be used to estimate link delays, we will briefly introduce this algorithm first. The goal of the algorithm in [11, 12] is to compute the minimum worst-case delay on a link for a new real-time channel to be added without compromising the performance guarantee of any of the <p> We will thus assess the delay of a link based only on the underlying real-time traffic. Since the algorithm in <ref> [11, 12] </ref> will be used to estimate link delays, we will briefly introduce this algorithm first. The goal of the algorithm in [11, 12] is to compute the minimum worst-case delay on a link for a new real-time channel to be added without compromising the performance guarantee of any of the existing channels on the link. <p> Note that the inequality d i p i must hold for the algorithm in <ref> [11, 12] </ref> to work correctly. Given a new channel M k+1 = (C k+1 ; p k+1 ) to be established, the authors of [11, 12] proposed an algorithm for computing the minimum worst-case response time (MWRT), r k+1 , on a link of channel M k+1 's route without compromising <p> Note that the inequality d i p i must hold for the algorithm in <ref> [11, 12] </ref> to work correctly. Given a new channel M k+1 = (C k+1 ; p k+1 ) to be established, the authors of [11, 12] proposed an algorithm for computing the minimum worst-case response time (MWRT), r k+1 , on a link of channel M k+1 's route without compromising the performance guarantees of other existing channels over the link. <p> The method in <ref> [11, 12] </ref> did not include those channels pending for final confirmation in 6 the calculation of MWRT for the new channel-establishment request, but we will include them in our calculation of MWRT as if they had already been established. <p> In such a case D d a is divided evenly into hops parts at the destination and distributed to all links along the path <ref> [11, 12] </ref>. The permissible delay of a real-time message of this particular channel over an intermediate link | simply 11 called the link (delay) deadline | is the channel's MWRT of that link plus (D d a )=hops. <p> For link 1 ! 2, using the same procedure, the MWRT is computed to be 2 by giving the new channel the highest priority on this link. Note that this priority assignment for the requested channel is just for computing the MWRT. As discussed in Section 3.1 and in <ref> [11, 12] </ref>, the run-time priority in transmitting 21 the messages of the requested channel, if accepted, is determined based on the channel's link-delay deadline the MWRT obtained here and will be determined after the route is selected. <p> For link 3 ! 5, we get C = 20 and MWRT= 25 by assigning the new channel the lowest priority. However, in order to make the scheme work correctly, we require d p (= 20) on each link of the channel's route <ref> [11, 12] </ref>. So, this link cannot be part of a qualified route, and hence, no request message is sent to N5 via this link and no entry (corresponding to this request) will be inserted into TPR:3 ! 5.
Reference: [12] <author> D. D. Kandlur, </author> <title> Networking in Distributed Real-Time Systems, </title> <type> PhD thesis, </type> <institution> University of Michi--gan, </institution> <year> 1991. </year>
Reference-contexts: The underlying network is an arbitrary point-to-point network. As in <ref> [1, 7, 11, 12, 15] </ref>, the generation of real-time messages is assumed to be governed by the linear-bounded model that is characterized by three parameters: maximum message size S max (bytes), maximum message rate R max (messages/second), and maximum burst size B max (messages). <p> In the linear bounded model, the number of messages generated in any time interval of length t does not exceed B max + tR max . Based on this message arrival model, the authors of <ref> [11, 12] </ref> proposed a scheme to estimate the 5 worst-case delay on each link and a run-time scheduling algorithm for real-time messages. By adding the worst-case delays of all links that a channel runs through, one can calculate the worst-case end-to-end delivery delay. <p> Note that these schemes have been developed under the assumption that a proper route for the requested channel was already available. Using the delay-estimation method in <ref> [11, 12] </ref> and a Bellman-Ford-like algorithm, we will in this paper develop a scheme to find a qualified route for each channel-establishment request. 3.1 Link-Delay Estimation Since real-time messages are given priority over non-real-time ones, we will ignore the effects of non-real-time traffic in the rest of the paper unless stated <p> We will thus assess the delay of a link based only on the underlying real-time traffic. Since the algorithm in <ref> [11, 12] </ref> will be used to estimate link delays, we will briefly introduce this algorithm first. The goal of the algorithm in [11, 12] is to compute the minimum worst-case delay on a link for a new real-time channel to be added without compromising the performance guarantee of any of the <p> We will thus assess the delay of a link based only on the underlying real-time traffic. Since the algorithm in <ref> [11, 12] </ref> will be used to estimate link delays, we will briefly introduce this algorithm first. The goal of the algorithm in [11, 12] is to compute the minimum worst-case delay on a link for a new real-time channel to be added without compromising the performance guarantee of any of the existing channels on the link. <p> Note that the inequality d i p i must hold for the algorithm in <ref> [11, 12] </ref> to work correctly. Given a new channel M k+1 = (C k+1 ; p k+1 ) to be established, the authors of [11, 12] proposed an algorithm for computing the minimum worst-case response time (MWRT), r k+1 , on a link of channel M k+1 's route without compromising <p> Note that the inequality d i p i must hold for the algorithm in <ref> [11, 12] </ref> to work correctly. Given a new channel M k+1 = (C k+1 ; p k+1 ) to be established, the authors of [11, 12] proposed an algorithm for computing the minimum worst-case response time (MWRT), r k+1 , on a link of channel M k+1 's route without compromising the performance guarantees of other existing channels over the link. <p> The method in <ref> [11, 12] </ref> did not include those channels pending for final confirmation in 6 the calculation of MWRT for the new channel-establishment request, but we will include them in our calculation of MWRT as if they had already been established. <p> In such a case D d a is divided evenly into hops parts at the destination and distributed to all links along the path <ref> [11, 12] </ref>. The permissible delay of a real-time message of this particular channel over an intermediate link | simply 11 called the link (delay) deadline | is the channel's MWRT of that link plus (D d a )=hops. <p> For link 1 ! 2, using the same procedure, the MWRT is computed to be 2 by giving the new channel the highest priority on this link. Note that this priority assignment for the requested channel is just for computing the MWRT. As discussed in Section 3.1 and in <ref> [11, 12] </ref>, the run-time priority in transmitting 21 the messages of the requested channel, if accepted, is determined based on the channel's link-delay deadline the MWRT obtained here and will be determined after the route is selected. <p> For link 3 ! 5, we get C = 20 and MWRT= 25 by assigning the new channel the lowest priority. However, in order to make the scheme work correctly, we require d p (= 20) on each link of the channel's route <ref> [11, 12] </ref>. So, this link cannot be part of a qualified route, and hence, no request message is sent to N5 via this link and no entry (corresponding to this request) will be inserted into TPR:3 ! 5.
Reference: [13] <author> J. Lehoczky, L. Sha, and Y. Ding, </author> <title> "The rate monotonic scheduling algorithm: Exact characterization and average case behavior," </title> <booktitle> Proc. Real-time Systems Symposium, </booktitle> <pages> pp. 166-171, </pages> <year> 1989. </year>
Reference: [14] <author> K. G. Shin and C.-C. Chou, </author> <title> "Design and evaluation of real-time communication for FieldBus based manufacturing systems," </title> <booktitle> 1992 IEEE Local Computer Network Symposium, </booktitle> <pages> pp. 483-492, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: Although several channel-establishment schemes have been proposed in the literature <ref> [3-5, 9-11, 14] </ref>, very few of them have addressed explicitly the issue of selecting a route between the source and destination of a channel with end-to-end deadline guarantees, despite its importance to the channel-establishment phase. <p> There are basically two approaches to the route selection problem: centralized or distributed. Most existing channel-establishment schemes are based on the centralized approach <ref> [4, 5, 10, 11, 14] </ref>.
Reference: [15] <author> D. C. Verma, </author> <title> Guaranteed Performance Communication in High Speed Networks, </title> <type> PhD thesis, </type> <institution> University of California at Berkeley, </institution> <year> 1991. </year>
Reference-contexts: The underlying network is an arbitrary point-to-point network. As in <ref> [1, 7, 11, 12, 15] </ref>, the generation of real-time messages is assumed to be governed by the linear-bounded model that is characterized by three parameters: maximum message size S max (bytes), maximum message rate R max (messages/second), and maximum burst size B max (messages).
Reference: [16] <author> J. Walrand, </author> <title> Communication Networks: A First Course, </title> <publisher> Irwin and Aksen Associates, </publisher> <year> 1991. </year> <month> 35 </month>
Reference-contexts: Determination of each channel's MWRT on a link will henceforth be referred to as link-delay estimation. 3.2 The Route-Selection Algorithm Based on the above definition of link delay, we can apply a variation of the Bellman-Ford algorithm <ref> [2, 16] </ref> to solve the route-selection problem. The proposed algorithm is not exactly the same as the original Bellman-Ford shortest path algorithm in terms of the number of routes explored. Under the original Bellman-Ford algorithm, only the one which has the shortest delay is explored at any time. <p> For a single request, the Bellman-Ford (shortest-delay path) <ref> [2, 16] </ref> algorithm can ensure the least MWRT path to be found, although other larger-delay routes may be found first when the number of hops of these routes are smaller than that of the least MWRT path.
References-found: 16

