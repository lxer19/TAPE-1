URL: ftp://ftp.cs.washington.edu/tr/1996/06/UW-CSE-96-06-01.PS.Z
Refering-URL: http://www.cs.washington.edu/research/tr/tr-by-title.html
Root-URL: 
Email: fmel, snyderg@cs.washington.edu  
Title: A Comparison of Input and Output Driven Routers  
Author: Melanie L. Fulgham Lawrence Snyder 
Date: November 27, 1996  
Affiliation: University of Washington  
Abstract: Communication in parallel computers requires a low latency router. Once a suitable routing algorithm is selected, an implementation must be designed. Issues such as whether the router should be input or output driven need to be considered. In this paper, we use simulations to compare input driven and output driven routing algorithms. Three algorithms, the Dally-Seitz oblivious router, the *-channels router, and the minimal triplex algorithm are evaluated. Each router is implemented as both an input and an output driven router. Experiments are run for each of the router implementations with seven different traffic patterns on both a 256-node two dimensional mesh and torus networks. The results show that in almost all cases, the output driven router matches or outperforms the input driven router. Furthermore, we find that randomization of output buffer selection in the input driven algorithm increases its performance and substantially reduces the performance discrepancy between the input and output driven algorithms. Although the findings apply to the routers considered, we believe the results generalize to other routers. 
Abstract-found: 1
Intro-found: 1
Reference: [BGPS92] <author> P.E. Berman, L. Gravano, G. Pifarre, and J.L.C. Sanz. </author> <title> Adaptive deadlock-and livelock-free routing with all minimal paths in torus networks. </title> <booktitle> In Proc. of the Sym. of Parallel Algorithms and Architectures, </booktitle> <year> 1992. </year>
Reference-contexts: Three algorithms are simulated as both input and then output driven routers: the Dally-Seitz oblivious router [DS87], the *-channels router <ref> [BGPS92, Dua93] </ref>, and the minimal triplex router 1 [FS96] using a flit-level simulator of 256-node 2D torus and mesh networks.
Reference: [BLA + 94] <author> M.A. Blumrich, K. Li, R. Alpert, C. Dubnicki, </author> <title> and E.W. Felten. Virtual memory mapped network interface for the SHRIMP multicomputer. </title> <booktitle> In Proc. of the Intl. Sym. on Computer Arch., </booktitle> <pages> pages 142-153, </pages> <year> 1994. </year>
Reference-contexts: Nevertheless, research has reduced this overhead [vEDCGS92, Dal90, Kea94] and exposed the network interface. Designing low latency network interfaces has become a hot topic for research <ref> [BLA + 94, MBES94] </ref>. Eventually network interfaces will no longer overshadow the routing time in the network. Then, both the routing algorithm and its implementation will have an impact on communication performance.
Reference: [Bol93] <author> Kevin Bolding. </author> <title> Chaotic Routing: Design and Implementation of an Adaptive Multicomputer Network Router. </title> <type> PhD thesis, </type> <institution> University of Washington, </institution> <address> Seattle, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: This study uses node latencies of three cycles for the oblivious router, and four cycles 1 An early implementation of the triplex router is used. Since then, performance has improved, though the differences between the input and output driven routers should remain unchanged. 4 for the adaptive routers <ref> [Bol93] </ref>. To keep complexity manageable, the router connects at most a single message from an input buffer to an output buffer per cycle. Traffic is dynamic. Messages are introduced at each node at every cycle with a probability specified by the applied load.
Reference: [CK92] <author> A.A. Chien and J.H. Kim. </author> <title> Planar-adaptive routing: Low-cost adaptive networks for multiprocessors. </title> <booktitle> In Proc. of the Intl. Sym. on Computer Architecture, </booktitle> <pages> pages 268-277, </pages> <year> 1992. </year>
Reference-contexts: Numerous frameworks have been presented for developing deadlock-free algorithms with varying complexity, resource requirements, and switching techniques <ref> [DS87, LH91, Dua93, Dua95, GN94, CK92, SJ95, LC94] </ref>. Each of these factors influences the overall performance of the router. Nevertheless, only a few studies have been devoted to improving performance or comparing various implementations of a routing algorithm.
Reference: [CR94] <author> L. Cherkasova and T. Rokicki. </author> <title> Alpha message scheduling for packet-switched interconnects. </title> <type> Technical Report TR HPL-94-72, </type> <institution> Hewlett-Packard Labs, </institution> <year> 1994. </year>
Reference-contexts: Konstantinidou reduced overall message latency in bimodal length traffic by introducing segment routing [Kon94]. Segment routing provides a separate buffer for large messages, allowing small messages to pass larger ones. Cherkasova and Rokicki replaced FIFO injection, the traditional method of introducing messages into the network, with alpha scheduling <ref> [CR94] </ref>. With variable length messages, alpha scheduling approximates the optimal average message latency of shortest first scheduling without introducing starvation.
Reference: [Dal90] <author> W.J. Dally. </author> <title> The J-machine system. </title> <editor> In P.Winston and S. Shellard, editors, </editor> <booktitle> Artificial Intelligence at MIT: Expanding Frontiers. </booktitle> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: A shorter version of this paper appears in Lecture Notes in Computer Science, volume 1123, pages 195-204, 1996. software overhead for sending and receiving messages. Nevertheless, research has reduced this overhead <ref> [vEDCGS92, Dal90, Kea94] </ref> and exposed the network interface. Designing low latency network interfaces has become a hot topic for research [BLA + 94, MBES94]. Eventually network interfaces will no longer overshadow the routing time in the network.
Reference: [Dal92] <author> W. Dally. </author> <title> Virtual-channel flow control. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 3(2) </volume> <pages> 194-205, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: A mesh is a torus without wrap edges. The first algorithm, the Dally-Seitz oblivious router, provides no adaptivity and routes messages by correcting the dimensions from lowest to highest (e.g. in the 2D case, x then y). Unless specified, the oblivious router uses two virtual lanes <ref> [Dal92] </ref> resulting in four virtual channels per channel for the torus and two virtual channels for the mesh. When more than one lane is available, the one with the most space is chosen. <p> Nevertheless, only a few studies have been devoted to improving performance or comparing various implementations of a routing algorithm. Dally increased throughput of wormhole algorithms by adding virtual channels to separate the buffering resources from the transmission resources of the router <ref> [Dal92] </ref>. Konstantinidou reduced overall message latency in bimodal length traffic by introducing segment routing [Kon94]. Segment routing provides a separate buffer for large messages, allowing small messages to pass larger ones. Cherkasova and Rokicki replaced FIFO injection, the traditional method of introducing messages into the network, with alpha scheduling [CR94].
Reference: [DS87] <author> W. Dally and C. Seitz. </author> <title> Deadlock-free message routing in multiprocessor interconnection networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-36(5):547-553, </volume> <month> May </month> <year> 1987. </year> <month> 12 </month>
Reference-contexts: Three algorithms are simulated as both input and then output driven routers: the Dally-Seitz oblivious router <ref> [DS87] </ref>, the *-channels router [BGPS92, Dua93], and the minimal triplex router 1 [FS96] using a flit-level simulator of 256-node 2D torus and mesh networks. <p> Numerous frameworks have been presented for developing deadlock-free algorithms with varying complexity, resource requirements, and switching techniques <ref> [DS87, LH91, Dua93, Dua95, GN94, CK92, SJ95, LC94] </ref>. Each of these factors influences the overall performance of the router. Nevertheless, only a few studies have been devoted to improving performance or comparing various implementations of a routing algorithm.
Reference: [Dua93] <author> J. Duato. </author> <title> A new theory of deadlock-free adaptive routing in wormhole net-works. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 4(4) </volume> <pages> 466-475, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: Three algorithms are simulated as both input and then output driven routers: the Dally-Seitz oblivious router [DS87], the *-channels router <ref> [BGPS92, Dua93] </ref>, and the minimal triplex router 1 [FS96] using a flit-level simulator of 256-node 2D torus and mesh networks. <p> Numerous frameworks have been presented for developing deadlock-free algorithms with varying complexity, resource requirements, and switching techniques <ref> [DS87, LH91, Dua93, Dua95, GN94, CK92, SJ95, LC94] </ref>. Each of these factors influences the overall performance of the router. Nevertheless, only a few studies have been devoted to improving performance or comparing various implementations of a routing algorithm.
Reference: [Dua95] <author> J. Duato. </author> <title> A necessary and sufficient condition for deadlock-free adaptive routing in wormhole networks. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 6(10), </volume> <month> October </month> <year> 1995. </year>
Reference-contexts: Numerous frameworks have been presented for developing deadlock-free algorithms with varying complexity, resource requirements, and switching techniques <ref> [DS87, LH91, Dua93, Dua95, GN94, CK92, SJ95, LC94] </ref>. Each of these factors influences the overall performance of the router. Nevertheless, only a few studies have been devoted to improving performance or comparing various implementations of a routing algorithm.
Reference: [FS96] <author> M. Fulgham and L. Snyder. </author> <title> Triplex router: a versatile torus routing algorithm. </title> <type> Technical Report UW-CSE-96-01-11, </type> <institution> Univ. of Washington, </institution> <address> Seattle, </address> <year> 1996. </year>
Reference-contexts: Three algorithms are simulated as both input and then output driven routers: the Dally-Seitz oblivious router [DS87], the *-channels router [BGPS92, Dua93], and the minimal triplex router 1 <ref> [FS96] </ref> using a flit-level simulator of 256-node 2D torus and mesh networks.
Reference: [GN92] <author> C.J. Glass and L.M. Ni. </author> <title> Adaptive routing in mesh-connected networks. </title> <booktitle> In Proc. of the Intl. Conf. on Distributed Computing Systems, </booktitle> <pages> pages 12-19, </pages> <year> 1992. </year>
Reference-contexts: With variable length messages, alpha scheduling approximates the optimal average message latency of shortest first scheduling without introducing starvation. Finally, a study by Glass and Ni compared the performance of various policies for selecting input and output buffers for two different routing algorithms 11 on the mesh <ref> [GN92] </ref>. 6 Conclusions We have experimentally compared the performance of input and output driven algorithms on the mesh and torus. Although the two are conceptually similar, for almost all the cases examined, the performance of the output driven algorithms is equivalent, or superior to that of the input driven algorithms.
Reference: [GN94] <author> Christopher J. Glass and Lionel M. Ni. </author> <title> The turn model for adaptive routing. </title> <journal> JACM, </journal> <volume> 41(5) </volume> <pages> 874-902, </pages> <year> 1994. </year>
Reference-contexts: Numerous frameworks have been presented for developing deadlock-free algorithms with varying complexity, resource requirements, and switching techniques <ref> [DS87, LH91, Dua93, Dua95, GN94, CK92, SJ95, LC94] </ref>. Each of these factors influences the overall performance of the router. Nevertheless, only a few studies have been devoted to improving performance or comparing various implementations of a routing algorithm.
Reference: [Kea94] <author> J. Kuskin and et al. </author> <title> The Stanford FLASH multiprocessor. </title> <booktitle> In Proc. of ISCA, </booktitle> <pages> pages 302-313, </pages> <year> 1994. </year>
Reference-contexts: A shorter version of this paper appears in Lecture Notes in Computer Science, volume 1123, pages 195-204, 1996. software overhead for sending and receiving messages. Nevertheless, research has reduced this overhead <ref> [vEDCGS92, Dal90, Kea94] </ref> and exposed the network interface. Designing low latency network interfaces has become a hot topic for research [BLA + 94, MBES94]. Eventually network interfaces will no longer overshadow the routing time in the network.
Reference: [KK79] <author> P. Kermani and L. Kleinrock. </author> <title> Virtual cut-through: A new computer communication switching technique. </title> <journal> Computer Networks, </journal> <volume> 3 </volume> <pages> 267-286, </pages> <year> 1979. </year>
Reference-contexts: Messages are 20 flits long and buffers can hold an entire message exactly. In this case for a 256-node 2D torus (mesh), the maximum normalized applied load (1.0) corresponds to the applied load of one message every 80 (160) cycles. Virtual cut-through flow control is used <ref> [KK79] </ref>. This avoids store-and-forward latency penalties. With virtual cut-through, a buffer may contain parts of two distinct messages. The traffic patterns considered are found in the literature, and are generally thought to be difficult, useful, or both. The following describes the traffic patterns simulated.
Reference: [Kon94] <author> S. Konstantinidou. </author> <title> The segment router: a novel router design for parallel computers. </title> <booktitle> In Proc. of the Sym. of Parallel Algorithms and Architectures, </booktitle> <pages> pages 364-373, </pages> <year> 1994. </year>
Reference-contexts: Dally increased throughput of wormhole algorithms by adding virtual channels to separate the buffering resources from the transmission resources of the router [Dal92]. Konstantinidou reduced overall message latency in bimodal length traffic by introducing segment routing <ref> [Kon94] </ref>. Segment routing provides a separate buffer for large messages, allowing small messages to pass larger ones. Cherkasova and Rokicki replaced FIFO injection, the traditional method of introducing messages into the network, with alpha scheduling [CR94].
Reference: [KS94] <author> S. Konstantinidou and L. Snyder. </author> <title> The chaos router. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 43(12) </volume> <pages> 1386-97, </pages> <month> December </month> <year> 1994. </year>
Reference-contexts: The router tries to find a message in an input buffer that needs to be routed to the current output buffer. If messages are found, it selects one to be routed to the current output buffer. The Chaos router is a good example of an output driven router <ref> [KS94] </ref>. See Figure 2 for an example of an output driven router. Many algorithms can be implemented as either input or output driven algorithms. For these algorithms, it would be advantageous to implement the router with the best performing 2 S input output crossbar N S deliveryinjection E buffer.
Reference: [LC94] <author> Z. Liu and A.A. Chien. </author> <title> Hierarchical adaptive routing: A framework for fully adaptive and deadlock-free wormhole routing. </title> <booktitle> In Sym. on Par. and Distr. Processing, </booktitle> <pages> pages 688-695, </pages> <year> 1994. </year>
Reference-contexts: Numerous frameworks have been presented for developing deadlock-free algorithms with varying complexity, resource requirements, and switching techniques <ref> [DS87, LH91, Dua93, Dua95, GN94, CK92, SJ95, LC94] </ref>. Each of these factors influences the overall performance of the router. Nevertheless, only a few studies have been devoted to improving performance or comparing various implementations of a routing algorithm.
Reference: [LH91] <author> D. H. Linder and J. C. Harden. </author> <title> An adaptive and fault tolerant wormhole routing strategy for k-ary n-cubes. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-40(1):2-12, </volume> <month> January </month> <year> 1991. </year>
Reference-contexts: Numerous frameworks have been presented for developing deadlock-free algorithms with varying complexity, resource requirements, and switching techniques <ref> [DS87, LH91, Dua93, Dua95, GN94, CK92, SJ95, LC94] </ref>. Each of these factors influences the overall performance of the router. Nevertheless, only a few studies have been devoted to improving performance or comparing various implementations of a routing algorithm.
Reference: [LL74] <author> G.P. Learmonth and P.A.W. Lewis. </author> <title> Statistical tests of some widely used and recently proposed uniform ran dom number generators. </title> <booktitle> In Proc. of the 7th Conf. on Comp. Sci, and Stats. Interface, </booktitle> <year> 1974. </year>
Reference-contexts: The sources 2 The network bisection is the minimum number of channels cut to divide the network in half. 5 of randomness are provided by a prime-modulus, multiplicative congruential generator <ref> [LL74] </ref> which is considered highly reliable for simulation studies [LO89]. 4 Results The results are presented in two parts. The first set of experiments compare output driven routers to input driven routers that choose deterministically the first available output buffer from the set of needed output buffers.
Reference: [LO89] <author> P.A.W. Lewis and E.J. Orav. </author> <title> Uniform Pseudo-Random Variable Generation. </title> <publisher> Wadsworth Brooks/Cole, </publisher> <year> 1989. </year> <month> 13 </month>
Reference-contexts: The sources 2 The network bisection is the minimum number of channels cut to divide the network in half. 5 of randomness are provided by a prime-modulus, multiplicative congruential generator [LL74] which is considered highly reliable for simulation studies <ref> [LO89] </ref>. 4 Results The results are presented in two parts. The first set of experiments compare output driven routers to input driven routers that choose deterministically the first available output buffer from the set of needed output buffers.
Reference: [MBES94] <author> N. McKenzie, K. Bolding, C. Ebeling, and L. Snyder. CRANIUM: </author> <title> An interface for message passing on adaptive packet routing networks. </title> <booktitle> In Lecture Notes in Computer Science, </booktitle> <volume> volume 853, </volume> <pages> pages 266-80, </pages> <year> 1994. </year>
Reference-contexts: Nevertheless, research has reduced this overhead [vEDCGS92, Dal90, Kea94] and exposed the network interface. Designing low latency network interfaces has become a hot topic for research <ref> [BLA + 94, MBES94] </ref>. Eventually network interfaces will no longer overshadow the routing time in the network. Then, both the routing algorithm and its implementation will have an impact on communication performance.
Reference: [Mu~n91] <author> David Mu~noz. </author> <title> Multivariate standardized time series in the analysis of simulation out put. </title> <type> Technical Report TR-68, </type> <institution> Operations Research, Stanford University, </institution> <address> Palo Alto, CA, </address> <month> April </month> <year> 1991. </year>
Reference-contexts: Perfect shu*e communication occurs in ascend/descend algorithms [PV81] while the transpose and bit reversal are important because they occur in practical computations. The simulator is written in C and uses a batch means method <ref> [Mu~n91] </ref> for computing 95% confidence intervals for the expected values of network throughput and latency.
Reference: [PV81] <author> F. Preparata and J. Vuillemin. </author> <title> The cube-connected cycles: a versatile network for parallel computation. </title> <journal> Communications of the ACM, </journal> <volume> 24(5) </volume> <pages> 300-309, </pages> <year> 1981. </year>
Reference-contexts: The complement is a particularly difficult permutation. Given an imaginary x and y axis though the center of a mesh or torus network, the complement destination is the composition of the x and y axis reflection of the source. Perfect shu*e communication occurs in ascend/descend algorithms <ref> [PV81] </ref> while the transpose and bit reversal are important because they occur in practical computations. The simulator is written in C and uses a batch means method [Mu~n91] for computing 95% confidence intervals for the expected values of network throughput and latency.
Reference: [SJ95] <author> L. Schwiebert and D.N. Jayasimha. </author> <title> A universal proof technique for deadlock-free routing in interconnection networks. </title> <booktitle> In Proc. of the Sym. on Par. Alg. and Arch., </booktitle> <pages> pages 175-184, </pages> <year> 1995. </year>
Reference-contexts: Numerous frameworks have been presented for developing deadlock-free algorithms with varying complexity, resource requirements, and switching techniques <ref> [DS87, LH91, Dua93, Dua95, GN94, CK92, SJ95, LC94] </ref>. Each of these factors influences the overall performance of the router. Nevertheless, only a few studies have been devoted to improving performance or comparing various implementations of a routing algorithm.
Reference: [vEDCGS92] <author> T. von Eicken D.E. Culler, S.C. Goldstein, and K.E. Schauser. </author> <title> Active messages: a mechanism for integrated communication and computation. </title> <booktitle> In Proc. of the Intl. Sym. on Computer Arch., </booktitle> <pages> pages 256-266, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: A shorter version of this paper appears in Lecture Notes in Computer Science, volume 1123, pages 195-204, 1996. software overhead for sending and receiving messages. Nevertheless, research has reduced this overhead <ref> [vEDCGS92, Dal90, Kea94] </ref> and exposed the network interface. Designing low latency network interfaces has become a hot topic for research [BLA + 94, MBES94]. Eventually network interfaces will no longer overshadow the routing time in the network.
References-found: 26

