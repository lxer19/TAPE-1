URL: http://www.frc.ri.cmu.edu/~patrick/proposal.ps
Refering-URL: http://www.frc.ri.cmu.edu/~patrick/resume.html
Root-URL: 
Title: Increasing Productivity for Autonomous Mass Excavation  
Author: Patrick Rowe 
Degree: A Thesis Proposal  
Address: Pittsburgh, PA 15217  
Affiliation: Robotics Institute Carnegie Mellon University  
Date: May 23, 1997 1  May 23, 1997  
Note: Thesis Proposal  
Abstract: This research focuses on the problem of increasing productivity for the task of autonomous mass excavation. Autonomous excavation has the benefits of higher productivity, lower labor costs, increased safety, and the ability to work in hazardous environments. Mass excavation involves rapidly loading trucks with soil/rock/ore using a mobile digging machine with a bucket on an arm-like appendage. It is desirable for this operation to proceed very quickly, load the trucks evenly, avoid excessive spillage, and perform safely while operating in a wide variety of possible digging conditions and worksite configurations. Preliminary work has been done on planning the excavators motions using a script-based approach, which takes advantage of the fact that the excavators motions are very similar for each bucket load, but the kinematic details can change due to changes in digging, dumping, and truck locations. Currently these kinematic details, also known as the script parameters, are computed using inverse kinematics, simple machine models, heuristics, and magic numbers which need to be adjusted from time to time. To date, this technique has worked very well on our test site, with autonomous excavator productivity approaching that of a skilled human operator. It is unclear, however, if the current script parameter computation will achieve the same results on different materials and in different worksite configurations, or if the productivity could be increased even more. This research proposes the idea of using information gathered on-line as the excavator performs its task in its current working conditions as a better way of computing the script parameters. Information about an excavator action, i.e. one set of script parameters, and the results of that action, such as the execution time, location of dumped soil, etc., would be recorded. Robot learning techniques, particularly memory-based learning, have been investigated as a method of using this information to compute the excavators next action which will better achieve its performance goals. Preliminary results of a simple learning system show it is possible for the excavator to become faster and more accurate with manipulating the soil. It is believed this proposed approach will result in productivity that equals or exceeds human operators while maintaining the ability to be productive in a wide range of working conditions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Albus, J., </author> <year> 1981. </year> <title> Brains, Behavior, and Robotics. </title> <publisher> BYTE Press. </publisher>
Reference-contexts: With neural networks, considerable computation is required to produce these items. Other discussions of memory based learning vs. neural networks can be found in [3, 21]. There are many other function approximators that can be used such as radial basis functions, CMACs <ref> [1] </ref>, decision trees [13], and so forth. This research is not concerned with surveying and comparing the different methods but rather selecting one method and building a working learning system with the chosen learning paradigm.
Reference: [2] <author> Arora, J., </author> <year> 1989. </year> <title> Introduction to Optimum Design. </title> <publisher> McGraw-Hill, Inc. </publisher>
Reference-contexts: With this technique, selecting the next action has been stated as an optimization problem. There are many techniques for optimization of a function <ref> [2, 29] </ref>. This approach looks promising because the learning system will select what it believes to be the best action to take given what it knows so far, as opposed to a random action which could be quite dangerous for this application. <p> The linearity of the input space also offers the possibility of using algorithms such as linear programming which are guaranteed to find the global minimum if one exists <ref> [2] </ref>. The figures below show the results of running with a cost function of where and . The upper plot shows the overall cost, the middle plot shows the time, and the lower plot shows the combined radial and tangential squared error.
Reference: [3] <author> Atkeson, C., Moore, A., and Schaal, S., </author> <year> 1997. </year> <title> Locally Weighted Learning. </title> <note> to appear in AI Review. </note>
Reference-contexts: Neural networks typically require much training data and a relatively long time to train and compute the weights. Another function approximation technique which takes ideas from global regression and nearest neighbor is locally weighted regression <ref> [3] </ref>. In this approach, a simple local model is used to fit the data. Points in the data base are assigned a weight which is proportional to their distance from the input action. Typically an exponential weighting term is used. <p> With neural networks, considerable computation is required to produce these items. Other discussions of memory based learning vs. neural networks can be found in <ref> [3, 21] </ref>. There are many other function approximators that can be used such as radial basis functions, CMACs [1], decision trees [13], and so forth.
Reference: [4] <author> Duda, R., and Hart, P., </author> <year> 1973. </year> <title> Pattern Classification and Scene Analysis. </title> <publisher> John Wiley & Sons. </publisher>
Reference-contexts: There are many ways of doing this ranging from simple to sophisticated and complex. One simple method is nearest neighbor, a technique often used for pattern classification <ref> [4] </ref>. In this approach, the distance from the candidate action to all other actions stored in the data base is computed, and the output of the closest stored action to the candidate action is returned.
Reference: [5] <author> Lever, P., Wang, F., and Chen, D., </author> <year> 1994. </year> <title> A Fuzzy Control System for an Automated Mining Excavator. </title> <booktitle> in Proceedings of International Conference on Robotics and Automation, </booktitle> <pages> pp. 3284-3289. </pages>
Reference-contexts: Another type of rule based system has been developed by a group at the University of Ar-izona <ref> [5, 22, 23] </ref>. In their system, excavation tasks, such as loading a truck, are broken down into constituent behaviors, which themselves are made up of lower level primitive actions. Sets of tasks and behaviors are organized into finite state machines.
Reference: [6] <author> Moore, A., </author> <year> 1990. </year> <title> Efficient Memory-based Learning for Robot Control. </title> <type> Ph.D. Thesis. </type> <institution> University of Cambridge. </institution> <note> Computer Science Technical Report 209. </note>
Reference-contexts: One improvement is to take the average of the outputs of the k nearest neighbors, which could help in smoothing the noise, but still suffers if the neighbors are very far away from the candidate input action. Several robot learning systems have been implemented based on nearest neighbor <ref> [6] </ref>. A slightly more complicated means of approximating a function is by global parametric regression. This assumes an underlying basis function, such as a polynomial, whose coefficients are computed in such a way to minimize some error metric between predicted and actual data. <p> Schneider [18] used an interpolation approach which creates a new action from a linear combination of previous actions in the data base. Moores SAB action chooser <ref> [6] </ref> generates actions at random, but uses a notion of reliability of the predicted accuracy as a way to prioritize the actions.
Reference: [7] <author> Moore, A., Atkeson, C., and Schaal, S., </author> <year> 1995. </year> <title> Memory-Based Learning for Control. </title> <type> CMU Technical Report CMU-RI-TR-95-18. </type>
Reference-contexts: Incorrectly inverted models could lead to situations where the robot repeats the same mistake over and over again and does not learn or improve <ref> [7, 21] </ref>. A simple 1-D example is shown in the figure below 1 . The true inverse, which is not a function, is shown in the middle graph. The function that would be fitted to the data points is shown in the far right plot. <p> This is in contrast to algorithms such as global parametric regression and neural networks where the parameters of the fitted function only need to be remembered, not all of the data. Both approaches have been used to successfully learn and control robots <ref> [7, 9, 10] </ref>. The approaches have their advantages and disadvantages which will be discussed Thesis Proposal May 23, 1997 17 below in the context of the mass excavation task.
Reference: [8] <author> Moore, A., and Schneider, J., </author> <year> 1995. </year> <title> Memory-based Stochastic Optimization. </title> <booktitle> Neural Information Processing Systems- 8. </booktitle>
Reference-contexts: Moore and Schneider have explored function optimization using the memory based learning paradigm <ref> [8] </ref>. A variety of different optimization techniques were tried, with variations on how confidence measures are used, to optimize noisy nonlinear functions.
Reference: [9] <author> Moore, A., Atkeson, C., and Schaal, S., </author> <year> 1997. </year> <title> Locally Weighted Learning for Control. </title> <note> to appear in AI Review. </note>
Reference-contexts: This is in contrast to algorithms such as global parametric regression and neural networks where the parameters of the fitted function only need to be remembered, not all of the data. Both approaches have been used to successfully learn and control robots <ref> [7, 9, 10] </ref>. The approaches have their advantages and disadvantages which will be discussed Thesis Proposal May 23, 1997 17 below in the context of the mass excavation task.
Reference: [10] <author> Pomerleau, D., </author> <year> 1993. </year> <title> Neural Network Perception for Mobile Robot Guidance. </title> <address> Kluw-er, Dordrecht, Netherlands. </address>
Reference-contexts: This is in contrast to algorithms such as global parametric regression and neural networks where the parameters of the fitted function only need to be remembered, not all of the data. Both approaches have been used to successfully learn and control robots <ref> [7, 9, 10] </ref>. The approaches have their advantages and disadvantages which will be discussed Thesis Proposal May 23, 1997 17 below in the context of the mass excavation task.
Reference: [11] <author> Press, W., Teukolsky, S., Vetterling, W., and Flannery, B., </author> <year> 1992. </year> <title> Numerical Recipes in C. </title> <publisher> Cambridge University Press. </publisher>
Reference-contexts: Three different b vectors were computed for each prediction for the 3 different outputs. Once b has been computed, the predicted output is simply The action selection algorithm that was chosen was the downhill simplex method <ref> [11] </ref>. This was fairly easy to implement, runs very fast, and does not require gradient information, but can have problems falling into local minima which are not at acceptable performance levels.
Reference: [12] <author> Quinlan, J., </author> <year> 1993. </year> <title> C4.5: Programs for Machine Learning. </title> <address> Morgan-Kaufman, San Ma-teo, California. </address>
Reference: [13] <author> Rocke, D. </author> <year> 1995. </year> <title> Automatic Excavation Control System and Method. </title> <type> US Patent No. 05446980. </type> <note> Summer 1998 Finalize learning system and continue to extend digging sys tem. Write thesis. Fall 1998 Defend. Graduate. Thesis Proposal May 23, 1997 30 </note>
Reference-contexts: It is this Thesis Proposal May 23, 1997 11 idea that makes up the core of the proposed research and will be further discussed in Section 5.0. 4.4 AutoDig The digging algorithm, known as AutoDig <ref> [13] </ref>, is similar in nature to the parameterized script approach, but with a few differences. It is similar in that the digging process is described as a series of steps shown below, with transitions that take place when certain events occur. <p> With neural networks, considerable computation is required to produce these items. Other discussions of memory based learning vs. neural networks can be found in [3, 21]. There are many other function approximators that can be used such as radial basis functions, CMACs [1], decision trees <ref> [13] </ref>, and so forth. This research is not concerned with surveying and comparing the different methods but rather selecting one method and building a working learning system with the chosen learning paradigm.
Reference: [14] <author> Rowe, P., and Stentz, A., </author> <year> 1996. </year> <title> Parameterized Scripts for Motion Planning. </title> <booktitle> To appear in Proceedings of International Conference on Intelligent Robots and Systems. </booktitle>
Reference-contexts: The exact spot of where to dump the earth in the truck is not always the same, nor is the location of the next dig. The new algorithm that was devised and implemented for planning the excavators motions is referred to as parameterized scripts <ref> [14] </ref>. A script can be thought of as a general template which describes how to do a certain task as a series of simple steps.
Reference: [15] <author> Russell, S., and Norvig, P., </author> <year> 1995. </year> <title> Artificial Intelligence A Modern Approach. </title> <publisher> Prentice-Hall Inc., </publisher> <address> NJ. </address>
Reference-contexts: One problem with this approach, of course, is selecting the right basis functions. It also assumes there is one global set of coefficients which fit all of the data well, which may prove inadequate for complex and highly nonlinear systems. Neural networks <ref> [15] </ref> are another means of approximating a highly nonlinear function. They are similar to global parametric regression in the sense that the weights in the network are the parameters which are computed, typically through gradient descent, but the underlying basis function is determined by the networks architecture. <p> In other instances, where the dimensionality is high (say above 3 or 4), some possibilities may be choosing actions at random, or perhaps making random alterations to the best actions so far, much in the way genetic algorithms operate <ref> [15] </ref>. Schneider [18] used an interpolation approach which creates a new action from a linear combination of previous actions in the data base. Moores SAB action chooser [6] generates actions at random, but uses a notion of reliability of the predicted accuracy as a way to prioritize the actions.
Reference: [16] <author> Seward, D., </author> <year> 1992. </year> <title> LUCIE - The Autonomous Robot Excavator. </title> <journal> Industrial Robot International Quarterly. </journal> <volume> Vol. 19., No. 1. </volume> <pages> pp. 14-18. </pages>
Reference-contexts: Other researchers have forgone explicit trajectory tracking and instead have used rule based systems for generating the motions of an autonomous excavator. A research group at the University of Lancaster, England <ref> [16, 17] </ref> uses a production system with a large number of rules (about 70) which can deal with the variability in digging.
Reference: [17] <author> Seward, D., Margrave, F., Sommerville, I., and Morrey, R. </author> <year> 1996. </year> <title> LUCIE the Robot Excavator Design for System Safety. </title> <booktitle> in Proceedings of International Conference on Robotics and Automation. </booktitle> <pages> pp. 963-968. </pages>
Reference-contexts: Other researchers have forgone explicit trajectory tracking and instead have used rule based systems for generating the motions of an autonomous excavator. A research group at the University of Lancaster, England <ref> [16, 17] </ref> uses a production system with a large number of rules (about 70) which can deal with the variability in digging.
Reference: [18] <author> Schneider, J., </author> <year> 1995. </year> <title> Robot Skill Learning Through Intelligent Experimentation. </title> <type> Ph.D. Thesis. </type> <institution> University of Rochester. </institution> <note> Computer Science Technical Report 567. </note>
Reference-contexts: In other instances, where the dimensionality is high (say above 3 or 4), some possibilities may be choosing actions at random, or perhaps making random alterations to the best actions so far, much in the way genetic algorithms operate [15]. Schneider <ref> [18] </ref> used an interpolation approach which creates a new action from a linear combination of previous actions in the data base. Moores SAB action chooser [6] generates actions at random, but uses a notion of reliability of the predicted accuracy as a way to prioritize the actions. <p> Performance Several robot learning systems require a period of experimentation or practice in order to explore areas of the action space which may ultimately lead to a more optimal result <ref> [18] </ref>. Then, during performance mode, no exploration is performed and only the best actions of the currently learned model are used. Unfortunately, this may not be possible in the truck loading application because of the issues of safety and soil spillage.
Reference: [19] <author> Schneider, J., and Brown, C., </author> <year> 1995. </year> <title> Cooperative Coaching in Robot Learning. </title> <booktitle> in Proceedings of International Conference on Intelligent Robots and Systems, </booktitle> <volume> Vol. 3, </volume> <pages> pp. 332-337. </pages>
Reference: [20] <author> Schneider, J., </author> <year> 1996. </year> <title> Exploiting Model Uncertainty Estimates for Safe Dynamic Control Learning. </title> <booktitle> Neural Information Processing Systems 9. </booktitle>
Reference-contexts: A compromise must be found between task speed and efficiency, and the safety of the machine motion. The ability to learn and optimize safely is of importance to researchers and have been discussed <ref> [20] </ref>. One way of dealing with this issue is to use the notion of the confidence or reliability of the predictions.
Reference: [21] <author> Schneider, J., and Moore, A., </author> <year> 1997. </year> <title> A Locally Weighted Learning Tutorial using Vizier 1.0. </title>
Reference-contexts: Incorrectly inverted models could lead to situations where the robot repeats the same mistake over and over again and does not learn or improve <ref> [7, 21] </ref>. A simple 1-D example is shown in the figure below 1 . The true inverse, which is not a function, is shown in the middle graph. The function that would be fitted to the data points is shown in the far right plot. <p> With these problems in mind, another approach is to use the more natural representation of data points and build a forward model. This approach requires two pieces, a way of predict 1. The idea for these plots is taken from the Vizier tutorial <ref> [21] </ref> Function True inverse Fitted inverse in out out Thesis Proposal May 23, 1997 16 ing the outcomes of candidate actions, and a way of selecting an optimal action to take in what could be a high dimensional action space. 5.3.2 Function Approximation Predicting the outcome of a candidate action, can <p> With neural networks, considerable computation is required to produce these items. Other discussions of memory based learning vs. neural networks can be found in <ref> [3, 21] </ref>. There are many other function approximators that can be used such as radial basis functions, CMACs [1], decision trees [13], and so forth.
Reference: [22] <author> Shi, X., Wang, F., and Lever, P., </author> <year> 1995. </year> <title> Task and Behavior Formulations for Robotic Rock Excavation. </title> <booktitle> 10th IEEE International Symposium on Intelligent Control, </booktitle> <pages> pp. 248-253. </pages>
Reference-contexts: Another type of rule based system has been developed by a group at the University of Ar-izona <ref> [5, 22, 23] </ref>. In their system, excavation tasks, such as loading a truck, are broken down into constituent behaviors, which themselves are made up of lower level primitive actions. Sets of tasks and behaviors are organized into finite state machines.
Reference: [23] <author> Shi, X., Lever, P., and Wang F., </author> <year> 1996. </year> <title> Experimental Robotic Excavation with Fuzzy Logic and Neural Networks. </title> <booktitle> in Proceedings of International Conference on Robotics and Automation. </booktitle> <pages> pp. 957-962. </pages>
Reference-contexts: Another type of rule based system has been developed by a group at the University of Ar-izona <ref> [5, 22, 23] </ref>. In their system, excavation tasks, such as loading a truck, are broken down into constituent behaviors, which themselves are made up of lower level primitive actions. Sets of tasks and behaviors are organized into finite state machines.
Reference: [24] <author> Singh, S., </author> <year> 1995. </year> <title> Synthesis of Tactical Plans for Robotic Excavation. </title> <type> Ph.D. Thesis. </type> <institution> Carnegie Mellon University. </institution>
Reference-contexts: Like the University of Lancast-ers system, their solution to the problem involves having many rules which can do many different things, but comes at the cost of added system complexity. At the higher level problem of tactical dig planning, Singh <ref> [24, 25] </ref> explored various learning techniques. His planning system selects a parameterized digging action which optimizes a cost criterion while not violating any geometric or force constraints.
Reference: [25] <author> Singh, S., </author> <year> 1995. </year> <title> Learning to Predict Resistive Forces During Robotic Excavation. </title> <booktitle> in Proceedings of International Conference on Robotics and Automation, </booktitle> <pages> pp. 2102-2107. </pages>
Reference-contexts: Like the University of Lancast-ers system, their solution to the problem involves having many rules which can do many different things, but comes at the cost of added system complexity. At the higher level problem of tactical dig planning, Singh <ref> [24, 25] </ref> explored various learning techniques. His planning system selects a parameterized digging action which optimizes a cost criterion while not violating any geometric or force constraints.
Reference: [26] <author> Singh, S., </author> <year> 1996. </year> <title> A Survey of Automation in Excavation. </title> <journal> Journal of Mining and Material Processing Institute of Japan. </journal>
Reference-contexts: Finally, Section 7.0 will give the expected contributions of this work and a schedule. 2.0 Related Research Research on autonomous excavation has been done at many levels of the problem, from low level trajectory control to high level strategic planning. Singh <ref> [26] </ref> presents a survey of current state of the art autonomous excavation systems. This section will offer a brief description of several systems, focusing primarily on what other learning techniques have been applied to the problem of autonomous excavation.
Reference: [27] <author> Singh, S., and Kelly, A., </author> <year> 1996. </year> <title> Robot Planning in the Space of Feasible Actions: Two Examples. </title> <booktitle> in Proceedings of International Conference on Robotics and Automation, </booktitle> <pages> pp. 3309-3316. </pages> <note> Thesis Proposal May 23, 1997 31 </note>
Reference-contexts: There are a number of ways to choose an action. If the dimensionality of the action space is small enough, then a brute force search over all actions at some finite resolution may be acceptable <ref> [27] </ref>. In other instances, where the dimensionality is high (say above 3 or 4), some possibilities may be choosing actions at random, or perhaps making random alterations to the best actions so far, much in the way genetic algorithms operate [15].
Reference: [28] <author> Song, B., and Koivo, A., </author> <year> 1995. </year> <title> Neural Adaptive Control of Excavators. </title> <booktitle> in Proceedings of International Conference on Intelligent Robots and Systems, </booktitle> <volume> Vol. 1, </volume> <pages> pp. 162-167. </pages>
Reference-contexts: This is a challenging problem because of the variability of the soil conditions, the difficulty in modeling the interaction between the bucket and the soil, and dealing with problems like encountering large boulders which could mean having to adjust the current digging plan. Researchers at Purdue University <ref> [28] </ref> improved their controller by adding a feed-forward torque term to the control torques computed by a PD feedback controller. The feed-forward torque was found using a neural network, which was trained to compute the inverse dynamics of the excavator.
Reference: [29] <author> Taha, H., </author> <year> 1987. </year> <title> Operations Research: An Introduction. </title> <publisher> Collier Macmillan, </publisher> <address> New York. </address>
Reference-contexts: With this technique, selecting the next action has been stated as an optimization problem. There are many techniques for optimization of a function <ref> [2, 29] </ref>. This approach looks promising because the learning system will select what it believes to be the best action to take given what it knows so far, as opposed to a random action which could be quite dangerous for this application.
References-found: 29

