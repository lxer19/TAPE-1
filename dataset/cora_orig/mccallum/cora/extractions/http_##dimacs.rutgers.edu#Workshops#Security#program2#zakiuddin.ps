URL: http://dimacs.rutgers.edu/Workshops/Security/program2/zakiuddin.ps
Refering-URL: http://dimacs.rutgers.edu/Workshops/Security/program2/program.html
Root-URL: http://www.cs.rutgers.edu
Title: Modelling and Analysis of Security Protocols  
Author: Peter Ryan and Irfan Zakiuddin 
Address: Malvern  
Affiliation: DRA,  
Abstract: We outline the aims and principle results of a research programme aimed at developing tools and techniques for the analysis and design of security protocols. The aim was to move away from specially tailored frameworks and tools and apply well-established, mainstream formal methods and tools to the problem. The main thrust was to apply CSP and model-checking however some other strands: the B-method, Action Systems and theorem proving (using PVS), are also outlined. 
Abstract-found: 1
Intro-found: 1
Reference: [JRA1] <author> J-R ABRIAL, </author> <title> The B Book: Assigning Programs to Meanings, CUP 1996. </title>
Reference-contexts: As part of the project Abrial built on this earlier work and developed a very elegant analysis technique using B-refinement. We briey outline this in section 9 and refer the interested reader to, <ref> [JRA1, JRA2] </ref> for more details. In the final year of the project Michael Butler was funded to investigate the application of Action Systems and in particular the links between the B-method and Action Systems. A number of previous results of the project were reworked in the Action Systems formalism. <p> The process of analysis is thus much more efficient and less error prone. CASPER continues to be developed to handle a wider class of protocols and security properties: timing properties, algebraic rewriting etc. 18 9 The B-method The B-method is another promising formal method developed by J-R Abrial, <ref> [JRA1] </ref>. It too has a suite of powerful tools and has been used extensively on real, industrial applications like the verification of the control system for the new driverless trains in the Paris Metro. It differs from CSP in being more state-based whilst being less suited to dealing with concurrency.
Reference: [JRA2] <author> J-R ABRIAL, </author> <title> Extending B without Changing it (for Developing Distributed Systems), November 1996, </title> <booktitle> Proceedings of the 1st B Conference, </booktitle> <address> Nantes. </address>
Reference-contexts: As part of the project Abrial built on this earlier work and developed a very elegant analysis technique using B-refinement. We briey outline this in section 9 and refer the interested reader to, <ref> [JRA1, JRA2] </ref> for more details. In the final year of the project Michael Butler was funded to investigate the application of Action Systems and in particular the links between the B-method and Action Systems. A number of previous results of the project were reworked in the Action Systems formalism.
Reference: [JRA3] <author> J-R ABRIAL and I MUSSAT, </author> <title> Specification and Design of a Transmission Protocol by Successive Refinements Using B, </title> <note> to appear in the Proceedings of the Marktoberdorf Summer School (July 1996) Springer LNCS. </note>
Reference: [MJB1] <author> M J BUTLER, </author> <title> A CSP Approach to Action Systems, D.Phil. </title> <type> thesis, </type> <institution> PRG Oxford University 1992. </institution>
Reference-contexts: A number of previous results of the project were reworked in the Action Systems formalism. The correspondence between CSP, Action Systems and the B-method potentially allows the integration or at least federation of techniques and tools developed under the project. See <ref> [MJB1, MJB2] </ref>. 4 3 The Model 3.1 Architecture In this section we outline the way the abstract system models are constructed in CSP. This will form the basis for the work described later on the use of FDR and the construction of proofs using rank functions. <p> At the same time a precise correspondence had already been established between Action Systems and CSP, initially by Carroll Morgan [CCM] and further developed by Butler in his DPhil, <ref> [MJB1] </ref>. This gives rise to the possibility of taking the best features of all three techniques and producing a powerful synthesis. The idea is not to try to produce a single combined framework but to be able to move smoothly between the frameworks as convenient.
Reference: [BAN] <author> BURROWS, ABADI, NEEDHAM. </author> <title> A Logic of Authentication. </title> <institution> Digital Systems Research Centre Report 39, </institution> <year> 1989. </year>
Reference-contexts: Various approaches to the problem have been developed in the past. The seminal work of Burrows Abadi and Needham who developed the BAN logic, <ref> [BAN] </ref>, of authentication has greatly inuenced the subject. Early on Kemmerer, [KMM], experimented with Ina Jo. Another line of attack was that of Meadows. [KMM], to treat the problem as one of algebraic rewriting and develop the NRL Ana-lyser. A similar approach was pursued by Millen with the MITRE Interrogator.
Reference: [BM] <author> C. BOYD, W MAO. </author> <title> On a Limitation of BAN Logic. </title> <booktitle> In Lecture Notes in Computer Science, </booktitle> <volume> Volume 765. </volume> <publisher> Springer-Verlag 1993, </publisher> <pages> pages 240-247. </pages>
Reference-contexts: The drawback is that it can be difficult to interpret the exact implications of a proof performed using the logic. The idealisation process in particular is rather delicate and error prone as pointed out by Boyd and Mao, <ref> [BM] </ref>. On further reection however we realise that it is perhaps not inevitable that we use a belief logic as our principal tool for analysis. The modelling and analysis of secure systems in general has long 2 been conducted using non-logical frameworks: Z, CSP etc.
Reference: [BS] <author> J BRYANS and S A SCHNEIDER, </author> <title> CSP, PVS, and a Recursive Authentication Protocol, to be presented at DIMACS Workshop on Formal Verification of Security Protocols, </title> <month> Sept. </month> <year> 1997. </year>
Reference: [MJB2] <author> M J BUTLER, </author> <title> Action Systems and Security Protocols, </title> <month> April </month> <year> 1997, </year> <note> to appear as DRA Tech Report. </note>
Reference-contexts: A number of previous results of the project were reworked in the Action Systems formalism. The correspondence between CSP, Action Systems and the B-method potentially allows the integration or at least federation of techniques and tools developed under the project. See <ref> [MJB1, MJB2] </ref>. 4 3 The Model 3.1 Architecture In this section we outline the way the abstract system models are constructed in CSP. This will form the basis for the work described later on the use of FDR and the construction of proofs using rank functions. <p> Abrials refinement technique has been reworked by Butler in Action Systems as have several of the formalisations of security properties and protocols, <ref> [MJB2] </ref>. This work has shown that such a synthesis is both possible and useful and indeed it will have repercussions beyond the area of security protocols. 19 11 Conclusions CSP has been shown to be a very effective framework in which to formulate the behaviour and properties of security protocols.
Reference: [MJB3] <author> M J BUTLER, </author> <title> Stepwise Refinement of Communicating Systems, </title> <booktitle> Science of Computer 21 Programming, </booktitle> <volume> 27(2): </volume> <pages> 139-173, </pages> <month> September </month> <year> 1996. </year>
Reference: [CJ1] <author> J A CLARK and J L JACOB, </author> <title> Attacking Authentication Protocols, </title> <booktitle> High Integrity Systems 1(5) </booktitle> <pages> 465-474, </pages> <month> August </month> <year> 1996. </year>
Reference: [CJ2] <author> J A CLARK, J L JACOB. </author> <title> On the Security of Recent Protocols. </title> <journal> In Information Processing Letters, </journal> <volume> Volume 56, </volume> <year> 1995, </year> <pages> pages 151-155. </pages>
Reference: [CARH] <author> C A R HOARE. </author> <title> Communicating Sequential Processes. </title> <publisher> Prentice Hall, </publisher> <year> 1985. </year>
Reference-contexts: CSP is a mathematical framework for the description and analysis of systems consisting of components (processes) interacting via the exchange of messages, <ref> [CARH, AWR1] </ref>. It is clear that CSP is well suited to the study of protocols, indeed it has already been used extensively in the study of communication protocols.
Reference: [DS] <author> J DAVIES and S A SCHNEIDER, </author> <title> A Brief History of timed CSP, </title> <booktitle> Theoretical Computer Science, 1995, </booktitle> <volume> volume 138. </volume>
Reference-contexts: For many purposes this is fine but if we want to reason about timeliness, freshness, lifetimes of keys etc. we need to introduce time into our framework. A theory of Timed CSP has been developed, see for example <ref> [DS] </ref>, that deals 16 with a continuous form of time. This is too rich a model for our purposes and in any case would not be amenable to model-checking because it involves modelling continuous time. We will therefore adopt a discrete version of time: the so-called tock dialect.
Reference: [KMM] <author> A. KEMMERER, C. MEADOWS, J. MILLEN. </author> <title> Three Systems for Cryptographic Protocol Analysis. </title> <journal> In Journal of Cryptography, </journal> <year> 1994. </year>
Reference-contexts: Various approaches to the problem have been developed in the past. The seminal work of Burrows Abadi and Needham who developed the BAN logic, [BAN], of authentication has greatly inuenced the subject. Early on Kemmerer, <ref> [KMM] </ref>, experimented with Ina Jo. Another line of attack was that of Meadows. [KMM], to treat the problem as one of algebraic rewriting and develop the NRL Ana-lyser. A similar approach was pursued by Millen with the MITRE Interrogator. <p> Various approaches to the problem have been developed in the past. The seminal work of Burrows Abadi and Needham who developed the BAN logic, [BAN], of authentication has greatly inuenced the subject. Early on Kemmerer, <ref> [KMM] </ref>, experimented with Ina Jo. Another line of attack was that of Meadows. [KMM], to treat the problem as one of algebraic rewriting and develop the NRL Ana-lyser. A similar approach was pursued by Millen with the MITRE Interrogator. It seemed widely held in the community that some kind of belief logic was required to address the problem of security protocols.
Reference: [CCM] <author> C C MORGAN. </author> <title> Of wp and CSP. </title> <editor> In FEIJIN et al. </editor> <title> Beauty is our Business, A Birthday Salute to Edsger W Dijkstra. </title> <publisher> Springer Verlag, </publisher> <year> 1990. </year>
Reference-contexts: At the same time a precise correspondence had already been established between Action Systems and CSP, initially by Carroll Morgan <ref> [CCM] </ref> and further developed by Butler in his DPhil, [MJB1]. This gives rise to the possibility of taking the best features of all three techniques and producing a powerful synthesis.
Reference: [Laz1] <author> R S. LAZIC, </author> <title> A Semantic Study of Data-independence with Applications to Mechanical Verification f Concurrent System, </title> <address> Merton College, </address> <month> May </month> <year> 1997, </year> <note> A Dissertation Submitted for the Senior Mathematical Prize. </note>
Reference-contexts: Even so we have reached the stage at which to make major strides forward the approach will need to be complemented by other techniques. Principal amongst these are techniques for exploiting symmetries of the system. Here the recent work of Lazic and Roscoe, <ref> [Laz1, Laz2, LR] </ref>, is highly relevant. Another angle is to incorporate theorem proving techniques. Theorem proving has already been used to a limited sense in justifying some of the simplifying assumptions used in the FDR cod-ings.
Reference: [Laz2] <author> R.S. LAZIC, </author> <title> Theorems for mechanical verification of data-independent CSP, </title> <institution> Oxford University Computing Laboratory technical report, </institution> <year> 1997. </year>
Reference-contexts: Even so we have reached the stage at which to make major strides forward the approach will need to be complemented by other techniques. Principal amongst these are techniques for exploiting symmetries of the system. Here the recent work of Lazic and Roscoe, <ref> [Laz1, Laz2, LR] </ref>, is highly relevant. Another angle is to incorporate theorem proving techniques. Theorem proving has already been used to a limited sense in justifying some of the simplifying assumptions used in the FDR cod-ings.
Reference: [LR] <author> R.S. Lazic and A.W. Roscoe, </author> <title> A study of data-independence in CSP, </title> <note> Submitted for publication, </note> <year> 1997. </year>
Reference-contexts: The effectiveness of this approach has been demonstrated by the uncovering of several new attacks on well established protocols. Its utility as design tool is also apparent, as exemplified by its use to progressively strengthen the TMN protocol, <ref> [LR] </ref>. Here a weak version of the protocol was progressively strengthened in the light of vulnerabilities revealed by the analysis until a version was arrived at that stood up to analysis. Alternatively an over-engineered design can be progressively weakened to probe for redundancies. <p> Even so we have reached the stage at which to make major strides forward the approach will need to be complemented by other techniques. Principal amongst these are techniques for exploiting symmetries of the system. Here the recent work of Lazic and Roscoe, <ref> [Laz1, Laz2, LR] </ref>, is highly relevant. Another angle is to incorporate theorem proving techniques. Theorem proving has already been used to a limited sense in justifying some of the simplifying assumptions used in the FDR cod-ings.
Reference: [Lowe1] <author> G LOWE, </author> <title> Breaking and Fixing the Needham-Schroeder Public-Key Protocol Using FDR. </title> <editor> In MARGARIA and STEFFEN, eds. </editor> <booktitle> Tools and Algorithms for the Construction and Analysis of Systems, Volume 1055 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1996, </year> <pages> pages 147-166. </pages>
Reference: [Lowe2] <author> G LOWE, Casper: </author> <title> A Compiler for the Analysis of Security Protocols, </title> <booktitle> IEEE Computer Security Foundations Workshop, </booktitle> <year> 1997. </year>
Reference-contexts: Based on this observation Lowe, then an RA working with Roscoe at the PRG, developed a compiler to take a description of the protocol and of the security property and automatically generate the corresponding FDR code. Descriptions of this can be found for example in <ref> [Lowe2] </ref> and Lowes web page: http://www.mcs.le.ac.uk/~glowe/Security/Casper/index.html. In practice this is not entirely straightforward: the standard notation for describing protocols is notoriously ambiguous. Security protocols differ widely in their security goals and the mechanisms they employ.
Reference: [Lowe3] <author> G LOWE, </author> <title> A Hierarchy of Authentication Specifications, </title> <booktitle> IEEE Computer Security Foundations Workshop, </booktitle> <year> 1997 </year>
Reference-contexts: This could perhaps be thought of as a form of entity authentication. A detailed discussion of a hierarchy of possible notions of entity authentication is given by Lowe, <ref> [Lowe3] </ref>. 4.4 Key-exchange/distribution We will want protocols to keep keys confidential to their intended users. This is related to our confidentiality property above but differs slightly: note that it is quite possible for a protocol to keep keys confidential and yet leak plaintext if plaintext is transmitted in clear.
Reference: [LR] <author> G LOWE, </author> <title> A W ROSCOE. Using CSP to Detect Errors in the TMN Protocol. </title> <note> To appear in IEEE Transactions on Software Engineering. </note>
Reference-contexts: The effectiveness of this approach has been demonstrated by the uncovering of several new attacks on well established protocols. Its utility as design tool is also apparent, as exemplified by its use to progressively strengthen the TMN protocol, <ref> [LR] </ref>. Here a weak version of the protocol was progressively strengthened in the light of vulnerabilities revealed by the analysis until a version was arrived at that stood up to analysis. Alternatively an over-engineered design can be progressively weakened to probe for redundancies. <p> Even so we have reached the stage at which to make major strides forward the approach will need to be complemented by other techniques. Principal amongst these are techniques for exploiting symmetries of the system. Here the recent work of Lazic and Roscoe, <ref> [Laz1, Laz2, LR] </ref>, is highly relevant. Another angle is to incorporate theorem proving techniques. Theorem proving has already been used to a limited sense in justifying some of the simplifying assumptions used in the FDR cod-ings.
Reference: [LCP] <author> L PAULSON, </author> <title> Mechanised proofs for a recursive Authentication Protocol, </title> <booktitle> IEEE Proceedings of CSFW 1997. </booktitle>
Reference: [AWR1] <author> A W ROSCOE. </author> <title> The Theory and Practice of Concurrency, </title> <note> Prentice Hall 1997 to appear. 22 </note>
Reference-contexts: CSP is a mathematical framework for the description and analysis of systems consisting of components (processes) interacting via the exchange of messages, <ref> [CARH, AWR1] </ref>. It is clear that CSP is well suited to the study of protocols, indeed it has already been used extensively in the study of communication protocols.
Reference: [AWR2] <author> A W ROSCOE. </author> <title> Modelling and Verifying key-exchange Protocols using CSP and FDR. </title> <booktitle> In 8th IEEE Computer Security Foundations Workshop, </booktitle> <year> 1995, </year> <pages> pages 98-108. </pages>
Reference-contexts: In some situations it appears to be useful to employ a more tailored specification for a particular protocol. In essence, such a specification states the sequence of message transmissions and receives at each node that the protocol designer intends to reach a final success state, <ref> [AWR2] </ref>. The analysis will now show if one of the nodes can reach a commit state without the expected sequence being followed. Such a possibility is not necessarily a vulnerability but may indicate a security weakness. In any case it will point out some unintended behaviour which could prove significant.
Reference: [GR] <author> A W ROSCOE and M H GOLDSMITH, </author> <title> The Perfect ``Spy'' for Model-Checking Crypto-protocols, to be presented at DIMACS Workshop on Formal Verification of Security Protocols Sept. </title> <year> 1997. </year>
Reference: [PYAR] <author> P Y A RYAN. </author> <title> A CSP Formulation of Non-interference and Unwinding. </title> <note> Presented at the CSFW 1990 and published in Cipher Winter 1990/1. </note>
Reference-contexts: This makes available all the theory, tools and experience built up in this area. It also has the advantage that we dont have to rely on intuitions about, for example, the meaning of authentication. Various people, including one of the authors, <ref> [PYAR] </ref>, have used CSP to formulate security properties such as non-interference, non-deducability etc. In this CSP had shown itself well suited.
Reference: [RS] <author> P Y A RYAN and S A SCHNEIDER, </author> <title> An Attack on a Recursive Authentication Protocol, </title>
Reference-contexts: Paulsons analysis was perfectly valid but the way APM proposed to 17 implement the encryption give rise to some additional algebraic identities not included in the model. It was these identities that the spy could exploit. This is documented in <ref> [RS] </ref>. This illustrates the point that our models are, like all mathematical models, only ever approximations to reality. We are usually assuming that the spys only source of information is through monitoring traffic. In reality he may have other sources such as EM radiation or timing information.
References-found: 28

