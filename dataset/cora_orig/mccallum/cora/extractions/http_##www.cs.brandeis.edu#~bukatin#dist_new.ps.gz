URL: http://www.cs.brandeis.edu/~bukatin/dist_new.ps.gz
Refering-URL: http://www.cs.brandeis.edu/~bukatin/papers.html
Root-URL: http://www.cs.brandeis.edu
Title: Towards Computing Distances between Programs via Domains: a Symmetric Continuous Generalized Metric for Scott Topology
Author: Michael A. Bukatin and Joshua S. Scott 
Date: December 5, 1996  
Abstract: This paper presents a description of Scott topology on continuous Scott domains via continuous generalized distances. The continuity of these distances makes it possible to compute them in many cases. In particular, applications of this construction to semantic domains allow to compute meaningful distances between programs. The paper starts with a very simple variation of the Kopperman-Flagg generalized asymmetric distance for the Scott topology on a Scott domain described in [3]. This variation works for any continuous lattice with a countable basis and makes all distances non-negative real numbers. Unfortunately, the resulting distance is not continuous, which prevents its effective computation in many cases. A different version of generalized metric is then developed. The values are interpreted as upper estimates of real numbers. This metric is Scott continuous. It is symmetric, yet surprisingly still yields the asymmetric Scott topology. The classical metric property sacrificed is the requirement that the distance from an element to itself be zero. The intuition behind our construction is discussed. This construction is then generalized to continuous Scott domains with countable bases. The resulting distances are interval numbers. All properties described in the previous paragraph hold. When a domain is equipped with a regular countable basis, the restriction of the generalized metric on the set of total elements yields an ordinary metric. This metric on total elements coincides, somewhat surprisingly, with the restriction of our version of the symmetrized Kopperman-Flagg distance on the set of total elements. In particular, the set of compact elements forms a regular basis for any algebraic Scott domain, so the results above hold for all !-algebraic Scott domains. Recently it was found that in both the continuous cases upper estimates form Matthews partial metrics [5] and the construction is closely related to the one of O'Neill [6]. This paper describes a wider class of domains than [6] in a more intuitive way from the computational point of view. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Abbas Edalat. </author> <title> Domain theory and integration. </title> <journal> Theoretical Computer Science, </journal> <volume> 151 </volume> <pages> 163-193, </pages> <year> 1995. </year>
Reference-contexts: The induced metric would be expressed as d (x; y) + d (y; x) = (x; y) + fl (x; y) 1 = 2 fl (x; y) (x; x) (y; y), similar to the weighted metric of [5]. The actual computation of (x; y) goes as follows. Start with <ref> [0; 1] </ref> and go along the recursive enumerations of K x and K y . Whenever we discover, that some k occurs in both K x and K y , subtract w (k) from the upper boundary. <p> 0 , and take k 2 K x 0 , k 62 K x . k 2 K x 0 implies k 62 I x , which together with k 62 K x implies k 62 U , k 62 V | contradiction. 2 Lemma 5.7 ffi (x; x) = <ref> [0; 1] </ref> iff u (x; x) = 1 iff x = ?. <p> Start with <ref> [0; 1] </ref> and go along the recursive enumerations of K x , K y , I x , and I y . <p> In fact, it is quite possible that l (x; y) 6= 0, but l (x; z) = l (z; y) = 0. For example, recall our distance on interval numbers described in the Introduction. The distance between [2; 2] and [3; 3] is <ref> [1; 1] </ref>, but the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to [0; 1]. <p> For example, recall our distance on interval numbers described in the Introduction. The distance between [2; 2] and [3; 3] is [1; 1], but the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to <ref> [0; 1] </ref>. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. <p> We always considered measure theory together with the ability to integrate and to take pseudo-random elements according to some distribution from a reasonable neighborhood as the first candidate for such import. We hope that recently emerging applications of domains to measure theory (see <ref> [1] </ref>), and the widespread use of valuations indicate that applications of measure theory to domains will be soon within reach. If this goal is achieved, a lot of algorithms from numerical analysis including some optimization methods will become immediately applicable to sets of programs.
Reference: [2] <author> R. Hoofman. </author> <title> Continuous information systems. </title> <journal> Information and Computation, </journal> <volume> 105(1) </volume> <pages> 42-71, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: In fact, it is quite possible that l (x; y) 6= 0, but l (x; z) = l (z; y) = 0. For example, recall our distance on interval numbers described in the Introduction. The distance between <ref> [2; 2] </ref> and [3; 3] is [1; 1], but the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances <p> In fact, it is quite possible that l (x; y) 6= 0, but l (x; z) = l (z; y) = 0. For example, recall our distance on interval numbers described in the Introduction. The distance between <ref> [2; 2] </ref> and [3; 3] is [1; 1], but the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; <p> For example, recall our distance on interval numbers described in the Introduction. The distance between [2; 2] and [3; 3] is [1; 1], but the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal <p> For example, recall our distance on interval numbers described in the Introduction. The distance between [2; 2] and [3; 3] is [1; 1], but the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. <p> The distance between <ref> [2; 2] </ref> and [3; 3] is [1; 1], but the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. <p> and [3; 3] is [1; 1], but the distances between <ref> [2; 2] </ref> and [2; 3] and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. We see two problems with our current construction. <p> is [1; 1], but the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. We see two problems with our current construction. <p> the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. We see two problems with our current construction. <p> Thus the lower estimate of the distance between <ref> [2; 2] </ref> and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. We see two problems with our current construction. First, it does not incorporate some natural examples, like the example of the distance on interval numbers in the Introduction, mainly due to the excessive reliance on countable bases. <p> of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. We see two problems with our current construction. First, it does not incorporate some natural examples, like the example of the distance on interval numbers in the Introduction, mainly due to the excessive reliance on countable bases.
Reference: [3] <author> Ralph Kopperman and Bob Flagg. </author> <title> The asymmetric topology of computer science. </title> <editor> In S. Brooks et al., editor, </editor> <booktitle> Mathematical Foundations of Programming Semantics, volume 802 of Lecture Notes in Computer Science, </booktitle> <pages> pages 544-553. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: In fact, it is quite possible that l (x; y) 6= 0, but l (x; z) = l (z; y) = 0. For example, recall our distance on interval numbers described in the Introduction. The distance between [2; 2] and <ref> [3; 3] </ref> is [1; 1], but the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] <p> For example, recall our distance on interval numbers described in the Introduction. The distance between [2; 2] and [3; 3] is [1; 1], but the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal <p> For example, recall our distance on interval numbers described in the Introduction. The distance between [2; 2] and [3; 3] is [1; 1], but the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. <p> For example, recall our distance on interval numbers described in the Introduction. The distance between [2; 2] and <ref> [3; 3] </ref> is [1; 1], but the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. <p> The distance between [2; 2] and <ref> [3; 3] </ref> is [1; 1], but the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. <p> is [1; 1], but the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. We see two problems with our current construction. <p> the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. We see two problems with our current construction. <p> [2; 2] and [2; 3] and between [2; 3] and <ref> [3; 3] </ref> are equal to [0; 1]. Thus the lower estimate of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. We see two problems with our current construction. <p> Thus the lower estimate of the distance between [2; 2] and <ref> [3; 3] </ref> is 1, but the lower estimates of the distances between [2; 2] and [2; 3] and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. We see two problems with our current construction. First, it does not incorporate some natural examples, like the example of the distance on interval numbers in the Introduction, mainly due to the excessive reliance on countable bases. <p> of the distance between [2; 2] and [3; 3] is 1, but the lower estimates of the distances between [2; 2] and <ref> [2; 3] </ref> and between [2; 3] and [3; 3] are equal to 0. The reason for this is that [2; 2] and [3; 3] are different refinements of [2; 3] themselves. We see two problems with our current construction. First, it does not incorporate some natural examples, like the example of the distance on interval numbers in the Introduction, mainly due to the excessive reliance on countable bases. <p> Second, it is very sensitive to such operations as an addition of a new top element to a domain the distance in <ref> [3] </ref> does not have this problem. This problem comes from focusing too much on T otal (A). We hope to be able to 11 overcome these two problems via generalizing the ideas of this paper and [6].
Reference: [4] <author> S. G. Matthews. </author> <title> An extensional treatment of lazy data flow deadlock. </title> <journal> Theoretical Computer Science, </journal> <volume> 151(1) </volume> <pages> 195-205, </pages> <month> 13 November </month> <year> 1995. </year>
Reference: [5] <author> S.G. Matthews. </author> <title> Partial metric topology. </title> <editor> In S. Andima et al., editor, </editor> <booktitle> Papers on General Topology and Applications: Eighth Summer Conference at Queens College (1992), volume 728 of Annals of the New York Academy of Sciences, </booktitle> <pages> pages 183-197, </pages> <address> New York, NY, </address> <year> 1994. </year>
Reference-contexts: Introduction for an example of this type of distance on interval numbers. This distance was found during the search for a metric-like structure which would satisfy the triangle inequality and Theorems 4.1, 4.2. Recently Bob Flagg helped us to realize that is a Matthews partial distance <ref> [5] </ref>. We would like to observe that the equality d (x; y) = (x; y)(x; x) holds and serves as a manifestation of Theorem 4.1 of [5]. Thus Lemma 4.4 implies Lemma 3.1, finally explaining some of the intuition behind d (x; y). <p> Recently Bob Flagg helped us to realize that is a Matthews partial distance <ref> [5] </ref>. We would like to observe that the equality d (x; y) = (x; y)(x; x) holds and serves as a manifestation of Theorem 4.1 of [5]. Thus Lemma 4.4 implies Lemma 3.1, finally explaining some of the intuition behind d (x; y). It turns out that our construction closely resembles one by O'Neill [6]. <p> The induced metric would be expressed as d (x; y) + d (y; x) = (x; y) + fl (x; y) 1 = 2 fl (x; y) (x; x) (y; y), similar to the weighted metric of <ref> [5] </ref>. The actual computation of (x; y) goes as follows. Start with [0; 1] and go along the recursive enumerations of K x and K y . Whenever we discover, that some k occurs in both K x and K y , subtract w (k) from the upper boundary. <p> This problem comes from focusing too much on T otal (A). We hope to be able to 11 overcome these two problems via generalizing the ideas of this paper and [6]. In this context, we should note that <ref> [5] </ref> advocates the focus on T otal (A). This is unlikely to work well in the applications we have in mind, because many important correct programs are inherently partial. In fact any program using its arguments directly or due to call-by-value mechanism is likely not to denote a total element.
Reference: [6] <author> S.J. O'Neill. </author> <title> Partial metrics, valuations and domain theory. </title> <institution> Research Report CS-RR-293, Department of Computer Science, University of Warwick, Coventry, UK, </institution> <month> October </month> <year> 1995. </year> <month> 12 </month>
Reference-contexts: Thus Lemma 4.4 implies Lemma 3.1, finally explaining some of the intuition behind d (x; y). It turns out that our construction closely resembles one by O'Neill <ref> [6] </ref>. It is also valuation based, but we consider continuous valuations on the powerset of K instead of continuous valuations on the domain itself, so our spaces are not O'Neill valuation spaces. The use of the valuations on the domain itself limits the approach in [6] to the domains having prime <p> closely resembles one by O'Neill <ref> [6] </ref>. It is also valuation based, but we consider continuous valuations on the powerset of K instead of continuous valuations on the domain itself, so our spaces are not O'Neill valuation spaces. The use of the valuations on the domain itself limits the approach in [6] to the domains having prime bases P due to its reliance on the P x [ P y = P xty equality. We also avoid negative-valued distances of [6]. The dual partial metric in the style of [6] would be expressed by a slightly different formula: 7 fl (x; y) <p> The use of the valuations on the domain itself limits the approach in <ref> [6] </ref> to the domains having prime bases P due to its reliance on the P x [ P y = P xty equality. We also avoid negative-valued distances of [6]. The dual partial metric in the style of [6] would be expressed by a slightly different formula: 7 fl (x; y) = 1 + (x; y) (x; x) (y; y) = W (K x [ K y ). <p> use of the valuations on the domain itself limits the approach in <ref> [6] </ref> to the domains having prime bases P due to its reliance on the P x [ P y = P xty equality. We also avoid negative-valued distances of [6]. The dual partial metric in the style of [6] would be expressed by a slightly different formula: 7 fl (x; y) = 1 + (x; y) (x; x) (y; y) = W (K x [ K y ). <p> This problem comes from focusing too much on T otal (A). We hope to be able to 11 overcome these two problems via generalizing the ideas of this paper and <ref> [6] </ref>. In this context, we should note that [5] advocates the focus on T otal (A). This is unlikely to work well in the applications we have in mind, because many important correct programs are inherently partial.
References-found: 6

