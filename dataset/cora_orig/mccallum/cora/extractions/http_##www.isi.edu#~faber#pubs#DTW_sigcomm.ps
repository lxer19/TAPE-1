URL: http://www.isi.edu/~faber/pubs/DTW_sigcomm.ps
Refering-URL: http://www.isi.edu/~faber/pubs.html
Root-URL: http://www.isi.edu
Email: faber@cs.wisc.edu and lhl@cs.wisc.edu  amarnath@central.cis.upenn.edu  
Title: DYNAMIC TIME WINDOWS: PACKET ADMISSION CONTROL WITH FEEDBACK  
Author: Theodore Faber and Lawrence H. Landweber Amarnath Mukherjee 
Address: Wisconsin Madison  Pennsylvania  
Affiliation: Department of Computer Sciences University of  Computer and Information Science Department University of  
Abstract: We present a feedback congestion control method, Dynamic Time Windows, for use in high speed wide area networks based on controlling source variance. It is part of the two-level integrated congestion control system introduced in our earlier work[1]. The method consists of a packet admission control system and a feedback system to dynamically control source burstiness. Source throughput is not modulated as with traditional packet windows, allowing system throughput to remain high while avoiding congestion. Furthermore, the admission control bounds congestion times in the network, allowing feedback to be effective in the face of large bandwidth delay products. The basic control mechanisms are analogs to traditional packet windows applied to controlling time windows anew mechanism which allows switches to modulate source variances. The proposed system is simulated, and the results reported and analyzed. Enhancements to the basic system are also proposed and analyzed. We wish to stress that the system described here is the second level of a two-level congestion control. Previous work[1] concentrated on the switch queueing mechanism, Pulse, while this work is a detailed examination of the feedback system used to adjust time windows to changing network load. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Mukherjee, A., L. Landweber, T. </author> <title> Faber, ``Dynamic Time Windows and Generalized Virtual Clock: Combined Closed Loop/Open Loop Congestion Control,'' </title> <booktitle> Proc. IEEE INFOCOM, </booktitle> <address> May 6-8, Florence, Italy, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: 1. Introduction This paper is a description of a new congestion control method called Dynamic Time Windows (DTW). DTW is the admission control portion of a two level congestion control system, the other portion of which is the Pulse queueing discipline, a generalization of Virtual Clock [2]. Our previous work <ref> [1] </ref> develops the Pulse queueing discipline and Generalized Virtual Clocks in detail. This paper is a detailed investigation of the feedback system used to manipulate the time windows. DTW is intended to operate in a high speed wide area network (HSWAN). <p> By constraining sources to behave as if the average rate they negotiate with the network is computed over the current time window, we can control the variance of source sending rates. Our earlier work has shown that manipulation of the variance is effective in controlling queue length <ref> [1] </ref>, and this is the knob that DTW uses to control congestion. DTW provides a feedback mechanism whereby the network dynamically determines the time window size for the current network state, and adapts to changes in the state. <p> This allows congestion to clear more easily and regularly enabling the feedback system to concentrate more on preventing new congestion than on clearing old congestion. The basic DTW feedback algorithms have been designed to be integrated with the Generalized Virtual Clock algorithms presented in an earlier paper <ref> [1] </ref>. <p> by queueing disciplines. hhhhhhhhhhhhhhhhhhhhh *This work was supported by an IBM Graduate Fellowship. **This work was supported by the DARPA/NSF Gigabit Testbed Program via CNRI, and the Bell Laboratories XUNET program. - -- We assume the use of some enlightened switch queuing discipline, for example Virtual Clock [2], or Pulse <ref> [1] </ref>. This paper will concentrate on the packet admission control used to control source variance, and the feedback control used to modulate the time window to adapt to medium-term congestion. <p> Throughout this section and Section 5 the term switch queue length will refer to the sum of all packets in service or awaiting service at the queue. If the switch is using a per-VC queuing scheme, like Pulse or another Generalized Virtual Clock <ref> [1] </ref>, the switch queue length is the sum of all the per-VC queues. In keeping with our two-level view of congestion control, we believe that the policing of flows is a function of the switch queuing discipline. <p> Switch disciplines like Virtual Clock have proven effective in punishing sources who violate their negotiated traffic parameters while insulating behaving sources from troublesome effects [2]. Pulse shares this property <ref> [1] </ref>, and is the means of enforcing adherence to negotiated DTW parameters in our two-level system. Pulse also guarantees fairness to sources in the sense that they receive bandwidth proportional to their peak rate [1]. <p> Pulse shares this property <ref> [1] </ref>, and is the means of enforcing adherence to negotiated DTW parameters in our two-level system. Pulse also guarantees fairness to sources in the sense that they receive bandwidth proportional to their peak rate [1]. We add no fairness enforcement to this, since DTW is designed to be used in the presence of such a queueing discipline. Our reasoning behind using the queuing discipline to guarantee these aspects of performance is simple; queuing disciplines have already proven effective in controlling them. <p> The study of multi-hop paths is work in progress. Earlier work has shown that when sources are obeying the DTW admission control policy, the queue lengths at a switch are proportional to the size of the time window <ref> [1] </ref>. - -- Because of this, we applied conventional feedback ideas to constructing the DTW feedback system, taking our cue from empirically successful packet window throughput control schemes such as DECbit [7] and TCP with Slow-Start [9].
Reference: [2] <author> Zhang, L. </author> <title> ``Virtual Clock: A News Traffic Control Algorithm for Packet Switching Networks'' Proc. </title> <booktitle> ACM SIGCOMM, </booktitle> <address> Philadelphia, </address> <year> 1990. </year>
Reference-contexts: 1. Introduction This paper is a description of a new congestion control method called Dynamic Time Windows (DTW). DTW is the admission control portion of a two level congestion control system, the other portion of which is the Pulse queueing discipline, a generalization of Virtual Clock <ref> [2] </ref>. Our previous work [1] develops the Pulse queueing discipline and Generalized Virtual Clocks in detail. This paper is a detailed investigation of the feedback system used to manipulate the time windows. DTW is intended to operate in a high speed wide area network (HSWAN). <p> issue best solved by queueing disciplines. hhhhhhhhhhhhhhhhhhhhh *This work was supported by an IBM Graduate Fellowship. **This work was supported by the DARPA/NSF Gigabit Testbed Program via CNRI, and the Bell Laboratories XUNET program. - -- We assume the use of some enlightened switch queuing discipline, for example Virtual Clock <ref> [2] </ref>, or Pulse [1]. This paper will concentrate on the packet admission control used to control source variance, and the feedback control used to modulate the time window to adapt to medium-term congestion. <p> DTW can be thought of as a leaky bucket where the rate of token restoration is based on the sending pattern of the source over the previous time window. Lixia Zhang presents another admission control method called a User Behavior Envelope <ref> [2] </ref>. Her goal is to keep a running total of source packets sent over each continuous averaging interval to insure that source variance remains finite. We use a similar method to assure that sources obey their negotiated DTW parameters. Other admission controls are similar in spirit to DTW. <p> The value of l h changes when the time window opens or closes, but this method insures correct behavior as long as the sending counter is forced to remain positive. This algorithm performs the same function as Zhang's User Behavior Envelope <ref> [2] </ref>, but we have modified the terminology and implementation to allow the source's time window to vary, thereby making DTW admission control part of a dynamic control system. 3.4. <p> In keeping with our two-level view of congestion control, we believe that the policing of flows is a function of the switch queuing discipline. Switch disciplines like Virtual Clock have proven effective in punishing sources who violate their negotiated traffic parameters while insulating behaving sources from troublesome effects <ref> [2] </ref>. Pulse shares this property [1], and is the means of enforcing adherence to negotiated DTW parameters in our two-level system. Pulse also guarantees fairness to sources in the sense that they receive bandwidth proportional to their peak rate [1].
Reference: [3] <author> Fraser, A.G., C.R. Kalmanek, A.E. Kaplan, W.T. Marshall, </author> <title> R.C. Restrick, ``XUNET 2: A Nationwide Testbed in High-Speed Networking,'' </title> <booktitle> Proc. IEEE INFOCOM, </booktitle> <address> May 6-8, Florence, Italy, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: Each switch is assumed to be capable of injecting packets into the network. Such packets are used to control the time windows of various sources. An example of such a switch is the XUNET switch <ref> [3] </ref>. The network contains data sources and sinks, which are senders and receivers of packets, and are called by the generic term nodes. A node can be both a source and a sink, but cannot be a switch.
Reference: [4] <author> Turner, J., </author> <title> ``New directions in communications (or which way to the information age?),'' </title> <journal> IEEE Comm. Magazine, </journal> <volume> vol. 24, </volume> <pages> pp. 8-15, </pages> <month> Oct. </month> <year> 1986. </year>
Reference-contexts: Previous Work This work owes much to the insights displayed in other admission methods for congestion control in high speed networks. However, DTW is unique in that it is the only such method that incorporates feedback to adapt to a changing network. With the Leaky Bucket <ref> [4] </ref>, and its variants [5],[6] a pool of tokens is maintained, where each token allows a packet transmission, but is consumed in the process. The tokens can be further characterized to indicate different loss priorities of traffic [5]. <p> Time Independence When using time windows for congestion control, it is crucial that the time windows requirement be met over any interval of length I, not just non-overlapping intervals. To insure this we use a credit method, similar to a Leaky Bucket <ref> [4] </ref>. Credits are in terms of bits. If a source has as many credits as bits in the packet it is ready to send it can send that packet, otherwise it must wait until it does, or send only as many bits of the packet as it has credits.
Reference: [5] <author> Bala, K., I. Cidon and K. Sohraby, </author> <title> ``Congestion Control in High Speed Packet Switched Networks,'' </title> <booktitle> Proc. IEEE INFOCOM, </booktitle> <address> San Francisco, </address> <pages> pp. 520-526, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: With the Leaky Bucket [4], and its variants <ref> [5] </ref>,[6] a pool of tokens is maintained, where each token allows a packet transmission, but is consumed in the process. The tokens can be further characterized to indicate different loss priorities of traffic [5]. The name comes from the fact that the pool is being filled at a constant rate by tokens up to a fixed maximum, at which point they leak out. The rate of token input is based on the average sending rate and packet size. <p> The packets can be discarded systematically, tolerated if there is network slack, tolerated up to a threshold, etc. These choices are similar to the choices for red packets in the PlaNET network <ref> [5] </ref>, although those packets are an attempt to statistically multiplex the network, and the packets under consideration in the DTW network indicate a misbehaving source.
Reference: [6] <author> Sidi, M., W. Liu, I. Cidon and I. Gopal, </author> <title> ``Congestion control through input rate regulation,'' </title> <booktitle> Proc. IEEE GLO-BECOM, Dallas, </booktitle> <pages> pp. 1764-1768, </pages> <month> Nov. </month> <year> 1989. </year>
Reference: [7] <author> Ramakrishnan, K. K., R. Jain, </author> <title> ``A Binary Feedback Scheme for Congestion Avoidance in Computer Networks with a Connectionless Network Layer,'' </title> <booktitle> Proc. ACM SIGCOMM, Stanford, </booktitle> <pages> pp 303-313, </pages> <year> 1988. </year>
Reference-contexts: This property of time window admissions reduces the effects of the high latency of control messages on congestion in the network. Consider a switch in a normal packet window-based congestion control method, like the DECbit algorithm <ref> [7] </ref>, as it becomes congested. In the worst case, its queue length is steadily growing and will continue to grow until the control messages it is sending in acknowledgements reach the sources that are flooding it. <p> DTW admission control policy, the queue lengths at a switch are proportional to the size of the time window [1]. - -- Because of this, we applied conventional feedback ideas to constructing the DTW feedback system, taking our cue from empirically successful packet window throughput control schemes such as DECbit <ref> [7] </ref> and TCP with Slow-Start [9]. Throughout this paper we use the terms open and close in the following way when applied to time windows. To open a MTW is to expand or increase it, allowing sources using that window to display more bursty behavior.
Reference: [8] <author> Chiu, Dah-Ming, and R. Jain, </author> <title> ``Congestion Avoidance in Computer Networks With a Connectionless Network Layer Part III: Analysis of the Increase and Decrease Algorithms,'' </title> <type> Technical Report DEC-TR-509, </type> <institution> Digital Equipment Corporation, </institution> <year> 1987. </year>
Reference-contexts: It maintains information about the size of the current MTW and is responsible for opening or closing it based on current measured traffic. Time windows are opened and closed using an additive increase/multiplicative decrease scheme, as described by Chiu and Jain <ref> [8] </ref>. This means that a constant is added to the size of the time window to open it, and that the window is multiplied by a number less than one to decrease it.
Reference: [9] <author> Jacobson, Van, </author> <title> ``Congestion Avoidance and Control,'' </title> <booktitle> Proc. ACM SIGCOMM, Stanford, </booktitle> <pages> pp 314-329, </pages> <year> 1988. </year>
Reference-contexts: In situations where one cannot receive help from the network, methods for estimating congestion and providing a feedback control in the face of delays under TCP were explored by Jacobson <ref> [9] </ref>. Jacobson estimates congestion by monitoring dropped packets and round trip delays, and uses that information to regulate the size of his packet windows. The DECbit scheme [7],[8] provides both a robust practical congestion control strategy and a detailed analysis. <p> queue lengths at a switch are proportional to the size of the time window [1]. - -- Because of this, we applied conventional feedback ideas to constructing the DTW feedback system, taking our cue from empirically successful packet window throughput control schemes such as DECbit [7] and TCP with Slow-Start <ref> [9] </ref>. Throughout this paper we use the terms open and close in the following way when applied to time windows. To open a MTW is to expand or increase it, allowing sources using that window to display more bursty behavior. <p> The initial window size is 5000 packets (5 MBytes). So the twenty sources can have 800 Mbits in flight at t=0. This compensates somewhat for the lack of a slow start <ref> [9] </ref> for these sources. - -- 0.2 0.6 1 0 50 100 150 200 250 300 350 400 450 500 Maximum Time Window size (secs) Time (secs) Loss Thresholding (Maximum Time Window Size) iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii Monitoring Throughput Loss Switch Interval (Mbits/sec) (percent) Utilization iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii 2 990.3 0.007 99.0% 10 996.7 0.001 99.7%
Reference: [10] <author> R. Jain and Routhier, S., </author> <title> ``Packet Trains Measurement and a New Model for Computer Network Traffic'' IEEE Journal on Selected Areas in Communications, </title> <address> SAC-4(6):986-995, </address> <month> September </month> <year> 1986. </year>
Reference-contexts: We begin by describing the simulation configuration and parameters, and then discuss individual simulations that illustrate specific features of DTW. 5.1. Simulation Parameters and Configuration In all cases, multiple sources are sending through a switch to each other. The sources are all modeled as packet train sources <ref> [10] </ref>. They send trains of packets where the start of each train is exponentially distributed and the number of packets in the train is uniformly distributed.
Reference: [11] <author> Ramamurthy, G., </author> <title> and R.S. Dighe, "Distributed source control: a network access control for integrated broadband packet networks," </title> <journal> IEEE J. Select. Areas Commun., </journal> <volume> vol. 9, </volume> <pages> pp. 990-1002, </pages> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: We use a similar method to assure that sources obey their negotiated DTW parameters. Other admission controls are similar in spirit to DTW. Distributed Source Control <ref> [11] </ref> is an example; however, DTW's time windows are both overlapping, and dynamically adjusted to adapt to changing network load, unlike Distributed Source Control's smoothing intervals. Also we do not adjust individual source windows on a burst level.
Reference: [12] <author> Golestani, S. J., </author> <title> "A framing strategy for congestion management," </title> <journal> IEEE J. Select. Areas Commun., </journal> <volume> vol. 9. </volume> <pages> pp. 1064-1077. </pages> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: Distributed Source Control [11] is an example; however, DTW's time windows are both overlapping, and dynamically adjusted to adapt to changing network load, unlike Distributed Source Control's smoothing intervals. Also we do not adjust individual source windows on a burst level. Stop-and-go queuing <ref> [12] </ref> and its attendant framing strategies provide bounded delays and jitter, but use a non-work conserving queueing discipline. These bounds are based upon a framing strategy that bears some resemblance to time windows, but are also nonoverlapping.
Reference: [13] <author> Bolot, J., and A. U. Shankar, </author> <title> ``Dynamical behavior of rate-based flow control mechanism,'' </title> <journal> ACM SIGCOMM Computer Communication Review, </journal> <volume> vol. 20, </volume> <pages> pp. 35-49, </pages> <month> April </month> <year> 1990. </year> - -- 
Reference-contexts: The severity of the congestion, specifically the queue length at the bottleneck switch, is directly related to the time it takes for the control messages to be received <ref> [13] </ref>. Then the network must still remove the excess buildup to a safe level in the face of repeated retransmissions, which may cause cyclic congestion themselves. This reduces the effectiveness of the congestion messages once they arrive.
References-found: 13

