URL: http://www.cs.rpi.edu/~bagalp/caicim98step/caicim98step.ps
Refering-URL: http://www.cs.rpi.edu/~bagalp/caicim98step/index.html
Root-URL: http://www.cs.rpi.edu
Title: An Evaluation of Competing Distributed Systems Standards for STEP Data Exchange  
Author: Raj Subbu, Prasad Bagal, and Martin Hardwick 
Address: Troy, New York 12180-3590  
Affiliation: Electronics Agile Manufacturing Research Institute, Electrical, Computer, and Systems Engineering Department, and Computer Science Department Rensselaer Polytechnic Institute,  
Abstract: The internet provides an infrastructure that allows companies to collaborate electronically. Products not easily produced by individual companies have the potential to be realized via data and technology sharing by cooperating partners. The Standard for Exchange of Product Data (STEP), defines specifications for the representation and exchange of electronic product information, critical to networked industrial cooperation. The selection of a supporting communications infrastructure that is scalable, robust, works across heterogeneous environments, and is well suited for STEP, is thus critical for effective cooperation among industrial partners. Descriptions of competing distributed systems standards such as CORBA, JRMI, DCOM, and HTTP are presented in this paper. The advantages and disadvantages of each architecture are evaluated both generally and from the perspective of STEP. Finally, recommendations for standards adoption are presented. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Sean Baker, Vinny Cahill, and Paddy Nixon, </author> <title> "Bridging Boundaries: CORBA in Perspective", </title> <booktitle> IEEE Internet Computing, </booktitle> <pages> pages 52-57, </pages> <address> Sep.-Oct. </address> <year> 1997. </year>
Reference-contexts: A consistent support structure for STEP operations across these boundaries is a key component in the realization of virtual enterprises. As a result, there is an intense need for "bridging technologies <ref> [1] </ref>." The Common Object Request Broker Architecture (CORBA) [7], Java Remote Method Invocation (JRMI) [12], Distributed Component Object Model (DCOM) [6], and Hypertext Transfer Protocol (HTTP), are competing bridging technologies, each of which has strengths and weaknesses. <p> Specifically, we present the advantages and disadvantages of each technology from the perspective of STEP related data sharing and exchange. Some of the comparisons included in this section are referenced from <ref> [1] </ref> and [8]. We first present a comparison of each of the standards in its function as a bridging technology. Later, we compare the essential features of each standard. 4.1 Bridging Technologies Spanning Boundaries We consider boundaries that are efficiently bridged by each of the distributed systems technologies.
Reference: [2] <author> Daniel T. Chang, and Stefan Covaci, </author> <title> "The OMG Mobile Agent Facility: A Submission", </title> <booktitle> Lecture Notes in Computer Science 1219, </booktitle> <pages> pages 98-110, </pages> <publisher> Springer 1997. </publisher>
Reference-contexts: STEP data sharing and exchange frequently involve the transfer or reading of huge amounts of product data. Thus, it is attractive to have a framework that supports migration of program entities that can execute at different server sites. We refer to this feature as support for Code Mobility <ref> [2] </ref>. STEP related data sharing and exchange frequently involve sensitive product and process information. An architecture that supports adequate transactional security is thus very attractive and necessary from a business perspective. In a virtual enterprise, multiple companies collaborate electronically to realize products. <p> CORBA, JRMI, and DCOM strongly support an object-oriented [11] model, while mostly due to the simplicity of HTTP, object-oriented information exchange is not easily possible using HTTP. Support for code mobility allows software modules to migrate and execute 8 autonomously and asynchronously over a network <ref> [2] </ref>. Though CORBA does not currently support a program migration paradigm, the previous reference describes a proposal submitted to include this feature. JRMI supports program migration since Java includes support for this feature. However, there is no current evidence that DCOM and HTTP include support for code mobility.
Reference: [3] <author> Martin Hardwick, David L. Spooner, Tom Rando, and K. C. Morris, </author> <title> "Data Protocols for the Industrial Virtual Enterprise", </title> <journal> IEEE Journal of Internet Computing, </journal> <month> Jan-Feb </month> <year> 1997. </year>
Reference-contexts: 1 Introduction The internet has the potential to support collaborative design and manufacturing activities where the responsibilities for realizing products are distributed, and data and technology are shared electronically by multiple industrial partners. A group of companies that collaborate in this way is called a Virtual Enterprise <ref> [3] </ref>. STEP is a technology that supports the neutral exchange of product data critical to the realization of virtual enterprises. STEP is an International Standard (ISO-10303) that defines and outlines the methods to create and manipulate computer interpretable product data models.
Reference: [4] <author> Martin Hardwick, </author> <type> "Personal Communication", </type> <year> 1998. </year>
Reference-contexts: All competing distributed systems technologies provide strong support for integrating legacy software systems. Experience with CORBA and Java/JRMI gained through Rensse-laer's participation in the National Industrial Information Infrastructure Protocols (NIIIP) project has shown that Java based systems have shorter development life-cycles and are easier to maintain <ref> [4] </ref>. 5 Recommendations and Conclusions Based on the information provided in Tables 1, and 2, CORBA and JRMI are the strongest contenders to be used as implementation architectures for STEP based data exchange and sharing in virtual enterprises.
Reference: [5] <author> David Loffredo, </author> <title> "Efficient Database Implementation of EXPRESS Information Models", </title> <type> PhD Thesis, </type> <institution> Rensselaer Polytechnic Institute,Troy, </institution> <address> New York, </address> <month> May </month> <year> 1998. </year>
Reference-contexts: The information and relationships represented through a collection of STEP AP schemas define an engineering product database. Engineering databases are expensive and difficult to create <ref> [5] </ref>. One reason for this is engineering applications have unusually complex information requirements, and the databases that are required for these applications, tend to be complex by association. Designing and 1 implementing a comprehensive information system which can optimally utilize enterprise--wide accumulated information and knowledge is a daunting task.
Reference: [6] <institution> Microsoft Corp., </institution> <note> "DCOM Technical Overview", White Paper, </note> <year> 1996. </year>
Reference-contexts: As a result, there is an intense need for "bridging technologies [1]." The Common Object Request Broker Architecture (CORBA) [7], Java Remote Method Invocation (JRMI) [12], Distributed Component Object Model (DCOM) <ref> [6] </ref>, and Hypertext Transfer Protocol (HTTP), are competing bridging technologies, each of which has strengths and weaknesses. In this paper, we evaluate these technologies from the perspective of STEP related data sharing and exchange. <p> In addition JRMI supports 5 code mobility. These features enhance programming flexibility through support for multi-ple object-invocation strategies: Remote Static, Remote Dynamic, Local Static, and Local Dynamic. 3.3 DCOM Microsoft's Distributed Component Object Model (DCOM) <ref> [6] </ref> extends the Component Object Model (COM) to support communication among objects on different computers on heterogeneous networks. DCOM is an evolution of the COM architecture also proposed by Microsoft. COM and DCOM are no longer proprietary to Microsoft, but are managed by the independent ActiveX Consortium.
Reference: [7] <author> Object Management Group, </author> <title> "The Object Request Broker Architecture: Architecture and Specification", </title> <note> 2.0 Edition 1996, 2.2 Edition 1998. </note>
Reference-contexts: A consistent support structure for STEP operations across these boundaries is a key component in the realization of virtual enterprises. As a result, there is an intense need for "bridging technologies [1]." The Common Object Request Broker Architecture (CORBA) <ref> [7] </ref>, Java Remote Method Invocation (JRMI) [12], Distributed Component Object Model (DCOM) [6], and Hypertext Transfer Protocol (HTTP), are competing bridging technologies, each of which has strengths and weaknesses. In this paper, we evaluate these technologies from the perspective of STEP related data sharing and exchange. <p> We present CORBA, JRMI, DCOM, and HTTP from a systems perspective rather than an implementation or coding perspective. We discuss their essential features and architectures. 3.1 CORBA CORBA <ref> [7] </ref> is a product of a consortium called the Object Management Group (OMG) that includes in excess of 900 companies representing all aspects of the computer industry. A notable exception is Microsoft, which produces a competing architecture, DCOM. CORBA is a specification that supports a heterogeneous object-oriented distributed computing environment. <p> Objects on multiple ORBs can communicate with each other when the ORBs conform to the Internet Inter-ORB Protocol (IIOP), which is essentially TCP/IP with some CORBA specific message exchanges. The CORBA 2.0 specification <ref> [7] </ref> allows a client on a certain ORB to invoke services on a server implemented on a dissimilar ORB, as long as the IIOP conformance requirement is met by both ORBs. However, server implementations per the CORBA 2.0 specification, are tied to individual ORBs.
Reference: [8] <author> Robert Orfali, and Dan Harkey, </author> <title> "Client/Server Programming with Java and CORBA", 2 nd Edition, </title> <publisher> Wiley, </publisher> <year> 1998. </year>
Reference-contexts: Specifically, we present the advantages and disadvantages of each technology from the perspective of STEP related data sharing and exchange. Some of the comparisons included in this section are referenced from [1] and <ref> [8] </ref>. We first present a comparison of each of the standards in its function as a bridging technology. Later, we compare the essential features of each standard. 4.1 Bridging Technologies Spanning Boundaries We consider boundaries that are efficiently bridged by each of the distributed systems technologies. <p> An object-oriented model does not hamper growth in information model complexity, and can adequately support highly complex information models. This is the basis for our evaluation of the competing standards from the perspective of application scalability. The entries for "Access speed" are drawn from reference <ref> [8] </ref>. It is measured as the average time per invocation, computed over 1000 simple method invocations, when performed over a 10Mbits/s Ethernet local area network. Similar quantitative observations are also found in [9].
Reference: [9] <author> Ajay Shankar Ramachandran, </author> <title> "Object Protocols Which One?", </title> <type> MS Project Report, </type> <institution> Rensselaer Polytechnic Institute,Troy, </institution> <address> New York, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: The entries for "Access speed" are drawn from reference [8]. It is measured as the average time per invocation, computed over 1000 simple method invocations, when performed over a 10Mbits/s Ethernet local area network. Similar quantitative observations are also found in <ref> [9] </ref>. Load distribution of software components is achieved through dynamically redistributing these loading components to processing components (processors or workstations). This feature avoids load imbalances among cooperating software modules and improves overall system performance.
Reference: [10] <author> Douglas Schenck and Peter Wilson, </author> <title> "Information Modeling: The EXPRESS Way", </title> <publisher> Oxford University Press, </publisher> <year> 1994. </year>
Reference-contexts: We make recommendations and conclude in Section 5. 2 STEP Specific Requirements STEP AP schemas are object-oriented. Object-oriented information models offer greater expressive power and strongly support complex and meticulous engineering information requirements. Also, EXPRESS <ref> [10] </ref> language models which are used for STEP schema representation, are object-oriented. It is thus efficient to have an underlying architecture that can easily support object-oriented models. STEP data sharing and exchange frequently involve the transfer or reading of huge amounts of product data.
Reference: [11] <author> Bjarne Stroustrup, </author> <title> "What is Object-Oriented Programming?", (1991 revised version). </title> <booktitle> Proc. 1st Euro-pean Software Festival. </booktitle> <month> February, </month> <year> 1991. </year>
Reference-contexts: CORBA, JRMI, and DCOM strongly support an object-oriented <ref> [11] </ref> model, while mostly due to the simplicity of HTTP, object-oriented information exchange is not easily possible using HTTP. Support for code mobility allows software modules to migrate and execute 8 autonomously and asynchronously over a network [2].
Reference: [12] <author> Sun Microsystems, Inc., </author> <title> "Java Remote Method Invocation-Distributed Computing for Java", </title> <type> White Paper, </type> <year> 1998. </year> <month> 10 </month>
Reference-contexts: A consistent support structure for STEP operations across these boundaries is a key component in the realization of virtual enterprises. As a result, there is an intense need for "bridging technologies [1]." The Common Object Request Broker Architecture (CORBA) [7], Java Remote Method Invocation (JRMI) <ref> [12] </ref>, Distributed Component Object Model (DCOM) [6], and Hypertext Transfer Protocol (HTTP), are competing bridging technologies, each of which has strengths and weaknesses. In this paper, we evaluate these technologies from the perspective of STEP related data sharing and exchange. <p> CORBA defines a wide range of services that add value to the basic ORB communications infrastructure. Some of these services are integrated into the ORB, while others can function as stand-alone servers communicating with the ORB. 3.2 JRMI Java Remote Method Invocation (JRMI) <ref> [12] </ref> allows one to write distributed objects using Java. In the following discussion we use RMI alternatively with JRMI. RMI provides a simple and direct model for distributed computation with Java objects. These objects can be new Java objects, or can be Java wrappers around an existing applications.
References-found: 12

