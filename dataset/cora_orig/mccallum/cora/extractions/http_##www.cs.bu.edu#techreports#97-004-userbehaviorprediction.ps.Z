URL: http://www.cs.bu.edu/techreports/97-004-userbehaviorprediction.ps.Z
Refering-URL: http://cs-www.bu.edu/techreports/Home.html
Root-URL: 
Email: carro@cs.bu.edu jaccoud@embratel.com.br  
Title: Determining WWW User's Next Access and Its Application to Pre-fetching  
Author: Carlos R. Cunha Carlos F. B. Jaccoud 
Date: March 26, 1997  
Address: 111 Cummington St R. Senador Pompeu 27 Boston, MA 02215, USA Rio de Janeiro RJ Brazil  
Affiliation: Computer Science Department Division of Quality Control Boston University Embratel  
Abstract: World-Wide Web (WWW) services have grown to levels where significant delays are expected to happen. Techniques like pre-fetching are likely to help users to personalize their needs, reducing their waiting times. However, pre-fetching is only effective if the right documents are identified and if user's move is correctly predicted. Otherwise, pre-fetching will only waste bandwidth. Therefore, it is productive to determine whether a revisit will occur or not, before starting pre-fetching. In this paper we develop two user models that help determining user's next move. One model uses Random Walk approximation and the other is based on Digital Signal Processing techniques. We also give hints on how to use such models with a simple pre-fetching technique that we are developing. 
Abstract-found: 1
Intro-found: 1
Reference: [AK94] <author> Thomas Alexander and Gershon Kedem. </author> <title> Design and Evaluation of a Distributed Cache Architecture with Prediction. </title> <type> Technical Report CS-1994-05, </type> <institution> Department of Computer Science, Duke University, Durham, </institution> <address> NC 27708-0129, March 9, </address> <year> 1994. </year>
Reference-contexts: Before a pre-fetching request is issued, verify with the oracle if the user will revisit a document. If a positive answer comes out, then issue the pre-fetching request. This oracle works as the procedure described above. 7 Related Work Pre-fetching has a long list of references <ref> [Smi82, AK94, LS84, PZ91, Kri95, Mar96, Bes95, Pad95] </ref>. Each of these references deals with a different situation. Krishnan's approach [Kri95] is the closest to ours, except that he considers all transitions between pages accessed in a database environment.
Reference: [BC95] <author> Azer Bestavros and Carlos R. Cunha. </author> <title> A Prefetching Protocol Using Client Speculation for the WWW. Technical Report TR-95-011, </title> <institution> Computer Science Dept., Boston University, </institution> <address> 111 Cummington St, Boston, MA 02215, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: Also, the number of Web users grows everyday through on-line service providers, like America Online, Prodigy, Compuserve, etc. This growing load imposes an increasing demand on networks and servers, which have limited capacity. This conflicting situation requires some individualized solution in a speculative fashion <ref> [BC95] </ref>. One possible way to reduce the noticed response time is to anticipate user's requests and to order highly likely objects accordingly. This is known in the literature as pre-fetching. The first problem with pre-fetching is to predict what users will need. A good hint is user's past history.
Reference: [BCC + 95] <author> Azer Bestavros, Robert L. Carter, Mark E. Crovella, Carlos R. Cunha, Abdelsalam Heddaya, and Sulaiman A. Mirdad. </author> <title> Application-Level Document Caching in the Internet. </title> <type> Technical Report BU-CS-95-002, </type> <institution> Boston University, </institution> <address> Boston, MA 02215, </address> <month> February </month> <year> 1995. </year> <booktitle> Also in Proc. SDNE'95 (2nd. International Workshop on Services in Distributed and Networked Environments). </booktitle>
Reference-contexts: As part of this research, a database of user traces was established [CBC95]. This database constitutes a rich source of material to study user's behavior and network traffic. A series of studies was performed concerning network traffic <ref> [BCC + 95, CB95, CBC95] </ref>. However, the same cannot be said in relation to user's profile determination. For instance, [CP95] characterizes browsing strategies by looking at the longest common access sequences.
Reference: [Bes95] <author> Azer Bestavros. </author> <title> Using Speculation to Reduce Server Load and Service Time on the WWW. Technical Report TR-95-006, </title> <institution> Computer Science Dept., Boston University, </institution> <address> 111 Cummington St, Boston, MA 02215, </address> <month> February </month> <year> 1995. </year>
Reference-contexts: Before a pre-fetching request is issued, verify with the oracle if the user will revisit a document. If a positive answer comes out, then issue the pre-fetching request. This oracle works as the procedure described above. 7 Related Work Pre-fetching has a long list of references <ref> [Smi82, AK94, LS84, PZ91, Kri95, Mar96, Bes95, Pad95] </ref>. Each of these references deals with a different situation. Krishnan's approach [Kri95] is the closest to ours, except that he considers all transitions between pages accessed in a database environment. <p> Each of these references deals with a different situation. Krishnan's approach [Kri95] is the closest to ours, except that he considers all transitions between pages accessed in a database environment. Markatos [Mar96], Bestavros <ref> [Bes95] </ref>, and Padmanabhan [Pad95] consider pre-fetching from the server side. The server is able to provide good hints about what other user visit in the site, this only gives the user a localized idea, but not a global idea.
Reference: [BH96] <author> Jean-Chrysostome Bolot and Philipp Hoschka. </author> <title> Performance Engineering of the World Wide Web: Application to Dimensioning and Cache Design. </title> <booktitle> In Electronic Proceedings of the Fifth International World Wide Web Conference, </booktitle> <address> Paris, France, </address> <month> May 6-10, </month> <year> 1996. </year> <title> The World Wide Web Consortium. </title>
Reference-contexts: Catledge and Pitkow [CP95] analyze client logs with the view of user's interface. They categorize users according to size of their common sequences. The categorization is based on the slope of the plot of common sequence size against sequence frequency. Bolot and Hoschka <ref> [BH96] </ref> analyze server's log using seasonal ARIMA. They targeted the number of connections that their web server receives, with the intention of dimensioning the work a web site would receive. Their predictions are within 10% to 30% range of error.
Reference: [BLCcGP92] <author> Tim Berners-Lee, Robert Cailliau, Jean-Fran~cois Groff, and Bernd Pollermann. </author> <title> World-Wide Web: The Information Universe. </title> <journal> Electronic Networking: Research, Applications and Policy, </journal> <volume> 1(2), </volume> <month> Spring </month> <year> 1992. </year>
Reference-contexts: As we are going to see, the models introduced here capture a significant part of the user's access patterns (85% on average). March 26, 1997 3 2 Data Collection Two years ago, the Oceans research group 1 at Boston University started to study the World-Wide Web <ref> [BLCcGP92] </ref>. As part of this research, a database of user traces was established [CBC95]. This database constitutes a rich source of material to study user's behavior and network traffic. A series of studies was performed concerning network traffic [BCC + 95, CB95, CBC95].
Reference: [CB95] <author> Mark Crovella and Azer Bestavros. </author> <title> Explaining World Wide Web Traffic Self-Similarity. </title> <type> Technical Report TR-95-015, </type> <institution> Computer Science Department, Boston University, </institution> <address> 111 Cummington St, Boston, MA 02215, </address> <month> August </month> <year> 1995. </year> <note> Also in Proc. of SIGMETRICS'96. </note> <month> March 26, </month> <year> 1997 </year> <month> 18 </month>
Reference-contexts: 1 Introduction User traces have shown applicability in the understanding of characteristics of network connections and Web file systems, as reported in <ref> [CBC95, CB95] </ref>. But, they can also fl This is an extended version of the article with the same title presented in the International Symposium on Computers and Communication'97, Alexandria, Egypt, 1-3 July, 1997. y Partially sponsored by CNPq. 1 March 26, 1997 2 answer questions about user's behavior. <p> As part of this research, a database of user traces was established [CBC95]. This database constitutes a rich source of material to study user's behavior and network traffic. A series of studies was performed concerning network traffic <ref> [BCC + 95, CB95, CBC95] </ref>. However, the same cannot be said in relation to user's profile determination. For instance, [CP95] characterizes browsing strategies by looking at the longest common access sequences.
Reference: [CBC95] <author> Carlos R. Cunha, Azer Bestavros, and Mark Crovella. </author> <title> Characteristics of WWW Client-based Traces. </title> <type> Technical Report TR-95-010, </type> <institution> Computer Science Dept., Boston University, </institution> <address> 111 Cummington St, Boston, MA 02215, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: 1 Introduction User traces have shown applicability in the understanding of characteristics of network connections and Web file systems, as reported in <ref> [CBC95, CB95] </ref>. But, they can also fl This is an extended version of the article with the same title presented in the International Symposium on Computers and Communication'97, Alexandria, Egypt, 1-3 July, 1997. y Partially sponsored by CNPq. 1 March 26, 1997 2 answer questions about user's behavior. <p> March 26, 1997 3 2 Data Collection Two years ago, the Oceans research group 1 at Boston University started to study the World-Wide Web [BLCcGP92]. As part of this research, a database of user traces was established <ref> [CBC95] </ref>. This database constitutes a rich source of material to study user's behavior and network traffic. A series of studies was performed concerning network traffic [BCC + 95, CB95, CBC95]. However, the same cannot be said in relation to user's profile determination. <p> As part of this research, a database of user traces was established [CBC95]. This database constitutes a rich source of material to study user's behavior and network traffic. A series of studies was performed concerning network traffic <ref> [BCC + 95, CB95, CBC95] </ref>. However, the same cannot be said in relation to user's profile determination. For instance, [CP95] characterizes browsing strategies by looking at the longest common access sequences. <p> In [Cun97], we show how trace analysis can play a significant role in enhancing system performance, both on client and server sides. The data we use here was obtained between November/94 to May/95 in the Boston University Computer Science Department laboratories. The users were students employing a modified version <ref> [CBC95] </ref> of Mosaic V2.4 [NCS] to collect information about which documents were accessed, when they were accessed, and how long each object took to be fetched. 3 User's Profiles Users were involved in multiple sessions. Each session contained multiple requests, either to distinct or to repeated URLs 2 .
Reference: [CP95] <author> Lara D. Catledge and James E. Pitkow. </author> <title> Characterizing Browsing Strategies in the World-Wide Web. </title> <booktitle> In Electronic Proceedings of the Third International World Wide Web Conference, </booktitle> <address> Darmstadt, Germany, </address> <month> April 10-13, </month> <year> 1995. </year> <title> The World Wide Web Consortium. </title>
Reference-contexts: This database constitutes a rich source of material to study user's behavior and network traffic. A series of studies was performed concerning network traffic [BCC + 95, CB95, CBC95]. However, the same cannot be said in relation to user's profile determination. For instance, <ref> [CP95] </ref> characterizes browsing strategies by looking at the longest common access sequences. In [Cun97], we show how trace analysis can play a significant role in enhancing system performance, both on client and server sides. <p> Markatos [Mar96], Bestavros [Bes95], and Padmanabhan [Pad95] consider pre-fetching from the server side. The server is able to provide good hints about what other user visit in the site, this only gives the user a localized idea, but not a global idea. Catledge and Pitkow <ref> [CP95] </ref> analyze client logs with the view of user's interface. They categorize users according to size of their common sequences. The categorization is based on the slope of the plot of common sequence size against sequence frequency. Bolot and Hoschka [BH96] analyze server's log using seasonal ARIMA.
Reference: [Cun97] <author> Carlos R. Cunha. </author> <title> Trace Analysis and Its Applications to Performance Enhancements of Distributed Systems. </title> <type> PhD Thesis in preparation, </type> <institution> Computer Science Department, Boston University, </institution> <address> 111 Cumming-ton St, Boston, MA 02215, USA, </address> <year> 1997. </year>
Reference-contexts: Therefore, we also have to predict what the next access will be, i.e., whether the user will access a previously visited document or move to a new object. If these actions can be devised, an efficient pre-fetching technique may be designed <ref> [Cun97] </ref>. In this paper, we present two user models. The first, based on Random Walk [Pap91] and its similarities to software caching, is intended for long range predictions. The second model is derived by directly applying Digital Signal Processing techniques [RS78] to the curve describing a user's access behavior. <p> A series of studies was performed concerning network traffic [BCC + 95, CB95, CBC95]. However, the same cannot be said in relation to user's profile determination. For instance, [CP95] characterizes browsing strategies by looking at the longest common access sequences. In <ref> [Cun97] </ref>, we show how trace analysis can play a significant role in enhancing system performance, both on client and server sides. The data we use here was obtained between November/94 to May/95 in the Boston University Computer Science Department laboratories. <p> We could consider all documents accessed by the user, constructing a huge graph. However, such a graph would contain more than the user preferences, and the number of pre-fetched objects would be large, degrading the technique efficiency (see <ref> [Cun97] </ref>). With this procedure, the individualized pre-fetch table is updated after each user session, with the session's history guiding the construction/update. The number of steps ahead may be set as one argument of the procedure. 6 Using User Model in Pre-fetching As we mentioned above pre-fetching is a speculative process. <p> The second model applies to the short term behavior. Both models are able to track user's behaviors. We are now in the process of incorporating the models inside the pre-fetching method briefly presented in Section 5 (for more details, see <ref> [Cun97] </ref>). We expect that we will be able to reduce the extra bandwidth used by pre-fetching and still obtain good levels of latency reduction. We also expect that this new pre-fetching procedure will achieve this objective by issuing requests only when a document revisit is guessed to occur.
Reference: [Den96] <author> Shuang Deng. </author> <title> Empirical Model of WWW Document Arrivals at Access Link. </title> <booktitle> In Proc. International Communications Conference - ICC'96, </booktitle> <address> Dallas, Texas, USA, 23-17 June 1996. </address> <publisher> IEEE Press. </publisher>
Reference-contexts: For instance, a user's inter-request time, which corresponds to the user's thinking time, is modeled as a Pareto distribution <ref> [Den96] </ref>, what has implications in network capacity dimensioning. User's behavior also plays an important role in system performance. Users expect a prompt response from systems. The Web became a complex system, with a vast variety of available information.
Reference: [GW70] <author> J.E. Gillis and G.H. Weiss. </author> <title> Expected Number of Distintic Sites Visited by a Random Walk with an Infinite Variance. </title> <journal> J. Math. Phys., </journal> <volume> 11 </volume> <pages> 1307-1312, </pages> <year> 1970. </year>
Reference-contexts: If &lt; 1, the walk is recurrent, revisiting many of the already accessed positions. A good reference on the study of the nature of cache misses is Thiebaut's paper [Thi89]. In this paper, Thiebaut constructs a cache model based on that by Gillis and Weiss <ref> [GW70] </ref> for the accumulated number of unique cells visited in an r-step walk. March 26, 1997 6 In Thiebaut's model, the accumulated number of cache misses corresponds to the program's random walk range.
Reference: [Kri95] <author> P. Krishnan. </author> <title> Online Prediction Algorithms for Databases and Operating Systems. </title> <type> PhD thesis, </type> <institution> De partment of Computer Science, Brown University, </institution> <address> Providence, Rhode Island 02912, USA, </address> <month> August </month> <year> 1995. </year> <note> Also as Technical Report CS-95-24. </note>
Reference-contexts: Before a pre-fetching request is issued, verify with the oracle if the user will revisit a document. If a positive answer comes out, then issue the pre-fetching request. This oracle works as the procedure described above. 7 Related Work Pre-fetching has a long list of references <ref> [Smi82, AK94, LS84, PZ91, Kri95, Mar96, Bes95, Pad95] </ref>. Each of these references deals with a different situation. Krishnan's approach [Kri95] is the closest to ours, except that he considers all transitions between pages accessed in a database environment. <p> If a positive answer comes out, then issue the pre-fetching request. This oracle works as the procedure described above. 7 Related Work Pre-fetching has a long list of references [Smi82, AK94, LS84, PZ91, Kri95, Mar96, Bes95, Pad95]. Each of these references deals with a different situation. Krishnan's approach <ref> [Kri95] </ref> is the closest to ours, except that he considers all transitions between pages accessed in a database environment. Markatos [Mar96], Bestavros [Bes95], and Padmanabhan [Pad95] consider pre-fetching from the server side.
Reference: [LS84] <author> Johnny K.F. Lee and Alan Jay Smith. </author> <title> Branch Prediction Strategies and Branch Target Buffer Design. </title> <journal> IEEE Computer, </journal> <volume> 17(1) </volume> <pages> 6-22, </pages> <month> January </month> <year> 1984. </year>
Reference-contexts: Before a pre-fetching request is issued, verify with the oracle if the user will revisit a document. If a positive answer comes out, then issue the pre-fetching request. This oracle works as the procedure described above. 7 Related Work Pre-fetching has a long list of references <ref> [Smi82, AK94, LS84, PZ91, Kri95, Mar96, Bes95, Pad95] </ref>. Each of these references deals with a different situation. Krishnan's approach [Kri95] is the closest to ours, except that he considers all transitions between pages accessed in a database environment.
Reference: [Man83] <author> B. Mandelbrot. </author> <title> The Fractal Geometry of Nature. </title> <publisher> Freeman, </publisher> <address> San Francisco, CA, </address> <year> 1983. </year>
Reference-contexts: In both cases, we consider an infinite size cache for the sake of analysis. Voldman et al. [VMH + 83] noticed that program intermiss distances follow a hyperbolic distribution, characterizing a fractal behavior. Their analysis shows that the distribution of the distances characterizes its behavior, following the property <ref> [Man83] </ref>: where U is the random variable describing the distances, u 0 is a constant, and is the fractal dimension. The value of indicates what is expected from the walk. If &gt; 1, the walk constantly visits new positions. This case is called transient.
Reference: [Mar96] <author> Evangelos P. Markatos. </author> <title> Main Memory Caching of Web Documents. </title> <booktitle> In Electronic Proceedings of the Fifth International World Wide Web Conference, </booktitle> <address> Paris, France, </address> <month> May 6-10, </month> <year> 1996. </year> <title> The World Wide Web Consortium. </title>
Reference-contexts: Before a pre-fetching request is issued, verify with the oracle if the user will revisit a document. If a positive answer comes out, then issue the pre-fetching request. This oracle works as the procedure described above. 7 Related Work Pre-fetching has a long list of references <ref> [Smi82, AK94, LS84, PZ91, Kri95, Mar96, Bes95, Pad95] </ref>. Each of these references deals with a different situation. Krishnan's approach [Kri95] is the closest to ours, except that he considers all transitions between pages accessed in a database environment. <p> Each of these references deals with a different situation. Krishnan's approach [Kri95] is the closest to ours, except that he considers all transitions between pages accessed in a database environment. Markatos <ref> [Mar96] </ref>, Bestavros [Bes95], and Padmanabhan [Pad95] consider pre-fetching from the server side. The server is able to provide good hints about what other user visit in the site, this only gives the user a localized idea, but not a global idea.
Reference: [NCS] <author> NCSA. </author> <title> Mosaic browser. </title> <note> Available via anonymous ftp from ftp.ncsa.uiuc.edu. </note>
Reference-contexts: The data we use here was obtained between November/94 to May/95 in the Boston University Computer Science Department laboratories. The users were students employing a modified version [CBC95] of Mosaic V2.4 <ref> [NCS] </ref> to collect information about which documents were accessed, when they were accessed, and how long each object took to be fetched. 3 User's Profiles Users were involved in multiple sessions. Each session contained multiple requests, either to distinct or to repeated URLs 2 .
Reference: [Pad95] <author> Venkata N. Padmanabhan. </author> <title> Improving World Wide Web Latency. </title> <type> Report No. </type> <institution> UCB/CSD-95-875, Computer Science Division, University of California at Berkeley, Chicago, USA, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: Before a pre-fetching request is issued, verify with the oracle if the user will revisit a document. If a positive answer comes out, then issue the pre-fetching request. This oracle works as the procedure described above. 7 Related Work Pre-fetching has a long list of references <ref> [Smi82, AK94, LS84, PZ91, Kri95, Mar96, Bes95, Pad95] </ref>. Each of these references deals with a different situation. Krishnan's approach [Kri95] is the closest to ours, except that he considers all transitions between pages accessed in a database environment. <p> Each of these references deals with a different situation. Krishnan's approach [Kri95] is the closest to ours, except that he considers all transitions between pages accessed in a database environment. Markatos [Mar96], Bestavros [Bes95], and Padmanabhan <ref> [Pad95] </ref> consider pre-fetching from the server side. The server is able to provide good hints about what other user visit in the site, this only gives the user a localized idea, but not a global idea. Catledge and Pitkow [CP95] analyze client logs with the view of user's interface.
Reference: [Pap91] <author> Athanasios Papoulis. </author> <title> Probability, Random Variables, and Stochastic Processes. </title> <publisher> McGraw-Hill Series in Electrical Engineering. McGraw-Hill, </publisher> <address> New York, NY, USA, 3 rd edition, </address> <year> 1991. </year>
Reference-contexts: If these actions can be devised, an efficient pre-fetching technique may be designed [Cun97]. In this paper, we present two user models. The first, based on Random Walk <ref> [Pap91] </ref> and its similarities to software caching, is intended for long range predictions. The second model is derived by directly applying Digital Signal Processing techniques [RS78] to the curve describing a user's access behavior.
Reference: [PZ91] <author> Mark L. Palmer and Stanley B. Zdonik. </author> <title> Fido: A Cache that Learns to Fetch. </title> <type> Technical Report CS-91-15, </type> <institution> Department of Computer Science, Brown University, </institution> <address> Providence, RI 02912, </address> <month> February </month> <year> 1991. </year>
Reference-contexts: Before a pre-fetching request is issued, verify with the oracle if the user will revisit a document. If a positive answer comes out, then issue the pre-fetching request. This oracle works as the procedure described above. 7 Related Work Pre-fetching has a long list of references <ref> [Smi82, AK94, LS84, PZ91, Kri95, Mar96, Bes95, Pad95] </ref>. Each of these references deals with a different situation. Krishnan's approach [Kri95] is the closest to ours, except that he considers all transitions between pages accessed in a database environment.
Reference: [RS78] <author> Lawrence R. Rabiner and Ronald W. Schafer. </author> <title> Digital Processing of Speech Signals. </title> <booktitle> Prentice-Hall Signal Processing Series. </booktitle> <publisher> Prentice-Hall, </publisher> <year> 1978. </year>
Reference-contexts: In this paper, we present two user models. The first, based on Random Walk [Pap91] and its similarities to software caching, is intended for long range predictions. The second model is derived by directly applying Digital Signal Processing techniques <ref> [RS78] </ref> to the curve describing a user's access behavior. As we are going to see, the models introduced here capture a significant part of the user's access patterns (85% on average). <p> Consequently, the problem is to find a set of coefficients fff k g which minimizes the short-time prediction error, E r , around a vicinity of size n for a sample at virtual time r. E r is given by <ref> [RS78] </ref>: E r = m r (m) (1) X r (m) k=1 r (m k) The summation ranges in the above equations were left open since they are dependent on the current user's behavior. <p> The solution for fff k g in Equation 1 is known as the determination of the linear prediction coefficients (LPC) in the DSP jargon. The solution of these system of equations has a efficient method: the Durbin's Method <ref> [RS78] </ref>. This method is iterative, approximating the coefficients in each step. One characteristic of this method is that the solution for step i are the coefficients for the i th polynomial approximation.
Reference: [SLM87] <author> Jr. S. Lawrence Marple. </author> <title> Digital Spectral Analysis with Applications. </title> <booktitle> Prentice-Hall Signal Processing Series. </booktitle> <publisher> Prentice-Hall, </publisher> <year> 1987. </year>
Reference-contexts: Therefore, we may assume that the following forward linear predictor <ref> [SLM87] </ref> exists with coefficients ff k and output ~ N 0 (r): ~ N 0 (r) = k=1 Thus, the prediction error at virtual time r, e (r), is: e (r) = N 0 (r) ~ N 0 (r) = N 0 (r) k=1 Because user's behavior changes, the coefficients are
Reference: [Smi82] <author> Alan Jay Smith. </author> <title> Cache memories. </title> <journal> ACM Computing Surveys, </journal> <volume> 14(3) </volume> <pages> 473-530, </pages> <month> September </month> <year> 1982. </year>
Reference-contexts: Before a pre-fetching request is issued, verify with the oracle if the user will revisit a document. If a positive answer comes out, then issue the pre-fetching request. This oracle works as the procedure described above. 7 Related Work Pre-fetching has a long list of references <ref> [Smi82, AK94, LS84, PZ91, Kri95, Mar96, Bes95, Pad95] </ref>. Each of these references deals with a different situation. Krishnan's approach [Kri95] is the closest to ours, except that he considers all transitions between pages accessed in a database environment.
Reference: [Thi89] <author> Dominique Thiebaut. </author> <title> On the Fractal Dimension of Computer Programs and Its Applications to the Prediction of the Cache Miss Ratio. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 38(7) </volume> <pages> 1012-1026, </pages> <month> July </month> <year> 1989. </year>
Reference-contexts: If &gt; 1, the walk constantly visits new positions. This case is called transient. If &lt; 1, the walk is recurrent, revisiting many of the already accessed positions. A good reference on the study of the nature of cache misses is Thiebaut's paper <ref> [Thi89] </ref>. In this paper, Thiebaut constructs a cache model based on that by Gillis and Weiss [GW70] for the accumulated number of unique cells visited in an r-step walk. March 26, 1997 6 In Thiebaut's model, the accumulated number of cache misses corresponds to the program's random walk range.
Reference: [VH81] <author> J. Voldman and Lee W. Hoevel. </author> <title> The Software-Cache Connection. </title> <journal> IBM Journal of Research and Development, </journal> <volume> 25(6) </volume> <pages> 877-893, </pages> <month> November </month> <year> 1981. </year>
Reference-contexts: Time-series analysis and digital signal processing (DSP) techniques are candidates for this prediction. Voldman and Hoevel <ref> [VH81] </ref> studied the software-cache connection using DSP techniques. In particular, they were interested in long-range prediction of cache misses. They also intended to show that software related events are responsible for fluctuations in the buffer miss ratio.
Reference: [VMH + 83] <author> Jean Voldman, Benoit Mandelbrot, Lee W. Hoevel, Joshua Knight, and Philip L. Rosenfeld. </author> <title> Fractal Nature of Software-Cache Interaction. </title> <journal> IBM Journal of Research and Development, </journal> <volume> 27(2) </volume> <pages> 164-170, </pages> <year> 1983. </year>
Reference-contexts: Consequently, if we understand the nature of program cache misses, we will be able to use similar ideas to predict when a new request will occur and thus start/stop pre-fetching. In both cases, we consider an infinite size cache for the sake of analysis. Voldman et al. <ref> [VMH + 83] </ref> noticed that program intermiss distances follow a hyperbolic distribution, characterizing a fractal behavior.
References-found: 26

