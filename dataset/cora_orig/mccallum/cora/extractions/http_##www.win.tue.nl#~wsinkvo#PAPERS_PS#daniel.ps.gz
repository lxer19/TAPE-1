URL: http://www.win.tue.nl/~wsinkvo/PAPERS_PS/daniel.ps.gz
Refering-URL: http://wwwcg.win.tue.nl/~wstahw/Java/implicit/example.html
Root-URL: http://www.win.tue.nl
Title: Combining CSG modeling with soft blending using Lipschitz-based implicit surfaces  
Author: Daniel Dekkers, Kees van Overveld, Rob Golsteijn 
Date: October 29, 1996  
Abstract: In this paper a general method is given for combining CSG modeling with soft blending using implicit surfaces. A class of various blending functions sharing some desirable properties like differentiability and intuitive blend control are given. The functions defining the CSG objects satisfy the Lipschitz condition which gives the possibility of fast root-finding, but can also prove useful in the field of collision detection and adaptive triangulation. 
Abstract-found: 1
Intro-found: 1
Reference: [Blin82] <author> Blinn, J., </author> <title> A generalization of algebraic surface drawing, </title> <journal> ACM Trans. Graph., </journal> <volume> Vol. 1, </volume> <pages> pp. 234, </pages> <year> 1982 </year>
Reference-contexts: The blending functions proposed in this paper are inspired by the blobby objects (or soft objects) introduced by Wyvill and McPheeters (see [Wyvill90] for an overview). Blobby objects originated from molecule models: implicit functions were used to visualize electron clouds <ref> [Blin82] </ref>. Wyvill and McPheeters use the analogy of spatial temperature distributions: if one moves away from a 1 2 heat source, the temperature drops.
Reference: [Bloo88] <author> Bloomenthal, J., </author> <title> Techniques for implicit modeling, </title> <note> Xerox PARC technical report P89-00106 (November 1988) </note>
Reference-contexts: We introduce the term zero-surface for the collection of points for which f (p) = 0. An example showing a parametric function and an implicit function defining the same object (a sphere with center m and radius r) is given by Bloomenthal <ref> [Bloo88] </ref>: Parametric: f (; OE) = (m x + rsin ()cos (OE); m y + rsin ()sin (OE); m z + rcos ()); 2 [0; ]; OE 2 [0; 2) Implicit: f (p) = r jjp mjj = r (p x m x ) 2 + (p y m y ) <p> A large number of commonly used geometrical shapes can be defined by so called `skeletal objects' <ref> [Wyvill86a, Bloo88] </ref>. These objects can be interpreted as a sweep of a sphere along a predefined `skeletal shape'. For the variant used in this paper, the function value f (p) denotes the minimal distance from p to the objects surface.
Reference: [Bohm84] <author> Bohm, W. et al., </author> <title> A survey of curve and surface methods in CAGD, </title> <booktitle> Computer Aided Geometric Design, </booktitle> <volume> vol. 1, No. 1, </volume> <year> 1984, </year> <pages> pp. 1-60. </pages>
Reference-contexts: Introduction Methods for defining smooth surfaces can be divided into two categories: * Parametric functions Parametric functions are functions of the form f (u; v) = (f x (u; v); f y (u; v); f z (u; v)). Typical examples are Bezier or B-spline patches (See <ref> [Bohm84] </ref> for an overview). The surface is defined by control points and the surface can be adjusted by moving the control points.
Reference: [Hart93] <author> Hart, J., </author> <title> Sphere Tracing: A Geometric Method for the Antialiased Ray Tracing of Implicit Surfaces. </title> <note> To appear: The Visual Computer. An earlier version appeared in the SIGGRAPH '93 course notes as WSU Technical Report EECS-93-015 </note>
Reference-contexts: By introducing the blending functions presented in this paper we aim to fill a gap between work done by A. Pasco and J. Hart. Hart has convincingly shown that the Lipschitz property is very desirable for efficient sampling of iso-surfaces <ref> [Hart93] </ref>. Pasco introduced R-functions as a framework for creating objects from subobjects using CSG based operations [Pasko95]. Although R-functions show great `expressive power', the exact form of the functions is not argumented and seems to be based on aestheticly pleasing results. <p> For the functions presented in this paper, the aim will be Lipschitz for = 1 1 . As proven in appendix A, a sufficient condition for f b is: 1 f 0 When a Lipschitz property holds, we can apply Sphere Tracing <ref> [Hart93] </ref>. Sphere Tracing is a technique for finding the first intersection point between a ray and an implicit surface. Lipschitz gives a reliable method for finding the first intersection point.
Reference: [Pasko95] <author> Pasko, A., Adzhiev V., Sourin A., Savchenko V., </author> <title> Function representation in geometric modeling: </title> <booktitle> concepts, implementation and applications, The Visual Computer, </booktitle> <volume> vol. 11, No. 8, </volume> <year> 1995, </year> <pages> pp. 429-446. </pages>
Reference-contexts: Pasco and J. Hart. Hart has convincingly shown that the Lipschitz property is very desirable for efficient sampling of iso-surfaces [Hart93]. Pasco introduced R-functions as a framework for creating objects from subobjects using CSG based operations <ref> [Pasko95] </ref>. Although R-functions show great `expressive power', the exact form of the functions is not argumented and seems to be based on aestheticly pleasing results.
Reference: [Ricc73] <author> Ricci, A., </author> <title> Constructive geometry for computer graphics, </title> <journal> Comput. J. (GB), </journal> <volume> Vol. 16, </volume> <pages> pp. 157-160, </pages> <year> 1973. </year>
Reference-contexts: After this step, the function describing the sphere from the first example can be used (with center point p 0 and radius r). 1.2 Compound objects: combining CSG with soft blending Following Ricci <ref> [Ricc73] </ref>, minimum and maximum operations can be used to construct functions that perform the standard CSG set operations union, intersection and difference. A new class of objects is formed whose members are called compound objects.
Reference: [Wyvill86a] <author> Wyvill, B., McPheeters, C., and Wyvill, B., </author> <title> Data Structure for Soft Objects, </title> <journal> Visual Computer, </journal> <volume> 2, </volume> <month> 4 (August </month> <year> 1986a), </year> <pages> pp. 227-234 </pages>
Reference-contexts: A large number of commonly used geometrical shapes can be defined by so called `skeletal objects' <ref> [Wyvill86a, Bloo88] </ref>. These objects can be interpreted as a sweep of a sphere along a predefined `skeletal shape'. For the variant used in this paper, the function value f (p) denotes the minimal distance from p to the objects surface.
Reference: [Wyvill90] <author> Wyvill, B., </author> <title> A Computer Animation Tutorial, </title> <publisher> Springer-Verlag, </publisher> <address> New York 1990 </address>
Reference-contexts: The blending functions proposed in this paper are inspired by the blobby objects (or soft objects) introduced by Wyvill and McPheeters (see <ref> [Wyvill90] </ref> for an overview). Blobby objects originated from molecule models: implicit functions were used to visualize electron clouds [Blin82]. Wyvill and McPheeters use the analogy of spatial temperature distributions: if one moves away from a 1 2 heat source, the temperature drops. In [Wyvill90], this decline in temperature is represented by <p> objects) introduced by Wyvill and McPheeters (see <ref> [Wyvill90] </ref> for an overview). Blobby objects originated from molecule models: implicit functions were used to visualize electron clouds [Blin82]. Wyvill and McPheeters use the analogy of spatial temperature distributions: if one moves away from a 1 2 heat source, the temperature drops. In [Wyvill90], this decline in temperature is represented by a function: f (p) = 1 maxdist 2 It has a maximum value of 1 at the heat source m and a minimum value 0 at a threshold distance maxdist (points for which jjp mjj &gt; maxdist have value 0 as well).
References-found: 8

