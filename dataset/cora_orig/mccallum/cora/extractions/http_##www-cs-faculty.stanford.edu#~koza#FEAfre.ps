URL: http://www-cs-faculty.stanford.edu/~koza/FEAfre.ps
Refering-URL: http://www.cs.bham.ac.uk/~wbl/biblio/gp-bibliography.html
Root-URL: 
Email: koza@cs.stanford.edu  fhb3@slip.net  jlohn7@leland.stanford.edu  makeane@ix.netcom.com  dandre@cs.berkeley.edu  
Title: Evolution of a TriState Frequency Discriminator for the Source Identification Problem using Genetic Programming S
Author: John R. Koza Forrest H Bennett III Jason Lohn Frank Dunlap Martin A. Keane David Andre 
Keyword: Genetic programming, Automated  
Note: design of analog electrical circuits,  
Web: http://www-cs faculty.stanford.edu/~koza/  
Address: 258 Gates Building  Stanford, California 94305-9020  Stanford, California 94305  Stanford, California 94305  Palo Alto, California  5733 West Grover Chicago, Illinois 60630  Berkeley, California  
Affiliation: Computer Science Dept.  Stanford University  Visiting Scholar Computer Science Dept. Stanford University  Visiting Scholar Computer Science Dept. Stanford University  Dunlap Consulting  Martin Keane Inc.  Computer Science Dept. University of California  
Abstract: Automated synthesis of analog electronic circuits is recognized as a difficult problem. Genetic programming was used to evolve b o t h the topology and the sizing ( n u m e r i c a l v a l u e s ) f o r e a c h component of a circuit that can perform source identification by correctly cl assify an incoming signal into categories.
Abstract-found: 1
Intro-found: 1
Reference: <author> Aaserud, O. and Nielsen, I. Ring. </author> <year> 1995. </year> <title> Trends in current analog design: A panel debate. A n a l o g Integrated Circuits and Signal Processing. </title> <type> 7(1) 5-9. </type>
Reference: <author> Andre, David, Bennett III, Forrest H, and Koza, John R. </author> <year> 1996. </year> <title> Discovery by genetic programming of a cellular automata rule that is better than any known rule for the majority classification problem. </title> <editor> In Koza, John R., Goldberg, D. E., Fogel, D. B., and Riolo, R. L. (editors). </editor> <booktitle> Genetic Programming 1996: Proceedings of the First Annual Conference. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference-contexts: On each generation, four boatloads of emigrants, each consisting of B = 2% (the migration rate) of the node's subpopulation (selected on the basis of fitness) were dispatched to each of the four toroidally adjacent processing nodes <ref> (Andre and Koza 1996) </ref>. 4 . Results The best circuit from generation 0 (figure 2) has a fitness of 286.2 and 64 hits. It has no inductors, two capacitors, and two resistors (in addition to the source and load resistors in the embryo). <p> 1 bs of computational effort was also required to evolve a one-dimensional cellular automata rule for the majority classification task whose accuracy (82.326%) exceeds that of the original 1978 Gacs-Kurdyumov-Levin (GKL) rule, all other known subsequent human-written rules, and all other known rules produced by automated approaches for this problem <ref> (Andre, Bennett, and Koza 1996) </ref>. Moreover, the performance of four different versions of genetic programming (Koza 1994a, Koza and Andre 1996a) on the transmembrane segment identification problem is slightly superior to that of algorithms written by knowledgeable human investigators.
Reference: <author> Andre, David and Koza, John R. </author> <year> 1996. </year> <title> Parallel genetic programming: A scalable implementation using the transputer architecture. </title> <editor> In Angeline, P. J. and Kinnear, K. E. Jr. (editors). </editor> <booktitle> 1996. Advances in Genetic Programming 2. </booktitle> <address> Cambridge: </address> <publisher> MIT Press. </publisher>
Reference-contexts: On each generation, four boatloads of emigrants, each consisting of B = 2% (the migration rate) of the node's subpopulation (selected on the basis of fitness) were dispatched to each of the four toroidally adjacent processing nodes <ref> (Andre and Koza 1996) </ref>. 4 . Results The best circuit from generation 0 (figure 2) has a fitness of 286.2 and 64 hits. It has no inductors, two capacitors, and two resistors (in addition to the source and load resistors in the embryo). <p> 1 bs of computational effort was also required to evolve a one-dimensional cellular automata rule for the majority classification task whose accuracy (82.326%) exceeds that of the original 1978 Gacs-Kurdyumov-Levin (GKL) rule, all other known subsequent human-written rules, and all other known rules produced by automated approaches for this problem <ref> (Andre, Bennett, and Koza 1996) </ref>. Moreover, the performance of four different versions of genetic programming (Koza 1994a, Koza and Andre 1996a) on the transmembrane segment identification problem is slightly superior to that of algorithms written by knowledgeable human investigators.
Reference: <editor> Angeline, Peter J. and Kinnear, Kenneth E. Jr. (editors). </editor> <booktitle> 1996. Advances in Genetic Programming 2. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference: <author> Gruau, Frederic. </author> <year> 1996. </year> <title> Artificial cellular development in optimization and compilation. </title> <editor> In Sanchez, Eduardo and Tomassini, Marco (editors). </editor> <year> 1996. </year> <title> Towards Evolvable Hardware. </title> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> Vol. </volume> <pages> 1062. </pages> <address> Berlin: </address> <publisher> Springer-Verlag. </publisher> <pages> 4875. </pages>
Reference-contexts: If a mapping can be established between the program trees found in genetic programming and the line-labeled cyclic graphs germane to circuits, genetic programming can then be applied to the problem of evolving the design of a circuit. Cellular encoding <ref> (Gruau 1996) </ref> enables genetic programming to evolve a neural network. The principles of developmental biology suggest a way to map program trees into circuits. The starting point of the growth process can be a very simple embryonic electrical circuit.
Reference: <author> Holland, John H. </author> <year> 1975. </year> <booktitle> Adaptation in Natural and Artificial Systems. </booktitle> <address> Ann Arbor, MI: </address> <publisher> University of Michigan Press. </publisher>
Reference: <editor> Kinnear, Kenneth E. Jr. (editor). </editor> <booktitle> 1994. Advances in Genetic Programming. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R. </author> <year> 1992. </year> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R. </author> <year> 1994a. </year> <title> Genetic Programming II: Automatic Discovery of Reusable Programs. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference-contexts: Moreover, the performance of four different versions of genetic programming <ref> (Koza 1994a, Koza and Andre 1996a) </ref> on the transmembrane segment identification problem is slightly superior to that of algorithms written by knowledgeable human investigators. Again, approximately 1 bs of computational effort was required to produce each of these four results.
Reference: <author> Koza, John R. </author> <year> 1994b. </year> <title> Genetic Programming II Videotape: The Next Generation. </title> : <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R. and Andre, David. </author> <year> 1996a. </year> <title> Classifying protein segments as transmembrane domains using architecture-altering operations in genetic programming. </title> <editor> In Angeline, Peter J. and Kinnear, Kenneth E. Jr. (editors). </editor> <booktitle> 1996. Advances in Genetic Programming II. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R. and Andre, David. </author> <year> 1996b. </year> <title> Evolution of iteration in genetic programming. </title> <booktitle> In Evolutionary Programming V: Proceedings of the Fifth Annual Conference on Evolutionary Programming. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R. and Andre, David. </author> <year> 1996c. </year> <title> Automatic discovery of protein motifs using genetic programming. </title> <editor> In Yao, Xin (editor). </editor> <booktitle> 1996. Evolutionary Computation: Theory and Applications. </booktitle> <address> Singapore: </address> <publisher> World Scientific. In Press. </publisher>
Reference-contexts: addition, approximately 1 bs of computational effort was required for the runs of genetic programming that successfully evolved protein motifs for detecting the D-E-A-D box family of proteins and for detecting the manganese superoxide dismutase family as well or better than the comparable human-written motifs found in the PROSITE database <ref> (Koza and Andre 1996c) </ref>. 5 . Conclusion Automated synthesis of analog electronic circuits is recognized as a difficult problem. We have shown that genetic programming successfully evolved the design for a circuit that can perform source identification by correctly classify an incoming signal into categories.
Reference: <author> Koza, John R., Andre, David, Bennett III, Forrest H, and Keane, Martin A. </author> <year> 1996. </year> <title> Use of automatically defined functions and architecture-altering operations in automated circuit synthesis using genetic programming. </title> <editor> In Koza, John R., Goldberg, D. E., Fogel, D. B., and Riolo, R. L. (editors). </editor> <booktitle> 1996. Genetic Programming 1996: Proceedings of the First Annual Conference. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference-contexts: On each generation, four boatloads of emigrants, each consisting of B = 2% (the migration rate) of the node's subpopulation (selected on the basis of fitness) were dispatched to each of the four toroidally adjacent processing nodes <ref> (Andre and Koza 1996) </ref>. 4 . Results The best circuit from generation 0 (figure 2) has a fitness of 286.2 and 64 hits. It has no inductors, two capacitors, and two resistors (in addition to the source and load resistors in the embryo). <p> 1 bs of computational effort was also required to evolve a one-dimensional cellular automata rule for the majority classification task whose accuracy (82.326%) exceeds that of the original 1978 Gacs-Kurdyumov-Levin (GKL) rule, all other known subsequent human-written rules, and all other known rules produced by automated approaches for this problem <ref> (Andre, Bennett, and Koza 1996) </ref>. Moreover, the performance of four different versions of genetic programming (Koza 1994a, Koza and Andre 1996a) on the transmembrane segment identification problem is slightly superior to that of algorithms written by knowledgeable human investigators.
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, D., and Keane, M. A. </author> <year> 1996a. </year> <title> Toward evolution of electronic animals using genetic programming. </title> <booktitle> Artificial Life V: Proceedings Cambridge, </booktitle> <address> MA: </address> <publisher> The MIT Press. </publisher>
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </author> <year> 1996b. </year> <title> Four problems for which a computer program evolved by genetic programming is competitive with human performance. </title> <booktitle> Proceedings of the 1996 IEEE International Conference on Evolutionary Computation. </booktitle> <publisher> IEEE Press. </publisher> <pages> Pages 110. </pages>
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </author> <year> 1996c. </year> <title> Automated design of both the topology and sizing of analog electrical circuits using genetic programming. </title> <editor> In Gero, John S. and Sudweeks, Fay (editors). </editor> <booktitle> Artificial Intelligence in Design '96. </booktitle> <address> Dordrecht: </address> <publisher> Kluwer. </publisher> <pages> Pages 151-170. </pages>
Reference-contexts: addition, approximately 1 bs of computational effort was required for the runs of genetic programming that successfully evolved protein motifs for detecting the D-E-A-D box family of proteins and for detecting the manganese superoxide dismutase family as well or better than the comparable human-written motifs found in the PROSITE database <ref> (Koza and Andre 1996c) </ref>. 5 . Conclusion Automated synthesis of analog electronic circuits is recognized as a difficult problem. We have shown that genetic programming successfully evolved the design for a circuit that can perform source identification by correctly classify an incoming signal into categories.
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </author> <year> 1996d. </year> <title> Automated WYWIWYG design of both the topology and component values of analog electrical circuits using genetic programming. </title>
Reference: <editor> In Koza, John R., Goldberg, D. E., Fogel, D. B., and Riolo, R. L. (editors). </editor> <booktitle> 1996. Genetic Programming 1996: Proceedings of the First Annual Conference. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <editor> Koza, John R., Goldberg, D. E., Fogel, D. B., and Riolo, R. L. (editors). </editor> <booktitle> 1996. Genetic Programming 1996: Proceedings of the First Annual Conference. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference-contexts: On each generation, four boatloads of emigrants, each consisting of B = 2% (the migration rate) of the node's subpopulation (selected on the basis of fitness) were dispatched to each of the four toroidally adjacent processing nodes <ref> (Andre and Koza 1996) </ref>. 4 . Results The best circuit from generation 0 (figure 2) has a fitness of 286.2 and 64 hits. It has no inductors, two capacitors, and two resistors (in addition to the source and load resistors in the embryo). <p> 1 bs of computational effort was also required to evolve a one-dimensional cellular automata rule for the majority classification task whose accuracy (82.326%) exceeds that of the original 1978 Gacs-Kurdyumov-Levin (GKL) rule, all other known subsequent human-written rules, and all other known rules produced by automated approaches for this problem <ref> (Andre, Bennett, and Koza 1996) </ref>. Moreover, the performance of four different versions of genetic programming (Koza 1994a, Koza and Andre 1996a) on the transmembrane segment identification problem is slightly superior to that of algorithms written by knowledgeable human investigators.
Reference: <editor> Koza, J R., and Rice, J. </editor> <booktitle> 1992.Genetic Programming: The Movie. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Kruiskamp Marinum W. and Leenaerts, Domine. </author> <year> 1995. </year> <title> DARWIN: CMOS opamp synthesis by means of a genetic algorithm. </title> <booktitle> Proceedings of the 32nd Design Automation Conference. </booktitle> <address> New York, NY: </address> <institution> Association for Computing Machinery. </institution> <month> 433438. </month>
Reference-contexts: Genetic algorithms have been applied to the problem of circuit synthesis in the past. A CMOS operational amplifier (op amp) circuit was designed using a modified version of the genetic algorithm <ref> (Kruiskamp and Leenaerts 1995) </ref>; however, the topology of each op amp was one of 24 preselected topologies based on the conventional human-designed stages of an op amp. Thompson (1996) used a genetic algorithm to evolve a frequency discriminator on a Xilinx 6216 reconfigurable digital gate array operating in analog mode.
Reference: <author> Quarles, Thomas, Newton, A. R., Pederson, D. O., and Sangiovanni-Vincentelli, A. </author> <year> 1994. </year> <note> SPICE 3 Version 3F5 User's Manual. </note> <institution> Department of Electrical Engineering and Computer Science, University of California, Berkeley, </institution> <address> CA. </address> <month> March </month> <year> 1994. </year>
Reference-contexts: The netlist identifies each component of the circuit, the nodes to which that component is connected, and the value of that component. Each circuit is then simulated to determine its behavior. The 217,000-line SPICE (Simulation Program with Integrated Circuit Emphasis) simulation program <ref> (Quarles et al. 1994) </ref> was modified to run as a submodule within the genetic programming system. For this problem, the voltage VOUT is probed at node 5 and the circuit is simulated in the frequency domain.

References-found: 23

