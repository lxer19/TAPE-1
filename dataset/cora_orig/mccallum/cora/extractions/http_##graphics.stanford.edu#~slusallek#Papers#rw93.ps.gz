URL: http://graphics.stanford.edu/~slusallek/Papers/rw93.ps.gz
Refering-URL: http://graphics.stanford.edu/~slusallek/cv.html
Root-URL: http://www.cs.stanford.edu
Title: Blockwise Refinement A New Method for Solving the Radiosity Problem  
Author: G unther Greiner, Wolfgang Heidrich and Philipp Slusallek 
Affiliation: IMMD IX Graphische Datenverarbeitung Universit at Erlangen  
Abstract: Since the introduction of radiosity to computer graphics, many improvements have been made to lower the time it takes to compute a visually good approximation to the exact solution of the radiosity equation. Progressive Refinement and Overshooting are just two of the possibilities. In this paper we present a new technique to solve the radiosity equation which provides a fast approximation to the exact solution. This technique solves the Radiosity Equation by computing an approximate solution for an initial subset of patches, considered important for the radiosity environment. This partial result is then refined towards the final solution by choosing other sets of patches which may have a significant contribution. Thus the new technique reduces the solution of a large matrix equation to a number of solutions involving smaller matrices. Finally we analyze and compare the different algorithms for their convergence and computational complexity. This provides some interesting new results. 
Abstract-found: 1
Intro-found: 1
Reference: [BEM89] <author> Daniel R. Baum, Rushmeier Holly E., and Winget James M. </author> <title> Improving radiosity solutions through the use of analytically determined form-factors. </title> <journal> ACM Computer Graphics, </journal> <volume> 23(3):pp. </volume> <pages> 325-334, </pages> <month> July </month> <year> 1989. </year>
Reference: [CCW88] <author> Michael F. Cohen, Shenchang Eric Chen, and John R. Wallace. </author> <title> A progressive refinement approach to fast radiosity image generation. </title> <journal> ACM Computer Graphics, </journal> <volume> 22(4):pp. </volume> <pages> 75-84, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: introduction of Progressive Refinement in 1988 <ref> [CCW88] </ref>, which was further improved by Feda [FP92] and [GCS] using over relaxation techniques. At first we shortly review the available solution techniques for radiosity. This includes Gau-Seidel iteration, Progressive Refinement, successive over-relaxation (SOR), over-shooting and a new "Super-Shoot-Gather" method. <p> The basic algorithm is identical to Gau-Seidel except that line 5 is modified to be B i = (1 ff)B i + ff (E i + i j 2.5 Ambient Overshooting The Overshooting algorithm presented by Feda et. al. [FP92], uses the ambient term introduced by Cohen <ref> [CCW88] </ref> as an estimate for the additional amount of overshooting.
Reference: [CG85] <author> Michael F. Cohen and Donald P. Greenberg. </author> <title> The hemi-cube: A radiosity solution for complex enviroments. </title> <journal> ACM Computer Graphics, </journal> <volume> 19(3):pp. </volume> <pages> 31-40, </pages> <month> July </month> <year> 1985. </year>
Reference: [CRMT91] <author> Shenchang Eric Chen, Holly E. Rushmeier, Gavin Miller, and Douglass Turner. </author> <title> A progressive multi-pass for global illumination. </title> <journal> ACM Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 165-174, </pages> <month> July </month> <year> 1991. </year>
Reference: [FP92] <author> Martin Feda and Werner Purgathofer. </author> <title> Accelerating radiosity by overshooting. </title> <editor> In Alan Chalmers, editor, </editor> <booktitle> Proceedings of the Third Eurographics Rendering Workshop. </booktitle> <address> Eurograph-ics, </address> <year> 1992. </year>
Reference-contexts: introduction of Progressive Refinement in 1988 [CCW88], which was further improved by Feda <ref> [FP92] </ref> and [GCS] using over relaxation techniques. At first we shortly review the available solution techniques for radiosity. This includes Gau-Seidel iteration, Progressive Refinement, successive over-relaxation (SOR), over-shooting and a new "Super-Shoot-Gather" method. <p> The basic algorithm is identical to Gau-Seidel except that line 5 is modified to be B i = (1 ff)B i + ff (E i + i j 2.5 Ambient Overshooting The Overshooting algorithm presented by Feda et. al. <ref> [FP92] </ref>, uses the ambient term introduced by Cohen [CCW88] as an estimate for the additional amount of overshooting.
Reference: [GCS] <author> Steven Gortler, Michael F. Cohen, and Philipp Slusallek. </author> <title> Radiosity and relaxation methods: Progressive refinement is southwell relaxation. </title> <note> submitted for publication. </note>
Reference-contexts: introduction of Progressive Refinement in 1988 [CCW88], which was further improved by Feda [FP92] and <ref> [GCS] </ref> using over relaxation techniques. At first we shortly review the available solution techniques for radiosity. This includes Gau-Seidel iteration, Progressive Refinement, successive over-relaxation (SOR), over-shooting and a new "Super-Shoot-Gather" method. The main part of this paper will present a new family of algorithms to solve the radiosity problem. <p> Only recently it has been shown that this technique is equivalent to a numerical method called Southwell iteration <ref> [GCS] </ref>. This kind of algorithm distributes radiosity from one patch to the environment. Because it updates all patches in the environment in each step its "visual" convergence is much faster in the beginning, making it more appropriate to the radiosity problem. <p> j 7 rad = (B i + i ambient) j F ji 8 B j = B j + rad 10 B i = i ambient 11 display the image using B i as the intensity of patch i. 2.6 Super-Shoot-Gather In a paper submitted for publication, Gortler et. al. <ref> [GCS] </ref> present an algorithm that uses the form factor information that is already known to compute the amount of overshooting. Additionally, the amount of overshooting is computed separately for each other patch in the scene. <p> The unshot radiosity B ij is then derived as B ij = B i rB ij . Please see <ref> [GCS] </ref> for details of the algorithm. 4 1 for all i 3 while not converged 4 pick a patch i, such that P j B ij is largest 5 for every other patch j 6 rad = B ij j F ji 8 rB ij = B i P 1 j6=i <p> The algorithm presented in the next section extends the idea of the Super-Shoot-Gather algorithm. 3 Blockwise Refinement We extend the ideas of Gortler et. al. <ref> [GCS] </ref> in two ways: * instead of considering a single patch, we select a collection of patches at each step. * in order to have a reasonable estimate of the solution at the initial step, we allow approximate interaction between the remaining patches. 3.1 The Idea of the Method We consider
Reference: [GSCH93] <author> Steven J. Gortler, Peter Schr oder, Michael F. Cohen, and Pat Hanrahan. </author> <title> Wavelet radios-ity. </title> <journal> ACM Computer Graphics, </journal> <year> 1993. </year>
Reference: [GTGB84] <author> Cindy M. Goral, Kenneth E. Torrance, Donald P. Greenberg, and Bennett Battaile. </author> <title> Modelling the interaction of light between diffuse surfaces. </title> <journal> ACM Computer Graphics, </journal> <volume> 18(3):pp. </volume> <pages> 213-222, </pages> <month> July </month> <year> 1984. </year>
Reference: [HSA91] <author> Pat Hanrahan, David Salzman, and Larry Aupperle. </author> <title> A rapid hierarchical radiosity algorithm. </title> <journal> ACM Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 197-206, </pages> <month> July </month> <year> 1991. </year>
Reference: [ICG86] <author> Davis S. Immel, Michael F. Cohen, and Donald P. Greenberg. </author> <title> A radiosity method for non-diffuse enviroments. </title> <journal> ACM Computer Graphics, </journal> <volume> 20(4):pp. </volume> <pages> 133-142, </pages> <month> August </month> <year> 1986. </year>
Reference: [Kaj86] <author> James T. Kajiya. </author> <title> The rendering equation. </title> <journal> ACM Computer Graphics, </journal> <volume> 20(4):pp. </volume> <pages> 143-149, </pages> <month> August </month> <year> 1986. </year>
Reference-contexts: It gives some interesting insights the the convergence behavior of the different algorithms for the short- and long term convergence. 1 1.1 The Radiosity Equation The radiosity method solves a restricted version of the rendering equation <ref> [Kaj86] </ref> by approximating the surfaces in the environment by planar patches and assuming a homogeneous radiosity at each patch. Additionally the surfaces are assumed to be perfectly diffuse reflectors, so that the Lambertian Law for diffuse reflection is valid.
Reference: [SP89] <author> Fran~cois Sillion and Claude Puech. </author> <title> A general two-pass method integrating specular and diffuse reflection. </title> <journal> ACM Computer Graphics, </journal> <volume> 23(3):pp. </volume> <pages> 335-344, </pages> <month> July </month> <year> 1989. </year>
Reference: [SPL88] <author> Min-Zhi Shao, Qun-Sheng Peng, and You-Dong Liang. </author> <title> A new approach by procedural refinement for realistic image synthesis. </title> <journal> ACM Computer Graphics, </journal> <volume> 22(4):pp. </volume> <pages> 93-101, </pages> <month> August </month> <year> 1988. </year>
Reference: [WCP87] <author> John R. Wallace, Michael F. Cohen, and Greenberg Donald P. </author> <title> A two-pass solution to the rendering equation: A synthesis of ray tracing and radiosity methods. </title> <journal> ACM Computer Graphics, </journal> <volume> 21(4):pp. </volume> <pages> 311-320, </pages> <month> July </month> <year> 1987. </year>
Reference: [WEH89] <author> John R. Wallace, Kells A. Elmquist, and Eric A. Haines. </author> <title> A ray tracing algorithm for progressive radiosity. </title> <journal> ACM Computer Graphics, </journal> <volume> 23(3):pp. </volume> <pages> 315-324, </pages> <month> July </month> <year> 1989. </year> <month> 13 </month>
References-found: 15

