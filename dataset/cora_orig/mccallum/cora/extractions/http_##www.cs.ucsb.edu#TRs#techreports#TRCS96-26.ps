URL: http://www.cs.ucsb.edu/TRs/techreports/TRCS96-26.ps
Refering-URL: http://www.cs.ucsb.edu/TRs/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Efficient I/O Scheduling in Tertiary Libraries  
Abstract: With the recent improvements in network and processor speeds, several data intensive applications have become much more feasible than ever before. The only practical solution for storing such enormous amounts of data is tertiary storage. Automated access to tertiary storage is made possible through robotic libraries for tapes and optical disks. Due to the slow speeds of operation of the drives and library robotics, access times for such libraries are high resulting in the accumulation of I/O requests. In this paper we study the problem of scheduling these requests for efficient performance. We focus on scheduling policies that process all requests on a loaded medium before unloading it. For single drive settings an efficient algorithm that produces optimal schedules is developed. For multiple drives the problem is shown to be NP-Complete. Efficient and effective heuristics are presented for the multiple drive case. The scheduling policies developed achieve significant performance gains over more naive policies. The algorithms developed are simple to implement and are not restrictive. The study is general enough to be applicable to any storage library handling removable media, such as tapes and optical disks.
Abstract-found: 1
Intro-found: 1
Reference: [BD78] <author> J. Bruno and P. Downey. </author> <title> Complexity of task sequencing with deadlines, set-up times and changeover costs. </title> <journal> SIAM Journal of Computing, </journal> <volume> 7(4) </volume> <pages> 393-404, </pages> <month> November </month> <year> 1978. </year> <month> 23 </month>
Reference-contexts: The latencies can be viewed as setup times, however latencies for requests are dependent on the order in which requests are processed. Hence this variation is also not applicable. Another variation of the setup times problem was studied in <ref> [BD78] </ref> where tasks are grouped into classes and a setup time has to be paid for a job if the preceding job is not from the same class. This problem too does not apply because it is too restrictive.
Reference: [CDK + 95] <author> L. T. Chen, R. Drach, M. Keating, S. Louise, D. Rotem, and A. Shoshani. </author> <title> Efficient organization and access of multi-dimensional datasets on tertiary storage systems. </title> <booktitle> In Information Systems, </booktitle> <pages> pages 155-83. </pages> <publisher> Elsevier Science, </publisher> <year> 1995. </year>
Reference-contexts: In [Sar95a, Sar95b], modifications to the architecture of database management systems are proposed for efficiently accessing tertiary storage directly. Other studies have looked at the problem of reorganization of data that is stored on tertiary media in order to improve retrieval performance <ref> [CDK + 95, SS94] </ref>. Both studies focus on large arrays with known access patterns and make optimizations for these accesses. 2.3 Problem Specification From the above discussion it is clear that the general problem of robotic library scheduling is difficult (possibly NP-complete).
Reference: [CHL93] <author> M. J. Carey, L. M. Haas, and M. Livny. </author> <title> Tapes hold data, too: Challenges of tuples on tertiary store. </title> <booktitle> In Proc. ACM SIGMOD Int. Conf. on Management of Data, </booktitle> <pages> pages 413-7, </pages> <address> Washington, DC, </address> <year> 1993. </year>
Reference-contexts: Although tertiary storage, in particular magnetic tape, has historically been used primarily for archival or backup purposes, the exploding storage requirements and the high cost of secondary storage are forcing computer architects and designers to re-evaluate the role of tertiary storage <ref> [CHL93] </ref>. fl Work supported by a research grant from NSF/ARPA/NASA IRI9411330 and NSF instrumentation grant CDA-9421978. Commercially available automatic tape and disk libraries or jukeboxes (e.g. [EXA96, SON96, Qua96]) provide automated access to large amounts of tertiary storage. These libraries can hold hundreds or thousands of media.
Reference: [DK93] <author> A. L. Drapeau and R. H. Katz. </author> <title> Striping in large tape libraries. </title> <booktitle> In Proc. of Supercomputing, </booktitle> <pages> pages 378-387, </pages> <address> Portland, Oregon, 1993. </address> <publisher> ACM. </publisher>
Reference-contexts: Myllymaki and Livny have investigated the benefits of executing tape and disk I/O in parallel [ML96]. In [FM96], Ford and Myllymaki have proposed a log structured file system for tertiary media. The benefits of striping in tape based systems has been studied by Drapeau and Katz <ref> [DK93] </ref> and also by Golubchik and Muntz [GM95]. In [GM95] a general open system model for striped libraries is developed. In [Sar95a, Sar95b], modifications to the architecture of database management systems are proposed for efficiently accessing tertiary storage directly.
Reference: [EXA96] <author> EXABYTE. </author> <title> Products. </title> <address> http://www.Exabyte.COM:80/Products/, Oct. </address> <year> 1996. </year>
Reference-contexts: Commercially available automatic tape and disk libraries or jukeboxes (e.g. <ref> [EXA96, SON96, Qua96] </ref>) provide automated access to large amounts of tertiary storage. These libraries can hold hundreds or thousands of media. Throughout this paper we will use the term medium to refer to a tertiary storage unit such as a magnetic or optical tape or an optical or magneto-optical disk. <p> We now substitute some numbers for a commercial tape drive, the Exabyte EXB-Mammoth <ref> [EXA96] </ref> using 170mm, 20GB tapes. The size of a block is chosen to be 512 KB, which gives almost 40,000 blocks per tape. Let x and z be 1 block each. The tape switch time for the mammoth drive is around 40 seconds. <p> The values of the model parameters used for the experiments are shown in Table 2. These values are based on the Exabyte EXB-480 Library configured with Exabyte EXB Mammoth drives <ref> [EXA96] </ref>.
Reference: [FM96] <author> D. A. Ford and J. Myllymaki. </author> <title> A log-structured organization for tertiary storage. </title> <booktitle> In Proceedings of the Twelfth International Conference on Data Engineering, </booktitle> <pages> pages 20-7, </pages> <address> New Orleans, Louisiana, </address> <year> 1996. </year>
Reference-contexts: Other researchers have studied various aspects of tertiary storage systems. Myllymaki and Livny have investigated the benefits of executing tape and disk I/O in parallel [ML96]. In <ref> [FM96] </ref>, Ford and Myllymaki have proposed a log structured file system for tertiary media. The benefits of striping in tape based systems has been studied by Drapeau and Katz [DK93] and also by Golubchik and Muntz [GM95]. In [GM95] a general open system model for striped libraries is developed.
Reference: [GJ79] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability A guide to the Theory of NP-Completeness. </title> <editor> W. H. </editor> <publisher> Freeman and Co., </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: The processor scheduling problem seems to be very similar to our library scheduling problem. 5 Several variations of the problem of scheduling tasks on processors have been investigated <ref> [Par95, GJ79] </ref>. The various parameters studied include single versus multiple processors, preemptive versus non preemptive tasks, tasks with and without release times and deadlines, precedence constraints between tasks, tasks with weights or priorities and tasks with setup times.
Reference: [GM95] <author> L. Golubchik and R. Muntz. </author> <title> Analysis of striping techniques in robotic storage libraries. </title> <booktitle> In Proceedings of the Fourteenth IEEE Symposium on Mass Storage Systems, </booktitle> <pages> pages 225-38, </pages> <address> Monterey, CA, </address> <year> 1995. </year>
Reference-contexts: In [FM96], Ford and Myllymaki have proposed a log structured file system for tertiary media. The benefits of striping in tape based systems has been studied by Drapeau and Katz [DK93] and also by Golubchik and Muntz <ref> [GM95] </ref>. In [GM95] a general open system model for striped libraries is developed. In [Sar95a, Sar95b], modifications to the architecture of database management systems are proposed for efficiently accessing tertiary storage directly. <p> In [FM96], Ford and Myllymaki have proposed a log structured file system for tertiary media. The benefits of striping in tape based systems has been studied by Drapeau and Katz [DK93] and also by Golubchik and Muntz <ref> [GM95] </ref>. In [GM95] a general open system model for striped libraries is developed. In [Sar95a, Sar95b], modifications to the architecture of database management systems are proposed for efficiently accessing tertiary storage directly.
Reference: [HS96a] <author> B. K. Hillyer and A. Silberschatz. </author> <title> On the modeling and performance characteristics of a serpentine tape. </title> <booktitle> In SIGMETRICS, </booktitle> <pages> pages 170-9, </pages> <address> Canada, </address> <year> 1996. </year>
Reference-contexts: The order of processing the requests optimally on a medium is not important for our discussion. This order can be as simple as the order of the block numbers for linear tapes or more complex such as those suggested by Hillyer and Silberschatz <ref> [HS96a] </ref> for serpentine tapes or any disk scheduling policy for optical disks. <p> Note also that the order of processing of requests for a given medium is not restricted, i.e. any order can be used. For example for serpentine tapes, the scheduling policies developed by Hillyer and Silberschatz <ref> [HS96a] </ref> can be used for scheduling the requests on each tape. For the medium scheduling it is necessary only to be able to determine the seek and transfer times for each request.
Reference: [HS96b] <author> B. K. Hillyer and A. Silberschatz. </author> <title> Random I/O scheduling in online tertary storage. </title> <booktitle> In Proc. ACM SIGMOD Int. Conf. on Management of Data, </booktitle> <address> Canada, </address> <year> 1996. </year>
Reference-contexts: The algorithms developed for disks all assume that the medium is never switched which is not true for robotic libraries. More recent work on tape scheduling <ref> [HS96b, LO96] </ref> has studied efficient processing schedules for I/O requests for single tapes. In [HS96b] Hillyer and Silberschatz have analyzed algorithms for scheduling batched requests for a single serpentine tape that is loaded on the drive. Li and Orji [LO96] have studied efficient scheduling policies for linear tapes. <p> The algorithms developed for disks all assume that the medium is never switched which is not true for robotic libraries. More recent work on tape scheduling [HS96b, LO96] has studied efficient processing schedules for I/O requests for single tapes. In <ref> [HS96b] </ref> Hillyer and Silberschatz have analyzed algorithms for scheduling batched requests for a single serpentine tape that is loaded on the drive. Li and Orji [LO96] have studied efficient scheduling policies for linear tapes. Both these studies do not consider scheduling requests for more than one medium.
Reference: [KBCH95] <author> B. Kobler, J. Berbert, P. Caulk, and P. C. Hariharan. </author> <title> Architechture and design of storage and data management for the NASA Earth Observing System Data and Information System (EOSDIS). </title> <booktitle> In Proceedings of the 14th IEEE Symposium on Mass Storage Systems, </booktitle> <pages> pages 65-76, </pages> <address> Los Alamitos, CA, USA, Sept 1995. </address> <publisher> IEEE Computer Soc. Press. </publisher>
Reference-contexts: Examples of such applications include digital libraries, large scale scientific modeling and other multimedia applications. These applications are characterized by very large computational and storage requirements. Applications such as the Earth Observing System Data and Information System (EOSDIS) <ref> [KBCH95] </ref> have estimated data generation rates of well over a terabyte a day. In the present commercial setting and in the foreseeable future, the only practical solution for storing such enormous amounts of data is tertiary storage.
Reference: [LKB77] <author> J.K. Lenstra, A. K. G. Rinnooy Kan, and P. Brucker. </author> <title> Complexity of machine scheduling problems. </title> <journal> Annals of Discrete Mathematics, </journal> <volume> 1 </volume> <pages> 343-362, </pages> <year> 1977. </year>
Reference-contexts: Proof: We will prove the above theorem by showing that a known NP-complete problem can be reduced to the above problem (M F M S). We will reduce the problem of Scheduling to Minimize Weighted Completion Time (M W CT ) <ref> [LKB77] </ref>, which is defined as follows, to M F M S. <p> QUESTION: Is there an m-processor schedule for S such that the sum, over all t 2 S, of ((t) + l (t)) w (t) is no more than J 0 ? The M W CT problem has been shown to be NP-complete in <ref> [LKB77] </ref>. Given any instance of the M W CT problem, we create an instance of the M F M S problem as follows.
Reference: [LLKS85] <author> E. L. Lawler, J. K. Lenstra, A. H. G. Rinnooy Kan, and D. B. Shmoys. </author> <title> The Traveling Salesman Problem. </title> <publisher> Wiley, </publisher> <address> Chichester, </address> <year> 1985. </year>
Reference: [LO96] <author> J. Li and C. Orji. </author> <title> I/O scheduling in tape-based tertiary systems. </title> <journal> Journal of Mathematical Modelling and Scientific Computing, </journal> <volume> 6, </volume> <year> 1996. </year> <month> 24 </month>
Reference-contexts: The algorithms developed for disks all assume that the medium is never switched which is not true for robotic libraries. More recent work on tape scheduling <ref> [HS96b, LO96] </ref> has studied efficient processing schedules for I/O requests for single tapes. In [HS96b] Hillyer and Silberschatz have analyzed algorithms for scheduling batched requests for a single serpentine tape that is loaded on the drive. Li and Orji [LO96] have studied efficient scheduling policies for linear tapes. <p> More recent work on tape scheduling [HS96b, LO96] has studied efficient processing schedules for I/O requests for single tapes. In [HS96b] Hillyer and Silberschatz have analyzed algorithms for scheduling batched requests for a single serpentine tape that is loaded on the drive. Li and Orji <ref> [LO96] </ref> have studied efficient scheduling policies for linear tapes. Both these studies do not consider scheduling requests for more than one medium. Sarawagi and Stonebraker have worked on the problem of ordering I/O requests for tertiary storage media when tertiary storage is directly incorporated in a relational database [SS93].
Reference: [ML95] <author> J. Myllymaki and M. Livny. </author> <title> Disk-tape joins: Synchronizing disk and tape access. </title> <booktitle> In Joint International Conference on Measurement and Modeling of ComputerSystems. SIGMET-RICS '95/PERFORMANCE '95, </booktitle> <pages> pages 279-90, </pages> <address> Ottawa, Canada, </address> <year> 1995. </year>
Reference-contexts: Their work is not applicable outside the relational database framework. Optimization of the performance of join operations in databases has also been studied by Myllymaki and Livny <ref> [ML95] </ref> under the assumption that one relation is on tape and the other on disk. Other researchers have studied various aspects of tertiary storage systems. Myllymaki and Livny have investigated the benefits of executing tape and disk I/O in parallel [ML96].
Reference: [ML96] <author> J. Myllymaki and M. Livny. </author> <title> Efficient buffering for concurrent disk and tape I/O. </title> <booktitle> In Proceedings of Performance '96, Int. Conf. on Performance Theory, Measurement and Evaluation of Computer Communication Systems, </booktitle> <address> Lausanne, Switzerland, </address> <month> October </month> <year> 1996. </year>
Reference-contexts: Other researchers have studied various aspects of tertiary storage systems. Myllymaki and Livny have investigated the benefits of executing tape and disk I/O in parallel <ref> [ML96] </ref>. In [FM96], Ford and Myllymaki have proposed a log structured file system for tertiary media. The benefits of striping in tape based systems has been studied by Drapeau and Katz [DK93] and also by Golubchik and Muntz [GM95].
Reference: [MP93] <author> T. E. Morton and D. W. Pentico. </author> <title> Heuristic Scheduling Systems with applications to Production Systems and Project Management. </title> <publisher> John Wiley and Sons, Inc., </publisher> <year> 1993. </year>
Reference-contexts: This measure, also known as the optimization function, could be one of several possibilities. Some of the popular optimization functions that have been studied in the literature include <ref> [Pin95, MP93] </ref>: * Makespan: the time at which the last request is completed. * TWCT: the Total Weighted Completion Time (each job has an assigned weight). * TWT: the Total Waiting Time for all jobs. * Throughput: the average number of requests serviced per second. <p> These two contradictory factors make the task of finding an optimal schedule for the requests very difficult. 2.2 Related Work The problem of task or job scheduling has been extensively studied in the literature <ref> [Pin95, MP93, Par95] </ref>. Related areas are discussed here, with emphasis on the applicability of existing results to our problem. Scheduling tasks are traditionally categorized as processor scheduling or shop scheduling. Processor scheduling refers to problems where a set of tasks has to be executed by a set of processors.
Reference: [Par95] <author> G. R. Parker. </author> <title> Deterministic Scheduling Theory. </title> <publisher> Chapman & Hall, 2-6 Boundary Row, </publisher> <address> London SE1 8HN, UK, </address> <year> 1995. </year>
Reference-contexts: These two contradictory factors make the task of finding an optimal schedule for the requests very difficult. 2.2 Related Work The problem of task or job scheduling has been extensively studied in the literature <ref> [Pin95, MP93, Par95] </ref>. Related areas are discussed here, with emphasis on the applicability of existing results to our problem. Scheduling tasks are traditionally categorized as processor scheduling or shop scheduling. Processor scheduling refers to problems where a set of tasks has to be executed by a set of processors. <p> The processor scheduling problem seems to be very similar to our library scheduling problem. 5 Several variations of the problem of scheduling tasks on processors have been investigated <ref> [Par95, GJ79] </ref>. The various parameters studied include single versus multiple processors, preemptive versus non preemptive tasks, tasks with and without release times and deadlines, precedence constraints between tasks, tasks with weights or priorities and tasks with setup times.
Reference: [Pin95] <author> M. Pinedo. </author> <title> Scheduling Theory, </title> <booktitle> Algorithms and Systems. Prentice-Hall International Series in Industrial and Systems Engineering. </booktitle> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1995. </year>
Reference-contexts: This measure, also known as the optimization function, could be one of several possibilities. Some of the popular optimization functions that have been studied in the literature include <ref> [Pin95, MP93] </ref>: * Makespan: the time at which the last request is completed. * TWCT: the Total Weighted Completion Time (each job has an assigned weight). * TWT: the Total Waiting Time for all jobs. * Throughput: the average number of requests serviced per second. <p> These two contradictory factors make the task of finding an optimal schedule for the requests very difficult. 2.2 Related Work The problem of task or job scheduling has been extensively studied in the literature <ref> [Pin95, MP93, Par95] </ref>. Related areas are discussed here, with emphasis on the applicability of existing results to our problem. Scheduling tasks are traditionally categorized as processor scheduling or shop scheduling. Processor scheduling refers to problems where a set of tasks has to be executed by a set of processors. <p> In particular the algorithm is guaranteed to produce a solution that is within 20 and (b) Hot Cold request distributions (1 + 2)=2 (approximately within 20%) of the optimal for M W CT <ref> [Pin95] </ref>. This bound does not necessarily hold for the M F M S problem due to the other constant factors in the cost. Due to its good performance guarantee for the M W CT problem, we evaluated this algorithm for the M F M S problem.
Reference: [Qua96] <institution> Quantum. Products and technology. </institution> <address> http://www.quantum.com/products, Oct. </address> <year> 1996. </year>
Reference-contexts: Commercially available automatic tape and disk libraries or jukeboxes (e.g. <ref> [EXA96, SON96, Qua96] </ref>) provide automated access to large amounts of tertiary storage. These libraries can hold hundreds or thousands of media. Throughout this paper we will use the term medium to refer to a tertiary storage unit such as a magnetic or optical tape or an optical or magneto-optical disk. <p> For example, the SONY OSL-2001 jukebox can switch optical disks in about 5 seconds and the average seek time for optical disks is 28 - 40 milliseconds [SON96]. The DLT4700 mini tape library has a load/unload cycle of 29 seconds and the average seek time is about 68 seconds <ref> [Qua96] </ref>. Therefore for the optical disks the seek time is much smaller than the switch time and for the tapes the seek time is larger than the switch time.
Reference: [Sar95a] <author> S. Sarawagi. </author> <title> Database systems for efficient access to tertiary memory. </title> <booktitle> In Proceedings of the Fourteenth IEEE Symposium on Mass Storage Systems, </booktitle> <pages> pages 120-6, </pages> <address> Monterey, California, 1995. </address> <publisher> IEEE Comput. Soc. Press. </publisher>
Reference-contexts: The benefits of striping in tape based systems has been studied by Drapeau and Katz [DK93] and also by Golubchik and Muntz [GM95]. In [GM95] a general open system model for striped libraries is developed. In <ref> [Sar95a, Sar95b] </ref>, modifications to the architecture of database management systems are proposed for efficiently accessing tertiary storage directly. Other studies have looked at the problem of reorganization of data that is stored on tertiary media in order to improve retrieval performance [CDK + 95, SS94].
Reference: [Sar95b] <author> S. Sarawagi. </author> <title> Query processing in tertiary memory databases. </title> <booktitle> In Proc. of the 21st Int. Conf. on Very Large Data Bases, </booktitle> <pages> pages 585-596, </pages> <address> San Francisco, California, 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: The benefits of striping in tape based systems has been studied by Drapeau and Katz [DK93] and also by Golubchik and Muntz [GM95]. In [GM95] a general open system model for striped libraries is developed. In <ref> [Sar95a, Sar95b] </ref>, modifications to the architecture of database management systems are proposed for efficiently accessing tertiary storage directly. Other studies have looked at the problem of reorganization of data that is stored on tertiary media in order to improve retrieval performance [CDK + 95, SS94].
Reference: [Sch86] <author> H. D. Schwetman. CSIM: </author> <title> A C-based, process-oriented simulation language. </title> <booktitle> In Proceedings of the 1986 Winter Simulation Conference, </booktitle> <pages> pages 387-396, </pages> <month> December </month> <year> 1986. </year>
Reference-contexts: Next the benefits of Full Medium scheduling are presented. These are followed by the experiments with single and multiple drive settings. 5.1 Experimental Setup The algorithms were evaluated using an event driven simulator for robotic libraries developed using CSIM <ref> [Sch86] </ref>, a simulation library package. A simulation model of a general robotic library consisting of a variable number of drives, robot arms and media has been developed. The numbers of each of these is configurable.
Reference: [SON96] <author> SONY. </author> <title> Recording media products. </title> <address> http://sony.sosin.com.sg/record-media/, Oct. </address> <year> 1996. </year>
Reference-contexts: Commercially available automatic tape and disk libraries or jukeboxes (e.g. <ref> [EXA96, SON96, Qua96] </ref>) provide automated access to large amounts of tertiary storage. These libraries can hold hundreds or thousands of media. Throughout this paper we will use the term medium to refer to a tertiary storage unit such as a magnetic or optical tape or an optical or magneto-optical disk. <p> For example, the SONY OSL-2001 jukebox can switch optical disks in about 5 seconds and the average seek time for optical disks is 28 - 40 milliseconds <ref> [SON96] </ref>. The DLT4700 mini tape library has a load/unload cycle of 29 seconds and the average seek time is about 68 seconds [Qua96].
Reference: [SS93] <author> S. Sarawagi and M. Stonebraker. </author> <title> Single query opimization for tertiary memory. </title> <type> Technical Report s2k-94-45, </type> <institution> Computer Science Div. U.C. Berkeley, </institution> <month> December </month> <year> 1993. </year>
Reference-contexts: Both these studies do not consider scheduling requests for more than one medium. Sarawagi and Stonebraker have worked on the problem of ordering I/O requests for tertiary storage media when tertiary storage is directly incorporated in a relational database <ref> [SS93] </ref>. The reordering is based upon knowledge of the state of the tertiary storage and the semantics of the requests that are made for performing join operations. Their work is not applicable outside the relational database framework.
Reference: [SS94] <author> S. Sarawagi and M. Stonebraker. </author> <title> Efficient organization of large multidimensional arrays. </title> <booktitle> In IEEE Int. Conf. on Data Engineering, </booktitle> <pages> pages 328-336, </pages> <address> Houston, TX, USA, Feb. 1994. </address> <publisher> IEEE Comput. Soc. Press. </publisher>
Reference-contexts: In [Sar95a, Sar95b], modifications to the architecture of database management systems are proposed for efficiently accessing tertiary storage directly. Other studies have looked at the problem of reorganization of data that is stored on tertiary media in order to improve retrieval performance <ref> [CDK + 95, SS94] </ref>. Both studies focus on large arrays with known access patterns and make optimizations for these accesses. 2.3 Problem Specification From the above discussion it is clear that the general problem of robotic library scheduling is difficult (possibly NP-complete).
Reference: [Teo72] <author> T. J. Teorey. </author> <title> Properties of disk scheduling policies in multiprogrammed computer systems. </title> <booktitle> In Proceedings of the AFIPS Fall Joint Computer Conference, </booktitle> <pages> pages 1-11, </pages> <year> 1972. </year> <month> 25 </month>
Reference-contexts: For disk scheduling, a number of requests need to be serviced on different locations. The drive has to seek between requests that are not contiguously located. Numerous algorithms have been proposed for efficiently servicing 6 disk requests, such as LOOK, C-LOOK, C-SCAN <ref> [Teo72] </ref> etc. The major difference between disk scheduling and library scheduling is that tertiary storage media such as tapes or optical disks are removable as opposed to fixed magnetic disks. The algorithms developed for disks all assume that the medium is never switched which is not true for robotic libraries.
References-found: 27

