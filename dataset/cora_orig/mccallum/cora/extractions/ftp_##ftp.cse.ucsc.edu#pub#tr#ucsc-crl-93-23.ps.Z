URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-93-23.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Title: Providing Performance Guarantees in an FDDI Network  
Author: Darrell D. E. Long, Carol Osterbrock Luis-Felipe Cabrera 
Affiliation: Computer and Information Sciences University of California, Santa Cruz  Computer Science Department IBM Almaden Research Center  
Abstract: A network subsystem supporting a continuous media file system must guarantee a minimum throughput, a maximum delay, and a maximum jitter. We present a transport protocol that provides these guarantees. To support different types of service, our protocol is built from modules selected to meet the requirements of each communication session. A buffering technique is used to provide jitter guarantees. To provide throughput and delay guarantees, network performance is optimized based on the required transfer rate. The effects of controlling transmission rate and packet size are presented. The resulting transport protocol is modeled on a simulated FDDI network and the results are analyzed. We show that the protocol provides the required guarantees for the anticipated types of traffic. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L.-F. Cabrera and D. D. E. </author> <title> Long, Exploiting multiple I/O streams to provide high data-rates, </title> <journal> Computing Systems, </journal> <volume> vol. 4, no. 4, </volume> <year> 1991. </year>
Reference-contexts: Grant NSF CCR-9111220, by the Institute for Scientific Computing Research at Lawrence Livermore National Laboratory and by the Office of Naval Research under Grant N00014-92-J-1807. z Supported in part by the Institute for Scientific Computing Research at Lawrence Livermore National Laboratory and by a CE/CIS Domestic Graduate Research Assistantship Swift <ref> [1] </ref> is an architecture for a distributed file system to support the storage and processing of multimedia data. It uses multiple storage repositories and processing units to provide the required performance, and uses a local area network for communication between the clients and the storage units. <p> Disk technology has improved, but the data rates provided are still insufficient. With FDDI, network tech 1 nology is approaching the point of providing sufficient data rates. 2.1 The Swift Architecture The goal of the Swift I/O architecture <ref> [1] </ref> is to support high data rates in a general purpose distributed system. It addresses data rate mismatches between the application, the storage devices, and the interconnection network. Swift provides high data rates by using a high-speed interconnection medium and using multiple storage devices operating in parallel.
Reference: [2] <author> D. D. Clark, M. L. Lambert, and L. Zhang, NET-BLT: </author> <title> A bulk data transfer protocol, </title> <type> RFC 1112, </type> <institution> Network Working Group, </institution> <year> 1987. </year>
Reference-contexts: By using data packets to open connections and timers to determine when connections are closed, Delta-t avoids the problem introduced by using non-data packets for handshaking. The sliding window can be moved without explicit acknowledgment messages. NETBLT (NETwork BLock Transfer) <ref> [2] </ref> is a bulk data transfer protocol designed for use on the Internet. Since this protocol may encounter links with varying data capacity, it uses rate control to minimize network congestion and multiple buffering to minimize errors and to provide high throughput. <p> The rate that must be controlled is the rate of transmission of TPDUs across the network. The transport of TPDUs is controlled by a timer-based protocol [8]. Rate control has been shown to be effective in reducing contention in large file transfers <ref> [2] </ref>, and is well suited to the constant data flow that is characteristic of continuous media.
Reference: [3] <author> Digital Equipment Corporation, </author> <title> A Primer to FDDI: Fiber Distributed Data Interface. </title> <institution> Digital Equipment Corporation, </institution> <year> 1991. </year>
Reference-contexts: The network subsystem must address two problems. The first is meeting throughput requirements. Although the storage of data may be divided among several repositories, all of the data must pass through the network. Recent advances in network technology, in particular FDDI (Fiber Distributed Data Interface) <ref> [3] </ref>, begin to provide the necessary data rates. The second is guaranteeing that the delay between the sender and the receiver will not exceed the required maximum.
Reference: [4] <author> W. A. Doeringer et al., </author> <title> A survey of light-weight transport protocols for high-speed networks, </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 38, </volume> <month> Nov. </month> <year> 1990. </year>
Reference-contexts: None of them provides a satisfactory protocol for our needs given the diversity of traffic that need to be accommodated. Some light-weight transport protocols in use include Delta-t, NETBLT, Datakit, and XTP which are compared and analyzed by Doeringer, et al. <ref> [4] </ref>. Some of their common characteristics are: reduced overhead to establish and break connections; minimal packet exchange for flow control; use of rate control to reduce contention; and fixed-size headers. Delta-t (Dt) [8, 13] is a transport protocol for high-speed networks based on a timer mechanism.
Reference: [5] <author> D. Dykeman and W. Bux, </author> <title> Analysis and tuning of the FDDI media access control protocol, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 6, </volume> <month> July </month> <year> 1988. </year>
Reference-contexts: It may be the same size as a TSDU, larger or smaller. In an FDDI network, the TPDU 3 size is generally kept as large as possible since it has been shown that the best utilization of resources occurs when the packets are large <ref> [5] </ref>. 4.1 The Swift Environment The transport level protocol was designed with the assumption that the other layers of the protocol stack also provide guarantees. It also assumes that the higher layers deliver data at a known rate.
Reference: [6] <author> D. Ferrari, </author> <title> Guaranteeing performance for real-time communicaton in wide-area networks, </title> <type> Technical Report, </type> <institution> University of California at Berkeley, </institution> <year> 1990. </year>
Reference-contexts: Alternatively, the client may decide to wait, or change the parameters of the transmission. 2.3 Types of Data Communication The performance requirements of the protocol depend on the type of data transfer. Ferrari <ref> [6] </ref> examines different types of data transfers and their associated requirements. The primary types of transfer that need to use large amounts of network resources are audio, video, and large file transfers.
Reference: [7] <author> D. Ferrari, </author> <title> Design and applications of a delay jitter control scheme for packet-switching internetworks, in Network and Operating System Support for Digital Audio and Video, </title> <month> Nov. </month> <year> 1991. </year>
Reference-contexts: When high-quality output is desired, as in audio transmissions, jitter control can be more important than the actual amount of delay. Ferrari <ref> [7] </ref> presents an analysis of jitter in high-speed networks, and a method for jitter control on an internetwork. The goals of providing a guaranteed maximum jitter, a guaranteed maximum delay, and a guaranteed minimum data rate conflict.
Reference: [8] <author> J. G. Fletcher and R. W. Watson, </author> <title> Mechanisms for a reliable timer-based protocol, in Computer Networks 2, </title> <publisher> North-Holland Publishing Company, </publisher> <year> 1978. </year>
Reference-contexts: Some of their common characteristics are: reduced overhead to establish and break connections; minimal packet exchange for flow control; use of rate control to reduce contention; and fixed-size headers. Delta-t (Dt) <ref> [8, 13] </ref> is a transport protocol for high-speed networks based on a timer mechanism. Both sender and receiver maintain a timer, along with the rest of the information required for a sliding window protocol. <p> An important function of the protocol is insuring that the delivery rate at the receiver is guaranteed within the bounds specified. The rate that must be controlled is the rate of transmission of TPDUs across the network. The transport of TPDUs is controlled by a timer-based protocol <ref> [8] </ref>. Rate control has been shown to be effective in reducing contention in large file transfers [2], and is well suited to the constant data flow that is characteristic of continuous media.
Reference: [9] <author> T. Little, </author> <title> Protocols for bandwidth-constrained multimedia traffic, </title> <booktitle> in Proceedings of the 4 th IEEE International Workshop on Multimedia Communications, </booktitle> <year> 1992. </year>
Reference-contexts: The method used to allocate buffers is to find the desired number of buffers such that the jitter constraint can be met and the initial delay constraint is not violated. Once the number of buffers has been found it is possible to compute the burst rate <ref> [9] </ref> required to keep these buffers ready to be delivered at the receiver when needed. 5 Operation of the Protocol The Swift transport protocol was designed to provide high-speed, light-weight service with delivery guarantees.
Reference: [10] <author> D. D. E. Long and M. N. Thakur, </author> <title> Scheduling real-time disk transfers for continuous media applications, </title> <booktitle> in Proceedings of the 12 th Symposium on Mass Storage Systems, IEEE, </booktitle> <month> Apr. </month> <year> 1993. </year>
Reference-contexts: It also assumes that the higher layers deliver data at a known rate. In the case of real-time devices such as microphones or cameras the data rate is known. For storage devices the data rate is controlled by the storage subsystem <ref> [10] </ref>. In general, the data rate is controlled according to the throughput requirements specified by the application. An important function of the protocol is insuring that the delivery rate at the receiver is guaranteed within the bounds specified.
Reference: [11] <author> H. Schwetman, </author> <title> CSIM reference manual (revision 15), </title> <type> Tech. Rep. </type> <institution> ACT-ST-252-87, Microelectronics and Computer Technology Corporation, </institution> <year> 1991. </year>
Reference-contexts: After the storage mediator has sent messages to the sender and receiver, and received session close confirmation messages, it removes the session from the list of active sessions. 6 Simulation We have simulated the performance of the protocol using CSIM <ref> [11] </ref>. CSIM is designed for simulation of networks and contains tools for setting up processes and communication links as well as many tools for generating test events and gathering statistics. The protocol simulation allows us to specify any number of audio, video, or general data sessions.
Reference: [12] <author> K. C. Sevcik and M. J. Johnson, </author> <title> Cycle time properties of the FDDI token ring protocol, </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> vol. 13, </volume> <month> Mar. </month> <year> 1987. </year>
Reference-contexts: FDDI uses a timed token ring protocol to control access. Sevcik and Johnson <ref> [12] </ref> have analyzed the properties of the FDDI protocol and found that the upper bound on the token cycle time, and therefore on the time between two transmissions of synchronous frames, is less than twice the target token rotation time (TTRT) when the synchronous allocation is done correctly. <p> The exact amount that 7 can be allocated depends on the length of the channel and the number of stations, and the TTRT. It can be seen that the throughput is consistently equal to the load. This is consistent with the analysis of FDDI by Sevcik and Johnson <ref> [12] </ref>. In addition, the delay and jitter fall within the guaranteed maximum, which is 4 milliseconds for a TTRT of 2 milliseconds. In all the simulations the maximum jitter was the same as or less than the maximum delay.
Reference: [13] <author> R. W. Watson, </author> <title> Delta-t protocol specification, </title> <type> Tech. Rep. </type> <institution> UCID-19293, Lawrence Livermore National Laboratory, </institution> <year> 1983. </year> <month> 9 </month>
Reference-contexts: Some of their common characteristics are: reduced overhead to establish and break connections; minimal packet exchange for flow control; use of rate control to reduce contention; and fixed-size headers. Delta-t (Dt) <ref> [8, 13] </ref> is a transport protocol for high-speed networks based on a timer mechanism. Both sender and receiver maintain a timer, along with the rest of the information required for a sliding window protocol. <p> The strength of the delivery guarantee depends on the nature of the data. For example, losing a video frame is less noticeable than losing an audio sample. When flow control is necessary it must be as transparent as possible. The method chosen is similar to the Delta-t <ref> [13] </ref> simplex connection method. This is a window-based flow control where acknowledgments are assumed if a negative acknowledgment is not received. The maximum wait is computed from knowledge of the network.
References-found: 13

