URL: http://www.daimi.aau.dk/~mailund/papers/textformat.ps
Refering-URL: http://www.daimi.aau.dk/~mailund/
Root-URL: http://www.daimi.aau.dk
Email: E-mail: frblyngso,mailundg@daimi.aau.dk  
Title: Textual Interchange Format for High-level Petri Nets  
Author: Regnar Bang Lyngso and Thomas Mailund 
Address: DK-8000 Aarhus C Denmark  
Affiliation: Computer Science Department University of Aarhus  
Abstract: In this paper a text format for High-level Petri Net (HLPN) diagrams is presented. The text format is designed to serve as a platform-independent file format for the Design/CPN tool. It is consistent with the forthcoming standard for High-level Petri Nets. The text format may also be seen as our contribution to the development of an open, tool-independent interchange format for High-level Petri nets. The text format will make it possible to move Design/CPN diagrams between all supported hardware platforms and versions. It is also designed to be a bridge to other Petri Net tools, e.g., other analysis tools which the user may want to use with Design/CPN diagrams. The proposed text format does not address any standardisation for the inscription language used in the diagram. It is, however, possible to extend the format to incorporate such a standardisation. The text format is designed for the exchange of Hierarchical Coloured Petri Nets but the structure is general enough to cope with other High-level Petri Nets as well. The text format presented here has been implemented as part of Design/CPN version 3.1. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Jonathan Billington et al. </author> <title> High-Level Petri Nets Concepts, Definitions and Graphical Notation. </title> <type> Committee Draft 15909, </type> <institution> International Standards Organization and International Electrotechnical Committee, </institution> <month> oct </month> <year> 1997. </year> <note> ISO/IEC JTC1/SC7/WG11 N-3. </note>
Reference-contexts: To that end we have chosen to use the terminology presented in the current version of the committee draft of the HLPN standard <ref> [1] </ref>. This means that the entities known in Design/CPN as arc expressions, colour regions and guards are called arc annotations, type region and transition conditions, respectively. Furthermore we chose to use the SGML (Standard Generalized Markup Language) ISO standard, which will be described in Sect. 3.
Reference: 2. <author> Per Cederqvist. </author> <title> Version Management with CVS. Signum Support AB, </title> <address> Box 2044, S-580 02 Linkoping, Sweden, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Large projects, however, often demand some sort of version control of files. Common version control systems, e.g. CVS <ref> [2] </ref>, works well on text but, perhaps surprisingly enough, less than perfect on the text format proposed here.
Reference: 3. <author> CPN ML: </author> <title> Relation with Standard ML. </title> <publisher> &lt;URL:http://www.daimi.aau.dk/~desgncpn/sml/cpnml.html&gt;. </publisher>
Reference-contexts: The tool has been used in many projects in a broad range of application areas [8]. Design/CPN supports Hierarchical Coloured Petri Nets (CP-nets or CPNs) [7] with complex data types (colour sets) and complex data manipulations (arc expressions and guards) both specified in the functional programming language CPN ML <ref> [3] </ref>.
Reference: 4. <author> L. Peter Deutsch. </author> <title> RFC 1952: GZIP file format specification version 4.3, </title> <month> May </month> <year> 1996. </year> <title> Status: INFORMATIONAL. </title>
Reference-contexts: version control, but when editing the diagrams in HLPN tools, as will often be the case, two major problems arise: we have no guaranty of consistency in identifiers, and different tools might export the objects in a different order. 4 The examples in this paper were all compressed using gzip <ref> [4] </ref>. Tools will have different ways of identifying objects internally which might reflect on the exported identifiers. Editing one file in the project can thus change the identifiers in that file making it inconsistent with the other files.
Reference: 5. <author> Charles F. Goldfarb and Yuri Rubinsky. </author> <title> The SGML handbook. </title> <publisher> Clarendon Press, Oxford, </publisher> <address> UK, </address> <year> 1990. </year>
Reference-contexts: The rest of the definitions in this light version of the real DTD make use of the constructs discussed above. For a thorough description of SGML confer with the ISO 8879 standard [6] or <ref> [5] </ref> which includes an annotated version of the ISO 8879 standard. 3.2 The Text Format as Description of a Petri Net Diagram We have now presented and explained how the text format might represent a Petri Net diagram.
Reference: 6. <author> Information processing: </author> <title> text and office systems: Standard generalized markup language (SGML). ISO standard 8879, International Organization for Standardization, </title> <address> Geneve, Switzerland, </address> <year> 1986. </year> <note> Amendment from 1988 exists. </note>
Reference-contexts: It connects the transition and the Sent place. The orientation is from the transition to the place (line 85) and the line thickness is 2 instead of 0 (lines 88 and 73). 3 Description of the Text Format The format is based on SGML (Standard Generalized Markup Language) <ref> [6] </ref> for several reasons: SGML is designed specifically to support text interchange, has a rigorously described structure which makes it easily understood by both computers and humans, represents hierarchies, sets a standard for communication between different platforms, versions and tools, is a well documented, wide spread and accepted standard, is the <p> It is the root of a tree of elements which as a whole makes up the document's content. As stated in Annex B of the SGML ISO standard <ref> [6] </ref> a cornerstone of a SGML is the Document Type Definition (DTD for short). The following is a light version of the full DTD which describes the structure of the text format. <p> The rest of the definitions in this light version of the real DTD make use of the constructs discussed above. For a thorough description of SGML confer with the ISO 8879 standard <ref> [6] </ref> or [5] which includes an annotated version of the ISO 8879 standard. 3.2 The Text Format as Description of a Petri Net Diagram We have now presented and explained how the text format might represent a Petri Net diagram.
Reference: 7. <author> Kurt Jensen. </author> <title> Coloured Petri nets Basic concepts, Analysis Methods and Practical Use. Volume 1: Basic Concepts. </title> <booktitle> Monographs in theoretical computer science, </booktitle> <pages> 234 pages, </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1992. </year>
Reference-contexts: 1 Introduction Design/CPN is a widely used tool within the Petri Net community and has been developed for more than 10 years. The tool has been used in many projects in a broad range of application areas [8]. Design/CPN supports Hierarchical Coloured Petri Nets (CP-nets or CPNs) <ref> [7] </ref> with complex data types (colour sets) and complex data manipulations (arc expressions and guards) both specified in the functional programming language CPN ML [3].
Reference: 8. <author> Kurt Jensen. </author> <title> Coloured Petri Nets Basic concepts, Analysis Methods and Practical Use. Volume 3: Practical use. </title> <booktitle> Monographs in theoretical computer science, </booktitle> <pages> 265 pages, </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1997. </year>
Reference-contexts: 1 Introduction Design/CPN is a widely used tool within the Petri Net community and has been developed for more than 10 years. The tool has been used in many projects in a broad range of application areas <ref> [8] </ref>. Design/CPN supports Hierarchical Coloured Petri Nets (CP-nets or CPNs) [7] with complex data types (colour sets) and complex data manipulations (arc expressions and guards) both specified in the functional programming language CPN ML [3].
Reference: 9. <author> Regnar Bang Lyngso and Thomas Mailund. </author> <title> Textual Interchange Format for High-level Petri Nets Developers Guide, </title> <year> 1998. </year>
Reference-contexts: We have implemented routines for loading and saving the text format in Design/CPN. The load routines, however, are almost tool independent, and it should be fairly easy to incorporate this module into other tools. For further detail we refer to <ref> [9] </ref>. 2 An Example Diagram In this section we will give an example of a small diagram described in the text format. A description of the text format will follow in the next section. shows the text description of the same diagram. <p> Identifiers related to the look of an object and the 36 corresponding attributes --&gt; 37 &lt;!-- ELEMENTS MIN CONTENT &gt; 38 &lt;!ELEMENT posattr - O EMPTY&gt; 2 The full DTD for the Textual Interchange Format can be found in the Textual In terchange Format for High-level Petri Nets Developers Guide <ref> [9] </ref>. 39 &lt;!ELEMENT lineattr - O EMPTY&gt; 40 &lt;!ELEMENT fillattr - O EMPTY&gt; 41 &lt;!ELEMENT textattr - O EMPTY&gt; 42 43 &lt;!-- ELEMENTS NAME VALUE DEFAULT&gt; 44 &lt;!ATTLIST posattr x CDATA #IMPLIED 45 y CDATA #IMPLIED 46 &gt; 47 &lt;!ATTLIST lineattr type %linetypes; 48 thick CDATA 49 colour %colours; 50 &gt;
References-found: 9

