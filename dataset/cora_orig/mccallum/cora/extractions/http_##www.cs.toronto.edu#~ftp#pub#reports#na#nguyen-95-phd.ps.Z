URL: http://www.cs.toronto.edu/~ftp/pub/reports/na/nguyen-95-phd.ps.Z
Refering-URL: http://www.cs.toronto.edu/NA/reports.html
Root-URL: 
Title: Interpolation and Error Control Schemes for Algebraic Differential Equations Using Continuous Implicit Runge-Kutta Methods  
Author: by Hung Nguyen 
Degree: A thesis submitted in conformity with the requirements for the degree of Doctor of Philosophy  
Note: c Copyright by Hung Nguyen 1995  
Address: Toronto  
Affiliation: Graduate Department of Computer Science University of  
Abstract-found: 0
Intro-found: 0
Reference: [1] <author> R. Alexander, </author> <title> Diagonally Implicit Runge-Kutta Methods for Stiff ODEs, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 14, </volume> <pages> 1006-1022, </pages> <year> 1977. </year>
Reference-contexts: They belong to two classes of s-stage formulas: SDIRK (s) and Gauss (s). SDIRK (s), with its lower triangular Butcher tableau (diagonally implicit), is A-stable and of global order s + 1 for s 3 <ref> [1] </ref>.
Reference: [2] <author> U. M. Ascher, L. R. Petzold, </author> <title> Projected Implicit Runge-Kutta Methods for Differential-Algebraic Equations, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 28, </volume> <pages> 1097-1119, </pages> <year> 1991. </year>
Reference-contexts: Numerical software using the latter approach generally are based on implicit Runge-Kutta (RK) formulas. It is this class of methods that we will study in detail in this thesis. Other methods include extrapolation methods [14], [33], projected implicit RK methods <ref> [2] </ref>, half-explicit RK methods [7], [35] and least squares methods [5]. 1.7 Runge-Kutta formulas Consider the generic ADE (1.1) and let (y n (t); z n (t)) T be the local solution of the associated local problem at step n which is also written as, y 0 0 = g (y <p> In addition, since the formulas are not equivalent to formulas for IVPs, the order for z is reduced although the order for y is still preserved, as illustrated in Table 1.4. To overcome this deficiency, we apply the projected RK method <ref> [2] </ref> which projects the standard discrete solution onto the constraint manifold. <p> Since the right endpoint of the step is not an abscissa for the three implicit RK formulas we are considering, the discrete solution, y n ; will not necessarily satisfy the algebraic constraint. Accordingly, we apply the projected RK method <ref> [2] </ref> which projects the discrete solution onto the constraint manifold. This approach, together with a version of the bootstrapping procedure, constitutes Scheme 2 which is used in one implementation of the RK formulas. In addition, we present a proof [2] that the order of the projected RK method for index 2 <p> Accordingly, we apply the projected RK method <ref> [2] </ref> which projects the discrete solution onto the constraint manifold. This approach, together with a version of the bootstrapping procedure, constitutes Scheme 2 which is used in one implementation of the RK formulas. In addition, we present a proof [2] that the order of the projected RK method for index 2 ADEs is equal to the classical order for ODEs, and hence there should be no order reduction.
Reference: [3] <author> U. M. Ascher, </author> <title> On Numerical Differential Algebraic Problems with Application to Semiconductor Device Simulation, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 26, </volume> <pages> 517-538, </pages> <year> 1989. </year>
Reference-contexts: Among other applications where ADEs arise, we can cite electrical networks [32], trajectory prescribed path control [9] and semiconductor device simulation <ref> [3] </ref>. 1.6 Numerical methods As with the case for standard ordinary differential equations (ODEs), numerical methods for solving ADEs are usually based on either multistep or one-step methods. Numerical software using the former approach include LSODI [29] and DASSL [38] which employ implicit backward differentiation formulas (BDFs).
Reference: [4] <author> U. M. Ascher, L. R. Petzold, </author> <title> Projected Collocation for High-Order Higher-Index Differential-Algebraic Equations, </title> <type> tech. rep. 91-9, </type> <institution> Dept. Comp. Sci., University of British Columbia, </institution> <year> 1991. </year>
Reference: [5] <author> A. Barrlund, </author> <title> Constrained Least Squares Methods for Linear Timevarying DAE systems, </title> <journal> Numer. Math., </journal> <volume> 60, </volume> <pages> 145-161, </pages> <year> 1991. </year>
Reference-contexts: It is this class of methods that we will study in detail in this thesis. Other methods include extrapolation methods [14], [33], projected implicit RK methods [2], half-explicit RK methods [7], [35] and least squares methods <ref> [5] </ref>. 1.7 Runge-Kutta formulas Consider the generic ADE (1.1) and let (y n (t); z n (t)) T be the local solution of the associated local problem at step n which is also written as, y 0 0 = g (y n (t); z n (t)): 5 with initial values, (y
Reference: [6] <author> P. R. Beesack, </author> <title> Gronwall Inequalities, </title> <booktitle> Carleton Mathematical Lecture Notes, </booktitle> <volume> 11, </volume> <year> 1975. </year>
Reference-contexts: The perturbed equation (1.13) lends itself to the setting of the theory of Gronwall inequalities <ref> [6, pp. 36-47] </ref> which also gives insight into the global error in u (t): This in turn leads naturally to an analysis for the order of u (t): We will extend this approach to ADEs. 1.11 The underlying ODE To extend the notion of the defect to the class of ADEs <p> This is achieved by solving 0 = g (y n ; ^z n ) to obtain the improved solution ^z n : For continuous RK methods, we introduce an analysis based on the application of Gronwall inequalities <ref> [6, pp. 36-48] </ref> by converting the original ADE and its perturbed equation to its natural underlying IVP counterpart. This approach allows us to apply the results established in the IVP literature. In particular, this theory provides an error bound for any continuous approximation which satisfies a perturbed equation.
Reference: [7] <author> V. Brasey, E. Hairer, </author> <title> Half-Explicit Runge-Kutta Methods for Diffrential-Algebraic Systems of Index 2, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 30, </volume> <pages> 538-552, </pages> <year> 1993. </year>
Reference-contexts: Numerical software using the latter approach generally are based on implicit Runge-Kutta (RK) formulas. It is this class of methods that we will study in detail in this thesis. Other methods include extrapolation methods [14], [33], projected implicit RK methods [2], half-explicit RK methods <ref> [7] </ref>, [35] and least squares methods [5]. 1.7 Runge-Kutta formulas Consider the generic ADE (1.1) and let (y n (t); z n (t)) T be the local solution of the associated local problem at step n which is also written as, y 0 0 = g (y n (t); z n
Reference: [8] <author> K. E. Brenan, S. L. Campbell, L. R. Petzold, </author> <title> Numerical Solution of Initial-Value Problems in Differential Algebraic Equations, </title> <publisher> North-Holland, </publisher> <year> 1989. </year>
Reference-contexts: Here, the differential component is (y (t); z (t)) T and the algebraic component is (t): Linear ADEs with index higher than 3 are studied in <ref> [8, pp. 22-29] </ref>.
Reference: [9] <author> K. E. Brenan, L. R. Petzold, </author> <title> The Numerical Solution of Higher Index Differential/ALgebraic Equations by Implicit Methods, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 26, </volume> <pages> 976-996, </pages> <year> 1989. </year>
Reference-contexts: Among other applications where ADEs arise, we can cite electrical networks [32], trajectory prescribed path control <ref> [9] </ref> and semiconductor device simulation [3]. 1.6 Numerical methods As with the case for standard ordinary differential equations (ODEs), numerical methods for solving ADEs are usually based on either multistep or one-step methods.
Reference: [10] <author> K. Burrage, L. Petzold, </author> <title> On Order Reduction for Runge-Kutta Methods Applied to Differential Algebraic Systems and to Stiff Systems of ODES, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 27, </volume> <pages> 447-456, </pages> <year> 1990. </year>
Reference: [11] <author> J. C. Butcher, </author> <title> The Numerical Analysis of Ordinary Differential Equations, </title> <publisher> John Wiley and Sons, </publisher> <year> 1987. </year>
Reference: [12] <author> J. C. Butcher, </author> <title> On the implementation of implicit Runge-Kutta methods, </title> <journal> BIT, </journal> <volume> 6, </volume> <pages> pp. 237-240, </pages> <year> 1976. </year> <month> 95 </month>
Reference-contexts: Although Gauss (s) enjoys optimal order, the resulting system of size N s can not be decomposed into smaller systems in its original form. (Note that the Hessenberg form of the coefficient matrix can be utilized to yield smaller subsystems of size N <ref> [12] </ref>, at the expense of extra overhead and a more complicated code). 1.8 Convergence results Table 1.4 displays the order of convergence for the above standard implicit RK formulas. * Index 1: the derivation of these results can be found in [26] (Table 2.3, p. 18, Theorem 3.1, pp. 25, 26).
Reference: [13] <author> T. Cebeci, R. S. Hirsh, H. B. Keller, P. G. Williams, </author> <title> Studies of Numerical Methods for the Plane Navier-Stokes Equations, </title> <journal> Comp. Methods Appl. Mechanics and Engineering, </journal> <volume> 27, </volume> <pages> 13-44, </pages> <year> 1981. </year>
Reference-contexts: (t) + G T (q)(t); 67 0 = G (q (t))u (t); where : R ! R 6 : We used the same defect, residual and projected values as prescribed in the preceding subsection. as developed in the preceding subsection. 6.2.7 Index 2 cavity problem Consider the (conservative) Navier-Stokes equation <ref> [13] </ref>, [25], [43], [31], u 0 = Re 0 = div u; on the unit square. Here Re is the Reynolds number and u = (u (t); v (t)) T is the velocity. The initial condition is (u (0); v (0)) = (0; 0); p (t) = 0.
Reference: [14] <author> P. Deuflhard, E. Hairer, J. Zugck, </author> <title> One-step and Extrapolation Methods for Differential-Algebraic Systems, </title> <journal> Numer. Math., </journal> <volume> 51, </volume> <pages> 501-516, </pages> <year> 1987. </year>
Reference-contexts: Numerical software using the latter approach generally are based on implicit Runge-Kutta (RK) formulas. It is this class of methods that we will study in detail in this thesis. Other methods include extrapolation methods <ref> [14] </ref>, [33], projected implicit RK methods [2], half-explicit RK methods [7], [35] and least squares methods [5]. 1.7 Runge-Kutta formulas Consider the generic ADE (1.1) and let (y n (t); z n (t)) T be the local solution of the associated local problem at step n which is also written as, <p> is to avoid using the low order stage derivatives l i : Based on the Implicit Function Theorem (which states that for equation (2.2) with nonsingular g z , z (t) can be expressed explicitly in term of y (t) for some function ^ G), we reformulate (2.1), (2.2) as, <ref> [14] </ref> y 0 (t) = f (y (t); ^ G (y (t))); (2.7) which leads to instead of (2.3), (2.4) involving both k i and l i an equation in k i alone, k i = f (Y i ; ^ G (Y i )): (2.9) Since (2.7) is just an <p> have been observed in a fixed stepsize implementation applied to the previously mentioned test problem. y z SDIRK (2) 3 3 Gauss (3) 6 6 Table 2.2: Observed order for an approach based on using the Implicit Function Theorem Alternatively, one can differentiate the constraint and rearrange terms to obtain, <ref> [14] </ref> g z z 0 = g y f: (2.10) Thus (2.1), (2.10) constitute a linear-implicit ODE in which both y and z are differential variables, and hence y n and z n will both have the same order (provided that g z is nonsingular.) The following global orders have been
Reference: [15] <author> C. Engstler, C. Lubich, U. Nowak, U. Pohle, </author> <title> MEXX Numerical Software for the Integration of Constrained Multibody Systems, </title> <type> preprint SC 92-12, </type> <institution> Konrad-Zuse-Zentrum fur Information-stechnik Berlin, </institution> <year> 1992. </year>
Reference-contexts: A prominent example is the stabilized GGL formulation of constrained mechanical systems (CMSs) which will be discussed in various parts of this document. 1.5 Applications Two important application areas where ADEs arise are fluid dynamics [25, pp. 27-79] and constrained mechanical systems <ref> [15] </ref>. The governing equation in fluid dynamics is the Navier-Stokes equation in the velocity (differential) and the pressure (algebraic).
Reference: [16] <author> W. H. Enright, </author> <title> Analysis of Error Control Stategies for Continuous Runge-Kutta Methods, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 26, </volume> <pages> 588-599, </pages> <year> 1989. </year>
Reference-contexts: In addition, the scheme separates the interpolation process for the differential component from the interpolation for the algebraic component. We also extend the defect-based error control strategy introduced in <ref> [16] </ref> and [17] to the case of ADEs. The approach attempts to control the size of the defect associated with a continuous approximation on the interval of the current step by sampling the defect at a chosen point. <p> We are interested in interpolation and error control schemes which will extend the computed solution obtained from a discrete implicit RK formula to a continuous approximating solution. In particular, we extend the bootstrapping procedure and the defect-based error control strategy as introduced in <ref> [16] </ref>, [17], [18] to semi explicit ADEs of index 1, index 2 and index 3 and apply the results to the three projected RK formulas SDIRK (2), Gauss (2) and Gauss (3).
Reference: [17] <author> W. H. Enright, </author> <title> A New Error-Control for Initial Value Solvers, </title> <journal> Applied Mathematics and Computation, </journal> <volume> 31, </volume> <pages> 288-301, </pages> <year> 1989. </year>
Reference-contexts: In the class of methods we will develop, we employ a defect-based approach <ref> [17] </ref> which attempts to control the size of the defect ffi (t) which, for the standard IVP, y 0 (t) = f (y (t)); and a continuous approximation, u n (t), is defined by, u 0 for an interpolant u n (t) on the current step. <p> In addition, the scheme separates the interpolation process for the differential component from the interpolation for the algebraic component. We also extend the defect-based error control strategy introduced in [16] and <ref> [17] </ref> to the case of ADEs. The approach attempts to control the size of the defect associated with a continuous approximation on the interval of the current step by sampling the defect at a chosen point. <p> We are interested in interpolation and error control schemes which will extend the computed solution obtained from a discrete implicit RK formula to a continuous approximating solution. In particular, we extend the bootstrapping procedure and the defect-based error control strategy as introduced in [16], <ref> [17] </ref>, [18] to semi explicit ADEs of index 1, index 2 and index 3 and apply the results to the three projected RK formulas SDIRK (2), Gauss (2) and Gauss (3).
Reference: [18] <author> W. H. Enright, K. R. Jackson, S. P. Ntrsett, P. G. Thomsen, </author> <title> Interpolants for Runge-Kutta Formulas, </title> <journal> ACM Trans. Math. Software, </journal> <volume> 12, </volume> <pages> 193-218, </pages> <year> 1986. </year>
Reference-contexts: In this document, 7 we use the "bootstrapping" procedure <ref> [18] </ref> to construct higher order interpolants. <p> By analyzing three implicit RK formulas SDIRK (2), Gauss (2) and Gauss (3) as our starting point, we have incorporated several standard techniques and strategies which have been thoroughly investigated in the ODE as well as the ADE literature. We extend the bootstrapping procedure introduced by <ref> [18] </ref> to contruct a continuous approximation to the solution with uniform order of convergence on the whole interval of interest. <p> k (s)kds: (2.16) In addition, we have, v (t) z (t) = G (u (t); (t)) G (y (t); 0): 16 Assume that G satisfies a Lipschiptz condition in each of its arguments, then a global error bound for v (t) is, We now extend the bootstrapping idea introduced in <ref> [18] </ref> to the case of ADEs and construct a polynomial approximation u n (t) to y n (t) using Hermite-Birkhoff interpolation and v n (t) to z n (t) using Lagrange interpolation. <p> We are interested in interpolation and error control schemes which will extend the computed solution obtained from a discrete implicit RK formula to a continuous approximating solution. In particular, we extend the bootstrapping procedure and the defect-based error control strategy as introduced in [16], [17], <ref> [18] </ref> to semi explicit ADEs of index 1, index 2 and index 3 and apply the results to the three projected RK formulas SDIRK (2), Gauss (2) and Gauss (3).
Reference: [19] <author> C. Fuhrer, B. J. Leimkuhler, </author> <title> Numerical Solution of Differential Algebraic Equations for Constrained Mechanical Motion, </title> <journal> Numer. Math, </journal> <volume> 59, </volume> <pages> 55-69, </pages> <year> 1991. </year>
Reference: [20] <author> C. W. Gear, </author> <title> Numerical Initial Value Problems in Ordinary Differential Equations, </title> <publisher> Prentice-Hall, Inc., </publisher> <year> 1971. </year>
Reference: [21] <author> C. W. Gear, L. R. Petzold, </author> <title> ODE Methods for the Solution of Differential/Algebraic Systems, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 21, </volume> <pages> 716-728, </pages> <year> 1984. </year>
Reference-contexts: (y (t 0 ); z (t 0 )) T = (y 0 ; z 0 ) T ; The above ADE cast in autonomous semi explicit form can also be derived from a fully implicit form F (y (t); y 0 (t)) = 0 with F y 0 being singular <ref> [21] </ref>.
Reference: [22] <author> C. W. Gear, B. Leimkuhler, L. R. Petzold, </author> <title> On the Consistent Initialization of Differential-Algebraic Equations, </title> <year> 1987. </year>
Reference-contexts: in most applications and will be the focus for this study. 1.2 Index An ADE is usually classified according to its index, which for our purpose is defined as the number of times one needs to differentiate the constraint in order to obtain an explicit expression for z 0 (t) <ref> [22] </ref>.
Reference: [23] <author> C. W. Gear, B. Leimkuhler, G. K. Gupta, </author> <title> Automatic Integration of Euler-Lagrange Equations with Constraints, </title> <journal> J. Comp. Appl. Math., </journal> <volume> 12 & 13, </volume> <pages> 77-90, </pages> <year> 1985. </year>
Reference-contexts: In addition to the index 2 formulation of the original index 3 ADE, we also study the index 2 stabilized/GGL formulation <ref> [23] </ref>, q 0 (t) = u (t) + G T (q (t))(t); 0 = g (q (t)); (1.12) which is derived by introducing another algebraic component (t): However, note that all formulations are linear in the algebraic component, thus allowing one to more easily derive higher order numerical methods than would <p> n (t) + n (t); 1 n (t)(f + fl n (t)Q n (t)) U T In addition, we used exact formulas for the projected values (^y n ; ^z n ) T : 62 6.2.3 Stabilized index 2 pendulum problem The stabilized index 2 pendulum problem is given by <ref> [23] </ref>, q 0 (t) = u (t) (t)q (t); 0 = q (t) T q (t) 1; where in addition, (0) = 0: We use the same underlying defect and residual as developed in the two preceding subsections.
Reference: [24] <author> I. Gladwell, L. F. Shampine, L. S. Baca, R. W. Brankin, </author> <title> Practical Aspects of Interpolation in Runge-Kutta Codes, </title> <journal> SIAM J. Sci. Stat. Comput., </journal> <volume> 8, </volume> <year> 1987. </year>
Reference-contexts: In this document, 7 we use the "bootstrapping" procedure [18] to construct higher order interpolants. Other continuous approaches can be found in [42] and <ref> [24] </ref>. 1.10 Error control Existing codes for solving ADEs use a pair of RK formulas of order (p; p 1) to estimate the size of the discrete local error at the right end point of the current step.
Reference: [25] <author> P. M. Gresho, R. L. Lee, </author> <title> Recent Advances in Numerical Methods in Fluids, </title> <address> Pineridge, Swansea, </address> <year> 1980. </year>
Reference-contexts: A prominent example is the stabilized GGL formulation of constrained mechanical systems (CMSs) which will be discussed in various parts of this document. 1.5 Applications Two important application areas where ADEs arise are fluid dynamics <ref> [25, pp. 27-79] </ref> and constrained mechanical systems [15]. The governing equation in fluid dynamics is the Navier-Stokes equation in the velocity (differential) and the pressure (algebraic). <p> + G T (q)(t); 67 0 = G (q (t))u (t); where : R ! R 6 : We used the same defect, residual and projected values as prescribed in the preceding subsection. as developed in the preceding subsection. 6.2.7 Index 2 cavity problem Consider the (conservative) Navier-Stokes equation [13], <ref> [25] </ref>, [43], [31], u 0 = Re 0 = div u; on the unit square. Here Re is the Reynolds number and u = (u (t); v (t)) T is the velocity. The initial condition is (u (0); v (0)) = (0; 0); p (t) = 0.
Reference: [26] <author> E. Hairer, C. Lubich, M. Roche, </author> <title> The Numerical Solution of Differential-Algebraic Systems by Runge-Kutta Methods, </title> <publisher> Springer-Verlag, </publisher> <year> 1989. </year> <month> 96 </month>
Reference-contexts: be utilized to yield smaller subsystems of size N [12], at the expense of extra overhead and a more complicated code). 1.8 Convergence results Table 1.4 displays the order of convergence for the above standard implicit RK formulas. * Index 1: the derivation of these results can be found in <ref> [26] </ref> (Table 2.3, p. 18, Theorem 3.1, pp. 25, 26). Observe that the order in the ycomponent is also the classical order for standard IVPs. * Index 2: the results for RadauIIA can be found in [26] (Table 2.3, p. 18, p. 47). The results for SDIRK are derived in [26] <p> RK formulas. * Index 1: the derivation of these results can be found in <ref> [26] </ref> (Table 2.3, p. 18, Theorem 3.1, pp. 25, 26). Observe that the order in the ycomponent is also the classical order for standard IVPs. * Index 2: the results for RadauIIA can be found in [26] (Table 2.3, p. 18, p. 47). The results for SDIRK are derived in [26] (Table 2.3, p. 18, p. 48). The results for Gauss are derived in [26] (Table 2.3, p. 18, p. 47). * Index 3: the results for RadauIIA can be found in [30] (Theorem 2.2). <p> <ref> [26] </ref> (Table 2.3, p. 18, Theorem 3.1, pp. 25, 26). Observe that the order in the ycomponent is also the classical order for standard IVPs. * Index 2: the results for RadauIIA can be found in [26] (Table 2.3, p. 18, p. 47). The results for SDIRK are derived in [26] (Table 2.3, p. 18, p. 48). The results for Gauss are derived in [26] (Table 2.3, p. 18, p. 47). * Index 3: the results for RadauIIA can be found in [30] (Theorem 2.2). To our knowledge, there have been no general results established for SDIRK and Gauss formulas. <p> in the ycomponent is also the classical order for standard IVPs. * Index 2: the results for RadauIIA can be found in <ref> [26] </ref> (Table 2.3, p. 18, p. 47). The results for SDIRK are derived in [26] (Table 2.3, p. 18, p. 48). The results for Gauss are derived in [26] (Table 2.3, p. 18, p. 47). * Index 3: the results for RadauIIA can be found in [30] (Theorem 2.2). To our knowledge, there have been no general results established for SDIRK and Gauss formulas. <p> Table 1.5 displays the discrete local order for the same standard implicit RK formulas. The derivation of these results can be found in Chapter 5 of this document, in <ref> [26] </ref> (Lemma 4.3, pp. 34-35), in [28] (Table 7.1, p. 515) and in [30] (Theorem 4.1). 1.9 Interpolants and continuous approximations A continuous approximation for IVPs with extra (explicit or implicit) stages s can be derived based on the underlying discrete formulas and on constructing an interpolant u n (t) expressed <p> (g y f z k ) 1 where we have used O (h s ) as a lower bound for e n;z : Therefore, e n;y = O (h p+1 ); (y n (t n ); z n (t n ); n (t n )) ~ 0 Consider the projections <ref> [26, p. 77] </ref>, [30], S (^y n ; ^z n ; n ) = k (g y f z k ) 1 g y (^y n ; ^z n ; n ); P (^y n ; ^z n ; n ) = (I Q)(^y n ; ^z n ; n ): <p> developed a rigorous estimation of ~ D (t) and ~ E (t) for general semi explicit ADEs, some of the following test problems exhibits special structures so that the exact D (t) and E (t) can be easily computed. 6.2.1 Index 3 pendulum problem Consider the index 3 pendulum problem, <ref> [26, pp. 8-9] </ref>, q 0 (t) = u (t); 0 t 10; 0 = 2 59 where f = (0; 1) T ; and, q : R ! R 2 ; q (0) = (1; 0) T ; : R ! R; (0) = 0: Denote L (q (t)) = q
Reference: [27] <author> E. Hairer, G. Wanner, </author> <title> Solving Ordinary Differential Equations I, </title> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: (t); 0) = G (u (t); (t)) G (u (t); 0) 15 Z t @ (t; t )dt Z t G (u (t); t (t))(t)dt; so that, z (t) = G (y (t); 0); (2.14) where, P (t) = t 0 2.4 Global error By the Variation of Constants formula <ref> [27, p. 96] </ref> and (2.13), we have, u (t) y (t) = t 0 @y 0 = t 0 where, S 1 (t; s) = @y 0 S 2 (t; s) = @y 0 Assume that, kS 1 (t; s)k M 1 ; then a bound for the global error in <p> (t); 0; 0) 25 = t 0 @t = t 0 so that, z (t) = G (y (t); 0; 0); where, P 1 (t) = t 0 G ffi (u (t); t ffi (t); t 0 (t))dt; R t (3.6) 3.2 Global error By the Variation of Constants formula, <ref> [27, p. 96] </ref> 1 we have, u (t) y (t) = t 0 @y 0 = t 0 where, S 1 (t; s) = @y 0 S 2 (t; s) = @y 0 Assume that, kS 1 (t; s)k M 1 ; 1 Theorem: Denote by y and z the solutions
Reference: [28] <author> E. Hairer, G. Wanner, </author> <title> Solving Ordinary Differential Equations II, </title> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: One formula is the 3 stage 5th order RadauIIA. This formula is used in the RADAU5 package <ref> [28, pp. 128-138, 547-555] </ref> for solving general ADEs (and stiff problems) of the form M y 0 = f (t; y (t); z (t)) with M being a constant matrix (singular or nonsingular). This method will be used as a "benchmark" or "reference" method in our investigation. <p> Table 1.5 displays the discrete local order for the same standard implicit RK formulas. The derivation of these results can be found in Chapter 5 of this document, in [26] (Lemma 4.3, pp. 34-35), in <ref> [28] </ref> (Table 7.1, p. 515) and in [30] (Theorem 4.1). 1.9 Interpolants and continuous approximations A continuous approximation for IVPs with extra (explicit or implicit) stages s can be derived based on the underlying discrete formulas and on constructing an interpolant u n (t) expressed in terms of the basis weight <p> v (t) = G (u (t); (t)); ^ G (y (t)); for some function G: The perturbed equation (2.11) becomes, u 0 (t) = f (u (t); G (u (t); (t))) + ffi (t): Denote (t; t ) = f (u (t); G (u (t); t (t))) ; and consider <ref> [28, p. 511] </ref>, u 0 (t) f (u (t); G (u (t); 0)) = f (u (t); G (u (t); (t))) f (u (t); G (u (t); 0)) + ffi (t) = 0 @t = 0 We have an IVP and an associated perturbed IVP satisfied by y (t) and u <p> z (t) = G (y (t); 0; 0) The underlying perturbed IVP is then, u 0 (t) = f (u (t); G (u (t); ffi (t); 0 (t))) + ffi (t): Denote (t; t ) = f (u (t); G (u (t); t ffi (t); t 0 (t))); and consider <ref> [28, p. 511] </ref>, u 0 (t) f (u (t); G (u (t); 0; 0)) = f (u (t); G (u (t); ffi (t); 0 (t))) f (u (t); G (u (t); 0; 0)) + ffi (t) = 0 @t = 0 where G () = G (u (t); t ffi (t); <p> Consider the projections <ref> [28, p. 514] </ref>, Q (^y n ; z) = f z (g y f z ) 1 g y (^y n ; z n ); According to Scheme 2, we have, ^y n = y n + f z (^y n ; z n )-: With ^e n;y = ^y n <p> Chapter 6 Implementation For implementation, we modified the code of RADAU5 to adopt our approach. While we kept intact the basic program structure, we have used the three methods DIRK2, GAUSS2 and GAUSS3 which are based on the three formulas SDIRK (2), Gauss (2) and Gauss (3) respectively. Reference <ref> [28] </ref> describes major implementation issues of the code. <p> In addition, we used exact formulas for the projected values (^y n ; ^z n ) T : 6.2.4 Index 3 seven body problem Consider the index 3 seven body problem <ref> [28, pp. 531-544] </ref>, q 0 (t) = u (t); 0 = g (q (t)); where the mass matrix M (q (t)) of size 7 fi 7 is nonsingular and G (q (t)) = g q (q (t)): The system consists of 7 rigid bodies connected by joints without friction in plane <p> (Q (t))(t) 1 However, we used a linearized formula for the projected value ^u n ; 0 M (q n ) G T (q n ) 1 0 ^u n 1 0 M (q n )u n 1 6.2.6 GGL index 2 seven body problem The formulation is given by <ref> [28, p. 540] </ref>, q 0 (t) = u (t) + G T (q)(t); 67 0 = G (q (t))u (t); where : R ! R 6 : We used the same defect, residual and projected values as prescribed in the preceding subsection. as developed in the preceding subsection. 6.2.7 Index 2
Reference: [29] <author> A. C. Hindmarsh, LSODE and LSODI, </author> <title> Two New Initial Value Ordinary Differential Equation Solvers, </title> <journal> ACM-SIGNUM Newsletter 15, </journal> <pages> 10-11, </pages> <year> 1980. </year>
Reference-contexts: Numerical software using the former approach include LSODI <ref> [29] </ref> and DASSL [38] which employ implicit backward differentiation formulas (BDFs). Numerical software using the latter approach generally are based on implicit Runge-Kutta (RK) formulas. It is this class of methods that we will study in detail in this thesis.
Reference: [30] <author> L. Jay, </author> <title> Collocation Methods for Differential-Algebraic Equations of Index 3, </title> <journal> Numer. Math., </journal> <volume> 65, </volume> <pages> 407-421, </pages> <year> 1993. </year>
Reference-contexts: 0 = g (q (t)); (1.12) which is derived by introducing another algebraic component (t): However, note that all formulations are linear in the algebraic component, thus allowing one to more easily derive higher order numerical methods than would be the case for the general semi explicit index 3 problems <ref> [30] </ref>. Among other applications where ADEs arise, we can cite electrical networks [32], trajectory prescribed path control [9] and semiconductor device simulation [3]. 1.6 Numerical methods As with the case for standard ordinary differential equations (ODEs), numerical methods for solving ADEs are usually based on either multistep or one-step methods. <p> The results for SDIRK are derived in [26] (Table 2.3, p. 18, p. 48). The results for Gauss are derived in [26] (Table 2.3, p. 18, p. 47). * Index 3: the results for RadauIIA can be found in <ref> [30] </ref> (Theorem 2.2). To our knowledge, there have been no general results established for SDIRK and Gauss formulas. <p> Table 1.5 displays the discrete local order for the same standard implicit RK formulas. The derivation of these results can be found in Chapter 5 of this document, in [26] (Lemma 4.3, pp. 34-35), in [28] (Table 7.1, p. 515) and in <ref> [30] </ref> (Theorem 4.1). 1.9 Interpolants and continuous approximations A continuous approximation for IVPs with extra (explicit or implicit) stages s can be derived based on the underlying discrete formulas and on constructing an interpolant u n (t) expressed in terms of the basis weight polynomials b i (t ); u n <p> s)(s) + S 4 (t; s) 00 (s))ds; where, S 1 (t; s) = R (t; s) @ Q 1 (s) A ; 36 0 0 1 S 3 (t; s) = R (t; s) @ I + Q 3 (s) A ; 0 0 1 Integrations by parts yield <ref> [30] </ref>, 0 u (t) y (t) 1 fi @s (t; s)(s) + S 4 (t; s) 0 (s) s=t 0 R t = S 2 (t; t)ffi (t) @S 4 R t (t; s)ds where, (t; s) = S 1 (t; s) @s @ 2 S 4 @S 4 (t; s) <p> z k ) 1 where we have used O (h s ) as a lower bound for e n;z : Therefore, e n;y = O (h p+1 ); (y n (t n ); z n (t n ); n (t n )) ~ 0 Consider the projections [26, p. 77], <ref> [30] </ref>, S (^y n ; ^z n ; n ) = k (g y f z k ) 1 g y (^y n ; ^z n ; n ); P (^y n ; ^z n ; n ) = (I Q)(^y n ; ^z n ; n ): and the discrete
Reference: [31] <author> J. van Kan, </author> <title> A Second-Order Accurate Pressure-Correction Scheme for Viscous Incompressible Flow, </title> <journal> SIAM J. Sci. Stat. Comput., </journal> <volume> 7, </volume> <pages> 870-891, </pages> <month> July </month> <year> 1986. </year>
Reference-contexts: The governing equation in fluid dynamics is the Navier-Stokes equation in the velocity (differential) and the pressure (algebraic). In this thesis, we consider a representative problem from fluid dynamics (the driven cavity problem [36]) by discretizing the conservative form of the NS equation using the staggered grid method <ref> [31] </ref> to obtain an index 2 ADE of the form, M _u (t) + [K + N (u (t))]u (t) Cp (t) = f (t); where M is the mass matrix, K is the viscous stress matrix, N (u (t)) is the advection matrix, C is the pressure gradient matrix and <p> T (q)(t); 67 0 = G (q (t))u (t); where : R ! R 6 : We used the same defect, residual and projected values as prescribed in the preceding subsection. as developed in the preceding subsection. 6.2.7 Index 2 cavity problem Consider the (conservative) Navier-Stokes equation [13], [25], [43], <ref> [31] </ref>, u 0 = Re 0 = div u; on the unit square. Here Re is the Reynolds number and u = (u (t); v (t)) T is the velocity. The initial condition is (u (0); v (0)) = (0; 0); p (t) = 0.
Reference: [32] <author> P. Lotstedt, L. Petzold, </author> <title> Numerical Solution of Nonlinear Diffrential Equations with Algebraic Constraints I: Convergence Results for Backward Differentiation Formulas, </title> <journal> Math. Comp., </journal> <volume> 46, </volume> <pages> 491-516, </pages> <year> 1986. </year>
Reference-contexts: Among other applications where ADEs arise, we can cite electrical networks <ref> [32] </ref>, trajectory prescribed path control [9] and semiconductor device simulation [3]. 1.6 Numerical methods As with the case for standard ordinary differential equations (ODEs), numerical methods for solving ADEs are usually based on either multistep or one-step methods.
Reference: [33] <author> C. Lubich, </author> <title> Linearly Implicit Extrapolation Methods for Differential-Algebraic Systems, </title> <journal> Numer. Math., </journal> <volume> 55, </volume> <pages> 197-211, </pages> <year> 1989. </year>
Reference-contexts: Numerical software using the latter approach generally are based on implicit Runge-Kutta (RK) formulas. It is this class of methods that we will study in detail in this thesis. Other methods include extrapolation methods [14], <ref> [33] </ref>, projected implicit RK methods [2], half-explicit RK methods [7], [35] and least squares methods [5]. 1.7 Runge-Kutta formulas Consider the generic ADE (1.1) and let (y n (t); z n (t)) T be the local solution of the associated local problem at step n which is also written as, y
Reference: [34] <author> C. McDonald, </author> <title> The Practical Implications of Order Reduction on the Solution of Stiff IVPs Using RK Formulas, M.Sc. </title> <type> thesis, </type> <institution> Dept. of Comp. Sci., Univ. of Toronto, </institution> <year> 1990. </year>
Reference-contexts: This method will be used as a "benchmark" or "reference" method in our investigation. Its Butcher tableau is given in Table 1.1. The three implicit RK formulas investigated in detail in this study are SDIRK (2), Gauss (2) and Gauss (3) <ref> [34] </ref>. They belong to two classes of s-stage formulas: SDIRK (s) and Gauss (s). SDIRK (s), with its lower triangular Butcher tableau (diagonally implicit), is A-stable and of global order s + 1 for s 3 [1].
Reference: [35] <author> A. Ostermann, </author> <title> A Class of Half-Explicit Runge-Kutta Methods for Differential-Algebraic Systems of Index 3, </title> <journal> Applied Numer. Math., </journal> <volume> 13, </volume> <pages> 165-179, </pages> <year> 1993. </year>
Reference-contexts: Numerical software using the latter approach generally are based on implicit Runge-Kutta (RK) formulas. It is this class of methods that we will study in detail in this thesis. Other methods include extrapolation methods [14], [33], projected implicit RK methods [2], half-explicit RK methods [7], <ref> [35] </ref> and least squares methods [5]. 1.7 Runge-Kutta formulas Consider the generic ADE (1.1) and let (y n (t); z n (t)) T be the local solution of the associated local problem at step n which is also written as, y 0 0 = g (y n (t); z n (t)):
Reference: [36] <author> J. F. Painter, </author> <title> Solving the Navier-Stokes Equations with LSODI and the Methods of Lines, </title> <institution> UCID-19262, Lawrence Livermore Laboratory, </institution> <year> 1981. </year>
Reference-contexts: The governing equation in fluid dynamics is the Navier-Stokes equation in the velocity (differential) and the pressure (algebraic). In this thesis, we consider a representative problem from fluid dynamics (the driven cavity problem <ref> [36] </ref>) by discretizing the conservative form of the NS equation using the staggered grid method [31] to obtain an index 2 ADE of the form, M _u (t) + [K + N (u (t))]u (t) Cp (t) = f (t); where M is the mass matrix, K is the viscous stress
Reference: [37] <author> L. R. Petzold, </author> <title> Order Results for Implicit Runge-Kutta Methods Applied to Differential/Algebraic Systems, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 23, </volume> <pages> 837-851, </pages> <year> 1986. </year>
Reference-contexts: The solution at t n is advanced using, y n = y n1 + h i=1 z n = z n1 + h i=1 We consider the following index 1 test problem, <ref> [37] </ref> 0 y 0 (t) 1 0 1 1 + t 1 0 y (t) 1 0 t cos (t) 1 12 with initial condition, (y (0); z (0)) T = (1; 0) T ; and with known solution, (y (t); z (t)) T = (e t + t sin t;
Reference: [38] <author> L. R. Petzold, </author> <title> A Description of DASSL: a Differential/Algebraic System Solver, </title> <booktitle> Proc. IMACS World Congress, </booktitle> <year> 1982. </year>
Reference-contexts: Numerical software using the former approach include LSODI [29] and DASSL <ref> [38] </ref> which employ implicit backward differentiation formulas (BDFs). Numerical software using the latter approach generally are based on implicit Runge-Kutta (RK) formulas. It is this class of methods that we will study in detail in this thesis.
Reference: [39] <author> M. Roche, </author> <title> Implicit Runge-Kutta Methods for Differential Algebraic Equations, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 26, </volume> <pages> 963-975, </pages> <year> 1989. </year>
Reference-contexts: n which is also written as, y 0 0 = g (y n (t); z n (t)): 5 with initial values, (y n (t n1 ); z n (t n1 )) T = (y n1 ; z n1 ) T ; The standard implicit Runge-Kutta formulas for this local problem <ref> [39] </ref> determines the stage derivatives k i ; l i ; i = 1; : : : ; s; k i = f (Y i ; Z i ); where, Y i = y n1 + h j=1 Z i = z n1 + h j=1 are the internal stage values. <p> For sti*y accurate RK formulas where the right endpoint of a step is also an abscissa (eg., c s = 1), the order of the discrete solution is equal to that associated with standard IVPs <ref> [39] </ref> since the formulas are equivalent to formulas for IVPs. However, this is not the case for the three specific implicit RK formulas we are considering. For these formulas, the discrete solution (y n ; z n ) T will not necessarily satisfy the algebraic constraint. <p> which is also written as, y 0 0 = g (y n (t); z n (t)); (2.2) where consistent initial values are prescribed by, (y n (t n1 ); z n (t n1 )) T = (y n1 ; z n1 ) T ; A numerical solution for this ADE <ref> [39] </ref> can be determined by applying a standard implicit Runge-Kutta formula which at step n determines the stage derivatives k i ; l i ; i = 1; : : : ; s; k i = f (Y i ; Z i ); (2.3) where, Y i = y n1 +
Reference: [40] <author> W. Schiehlen, </author> <title> Multibody handbook, </title> <publisher> Springer 1990. </publisher>
Reference-contexts: other hand, are index 3 ADEs in the position q (t); the velocity u (t) and the 4 Lagrange multiplier (t); q 0 (t) = u (t); 0 = g (q (t)); where G (q) = @g @q : We choose the classical pendulum problem and the seven body problem <ref> [40] </ref> as our representative test problems.
Reference: [41] <author> L. F. Shampine, </author> <title> Interpolation for Runge-Kutta methods, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 22, </volume> <pages> 1014-1027, </pages> <month> October </month> <year> 1985. </year>
Reference: [42] <author> J. H. Verner, </author> <title> Differentiable Interpolants for High-Order Runge-Kutta Methods, </title> <type> Mathematical preprint 1990-9, </type> <month> July </month> <year> 1990, </year> <institution> Dept. of Math and Stat., Queen's University, Kingston, Canada. </institution> <month> 97 </month>
Reference-contexts: In this document, 7 we use the "bootstrapping" procedure [18] to construct higher order interpolants. Other continuous approaches can be found in <ref> [42] </ref> and [24]. 1.10 Error control Existing codes for solving ADEs use a pair of RK formulas of order (p; p 1) to estimate the size of the discrete local error at the right end point of the current step.
Reference: [43] <author> T.Y. Hou, B.T.R. Wetton, </author> <title> Second-Order Convergence of a Projection Scheme for the Incompressible Navier-Stokes Equations with Boundaries, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 30, </volume> <pages> 609-629, </pages> <year> 1993. </year>
Reference-contexts: G T (q)(t); 67 0 = G (q (t))u (t); where : R ! R 6 : We used the same defect, residual and projected values as prescribed in the preceding subsection. as developed in the preceding subsection. 6.2.7 Index 2 cavity problem Consider the (conservative) Navier-Stokes equation [13], [25], <ref> [43] </ref>, [31], u 0 = Re 0 = div u; on the unit square. Here Re is the Reynolds number and u = (u (t); v (t)) T is the velocity. The initial condition is (u (0); v (0)) = (0; 0); p (t) = 0. <p> alternative choice for the constraints (6.6) is, 0 = g ij 4 x u ij + 4 y v ij ; (i; j) 6= (K; K); K X p ij ; Here the additional condition, 0 = i;j=1 or, Z fixes the choice of the arbitrary constant in the pressure <ref> [43] </ref>. In practice, we used the original defect and residual (ffi n (t); n (t)) T in our error control. Chapter 7 Numerical Results We applied Scheme 2 and Scheme 3 to the test problems described in Chapter 6.
References-found: 43

