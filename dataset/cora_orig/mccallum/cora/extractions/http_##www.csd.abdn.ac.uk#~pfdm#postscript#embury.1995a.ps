URL: http://www.csd.abdn.ac.uk/~pfdm/postscript/embury.1995a.ps
Refering-URL: http://www.csd.abdn.ac.uk/~pgray/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: E-Mail: fsmejpgrayg@csd.abdn.ac.uk  
Title: The Declarative Expression of Semantic Integrity in a Database of Protein Structure  
Author: S. M. Embury and P. M. D. Gray 
Web: URL: http://www.csd.abdn.ac.uk/~pfdm  
Address: Aberdeen, Scotland, U.K. AB9 2UE  
Affiliation: Department of Computing Science King's College, University of Aberdeen  
Abstract: This paper describes the use of a declarative constraint language to describe the semantics of a complex scientific domain, three-dimensional protein structure data, and assesses the requirements for integrity constraint mechanisms in this application area. The constraint language is based on the functional data manipulation language Daplex, and we use a range of examples from the protein database to illustrate its expressive power. We also consider the kinds of constraints that arise in protein structure data, thereby highlighting those which require particular attention when attempting to generate efficient checking code for them, and the requirements on the manipulation of the constraint information itself. Keywords: integrity constraints, scientific databases, data semantics. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Bassiliades and P.M.D Gray. CoLan: </author> <title> a Functional Constraint Language and Its Implementation. </title> <journal> Data and Knowledge Engineering, </journal> <note> 1994. to appear. </note>
Reference-contexts: It is also based on the CoLan constraint language described in <ref> [1] </ref> and [10]. Function composition provides a natural way to represent chains of relationships forming sets or values to be constrained, and the functional paradigm allows a natural representation of expressions involving arithmetic, aggregate and set-based operators.
Reference: [2] <author> N. Bassiliades and I. Vlahavas. </author> <title> Modelling Constraints with Exceptions in Object-Oriented Databases. </title> <editor> In J. Mylopoulos, editor, </editor> <booktitle> Proceedings of 13th International Conference on the Entity-Realtionship Approach, </booktitle> <address> Manchester, </address> <month> December </month> <year> 1994. </year>
Reference-contexts: In other words, it points to a possible flaw in the model. Rather than provide some method of marking exceptional data, and allowing it to persist, as has been suggested for some traditional database systems <ref> [4, 2] </ref>, we believe it is more important in scientific databases to allow constraints to be added and deleted freely at any time during the life of a particular database as the domain expert's model of the world evolves.
Reference: [3] <author> F.C. Bernstein, T.F. Koetzle, G.J.B. Williams, E.F. Mayer, M.D. Bruce, J.R. Rodgers, O. Ken-nard, T. Shimanouchi, and M. Tasumi. </author> <title> The Protein Data Bank: a Computer-Based Archival File for Macromolecular Structures. </title> <journal> J. Mol. Biol., </journal> <volume> 112 </volume> <pages> 535-542, </pages> <year> 1977. </year>
Reference-contexts: Procheck [18], for example, is a suite of programs that analyses the structure of an individual protein (input as a file in the standard Brookhaven file format <ref> [3] </ref>) and gives some estimate of its stereochemical quality. The programs also produce several graphical representations of the protein which can highlight "problem regions" within the structure.
Reference: [4] <author> A. Borgida. </author> <title> Language Features for Flexible Handling of Exceptions in Information Systems. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 10(4) </volume> <pages> 565-603, </pages> <month> December </month> <year> 1985. </year>
Reference-contexts: In other words, it points to a possible flaw in the model. Rather than provide some method of marking exceptional data, and allowing it to persist, as has been suggested for some traditional database systems <ref> [4, 2] </ref>, we believe it is more important in scientific databases to allow constraints to be added and deleted freely at any time during the life of a particular database as the domain expert's model of the world evolves.
Reference: [5] <author> C.L. Chang. </author> <title> DEDUCE 2: Further Investigations of Deduction in Relational Data Bases. </title> <editor> In H. Gal-laire and J. Minker, editors, </editor> <booktitle> Logic and Databases, </booktitle> <pages> pages 201-236. </pages> <publisher> Plenum Press, </publisher> <year> 1978. </year>
Reference-contexts: any, e.g. "some staff member is a lecturer" constrain some s in staff to have position (s) = ``lecturer''; not exists: denoted by no, e.g. "no postgraduate stu dent is younger than 20" constrain no p in postgrad to have age (p) &lt; 20; and three numerical (or cardinality) quantifiers <ref> [5] </ref> exists at least: denoted by at least &lt;n&gt;, e.g. "there are at least 2 secretaries on the staff" constrain at least 2 s in staff to have position (s) = ``secretary''; exists at most: denoted by at most &lt;n&gt;, e.g. "the Computing Science Department can support at most 100 undergraduate
Reference: [6] <author> T.E. Creighton. </author> <title> Proteins: Structures and Molecular Properties. W.H. </title> <publisher> Freeman and Company, </publisher> <address> second edition, </address> <year> 1993. </year>
Reference-contexts: atom (h) = ``o'' and donor atom (h) = ``n''; The conformation usually adopted by helical sections of natural proteins, however, differs slightly from the classical ff-helix conformation in a way that allows the carbonyl oxygen of each residue to also form hydrogen bonds with donors from outwith the helix <ref> [6] </ref>.
Reference: [7] <author> S.M. Embury. </author> <title> Constraint-Based Updates in a Functional Data Model Database. </title> <type> PhD thesis, </type> <institution> University of Aberdeen, King's College, </institution> <address> Ab-erdeen, Scotland, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: The constraint-checking architecture which we have implemented for P/FDM <ref> [7, 10] </ref> gives us this flexibility. Our study has also shown that the ability to modify the working set of constraints is also important in handling exceptions to constraints, which appear to play a rather different role in scientific databases than in more traditional application areas.
Reference: [8] <author> S.M. Embury and P.M.D. Gray. </author> <title> NonDeterministic Updates in Daplex. </title> <type> Technical Report AUCS/TR9401, </type> <institution> Dept. of Computing Science, University of Aberdeen, Aberdeen, Scot-land, AB2 9UE, </institution> <month> January </month> <year> 1994. </year>
Reference-contexts: Our current work now centres on the use of the semantic information expressed by constraints in a more generative way. In particular, we are exploring the use of constraint information in the optimisation of high-level declarative descriptions of complex database updates <ref> [8] </ref> and in suggesting repair strategies for long-duration design transactions [9]. Acknowledgements The authors would like to thank Scott Leishman for his helpful comments on a draft of this paper, and Graham Kemp for his help in formulating the constraints given in Section 4.
Reference: [9] <author> S.M. Embury and P.M.D. Gray. </author> <title> Towards a Constraint-Based Repair Mechanism for Complex Database Updates. </title> <type> Technical Report AUCS/TR9404, </type> <institution> Dept. of Computing Science, University of Aberdeen, </institution> <address> Aberdeen, Scotland, AB2 9UE, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: In particular, we are exploring the use of constraint information in the optimisation of high-level declarative descriptions of complex database updates [8] and in suggesting repair strategies for long-duration design transactions <ref> [9] </ref>. Acknowledgements The authors would like to thank Scott Leishman for his helpful comments on a draft of this paper, and Graham Kemp for his help in formulating the constraints given in Section 4.
Reference: [10] <author> S.M. Embury, P.M.D. Gray, </author> <title> and N.D. Bassiliades. Constraint Maintenance Using Generated Methods in the P/FDM Object-Oriented Database. </title> <booktitle> In Paton and Williams [20], </booktitle> <pages> pages 364-381. </pages>
Reference-contexts: It is also based on the CoLan constraint language described in [1] and <ref> [10] </ref>. Function composition provides a natural way to represent chains of relationships forming sets or values to be constrained, and the functional paradigm allows a natural representation of expressions involving arithmetic, aggregate and set-based operators. <p> The constraint-checking architecture which we have implemented for P/FDM <ref> [7, 10] </ref> gives us this flexibility. Our study has also shown that the ability to modify the working set of constraints is also important in handling exceptions to constraints, which appear to play a rather different role in scientific databases than in more traditional application areas.
Reference: [11] <author> S.M. Embury, Z. Jiao, and P.M.D. Gray. </author> <title> Using Prolog to Provide Access to Metadata in an Object-Oriented Database. </title> <editor> In C. Moss, editor, </editor> <booktitle> International Conference on the Practical Application of Prolog, </booktitle> <address> London, </address> <month> April </month> <year> 1992. </year> <title> Applied Workstations, </title> <publisher> Ltd. </publisher> <pages> 17 pages. </pages>
Reference-contexts: Therefore, in P/FDM, we store both the declarative and procedural versions of each constraint in the metadata, and can display the declarative text of constraints to the user when violations are detected. Alternatively, the user can use Daplex itself to query the metadata <ref> [11] </ref>, to discover for example all constraints on disulphide bridges, or all constraints involving the follows relationship.
Reference: [12] <author> P. Fraternali and S. Paraboschi. </author> <title> A Review of Repair Techniques for Integrity Maintenance. </title> <booktitle> In Paton and Williams [20], </booktitle> <pages> pages 332-346. </pages>
Reference: [13] <author> T. Gaasterland and J.Lobo. </author> <title> Qualified Answers that Reflect User Needs and Preferences. </title> <editor> In J.Bocca, M. Jarke, and C. Zaniolo, editors, </editor> <booktitle> VLDB 94 Conference, </booktitle> <pages> pages 309-320, </pages> <address> Santiago de Chile, September 1994. </address> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference: [14] <author> P.M.D. Gray, K.G. Kulkarni, and N.W. Pa-ton. </author> <title> Object-Oriented Databases: a Semantic Data Model Approach. </title> <publisher> Prentice Hall Series in Computer Science. Prentice Hall International Ltd., </publisher> <year> 1992. </year>
Reference-contexts: expr&gt; &lt;quant rest&gt; &lt;quant rest&gt; ::= so that &lt;quant part&gt; | &lt;quant part&gt; | [] &lt;exists&gt; ::= exists | to exists | [] Here, &lt;quantifier&gt;, &lt;named set expr&gt;, &lt;to have&gt;, &lt;predicate&gt; and the other non-terminals are defined by the existing Daplex language (the full syntax of which is given in <ref> [14] </ref>): &lt;quantifier&gt; ::= each | all | some | any | no | exactly &lt;const&gt; | at least &lt;const&gt; | at most &lt;const&gt; &lt;named set expr&gt; ::= &lt;var&gt; in &lt;set&gt; [such that &lt;predicate&gt;] [as &lt;type&gt;] &lt;predicate&gt; ::= &lt;bool term&gt; | &lt;predicate&gt; or &lt;bool term&gt; (a) (b) fi-sheet, with hydrogen bonds shown <p> Finally, a transaction mechanism, by which the checking of integrity constraints can be temporarily suspended while a sequence of updates are made, is essential if a database involving such complex constraints is to be practically useful. The initial ADAM implementation <ref> [14] </ref> did not have this capability, but in the later P/FDM implementation, we have been able to build a constraint maintenance subsystem with all these characteristics. Our current work now centres on the use of the semantic information expressed by constraints in a more generative way.
Reference: [15] <author> R.H. Katz. </author> <title> Computer-Aided Design Databases. </title> <editor> In G. Ariav and J. Clifford, editors, </editor> <booktitle> New Directions for Database Systems, </booktitle> <pages> pages 110-123. </pages> <publisher> Ablex Publishing Corp., </publisher> <year> 1986. </year>
Reference-contexts: Each of these four levels gives a different perspective on a particular protein, and they are all therefore represented explicitly in the P/FDM protein database, the schema of which is illustrated diagrammatically in Appendix A. Protein structure information has the characteristics of both design data <ref> [15] </ref> and scientific data [24], in that it is basically hierarchical in nature, it involves complex semantic integrity constraints and the interpretation of the data generally requires a combination of both data retrieval and computation.
Reference: [16] <author> G.J.L. Kemp. </author> <title> Protein Modelling: a Design Application of an Object-Oriented Database. </title> <editor> In J. Gero, editor, </editor> <booktitle> Proc. 1st Int. Conf. on Artificial Intelligence in Design, </booktitle> <pages> pages 387-406. </pages> <publisher> Butterworth-Heinemann, </publisher> <year> 1991. </year>
Reference: [17] <author> J.J. King. </author> <title> Query Optimisation by Semantic Reasoning. </title> <publisher> UMI Research Press, </publisher> <year> 1984. </year>
Reference: [18] <author> R. Laskowski, M.W. MacArthur, D.S. Moss, and J.M. Thornton. PROCHECK: </author> <title> a Program to Check the Stereochemical Quality of Protein Structures. </title> <journal> J. Appl. Cryst., </journal> <volume> 26 </volume> <pages> 283-291, </pages> <year> 1993. </year>
Reference-contexts: any | no | exactly &lt;const&gt; | at least &lt;const&gt; | at most &lt;const&gt; &lt;named set expr&gt; ::= &lt;var&gt; in &lt;set&gt; [such that &lt;predicate&gt;] [as &lt;type&gt;] &lt;predicate&gt; ::= &lt;bool term&gt; | &lt;predicate&gt; or &lt;bool term&gt; (a) (b) fi-sheet, with hydrogen bonds shown as dotted lines. (This diagram is taken from <ref> [18] </ref>.) &lt;bool term&gt; ::= &lt;bool fac&gt; | &lt;bool term&gt; and &lt;bool fac&gt; &lt;bool fac&gt; ::= [not] &lt;bool prim&gt; &lt;bool prim&gt; ::= &lt;comparison&gt; | &lt;quantified expr&gt; | &lt;set membership&gt; | &lt;subclass membership&gt; | ( &lt;predicate&gt; ) &lt;to have&gt; ::= has | have | to have This has meant that we have been <p> Nor is it clear that such checks would be useful given that atoms are rarely manipulated individually. A better way to check this kind of low-level constraint is to use one of the special-purpose programs that have been developed for identifying potential anomalies in protein structure data. Procheck <ref> [18] </ref>, for example, is a suite of programs that analyses the structure of an individual protein (input as a file in the standard Brookhaven file format [3]) and gives some estimate of its stereochemical quality.
Reference: [19] <author> J.-M. Nicolas. </author> <title> Logic for Improving Integrity Checking in Relational Databases. </title> <journal> Acta Infor-matica, </journal> <volume> 18 </volume> <pages> 227-253, </pages> <year> 1982. </year>
Reference-contexts: Simplification <ref> [19] </ref> is an important technique in producing efficient procedural constraint checks from high-level declarative constraint specifications as it allows much redundant database retrieval to be removed from the code. We hope, therefore, to extend the scope of our current simplifying compiler to a wider range of constraints.
Reference: [20] <editor> N.W. Paton and M.H. Williams, editors. </editor> <booktitle> Proc. of 1st Int. Workshop on Rules in Database Systems (RIDS '93), Workshops in Computing, </booktitle> <address> Ed-inburgh, </address> <month> August </month> <year> 1993. </year> <note> Springer-Verlag. </note>
Reference: [21] <author> L. Pauling. </author> <title> The Nature of the Chemical Bond. </title> <institution> Cornell University Press, </institution> <note> second edition, </note> <year> 1949. </year>
Reference-contexts: a disulphide bridge, their sulphur atoms must be close enough to be covalently bonded: constrain each r in residue to have distance (atom (r, ``sg''), atom (disulphide (r), ``sg'')) &lt; 3.7; where 3.7 is the sum of the van der Waals radii for two atoms of sulphur (given by Pauling <ref> [21] </ref> as 1.85 A). As in the case of the previous constraint, the scope of this constraint is limited by the possibility of synthetic groups being involved in the disulphide, whose sulphur atom may have some name other than "sg" (the standard name for the sulphur atom of cysteine).
Reference: [22] <author> X. Qian. </author> <title> The Deductive Synthesis of Database Transactions. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 18(4) </volume> <pages> 626-677, </pages> <month> December </month> <year> 1993. </year>
Reference: [23] <author> D.W. Shipman. </author> <title> The Functional Data Model and the Data Language DAPLEX. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 6(1) </volume> <pages> 140-173, </pages> <month> March </month> <year> 1981. </year>
Reference: [24] <author> A. Shoshani, F. Olken, and H.K.T. Wong. </author> <title> Characteristics of Scientific Databases. </title> <editor> In U. Dayal, G. Schlageter, and L. H. Seng, editors, </editor> <booktitle> VLDB 84 Conference, </booktitle> <pages> pages 147-160, </pages> <address> Singapore, </address> <year> 1984. </year>
Reference-contexts: Each of these four levels gives a different perspective on a particular protein, and they are all therefore represented explicitly in the P/FDM protein database, the schema of which is illustrated diagrammatically in Appendix A. Protein structure information has the characteristics of both design data [15] and scientific data <ref> [24] </ref>, in that it is basically hierarchical in nature, it involves complex semantic integrity constraints and the interpretation of the data generally requires a combination of both data retrieval and computation.
Reference: [25] <author> S.D. Urban. ALICE: </author> <title> an Assertion Language for Integrity Constraint Expression. </title> <booktitle> In Proceedings of Conference on Computer Software Applications, </booktitle> <month> September </month> <year> 1989. </year>
Reference-contexts: that there should be no gaps or overlaps in the assignment between the first structure and the last: constrain each s in structure to have end (s) = start (follows (s)) - 1 and start (s) = end (follows inv (s)) + 1; Notice here that we apply a weak-translation <ref> [25] </ref> to universally-quantified constraints in Daplex so that a constraint is considered to be trivially satisfied if any of the attributes on the quantified variable are undefined.
References-found: 25

