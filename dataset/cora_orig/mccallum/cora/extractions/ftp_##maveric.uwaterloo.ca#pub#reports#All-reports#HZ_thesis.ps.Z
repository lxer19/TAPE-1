URL: ftp://maveric.uwaterloo.ca/pub/reports/All-reports/HZ_thesis.ps.Z
Refering-URL: http://www.cs.toronto.edu/~richard/
Root-URL: 
Title: DELAY-INSENSITIVE NETWORKS  
Author: by Hao Zhang 
Degree: A thesis presented to the University of Waterloo in fulfilment of the thesis requirement for the degree of Master of Mathematics in  
Note: c flHao Zhang 1997  
Date: 1997  
Address: Waterloo, Ontario, Canada,  
Affiliation: Computer Science  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> J. A. Brzozowski, </author> <title> "Delay-Insensitivity and Ternary Simulation," </title> <booktitle> Proceedings of the First International Conference on Semigroups & Algebraic Engineering,, </booktitle> <address> Aizu-Wakamatsu City, Japan, March 24-38, </address> <year> 1997. </year>
Reference-contexts: We now briefly describe some previous work on delay-insensitivity. Readers may wish to refer to <ref> [1] </ref> for a more complete survey. Early work on circuit behaviors in the presence of arbitrary delays traces back to D. E. Muller's theory of "speed-independent" circuits [11, 15]. He considered autonomous circuits, i.e., circuits without external inputs.
Reference: [2] <author> J. A. Brzozowski and J. C. Ebergen, </author> <title> "On the Delay-Sensitivity of Gate Networks," </title> <journal> IEEE Trans. on Computers, </journal> <volume> vol. 41, no. 11, </volume> <pages> pp. 1349-1360, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: as those of the set-reset latch and Muller's C-element do not have delay-insensitive realizations, if logic gates are used as the basic components and the circuits are operating in the so-called input-output mode, where inputs may change in response to output changes even though the circuit has not been stabilized <ref> [2] </ref>. Their proof makes use of ternary simulation, which can also be used to prove Unger's result mentioned above [16]. C. E. Molnar et al. introduced the "foam-rubber wrapper" postulate [13] to help describe delay-insensitive specifications of circuit components. <p> A major assumption we make here is that only one state variable changes at a time. This is essentially the general single-winner (GSW) model [3]. One motivation behind this assumption, paraphrasing CHAPTER 2. NETWORK MODEL 18 from <ref> [2] </ref>, follows from the fact that we are mainly interested in delay-insensitive networks. For such networks, wire delays have to be considered, which makes it difficult to argue strongly in favor of a model where simultaneous changes play a significant role.
Reference: [3] <author> J. A. Brzozowski and C-J. Seger, </author> <title> Asynchronous Circuits, </title> <publisher> Springer-Verlag, </publisher> <address> New York, NY, </address> <year> 1995. </year>
Reference-contexts: The behavior of a circuit is described by a set of allowed sequences of states, which specify the order in which the state variables change, but not the times of change. Muller's definition of speed-independence is related to the terminal classes (or outcome <ref> [3] </ref>) of the allowed sequences for a circuit. We will come back to this in Section 6.2. S. H. Unger studied how the delays in logic elements and connection wires (stray delays) may affect the behaviors of asynchronous sequential circuits [21]. <p> A major assumption we make here is that only one state variable changes at a time. This is essentially the general single-winner (GSW) model <ref> [3] </ref>. One motivation behind this assumption, paraphrasing CHAPTER 2. NETWORK MODEL 18 from [2], follows from the fact that we are mainly interested in delay-insensitive networks.
Reference: [4] <author> T. J. Chaney and C. E. Molnar, </author> <title> "Anomalous Behavior of Synchronizers and Arbiters," </title> <journal> IEEE Trans. on Computers, </journal> <volume> C-22: </volume> <pages> pp. 421-422, </pages> <year> 1973. </year>
Reference-contexts: This scaling problem has become increasingly troublesome in VLSI design, as it is often desirable to map the existing layout of a circuit onto a smaller region as technology improves. Moreover, the metastability phenomenon <ref> [4] </ref> is a manageable problem in delay-insensitive circuits. A circuit is in a metastable state if it is expected to choose between mutually-exclusive states, but the decision may be delayed indefinitely; such a delay will not affect the correct operation of a delay-insensitive circuit.
Reference: [5] <author> D. L. Dill, </author> <title> Trace Theory for Automatic Hierarchical Verification of Speed-Independent Circuits, </title> <publisher> The MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1988. </year>
Reference-contexts: Ebergen has proved that his definition of delay-insensitivity is equivalent to that of Udding's. D. L. Dill developed methods for the specification and automatic verification of asynchronous circuits <ref> [5] </ref>. He used a more general notion of trace structures, called the prefix-closed trace structures, which consists of a set of successful traces and a set of failure traces, in addition to input and output alphabets.
Reference: [6] <author> J. C. Ebergen, </author> <title> Translating Programs into Delay-Insensitive Circuits, </title> <type> Ph.D. Thesis, </type> <institution> Department of Mathematics and Computing Science, Eindhoven University of Technology, Eindhoven, </institution> <address> The Netherlands, </address> <month> October </month> <year> 1987. </year> <note> Also, </note> <institution> CWI Tract 56, Center for Mathematics and Computer Science, </institution> <address> Amsterdam, The Netherlands, </address> <year> 1989. </year> <note> 68 REFERENCES 69 </note>
Reference-contexts: A more CHAPTER 1. INTRODUCTION 4 detailed description of trace theory and Udding's work is given in Section 4.3.2. J. C. Ebergen described a formal approach to the design of delay-insensitive circuits using decompositions of asynchronous circuit components into sets containing only certain basic components <ref> [6, 7] </ref>, such as fork, Muller's C-element, and toggle. Each component of an asynchronous circuit is specified by a regular expression-like program which characterizes the communication behavior between the component and its environment.
Reference: [7] <author> J. C. Ebergen, </author> <title> "A Formal Approach to Designing Delay-Insensitive Circuits," </title> <journal> Distributed Computing, </journal> <volume> vol. 5, no. 3, </volume> <pages> pp. 107-119, </pages> <year> 1991. </year>
Reference-contexts: A more CHAPTER 1. INTRODUCTION 4 detailed description of trace theory and Udding's work is given in Section 4.3.2. J. C. Ebergen described a formal approach to the design of delay-insensitive circuits using decompositions of asynchronous circuit components into sets containing only certain basic components <ref> [6, 7] </ref>, such as fork, Muller's C-element, and toggle. Each component of an asynchronous circuit is specified by a regular expression-like program which characterizes the communication behavior between the component and its environment.
Reference: [8] <author> A. J. Martin. </author> <title> Programming in VLSI: From Communicating Processes to Delay-Insensitive Circuits. </title> <editor> In C. A. R. Hoare, editor, </editor> <booktitle> UT Year of Programming Institute on Concurrent Programming. </booktitle> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1989. </year>
Reference-contexts: So roughly speaking, semi-modularity requires that no state transition can change the implied value of any unchanged state variable which is unstable. More recently, A. J. Martin <ref> [8] </ref> used the term "stability", instead of semi-modularity, and basically adopted it as a definition of delay-insensitivity [9]. In this thesis, we generalize Muller's definition of semi-modularity to reflect non-determinism in network behaviors.
Reference: [9] <author> A. J. Martin, </author> <title> "The Limitations to Delay-Insensitivity in Asynchronous Circuits," </title> <booktitle> Proceedings of the 6th MIT Conference on Advanced Research in VLSI, </booktitle> <editor> W. J. Dally, ed., </editor> <publisher> MIT Press, </publisher> <pages> pp. 263-278, </pages> <year> 1990. </year>
Reference-contexts: So roughly speaking, semi-modularity requires that no state transition can change the implied value of any unchanged state variable which is unstable. More recently, A. J. Martin [8] used the term "stability", instead of semi-modularity, and basically adopted it as a definition of delay-insensitivity <ref> [9] </ref>. In this thesis, we generalize Muller's definition of semi-modularity to reflect non-determinism in network behaviors.
Reference: [10] <author> C. Mead and L. Conway, </author> <title> Introduction to VLSI Systems, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1980. </year>
Reference: [11] <author> R. E. Miller, </author> <title> "Speed-Independent Switching Circuit Theory," Chapter 10 in Switching Theory, Volume II: Sequential Circuits and Machines, </title> <publisher> John Wiley & Sons, </publisher> <year> 1965. </year>
Reference-contexts: We now briefly describe some previous work on delay-insensitivity. Readers may wish to refer to [1] for a more complete survey. Early work on circuit behaviors in the presence of arbitrary delays traces back to D. E. Muller's theory of "speed-independent" circuits <ref> [11, 15] </ref>. He considered autonomous circuits, i.e., circuits without external inputs. He assumed that there are delays only in the circuit components, but there are no delays in the interconnection lines of the circuit. <p> Semi-modularity of circuit behaviors was initially studied by Muller <ref> [11, 15] </ref>. In Muller's terminology, a node i is excited in state s if its current value s i disagrees with its implied value (we call it the excitation of the node) s 0 i ; the implied value is CHAPTER 1. <p> We prove that the semi-modularity of a network's behavior implies the delay-insensitivity of its components, in the sense that each component's trace structure satisfies the JTU-Rules. 4.1 Generalization of Semi-Modularity Semi-modularity of circuit behaviors was initially defined in <ref> [11] </ref> for circuits in which each node has exactly one implied value (singleton excitation) at any time. The term "semi-modular" was adopted because a certain partially ordered set cor 30 CHAPTER 4. SEMI-MODULARITY 31 responding to such a behavior was shown to be a semi-modular lattice. <p> We conjecture that a network is delay-insensitive if and only if the behavior of the delay-completion of the network is delay-safe. 2. Can our definition of semi-modularity be related to some lattice-theoretic properties, as in the case of deterministic behaviors <ref> [11] </ref>? 63 CHAPTER 6. CONCLUDING REMARKS 64 3. Are there efficient algorithms for testing whether a given behavior is semi modular? 6.2 Classification of Asynchronous Networks versal set is really the set of autonomous networks with designated initial states. <p> CONCLUDING REMARKS 65 5. nonempty: an example is shown in Figure 6.2 (c); 6. nonempty: an example is shown in Figure 6.2 (d); 7. empty: by Theorem 5.1; 8. empty: by Theorem 5.1. In our classification, we can also include speed-independent circuits, as defined by Muller <ref> [11] </ref>. According to Muller, a circuit is speed-independent with respect to a state s if all allowed state sequences starting with s have the same terminal class. <p> For deterministic networks, however, the two definitions are equivalent. We now describe each numbered region in Figure 6.3: 1. nonempty: a network belonging to this region was given in Figure 6.2 (a); 2. nonempty: an example is shown in Figure 6.4 (a) (from <ref> [11] </ref>); 3. nonempty: an example is shown in Figure 6.4 (b); 4. nonempty: an example was given in Figure 6.2 (b). CHAPTER 6. CONCLUDING REMARKS 67
Reference: [12] <author> R. Milner, </author> <title> Communication and Concurrency, </title> <publisher> Prentice Hall, </publisher> <year> 1989. </year>
Reference-contexts: We define delay-insensitivity of networks using the notion of behavioral equivalence in the presence of arbitrary delays. A network N is delay-insensitive if the behavior of any network ^ N derived from N by the addition of delays is weakly bisimilar <ref> [12] </ref> to the behavior of N , where transitions occurring on the added delays are considered unobservable. N. Shintel and M. Yoeli [18] have used a similar delay-addition scheme in their definition of delay-insensitive realization. <p> For a network to be delay-insensitive, the behavior of any delay extension of the network should satisfy a certain correctness concern with respect to the behavior of the original network. We define this correctness concern to correspond to weak bisimulation <ref> [12] </ref> (or observation equivalence), one of the strongest forms of behavioral equivalence. Transitions occurring on the inserted DELAY modules are treated as unobservable "internal" actions; in fact, they can be viewed simply as corresponding to the passing of time.
Reference: [13] <author> C. E. Molnar, T. P. Fang, and F. U. Rosenberger, </author> <title> "Synthesis of Delay-Insensitive Modules," </title> <booktitle> Proceedings of the 1985 Chapel Hill Conference on VLSI, </booktitle> <editor> H. Fuchs, ed., </editor> <publisher> Computer Science Press, </publisher> <address> Rockville, Maryland, </address> <pages> pp. 67-86, </pages> <year> 1985. </year>
Reference-contexts: Their proof makes use of ternary simulation, which can also be used to prove Unger's result mentioned above [16]. C. E. Molnar et al. introduced the "foam-rubber wrapper" postulate <ref> [13] </ref> to help describe delay-insensitive specifications of circuit components. A component is viewed as being wrapped by a "foam-rubber wrapper." It sends signals to and receives signals from the inner surface of the wrapper, whereas its environment does so through the outer surface of the wrapper. <p> The motivation behind our approach is Charles Molnar's "foam-rubber wrapper" principle <ref> [13] </ref>, where a module is viewed as being surrounded by a flexible boundary to reflect the fact that communication between its terminals and its environment takes place through a medium involving unknown delays. This intuitive idea corresponds to surrounding each module in a network by DELAY modules.
Reference: [14] <author> E. F. Moore, </author> <title> "Gedanken Experiments on Sequential Machines," </title> <editor> in C. E. Shan-non and J. McCarthy, eds., </editor> <booktitle> Automata Studies, Annals of Mathematics Study 34, </booktitle> <publisher> Princeton University Press, </publisher> <address> Princeton NJ, </address> <pages> pp. 129-153, </pages> <year> 1956. </year>
Reference-contexts: And, the approach in defining delay-insensitivity has always begun by examining the behavior of an individual component. In this thesis, we consider delay-insensitivity of autonomous networks whose components can be any sequential machines of the Moore type <ref> [14] </ref>. A formal model for this type of networks and their behaviors is established. We define delay-insensitivity of networks using the notion of behavioral equivalence in the presence of arbitrary delays. <p> Thus, the module graph does not have self-loops. One may view the module graph as a dependency graph for the variables associated with a module, with the self-dependency arc on the internal state variable missing. Definition 2.1.1 permits us to treat any sequential machine of the Moore type <ref> [14] </ref> as a module. In particular, delay elements (or wires with delays), forks, logic gates, latches, counters, C-elements, and arbitration devices (they play important roles in most concurrent systems) are included. Note that in this model, forks are isochronic. Anisochronic forks can be modelled within a network.
Reference: [15] <author> D. E. Muller and W. C. Bartky, </author> <title> "A Theory of Asynchronous Circuits," </title> <journal> in Annals of Computing Laboratory of Harvard University, </journal> <pages> pp. 204-243, </pages> <year> 1959. </year> <note> REFERENCES 70 </note>
Reference-contexts: We now briefly describe some previous work on delay-insensitivity. Readers may wish to refer to [1] for a more complete survey. Early work on circuit behaviors in the presence of arbitrary delays traces back to D. E. Muller's theory of "speed-independent" circuits <ref> [11, 15] </ref>. He considered autonomous circuits, i.e., circuits without external inputs. He assumed that there are delays only in the circuit components, but there are no delays in the interconnection lines of the circuit. <p> Semi-modularity of circuit behaviors was initially studied by Muller <ref> [11, 15] </ref>. In Muller's terminology, a node i is excited in state s if its current value s i disagrees with its implied value (we call it the excitation of the node) s 0 i ; the implied value is CHAPTER 1. <p> For such networks, wire delays have to be considered, which makes it difficult to argue strongly in favor of a model where simultaneous changes play a significant role. Semi-modularity is the other network property we are mostly concerned with. Muller <ref> [15] </ref> showed that both the general multiple-winner model, in which simultaneous variable changes are allowed, and the general single-winner model produce the same result for a network with a semi-modular behavior. This is because semi-modularity requires that no unstable state variable can become stable without changing its value.
Reference: [16] <author> C-J. H. Seger, </author> <title> "On the Existence of Speed-Independent Circuits," </title> <journal> Theoretical Computer Science, </journal> <volume> vol. 86, no. 2, </volume> <pages> pp. 343-364, </pages> <year> 1991. </year>
Reference-contexts: Their proof makes use of ternary simulation, which can also be used to prove Unger's result mentioned above <ref> [16] </ref>. C. E. Molnar et al. introduced the "foam-rubber wrapper" postulate [13] to help describe delay-insensitive specifications of circuit components.
Reference: [17] <author> C. L. Seitz, </author> <title> "System Timing," </title> <booktitle> Chapter 7 in [10], </booktitle> <pages> pp. 218-262. </pages>
Reference-contexts: Potential advantages in using asynchronous circuits include lower energy consumption, avoidance of clock distribution problems, and higher speed (average-case instead of worst-case performance <ref> [17] </ref>). An asynchronous circuit is said to be delay-insensitive if its functional correctness is independent of the delays in its components and in the wires connecting the components. Delay-insensitive circuits have received special attention [1, 2, 5, 6, 7, 13, 15, 18, 19, 20, 22, 23]. <p> INTRODUCTION 2 Another important reason for designing delay-insensitive circuits comes from the fact that wire delays do not scale down proportionally to the other factors affecting the behavior of a circuit, such as switching time and clock period, when the size of that circuit is scaled down <ref> [17] </ref>. This scaling problem has become increasingly troublesome in VLSI design, as it is often desirable to map the existing layout of a circuit onto a smaller region as technology improves. Moreover, the metastability phenomenon [4] is a manageable problem in delay-insensitive circuits. <p> First, wire delays are frequently ignored in modules designed on a very small area of a chip; these areas, called the equipotential regions, are sufficiently small that the delay associated with equalizing the potential across any wire is small in comparison with switching delays or propagation delays between modules <ref> [17] </ref>. Second, we want to have the ability to model isochronic forks and similar components, since they are used in many practical designs. A fork is isochronic if all the output branches of the fork change at exactly the same time.
Reference: [18] <author> N. Shintel and M. Yoeli, </author> <title> "Synthesis of Modular Networks from Petri-Net Specifications," </title> <type> Technical Report #743, </type> <institution> Israel Institute of Technology, Haifa 32000 Israel, </institution> <year> 1992. </year>
Reference-contexts: A network N is delay-insensitive if the behavior of any network ^ N derived from N by the addition of delays is weakly bisimilar [12] to the behavior of N , where transitions occurring on the added delays are considered unobservable. N. Shintel and M. Yoeli <ref> [18] </ref> have used a similar delay-addition scheme in their definition of delay-insensitive realization.
Reference: [19] <author> J. T. Udding, </author> <title> Classification and Composition of Delay-Insensitive Circuits, </title> <type> Doctoral Dissertation, </type> <institution> Eindhoven University of Technology, Eindhoven, </institution> <address> The Netherlands, </address> <year> 1984. </year>
Reference-contexts: Signals are transmitted across the wrapper, whose shape assumes no specific form and may change over time; this corresponds to arbitrary delays in the wires connecting the component to its environment. Following Molnar's informal idea, J. T. Udding gave the first formal definition of delay-insensitivity <ref> [19, 20] </ref>; this definition is based on trace theory. He suggested that a specification is delay-insensitive if there is no computation interference or transmission interference. He established several rules which define the class of delay-insensitive specifications; we refer to these rules as the JTU-Rules. A more CHAPTER 1. <p> We then define a special class of networks, the delay-dense networks, which characterize asynchronous circuits properly for the purpose of delay-insensitivity analysis. We prove that for delay-dense networks, semi-modularity is preserved under delay extensions. Finally, we concentrate on the relationship between semi-modularity and Udding's definition of delay-insensitivity <ref> [19] </ref>. <p> Then a i ; fl u a j . 4.3.2 The JTU-Rules The first formal definition of delay-insensitivity was made by J. T. Udding in 1984 <ref> [19] </ref>. He used trace theory as the formalism for circuit specifications. An CHAPTER 4. SEMI-MODULARITY 44 alphabet is a finite set of symbols. Finite-length sequences of symbols in an alphabet are called traces. <p> Udding has shown that, if a trace structure and its environment satisfy the four rules above <ref> [19] </ref>, then there is no computation or transmission interference. These four rules along with prefix-closure property of trace set constitute the class of delay-insensitive trace structures. 4.3.3 Semi-Modularity Implies the JTU-Rules We now investigate what semi-modularity of network behaviors imposes on the behaviors of individual modules. <p> Proof: 1. This is because L (B) is prefix-closed and prefix-closure is preserved under projections (see Property 1.2 of <ref> [19] </ref>). 2. Assume that uaa 2 tM . Then there exist u 0 ; x 2 Y fl such that w = u 0 a i xa i+1 2 L (B) for some i, and u 0 # aM = u and x # aM = *.
Reference: [20] <author> J. T. Udding, </author> <title> "A Formal Model for Defining and Classifying Delay-Insensitive Circuits and Systems," </title> <journal> Distributed Computing, </journal> <volume> vol. 1, no. 4, </volume> <pages> pp. 197-204, </pages> <year> 1986. </year>
Reference-contexts: Signals are transmitted across the wrapper, whose shape assumes no specific form and may change over time; this corresponds to arbitrary delays in the wires connecting the component to its environment. Following Molnar's informal idea, J. T. Udding gave the first formal definition of delay-insensitivity <ref> [19, 20] </ref>; this definition is based on trace theory. He suggested that a specification is delay-insensitive if there is no computation interference or transmission interference. He established several rules which define the class of delay-insensitive specifications; we refer to these rules as the JTU-Rules. A more CHAPTER 1.
Reference: [21] <author> S. H. Unger, </author> <title> Asynchronous Sequential Switching Circuits, </title> <publisher> Wiley-Interscience, </publisher> <address> New York, </address> <year> 1969. </year>
Reference-contexts: We will come back to this in Section 6.2. S. H. Unger studied how the delays in logic elements and connection wires (stray delays) may affect the behaviors of asynchronous sequential circuits <ref> [21] </ref>. He assumed that stray delays may have values ranging from 0 to some known upper bound, and the so-called delay elements can have some minimum value specified by the designer. Unger dealt with certain limitations of delay-insensitive circuits. CHAPTER 1.
Reference: [22] <author> T. Verhoeff, </author> <title> "Characterizations of Delay-Insensitive Communication Protocols," Computing Science Notes No. </title> <type> 89/06, </type> <institution> Department of Mathematics and Computing Science, Eindhoven University of Technology, </institution> <month> May </month> <year> 1989. </year>
Reference-contexts: A trace structure T is said to be delay-insensitive if and only if DI (T ) conforms to T . In Dill's model, the problem of determining whether a trace structure is delay-insensitive is decidable. CHAPTER 1. INTRODUCTION 5 T. Verhoeff called an asynchronous circuit component a process <ref> [22, 23] </ref>. A process is specified by a trace structure, as used by Udding. Verhoeff has shown that several characterizations of delay-insensitivity are equivalent under certain assumptions, among which are the JTU-Rules and the so-called "neighbor-swap rule" [22]. He also extended the JTU-Rules to include progress as a correctness concern. <p> INTRODUCTION 5 T. Verhoeff called an asynchronous circuit component a process [22, 23]. A process is specified by a trace structure, as used by Udding. Verhoeff has shown that several characterizations of delay-insensitivity are equivalent under certain assumptions, among which are the JTU-Rules and the so-called "neighbor-swap rule" <ref> [22] </ref>. He also extended the JTU-Rules to include progress as a correctness concern. From what we have seen so far, definitions of delay-insensitivity have dealt mainly with specifications of asynchronous circuits using trace structures or regular expression-like programs, which represent all possible communication behaviors between the component and its environment.
Reference: [23] <author> T. Verhoeff, </author> <title> A Theory of Delay-Insensitive Systems, </title> <type> PhD Thesis, </type> <institution> Department of Mathematics and Computing Science, Eindhoven University of Technology, Eindhoven, </institution> <address> The Netherlands, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: A trace structure T is said to be delay-insensitive if and only if DI (T ) conforms to T . In Dill's model, the problem of determining whether a trace structure is delay-insensitive is decidable. CHAPTER 1. INTRODUCTION 5 T. Verhoeff called an asynchronous circuit component a process <ref> [22, 23] </ref>. A process is specified by a trace structure, as used by Udding. Verhoeff has shown that several characterizations of delay-insensitivity are equivalent under certain assumptions, among which are the JTU-Rules and the so-called "neighbor-swap rule" [22]. He also extended the JTU-Rules to include progress as a correctness concern.
References-found: 23

