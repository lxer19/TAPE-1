URL: http://www.cs.columbia.edu/~gravano/Papers/1997/sigmod97.ps
Refering-URL: http://www.cs.columbia.edu/~gravano/publications.html
Root-URL: http://www.cs.columbia.edu
Email: gravano@cs.stanford.edu  kevin@db.stanford.edu  hector@cs.stanford.edu  paepcke@db.stanford.edu  
Title: STARTS: Stanford Proposal for Internet Meta-Searching  
Author: Luis Gravano Chen-Chuan K. Chang Hector Garca-Molina Andreas Paepcke 
Address: Stanford University  Stanford University  Stanford University  Stanford University  
Affiliation: Computer Science Department  Computer Science Department  Computer Science Department  Computer Science Department  
Abstract: Document sources are available everywhere, both within the internal networks of organizations and on the Internet. Even individual organizations use search engines from different vendors to index their internal document collections. These search engines are typically incompatible in that they support different query models and interfaces, they do not return enough information with the query results for adequate merging of the results, and finally, in that they do not export metadata about the collections that they index (e.g., to assist in resource discovery). This paper describes STARTS, an emerging protocol for Internet retrieval and search that facilitates the task of querying multiple document sources. STARTS has been developed in a unique way. It is not a standard, but a group effort coordinated by Stanford's Digital Library project, and involving over 11 companies and organizations. The objective of this paper is not only to give an overview of the STARTS protocol proposal, but also to discuss the process that led to its definition. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Luis Gravano, Chen-Chuan Kevin Chang, Hector Garca-Molina, and Andreas Paepcke. </author> <title> STARTS: Stanford protocol proposal for Internet retrieval and search. </title> <type> Technical Report SIDL-WP-1996-0043, </type> <institution> Stanford University, </institution> <month> August </month> <year> 1996. </year> <note> Accessible at http://www-diglib.stanford.edu/cgi-bin/- WP/get/SIDL-WP-1996-0043. </note>
Reference-contexts: Finally, we held a workshop at Stanford with the major participants on August 1st, 1996 (http://- www-db.stanford.edu/~gravano/workshop participants.- html). The goal of this one-day workshop was to iron out the controversial aspects of the proposal, and to get feedback for its final draft <ref> [1] </ref>. Defining STARTS has been a very interesting experience: we wanted to design a protocol that would be simple, yet powerful enough to allow us to address the three problems at hand. We could have adopted a "least common denominator" approach for our solution. <p> Below is the "Basic-1" set of attributes (i.e., fields and modifiers), which are the attributes that we recommend that sources support. The attributes not marked as new are from the GILS attribute set. In <ref> [1] </ref> we explain how to use other attribute sets for sources covering different domains, for example. * Fields: A field specifies what portion of the document text is associated with the term (e.g., the author portion, the title portion, etc.). At most one should be specified for each term. <p> The Warwick Framework proposes a container architecture as a mechanism for incorporating attribute values from different sets in a single information object. In contrast, we chose to support only a simple, "flat" document model, albeit with the ability to mix different attribute models <ref> [1] </ref>. Regarding source-metadata attribute sets, the most notable efforts include the Z39.50 Exp-1 attribute set [9] and the GILS profile [16], upon which we based our "MBasic-1" attribute set (Section 4.3.1). Several metasearchers already exist on the Internet for querying multiple World-Wide Web indexes.
Reference: [2] <author> Gerard Salton. </author> <title> Automatic text processing: the transformation, analysis, and retrieval of information by computer. </title> <publisher> Addison Wesley, </publisher> <year> 1989. </year>
Reference-contexts: But the interfaces and capabilities of these sources may vary dramatically. Even the basic query model that the sources support may vary. Some search engines (e.g., Glimpse) only support the Boolean retrieval model <ref> [2] </ref>. In this model, a query is a condition that documents either do or do not satisfy. The query result is then a set of documents. For example, a query "distributed and systems" returns all documents that contain both the words "distributed" and "systems" in them. <p> The query result is then a set of documents. For example, a query "distributed and systems" returns all documents that contain both the words "distributed" and "systems" in them. Alternatively, most commercial search engines also support some variation of the vector-space retrieval model <ref> [2] </ref>. In this model, a query is a list of terms, and documents are assigned a score according to how similar they are to the query. The query result is then a rank of documents. <p> For example, if a source S 1 specializes in computer science, the word databases might appear in many of its documents. Then, this word will tend to have a low associated weight in S 1 (e.g., if S 1 uses the tfidf formula for computing weights <ref> [2] </ref>). The word databases, on the other hand, might have a high associated weight in a source S 2 that is totally unrelated to computer science and contains very few documents with that word. <p> No Document-text No Yes Date/time-last-modified Yes No Any Yes No Linkage Yes No Linkage-type No No Cross-reference-linkage No No Languages No No Free-form-text No Yes The Document-text field provides a way to pass documents to the sources as part of the queries, which could be useful to do relevance feedback <ref> [2] </ref>. Relevance feedback allows users to request documents that are similar to a document that was found useful. The value of the Linkage field of a document is its URL, and it is returned with the query results so that the document can be retrieved outside of our protocol. <p> ex pression (as modified by the query fields, if possible): - Term-frequency: the number of times that the query term appears in the document. - Term-weight: the weight of the query term in the document, as assigned by the search engine associated with the source (e.g., the normalized tf.idf weight <ref> [2] </ref> for the query term in the document, or whatever other weighing of terms in documents the search engine might use). Document-frequency: the number of documents in the source that contain the term. This information is also provided as part of the metadata for the source.
Reference: [3] <author> Chen-Chuan K. Chang, Hector Garca-Molina, and An--dreas Paepcke. </author> <title> Boolean query mapping across heterogeneous information sources. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 8(4) </volume> <pages> 515-521, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: As a result of all this heterogeneity, a metasearcher would have to translate the original query to adjust it to each source's syntax. To do this translation, the metasearcher needs to know the characteristics of each source. (The work in <ref> [3, 4] </ref> illustrates the complexities involved in query translation.) As we will see in Section 4.1, querying multiple sources is much easier if the sources support some common query language.
Reference: [4] <author> Chen-Chuan K. Chang, Hector Garca-Molina, and Andreas Paepcke. </author> <title> Predicate rewriting for translating boolean queries in a heterogeneous information system. </title> <type> Technical Report SIDL-WP-1996-0028, </type> <institution> Stanford University, </institution> <year> 1996. </year> <note> Accessible at http://www-diglib.stanford.edu/cgi-bin/- WP/get/SIDL-WP-1996-0028. </note>
Reference-contexts: As a result of all this heterogeneity, a metasearcher would have to translate the original query to adjust it to each source's syntax. To do this translation, the metasearcher needs to know the characteristics of each source. (The work in <ref> [3, 4] </ref> illustrates the complexities involved in query translation.) As we will see in Section 4.1, querying multiple sources is much easier if the sources support some common query language.
Reference: [5] <author> James P. Callan, Zhihong Lu, and W. Bruce Croft. </author> <title> Searching distributed collections with inference networks. </title> <booktitle> In Proceedings of the 18 th Annual SIGIR Conference, </booktitle> <year> 1995. </year>
Reference-contexts: Unfortunately, there are many ways to compute these similarities. To make matters more complicated, the ranking algorithms are usually proprietary to the search engine vendors, and their details are not publicly available. Merging query results from sources that use different and unknown ranking algorithms is hard. (See <ref> [5, 6] </ref> for algorithms for merging multiple document ranks.) For example, source S 1 might report that document d 1 has a score of 0.3 for some query, while source S 2 might report that document d 2 has a score of 1,000 for the same query.
Reference: [6] <author> Ellen M. Voorhees, Narendra K. Gupta, and Ben Johnson-Laird. </author> <title> The collection fusion problem. </title> <booktitle> In Proceedings of the 3 rd Text Retrieval Conference (TREC-3), </booktitle> <year> 1995. </year>
Reference-contexts: Unfortunately, there are many ways to compute these similarities. To make matters more complicated, the ranking algorithms are usually proprietary to the search engine vendors, and their details are not publicly available. Merging query results from sources that use different and unknown ranking algorithms is hard. (See <ref> [5, 6] </ref> for algorithms for merging multiple document ranks.) For example, source S 1 might report that document d 1 has a score of 0.3 for some query, while source S 2 might report that document d 2 has a score of 1,000 for the same query.
Reference: [7] <author> Luis Gravano, Hector Garca-Molina, and Anthony Tomasic. </author> <title> The effectiveness of GlOSS for the text-database discovery problem. </title> <booktitle> In Proceedings of the 1994 ACM SIGMOD Conference, </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: This data is automatically generated, is orders of magnitude smaller than the original contents, and has proven useful in distinguishing the more useful from the less useful sources for a given query <ref> [7, 8] </ref>. Our content summaries include: * List of words that appear in the source. This list is preceded by information indicating whether: Thewords listed are stemmed or not. Thewords listed include stop words or not. Thewords listed are case sensitive or not. <p> The summary also tells us that there are 892 documents in the source. A metasearcher can use this information to decide whether a given query is likely to have good matches in Source-1 <ref> [7, 8] </ref>. 4.3.3 Resource Definition So far, we have focused on sources. As discussed in Section 3, our model allows several sources to be grouped together as a single resource (e.g., Knight-Ridder's Dialog information service). Each resource exports contact information about the sources that it contains.
Reference: [8] <author> Luis Gravano and Hector Garca-Molina. </author> <title> Generalizing GlOSS for vector-space databases and broker hierarchies. </title> <booktitle> In Proceedings of the 21st International Conference on Very Large Data Bases (VLDB'95), </booktitle> <pages> pages 78-89, </pages> <month> September </month> <year> 1995. </year>
Reference-contexts: This data is automatically generated, is orders of magnitude smaller than the original contents, and has proven useful in distinguishing the more useful from the less useful sources for a given query <ref> [7, 8] </ref>. Our content summaries include: * List of words that appear in the source. This list is preceded by information indicating whether: Thewords listed are stemmed or not. Thewords listed include stop words or not. Thewords listed are case sensitive or not. <p> The summary also tells us that there are 892 documents in the source. A metasearcher can use this information to decide whether a given query is likely to have good matches in Source-1 <ref> [7, 8] </ref>. 4.3.3 Resource Definition So far, we have focused on sources. As discussed in Section 3, our model allows several sources to be grouped together as a single resource (e.g., Knight-Ridder's Dialog information service). Each resource exports contact information about the sources that it contains.
Reference: [9] <author> National Information Standards Organization. </author> <title> Information Retrieval (Z39.50): Application Service Definition and Protocol Specification (ANSI/NISO Z39.50-1995). </title> <publisher> NISO Press, </publisher> <address> Bethesda, MD, </address> <year> 1995. </year> <note> Accessible at http://lcweb.loc.gov/z3950/agency/. </note>
Reference-contexts: In particular, we first look at standards or architectures for information retrieval and interoperability. We then discuss attribute sets and their associated mechanisms for describing documents and sources. Finally, we comment on existing Internet metasearchers. The most relevant standards effort in terms of shared goals is the Z39.50-1995 standard <ref> [9] </ref>, which provides most of the functionality we have described. <p> In contrast, we chose to support only a simple, "flat" document model, albeit with the ability to mix different attribute models [1]. Regarding source-metadata attribute sets, the most notable efforts include the Z39.50 Exp-1 attribute set <ref> [9] </ref> and the GILS profile [16], upon which we based our "MBasic-1" attribute set (Section 4.3.1). Several metasearchers already exist on the Internet for querying multiple World-Wide Web indexes.
Reference: [10] <author> ZDSR profile: </author> <title> Z39.50 profile for simple distributed search and ranked retrieval, </title> <type> Draft 4, </type> <month> October </month> <year> 1996. </year> <note> Accessible at http://lcweb.loc.gov/z3950/agency/- profiles/zdsr.html. </note>
Reference-contexts: As we mentioned in the Introduction, there are currently efforts under way to define a simple profile of the Z39.50 standard based on STARTS <ref> [10] </ref>. In addition to the Z39.50 standard effort, other projects focus on providing a framework for indexing and querying multiple document sources. One such project, Harvest [11], includes a set of tools for gathering and accessing information on the Internet.
Reference: [11] <author> C. Mic Bowman, Peter B. Danzig, Darren R. Hardy, Udi Manber, Michael F. Schwartz, and Duane P. Wes-sels. Harvest: </author> <title> A scalable, customizable discovery and access system. </title> <type> Technical Report CU-CS-732-94, </type> <institution> Department of Computer Science, University of Col-orado, Boulder, Colorado, </institution> <month> August </month> <year> 1994. </year> <note> Accessible at http://harvest.transarc.com/. </note>
Reference-contexts: In addition to the Z39.50 standard effort, other projects focus on providing a framework for indexing and querying multiple document sources. One such project, Harvest <ref> [11] </ref>, includes a set of tools for gathering and accessing information on the Internet. The Harvest gatherers collect and extract indexing information from one or more sources. Then, the brokers retrieve this information from one or more gatherers, or from other brokers.
Reference: [12] <author> Darren Hardy. </author> <title> Resource description messages (RDM), </title> <month> July </month> <year> 1996. </year> <note> Accessible at http://www.w3.org/pub/- WWW/TR/NOTE-rdm.html. </note>
Reference-contexts: The Harvest gatherers collect and extract indexing information from one or more sources. Then, the brokers retrieve this information from one or more gatherers, or from other brokers. The brokers provide a querying interface to the gathered information. A project related to Harvest is Netscape's RDM (Resource Description Messages) <ref> [12] </ref>, which focuses on indexing and accessing structured metadata descriptions of information objects. Our work complements Harvest and RDM in that we define the information and functionality that sources should export to help in metasearching.
Reference: [13] <author> Z39.50 Maintenance Agency. </author> <title> Attribute set Bib-1 (Z39.50-1995): Semantics. </title> <institution> Accessible at ftp://- ftp.loc.gov/pub/z3950/defs/bib1.txt, </institution> <month> September </month> <year> 1995. </year>
Reference-contexts: Other related efforts focus on defining attribute sets for documents and sources. As discussed in the paper, we have built on some of these efforts in defining our protocol. Relevant attribute sets for documents include the Z39.50 Bib-1 attribute set <ref> [13] </ref>, the Dublin Core [14], and the War-wick Framework [15]. The Bib-1 attribute set registers a large set of bibliographic attributes that have been widely adopted in library cataloging.
Reference: [14] <author> Stuart Weibel, Jean Godby, Eric Miller, and Ron Daniel, Jr. </author> <note> OCLC/NCSA metadata workshop report. Accessible at http://www.oclc.org:5047/- oclc/research/publications/weibel/metadata/- dublin core report.html, </note> <month> March </month> <year> 1995. </year>
Reference-contexts: Other related efforts focus on defining attribute sets for documents and sources. As discussed in the paper, we have built on some of these efforts in defining our protocol. Relevant attribute sets for documents include the Z39.50 Bib-1 attribute set [13], the Dublin Core <ref> [14] </ref>, and the War-wick Framework [15]. The Bib-1 attribute set registers a large set of bibliographic attributes that have been widely adopted in library cataloging.
Reference: [15] <author> Carl Lagoze, Clifford A. Lynch, and Ron Daniel, Jr. </author> <title> The Warwick Framework: A container architecture for aggregating sets of metadata. </title> <type> Technical Report TR96-1593, </type> <institution> Cornell University, Computer Science Department, </institution> <month> June </month> <year> 1996. </year>
Reference-contexts: Other related efforts focus on defining attribute sets for documents and sources. As discussed in the paper, we have built on some of these efforts in defining our protocol. Relevant attribute sets for documents include the Z39.50 Bib-1 attribute set [13], the Dublin Core [14], and the War-wick Framework <ref> [15] </ref>. The Bib-1 attribute set registers a large set of bibliographic attributes that have been widely adopted in library cataloging.
Reference: [16] <author> Eliot Christian. </author> <title> Application profile for the government information locator service (GILS), </title> <note> Version 2, Octo-ber 1996. Accessible at http://www.usgs.gov/gils/- prof v2.html. </note>
Reference-contexts: In contrast, we chose to support only a simple, "flat" document model, albeit with the ability to mix different attribute models [1]. Regarding source-metadata attribute sets, the most notable efforts include the Z39.50 Exp-1 attribute set [9] and the GILS profile <ref> [16] </ref>, upon which we based our "MBasic-1" attribute set (Section 4.3.1). Several metasearchers already exist on the Internet for querying multiple World-Wide Web indexes.
Reference: [17] <author> Erik Selberg and Oren Etzioni. </author> <title> Multi-service search and comparison using the MetaCrawler. </title> <booktitle> In Proceedings of the 4th International WWW Conference, </booktitle> <year> 1995. </year>
Reference-contexts: However, not all of them support the three major metasearch tasks described in Section 1 (i.e., selecting the best sources for a query, querying these sources, and merging the query results from the sources). Examples of metasearchers include MetaCrawler <ref> [17] </ref> (http://metacrawler.cs.washington.- edu:8080/home.html) and SavvySearch (http://guaraldi.- cs.colostate.edu:2000/). Both MetaCrawler and SavvySearch support the three metasearch tasks above to some degree. First, they provide some sort of source selection. For example, SavvySearch ranks its accessible sources for a given query based on information from past searches and estimated network traffic.
Reference: [18] <author> Andreas Paepcke, Steve B. Cousins, Hector Garca-Molina, Scott W. Hassan, Steven K. Ketchpel, Martin Roscheisen, and Terry Winograd. </author> <title> Towards interoperability in digital libraries: Overview and selected highlights of the Stanford Digital Library Project. </title> <journal> IEEE Computer Magazine, </journal> <month> May </month> <year> 1996. </year>
Reference-contexts: Specifically, MetaCrawler re-ranks the documents by actually retrieving and analyzing them. SavvySearch simply reports the documents according to the originating sources, and using the source rank mentioned above. Finally, the Stanford InfoBus, designed within the Digital Library project <ref> [18] </ref>, hosts a variety of metasearchers. In [19], we discuss a metadata architecture for the InfoBus.
Reference: [19] <author> Michelle Baldonado, Chen-Chuan K. Chang, Luis Gravano, and Andreas Paepcke. </author> <title> The Stanford Digital Library Metadata Architecture. </title> <type> Technical Report SIDL-WP-1996-0051, </type> <institution> Stanford University, </institution> <month> October </month> <year> 1996. </year> <note> To appear in the International Journal of Digital Libraries; accessible at http://www-diglib.stanford.edu/cgi-bin/- WP/get/SIDL-WP-1996-0051. </note>
Reference-contexts: Specifically, MetaCrawler re-ranks the documents by actually retrieving and analyzing them. SavvySearch simply reports the documents according to the originating sources, and using the source rank mentioned above. Finally, the Stanford InfoBus, designed within the Digital Library project [18], hosts a variety of metasearchers. In <ref> [19] </ref>, we discuss a metadata architecture for the InfoBus. This architecture is based on the requirements of the InfoBus services, and uses the STARTS information that sources should export. 6 Conclusion The Internet and the World-Wide Web have become an important component of many data management systems.
References-found: 19

