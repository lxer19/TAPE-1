URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/reports/98/tr1369.ps.Z
Refering-URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/reports/98/
Root-URL: http://www.cs.wisc.edu
Email: davidg@cs.wisc.edu fvijaypai, saritag@rice.edu  
Title: A Customized MVA Model for ILP Multiprocessors  
Author: Daniel J. Sorin Mary K. Vernon Vijay S. Pai Sarita V. Adve and David A. Wood fsorin, vernon, 
Affiliation: Computer Sciences Dept Dept of Electrical Computer Engineering University of Wisconsin Madison Rice University  
Abstract: This paper provides the customized MVA equations for an analytical model for evaluating architectural alternatives for shared-memory multiprocessors with processors that aggressively exploit instruction-level parallelism (ILP). Compared to simulation, the analytical model is many orders of magnitude faster to solve, yielding highly accurate system performance estimates in seconds. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Adve, V. Adve, M. Hill, and M. Vernon. </author> <title> Comparison of Hardware and Software Cache Coherence Schemes. </title> <booktitle> In Proc. 18th Int'l Symp. on Computer Architecture, </booktitle> <pages> pages 298308, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: These parameters, referred to as ILP parameters, are discussed in more detail below. The other parameters in the table are standard parameters for models of architectures based on directory coherence protocols <ref> [1] </ref>. Note that the parameters are defined for homogeneous applications; that is, each processor has the same value for each parameter in the table, and memory requests are assumed to be equally distributed across the relevant memory modules (local or remote) due to interleaving and effective data layout.
Reference: [2] <author> V. Adve and M. Vernon. </author> <title> The Influence of Random Delays on Parallel Task Execution Times. </title> <booktitle> In Proc. ACM SIGMETRICS, </booktitle> <pages> pages 6173, </pages> <month> May </month> <year> 1993. </year>
Reference: [3] <author> D. </author> <title> Eager. </title> <type> Private communication, </type> <month> Nov. </month> <year> 1997. </year>
Reference-contexts: As explained in [8], the standard equation for residual life under the assumption of Poisson arrivals is not accurate since arrivals at the processor are not at random points in time; 2 therefore, we use an interpolation suggested by Derek Eager <ref> [3] </ref>. For the case that M = M hw , all processor stalls can be attributed to full MSHRs.
Reference: [4] <author> P. Heidelberger and K. Trivedi. </author> <title> Analytic Queueing Models for Programs with Internal Concurrency. </title> <journal> IEEE Trans. on Computers, </journal> <volume> C-32(1):7382, </volume> <month> Jan. </month> <year> 1982. </year>
Reference-contexts: U SB = M t U MB = M t The alternating solution of each submodel is repeated until the estimated throughputs converge. This approach might be named the method of surrogate service time inflation, analogous to the method of surrogate delays <ref> [4, 6] </ref>. The equations for R pe MB and R pe SB are shown below.
Reference: [5] <author> P. Heidelberger and K. Trivedi. </author> <title> Queueing Network Models for Parallel Processing with Asynchronous Tasks. </title> <journal> IEEE Trans. on Computers, </journal> <volume> C-31(11):10991109, </volume> <month> Nov. </month> <year> 1982. </year>
Reference-contexts: If the request is a write miss, the customer is routed immediately back to the processor while simultaneously forking an asynchronous memory write or upgrade transaction, using a technique similar to that proposed by Heidelberger and Trivedi <ref> [5] </ref>. Thus, the R synch x and Z synch terms are only non-zero for read requests (see Section 4). In the MB submodel, the number of customers per processor is equal to the number of MSHRs, M hw . <p> 1 pe The read misses that are not synchronous in the MB submodel are immediately routed back to the processor (since the processor cannot stall on these read misses in this submodel) while simultaneously forking a read transaction to the memory system, again using a technique similar to that in <ref> [5] </ref>. As mentioned above, the other difference in the equations between the two submodels concerns R pe . This difference arises from how we represent the processor stall time that is estimated by one submodel in the other submodel.
Reference: [6] <author> P. Jacobson and E. Lazowska. </author> <title> Analyzing Queueing Networks with Simultaneous Resource Possession. </title> <journal> Communications of the ACM, </journal> <volume> 25(2):142151, </volume> <month> Feb. </month> <year> 1982. </year>
Reference-contexts: U SB = M t U MB = M t The alternating solution of each submodel is repeated until the estimated throughputs converge. This approach might be named the method of surrogate service time inflation, analogous to the method of surrogate delays <ref> [4, 6] </ref>. The equations for R pe MB and R pe SB are shown below.
Reference: [7] <author> E. Lazowska, J. Zahorjan, G. Graham, and K. Sevcik. </author> <title> Quantitative System Performance, Computer System Analysis Using Queueing Network Models. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <month> May </month> <year> 1984. </year>
Reference-contexts: small effect on estimated throughput (less than 4% reduction in throughput for all applications validated in [8], except FFTopt which has a 10% reduction), and they are not discussed in [8]. 2 The estimated mean residual life for random arrivals equals the second moment of service time divided by 2t <ref> [7] </ref>. 5 upgrade memory system transactions. For any of these memory requests, the customer leaves the processor and visits the appropriate memory system resources.
Reference: [8] <author> D. Sorin, V. Pai, S. Adve, M. Vernon, and D. Wood. </author> <title> Analytic Evaluation of Shared-Memory Parallel Systems with ILP Processors. </title> <booktitle> In Proc. 25th Int'l Symp. on Computer Architecture, </booktitle> <month> June </month> <year> 1998. </year>
Reference-contexts: 1 Introduction In <ref> [8] </ref>, we presented an analytical model for evaluating specific types of architectural trade-offs for shared-memory systems with ILP processors. As shown in that paper, the analytical model validates extremely well against detailed simulation and produces results in a few seconds. <p> The CMVA technique has proven to be accurate in validation experiments for a number of simpler architectural models [9]. The purpose of this technical report is to provide the details of the customized MVA equations which were omitted in <ref> [8] </ref> due to space constraints. Section 2 of this report provides the model input parameters. Section 3 provides an overview of the analytical model, and Section 4 presents the customized MVA equations. Further discussion of the model, including validation and applications, can be found in [8]. fl This research is supported <p> equations which were omitted in <ref> [8] </ref> due to space constraints. Section 2 of this report provides the model input parameters. Section 3 provides an overview of the analytical model, and Section 4 presents the customized MVA equations. Further discussion of the model, including validation and applications, can be found in [8]. fl This research is supported in part by DARPA/ITO under Contract N66001-97-C-8533 and by the National Science Foundation under Grants HRD-9896132, MIP-9625558, CDA-9623632, CCR-9410457, CCR-9502500, CDA-9502791, and CDA-9617383. Sarita V. <p> Application Parameters 2 System Architecture and Model Parameters 2.1 System Architecture The architecture modeled is a cache-coherent, release consistent shared-memory multiprocessor system where the processing nodes are connected by a mesh interconnection network <ref> [8] </ref>. 2.2 Model Parameters Model parameters can be classified as either describing the system or describing the application. Table 1 defines the system parameters, while Table 2 summarizes the application parameters. From the parameters in Table 2, we can compute the probabilities of the protocol transactions in Table 3. <p> As explained in <ref> [8] </ref>, the standard equation for residual life under the assumption of Poisson arrivals is not accurate since arrivals at the processor are not at random points in time; 2 therefore, we use an interpolation suggested by Derek Eager [3]. <p> a modified MB model in which there are M hw customers per processor and these customers represent the behavior of all read, write and 1 The reads in the MB submodel have only a small effect on estimated throughput (less than 4% reduction in throughput for all applications validated in <ref> [8] </ref>, except FFTopt which has a 10% reduction), and they are not discussed in [8]. 2 The estimated mean residual life for random arrivals equals the second moment of service time divided by 2t [7]. 5 upgrade memory system transactions. <p> these customers represent the behavior of all read, write and 1 The reads in the MB submodel have only a small effect on estimated throughput (less than 4% reduction in throughput for all applications validated in <ref> [8] </ref>, except FFTopt which has a 10% reduction), and they are not discussed in [8]. 2 The estimated mean residual life for random arrivals equals the second moment of service time divided by 2t [7]. 5 upgrade memory system transactions. For any of these memory requests, the customer leaves the processor and visits the appropriate memory system resources. <p> For any of these memory requests, the customer leaves the processor and visits the appropriate memory system resources. Once throughput is computed from the weighted average of the value at each M , synchronization effects are accounted for as described in <ref> [8] </ref>. 4 The Customized MVA Equations As explained above, the SB and MB submodels use a set of customized MVA (CMVA) equations to compute the mean delay for each type of transaction at the local and remote memory buses, local and remote directories (and associated memory modules), and network interfaces. <p> The equations in this section are the same for both submodels, and they can easily be modified to model different memory system architectures, as was done in <ref> [8] </ref>. To make the equations more readable, we have adopted subscripts and superscripts to denote the possible variations in the term to which they are attached.
Reference: [9] <author> M. Vernon, E. Lazowska, and J. Zahorjan. </author> <title> An Accurate and Efficient Performance Analysis Technique for Multiprocessor Snooping Cache-Consistency Protocols. </title> <booktitle> In Proc. 15th Int'l Symp. on Computer Architecture, </booktitle> <pages> pages 192202, </pages> <year> 1988. </year> <month> 13 </month>
Reference-contexts: We create a set of intuitive customized mean value analysis (CMVA) equations to obtain estimates of throughput (instructions per cycle) in each submodel. The CMVA technique has proven to be accurate in validation experiments for a number of simpler architectural models <ref> [9] </ref>. The purpose of this technical report is to provide the details of the customized MVA equations which were omitted in [8] due to space constraints. Section 2 of this report provides the model input parameters.
References-found: 9

