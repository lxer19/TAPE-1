URL: file://cse.ogi.edu/pub/tech-reports/1992/92-003.ps.gz
Refering-URL: http://www.cse.ogi.edu/DISC/projects/pa-chorus/reports.html
Root-URL: http://www.cse.ogi.edu
Title: Porting Chorus to the PA-RISC: Project Overview  
Author: Jonathan Walpole, Marion Hakanson, Jon Inouye, Ravindranath Konuru 
Note: This research was supported by the Hewlett-Packard Company,  
Date: January 1992  
Affiliation: Department of Computer Science and Engineering Oregon Graduate Institute of Science Technology  Chorus Systemes, and the Oregon Advanced Computing Institute (OACIS).  
Abstract: This document is part of a series of reports describing the design decisions made in porting the Chorus Operating System to the Hewlett-Packard 9000 Series 800 workstation. This document presents an overview of the project, and outlines the other reports in the series and the relationships between them. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Vadim Abrossimov, Marc Rozier, and Michel Gien. </author> <title> Virtual Memory Management in Chorus. </title> <booktitle> In Proceedings of Progress in Distributed Operating Systems and Distributed Systems anage-ment. </booktitle> <publisher> Springer Verlag, </publisher> <month> April </month> <year> 1989. </year> <note> Also published as technical report CS/TR-89-30. </note>
Reference-contexts: The current reports in this series cover only the Chorus kernel. However, in this section we outline the overall architecture of the Chorus/MiX system and discuss some of the salient features of its design. Further information on Chorus/MiX can be found in <ref> [3, 4, 1, 2, 5] </ref> 1 . The Chorus nucleus has four key components: a communication manager, a virtual memory manager, a supervisor, and a multi-tasking executive. Each of these is discussed, in turn, in the following paragraphs. <p> In other words, we had to do some work, mostly in the Process Manager, to port them to the PA-RISC. The various components of the Chorus nucleus are discussed in more detail in the other documents in this series (see section 5 of this document) and in <ref> [3, 4, 1, 2, 5] </ref>. 4 Porting Strategy and Organization There were four members of the project team: two graduate students (Jon Inouye and Ravindranath Konuru), a systems administrator (Marion Hakanson), and a faculty member (Jonathan Walpole).
Reference: [2] <author> Vadim Abrossimov, Marc Rozier, and Marc Shapiro. </author> <title> Generic Virtual Memory Management for Operating System Kernels. </title> <booktitle> In Proceedings of the 12th AC Symposium on Operating Systems Principles, </booktitle> <month> December 3-6 </month> <year> 1989. </year> <note> Also published as technical report CS/TR-89-18. </note>
Reference-contexts: The current reports in this series cover only the Chorus kernel. However, in this section we outline the overall architecture of the Chorus/MiX system and discuss some of the salient features of its design. Further information on Chorus/MiX can be found in <ref> [3, 4, 1, 2, 5] </ref> 1 . The Chorus nucleus has four key components: a communication manager, a virtual memory manager, a supervisor, and a multi-tasking executive. Each of these is discussed, in turn, in the following paragraphs. <p> In other words, we had to do some work, mostly in the Process Manager, to port them to the PA-RISC. The various components of the Chorus nucleus are discussed in more detail in the other documents in this series (see section 5 of this document) and in <ref> [3, 4, 1, 2, 5] </ref>. 4 Porting Strategy and Organization There were four members of the project team: two graduate students (Jon Inouye and Ravindranath Konuru), a systems administrator (Marion Hakanson), and a faculty member (Jonathan Walpole).
Reference: [3] <author> Fran~cois Armand, Michel Gien, Frederic Herrmann, and Marc Rozier. </author> <title> Revolution 89 or "Distributing UNIX Brings it Back to its Original Virtues". </title> <booktitle> In Proceedings of the orkshop on Experiences with Building Distributed and ultiprocessor Systems, </booktitle> <month> October 5-6 </month> <year> 1989. </year> <note> Also published as technical report CS/TR-89-36. 7 </note>
Reference-contexts: The current reports in this series cover only the Chorus kernel. However, in this section we outline the overall architecture of the Chorus/MiX system and discuss some of the salient features of its design. Further information on Chorus/MiX can be found in <ref> [3, 4, 1, 2, 5] </ref> 1 . The Chorus nucleus has four key components: a communication manager, a virtual memory manager, a supervisor, and a multi-tasking executive. Each of these is discussed, in turn, in the following paragraphs. <p> In other words, we had to do some work, mostly in the Process Manager, to port them to the PA-RISC. The various components of the Chorus nucleus are discussed in more detail in the other documents in this series (see section 5 of this document) and in <ref> [3, 4, 1, 2, 5] </ref>. 4 Porting Strategy and Organization There were four members of the project team: two graduate students (Jon Inouye and Ravindranath Konuru), a systems administrator (Marion Hakanson), and a faculty member (Jonathan Walpole).
Reference: [4] <author> Fran~cois Armand, Frederic Herrmann, Jim Lipkis, and Marc Rozier. </author> <title> Multi-threaded Processes in CHORUS/MIX. </title> <booktitle> In Proceedings of EUUG Spring'90 Conference, </booktitle> <pages> pages 1-13, </pages> <month> April 23-27 </month> <year> 1989. </year> <note> Also published as technical report CS/TR-89-37. </note>
Reference-contexts: The current reports in this series cover only the Chorus kernel. However, in this section we outline the overall architecture of the Chorus/MiX system and discuss some of the salient features of its design. Further information on Chorus/MiX can be found in <ref> [3, 4, 1, 2, 5] </ref> 1 . The Chorus nucleus has four key components: a communication manager, a virtual memory manager, a supervisor, and a multi-tasking executive. Each of these is discussed, in turn, in the following paragraphs. <p> In other words, we had to do some work, mostly in the Process Manager, to port them to the PA-RISC. The various components of the Chorus nucleus are discussed in more detail in the other documents in this series (see section 5 of this document) and in <ref> [3, 4, 1, 2, 5] </ref>. 4 Porting Strategy and Organization There were four members of the project team: two graduate students (Jon Inouye and Ravindranath Konuru), a systems administrator (Marion Hakanson), and a faculty member (Jonathan Walpole).
Reference: [5] <institution> CHORUS Kernel v3.3 Implementation Guide. </institution> <type> Technical Report CS/TR-90-71, </type> <institution> Chorus Systemes, </institution> <year> 1991. </year>
Reference-contexts: The current reports in this series cover only the Chorus kernel. However, in this section we outline the overall architecture of the Chorus/MiX system and discuss some of the salient features of its design. Further information on Chorus/MiX can be found in <ref> [3, 4, 1, 2, 5] </ref> 1 . The Chorus nucleus has four key components: a communication manager, a virtual memory manager, a supervisor, and a multi-tasking executive. Each of these is discussed, in turn, in the following paragraphs. <p> In other words, we had to do some work, mostly in the Process Manager, to port them to the PA-RISC. The various components of the Chorus nucleus are discussed in more detail in the other documents in this series (see section 5 of this document) and in <ref> [3, 4, 1, 2, 5] </ref>. 4 Porting Strategy and Organization There were four members of the project team: two graduate students (Jon Inouye and Ravindranath Konuru), a systems administrator (Marion Hakanson), and a faculty member (Jonathan Walpole).
Reference: [6] <author> Hewlett-Packard. </author> <title> Precision Architecture and Instruction Set Reference anual, </title> <booktitle> third edition, </booktitle> <month> April </month> <year> 1989. </year>
Reference-contexts: This section outlines the salient features of PA-RISC insofar as they relate to operating system design. More complete details of the architecture can be found in <ref> [10, 12, 8, 11, 6] </ref>. The memory hierarchy of the PA-RISC consists of registers (32 general-purpose, 25 control and 8 space registers), an architecturally visible cache (i.e., there are instructions for cache management), main memory, and an I/O system.
Reference: [7] <author> Jon Inouye, Marion Hakanson, Ravindranath Konuru, and Jonathan Walpole. </author> <title> Porting Chorus to the PA-RISC: Virtual Memory Manager. </title> <type> Technical Report CSE-92-5, </type> <institution> Oregon Graduate Institute, </institution> <month> January </month> <year> 1992. </year>
Reference-contexts: The machine-dependent layer presents a generic memory management interface (i.e., a machine independent interface) to the portable layer. Many of the problems we faced in porting Chorus to the PA-RISC arose because of conflicts between the PA-RISC architecture and the definition of this interface (see <ref> [7] </ref> for details). The supervisor is a dispatcher for external events such as interrupts and traps.
Reference: [8] <author> David V. James, Stephen G. Burger, and Robert D. Odineal. </author> <title> Hewlett-Packard Precision Architecture: The Input/Output System. </title> <journal> Hewlett-Packard Journal, </journal> <volume> 37(8) </volume> <pages> 23-30, </pages> <month> August </month> <year> 1986. </year>
Reference-contexts: This section outlines the salient features of PA-RISC insofar as they relate to operating system design. More complete details of the architecture can be found in <ref> [10, 12, 8, 11, 6] </ref>. The memory hierarchy of the PA-RISC consists of registers (32 general-purpose, 25 control and 8 space registers), an architecturally visible cache (i.e., there are instructions for cache management), main memory, and an I/O system.
Reference: [9] <author> Ravindranath Konuru, Marion Hakanson, Jon Inouye, and Jonathan Walpole. </author> <title> Porting the Chorus Supervisor and Related Low-Level Functions to the PA-RISC. </title> <type> Technical Report CSE-92-6, </type> <institution> Oregon Graduate Institute, </institution> <month> January </month> <year> 1992. </year>
Reference-contexts: Since the supervisor deals directly with the hardware (i.e., when handling traps and interrupts), and must manage processor-specific thread context information, much of the supervisor code is machine dependent (see <ref> [9] </ref> for details). Finally, the multi-tasking executive provides priority-based preemptive scheduling and fine-grain synchronization. The multi-tasking executive is mostly portable. The MiX 3.2 sub-system is a modular multi-server implementation of Unix System V release 3.2.
Reference: [10] <author> Ruby B. Lee. </author> <title> Precision Architecture. </title> <journal> IEEE Computer, </journal> <volume> 22(1) </volume> <pages> 78-91, </pages> <month> January </month> <year> 1989. </year>
Reference-contexts: This section outlines the salient features of PA-RISC insofar as they relate to operating system design. More complete details of the architecture can be found in <ref> [10, 12, 8, 11, 6] </ref>. The memory hierarchy of the PA-RISC consists of registers (32 general-purpose, 25 control and 8 space registers), an architecturally visible cache (i.e., there are instructions for cache management), main memory, and an I/O system.
Reference: [11] <author> Joseph A. Lukes. </author> <title> HP Precision Architecture Performance Analysis. </title> <journal> Hewlett-Packard Journal, </journal> <volume> 37(8) </volume> <pages> 30-39, </pages> <month> August </month> <year> 1986. </year>
Reference-contexts: This section outlines the salient features of PA-RISC insofar as they relate to operating system design. More complete details of the architecture can be found in <ref> [10, 12, 8, 11, 6] </ref>. The memory hierarchy of the PA-RISC consists of registers (32 general-purpose, 25 control and 8 space registers), an architecturally visible cache (i.e., there are instructions for cache management), main memory, and an I/O system.
Reference: [12] <author> Michael J. Mahon, Ruby Bei-Loh Lee, Terrence C. Miller, Jerome C. Huck, and William R. Bryg. </author> <title> Hewlett-Packard Precision Architecture: The Processor. </title> <journal> Hewlett-Packard Journal, </journal> <volume> 37(8) </volume> <pages> 4-22, </pages> <month> August </month> <year> 1986. </year> <month> 8 </month>
Reference-contexts: This section outlines the salient features of PA-RISC insofar as they relate to operating system design. More complete details of the architecture can be found in <ref> [10, 12, 8, 11, 6] </ref>. The memory hierarchy of the PA-RISC consists of registers (32 general-purpose, 25 control and 8 space registers), an architecturally visible cache (i.e., there are instructions for cache management), main memory, and an I/O system.
References-found: 12

