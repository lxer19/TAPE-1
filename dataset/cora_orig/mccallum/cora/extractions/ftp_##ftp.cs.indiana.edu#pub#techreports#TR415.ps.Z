URL: ftp://ftp.cs.indiana.edu/pub/techreports/TR415.ps.Z
Refering-URL: http://www.cs.indiana.edu/ftp/techreports/index.html
Root-URL: http://www.cs.indiana.edu
Email: gandhim@cs.indiana.edu  edrbtsn@cs.indiana.edu  
Title: Data Model for Audio-Video Data  
Author: Munish Gandhi Edward L. Robertson 
Address: Bloomington, IN-47405.  
Affiliation: Computer Science Department, Indiana University,  
Date: August 24, 1994  
Note: A  
Abstract: TECHNICAL REPORT NO. 415 
Abstract-found: 1
Intro-found: 1
Reference: [All83] <author> J. F. Allen. </author> <title> Maintaining Knowledge About Temporal Intervals. </title> <journal> Communications of the ACM, </journal> <volume> 26(11) </volume> <pages> 832-843, </pages> <month> November </month> <year> 1983. </year>
Reference-contexts: In fact, the algebra is sufficiently powerful to represent any of the 13 mutually exclusive temporal relationships between two intervals <ref> [All83] </ref> (`Before', `Equals', `Overlaps' and `Contains' are a few of these).
Reference: [BGT92] <author> C. Breiteneder, S. Gibbs, and D. Tsichritzis. </author> <title> Modelling of Audio / Video Data. </title> <editor> In D. Tsichritzis, editor, </editor> <booktitle> Object Frameworks, chapter 16, </booktitle> <pages> pages 293-310. </pages> <institution> Centre Universitaire d'Informatique, Universite de Geneve, </institution> <month> July </month> <year> 1992. </year>
Reference-contexts: The media library, in turn, views a track as being essentially atomic. While there is work at the extremes of the granularity spectrum, issues at the track level of granularity have been largely unexplored (save for <ref> [BGT92, GBT92] </ref>). For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data [LG91, Wal91, Poh92].
Reference: [EN89] <author> R. Elmasri and S. B. Navathe. </author> <title> Fundamentals of database systems. </title> <publisher> Benjamin/Cummings Publishing Company, Inc., </publisher> <address> RedWood City, California, </address> <year> 1989. </year>
Reference-contexts: For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data [LG91, Wal91, Poh92]. At the coarsest level of granularity, current database technology <ref> [EN89] </ref> or other evolving paradigms [HBvR94, NKN91] may be used to organize a set of tracks. In the next section (section 2), we discuss the structure of the algebraic domain. This will be followed by a discussion of the algebraic operators in section 3.
Reference: [GBT92] <author> S. Gibbs, C. Breiteneder, and D. Tsichritzis. </author> <title> Audio / Video Databases: An Object-Oriented Approach. </title> <editor> In D. Tsichritzis, editor, </editor> <booktitle> Object Frameworks, chapter 15, </booktitle> <pages> pages 275-292. </pages> <institution> Centre Universitaire d'Informatique, Universite de Geneve, </institution> <month> July </month> <year> 1992. </year>
Reference-contexts: The media library, in turn, views a track as being essentially atomic. While there is work at the extremes of the granularity spectrum, issues at the track level of granularity have been largely unexplored (save for <ref> [BGT92, GBT92] </ref>). For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data [LG91, Wal91, Poh92].
Reference: [HBvR94] <author> L. Hardman, D.C.A. Bulterman, and G. van Rossum. </author> <title> The Am-sterdam Hypermedia Model: Adding Time and Context to the Dexter Model. </title> <journal> Communications of the ACM, </journal> <volume> 37(2) </volume> <pages> 50-62, </pages> <month> Febru-ary </month> <year> 1994. </year> <month> 24 </month>
Reference-contexts: For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data [LG91, Wal91, Poh92]. At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms <ref> [HBvR94, NKN91] </ref> may be used to organize a set of tracks. In the next section (section 2), we discuss the structure of the algebraic domain. This will be followed by a discussion of the algebraic operators in section 3. <p> We feel the model can serve many purposes. * It provides the formal foundations for designing and implementing a track database server. * It serves as the basis for organizing, synchronizing and creating tem 23 poral relationships between time-based elements in hypermedia mod- els <ref> [HBvR94, NKN91] </ref>. * It serves as a conceptual model for applications such as a console for editing and mixing movies, soundtracks, etc.
Reference: [LG91] <author> D. Le Gall. </author> <title> MPEG: A Video Compression Standard for Multi--media Applications. </title> <journal> Communications of the ACM, </journal> <volume> 34(4) </volume> <pages> 30-44, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: While there is work at the extremes of the granularity spectrum, issues at the track level of granularity have been largely unexplored (save for [BGT92, GBT92]). For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data <ref> [LG91, Wal91, Poh92] </ref>. At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms [HBvR94, NKN91] may be used to organize a set of tracks. In the next section (section 2), we discuss the structure of the algebraic domain. <p> Track atoms have a finer structure but that structure is interpretable by specific media format processors. To get an intuitive feel for track atoms, consider two digitial video formats - MPEG (Moving Pictures Experts Group) <ref> [LG91] </ref> and JPEG (Joint Photographic Experts Group) [Wal91]. JPEG video is a simple sequence of compressed frames. In this case, a compressed frame is appropriate as a track atom for JPEG streams. MPEG video, on the other hand, compresses (approximately 10) consecutive frames into a unit.
Reference: [NKN91] <author> S. R. Newcomb, N. A. Kipp, and V. T. Newcomb. HyTime: </author> <title> The Hypermedia/Time-based Document Structuring Language. </title> <journal> Communications of the ACM, </journal> <volume> 34(11) </volume> <pages> 67-83, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data [LG91, Wal91, Poh92]. At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms <ref> [HBvR94, NKN91] </ref> may be used to organize a set of tracks. In the next section (section 2), we discuss the structure of the algebraic domain. This will be followed by a discussion of the algebraic operators in section 3. <p> We feel the model can serve many purposes. * It provides the formal foundations for designing and implementing a track database server. * It serves as the basis for organizing, synchronizing and creating tem 23 poral relationships between time-based elements in hypermedia mod- els <ref> [HBvR94, NKN91] </ref>. * It serves as a conceptual model for applications such as a console for editing and mixing movies, soundtracks, etc.
Reference: [Poh92] <author> K. C. Pohlmann. </author> <title> The Compact Disc Handbook. The Computer Music and Digital Audio series. A-R Editions, </title> <booktitle> 2nd edition, </booktitle> <year> 1992. </year>
Reference-contexts: While there is work at the extremes of the granularity spectrum, issues at the track level of granularity have been largely unexplored (save for [BGT92, GBT92]). For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data <ref> [LG91, Wal91, Poh92] </ref>. At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms [HBvR94, NKN91] may be used to organize a set of tracks. In the next section (section 2), we discuss the structure of the algebraic domain.
Reference: [TL82] <editor> D. C. Tsichritzis and F. H. Lochovsky. </editor> <title> Data Models. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1982. </year>
Reference-contexts: Furthermore, in a client-server setting, if access is needed to only a segment of a file, the whole file is unnecessarily ported to the client. The above problems are symptomatic of a lack of a data model <ref> [TL82] </ref> which captures and manipulates the structure of continuous media. In this paper, we propose an algebraic data model as a formal basis for the management of continuous media. A system which uses this formalism is conceptualized as having a three layered architecture.
Reference: [Wal91] <author> G. Wallace. </author> <title> The JPEG Still Picture Compression Standard. </title> <journal> Communications of the ACM, </journal> <volume> 34(4) </volume> <pages> 30-44, </pages> <month> April </month> <year> 1991. </year> <month> 25 </month>
Reference-contexts: While there is work at the extremes of the granularity spectrum, issues at the track level of granularity have been largely unexplored (save for [BGT92, GBT92]). For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data <ref> [LG91, Wal91, Poh92] </ref>. At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms [HBvR94, NKN91] may be used to organize a set of tracks. In the next section (section 2), we discuss the structure of the algebraic domain. <p> Track atoms have a finer structure but that structure is interpretable by specific media format processors. To get an intuitive feel for track atoms, consider two digitial video formats - MPEG (Moving Pictures Experts Group) [LG91] and JPEG (Joint Photographic Experts Group) <ref> [Wal91] </ref>. JPEG video is a simple sequence of compressed frames. In this case, a compressed frame is appropriate as a track atom for JPEG streams. MPEG video, on the other hand, compresses (approximately 10) consecutive frames into a unit.
References-found: 10

