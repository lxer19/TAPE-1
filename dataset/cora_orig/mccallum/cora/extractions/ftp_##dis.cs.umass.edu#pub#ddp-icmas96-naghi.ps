URL: ftp://dis.cs.umass.edu/pub/ddp-icmas96-naghi.ps
Refering-URL: http://dis.cs.umass.edu/~garvey/publications.html
Root-URL: 
Email: fnagendra,lesserg@cs.umass.edu  decker@cis.udel.edu  
Phone: 2  3  
Title: Exploring Organizational Designs with TMS: A Case Study of Distributed Data Processing  
Author: M.V. Nagendra Prasad Keith Decker Alan Garvey and Victor Lesser Smith Hall 
Address: Amherst, MA 01003  19716  Tacoma, WA 98447  
Affiliation: 1 Department of Computer Science University of Massachusetts  Department of CIS University of Delaware  Newark, Delaware  Department of Computer Science Pacific Lutheran University  
Abstract: When we design multi-agent systems for realistic, worth-oriented environments, solving the coordination problems they present involves understanding the intricate and sophisticated interplay between the domain and the various system components. In this paper, we examine this interplay using tms and the GPGP (Generalized Partial Global Planning) approach as a tool for quickly exploring multiple alternative organizations/coordination strategies. We illustrate the flexibility of tms-style task structures for representing interesting multi-criteria coordination problems, and the use of a new grammar-based generation tool to allow quicker task structure experimentation. Using Distributed Data Processing as an example domain, we show how different coordination algorithms of varying sophistication give rise to subtle effects in functionally-structured agent organizations with interrelationships between functions. The experiments presented in our paper serve to illustrate our claim about the generality and flexibility of the tms representation for coordination problems and the grammar-based generators for modeling domain semantics and experimenting with different aspects of such domains. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Chomsky, N. </author> <year> 1966. </year> <title> Syntactic Structures. </title> <publisher> Mouton and Co. </publisher>
Reference: <author> Cohen, P. R., and Levesque, H. J. </author> <year> 1990. </year> <title> Intention is choice with commitment. </title> <booktitle> Artificial Intelligence 42(3) </booktitle> <pages> 213-261. </pages>
Reference: <author> Decker, K. S., and Lesser, V. R. </author> <year> 1993. </year> <title> Quantitative modeling of complex computational task environments. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> 217-224. </pages>
Reference: <author> Decker, K. S., and Lesser, V. R. </author> <year> 1995. </year> <title> Designing a family of coordination algorithms. </title> <booktitle> In Proceedings of the First International Conference on Multi-Agent Systems. </booktitle> <address> San Francisco: </address> <note> AAAI Press. Longer version available as UMass CS-TR 94-14. </note>
Reference-contexts: We have used it to represent coordination problems in distributed sensor networks, hospital patient scheduling, airport resource management, distributed information retrieval, pilot's associate, local area network diagnosis, etc. <ref> (Decker 1995) </ref>. tms models problem-solving activities of intelligent agents operating in complex environments where: * Responses to some tasks are required by specific deadlines. * The problem-solving environment involves a worth-oriented domain (Rosenschein & Zlotkin 1994). <p> Finally, the representation of agent activity should allow for the possibility that individual agent's activities contribute to different and independent high-level goals. TMS models We will present a brief summary of the objective (external environment) definition of tms models. Interested readers will find many more details and examples in <ref> (Decker 1995) </ref>. The following description is top-down, starting with the environment and ending with what the agent perceives. <p> If there is more than one non-local effect, then the effects are applied one after the other in an order specified in the model. We have defined at least sixteen example non-local effects <ref> (Decker 1995) </ref>. We can define a performance measure P (E) for the system (or for an agent) that is a function of the episode.
Reference: <author> Decker, K. S. </author> <year> 1995. </year> <title> Environment Centered Analysis and Design of Coordination Mechanisms. </title> <type> Ph.D. Dissertation, </type> <institution> University of Massachusetts. </institution>
Reference-contexts: We have used it to represent coordination problems in distributed sensor networks, hospital patient scheduling, airport resource management, distributed information retrieval, pilot's associate, local area network diagnosis, etc. <ref> (Decker 1995) </ref>. tms models problem-solving activities of intelligent agents operating in complex environments where: * Responses to some tasks are required by specific deadlines. * The problem-solving environment involves a worth-oriented domain (Rosenschein & Zlotkin 1994). <p> Finally, the representation of agent activity should allow for the possibility that individual agent's activities contribute to different and independent high-level goals. TMS models We will present a brief summary of the objective (external environment) definition of tms models. Interested readers will find many more details and examples in <ref> (Decker 1995) </ref>. The following description is top-down, starting with the environment and ending with what the agent perceives. <p> If there is more than one non-local effect, then the effects are applied one after the other in an order specified in the model. We have defined at least sixteen example non-local effects <ref> (Decker 1995) </ref>. We can define a performance measure P (E) for the system (or for an agent) that is a function of the episode.
Reference: <author> Fox, M. S. </author> <year> 1981. </year> <title> An organizational view of distributed systems. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics 11(1) </journal> <pages> 70-80. </pages>
Reference: <author> Galbraith, J. </author> <year> 1977. </year> <title> Organizational Design. </title> <address> Reading, MA: </address> <publisher> Addison-Wesley. </publisher>
Reference: <author> Garvey, A., and Lesser, V. </author> <year> 1995. </year> <title> Design-to-time scheduling with uncertainty. </title> <type> CS Technical Report 95-03, </type> <institution> University of Massachusetts. </institution>
Reference-contexts: The most common constraint is a commitment (Cohen & Levesque 1990; Jennings 1993) to achieve a certain level of quality at a task by a certain time. The empirical results in this paper were achieved using a `design-to-time' soft real-time local scheduler developed by Garvey <ref> (Garvey & Lesser 1995) </ref>. * GPGP is characterized by its use of commitments as a powerful and flexible way to achieve domain independent coordination among agents.
Reference: <author> Jennings, N. R. </author> <year> 1993. </year> <title> Commitments and conventions: The foundation of coordination in multi-agent systems. </title> <journal> The Knowledge Engineering Review 8(3) </journal> <pages> 223-250. </pages>
Reference: <author> Lawrence, P., and Lorsch, J. </author> <year> 1967. </year> <title> Organization and Environment. </title> <address> Cambridge, MA: </address> <publisher> Harvard University Press. </publisher>
Reference: <author> Mullins, S., and Rinderle, J. R. </author> <year> 1991. </year> <title> Grammatical Approaches to Engineering Design, part i. </title> <booktitle> Research in Engineering Design 2 </booktitle> <pages> 121-135. </pages>
Reference-contexts: Rewriting this graph involves what is called a LEARRE method <ref> (Mullins & Rinderle 1991) </ref>: Locate a subgraph g 0 that is isomorphic to the lefthand side, g i l of production p i 2 P , establish the Embedding Area in G 0 , Remove g 0 along with all the edges incident on it, Replace g 0 with g i
Reference: <author> Nagl, M. </author> <year> 1979. </year> <title> A Tutorial and Bibliographic Survey on Graph Grammars. </title> <editor> In Claus, V.; Ehrig, H.; and Rozenberg, G., eds., </editor> <title> Graph Grammars and their Application to Computer Science and Biology, </title> <publisher> LNCS 73. Berlin: Springer-Verlag. </publisher> <pages> 70-126. </pages>
Reference: <author> Rosenschein, J. S., and Zlotkin, G. </author> <year> 1994. </year> <title> Designing conventions for automated negotition. </title> <journal> AI Magazine 29-46. </journal>
Reference-contexts: Decker & Lesser 1995). Therefore it is important to develop tools and methodologies for: * representing interesting, complex coordination problems. By this we mean problems with deadlines, positive and negative interactions, and outcome uncertainties. These problems are situated in worth-oriented domains <ref> (Rosenschein & Zlotkin 1994) </ref> with multiple decision criteria. * building such representations fairly quickly. Otherwise empirical studies become drawn-out exercises in extensive, knowledge-intensive modeling. * instantiating environment-specific coordination mechanisms. * meaningfully comparing system performance un der these different mechanisms. <p> sensor networks, hospital patient scheduling, airport resource management, distributed information retrieval, pilot's associate, local area network diagnosis, etc. (Decker 1995). tms models problem-solving activities of intelligent agents operating in complex environments where: * Responses to some tasks are required by specific deadlines. * The problem-solving environment involves a worth-oriented domain <ref> (Rosenschein & Zlotkin 1994) </ref>. In a worth-oriented domain goals are encoded as functions that rate the acceptability of states, and the agents strive for the best solution possible (but not necessarily an optimal solution).
Reference: <author> Sanfeliu, A., and Fu, K. S. </author> <year> 1983. </year> <title> Tree-graph Grammars for Pattern Recognition. </title> <editor> In Ehrig, H.; Nagl, M.; and Rozenberg, G., eds., </editor> <title> Graph Grammars and their Application to Computer Science, </title> <publisher> LNCS 153. Berlin: Springer-Verlag. </publisher> <pages> 349-368. </pages>
Reference-contexts: and the edge-label alphabet () are finite, non-empty, mutually disjoint sets, A n , A t , and A are the respective sets of attributes, S 2 n is the start label (can be a node or a graph) and P is a finite nonempty set of graph production rules <ref> (Sanfeliu & Fu 1983) </ref>. A graph production is a 4-tuple p i = hg i l ; g i r ; E i ; P r (p i )i where P j l are isomorphic) Let G 0 be a graph derived from S using P.
Reference: <author> Shoham, Y., and Tennenholtz, M. </author> <year> 1992. </year> <title> On the synthesis of useful social laws for artificial agent societies (preliminary report). </title> <booktitle> In Proceedings of the Tenth National Conference on Artificial Intelligence, </booktitle> <pages> 276-281. </pages>
Reference-contexts: The agents have the relevant nonlocal view of the coordination problem, detect coordination relationships, but use rough commitments for routine tasks and communicate the committed results. It might be possible to view rough commitments as precompiled social laws <ref> (Shoham & Tennenholtz 1992) </ref>. Experiments We performed a series of experiments varying a number of parameters in our model to see the effectiveness of different coordination mechanisms used to manage the activities at different centers. The experiments reported below study the performance of the three coordination algorithms discussed previously.
Reference: <author> Stinchcombe, A. L. </author> <year> 1990. </year> <institution> Information and Organizations. Berkeley, CA: University of California Press. </institution>
References-found: 16

