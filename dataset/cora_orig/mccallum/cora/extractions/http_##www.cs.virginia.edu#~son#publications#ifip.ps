URL: http://www.cs.virginia.edu/~son/publications/ifip.ps
Refering-URL: http://www.cs.virginia.edu/~son/publications.html
Root-URL: http://www.cs.virginia.edu
Title: An Adaptive Policy for Improved Timeliness in Secure Database Systems  
Author: Sang H. Son Rasikan David and Bhavani Thuraisingham 
Keyword: Timeliness, concurrency control, two-phase locking, non-interference, security, miss percentage  
Address: Charlottesville, VA 22903, USA  MA 01730, USA  
Affiliation: Dept. of Computer Science, University of Virginia,  Mitre Corporation, Bedford,  
Abstract: Database systems for real-time applications must satisfy timing constraints associated with transactions, in addition to maintaining data consistency. In addition to real-time requirements, security is usually required in many applications. Multilevel security requirements introduce a new dimension to transaction processing in real-time database systems. In this paper, we argue that because of the complexities involved, trade-offs need to be made between security and timeliness. We first describe a secure two-phase locking protocol. The protocol is then modified to support an adaptive method of trading off security for timeliness, depending on the current state of the system. The performance of the Adaptive 2PL protocol is evaluated for a spectrum of security-factor values ranging from fully secure (1.0) right upto fully real-time (0.0). 
Abstract-found: 1
Intro-found: 1
Reference: [Abbo92] <author> R. K. Abbott and H. Garcia-Molina. </author> <title> Scheduling Real-Time Transactions: A Performance Evaluation, </title> <journal> ACM Trans. on Database Systems, </journal> <volume> 17(3), </volume> <pages> pp 513-560, </pages> <year> Sept.1992. </year>
Reference-contexts: Alternative approach is to make higher access class transaction wait until all transactions that are lower and have arrived earlier finish their execution. 3 SUPPORTING SECURITY AND TIMELINESS There are several papers that have explored approaches to extend conventional databases for time-critical applications <ref> [Abbo92, Sha91, Son92] </ref>. The problem arises when these approaches are applied to secure databases, because covert channels can be introduced by priority-based scheduling. All existing real-time systems schedule transactions based on some priority scheme. The priority usually reects how close the transaction is to missing its deadline. <p> A very high value of b compared to a would result in an SF value of 0.0, i.e., the behavior would be identical to that of 2PL-HP <ref> [Abbo92] </ref>. For a desired value of SF between 0 and 1, the values of a, b and DMISS_THRESH would have to be tuned based on the arrival rate of transactions. <p> If a * (1 - SF) &lt; b * DMF, then if the transactions priority is greater than all of the lock holders, the holders are aborted and the transaction is granted a lock; if the transactions priority is lower, it waits for the lock holders to release the lock <ref> [Abbo92] </ref>. However, if a * (1 - SF) &gt; b * DMF, then the steps taken by the Secure 2PL are followed.
Reference: [Bell76] <author> D. E. Bell and L. J. LaPadula. </author> <title> Secure Computer Systems: Unified Exposition and Multics Interpretation, </title> <institution> The Mitre Corp., </institution> <month> March </month> <year> 1976. </year>
Reference-contexts: 1 INTRODUCTION Database security is concerned with the ability of a database management system to enforce a security policy governing the disclosure, modification or destruction of information. Most secure database systems use an access control mechanism based on the Bell-LaPadula model <ref> [Bell76] </ref>. This model is stated in terms of subjects and objects. An object is understood to be a data file, record or a field within a record. A subject is an active process that requests access to objects. This work was supported in part by ONR.
Reference: [Bern87] <author> P. A. Bernstein, N. Goodman & V. Hadzilacos. </author> <title> Concurrency Control and Recovery in Database Systems, </title> <address> Reading, MA: </address> <publisher> Addison Wesley, </publisher> <year> 1987. </year>
Reference-contexts: After these operations, deadlock would occur because r 1 [y] waits for w 2 [y] to release its lock and vw 2 [x] waits for r 1 [x] to release its lock. Deadlocks can be detected by constructing a wait-for graph <ref> [Bern87] </ref>. A scheduler recovers from a deadlock by aborting one of the transactions in the cycle. A secure scheduler must ensure that Recovery Security is not violated by the choice of a victim.
Reference: [Dav93] <author> R. David & S. H. Son. </author> <title> A Secure Two Phase Locking Protocol, </title> <booktitle> Proc. of the 12th Symposium on Reliable Distributed Systems, </booktitle> <address> Princeton, NJ, </address> <month> Oct. </month> <year> 1993. </year>
Reference-contexts: Two additional problems that need to be addressed to make the protocol useful is the recovery from system failures and deadlock resolution. The recovery procedure is discussed in <ref> [Dav93] </ref>. 4.3 Deadlock Detection and Resolution The secure two-phase locking protocol is not free from deadlocks.
Reference: [Gogu82] <author> J. A. Goguen and J. Meseguer. </author> <title> Security Policy and Security Models, </title> <booktitle> Proc. of the IEEE Symposium on Security and Privacy, </booktitle> <pages> pp 11-20, </pages> <year> 1982. </year>
Reference-contexts: The approach presented in this paper is not intended to support such applications. 2 BACKGROUND 2.1 Correctness Criteria for Secure Scheduler Covert channel analysis and removal is one of the most important issues in multilevel secure con-currency control. The notion of non-interference has been proposed <ref> [Gogu82] </ref> as a simple and intuitively satisfying definition of what it means for a system to be secure. The property of noninterference states that the output as seen by a subject must be unaffected by the inputs of another subject at a higher access class.
Reference: [Keef90] <author> T. Keefe, W. T. Tsai & J. Srivastava. </author> <title> Multilevel Secure Database Concurrency Control, </title> <booktitle> Proc. of Data Engineering Conference, </booktitle> <pages> pp 337-344, </pages> <address> Los Angeles, CA, </address> <month> Feb. </month> <year> 1990. </year>
Reference-contexts: An extensive analysis of the possible covert channels in a secure concurrency control mecha nism and the necessary and sufficient conditions for a secure, interference-free scheduler are given in <ref> [Keef90] </ref>. Three of these properties are of relevance to the secure two phase locking protocol discussed in this paper.
Reference: [Lamp73] <author> Butler W. Lampson. </author> <title> A Note on the Confinement Problem, </title> <journal> Communications of the ACM, </journal> <volume> 16(10), </volume> <pages> pp 613-615, </pages> <month> October </month> <year> 1973. </year>
Reference-contexts: The Bell-LaPadula model prevents direct flow of information from a higher access class to a lower access class, but the conditions are not sufficient to ensure that security is not violated indirectly through what are known as covert channels <ref> [Lamp73] </ref>. A covert channel allows indirect transfer of information from a subject at a higher access class to a subject at a lower access class. An important class of covert channels that are usually associated with con-currency control mechanisms are timing channels.
Reference: [Sha91] <author> Sha L., R. Rajkumar, S. H. Son, and C. Chang. </author> <title> A Real-Time Locking Protocol, </title> <journal> IEEE Trans. on Computers, </journal> <volume> 40(7), </volume> <pages> pp 782-800, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: Alternative approach is to make higher access class transaction wait until all transactions that are lower and have arrived earlier finish their execution. 3 SUPPORTING SECURITY AND TIMELINESS There are several papers that have explored approaches to extend conventional databases for time-critical applications <ref> [Abbo92, Sha91, Son92] </ref>. The problem arises when these approaches are applied to secure databases, because covert channels can be introduced by priority-based scheduling. All existing real-time systems schedule transactions based on some priority scheme. The priority usually reects how close the transaction is to missing its deadline.
Reference: [Son92] <author> S. H. Son, J. Lee, and Y. Lin. </author> <title> Hybrid Protocols Using Dynamic Adjustment of Serialization Order for Real-Time Concurrency Control, </title> <journal> Real-Time Systems Journal, </journal> <volume> 4(3), </volume> <pages> pp 269-276, </pages> <month> Sept. </month> <year> 1992. </year>
Reference-contexts: Alternative approach is to make higher access class transaction wait until all transactions that are lower and have arrived earlier finish their execution. 3 SUPPORTING SECURITY AND TIMELINESS There are several papers that have explored approaches to extend conventional databases for time-critical applications <ref> [Abbo92, Sha91, Son92] </ref>. The problem arises when these approaches are applied to secure databases, because covert channels can be introduced by priority-based scheduling. All existing real-time systems schedule transactions based on some priority scheme. The priority usually reects how close the transaction is to missing its deadline.
Reference: [Son93] <author> S. H. Son and B. Thuraisingham. </author> <title> Towards a Multilevel Secure Database Management System for Real-Time Applications, </title> <booktitle> IEEE Workshop on Real-Time Applications, </booktitle> <address> New York, New York, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: Finally, in this paper, we have restricted ourselves to the problem of real-time secure concurrency control in a database system. Some of the other issues that need to be considered in designing a comprehensive real-time multilevel secure database sys-tem (MLS/RTDBMS) are dealt with in <ref> [Son93] </ref>. Various types of MLS/RTDBMSs need to be identified and architectures and algorithms developed for each type of system. Trade-offs need to be made between security, timeliness and consistency on a case-by-case basis.

References-found: 10

