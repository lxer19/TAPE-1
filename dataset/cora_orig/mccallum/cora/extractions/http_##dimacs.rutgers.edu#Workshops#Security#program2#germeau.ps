URL: http://dimacs.rutgers.edu/Workshops/Security/program2/germeau.ps
Refering-URL: http://dimacs.rutgers.edu/Workshops/Security/program2/program.html
Root-URL: http://www.cs.rutgers.edu
Email: fgermeau,leducg@montefiore.ulg.ac.be  
Title: Model-based Design and Verification of Security Protocols using LOTOS  
Author: F. Germeau, G. Leduc 
Address: d'electricite Montefiore B.28, Universite de Liege, B-4000 Liege, Belgium  
Note: in Networking (RUN)  
Affiliation: Research Unit  Institut  
Abstract: We explain how the formal language LOTOS can be used to specify security protocols and cryptgraphic operations. We describe how to model security properties as safety properties and how a model-based verification method can be used to verify the robustness of a protocol against attacks of an intruder. We illustrate our technique on a concrete registration protocol. We find a simpler protocol that remains secure, and a more sophisticated protocol that allows a better distinction between intruder's attacks and ordinary errors. 
Abstract-found: 1
Intro-found: 1
Reference: [AG97] <author> M. Abadi and A.D. </author> <title> Gordon : "A Calculus for Cryptographic Protocols The Spi Calculus", </title> <booktitle> Proceedings of the 4th ACM Conference on Computer and Communication Security, </booktitle> <year> 1997. </year>
Reference-contexts: So we need to find the right abstraction level between the simplicity of the global view of the security services and the complexity of the underlying protocols. Method to automate the process would be desirable. Some researchs in this direction can be found in <ref> [AG97] </ref>. 3.3 The verification toolbox When the LOTOS specification is written and the properties are formalized, we can perform the verification itself. We use the CADP package [FGK96] included in the Eucalyptus toolbox to carry out the verification of the protocol.
Reference: [Bol96] <author> D. </author> <title> Bolignano : "Formal Verification of Cryptographic Protocols", </title> <booktitle> Proceedings of the 3rd ACM Conference on Computer and Communication Security, </booktitle> <year> 1996. </year>
Reference: [Bol97] <author> D. </author> <title> Bolignano : "Towards a Mechanization of Cryptographic Protocol Verification", </title> <booktitle> Proceedings of CAV 97, </booktitle> <publisher> LNCS 1254, Springer-Verlag, </publisher> <month> June </month> <year> 1997. </year>
Reference-contexts: It would be interesting to consider such proof on the case studies we derive from this method. Some work in this direction is proposed in [Low96] where the verification with a limited number of principals is generalized or in <ref> [Bol97] </ref> where an abstraction function automates the computation of a correct abstract model. The main difficulty comes from the complexity of the protocols we want to verify.
Reference: [BB87] <author> T. Bolognesi and E. </author> <title> Brinksma : "Introduction to the ISO Specification Language LOTOS", </title> <booktitle> Computer Networks and ISDN Systems 14, </booktitle> <pages> pp. 25-59, </pages> <year> 1987. </year>
Reference: [BFG91] <author> A. Bouajjani, J.-C. Fernandez, S. Graf, C. Rodriguez and J. </author> <title> Sifakis : "Safety for Branching Time Semantics", </title> <booktitle> 18th ICALP, </booktitle> <publisher> Springer-Verlag, </publisher> <month> July </month> <year> 1991. </year>
Reference-contexts: bisimulation denoted Sys 1 ~ Sys 2 , iff there exists a strong bisimulation relation R S 1 fi S 2 such that &lt; s 01 ; s 02 &gt; 2 R. 11 Our security properties being all safety properties, the minimization can be further improved modulo the safety equivalence <ref> [BFG91] </ref>, which preserves all the properties expressible in Branching time Safety Logic (BSL). Not all the observable actions are relevant to verify the properties. In particular, our properties only rely on special events, so that other actions can be hidden. <p> Not all the observable actions are relevant to verify the properties. In particular, our properties only rely on special events, so that other actions can be hidden. The minimized LTS of our protocol can be checked against the LTS of a property be verifying the safety preorder relation <ref> [BFG91] </ref> between them. Formally, the safety preorder ( s ) is the preorder that generates the safety equivalence (~ s ), and is nothing else than the weak simulation preorder.
Reference: [BAN90] <author> M. Burrow, M. Abadi and R. </author> <title> Needham : "A Logic of Authentication", </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 8, </volume> <year> 1990. </year>
Reference-contexts: Formal descriptions and verifications can be used to obtain the assurance that a protocol cannot be threatened by an intruder. Special modal logics have been designed to verify authentication protocols. The most well-known such logic is the BAN logic <ref> [BAN90] </ref>, but some others have been proposed to overcome some of its limitations. Such logics have been used successfully to verify several protocols, but have not proved very effective in some other circumstances. Another approach consists of using general purpose formal methods usually applied to more conventional protocols.
Reference: [EM85] <author> H. Ehrig and B. </author> <title> Mahr : "Fundamentals of Algebraic Specification 1, Equations and Initial Semantics", </title> <editor> In : W. Brauer, B. Rozenberg, A. Salomaa, Eds, EATCS, </editor> <booktitle> Monographs on Theorical Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference-contexts: It describes the behaviour of processes and their interactions. LO-TOS has a rich set of operators (multiway synchronization and abstraction like in CSP, disabling, ...), and an explicit internal action like in CCS. * An abstract datatype language. ACT ONE <ref> [EM85] </ref>, with an initial semantics. A type is defined by its signature (sorts + operation on the sorts) and by equations to give a meaning to the operations. The revision of the LOTOS standard is under study in ISO/IEC since 1991.
Reference: [FGK96] <author> J.-C. Fernandez, H. Garavel, A. Kerbrat, R. Mateescu, L. Mounier and M. </author> <title> Sighireanu : "CAESAR/ALDEBARAN Development Package: A Protocol Validation and Verification Toolbox", </title> <booktitle> Proceedings of the 8th Conference on Computer-Aided Verification, </booktitle> <editor> R. Alur & T. Henzinger Eds, </editor> <month> August </month> <year> 1996. </year>
Reference-contexts: Method to automate the process would be desirable. Some researchs in this direction can be found in [AG97]. 3.3 The verification toolbox When the LOTOS specification is written and the properties are formalized, we can perform the verification itself. We use the CADP package <ref> [FGK96] </ref> included in the Eucalyptus toolbox to carry out the verification of the protocol. As figure 3 shows, the LOTOS specification with datatype language extensions is converted into ISO LOTOS with the APERO tool.
Reference: [Gar96] <author> H. </author> <title> Garavel : "An Overview of the Eucalyptus Toolbox", </title> <booktitle> Proceedings of COST247 workshop, </booktitle> <month> June </month> <year> 1996. </year> <month> 21 </month>
Reference-contexts: Independently of this work, we specified the Equicrypt protocol 1 Ma^tre de recherches (Senior Research Associate) F.N.R.S. (National Fund for Scientific Research, Belgium) 1 [LBQ96] in LOTOS and used the Eucalyptus toolbox <ref> [Gar96] </ref> to verify it [LBK96][GL97]. The present paper will focus on the method we used to model and verify a security protocol using LOTOS. The paper is organized as follow.
Reference: [GL97] <author> F. Germeau, G. </author> <title> Leduc : "A Computer Aided Design of a Secure Registration Protocol", </title> <booktitle> Proceedings of FORTE/PSTV 97, </booktitle> <publisher> Chapman & Hall, </publisher> <year> 1997, </year> <note> to appear. </note>
Reference-contexts: After a successful registration, this TTP issues a public-key certificate which allows the user to subscribe to a service offered by a service provider. We concentrate on the verification of the registration protocol. This paper only presents an overview of the process. Complete details can be found in <ref> [GL97] </ref> for more interested readers. 12 4.1 The registration protocol The registration protocol involves a user who wants to access a multimedia service and a TTP that acts as a notary. The mutual authentication of the user and the TTP must be achieved by the protocol.
Reference: [GQ88] <author> L. Guillou, J.-J. </author> <title> Quisquater : "A Practical Zero-knowledge Protocol Fitted to Security Microprocessor Minimizing both Transmission and Memory", </title> <booktitle> Proceedings of Eurocrypt 88, </booktitle> <publisher> Springer-Verlag Eds, </publisher> <pages> pp. 123-128, </pages> <year> 1988. </year>
Reference-contexts: The TTP must also receive the good user's public-key during the procotol to issue a corresponding public-key certificate needed for the subcription phase. The authentication of the user by the TTP uses the Guillou-Quisquater (GQ) zero-knowledge identification scheme <ref> [GQ88] </ref>. Before registering, the user has received secret personal credentials derived from its real-life identity. These credentials will help him to prove who he is to the TTP but without revealing them. <p> This is because the two new signatures in messages 2 and 3 allow the certification of the user's public key. This simplified GQ is in fact the original one <ref> [GQ88] </ref>. Property P6 is satisfied with this version. There is no possible USER_REG_FAILED event. All the intruder's actions are detected by the various checks involved in the cryptographic operations. Nevertheless, it was not possible to suppress all the TTP_REG_FAILED events. Property P7 is thus not satisfied.
Reference: [GBM96] <author> J. Guimaraes, J.-M. Boucqueau and B. Macq : "OKAPI: </author> <title> a Kernel for Access Control to Multimedia Services based on Trusted Third Parties", </title> <booktitle> Proceedings of ECMAST 96, </booktitle> <pages> pp. 783-798, </pages> <address> Louvain-la-Neuve, Belgium, </address> <month> May </month> <year> 1996. </year>
Reference-contexts: We have chosen the registration part of the Equicrypt protocol, a conditional access protocol under design in the European ACTS OKAPI project <ref> [GBM96] </ref>. It allows a user to subscribe to multimedia services such as video on demand. The user must first register with a Trusted Third Party (TTP) using a challenge-response exchange.
Reference: [Hoa85] <author> C.A.R. </author> <title> Hoare : "Communicating Sequential Processes", </title> <booktitle> Prentice-Hall International, </booktitle> <year> 1985. </year>
Reference-contexts: Recent results prove the contrary, this approach can in fact be very efficient to achieve a real computer aided design of security protocols. To our knowledge, its first application to the verification of security protocols was achieved in [Low96] where the Needham-Schroeder protocol [Sch96] was specified in CSP <ref> [Hoa85] </ref> and model-checked by the FDR tool. Independently of this work, we specified the Equicrypt protocol 1 Ma^tre de recherches (Senior Research Associate) F.N.R.S. (National Fund for Scientific Research, Belgium) 1 [LBQ96] in LOTOS and used the Eucalyptus toolbox [Gar96] to verify it [LBK96][GL97]. <p> It is made up of two components : * A process algebra, moslty inspired by CCS [Mil89] and CSP <ref> [Hoa85] </ref>, with a structured operational semantics. It describes the behaviour of processes and their interactions. LO-TOS has a rich set of operators (multiway synchronization and abstraction like in CSP, disabling, ...), and an explicit internal action like in CCS. * An abstract datatype language.
Reference: [ISO89] <author> ISO/IEC. </author> <title> Information Processing Systems Open Systems Interconnection : "LO-TOS, a Formal Description Technique Based on the Temporal Ordering of Observational Behaviour", IS 8807, </title> <month> February </month> <year> 1989. </year>
Reference: [LBQ96] <author> S. Lacroix, J.-M. Boucqueau, J.-J. Quiquater and B. </author> <title> Macq : "Providing Equitable Conditional Access by Use of Trusted Third Parties", </title> <booktitle> Proceedings of ECMAST 96, </booktitle> <pages> pp. 763-782, </pages> <address> Louvain-la-Neuve, Belgium, </address> <month> May </month> <year> 1996. </year>
Reference-contexts: Independently of this work, we specified the Equicrypt protocol 1 Ma^tre de recherches (Senior Research Associate) F.N.R.S. (National Fund for Scientific Research, Belgium) 1 <ref> [LBQ96] </ref> in LOTOS and used the Eucalyptus toolbox [Gar96] to verify it [LBK96][GL97]. The present paper will focus on the method we used to model and verify a security protocol using LOTOS. The paper is organized as follow. <p> The user has also received the TTP's public-key to perform the required checks on the messages and to authenticate the TTP. The transmission of the user's public-key to the TTP is possible with an improved version of the GQ algorithm <ref> [LBQ96] </ref>. The registration protocol presented in this paper is, in fact, an enhanced version of the original one found in [LBQ96]. The GQ identification scheme is based on complex mathematical relations derived from the user's identity, the user's public-key and the secret credentials. <p> The transmission of the user's public-key to the TTP is possible with an improved version of the GQ algorithm <ref> [LBQ96] </ref>. The registration protocol presented in this paper is, in fact, an enhanced version of the original one found in [LBQ96]. The GQ identification scheme is based on complex mathematical relations derived from the user's identity, the user's public-key and the secret credentials.
Reference: [LBK96] <author> G. Leduc, O. Bonaventure, E. Koerner, L. Leonard, C. Pecheur, D. </author> <title> Zanetti : "Specification and Verification of a TTP Protocol for the Conditional Access to Services.", </title> <booktitle> Proceedings of 12th J. Cartier Workshop on Formal Methods and their Applications : Telecommunications, VLSI and Real-Time Computerized Control System, </booktitle> <address> Montreal, Canada, </address> <month> October </month> <year> 1996. </year>
Reference: [Low96] <author> G. </author> <title> Lowe : "Breaking and Fixing the Needham-Schroeder Public-Key Authentication Protocol using FDR", </title> <editor> T. Margaria and B. Steffen Eds, </editor> <title> Tools and Algorithms for the Construction and Analysis of Systems, </title> <publisher> LNCS 1055, Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: Recent results prove the contrary, this approach can in fact be very efficient to achieve a real computer aided design of security protocols. To our knowledge, its first application to the verification of security protocols was achieved in <ref> [Low96] </ref> where the Needham-Schroeder protocol [Sch96] was specified in CSP [Hoa85] and model-checked by the FDR tool. <p> We do not prove formally the correctness of our abstract finite model with respect to these assumptions. It would be interesting to consider such proof on the case studies we derive from this method. Some work in this direction is proposed in <ref> [Low96] </ref> where the verification with a limited number of principals is generalized or in [Bol97] where an abstraction function automates the computation of a correct abstract model. The main difficulty comes from the complexity of the protocols we want to verify.
Reference: [Mea92] <author> C. </author> <title> Meadows : "Applying Formal Methods to the Analysis of a Key Management Protocol", </title> <journal> Journal of Computer Security, </journal> <year> 1992. </year>
Reference: [Mil89] <author> R. </author> <title> Milner : "Communication and Concurrency", </title> <booktitle> Prentice-Hall International, </booktitle> <year> 1989. </year>
Reference-contexts: It is made up of two components : * A process algebra, moslty inspired by CCS <ref> [Mil89] </ref> and CSP [Hoa85], with a structured operational semantics. It describes the behaviour of processes and their interactions. LO-TOS has a rich set of operators (multiway synchronization and abstraction like in CSP, disabling, ...), and an explicit internal action like in CCS. * An abstract datatype language.
Reference: [Pec96] <author> C. </author> <title> Pecheur : "Improving the Specification of Data Types in LOTOS", </title> <type> Doctoral dissertation, </type> <institution> University of Liege, </institution> <month> November </month> <year> 1996. </year>
Reference-contexts: This application is quite common and will not be developed further in this paper. Definition of abstract data types can rapidly become very cumbersome to design. Thus our specification are written using data type language extensions, as offered by the APERO tool <ref> [Pec96] </ref> included in the Eucalyptus toolbox. The original text has to be preprocessed by the APERO translator to get a valid LOTOS specification. This provides for a smaller and more readable specification and for some level of immunity w.r.t. underlying processing tools.
Reference: [Sch96] <author> B. </author> <title> Schneier : "Applied Cryptography", Second Edition, </title> <publisher> John Wiley & Sons Eds, </publisher> <year> 1996. </year> <month> 22 </month>
Reference-contexts: Recent results prove the contrary, this approach can in fact be very efficient to achieve a real computer aided design of security protocols. To our knowledge, its first application to the verification of security protocols was achieved in [Low96] where the Needham-Schroeder protocol <ref> [Sch96] </ref> was specified in CSP [Hoa85] and model-checked by the FDR tool. Independently of this work, we specified the Equicrypt protocol 1 Ma^tre de recherches (Senior Research Associate) F.N.R.S. (National Fund for Scientific Research, Belgium) 1 [LBQ96] in LOTOS and used the Eucalyptus toolbox [Gar96] to verify it [LBK96][GL97]. <p> Specific operations are defined on the values of each sort and the semantics of these operations is provided by specific equations. This structure allows for a great flexibility in the handling of data in LOTOS. A lot of mechanisms exist in modern cryptography <ref> [Sch96] </ref>, but only a few of them are actually used in security protocols. We do not intend to make an exhaustive translation of cryptographic operations in ACT ONE. We just want to show the level of abstraction provided by LOTOS and the relative simplicity in the definition.
References-found: 21

