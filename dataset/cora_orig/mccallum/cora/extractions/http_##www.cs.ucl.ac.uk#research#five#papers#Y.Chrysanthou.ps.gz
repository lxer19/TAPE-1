URL: http://www.cs.ucl.ac.uk/research/five/papers/Y.Chrysanthou.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/research/five/
Root-URL: http://www.cs.ucl.ac.uk
Email: e-mail: .chrysanthou@cs.ucl.ac.uk  
Title: A Fast and Accurate Shadow Algorithm for Dynamic Scenes  
Author: Yiorgos Chrysanthou 
Address: Gower Street, London WC1E 6BT, UK.  
Affiliation: Department of Computer Science, UCL University of London,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> B. G. Baumgart. </author> <title> Geometric modeling for computer vision. </title> <institution> AIM-249, STA -CS-74-463, CS Dept, Stanford U., </institution> <month> October </month> <year> 1974. </year>
Reference-contexts: similar to that described in [17] which appart from the geometry it also merges the attributes of the cell (ie the identifiers). adding construction edges to any penumbra edge not spanning its subspace. 3.3 Computing Illumination Intensities on the Vertices As a result of using a Winged Edge Data Structure <ref> [1] </ref>, each vertex v i holds a pointer to one of the edges of which it forms the end-point. From this edge the set of mesh cells C sharing v i can be found.
Reference: [2] <author> J. F. </author> <title> Blinn. Jim blinn's corner: Me and my (fake) shadow. </title> <journal> IEEE Computer Graphics & Applications, </journal> <volume> 8(1) </volume> <pages> 82-86, </pages> <month> January </month> <year> 1988. </year>
Reference-contexts: Very little work, however has gone into providing algorithms suitable for interaction. The dynamic shadow algorithms currently available find only shadow umbras for fake shadows <ref> [2] </ref> or point light sources [8]. Shadows from point sources can provide a lot of visual cues and greatly enhance image quality but in the real world most of the light sources have a non-zero area.
Reference: [3] <author> A. T. Campbell, III and D. S. Fussell. </author> <title> An analytic approach to illumination with area light sources. </title> <type> Technical Report R-91-25, </type> <institution> Dept. of Computer Sciences, Univ. of Texas at Austin, </institution> <month> August </month> <year> 1991. </year>
Reference-contexts: The first to compute the exact extremal boundaries were 1 Nishita and Nakamae [18], by using shadow volumes and considering all pairs of objects in the scene. More efficient methods based on Shadow Volume BSP trees were latter presented by Campbell and Fussell <ref> [3] </ref> and Chin and Feiner [4]. As correctly noted by Campbell and Fussell [3] the illumination function has maxima, minima and discontinuities within the penumbra regions. They used sampling to locate them. These discontinuities occur along curves in the penumbra where the visible part of the source changes qualitatively [12]. <p> More efficient methods based on Shadow Volume BSP trees were latter presented by Campbell and Fussell <ref> [3] </ref> and Chin and Feiner [4]. As correctly noted by Campbell and Fussell [3] the illumination function has maxima, minima and discontinuities within the penumbra regions. They used sampling to locate them. These discontinuities occur along curves in the penumbra where the visible part of the source changes qualitatively [12].
Reference: [4] <author> N. Chin and S. Feiner. </author> <title> Fast object-precision shadow generation for area light sources using BSP trees. </title> <booktitle> In ACM Computer Graphics (Symp. on Interactive 3D Graphics), </booktitle> <pages> pages 21-30, </pages> <year> 1992. </year>
Reference-contexts: The first to compute the exact extremal boundaries were 1 Nishita and Nakamae [18], by using shadow volumes and considering all pairs of objects in the scene. More efficient methods based on Shadow Volume BSP trees were latter presented by Campbell and Fussell [3] and Chin and Feiner <ref> [4] </ref>. As correctly noted by Campbell and Fussell [3] the illumination function has maxima, minima and discontinuities within the penumbra regions. They used sampling to locate them. These discontinuities occur along curves in the penumbra where the visible part of the source changes qualitatively [12].
Reference: [5] <author> Y. Chrysanthou. </author> <title> Pre-computed visibility ordering for a constrained viewpoint. </title> <type> Technical Report TR-713, </type> <institution> CS Dept, Queen Mary and Westfield College, University of London, </institution> <month> December </month> <year> 1995. </year>
Reference-contexts: First the polygons are ordered front-to-back as seen from the light source by means of an augmented BSP tree <ref> [5] </ref>. In this order they are "projected" onto the sides of a hemi-cube placed around the scene. Polygons whose "projections" on the cube overlap have a possible shadow relation. Shadows are cast using these relations. Finally, the vertices of the mesh are illuminated.
Reference: [6] <author> Y. Chrysanthou. </author> <title> Shadow Computation for 3D Interaction and Animation. </title> <type> PhD thesis, </type> <institution> Queen Mary and Westfield College, University of London, </institution> <month> February </month> <year> 1996. </year>
Reference-contexts: The polygons in set O covering are then used to determine the visible parts of the source, from the vertex. Some special cases may occur, see <ref> [6] </ref> for their identification and treatment. 4 Dynamic Modifications As the results presented in Section 5 indicate, the algorithm constructs the discontinuity meshing with considerable speed. However, that was not the main purpose of this research.
Reference: [7] <author> Y. Chrysanthou and M. Slater. </author> <title> Dynamic changes to scenes represented as BSP trees. </title> <journal> Computer graphics Forum, </journal> <volume> (Eurographics 92), 11(3) </volume> <pages> 321-332, </pages> <year> 1992. </year>
Reference-contexts: Most of the other researchers, including the author, have chosen to ignore EEE (and non-emitter EV) surfaces because the error produced by their exclusion is small compared to their cost. 3 Initial Construction of the Mesh The basic structure of the method resembles the point source shadow algorithm presented in <ref> [19, 7] </ref>. First the polygons are ordered front-to-back as seen from the light source by means of an augmented BSP tree [5]. In this order they are "projected" onto the sides of a hemi-cube placed around the scene. Polygons whose "projections" on the cube overlap have a possible shadow relation. <p> After each transformation the relevant vertices are illuminated. 4.1 Removing an Object To remove the polygons of an object first their entries are deleted from the tiling cube and then the polygons are removed from the BSP tree using the method described in <ref> [7] </ref>. As each polygon is 4 deleted the list of receiver polygons (those upon which it had cast a shadow during the construction of the mesh), are scanned and any shadow information on them due to the current polygon is removed.
Reference: [8] <author> Y. Chrysanthou and M. Slater. </author> <title> Shadow Volume BSP trees for fast computation of shadows in dynamic scenes. </title> <booktitle> In Proceedings of the ACM Symposium of Interactive 3D Graphics, </booktitle> <pages> pages 45-50, </pages> <address> Monterrey, California, </address> <month> March </month> <year> 1995. </year>
Reference-contexts: Very little work, however has gone into providing algorithms suitable for interaction. The dynamic shadow algorithms currently available find only shadow umbras for fake shadows [2] or point light sources <ref> [8] </ref>. Shadows from point sources can provide a lot of visual cues and greatly enhance image quality but in the real world most of the light sources have a non-zero area. To add to the realism of the images the effect of area light sources should be modelled.
Reference: [9] <author> R. L. Cook, T. Porter, and L. Carpenter. </author> <title> Distributed ray tracing. In Hank Christiansen, editor, </title> <journal> ACM Computer Graphics, </journal> <volume> volume 18, </volume> <pages> pages 137-145, </pages> <month> July </month> <year> 1984. </year>
Reference-contexts: Many shadow algorithms have been devised that adequately solve the problem, ranging from the very simple (point light sources and local illumination [10]) to the very detailed and realistic (Radiosity [13] and Ray-tracing <ref> [9] </ref>). Very little work, however has gone into providing algorithms suitable for interaction. The dynamic shadow algorithms currently available find only shadow umbras for fake shadows [2] or point light sources [8].
Reference: [10] <author> F. Crow. </author> <title> Shadow algorithms for computer graphics. </title> <journal> ACM Computer Graphics, </journal> <volume> 11(2) </volume> <pages> 242-247, </pages> <year> 1977. </year>
Reference-contexts: Many shadow algorithms have been devised that adequately solve the problem, ranging from the very simple (point light sources and local illumination <ref> [10] </ref>) to the very detailed and realistic (Radiosity [13] and Ray-tracing [9]). Very little work, however has gone into providing algorithms suitable for interaction. The dynamic shadow algorithms currently available find only shadow umbras for fake shadows [2] or point light sources [8].
Reference: [11] <author> G. Drettakis and E. Fiume. </author> <title> A fast shadow algorithm for area light sources using backprojec-tion. </title> <editor> In Andrew Glassner, editor, </editor> <booktitle> ACM Computer Graphics, </booktitle> <pages> pages 223-230, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: All of these methods accounted only for EV edges. EEE surfaces were partly treated by Teller [21], in a related computation where the visible region of a source through a sequence of portals is calculated. Complete DM algorithms were later presented by Drettakis and Fiume <ref> [11] </ref> and Stewart and Ghali [20].
Reference: [12] <author> Z. Gigus and J. Malik. </author> <title> Computing the aspect graph for the line drawings of polyhedral objects. </title> <journal> IEEE Trans. on Pattern Analysis and Machine Intelligence, </journal> <volume> 12(2) </volume> <pages> 113-133, </pages> <month> February </month> <year> 1990. </year>
Reference-contexts: As correctly noted by Campbell and Fussell [3] the illumination function has maxima, minima and discontinuities within the penumbra regions. They used sampling to locate them. These discontinuities occur along curves in the penumbra where the visible part of the source changes qualitatively <ref> [12] </ref>. These curves are located at the intersection of the critical surfaces EV and EEE. EV surfaces are planes defined by an edge and a vertex in the scene, while EEE surfaces are quadratic surfaces defined by three non-adjacent edges [12]. <p> penumbra where the visible part of the source changes qualitatively <ref> [12] </ref>. These curves are located at the intersection of the critical surfaces EV and EEE. EV surfaces are planes defined by an edge and a vertex in the scene, while EEE surfaces are quadratic surfaces defined by three non-adjacent edges [12]. The most abrupt discontinuities (value discontinuities) lie along the edges where objects touch, these are denoted by D 0 . Discontinuity Meshing was developed through the Radiosity method as a means of constructing a more accurate mesh that will include all these edges.
Reference: [13] <author> C. M. Goral, K. E. Torrance, D. P. Greenberg, and B. Battaile. </author> <title> Modeling the interaction of light between diffuse surfaces. In Hank Christiansen, editor, </title> <journal> ACM Computer Graphics, </journal> <volume> volume 18, </volume> <pages> pages 213-222, </pages> <month> July </month> <year> 1984. </year>
Reference-contexts: Many shadow algorithms have been devised that adequately solve the problem, ranging from the very simple (point light sources and local illumination [10]) to the very detailed and realistic (Radiosity <ref> [13] </ref> and Ray-tracing [9]). Very little work, however has gone into providing algorithms suitable for interaction. The dynamic shadow algorithms currently available find only shadow umbras for fake shadows [2] or point light sources [8].
Reference: [14] <author> P. Heckbert. </author> <title> Discontinuity meshing for radiosity. </title> <booktitle> Third Eurographics Workshop on Rendering, </booktitle> <pages> pages 203-226, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: The first study on DM was presented by Heckbert [15] for a 2-D domain by considering every possible interaction between the edges and vertices in the scene and was later extended to a 3-D environment <ref> [14] </ref>. Concurrently a different 3-D algorithm was proposed by Lishinski et al [16]. All of these methods accounted only for EV edges. EEE surfaces were partly treated by Teller [21], in a related computation where the visible region of a source through a sequence of portals is calculated.
Reference: [15] <author> P. Heckbert. </author> <title> Radiosity in flatland. </title> <journal> Computer graphics Forum, </journal> <volume> (Eurographics 92), 11(3) </volume> <pages> 181-192, </pages> <year> 1992. </year>
Reference-contexts: Discontinuity Meshing was developed through the Radiosity method as a means of constructing a more accurate mesh that will include all these edges. The first study on DM was presented by Heckbert <ref> [15] </ref> for a 2-D domain by considering every possible interaction between the edges and vertices in the scene and was later extended to a 3-D environment [14]. Concurrently a different 3-D algorithm was proposed by Lishinski et al [16]. All of these methods accounted only for EV edges.
Reference: [16] <author> D. Lischinski, F. Tampieri, and D. P. Greenberg. </author> <title> Discontinuity meshingfor accurate radiosity. </title> <journal> IEEE Computer Graphics & Applications, </journal> <volume> 12(6) </volume> <pages> 25-39, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: The first study on DM was presented by Heckbert [15] for a 2-D domain by considering every possible interaction between the edges and vertices in the scene and was later extended to a 3-D environment [14]. Concurrently a different 3-D algorithm was proposed by Lishinski et al <ref> [16] </ref>. All of these methods accounted only for EV edges. EEE surfaces were partly treated by Teller [21], in a related computation where the visible region of a source through a sequence of portals is calculated.
Reference: [17] <author> B. F. Naylor, J. Amandatides, and W. Thibault. </author> <title> Merging BSP trees yields polyhedral set operations. </title> <journal> ACM Computer Graphics, </journal> <volume> 24(4) </volume> <pages> 115-124, </pages> <year> 1990. </year>
Reference-contexts: This single DM-tree is then merged into the total DM-tree of R, Figure 6. The merging algorithm used is very similar to that described in <ref> [17] </ref> which appart from the geometry it also merges the attributes of the cell (ie the identifiers). adding construction edges to any penumbra edge not spanning its subspace. 3.3 Computing Illumination Intensities on the Vertices As a result of using a Winged Edge Data Structure [1], each vertex v i holds
Reference: [18] <author> T. Nishita and E. Nakamae. </author> <title> Half-tone representation of 3-D objects illuminated by area sources or polyhedron sources. </title> <booktitle> Proc. COMPSAC 83: The IEEE Computer Society's Seventh Internat. Computer Software and Applications Conf., </booktitle> <pages> pages 237-242, </pages> <month> November </month> <year> 1983. </year>
Reference-contexts: The first to compute the exact extremal boundaries were 1 Nishita and Nakamae <ref> [18] </ref>, by using shadow volumes and considering all pairs of objects in the scene. More efficient methods based on Shadow Volume BSP trees were latter presented by Campbell and Fussell [3] and Chin and Feiner [4].
Reference: [19] <author> M. Slater. </author> <title> A comparison of three shadow volume algorithms. </title> <journal> The Visual Computer, </journal> <volume> 9(1) </volume> <pages> 25-38, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: Most of the other researchers, including the author, have chosen to ignore EEE (and non-emitter EV) surfaces because the error produced by their exclusion is small compared to their cost. 3 Initial Construction of the Mesh The basic structure of the method resembles the point source shadow algorithm presented in <ref> [19, 7] </ref>. First the polygons are ordered front-to-back as seen from the light source by means of an augmented BSP tree [5]. In this order they are "projected" onto the sides of a hemi-cube placed around the scene. Polygons whose "projections" on the cube overlap have a possible shadow relation.
Reference: [20] <author> A. J. Stewart and S. Ghali. </author> <title> Fast computation of shadow boundaries using spatial coherence and backprojections. </title> <editor> In Andrew Glassner, editor, </editor> <booktitle> ACM Computer Graphics, </booktitle> <pages> pages 231-238. </pages> <publisher> ACM SIGGRAPH, </publisher> <month> July </month> <year> 1994. </year>
Reference-contexts: EEE surfaces were partly treated by Teller [21], in a related computation where the visible region of a source through a sequence of portals is calculated. Complete DM algorithms were later presented by Drettakis and Fiume [11] and Stewart and Ghali <ref> [20] </ref>.
Reference: [21] <author> S. J. Teller. </author> <title> Computing the antipenumbra of an area light source. </title> <editor> In Edwin E. Catmull, editor, </editor> <booktitle> ACM Computer Graphics, </booktitle> <volume> volume 26, </volume> <pages> pages 139-148, </pages> <month> July </month> <year> 1992. </year> <month> 7 </month>
Reference-contexts: Concurrently a different 3-D algorithm was proposed by Lishinski et al [16]. All of these methods accounted only for EV edges. EEE surfaces were partly treated by Teller <ref> [21] </ref>, in a related computation where the visible region of a source through a sequence of portals is calculated. Complete DM algorithms were later presented by Drettakis and Fiume [11] and Stewart and Ghali [20].
References-found: 21

