URL: ftp://ftp.cs.colorado.edu/users/alw/papers/tosem0196.ps
Refering-URL: http://www.cs.colorado.edu/~alw/RecentPubs.html
Root-URL: http://www.cs.colorado.edu
Title: Generating Testing and Analysis Tools with Aria  
Author: PREMKUMAR T. DEVANBU and DAVID S. ROSENBLUM ALEXANDER L. WOLF 
Keyword: General Terms: Algorithms, Design, Languages, Verification Additional Key Words and Phrases: Application generators, Aria, Genoa, program dependence graphs, program representations, Reprise, software analysis, software testing, tools  
Date: 1, January 1996, Pages 42-62.  
Note: ACM Transactions on Software Engineering and Methodology, Vol. 5, No.  
Affiliation: AT&T Research and  University of Colorado  
Abstract: Many software testing and analysis tools manipulate graph representations of programs, such as abstract syntax trees or abstract semantics graphs. Hand-crafting such tools in conventional programming languages can be difficult, error prone, and time consuming. Our approach is to use application generators targeted for the domain of graph-representation-based testing and analysis tools. Moreover, we generate the generators themselves, so that the development of tools based on different languages and/or representations can also be supported better. In this paper we report on our experiences in developing and using a system called Aria that generates testing and analysis tools based on an abstract semantics graph representation for C and C++ called Reprise. Aria itself was generated by the Genoa system. We demonstrate the utility of Aria and, thereby, the power of our approach, by showing Aria's use in the development of a number of useful testing and analysis tools. Categories and Subject Descriptors: D.1.m [Programming Techniques]: Miscellaneous---graph traversal; D.2.2 [Software Engineering]: Tools and Techniques---software libraries; tool generators; tool specification; D.2.5 [Software Engineering]: Testing and Debugging---coverage analyzers; D.2.8 [Software Engineering]: Metrics---complexity measures; D.2.m [Software Engineering]: Miscellaneous---software analysis; D.3.3 [Programming Languages]: Language Constructs and Features---control structures; data types and structures; D.3.4 [Programming Languages]: Processors---code generation; parsing; unparsing; E.1 [Data]: Data Structures--- graph representations of programs The work of A.L. Wolf was supported in part by the Air Force Material Command, Rome Laboratory, and the Advanced Research Projects Agency under contract number F30602-94-C-0253. The content of the information does not necessarily reflect the position or the policy of the U.S. Government, and no official endorsement should be inferred. Authors' addresses: P.T. Devanbu and D.S. Rosenblum, AT&T Research, Murray Hill, NJ 07974; email: fprem; dsrg@research.att.com; A.L. Wolf, Software Engineering Research Laboratory, University of Colorado, Boulder, CO 80309; email: alw@cs.colorado.edu. Permission to make digital/hard copy of all or part of this work for personal or classroom use is granted without fee provided that the copies are not made or distributed for profit or commercial advantage, the copyright notice, the title of the publication, and its date appear, and notice is given that copying is by permission of the ACM, Inc. To copy otherwise, to republish, to post on servers, or to redistribute to lists, requires prior specific permission and/or a fee. c fl1996 ACM 1049-311X/96/0100--0042 $03.50
Abstract-found: 1
Intro-found: 1
Reference: <author> BALLANCE, R., GRAHAM, S., AND VANTER, M. V. D. </author> <year> 1992. </year> <title> The Pan language-based editing system. </title> <journal> ACM Trans. Softw. Eng. Method. </journal> <volume> 1, </volume> <month> 1 (Jan.), 95--127. </month>
Reference: <author> BORRAS, P., CL EMENT, D., DESPEYROUX, T., INCERPI, J., KAHN, G., LANG, B., AND PASCUAL, V. </author> <year> 1988. </year> <title> Centaur: The system. </title> <booktitle> In SIGSOFT '88: Proceedings of the Third Symposium on Software Development Environments. ACM, </booktitle> <address> New York, 14--24. </address>
Reference: <author> CLARKE, L. AND RICHARDSON, D. </author> <year> 1981. </year> <title> Symbolic evaluation methods for program analysis. In Program Flow Analysis, </title> <editor> S. Muchnick and N. Jones, Eds. </editor> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, N.J. </address>
Reference: <author> DEVANBU, P. </author> <year> 1992. </year> <title> GENOA---A customizable, language- and front-end-independent code analyzer. </title> <booktitle> In Proceedings of the 14th International Conference on Software Engineering. IEEE Computer Society, </booktitle> <address> Washington, D.C., 307--317. </address>
Reference: <author> FERRANTE, J., OTTENSTEIN, K., AND WARREN, J. </author> <year> 1987. </year> <title> The program dependence graph and its use in optimization. </title> <journal> ACM Trans. Program. Lang. Syst. </journal> <volume> 9, </volume> <month> 3 (Oct.), 319--349. </month>
Reference: <author> GRAY, R., HEURING, V., LEVI, S., SLOANE, A., AND WAITE, W. </author> <year> 1992. </year> <title> Eli: A complete, flexible compiler construction system. </title> <journal> Commun. ACM 35, </journal> <month> 2 (Feb.), 121--131. </month>
Reference: <author> HABERMANN, N. AND NOTKIN, D. </author> <year> 1986. </year> <title> Gandalf: Software development environments. </title> <journal> IEEE Trans. Softw. Eng. </journal> <note> SE-12, 12 (Dec.), 1117--1127. </note>
Reference: <author> HARROLD, M.J., MALLOY, B., AND ROTHERMEL, G. </author> <year> 1993. </year> <title> Efficient construction of program dependence graphs. </title> <booktitle> In Proceedings of the 1993 International Symposium on Software Testing and Analysis (ISSTA). ACM, </booktitle> <address> New York, 160--170. </address>
Reference: <author> MCCABE, T. </author> <year> 1976. </year> <title> A complexity measure. </title> <journal> IEEE Trans. Softw. Eng. </journal> <volume> 2, </volume> <month> 4 (Dec.), 308--320. </month>
Reference: <author> PODGURSKI, A. AND CLARKE, L. </author> <year> 1990. </year> <title> A formal model of program dependencies and its implications for software testing, debugging, and maintenance. </title> <journal> IEEE Trans. Softw. Eng. </journal> <volume> 16, </volume> <month> 9 (Sept.), </month> <title> 965--979. REASONING SYSTEMS. 1990. REFINE 3.0 User's Guide. Reasoning Systems, </title> <publisher> Inc., </publisher> <address> Palo Alto, </address> <note> Calif.: </note> <author> REPS, T. AND TEITELBAUM, T. </author> <year> 1984. </year> <title> The synthesizer generator. </title> <booktitle> In Proceedings of the ACM SIGSOFT/SIGPLAN Software Engineering Symposium on Practical Software Development Environments. ACM, </booktitle> <address> New York, 42--48. </address>
Reference: <author> RICHARDSON, D., O'MALLEY, T., MOORE, C., AND AHA, S. </author> <year> 1992. </year> <title> Developing and integrating ProDAG in the Arcadia environment. </title> <booktitle> In SIGSOFT '92: Proceedings of the Fifth Symposium on Software Development Environments. ACM, </booktitle> <address> New York, 109--119. </address>
Reference: <author> ROSENBLUM, D. AND WOLF, A. </author> <year> 1991. </year> <title> Representing semantically analyzed C++ code with Reprise. </title> <booktitle> In Proceedings of the Third C++ Technical Conference. USENIX Assoc., </booktitle> <institution> Berkeley, Calif., 119--134. </institution> <note> Received August 1995; revised November 1995; accepted December 1995 ACM Transactions on Software Engineering and Methodology, Vol. 5, No. 1, </note> <month> January </month> <year> 1996. </year>
References-found: 12

