URL: ftp://theory.lcs.mit.edu/pub/people/oded/bgg-inc1.ps
Refering-URL: http://theory.lcs.mit.edu/~oded/bgg.html
Root-URL: 
Email: e-mail: mihir@watson.ibm.com.  e-mail: oded@wisdom.weizmann.ac.il.  e-mail: shafi@wisdom.weizmann.ac.il.  
Title: Incremental Cryptography: The Case of Hashing and Signing  
Author: M. Bellare O. Goldreich S. Goldwasser 
Address: P.O. Box 704, Yorktown Heights, NY 10598, USA.  Rehovot, Israel.  545 Technology Square, Cambridge MA 02139, USA.  
Affiliation: Laboratory, IBM T.J. Watson Research Center,  Department of Applied Mathematics and Computer Science, Weizmann Institute of Science,  Department of Applied Mathematics and Computer Science, Weizmann Institute of Science, Rehovot, Is-rael, and MIT Laboratory for Computer Science,  
Date: December 10, 1995  
Note: Appears in Advances in Cryptology Crypto 94 Proceedings, Lecture Notes in Computer Science Vol. 839, Springer-Verlag, Y. Desmedt, ed., 1994.  Advanced Networking  Research was partially supported by grant No. 92-00226 from the US-Israel Binational Science Foundation (BSF), Jerusalem, Israel.  Research was partially supported by NSF FAW grant CCR-9023313 and DARPA grant N00014-92-J-1799.  
Abstract: We initiate the investigation of a new kind of efficiency for cryptographic transformations. The idea is that having once applied the transformation to some document M , the time to update the result upon modification of M should be "proportional" to the "amount of modification" done to M . Thereby one obtains much faster cryptographic primitives for environments where closely related documents are undergoing the same cryptographic transformations. We provide some basic definitions enabling treatment of the new notion. We then exemplify our approach by suggesting incremental schemes for hashing and signing which are efficient according to our new measure. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Bellare, J. Kilian and P. Rogaway. </author> <title> The security of cipher block chaining. </title> <booktitle> Advances in Cryptology - Crypto 94 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 839, </volume> <publisher> Springer-Verlag, </publisher> <editor> Y. Desmedt, ed., </editor> <year> 1994. </year>
Reference-contexts: First, we focus on just one update operation on the underlying message, namely the replacement of one block by another. Second, we limit the primitives we consider to digital signatures and the collision-free hashing primitive via which we approach it. We view a message M = M <ref> [1] </ref> : : :M [n] as a sequence of b-bit blocks. Let M hj; mi denote M with M [j] replaced by the b-bit string m. <p> Although the majority of theoretical works only make asymptotic statements, the exact tradeoffs can be derived from the proofs. (However these tradeoffs are sometimes quite bad). Moreover several previous works explicitly address exact security with concern for tradeoff quality, eg. <ref> [12, 14, 17, 11, 1] </ref>. 5 2 Preliminaries We follow the notation for algorithms and probabilistic experiments that originates in [13] and refer the reader there for a detailed exposition. <p> The value of the hash function H = (p ; g 1 : : : g n ) on a given message M = M <ref> [1] </ref> : : :M [n] 2 B n k is given by H (M [1] : : :M [n]) = HEval (H; M [1] : : :M [n]) = Q n hM [i]i the operations being of course in the group G p . <p> The value of the hash function H = (p ; g 1 : : : g n ) on a given message M = M <ref> [1] </ref> : : :M [n] 2 B n k is given by H (M [1] : : :M [n]) = HEval (H; M [1] : : :M [n]) = Q n hM [i]i the operations being of course in the group G p . <p> The value of the hash function H = (p ; g 1 : : : g n ) on a given message M = M <ref> [1] </ref> : : :M [n] 2 B n k is given by H (M [1] : : :M [n]) = HEval (H; M [1] : : :M [n]) = Q n hM [i]i the operations being of course in the group G p . The interest of [7] in this family seemed to stem from its efficiency as compared, for example, to that of the (discrete log based) hash family of [9].
Reference: [2] <author> M. Bellare and P. Rogaway. </author> <title> Random oracles are practical: A paradigm for designing efficient protocols. </title> <booktitle> Proceedings of the First Annual Conference on Computer and Communications Security, ACM, </booktitle> <year> 1993. </year>
Reference-contexts: Extending our proof of security to this setting is not difficult and we can conclude (the following statement is informal) that the scheme just described satisfies Theorem 3.4 in the random oracle model. As discussed by <ref> [2] </ref>, although this approach (namely prove security in a random oracle model and then instantiate the random oracle with a standard hash function) does not yield provable security, it provides a better guarantee than purely heuristic design, and protocols designed in this manner seem to be secure in practice.
Reference: [3] <author> M. Bellare, O. Goldreich and S. Goldwasser. </author> <title> Work in progress. </title>
Reference-contexts: We leave as an open problem to design an incremental signature scheme secure against substitution attack, under the restrictions that the signature be short and the update algorithm be ideal. Some progress towards this question is described below. 15 5 Work in progress In <ref> [3] </ref> we expand the scope of this research in the following directions. First, we consider more complex update operations on messages such as insertion (of a new block into the message) or deletion (of an existing block). These are clearly important in applications.
Reference: [4] <author> J. Bos and M. Coster. </author> <title> Addition chain heuristics. </title> <booktitle> Advances in Cryptology - Crypto 89 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 435, </volume> <publisher> Springer-Verlag, </publisher> <editor> G. Brassard, ed., </editor> <year> 1989. </year>
Reference-contexts: A computation yields a reasonable value. Note there are heuristics (based on vector-chain addition) to compute Q n hM [i]i i faster than doing n modular exponentiations <ref> [4] </ref>. 3.4.5 A practical version with small description size The size of (the description of) the hash function in the above is O (nk) so that it depends on the message size, which we assume large. In practice this is too much.
Reference: [5] <author> S. Brands. </author> <title> An efficient off-line electronic cash system based on the representation problem. </title> <type> CWI Technical Report CS-R9323. </type>
Reference-contexts: The special case of this hash function in which the number of blocks n is a constant was presented and analyzed by Chaum, Heijst and Pfitzmann [7]. Brands <ref> [5] </ref> provided a proof of security for n = poly (k). The observation that this hash function possesses an (ideal) update algorithm identifies for the first time a crucial use for it: we know no other collision-free hashing scheme that is ideally incremental. <p> The interest of [7] in this family seemed to stem from its efficiency as compared, for example, to that of the (discrete log based) hash family of [9]. Brands <ref> [5] </ref> mentions the family in the context of a general exposition of the "representation" problem. The (seemingly rare) incremental property that we next observe it possesses seems for the first time to pinpoint a crucial use of this family, and in some sense answers a question of [5] who asked for <p> Brands <ref> [5] </ref> mentions the family in the context of a general exposition of the "representation" problem. The (seemingly rare) incremental property that we next observe it possesses seems for the first time to pinpoint a crucial use of this family, and in some sense answers a question of [5] who asked for interesting uses of the representation problem when n was more than a constant. <p> Now suppose A succeeds in (t; *)-breaking H + (k; k; n). The question we consider is for what values of t 0 ; * 0 the constructed algorithm B succeeds in (t 0 ; * 0 )- breaking G (k). Previous works <ref> [7, 5] </ref> have only discussed asymptotic security, where one sets n = n (k) to some fixed polynomial in k, regards t; *; t 0 ; * 0 as functions of k, assumes t; * are polynomial and non-negligible, respectively, and then shows that t 0 ; * 0 are also <p> The proof of [7] only applies to the case of n = O (1) block messages, and in fact t 0 seems to grow exponentially with n, so that this reduction is not suitable for our purposes. Brands <ref> [5] </ref> proposes a reduction which removes the restriction on n and achieves t 0 = t + O (nk 3 ) and * 0 = *=n.
Reference: [6] <author> D. Chaum and H. Van Antwerpen. </author> <title> Undeniable signatures. </title> <booktitle> Advances in Cryptology - Crypto 89 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 435, </volume> <publisher> Springer-Verlag, </publisher> <editor> G. Brassard, ed., </editor> <year> 1989. </year>
Reference-contexts: Such groups have been used for cryptography by Croft and Harris [8], Schnorr [17], Chaum and Van Antwerpen <ref> [6] </ref>, and others, and we refer the reader to these works for how to choose such groups.
Reference: [7] <author> D. Chaum, E. Heijst and B. Pfitzmann. </author> <title> Cryptographically strong undeniable signatures, unconditionally secure for the signer. </title> <booktitle> Advances in Cryptology - Crypto 91 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 576, </volume> <publisher> Springer-Verlag, </publisher> <editor> J. Feigenbaum, ed., </editor> <year> 1991. </year>
Reference-contexts: The special case of this hash function in which the number of blocks n is a constant was presented and analyzed by Chaum, Heijst and Pfitzmann <ref> [7] </ref>. Brands [5] provided a proof of security for n = poly (k). The observation that this hash function possesses an (ideal) update algorithm identifies for the first time a crucial use for it: we know no other collision-free hashing scheme that is ideally incremental. <p> The interest of <ref> [7] </ref> in this family seemed to stem from its efficiency as compared, for example, to that of the (discrete log based) hash family of [9]. Brands [5] mentions the family in the context of a general exposition of the "representation" problem. <p> Now suppose A succeeds in (t; *)-breaking H + (k; k; n). The question we consider is for what values of t 0 ; * 0 the constructed algorithm B succeeds in (t 0 ; * 0 )- breaking G (k). Previous works <ref> [7, 5] </ref> have only discussed asymptotic security, where one sets n = n (k) to some fixed polynomial in k, regards t; *; t 0 ; * 0 as functions of k, assumes t; * are polynomial and non-negligible, respectively, and then shows that t 0 ; * 0 are also <p> Thus we want the effort and success of B should be as close to those of A as possible. In this light let's look at the existing reductions to see what they achieve. The proof of <ref> [7] </ref> only applies to the case of n = O (1) block messages, and in fact t 0 seems to grow exponentially with n, so that this reduction is not suitable for our purposes.
Reference: [8] <author> Croft and Harris. </author> <title> Public key cryptography and re-usable shared secrets. In Cryptography and Coding, </title> <publisher> Clarendon Press, </publisher> <year> 1989. </year>
Reference-contexts: Such groups have been used for cryptography by Croft and Harris <ref> [8] </ref>, Schnorr [17], Chaum and Van Antwerpen [6], and others, and we refer the reader to these works for how to choose such groups.
Reference: [9] <author> I. Damg -ard. </author> <title> Collision free hash functions and public key signature schemes. </title> <booktitle> Advances in Cryptology - Eurocrypt 87 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 304, </volume> <publisher> Springer-Verlag, </publisher> <editor> D. Chaum, ed., </editor> <year> 1987. </year>
Reference-contexts: The interest of [7] in this family seemed to stem from its efficiency as compared, for example, to that of the (discrete log based) hash family of <ref> [9] </ref>. Brands [5] mentions the family in the context of a general exposition of the "representation" problem.
Reference: [10] <author> T. El Gamal. </author> <title> A public key cryptosystem and a signature scheme based on discrete logarithms. </title> <journal> IEEE Trans. Info. Theory, </journal> <volume> Vol. IT 31, </volume> <year> 1985. </year> <month> 16 </month>
Reference-contexts: This construction however is not too practical because of the use of the result of [15]. For a practical version we could use El Gamal's scheme <ref> [10] </ref> or RSA in the role of S fl and the practical version of our hash function (cf. Section 3.4.5) in the role of H. The public file is large because the hash function has poly (n; k) size. But it isn't necessary that each user publish a hash function.
Reference: [11] <author> S. Even, O. Goldreich and S. Micali. </author> <title> On-line/Off line digital signatures. </title> <type> Manuscript. </type> <note> Preliminary version in Crypto 89. </note>
Reference-contexts: Although the majority of theoretical works only make asymptotic statements, the exact tradeoffs can be derived from the proofs. (However these tradeoffs are sometimes quite bad). Moreover several previous works explicitly address exact security with concern for tradeoff quality, eg. <ref> [12, 14, 17, 11, 1] </ref>. 5 2 Preliminaries We follow the notation for algorithms and probabilistic experiments that originates in [13] and refer the reader there for a detailed exposition.
Reference: [12] <author> O. Goldreich and L. Levin. </author> <title> A hard predicate for all one-way functions. </title> <booktitle> Proceedings of the Twenty First Annual Symposium on the Theory of Computing, ACM, </booktitle> <year> 1989. </year>
Reference-contexts: Although the majority of theoretical works only make asymptotic statements, the exact tradeoffs can be derived from the proofs. (However these tradeoffs are sometimes quite bad). Moreover several previous works explicitly address exact security with concern for tradeoff quality, eg. <ref> [12, 14, 17, 11, 1] </ref>. 5 2 Preliminaries We follow the notation for algorithms and probabilistic experiments that originates in [13] and refer the reader there for a detailed exposition.
Reference: [13] <author> S. Goldwasser, S. Micali and R. Rivest. </author> <title> A digital signature scheme secure against adaptive chosen-message attacks. </title> <journal> SIAM Journal of Computing, </journal> <volume> 17(2) </volume> <pages> 281-308, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: When evaluating the security of this scheme (or any other) scheme one must be careful: the presence of the update algorithm entails new security considerations. In keeping with the philosophy of an adaptive chosen message attack <ref> [13] </ref>, we must allow the adversary to obtain examples of signatures under the update algorithm. In general these could be differently distributed from signatures created by the signing algorithm, and the extra power could help the adversary. We will show that the above scheme achieves what we call basic security. <p> Moreover several previous works explicitly address exact security with concern for tradeoff quality, eg. [12, 14, 17, 11, 1]. 5 2 Preliminaries We follow the notation for algorithms and probabilistic experiments that originates in <ref> [13] </ref> and refer the reader there for a detailed exposition. <p> probability at least *. 4.4 Incremental signature schemes achieving basic security In what follows S fl = (KGen fl fl fl ) denotes a standard (ie. not necessarily incremental) signature scheme as per Definition 4.1, assumed secure against existential forgery under adaptive chosen message attack in the standard sense of <ref> [13] </ref>.
Reference: [14] <author> R. Impagliazzo, L. Levin and M. Luby. </author> <title> Pseudo-random generation from one-way functions. </title> <booktitle> Proceedings of the Twenty First Annual Symposium on the Theory of Computing, ACM, </booktitle> <year> 1989. </year>
Reference-contexts: Although the majority of theoretical works only make asymptotic statements, the exact tradeoffs can be derived from the proofs. (However these tradeoffs are sometimes quite bad). Moreover several previous works explicitly address exact security with concern for tradeoff quality, eg. <ref> [12, 14, 17, 11, 1] </ref>. 5 2 Preliminaries We follow the notation for algorithms and probabilistic experiments that originates in [13] and refer the reader there for a detailed exposition.
Reference: [15] <author> M. Naor and M. Yung. </author> <title> Universal One-Way Hash Functions and their Cryptographic Applications. </title> <booktitle> Proceedings of the Twenty First Annual Symposium on the Theory of Computing, ACM, </booktitle> <year> 1989. </year>
Reference-contexts: The proof of Theorem 4.3 is in Appendix B. The hardness of discrete log implies, via <ref> [15] </ref>, the existence of standard (ie. non-incremental) signature schemes which can play the role of S fl in the above. <p> Combining this with the results of Section 3.4.3 we have established the existence of an incremental signature scheme with short sig natures given the hardness of the discrete log in groups of prime order. This construction however is not too practical because of the use of the result of <ref> [15] </ref>. For a practical version we could use El Gamal's scheme [10] or RSA in the role of S fl and the practical version of our hash function (cf. Section 3.4.5) in the role of H. The public file is large because the hash function has poly (n; k) size.
Reference: [16] <author> R. Rivest. </author> <title> The MD5 message-digest algorithm. IETF Network Working Group, </title> <type> RFC 1321, </type> <month> April </month> <year> 1992. </year>
Reference: [17] <author> C. Schnorr. </author> <title> Efficient identification and signatures for smart cards. </title> <booktitle> Advances in Cryptology - Crypto 89 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 435, </volume> <publisher> Springer-Verlag, </publisher> <editor> G. Brassard, ed., </editor> <year> 1989. </year>
Reference-contexts: Although the majority of theoretical works only make asymptotic statements, the exact tradeoffs can be derived from the proofs. (However these tradeoffs are sometimes quite bad). Moreover several previous works explicitly address exact security with concern for tradeoff quality, eg. <ref> [12, 14, 17, 11, 1] </ref>. 5 2 Preliminaries We follow the notation for algorithms and probabilistic experiments that originates in [13] and refer the reader there for a detailed exposition. <p> Such groups have been used for cryptography by Croft and Harris [8], Schnorr <ref> [17] </ref>, Chaum and Van Antwerpen [6], and others, and we refer the reader to these works for how to choose such groups.
References-found: 17

