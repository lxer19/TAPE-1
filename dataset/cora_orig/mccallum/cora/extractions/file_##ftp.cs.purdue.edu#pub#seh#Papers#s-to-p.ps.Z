URL: file://ftp.cs.purdue.edu/pub/seh/Papers/s-to-p.ps.Z
Refering-URL: http://www.cs.purdue.edu/people/seh/
Root-URL: http://www.cs.purdue.edu
Email: seh@cs.purdue.edu  ashfaq@eecis.udel.edu  yliu@hns.com  
Title: Scalable S-to-P Broadcasting on Message-Passing MPPs  
Author: Susanne E. Hambrusch Ashfaq A. Khokhar Yi Liu 
Keyword: Key Words: Broadcasting, communication operations, message-passing MPPs, scalability.  
Date: June 30, 1997  
Address: West Lafayette, IN 47907, USA  19716, USA  
Affiliation: Department of Computer Sciences Purdue University  Department of Electrical Engineering and Department of Computer and Information Sciences University of Delaware Newark, DE  Software Technology Group Hughes Network Systems  
Abstract: In s-to-p broadcasting, s processors in a p-processor machine contain a message to be broadcast to all the processors in the machine, 1 s p. We present a number of different broadcasting algorithms that handle all ranges of s. We show how the performance of each algorithm is influenced by the distribution of the s source processors and by the relationships between the distribution and the characteristics of the interconnection network. For the Intel Paragon we show that for each algorithm and machine dimension there exist ideal distributions and distributions on which the performance degrades. For the Cray T3D we also demonstrate dependencies between distributions and machine sizes. To reduce the dependence of the performance on the distribution of sources we propose a repositioning approach. In this approach the initial distribution is turned into an ideal distribution of the target broadcasting algorithm. We report experimental results for the Intel Paragon and Cray T3D and discuss scalability and performance. fl Research supported in part by ARPA under contract DABT63-92-C-0022ONR. The views and conclusions contained in this paper are those of the authors and should not be interpreted as representing official policies, expressed or implied, of the U.S. government. A preliminary version of this paper appeared in the 25-th International Conference on Parallel Processing, August 1996. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> V. Bala, J. Bruck, R. Cypher, P. Elustondo, A. Ho, C.-T. Ho, S. Kipnis, and M. Snir, </author> <title> "CCL: A Portable and Tunable Collective Communication Library for Scalable Parallel Computers," </title> <booktitle> Proc. 8-th IPPS, </booktitle> <pages> pp. 835-844, </pages> <year> 1994. </year> <month> 22 </month>
Reference-contexts: 1 Introduction The broadcasting of messages is a basic communication operation on message-passing massively parallel processors (MPPs). Two variants of the broadcasting operation, the 1-to-all and all-to-all broadcast, have been studied extensively and are generally included in communication libraries and interfaces <ref> [1, 2, 6, 7, 11, 16] </ref>. In a 1-to-all broadcast, one processor broadcasts a message to every other processor. Various implementations of this operation for architectures with different machine characteristics have been proposed [4, 10, 14, 15, 17]. <p> In Section 5 we discuss performance and scalability of the proposed algorithms on the Intel Paragon and Cray T3D. Section 7 concludes. 2 Algorithms without Repositioning A common approach for implementing communication operations is to make use of operations available in communication libraries and interfaces <ref> [1, 2, 6, 7] </ref>. S-to-p broadcasting can be implemented using such operations and we describe two solutions. The first one, Algorithm 2-Step implements s-to-p broadcasting by invoking an s-to-one gather operation followed by a 1-to-p broadcast.
Reference: [2] <author> M. Barnett, S. Gupta, D. G. Payne, L. Shuler, R. van de Geijn, and J. Watts, </author> <title> "Interpro--cessor Collective Communication Library," </title> <booktitle> Proc. Scalable High-Performance Computing Conference, </booktitle> <pages> pp. 357-364, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction The broadcasting of messages is a basic communication operation on message-passing massively parallel processors (MPPs). Two variants of the broadcasting operation, the 1-to-all and all-to-all broadcast, have been studied extensively and are generally included in communication libraries and interfaces <ref> [1, 2, 6, 7, 11, 16] </ref>. In a 1-to-all broadcast, one processor broadcasts a message to every other processor. Various implementations of this operation for architectures with different machine characteristics have been proposed [4, 10, 14, 15, 17]. <p> In Section 5 we discuss performance and scalability of the proposed algorithms on the Intel Paragon and Cray T3D. Section 7 concludes. 2 Algorithms without Repositioning A common approach for implementing communication operations is to make use of operations available in communication libraries and interfaces <ref> [1, 2, 6, 7] </ref>. S-to-p broadcasting can be implemented using such operations and we describe two solutions. The first one, Algorithm 2-Step implements s-to-p broadcasting by invoking an s-to-one gather operation followed by a 1-to-p broadcast.
Reference: [3] <author> S.H. Bokhari, </author> <title> "Multiphase Complete Exchange on a Circuit Switched Hypercube," </title> <booktitle> Proc. ICPP, </booktitle> <pages> pp. 525-529, </pages> <year> 1991. </year>
Reference-contexts: In a 1-to-all broadcast, one processor broadcasts a message to every other processor. Various implementations of this operation for architectures with different machine characteristics have been proposed [4, 10, 14, 15, 17]. In an all-to-all broadcast, every processor broadcasts a message to every other processor <ref> [3, 8, 9, 12, 18] </ref>. Let p be the machine size. Assume that s of the p processors contain a message to be broadcast to every other processor, 1 s p. In this paper we present broadcasting algorithms that handle all ranges of s.
Reference: [4] <author> J. Bruck, L. de Coster, N. Dewulf, C.-T. Ho, and R. Lauwereins, </author> <title> "On the Design and Implementation of Broadcast and Global Combine Operations Using the Postal Model," </title> <booktitle> Proc. Intl. Symp. on Parallel and Dist. Processing, </booktitle> <pages> pp. 594-602, </pages> <year> 1994. </year>
Reference-contexts: In a 1-to-all broadcast, one processor broadcasts a message to every other processor. Various implementations of this operation for architectures with different machine characteristics have been proposed <ref> [4, 10, 14, 15, 17] </ref>. In an all-to-all broadcast, every processor broadcasts a message to every other processor [3, 8, 9, 12, 18]. Let p be the machine size. Assume that s of the p processors contain a message to be broadcast to every other processor, 1 s p.
Reference: [5] <author> T. Cormen, C. Leiserson, R. Rivest, </author> <title> Introduction to Algorithms, </title> <publisher> McGraw-Hill, </publisher> <year> 1990. </year>
Reference-contexts: The approach used in the algorithms described below is to have each processor initiate a broadcast, but whenever messages from different sources meet at a processor, messages are combined. Thus the broadcast in subsequent steps proceeds with larger messages. We use a Binomial heap broadcasting tree <ref> [5, 10] </ref> to guide the broadcasts. In Algorithm Br Lin, we view the processors as forming a linear array. When the underlying architecture is a mesh, the indexing may correspond to a snake-like row-major indexing.
Reference: [6] <author> J.J. Dongarra, R. Hempe, A.J.G. Hey, D.W. Walker, </author> <title> A Proposal for a User-level, Message Passing Interface in a Distributed Memory Environment, </title> <type> Technical Report, TM 12231, </type> <institution> Oak Rigde Laboratory, </institution> <year> 1993. </year>
Reference-contexts: 1 Introduction The broadcasting of messages is a basic communication operation on message-passing massively parallel processors (MPPs). Two variants of the broadcasting operation, the 1-to-all and all-to-all broadcast, have been studied extensively and are generally included in communication libraries and interfaces <ref> [1, 2, 6, 7, 11, 16] </ref>. In a 1-to-all broadcast, one processor broadcasts a message to every other processor. Various implementations of this operation for architectures with different machine characteristics have been proposed [4, 10, 14, 15, 17]. <p> In Section 5 we discuss performance and scalability of the proposed algorithms on the Intel Paragon and Cray T3D. Section 7 concludes. 2 Algorithms without Repositioning A common approach for implementing communication operations is to make use of operations available in communication libraries and interfaces <ref> [1, 2, 6, 7] </ref>. S-to-p broadcasting can be implemented using such operations and we describe two solutions. The first one, Algorithm 2-Step implements s-to-p broadcasting by invoking an s-to-one gather operation followed by a 1-to-p broadcast.
Reference: [7] <author> W. Gropp, E. Lusk, </author> <title> The MPI Communication Library: Its Design and a Portable Implementation, </title> <booktitle> Proceedings of Scalable Parallel Libraries Conference, </booktitle> <pages> pp 160-165, </pages> <year> 1993. </year>
Reference-contexts: 1 Introduction The broadcasting of messages is a basic communication operation on message-passing massively parallel processors (MPPs). Two variants of the broadcasting operation, the 1-to-all and all-to-all broadcast, have been studied extensively and are generally included in communication libraries and interfaces <ref> [1, 2, 6, 7, 11, 16] </ref>. In a 1-to-all broadcast, one processor broadcasts a message to every other processor. Various implementations of this operation for architectures with different machine characteristics have been proposed [4, 10, 14, 15, 17]. <p> In Section 5 we discuss performance and scalability of the proposed algorithms on the Intel Paragon and Cray T3D. Section 7 concludes. 2 Algorithms without Repositioning A common approach for implementing communication operations is to make use of operations available in communication libraries and interfaces <ref> [1, 2, 6, 7] </ref>. S-to-p broadcasting can be implemented using such operations and we describe two solutions. The first one, Algorithm 2-Step implements s-to-p broadcasting by invoking an s-to-one gather operation followed by a 1-to-p broadcast.
Reference: [8] <author> S. E. Hambrusch and F. Hameed and A. A. Khokhar, </author> <title> "Communication Operations on Coarse-Grained Mesh Architectures," </title> <journal> Parallel Computing, </journal> <volume> Vol. 21, </volume> <pages> pp. 731-751, </pages> <year> 1995. </year>
Reference-contexts: In a 1-to-all broadcast, one processor broadcasts a message to every other processor. Various implementations of this operation for architectures with different machine characteristics have been proposed [4, 10, 14, 15, 17]. In an all-to-all broadcast, every processor broadcasts a message to every other processor <ref> [3, 8, 9, 12, 18] </ref>. Let p be the machine size. Assume that s of the p processors contain a message to be broadcast to every other processor, 1 s p. In this paper we present broadcasting algorithms that handle all ranges of s. <p> We show that these parameters have a significant impact on the performance. The communication operations invoked in Algorithms Xor and 2-Step use the implementations described in <ref> [8] </ref>. In particular, the all-to-all personalized exchange used in Algorithm Xor views the exchanges as consisting of p permutations and it uses the exclusive-or on processor indices to generate the permutations.
Reference: [9] <author> S. Hinrich, C. Kosak, D. O'Halloron, T. Stricker, R. </author> <title> Take, "An Architecture for Optimal All-to-All Personalized Communication," </title> <booktitle> Proc. of 6-th ACM SPAA, </booktitle> <pages> pp. 310-319, </pages> <year> 1994. </year>
Reference-contexts: In a 1-to-all broadcast, one processor broadcasts a message to every other processor. Various implementations of this operation for architectures with different machine characteristics have been proposed [4, 10, 14, 15, 17]. In an all-to-all broadcast, every processor broadcasts a message to every other processor <ref> [3, 8, 9, 12, 18] </ref>. Let p be the machine size. Assume that s of the p processors contain a message to be broadcast to every other processor, 1 s p. In this paper we present broadcasting algorithms that handle all ranges of s.
Reference: [10] <author> R. Karp, A. Sahay, E. Santos, K. Schauser, </author> <title> "Optimal Broadcast and Summation in the LogP Model," </title> <booktitle> Proc. of 5-th ACM SPAA, </booktitle> <pages> pp. 142-153, </pages> <year> 1993. </year>
Reference-contexts: In a 1-to-all broadcast, one processor broadcasts a message to every other processor. Various implementations of this operation for architectures with different machine characteristics have been proposed <ref> [4, 10, 14, 15, 17] </ref>. In an all-to-all broadcast, every processor broadcasts a message to every other processor [3, 8, 9, 12, 18]. Let p be the machine size. Assume that s of the p processors contain a message to be broadcast to every other processor, 1 s p. <p> The approach used in the algorithms described below is to have each processor initiate a broadcast, but whenever messages from different sources meet at a processor, messages are combined. Thus the broadcast in subsequent steps proceeds with larger messages. We use a Binomial heap broadcasting tree <ref> [5, 10] </ref> to guide the broadcasts. In Algorithm Br Lin, we view the processors as forming a linear array. When the underlying architecture is a mesh, the indexing may correspond to a snake-like row-major indexing.
Reference: [11] <author> V. Kumar, A. Grama, A. Gupta, and G. Karypis, </author> <title> Introduction to Parallel Computing, </title> <publisher> Benjamin/Cummings Publishing, </publisher> <year> 1994. </year>
Reference-contexts: 1 Introduction The broadcasting of messages is a basic communication operation on message-passing massively parallel processors (MPPs). Two variants of the broadcasting operation, the 1-to-all and all-to-all broadcast, have been studied extensively and are generally included in communication libraries and interfaces <ref> [1, 2, 6, 7, 11, 16] </ref>. In a 1-to-all broadcast, one processor broadcasts a message to every other processor. Various implementations of this operation for architectures with different machine characteristics have been proposed [4, 10, 14, 15, 17].
Reference: [12] <author> Y. Lan, A. H Esfhanian, and L. M. Ni, </author> <title> "Multicast in Hypercube Multiprocessors," </title> <journal> JPDC, </journal> <volume> vol. 8, </volume> <pages> pp. 30-41, </pages> <year> 1990. </year>
Reference-contexts: In a 1-to-all broadcast, one processor broadcasts a message to every other processor. Various implementations of this operation for architectures with different machine characteristics have been proposed [4, 10, 14, 15, 17]. In an all-to-all broadcast, every processor broadcasts a message to every other processor <ref> [3, 8, 9, 12, 18] </ref>. Let p be the machine size. Assume that s of the p processors contain a message to be broadcast to every other processor, 1 s p. In this paper we present broadcasting algorithms that handle all ranges of s.
Reference: [13] <author> F.T. Leighton, </author> <title> Parallel Algorithms and Architectures: Arrays, Trees, Hypercubes, </title> <publisher> Morgan Kaufmann Publishers, </publisher> <year> 1992. </year>
Reference-contexts: To break the dependence on the position of the sources we next describe algorithms which reposition the sources and then invoke the s-to-p algorithm on its ideal input distribution. Observe that the repositioning of processors containing messages has been applied successfully to obtain good routing algorithms <ref> [13] </ref>. We consider two class of such algorithms, a repositioning and a partitioning algorithm. A repositioning algorithm for s-to-p broadcasting is composed from a non-repositioning algorithm and the ideal input distribution of this algorithm on the selected machine.
Reference: [14] <author> X. Lin, P. K. McKinley, and L. M. Ni, </author> <title> "Performance Evaluation of Multicast Wormhole Routing in 2D-Mesh Multicomputers," </title> <booktitle> Proc. ICPP, </booktitle> <pages> pp. 1435-1442, </pages> <year> 1991. </year>
Reference-contexts: In a 1-to-all broadcast, one processor broadcasts a message to every other processor. Various implementations of this operation for architectures with different machine characteristics have been proposed <ref> [4, 10, 14, 15, 17] </ref>. In an all-to-all broadcast, every processor broadcasts a message to every other processor [3, 8, 9, 12, 18]. Let p be the machine size. Assume that s of the p processors contain a message to be broadcast to every other processor, 1 s p.
Reference: [15] <author> S.L. Johnsson, C.-T. Ho, </author> <title> "Optimum Broadcasting and Personalized Communication in Hypercubes," </title> <journal> IEEE Trans. on Comp., </journal> <volume> Vol. 38, </volume> <pages> pp. 1249-1268, </pages> <year> 1989. </year> <month> 23 </month>
Reference-contexts: In a 1-to-all broadcast, one processor broadcasts a message to every other processor. Various implementations of this operation for architectures with different machine characteristics have been proposed <ref> [4, 10, 14, 15, 17] </ref>. In an all-to-all broadcast, every processor broadcasts a message to every other processor [3, 8, 9, 12, 18]. Let p be the machine size. Assume that s of the p processors contain a message to be broadcast to every other processor, 1 s p.
Reference: [16] <author> J.Y. Park, H.-A. Choi, N. Nupairoj and L.M. Ni, </author> <title> "Construction of Optimal Multicast Trees Based on the Parameterized Communication Model", </title> <booktitle> Proceesings of 1996 Internat. Conference on Parallel Processing, </booktitle> <volume> Vol. I, </volume> <pages> pp 180 - 187, </pages> <year> 1996. </year>
Reference-contexts: 1 Introduction The broadcasting of messages is a basic communication operation on message-passing massively parallel processors (MPPs). Two variants of the broadcasting operation, the 1-to-all and all-to-all broadcast, have been studied extensively and are generally included in communication libraries and interfaces <ref> [1, 2, 6, 7, 11, 16] </ref>. In a 1-to-all broadcast, one processor broadcasts a message to every other processor. Various implementations of this operation for architectures with different machine characteristics have been proposed [4, 10, 14, 15, 17].
Reference: [17] <author> S. Ranka, R. Shankar and K. Alsabti, </author> <title> "Many-to-Many Communication With Bounded Traffic," </title> <booktitle> Proc. Symp. on the Frontiers of Massively Parallel Computation, </booktitle> <year> 1995. </year>
Reference-contexts: In a 1-to-all broadcast, one processor broadcasts a message to every other processor. Various implementations of this operation for architectures with different machine characteristics have been proposed <ref> [4, 10, 14, 15, 17] </ref>. In an all-to-all broadcast, every processor broadcasts a message to every other processor [3, 8, 9, 12, 18]. Let p be the machine size. Assume that s of the p processors contain a message to be broadcast to every other processor, 1 s p.
Reference: [18] <author> R. Thakur, A. Choudhary, </author> <title> "All-to-all Communication on Meshes with Wormhole Routing," </title> <booktitle> Proc. 8-th IPPS, </booktitle> <pages> pp. 561-565, </pages> <year> 1994. </year> <month> 24 </month>
Reference-contexts: In a 1-to-all broadcast, one processor broadcasts a message to every other processor. Various implementations of this operation for architectures with different machine characteristics have been proposed [4, 10, 14, 15, 17]. In an all-to-all broadcast, every processor broadcasts a message to every other processor <ref> [3, 8, 9, 12, 18] </ref>. Let p be the machine size. Assume that s of the p processors contain a message to be broadcast to every other processor, 1 s p. In this paper we present broadcasting algorithms that handle all ranges of s.
References-found: 18

