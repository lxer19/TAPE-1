URL: http://www.eecs.umich.edu/~marios/papers/tau95.ps
Refering-URL: http://www.eecs.umich.edu/~marios/pubs.html
Root-URL: http://www.cs.umich.edu
Title: Efficient Pipelining of Level-Clocked Circuits with Min-Max Propagation Delays  
Author: Alexander T. Ishii Marios C. Papaefthymiou 
Address: Princeton, NJ 08540  New Haven, CT 06520  
Affiliation: NEC C&C Research Labs  Yale University  
Abstract: In this paper we present a polynomial-time algorithm for pipelining two-phase, level-clocked circuits in order to operate correctly with a given clocking scheme under the bounded delay model. In this model, the propagation delay of each combinational logic element v is assumed to have a minimum value ffi(v) and a maximum value d(v). Our algorithm runs in O(LV E) steps, where L is the desired number of pipeline stages, and V and E are the number of gates and wires in the circuit, respectively. Our procedure is the first provably correct algorithm in the literature for solving this problem in polynomial time. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Ishii. </author> <title> Retiming gated-clocks and precharged circuit structures. </title> <booktitle> In Digest of Technical Papers of the 1993 IEEE International Conference on CAD, </booktitle> <pages> pages 300-307, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: Retiming and pipelining have been investigated extensively for circuits that use edge-triggered flip-flops as storage elements. [3, 4, 5, 9]. Moreover, several algorithms have been proposed for retiming level-clocked circuits <ref> [1, 2, 6, 7, 10, 11] </ref>, in which the storage elements (usually called latches) remain transparent while their clocking phases are active and store their inputs on the falling edges of their clocking waveforms.
Reference: [2] <author> A. T. Ishii, C. E. Leiserson, and M. C. Papaefthymiou. </author> <title> Optimizing two-phase, </title> <booktitle> level-clocked circuitry. In Advanced Research in VLSI and Parallel Systems: Proc. of the 1992 Brown/MIT Conference. </booktitle> <publisher> MIT Press, </publisher> <month> March </month> <year> 1992. </year>
Reference-contexts: Retiming and pipelining have been investigated extensively for circuits that use edge-triggered flip-flops as storage elements. [3, 4, 5, 9]. Moreover, several algorithms have been proposed for retiming level-clocked circuits <ref> [1, 2, 6, 7, 10, 11] </ref>, in which the storage elements (usually called latches) remain transparent while their clocking phases are active and store their inputs on the falling edges of their clocking waveforms. <p> We describe our pipelining algorithm in Section 4, and we argue that it terminates in O (LV E) time. In Section 5 we prove the correctness of our algorithm. We conclude our paper with future research directions. 2 Preliminaries In this section we describe the timing constraints presented in <ref> [2] </ref> for level-clocked circuits whose components are characterized by a maximum propagation delay. These constraints are "path based" in the sense that they specify required relationships between the propagation delays along paths in a circuit and the amount of time between specified pairs of clock edges. <p> The various proofs in this paper are based on an extended version of these constraints. A two-phase clocking scheme [8] was defined in <ref> [2] </ref> to comprise two clocking waveforms, or phases, denoted 0 and 1 , as is shown in Figure 3. <p> For convenience, the symbol is overloaded to also denote the sum = 0 + fl 0 + 1 + fl 1 ; (1) which is the period of the clocking scheme = h 0 ; fl 0 ; 1 ; fl 1 i. The constraints presented in <ref> [2] </ref> are inequalities between the maximum propagations of paths and the lengths of time intervals available for propagation along these paths. <p> The following informal proposition is used in <ref> [2] </ref> to state the necessary and sufficient conditions for the proper timing of a level-clocked circuit. <p> Proposition 1 A two-phase circuit is properly timed if and only if for all latches A and B in the circuit, the propagation delay d (p) along any path p from A to B is no greater than the rise-to-fall time t (p) of the path. More formally, <ref> [2] </ref> represented a two-phase level-clocked circuit as a directed multi-graph G = hV; E; d; w; i, where the delay function d is a mapping from V to the nonnegative real numbers, the weighting function w is a mapping from E to the nonnegative integers, and the phase function is a <p> Then G is properly timed if and only if for every path u p d (p) 1 + w (p) if (u) 6= (v), and 2 fl 1 (u) ; (3) Proof. See <ref> [2] </ref>. 3 Timing constraints with minimum delays In this section, we define a set of "path based" timing constraints for level-clocked circuits whose components are characterized by both a minimum and maximum propagation. <p> fl &gt; 0 9 then r (v) r (v) 1 10 Shift True 11 if r (v) &lt; 0 12 then return fail 13 until Shift = False or r (v) = 0 14 call Setup Setup 1 Look for rightmost latch with downstream setup violation using Algorithm Verify from <ref> [2] </ref> 2 if violating latch is found 3 then shift violating stage to the right until constraint satisfied 4 call Hold 5 else return r scheme. preceeding phase begins and ends in the same clock cycle. In this case the count is reset to zero. <p> Each update fixes the hold or the setup constraints. Hold constraints can be fixed in O (E) steps by traversing the vertices of the graph in topological sort order. Setup violations can be detected and fixed in O (E) steps by running one iteration of Algorithm Verify from <ref> [2] </ref>. Thus the total running time of Algorithm MinMaxPipe is O (LV E) steps. 5 Correctness proof In this section, we show that Algorithm MinMaxPipe correctly computes a pipelining that satisfies both the setup and the hold constraints.
Reference: [3] <author> K. N. Lalgudi and M. C. Papaefthymiou. </author> <title> Delay: an efficient tool for retiming with realistic delay modeling. </title> <booktitle> In Proceedings of the 32nd ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 304-309, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: The parameter L is usually referred to as the number of pipeline stages. 1 x ! y ; z or hold constraints along u ; v. Retiming and pipelining have been investigated extensively for circuits that use edge-triggered flip-flops as storage elements. <ref> [3, 4, 5, 9] </ref>. Moreover, several algorithms have been proposed for retiming level-clocked circuits [1, 2, 6, 7, 10, 11], in which the storage elements (usually called latches) remain transparent while their clocking phases are active and store their inputs on the falling edges of their clocking waveforms.
Reference: [4] <author> C. E. Leiserson and J. B. Saxe. </author> <title> Optimizing synchronous systems. </title> <journal> Journal of VLSI and Computer Systems, </journal> <volume> 1(1) </volume> <pages> 41-67, </pages> <year> 1983. </year>
Reference-contexts: The parameter L is usually referred to as the number of pipeline stages. 1 x ! y ; z or hold constraints along u ; v. Retiming and pipelining have been investigated extensively for circuits that use edge-triggered flip-flops as storage elements. <ref> [3, 4, 5, 9] </ref>. Moreover, several algorithms have been proposed for retiming level-clocked circuits [1, 2, 6, 7, 10, 11], in which the storage elements (usually called latches) remain transparent while their clocking phases are active and store their inputs on the falling edges of their clocking waveforms.
Reference: [5] <author> C. E. Leiserson and J. B. Saxe. </author> <title> Retiming synchronous circuitry. </title> <journal> Algorithmica, </journal> <volume> 6(1), </volume> <year> 1991. </year> <note> Also available as MIT/LCS/TM-372. </note>
Reference-contexts: The parameter L is usually referred to as the number of pipeline stages. 1 x ! y ; z or hold constraints along u ; v. Retiming and pipelining have been investigated extensively for circuits that use edge-triggered flip-flops as storage elements. <ref> [3, 4, 5, 9] </ref>. Moreover, several algorithms have been proposed for retiming level-clocked circuits [1, 2, 6, 7, 10, 11], in which the storage elements (usually called latches) remain transparent while their clocking phases are active and store their inputs on the falling edges of their clocking waveforms.
Reference: [6] <author> B. Lockyear and C. Ebeling. </author> <title> Optimal retiming of multi-phase, </title> <booktitle> level-clocked circuits. In Advanced Research in VLSI and Parallel Systems: Proc. of the 1992 Brown/MIT Conference. </booktitle> <publisher> MIT Press, </publisher> <month> March </month> <year> 1992. </year>
Reference-contexts: Retiming and pipelining have been investigated extensively for circuits that use edge-triggered flip-flops as storage elements. [3, 4, 5, 9]. Moreover, several algorithms have been proposed for retiming level-clocked circuits <ref> [1, 2, 6, 7, 10, 11] </ref>, in which the storage elements (usually called latches) remain transparent while their clocking phases are active and store their inputs on the falling edges of their clocking waveforms.
Reference: [7] <author> B. Lockyear and C. Ebeling. </author> <title> The practical application of retiming to the design of high performance systems. </title> <booktitle> In Digest of Technical Papers of the 1993 IEEE International Conference on CAD, </booktitle> <pages> pages 288-295, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: Retiming and pipelining have been investigated extensively for circuits that use edge-triggered flip-flops as storage elements. [3, 4, 5, 9]. Moreover, several algorithms have been proposed for retiming level-clocked circuits <ref> [1, 2, 6, 7, 10, 11] </ref>, in which the storage elements (usually called latches) remain transparent while their clocking phases are active and store their inputs on the falling edges of their clocking waveforms.
Reference: [8] <author> C. A. Mead and L. A. Conway. </author> <title> Introduction to VLSI Systems. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1980. </year>
Reference-contexts: The various proofs in this paper are based on an extended version of these constraints. A two-phase clocking scheme <ref> [8] </ref> was defined in [2] to comprise two clocking waveforms, or phases, denoted 0 and 1 , as is shown in Figure 3.
Reference: [9] <author> M. C. Papaefthymiou. </author> <title> Understanding retiming through maximum average-delay cycles. </title> <journal> Mathematical Systems Theory, </journal> <volume> 27 </volume> <pages> 65-84, </pages> <year> 1994. </year> <note> A preliminary version of the paper appeared in the proceedings of the 3rd ACM Symposium on Parallel Algorithms and Architectures, </note> <month> July </month> <year> 1991. </year>
Reference-contexts: The parameter L is usually referred to as the number of pipeline stages. 1 x ! y ; z or hold constraints along u ; v. Retiming and pipelining have been investigated extensively for circuits that use edge-triggered flip-flops as storage elements. <ref> [3, 4, 5, 9] </ref>. Moreover, several algorithms have been proposed for retiming level-clocked circuits [1, 2, 6, 7, 10, 11], in which the storage elements (usually called latches) remain transparent while their clocking phases are active and store their inputs on the falling edges of their clocking waveforms.
Reference: [10] <author> M. C. Papaefthymiou and K. H. Randall. </author> <title> Edge-triggering vs. two-phase level-clocking. </title> <booktitle> In Research on Integrated Systems: Proceedings of the 1993 Symposium, </booktitle> <month> March </month> <year> 1993. </year>
Reference-contexts: Retiming and pipelining have been investigated extensively for circuits that use edge-triggered flip-flops as storage elements. [3, 4, 5, 9]. Moreover, several algorithms have been proposed for retiming level-clocked circuits <ref> [1, 2, 6, 7, 10, 11] </ref>, in which the storage elements (usually called latches) remain transparent while their clocking phases are active and store their inputs on the falling edges of their clocking waveforms.
Reference: [11] <author> M. C. Papaefthymiou and K. H. Randall. Tim: </author> <title> a timing package for two-phase, </title> <booktitle> level-clocked circuitry. In Proceedings of the 30th ACM/IEEE Design Automation Conference, </booktitle> <month> June </month> <year> 1993. </year> <note> Also available as an MIT VLSI Memo 92-693, </note> <month> October </month> <year> 1992. </year>
Reference-contexts: Retiming and pipelining have been investigated extensively for circuits that use edge-triggered flip-flops as storage elements. [3, 4, 5, 9]. Moreover, several algorithms have been proposed for retiming level-clocked circuits <ref> [1, 2, 6, 7, 10, 11] </ref>, in which the storage elements (usually called latches) remain transparent while their clocking phases are active and store their inputs on the falling edges of their clocking waveforms.
Reference: [12] <author> K. A. Sakallah, T. N. Mudge, and O. A. Olukotun. </author> <title> checkT c and minT c : Timing verification and optimal clocking of synchronous digital circuits. </title> <booktitle> In Digest of Technical Papers of the 1990 IEEE International Conference on CAD, </booktitle> <pages> pages 552-555, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: These constraints are "path based" in the sense that they specify required relationships between the propagation delays along paths in a circuit and the amount of time between specified pairs of clock edges. This is in contrast to "schedule based" constraints, such as those presented in <ref> [12] </ref>, that specify required relationships between specified clock edges, and the times that inputs (outputs) are scheduled to arrive at (depart from) each individual circuit component. The various proofs in this paper are based on an extended version of these constraints.
Reference: [13] <author> T. G. Szymanski and N. Shenoy. </author> <title> Verifying clock schedules. </title> <booktitle> In Digest of Technical Papers of the 1992 IEEE/ACM International Conference on CAD, </booktitle> <month> November </month> <year> 1992. </year>
Reference-contexts: For more aggressive delay models with nonzero minimum propagation delays and more complex clocking schemes, Szymanski and Shenoy gave an O (V 3 )-time algorithm for the timing verification problem <ref> [13] </ref>. No provably correct polynomial-time algorithm has been presented, however, for pipelining or retiming level-clocked circuits under such delay models.
References-found: 13

