URL: http://www.cs.utexas.edu/users/dahlin/papers/anamedraft.Aug98.ps
Refering-URL: http://www.cs.utexas.edu/users/dahlin/papers.html
Root-URL: http://www.cs.utexas.edu
Title: Active Names: Programmable Location and Transport of Wide-Area Resources  
Author: Amin Vahdat Thomas Anderson Michael Dahlin 
Address: Seattle  Austin  
Affiliation: Computer Science Division University of California, Berkeley  Department of Computer Science and Engineering University of Washington,  Department of Computer Science University of Texas,  
Abstract: Active Names are a general framework for the development and composition of wide-area applications. The key insight behind Active Names is the need to introduce programmability of name binding to support the widely varying semantics and requirements of distributed applications in accessing wide-area resources. Active Names use an application-specific and location-independent program to locate and retrieve wide area resources. This paper presents the architecture for evaluating Active Names, including the technique for binding names to programs, and a standard environment for executing these programs. We demonstrate the utility of the Active Naming framework via four sample applications: mobile distillation of Web content, load balancing and replica selection across wide-area servers, extensible cache management designed to increase the utility of Web caches, and personalization of Web content to client preferences. 
Abstract-found: 1
Intro-found: 1
Reference: [Abrams et al. 1995] <author> M. Abrams, C. Standridge, G. Abdulla, S. Williams, and E. Fox. </author> <title> Caching Proxies: Limitations and Potentials. </title> <booktitle> In Proceedings of 1995 World Wide Web Conference, </booktitle> <year> 1995. </year>
Reference: [Anderson et al. 1995] <author> T. E. Anderson, D. E. Culler, D. A. Pat-terson, </author> <title> and the NOW Team. A Case for NOW (Networks of Workstations). </title> <booktitle> IEEE Micro, </booktitle> <month> February </month> <year> 1995. </year>
Reference-contexts: Interestingly, the performance and availability bottleneck for many services is not local CPU or disk performance. For example, while NOW's <ref> [Anderson et al. 1995] </ref> and RAID's [Chen et al. 1993] allow for highly available, scalable system performance in the local area [Brewer 1997], recent studies suggest that the performance limitations often lie in the network [Paxson 1996].
Reference: [Arlitt & Williamson 1996] <author> M. F. Arlitt and C. L. Williamson. </author> <title> Web Server Workload Characterization: The Search for Invariants. </title> <booktitle> In Proceedings of the ACM Sigmetrics Conference on Measurement and Modeling of Computer Systems, </booktitle> <pages> pp. 126137, </pages> <month> May </month> <year> 1996. </year>
Reference: [Berners-Lee 1995] <author> T. Berners-Lee. </author> <title> Hypertext Transfer Protocol HTTP/1.0, October 1995. HTTP Working Group Internet Draft. </title>
Reference-contexts: The second major limitation is inflexibility within the infrastructure itself, making it difficult to deploy new network services and applications. For example, a number of schemes for replication and load balancing <ref> [Katz et al. 1994, Berners-Lee 1995, Brisco 1995] </ref>, caching [Gw fl This work was supported in part by the Defense Advanced Research Projects Agency (F30602-95-C-0014, F30602-98-1-0205), the National Science Foundation (CDA 9401156, CDA 9624082), Sun Microsystems, California MICRO, Novell, Hewlett Packard, Intel, Microsoft, and Mit-subishi.
Reference: [Bhattarcharjee et al. 1997] <author> S. Bhattarcharjee, M. Ammar, E. Ze-gura, V. Sha, and Z. Fei. Application-Layer Anycast-ing. </author> <booktitle> In Proceedings of IEEE Infocom, </booktitle> <month> April </month> <year> 1997. </year>
Reference-contexts: Smart Clients retrieve service-specific code into the client to mediate access to a set of server replicas. Active Names are more general than Smart Clients, with location independent code able to run anywhere in the system allowing for the deployment of a broader range of applications. Anycasts <ref> [Bhattarcharjee et al. 1997, Fei et al. 1998] </ref>, Nomenclator [Ordille & Miller 1993], and Query Routing [Leach & Weider 1997] also allow for resource discovery and replica selection.
Reference: [Bolot & Afifi 1993] <author> J. Bolot and H. Afifi. </author> <title> Evaluating Caching Schemes for the X.500 Directory. </title> <booktitle> In Proceedings the 13th International Conference on Distributed Computing Systems, </booktitle> <pages> pp. 112119, </pages> <address> Pittsburgh, PA, </address> <year> 1993. </year>
Reference-contexts: to user preferences, or by simply rotating among a set of available banners [Cao et al. 1998]. 5 Related Work Our work in Active Naming introduces programmability and location independence to existing wide-area naming systems such as Apollo Domain [Leach et al. 1983], DNS [Mock-apetris & Dunlap 1988] and LDAP <ref> [Bolot & Afifi 1993] </ref>. For their target domains, these systems have been successful. However, as new requirements are introduced it is difficult to expand such systems.
Reference: [Brewer 1997] <author> E. Brewer. </author> <type> Personal Communication, </type> <month> March </month> <year> 1997. </year>
Reference-contexts: Interestingly, the performance and availability bottleneck for many services is not local CPU or disk performance. For example, while NOW's [Anderson et al. 1995] and RAID's [Chen et al. 1993] allow for highly available, scalable system performance in the local area <ref> [Brewer 1997] </ref>, recent studies suggest that the performance limitations often lie in the network [Paxson 1996]. Replication makes naming more difficult because the name for a service can translate to multiple addresses spread across the wide area.
Reference: [Brisco 1995] <author> T. Brisco. </author> <title> DNS Support for Load Balancing, </title> <month> April </month> <year> 1995. </year> <title> Network Working Group RFC 1794. </title>
Reference-contexts: The second major limitation is inflexibility within the infrastructure itself, making it difficult to deploy new network services and applications. For example, a number of schemes for replication and load balancing <ref> [Katz et al. 1994, Berners-Lee 1995, Brisco 1995] </ref>, caching [Gw fl This work was supported in part by the Defense Advanced Research Projects Agency (F30602-95-C-0014, F30602-98-1-0205), the National Science Foundation (CDA 9401156, CDA 9624082), Sun Microsystems, California MICRO, Novell, Hewlett Packard, Intel, Microsoft, and Mit-subishi.
Reference: [Cao et al. 1998] <author> P. Cao, J. Zhang, and K. </author> <title> Beach. Active Cache: Caching Dynamic Contents on the Web. </title> <booktitle> In Proceedings of Middleware, </booktitle> <year> 1998. </year>
Reference-contexts: For example, they may wish to track hit counts for advertising revenues, or perform advertising banner rotation or other modifications for each client access <ref> [Cao et al. 1998] </ref>. Active Names run service-specific code to manage portions of proxy caches. <p> For example, a service might update a set of headlines every two hours, meaning there is no need to check for updates at other intervals. Finally, the Active Name program personalizes objects by customizing advertisement banners to user preferences, or by simply rotating among a set of available banners <ref> [Cao et al. 1998] </ref>. 5 Related Work Our work in Active Naming introduces programmability and location independence to existing wide-area naming systems such as Apollo Domain [Leach et al. 1983], DNS [Mock-apetris & Dunlap 1988] and LDAP [Bolot & Afifi 1993]. For their target domains, these systems have been successful. <p> The system also integrates data from multiple repositories for heterogeneous query processing. Query Routing uses compressed indexes of multiple resources and sites to route requests to the proper destination. These approaches show promising results and should, once again, fit well within our extensible framework. Active Caches <ref> [Cao et al. 1998] </ref> allow for customization of cache content through Java programs similar to our extensible cache management system described in Section 4.2.
Reference: [Chankhunthod et al. 1996] <author> A. Chankhunthod, P. Danzig, C. Neerdaels, M. Schwartz, and K. Worrell. </author> <title> A Hierarchical Internet Object Cache. </title> <booktitle> In Proceedings of the 1996 USENIX Technical Conference, </booktitle> <month> January </month> <year> 1996. </year>
Reference: [Chen et al. 1993] <author> P. M. Chen, E. K. Lee, A. L. Drapeau, K. Lutz, E. Miller, S. Seshan, K. Shirriff, D. A. Patterson, and R. H. Katz. </author> <title> Performance and Design Evaluation of the RAID-II Storage Server. </title> <booktitle> In Proceedings of International Parallel Processing Syposium 1993 Workshop on I/O, </booktitle> <year> 1993. </year>
Reference-contexts: Interestingly, the performance and availability bottleneck for many services is not local CPU or disk performance. For example, while NOW's [Anderson et al. 1995] and RAID's <ref> [Chen et al. 1993] </ref> allow for highly available, scalable system performance in the local area [Brewer 1997], recent studies suggest that the performance limitations often lie in the network [Paxson 1996].
Reference: [Cisco 1997] <author> Cisco. </author> <title> Distributed director. </title> <address> http: //www.cisco.com/warp/public/751/ distdir/technical.shtml, </address> <year> 1997. </year>
Reference-contexts: Services employing DNS round robin achieve randomized load balanced access to replicas. However, no programma bility or extensibility is possible with this scheme. * Distributed Director: With this product from CISCO <ref> [Cisco 1997] </ref>, specialized code is run in routers that allows services to register the current set of replicas making up a service. Any requests (at the IP routing level) bound for a particular service, are automatically routed to the closest replica (as measured by hop count).
Reference: [CNN 1998] <author> CNN. </author> <title> CNN Custom News. </title> <address> http:// customnews.cnn.com, </address> <year> 1998. </year>
Reference-contexts: Dahlin was also supported by an NSF CAREER grant (CCR 9733742). For more information, please see http://now.cs.berkeley.edu/WebOS. ertzman & Seltzer 1996, Chankhunthod et al. 1996, Zhang et al. 1997, Cao et al. 1998, Tewari et al. 1998], and customization (e.g., Yahoo [Yahoo 1996] or CNN <ref> [CNN 1998] </ref>) have been proposed recently. While such point solutions to point problems have been proposed, some have enjoyed limited acceptance because the Internet is missing a general infrastructure to develop and deploy new network services. <p> However, as load increases and performance at the Berkeley replica degrades, an increasing number of the requests are routed to Seattle achieving better overall performance. 4.4 Personalization Another application we have implemented in the Active Naming framework is service-controlled personalization of a Web service. For example, many news services <ref> [Yahoo 1996, CNN 1998] </ref> allow a single name (a URL to a front page) to be customized to user preferences for headlines, stock quotes, weather forecasts, etc. Currently, this mapping is accomplished by translating a cookie uniquely identifying a user to an entry in the server's database describing such preferences.
Reference: [Daniel & Mealling 1996] <author> R. Daniel and M. Mealling. </author> <title> Resolution of Uniform Resource Identifiers using the Domain Name System. Internet Draft, </title> <note> see http: //www.acl.lanl.gov/URN/naptr.txt, September 1996. </note>
Reference-contexts: Perhaps most important is the ability to make object names persistent. Thus, as objects are replicated or moved from host to host or directory to directory, the name remains constant (i.e., once a name is generated it will never become invalid). The current proposal for implementing URN's <ref> [Daniel & Mealling 1996] </ref> leverages DNS to invoke complex and static re-writing rules of names to translate the name to an address.
Reference: [Deering & Cheriton 1990] <author> S. E. Deering and D. R. Cheriton. </author> <title> Multicast Routing in Datagram Internetworks and Extended LANs. </title> <journal> In Transactions on Computer Systems, </journal> <year> 1990. </year>
Reference-contexts: Active Networks interpose a program at the IP packet level, introducing programmability into network routers. Such functionality is well matched to introducing new network transport mechanisms, such as RSVP [Zhang et al. 1993], multicast <ref> [Deering & Cheriton 1990] </ref>, or Mobile IP [Perkins 1996]. While there is certainly overlap between functionality provided by Active Names and Active Networks, we argue that interposing at the naming interface is more convenient for building and deploying higher-level services such as caching, managing failover, replication, and customization.
Reference: [Dig 1995] <institution> Digital Equipment Corporation. Alta Vista, </institution> <year> 1995. </year> <note> http://www.altavista.digital.com/. </note>
Reference-contexts: We currently see this trend on a smaller scale, with popular services such as Alta Vista <ref> [Dig 1995] </ref> and Netscape [Net 1994] replicating their web servers across the wide area for improved scalability, performance, and availability. Interestingly, the performance and availability bottleneck for many services is not local CPU or disk performance.
Reference: [Duska et al. 1997] <author> B. Duska, D. Marwood, and M. J. Feeley. </author> <title> The Measured Access Characteristics of World Wide Web Client Proxy Caches. </title> <booktitle> In Proceedings of the 1997 Usenix Symposium on Internet Technologies and Systems, </booktitle> <address> Monterey, California, </address> <month> December </month> <year> 1997. </year>
Reference: [Fei et al. 1998] <author> Z. Fei, S. Bhattacharjee, E. W. Zegura, and M. Ammar. </author> <title> A Novel Server Selection Technique for Improving the Response Time of a Replicated Service. </title> <booktitle> In Proceedings of IEEE Infocom, </booktitle> <month> July </month> <year> 1998. </year>
Reference-contexts: Smart Clients retrieve service-specific code into the client to mediate access to a set of server replicas. Active Names are more general than Smart Clients, with location independent code able to run anywhere in the system allowing for the deployment of a broader range of applications. Anycasts <ref> [Bhattarcharjee et al. 1997, Fei et al. 1998] </ref>, Nomenclator [Ordille & Miller 1993], and Query Routing [Leach & Weider 1997] also allow for resource discovery and replica selection.
Reference: [Fitzgerald et al. 1997] <author> S. Fitzgerald, I. Foster, C. Kesselman, G. von Laszewski, W. Smith, and S. Tuecke. </author> <title> A Directory Service for Configuring High-Performance Distributed Computations. </title> <booktitle> In Proc. 6th IEEE Symp. on High-Performance Distributed Computing, </booktitle> <pages> pp. 365 376, </pages> <year> 1997. </year>
Reference-contexts: Similar application-specific knowledge can be used to implement efficient name lookup in other domains, such as: hostname to IP address translation [Mock-apetris & Dunlap 1988], locating participants of a parallel program <ref> [Fitzgerald et al. 1997] </ref>, or locating an object in a proxy cache [Zhang et al. 1997]. Another advantage of Active Naming is the potential to reduce wide-area communication and improve client latency. Currently, naming is usually a step in a larger process and involves multiple round-trip communications. <p> For their target domains, these systems have been successful. However, as new requirements are introduced it is difficult to expand such systems. Current wide-area computing research proposals, such as Globe [van Steen et al. 1998], Globus <ref> [Fitzgerald et al. 1997] </ref>, and Legion [Grimshaw et al. 1995], propose a number of schemes for locating computational resources across the wide area. These proposals are orthogonal to our work as any could be incorporated within the extensible Active Naming framework.
Reference: [Foster & Kesselman 1996] <author> I. Foster and C. Kesselman. </author> <month> Globus: </month>
References-found: 20

