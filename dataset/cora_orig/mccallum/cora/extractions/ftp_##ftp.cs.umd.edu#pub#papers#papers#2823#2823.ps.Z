URL: ftp://ftp.cs.umd.edu/pub/papers/papers/2823/2823.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Email: sears@cs.umd.edu  
Title: Layout Appropriateness: A metric for evaluating user interface widget layout  
Author: Andrew Sears 
Date: December 8, 1992  
Address: College Park, MD 20742  
Affiliation: Human-Computer Interaction Laboratory Computer Science Department University of Maryland  
Abstract: Numerous methods to evaluate user interfaces have been investigated. These methods vary greatly in the attention paid to the users tasks. Some methods require detailed task descriptions while others are task-independent. Unfortunately, collecting detailed task information can be difficult. On the other hand, task-independent methods cannot evaluate a design for the tasks users actually perform. The goal of this research is to develop a metric, which incorporates simple task descriptions, that can assist designers in organizing widgets in the user interface. Simple task descriptions provide some of the benefits, without the difficulties, of performing a detailed task analysis. The metric, Layout Appropriateness (LA), requires a description of the sequences of widget-level actions users perform and how frequently each sequence is used. This task description can either be from observations of an existing system or from a simplified task analysis. The appropriateness of a given layout is computed by weighting the cost of each sequence of actions by how frequently the sequence is performed. This emphasizes frequent methods of accomplishing tasks while incorporating less frequent methods in the design. Currently costs are based on the distance users must move the mouse. Other measures such as the number of eye fixations necessary to extract the relevant information or measure like the number of changes in direction may also prove useful, but must be validated before they are made available for use. In addition to providing an comparison of a proposed or existing layouts, an LA-optimal layout is presented to the designer. The designer can compare the LA-optimal and existing layouts or start with the LA-optimal layout and modify it to take additional factors into consideration. Software engineers who occasionally face interface design problems and user interface designers can benefit from the explicit focus on the users tasks that LA incorporates into automated user interface evaluation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. I. Anderson, </author> <title> Task Analysis: The Oft Missing Step in the Development of Computer-Human Interfaces; Its Desirable Nature, Value, and Role, </title> <booktitle> Proceedings of INTERACT 90, </booktitle> <month> August </month> <year> 1990, </year> <pages> pp. 1051-1054. </pages>
Reference-contexts: Although many methods for performing task analyses exist, additional research is necessary to make these methods easier to use. These methods are not discussed here, but for further references see: <ref> [1, 6, 7, 11, 12, 14, 20 and 23] </ref>. Computing the LA-optimal Layout The method used to search for an LA-optimal solution requires unit sized objects be placed in a rectangular grid. Larger objects are created using constraints as discussed in the section describing the implementation of LA.
Reference: [2] <author> S. Card, W. English, and B. Burr, </author> <title> Evaluation of Mouse, Rate-Controlled Isometric Joystick, Step Keys and Text Keys for Text Selection on a CRT, </title> <journal> Ergonomics, </journal> <volume> Vol. 21, No. 8, </volume> <pages> pp. 601-613, </pages> <year> 1978. </year>
Reference-contexts: Fitts Law states that the time to complete a movement is a logarithmic function of the ratio of the distance to the target and the size of the target <ref> [2, 18] </ref>.), the number of eye fixations needed to extract the necessary information [17], the number of changes in direction, or any other measure the designer feels is important.
Reference: [3] <author> S. Card, T. Moran, & A. Newell, </author> <title> The Psychology of Human-Computer Interaction, </title> <address> Hillsdale, NJ: </address> <publisher> Erlbaum, </publisher> <year> 1983. </year>
Reference-contexts: Introduction Software engineers and interface designers often face the challenge of creating or redesigning an interface. Many methods to evaluate interfaces have been developed to aid in this process. Some methods, such as GOMS, require detailed task descriptions <ref> [3, 14] </ref>. While these methods can take many aspects of the interactions into consideration, detailed task descriptions can be difficult to obtain and small changes in the tasks may require extensive reanalysis. In addition, performing detailed task analyses can require training that may be both expensive and impractical [14]. <p> GOMS is a method that requires a detailed task analysis. A GOMS analysis results in a set of Goals, Operators, Methods, and Selection Rules which are used to describe the knowledge a user must have to perform a task with a given system <ref> [3] </ref>. Performing the analysis in a reliable way and constructing the necessary production rule models can make GOMS difficult to use [14]. The hierarchical structure of a GOMS analysis provides a good framework for performing a task analysis.
Reference: [4] <author> S. Casner and J. H. Larkin, </author> <title> Cognitive Efficiency Considerations for Good Graphic Design, </title> <booktitle> Cognitive Science Society Proceedings, </booktitle> <month> August </month> <year> 1989. </year>
Reference-contexts: Casner and Larkin developed a system, which uses task descriptions to generate graphical displays for information extraction tasks <ref> [4] </ref>. This system automatically substitutes visual operators for logical operators in an attempt to reduce the cognitive demands placed on users. This results in numerous displays being generated for each set of user tasks.
Reference: [5] <author> D. de Baar, J. Foley, and K. Mullet, </author> <title> Coupling Application Design and User Interface Design, </title> <booktitle> CHI 92 Proceedings, </booktitle> <month> May </month> <year> 1992, </year> <pages> pp. 259-266. </pages>
Reference-contexts: Although problems exist, cognitive walkthroughs appear promising as a technique for evaluating many aspects of the usability of a new or proposed interface. Automatic Layout Generation Numerous research systems have been developed to automatically or semiautomatically lay out user interfaces <ref> [5, 15, 19, 28 and 32] </ref>. These systems have varied in many ways. Some systems are based on the underlying structure of the information to be presented and others are based on sets of guidelines. Most of these systems allow designers to modify the automatically generated layouts.
Reference: [6] <author> C. G. Drury, B. Paramore, H. P . Van Cott, S. M. Grey, and E. N. Corlett, </author> <title> Task Analysis, </title> <editor> In G. Salvendy (Ed.), </editor> <booktitle> Handbook of Human Factors (pp. </booktitle> <pages> 370-401), </pages> <address> New York: </address> <publisher> John Wiley & Sons, </publisher> <year> 1987. </year>
Reference-contexts: Although many methods for performing task analyses exist, additional research is necessary to make these methods easier to use. These methods are not discussed here, but for further references see: <ref> [1, 6, 7, 11, 12, 14, 20 and 23] </ref>. Computing the LA-optimal Layout The method used to search for an LA-optimal solution requires unit sized objects be placed in a rectangular grid. Larger objects are created using constraints as discussed in the section describing the implementation of LA.
Reference: [7] <author> J. Fath and R. </author> <title> Bias, Taking the Task out of task analysis, </title> <booktitle> Proceedings of the 36th Annual Meeting of the Human Factors Society, </booktitle> <pages> pp. 379-383, </pages> <year> 1992. </year>
Reference-contexts: Mental operators are non-observable, hypothetical, inferred actions. Removing mental operators and simplifying the external operators to the selection of widgets should make performing the task analysis more practical. Fath and Bias also discuss a structured approach for performing a task analysis which is guided by a workbook <ref> [7] </ref>. Providing a written document for designers to follow may make the task analysis easier to understand and perform. Understanding how sensitive LA is to changes in the task description will provide a better understanding of how accurate the task description must be. <p> Although many methods for performing task analyses exist, additional research is necessary to make these methods easier to use. These methods are not discussed here, but for further references see: <ref> [1, 6, 7, 11, 12, 14, 20 and 23] </ref>. Computing the LA-optimal Layout The method used to search for an LA-optimal solution requires unit sized objects be placed in a rectangular grid. Larger objects are created using constraints as discussed in the section describing the implementation of LA.
Reference: [8] <author> R. Gupta and J. Sharit, </author> <title> Human-Computer Interaction in Facilities Layout, </title> <editor> In M Helander (Ed.), </editor> <booktitle> Handbook of Human-Computer Interaction (pp. </booktitle> <pages> 729-736). </pages> <address> Amsterdam: </address> <publisher> Elsevier Science Publishers, </publisher> <year> 1988. </year>
Reference-contexts: This problem is referred to as Facilities Layout. A particular step in this process, Block Layout, is very similar to the problem solved by the Layout Appropriateness metric <ref> [8] </ref>. Desk B o File File File B o B o Table 5 10 1 10 20 1 7 Desk B o File File File B o Books T 10 2 5 8 7 3 Fig. 1. An office where links labels Fig. 2. <p> Once an interface has been created, either automatically or manually, these metrics could be used to provide feedback about user 20 performance. It would also be interesting to explore the use of LA in other disciplines, such as, Facilities Layout <ref> [8] </ref> and applications which currently use Link Analysis [13]. Conclusions Interface designers monitor many aspects of an interface design as it is being created. LA can automatically monitor various measures, such as distance, reducing the demands on designers, allowing them to concentrate on other aspects of the design.
Reference: [9] <author> H. R. Hartson, A. Siochi and D. Hix, </author> <title> The UAN: User-oriented representation for direct manipulation interface designs, </title> <journal> ACM Transactions on Information Systems , vol. </journal> <volume> 8, no. 3, </volume> <pages> pp. 269-288. </pages>
Reference-contexts: Payne and Green expanded on this work by addressing multiple levels of consistency and the completeness of the language [21]. A more recently developed task description language, the User Action Notation (UAN), may also prove useful for describing the users tasks <ref> [9] </ref>. Using the task descriptions, LA appropriately emphasizes each sequence of actions when computing the cost of a layout. There are two methods for generating task descriptions. If an interface already exists, designers can generate task descriptions by observing users working with the system.
Reference: [10] <author> R. Jeffries, J. Miller, C. Wharton and K. Uyeda, </author> <title> User interface evaluation in the real world: A comparison of four techniques, </title> <booktitle> CHI 91 Proceedings, </booktitle> <month> April </month> <year> 1991, </year> <pages> pp. 119-124. </pages>
Reference-contexts: Once these steps are completed they evaluate the ease of learning for the proposed interface [16]. Initially, cognitive walkthroughs were developed for evaluating Walk-Up-and-Use systems and several applications of this technique have been reported with varying success <ref> [10, 16 and 31] </ref>. The results indicate that cognitive walkthroughs have potential for evaluating user interfaces, but several important issues must be addressed before they will be practical. <p> Understanding how sensitive the LA metric is to changes in the task description can help determine how accurate a task analysis must be. These times compare favorably with other, more comprehensive, methods such as heuristic evaluations, cognitive walkthroughs, and usability testing <ref> [10] </ref>. The level of detail required for a GOMS analysis may introduce difficulties, but the structured hierarchical approach to a task analysis is a valuable tool [14]. A GOMS analysis involves specifying four types of information. First, the users Goals must be identified.
Reference: [11] <author> H. Johnson and P. Johnson, </author> <title> Designers-identified requirements for tools to support task analyses, </title> <booktitle> INTERACT 90 Proceedings, </booktitle> <month> August </month> <year> 1990, </year> <pages> pp. 259-264. </pages>
Reference-contexts: Although many methods for performing task analyses exist, additional research is necessary to make these methods easier to use. These methods are not discussed here, but for further references see: <ref> [1, 6, 7, 11, 12, 14, 20 and 23] </ref>. Computing the LA-optimal Layout The method used to search for an LA-optimal solution requires unit sized objects be placed in a rectangular grid. Larger objects are created using constraints as discussed in the section describing the implementation of LA.
Reference: [12] <author> P. Johnson and E. Nicolosi, </author> <title> Task-based user interface development tools, </title> <booktitle> INTERACT 90 Proceedings, </booktitle> <month> August </month> <year> 1990, </year> <pages> pp. 383-387. </pages>
Reference-contexts: Although many methods for performing task analyses exist, additional research is necessary to make these methods easier to use. These methods are not discussed here, but for further references see: <ref> [1, 6, 7, 11, 12, 14, 20 and 23] </ref>. Computing the LA-optimal Layout The method used to search for an LA-optimal solution requires unit sized objects be placed in a rectangular grid. Larger objects are created using constraints as discussed in the section describing the implementation of LA.
Reference: [13] <author> B. Kantowitz and R. Sorkin, </author> <title> Human Factors: Understanding poeple-system relationships. </title> <address> New York: </address> <publisher> John Wiley & Sons, </publisher> <year> 1983, </year> <pages> pp. 226-227. </pages>
Reference-contexts: Unfortunately, no analysis of these displays is provided to the designer, leaving the designer many alternative displays and little information about which displays may result in better performance. Other Disciplines For over 20 years human factors specialists have used link analysis for redesigning displays, equipment, and rooms <ref> [13] </ref>. Link analysis depends on a description of the location of the objects and the value of the links between objects. Link values may be the relative frequency of moving from one object to another, importance, or any other value of interest. <p> Once an interface has been created, either automatically or manually, these metrics could be used to provide feedback about user 20 performance. It would also be interesting to explore the use of LA in other disciplines, such as, Facilities Layout [8] and applications which currently use Link Analysis <ref> [13] </ref>. Conclusions Interface designers monitor many aspects of an interface design as it is being created. LA can automatically monitor various measures, such as distance, reducing the demands on designers, allowing them to concentrate on other aspects of the design.
Reference: [14] <author> D. Kieras, </author> <title> Towards a Practical GOMS Model Methodology for User Interface Design, </title> <editor> In M Helander (Ed.), </editor> <booktitle> Handbook of Human-Computer Interaction (pp. </booktitle> <pages> 135-157). </pages> <address> Amsterdam: </address> <publisher> Elsevier Science Publishers, </publisher> <year> 1988. </year>
Reference-contexts: Introduction Software engineers and interface designers often face the challenge of creating or redesigning an interface. Many methods to evaluate interfaces have been developed to aid in this process. Some methods, such as GOMS, require detailed task descriptions <ref> [3, 14] </ref>. While these methods can take many aspects of the interactions into consideration, detailed task descriptions can be difficult to obtain and small changes in the tasks may require extensive reanalysis. In addition, performing detailed task analyses can require training that may be both expensive and impractical [14]. <p> While these methods can take many aspects of the interactions into consideration, detailed task descriptions can be difficult to obtain and small changes in the tasks may require extensive reanalysis. In addition, performing detailed task analyses can require training that may be both expensive and impractical <ref> [14] </ref>. Other methods, like the work of Tullis, require no task descriptions [29]. <p> Performing the analysis in a reliable way and constructing the necessary production rule models can make GOMS difficult to use <ref> [14] </ref>. The hierarchical structure of a GOMS analysis provides a good framework for performing a task analysis. This hierarchical structure often limits the amount of reanalysis that is necessary when small changes are made to the task description. <p> This hierarchical structure often limits the amount of reanalysis that is necessary when small changes are made to the task description. However, using GOMS effectively often requires training that can be both expensive and impractical. Much of the current GOMS research focuses on overcoming this limitation <ref> [14] </ref>. The difficulties with this, and the two previous methods, provide motivation to develop methods that can take advantage of simple task descriptions. 2 Lohse developed a model to predict the amount of time necessary to extract information from a graph [17]. <p> These times compare favorably with other, more comprehensive, methods such as heuristic evaluations, cognitive walkthroughs, and usability testing [10]. The level of detail required for a GOMS analysis may introduce difficulties, but the structured hierarchical approach to a task analysis is a valuable tool <ref> [14] </ref>. A GOMS analysis involves specifying four types of information. First, the users Goals must be identified. This step is also necessary for an LA task analysis. Second, the Operators or actions that the user executes must be identified. <p> Although many methods for performing task analyses exist, additional research is necessary to make these methods easier to use. These methods are not discussed here, but for further references see: <ref> [1, 6, 7, 11, 12, 14, 20 and 23] </ref>. Computing the LA-optimal Layout The method used to search for an LA-optimal solution requires unit sized objects be placed in a rectangular grid. Larger objects are created using constraints as discussed in the section describing the implementation of LA.
Reference: [15] <author> W. Kim and J. Foley, DON: </author> <title> User Interface Presentation Design Assistant, </title> <booktitle> UIST 90 Proceedings, </booktitle> <month> October </month> <year> 1990, </year> <pages> pp. 10-20. </pages>
Reference-contexts: Although problems exist, cognitive walkthroughs appear promising as a technique for evaluating many aspects of the usability of a new or proposed interface. Automatic Layout Generation Numerous research systems have been developed to automatically or semiautomatically lay out user interfaces <ref> [5, 15, 19, 28 and 32] </ref>. These systems have varied in many ways. Some systems are based on the underlying structure of the information to be presented and others are based on sets of guidelines. Most of these systems allow designers to modify the automatically generated layouts.
Reference: [16] <author> C. Lewis, P. Polson, C. Wharton and J. Rieman, </author> <title> Testing a walkthrough methodology for theory-based design of Walk-Up-and-Use interfaces, </title> <booktitle> CHI 90 Proceedings, </booktitle> <month> April </month> <year> 1990, </year> <pages> pp. 235-242. </pages>
Reference-contexts: Cognitive Walkthroughs are a relatively new technique in which the designer (or design team) specifies the tasks to be performed, the sequences of actions necessary to complete the tasks. Once these steps are completed they evaluate the ease of learning for the proposed interface <ref> [16] </ref>. Initially, cognitive walkthroughs were developed for evaluating Walk-Up-and-Use systems and several applications of this technique have been reported with varying success [10, 16 and 31]. The results indicate that cognitive walkthroughs have potential for evaluating user interfaces, but several important issues must be addressed before they will be practical.
Reference: [17] <author> J. Lohse, </author> <title> A Cognitive Model for the Perception and Understanding of Graphics, </title> <booktitle> CHI 91 Proceedings, </booktitle> <month> April </month> <year> 1991, </year> <pages> pp. 137-144. 22 </pages>
Reference-contexts: The difficulties with this, and the two previous methods, provide motivation to develop methods that can take advantage of simple task descriptions. 2 Lohse developed a model to predict the amount of time necessary to extract information from a graph <ref> [17] </ref>. This work focused on where users must look and the cognitive tasks required at each step. This model emphasizes the tasks users are performing, but there are major differences between Lohses work and the current research. <p> Fitts Law states that the time to complete a movement is a logarithmic function of the ratio of the distance to the target and the size of the target [2, 18].), the number of eye fixations needed to extract the necessary information <ref> [17] </ref>, the number of changes in direction, or any other measure the designer feels is important. Currently, a measure of the distance involved in completing the tasks (based on Fitts' Law) is used to assign a cost to a layout.
Reference: [18] <author> I. S. MacKenzie and W. Buxton, </author> <title> Extending Fitts Law to Two-Dimensional Tasks, </title> <booktitle> CHI 92 Proceedings, </booktitle> <month> May </month> <year> 1992, </year> <pages> pp. 219-226. </pages>
Reference-contexts: Fitts Law states that the time to complete a movement is a logarithmic function of the ratio of the distance to the target and the size of the target <ref> [2, 18] </ref>.), the number of eye fixations needed to extract the necessary information [17], the number of changes in direction, or any other measure the designer feels is important.
Reference: [19] <author> J. Mackinlay, </author> <title> Applying a Theory of Graphical Presentation to the Graphic Design of User Interfaces, </title> <booktitle> UIST 88 Proceedings, </booktitle> <month> October </month> <year> 1988, </year> <pages> pp. 179-189. </pages>
Reference-contexts: Although problems exist, cognitive walkthroughs appear promising as a technique for evaluating many aspects of the usability of a new or proposed interface. Automatic Layout Generation Numerous research systems have been developed to automatically or semiautomatically lay out user interfaces <ref> [5, 15, 19, 28 and 32] </ref>. These systems have varied in many ways. Some systems are based on the underlying structure of the information to be presented and others are based on sets of guidelines. Most of these systems allow designers to modify the automatically generated layouts.
Reference: [20] <author> R. B. Miller, </author> <title> Task Description and Analysis, </title> <editor> In R. M. Gagne (Ed.), </editor> <booktitle> Psychological principles in system development, </booktitle> <address> New York: </address> <publisher> Holt, Rinehart and Winston, </publisher> <year> 1963. </year>
Reference: [21] <author> S. Payne and T. Green, </author> <title> Task-Action Grammars: A model of the mental representation of task languages, </title> <journal> Human-Computer Interaction, </journal> <volume> vol. 2, no. 2, </volume> <pages> pp. 93-133. </pages>
Reference-contexts: Reisner proposed a formal grammar to describe the actions users perform [25]. Payne and Green expanded on this work by addressing multiple levels of consistency and the completeness of the language <ref> [21] </ref>. A more recently developed task description language, the User Action Notation (UAN), may also prove useful for describing the users tasks [9]. Using the task descriptions, LA appropriately emphasizes each sequence of actions when computing the cost of a layout. There are two methods for generating task descriptions.
Reference: [22] <author> G. Perlman, </author> <title> An Axiomatic Model of Information Presentation, </title> <booktitle> Proceedings of the 31st Annual Meeting of the Human Factors Society, </booktitle> <pages> pp. 1129-1233, </pages> <year> 1987. </year>
Reference-contexts: Tullis did provide recommended values for each metric to guide designers, but did not explore the benefits of task descriptions. Perlman developed an Axiomatic Model of Information Presentation <ref> [22] </ref>. His model allows designers to specify relationships between the information to be presented and rules for how to show these relationships. A prototype system incorporated this model and provides feedback about potential problems with an interface design. However, there is no mechanism to directly compare alternative layouts. <p> A prototype system incorporated this model and provides feedback about potential problems with an interface design. However, there is no mechanism to directly compare alternative layouts. The unique contribution of this model is that it begins with the intentions of the designer <ref> [22] </ref>. This is an advance over Tullis work which did not directly incorporate either the designers intent or the users tasks. However, it stresses the intentions of the designer and not the users tasks.
Reference: [23] <author> M. D. Phillips, H. S. Bashinski, H. L. Ammerman, and C. M. </author> <title> Fligg Jr ., A Task Analytic Approach to Dialogue Design, </title> <editor> In M Helander (Ed.), </editor> <booktitle> Handbook of Human-Computer Interaction (pp. </booktitle> <pages> 835-857). </pages> <address> Amsterdam: </address> <publisher> Elsevier Science Publishers, </publisher> <year> 1988. </year>
Reference: [24] <author> L. B. Protsko, P . G. Sorenson, J. P . Tremblay, and D. A. Schafer, </author> <title> Towards the Automatic Generation of Software Diagrams, </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> vol. 17, no. 1, </volume> <pages> pp. 10-21, </pages> <year> 1991. </year>
Reference-contexts: The order is determined in a manner similar to that used by Protsko et al. to arrange data flow diagrams <ref> [24] </ref>. The object with the highest link value connecting it to the start node is placed first. Then the object with the highest link value connecting it to a previously placed object or the start node is placed. This continues until all widgets are placed. <p> Currently, Fitts Index of Difficulty is used [2,18], but other measures can be added easily. Each measure should be validated before it is made available for use.). Constraints The current implementation allows three types of constraints on widgets <ref> [24] </ref>. Constraints can be used to create compound widgets or to enforce design guidelines. Each time a widget is placed when searching for the LA-optimal solution all constraints on that widget are verified. If any constraints have been violated the partial solution is removed from the search.
Reference: [25] <author> P. Reisner, </author> <title> Formal grammar and human factors design of an interactive graphics system, </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> vol. SE-7, no. 2, </volume> <pages> pp. 229-240. </pages>
Reference-contexts: Formal methods for describing the tasks may prove useful for verifying the accuracy and completeness of the task descriptions [27]. Reisner proposed a formal grammar to describe the actions users perform <ref> [25] </ref>. Payne and Green expanded on this work by addressing multiple levels of consistency and the completeness of the language [21]. A more recently developed task description language, the User Action Notation (UAN), may also prove useful for describing the users tasks [9].
Reference: [26] <author> A. Sears, </author> <title> Layout Appropriateness: Guiding interface design and evaluation with simple task descriptions, </title> <type> PhD Dissertation, </type> <institution> Computer Science Department, University of Maryland, College Park, MD. </institution>
Reference-contexts: Improving the layout for methods that are used frequently, but have small values in the sensitivity graph, will often result in an overall increase in LA. Validating LA using distance An experiment was conducted to evaluated the effectiveness of using LA to evaluate interfaces <ref> [26] </ref>. The cost of an interface was based on distance as described above. Subjects used three alternative layouts for two interfaces to simulate actual tasks. Task completion times and user preferences were measured. Three mockups were created which contained all of the major components of a screen developed for NASA.
Reference: [27] <author> B. Shneiderman, </author> <title> Designing the User Interface (2nd Edition), </title> <address> Reading, MA: </address> <publisher> Addison-Wesley, </publisher> <year> 1992, </year> <pages> pp. 55-60. </pages>
Reference-contexts: The tabular representation is easier to interpret and is more useful when analyzing the sensitivity of LA to changes in the task description. Formal methods for describing the tasks may prove useful for verifying the accuracy and completeness of the task descriptions <ref> [27] </ref>. Reisner proposed a formal grammar to describe the actions users perform [25]. Payne and Green expanded on this work by addressing multiple levels of consistency and the completeness of the language [21].
Reference: [28] <author> P. Szekely, </author> <title> Template-Based Mapping of Application Data to Interactive Displays, </title> <booktitle> UIST 90 Proceedings, </booktitle> <month> October </month> <year> 1990, </year> <pages> pp. 1-9. </pages>
Reference: [29] <author> T. Tullis, </author> <title> A system for evaluating screen formats: Research and application, </title> <editor> In: R. Hartson & D. Hix (Eds.), </editor> <booktitle> Advances in Human-Computer Interaction, </booktitle> <volume> vol. 2, </volume> <pages> pp. 214-286, </pages> <year> 1988. </year>
Reference-contexts: In addition, performing detailed task analyses can require training that may be both expensive and impractical [14]. Other methods, like the work of Tullis, require no task descriptions <ref> [29] </ref>. Task-independent methods can provide useful information, but cannot evaluate the appropriateness of an interface for the tasks users actually perform. 1 If methods requiring detailed task descriptions are viewed as one end of a spectrum, task--independent methods could be the other end. <p> In this situation, designers can extract task frequencies from the detailed task description allowing LA to be calculated. LA can then be used to supplement the detailed task information. Related research User Interface Design and Evaluation Tullis investigated predicting user performance for noninteractive alphanumeric displays <ref> [29] </ref>. He explored the relationship between several metrics including overall density of the screen, local density of the screen, grouping of objects, and layout complexity and time required for users to extract information from the display.
Reference: [30] <author> L. Veach, </author> <type> Personal Communication, </type> <institution> NASA, Houston, TX, </institution> <month> December 3, </month> <year> 1991. </year>
Reference-contexts: Task completion times and user preferences were measured. Three mockups were created which contained all of the major components of a screen developed for NASA. A task description was obtained from NASA personnel through an interview that required less than one-half of an hour <ref> [30] </ref>. The first layout, Figure 10, was the layout originally created for NASA and has an LA value of 72. The second layout was created by moving the confirmation dialog box closer to the button which causes it to appear and has an LA value of 83.
Reference: [31] <author> C. Wharton, J. Bradford, R. Jeffries and M. Franzke, </author> <title> Applying cognitive walkthroughs to more complex user interfaces: Experiences, issues, and recommendations, </title> <booktitle> CHI 92 Proceedings, </booktitle> <month> May </month> <year> 1992, </year> <pages> pp. 381-388. </pages>
Reference: [32] <author> B. V. Zanden and B. A. Myers, </author> <title> Automatic, Look-and-Feel Independent Dialog Creation for Graphical User Interface, </title> <booktitle> CHI 90 Proceedings, </booktitle> <month> April </month> <year> 1990, </year> <pages> pp. 27-34. 23 </pages>
References-found: 32

