URL: ftp://ftp.cs.colorado.edu/pub/distribs/Nutt/gryphon.ps
Refering-URL: http://www.cs.colorado.edu/~nutt/Home.html
Root-URL: http://www.cs.colorado.edu
Email: griff@cs.colorado.edu  
Phone: (303)492-7906 Voice (303)492-2844 Fax  
Title: Tailorable Location Policies for Distributed Object Systems  
Author: Adam Jonathan Griff and Gary J. Nutt 
Note: Full Paper  
Address: Campus Box 430  Boulder Boulder, CO 80303-0430  
Affiliation: Department of Computer Science,  University of Colorado at  
Abstract: Distributed object applications rely hea vily on distributed systems and objects. Solutions using CORBA with its location transparency are inefficient and do not scale for high-throughput netw orked applications. Our work addresses these inefficiencies by creating a mechanism enabling applications to inuence the systems object location policies on an object-by-object basis.We also provide an analytic comparison of distributed object systems that do and do not support location transparency and caching policies. The analysis shows that by using tailorable policies it is possible to achie ve significantly increased performance through the reduction of the message traffic so that it is only a fraction of a percent of the message traffic required to implement a standard CORBA policy. 
Abstract-found: 1
Intro-found: 1
Reference: [AS94] <author> Ahamad, Mustaque, and Shawn Smith, </author> <title> Detecting Mutual Consistency of Shared Objects, </title> <booktitle> Pro ceedings of Workshop on Mobile Computing Systems and Applications, </booktitle> <month> December, </month> <year> 1994 </year>
Reference-contexts: In Section 7 we describe the Virtual Planning Room (VPR), our Distributed Virtual Environment (DVE) prototype. We then show workload characterization in the VPR and provide comparisons between object utilization scenarios. Section 8 discusses our conclusions. 2 Related Work Ahamad and Smith <ref> [AS94] </ref> described a technique for detecting mutual-consistency requirements in shared objects. By determining where the object is being used and the shared repositories where the object is being stored, the object can be cached where it is frequently accessed. This reduces data access latency and the associated communication overhead.
Reference: [BAB+96] <author> Bellissard, Luc, Slim Ben Atallah, Fabienne Boyer, and Michel Riveill, </author> <title> Distributed Application Configuration, </title> <booktitle> Proc. 16th International Conference on Distributed Computing Systems, </booktitle> <editor> Hong-Kong - IEEE Computer Society, </editor> <title> just did not have time to May, </title> <booktitle> 1996, </booktitle> <pages> 579-585. </pages>
Reference-contexts: This project provides the application programmer a way to gain access to the high 3 performance features of the underlying object management system. Project SIRAC <ref> [BAB+96] </ref> incorporates a technique for creating distributed applications for real time interaction using multiple workstations. This project uses Olan, a language designed for run time support of distributed application. Brown and Najork [BN96] have created distributed active objects, Oblets written in Obliq.
Reference: [Blac97] <author> Black Sun, </author> <title> Black Sun Community Server, </title> <month> June, </month> <year> 1997. </year> <note> Computer software available URL: http:// ww3.blacksun.com/launch/server.html </note>
Reference-contexts: This strategy requires that the server have knowledge of the location and movement of each avatar. The Black Sun Community Server is a DVE product that runs over the World Wide Web (WWW) <ref> [Blac97] </ref>. This product has also developed domain specific assumptions and algorithms to aid in communication reduction. For example, to aid in scalability, as the density of users increases the visible range of an object is reduced (hence reducing the number of update messages on the network).
Reference: [Birm97] <author> Birman, Ken, </author> <title> Ensemble system web pages, </title> <note> 1997. Available URL: http://simon.cs.cornell.edu/Info/ Projects/Ensemble/overview.html </note>
Reference-contexts: We presume that the base ORB has its own internal mechanism for implementing object location and caching, for example in Electra/Ensemble (E/E) <ref> [Birm97] </ref> [MS97]. The Gryphon uses E/E, invoking the internal location and update features via method calls provided by the ORB implementation with the enhanced mechanisms. The technique we are using to change an objects location generates the same amount of traffic as our other methods.
Reference: [BN96] <author> Brown, Marc H. and Marc A. Najork, </author> <title> Distributed Active Objects. </title> <note> Digital SRC Research Report, 141a. </note> <month> April, </month> <year> 1996. </year>
Reference-contexts: Project SIRAC [BAB+96] incorporates a technique for creating distributed applications for real time interaction using multiple workstations. This project uses Olan, a language designed for run time support of distributed application. Brown and Najork <ref> [BN96] </ref> have created distributed active objects, Oblets written in Obliq. The Obliq language facilitates the distribution of objects over the World Wide Web by providing distribution primitives. There is a large research and product development community working on object management in DVEs.
Reference: [Chap97] <author> Chappell, David, </author> <title> An Introduction to ActiveX and COM, </title> <booktitle> USENIX 3rd Conference on Object-Ori ented Technologies and Systems (COOTS97), </booktitle> <address> Portland, Oregon, </address> <month> June, </month> <year> 1997 </year>
Reference-contexts: Research and commercial organizations have expended considerable effort to combine object technology with distributed systems, resulting in the creation of CORBA [OMG95] [Scot97], DCOM <ref> [Chap97] </ref>, and others. CORBA is an open specification that uses location transparency and focuses on the combination of heterogeneous distributed systems and object technology.
Reference: [Funk95] <author> Funkhouser, Thomas A., </author> <title> RING: A Client-Server System for Multi-User Virtual Environments, </title> <booktitle> ACM for 1995 Symposium on Interactive 3D Graphics, </booktitle> <address> Monterey CA., </address> <year> 1995, </year> <pages> 85-92. </pages>
Reference-contexts: There is a large research and product development community working on object management in DVEs. Some of these systems have incorporated domain specific update strategies. For example, the RING system with a centralized multi-casting subsystem incorporates knowledge about visual and auditory occlusion to reduce consistency updates for cached objects <ref> [Funk95] </ref>. The idea is to allow the server to keep track of which objects are visible and within hearing distance of an avatar at a client machine, then to only propagate changes to the client if it effects these objects.
Reference: [HAB96] <author> Hassen, Saniya Ben, Irina Athanasiu, and Henri E. Bal, </author> <title> A Flexible Operation Execution Model for Shared Distributed Objects, </title> <booktitle> Conference on Object-Oriented Programming Systems, Languages and Appli cations (OOPSLA 96), </booktitle> <address> San Jose, CA, </address> <month> October, </month> <year> 1996. </year>
Reference: [HBB+97] <author> Humphrey, Marty, Toby Berk, Scott Brandt, and Gary Nutt. </author> <title> Dynamic Quality of Service Resource 16 Management for Multimedia Applications on General Purpose Operating Systems. </title> <booktitle> 1997 IEEE Workshop on Middleware for Distributed Real-Time Systems and Services, </booktitle> <address> San Francisco, CO, </address> <month> December, </month> <year> 1997. </year>
Reference-contexts: There was a spectrum of performance problems: Part of the bottleneck was in the rendering load on the graphics processor; another part was due to the complexity of generating information to be displayed; we address these issues in ongoing work described elsewhere <ref> [HBB+97] </ref>.
Reference: [Holb95] <author> Holbrook, Hugh, </author> <title> Distributed Interactive Simulation, </title> <month> June, </month> <year> 1995, </year> <note> Available at URL: http://www dsg.stanford.edu/DSGHomePage.html. </note>
Reference-contexts: The Distributed Interactive Simulation (DIS) varies an objects update rate based on the avatars distance from the object (this concept is based on level of detail notion often used in the graphics community) <ref> [Holb95] </ref>.
Reference: [MS97] <author> Maffeis, Silvano, and Douglas C. Schmidt, </author> <title> Constructing Reliable Distributed Communication Systems with CORBA, </title> <journal> IEEE Communications, </journal> <volume> Vol 14, No. </volume> <month> 2 (February </month> <year> 1997). </year>
Reference-contexts: We presume that the base ORB has its own internal mechanism for implementing object location and caching, for example in Electra/Ensemble (E/E) [Birm97] <ref> [MS97] </ref>. The Gryphon uses E/E, invoking the internal location and update features via method calls provided by the ORB implementation with the enhanced mechanisms. The technique we are using to change an objects location generates the same amount of traffic as our other methods.
Reference: [Nutt95] <author> Nutt, Gary J., </author> <title> Model-Based Virtual Environments for Collaboration, </title> <institution> University of Colorado, Department of Computer Science Technical Report No. CU-CS-800-95, </institution> <month> December, </month> <year> 1995. </year>
Reference-contexts: The worker avatar objects change their state frequently, though other office objects do not tend to change at all. Scenario D: Model-Based Virtual Environment. Elsewhere we have described model-based virtual environments as collaborative environments containing a model to provide context for the collaboration <ref> [Nutt95] </ref> [Nutt97]. In these systems, multiple workers interact with one another and with isolated parts of a larger artifact (a shared model of work, software methodology, etc.).
Reference: [Nutt97] <author> Nutt, Gary J., </author> <title> The Evolution Toward Flexible Workow Systems, </title> <journal> Distributed Systems Engineer ing, </journal> <volume> Vol. 3, No. </volume> <month> 4 (December </month> <year> 1996), </year> <pages> 276-294. </pages>
Reference-contexts: The worker avatar objects change their state frequently, though other office objects do not tend to change at all. Scenario D: Model-Based Virtual Environment. Elsewhere we have described model-based virtual environments as collaborative environments containing a model to provide context for the collaboration [Nutt95] <ref> [Nutt97] </ref>. In these systems, multiple workers interact with one another and with isolated parts of a larger artifact (a shared model of work, software methodology, etc.).
Reference: [NBH+97] <author> Nutt, Gary J., Toby Berk, Scott Brandt, Marty Humphrey, and Sam Siewert, </author> <title> Resource Management for a Virtual Planning Room, </title> <booktitle> Proceedings of the Third International Workshop on Multimedia Infor mation Systems, </booktitle> <address> Como, Italy, </address> <month> September, </month> <year> 1997. </year>
Reference-contexts: 60 70 80 90 100 10 Values for N Graph of T app 0.1 10 1000 100000 Log Msg/Sec Values for N Graph ofT VPR 12 7 The DVE Prototype We have constructed an extensible desktop DVE application, called the Virtual Planning Room (VPR), using C++ and distributed objects [NAB+97] <ref> [NBH+97] </ref>. The system environment was composed of a set of contemporary commodity workstations (200 MHz Pentium Pro PCs) interconnected with a 10 Mbps LAN.
Reference: [NAB+97] <author> Nutt, Gary J., Joe Antell, Scott Brandt, Chris Gantz, Adam Griff, and Jim Mankovich, </author> <title> Software Support for a Virtual Planning Room, </title> <institution> University of Colorado, Department of Computer Science Technical Report No. CU-CS-800-95, </institution> <month> December, </month> <year> 1995. </year>
Reference-contexts: 50 60 70 80 90 100 10 Values for N Graph of T app 0.1 10 1000 100000 Log Msg/Sec Values for N Graph ofT VPR 12 7 The DVE Prototype We have constructed an extensible desktop DVE application, called the Virtual Planning Room (VPR), using C++ and distributed objects <ref> [NAB+97] </ref> [NBH+97]. The system environment was composed of a set of contemporary commodity workstations (200 MHz Pentium Pro PCs) interconnected with a 10 Mbps LAN.
Reference: [OMG95] <author> OMG, </author> <title> The Common Object Request Broker: Architecture and Specification, </title> <type> OMG Technical Document, </type> <institution> PTC/96-03-04, </institution> <month> July, </month> <year> 1995. </year>
Reference-contexts: Research and commercial organizations have expended considerable effort to combine object technology with distributed systems, resulting in the creation of CORBA <ref> [OMG95] </ref> [Scot97], DCOM [Chap97], and others. CORBA is an open specification that uses location transparency and focuses on the combination of heterogeneous distributed systems and object technology.
Reference: [SA97] <author> Schwan, Karsten and Mustaque Ahamad, </author> <title> The COBS Project - Configurable OBjectS for High Per formance Systems, </title> <month> May, </month> <year> 1997. </year>
Reference-contexts: This reduces data access latency and the associated communication overhead. This research used causal consistency, a form of weak consistency, to regulate consistency maintenance of the object copies. The Configurable OBjects (COBS) project at Georgia Institute of Technology is building a CORBA compliant system to run on high-performance architectures <ref> [SA97] </ref>. This project tailors the performance levels of the objects at run-time based on the requirements of the application.
Reference: [Scot97] <author> Scott, Christopher W., ANSAware and ORBeline: </author> <title> a comparison, </title> <note> 1997. Available at URL: http:// www.dcc.ufal.br/~cws/ </note>
Reference-contexts: Research and commercial organizations have expended considerable effort to combine object technology with distributed systems, resulting in the creation of CORBA [OMG95] <ref> [Scot97] </ref>, DCOM [Chap97], and others. CORBA is an open specification that uses location transparency and focuses on the combination of heterogeneous distributed systems and object technology.
Reference: [Siew97] <author> Siewert, Sam, </author> <title> Operating Systems Support for Parametric Control of Isochronous and Sporadic Execution Streams in Multiple Time Frames, </title> <institution> University of Colorado, Department of Computer Science, </institution> <type> Ph.D. dissertation proposal, </type> <month> June, </month> <year> 1996. </year>
Reference-contexts: In Section 6 we will use these scenarios to represent the load on the object 1. FLOATERS was designed and built by Sam Siewert as a testbed facility for his thesis work on distributed real-time control <ref> [Siew97] </ref> [SNH97]. The FLOATERS extension is available because Siewerts work consti tutes another part of the project. Object Manager VPR Domain Extensions VPR Client Domain Extensions Object Manager Interface Other Client Object Manager Interface 13 management facilities. Scenario A: Virtual Art Museum.
Reference: [SNH97] <author> Siewert, Sam, Gary J. Nutt, and Marty Humphrey, </author> <title> Real-time Parametric Controlled In-Kernel Pipelines. </title> <booktitle> Proceedings of the Thirds IEEE Real-Time Technology and Application Symposium, </booktitle> <address> Montreal, Canada, </address> <month> June, </month> <year> 1997. </year>
Reference-contexts: In Section 6 we will use these scenarios to represent the load on the object 1. FLOATERS was designed and built by Sam Siewert as a testbed facility for his thesis work on distributed real-time control [Siew97] <ref> [SNH97] </ref>. The FLOATERS extension is available because Siewerts work consti tutes another part of the project. Object Manager VPR Domain Extensions VPR Client Domain Extensions Object Manager Interface Other Client Object Manager Interface 13 management facilities. Scenario A: Virtual Art Museum.
Reference: [TCH97] <author> Tanenbaum, Jay M., Tripatinder S. Chowdhry, and Kevin Hughes, </author> <title> Eco System: An Internet Com merce Architecture, </title> <journal> IEEE Computer, </journal> <volume> Vol. 30, No. </volume> <month> 5 (May </month> <year> 1997), </year> <pages> 48-55. </pages>
Reference-contexts: It defines an architecture in which objects, written in one language executing on one computer, can invoke methods of objects written in another language running on a different computer. Tenenbaum, Chodhry, and Hughes <ref> [TCH97] </ref> provide one of many examples of the growing acceptance of the CORBA standard in the internet market. We have speculated that applications could have considerable inuence on remote object access performance if the applications could supply hints, regarding the object management policy, to the distributed object system.
References-found: 21

