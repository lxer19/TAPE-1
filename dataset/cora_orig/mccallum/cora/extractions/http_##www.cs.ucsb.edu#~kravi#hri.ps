URL: http://www.cs.ucsb.edu/~kravi/hri.ps
Refering-URL: http://www.cs.ucsb.edu/~kravi/hri.html
Root-URL: http://www.cs.ucsb.edu
Title: Indexing Hierarchical Data  
Author: K. V. Ravikanth Divyakant Agrawal Amr El Abbadi Ambuj Singh Terence R. Smith 
Address: Santa Barbara, CA 93106  
Affiliation: University of California at Santa Barbara  
Abstract: Map and image data in geographic information systems are inherently hierarchical with multiple levels of spatial nesting. In this paper, we propose efficient index structures for such nested data that exhibit good cache performance. We first propose a structure called the IB-trees to index non-nested unidimensional intervals. The hallmark of the IB-trees is that they have logarithmic worst case bounds on all search, insert, delete and containment operations. Using the IB-trees, we propose an index structure called the unidimensional LIB-structures for indexing arbitrary unidimensional data. We then extend the structure to multiple dimensions while retaining the virtues of unidimensional structures. The resulting organization has three main advantages: (1) it adapts to the amount of resources available; (2) it reflects the inherent hierarchy of the data and (3) it can choose the indexing strategy at each level based on the data characteristics at that level. We conclude our analysis with experimental results comparing the performance of the above strategy and R* trees on data from the Alexandria Gazetteer.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Aho, A. V., Hopcroft, J. E., and Ullman, J. D. </author> <title> "The design and analysis of computer algorithms", </title> <publisher> Addison-Wesley, </publisher> <address> MA, </address> <year> 1974. </year>
Reference: [2] <author> Ang, C. H. and Tan, K. P. </author> <title> "The interval B-tree: A new time indexing structure", </title> <booktitle> Proc. of the 5th Australian Database Conference, </booktitle> <address> Christchurch, New Zealand, </address> <year> 1994, </year> <pages> pp 162-178. </pages>
Reference: [3] <author> Ang, C. H. and Tan, K. P. </author> <title> "The interval B-tree", </title> <journal> Information Processing Letters, </journal> <volume> Vol. 53, </volume> <year> 1995, </year> <pages> pp 85-89. </pages>
Reference: [4] <author> B U Pagel, H W Siz, H. Toben, P. Widmayer, </author> <title> "Towards an Analysis of Range Query Performance", </title> <booktitle> Proc. of the 12th ACM PODS Symposium, </booktitle> <year> 1993. </year>
Reference-contexts: Since our data set is 2-dimensional in nature, we experimented with 2-dimensional queries. The queries generated are ensured to span some percentage of the domain (California) along each dimension. Similar assumptions are made in <ref> [4] </ref> and [13]. The query ranges we have chosen span from 0.1% to 10%. For each query range, we generated 100 queries of exact match and containment searches.
Reference: [5] <author> Bentley, J. L. </author> <title> "Algorithms for Klee's rectangle problems", </title> <institution> Computer Science Department, Carnegie-Mellon University, Pittsburgh, </institution> <year> 1977. </year>
Reference: [6] <author> Elamsri, R., Wuu, G. T. J. and Kim, Y. J. </author> <title> "The time index: An access structure for temporal data", </title> <booktitle> Proc. of 16th VLDB Conf., </booktitle> <address> Brisbane, Australia, </address> <year> 1990, </year> <pages> pp 1-12. </pages>
Reference: [7] <author> Freeston, M. </author> <title> "The BANG File: a new kind of grid file", </title> <booktitle> Proc. of the ACM SIGMOD Intl. Conf. on Management of Data, </booktitle> <pages> pp 260-269, </pages> <year> 1987. </year>
Reference: [8] <author> Guttman, A. </author> <title> "R-trees : A dynamic index structure for spatial searching", </title> <booktitle> Proceedings of the ACM SIGMOD Intl. Conf. on Management of Data, </booktitle> <pages> pp 47-57, </pages> <year> 1984. </year>
Reference: [9] <author> Hinrichs, H. </author> <title> "Implementation of the grid file: design concepts and experience", </title> <journal> BIT, </journal> <volume> Vol. 25, No. 4, </volume> <year> 1985, </year> <pages> pp 569-592. </pages>
Reference: [10] <author> Lin, K. I., Jagadish, H.,, and Faloutsos, C., </author> <title> "The TV-tree an index structure for high dimensional data", </title> <journal> VLDB Journal, </journal> <volume> Vol. 3, </volume> <pages> pp 517-542, </pages> <month> Oct., </month> <year> 1994.. </year>
Reference: [11] <author> Kolovson, C. and Stonebraker, M. </author> <title> "Segment Indexes: Dynamic idexing techniques for multidimensional interval data", </title> <booktitle> Proc. ACM SIGMOD Intl. Conf. on Management of Data, </booktitle> <address> Denver, </address> <year> 1991, </year> <pages> pp 138-147. </pages>
Reference: [12] <author> Kolovson, C. and Stonebraker, M. </author> <title> "Indexing Techniques for Historical Databases ", Proc. </title> <booktitle> of the 5th Intl. Conf. on Data Engg., </booktitle> <address> Los Angeles, CA, </address> <month> Feb. </month> <year> 1989. </year>
Reference: [13] <author> Kriegel H. P., Schiwietz M., Schneider R., and Seeger B. </author> <title> "Performance Comparison of Point and Spatial Access Methods", pp 88-114, Design and Implementation of Large Spatial Databases, </title> <booktitle> First Symposium SSD `89, </booktitle> <address> Santa Barbara, </address> <year> 1989. </year>
Reference-contexts: Since our data set is 2-dimensional in nature, we experimented with 2-dimensional queries. The queries generated are ensured to span some percentage of the domain (California) along each dimension. Similar assumptions are made in [4] and <ref> [13] </ref>. The query ranges we have chosen span from 0.1% to 10%. For each query range, we generated 100 queries of exact match and containment searches.
Reference: [14] <author> Kumar, Akhil. "G-Tree: </author> <title> A new data structure for organizing multidimensional data", </title> <journal> IEEE Transactions on Knowledge and Data Engg., </journal> <volume> Vol. 6, No. 2, </volume> <pages> pp 341-347, </pages> <month> April </month> <year> 1994. </year>
Reference: [15] <author> Lomet, D. B. and Salzberg, B. </author> <title> "The hB-tree: A multiattribute indexing method with good guaranteed performance", </title> <journal> ACM Trans. on Database Systems, </journal> <volume> Vol. 15, No. 4, </volume> <pages> pp 625-658, </pages> <month> Dec. </month> <year> 1990. </year>
Reference: [16] <author> Nievergelt, J. Hinterberger, H. and Sevcik, K. C. </author> <title> "The grid file: an adaptable, symmetric multikey file structure", </title> <journal> ACM Trans. on Database Systems,Vol. </journal> <volume> 9, No. 1, </volume> <month> March </month> <year> 1984, </year> <pages> pp 38-71. </pages>
Reference: [17] <author> Norbert Beckmann, Hans-Peter Kriegel, Ralf Schneider, Bernhard Seeger. </author> <title> "The R* tree:An Efficient and Robust Access Method for points and rectangles", </title> <booktitle> Proceedings of the ACM SIG-MOD International Conf. on Management of Data, </booktitle> <month> May 23-25, </month> <year> 1990, </year> <pages> pp 322-331, </pages> <address> Atlanta City, USA </address>
Reference: [18] <author> Ouksel, M. A., Mayer O. </author> <title> "A robust and efficient spatial data structure", </title> <publisher> Acta Informatica 29, Springer-Verlag, </publisher> <pages> pp 335-373, </pages> <year> 1992. </year>
Reference: [19] <author> Cormen, Leiserson and Rivest. </author> <title> "Introduction to Algorithms", </title> <publisher> The MIT Press, </publisher> <year> 1990. </year>
Reference: [20] <author> Robinson, J. T. </author> <title> "The K-D-B tree: a search structure for large multidimensional dynamic indexes", </title> <booktitle> Proc. of ACM SIGMOD Intl. Conf. on Management of Data, </booktitle> <pages> 10-18, </pages> <year> 1981. </year>
Reference-contexts: introduction has an effect on the query algorithms. For example, a containment query has to check for intersection with the virtual boxes. The partitioning of the points into disjoint rectangles could be achieved in a number of different ways. For our purposes, we used a K-D-B tree <ref> [20] </ref>.
Reference: [21] <author> Samet, H. </author> <title> "The design and analysis of spatial data structures", </title> <publisher> Addison-Wesley Publishing Co., </publisher> <year> 1989. </year>
Reference: [22] <author> Seeger B., Kriegel, H. P. </author> <title> "The Buddy Tree: An Efficient and Robust Access method for spatial databases", </title> <booktitle> Proceedings of the Sixteenth VLDB Conference, </booktitle> <address> Brisbane, </address> <year> 1990. </year>
Reference: [23] <author> Sellis, T., Roussopoulos, N., Faloutsos, C. </author> : <title> "The R+ tree: a dynamic index for multidimensional objects", </title> <booktitle> Proc. of 13th Intl. Conf. on Very Large Databases, </booktitle> <pages> pp 507-518, </pages> <year> 1988. </year>
Reference: [24] <author> Smith, T. R. and J. Frew, </author> <title> "Alexandria Digital Library", </title> <journal> Communications of the ACM , 38(4): </journal> <pages> 61-62, </pages> <month> April </month> <year> 1995. </year>
Reference: [25] <author> Whang, K. Y, Krishnamurthy, R. </author> <title> "Multilevel grid files", </title> <type> Technical Report, </type> <institution> IBM Research Lab., Yorktown heights, </institution> <year> 1985. </year> <month> 18 </month>
References-found: 25

