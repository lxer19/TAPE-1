URL: http://www-mice.cs.ucl.ac.uk/multimedia/publications/sot.ps
Refering-URL: http://www-mice.cs.ucl.ac.uk/multimedia/publications/
Root-URL: http://www.cs.ucl.ac.uk
Email: fI.Kouvelas,V.Hardman,J.Crowcroftg@cs.ucl.ac.uk  
Title: Network Adaptive Continuous-Media Applications Through Self  
Author: Organised Transcoding Isidor Kouvelas, Vicky Hardman and Jon Crowcroft 
Address: College London  
Affiliation: Department of Computer Science University  
Abstract: With the deployment of the Mbone, multimedia conferencing is becoming a common practice on the Internet. In order to coexist with traditional services like email and file transfer, mechanisms to fairly share available bandwidth have to be developed for real-time audio and video media streams. The network scale and heterogeneity in available bandwidth complicate the design of network adaptive multicast applications. This paper presents a new scalable architecture for congestion controlled multicast real-time communication. The proposed scheme uses self-organisation to form groups out of co-located receivers with bad reception and provides local repair through the use of transcoders. The receiver driven nature of the protocol ensures high scalability and applicability to large Mbone sessions. The viability of the proposed protocol is demonstrated through simulation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Ramachandran Ramjee, Jim Kurose, Don Towsley, and Henning Schulzrinne. </author> <title> Adaptive playout mechanisms for packetized audio applications in wide-area networks. </title> <booktitle> In Conference on Computer Communications (IEEE Infocom), </booktitle> <address> Toronto, Canada, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: Audio and video conferencing applications can tolerate a certain amount of packet loss and delay jitter from the network. They have been designed to adapt to network conditions and minimise the perceived signal degradation by trading off reliability for interactivity <ref> [1, 2] </ref>. The UCL Robust-Audio Tool (RAT) [3] and Freep-hone developed at INRIA use forward error correction (FEC) techniques [4] and successfully address the loss problem with minimal increase in stream delay.
Reference: [2] <author> Isidor Kouvelas, Vicky Hardman, and Anna Watson. </author> <title> Lip synchronisation for use over the internet: Analysis and implementation. </title> <booktitle> In IEEE Globecom '96, </booktitle> <address> London, UK, </address> <month> November </month> <year> 1996. </year>
Reference-contexts: Audio and video conferencing applications can tolerate a certain amount of packet loss and delay jitter from the network. They have been designed to adapt to network conditions and minimise the perceived signal degradation by trading off reliability for interactivity <ref> [1, 2] </ref>. The UCL Robust-Audio Tool (RAT) [3] and Freep-hone developed at INRIA use forward error correction (FEC) techniques [4] and successfully address the loss problem with minimal increase in stream delay.
Reference: [3] <author> Colin Perkins, Vicky Hardman, Isidor Kouvelas, and Angela Sasse. </author> <title> Multicast audio: The next generation. </title> <booktitle> In International Networking Conference (INET), </booktitle> <address> Kuala Lumpur, Malaysia, </address> <month> June </month> <year> 1997. </year>
Reference-contexts: Audio and video conferencing applications can tolerate a certain amount of packet loss and delay jitter from the network. They have been designed to adapt to network conditions and minimise the perceived signal degradation by trading off reliability for interactivity [1, 2]. The UCL Robust-Audio Tool (RAT) <ref> [3] </ref> and Freep-hone developed at INRIA use forward error correction (FEC) techniques [4] and successfully address the loss problem with minimal increase in stream delay. FEC used is in the form of highly compressed low quality audio that is piggybacked on normal audio packets.
Reference: [4] <author> Jean-Chrysostome Bolot, Sacha Fosse-Parisis, Mark Handley, Vicky Hardman, Orion Hodson, Isidor Kou-velas, Colin Perkins, and Andres Vega-Garcia. </author> <title> RTP payload for redundant audio data. Request for comments (Proposed Standard) RFC 2198, Internet Engineering Task Force, Audio / Video Transport Working Group, </title> <month> September </month> <year> 1997. </year>
Reference-contexts: They have been designed to adapt to network conditions and minimise the perceived signal degradation by trading off reliability for interactivity [1, 2]. The UCL Robust-Audio Tool (RAT) [3] and Freep-hone developed at INRIA use forward error correction (FEC) techniques <ref> [4] </ref> and successfully address the loss problem with minimal increase in stream delay. FEC used is in the form of highly compressed low quality audio that is piggybacked on normal audio packets. <p> If the link is full this will result in congestion and some packets will be dropped. To avoid degradation in perceived quality due to the loss, the additional bandwidth can be used to carry FEC redundant information <ref> [4] </ref> for a short period after the bandwidth increase.
Reference: [5] <author> Mark Handley. </author> <title> An examination of Mbone performance. </title> <note> Research Report ISI-RR-97-450, USC/ISI, </note> <month> April </month> <year> 1997. </year>
Reference-contexts: The variable network loss rates and perceived quality in different areas of a multicast distribution tree are a result of different link bandwidth availability and link load. The extent of this problem is best illustrated by the work of Handley <ref> [5] </ref> in figure 1. The graph represents the packet loss rates experienced by different receivers of a popular Mbone session over the period of the session. It is clear that although most receivers are seeing low to moderate loss, there are a small number of sites suffering.
Reference: [6] <author> Steven McCanne, Van Jacobson, and Martin Vet-terli. </author> <title> Receiver-driven layered multicast. </title> <booktitle> In SIGCOMM, </booktitle> <pages> pages 117-130, </pages> <address> Stanfort, CA, </address> <month> August </month> <year> 1996. </year> <note> ACM. </note>
Reference-contexts: It has been shown that sender driven schemes that try to address the receiver heterogeneity problem do not scale to large groups. Any scheme that attempts to separately cover for the different needs of problematic receiver subgroups has to be receiver driven to scale <ref> [6] </ref>. Subgroups of co-located receivers in a multicast delivery tree suffering from similar problems should co-ordinate their efforts in improving reception quality. Furthermore their attempts should not affect reception for the remaining participants in the multicast session. <p> The rest of this section discusses existing work and alternatives addressing the reliability issues for continuous media streams in a heterogeneous multicast environment. 2.1 Layered Encoding McCanne et al <ref> [6] </ref> combine a layered compression scheme with a layered transmission scheme to address the network heterogeneity issue. The media stream is encoded into a number of layers that can be incrementally combined to provide refined versions of varying quality of the encoded signal.
Reference: [7] <author> Steve McCanne et al. </author> <note> UCB/LBNL/VINT network simulator - ns (version 2). Software and documentation available from http://www-mash.cs.berkeley.edu/ns/, November 1997. </note>
Reference-contexts: Section 2 describes related work on congestion control for multicast distribution and attempts to solve the group reception diversity problem. In section 3 we describe our self-organised transcoding solution to the problem. The proposed solution has been implemented and evaluated through simulation using the VINT network simulator <ref> [7] </ref>. <p> multicast addresses required by SOT to the maximum number of transcoded streams forwarded by any node. 4 Simulation As part of the development of some of the ideas in SOT and in order to evaluate its performance, we implemented the protocol in version 2.1 of the VINT network simulator ns <ref> [7] </ref>. Ns is an event driven packet-level simulator. Within ns there are several multicast protocol implementations. We chose to use the dense mode (DM) version as it behaves similarly to what is currently available on the Mbone.
Reference: [8] <author> Henning Schulzrinne, Stephen Casner, Ron Frederick, and Van Jacobson. RTP: </author> <title> a transport protocol for real-time applications. Request for comments (Proposed Standard) RFC 1889, </title> <institution> Internet Engineering Task Force, </institution> <month> January </month> <year> 1996. </year>
Reference-contexts: The simulation results can be found in section 4. 2 Background and Related Work The current multimedia conferencing architecture over the Mbone / Internet has the following characteristics: * Conferencing applications use the Real-time Transport Protocol (RTP) <ref> [8, 9] </ref> to transmit information over an unreliable best-effort multipoint network. * Receivers express interest in receiving traffic by tuning into a multicast address and the network forwards traffic only along links with downstream recipients. * No knowledge of group membership or routing topology is available at the source or receivers.
Reference: [9] <author> Henning Schulzrinne. </author> <title> RTP profile for audio and video conferences with minimal control. Request for comments (Proposed Standard) RFC 1890, </title> <institution> Internet Engineering Task Force, </institution> <month> January </month> <year> 1996. </year>
Reference-contexts: The simulation results can be found in section 4. 2 Background and Related Work The current multimedia conferencing architecture over the Mbone / Internet has the following characteristics: * Conferencing applications use the Real-time Transport Protocol (RTP) <ref> [8, 9] </ref> to transmit information over an unreliable best-effort multipoint network. * Receivers express interest in receiving traffic by tuning into a multicast address and the network forwards traffic only along links with downstream recipients. * No knowledge of group membership or routing topology is available at the source or receivers.
Reference: [10] <author> L. R. Rabiner and R. W. Schafer. </author> <title> Digital Processing of Speech Signals. </title> <publisher> Prentice Hall, </publisher> <year> 1978. </year>
Reference-contexts: This is definitely the case for sampled speech. There is none or very little improvement in intelligibility to be gained by sampling speech at full CD quality (44.1KHz stereo sampling) rather than a single channel sampled at 16KHz <ref> [10] </ref>. With music a wider range is available, from CD quality to a highly compressed low quality format. Currently available speech codecs do not render themselves naturally to layering.
Reference: [11] <author> Mostafa Hashem Sherif, Duane O. Bowker, Guido Bertocci, Bruce A. Orford, and Gonzalo A. Mariano. </author> <title> Overview and performance of CCITT/ANSI embedded ADPCM algorithms. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 41(2) </volume> <pages> 391-398, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: However, to achieve the same quality that the original not split up version of the codec provides, a larger number of bits per codeword is required <ref> [11] </ref>. An additional requirement from a layered encoding scheme, in order for it to be suitable for use with a network adaptation algorithm, is that there must be an exponential relationship between the bandwidth of different layers.
Reference: [12] <author> S. Pejhan, M. Schwartz, and D. Anastassiou. </author> <title> Error control using retransmission schemes in multicast transport protocols for real-time media. </title> <journal> IEEE/ACM Transcations on Networking, </journal> <volume> 4(3) </volume> <pages> 413-327, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: Simulcasting suffers from scalability problems because the sender is involved in the adaptation. 2.3 Retransmission Based Reliability Proposals exist for integrating reliable multicast schemes into audio and video applications so that missing packets can be recovered from neighbours with better reception <ref> [12, 13, 14] </ref>. This is achieved by trading off quality for delay as any reliable multicast protocol has to request retransmission and wait for the repair. Although this may be acceptable in a real-time lecturing scenario it becomes less useful with interactive communication.
Reference: [13] <author> N.F. Maxemchuk, K. Padmanabhan, and S. Lo. </author> <title> A cooperative packet recovery protocol for multicast video. </title> <booktitle> In International Conference on Network Protocols, </booktitle> <address> At-lanta, Georgia, </address> <month> October </month> <year> 1997. </year>
Reference-contexts: Simulcasting suffers from scalability problems because the sender is involved in the adaptation. 2.3 Retransmission Based Reliability Proposals exist for integrating reliable multicast schemes into audio and video applications so that missing packets can be recovered from neighbours with better reception <ref> [12, 13, 14] </ref>. This is achieved by trading off quality for delay as any reliable multicast protocol has to request retransmission and wait for the repair. Although this may be acceptable in a real-time lecturing scenario it becomes less useful with interactive communication. <p> Although this may be acceptable in a real-time lecturing scenario it becomes less useful with interactive communication. An additional undesirable side effect is that the operation of the reliable protocol creates extra control traffic. Maxemchuk et al <ref> [13] </ref> propose a hierarchy of retransmission servers positioned around expensive or over utilised links. The servers operate a NACK based reliable protocol between them and receivers use a similar scheme for requesting lost packets. Their proposal significantly improves reception quality but requires manual configuration of the retransmission servers.
Reference: [14] <author> X. Rex Xu, Andrew C. Myers, Hui Zhang, and Raj Yavatkar. </author> <title> Resilient multicast support for continuous-media applications. </title> <booktitle> In International Workshop on Network and Operating System Support for Digital Audio and Video (NOSSDAV), </booktitle> <address> St. Louis, Missouri, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: Simulcasting suffers from scalability problems because the sender is involved in the adaptation. 2.3 Retransmission Based Reliability Proposals exist for integrating reliable multicast schemes into audio and video applications so that missing packets can be recovered from neighbours with better reception <ref> [12, 13, 14] </ref>. This is achieved by trading off quality for delay as any reliable multicast protocol has to request retransmission and wait for the repair. Although this may be acceptable in a real-time lecturing scenario it becomes less useful with interactive communication. <p> The servers operate a NACK based reliable protocol between them and receivers use a similar scheme for requesting lost packets. Their proposal significantly improves reception quality but requires manual configuration of the retransmission servers. In <ref> [14] </ref> Xu et al describe the STORM protocol that develops parent child relationships between participants of a multicast using an expanding ring search technique. Parents are chosen according to loss statistics so that they have a good chance of receiving packets their children are likely to request.
Reference: [15] <author> Lorenzo Vicisano, Luigi Rizzo, and Jon Crowcroft. </author> <title> TCP-like congestion control for layered multicast data transfer. </title> <booktitle> In Conference on Computer Communications (IEEE Infocom), </booktitle> <address> San Francisco, California, </address> <month> March </month> <year> 1998. </year>
Reference-contexts: For totally non real-time scenarios, a normal transport protocol and pre-fetch can be used to achieve perfect audio quality. TCP can be used in a single user scenario or a multicast congestion control protocol like RLC <ref> [15] </ref> for multiple recipients. 2.4 Statically Configured Transcoders In many situations where a group of people with limited network resources want to participate in a high bandwidth multicast conference, the use of transcoders is employed.
Reference: [16] <author> Joseph C. Pasquale, George C. Polyzos, Eric W. An-derson, and Vachaspathi P. Kompella. </author> <title> Filter propagation in dissemination trees: Trading off bandwidth and processing in continuous media networks. </title> <booktitle> In International Workshop on Network and Operating System Support for Digital Audio and Video (NOSSDAV), </booktitle> <pages> pages 259-268, </pages> <address> Lancaster, U.K, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: If all receivers beyond that link tune to receive the new customised stream then there will be no bandwidth wasted as the original stream will no longer traverse the problematic link. This solution is static and has problems with the dynamic nature of Mbone multicast routing. In <ref> [16] </ref> Pasquale et al propose the use of self-propagating filters over a dissemination tree. Leaf nodes specify to the node above them filters that can convert an incoming stream to match their requirements.
Reference: [17] <author> S. Floyd, V. Jacobson, S. Liu, S. McCanne, and L. Zhang. </author> <title> A reliable multicast framework for light-weight sessions and application level framing. </title> <journal> IEEE/ACM Transcations on Networking, </journal> <volume> 5(6) </volume> <pages> 784-803, </pages> <month> December </month> <year> 1997. </year> <note> An earlier version of this paper appeared in ACM SIGCOMM 95, </note> <month> August </month> <year> 1995, </year> <pages> pp. 342-356. </pages>
Reference-contexts: As control messages are sent to the whole receiver group, while a transcoding negotiation is in progress, control messages from other receivers are suppressed. 3.1.1 Receiver Distance Calculation The timer based-scheme described above is similar to that used in the SRM <ref> [17] </ref> reliable multicast protocol for retransmission requests and repairs. In SRM round-trip times (RTT) are used as distances between receivers and are calculated from timestamps in session messages. Reporting receivers include timestamps received from other receivers plus the amount of time elapsed between receiving the stamp and sending the report.
Reference: [18] <author> Puneet Sharma, Deborah Estrin, Sally Floyd, and Lixia Zhang. </author> <title> Scalable session messages in SRM using self-configuration. </title> <note> submitted to Sigcomm '98, Febru-ary 1998. </note>
Reference-contexts: The SRM extension to obtain distance estimates between all the receivers does not scale for large sessions since every pair of receivers has to exchange at least three messages. Puneet et al <ref> [18] </ref> have developed a hierarchical self-organising scheme that elects top level receivers for different regions of the distribution tree that represent their region in distance calculation estimates. This scheme significantly improves the scalability of RTT calculation in SRM.
Reference: [19] <author> D. Mills. </author> <title> Simple Network Time Protocol (SNTP) version 4 for IPv4, IPv6 and OSI. Request for comments (Proposed Standard) RFC 2030, </title> <institution> Internet Engineering Task Force, </institution> <month> October </month> <year> 1996. </year> <note> Obsoletes RFC 1769. </note>
Reference-contexts: This scheme significantly improves the scalability of RTT calculation in SRM. The requirement for background session messages to build distance information is removed if receivers use NTP <ref> [19] </ref> and have synchronised clocks. Although the level of deployment of NTP on current Mbone hosts is not very good, there is no reason why it should not be in use. With synchronised clocks a distance estimate can be obtained from a single timestamped message.
Reference: [20] <author> Mark Handley. </author> <title> SAP: Session Announcement Protocol. </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> November </month> <year> 1996. </year> <title> Work in progress. </title>
Reference-contexts: Figure 6 shows the number of hosts listening to the SDR <ref> [20] </ref> session announcement multicast address reachable from UCL for increasing TTL values. The measurements were collected in September 1997 using the multicast ping mechanism.
Reference: [21] <author> Jean-Chrysostome Bolot, Thierry Turletti, and Ian Wakeman. </author> <title> Scalable feedback control for multicast video distribution in the internet. </title> <booktitle> In SIGCOMM, </booktitle> <address> Lon-don, UK, </address> <month> August </month> <year> 1994. </year> <note> ACM. </note>
Reference-contexts: To avoid an implosion of responses to a query message that suddenly reaches a large number of receivers, an additional mechanism is required to restrict the number of potential responders. A sliding key probing mechanism (introduced in <ref> [21] </ref>) can be employed. This operates by having the query sender and receivers each choose a random key. The sender's key is included in the request and only receivers with a matching key are allowed to respond.
Reference: [22] <author> Christos Papadopoulos, Guru Parulkar, and George Varghese. </author> <title> An error control scheme for large-scale mul-ticast applications. </title> <booktitle> In Conference on Computer Communications (IEEE Infocom), </booktitle> <address> San Francisco, Califor-nia, </address> <month> March </month> <year> 1998. </year>
Reference-contexts: The use of subcasting, which has recently been proposed as a modification to multicast to support reliable multicast applications, can provide this functionality <ref> [22] </ref>. Receivers quitting the session are not a problem except in the cases of the requester or the last member of the group leaving. By having the requester periodically multicast alive messages after group formation to the formed group other members can detect when the requester has left.
Reference: [23] <author> Vern Paxson. </author> <title> End-to-end routing behavior in the internet. </title> <journal> IEEE/ACM Transcations on Networking, </journal> <volume> 5(5) </volume> <pages> 601-615, </pages> <month> October </month> <year> 1997. </year>
Reference-contexts: A transcoder can detect the departure of the last member of the group and stop transmission by the cease of congestion feedback information. 3.5 Topology Changes Link and router outages although not very frequent are quite common in the Internet / Mbone <ref> [23] </ref>. As a result of an outage the multicast routing to some members of a session being serviced by a transcoder may change resulting in a non-optimal or even problematic configuration (figure 8). To recover from such situations SOT needs to periodically repeat the initiation protocol.
Reference: [24] <author> Brad Cain, Steve Deering, and Ajit Thyagarajan. </author> <title> Internet Group Management Protocol, </title> <type> version 3. Technical report, </type> <institution> Internet Engineering Task Force, </institution> <month> November </month> <year> 1997. </year> <title> Internet Draft (work in progress). </title>
Reference-contexts: Typically very large sessions are lecture based where only a few participants transmit data and the majority are only spectators which somewhat alleviates the problem. The real solution to this problem is the deployment of the Internet Group Management Protocol version 3 (IGMPv3) <ref> [24] </ref> which is currently under development by the IETF IDMR working group. IGMPv3 supports expression of interest in particular sources for each multicast address joined. <p> We chose to use the dense mode (DM) version as it behaves similarly to what is currently available on the Mbone. We extended the implementation by adding source-specific group membership control, which is expected to be available on the Mbone with the deployment of IGMPv3 <ref> [24] </ref>. The Self Organised Transcoding protocol was implemented as an extension to ns using C++ and otcl. The protocol implementation and simulation scripts are available upon request from the authors. 4.1 SOT Implementation This section describes the design of the SOT transcoder initiation implementation in ns.
Reference: [25] <author> W. Stevens. </author> <title> TCP slow start, congestion avoidance, fast retransmit, and fast recovery algorithms. Request for comments (Proposed Standard) RFC 2001, </title> <institution> Internet Engineering Task Force, </institution> <month> January </month> <year> 1997. </year>
Reference-contexts: Although the adaptation algorithm is independent from the operation of SOT, we implemented a simple version for the purposes of our simulations. The implemented algorithm tries to behave in a manner similar to the congestion control algorithm in TCP <ref> [25] </ref> by halving the stream bandwidth when loss is detected and linearly increasing the bandwidth when no loss is signalled. When transcoders start the initial bandwidth of the transcoded stream is set to a very low rate thus performing the equivalent of a slow start.
Reference: [26] <author> Vicky Hardman, Martina Angela Sasse, Mark Hand-ley, and Anna Watson. </author> <title> Reliable audio for use over the Internet. </title> <booktitle> In International Networking Conference (INET), </booktitle> <month> September </month> <year> 1995. </year>
Reference-contexts: Perception experiments carried out at UCL have evaluated the impact of mixing small intervals of LPC synthetic speech with toll-quality speech for the purposes of audio redundancy <ref> [26] </ref>. Results show that for small intervals (around 40ms) intelligibility of speech does not deteriorate whereas for intervals larger than 80ms there is a slight deterioration. size for each transcoder packet size was used by all the transcoders The second experiment shows fair sharing of the bottleneck bandwidth with TCP.
Reference: [27] <author> R. Jain, D. Chiu, and W. Hawe. </author> <title> A quantitative measure of fairness and discrimination for resource allocation in shared computer systems. </title> <note> Technical Report DEC Research Report TR-301, </note> <month> DEC, September </month> <year> 1984. </year>
Reference-contexts: Figure 21 shows the total bottleneck bandwidth used by SOT and TCP for each second of the simulation after the SOT transcoders have started. The two curves are very evenly matched. Jain's index <ref> [27] </ref> with each individual flow as a user gives 99.5% fairness.
References-found: 27

