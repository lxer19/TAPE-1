URL: ftp://ftp.cse.ucsc.edu/pub/hsnlab/Interop97-cam-ready.ps.Z
Refering-URL: http://www.cse.ucsc.edu/~lampros/papers.html
Root-URL: http://www.cse.ucsc.edu
Email: flampros, varmag@cse.ucsc.edu  kkrama@research.att.com  
Title: Performance of Two-Way TCP Traffic over Asymmetric Access Links  
Author: Lampros Kalampoukas and Anujan Varma K. K. Ramakrishnan 
Address: Santa Cruz, CA, 96064  Murray Hill, NJ 07974  
Affiliation: Computer Engineering Department University of California  AT&T Research  
Abstract: We study the performance of two-way TCP traffic over asymmetric access links and show that link asymmetry can lead to unacceptably low throughputs. We derive analytical expressions for the throughput efficiencies of TCP connection under bidirectional traffic and validate them by simulation. The results show that the throughput of at least one of the connections is degraded because of the excessive queueing delays faced by acknowledgments transmitted on the slow link. A potential solution to reduce this queueing delay is to employ a backpressure mechanism to limit the number of data packets in the outgoing queue at the end systems. We investigate the effectiveness of this solution by simulation and show that such an approach alone is inadequate to provide acceptable throughput for both TCP connections. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> V. Jacobson, </author> <title> "Congestion avoidance and control," </title> <booktitle> in Proceedings of ACM SIGCOMM'88, </booktitle> <pages> pp. 314-329, </pages> <year> 1988. </year>
Reference-contexts: 1 Introduction Transmission Control Protocol (TCP) has become the most widely used transport-layer protocol today, due largely to the explosive growth of the TCP/IP Internet in recent years. An important component of TCP is the collection of algorithms used to perform congestion control and recovery <ref> [1, 2] </ref>. These algorithms give rise to a variety of interesting dynamics, some of which have been studied extensively [3, 4, 5, 6]. In this paper, our interest is in analyzing the dynamics of TCP connections over asymmetric access links in the presence of two-way traffic. <p> The genesis of ack compression can be traced to the slow-start phase of a TCP connection that increases the window progressively at startup <ref> [1] </ref>. The slow-start algorithm sets the initial window size to one and increases it by one with every acknowledgment received. This effectively doubles the window every round-trip time. Thus, during slow start, the receipt of every ack causes the end system to add two segments to its outgoing queue.
Reference: [2] <author> V. Jacobson, </author> <title> "Modified TCP Congestion Avoidance Algorithm." message to end2end-interest mailing list, </title> <month> April </month> <year> 1990. </year>
Reference-contexts: 1 Introduction Transmission Control Protocol (TCP) has become the most widely used transport-layer protocol today, due largely to the explosive growth of the TCP/IP Internet in recent years. An important component of TCP is the collection of algorithms used to perform congestion control and recovery <ref> [1, 2] </ref>. These algorithms give rise to a variety of interesting dynamics, some of which have been studied extensively [3, 4, 5, 6]. In this paper, our interest is in analyzing the dynamics of TCP connections over asymmetric access links in the presence of two-way traffic.
Reference: [3] <author> S. Floyd and V. Jacobson, </author> <title> "On Traffic Phase Effects in Packet-Switched Gateways," </title> <journal> Internet-working: Research and Experience, </journal> <volume> vol. 3, no. 3, </volume> <pages> pp. 115-156, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: An important component of TCP is the collection of algorithms used to perform congestion control and recovery [1, 2]. These algorithms give rise to a variety of interesting dynamics, some of which have been studied extensively <ref> [3, 4, 5, 6] </ref>. In this paper, our interest is in analyzing the dynamics of TCP connections over asymmetric access links in the presence of two-way traffic.
Reference: [4] <author> J. C. Mogul, </author> <title> "Observing TCP dynamics in real networks," </title> <booktitle> in Proceedings of ACM SIGCOMM'92, </booktitle> <pages> pp. 305-317, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: An important component of TCP is the collection of algorithms used to perform congestion control and recovery [1, 2]. These algorithms give rise to a variety of interesting dynamics, some of which have been studied extensively <ref> [3, 4, 5, 6] </ref>. In this paper, our interest is in analyzing the dynamics of TCP connections over asymmetric access links in the presence of two-way traffic.
Reference: [5] <author> L. Zhang and D. D. Clark, </author> <title> "Oscillating Behavior of Network Traffic: A Case Study Simulation," </title> <journal> Inter-networking: Research and Experience, </journal> <volume> vol. 1, no. 2, </volume> <pages> pp. 101-112, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: An important component of TCP is the collection of algorithms used to perform congestion control and recovery [1, 2]. These algorithms give rise to a variety of interesting dynamics, some of which have been studied extensively <ref> [3, 4, 5, 6] </ref>. In this paper, our interest is in analyzing the dynamics of TCP connections over asymmetric access links in the presence of two-way traffic.
Reference: [6] <author> L. Zhang, S. Shenker, and D. D. Clark, </author> <title> "Observations on the Dynamics of a Congestion Control Algorithm: The Effects of Two-Way Traffic," </title> <booktitle> in Proceedings of ACM SIGCOMM'91, </booktitle> <pages> pp. 133-147, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: An important component of TCP is the collection of algorithms used to perform congestion control and recovery [1, 2]. These algorithms give rise to a variety of interesting dynamics, some of which have been studied extensively <ref> [3, 4, 5, 6] </ref>. In this paper, our interest is in analyzing the dynamics of TCP connections over asymmetric access links in the presence of two-way traffic. <p> These packets and acknowledgments may share a common buffer in the end systems as well as network switches/routers. This sharing has been shown to result in an effect called ack compression, where acks of a connection arrive at the source bunched together <ref> [6, 7] </ref>. The result of ack-compression is a marked unfairness in the throughput received with competing connections, and reduced overall throughput compared to what could be expected without this effect [7]. Ack compression may occur either at the end system or in a switch/router. <p> In either case, the smooth flow of acknowledgments to the source is disturbed, potentially resulting in reduced overall throughput. The effect of ack compression and the resulting dynamics of transport protocols under two-way traffic have been studied previously by Zhang, et al. <ref> [6] </ref>, and by Wilder, et al. [7]. Zhang, et al. [6] studied TCP dynamics under two-way traffic in a datagram network by simulation, and observed that the queues in the routers exhibit periodic behavior. <p> The effect of ack compression and the resulting dynamics of transport protocols under two-way traffic have been studied previously by Zhang, et al. <ref> [6] </ref>, and by Wilder, et al. [7]. Zhang, et al. [6] studied TCP dynamics under two-way traffic in a datagram network by simulation, and observed that the queues in the routers exhibit periodic behavior. Wilder, et al. [7] observed a similar effect in OSI-based networks under two-way traffic causing unfairness and an overall reduction in throughput. <p> For example, the transmission time of a 1500 byte packet over a 100 Kbits/sec link is about 120 msecs, while the TCP protocol processing time in real system does not exceed a few hundred microsec-onds <ref> [6, 11, 12] </ref>. 3 Ack Compression and Net work Performance In this section we review the analytical results derived in [8] for network configurations with asymmetric links.
Reference: [7] <author> R. Wilder, K. K. Ramakrishnan, and A. Mankin, </author> <title> "Dynamics of Congestion Control and Avoidance of Two-Way Traffic in an OSI Testbed," </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 21, no. 2, </volume> <pages> pp. 43-58, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: These packets and acknowledgments may share a common buffer in the end systems as well as network switches/routers. This sharing has been shown to result in an effect called ack compression, where acks of a connection arrive at the source bunched together <ref> [6, 7] </ref>. The result of ack-compression is a marked unfairness in the throughput received with competing connections, and reduced overall throughput compared to what could be expected without this effect [7]. Ack compression may occur either at the end system or in a switch/router. <p> The result of ack-compression is a marked unfairness in the throughput received with competing connections, and reduced overall throughput compared to what could be expected without this effect <ref> [7] </ref>. Ack compression may occur either at the end system or in a switch/router. In either case, the smooth flow of acknowledgments to the source is disturbed, potentially resulting in reduced overall throughput. <p> In either case, the smooth flow of acknowledgments to the source is disturbed, potentially resulting in reduced overall throughput. The effect of ack compression and the resulting dynamics of transport protocols under two-way traffic have been studied previously by Zhang, et al. [6], and by Wilder, et al. <ref> [7] </ref>. Zhang, et al. [6] studied TCP dynamics under two-way traffic in a datagram network by simulation, and observed that the queues in the routers exhibit periodic behavior. Wilder, et al. [7] observed a similar effect in OSI-based networks under two-way traffic causing unfairness and an overall reduction in throughput. <p> transport protocols under two-way traffic have been studied previously by Zhang, et al. [6], and by Wilder, et al. <ref> [7] </ref>. Zhang, et al. [6] studied TCP dynamics under two-way traffic in a datagram network by simulation, and observed that the queues in the routers exhibit periodic behavior. Wilder, et al. [7] observed a similar effect in OSI-based networks under two-way traffic causing unfairness and an overall reduction in throughput.
Reference: [8] <author> L. Kalampoukas, A. Varma, and K. K. Ramakr-ishnan, </author> <title> "Two-Way TCP Traffic over ATM: Effects and Analysis," </title> <booktitle> in Proc. of IEEE INFOCOM'97, </booktitle> <month> April </month> <year> 1997. </year>
Reference-contexts: Meanwhile, the acks of the reverse connection are queued behind the data segments, causing them to be bunched. We will later show that this behavior can persist in steady state when the windows reach their final values. In <ref> [8] </ref> we analyzed the dynamics of two-way TCP traffic over an ATM network using the ABR service, and quantified the resulting performance degradation. This paper focuses mainly on the effects that asymmetric access links have on the performance of two-way TCP traffic. <p> The remainder of the paper is organized as follows: In Section 2, we describe our model of the network and the end nodes. In Section 3, we review the analytical results presented in <ref> [8] </ref> and illustrate the effect of ack compression on the throughput efficiencies of two-way TCP connections over asymmetric links. <p> The interaction between TCP and IP described above is consistent with the 4.4 BSD-Lite Unix Release [10]. The analytical models in this paper ignore the TCP processing time in end systems. In <ref> [8] </ref> we have shown how the TCP processing time, denoted as t pr , may be incorporated into the analytical models. <p> of a 1500 byte packet over a 100 Kbits/sec link is about 120 msecs, while the TCP protocol processing time in real system does not exceed a few hundred microsec-onds [6, 11, 12]. 3 Ack Compression and Net work Performance In this section we review the analytical results derived in <ref> [8] </ref> for network configurations with asymmetric links. First, we note that the sum of the window sizes of the two connections must exceed the bandwidth-delay product of the round-trip pipe for ack compression to occur. <p> Furthermore, this behavior is almost periodic, with the resulting sustained loss of throughput for one or both of the connections. Such sustained loss of throughput is inevitable in a two-way configuration satisfying condition (3.1), regardless of the phase difference between the two connections at startup <ref> [8] </ref>. <p> The following theorem characterizes the throughput efficiencies of the two TCP connections as a function of the link capacities and the maximum TCP window sizes in a network configuration with asymmetric link speeds and propagation delays. A proof of this theorem can be found in <ref> [8] </ref>. <p> As explained earlier and illustrated in Figure 5, the queue length in each end system exhibits periodic behavior. The maximum queue size in the end nodes is given by the following lemma from <ref> [8] </ref>. <p> For a detailed derivation of these analytical results, we refer the reader to <ref> [8] </ref>. We now illustrate the effects of link asymmetry on TCP performance with simulations using the configuration of Figure 1.
Reference: [9] <author> K. Maxwell, </author> <title> "Asymmetric Digital Subscribe Line: Interim Technology for the Next Forty Years," </title> <journal> IEEE Communications Magazine, </journal> <volume> vol. 34, no. 10, </volume> <pages> pp. 100-106, </pages> <month> October </month> <year> 1996. </year>
Reference: [10] <author> W. R. Stevens and G. R. </author> <title> Wright, </title> <journal> TCP/IP Illustrated, </journal> <volume> vol. 2. </volume> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1995. </year>
Reference-contexts: Therefore, to avoid packet losses at the source node, we assume that the IP queue has a size equal to the maximum window size of the sending TCP. The interaction between TCP and IP described above is consistent with the 4.4 BSD-Lite Unix Release <ref> [10] </ref>. The analytical models in this paper ignore the TCP processing time in end systems. In [8] we have shown how the TCP processing time, denoted as t pr , may be incorporated into the analytical models.
Reference: [11] <author> K. K. Ramakrishnan, </author> <title> "Performance considerations in designing network interfaces," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 11, no. 2, </volume> <pages> pp. 203-219, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: For example, the transmission time of a 1500 byte packet over a 100 Kbits/sec link is about 120 msecs, while the TCP protocol processing time in real system does not exceed a few hundred microsec-onds <ref> [6, 11, 12] </ref>. 3 Ack Compression and Net work Performance In this section we review the analytical results derived in [8] for network configurations with asymmetric links.
Reference: [12] <author> C.-H. Chang, D. Flower, J. Forecase, H. Gray, B. Hawe, A. Nadkarni, K. K. Ramakrishnan, U. Shikarpur, and K. Wilde, </author> <title> "High-Performance TCP/IP and UDP/IP Networking in DEC OSF/1 for Alpha AXP," </title> <booktitle> in Proceedings of the Third IEEE International Symposium on High Performance Distributed Computing, </booktitle> <pages> pp. 35-42, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: For example, the transmission time of a 1500 byte packet over a 100 Kbits/sec link is about 120 msecs, while the TCP protocol processing time in real system does not exceed a few hundred microsec-onds <ref> [6, 11, 12] </ref>. 3 Ack Compression and Net work Performance In this section we review the analytical results derived in [8] for network configurations with asymmetric links.
Reference: [13] <author> V. Jacobson, </author> <title> "Compressing TCP/IP Headers for Low-Speed Serial Links," Request for Comments: </title> <type> 1144, </type> <month> February </month> <year> 1990. </year>
Reference-contexts: The capacity of the slow link is set to 100 Kbits/sec and that of the fast link to 5 Mbits/sec. The maximum window size for both TCP connections is set at 64 Kbytes. The size of acknowledgments is assumed to be 28 bytes after compressing the TCP/IP header <ref> [13] </ref> and after adding link-layer overhead. This is approximately the ack size appearing in configurations using cable modems. For the first simulation, the size of the data packets for both connections is 1500 bytes. Therefore, within a round-trip time (RTT), a connection may transmit at most 43 packets.
References-found: 13

