URL: http://www.cs.utexas.edu/users/clancy/publications/Brajnik+Clancy-TIME96.ps
Refering-URL: http://www.cs.utexas.edu/users/clancy/publications/publications.html
Root-URL: 
Phone: 1996.  
Title: In the Third International Workshop on Temporal Representation and Reasoning Guiding and Refining Simulation using
Author: Giorgio Brajnik Daniel J. Clancy 
Address: Beach, Fl  33100 Udine, ITALY Austin, TEXAS 78712  
Affiliation: Melbourne  Dip. di Matematica e Informatica Department of Computer Sciences Universita di Udine University of Texas at Austin  
Pubnum: (TIME-96)  
Abstract: We illustrate TeQSIM, a qualitative simulator for continuous dynamical systems. It combines the expressive power of qualitative differential equations with temporal logic by interleaving simulation with model checking to constrain and refine the resulting predicted behaviors. Temporal logic expressions are used to specify constraints that restrict the simulation to a region of the state space and to specify trajectories for input variables. A propositional linear-time temporal logic is adopted, which is extended to a three valued logic that allows a formula to be conditionally entailed when quantitative information specified in the formula can be applied to a behavior to refine it. We present a formalization of the logic with theoretical results concerning the adopted model checking algorithm (correctness and completeness). We show also an example of the simulation of a non-autonomous dynamical system and illustrate possible application tasks, ranging from simulation to monitoring and control of continuous dynamical systems, where TeQSIM can be applied. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Alur and T. Henzinger. </author> <title> Real-time logics: complexity and expressiveness. </title> <journal> Information and Computation, </journal> <volume> 104(1) </volume> <pages> 35-77, </pages> <year> 1993. </year>
Reference-contexts: Getting a definite answer for formulae such as (eventually p) is not always possible when potentially infinite behaviors are encountered since it is always possible for p to occur in the future. Metric temporal logic <ref> [1] </ref> allows the definition of a horizon for a temporal logic expression. This would allow statements such as "within 50 seconds the tanks level reaches 70 inches." This statements is only expressible within our logic using an external predefined event.
Reference: [2] <author> M. Barbeau, F. Kabanza, and R. St-Denis. </author> <title> Synthesizing plant controllers using real-time goals. </title> <booktitle> In Proc. of IJCAI-95, </booktitle> <pages> pages 791-798. </pages> <publisher> IJCAI, Morgan Kaufman, </publisher> <month> August </month> <year> 1995. </year>
Reference-contexts: For systems with discrete state spaces, temporal logic (TL) provides a broad class of formalisms that have been used for such tasks as reasoning about the effect of actions, specifying and verifying correctness of reactive computer programs and synthesizing or analyzing discrete event systems <ref> [13, 6, 2, 8] </ref>. Qualitative reasoning [10] has been used to reason about continuous change within the field of dynamical systems in the presence of incomplete knowledge. The expressiveness of the models used within qualitative simulation, however, is often limited to structural equations constraining the potential values for related variables.
Reference: [3] <author> D. Berleant and B.J. Kuipers. </author> <title> Using incomplete quantitative knowledge in qualitative reasoning. </title> <booktitle> In Proc. of the Sixth National Conference on Artificial Intelligence, </booktitle> <pages> pages 324-329, </pages> <year> 1988. </year>
Reference-contexts: This would allow statements such as "within 50 seconds the tanks level reaches 70 inches." This statements is only expressible within our logic using an external predefined event. Such an extension offers the modeler more flexibility to express relevant constraints. Functional envelopes - Semi-quantitative reasoning <ref> [3] </ref> within TeQSIM uses interval bounds and static functional envelopes for monotonic functions to derive quantitative information about a behavior. NSIM [9] derives dynamic envelopes describing a variable's behavior with respect to time. Currently, only interval information can be specified within TeQSIM trajectory constraints.
Reference: [4] <author> G. Bhat, R. Cleaveland, and O. Grumberg. </author> <title> Efficient on-the-fly model checking for CTL*. </title> <booktitle> In Proc. of Conference on Logic in Computer Science (LICS-95), </booktitle> <year> 1995. </year>
Reference-contexts: Extending the language to include information about bounding envelopes with respect to time would increase the precision of solutions computed by TeQSIM. Finally, the current algorithm for incremental model checking is inefficient if compared to the on-the-fly model checker algorithm developed by Bhat and colleagues <ref> [4] </ref>. 2 We plan to incorporate it within TeQSIM. 2 In all the examples we have run so far, the practical time-complexity of a TeQSIM simulation is definitely dominated by other operations (like quantitative inferences) rather than model checking. 6 Conclusions Qualitative simulation and temporal logic provide two alternative formalisms for
Reference: [5] <author> G. Brajnik and D. J. Clancy. </author> <title> Temporal constraints on trajectories in qualitative simulation. </title> <type> Technical Report UDMI-RT-01-96, </type> <institution> Dip. di Matematica e In-formatica, University of Udine, Udine, Italy, </institution> <month> January </month> <year> 1996. </year>
Reference-contexts: A brief description of other tasks to which TeQSIM can be applied along with a discussion of how each task can be demonstrated on the model described above is contained in figure 4. Additional examples are contained in <ref> [5] </ref>. 4 Guiding and refining simulation TeQSIM guides and refines the simulation based upon a specification formulated using a variation of propositional linear time logic (PLTL). <p> The syntax and semantics are derived from work done by Emerson [6] and Kuipers and Shults [12]. A discussion of the TL-guide algorithm along with soundness and completeness theorems are presented in the following subsections. Proofs of these theorems along with additional lemmas and corollaries can be found in <ref> [5] </ref>. Syntax. The syntax and semantics for the state formulae are described in figure 5 (a). Path formulae are derived by applying the temporal operators until and strong-next along with boolean operators to state formulae. <p> Our algorithm is derived from the one described in [11]; however, it has been modified to deal with conditionally true formulae and to cope with behaviors which are not closed. A detailed discussion of the algorithm is provided in <ref> [5] </ref>. The algorithm computes the function t : P fi Behaviors ! fT; F; Ug fi Conditions: A definite answer (i.e. T or F) is provided when the behavior contains sufficient information to determine the truth value of the formula.
Reference: [6] <author> E.A. Emerson. </author> <title> Temporal and modal logic. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <pages> pages 995-1072. </pages> <publisher> Elsevier Science Publishers/MIT Press, </publisher> <year> 1990. </year> <note> Chap. 16. </note>
Reference-contexts: For systems with discrete state spaces, temporal logic (TL) provides a broad class of formalisms that have been used for such tasks as reasoning about the effect of actions, specifying and verifying correctness of reactive computer programs and synthesizing or analyzing discrete event systems <ref> [13, 6, 2, 8] </ref>. Qualitative reasoning [10] has been used to reason about continuous change within the field of dynamical systems in the presence of incomplete knowledge. The expressiveness of the models used within qualitative simulation, however, is often limited to structural equations constraining the potential values for related variables. <p> An undetermined result occurs whenever the behavior is insufficiently determined to evaluate the truth of a TL expression. 4.1 TL specification language This section provides a formal description of the syntax and semantics for the TL language. The syntax and semantics are derived from work done by Emerson <ref> [6] </ref> and Kuipers and Shults [12]. A discussion of the TL-guide algorithm along with soundness and completeness theorems are presented in the following subsections. Proofs of these theorems along with additional lemmas and corollaries can be found in [5]. Syntax. <p> The latter requirement is due to the specific representation of numeric information in QSIM, which does not allow open numeric intervals. Semantics. Temporal logic formulae are given meaning with respect to the interpretation structures defined below. These structures are extended from their typical definition (e.g. <ref> [6] </ref>) in order to accommodate the refinement process.
Reference: [7] <author> A. Farquhar and G. Brajnik. </author> <title> A semi-quantitative physics compiler. </title> <booktitle> In Tenth International Conference on Applications of Artificial Intelligence in Engineering, </booktitle> <address> Udine, Italy, </address> <month> July </month> <year> 1995. </year> <booktitle> Presented also at the Eighth International Workshop on Qualitative Reasoning on Physical Systems, 1994, </booktitle> <address> Nara, Japan. </address>
Reference-contexts: The following example demonstrates the use of TeQSIM to simulate a non-autonomous system incorporating information obtained via observation. The system being simulated is a very simple one, which generalizes to the real-world problem of water supply control in the domain of lakes, rivers and dams <ref> [7] </ref>. Consider an open tank, with an uncontrolled inflow u, a regulated outflow y, valve opening v and amount of liquid A in the tank.
Reference: [8] <author> D. Jonescu and J.Y. Lin. </author> <title> Optimal supervision of discrete event systems in a temporal logic framework. </title> <journal> IEEE Transactions on Systems, Man and Cybernetics, </journal> <volume> 25(12) </volume> <pages> 1595-1605, </pages> <month> Dec. </month> <year> 1995. </year>
Reference-contexts: For systems with discrete state spaces, temporal logic (TL) provides a broad class of formalisms that have been used for such tasks as reasoning about the effect of actions, specifying and verifying correctness of reactive computer programs and synthesizing or analyzing discrete event systems <ref> [13, 6, 2, 8] </ref>. Qualitative reasoning [10] has been used to reason about continuous change within the field of dynamical systems in the presence of incomplete knowledge. The expressiveness of the models used within qualitative simulation, however, is often limited to structural equations constraining the potential values for related variables.
Reference: [9] <author> H. Kay and B.J. Kuipers. </author> <title> Numerical behavior envelopes for qualitative models. </title> <booktitle> In Proc. of the Eleventh National Conference on Artificial Intelligence. </booktitle> <publisher> AAAI Press/MIT Press, </publisher> <year> 1993. </year>
Reference-contexts: Such an extension offers the modeler more flexibility to express relevant constraints. Functional envelopes - Semi-quantitative reasoning [3] within TeQSIM uses interval bounds and static functional envelopes for monotonic functions to derive quantitative information about a behavior. NSIM <ref> [9] </ref> derives dynamic envelopes describing a variable's behavior with respect to time. Currently, only interval information can be specified within TeQSIM trajectory constraints. Extending the language to include information about bounding envelopes with respect to time would increase the precision of solutions computed by TeQSIM.
Reference: [10] <author> B.J. Kuipers. </author> <title> Qualitative Reasoning: modeling and simulation with incomplete knowledge. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1994. </year>
Reference-contexts: Qualitative reasoning <ref> [10] </ref> has been used to reason about continuous change within the field of dynamical systems in the presence of incomplete knowledge. The expressiveness of the models used within qualitative simulation, however, is often limited to structural equations constraining the potential values for related variables. <p> Qualitative simulation constructs a set of possible behaviors consistent with a model of a dynamical system represented by a qualitative differential equation (QDE). The QSIM algorithm <ref> [10] </ref> represents the behavior of a dynamical system by an incrementally generated tree of qualitative states. Each state describes the system at either a time-point or over a time-interval between two points by a tuple of qualitative values for the variables specified within the QDE.
Reference: [11] <author> B.J. Kuipers and B. Shults. </author> <title> Reasoning in logic about continuous change. </title> <editor> In J. Doyle, E. Sandewall, and P. Torasso, editors, </editor> <booktitle> Principles of Knowledge Representation and Reasoning, </booktitle> <address> San Mateo, CA, </address> <year> 1994. </year> <booktitle> Fourth International Conference (KR-94), </booktitle> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: This process restricts an individual behavior to include only those real valued inter pretations which model the set of temporal logic expressions and therefore improves the precision of the prediction. The integration of temporal logic model checking and qualitative simulation was initially investigated by Kuipers and Shults <ref> [11] </ref>. They use a branching-time temporal logic to prove properties about continuous systems by testing the entire behavioral description against a temporal logic expression. The appropriate truth value is returned depending upon whether or not the description models the expression. <p> This allows behaviors to be filtered and refined as early as possible during the simulation. Our algorithm is derived from the one described in <ref> [11] </ref>; however, it has been modified to deal with conditionally true formulae and to cope with behaviors which are not closed. A detailed discussion of the algorithm is provided in [5].
Reference: [12] <author> B. Shults and B. J. Kuipers. </author> <title> Qualitative simulation and temporal logic: proving properties of continuous systems. </title> <type> Technical Report TR AI96-244, </type> <institution> University of Texas at Austin, Dept. of Computer Sciences, </institution> <month> Jan-uary </month> <year> 1996. </year>
Reference-contexts: The syntax and semantics are derived from work done by Emerson [6] and Kuipers and Shults <ref> [12] </ref>. A discussion of the TL-guide algorithm along with soundness and completeness theorems are presented in the following subsections. Proofs of these theorems along with additional lemmas and corollaries can be found in [5]. Syntax. The syntax and semantics for the state formulae are described in figure 5 (a).
Reference: [13] <author> J.G. Thistle and W.M. Wonham. </author> <title> Control problems in a temporal logic framework. </title> <journal> International Journal on Control, </journal> <volume> 44(4) </volume> <pages> 943-976, </pages> <year> 1986. </year>
Reference-contexts: For systems with discrete state spaces, temporal logic (TL) provides a broad class of formalisms that have been used for such tasks as reasoning about the effect of actions, specifying and verifying correctness of reactive computer programs and synthesizing or analyzing discrete event systems <ref> [13, 6, 2, 8] </ref>. Qualitative reasoning [10] has been used to reason about continuous change within the field of dynamical systems in the presence of incomplete knowledge. The expressiveness of the models used within qualitative simulation, however, is often limited to structural equations constraining the potential values for related variables.
References-found: 13

