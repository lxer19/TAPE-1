URL: http://www-cad.eecs.berkeley.edu/HomePages/krishnan/cad_seminar/spring98/papers/brzozo2.ps
Refering-URL: http://www-cad.eecs.berkeley.edu/HomePages/krishnan/cad_seminar/spring98/abstract/brzozowski.html
Root-URL: http://www.cs.berkeley.edu
Title: BLANKET ALGEBRA FOR MULTIPLE-VALUED FUNCTION DECOMPOSITION  
Author: J. A. Brzozowski and J. J. Lou 
Address: Waterloo, Ontario Canada N2L 3G1  
Affiliation: Department of Computer Science University of Waterloo  
Abstract: We consider functions of the form f : E n ! D m , where n; m &gt; 0 are integers, E is a finite, nonempty set, and D = 2 E f;g. Such a function has n inputs, x 1 ; : : : ; x n , each input taking values from E, and m outputs, y 1 ; : : : ; y m , which are only partially specified. In general, f assigns to any output y i a nonempty set d 2 D of elements of E. If d = feg for some e 2 E, then y i has the value e. If d = E, then y i is a "complete don't care", i.e., is allowed to take on any value in E. In other cases, y i is a "limited don't care", allowed to take on any value in d. Moreover, the functions are represented in a compact notation, which is a generalization of the cube notation for Boolean functions. In this representation, we call these functions "set functions." We consider the problem of decomposing a set function f (x 1 ; : : : ; x n ) in the form h(u 1 ; : : :; u r ; g(v 1 ; : : : ; v s )), where X = fx 1 ; : : :; x n g is the set of input variables, U = fu 1 ; : : : ; u r g and V = fv 1 ; : : : ; v s g are two subsets of X whose union is X, and g and h are set functions. It has been previously shown that Boolean function decompositions can be obtained with the aid of blankets, which are a generalization of set systems. In this paper we extend blanket algebra methods to the decomposition of multiple-valued set functions. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> R. L. Ashenhurst, </author> <title> The Decomposition of Switching Functions, </title> <booktitle> Proc. of International Symp. Theory of Switching Functions, </booktitle> <year> 1959. </year>
Reference-contexts: Ashenhurst used charts to represent fl This research was supported by the Natural Sciences and Engineering Research Council of Canada under grant No. OGP0000871 and a postgraduate scholarship. Revised February 12, 1998. 1 Boolean functions <ref> [1] </ref>. These methods were extended by Curtis to decompositions of a function in terms of several functions [4]. A more compact representation of Boolean functions in terms of cubes was introduced by Roth and Karp [11]. The cube cover method has been extended to multiple-output functions in the 1980's [2].
Reference: 2. <author> R. K. Brayton, et al., </author> <title> Logic Minimization Algorithms for VLSI Synthesis, </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1984. </year>
Reference-contexts: These methods were extended by Curtis to decompositions of a function in terms of several functions [4]. A more compact representation of Boolean functions in terms of cubes was introduced by Roth and Karp [11]. The cube cover method has been extended to multiple-output functions in the 1980's <ref> [2] </ref>. More recently, Luba and Selvaraj developed an approach to Boolean function decomposition using set systems and their generalizations [9]. Very similar methods were independently discovered by Shestakov [12, 13].
Reference: 3. <author> J. A. Brzozowski and T. Luba, </author> <title> Decomposition of Boolean Functions Specified by Cubes, </title> <institution> Research Report CS-97-01, Department of Computer Science, University of Waterloo, Waterloo, </institution> <address> Ontario, Canada, </address> <month> January </month> <year> 1997. </year>
Reference-contexts: Very similar methods were independently discovered by Shestakov [12, 13]. The approach of Luba and Selvaraj has been formalized by Brzozowski and Luba, who introduced the term "blankets" for certain types of generalized set systems <ref> [3] </ref>. Recently, Lou and Brzozowski have also formalized the method of Shestakov using the same blanket formalism, and have explained its relation to the work of [9] in [7]. For a discussion of other works related to Boolean function decomposition and its applications see [3]. <p> certain types of generalized set systems <ref> [3] </ref>. Recently, Lou and Brzozowski have also formalized the method of Shestakov using the same blanket formalism, and have explained its relation to the work of [9] in [7]. For a discussion of other works related to Boolean function decomposition and its applications see [3]. Decompositions of multiple-valued functions and relations have been studied recently in [5, 8, 10]; for a discussion of the literature in this field we refer the reader to these papers. In [8] "rough partitions" (blankets) are used to represent functions. <p> For example, for a domain of f0; 1; 2g, an output may be allowed to take the values 0 or 2, but not 1. The present paper extends the work in <ref> [3] </ref> to multiple-valued, multiple-output functions with generalized don't care entries; such functions are represented by a compact "cube" notation. Blankets are used to characterize decompositions of f (x) in the form h (u; g (v)), where U [ V = X. 2. <p> They also generalized their partition algebra to set systems, which we define later. Blankets are a generalization of set systems; they were formally introduced recently by Brzozowski and Luba for decomposition of Boolean functions specified by cubes <ref> [3] </ref>. Below, we briefly review the basic concepts from [3], and generalize them to the multiple-valued case. <p> They also generalized their partition algebra to set systems, which we define later. Blankets are a generalization of set systems; they were formally introduced recently by Brzozowski and Luba for decomposition of Boolean functions specified by cubes <ref> [3] </ref>. Below, we briefly review the basic concepts from [3], and generalize them to the multiple-valued case. A blanket on a set S is a collection fi = fB 1 ; : : : ; B k g of nonempty and distinct subsets of S, called blocks, whose union is S. <p> Then we assign u t2B 00 t " to the input vector ab of ^ h. The proof that this construction is correct follows very closely the proof of correctness of a similar construction for the Boolean function case, and we refer the interested reader to <ref> [3] </ref>. The converse of Theorem 5.4 is discussed below, after the proof of Theorem 6.1. Example 5.5. Consider function f 0 from Table 4. Suppose U = fx 1 ; x 2 g and V = fx 2 ; x 3 ; x 4 g. <p> Theorem 6.1. For every disjunctive serial separation (g; h) of f there is a blanket fi g corresponding to g and satisfying the conditions of Theorem 5.4. Proof. The proof follows closely the proof given in <ref> [3] </ref> for the case of Boolean functions, and the interested reader is referred to that paper for more details. Suppose first that a disjunctive serial separation (g; h) exists. <p> be any singleton vector, and let fi g = nefF ^g=a g; where F ^g=a = ft 2 F j 9b 2 s such that t V # b; and ^g ( _ b) = ag: One verifies that fi g satisfies the conditions of the theorem; for details see <ref> [3] </ref>. A counter-example is given in [3] to show that Theorem 6.1 does not hold for all nondisjunctive separations. Hence, the converse of Theorem 5.4 is not true in general. Example 6.2. Consider function f from Table 2. <p> fi g = nefF ^g=a g; where F ^g=a = ft 2 F j 9b 2 s such that t V # b; and ^g ( _ b) = ag: One verifies that fi g satisfies the conditions of the theorem; for details see <ref> [3] </ref>. A counter-example is given in [3] to show that Theorem 6.1 does not hold for all nondisjunctive separations. Hence, the converse of Theorem 5.4 is not true in general. Example 6.2. Consider function f from Table 2. Suppose that we are given the separation consisting of functions g and h of Tables 9 and 10. <p> Note that if a serial separation (g; h) based on blanket fi g is a serial decomposition, then s &lt; n and the number q of blocks of fi g satisfies r + dlog k qe &lt; n; where k = jEj. 14 As in the Boolean case <ref> [3] </ref>, we now develop a useful necessary condition for the existence of a decomposition. Let fi be a blanket on a set, and fi 0 = fB 0 i g, a blanket on the same set. <p> Concluding Remarks We have concentrated here only on the problem of finding a decomposition of a function f given the sets U and V . Finding these sets is far from trivial <ref> [3] </ref>. Other ideas [3] used in Boolean function decomposition can be extended also to multiple-valued functions. However, this is outside of the scope of this paper. Acknowledgments The authors thank L. Jozwiak of the Eidhoven University of Technology, T. <p> Concluding Remarks We have concentrated here only on the problem of finding a decomposition of a function f given the sets U and V . Finding these sets is far from trivial <ref> [3] </ref>. Other ideas [3] used in Boolean function decomposition can be extended also to multiple-valued functions. However, this is outside of the scope of this paper. Acknowledgments The authors thank L. Jozwiak of the Eidhoven University of Technology, T.
Reference: 4. <author> H. A. Curtis, </author> <title> A New Approach to the Design of Switching Circuits, </title> <address> D. </address> <publisher> Van Nostrand Co. Inc., </publisher> <address> Princeton, NJ, </address> <year> 1962. </year>
Reference-contexts: OGP0000871 and a postgraduate scholarship. Revised February 12, 1998. 1 Boolean functions [1]. These methods were extended by Curtis to decompositions of a function in terms of several functions <ref> [4] </ref>. A more compact representation of Boolean functions in terms of cubes was introduced by Roth and Karp [11]. The cube cover method has been extended to multiple-output functions in the 1980's [2].
Reference: 5. <author> S. Grygiel, M. Perkowski, M. Marek-Sadowska, T. Luba, and L. Jozwiak, </author> <title> Cube Diagram Bundles: A New Representation of Strongly Unspecified Multiple-Valued Functions and Relations, </title> <booktitle> Proc. IEEE International Symposium on Multiple-Valued Logic, </booktitle> <address> Antigonish, Nova Scotia, Canada, </address> <pages> pp. 287-292, </pages> <month> May </month> <year> 1997. </year>
Reference-contexts: For a discussion of other works related to Boolean function decomposition and its applications see [3]. Decompositions of multiple-valued functions and relations have been studied recently in <ref> [5, 8, 10] </ref>; for a discussion of the literature in this field we refer the reader to these papers. In [8] "rough partitions" (blankets) are used to represent functions. <p> Decompositions of multiple-valued functions and relations have been studied recently in [5, 8, 10]; for a discussion of the literature in this field we refer the reader to these papers. In [8] "rough partitions" (blankets) are used to represent functions. The authors of <ref> [5, 10] </ref> use "generalized don't cares," i.e., situations in which an output may take on any value in some set that is a proper subset of the domain of that output. <p> However, this case can be also handled in our model. We can use the largest of the domains as E and relabel the elements of the other domains (such as E 0 , say) so that those domains 1 A comment concerning terminology is in order. In <ref> [5] </ref> functions are allowed to have either specific values or complete don't cares, but not limited don't cares.
Reference: 6. <author> J. Hartmanis and R. E. Stearns, </author> <title> Algebraic Structure Theory of Sequential Machines, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1966. </year>
Reference-contexts: Blankets In the 1960's Hartmanis and Stearns developed an algebra of partitions for decomposition of sequential machines <ref> [6] </ref>. They also generalized their partition algebra to set systems, which we define later. Blankets are a generalization of set systems; they were formally introduced recently by Brzozowski and Luba for decomposition of Boolean functions specified by cubes [3]. <p> The relation is reflexive and transitive, but not antisymmetric, since f1; 1; 2g f1; 2g and f1; 2g f1; 1; 2g. Also, we have the following property: fiflfi 0 fi and fiflfi 0 fi 0 : A set system <ref> [6] </ref> on a set S is a blanket = fB 1 ; : : : ; B k g in which the blocks are maximal in the sense that B i B j implies i = j. Note that set systems are not closed under blanket product.
Reference: 7. <author> J. J. Lou and J. A. Brzozowski, </author> <title> A Formalization of Shestakov's Decomposition, </title> <institution> Research Report CS-98-03, Department of Computer Science, University of Waterloo, Waterloo, </institution> <address> Ontario, Canada, </address> <month> February </month> <year> 1998. </year>
Reference-contexts: Recently, Lou and Brzozowski have also formalized the method of Shestakov using the same blanket formalism, and have explained its relation to the work of [9] in <ref> [7] </ref>. For a discussion of other works related to Boolean function decomposition and its applications see [3]. Decompositions of multiple-valued functions and relations have been studied recently in [5, 8, 10]; for a discussion of the literature in this field we refer the reader to these papers.
Reference: 8. <author> T. Luba, </author> <title> Decomposition of Multiple-Valued Functions, </title> <booktitle> Proc. 25th International Symposium on Multiple-Valued Logic, </booktitle> <address> Bloomington, Indiana, </address> <pages> pp. 256-261, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: For a discussion of other works related to Boolean function decomposition and its applications see [3]. Decompositions of multiple-valued functions and relations have been studied recently in <ref> [5, 8, 10] </ref>; for a discussion of the literature in this field we refer the reader to these papers. In [8] "rough partitions" (blankets) are used to represent functions. <p> For a discussion of other works related to Boolean function decomposition and its applications see [3]. Decompositions of multiple-valued functions and relations have been studied recently in [5, 8, 10]; for a discussion of the literature in this field we refer the reader to these papers. In <ref> [8] </ref> "rough partitions" (blankets) are used to represent functions. The authors of [5, 10] use "generalized don't cares," i.e., situations in which an output may take on any value in some set that is a proper subset of the domain of that output.
Reference: 9. <author> T. Luba and H. Selvaraj, </author> <title> A General Approach to Boolean Function Decomposition and its Application in FPGA-Based Synthesis, </title> <booktitle> VLSI Design, </booktitle> <volume> Vol. 3, </volume> <pages> Nos. 3-4, pp. 289-300, </pages> <year> 1995. </year>
Reference-contexts: The cube cover method has been extended to multiple-output functions in the 1980's [2]. More recently, Luba and Selvaraj developed an approach to Boolean function decomposition using set systems and their generalizations <ref> [9] </ref>. Very similar methods were independently discovered by Shestakov [12, 13]. The approach of Luba and Selvaraj has been formalized by Brzozowski and Luba, who introduced the term "blankets" for certain types of generalized set systems [3]. <p> Recently, Lou and Brzozowski have also formalized the method of Shestakov using the same blanket formalism, and have explained its relation to the work of <ref> [9] </ref> in [7]. For a discussion of other works related to Boolean function decomposition and its applications see [3]. Decompositions of multiple-valued functions and relations have been studied recently in [5, 8, 10]; for a discussion of the literature in this field we refer the reader to these papers.
Reference: 10. <author> M. Perkowski et al., </author> <title> Decomposition of Multiple-Valued Relations, </title> <booktitle> Proc. IEEE International Symposium on Multiple-Valued Logic, </booktitle> <address> Antigonish, Nova Scotia, Canada, </address> <pages> pp. 13-18, </pages> <month> May </month> <year> 1997. </year>
Reference-contexts: For a discussion of other works related to Boolean function decomposition and its applications see [3]. Decompositions of multiple-valued functions and relations have been studied recently in <ref> [5, 8, 10] </ref>; for a discussion of the literature in this field we refer the reader to these papers. In [8] "rough partitions" (blankets) are used to represent functions. <p> Decompositions of multiple-valued functions and relations have been studied recently in [5, 8, 10]; for a discussion of the literature in this field we refer the reader to these papers. In [8] "rough partitions" (blankets) are used to represent functions. The authors of <ref> [5, 10] </ref> use "generalized don't cares," i.e., situations in which an output may take on any value in some set that is a proper subset of the domain of that output.
Reference: 11. <author> J. P. Roth and R. M. Karp, </author> <title> Minimization over Boolean Graphs, </title> <journal> IBM Journal of Research and Development, </journal> <volume> Vol. 6, </volume> <pages> pp. 227-238, </pages> <month> April </month> <year> 1962. </year>
Reference-contexts: OGP0000871 and a postgraduate scholarship. Revised February 12, 1998. 1 Boolean functions [1]. These methods were extended by Curtis to decompositions of a function in terms of several functions [4]. A more compact representation of Boolean functions in terms of cubes was introduced by Roth and Karp <ref> [11] </ref>. The cube cover method has been extended to multiple-output functions in the 1980's [2]. More recently, Luba and Selvaraj developed an approach to Boolean function decomposition using set systems and their generalizations [9]. Very similar methods were independently discovered by Shestakov [12, 13].
Reference: 12. <author> E. Shestakov, </author> <title> Decomposition of Systems of Completely Defined Boolean Functions by Argument Covering, </title> <journal> Automatic Control and Computer Sciences, </journal> <volume> Vol. 28, No. 1, </volume> <pages> pp. 12-20, </pages> <year> 1994. </year>
Reference-contexts: The cube cover method has been extended to multiple-output functions in the 1980's [2]. More recently, Luba and Selvaraj developed an approach to Boolean function decomposition using set systems and their generalizations [9]. Very similar methods were independently discovered by Shestakov <ref> [12, 13] </ref>. The approach of Luba and Selvaraj has been formalized by Brzozowski and Luba, who introduced the term "blankets" for certain types of generalized set systems [3].
Reference: 13. <author> E. Shestakov, </author> <title> Decomposition of Systems of Incompletely Defined Boolean Functions by Argument Cover, </title> <journal> Automatic Control and Computer Sciences, </journal> <volume> Vol. 28, No. 6, </volume> <pages> pp. 4-15, </pages> <year> 1994. </year>
Reference-contexts: The cube cover method has been extended to multiple-output functions in the 1980's [2]. More recently, Luba and Selvaraj developed an approach to Boolean function decomposition using set systems and their generalizations [9]. Very similar methods were independently discovered by Shestakov <ref> [12, 13] </ref>. The approach of Luba and Selvaraj has been formalized by Brzozowski and Luba, who introduced the term "blankets" for certain types of generalized set systems [3].
References-found: 13

