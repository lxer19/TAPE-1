URL: http://elysium.cs.ucdavis.edu/~nico/seminar/papers/webos.ps.gz
Refering-URL: http://elysium.cs.ucdavis.edu/~nico/seminar/seminar.html
Root-URL: http://www.cs.ucdavis.edu
Title: WebOS: Operating System Services for Wide Area Applications  
Author: Amin Vahdat, Paul Eastham, Chad Yoshikawa, Eshwar Belani, Thomas Anderson, David Culler Michael Dahlin 
Address: Austin  
Affiliation: Computer Science Division University of California, Berkeley and  University of Texas,  
Abstract: In this paper, we argue for the power of providing a common set of OS services to wide area applications, including mechanisms for resource discovery, a global namespace, remote process execution, resource management, authentication, and security. On a single machine, application developers can rely on the local operating system to provide these abstractions. In the wide area, however, application developers are forced to build these abstractions themselves or to do without. This ad-hoc approach wastes programmer effort and system resources. To address these problems, WebOS provides basic operating systems services needed to build applications that are geographically distributed, highly available, incrementally scalable, and dynamically reconfiguring. Experience with a number of applications developed under WebOS indicates that it simplifies system development and improves resource utilization. In particular, we use WebOS to implement Rent-A-Server to provide dynamic replication of overloaded services across the wide area in response to client demands. 
Abstract-found: 1
Intro-found: 1
Reference: [Accetta et al. 1986] <author> M. Accetta, R. Baron, W. Bolosky, D. Golub, R. Rashid, A. Tevanian, and M. Young. </author> <title> Mach: A New Kernel Foundation For UNIX Development. </title> <booktitle> In Proceedings of the 1986 USENIX Summer Conference, </booktitle> <pages> pp. 93-112, </pages> <month> June </month> <year> 1986. </year>
Reference-contexts: The introduction of local area networks in the 80's expanded this role even further. A goal of network operating systems such as Locus [Popek et al. 1981], Mach <ref> [Accetta et al. 1986] </ref>, Sprite [Nelson et al. 1988], Amoeba [Mullen-der et al. 1990], and V [Cheriton 1988] was to make re This work was supported in part by the Defense Advanced Research Projects Agency (N00600-93-C-2481, F30602-95-C-0014), the National Science Foundation (CDA 9401156), Sun Microsystems, California MICRO, Novell, Hewlett Packard, Intel,
Reference: [Alexandrov et al. 1997] <author> A. D. Alexandrov, M. Ibel, K. E. Schauser, and C. J. Scheiman. Ufo: </author> <title> A Personal Global File System Based on User-Level Extensions to the Operating System. </title> <booktitle> In Proceedings of the 1997 USENIX Technical Conference, </booktitle> <address> Ana-heim, CA, </address> <month> January </month> <year> 1997. </year>
Reference-contexts: Our work draws upon a large body of previous work in file systems exporting a global namespace, including AFS [Howard et al. 1988], Alex [Cate 1992], Coda [Kistler & Satyanarayanan 1992], Bayou [Terry et al. 1995], and UFO <ref> [Alexandrov et al. 1997] </ref>. The main differentiating point between WebFS and these earlier works is backward compatibility with the HTTP name space and a security model appropriate for wide area access.
Reference: [Anderson et al. 1995] <author> T. E. Anderson, M. D. Dahlin, J. M. Neefe, D. A. Patterson, D. S. Roselli, and R. Y. Wang. </author> <title> Serverless Network File Systems. </title> <booktitle> In Proceedings of the 15th ACM Symposium on Operating Systems Principles, </booktitle> <pages> pp. 109-126, </pages> <month> De-cember </month> <year> 1995. </year>
Reference-contexts: We plan to explore tradeoffs associated with maintaining directories of peer cache contents <ref> [Anderson et al. 1995, Feeley et al. 1995] </ref>, hints [Sarkar & Hartman 1996], or using simple IP muilticasts or broadcasts. WebOS simplifies the implementation of the cooperative cache in a number of ways. First, Smart Clients are used to determine the appropriate proxy cache to contact.
Reference: [Baldeschwieler et al. 1996] <author> E. Baldeschwieler, R. Blumofe, and E. Brewer. </author> <title> Atlas: An Infrastructure for Global Computing. </title> <booktitle> In Proc. of the Seventh ACM SIGOPS European Workshop: Systems Support for Worldwide Applcations, </booktitle> <month> September </month> <year> 1996. </year>
Reference-contexts: Beginning with the WebOS framework, our prototype of Rent-A-Server was operational in less than one week. 9 Related Work A number of recent efforts exploit computational resources available on the Internet for wide area parallel programming, including Wax [Stout 1994], Legion [Grimshaw et al. 1995], Atlas <ref> [Baldeschwieler et al. 1996] </ref>, Globus [Foster & Kesselman 1996], and NetSolve [Casanova & Dongarra 1996]. WebOS shares a need for similar underlying technology with these systems (such as the need for a global name space and file system).
Reference: [Berners-Lee 1995] <author> T. Berners-Lee. </author> <title> Hypertext Transfer Protocol HTTP/1.0, October 1995. HTTP Working Group Internet Draft. </title>
Reference-contexts: Load balancing across the wide area is achieved by instructing users to access a particular mirror site based on their location. To distribute load across servers, techniques such as HTTP redirect <ref> [Berners-Lee 1995] </ref> or DNS Aliasing [Brisco 1995, Katz et al. 1994] can be used to send user requests to individual machines. With HTTP redirect, a front end machine redirects the client to resend the request to an available worker machine.
Reference: [Bershad & Pinkerton 1988] <author> B. N. Bershad and C. B. Pinker-ton. </author> <title> Watchdogs Extending the UNIX File System. </title> <journal> Computing Systems, </journal> <volume> 1(2) </volume> <pages> 169-188, </pages> <month> Spring </month> <year> 1988. </year>
Reference-contexts: Once an object's profile is complete (the process and its children exit), TREC commits the profile to persistent storage and then executes a blocking WebFS system call to put watchpoints on both the program executable and its input files <ref> [Bershad & Pinkerton 1988] </ref>. The system call returns on modification to any of the target files, allowing TREC to inform WebFS of the change. On notification, WebFS unlinks the dynamic object results and sends invalidation messages to all sites caching the object.
Reference: [Bershad et al. 1995] <author> B. N. Bershad, S. Savage, E. G. S. P. Pardyak, M. Fiuczynski, D. Becker, C. Chambers, and S. Eggers. </author> <title> Extensibility, Safety and Performance in the SPIN Operating System. </title> <booktitle> In Proceedings of the 15th ACM Symposium on Operating Systems Principles, </booktitle> <month> December </month> <year> 1995. </year>
Reference-contexts: The slowdown is caused by the multiple context switches associated with bouncing necessary system calls to TREC. We believe that this overhead can be largely eliminated by integrating TREC with an in-kernel system call interposition tool <ref> [Jones 1993, Bershad et al. 1995, Ghorm-ley et al. 1996] </ref>. To demonstrate the utility of TREC, we take the common example of performing a query to an Internet search engine such as Alta Vista or HotBot [Brewer & Gauthier 1995].
Reference: [Brewer & Gauthier 1995] <author> E. Brewer and P. Gauthier. </author> <title> The Inktomi Search Engine. </title> <note> http://- www.inktomi.com, 1995. </note>
Reference-contexts: To demonstrate the utility of TREC, we take the common example of performing a query to an Internet search engine such as Alta Vista or HotBot <ref> [Brewer & Gauthier 1995] </ref>. Queries returning a large number of results are by default truncated to display the first 10-20 matches. However, if the next n matches are later requested, the entire query is re-executed [Brewer 1997].
Reference: [Brewer 1997] <author> E. Brewer. </author> <type> Personal Communication, </type> <month> March </month> <year> 1997. </year>
Reference-contexts: Note that many popular Internet services already are statically set up to run at third party sites to pro-rate the cost of a fault tolerant, high bandwidth Internet connection over multiple services <ref> [Brewer 1997] </ref>; we are merely arguing that with the right support, these arrangements can be made dynamically. In addition to demonstrating the synergy of a common framework for wide area distributed applications, we make a number of specific contributions. <p> Queries returning a large number of results are by default truncated to display the first 10-20 matches. However, if the next n matches are later requested, the entire query is re-executed <ref> [Brewer 1997] </ref>. Using TREC to cache search results for a short period of time can improve search overhead. To demonstrate this point, we measured the overhead of executing a simple CGI-bin program that returns 10 KB of HTML.
Reference: [Brisco 1995] <author> T. Brisco. </author> <title> DNS Support for Load Balancing, </title> <month> April </month> <year> 1995. </year> <title> Network Working Group RFC 1794. </title>
Reference-contexts: Load balancing across the wide area is achieved by instructing users to access a particular mirror site based on their location. To distribute load across servers, techniques such as HTTP redirect [Berners-Lee 1995] or DNS Aliasing <ref> [Brisco 1995, Katz et al. 1994] </ref> can be used to send user requests to individual machines. With HTTP redirect, a front end machine redirects the client to resend the request to an available worker machine.
Reference: [Burrows et al. 1989] <author> M. Burrows, M. Abadi, and R. Need-ham. </author> <title> A Logic of Authentication. </title> <booktitle> In Proceedings of the Twelfth ACM Symposium on Operating Systems Principles, </booktitle> <pages> pp. 1-13, </pages> <month> December </month> <year> 1989. </year>
Reference: [Casanova & Dongarra 1996] <author> H. Casanova and J. Dongarra. NetSolve: </author> <title> A Network Server for Solving Computational Science Problems. </title> <booktitle> In Proceedings of Supercomputing '96, </booktitle> <month> November </month> <year> 1996. </year>
Reference-contexts: of Rent-A-Server was operational in less than one week. 9 Related Work A number of recent efforts exploit computational resources available on the Internet for wide area parallel programming, including Wax [Stout 1994], Legion [Grimshaw et al. 1995], Atlas [Baldeschwieler et al. 1996], Globus [Foster & Kesselman 1996], and NetSolve <ref> [Casanova & Dongarra 1996] </ref>. WebOS shares a need for similar underlying technology with these systems (such as the need for a global name space and file system).
Reference: [Cate 1992] <author> V. Cate. </author> <title> Alex a Global Filesystem. </title> <booktitle> In Proceedings of the 1992 USENIX File System Workshop, </booktitle> <pages> pp. 1-12, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Our work draws upon a large body of previous work in file systems exporting a global namespace, including AFS [Howard et al. 1988], Alex <ref> [Cate 1992] </ref>, Coda [Kistler & Satyanarayanan 1992], Bayou [Terry et al. 1995], and UFO [Alexandrov et al. 1997]. The main differentiating point between WebFS and these earlier works is backward compatibility with the HTTP name space and a security model appropriate for wide area access.
Reference: [CCITT 1988] <author> CCITT. </author> <title> The Directory Authentication Framework. </title> <type> Recommendation X.509, </type> <year> 1988. </year>
Reference-contexts: Finally, WebOS provides an interface for registering users and for specifying access rights to individual system resources. The WebOS security model is summarized in Figure 3. 5.1 Link Layer WebOS relies upon a hierarchy of certification authorities (CA's). These authorities are responsible for producing X.509 certificates <ref> [CCITT 1988] </ref> mapping principals to their public keys [Diffie & Hellman 1977, Rivest et al. 1978].
Reference: [Chankhunthod et al. 1996] <author> A. Chankhunthod, P. Danzig, C. Neerdaels, M. Schwartz, and K. Worrell. </author> <title> A Hierarchical Internet Object Cache. </title> <booktitle> In Proceedings of the 1996 USENIX Technical Conference, </booktitle> <month> January </month> <year> 1996. </year>
Reference-contexts: Existing proposals for hierarchical caching of the Web suffer from an inability to dramatically grow the cache size and processing power at each level of the hierarchy <ref> [Chankhunthod et al. 1996] </ref>. With cooperative caching among peer servers, the aggregate capacity grows dramatically with the distance from the client. <p> We plan to build on the work done in Coda and Bayou to address issues of replication and fault tolerance in the wide area. Harvest <ref> [Chankhunthod et al. 1996] </ref>, Squid [Squ 1996], and other Web caching efforts have focused on methods of extending the client cache across the Internet to caching proxies. Caching proxies in general are limited by a number of ways.
Reference: [Cheriton 1988] <author> D. R. Cheriton. </author> <title> The V Distributed System. </title> <booktitle> In Communications of the ACM, </booktitle> <pages> pp. 314-333, </pages> <month> March </month> <year> 1988. </year>
Reference-contexts: The introduction of local area networks in the 80's expanded this role even further. A goal of network operating systems such as Locus [Popek et al. 1981], Mach [Accetta et al. 1986], Sprite [Nelson et al. 1988], Amoeba [Mullen-der et al. 1990], and V <ref> [Cheriton 1988] </ref> was to make re This work was supported in part by the Defense Advanced Research Projects Agency (N00600-93-C-2481, F30602-95-C-0014), the National Science Foundation (CDA 9401156), Sun Microsystems, California MICRO, Novell, Hewlett Packard, Intel, Microsoft, and Mitsubishi. Anderson was also supported by a National Science Foundation Presidential Faculty Fellowship. <p> Further, proxies are logical extensions of the client making it difficult for service providers to track such things as hit counts. Rent-A-Server addresses the limitations of proxy caching mechanisms by allowing full replication of overloaded services at locations determined by client access patterns. The V kernel <ref> [Cheriton 1988] </ref> uses multicast for client communication to multiple members of a server group for load balancing and fault tolerance. This mechanism is related to our use of Smart Clients for extending service functionality onto the client. However, Smart Clients allow service-specific naming and load balancing algorithms.
Reference: [Dahlin et al. 1994] <author> M. Dahlin, R. Wang, T. Anderson, and D. Patterson. </author> <title> Cooperative Caching: Using Remote Client Memory to Improve File System Performance. </title> <booktitle> In Proceedings of the 1st USENIX Symposium on Operating Systems Design and Implementation, </booktitle> <pages> pp. 267-280, </pages> <month> November 14-17 </month> <year> 1994. </year>
Reference-contexts: Resource allocation within the virtual machine allows external users to take advantage of the aggregate computing resources, while ensuring system developers have the requisite priority. 7.3 Wide Area Cooperative Cache We are using WebOS to build a geographically distributed Web cooperative cache <ref> [Dahlin et al. 1994] </ref> to both validate our design and to provide an immediate benefit to the Internet by doing more intelligent caching of Web content.
Reference: [Deering 1991] <author> S. E. Deering. </author> <title> Multicast Routing in a Data-gram Internetwork. </title> <type> PhD thesis, </type> <institution> Stanford University, </institution> <month> December </month> <year> 1991. </year>
Reference-contexts: These properties are set and accessed through the UNIX ioctl system call. Currently, WebFS implements the last writer wins [Howard et al. 1988] cache consistency protocol to support traditional file access as well as an IP multicast-based <ref> [Deering 1991] </ref> update/invalidate protocol for widely-shared, frequently updated data files. Once IP multicast becomes widely deployed, its use will increase the efficiency of popular Internet push applications [Poi 1996]. We believe that providing IP multicast support at the filesystem interface will simplify the development of these applications.
Reference: [Dias et al. 1996] <author> D. Dias, W. Kish, R. Mukherjee, and R. Tewari. </author> <title> A Scalable and Highly Available Web Server. </title> <booktitle> In Proceedings of COMPCON, </booktitle> <month> March </month> <year> 1996. </year>
Reference-contexts: However, currently load balancing with DNS aliasing is restricted to round-robin, making it difficult to use service-specific knowledge such as load information. Further, because clients cache hostname to IP address mappings, a single server can become overloaded with multiple requests while other servers remain relatively idle <ref> [Dias et al. 1996] </ref>. 3.2 Smart Clients In WebOS, we address the shortcomings of existing solutions for resource discovery through Smart Clients [Yoshikawa et al. 1997]. Smart Clients enable extensions of server functionality to be dynamically loaded onto the client machine.
Reference: [Diffie & Hellman 1977] <author> W. Diffie and M. Hellman. </author> <title> New Directons in Cryptography. </title> <journal> In IEEE Transactions on Information Theory, </journal> <pages> pp. 74-84, </pages> <month> June </month> <year> 1977. </year>
Reference-contexts: The WebOS security model is summarized in Figure 3. 5.1 Link Layer WebOS relies upon a hierarchy of certification authorities (CA's). These authorities are responsible for producing X.509 certificates [CCITT 1988] mapping principals to their public keys <ref> [Diffie & Hellman 1977, Rivest et al. 1978] </ref>.
Reference: [Dig 1995] <institution> Digital Equipment Corporation. Alta Vista, </institution> <year> 1995. </year> <note> http://www.altavista.digital.com/. </note>
Reference-contexts: The result is that wide area applications that require access to remote CPU cycles, memory, or disk must be programmed in an ad hoc and application-specific manner. For example, many popular services, such as Digital's Alta Vista <ref> [Dig 1995] </ref> or Netscape's download page [Net 1994], are geographically replicated to improve bandwidth, reduce latency, and improve availability no single connection onto the Internet can support tens of millions of users. <p> Our discussion focuses on resource discovery in the context of HTTP service accessed through URL's. However, our techniques extend to other domains in a straightforward manner. 3.1 Current Approaches To address increasing demand, some popular services such as the Alta Vista search engine <ref> [Dig 1995] </ref> or the Netscape download page [Net 1994] are geographically distributed by being replicated manually by the service provider. Load balancing across the wide area is achieved by instructing users to access a particular mirror site based on their location.
Reference: [Exc 1997] <author> Excite Corporation. </author> <title> Excite for Web Servers, </title> <note> 1997. http://www.excite.com/navigate/AT-helpdoc.html. </note>
Reference-contexts: The performance improvement assumes a no-op CGI program; the improvements would be more dramatic if the CGI program did real work. To further investigate this, we plan to take TREC measurements for search queries to an index of our local site produced by Excite <ref> [Exc 1997] </ref>, a publically available indexing tool and search engine. We note that TREC may also be useful outside of the context of WebOS.
Reference: [Feeley et al. 1995] <author> M. M. Feeley, W. E. Morgan, F. H. Pighin, A. R. Karlin, H. M. Levy, and C. A. Thekkath. </author> <title> Implementing Global Memory Management in a Workstation Cluster. </title> <booktitle> In Proceedings of the 15th ACM Symposium on Operating Systems Principles, </booktitle> <month> December </month> <year> 1995. </year>
Reference-contexts: We plan to explore tradeoffs associated with maintaining directories of peer cache contents <ref> [Anderson et al. 1995, Feeley et al. 1995] </ref>, hints [Sarkar & Hartman 1996], or using simple IP muilticasts or broadcasts. WebOS simplifies the implementation of the cooperative cache in a number of ways. First, Smart Clients are used to determine the appropriate proxy cache to contact.
Reference: [Foster & Kesselman 1996] <author> I. Foster and C. Kesselman. Globus: </author> <title> A Metacomputing Infrastructure Toolkit. </title> <booktitle> In Proc. Workshop on Environments and Tools, </booktitle> <year> 1996. </year>
Reference-contexts: with the WebOS framework, our prototype of Rent-A-Server was operational in less than one week. 9 Related Work A number of recent efforts exploit computational resources available on the Internet for wide area parallel programming, including Wax [Stout 1994], Legion [Grimshaw et al. 1995], Atlas [Baldeschwieler et al. 1996], Globus <ref> [Foster & Kesselman 1996] </ref>, and NetSolve [Casanova & Dongarra 1996]. WebOS shares a need for similar underlying technology with these systems (such as the need for a global name space and file system).
Reference: [Freier et al. 1996] <author> A. Freier, P. Karlton, and P. Kocher. </author> <title> Secure Socket Layer. Netscape, </title> <month> March </month> <year> 1996. </year>
Reference-contexts: As an explicit design choice, we leverage as much functionality as possible from existing low level services. For example, for compatibility with existing applications, we adopt IP address and URL's for the global name space. TCP is used to provide reliable communication, while SSL <ref> [Freier et al. 1996] </ref> is used for link level security. 3 Resource Discovery In this section, we discuss how WebOS clients locate representatives of geographically distributed and dynamically reconfiguring services, while providing load balancing and end-to-end high availability. Our approach consists of a number of components. <p> By using these certificates and by placing trust in the CA's, we are able to guarantee that any data successfully decrypted by a given public key was in fact generated by the associated principal. We use the Secure Socket Layer (SSL) <ref> [Freier et al. 1996] </ref> to authenticate the identity of communicating servers to one another.
Reference: [Ghormley et al. 1996] <author> D. P. Ghormley, D. Petrou, and T. E. Anderson. SLIC: </author> <title> Secure Load-able Interposition Code. </title> <month> May </month> <year> 1996. </year> <note> See http://now.cs.berkeley.edu/Slic/. </note>
Reference: [Gifford et al. 1991] <author> D. K. Gifford, P. Jouvelot, M. Sheldon, and J. O'Toole. </author> <title> Semantic File Systems. </title> <booktitle> In 13th ACM Symposium on Operating Systems Principles, </booktitle> <month> October </month> <year> 1991. </year>
Reference-contexts: We have implemented transparent result caching (TREC) to enable caching of a certain class of dynamic objects. TREC allows program results to be stored as WebFS files, as in the Semantic File System <ref> [Gifford et al. 1991] </ref>. After the initial request for a particular program result, WebOS is able to return the cached contents of the file rather than re-executing the program.
Reference: [Goldberg et al. 1996] <author> I. Goldberg, D. Wagner, R. Thomas, and E. Brewer. </author> <title> A Secure Environment for Untrusted Helper Applications. </title> <booktitle> In Proceedings of the Sixth USENIX Security Symposium, </booktitle> <month> July </month> <year> 1996. </year>
Reference-contexts: To maintain local system integrity and to ensure that running processes do not interfere with one another, the resource manager creates a virtual machine for process execution. We use Janus <ref> [Goldberg et al. 1996] </ref> to create such a virtual machine. Processes in the virtual machine execute with limited privileges, preventing them from interfering with the operation of processes in other virtual machines.
Reference: [Gosling & McGilton 1995] <author> J. Gosling and H. McGilton. </author> <title> The Java(tm) Language Environment: A White Paper. </title> <address> http://java.dimensionx.com/whitePaper /java-whitepaper-1.html, </address> <year> 1995. </year>
Reference-contexts: Smart Clients enable extensions of server functionality to be dynamically loaded onto the client machine. Java's <ref> [Gosling & McGilton 1995] </ref> portability and availability in all major Internet browsers allow us to distribute these extensions as Java applets. We believe that performing naming, load balancing, and fail over from the perspective of the client has a number of fundamental advantages over server-side implementations.
Reference: [Grimshaw et al. 1995] <author> A. Grimshaw, A. Nguyen-Tuong, and W. Wulf. </author> <title> Campus-Wide Computing: Results Using Legion at the University of Vir-ginia. </title> <type> Technical Report CS-95-19, </type> <institution> University of Virginia, </institution> <month> March </month> <year> 1995. </year>
Reference-contexts: Beginning with the WebOS framework, our prototype of Rent-A-Server was operational in less than one week. 9 Related Work A number of recent efforts exploit computational resources available on the Internet for wide area parallel programming, including Wax [Stout 1994], Legion <ref> [Grimshaw et al. 1995] </ref>, Atlas [Baldeschwieler et al. 1996], Globus [Foster & Kesselman 1996], and NetSolve [Casanova & Dongarra 1996]. WebOS shares a need for similar underlying technology with these systems (such as the need for a global name space and file system).
Reference: [Howard et al. 1988] <author> J. Howard, M. Kazar, S. Menees, D. Nichols, M. Satyanarayanan, R. Sidebotham, and M. West. </author> <title> Scale and Performance in a Distributed File System. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 6(1) </volume> <pages> 51-82, </pages> <month> February </month> <year> 1988. </year>
Reference-contexts: Finally, a list of user-extensible properties is associated with each WebFS file, extending basic properties such as owner and permissions with cache consistency policy and encryption policy. These properties are set and accessed through the UNIX ioctl system call. Currently, WebFS implements the last writer wins <ref> [Howard et al. 1988] </ref> cache consistency protocol to support traditional file access as well as an IP multicast-based [Deering 1991] update/invalidate protocol for widely-shared, frequently updated data files. Once IP multicast becomes widely deployed, its use will increase the efficiency of popular Internet push applications [Poi 1996]. <p> However, these systems focus on a programming model for computing across the wide area, while our work focuses on system level support for building and running wide area applications. Our work draws upon a large body of previous work in file systems exporting a global namespace, including AFS <ref> [Howard et al. 1988] </ref>, Alex [Cate 1992], Coda [Kistler & Satyanarayanan 1992], Bayou [Terry et al. 1995], and UFO [Alexandrov et al. 1997]. The main differentiating point between WebFS and these earlier works is backward compatibility with the HTTP name space and a security model appropriate for wide area access.
Reference: [Int 1997] <institution> Internet Weather Report, </institution> <year> 1997. </year> <note> http://- www.internetweather.com/. </note>
Reference-contexts: Finally, the authentication model allows proxies to validate their identities both to one another and to the client. 7.4 Internet Weather A number of sites are currently attempting to provide regular updates of congestion, latency, and partitions in the Internet <ref> [Mat 1996, Int 1997] </ref>. Such information is invaluable for services making placement and load balancing decisions. However, all current efforts take network measurements from a centralized site, making it difficult to measure network characteristics between two arbitrary sites.
Reference: [Jacobson 1988] <author> V. Jacobson. </author> <title> Congestion avoidance and control. </title> <booktitle> In Proceedings of ACM SIGCOMM '88, </booktitle> <pages> pp. 314-329, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: Rather, we believe that OS services should abstract the requirements of wide area applications. For exam ple, TCP provides flow control, in-order, and reliable delivery over congested, unreliable medium without requiring each application programmer to understand exponential backoff, slow start, or round-trip time variance estimation <ref> [Jacobson 1988] </ref>. TCP's success is a testament to the ability to win widespread acceptance by providing a simple, convenient interface to network resources.
Reference: [Jones 1993] <author> M. B. Jones. </author> <title> Interposition Agents: Transparently Interposing User Code at the System Interface. </title> <booktitle> In Proceedings of the 14th ACM Symposium on Operating Systems Principles, </booktitle> <pages> pp. 80-93, </pages> <month> December </month> <year> 1993. </year>
Reference-contexts: The slowdown is caused by the multiple context switches associated with bouncing necessary system calls to TREC. We believe that this overhead can be largely eliminated by integrating TREC with an in-kernel system call interposition tool <ref> [Jones 1993, Bershad et al. 1995, Ghorm-ley et al. 1996] </ref>. To demonstrate the utility of TREC, we take the common example of performing a query to an Internet search engine such as Alta Vista or HotBot [Brewer & Gauthier 1995].
Reference: [Katz et al. 1994] <author> E. D. Katz, M. Butler, and R. McGrath. </author> <title> A Scalable HTTP Server: The NCSA Prototype. </title> <booktitle> In First International Conference on the WorldWide Web, </booktitle> <month> April </month> <year> 1994. </year>
Reference-contexts: Load balancing across the wide area is achieved by instructing users to access a particular mirror site based on their location. To distribute load across servers, techniques such as HTTP redirect [Berners-Lee 1995] or DNS Aliasing <ref> [Brisco 1995, Katz et al. 1994] </ref> can be used to send user requests to individual machines. With HTTP redirect, a front end machine redirects the client to resend the request to an available worker machine. <p> Many HTTP server implementations achieve scalability by replicating their data across a fixed set of servers at a single site and then using the Domain Name Service (DNS) to randomly distribute requests across the servers <ref> [Katz et al. 1994] </ref>. Unfortunately, this approach requires that each site purchase enough computing power and network bandwidth to satisfy peak demand.
Reference: [Kistler & Satyanarayanan 1992] <author> J. J. Kistler and M. Satya-narayanan. </author> <title> Disconnected Operation in the Coda File System. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 10(1) </volume> <pages> 3-25, </pages> <month> February </month> <year> 1992. </year>
Reference-contexts: For example, invalidation driven optimistic consistency could be used for files shared between two geographically distributed sites implementing a service <ref> [Kistler & Satyanarayanan 1992, Terry et al. 1995] </ref>, while weaker consistency could be used for widely-shared files at client machines. As another example, to support service migration, WebFS may initially use large block sizes or prefetching to reduce cold-start misses and then convert to smaller blocks for minimizing false sharing. <p> To demonstrate this point, we have implemented a stock ticker application that regularly distributes (through multicast file writes) updated stock prices to interested clients performing blocking read operations. In addition to last-writer wins and IP multicast updates, we are in the process of extending WebFS to support optimistic reintegration <ref> [Kistler & Satyanarayanan 1992] </ref> to deal with the disconnected operation endemic to today's Internet. WebFS is implemented as a dynamically loadable Solaris file system extension interfacing at the vnode layer [Kleiman 1986]. <p> Our work draws upon a large body of previous work in file systems exporting a global namespace, including AFS [Howard et al. 1988], Alex [Cate 1992], Coda <ref> [Kistler & Satyanarayanan 1992] </ref>, Bayou [Terry et al. 1995], and UFO [Alexandrov et al. 1997]. The main differentiating point between WebFS and these earlier works is backward compatibility with the HTTP name space and a security model appropriate for wide area access.
Reference: [Kleiman 1986] <author> S. R. Kleiman. Vnodes: </author> <title> An Architecture For Multiple File System Types in SUN UNIX. </title> <booktitle> In Proceedings of the 1986 USENIX Summer Technical Conference, </booktitle> <pages> pp. 238-247, </pages> <year> 1986. </year>
Reference-contexts: WebFS is implemented as a dynamically loadable Solaris file system extension interfacing at the vnode layer <ref> [Kleiman 1986] </ref>. The vnode layer makes upcalls to a user level WebFS daemon for file accesses not cached in virtual memory. The WebFS daemon uses HTTP for access to standard Web sites.
Reference: [Lampson et al. 1991] <author> B. Lampson, M. Abadi, M. Burrows, and E. Wobber. </author> <title> Authentication in Distributed Systems: Theory and Practice. </title> <booktitle> In The 13th ACM Symposium on Operating Systems Principles, </booktitle> <pages> pp. 165-182, </pages> <month> October </month> <year> 1991. </year>
Reference: [Luotonen & Atlis 1994] <author> A. Luotonen and K. Atlis. </author> <title> WorldWide Web Proxies. </title> <booktitle> In First International Conference on the World-Wide Web, </booktitle> <month> April </month> <year> 1994. </year>
Reference-contexts: As an example of the importance of having server-controlled rather than client-controlled load distribution, some sites have recently asserted that proxy caches violate copyright laws by storing site content <ref> [Luotonen & Atlis 1994] </ref>. In effect, the proxies are reducing generated advertising revenues by hiding page access counts. periodically send load information to a load daemon. In response to an update, the load daemon transmits the state of all servers.
Reference: [Mat 1996] <institution> Matrix Information and Directory Services, Inc. MIDS Internet Weather Report, </institution> <year> 1996. </year> <note> See http://- www2.mids.org/weather/index.html. </note>
Reference-contexts: Finally, the authentication model allows proxies to validate their identities both to one another and to the client. 7.4 Internet Weather A number of sites are currently attempting to provide regular updates of congestion, latency, and partitions in the Internet <ref> [Mat 1996, Int 1997] </ref>. Such information is invaluable for services making placement and load balancing decisions. However, all current efforts take network measurements from a centralized site, making it difficult to measure network characteristics between two arbitrary sites.
Reference: [Mitzenmacher 1996] <author> M. Mitzenmacher. </author> <title> The Power of Two Choices in Randomized Load Balancing. </title> <type> PhD dissertation, </type> <institution> University of California, Berkeley, </institution> <year> 1996. </year>
Reference-contexts: In the case of Smart Clients, it is impractical to keep all clients abreast of changes in load of all servers. Given the high variability of load in the context of the Internet, clients using out of date information may make strictly worse choices than clients making random decisions <ref> [Mitzenmacher 1996] </ref>. Fortunately, Smart Clients can use more static state information to influence the load balancing decision, such as available servers, server capacity, server network connectivity, server location, and client location. While the specific load balancing algorithm is service-specific, we implement the following algorithm by default.
Reference: [Mockapetris & Dunlap 1988] <author> P. Mockapetris and K. Dun-lap. </author> <title> Development of the Domain Name System. </title> <booktitle> In Proc. SIGCOMM 88, </booktitle> <volume> volume 18, </volume> <pages> pp. 123-133, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: Currently, we use Alta Vista to perform this operation, however we plan to switch to a more lightweight technique, such as DNS <ref> [Mockapetris & Dunlap 1988] </ref>. The service's Smart Client applet is downloaded from one of these sites and operation proceeds normally as described in Section 3.2.
Reference: [Mullender et al. 1990] <author> S. J. Mullender, G. van Rossum, A. S. Tanenbaum, R. van Renesse, and H. van Staveren. </author> <title> Amoeba: A Distributed Operating System for the 1990s. </title> <journal> IEEE Computer Magazine, </journal> <volume> 23(5) </volume> <pages> 44-54, </pages> <month> May </month> <year> 1990. </year>
Reference: [Nelson et al. 1988] <author> M. Nelson, B. Welch, and J. Ouster-hout. </author> <title> Caching in the Sprite Network File System. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 6(1) </volume> <pages> 134-154, </pages> <month> February </month> <year> 1988. </year>
Reference-contexts: The introduction of local area networks in the 80's expanded this role even further. A goal of network operating systems such as Locus [Popek et al. 1981], Mach [Accetta et al. 1986], Sprite <ref> [Nelson et al. 1988] </ref>, Amoeba [Mullen-der et al. 1990], and V [Cheriton 1988] was to make re This work was supported in part by the Defense Advanced Research Projects Agency (N00600-93-C-2481, F30602-95-C-0014), the National Science Foundation (CDA 9401156), Sun Microsystems, California MICRO, Novell, Hewlett Packard, Intel, Microsoft, and Mitsubishi.
Reference: [Net 1994] <author> Netscape Communications Corporation. </author> <title> Netscape Navigator, </title> <note> 1994. http://www.- netscape.com. </note>
Reference-contexts: The result is that wide area applications that require access to remote CPU cycles, memory, or disk must be programmed in an ad hoc and application-specific manner. For example, many popular services, such as Digital's Alta Vista [Dig 1995] or Netscape's download page <ref> [Net 1994] </ref>, are geographically replicated to improve bandwidth, reduce latency, and improve availability no single connection onto the Internet can support tens of millions of users. <p> However, our techniques extend to other domains in a straightforward manner. 3.1 Current Approaches To address increasing demand, some popular services such as the Alta Vista search engine [Dig 1995] or the Netscape download page <ref> [Net 1994] </ref> are geographically distributed by being replicated manually by the service provider. Load balancing across the wide area is achieved by instructing users to access a particular mirror site based on their location.
Reference: [Ousterhout 1990] <author> J. Ousterhout. </author> <title> Why Aren't Operating Systems Getting Faster As Fast As Hardware?. </title> <booktitle> In Proceedings of the 1990 Summer USENIX Conference, </booktitle> <pages> pp. 247-256, </pages> <address> Anaheim, CA, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: The WebFS daemon uses HTTP for access to standard Web sites. If the remote site is also running WebFS, then authenticated read/write access is enabled through our own custom extensions to HTTP. To validate the performance of our system, we ran the modified Andrew Benchmark suite <ref> [Ousterhout 1990] </ref> for both WebFS and NFS [Walsh et al. 1985]. The NFS measurements were taken on a Sun Ultra Server making requests to an Auspex NFS server over Ethernet.
Reference: [Poi 1996] <author> PointCast. </author> <title> The PointCast Network, </title> <note> 1996. http://www.pointcast.com. </note>
Reference-contexts: Once IP multicast becomes widely deployed, its use will increase the efficiency of popular Internet push applications <ref> [Poi 1996] </ref>. We believe that providing IP multicast support at the filesystem interface will simplify the development of these applications. To demonstrate this point, we have implemented a stock ticker application that regularly distributes (through multicast file writes) updated stock prices to interested clients performing blocking read operations.
Reference: [Popek et al. 1981] <author> G. Popek, B. Walker, J. Chow, D. Ed-wards, C. Kline, G. Rudisin, and G. Thiel. </author> <title> LOCUS: A Network Transparent, High Reliability Distributed System. </title> <booktitle> In Proceedings of the 8th ACM Symposium on Operating Systems Principles, </booktitle> <pages> pp. 169-177, </pages> <month> December </month> <year> 1981. </year>
Reference-contexts: The introduction of local area networks in the 80's expanded this role even further. A goal of network operating systems such as Locus <ref> [Popek et al. 1981] </ref>, Mach [Accetta et al. 1986], Sprite [Nelson et al. 1988], Amoeba [Mullen-der et al. 1990], and V [Cheriton 1988] was to make re This work was supported in part by the Defense Advanced Research Projects Agency (N00600-93-C-2481, F30602-95-C-0014), the National Science Foundation (CDA 9401156), Sun Microsystems, California
Reference: [Rivest 1992] <author> R. L. Rivest. </author> <title> The MD5 Message Digest Algorithm. </title> <type> RFC 1321, </type> <month> April </month> <year> 1992. </year>
Reference-contexts: This transfer certificate is attached to the principal's X.509 certificate (identifying the principal) and an MD5 hash <ref> [Rivest 1992] </ref> of both the X.509 and transfer certificates encrypted in the user's private key. This en crypted hash certifies that the user actually created the transfer certificate.
Reference: [Rivest et al. 1978] <author> R. L. Rivest, A. Shamir, and L. </author> <note> Adelman. </note>
Reference-contexts: The WebOS security model is summarized in Figure 3. 5.1 Link Layer WebOS relies upon a hierarchy of certification authorities (CA's). These authorities are responsible for producing X.509 certificates [CCITT 1988] mapping principals to their public keys <ref> [Diffie & Hellman 1977, Rivest et al. 1978] </ref>.
References-found: 50

