URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/project/coda/Web/docdir/ipw88.ps.Z
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/project/coda/Web/docs-misc.html
Root-URL: 
Title: IPwatch: A Tool for Monitoring Network Locality  
Author: Mark J. Lorence M. Satyanarayanan Mark J. Lorence and M. Satyanarayanan 
Note: Copyright 1988  
Affiliation: Information Technology Center Carnegie Mellon University  Department of Computer Science Carnegie Mellon University  
Abstract: In this paper we introduce the concepts of Logical and Physical Network Locality and point out their importance to the performance of distributed systems. We then describe the design of IPwatch, a simple and inexpensive tool for monitoring logical network locality. IPwatch exploits short-term locality to enable monitoring of medium and long-term locality of large networks using modest computational resources. We describe experiments at Carnegie Mellon University to validate our ideas and to calibrate IPwatch. The results confirm the existence of substantial short-term locality in this environment. Less than 5 percent of the possible host pairs account for 75 percent of the traffic, and less than 15 percent of them account for 90 percent. Comparative measurements on another network in our environment show even stronger short-term locality. This work was supported by the National Science Foundation (Contract No. CCR-8657907), Defense Advanced Research Projects Agency (Order No. 4976, Contract F33615-84-K-1520) and the IBM Corporation. The views and conclusions in this document are those of the authors and should not be interpreted as representing the official policies of the funding agencies or Carnegie Mellon University. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <institution> AppleBus Link Access Protocol Specification Version 1.0. Apple Computer, Inc., </institution> <year> 1984. </year>
Reference-contexts: Environment The LAN at Carnegie Mellon University, where this work was performed, spans an area of about 1 square mile and encompasses 42 buildings. Figure 1 shows the details of this network. The LAN is composed of three different kinds of media: Ethernet, IBM token-ring, and Appletalk <ref> [1] </ref>. About 42% of the machines on the LAN are on Ethernet, 55% on token-ring, and 3% on Appletalk. There are approximately 60 subnets, usually one subnet per building, and a single Ethernet backbone.
Reference: 2. <institution> LANalyzer EX 5000E Ethernet Network Analyzer User Manual. Excelan Incorporated, </institution> <address> San Jose, California, </address> <year> 1986. </year>
Reference-contexts: Spatial locality is therefore not a meaningful concept here. 2.3. Measurement Existing tools are inadequate for measuring locality. Simple tools [15] merely present network utilization, packet counts and byte counts. More sophisticated tools allow selective filtering of packets <ref> [2] </ref>, but are not capable of dynamically modifying their behavior based on what connections seem "interesting" at any given time. Early in our design of a tool to measure locality, it became clear that a brute force technique for monitoring all possible pairs of machines was inappropriate.
Reference: 3. <institution> Technical Committee Computer Communications of the IEEE Computer Society. Carrier Sense Multiple Access Method and Physical Layer Specifications (CSMA/CD) ANSI/IEEE Std 802.3. The Institute of Electrical and Electronic Engineers, </institution> <year> 1985. </year>
Reference-contexts: Design of the Tool 3.1. Hardware The hardware we used for IPwatch had to possess certain important characteristics. First, it had to be usable with Ethernet <ref> [3] </ref> as well the IBM token-ring [4] since both these technologies are prevalent in our environment. Second, it had to possess adequate memory and processing power to perform monitoring without any loss of information even during periods of intense network activity.
Reference: 4. <institution> Technical Committee Computer Communications of the IEEE Computer Society. Token-Ring Access Method and Physical Layer Specifications, ANSI/IEEE Std 802.5. The Institute of Electrical and Electronic Engineers, </institution> <year> 1985. </year>
Reference-contexts: Design of the Tool 3.1. Hardware The hardware we used for IPwatch had to possess certain important characteristics. First, it had to be usable with Ethernet [3] as well the IBM token-ring <ref> [4] </ref> since both these technologies are prevalent in our environment. Second, it had to possess adequate memory and processing power to perform monitoring without any loss of information even during periods of intense network activity. <p> Although this restriction complicates programming it has not noticeably affected the performance of the tool. Entries in both caches are identical. Each entry is 22 bytes long and consists of the following fields: struct STPD_entry -unsigned char ip_dest <ref> [4] </ref>; /* dest IP address */ unsigned char ip_src [4]; /* src IP address */ long pkts; /* no. pkts - this connection */ long bytes; /* no. bytes - this connection */ short front_ptr; /* front ptr for chaining */ short back_ptr; /* back ptr for chaining */ short table_no; <p> Although this restriction complicates programming it has not noticeably affected the performance of the tool. Entries in both caches are identical. Each entry is 22 bytes long and consists of the following fields: struct STPD_entry -unsigned char ip_dest <ref> [4] </ref>; /* dest IP address */ unsigned char ip_src [4]; /* src IP address */ long pkts; /* no. pkts - this connection */ long bytes; /* no. bytes - this connection */ short front_ptr; /* front ptr for chaining */ short back_ptr; /* back ptr for chaining */ short table_no; /* table number for chaining */ short no_ticks_yet; /*
Reference: 5. <author> Morris, J. H., Satyanarayanan, M., Conner, M.H., Howard, J.H., Rosenthal, D.S. and Smith, F.D. "Andrew: </author> <title> A Distributed Personal Computing Environment". </title> <journal> Communications of the ACM 29, </journal> <month> 3 (March </month> <year> 1986). </year>
Reference-contexts: Uneven loading of subnets is a secondary cause. Ignoring the effects of network topology can result in suboptimal use of a network by a distributed system. Nonuniform performance is already observed by users of large distributed systems such as Andrew <ref> [5] </ref>. Further growth will exacerbate the problem. This paper describes the design, implementation and calibration of a tool called IPwatch that will assist implementors in building and maintaining distributed systems that make optimal use of the underlying network.
Reference: 6. <author> Nichols, D.A. </author> <title> Using Idle Workstations in a Shared Computing Environment. </title> <booktitle> Proceedings of the 11th ACM Symposium on Operating System Principles, </booktitle> <month> November, </month> <year> 1987. </year>
Reference-contexts: These considerations will increase in importance as distributed systems become more pervasive. During the same period of time, distributed systems have been evolved to to provide Network Transparency for a variety of services such as remote file access [13], electronic mail [12] and remote program execution <ref> [6] </ref>. Network transparency masks underlying network complexity. Neither users nor application programs need be concerned with the details of the network traffic they generate. Unfortunately, performance inhomogeneities cannot be hidden even when a network is rendered functionally homogeneous.
Reference: 7. <author> Plummer, David C. </author> <title> An Ethernet Address Resolution Protocol. </title> <type> Tech. </type> <institution> Rept. RFC826, Network Working Group, </institution> <year> 1982. </year>
Reference-contexts: IP packets can be sent between any pair of machines at CMU without explicit routing information. Of the non-IP traffic, about 8 percent is Decnet [16]. The remaining 7% is composed of a miscellany of other protocols such as ARP <ref> [7] </ref>, ICMP [9] and proprietary Apple protocols. Since TCP/IP has become a de facto standard at CMU we anticipate that its share of traffic will increase in the future. Consequently our tool only monitors IP traffic and ignores other packets.
Reference: 8. <author> Postel, Jon, </author> <title> Editor. Internet Protocol DARPA Internet Program Protocol Specification. </title> <type> Tech. </type> <institution> Rept. RFC791, DARPA, </institution> <year> 1981. </year>
Reference-contexts: About 42% of the machines on the LAN are on Ethernet, 55% on token-ring, and 3% on Appletalk. There are approximately 60 subnets, usually one subnet per building, and a single Ethernet backbone. TCP/IP <ref> [8, 10] </ref> is the dominant protocol in use, accounting for over 85 percent of the packet traffic. The routers that connect subnets to the backbone support a homogeneous IP address space. IP packets can be sent between any pair of machines at CMU without explicit routing information.
Reference: 9. <author> Postel, Jon. </author> <title> Internet Control Message Protocol DARPA Internet Program Protocol Specification. </title> <type> Tech. </type> <institution> Rept. RFC792, Network Working Group, </institution> <year> 1981. </year>
Reference-contexts: IP packets can be sent between any pair of machines at CMU without explicit routing information. Of the non-IP traffic, about 8 percent is Decnet [16]. The remaining 7% is composed of a miscellany of other protocols such as ARP [7], ICMP <ref> [9] </ref> and proprietary Apple protocols. Since TCP/IP has become a de facto standard at CMU we anticipate that its share of traffic will increase in the future. Consequently our tool only monitors IP traffic and ignores other packets.
Reference: 10. <author> Postel, Jon, </author> <title> Editor. Transmission Control Protocol DARPA Internet Program Protocol Specification. </title> <type> Tech. </type> <institution> Rept. RFC793, DARPA, </institution> <year> 1981. </year>
Reference-contexts: About 42% of the machines on the LAN are on Ethernet, 55% on token-ring, and 3% on Appletalk. There are approximately 60 subnets, usually one subnet per building, and a single Ethernet backbone. TCP/IP <ref> [8, 10] </ref> is the dominant protocol in use, accounting for over 85 percent of the packet traffic. The routers that connect subnets to the backbone support a homogeneous IP address space. IP packets can be sent between any pair of machines at CMU without explicit routing information.
Reference: 11. <author> Raper, L.K. </author> <title> The CMU PC Server Project. </title> <type> Tech. </type> <institution> Rept. CMU-ITC-051, Information Technology Center, Carnegie Mellon University, </institution> <month> February, </month> <year> 1986. </year>
Reference-contexts: Although write-sharing is rare for private files, it is common for shared writable directories such as bulletin boards. The effect of this aspect of the design on locality is an open question. Finally, low-function machines such as the IBM-PC use the Andrew file system via surrogate workstations called PCServers <ref> [11] </ref>. PCServers are located on the same subnet as the PCs, but may access servers on other networks. Thus the logical simplicity of the Andrew file system at the user level does not carry over to the next level of detail.
Reference: 12. <author> Rosenberg, J., Everhart, C.F. and Borenstein, N.S. </author> <title> An Overview of the Andrew Message System. </title> <booktitle> Proceedings of the ACM Sigcomm '87 Workshop, </booktitle> <address> Stowe, Vermont, </address> <month> August, </month> <year> 1987. </year>
Reference-contexts: These considerations will increase in importance as distributed systems become more pervasive. During the same period of time, distributed systems have been evolved to to provide Network Transparency for a variety of services such as remote file access [13], electronic mail <ref> [12] </ref> and remote program execution [6]. Network transparency masks underlying network complexity. Neither users nor application programs need be concerned with the details of the network traffic they generate. Unfortunately, performance inhomogeneities cannot be hidden even when a network is rendered functionally homogeneous.
Reference: 13. <author> Satyanarayanan, M., Howard, J.H., Nichols, D.N., Sidebotham, R.N., Spector, A.Z. and West, M.J. </author> <title> The ITC Distributed File System: </title> <booktitle> Principles and Design. Proceedings of the 10th ACM Symposium on Operating System Principles, </booktitle> <month> December, </month> <year> 1985. </year>
Reference-contexts: These considerations will increase in importance as distributed systems become more pervasive. During the same period of time, distributed systems have been evolved to to provide Network Transparency for a variety of services such as remote file access <ref> [13] </ref>, electronic mail [12] and remote program execution [6]. Network transparency masks underlying network complexity. Neither users nor application programs need be concerned with the details of the network traffic they generate. Unfortunately, performance inhomogeneities cannot be hidden even when a network is rendered functionally homogeneous.
Reference: 14. <author> Shafer, Steven. </author> <title> The SUP Software Upgrade Protocol. </title> <institution> Carnegie Mellon University, Computer Science Department, </institution> <year> 1985. </year>
Reference-contexts: The Computer Science Department (CSD) accounts for approximately 400 of the 2000 machines on campus. Few of these machines use Andrew. The workstations in CSD use the Software Update (SUP) protocol <ref> [14] </ref> to keep their files up to date. SUP traffic consists primarily of machine-initiated TCP-based file transfers from data servers. Paging traffic from diskless Sun workstations also contributes to traffic within the CSD subnet.
Reference: 15. <author> Striemer, Bryan L., Lorence, Mark J. </author> <title> Monitoring Local Area Networks at Carnegie-Mellon University: Tools for Network Planning. </title> <type> Tech. </type> <institution> Rept. 07.885, IBM Corporation, </institution> <year> 1988. </year>
Reference-contexts: However, there is no reason to believe that if two machines communicate, machines whose network addresses are close to theirs are also likely to communicate. Spatial locality is therefore not a meaningful concept here. 2.3. Measurement Existing tools are inadequate for measuring locality. Simple tools <ref> [15] </ref> merely present network utilization, packet counts and byte counts. More sophisticated tools allow selective filtering of packets [2], but are not capable of dynamically modifying their behavior based on what connections seem "interesting" at any given time.
Reference: 16. <author> Wecker, S. </author> <title> "DNA: the Digital Network Architecture". </title> <journal> IEEE Transactions on Communications COM-28 (April 1980). Table of Contents </journal>
Reference-contexts: The routers that connect subnets to the backbone support a homogeneous IP address space. IP packets can be sent between any pair of machines at CMU without explicit routing information. Of the non-IP traffic, about 8 percent is Decnet <ref> [16] </ref>. The remaining 7% is composed of a miscellany of other protocols such as ARP [7], ICMP [9] and proprietary Apple protocols. Since TCP/IP has become a de facto standard at CMU we anticipate that its share of traffic will increase in the future.
Reference: 1. <institution> Introduction 1 </institution>
Reference-contexts: Environment The LAN at Carnegie Mellon University, where this work was performed, spans an area of about 1 square mile and encompasses 42 buildings. Figure 1 shows the details of this network. The LAN is composed of three different kinds of media: Ethernet, IBM token-ring, and Appletalk <ref> [1] </ref>. About 42% of the machines on the LAN are on Ethernet, 55% on token-ring, and 3% on Appletalk. There are approximately 60 subnets, usually one subnet per building, and a single Ethernet backbone.
Reference: 2. <institution> Network Locality 1 2.1. </institution> <note> Definition 1 2.2. Origin 2 2.3. Measurement 3 </note>
Reference-contexts: Spatial locality is therefore not a meaningful concept here. 2.3. Measurement Existing tools are inadequate for measuring locality. Simple tools [15] merely present network utilization, packet counts and byte counts. More sophisticated tools allow selective filtering of packets <ref> [2] </ref>, but are not capable of dynamically modifying their behavior based on what connections seem "interesting" at any given time. Early in our design of a tool to measure locality, it became clear that a brute force technique for monitoring all possible pairs of machines was inappropriate.
Reference: 3. <institution> Design of the Tool 3 3.1. </institution> <note> Hardware 3 3.2. Software Overview 4 3.3. Software Implementation 5 3.4. Promotion Algorithm 5 </note>
Reference-contexts: Design of the Tool 3.1. Hardware The hardware we used for IPwatch had to possess certain important characteristics. First, it had to be usable with Ethernet <ref> [3] </ref> as well the IBM token-ring [4] since both these technologies are prevalent in our environment. Second, it had to possess adequate memory and processing power to perform monitoring without any loss of information even during periods of intense network activity.
Reference: 4. <author> Experiments with the Tool 6 4.1. </author> <title> Environment 7 4.2. Experiment Design 8 4.3. Data Analysis 9 4.4. Sensitivity of Data 10 </title>
Reference-contexts: Design of the Tool 3.1. Hardware The hardware we used for IPwatch had to possess certain important characteristics. First, it had to be usable with Ethernet [3] as well the IBM token-ring <ref> [4] </ref> since both these technologies are prevalent in our environment. Second, it had to possess adequate memory and processing power to perform monitoring without any loss of information even during periods of intense network activity. <p> Although this restriction complicates programming it has not noticeably affected the performance of the tool. Entries in both caches are identical. Each entry is 22 bytes long and consists of the following fields: struct STPD_entry -unsigned char ip_dest <ref> [4] </ref>; /* dest IP address */ unsigned char ip_src [4]; /* src IP address */ long pkts; /* no. pkts - this connection */ long bytes; /* no. bytes - this connection */ short front_ptr; /* front ptr for chaining */ short back_ptr; /* back ptr for chaining */ short table_no; <p> Although this restriction complicates programming it has not noticeably affected the performance of the tool. Entries in both caches are identical. Each entry is 22 bytes long and consists of the following fields: struct STPD_entry -unsigned char ip_dest <ref> [4] </ref>; /* dest IP address */ unsigned char ip_src [4]; /* src IP address */ long pkts; /* no. pkts - this connection */ long bytes; /* no. bytes - this connection */ short front_ptr; /* front ptr for chaining */ short back_ptr; /* back ptr for chaining */ short table_no; /* table number for chaining */ short no_ticks_yet; /*
Reference: 5. <institution> Conclusion 11 </institution>
Reference-contexts: Uneven loading of subnets is a secondary cause. Ignoring the effects of network topology can result in suboptimal use of a network by a distributed system. Nonuniform performance is already observed by users of large distributed systems such as Andrew <ref> [5] </ref>. Further growth will exacerbate the problem. This paper describes the design, implementation and calibration of a tool called IPwatch that will assist implementors in building and maintaining distributed systems that make optimal use of the underlying network.
References-found: 21

