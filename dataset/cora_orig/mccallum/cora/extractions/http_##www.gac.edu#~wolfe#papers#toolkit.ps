URL: http://www.gac.edu/~wolfe/papers/toolkit.ps
Refering-URL: http://www.gac.edu/~wolfe/papers-games/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: The Gamesman's Toolkit  
Author: David Wolfe 
Abstract: A toolkit written in C (under UNIX) implements virtually all of the material in finite combinatorial game theory. The toolkit is invaluable in analyzing games, and generating and testing hypotheses. In fact, several of the results presented at the 1994 Combinatorial Games Workshop were discovered using the program. This paper introduces the features of the program in order to show you what can be done with the toolkit and to convince you it's both useful and fun to use.
Abstract-found: 1
Intro-found: 1
Reference: [BCG82] <author> Elwyn R. Berlekamp, John H. Conway, and Richard K. Guy. </author> <title> Winning Ways. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1982. </year>
Reference-contexts: 1 Overview A toolkit 1 written in C (under UNIX) implements virtually all of the material in finite combinatorial game theory <ref> [BCG82] </ref> [Con76] [BW94]. The toolkit can be used in one of two ways: * It can be used "as is" by the gamesman who wishes to do standard algebraic manipu lations on games. <p> Dan Garcia has written a wonderful interface using tcl for playing domineering on an X window [Gar]. To get you started, Figure 2 summarizes the most useful files and functions you'll need. game) <ref> [BCG82, p. 61] </ref>. 2 On first reading, you may wish to ignore that part of the code related to the hash table. The hash table is used for efficiency, avoiding the exponential blowup of reevaluating the same positions recursively over and over.
Reference: [Ber88] <author> Elwyn R. </author> <title> Berlekamp. </title> <journal> Blockbusting and domineering. Journal of Combinatorial Theory, </journal> <volume> 49(1) </volume> <pages> 67-116, </pages> <month> September </month> <year> 1988. </year>
Reference-contexts: So "%[1*]&lt;1&gt;g" denotes R 1 overheated from 1fl to 1) <ref> [Ber88] </ref> [BW94, p. 214]. 3 As a programmer's toolkit The most common use of the program as a toolkit is to analyze a particular game. You may wish to implement the rules to that game, and have the computer evaluate positions of that game.
Reference: [BW94] <author> Elwyn Berlekamp and David Wolfe. </author> <title> Mathematical Go: Chilling Gets the Last Point. A K Peters, </title> <publisher> Ltd., </publisher> <address> Wellesley, Massachusetts, </address> <year> 1994. </year>
Reference-contexts: 1 Overview A toolkit 1 written in C (under UNIX) implements virtually all of the material in finite combinatorial game theory [BCG82] [Con76] <ref> [BW94] </ref>. The toolkit can be used in one of two ways: * It can be used "as is" by the gamesman who wishes to do standard algebraic manipu lations on games. <p> So "%[1*]&lt;1&gt;g" denotes R 1 overheated from 1fl to 1) [Ber88] <ref> [BW94, p. 214] </ref>. 3 As a programmer's toolkit The most common use of the program as a toolkit is to analyze a particular game. You may wish to implement the rules to that game, and have the computer evaluate positions of that game.
Reference: [Con76] <author> John H. Conway. </author> <title> On Numbers and Games. </title> <publisher> Academic Press, </publisher> <address> London/New York, </address> <year> 1976. </year>
Reference-contexts: 1 Overview A toolkit 1 written in C (under UNIX) implements virtually all of the material in finite combinatorial game theory [BCG82] <ref> [Con76] </ref> [BW94]. The toolkit can be used in one of two ways: * It can be used "as is" by the gamesman who wishes to do standard algebraic manipu lations on games.
Reference: [Gar] <author> Dan Garcia. </author> <title> A graphical, X-based front-end for domineering. (A tcl interface which runs on top of the games toolkit.) </title> <note> Available from Dan Garcia by e-mail: ddgarcia@cs.berkeley.edu. 6 </note>
Reference-contexts: Several people have already written programs which use the toolkit to analyze a game. Konane (programmed by Michael Ernst), Toads & Frogs (Jeff Erickson) and Domineering (David Wolfe) come with the toolkit. Dan Garcia has written a wonderful interface using tcl for playing domineering on an X window <ref> [Gar] </ref>. To get you started, Figure 2 summarizes the most useful files and functions you'll need. game) [BCG82, p. 61]. 2 On first reading, you may wish to ignore that part of the code related to the hash table.
References-found: 5

