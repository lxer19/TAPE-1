URL: http://www.aic.nrl.navy.mil/~spears/papers/foga92.ps.gz
Refering-URL: http://www.cs.gmu.edu:80/research/gag/pubs.html
Root-URL: 
Email: E-mail: SPEARS@AIC.NRL.NAVY.MIL  
Title: Crossover or Mutation?  
Author: William M. Spears 
Address: Code 5510  Washington, D.C. 20375-5320  
Affiliation: Navy Center for Applied Research in Artificial Intelligence  Naval Research Laboratory  
Abstract: Genetic algorithms rely on two genetic operators crossover and mutation. Although there exists a large body of conventional wisdom concerning the roles of crossover and mutation, these roles have not been captured in a theoretical fashion. For example, it has never been theoretically shown that mutation is in some sense "less powerful" than crossover or vice versa. This paper provides some answers to these questions by theoretically demonstrating that there are some important characteristics of each operator that are not captured by the other.
Abstract-found: 1
Intro-found: 1
Reference: <author> Atmar, W. </author> <title> (1992) The philosophical errors that plague both evolutionary theory and simulated evolutionary programming. </title> <editor> In D. Fogel & J. Atmar (eds.), </editor> <booktitle> Proceedings of the First Annual Conference on Evolutionary Programming, </booktitle> <pages> 27-34. </pages> <address> San Diego, CA: </address> <publisher> Evolutionary Programming Society. </publisher>
Reference-contexts: Specifically, Fogel et al. question the importance of recombination. They do not believe that natural selection selects individual traits (or, presumably, combinations of traits). Recombination is considered to be a third order factor, since it does not appear to occur frequently in nature <ref> (Atmar, 1992) </ref>. Of course, this does not necessarily imply that recombination is not useful for problems we wish to solve. Atmar is correct to remind us that "uncritical advocacy of a particular phenomenon" promotes "a blindness in perspective that is very difficult to dispel" (Atmar, 1992). <p> appear to occur frequently in nature <ref> (Atmar, 1992) </ref>. Of course, this does not necessarily imply that recombination is not useful for problems we wish to solve. Atmar is correct to remind us that "uncritical advocacy of a particular phenomenon" promotes "a blindness in perspective that is very difficult to dispel" (Atmar, 1992). Neither mutation nor crossover should be uncritically advocated or dismissed. Each operator plays a different role in the search process. A priori, it is difficult to specify the relative importance of each operator, for each problem.
Reference: <editor> Baeck, T., Hoffmeister, F., & Schwefel, H.-P. </editor> <title> (1991) A survey of evolution strategies. </title> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> 2-9. </pages> <address> La Jolla, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: No information is shared when mutation is implemented in this fashion. It is possible to implement mutation with a parameter that is adapted during genetic algorithm search. Population statistics, such as population convergence, are often used to adapt the mutation rate (Davis, 1989). The European community <ref> (e.g., Baeck et al., 1991) </ref> go further, and explicitly adjust the mutation of each parameter, for every chromosome. One can easily imagine, then, a situation in which these mutation rates are based on finer grained population statistics, such as column convergence (De Jong, 1975).
Reference: <author> Booker, L. B. </author> <title> (1992) Recombination distributions for genetic algorithms. </title> <booktitle> Proceedings of the Foundations of Genetic Algorithms Workshop. </booktitle> <address> Vail, </address> <publisher> CO: Morgan Kaufmann. </publisher>
Reference: <author> Davidor, Y. </author> <title> (1990) Epistasis variance: a viewpoint on GA-hardness. </title> <booktitle> Proceedings of the Foundations of Genetic Algorithms Workshop, </booktitle> <pages> 23-35. </pages> <address> Indiana University: </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Davis, L. </author> <title> (1989) Adapting operator probabilities in genetic algorithms. </title> <booktitle> Proceedings of the Third International Conference on Genetic Algorithms, </booktitle> <pages> 60-69. </pages> <address> La Jolla, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: We can conclude, then, that mutation will play an important role in these situations. Figures 4 and 5 support these ideas by suggesting that mutation becomes more important relative to crossover as the population loses diversity. Experiments with adaptive operator probabilities <ref> (Davis, 1989) </ref> support this analysis. Crossover, however, will play an important role when construction and survival are required for good performance. This occurs when the population is diverse and problems consist of appropriate building blocks. <p> No information is shared when mutation is implemented in this fashion. It is possible to implement mutation with a parameter that is adapted during genetic algorithm search. Population statistics, such as population convergence, are often used to adapt the mutation rate <ref> (Davis, 1989) </ref>. The European community (e.g., Baeck et al., 1991) go further, and explicitly adjust the mutation of each parameter, for every chromosome. One can easily imagine, then, a situation in which these mutation rates are based on finer grained population statistics, such as column convergence (De Jong, 1975).
Reference: <author> De Jong, K. A. </author> <title> (1975) An analysis of the behavior of a class of genetic adaptive systems. </title> <type> Doctoral Thesis, </type> <institution> Department of Computer and Communication Sciences. University of Michigan, </institution> <address> Ann Arbor. </address>
Reference-contexts: In most of these analyses mutation is considered to be a background operator and of secondary importance. To support these views, experimental results have been presented, illustrating the power of crossover <ref> (e.g., De Jong, 1975) </ref>. Most recently, Schaffer & Eshelman (1991) empirically compare mutation and crossover, and conclude that mutation alone is not always sufficient. Unfortunately, empirical comparisons can often be disputed or may be misleading. For example, Schaffer & Eshelman speculate that implementation and representation may explain Fogel's results. <p> The European community (e.g., Baeck et al., 1991) go further, and explicitly adjust the mutation of each parameter, for every chromosome. One can easily imagine, then, a situation in which these mutation rates are based on finer grained population statistics, such as column convergence <ref> (De Jong, 1975) </ref>. At this point, information can be communicated in a fashion similar to that of crossover. For example, we could measure the allele loss for each defining position and only mutate at defining positions with small allele loss, thus preserving common alleles.
Reference: <author> De Jong, K. A. & Spears, W. M. </author> <title> (1992) A formal analysis of the role of multi-point crossover in genetic algorithms. </title> <journal> Annals of Mathematics and Artificial Intelligence Journal 5, </journal> <pages> 1-26. </pages> <editor> J. C. Baltzer A. G. </editor> <publisher> Scientific Publishing Company. </publisher>
Reference-contexts: To see this, we need to define what we mean by convergence. In our theory we denote P eq (d) to be the probability that two hyperplanes will have the same allele at a particular defining position d <ref> (De Jong & Spears, 1992) </ref>. As a useful simplification we also denote P eq to be the average of the P eq (d)'s over all d. <p> If optimality is sought, crossover may be deleterious. If the maximization of accumulated payoff is sought, mutation may be insufficient. Similarly, greater disruption is more important for steady state genetic algorithms, since they suffer a higher allele loss than do their generational counterparts <ref> (De Jong & Sarma, 1992) </ref>. It is also more important in non-stationary environments, where the optimal solution changes over time (Grefenstette, 1992b). We can conclude, then, that mutation will play an important role in these situations.
Reference: <author> De Jong, K. A. & Sarma, J. </author> <title> (1992) Generation gaps revisited. </title> <booktitle> Proceedings of the Foundations of Genetic Algorithms Workshop. </booktitle> <address> Vail, </address> <publisher> CO: Morgan Kaufmann. </publisher>
Reference-contexts: To see this, we need to define what we mean by convergence. In our theory we denote P eq (d) to be the probability that two hyperplanes will have the same allele at a particular defining position d <ref> (De Jong & Spears, 1992) </ref>. As a useful simplification we also denote P eq to be the average of the P eq (d)'s over all d. <p> If optimality is sought, crossover may be deleterious. If the maximization of accumulated payoff is sought, mutation may be insufficient. Similarly, greater disruption is more important for steady state genetic algorithms, since they suffer a higher allele loss than do their generational counterparts <ref> (De Jong & Sarma, 1992) </ref>. It is also more important in non-stationary environments, where the optimal solution changes over time (Grefenstette, 1992b). We can conclude, then, that mutation will play an important role in these situations.
Reference: <author> Eshelman, L. J., Caruana, R. A., & Schaffer, J. D. </author> <title> (1989) Biases in the crossover landscape. </title> <booktitle> Proceedings of the Third International Conference on Genetic Algorithms, </booktitle> <pages> 10-19. </pages> <address> La Jolla, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Considerable attention has been given to estimating the disruption rate of crossover, i.e., the probability that a particular application of crossover will be disruptive. As has been pointed out, however, another important consideration is not just how often a sample will be disrupted, but how it will be disrupted <ref> (Eshelman et al., 1989) </ref>. In this section we will first consider a theory of disruption rates for crossover, and show how we can compare this with a disruption rate theory for mutation. <p> It does not, however, indicate where those individuals will go. In other words, disruption rate theory does not indicate the distribution of disruptions, simply the likelihood that disruptions will occur. Previous researchers <ref> (e.g., Eshelman et al., 1989) </ref> have discussed the exploratory power of crossover operators, namely, the manner in which crossover disrupts individuals within hyperplanes.
Reference: <author> Fogel, L. J., Owens, A. J., & Walsh, M. J. </author> <title> (1966) Artificial Intelligence Through Simulated Evolution. </title> <address> New York: </address> <publisher> Wiley Publishing. </publisher>
Reference: <editor> Fogel, D. B. & Atmar, J. W. </editor> <title> (1990) Comparing genetic operators with gaussian mutations in simulated evolutionary processes using linear systems. </title> <booktitle> Biological Cybernetics 63, </booktitle> <pages> 111-114. </pages>
Reference-contexts: Recent studies confirm this view, illustrating the power of mutation (Schaffer et al., 1989). D. Fogel has continued the earlier work of L. Fogel and makes an even stronger claim that crossover has no general advantage over mutation <ref> (Fogel & Atmar, 1990) </ref>. On the other hand, proponents of the Holland (1975) style of genetic algorithm believe that crossover is the more powerful of the two operators.
Reference: <author> Grefenstette, J. G. </author> <title> (1992a) Deception considered harmful. </title> <booktitle> Proceedings of the Foundations of Genetic Algorithms Workshop. </booktitle> <address> Vail, </address> <publisher> CO: Morgan Kaufmann. </publisher>
Reference-contexts: What exactly is an appropriate building block? One possible answer lies in the following hypothesis <ref> (Grefenstette, 1992a) </ref>: The Static Building Block Hypothesis (SBBH): Given any short, low order hyperplane partition, a GA is expected to converge to the hyperplane with the best static average fitness.
Reference: <author> Grefenstette, J. G. </author> <title> (1992b) Genetic algorithms for changing environments. Submitted to the Parallel Problem Solving from Nature (PPSN) Workshop. </title> <address> Brussels, Belgium. </address>
Reference-contexts: Similarly, greater disruption is more important for steady state genetic algorithms, since they suffer a higher allele loss than do their generational counterparts (De Jong & Sarma, 1992). It is also more important in non-stationary environments, where the optimal solution changes over time <ref> (Grefenstette, 1992b) </ref>. We can conclude, then, that mutation will play an important role in these situations. Figures 4 and 5 support these ideas by suggesting that mutation becomes more important relative to crossover as the population loses diversity. Experiments with adaptive operator probabilities (Davis, 1989) support this analysis.
Reference: <author> Holland, J. H. </author> <booktitle> (1975) Adaptation in Natural and Artificial Systems. </booktitle> <address> Ann Arbor, Michigan: </address> <publisher> The University of Michigan Press. </publisher>
Reference-contexts: of construction, crossover is more powerful than mutation. 2 DISRUPTION THEORY Holland provided the initial formal analysis of the behavior of GAs by showing how they allocate trials in a near optimal way to competing low order hyperplanes if the disruptive effects of the genetic operators is not too severe <ref> (Holland, 1975) </ref>. Considerable attention has been given to estimating the disruption rate of crossover, i.e., the probability that a particular application of crossover will be disruptive. <p> We then briefly review both mutation and crossover with respect to how they disrupt hyperplane samples. 2.1 DISRUPTION RATES Holland's initial analysis of the sampling disruption of 1-point crossover <ref> (Holland, 1975) </ref> has been extended to n-point crossover and a parameterized (P 0 ) uniform crossover (De Jong, 1975; Syswerda, 1989; Spears & De Jong, 1991), where n is the number of crossover points and P 0 represents the probability of swapping alleles between two parents. <p> For example, although GAs are often used as optimizers, our current understanding is that they attempt to maximize accumulated payoff <ref> (Holland, 1975) </ref>. In this sense, they are greedy and should not necessarily be expected to find optimal solutions. Crossover can enhance this effect.
Reference: <author> Lipsitch, M. </author> <title> (1991) Adaptation on rugged landscaped generated by iterated local interactions of neighboring genes. </title> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> 128-135. </pages> <address> La Jolla, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Manderick, B., de Weger, M., & Spiessens, P. </author> <title> (1991) The genetic algorithm and the structure of the fitness landscape. </title> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> 143-149. </pages> <address> La Jolla, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Radcli ffe, N. J. </author> <title> (1991) Forma analysis and random respectful recombination. </title> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> 222-229. </pages> <address> La Jolla, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Rechenberg, I. </author> <title> (1973) Evolutionsstrategie: Optimierung Technischer Systeme nach Prinzipien der Biologischen Evolution. </title> <publisher> Frommann-Holzboog, Stuttgart. </publisher>
Reference: <author> Schaffer, J. D., Caruana, R. A., Eshelman, L. J., & Das, R. </author> <title> (1989) A study of control parameters affecting online performance of genetic algorithms for function optimization. </title> <booktitle> Proceedings of the Third International Conference on Genetic Algorithms, </booktitle> <pages> 51-60. </pages> <address> La Jolla, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Sophisticated versions of evolution strategies, with adaptive mutation rates, proved quite useful for function optimization tasks (Baeck et al., 1991; Schwefel, 1977). Recent studies confirm this view, illustrating the power of mutation <ref> (Schaffer et al., 1989) </ref>. D. Fogel has continued the earlier work of L. Fogel and makes an even stronger claim that crossover has no general advantage over mutation (Fogel & Atmar, 1990).
Reference: <editor> Schaffer, J. D., Eshelman, L. J. </editor> <title> (1991) On crossover as an evolutionarily viable strategy. </title> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> 61-68. </pages> <address> La Jolla, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <editor> Schwefel, H.-P. </editor> <booktitle> (1977) Numerical Optimization of Computer Models. </booktitle> <address> New York: </address> <publisher> John Wiley & Sons. </publisher>
Reference: <author> Spears, W. M. & Anand, V. </author> <title> (1991) A study of crossover operators in genetic programming. </title> <booktitle> Proceedings of the Sixth International Symposium on Methodologies for Intelligent Systems, </booktitle> <pages> 409-418. </pages> <address> Charlotte, NC: </address> <publisher> Springer-Verlag. </publisher>
Reference: <author> Spears, W. M. & De Jong, K. A. </author> <title> (1991) On the virtues of uniform crossover. </title> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> 230-236. </pages> <address> La Jolla, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Syswerda, G. </author> <title> (1989) Uniform crossover in genetic algorithms. </title> <booktitle> Proceedings of the Third International Conference on Genetic Algorithms, </booktitle> <pages> 1-9. </pages> <address> Fairfax, VA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Syswerda, G. </author> <title> (1992) Simulated crossover in genetic algorithms. </title> <booktitle> Proceedings of the Foundations of Genetic Algorithms Workshop. </booktitle> <address> Vail, </address> <publisher> CO: Morgan Kaufmann. </publisher>
Reference-contexts: At what point do we no longer call this mutation? This leads us to the realization that standard mutation and crossover are simply two forms of a more general exploration operator, that can perturb alleles based on any available information <ref> (e.g., see Syswerda, 1992) </ref>. It is not clear that the current distinction between crossover and mutation is necessary, or even desirable, although it may be convenient. The creation of more general operators, however, may lead to more robust biases.
Reference: <author> Vose, M. D., & Liepins, G. E. </author> <title> (1991) Schema disruption. </title> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> 237-242. </pages> <address> La Jolla, CA: </address> <publisher> Morgan Kaufmann. </publisher>
References-found: 26

