URL: http://www.techfak.uni-bielefeld.de/techfak/persons/katy/gws-cbr-96.ps.gz
Refering-URL: 
Root-URL: 
Email: katy j heiko@cognition.iig.uni-freiburg.de  roland@informatik.th-leipzig.de  
Title: Conceptual Analogy: Conceptual clustering for informed and efficient analogical reasoning  
Author: Katy Borner and Heiko Wode Roland Faauer 
Address: 79098 Freiburg, FRG  Karl-Liebknecht Strae 132 04251 Leipzig, FRG  
Affiliation: University of Freiburg Centre for Cognitive Science  HTWK Leipzig  
Abstract: Conceptual analogy (CA) is a general approach that applies conceptual clustering and concept representations to facilitate the efficient use of past experiences (cases) during analogical reasoning (Borner 1995). The approach was developed and implemented in SYN* (see also (Borner 1994, Borner and Faauer 1995)) to support the design of supply nets in building engineering. This paper sketches the task; it outlines the nearest-neighbor-based agglomerative conceptual clustering applied in organizing large amounts of structured cases into case classes; it provides the concept representation used to characterize case classes and shows the analogous solution of new problems based on the concepts available. However, the main purpose of this paper is to evaluate CA in terms of its reasoning efficiency; its capability to derive solutions that go beyond the cases in the case base but still preserve the quality of cases.
Abstract-found: 1
Intro-found: 1
Reference: <author> Borner, K. </author> <year> (1994). </year> <title> Structural similarity as guidance in case-based design, </title> <editor> in Wess et al. </editor> <year> (1994), </year> <pages> pp. 197-208. </pages>
Reference: <author> Borner, K. </author> <year> (1995). </year> <title> Conceptual analogy, </title> <editor> in D. W. Aha and A. Ram (eds), </editor> <booktitle> AAAI 1995 Fall Symposium Series: Adaptation of Knowledge for Reuse, </booktitle> <address> Boston, MA, </address> <pages> pp. 5-11. </pages>
Reference: <author> Borner, K. and Faauer, R. </author> <year> (1995). </year> <title> Analogical Layout Design (Syn*), </title> <editor> in K. Borner (ed.), </editor> <title> Modules for Design Support, FABEL Report no. </title> <type> 35, </type> <institution> GMD, Sankt Augustin. </institution>
Reference: <author> Fisher, D. H. </author> <year> (1987). </year> <title> Knowledge acquisition via incremental conceptual clustering, </title> <booktitle> Machine Learning 2: </booktitle> <pages> 139-172. </pages>
Reference-contexts: Hierarchical structured case memories that group cases sharing similar attributes into classes and represent each case class by a concept have been proposed. These concepts have been either described by sets of common features (MOP's) like in CYRUS (Kolodner 1983), or as probabilistic concepts as in COBWEB <ref> (Fisher 1987) </ref>. To our knowledge, the concept representation used by CA is unique in that it divides the knowledge contained in the case class into a set of common features to be used as indices and a set of generic knowledge about possible adaptations for design. <p> Once the description reaches a leaf node, the properties missing from its description are completed from that leaf as well as from several adjacent nodes. Each completion results in a solution candidate. There is no mechanism for selecting the optimal solution nor to handle interrelated attributes. COBWEB <ref> (Fisher 1987) </ref> is interesting in its use of a principled evaluation function that favors clusters maximizing the potential for inferring information. In contrast to earlier unsupervised learners, which have been evaluated in terms of the comprehensibility of the formed concepts, COBWEB was explicitly evaluated in performance tasks missing attribute prediction.
Reference: <author> Kolodner, J. L. </author> <year> (1983). </year> <title> Reconstructive memory: A computer model, </title> <booktitle> Cognitive Science 7: </booktitle> <pages> 281-328. </pages>
Reference-contexts: Hierarchical structured case memories that group cases sharing similar attributes into classes and represent each case class by a concept have been proposed. These concepts have been either described by sets of common features (MOP's) like in CYRUS <ref> (Kolodner 1983) </ref>, or as probabilistic concepts as in COBWEB (Fisher 1987).
Reference: <author> Kolodner, J. L. </author> <year> (1993). </year> <title> Case-based reasoning, </title> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Mateo, CA. </address>
Reference-contexts: 1 Introduction The application of Cbr methods <ref> (Kolodner 1993, Wess, Althoff and Richter 1994) </ref> to support design tasks causes several problems. First of all, one needs to deal with large amounts of highly structured cases increasing the computational expense to retrieve, match, and adapt cases.
Reference: <author> Lebowitz, M. </author> <year> (1987). </year> <title> Experiments with incremental concept formation: </title> <booktitle> UNIMEM, Machine Learning 2: </booktitle> <pages> 103-138. </pages>
Reference-contexts: Depending on the application requirements or user preferences the three factors may be weighted differently. 5 Related Work and Discussion Conceptual clustering techniques have been used in several systems to organize and index cases in an efficient way. Already UNIMEM <ref> (Lebowitz 1987) </ref> applied inductive learning methods to identify predictive features to be used as indices. Hierarchical structured case memories that group cases sharing similar attributes into classes and represent each case class by a concept have been proposed.
Reference: <author> Malek, M. and Amy, B. </author> <year> (1994). </year> <title> A pre-processing model for integrating CBR and prototype-based neural networks, </title> <type> Technical report, </type> <institution> Working Paper TIMC-LIFIA-IMAG Grenoble. </institution>
Reference-contexts: CA is optimized and evaluated in terms of reasoning efficiency, maximum potential experience vs. actual experience, and maximum average conformity of proposed solutions. There are also a number of CBR approaches that apply conceptual clustering techniques in organizing their case base. The Prototype-Based Indexing System (PBIS) proposed by <ref> (Malek and Amy 1994) </ref> uses an incremental prototype-based neural network to organize cases into groups of similar cases and to represent each group of cases by prototypes.
Reference: <author> O'Hara, S. E. and Indurkhya, B. </author> <year> (1994). </year> <title> Incorporating (re)-interpretation in case-based reasoning, </title> <editor> in Wess et al. </editor> <year> (1994), </year> <pages> pp. 246-260. </pages>
Reference: <author> Paulokat, J., Prager, R. and We, S. </author> <year> (1992). </year> <editor> CAbPlan - fallbasierte Arbeitsplanung, in T. Messer and A. Winkelhofer (eds), </editor> <booktitle> 6. Workshop Planen und Konfigurieren, </booktitle> <pages> pp. 169-176. </pages>
Reference-contexts: If O r is in the set 2 The reformulation of the problem in terms of prior prototypes was influenced by the work of (O'Hara and Indurkhya 1994) on geometrical, proportional analogy problems. 3 This is in the spirit of adaptation guided retrieval already proposed by <ref> (Paulokat, Prager and We 1992, Smyth and Keane 1994) </ref>. of objects of IR (CC) then the applicability of K (CC) is ff (K (CC); p 0 ) = (fP T (CC); p 0 g) otherwise ff = 0.
Reference: <author> Reich, Y. </author> <year> (1991). </year> <title> Building and improving design systems, </title> <institution> EDRC 02-16-91, Carnegie Mellon University. </institution>
Reference-contexts: LABIRINTH learns unclassified objects that have relations and uses the component structure to constrain matching. It demonstrates a method for learning from hierarchically decomposed objects, using the results of component classification to guide object classification. However, like COBWEB, LABIRINTH is restricted to classification tasks. BRIDGER <ref> (Reich 1991) </ref> was designed to support the design of cable-stayed bridges. It organizes attribute-value descriptions of bridges into a hierarchical classification tree. In synthesis, the set of specification properties, considered to be a partial description of a new bridge, is classified with the hierarchy.
Reference: <author> Schiemann, I. and Woltering, A. </author> <year> (1995). </year> <booktitle> Organisation groer Fallbasen in der TUB-JANUS Shell zum effizienten Retrieval geeigneter Falle, CBR-WS, XPS-95, </booktitle> <pages> pp. 30-36. </pages>
Reference-contexts: The Prototype-Based Indexing System (PBIS) proposed by (Malek and Amy 1994) uses an incremental prototype-based neural network to organize cases into groups of similar cases and to represent each group of cases by prototypes. The JANUS CBR Shell <ref> (Schiemann and Woltering 1995) </ref> applies a Cohonen network to automatically organize cases into disjoint case classes corresponding to similar attribute values and represents these classes by reference cases. Both systems do a two stage retrieval. Firstly, the prototype/reference case pointing to a case class is selected.
Reference: <author> Smyth, B. and Keane, M. T. </author> <year> (1994). </year> <title> Retrieving adaptable cases: The role of adaptation knowledge in case retrieval, </title> <editor> in Wess et al. </editor> <year> (1994), </year> <pages> pp. 209-220. </pages>
Reference: <author> Thompson, K. and Langley, P. </author> <year> (1991). </year> <title> Concept formation in structured domains, </title> <editor> in D. Fisher, M. Pazzani and P. Langley (eds), </editor> <title> Concept formation: Knowledge and experience in unsupervised learning, </title> <publisher> Morgan Kaufmann Publishers, </publisher> <address> chapter 5. </address>
Reference-contexts: Whereby most systems are restricted to attribute-value languages, LABIRINTH <ref> (Thompson and Langley 1991) </ref> extends COBWEB into structured domains. LABIRINTH learns unclassified objects that have relations and uses the component structure to constrain matching. It demonstrates a method for learning from hierarchically decomposed objects, using the results of component classification to guide object classification.
Reference: <editor> Wess, S., Althoff, K.-D. and Richter, M. M. (eds) (1994). </editor> <booktitle> Topics in Case-Based Reasoning - Selected Papers from the First European Workshop on Case-Based Reasoning (EWCBR-93), </booktitle> <volume> Vol. </volume> <publisher> 837 of LNAI, Springer Verlag. </publisher>
References-found: 15

