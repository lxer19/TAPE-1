URL: http://www.cs.cornell.edu/Info/People/vladimir/alignment-chapter.ps.gz
Refering-URL: http://www.cs.cornell.edu/Info/People/vladimir/papers.html
Root-URL: http://www.cs.brown.edu/
Title: Solving Alignment Using Elementary Linear Algebra  
Author: Vladimir Kotlyar, David Bau, Induprakas Kodukula, Keshav Pingali, and Paul Stodghill 
Address: Ithaca NY 14853 USA  
Affiliation: Department of Computer Science Cornell University  
Abstract: Summary. Data and computation alignment is an important part of compiling sequential programs to architectures with non-uniform memory access times. In this paper, we show that elementary matrix methods can be used to determine communication-free alignment of code and data. We also solve the problem of replicating data to eliminate communication. Our matrix-based approach leads to algorithms which work well for a variety of applications, and which are simpler and faster than other matrix-based algorithms in the literature. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Jennifer M. Anderson and Monica S. Lam. </author> <title> Global optimizations for parallelism and locality on scalable parallel machines. </title> <booktitle> ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI), </booktitle> <pages> pages 112 - 125, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: However, they did not give a general method for solving these equations. Also, they did not handle replication of data. Anderson and Lam sketched a solution method <ref> [1] </ref>, but their approach is unnecessarily complex, requiring the determination of cycles in bipartite graphs, computing pseudo-inverses etc these complications are eliminated by our approach. The equational, matrix-based approach described in this paper is not the only approach that has been explored.
Reference: 2. <author> Siddartha Chatterjee, John Gilbert, and Robert Schreiber. </author> <title> The alignment-distribution graph. </title> <editor> In U. Banerjee, D. Gelernter, A. Nicolau, and D. Padua, editors, </editor> <booktitle> Languages and Compilers for Parallel Computing. Sixth International Workshop., number 768 in LNCS. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Li and Chen have used graph-theoretic methods to trade off communication for parallelism for a limited kind of alignment called axis alignment [10]. More general heuristics for a wide variety of cost-of-communication metrics have been studied by Chatterjee, Gilbert and Schreiber <ref> [2, 3] </ref>, Feautrier [5] and Knobe et al [8, 7]. To summarize, the contributions of this paper are the following. 1.
Reference: 3. <author> Siddartha Chatterjee, John Gilbert, Robert Schreiber, and Shang-Hua Teng. </author> <title> Optimal evaluation of array expressions on massively parallel machines. </title> <type> Technical Report CSL-92-11, </type> <note> XEROX PARC, </note> <month> December </month> <year> 1992. </year>
Reference-contexts: Li and Chen have used graph-theoretic methods to trade off communication for parallelism for a limited kind of alignment called axis alignment [10]. More general heuristics for a wide variety of cost-of-communication metrics have been studied by Chatterjee, Gilbert and Schreiber <ref> [2, 3] </ref>, Feautrier [5] and Knobe et al [8, 7]. To summarize, the contributions of this paper are the following. 1.
Reference: 4. <author> Henri Cohen. </author> <title> A Course in Computational Algebraic Number Theory. Graduate Texts in Mathematics. </title> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: To exploit parallelism, we would like the rank of U T to be as large as possible. Therefore, we must find a basis for the null space of matrix V T . This is done using integer-preserving Gaussian elimination, a standard algorithm in the literature <ref> [4, 12] </ref>. The same reduction works in the case of multiple constraints. Suppose that there are s loops and t arrays.
Reference: 5. <author> Paul Feautrier. </author> <title> Toward automatic distribution. </title> <type> Technical Report 92.95, </type> <institution> IBP/MASI, </institution> <month> December </month> <year> 1992. </year>
Reference-contexts: Li and Chen have used graph-theoretic methods to trade off communication for parallelism for a limited kind of alignment called axis alignment [10]. More general heuristics for a wide variety of cost-of-communication metrics have been studied by Chatterjee, Gilbert and Schreiber [2, 3], Feautrier <ref> [5] </ref> and Knobe et al [8, 7]. To summarize, the contributions of this paper are the following. 1. <p> That is, try to satisfy the alignment constraints for the largest array first (intuitively, we would like large arrays to be "locked in place" during the computation). This is the strategy used by Feautrier <ref> [5] </ref>. Intuitively, this heuristic is biased in favor of exploiting parallelism in DO-ALL loops, since communication can be performed in parallel before the computation starts.
Reference: 6. <author> C.-H. Huang and P. Sadayappan. </author> <title> Communication-free hyperplane partitioning of nested loops. </title> <editor> In U. Banerjee, D. Gelernter, A. Nicolau, and D. Padua, editors, </editor> <booktitle> Languages and Compilers for Parallel Computing. Fourth International Workshop. </booktitle> <address> Santa Clara, CA., </address> <booktitle> number 589 in LNCS, </booktitle> <pages> pages 186-200. </pages> <publisher> Springer-Verlag, </publisher> <month> August </month> <year> 1991. </year>
Reference-contexts: Any solution to this system of equations determines a so-called communication-free alignment <ref> [6] </ref> | that is, a map of data elements and computations to virtual processors such that all data required by a processor to execute the iterations mapped to it are in its local memory. <p> How does our work relate to previous work on alignment? Our work is closest in spirit to that of Huang and Sadayappan who were the first to formulate the problem of communication-free alignment in terms of systems of equational constraints <ref> [6] </ref>. However, they did not give a general method for solving these equations. Also, they did not handle replication of data.
Reference: 7. <author> Kathleen Knobe, Joan D. Lucas, and William J. Dally. </author> <title> Dynamic alignment on distributed memory systems. </title> <booktitle> In Proceedings of the Third Workshop on Compilers for Parallel Computers, </booktitle> <month> July </month> <year> 1992. </year>
Reference-contexts: Li and Chen have used graph-theoretic methods to trade off communication for parallelism for a limited kind of alignment called axis alignment [10]. More general heuristics for a wide variety of cost-of-communication metrics have been studied by Chatterjee, Gilbert and Schreiber [2, 3], Feautrier [5] and Knobe et al <ref> [8, 7] </ref>. To summarize, the contributions of this paper are the following. 1.
Reference: 8. <author> Kathleen Knobe and Venkataraman Natarajan. </author> <title> Data optimization: minimizing residual interprocessor motion on SIMD machines. </title> <booktitle> In Proceedings of the 3rd Symposium on the Frontiers of Massively Parallel Computation Frontiers 90, </booktitle> <pages> pages 416-423, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: Li and Chen have used graph-theoretic methods to trade off communication for parallelism for a limited kind of alignment called axis alignment [10]. More general heuristics for a wide variety of cost-of-communication metrics have been studied by Chatterjee, Gilbert and Schreiber [2, 3], Feautrier [5] and Knobe et al <ref> [8, 7] </ref>. To summarize, the contributions of this paper are the following. 1.
Reference: 9. <author> Vipin Kumar, Ananth Grama, Anshul Gupta, and George Karypis. </author> <title> Introduction to Parallel Computing. Design and Analysis of Algorithms. </title> <publisher> The Ben-jamin/Cummings Publishing Company, </publisher> <year> 1994. </year>
Reference-contexts: Which mapping is better depends very much on the size of the matrix, and on the communication to computation speed ratio of the machine <ref> [9] </ref>. Second, even for simple parallel models and restricted cases of the alignment problem, finding the optimal solution is known to be NP-complete problem [10]. Therefore, we must fall back on heuristics. In Section 5., we discuss our heuristic. <p> Consider a loop nest that computes matrix-matrix product: Solving Alignment Using Elementary Linear Algebra 15 DO i=1,n DO k=1,n <ref> [9] </ref> provides the description of various parallel algorithms for matrix-matrix multiplication. It is shown that the best scalability is achieved by an algorithm which organizes the processors into a 3-D grid. Let p, q and r be the processor indices in the grid. <p> In general, it is difficult for a compiler to determine which version to use | the optimal solution depends on the size of the matrix, and on the overhead of communication relative to computation of the parallel machine <ref> [9] </ref>. <p> Similar considerations apply to other codes such as matrix-vector product, 2-D and 3-D stencil computations, and matrix factorization codes <ref> [9] </ref>. Consider stencil computations. Here is a typical example: DO i=1,N 16 Kotlyar et al A (i,j) = ...B (i-1,j)...B (i+1,j)...
Reference: 10. <author> Jingke Li and Marina Chen. </author> <title> Index domain alignment: minimizing cost of cross-referencing between distributed arrays. </title> <type> Technical Report YALEU/DCS/TR-725, </type> <institution> Department of Computer Science, Yale University, </institution> <month> September </month> <year> 1989. </year> <title> Solving Alignment Using Elementary Linear Algebra 19 </title>
Reference-contexts: Which mapping is better depends very much on the size of the matrix, and on the communication to computation speed ratio of the machine [9]. Second, even for simple parallel models and restricted cases of the alignment problem, finding the optimal solution is known to be NP-complete problem <ref> [10] </ref>. Therefore, we must fall back on heuristics. In Section 5., we discuss our heuristic. Not surprisingly, 4 Kotlyar et al our heuristic is skewed to "do the right thing" for kernels like matrix-vector product which are extremely important in practice. <p> The equational, matrix-based approach described in this paper is not the only approach that has been explored. Li and Chen have used graph-theoretic methods to trade off communication for parallelism for a limited kind of alignment called axis alignment <ref> [10] </ref>. More general heuristics for a wide variety of cost-of-communication metrics have been studied by Chatterjee, Gilbert and Schreiber [2, 3], Feautrier [5] and Knobe et al [8, 7]. To summarize, the contributions of this paper are the following. 1.
Reference: 11. <author> Youcef Saad. </author> <title> Kyrlov subspace methods on supercomputers. </title> <journal> SIAM Journal on Scientific and Statistical Computing, </journal> <volume> 10(6) </volume> <pages> 1200-1232, </pages> <month> November </month> <year> 1989. </year>

Reference: 1. <institution> Perform elementary row operations on U to get U 0 in which every component is reduced. </institution>
Reference-contexts: However, they did not give a general method for solving these equations. Also, they did not handle replication of data. Anderson and Lam sketched a solution method <ref> [1] </ref>, but their approach is unnecessarily complex, requiring the determination of cycles in bipartite graphs, computing pseudo-inverses etc these complications are eliminated by our approach. The equational, matrix-based approach described in this paper is not the only approach that has been explored.

Reference: 1. <institution> Form alignment constraint graph G. </institution>
Reference-contexts: However, they did not give a general method for solving these equations. Also, they did not handle replication of data. Anderson and Lam sketched a solution method <ref> [1] </ref>, but their approach is unnecessarily complex, requiring the determination of cycles in bipartite graphs, computing pseudo-inverses etc these complications are eliminated by our approach. The equational, matrix-based approach described in this paper is not the only approach that has been explored.

References-found: 13

