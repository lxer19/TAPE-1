URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/project/garnet/www/pbd-group/papers/rs-chi94.ps
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/project/garnet/www/pbd-group/pbd-papers.html
Root-URL: 
Title: Visual Programming in a Visual Shell  
Author: Francesmary Modugno 
Keyword: Cognitive Dimensions, End-User Programming, Programming by Demonstration, Visual Language, Visual Shell, Pursuit.  
Address: Pittsburgh, Pa 15213  
Affiliation: Carnegie Mellon University  
Note: In Proceedings of CHI'94 Research Symposium, Boston, MA,  
Email: fmm@cs.cmu.edu  
Date: April 1994  
Abstract: We present a new visual programming language and environment that serves as a form of feedback and representation in a Programming by Demonstration system. The language differs from existing visual languages because it explicitly represents data objects and implicitly represents operations by changes in data objects. The system was designed to provide non-programmers with programming support for common, repetitive tasks and incorporates some principles of cognition to assist these users in learning to use it. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> T.R.G. Green. </author> <title> Cognitive Dimensions of Notations. </title> <booktitle> In People and Computers V, </booktitle> <pages> pages 443-460. </pages>
Reference-contexts: Finally, PVL representations are integrated throughout the system This improves feedback and forms a closer union between the system and the program representation. CONCLUSION AND FUTURE WORK Pursuit is implemented [6] in Garnet. The system was evaluated along cognitive dimension <ref> [1] </ref> and the findings incorporated into its design [3]. User studies are evaluating how well Pursuit helps users automate tasks. In these studies, users construct programs using Pursuit.
Reference: 2. <author> C. Lewis and G. Olson. </author> <title> Can Principles of Cognition Lower the Barriers to Programming? In Empirical Studies of Programmers: </title> <booktitle> Second Workshop. </booktitle>
Reference-contexts: Therefore, PVL emphasizes manipulating sets of objects related in some way and minimizes the use of explicit control constructs such as loops and conditionals, since non programmers often have difficulty with them. PVL also incorporates some principles of cognition that have made spreadsheets successful <ref> [2] </ref>: familiar, concrete representations; immediate feedback; suppressing the inner world of variables and computation; and automatic consistency maintenance. Finally, PVL serves as the main form of feedback for the PBD system. PVL [5] combines features of the comic strip metaphor (e.g., Chimera) and visual production systems (e.g., ChemTrains).
Reference: 3. <author> F Modugno, T.R.G. Green and B. Myers. </author> <title> Visual Programming in a Visual Domain: A Case Study of Cognitive Dimensions. </title> <note> To appear in HCI '94, People and Computers. </note>
Reference-contexts: To save space, Pursuit contains heuristics, such as combining two operations into a single panel (e.g. the 3rd panel of Fig. 1B). Integrating Representations in the Interface In addition to representing the programs, PVL's representations are integrated throughout the PBD system <ref> [3] </ref>. For example, when the PBD system notices a loop, it highlights the panels of the visual script that make the loop's iterations. Users confirm if the system has correctly inferred the loop by looking at the highlighted operations. <p> Finally, PVL representations are integrated throughout the system This improves feedback and forms a closer union between the system and the program representation. CONCLUSION AND FUTURE WORK Pursuit is implemented [6] in Garnet. The system was evaluated along cognitive dimension [1] and the findings incorporated into its design <ref> [3] </ref>. User studies are evaluating how well Pursuit helps users automate tasks. In these studies, users construct programs using Pursuit. The results will be compared with users doing the same tasks in the visual shell, but with programs being represented in an English-like textual language (see Figure 2).
Reference: 4. <author> F. Modugno. </author> <title> Pursuit: Programming in the Interface. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon, </institution> <note> expected in 1994. </note>
Reference-contexts: Unfortunately, this conceptual simplicity is often lost when programming is introduced: users interact with the system visually, but usually program it off-line in a textual programming language. Users must develop two different bodies of knowledge: one to interact with the system and one to program it. The Pursuit <ref> [4] </ref> visual shell is exploring ways of providing programming capabilities in a way that is consistent with the direct manipulation paradigm. This research focuses on examining ways to integrate cognitive theories with current technology to overcome some limitations to end-user programming.
Reference: 5. <author> F. Modugno and B. Myers. </author> <title> Exploring Graphical Feedback in a Demonstrational Visual Shell. </title> <note> To appear in the 1994 East-West Conference on Human-Computer Interaction. </note>
Reference-contexts: PVL also incorporates some principles of cognition that have made spreadsheets successful [2]: familiar, concrete representations; immediate feedback; suppressing the inner world of variables and computation; and automatic consistency maintenance. Finally, PVL serves as the main form of feedback for the PBD system. PVL <ref> [5] </ref> combines features of the comic strip metaphor (e.g., Chimera) and visual production systems (e.g., ChemTrains). Familiar icons represent data objects, such as files and folders. Sets of data objects are represented by overlaying two icons of the same type.
Reference: 6. <author> F. Modugno and B. Myers. </author> <title> Pursuit: Graphically Representing Programs in a Demonstrational Visual Shell. CHI '94 Video. </title> <type> 2 </type>
Reference-contexts: Users learn interactively how data and operations (i.e. program syntax) are represented. Finally, PVL representations are integrated throughout the system This improves feedback and forms a closer union between the system and the program representation. CONCLUSION AND FUTURE WORK Pursuit is implemented <ref> [6] </ref> in Garnet. The system was evaluated along cognitive dimension [1] and the findings incorporated into its design [3]. User studies are evaluating how well Pursuit helps users automate tasks. In these studies, users construct programs using Pursuit.
References-found: 6

