URL: http://www.idt.unit.no/~epos/Papers/ewspt95-rel-areas.ps
Refering-URL: http://www.idt.unit.no/~epos/bibliografia.html
Root-URL: 
Title: A Survey and Classification of Some Research Areas Relevant to Software Process Modeling  
Author: Terje Totland PAKT, and Reidar Conradi , NTH 
Keyword: Process modeling, software engineering, information systems engineering, enterprise modeling, business process reengineering, organizational design, workflow management, concurrent engineering, computer integrated manufacturing.  
Date: September 18, 1994  
Address: Trondheim, Norway  
Affiliation: University of  
Abstract: Software process modeling is being studied by numerous research groups within the software engineering community. However, the SE community is not the only one focusing on process technology. A field like information systems engineering (ISE) has used conceptual models for a long time. In addition, new fields like Enterprise Modeling (EM), Business Process Reengineering (BPR), Concurrent Engineering (CE), Workflow Management (WM) and others have emerged during the past decade, all incorporating process modeling as a part of their framework. Our hypothesis is that these research areas may learn from each other, despite differences in focus, goals and background. This paper provides an overview of some research areas where process modeling plays a vital part. Each area is presented based on a taxonomy. This is followed by a brief assessment. The main conclusion is that all the presented research areas have overlapping interests, making them candidates for exchange of ideas and experiences. 
Abstract-found: 1
Intro-found: 1
Reference: [Alasu 93] <editor> J. Alasuvanto, N. Enlund, R. Mntyl, M. Riipinen, R. Sulonen: Workflows in Newspaper Prepress Departments, In D. D. Coleman (ed.): </editor> <booktitle> Proceedings of GroupWare '93 Europe, </booktitle> <pages> pages 279 - 295, </pages> <address> Stockholm (Sweden), London (UK), Frankfurt (Germany), </address> <year> 1993. </year>
Reference-contexts: However, the focus is not on intensive applications, like banking, but rather on processes where humans do most of the work, and coordination is facilitated by the Workflow Management systems. A newspaper system was reported in <ref> [Alasu 93] </ref>. 9 Intent The intents of using process technology in Workflow Management are understanding, communication, evolution, analysis, coordination and enactment. Understanding, communication, evolution and analysis are in focus when assessing the current process, while coordination and enactment are supported by the executing WM system.
Reference: [Ambriola 94] <author> V. Ambriola, R. Conradi, A. Fugetta: </author> <title> Experiences and Issues in Building and Using Process-centered Software Engineering Environments, </title> <note> paper in preparation, IDT, NTH, </note> <institution> University of Trondheim, Norway, </institution> <year> 1994. </year>
Reference-contexts: The list must include a typical selection. 2.2. Problems Using the Taxonomy Application of taxonomies has been recognized as a fruitful approach to assessment and comparison of areas of interest <ref> [Ambriola 94] </ref>. However, using a taxonomy has both advantages and drawbacks. The advantages of using a taxonomy in our case include a more structured discussion, and a consistent treatment of each discipline. The discussion also becomes more concrete.
Reference: [ANSI 94] <author> ANSI/NEMA: </author> <title> Committee Draft 14258 - Industrial automation systems, Systems architecture: Framework for Enterprise Modeling, </title> <publisher> ISO TC184 SC5 WG1, </publisher> <pages> 32 pages, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: It identifies the basic elements and their decomposition to any necessary degree. It also specifies the information requirements of these elements. It provides the information needed to define the 6 requirements for integrated information systems. It is used to improve the effectiveness and efficiency of the enterprise." <ref> [ANSI 94] </ref> "Enterprise modeling is the process of understanding a complex social organization by constructing models." [Rumba 93] "Enterprise modeling is a technique for capturing and validating information systems requirements." [Nellborn 94] We do not intend to present a unified definition of enterprise modeling in this paper, we just present some
Reference: [Aoyama 93] <author> M. Aoyama: </author> <title> Concurrent-Development Process Model, </title> <journal> IEEE Software, </journal> <pages> pages 46 - 55, </pages> <month> July, </month> <year> 1993. </year>
Reference-contexts: A widely referenced text book upon the subject ([Carter 92]) does not speak of process modeling at all. Instead, questionnaires combined with a heuristic diagram technique are recommended for assessment of the current process. Others, like [Singh 93] and <ref> [Aoyama 93] </ref>, use process technology for assessment of both current and future process. Consequently, it is impossible to give a description covering all parts of the field. Business domain Concurrent Engineering is in theory domain-free. <p> Business domain Concurrent Engineering is in theory domain-free. However, with a focus on application of information technology support and product design, CE is usually tied to development of tangible goods. However, there are no indications that software production could not be managed likewise (as reported by <ref> [Aoyama 93] </ref>). Intent The intent of employing process technology in CE is mainly to understand, communicate and analyse.
Reference: [Armenise 92] <author> P. Armenise, S. Bandinelli, C. Ghezzi, A. Morzenti: </author> <title> Software Process Representation Languages Survey and Assessment, </title> <booktitle> In Proceedings of the 4th IEEE International Conference on Software Engineering and Knowledge Engineering, </booktitle> <pages> pages 455 - 462, </pages> <address> Capri, Italy, </address> <month> June </month> <year> 1992. </year>
Reference: [Bandi 93] <author> S. Bandinelli, A. Fugetta, C. Ghezzi, L. Lavazza: </author> <title> SPADE - An Environment for Software Process Analysis, Design and Enactment, </title> <booktitle> In Proceedings of the 2nd International Conference on the Software Process (ICSP 2), IEEE Computer Society, </booktitle> <address> Berlin, Germany, </address> <year> 1993. </year>
Reference-contexts: The objectives of behind this increase in interest is to improve software production in terms of increased quality, reduced costs and reduced time-to-market. Both prototype and commercial process-centered software engineering environments (PSEEs) have been developed, supporting the software production process ([Conradi 90], [Fernstrm 93], <ref> [Bandi 93] </ref>). Before continuing the discussion, definition of some main terms is required. A process is a set of goal-oriented, partially ordered and interacting activities, and their associated artifacts and resources (humans, tools, time) [Conradi 94]. Hence, we do not incorporate chemical or physical processes in our work.
Reference: [Bollinger 91] <author> T. B. Bollinger, C. McGowan: </author> <title> A Critical Look at Software Capability Evaluations, </title> <journal> IEEE Software, </journal> <pages> pages 25 - 41, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: A characteristic of this domain is the repeatable process: Once the product is created, the uncertainty associated with production concerns how to replicate the product, and not how to design it. This is discussed by Bollinger and McGowan in <ref> [Bollinger 91] </ref> as replication risk and design risk, respectively. Production of software systems and information systems is associated with design risk, as they are one-of-a-kind products.
Reference: [Booch 86] <author> G. Booch: </author> <title> Software Engineering with Ada, 2nd edition, </title> <publisher> The Benjamin/Cummings Publishing Company, Inc., </publisher> <address> Menlo Park, California, USA, </address> <pages> 580 pages, </pages> <year> 1986. </year>
Reference-contexts: Then each dimension from the taxonomy is discussed according to the subcategories. 3.1. Software Engineering (SE) Software engineering is the application of sound engineering principles to the development of software systems that are modifiable, efficient, reliable and understandable <ref> [Booch 86] </ref>. In addition, we may add cost and time as important factors.
Reference: [Bubenko 94] <editor> J. A. Bubenko jr., C. Rolland, P. Loucopoulos, V. DeAntonellis: </editor> <title> Facilitating "Fuzzy to Formal" Requirements Modelling, </title> <booktitle> In Proceedings of the IEEE International Conference on Requirements Engineering, </booktitle> <institution> Colorado Springs, Colorado, USA, and Taipei, Taiwan, </institution> <year> 1994. </year>
Reference-contexts: However, as the diversity of definitions presented above indicates, EM as a research field has not matured to such a degree that a common terminology or agreement on main objectives have emerged. The F3 project <ref> [Bubenko 94] </ref> operates with a socalled "Enterprise Model set" consisting of an objectives model, a concepts model, a model of activities and usage, an actors model, and information system requirements models [Nellborn 94]. Another effort is the ProSLCSE project [Dutton 93].
Reference: [Carter 92] <author> D. E. Carter, B. S. Baker: </author> <title> Concurrent Engineering - The Product Development Environment for the 1990's, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, USA, </address> <pages> 175 pages, </pages> <year> 1992. </year>
Reference-contexts: In addition, a life-cycle perspective on the product is encouraged, in order to reduce the overall costs (in a broad sense). The main benefits of a successful implementation of CE principles are reduced time-to-market, improved product quality and increased productivity, leading to lower costs <ref> [Carter 92] </ref>. Several successful CE projects have been reported. An example is a pilot project run at General Electrics Aircraft Engines, where the development of an engine part was reduced from 17 months to 6 months, with increased product quality [Singh 93].
Reference: [Conradi 90] <editor> R. Conradi et al.: </editor> <booktitle> Design of the Kernel EPOS Software Engineering Environment, In Proceedings of the 1st International Conferences on System Development Environments and Factories, </booktitle> <publisher> Pitman Publishing, </publisher> <year> 1990. </year>
Reference: [Conradi 92] <author> R. Conradi, C. Fernstrm, A. Fugetta, R. Snowdon: </author> <title> Towards a Reference Framework for Process Concepts, </title> <editor> In J.-C. Derniame (ed.): </editor> <booktitle> Proceedings of the 2nd European Workshop on Software Process Technology, </booktitle> <pages> pages 3 - 17, </pages> <address> Trondheim, Norway, </address> <year> 1992. </year> <month> 17 </month>
Reference-contexts: Business domain Process technology is used within SE to build models of the software production process, or software process in short. The software process is defined as "the activities, rules, procedures, techniques and tools used within the business of software production" <ref> [Conradi 92] </ref>. In addition to modeling the real world business processes, the Software Process Modeling (SPM) community also focus on the metaprocess. The software metaprocess is a set of (meta-)activities to model, analyze, and support a process [Conradi 92]. <p> activities, rules, procedures, techniques and tools used within the business of software production" <ref> [Conradi 92] </ref>. In addition to modeling the real world business processes, the Software Process Modeling (SPM) community also focus on the metaprocess. The software metaprocess is a set of (meta-)activities to model, analyze, and support a process [Conradi 92]. This activity is required as the software process cannot be predicted very well in advance, so the process model needs to evolve. In fact, the real world process may change even more than the product, and the process model should reflect these changes.
Reference: [Conradi 93] <author> R. Conradi, G. M. Hydalsvik, G. Sindre: </author> <title> A Comparison of Modeling Frameworks for Software Processes and Information Systems, </title> <type> EPOS TR 194, </type> <institution> IDT, NTH, University of Trondheim, </institution> <address> Norway, </address> <pages> 14 pages, </pages> <year> 1993. </year>
Reference: [Conradi 94] <author> R. Conradi, C. Liu: </author> <title> Process Modelling Languages: One or Many?, </title> <booktitle> submitted for the 4th European Workshop on Software Process Technology, </booktitle> <address> Noordwijkerhout, The Netherlands, </address> <month> April 3-5, </month> <year> 1995. </year>
Reference-contexts: Before continuing the discussion, definition of some main terms is required. A process is a set of goal-oriented, partially ordered and interacting activities, and their associated artifacts and resources (humans, tools, time) <ref> [Conradi 94] </ref>. Hence, we do not incorporate chemical or physical processes in our work. A model is an explicit structure that a system may reason about. A process model is thus an explicit structure representing an abstraction of a real-world process.
Reference: [Christ 93] <author> T. R. Christiansen: </author> <title> Modeling Efficiency and Effectiveness of Coordination in Engineering Design Teams, </title> <type> PhD thesis, </type> <institution> CIFE, University of Stanford, California, </institution> <address> USA, </address> <pages> 317 pages, </pages> <year> 1993. </year>
Reference-contexts: Two sample projects within this area are the Virtual Design Team (VDT) effort at CIFE, University of Stanford <ref> [Christ 93] </ref> and the Process Handbook effort at Center for Coordination Science, MIT [Malone 92]. The VDT project has developed both theories and a simulation tool that can support OD.
Reference: [Curtis 92] <author> B. Curtis, M. I. Kellner, J. </author> <title> Over: Process Modeling, </title> <journal> Communications of the ACM, </journal> <pages> pages 75 - 90, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: 1. Introduction Few research areas have received so much interest from the software engineering community during the past decade as the software production process <ref> [Curtis 92] </ref>. That is evident from the amount of papers published on aspects of the issue, along with the number of conferences and workshops held. The objectives of behind this increase in interest is to improve software production in terms of increased quality, reduced costs and reduced time-to-market. <p> The SE community seems to agree that the best way to support the software development process is through use of process models. Models describe both current and future processes (descriptive and prescriptive models, respectively). Even explicitly forbidden processes are modelled (proscriptive modeling) <ref> [Curtis 92] </ref>. Extensive resources have been invested in research on process technology, and the area are getting more mature in the sense that commercial products are being released. However, the software engineering community is not the only one interested in process modeling as a means to support work. <p> Others use the term process innovation [Davenport 93], but the meaning is the same: Completely rethinking how a service is 7 provided or a product manufactured from scratch, without being constrained by current processes or organization. BPR operates with both descriptive and prescriptive process models <ref> [Curtis 92] </ref>. The descriptive models ("As-Is" models) provide an overview of the current process. The prescriptive models ("To-Be" models) presents the future work process, after reengineering has been performed. Process modeling has been widely debated in the BPR community.
Reference: [Davenport 93] <author> T. H. Davenport: </author> <title> Process Innovation - Reengineering Work through Information Technology, </title> <publisher> Harvard Business School Press, </publisher> <address> Boston, Massachusetts, USA, </address> <pages> 337 pages, </pages> <year> 1993. </year>
Reference-contexts: Business Process Reengineering (BPR) Business Process Reengineering is defined as "the fundamental rethinking and radical redesign of business processes to achieve dramatic improvements in critical, contemporary measures of performance, such as cost, quality, service, and speed" [Hammer 93]. Others use the term process innovation <ref> [Davenport 93] </ref>, but the meaning is the same: Completely rethinking how a service is 7 provided or a product manufactured from scratch, without being constrained by current processes or organization. BPR operates with both descriptive and prescriptive process models [Curtis 92]. <p> Process modeling has been widely debated in the BPR community. Some contributors claim that descriptive modeling is a waste of resources, as the current process is going to be radically changed anyway. Others claim that changes are not possible if one does not know how the process is today <ref> [Davenport 93] </ref>. Business domain Like EM, BPR is domain-free, meaning that any business process may be reengineered, whether it is software production, manufacturing of cars, or banking. BPR as such is a technique for improving the organizations' performance.
Reference: [Dutton 93] <author> J. E. Dutton: </author> <title> Commonsense approach to process modeling, </title> <journal> IEEE Software, </journal> <pages> pages 56 - 64, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: The F3 project [Bubenko 94] operates with a socalled "Enterprise Model set" consisting of an objectives model, a concepts model, a model of activities and usage, an actors model, and information system requirements models [Nellborn 94]. Another effort is the ProSLCSE project <ref> [Dutton 93] </ref>. They have split an enterprise model in three: An infrastructure model, with resources, resource groups, communication paths and reporting relationships. An information model, with objects, links, types and composites. A process model, with tasks, artifacts, projects and processes. 3.4.
Reference: [Fernstrm 93] <author> C. Fernstrm: </author> <title> Process WEAVER - Adding Process Support to UNIX, </title> <booktitle> In Proceedings of the 2nd International Conference on Software Process (ICSP 2), </booktitle> <pages> pages 12 - 26, </pages> <publisher> IEEE Computer Society, </publisher> <address> Berlin, Germany, </address> <month> March </month> <year> 1993. </year>
Reference-contexts: The objectives of behind this increase in interest is to improve software production in terms of increased quality, reduced costs and reduced time-to-market. Both prototype and commercial process-centered software engineering environments (PSEEs) have been developed, supporting the software production process ([Conradi 90], <ref> [Fernstrm 93] </ref>, [Bandi 93]). Before continuing the discussion, definition of some main terms is required. A process is a set of goal-oriented, partially ordered and interacting activities, and their associated artifacts and resources (humans, tools, time) [Conradi 94]. Hence, we do not incorporate chemical or physical processes in our work.
Reference: [Gill 76] <author> A. Gill: </author> <title> Applied Algebra for the Computer Sciences, </title> <publisher> Prentice-Hall, Inc., </publisher> <address> Englewood Cliffs, New Jersey, USA, </address> <pages> 432 pages, </pages> <year> 1976. </year>
Reference-contexts: The assessment of the different research areas and their use of process technology is presented using a kind of Venn diagrams <ref> [Gill 76] </ref>. Obviously, the different areas cannot be compared according to all aspects at the same time, as this would require multidimensional Venn diagrams. Hence, the comparison is made for each dimension of our taxonomy at a time.
Reference: [Hammer 93] <author> M. Hammer, J. Champy: </author> <title> Reenginerring the Corporation: A Manifesto for Business Revolution, </title> <publisher> Nicholas Brealy Publishing, </publisher> <address> London, UK, </address> <pages> 223 pages, </pages> <year> 1993. </year>
Reference-contexts: A process model, with tasks, artifacts, projects and processes. 3.4. Business Process Reengineering (BPR) Business Process Reengineering is defined as "the fundamental rethinking and radical redesign of business processes to achieve dramatic improvements in critical, contemporary measures of performance, such as cost, quality, service, and speed" <ref> [Hammer 93] </ref>. Others use the term process innovation [Davenport 93], but the meaning is the same: Completely rethinking how a service is 7 provided or a product manufactured from scratch, without being constrained by current processes or organization. BPR operates with both descriptive and prescriptive process models [Curtis 92].
Reference: [Hofmann 93] <author> H. F. Hofmann: </author> <title> Requirements Engineering - A Survey of Methods and Tools, </title> <type> Technical Report no. </type> <institution> 93.05, Institut fr Informatik der Universitt Zrich, </institution> <address> Switzerland, </address> <pages> 49 pages, </pages> <month> Mars </month> <year> 1993. </year>
Reference-contexts: IS developers and customers in common develop conceptual models of the current organization and its information processing routines, in order to build a common understanding of current information needs. This is usually a part of what is called requirements engineering <ref> [Hofmann 93] </ref>. These models are analysed (e. g., to determine automation boundaries), and communicated to designers, who implement the actual information system. This final executable system automates parts of the information processing in the organization. Note that this kind of automation is not the same as enactment to SPM.
Reference: [Kosanke 92] <author> K. Kosanke: </author> <title> CIMOSA - A European Development for Enterprise Integration, Part 1 - An Overview, </title> <booktitle> In Proceedings of the First International Conference on Enterprise Integration Modeling (ICEIMT), </booktitle> <pages> pages 179 - 188, </pages> <address> Austin, Texas, USA, and Nice, France, </address> <year> 1992. </year>
Reference-contexts: A major recent effort on development of CIM technology, including a generic modeling framework, is ESPRIT CIM-OSA (Open System Architecture) [Rembold 93], <ref> [Kosanke 92] </ref>. Business domain The business domain of CIM is manufacturing of goods, like car production, airplane production, etc. A characteristic of this domain is the repeatable process: Once the product is created, the uncertainty associated with production concerns how to replicate the product, and not how to design it.
Reference: [Lockwood 93] <author> R. Lockwood, M. Lavery, L. Lachal: </author> <title> Groupware - Market Strategies, </title> <publisher> Ovum Limited, </publisher> <address> London, UK, </address> <pages> 305 pages, </pages> <year> 1993. </year>
Reference-contexts: This approach requires a relatively stable business process, as the rules are not meant to be changed on the fly. A much referenced commercial product supporting this idea is ActionWorkflow from Action Technologies <ref> [Lockwood 93] </ref>. A simple process model of the workflow may be built using a formalism based on a conversational metaphor, and the model may automatically be translated into a Lotus Notes application [Lockwood 93]. Business domain Organizations using WM are mainly in business domains that work with information processing. <p> A much referenced commercial product supporting this idea is ActionWorkflow from Action Technologies <ref> [Lockwood 93] </ref>. A simple process model of the workflow may be built using a formalism based on a conversational metaphor, and the model may automatically be translated into a Lotus Notes application [Lockwood 93]. Business domain Organizations using WM are mainly in business domains that work with information processing. However, the focus is not on intensive applications, like banking, but rather on processes where humans do most of the work, and coordination is facilitated by the Workflow Management systems.
Reference: [Maes 87] <author> P. Maes: </author> <title> Concepts and Experiments in Computational Reflection, </title> <booktitle> In Proceedings of ACM SIGPLAN Conference on ObjectOriented Programming Systems, Languages and Applications (OOPSLA'87), </booktitle> <pages> pages 147 - 155, </pages> <year> 1987. </year>
Reference-contexts: This processoriented work process is called the metaprocess. Reflective systems operate on the basis of this meta model <ref> [Maes 87] </ref>. The SE community seems to agree that the best way to support the software development process is through use of process models. Models describe both current and future processes (descriptive and prescriptive models, respectively). Even explicitly forbidden processes are modelled (proscriptive modeling) [Curtis 92].
Reference: [Malone 92] <author> T. W. Malone, K. Crowston, J. Lee, B. Pentland: </author> <title> Tools for Inventing Organizations - Toward a Handbook of Organizational Processes, </title> <type> working paper, </type> <institution> Center for Coordination Science, MIT, Massachusetts, </institution> <address> USA, </address> <pages> 21 pages, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: Two sample projects within this area are the Virtual Design Team (VDT) effort at CIFE, University of Stanford [Christ 93] and the Process Handbook effort at Center for Coordination Science, MIT <ref> [Malone 92] </ref>. The VDT project has developed both theories and a simulation tool that can support OD. The simulation tool takes as input descriptions of the design process, the work load, information processing, verification policies and communication tools, and predicts project duration, cost and coordination quality.
Reference: [Marshak 91] <author> R. T. Marshak: </author> <title> Perspectives on Workflow, </title> <booktitle> In [White 94], </booktitle> <pages> pages 165 - 176. </pages>
Reference-contexts: Artifacts are modelled to predict work load, and actors are modelled with their skills, experiences and work capacity. Tools mainly include communication tools and is used for predicting project quality. 3.6. Workflow Management (WM) Workflow can be defined as "the sequence or steps used in business processes" <ref> [Marshak 91] </ref>. Marshak also requires that more than one person is involved in the process, and that the workflow consists of both sequential and parallel steps. Workflow Management is supporting and controlling the workflow.
Reference: [Metis 93] <author> Metis: </author> <title> METIS Software User's Guide, version 1.7, user documentation, </title> <address> Horten, Norway, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: EM may even be applied to organizations that do not use information technology at all, according to Rumbaugh's definition above. Intent The main intent of EM is understanding, communication and evolution. Some providers of technology for EM <ref> [Metis 93] </ref> indicate using enterprise models for simulation and enactment as well, but major focus seems to be on building correct mental models and unified views of the enterprise among the employees. The important issue is that EM focuses on modeling at a high level of abstraction.
Reference: [Nellborn 94] <author> C. Nellborn, P. Holm: </author> <title> Capturing Information Systems Requirements Through Enterprise and Speech Act Modelling, </title> <booktitle> In Proceedings of the 6th International Conference on Advanced Information Systems Engineering, </booktitle> <address> Utrecht, Netherlands, </address> <month> June </month> <year> 1994 </year> <month> 18 </month>
Reference-contexts: It is used to improve the effectiveness and efficiency of the enterprise." [ANSI 94] "Enterprise modeling is the process of understanding a complex social organization by constructing models." [Rumba 93] "Enterprise modeling is a technique for capturing and validating information systems requirements." <ref> [Nellborn 94] </ref> We do not intend to present a unified definition of enterprise modeling in this paper, we just present some of the aspects that seem to be agreed upon. Business domain Enterprise Modeling is not tied to any specific business domain. <p> The F3 project [Bubenko 94] operates with a socalled "Enterprise Model set" consisting of an objectives model, a concepts model, a model of activities and usage, an actors model, and information system requirements models <ref> [Nellborn 94] </ref>. Another effort is the ProSLCSE project [Dutton 93]. They have split an enterprise model in three: An infrastructure model, with resources, resource groups, communication paths and reporting relationships. An information model, with objects, links, types and composites. A process model, with tasks, artifacts, projects and processes. 3.4.
Reference: [Rembold 93] <author> U. Rembold, B. O. Nnaji, A. Storr: </author> <title> Computer Integrated Manufacturing and Engineering, </title> <publisher> Addison-Wesley, Wokingham, UK, </publisher> <pages> 640 pages, </pages> <year> 1993. </year>
Reference-contexts: A typical formalism that is applied by e. g. [Singh 93] is deployment flow charting. They incorporate time in addition to the previously mentioned elements. Focus is on simplicity, and not on the formal semantics of the language. 3.8. Computer Integrated Manufacturing (CIM) Computer Integrated Manufacturing is defined by <ref> [Rembold 93] </ref> as follows: "CIM conveys the concept of a semi or totally automated factory in which all processes leading to the manufacture of a product are integrated and controlled by computer. <p> A major recent effort on development of CIM technology, including a generic modeling framework, is ESPRIT CIM-OSA (Open System Architecture) <ref> [Rembold 93] </ref>, [Kosanke 92]. Business domain The business domain of CIM is manufacturing of goods, like car production, airplane production, etc. <p> Further, understanding is only considered important to the developers of the automated system, not to the humans in the real world process. Process elements There exists a variety of CIM modeling frameworks, e. g., the IBM concept, the NIST-AMRF hierachical model, CIM-OSA and the Amherst-Karlsruhe model <ref> [Rembold 93] </ref>. The main process elements included in the models seems to be activities, artifacts, projects and tools. Especially artifacts and tools are modelled in great detail, as the CIM system control the the manufacturing tools directly. 11 4. Comparison and Assessment 4.1.
Reference: [Singh 93] <author> K. J. Singh: </author> <title> Concurrent Engineering, </title> <type> Technical Report, </type> <institution> General Electrics Aircraft Engines, Cincinnati, Ohio, </institution> <address> USA, </address> <pages> 16 pages, </pages> <year> 1993. </year>
Reference-contexts: Several successful CE projects have been reported. An example is a pilot project run at General Electrics Aircraft Engines, where the development of an engine part was reduced from 17 months to 6 months, with increased product quality <ref> [Singh 93] </ref>. The application of process technology to the Concurrent Engineering approach does not seem to be agreed upon. A widely referenced text book upon the subject ([Carter 92]) does not speak of process modeling at all. <p> A widely referenced text book upon the subject ([Carter 92]) does not speak of process modeling at all. Instead, questionnaires combined with a heuristic diagram technique are recommended for assessment of the current process. Others, like <ref> [Singh 93] </ref> and [Aoyama 93], use process technology for assessment of both current and future process. Consequently, it is impossible to give a description covering all parts of the field. Business domain Concurrent Engineering is in theory domain-free. <p> Understanding and communication of the current process are as important as analysis and communication of the future process. 10 Process elements The process elements that most often seems to be incorporated in CE process models are activities, projects and roles. A typical formalism that is applied by e. g. <ref> [Singh 93] </ref> is deployment flow charting. They incorporate time in addition to the previously mentioned elements. Focus is on simplicity, and not on the formal semantics of the language. 3.8. <p> Some of these are discussed below. 14 The process of building process models In fields like CE, a kind of participative model development is applied. Singh reported the use of entire walls to plot process maps <ref> [Singh 93] </ref>. The effect of this is that several process participants may perform modeling at the same time, discussing whether the proposed process model is correct or not. This part of process modeling seems to be neglected within SPM.
Reference: [Rumba 93] <author> J. Rumbaugh: </author> <title> Objects in the Constitution - Enterprise Modeling, </title> <journal> Journal on ObjectOriented Programming, </journal> <pages> pages 18 - 24, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: It provides the information needed to define the 6 requirements for integrated information systems. It is used to improve the effectiveness and efficiency of the enterprise." [ANSI 94] "Enterprise modeling is the process of understanding a complex social organization by constructing models." <ref> [Rumba 93] </ref> "Enterprise modeling is a technique for capturing and validating information systems requirements." [Nellborn 94] We do not intend to present a unified definition of enterprise modeling in this paper, we just present some of the aspects that seem to be agreed upon.
Reference: [Slvberg 93] <author> A. Slvberg, D. C. Kung: </author> <title> Information Systems Engineering - An Introduction, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, Germany, </address> <pages> 540 pages, </pages> <year> 1993. </year>
Reference-contexts: These are characterized by a relatively small number of transaction types, while the number of actual transactions are huge. The use of process modeling technology within IS production is called Information Systems Modeling (ISM) <ref> [Slvberg 93] </ref>. Intent The main intents with ISM are understanding, communication, evolution, analysis and automation. IS developers and customers in common develop conceptual models of the current organization and its information processing routines, in order to build a common understanding of current information needs.
Reference: [White 94] <author> T. E. White, L.Fischer (ed.): </author> <title> New Tools for New Times - The Workflow Paradigm, Future Strategies, </title> <publisher> Inc., Book Division, </publisher> <address> Alameda, California, USA, </address> <year> 1994. </year>
Reference: [Winner 88] <author> R. I. Winner et al.: </author> <title> The Role of Concurrent Engineering in Weapons System Acquisition, </title> <type> Report R-338, </type> <institution> Institute for Defense Analyses, </institution> <address> Alexandria, VA, USA, </address> <year> 1988. </year> <month> 19 </month>
Reference-contexts: Business rules and artifacts decide the routing rules used in the WM system. Roles, actors and communication patterns describe the receivers and processors of the flow of artifacts. 3.7. Concurrent Engineering (CE) The most frequently referenced definition of Concurrent Engineering is provided in <ref> [Winner 88] </ref>: "CE is a systematic approach to the integrated concurrent design of products and their related processes, including manufacturing and support.
References-found: 35

