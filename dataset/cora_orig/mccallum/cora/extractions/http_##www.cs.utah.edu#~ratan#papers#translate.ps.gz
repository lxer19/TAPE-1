URL: http://www.cs.utah.edu/~ratan/papers/translate.ps.gz
Refering-URL: http://www.cs.utah.edu/~ratan/res.html
Root-URL: 
Email: ratan@cs.utah.edu  
Title: Translation between S/R and Promela  
Author: Ratan Nalumasu 
Date: September 30, 1995  
Address: Salt Lake City, UT 84112  
Affiliation: Department of Computer Science University of Utah  
Abstract: S/R and Promela are two concurrent programming languages used in finite state automated verification of communication protocols. The semantics of S/R supports synchronous parallel composition, while semantics of Promela supports an interleaving parallel composition of processes. Because of the differences in the execution model, the verification tools available for the models written in these languages are optimized differently. SPIN, a verification tool for models written in Promela, uses partial order reduction reductions based upon commutativity of interleaving to combat the state explosion problem due to the amount of concurrency in concurrent models. COSPAN, a tool used largely for hardware verification for models written in S/R, offers implicit enumeration and automatic reduction of the specification with respect to the properties to be verified. Because of such differences in the techniques used for combating the practical problems faced in verification of protocols, it may be desirable to translate the protocols written in one language into the other. For example, if there were a Promela model for which verification were intractable in spite of the partial order reductions in SPIN, there is a possibility that the reduction algorithms or implicit enumeration algorithms in COSPAN may be tractable. Conversely, an interleaving model specified in S/R may be executed more efficiently in SPIN. This document describes two translators, s2p and p2s, to translate S/R into Promela and Promela to S/R respectively. The effecitiveness of the translators is illustrated with the aid of two examples.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Ron H. Hardin. </author> <type> Personal communications. </type>
Reference-contexts: If a flag is included to instruct the COSPAN not to expand the array structures until a later point in time this problem can be solved. But that would require extensive changes to the current COSPAN implementation <ref> [1] </ref>. 5 Promela to S/R Translation Promela to S/R translator (called p2s) is a stand-alone program. It needs access to the SPIN version 2.0 or later to generate the intermediate files required.
Reference: [2] <author> Z. Har'El and R. P. Kurshan. </author> <title> Software for analytical development of communication protocols. </title> <journal> AT&T Tech. J., </journal> <volume> 69 </volume> <pages> 45-59, </pages> <year> 1990. </year>
Reference-contexts: A S/R specification may also contain a number of task s to specify the properties to be verified. These constructs coupled with the general synchronous model, give rise to a specification language with the power of !automaton [4]. COSPAN <ref> [2] </ref> is an analyzer for models written in the S/R language.
Reference: [3] <author> Gerard Holzmann. </author> <title> Design and Validation of Computer Protocols. </title> <publisher> Prentice Hall, </publisher> <year> 1991. </year>
Reference: [4] <author> R. P. Kurshan. </author> <title> Computer-Aided Verification of Coordinating Processes: The Automata-Theoretic Approach. </title> <publisher> Princeton University Press, </publisher> <year> 1994. </year>
Reference-contexts: Despite the differences in the semantic models, it may be desirable to translate the protocols written in 1 one language into the other. For example, since any interleaving model may be translated into a synchronous model <ref> [4, 5] </ref>, if there were a Promela model for which verification were intractable in spite of the partial order reductions in SPIN, there is a possibility that the reduction algorithms or implicit enumeration algorithms in COSPAN may be tractable. <p> During the resolution phase, each process computes its next state as a function of all the selection variables and its internal state. current global selection and then (instantaneously) making a new selection from the new state (taken with permission from <ref> [4] </ref>). S/R provides the cyset construct to impose fairness requirements and the recur construct to specify progress requirements. The language also offers constructs to specify process refinement using homomorphism. The structure of the processes is fixed at compile time, i.e., all processes are created at the time of initialization. <p> A S/R specification may also contain a number of task s to specify the properties to be verified. These constructs coupled with the general synchronous model, give rise to a specification language with the power of !automaton <ref> [4] </ref>. COSPAN [2] is an analyzer for models written in the S/R language.
Reference: [5] <author> R. P. Kurshan, M. Merritt, A. Orda, and S. R. Sachs. </author> <title> Modelling asynchrony with a synchronous model. </title> <journal> AT&T Tech. J., </journal> <volume> 124, </volume> <year> 1995. </year>
Reference-contexts: Despite the differences in the semantic models, it may be desirable to translate the protocols written in 1 one language into the other. For example, since any interleaving model may be translated into a synchronous model <ref> [4, 5] </ref>, if there were a Promela model for which verification were intractable in spite of the partial order reductions in SPIN, there is a possibility that the reduction algorithms or implicit enumeration algorithms in COSPAN may be tractable.
Reference: [6] <author> Doron Peled. </author> <title> All from one, one for all: On model checking using representatives. </title> <booktitle> In Computer Aided Verification, </booktitle> <pages> pages 409-423, </pages> <address> Elounda, Greece, </address> <month> June </month> <year> 1993. </year>
Reference: [7] <author> Antti Valmari. </author> <title> A stubborn attack on state explosion. </title> <booktitle> In Computer Aided Verification, </booktitle> <pages> pages 156-165, </pages> <address> New Brunswick, NJ, USA, </address> <month> June </month> <year> 1990. </year>
Reference: [8] <author> Antti Valmari. </author> <title> On-the-fly verification with stubborn sets. </title> <booktitle> In Computer Aided Verification, </booktitle> <pages> pages 397-408, </pages> <address> Elounda, Greece, </address> <month> June </month> <year> 1993. </year> <month> 11 </month>
References-found: 8

