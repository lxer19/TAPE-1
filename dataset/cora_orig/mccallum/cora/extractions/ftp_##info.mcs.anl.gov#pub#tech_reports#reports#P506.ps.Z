URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P506.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts95.htm
Root-URL: http://www.mcs.anl.gov
Email: Email: kwong, tang, blin@mcs.anl.gov  
Title: A Real-Time MPEG Software Decoder Using a Portable Message-Passing Library  
Author: Man Kam Kwong, P. T. Peter Tang, and Biquan Lin 
Keyword: Image processing, high-performance computing, video compression, real-time system, message-passing library.  
Address: Argonne, IL 60439-4844  
Affiliation: Mathematics and Computer Science Division Argonne National Laboratory  
Abstract: We present a real-time MPEG (Motion Pictures Expert Group) software decoder that uses message-passing libraries such as MPL, p4, and MPI. The parallel MPEG decoder currently runs on the IBM SP system but can be easily ported to other parallel machines. This paper discusses our parallel MPEG decoding algorithm as well as the parallel programming environment under which it uses. Several technical issues are discussed, including balancing of decoding speed, memory limitation, I/O capacities, and optimization of MPEG decoding components. This project shows that a real-time portable software MPEG decoder is feasible in a general-purpose parallel machine. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Arif Ghafoor, J. Yang, and S. Baqai, </author> <title> "Coarse-grained Parallel Algorithm and Implementation for MPEG-1 Decoder," </title> <booktitle> Proceedings of the Workshop on Wavelets and Large-Scale Image Processing, </booktitle> <institution> Argonne National Laboratory, </institution> <year> 1994. </year>
Reference-contexts: Taylor [8] implemented an MPEG-1 encoder and decoder that works in real-time using some special DSP processors embedded in parallel hardware. The drawback of this implementation is that it cannot be ported to a general-purpose parallel machine without such DSP processors. Ghafoor et al. <ref> [1] </ref> studied speedup with different numbers of processors on several parallel machines including the nCUBE2 and Intel's Paragon. But they did not incorporate such parallel decoding processes with real-time and continuous video display. Our parallel MPEG-1 parallel decoder has the following features.
Reference: [2] <author> W. Gropp, E. Lusk, and A. Skjellum, </author> <title> Using MPI: Portable Parallel Programming with the Message-Passing Interface, </title> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference-contexts: MPI was completed in the spring of 1994 and is now awaiting public comments. An excellent book on MPI for newcomers as well as for experienced parallel researchers and programmers is <ref> [2] </ref>. One version of our parallel MPEG decoder was implemented with the MPI message-passing system. HIPPI. HIPPI (HIgh Performance Parallel Interface) is, as its name says, a high-performance I/O interface.
Reference: [3] <author> IBM, </author> <title> High-Performance Parallel Interface User's Guide and Programmer's Reference Manual, </title> <note> AIX version 3.2, </note> <month> May </month> <year> 1993. </year>
Reference-contexts: It is easy to parallelize a standard C program by calling a few message-passing functions in the MPL library. In our implementation of the MPEG decoder, fewer than 10 MPL functions are used. A list of MPL message-passing functions can be found in <ref> [3] </ref>. p4. p4 is one of the most popular message-passing systems that can run on a wide variety of parallel systems and workstations.
Reference: [4] <author> IBM, </author> <title> IBM AIX Parallel Environment Parallel Programming Subroutine Reference Release 2.0, </title> <month> June </month> <year> 1994. </year>
Reference: [5] <editor> ISO/IEC Committee Draft 11172-2, </editor> <title> Coding of Moving Pictures and Associated Audio for Digital Storage Media at upto 1.5 Mbits/s, </title> <address> ISO/IEC JTC1/SC29 WG11, </address> <month> Nov. </month> <year> 1991. </year>
Reference: [6] <author> R. Butler and E. Lusk, </author> <title> User's Guide to the p4 Parallel Programming System, </title> <type> Technical Report ANL-92/17, </type> <institution> Argonne National Laboratory, </institution> <month> Oct. </month> <year> 1992. </year>
Reference: [7] <author> L. A. Rowe, K. D. Patel, B. C. Smith and K. Liu, </author> <title> "MPEG Video in Software: Representation, Transmission, </title> <booktitle> and Playback," SPIE Proc. of High-Speed Networking and Multimedia Computing, </booktitle> <pages> pp. 134-144, </pages> <month> Feb. </month> <year> 1994. </year>
Reference-contexts: Our investigation of a parallel software-based implementation of MPEG system was motivated by these consideration. Recently, several real-time software decoders have been implemented. Rowe et al. <ref> [7] </ref> developed a portable MPEG-1 video decoder that can play small-sized (160fi120) video in real-time. They used a SPARC 1+ to read the bitstream and a SPARC 10 to decode and display the video. Some frames may be dropped to accommodate network load and decoding speed.
Reference: [8] <author> H. H. Taylor, D. Chin, and A. W. Jessup, </author> <title> "An MPEG Encoder Implementation on the Princeton Engine Video Supercomputer," </title> <booktitle> IEEE Proc. of Data Compression Conference, </booktitle> <pages> pp. 420-429, </pages> <year> 1993. </year>
Reference-contexts: They used a SPARC 1+ to read the bitstream and a SPARC 10 to decode and display the video. Some frames may be dropped to accommodate network load and decoding speed. Taylor <ref> [8] </ref> implemented an MPEG-1 encoder and decoder that works in real-time using some special DSP processors embedded in parallel hardware. The drawback of this implementation is that it cannot be ported to a general-purpose parallel machine without such DSP processors.
References-found: 8

