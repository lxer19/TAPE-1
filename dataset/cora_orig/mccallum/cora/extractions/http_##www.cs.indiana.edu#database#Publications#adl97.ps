URL: http://www.cs.indiana.edu/database/Publications/adl97.ps
Refering-URL: http://www.cs.indiana.edu/database/Publications/index.html
Root-URL: http://www.cs.indiana.edu
Email: (asengupt@indiana.edu)  (adillon@indiana.edu)  
Title: Query By Templates: A generalized approach for visual query formulation for text dominated databases  
Author: Arijit Sengupta Andrew Dillon 
Abstract: With the advent of the World Wide Web (WWW), the concept of document databases is becoming more popular. This makes the idea of a globally distributed digital document library realizable. The standard encoding format for the WWW is HTML (HyperText Markup Language), which embeds some structural information in otherwise text-dominated documents. HTML can be viewed as a special instance of SGML (Standard Generalized Markup Language) [ISO86], a very powerful document encoding language capable of describing may different types of languages and formats. The current work is based on designing query languages, processing and visualizing mechanisms for structured documents in general, and SGML documents in particular. We are using the World Wide Web as a platform for this querying mechanism, especially because of its popularity and world-wide availability. However, because of the wide range of users, these systems need to be easy to use. In particular, it is important that users can easily search for information from the database without prior knowledge of the internal structure of the database. This paper outlines a visual query constructing technique for application in databases containing hierarchically structured documents. In this paper, we describe the visual component of this query language, which is essentially a generalization of the Query By Example (QBE) [Zlo77] language for relational databases. We call this method "Query By Templates(QBT)". Further, we describe the basic properties and usefulness this visual query technique, and show how queries on structured document databases can be performed using this method. We also describe an implementation of QBT on the Web using the Java T M [Jav95] programming language. 
Abstract-found: 1
Intro-found: 1
Reference: [ACM93] <author> Serge Abiteboul, Sophie Cluet, and Tova Milo. </author> <title> Querying and updating the file. </title> <booktitle> Proceedings, 19th Intl. Conference on Very Large Data Bases, </booktitle> <pages> pages 73-84, </pages> <year> 1993. </year>
Reference-contexts: These types of searches are less common in document processing systems because of the lack of the strong searching capabilities. Such searches can truly help readers find apparently complex information quickly and easily <ref> [BYG89, ACM93] </ref>. Fortunately SGML provides a framework for these searches.
Reference: [Boo89] <author> Paul Booth. </author> <title> An Introduction to Human-computer Interaction. </title> <publisher> Laurence ErlBaum Associates Publishers, </publisher> <year> 1989. </year>
Reference-contexts: Forms always look the same, whether the underlying database is a poem, a dictionary, a quotation collection, or even a relational database. However, templates can be custom-designed for different types of databases. This way, templates can provide a direct reflection of the users' mental models <ref> [Boo89, Ch.6] </ref>, a significant factor in the design of good user-interfaces. Moreover, templates use the principle of familiarity [Nor90], which is demonstrated to work well for novice users.
Reference: [BYG89] <author> Ricardo A. Baeza-Yates and Gaston H. Gonnet. </author> <title> Efficient text searching of regular expressions. </title> <booktitle> Proceedings, 16th International Colloquium on Automata, Languages, and Programming, </booktitle> <pages> pages 46-62, </pages> <year> 1989. </year>
Reference-contexts: These types of searches are less common in document processing systems because of the lack of the strong searching capabilities. Such searches can truly help readers find apparently complex information quickly and easily <ref> [BYG89, ACM93] </ref>. Fortunately SGML provides a framework for these searches.
Reference: [BYN96] <author> Ricardo Baeza-Yates and Gonzalo Navarro. </author> <title> Integrating contents and structures in text retrieval. </title> <booktitle> SIGMOD Record, </booktitle> <volume> 25(4) </volume> <pages> 67-79, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: However, a query language for document databases should have the capability of traversing the document hierarchy. A number of languages have been proposed and implemented in various databases for structured documents. Two very useful surveys of such languages and systems can be obtained from <ref> [Loe94, BYN96] </ref>. Most database systems implement specific database models, such as the relational model and Object-Oriented (OO) model. These database models are based on strong theoretical foundations and have formal procedural languages to manipulate data in these models.
Reference: [CDN87] <author> A. Creed, I. Dennis, and S. </author> <title> Newstead. </title> <journal> Proof-reading on VDUs. Behavior and Information Technology, </journal> <volume> 6(1) </volume> <pages> 3-13, </pages> <year> 1987. </year>
Reference-contexts: Whether readers are more comfortable with screen reading or paper reading is a debatable question [Dil94]. Research shows strong evidence of paper as a more natural means of reading <ref> [GAB + 87, CDN87] </ref> as well as a means to rectify the problems with reading from a screen [GAF + 87, OH88]. However, one major advantage of electronic documents over their paper counterpart is the possibility of automated searching.
Reference: [Com92] <author> Nathan Combs. </author> <title> Large text database visualization. </title> <booktitle> Advances in Classification Research, Proceedings of the 3rd ASIS SIG/CR Classification Research Workshop, </booktitle> <volume> 3, </volume> <month> Oct </month> <year> 1992. </year>
Reference-contexts: TEXTVIZ: TEXTVIZ is a system for intuitively visualizing, searching, and querying the contents of large text databases under development at TASC <ref> [Com92] </ref>. This method uses a map-like representation of documents that shows users how documents are related in terms of their conceptual component. The core of the visualization system is this topographic map used to visualize the contents of the database.
Reference: [Dil94] <author> Andrew Dillon. </author> <title> Designing Usable Electronic Text: Ergonomic Aspects of Human Information Usage. </title> <publisher> Taylor & Francis, </publisher> <year> 1994. </year>
Reference-contexts: Although hypertext documents provide for a more interesting way of browsing, finding information in hypertext documents by browsing still requires human intelligence, knowledge and experience. Whether readers are more comfortable with screen reading or paper reading is a debatable question <ref> [Dil94] </ref>. Research shows strong evidence of paper as a more natural means of reading [GAB + 87, CDN87] as well as a means to rectify the problems with reading from a screen [GAF + 87, OH88]. <p> This is the sole advantage that can support the development of digital libraries. Using electronic documents, the readers can search for words or phrases very quickly. The same search can be tremendously difficult in paper documents <ref> [Dil94] </ref>. 2 However, simply searching for words often does not meet the readers' requirements. For large documents searching for the presence or absence of specific criteria involving logical regions of the document is often necessary. In many cases, various conditions need to be combined.
Reference: [GAB + 87] <author> J.D. Gould, L. Alfaro, V. Barnes, R. Finn, N. Grischkowsky, and A. Minuto. </author> <title> Reading is slower from crt displays than from paper: Attempts to isolate a single variable explanation. </title> <booktitle> Human Factors, </booktitle> <volume> 29(3) </volume> <pages> 269-299, </pages> <year> 1987. </year>
Reference-contexts: Whether readers are more comfortable with screen reading or paper reading is a debatable question [Dil94]. Research shows strong evidence of paper as a more natural means of reading <ref> [GAB + 87, CDN87] </ref> as well as a means to rectify the problems with reading from a screen [GAF + 87, OH88]. However, one major advantage of electronic documents over their paper counterpart is the possibility of automated searching.
Reference: [GAF + 87] <author> J.D. Gould, L. Alfaro, R. Finn, B. Haupt, and A. Minuto. </author> <title> Reading from crt displays can be as fast as reading from paper. </title> <booktitle> Human Factors, </booktitle> <volume> 29(5) </volume> <pages> 497-517, </pages> <year> 1987. </year>
Reference-contexts: Whether readers are more comfortable with screen reading or paper reading is a debatable question [Dil94]. Research shows strong evidence of paper as a more natural means of reading [GAB + 87, CDN87] as well as a means to rectify the problems with reading from a screen <ref> [GAF + 87, OH88] </ref>. However, one major advantage of electronic documents over their paper counterpart is the possibility of automated searching. This is the sole advantage that can support the development of digital libraries. Using electronic documents, the readers can search for words or phrases very quickly.
Reference: [ISO86] <author> International Standards Organization. </author> <title> ISO 8879: Information Processing Text and Office Systems Standard Generalized Markup Language (SGML), </title> <year> 1986. </year>
Reference-contexts: 1 Introduction The SGML Standard <ref> [ISO86] </ref> has brought forward a new way of looking at documents as a means for information interchange and retrieval. We can now use properly structured documents not only for the traditional purposes of reading, browsing, and printing, but also for searching and querying. <p> Dept. of Education award number P200A502367 and NSF Research and Infrastructure grant, award number NSF CDA-9303189. 1 1.1 SGML, Databases and Documents The advent of the SGML Standard <ref> [ISO86] </ref> has broadened the scope for document usage. Traditionally, documents in electronic format are used mainly for word processing, editing, publishing, and possible reuse into other documents. However, word-processor documents are not very portable, since documents in one format can not be easily converted into another. <p> The SGML standard extends the use of electronic documents beyond word processing towards a means for information interchange. SGML was originally designed as a portable document encoding format for easy interchange between various platforms and systems. The purpose of SGML, as stated in the standard <ref> [ISO86] </ref> can be summarized as: SGML can be used for publishing in its broadest definition, ranging from single medium conventional publishing to multi-media data base publishing. SGML can also be used in office document processing when the benefits of human readability and interchange with publishing systems are required.
Reference: [Jav95] <author> Sun Microsystems. </author> <title> The Java T M Language Specification: Version 1.0 Beta, </title> <year> 1995. </year>
Reference: [KR96] <author> T. Alan Keahey and Edward L. Robertson. </author> <title> Techniques for non-linear magnification transformations. </title> <booktitle> In Proceedings, Visualisation '96 Information Visualization Symposium. IEEE, </booktitle> <month> October </month> <year> 1996. </year>
Reference-contexts: On the other hand, a structure template can be easily used to navigate through complex hierarchical structures. Even for complex hierarchies, the focus can be concentrated in the regions of interest using advanced methods like differential magnification <ref> [KR96] </ref>. Another big advantage of the template method is its direct relationship to the internal structure of the database. Forms always look the same, whether the underlying database is a poem, a dictionary, a quotation collection, or even a relational database.
Reference: [Loe94] <author> Arjan Loeffen. </author> <title> Text databases: A survey of text models and systems. </title> <booktitle> SIGMOD RECORD, </booktitle> <month> March </month> <year> 1994. </year>
Reference-contexts: However, a query language for document databases should have the capability of traversing the document hierarchy. A number of languages have been proposed and implemented in various databases for structured documents. Two very useful surveys of such languages and systems can be obtained from <ref> [Loe94, BYN96] </ref>. Most database systems implement specific database models, such as the relational model and Object-Oriented (OO) model. These database models are based on strong theoretical foundations and have formal procedural languages to manipulate data in these models.
Reference: [Nel87] <author> Ted Nelson. </author> <note> Literary Machines, volume Version 87.1. Published by author, </note> <year> 1987. </year>
Reference-contexts: The success of the search depends upon the reader's knowledge of the subject matter, the organization of the text, and similar factors. The recent advent of hypertext documents has changed the traditional sequential method of browsing. Browsing in hypertext documents is non-linear <ref> [Nel87, SK89] </ref> usually performed by following links in the document to other related areas of the same document or entirely different documents. Although hypertext documents provide for a more interesting way of browsing, finding information in hypertext documents by browsing still requires human intelligence, knowledge and experience.
Reference: [Nor90] <author> Donald Norman. </author> <title> The Design of Everyday things. </title> <publisher> Doubleday Currency, </publisher> <year> 1990. </year>
Reference-contexts: However, templates can be custom-designed for different types of databases. This way, templates can provide a direct reflection of the users' mental models [Boo89, Ch.6], a significant factor in the design of good user-interfaces. Moreover, templates use the principle of familiarity <ref> [Nor90] </ref>, which is demonstrated to work well for novice users. The only disadvantage of templates is that good templates require expensive graphics terminals, while forms work quite well with terminals without graphics capabilities.
Reference: [OH88] <author> D. Oborne and D. Holton. </author> <title> Reading from screen versas paper: there is no difference. </title> <journal> International Journal of Man-Machine Studies, </journal> <volume> 28(1) </volume> <pages> 1-9, </pages> <year> 1988. </year>
Reference-contexts: Whether readers are more comfortable with screen reading or paper reading is a debatable question [Dil94]. Research shows strong evidence of paper as a more natural means of reading [GAB + 87, CDN87] as well as a means to rectify the problems with reading from a screen <ref> [GAF + 87, OH88] </ref>. However, one major advantage of electronic documents over their paper counterpart is the possibility of automated searching. This is the sole advantage that can support the development of digital libraries. Using electronic documents, the readers can search for words or phrases very quickly.
Reference: [Ope94] <institution> Open Text Corporation. Open Text 5.0, </institution> <year> 1994. </year> <month> 19 </month>
Reference-contexts: The engine generates its output in HTML which is displayed by the clients. We wrote the engine in C/C++, using the API (Application Programming Interface) provided by the Pat <ref> [Ope94] </ref> software. However, because of limitations of the processing capabilities of Pat, this engine does not support variables or joins.
Reference: [RB91] <author> Daniel E. Rose and Richard K. Belew. </author> <title> Toward a direct-manipulation interface for con-ceptual information retrieval systems. Interfaces for Information Retrieval and Online Systems the state of the art, </title> <year> 1991. </year>
Reference-contexts: AIR and SCALIR: AIR (Adaptive Information Retrieval) and SCALIR (Symbolic and Connectionist Approach to Legal Information Retrieval) are two systems described in the paper by Rose et al. <ref> [RB91] </ref>. Both of these systems use a connectionist approach to the information retrieval problem. AIR's goal is to build a representation that will retrieve documents that are more likely to be relevant to particular queries.
Reference: [Rub94] <author> Jeffrey Rubin. </author> <title> Handbook of Usability Testing: How to plan, design and conduct effective tests. </title> <publisher> John Wiley & Sons, Inc., </publisher> <year> 1994. </year>
Reference-contexts: Accuracy: The degree of accuracy of the answers. 3. Satisfaction: How satisfied the users were after using the interface. A group of twenty subjects was chosen for the experiment. The experiment was a "between-users" type of experiment <ref> [Rub94] </ref>. In this type of testing, two distinct groups of users use the two platforms, and results are gathered based on their performance. In our experiment, ten subjects were given the Java-based interface (see Figure 7), while another ten were given the form-based interface (see Figure 8).
Reference: [SK89] <author> Ben Shneiderman and Greg Kearsley. </author> <title> Hypertext Hands-on! An Introduction to a New Way of Organizing and accessing Information. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: The success of the search depends upon the reader's knowledge of the subject matter, the organization of the text, and similar factors. The recent advent of hypertext documents has changed the traditional sequential method of browsing. Browsing in hypertext documents is non-linear <ref> [Nel87, SK89] </ref> usually performed by following links in the document to other related areas of the same document or entirely different documents. Although hypertext documents provide for a more interesting way of browsing, finding information in hypertext documents by browsing still requires human intelligence, knowledge and experience.
Reference: [SQL92] <author> ANSI X3.135-1992, </author> <title> Database Language SQL. </title> <note> Also ISO/IEC 9075:1992, </note> <year> 1992. </year>
Reference-contexts: The database systems that people use are simply implementations of these formal models and languages. In case of relational databases, the relational algebra is the formal language for data manipulation. SQL (Structured Query Language) <ref> [SQL92] </ref> or QBE (Query By Example) [Zlo77] are two languages based on the relational calculus, a declarative language equivalent to relational algebra. These languages make relational databases useful and accessible to novice database users.
Reference: [Zlo77] <author> M. M. Zloof. </author> <title> Query by example: A database language. </title> <journal> IBM Systems Journal, </journal> <volume> 16(4), </volume> <year> 1977. </year>
Reference-contexts: The database systems that people use are simply implementations of these formal models and languages. In case of relational databases, the relational algebra is the formal language for data manipulation. SQL (Structured Query Language) [SQL92] or QBE (Query By Example) <ref> [Zlo77] </ref> are two languages based on the relational calculus, a declarative language equivalent to relational algebra. These languages make relational databases useful and accessible to novice database users. However, SQL is a language which has its own constructs and semantics and often proves harder for novice users to master. <p> However, there has been work in other areas for visualization of structures and queries involving complex structures. In this section, we describe the forms approach as well as a few other visualization approaches that have been proposed and implemented. 3 2.1.1 Query By Example (QBE) Query By Example <ref> [Zlo77] </ref> is a graphical language for querying relational databases. This language is based on a very simple interface composed of table skeletons from the database of interest. <p> QBE uses the rows to specify multiple search conditions and logical operations between the search conditions. Examples of how QBE uses the rows for specifying searches can be obtained from Zloof's original paper on QBE <ref> [Zlo77] </ref>. In QBT, regions are distributed across both dimensions of the template, so it is not possible to use rows for specifying multiple conditions. However, we can use the template plane more effectively to express conditions more visually.
References-found: 22

