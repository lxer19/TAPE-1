URL: ftp://ftp.wisdom.weizmann.ac.il/pub/CSreports/reps96/96-02.ps.Z
Refering-URL: http://www.bell-labs.com/~yash/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Optimal Availability Quorum Systems: Theory and Practice un-availability of a quorum system is the probability
Author: Yair Amir Avishai Wool 
Keyword: Quorum systems, distributed computing, fault tolerance, replication.  
Note: The  
Date: January 9, 1996  
Abstract: Quorum systems serve as a basic tool providing a uniform and reliable way to achieve coordination in a distributed system. They are useful for distributed and replicated databases, name servers, mutual exclusion, and distributed access control and signatures. In this paper we characterize the optimal availability quorum system in the general case, when the failure probabilities may take any value in the range 0 &lt; p i &lt; 1. Then we deal with the practical scenario in which the failure probabilities are unknown, but can be estimated. We give a robust and efficient algorithm that calculates a near optimal quorum system based on the estimated failure probabilities. 
Abstract-found: 1
Intro-found: 1
Reference: [Ami95] <author> Y. Amir. </author> <title> Replication Using Group Communication Over a Dynamic Network. </title> <type> PhD thesis, </type> <institution> Institute of Computer Science, The Hebrew University of Jerusalem, Israel. </institution> <note> Also available at http://www.cs.jhu.edu/yairamir, 1995. </note>
Reference-contexts: E-mail: yash@wisdom.weizmann.ac.il. 1 intersection. Set systems with the intersection property are known as quorum systems, and the sets in such a system are called quorums. Quorum systems have been used in the study of distributed control and management problems such as data replication protocols (cf. <ref> [DGS85, Her84, Ami95, Kei94] </ref>), name servers (cf. [MV88]), mutual exclusion (cf. [Ray86]), selective dissemination of information (cf. [YG94]), and distributed access control and signatures (cf. [NW96]). A protocol template based on quorum systems works as follows.
Reference: [AW95] <author> Y. Amir and A. Wool. </author> <title> Evaluating quorum systems over the Internet. </title> <type> Technical Report TR-1995-11, </type> <institution> Department of Computer Science, The Johns Hopkins University, </institution> <year> 1995. </year>
Reference-contexts: Both original proofs used a strong combinatorial tool, namely the Erd-os-Ko-Rado theorem [EKR61]. Our proof gives a more general result (allowing different failure probabilities), and is completely elementary. 2 When using the weights calculated according to [SB94] and formula (1) for a real system, such as in <ref> [AW95] </ref>, one has to handle the singularity when p i = 0. The ideal value zero may easily be encountered in practice, since the p i values are typically calculated by measuring the down time of the processors over some finite period. <p> Therefore (4) guarantees that the final weights calculated for reliable elements will be in the range v i 2 0; : : : ; bM log 2 1 " Remark: In <ref> [AW95] </ref>, for a 14 processor system we used a value of " = 0:0001. The value for the scaling factor M was chosen using (5) so that the computed weights are all in the range f0; : : : ; 10000g.
Reference: [BG87] <author> D. Barbara and H. Garcia-Molina. </author> <title> The reliability of vote mechanisms. </title> <journal> IEEE Trans. Comput., </journal> <volume> C-36:1197-1208, </volume> <month> October </month> <year> 1987. </year>
Reference-contexts: its lock) will be refused permission by at least one member of any quorum it chooses to access. 1.2 Overview It is known that when all of the processors have the same failure probability p then the optimal availability quorum system is either the Majority system if p &lt; 1=2 <ref> [BG87] </ref>, or the Monarchy if p &gt; 1=2 [PW95a, DKK + 94]. If the failure probabilities p i are different and all less than 1/2, then the optimal availability quorum system is known to be defined by voting.
Reference: [CAA90] <author> S. Y. Cheung, M. H. Ammar, and M. Ahamad. </author> <title> The grid protocol: A high performance scheme for maintaining replicated data. </title> <booktitle> In Proc. 6th IEEE Int. Conf. Data Engineering, </booktitle> <pages> pages 438-445, </pages> <year> 1990. </year>
Reference-contexts: A Quorum System is a set system S that has the Intersection property: S " R 6= ? for all S; R 2 S. The sets of the system are called quorums. Many quorum systems which are based on combinatorial constructions appear in the literature, such as <ref> [Mae85, GB85, AE91, CAA90, Kum91, KC91, NW94, PW95b] </ref>. However all the systems with optimal availability turn out to be defined by voting. Definition 2.2 Let v i be a positive vote assigned to element i, and let V = P i v i .
Reference: [DGS85] <author> S. B. Davidson, H. Garcia-Molina, and D. Skeen. </author> <title> Consistency in partitioned net works. </title> <journal> ACM Computing Surveys, </journal> <volume> 17(3) </volume> <pages> 341-370, </pages> <year> 1985. </year>
Reference-contexts: E-mail: yash@wisdom.weizmann.ac.il. 1 intersection. Set systems with the intersection property are known as quorum systems, and the sets in such a system are called quorums. Quorum systems have been used in the study of distributed control and management problems such as data replication protocols (cf. <ref> [DGS85, Her84, Ami95, Kei94] </ref>), name servers (cf. [MV88]), mutual exclusion (cf. [Ray86]), selective dissemination of information (cf. [YG94]), and distributed access control and signatures (cf. [NW96]). A protocol template based on quorum systems works as follows.
Reference: [DKK + 94] <author> K. Diks, E. Kranakis, D. Krizanc, B. Mans, and A. Pelc. </author> <title> Optimal coteries and voting schemes. </title> <journal> Inf. Proc. Letters, </journal> <volume> 51 </volume> <pages> 1-6, </pages> <year> 1994. </year>
Reference-contexts: least one member of any quorum it chooses to access. 1.2 Overview It is known that when all of the processors have the same failure probability p then the optimal availability quorum system is either the Majority system if p &lt; 1=2 [BG87], or the Monarchy if p &gt; 1=2 <ref> [PW95a, DKK + 94] </ref>. If the failure probabilities p i are different and all less than 1/2, then the optimal availability quorum system is known to be defined by voting. <p> The only exception is when all the elements have p i 1 2 , in which case we prove that the optimal quorum system is a monarchy with one of the least unreliable processors as the king. As a by-product, we obtain a new proof to the result of <ref> [PW95a, DKK + 94] </ref> that when p i = p &gt; 1 2 for all i, the monarchy is optimal. Both original proofs used a strong combinatorial tool, namely the Erd-os-Ko-Rado theorem [EKR61].
Reference: [EKR61] <author> P. Erd-os, C. Ko, and R. </author> <title> Rado. Intersection theorems for systems of finite sets. </title> <journal> Quart. J. Math. Oxford, </journal> <volume> 12(2) </volume> <pages> 313-320, </pages> <year> 1961. </year>
Reference-contexts: As a by-product, we obtain a new proof to the result of [PW95a, DKK + 94] that when p i = p &gt; 1 2 for all i, the monarchy is optimal. Both original proofs used a strong combinatorial tool, namely the Erd-os-Ko-Rado theorem <ref> [EKR61] </ref>. Our proof gives a more general result (allowing different failure probabilities), and is completely elementary. 2 When using the weights calculated according to [SB94] and formula (1) for a real system, such as in [AW95], one has to handle the singularity when p i = 0.
Reference: [GB85] <author> H. Garcia-Molina and D. Barbara. </author> <title> How to assign votes in a distributed system. </title> <journal> J. ACM, </journal> <volume> 32(4) </volume> <pages> 841-860, </pages> <year> 1985. </year>
Reference-contexts: A Quorum System is a set system S that has the Intersection property: S " R 6= ? for all S; R 2 S. The sets of the system are called quorums. Many quorum systems which are based on combinatorial constructions appear in the literature, such as <ref> [Mae85, GB85, AE91, CAA90, Kum91, KC91, NW94, PW95b] </ref>. However all the systems with optimal availability turn out to be defined by voting. Definition 2.2 Let v i be a positive vote assigned to element i, and let V = P i v i . <p> T S. (Monotonicity) The collection of minimal quorums is S = S (A) = fS 2 A : S n fug 62 A for all u 2 Sg: 3 Note that such an S, which is the collection of minimal sets of an acceptance set, is precisely a coterie (cf. <ref> [GB85] </ref>). Definition 2.4 A monarchy of element i is an acceptance set consisting of all the sets containing i. The element i is called the king. Definition 2.5 Let A be an acceptance set. <p> For every S U , either S 2 A or S 2 A. 2. If S 2 A then Pr (S) Pr ( S). It is easy to see that condition 1 implies that S (A) is a non-dominated coterie <ref> [GB85] </ref>. 3 The Theory The next proposition is the heart of our proofs.
Reference: [Her84] <author> M. P. Herlihy. </author> <title> Replication Methods for Abstract Data Types. </title> <type> PhD thesis, </type> <institution> Mas-sachusetts Institute of Technology, MIT/LCS/TR-319, </institution> <year> 1984. </year>
Reference-contexts: E-mail: yash@wisdom.weizmann.ac.il. 1 intersection. Set systems with the intersection property are known as quorum systems, and the sets in such a system are called quorums. Quorum systems have been used in the study of distributed control and management problems such as data replication protocols (cf. <ref> [DGS85, Her84, Ami95, Kei94] </ref>), name servers (cf. [MV88]), mutual exclusion (cf. [Ray86]), selective dissemination of information (cf. [YG94]), and distributed access control and signatures (cf. [NW96]). A protocol template based on quorum systems works as follows.
Reference: [KC91] <author> A. Kumar and S. Y. Cheung. </author> <title> A high availability p n hierarchical grid algorithm for replicated data. </title> <journal> Inf. Proc. Letters, </journal> <volume> 40 </volume> <pages> 311-316, </pages> <year> 1991. </year> <month> 8 </month>
Reference-contexts: A Quorum System is a set system S that has the Intersection property: S " R 6= ? for all S; R 2 S. The sets of the system are called quorums. Many quorum systems which are based on combinatorial constructions appear in the literature, such as <ref> [Mae85, GB85, AE91, CAA90, Kum91, KC91, NW94, PW95b] </ref>. However all the systems with optimal availability turn out to be defined by voting. Definition 2.2 Let v i be a positive vote assigned to element i, and let V = P i v i .
Reference: [Kei94] <author> I. Keidar. </author> <title> A highly available paradigm for consistent object replication. </title> <type> Master's thesis, </type> <institution> Institute of Computer Science, The Hebrew University of Jerusalem, Israel, </institution> <year> 1994. </year>
Reference-contexts: E-mail: yash@wisdom.weizmann.ac.il. 1 intersection. Set systems with the intersection property are known as quorum systems, and the sets in such a system are called quorums. Quorum systems have been used in the study of distributed control and management problems such as data replication protocols (cf. <ref> [DGS85, Her84, Ami95, Kei94] </ref>), name servers (cf. [MV88]), mutual exclusion (cf. [Ray86]), selective dissemination of information (cf. [YG94]), and distributed access control and signatures (cf. [NW96]). A protocol template based on quorum systems works as follows.
Reference: [Kum91] <author> A. Kumar. </author> <title> Hierarchical quorum consensus: A new algorithm for managing replicated data. </title> <journal> IEEE Trans. Comput., </journal> <volume> 40(9) </volume> <pages> 996-1004, </pages> <year> 1991. </year>
Reference-contexts: A Quorum System is a set system S that has the Intersection property: S " R 6= ? for all S; R 2 S. The sets of the system are called quorums. Many quorum systems which are based on combinatorial constructions appear in the literature, such as <ref> [Mae85, GB85, AE91, CAA90, Kum91, KC91, NW94, PW95b] </ref>. However all the systems with optimal availability turn out to be defined by voting. Definition 2.2 Let v i be a positive vote assigned to element i, and let V = P i v i .
Reference: [Mae85] <author> M. Maekawa. </author> <title> A p n algorithm for mutual exclusion in decentralized systems. </title> <journal> ACM Trans. Comp. Sys., </journal> <volume> 3(2) </volume> <pages> 145-159, </pages> <year> 1985. </year>
Reference-contexts: A Quorum System is a set system S that has the Intersection property: S " R 6= ? for all S; R 2 S. The sets of the system are called quorums. Many quorum systems which are based on combinatorial constructions appear in the literature, such as <ref> [Mae85, GB85, AE91, CAA90, Kum91, KC91, NW94, PW95b] </ref>. However all the systems with optimal availability turn out to be defined by voting. Definition 2.2 Let v i be a positive vote assigned to element i, and let V = P i v i .
Reference: [MV88] <author> S. J. Mullender and P. M. B. Vitanyi. </author> <title> Distributed match-making. </title> <journal> Algorithmica, </journal> <volume> 3 </volume> <pages> 367-391, </pages> <year> 1988. </year>
Reference-contexts: Set systems with the intersection property are known as quorum systems, and the sets in such a system are called quorums. Quorum systems have been used in the study of distributed control and management problems such as data replication protocols (cf. [DGS85, Her84, Ami95, Kei94]), name servers (cf. <ref> [MV88] </ref>), mutual exclusion (cf. [Ray86]), selective dissemination of information (cf. [YG94]), and distributed access control and signatures (cf. [NW96]). A protocol template based on quorum systems works as follows. In order to perform some action (update the database, say), the user selects a quorum and accesses all its elements.
Reference: [NW94] <author> M. Naor and A. Wool. </author> <title> The load, capacity and availability of quorum systems. </title> <booktitle> In Proc. 35th IEEE Symp. Found. of Comp. Science, </booktitle> <pages> pages 214-225, </pages> <year> 1994. </year>
Reference-contexts: A Quorum System is a set system S that has the Intersection property: S " R 6= ? for all S; R 2 S. The sets of the system are called quorums. Many quorum systems which are based on combinatorial constructions appear in the literature, such as <ref> [Mae85, GB85, AE91, CAA90, Kum91, KC91, NW94, PW95b] </ref>. However all the systems with optimal availability turn out to be defined by voting. Definition 2.2 Let v i be a positive vote assigned to element i, and let V = P i v i .
Reference: [NW96] <author> M. Naor and A. Wool. </author> <title> Access control and signatures via quorum secret sharing. </title> <booktitle> In Proc. 3rd ACM Conf. Comp. and Comm. Security, </booktitle> <address> New Delhi, India, </address> <year> 1996. </year> <note> To appear, see also Technical Report CS95-19, </note> <institution> The Weizmann Institute of Science. </institution>
Reference-contexts: Quorum systems have been used in the study of distributed control and management problems such as data replication protocols (cf. [DGS85, Her84, Ami95, Kei94]), name servers (cf. [MV88]), mutual exclusion (cf. [Ray86]), selective dissemination of information (cf. [YG94]), and distributed access control and signatures (cf. <ref> [NW96] </ref>). A protocol template based on quorum systems works as follows. In order to perform some action (update the database, say), the user selects a quorum and accesses all its elements.
Reference: [PW95a] <author> D. Peleg and A. Wool. </author> <title> The availability of quorum systems. </title> <journal> Information and Computation, </journal> <volume> 123(2) </volume> <pages> 210-223, </pages> <year> 1995. </year>
Reference-contexts: least one member of any quorum it chooses to access. 1.2 Overview It is known that when all of the processors have the same failure probability p then the optimal availability quorum system is either the Majority system if p &lt; 1=2 [BG87], or the Monarchy if p &gt; 1=2 <ref> [PW95a, DKK + 94] </ref>. If the failure probabilities p i are different and all less than 1/2, then the optimal availability quorum system is known to be defined by voting. <p> The only exception is when all the elements have p i 1 2 , in which case we prove that the optimal quorum system is a monarchy with one of the least unreliable processors as the king. As a by-product, we obtain a new proof to the result of <ref> [PW95a, DKK + 94] </ref> that when p i = p &gt; 1 2 for all i, the monarchy is optimal. Both original proofs used a strong combinatorial tool, namely the Erd-os-Ko-Rado theorem [EKR61]. <p> Note that such an element would get w i = 0 according to formula (1), making it a dummy, so it is pointless to include such elements in U 0 . However when p i = 1 2 for all the elements, then a result of <ref> [PW95a] </ref> shows that any non-dominated coterie S will have F p (S) = 1 2 , so in particular any monarchy will have optimal availability. 4 Practical Issues The weight formula (1) is undefined when p i = 0 (giving w i = +1) and when p i = 1 (w
Reference: [PW95b] <author> D. Peleg and A. Wool. Crumbling walls: </author> <title> A class of practical and efficient quorum systems. </title> <booktitle> In Proc. 14th ACM Symp. Princip. of Dist. Comp., </booktitle> <pages> pages 120-129, </pages> <address> Ottawa, Canada, </address> <year> 1995. </year>
Reference-contexts: A Quorum System is a set system S that has the Intersection property: S " R 6= ? for all S; R 2 S. The sets of the system are called quorums. Many quorum systems which are based on combinatorial constructions appear in the literature, such as <ref> [Mae85, GB85, AE91, CAA90, Kum91, KC91, NW94, PW95b] </ref>. However all the systems with optimal availability turn out to be defined by voting. Definition 2.2 Let v i be a positive vote assigned to element i, and let V = P i v i .
Reference: [Ray86] <author> M. Raynal. </author> <title> Algorithms for Mutual Exclusion. </title> <publisher> MIT press, </publisher> <year> 1986. </year>
Reference-contexts: Quorum systems have been used in the study of distributed control and management problems such as data replication protocols (cf. [DGS85, Her84, Ami95, Kei94]), name servers (cf. [MV88]), mutual exclusion (cf. <ref> [Ray86] </ref>), selective dissemination of information (cf. [YG94]), and distributed access control and signatures (cf. [NW96]). A protocol template based on quorum systems works as follows. In order to perform some action (update the database, say), the user selects a quorum and accesses all its elements.
Reference: [SB94] <author> M. Spasojevic and P. Berman. </author> <title> Voting as the optimal static pessimistic scheme for managing replicated data. </title> <journal> IEEE Trans. Par. Dist. Sys., </journal> <volume> 5(1) </volume> <pages> 64-73, </pages> <year> 1994. </year>
Reference-contexts: If the failure probabilities p i are different and all less than 1/2, then the optimal availability quorum system is known to be defined by voting. If 0 &lt; p i &lt; 1 2 for all i then [TK88] and <ref> [SB94] </ref> show that the optimal weights are defined by the formula: w i = log 2 1 p i ! followed by a tie-breaking procedure. An exponential algorithm is suggested in [TK88] to find the optimal tie-breaking, while [SB94] shows that a simple scale-and-truncate rule is near optimal. <p> &lt; p i &lt; 1 2 for all i then [TK88] and <ref> [SB94] </ref> show that the optimal weights are defined by the formula: w i = log 2 1 p i ! followed by a tie-breaking procedure. An exponential algorithm is suggested in [TK88] to find the optimal tie-breaking, while [SB94] shows that a simple scale-and-truncate rule is near optimal. In this paper we complete this line of research by handling the most general case, where some or all of the elements may be unreliable, with p i 1 2 . <p> Both original proofs used a strong combinatorial tool, namely the Erd-os-Ko-Rado theorem [EKR61]. Our proof gives a more general result (allowing different failure probabilities), and is completely elementary. 2 When using the weights calculated according to <ref> [SB94] </ref> and formula (1) for a real system, such as in [AW95], one has to handle the singularity when p i = 0. <p> In our proofs we use the following condition, due to <ref> [SB94] </ref>, characterizing a quorum system with optimal availability. Proposition 2.6 [SB94] An acceptance set A has optimal availability iff the following two conditions hold: 1. For every S U , either S 2 A or S 2 A. 2. If S 2 A then Pr (S) Pr ( S). <p> In our proofs we use the following condition, due to <ref> [SB94] </ref>, characterizing a quorum system with optimal availability. Proposition 2.6 [SB94] An acceptance set A has optimal availability iff the following two conditions hold: 1. For every S U , either S 2 A or S 2 A. 2. If S 2 A then Pr (S) Pr ( S). <p> If U 0 = ? then the only candidates to have optimal availability are all the monarchies, non of which is better than ff`gg. Remarks: * Inside the set U 0 we can apply the results of <ref> [TK88, SB94] </ref> so formula (1) gives the optimal weights. * In Theorem 3.3 we treat elements with p i = 1 2 as unreliable. <p> Therefore its weight calculated by formula (1) using ^p will obey 0 w i &lt; log 2 1 " Since the probabilities ^p i are inherently imprecise, we lose no accuracy if we break ties using the method of <ref> [SB94] </ref>: pick a suitably large constant M , calculate v i = bM w i c, and if P is even 1 then set v 1 v 1 + 1. <p> Some experimentation indicated that choosing larger values for M would not change the resultant quorum system that the computed weights define. Finally, we summarize our results in the algorithm of Figure 1. Based on Theorem 3.3, the discussion above and the results of <ref> [TK88, SB94] </ref>, this algorithm calculates integer weights v i which define a quorum system with near optimal availability, for all possible values of p i .
Reference: [TK88] <author> Z. Tong and R. Y. Kain. </author> <title> Vote assignments in weighted voting mechanisms. </title> <booktitle> In Proc. 7th IEEE Symp. on Reliable Dist. Sys., </booktitle> <pages> pages 138-143, </pages> <year> 1988. </year>
Reference-contexts: If the failure probabilities p i are different and all less than 1/2, then the optimal availability quorum system is known to be defined by voting. If 0 &lt; p i &lt; 1 2 for all i then <ref> [TK88] </ref> and [SB94] show that the optimal weights are defined by the formula: w i = log 2 1 p i ! followed by a tie-breaking procedure. An exponential algorithm is suggested in [TK88] to find the optimal tie-breaking, while [SB94] shows that a simple scale-and-truncate rule is near optimal. <p> If 0 &lt; p i &lt; 1 2 for all i then <ref> [TK88] </ref> and [SB94] show that the optimal weights are defined by the formula: w i = log 2 1 p i ! followed by a tie-breaking procedure. An exponential algorithm is suggested in [TK88] to find the optimal tie-breaking, while [SB94] shows that a simple scale-and-truncate rule is near optimal. In this paper we complete this line of research by handling the most general case, where some or all of the elements may be unreliable, with p i 1 2 . <p> If U 0 = ? then the only candidates to have optimal availability are all the monarchies, non of which is better than ff`gg. Remarks: * Inside the set U 0 we can apply the results of <ref> [TK88, SB94] </ref> so formula (1) gives the optimal weights. * In Theorem 3.3 we treat elements with p i = 1 2 as unreliable. <p> Some experimentation indicated that choosing larger values for M would not change the resultant quorum system that the computed weights define. Finally, we summarize our results in the algorithm of Figure 1. Based on Theorem 3.3, the discussion above and the results of <ref> [TK88, SB94] </ref>, this algorithm calculates integer weights v i which define a quorum system with near optimal availability, for all possible values of p i .
Reference: [YG94] <author> T. W. Yan and H. Garcia-Molina. </author> <title> Distributed selective dissemination of information. </title> <booktitle> In Proc. 3rd Inter. Conf. Par. Dist. Info. Sys., </booktitle> <pages> pages 89-98, </pages> <year> 1994. </year> <month> 9 </month>
Reference-contexts: Quorum systems have been used in the study of distributed control and management problems such as data replication protocols (cf. [DGS85, Her84, Ami95, Kei94]), name servers (cf. [MV88]), mutual exclusion (cf. [Ray86]), selective dissemination of information (cf. <ref> [YG94] </ref>), and distributed access control and signatures (cf. [NW96]). A protocol template based on quorum systems works as follows. In order to perform some action (update the database, say), the user selects a quorum and accesses all its elements.
References-found: 22

