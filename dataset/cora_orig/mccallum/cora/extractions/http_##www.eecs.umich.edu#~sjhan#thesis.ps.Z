URL: http://www.eecs.umich.edu/~sjhan/thesis.ps.Z
Refering-URL: http://www.eecs.umich.edu/~sjhan/
Root-URL: http://www.eecs.umich.edu
Title: ABSTRACT FAST LOW-COST FAILURE RECOVERY FOR REAL-TIME COMMUNICATION IN MULTI-HOP NETWORKS  
Author: by Seungjae Han Chair: Kang G. Shin 
Abstract: Best-effort communication is inadequate for QoS-sensitive applications (like multimedia), since such applications require bounded message delay and predictable throughput. Instead, real-time communication which can provide QoS guarantees by resource reservation has been actively researched. As the application domain of real-time communication expands to include business- or mission-critical applications, network dependability becomes essential. This dissertation addresses how to make real-time communication dependable. We have developed an integrated scheme for restoring real-time connections from network component failures. As applications with different dependability requirements share the same network, the dependability level and its associated cost should be flexibly chosen depending on the criticality of applications. Our scheme is based on five key design principles: per-connection dependability guarantee, fast failure recovery, small fault-tolerance overhead, robust failure handling, and high interoperability and scalability. To quickly restore failed connections, cold-standby backup channels are set up in advance along with each primary channel. Upon failure of a primary channel, one of its backups is promoted to replace the primary channel. To minimize the resource overhead in maintaining backup channels, resources for backups are shared judiciously so that connection dependability may not be compromised. By choosing the degree of resource sharing and the number of backups, the network can control the dependability of a connection in accordance with the application's request. Our scheme covers all aspects of connection failure recovery such as backup routing, failure detection, channel switching, and resource reconfiguration after failure recovery. Par 
Abstract-found: 1
Intro-found: 1
Reference: <institution> 127 BIBLIOGRAPHY </institution>
Reference: [1] <institution> Fibre Channel Physical and Signalling Interface (FC-PH), American National Standards Institute, </institution> <note> rev. 3.0 edition, June 1992. Working draft. </note>
Reference: [2] <author> Y. Amir, P. Melliar-Smith, D. Agarwal, and P. Ciarfella, </author> <title> "Fast message ordering and memebership using a logical token-passing ring," </title> <booktitle> in Proc. Int. Conf. on Distributed Computer Systems, </booktitle> <pages> pp. 551-560, </pages> <year> 1993. </year>
Reference-contexts: This paradigm capitalizes on the simplification of the underlying communication structure and protocols, sacrificing scalability, flexibility and reliability to some extent. Some research results with regard to dependable real-time communication in broadcast networks can be found in <ref> [21, 2, 62, 15] </ref>. A more general approach toward the open-system architecture is to use point-to-point packet-switched networks with regular or arbitrary topologies. However, most work on this approach, such as Delta-4 [78], ISIS [13], and Consul [71], has considered only fault-tolerance issues without taking real-time constraints into account.
Reference: [3] <author> J. Anderson, B. Doshi, S. Dravida, and P. Harshavadhana, </author> <title> "Fast restoration of ATM networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 12, no. 1, </volume> <pages> pp. 128-138, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: A drawback of the local-rerouting approach is that the resource usage becomes inefficient after failure recovery, because channel path-lengths are usually extended by local detouring. Thus, its operation is the simplest among three rerouting strategies, but it suffers the lowest resource efficiency. According to <ref> [3] </ref>, end-to-end rerouting is the best with regard to resource efficiency, and the local-to-end rerouting is the second, in mesh networks. The simulation with real telephone network topologies also reports similar trends [102]. The impact of topological characteristics on the performance of rerouting strategies is discussed in [73]. <p> Some connections may need to attempt several recovery paths before they succeed. The pre-computed backup-path approach has been studied mainly in the context of ATM networks. Some of recent efforts on this approach can be found in <ref> [32, 58, 3, 72, 102, 48] </ref>. Essentially, they derive optimal routing of channels (i.e., VPs) to minimize the spare-resource reservation while guaranteeing successful recovery under a deterministic failure model. <p> For example, our behavior-based failure detection schemes are independent of the underlying physical media or protocols, in contrast to the special failure detection techniques capitalizing on physical layer characteristics as <ref> [3, 89] </ref>. Our control-message transmission mechanism is also applicable without relying on special mechanisms provided by a particular network as in [30]. 1.4 The Proposed Approach This section outlines our approach.
Reference: [4] <author> C. M. Aras, J. F. Kurose, D. S. Reeves, and H. Schulzrinne, </author> <title> "Real-time communication in packet-switched networks," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 82, no. 1, </volume> <pages> pp. 122-139, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: In parallel with the growing demands for real-time communication services, recent years have seen considerable research efforts in developing various performance QoS-guaranteed (or real-time communication) service paradigms. Several survey papers <ref> [4, 107, 28, 97] </ref> discuss many of real-time communication schemes from various perspectives. Here, we only briefly discuss the basic idea behind the real-time communication schemes for multi-hop networks (i.e., point-to-point networks). Most (if not all) real-time communication schemes share three common properties: QoS-contracted, connection-oriented, and reservation-based. <p> This type of backup multiplexing is possible only when resource reservation is completely interchangeable among channels. However, such a condition does not hold for all real-time channel schemes, but in general it is valid only for `rate-based' schemes, not for `scheduler-based' schemes (we borrowed this classification from <ref> [4] </ref>). In the rate-based schemes [74, 110], QoS has a static relation with the traffic characteristics. For example, a higher message rate (hence, higher bandwidth) results in a smaller message delay.
Reference: [5] <author> J. Arlat, Y. Crouzet, and J.-C. Laprie, </author> <title> "Fault injection for dependability validation of fault-tolerant computing systems.," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <pages> pp. 348-355, </pages> <year> 1989. </year>
Reference-contexts: The basic design principles are first explained, and the implementation issues to support the principles are then discussed. 3.2.1 Fault-Injection in Distributed Real-Time Systems Fault injection has long been viewed as a useful means of testing/evaluating fault-tolerant systems [49]. 2 Numerous hardware-implemented fault injectors (HFIs) <ref> [5, 38, 67] </ref> 2 Although numerous approaches have been proposed for dependability evaluation, the complexity of distributed real-time systems, due mainly to the intercommunication among nodes, makes most of the techniques intractable except for fault injection into actual prototype systems. 57 have been developed and used for various experiments. <p> how much sending 67 FRAG DD HNET API Real-time message Heartbeat (option 2) Heartbeat (option 1) Sender Message Receiver Message node-heartbeats as real-time messages can enhance the detection coverage of the neighbor detection scheme. 3.3.3 Experiment Specification In this section, we formulate the fault-injection experiment using the FARM specification model <ref> [5] </ref>. There are four major attributes of a fault-injection experiment: a set of faults F, a set of activations A, a set of readouts R, and a set of derived measures M.
Reference: [6] <author> A. Avizienis and G. Gilley, </author> <title> "The STAR computer: An investigation of theory and practice of fault-tolerant computer design," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. 20, no. 11, </volume> <pages> pp. 1312-1321, </pages> <month> November </month> <year> 1971. </year>
Reference-contexts: The traditional tightly-coupled multi-computer approach such as STAR <ref> [6] </ref>, FTMP [47], CM fl [88], SIFT [33], MAFT [60], FTP [64], and AIPS [65] has been dominant in such application areas.
Reference: [7] <author> J. Baker, </author> <title> "A distributed link restoration algorithm with robust preplanning," </title> <booktitle> in Proc. IEEE GLOBECOM, </booktitle> <pages> pp. 306-311, </pages> <year> 1991. </year>
Reference-contexts: The local-rerouting strategy, also called a span-restoration method, has usually been 9 Source node Destination node (a) Local rerouting Source node Destination node (b) End-to-end rerouting Source node Destination node (c) Local-to-end rerouting used in STM (Synchronous Transfer Mode) networks. In most research on this strategy <ref> [36, 104, 81, 7, 96, 46] </ref>, the `maximum flow' model is used to find the (semi-) optimal placement of spare-resources under a deterministic failure hypothesis | typically, a single-link failure model.
Reference: [8] <author> A. Banerjea, </author> <title> "Simulation study of the capacity effects of dispersity routing for fault tolerant realtime channels," </title> <booktitle> in Proc. ACM SIGCOMM, </booktitle> <pages> pp. 194-205, </pages> <year> 1996. </year>
Reference-contexts: In addition, since each backup channel is equipped with dedicated spare resources, simultaneous failure recovery attempts do not cause conflicts. 5 Thus, the failure-recovery delay of our approach is much smaller than that of the reactive method, and hence, `fast recovery' is possible. In <ref> [8] </ref>, a framework is presented to classify fault-tolerant real-time communication schemes using three factors: dispersity, redundancy (cold or hot), and disjointness. This framework is general enough to characterize most schemes including our approach, but cannot capture details to accurately address the pros and cons of each scheme. <p> This framework is general enough to characterize most schemes including our approach, but cannot capture details to accurately address the pros and cons of each scheme. A more tangible contribution of <ref> [8] </ref> is the formulation of a forward error correction approach based on dispersity routing. The innovative aspect of this approach lies in combining error-coding techniques 5 This is not exactly true when our resource-sharing technique is used. This issue will be detailed later. 8 with multiple-copy transmissions.
Reference: [9] <author> A. Banerjea, D. Ferrari, B. Mah, M. Moran, D. Verma, and H. Zhang, </author> <title> "The Tenet real-time protocol suite: Design, implementation, and experiences," </title> <journal> IEEE/ACM Trans Networking, </journal> <volume> vol. 4, no. 1, </volume> <pages> pp. 1-10, </pages> <year> 1996. </year>
Reference-contexts: The simplest way of recovering a real-time channel from a component failure is to establish a new real-time channel which does not include the failed component. This reactive method is studied in [10]. In the context of the Tenet approach <ref> [9] </ref>, this scheme relies on the broadcast of all component failures to the entire network, so that all hosts can maintain a consistent view on the current network topology. <p> An application specifies its QoS requirement as a value, then the network either accepts or rejects the request <ref> [9] </ref>. In some schemes, the network determines currently possible QoS and notifies it to the application. Under the single-value QoS model, a QoS value is not changed in the connection's life-time once it is negotiated at connection establishment.
Reference: [10] <author> A. Banerjea, C. Parris, and D. Ferrari, </author> <title> "Recovering guaranteed performance service connections from single and multiple faults," </title> <type> Technical Report TR-93-066, </type> <institution> UC Berke-ley, </institution> <year> 1993. </year>
Reference-contexts: The simplest way of recovering a real-time channel from a component failure is to establish a new real-time channel which does not include the failed component. This reactive method is studied in <ref> [10] </ref>. In the context of the Tenet approach [9], this scheme relies on the broadcast of all component failures to the entire network, so that all hosts can maintain a consistent view on the current network topology.
Reference: [11] <author> P. A. Barrett, A. M. Hilborne, P. Verissimo, L. Rodrigues, P. G. Bond, D. T. Seaton, and N. A. Speirs, </author> <title> "The Delta-4 extra performance architecture (XPA)," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <pages> pp. 481-488, </pages> <year> 1990. </year>
Reference-contexts: Distributed systems are also suited for those applications which require physically dispersed environments. A successful paradigm in this approach is the broadcast-network-based architecture, some examples of which include MARS [61], Delta-4 XPA <ref> [11] </ref>, Springnet [90],Cyclone [66], and AAS [22]. This paradigm capitalizes on the simplification of the underlying communication structure and protocols, sacrificing scalability, flexibility and reliability to some extent. Some research results with regard to dependable real-time communication in broadcast networks can be found in [21, 2, 62, 15].
Reference: [12] <author> A. Bestavro and G. Kim, </author> <title> "TCP Boston: A fragmentation-tolerant TCP protocol for ATM networks," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <year> 1997. </year> <month> 128 </month>
Reference-contexts: A similar idea has been employed to reduce the frequency and overhead of retransmission for loss-free message delivery, in which the FEC technique is combined with the retransmission technique <ref> [12] </ref>. 1.3.3 Telephone Networks In old telephone networks, two telephones were connected by a true electric circuit through electro-mechanical or pure electric exchanges. Even after the introduction of digital transmission hierarchies like the SDH (Synchronous Digital Hierarchy) / SONET (Synchronous Optical Network) transmission standard, the 64 kbps circuit-switching paradigm continued.
Reference: [13] <author> K. P. Birman, </author> <title> "Replication and fault-tolerance in the ISIS system," </title> <booktitle> in Proc. ACM Symp. on Operating Systems Principles, </booktitle> <address> Orcas Island WA (USA), </address> <month> December </month> <year> 1985. </year>
Reference-contexts: A more general approach toward the open-system architecture is to use point-to-point packet-switched networks with regular or arbitrary topologies. However, most work on this approach, such as Delta-4 [78], ISIS <ref> [13] </ref>, and Consul [71], has considered only fault-tolerance issues without taking real-time constraints into account. One of the hardest problems in the construction of a real-time system in a point-to-point network is timely and reliable message delivery.
Reference: [14] <author> S. Butner and R. Iyer, </author> <title> "A statistical study of reliability and system load at SLAC," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <pages> pp. 207-209, </pages> <year> 1980. </year>
Reference-contexts: Second, the underlying workload (i.e., system software and application program) was different. Computationally-intensive workloads (e.g., sorting, searching, matrix multiplication, etc.) were executed in the experiments of [80]. The dependency of fault-tolerance measures on workload has been reported by several researchers, e.g., <ref> [14, 17] </ref>. In addition, our target system, like most other real-time systems, is not equipped with memory-protection capability. The experimental result in [67] indicates that memory protection can enhance detection coverage up to 15%. Third, the two used different fault-detection schemes.
Reference: [15] <author> B. Chen, S. Kamat, and W. Zhao, </author> <title> "Fault-tolerant real-time communication in FDDI-based networks," </title> <booktitle> in Proc. IEEE RTSS, </booktitle> <pages> pp. 141-150, </pages> <year> 1995. </year>
Reference-contexts: This paradigm capitalizes on the simplification of the underlying communication structure and protocols, sacrificing scalability, flexibility and reliability to some extent. Some research results with regard to dependable real-time communication in broadcast networks can be found in <ref> [21, 2, 62, 15] </ref>. A more general approach toward the open-system architecture is to use point-to-point packet-switched networks with regular or arbitrary topologies. However, most work on this approach, such as Delta-4 [78], ISIS [13], and Consul [71], has considered only fault-tolerance issues without taking real-time constraints into account.
Reference: [16] <author> R. Chillarege and N. S. Bowen, </author> <title> "Understanding large system failures | a fault injection experiment," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <pages> pp. 356-363, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: However, as the complexity of contemporary computer increases as a result of using highly-integrated VLSI chips, it is becoming more difficult, or nearly impossible, to evaluate dependability with HFIs alone. On the other hand, software-implemented fault injectors (SFIs) <ref> [83, 16, 53, 27, 57] </ref> have been proposed as less expensive and more controllable alternatives. Although SFI techniques such as overwriting memory or register contents are becoming popular, they still face many difficulties. Some requirements for fault injection in distributed real-time systems are enumerated below. 1.
Reference: [17] <author> R. Chillarege and R. Iyer, </author> <title> "Measurement-based analysis of error latency," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. 36, no. 5, </volume> <pages> pp. 529-537, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: Second, the underlying workload (i.e., system software and application program) was different. Computationally-intensive workloads (e.g., sorting, searching, matrix multiplication, etc.) were executed in the experiments of [80]. The dependency of fault-tolerance measures on workload has been reported by several researchers, e.g., <ref> [14, 17] </ref>. In addition, our target system, like most other real-time systems, is not equipped with memory-protection capability. The experimental result in [67] indicates that memory protection can enhance detection coverage up to 15%. Third, the two used different fault-detection schemes.
Reference: [18] <author> S. Chong, S. Q. Li, and J. Ghosh, </author> <title> "Predictive dynamic bandwidth allocation for efficient transport of real-time VBR video over ATM," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 13, no. 1, </volume> <pages> pp. 12-23, </pages> <month> January </month> <year> 1995. </year>
Reference-contexts: It is because unlike short bursts, long bursts lasting for tens of seconds or even minutes. Such long bursts are handled better 6 by using QoS re-negotiation at run-time <ref> [18, 109, 76, 35] </ref>. For instance, it is shown in [35] that a piecewise CBR stream with QoS re-negotiation requires 3 - 4 times less resources than the corresponding fixed-rate CBR stream.
Reference: [19] <author> D. Clark, S. Shenker, and L. Zhang, </author> <title> "Supporting real-time applications in an integrated services packet neworkl architecture and mechanism," </title> <booktitle> in Proc. ACM SIG-COMM, </booktitle> <year> 1992. </year>
Reference-contexts: In-between, there are VBR 2 deterministically 1 Constant Bit Rate 2 Variable Bit Rate 2 guaranteed services [85] (also called hard real-time communication) and VBR statistically--guaranteed services (also called soft real-time communication). Well-known hard real-time communication schemes include <ref> [29, 34, 19, 25, 74, 106] </ref>, and examples of soft real-time communication schemes are [37, 63, 19, 108, 51]. To cope with large time-scale burstiness, renegotiation-based schemes have also been proposed [76, 35, 109]. <p> Well-known hard real-time communication schemes include [29, 34, 19, 25, 74, 106], and examples of soft real-time communication schemes are <ref> [37, 63, 19, 108, 51] </ref>. To cope with large time-scale burstiness, renegotiation-based schemes have also been proposed [76, 35, 109].
Reference: [20] <author> D. Comer, </author> <title> Internetworking with TCP/IP, </title> <publisher> Prentice-Hall, </publisher> <year> 1995. </year>
Reference-contexts: For instance, in Internet, current operational status is continuously exchanged between neighbor networks (i.e., by Exterior Gateway Protocols) or internal gateways (i.e., by Interior Gateway Protocols) for immediate isolation of failures <ref> [20, 91] </ref>. Since packets can traverse any routes, intermediate gateways between the source and destination of a connection can easily reroute its packets to a different path when they detect failures on the current path.
Reference: [21] <author> F. Cristian, </author> <title> "Synchronous atomic broadcast for redundant broadcast channels," </title> <journal> The Journal of Real-time Systems, </journal> <volume> vol. 2, no. 3, </volume> <pages> pp. 195-212, </pages> <year> 1990. </year>
Reference-contexts: This paradigm capitalizes on the simplification of the underlying communication structure and protocols, sacrificing scalability, flexibility and reliability to some extent. Some research results with regard to dependable real-time communication in broadcast networks can be found in <ref> [21, 2, 62, 15] </ref>. A more general approach toward the open-system architecture is to use point-to-point packet-switched networks with regular or arbitrary topologies. However, most work on this approach, such as Delta-4 [78], ISIS [13], and Consul [71], has considered only fault-tolerance issues without taking real-time constraints into account.
Reference: [22] <author> F. Cristian, B. Dancy, and J. Dehn, </author> <title> "Fault-tolerance in the advanced automation system," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <pages> pp. 6-17, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: Distributed systems are also suited for those applications which require physically dispersed environments. A successful paradigm in this approach is the broadcast-network-based architecture, some examples of which include MARS [61], Delta-4 XPA [11], Springnet [90],Cyclone [66], and AAS <ref> [22] </ref>. This paradigm capitalizes on the simplification of the underlying communication structure and protocols, sacrificing scalability, flexibility and reliability to some extent. Some research results with regard to dependable real-time communication in broadcast networks can be found in [21, 2, 62, 15].
Reference: [23] <author> S. Deering and R. Hinden, </author> <title> "Internet protocol, version 6 (IPv6) specification," </title> <type> Technical Report Internet RFC 1883, </type> <month> December </month> <year> 1995. </year>
Reference-contexts: Despite the abundance of QoS communication schemes, very few implementations are available in the current Internet, mainly because resource reservation is not currently supported. IPv6 <ref> [23] </ref> and RSVP [111] are expected to alleviate this limitation.
Reference: [24] <author> L. Delgrossi, C. Halstrick, D. Hehmann, R. Herrtwich, O. Krone, J. Sandvoss, and C. Vogt, </author> <title> "Media scaling for audiovisual communication with Heidelberg transport system," </title> <booktitle> in Proc. ACM Multimedia, </booktitle> <pages> pp. 99-104, </pages> <year> 1993. </year>
Reference-contexts: While all of the QoS-guaranteed schemes rely on some form of resource reservation and admission control, each differs in QoS parameters and/or the firmness of QoS guarantees. (Network utilization can be enhanced by relaxing the firmness of QoS guarantees.) There also exist feedback-based schemes <ref> [52, 84, 68, 24] </ref> which attempt to provide QoS support without resource reservation. Despite the abundance of QoS communication schemes, very few implementations are available in the current Internet, mainly because resource reservation is not currently supported. IPv6 [23] and RSVP [111] are expected to alleviate this limitation.
Reference: [25] <author> A. Demers, S. Keshav, and S. Shenker, </author> <title> "Analysis and simulation of a fair queueing algorthm," </title> <booktitle> Proc. ACM SIGCOMM, </booktitle> <pages> pp. 3-12, </pages> <year> 1989. </year>
Reference-contexts: In-between, there are VBR 2 deterministically 1 Constant Bit Rate 2 Variable Bit Rate 2 guaranteed services [85] (also called hard real-time communication) and VBR statistically--guaranteed services (also called soft real-time communication). Well-known hard real-time communication schemes include <ref> [29, 34, 19, 25, 74, 106] </ref>, and examples of soft real-time communication schemes are [37, 63, 19, 108, 51]. To cope with large time-scale burstiness, renegotiation-based schemes have also been proposed [76, 35, 109].
Reference: [26] <author> B. Dempsey, </author> <title> Retransmission-Based Error Control for Continuous Media Traffic in Packet-Switched Networks, </title> <type> PhD thesis, </type> <institution> University of Virginia, </institution> <year> 1994. </year>
Reference-contexts: Persistent failures include breakdown or crash of network components. Transport protocols like TCP can handle transient loss of packets by acknowledgment and retransmission, and the connection-less IP protocol deals with persistent failures by routing packets around the faulty network components. However, with some exceptions <ref> [26] </ref>, retransmission is unlikely to be useful for real-time communication, because there is usually not enough time to detect and retransmit a lost real-time message before its deadline expires. Instead, for real-time communication, forward-error-correction (FEC) techniques should be used if no data loss is acceptable.
Reference: [27] <author> K. Echtle and M. Leu, </author> <title> "The EFA fault injector for fault-tolerant distributed system testing," </title> <booktitle> in Workshop on Fault-Tolerant Parallel and Distributed Systems, </booktitle> <pages> pp. 28-35. </pages> <publisher> IEEE, </publisher> <year> 1992. </year>
Reference-contexts: However, as the complexity of contemporary computer increases as a result of using highly-integrated VLSI chips, it is becoming more difficult, or nearly impossible, to evaluate dependability with HFIs alone. On the other hand, software-implemented fault injectors (SFIs) <ref> [83, 16, 53, 27, 57] </ref> have been proposed as less expensive and more controllable alternatives. Although SFI techniques such as overwriting memory or register contents are becoming popular, they still face many difficulties. Some requirements for fault injection in distributed real-time systems are enumerated below. 1.
Reference: [28] <author> D. Ferrari, </author> <title> "Multimedia network protocols: where are we?," </title> <journal> Multimedia Systems Journal, </journal> <volume> vol. 4, </volume> <pages> pp. 299-304, </pages> <year> 1996. </year>
Reference-contexts: In parallel with the growing demands for real-time communication services, recent years have seen considerable research efforts in developing various performance QoS-guaranteed (or real-time communication) service paradigms. Several survey papers <ref> [4, 107, 28, 97] </ref> discuss many of real-time communication schemes from various perspectives. Here, we only briefly discuss the basic idea behind the real-time communication schemes for multi-hop networks (i.e., point-to-point networks). Most (if not all) real-time communication schemes share three common properties: QoS-contracted, connection-oriented, and reservation-based.
Reference: [29] <author> D. Ferrari and D. C. Verma, </author> <title> "A scheme for real-time channel establishment in wide-area networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 8, no. 3, </volume> <pages> pp. 368-379, </pages> <month> April </month> <year> 1990. </year> <month> 129 </month>
Reference-contexts: In-between, there are VBR 2 deterministically 1 Constant Bit Rate 2 Variable Bit Rate 2 guaranteed services [85] (also called hard real-time communication) and VBR statistically--guaranteed services (also called soft real-time communication). Well-known hard real-time communication schemes include <ref> [29, 34, 19, 25, 74, 106] </ref>, and examples of soft real-time communication schemes are [37, 63, 19, 108, 51]. To cope with large time-scale burstiness, renegotiation-based schemes have also been proposed [76, 35, 109]. <p> For example, a higher message rate (hence, higher bandwidth) results in a smaller message delay. In these schemes, the admission test at a link simply examines whether the demanded resources exceed the available resources, since the amount of resources determines the QoS level. By contrast, in the scheduler-based schemes <ref> [55, 29] </ref>, the QoS requirement (e.g., delay) of a channel can be specified independently of its traffic characteristics. In such schemes, the admission test checks for the schedulability of a channel by deriving a feasible priority assignment to meet its QoS requirement while considering the worst-case contention with existing channels.
Reference: [30] <author> H. Fujii and N. Yoshikai, </author> <title> "Restoration message transfer mechanism and restration characteristics of double-search self-healing ATM networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 12, no. 1, </volume> <pages> pp. 149-158, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: Our control-message transmission mechanism is also applicable without relying on special mechanisms provided by a particular network as in <ref> [30] </ref>. 1.4 The Proposed Approach This section outlines our approach. We first describe the design goals and then introduce our solution to meet the goals. 1.4.1 Design Goals To design a fault-tolerant service, one must first define the model of failures to be tolerated.
Reference: [31] <author> M. W. Garrett, </author> <title> Contributions Toward Real-Time Services on Packet Switched Networks, </title> <type> PhD thesis, </type> <institution> Columbia University, </institution> <year> 1993. </year>
Reference-contexts: In the other extreme case, spare resource reservation may not handle all QoS re-negotiation requests and a high RBP will result. In the simulation experiment, we used a one-hour MPEG trace extracted from the Star Wars movie <ref> [31] </ref>. The movie stream was decomposed into multiple segments with different data rates, so that QoS re-negotiation may occur at the boundary of each segment.
Reference: [32] <author> A. Gersht and S. Kheradpir, </author> <title> "Real-time bandwidth allocation and path restorations in sonet-based self-healing mesh networks," </title> <booktitle> in Proc. IEEE ICC, </booktitle> <pages> pp. 250-255, </pages> <year> 1993. </year>
Reference-contexts: Some connections may need to attempt several recovery paths before they succeed. The pre-computed backup-path approach has been studied mainly in the context of ATM networks. Some of recent efforts on this approach can be found in <ref> [32, 58, 3, 72, 102, 48] </ref>. Essentially, they derive optimal routing of channels (i.e., VPs) to minimize the spare-resource reservation while guaranteeing successful recovery under a deterministic failure model.
Reference: [33] <author> J. Goldberg, M. W. Green, W. H. Kautz, K. N. Levitt, P. M. Melliar-Smith, R. L. Schwartz, and C. B. Weinstock, </author> <title> "Development and analysis of the software implemented fault-tolerance (SIFT) computer," </title> <type> Contractor Report 172146, </type> <institution> NASA Langley Research Center, </institution> <month> February </month> <year> 1984. </year>
Reference-contexts: The traditional tightly-coupled multi-computer approach such as STAR [6], FTMP [47], CM fl [88], SIFT <ref> [33] </ref>, MAFT [60], FTP [64], and AIPS [65] has been dominant in such application areas. To meet the stringent reliability requirement of critical control applications, a fully-connected communication architecture with an excessive 5 Source node Destination nodeReal-time channel Extra resources capacity has usually been employed.
Reference: [34] <author> S. J. Golestani, </author> <title> "A stop-and-go queueing framework for congestion management," </title> <booktitle> in Proc. ACM SIGCOMM, </booktitle> <pages> pp. 8-18, </pages> <year> 1990. </year>
Reference-contexts: In-between, there are VBR 2 deterministically 1 Constant Bit Rate 2 Variable Bit Rate 2 guaranteed services [85] (also called hard real-time communication) and VBR statistically--guaranteed services (also called soft real-time communication). Well-known hard real-time communication schemes include <ref> [29, 34, 19, 25, 74, 106] </ref>, and examples of soft real-time communication schemes are [37, 63, 19, 108, 51]. To cope with large time-scale burstiness, renegotiation-based schemes have also been proposed [76, 35, 109].
Reference: [35] <author> M. Grossglauser, S. Keshav, and D. Tse, "RCBR: </author> <title> A simple and efficient service for multiple time-scale traffic," </title> <booktitle> in Proc. ACM SIGCOMM, </booktitle> <pages> pp. 219-230, </pages> <year> 1995. </year>
Reference-contexts: Well-known hard real-time communication schemes include [29, 34, 19, 25, 74, 106], and examples of soft real-time communication schemes are [37, 63, 19, 108, 51]. To cope with large time-scale burstiness, renegotiation-based schemes have also been proposed <ref> [76, 35, 109] </ref>. <p> It is because unlike short bursts, long bursts lasting for tens of seconds or even minutes. Such long bursts are handled better 6 by using QoS re-negotiation at run-time <ref> [18, 109, 76, 35] </ref>. For instance, it is shown in [35] that a piecewise CBR stream with QoS re-negotiation requires 3 - 4 times less resources than the corresponding fixed-rate CBR stream. <p> It is because unlike short bursts, long bursts lasting for tens of seconds or even minutes. Such long bursts are handled better 6 by using QoS re-negotiation at run-time [18, 109, 76, 35]. For instance, it is shown in <ref> [35] </ref> that a piecewise CBR stream with QoS re-negotiation requires 3 - 4 times less resources than the corresponding fixed-rate CBR stream. While the Qos re-negotiation approach can achieve high resource efficiency, a QoS renegotiation attempt for higher QoS may fail. <p> Only for playback applications with all changes of QoS requirements known in advance, an optimal admission control will be possible. For interactive applications, only statistical estimation based on a traffic-generation history has been used in <ref> [109, 35] </ref>. To avoid the uncertainty and complexity of such statistical estimation, we exploit the spare resources. Thus, RBP is maintained by relying on spare resource reservation instead of a separate admission control. <p> Both the segmentation schedule (or time of re-negotiation) and the min-QoS associated with each segment are heuristically determined at run-time by monitoring the input source. A variant of the heuristic presented in <ref> [35] </ref> was used for this purpose.
Reference: [36] <author> W. Grover, </author> <title> "The selfhealing network: A fast distributed restoration technique for networks using digital crossconnect machines," </title> <booktitle> in Proc. IEEE GLOBECOM, </booktitle> <pages> pp. 1090-1095, </pages> <year> 1987. </year>
Reference-contexts: The local-rerouting strategy, also called a span-restoration method, has usually been 9 Source node Destination node (a) Local rerouting Source node Destination node (b) End-to-end rerouting Source node Destination node (c) Local-to-end rerouting used in STM (Synchronous Transfer Mode) networks. In most research on this strategy <ref> [36, 104, 81, 7, 96, 46] </ref>, the `maximum flow' model is used to find the (semi-) optimal placement of spare-resources under a deterministic failure hypothesis | typically, a single-link failure model.
Reference: [37] <author> R. Guerin, H. Ahmadi, and M. Naghshineh, </author> <title> "Equivalent capacity and its application to bandwidth allocation in high-speed networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 9, no. 7, </volume> <pages> pp. 968-981, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: Well-known hard real-time communication schemes include [29, 34, 19, 25, 74, 106], and examples of soft real-time communication schemes are <ref> [37, 63, 19, 108, 51] </ref>. To cope with large time-scale burstiness, renegotiation-based schemes have also been proposed [76, 35, 109].
Reference: [38] <author> U. Gunneflo, J. Karlsson, and J. Torin, </author> <title> "Evaluation of error detection schemes using fault injection by heavy-ion radiation," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <pages> pp. 340-347, </pages> <year> 1989. </year>
Reference-contexts: The basic design principles are first explained, and the implementation issues to support the principles are then discussed. 3.2.1 Fault-Injection in Distributed Real-Time Systems Fault injection has long been viewed as a useful means of testing/evaluating fault-tolerant systems [49]. 2 Numerous hardware-implemented fault injectors (HFIs) <ref> [5, 38, 67] </ref> 2 Although numerous approaches have been proposed for dependability evaluation, the complexity of distributed real-time systems, due mainly to the intercommunication among nodes, makes most of the techniques intractable except for fault injection into actual prototype systems. 57 have been developed and used for various experiments.
Reference: [39] <author> S. Han and K. G. Shin, </author> <title> "A non-intrusive distributed monitoring support in fault injection experiments," </title> <booktitle> in IEEE International Workshop on Evaluation Techniques for Dependable Systems, </booktitle> <month> October </month> <year> 1995. </year>
Reference-contexts: The data collected in HMON memory is dumped to the disk during experiments or after experiments. (Details on the HMON implementation can be found in <ref> [39] </ref>.) For distributed data collection, a dedicated simple network, called `HMON network,' is used to connect HMON boards. Each HMON has one output port and 7 input ports to communicate with other HMONs, and two HMONs are linked using a twist-pair cable.
Reference: [40] <author> S. Han and K. G. Shin, </author> <title> "Efficient spare-resource allocation for fast restoration of real-time channels from network component failures," </title> <booktitle> in Proc. IEEE RTSS, </booktitle> <pages> pp. 99-108, </pages> <year> 1997. </year>
Reference-contexts: The use of spare resources to assure successful renegotiation attempts is presented. Chapter 6 concludes this thesis by summarizing its contributions and suggesting possible avenues of future research. Earlier work on this thesis has been published in <ref> [41, 42, 40, 45, 43] </ref>. CHAPTER 2 DEPENDABLE CONNECTION ESTABLISHMENT A dependable real-time (D-) connection requires to set up a primary and one or more backup real-time channels.
Reference: [41] <author> S. Han and K. G. Shin, </author> <title> "Experimental evaluation of failure-detection schemes in real-time communication networks," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <pages> pp. 122-131, </pages> <year> 1997. </year>
Reference-contexts: The use of spare resources to assure successful renegotiation attempts is presented. Chapter 6 concludes this thesis by summarizing its contributions and suggesting possible avenues of future research. Earlier work on this thesis has been published in <ref> [41, 42, 40, 45, 43] </ref>. CHAPTER 2 DEPENDABLE CONNECTION ESTABLISHMENT A dependable real-time (D-) connection requires to set up a primary and one or more backup real-time channels.
Reference: [42] <author> S. Han and K. G. Shin, </author> <title> "Fast restoration of real-time communication service from component failures in multi-hop networks," </title> <booktitle> in Proc. ACM SIGCOMM, </booktitle> <pages> pp. 77-88, </pages> <year> 1997. </year>
Reference-contexts: The use of spare resources to assure successful renegotiation attempts is presented. Chapter 6 concludes this thesis by summarizing its contributions and suggesting possible avenues of future research. Earlier work on this thesis has been published in <ref> [41, 42, 40, 45, 43] </ref>. CHAPTER 2 DEPENDABLE CONNECTION ESTABLISHMENT A dependable real-time (D-) connection requires to set up a primary and one or more backup real-time channels.
Reference: [43] <author> S. Han and K. G. Shin, </author> <title> "On providing low-cost dependability by adaptive QoS control in real-time communication services,", </title> <note> 1998. Submitted for publication. </note>
Reference-contexts: The use of spare resources to assure successful renegotiation attempts is presented. Chapter 6 concludes this thesis by summarizing its contributions and suggesting possible avenues of future research. Earlier work on this thesis has been published in <ref> [41, 42, 40, 45, 43] </ref>. CHAPTER 2 DEPENDABLE CONNECTION ESTABLISHMENT A dependable real-time (D-) connection requires to set up a primary and one or more backup real-time channels.
Reference: [44] <author> S. Han, K. G. Shin, and H. Rosenberg, "DOCTOR: </author> <title> An integrateD sOftware fault injeCTiOn enviRonment for distributed real-time systems," </title> <booktitle> in Proc. IEEE IPDS, </booktitle> <pages> pp. 204-213, </pages> <year> 1995. </year>
Reference-contexts: Otherwise, the correctness of the validation itself becomes questionable. To this end, only essential functions are performed on the same processor under test (i.e., by FIA) and relatively simple fault-injection techniques which are described below are employed. (Details on the fault-injector implementation can be found in <ref> [44] </ref>.) Memory fault: Contents of the cache or main memory are corrupted. The fault injection target can be either explicitly specified by the user, or chosen randomly from the address space using the symbol table and object-code information.
Reference: [45] <author> S. Han and K. G. Shin, </author> <title> "A primary-backup channel approach to dependable real-time communication in multi-hop networks," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. 47, no. 1, </volume> <pages> pp. 46-67, </pages> <month> January </month> <year> 1998. </year>
Reference-contexts: The use of spare resources to assure successful renegotiation attempts is presented. Chapter 6 concludes this thesis by summarizing its contributions and suggesting possible avenues of future research. Earlier work on this thesis has been published in <ref> [41, 42, 40, 45, 43] </ref>. CHAPTER 2 DEPENDABLE CONNECTION ESTABLISHMENT A dependable real-time (D-) connection requires to set up a primary and one or more backup real-time channels.
Reference: [46] <author> M. Herzberg and S. Bye, </author> <title> "An optimal spare-capacity assignment model for survivable networks with hop limits," </title> <booktitle> in Proc. IEEE GLOBECOM, </booktitle> <pages> pp. 1601-1606, </pages> <year> 1994. </year>
Reference-contexts: The local-rerouting strategy, also called a span-restoration method, has usually been 9 Source node Destination node (a) Local rerouting Source node Destination node (b) End-to-end rerouting Source node Destination node (c) Local-to-end rerouting used in STM (Synchronous Transfer Mode) networks. In most research on this strategy <ref> [36, 104, 81, 7, 96, 46] </ref>, the `maximum flow' model is used to find the (semi-) optimal placement of spare-resources under a deterministic failure hypothesis | typically, a single-link failure model.
Reference: [47] <author> A. L. Hopkins, Jr., T. B. Smith, III, and J. H. Lala, </author> <title> "FTMP-A highly reliable fault-tolerant multiprocessor for aircraft," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 66, no. 10, </volume> <pages> pp. 1221-1239, </pages> <month> October </month> <year> 1978. </year>
Reference-contexts: The traditional tightly-coupled multi-computer approach such as STAR [6], FTMP <ref> [47] </ref>, CM fl [88], SIFT [33], MAFT [60], FTP [64], and AIPS [65] has been dominant in such application areas. To meet the stringent reliability requirement of critical control applications, a fully-connected communication architecture with an excessive 5 Source node Destination nodeReal-time channel Extra resources capacity has usually been employed.
Reference: [48] <author> C. Hou, </author> <title> "Design of a fast restoration mechanism for virtual path-based ATM networks," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <year> 1997. </year>
Reference-contexts: Some connections may need to attempt several recovery paths before they succeed. The pre-computed backup-path approach has been studied mainly in the context of ATM networks. Some of recent efforts on this approach can be found in <ref> [32, 58, 3, 72, 102, 48] </ref>. Essentially, they derive optimal routing of channels (i.e., VPs) to minimize the spare-resource reservation while guaranteeing successful recovery under a deterministic failure model.
Reference: [49] <author> M. Hsueh, T. Tsai, and R. Iyer, </author> <title> "Fault injection techniques and tools," </title> <booktitle> IEEE Computer, </booktitle> <pages> pp. 75-82, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: The basic design principles are first explained, and the implementation issues to support the principles are then discussed. 3.2.1 Fault-Injection in Distributed Real-Time Systems Fault injection has long been viewed as a useful means of testing/evaluating fault-tolerant systems <ref> [49] </ref>. 2 Numerous hardware-implemented fault injectors (HFIs) [5, 38, 67] 2 Although numerous approaches have been proposed for dependability evaluation, the complexity of distributed real-time systems, due mainly to the intercommunication among nodes, makes most of the techniques intractable except for fault injection into actual prototype systems. 57 have been developed
Reference: [50] <author> R. Iraschko, M. MacGregor, and W. Grover, </author> <title> "Optimal capacity placement for path restoration in mesh survivable networks," </title> <booktitle> in Proc. IEEE ICC, </booktitle> <pages> pp. 1568-1574, </pages> <year> 1996. </year>
Reference-contexts: From the viewpoint of spare-resource reservation, in the former, each recovery connection (or backup connection) reserves its own spare resources, so that there will be no conflict/contention between recovery attempts. In the latter (e.g., <ref> [50] </ref>), spare resources are shared and recovery paths are not determined until failures actually do occur. When failures occur, each faulty connection will establish a new connection by "claiming" the reserved spare resources. Some connections may need to attempt several recovery paths before they succeed.
Reference: [51] <author> S. Jamin, P. Danzig, S. Shenker, and L. Zhang, </author> <title> "A measurement-based admission control algorithm for integrated services packet networks," </title> <booktitle> in Proc. ACM SIGCOMM, </booktitle> <pages> pp. 2-13, </pages> <year> 1995. </year>
Reference-contexts: Well-known hard real-time communication schemes include [29, 34, 19, 25, 74, 106], and examples of soft real-time communication schemes are <ref> [37, 63, 19, 108, 51] </ref>. To cope with large time-scale burstiness, renegotiation-based schemes have also been proposed [76, 35, 109].
Reference: [52] <author> H. Kanakia, P. Mishra, and A. Reibman, </author> <title> "An adaptive congestion control scheme for real-time packet video transport," </title> <booktitle> in Proc. ACM SIGCOMM, </booktitle> <pages> pp. 20-31, </pages> <year> 1993. </year>
Reference-contexts: While all of the QoS-guaranteed schemes rely on some form of resource reservation and admission control, each differs in QoS parameters and/or the firmness of QoS guarantees. (Network utilization can be enhanced by relaxing the firmness of QoS guarantees.) There also exist feedback-based schemes <ref> [52, 84, 68, 24] </ref> which attempt to provide QoS support without resource reservation. Despite the abundance of QoS communication schemes, very few implementations are available in the current Internet, mainly because resource reservation is not currently supported. IPv6 [23] and RSVP [111] are expected to alleviate this limitation. <p> We assume that the 110 Source Destination QoS-update message QoS level change source host of a real-time connection can adjust the traffic rate to its current QoS level using such techniques as those in <ref> [52, 84] </ref>. 5.2.1 Run-time QoS Adaptation When a connection is first established, it receives its min-QoS. At run-time, each connection claims excess resources and enhances its QoS level, so that if the network is under-loaded and excess resources are abundant, most connections will receive their max-QoS.
Reference: [53] <author> G. Kanawati, N. Kanawati, and J. Abraham, "FERRARI: </author> <title> A tool for the validation of system dependability properties," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <pages> pp. 336-344. </pages> <publisher> IEEE, </publisher> <year> 1992. </year>
Reference-contexts: However, as the complexity of contemporary computer increases as a result of using highly-integrated VLSI chips, it is becoming more difficult, or nearly impossible, to evaluate dependability with HFIs alone. On the other hand, software-implemented fault injectors (SFIs) <ref> [83, 16, 53, 27, 57] </ref> have been proposed as less expensive and more controllable alternatives. Although SFI techniques such as overwriting memory or register contents are becoming popular, they still face many difficulties. Some requirements for fault injection in distributed real-time systems are enumerated below. 1.
Reference: [54] <author> D. Kandlur and K. G. Shin, </author> <title> "Traffic routing for multicomputer networks with virtual cut-through capability," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. 41, no. 10, </volume> <pages> pp. 1257-1270, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: Unfortunately, there doesn't exist any efficient algorithm for `optimally' routing backup channels; the problem of finding a path set with multiple constraints is known to be NP-complete. The NP-completeness proof of the following decision 36 problem which is subsumed by the optimal backup-routing problem | can be found in <ref> [54] </ref>: Is there a feasible set of channel paths such that the sum of traffic flows at each link is smaller than the link capability, when channel traffic demands are given? The optimal backup-routing problem is therefore NP-complete, even without considering backup multiplexing.
Reference: [55] <author> D. Kandlur, K. G. Shin, and D. Ferrari, </author> <title> "Real-time communication in multi-hop networks," </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <volume> vol. 5, no. 10, </volume> <pages> pp. 1044-1056, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: This approach has an advantage that failures are handled without service disruption, but it is very expensive and timely message delivery is not guaranteed, since messages are delivered in a best-effort manner. The second approach is to set up a single-path real-time channel using such real-time communication schemes as <ref> [55, 114] </ref>. When a real-time channel is disconnected due to component failures, the channel is recovered by establishing a new channel. If a temporary connection disruption during failure recovery is acceptable to the underlying applications, this is a cost-effective alternative to the multi-copy method. <p> For example, a higher message rate (hence, higher bandwidth) results in a smaller message delay. In these schemes, the admission test at a link simply examines whether the demanded resources exceed the available resources, since the amount of resources determines the QoS level. By contrast, in the scheduler-based schemes <ref> [55, 29] </ref>, the QoS requirement (e.g., delay) of a channel can be specified independently of its traffic characteristics. In such schemes, the admission test checks for the schedulability of a channel by deriving a feasible priority assignment to meet its QoS requirement while considering the worst-case contention with existing channels. <p> We will prove that this condition is not satisfied in scheduler-based schemes, by showing a counter example in the RTC scheme <ref> [55] </ref>, a scheduler-based scheme. <p> Since NPs do not run user tasks, we disabled the virtual address management of x-kernel. Thus, all tasks in NP are executed within a single (kernel) address space. Memory protection of x-kernel was also disabled to minimize the overhead. Each NP features the real-time communication scheme described in <ref> [55] </ref>. Figure 3.5 gives an overview of the NP protocol stack. The protocol stack includes protocols for application program interface (API), network management (NM), remote procedure call (RPC), 6 transport-level fragmentation (FRAG), 7 network/data-link layer (HNET), and the device driver for network interface boards (DD).
Reference: [56] <author> B. Kao, H. Garcia-Molina, and D. Barbara, </author> <title> "Aggressive transmissions of short messages over redundant paths," </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <volume> vol. 5, no. 1, </volume> <pages> pp. 102-109, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: There have been roughly two types of approaches to achieving dependable real-time communication in point-to-point multi-computer networks. The first type is the multi-copy approach in which multiple copies of a message are sent simultaneously via disjoint paths <ref> [79, 56] </ref>. This method attempts to achieve both timely and reliable delivery at the same time. Thus, by transmitting multiple copies of a message over different paths, the 6 chance that at least one copy is delivered within its deadline increases and the effects of possible failures are masked.
Reference: [57] <author> W. Kao, R. Iyer, and D. Tang, </author> <title> "FINE: A fault injection and monitoring environment for tracing the UNIX system behavior under faults," </title> <journal> IEEE Trans. Software Engineering, </journal> <volume> vol. 19, no. 11, </volume> <pages> pp. 1105-1118, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: However, as the complexity of contemporary computer increases as a result of using highly-integrated VLSI chips, it is becoming more difficult, or nearly impossible, to evaluate dependability with HFIs alone. On the other hand, software-implemented fault injectors (SFIs) <ref> [83, 16, 53, 27, 57] </ref> have been proposed as less expensive and more controllable alternatives. Although SFI techniques such as overwriting memory or register contents are becoming popular, they still face many difficulties. Some requirements for fault injection in distributed real-time systems are enumerated below. 1.
Reference: [58] <author> R. Kawamura, K. Sato, and I. Tokizawa, </author> <title> "Self-healing ATM networks based on virtual path concept," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 12, no. 1, </volume> <pages> pp. 120-127, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: Some connections may need to attempt several recovery paths before they succeed. The pre-computed backup-path approach has been studied mainly in the context of ATM networks. Some of recent efforts on this approach can be found in <ref> [32, 58, 3, 72, 102, 48] </ref>. Essentially, they derive optimal routing of channels (i.e., VPs) to minimize the spare-resource reservation while guaranteeing successful recovery under a deterministic failure model.
Reference: [59] <author> D. Khun, </author> <title> "Source of failures in the public swithced telephone network," </title> <journal> IEEE Computer, </journal> <volume> vol. 30, no. 4, </volume> <pages> pp. 31-36, </pages> <month> April </month> <year> 1997. </year> <month> 131 </month>
Reference-contexts: The public telephone network usually provides a very high availability, better than 99.999% on average, thanks to various dependability techniques such as hardware duplication, standby power, dynamic rerouting, overload monitoring, reliable software, and resource distribution <ref> [59] </ref>. However, the consequence of improper failure handling could be devastating, thus making network reliability a major concern. As for dependability, the current Internet with datagram services has successfully dealt with two types of network failures: transient and persistent failures.
Reference: [60] <author> R. M. Kieckhafer, C. J. Walter, A. M. Finn, and P. M. Thambidurai, </author> <title> "The MAFT architecture for distributed fault tolerance," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. 37, no. 4, </volume> <pages> pp. 398-405, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: The traditional tightly-coupled multi-computer approach such as STAR [6], FTMP [47], CM fl [88], SIFT [33], MAFT <ref> [60] </ref>, FTP [64], and AIPS [65] has been dominant in such application areas. To meet the stringent reliability requirement of critical control applications, a fully-connected communication architecture with an excessive 5 Source node Destination nodeReal-time channel Extra resources capacity has usually been employed.
Reference: [61] <author> H. Kopetz, A. Damm, C. Koza, M. Mulazzani, W. Schwabl, C. Senft, and R. Zain-linger, </author> <title> "Distributed fault-tolerant real-time systems: The MARS approach," </title> <booktitle> IEEE Micro, </booktitle> <pages> pp. 25-40, </pages> <month> February </month> <year> 1989. </year>
Reference-contexts: Distributed systems are also suited for those applications which require physically dispersed environments. A successful paradigm in this approach is the broadcast-network-based architecture, some examples of which include MARS <ref> [61] </ref>, Delta-4 XPA [11], Springnet [90],Cyclone [66], and AAS [22]. This paradigm capitalizes on the simplification of the underlying communication structure and protocols, sacrificing scalability, flexibility and reliability to some extent.
Reference: [62] <author> H. Kopetz and G. Grunsteidl, </author> <title> "TTP a protocol for fault-tolerant real-time systems," </title> <journal> IEEE Computer, </journal> <volume> vol. 27, no. 1, </volume> <pages> pp. 14-23, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: This paradigm capitalizes on the simplification of the underlying communication structure and protocols, sacrificing scalability, flexibility and reliability to some extent. Some research results with regard to dependable real-time communication in broadcast networks can be found in <ref> [21, 2, 62, 15] </ref>. A more general approach toward the open-system architecture is to use point-to-point packet-switched networks with regular or arbitrary topologies. However, most work on this approach, such as Delta-4 [78], ISIS [13], and Consul [71], has considered only fault-tolerance issues without taking real-time constraints into account.
Reference: [63] <author> J. Kurose, </author> <title> "On computing per-session performance bounds in high-speed multi-hop computer networks," </title> <booktitle> in Proc. ACM SIGMETRICS, </booktitle> <pages> pp. 128-139, </pages> <year> 1992. </year>
Reference-contexts: Well-known hard real-time communication schemes include [29, 34, 19, 25, 74, 106], and examples of soft real-time communication schemes are <ref> [37, 63, 19, 108, 51] </ref>. To cope with large time-scale burstiness, renegotiation-based schemes have also been proposed [76, 35, 109].
Reference: [64] <author> J. Lala and L. Alger, </author> <title> "Harware and software fault tolerance: A unified architectural approach," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <pages> pp. 240-245, </pages> <year> 1988. </year>
Reference-contexts: The traditional tightly-coupled multi-computer approach such as STAR [6], FTMP [47], CM fl [88], SIFT [33], MAFT [60], FTP <ref> [64] </ref>, and AIPS [65] has been dominant in such application areas. To meet the stringent reliability requirement of critical control applications, a fully-connected communication architecture with an excessive 5 Source node Destination nodeReal-time channel Extra resources capacity has usually been employed.
Reference: [65] <author> J. H. Lala, R. E. Harper, and L. S. Alger, </author> <title> "A design approach for ultrareliable real-time systems," </title> <journal> IEEE Computer, </journal> <volume> vol. 24, no. 5, </volume> <pages> pp. 12-22, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: The traditional tightly-coupled multi-computer approach such as STAR [6], FTMP [47], CM fl [88], SIFT [33], MAFT [60], FTP [64], and AIPS <ref> [65] </ref> has been dominant in such application areas. To meet the stringent reliability requirement of critical control applications, a fully-connected communication architecture with an excessive 5 Source node Destination nodeReal-time channel Extra resources capacity has usually been employed.
Reference: [66] <author> H. lawson, "Cy-clone: </author> <title> An approach to the engineering of resource adequate cyclic real-time systems," </title> <journal> Journal of Real-Time Systems, </journal> <volume> vol. 4, no. 1, </volume> , <year> 1992. </year>
Reference-contexts: Distributed systems are also suited for those applications which require physically dispersed environments. A successful paradigm in this approach is the broadcast-network-based architecture, some examples of which include MARS [61], Delta-4 XPA [11], Springnet [90],Cyclone <ref> [66] </ref>, and AAS [22]. This paradigm capitalizes on the simplification of the underlying communication structure and protocols, sacrificing scalability, flexibility and reliability to some extent. Some research results with regard to dependable real-time communication in broadcast networks can be found in [21, 2, 62, 15].
Reference: [67] <author> H. Madeira and J. Silva, </author> <title> "Experimental evaluation of the fail-silent behavior in computers without error masking," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <pages> pp. 350-359, </pages> <year> 1994. </year>
Reference-contexts: The basic design principles are first explained, and the implementation issues to support the principles are then discussed. 3.2.1 Fault-Injection in Distributed Real-Time Systems Fault injection has long been viewed as a useful means of testing/evaluating fault-tolerant systems [49]. 2 Numerous hardware-implemented fault injectors (HFIs) <ref> [5, 38, 67] </ref> 2 Although numerous approaches have been proposed for dependability evaluation, the complexity of distributed real-time systems, due mainly to the intercommunication among nodes, makes most of the techniques intractable except for fault injection into actual prototype systems. 57 have been developed and used for various experiments. <p> The dependency of fault-tolerance measures on workload has been reported by several researchers, e.g., [14, 17]. In addition, our target system, like most other real-time systems, is not equipped with memory-protection capability. The experimental result in <ref> [67] </ref> indicates that memory protection can enhance detection coverage up to 15%. Third, the two used different fault-detection schemes. Though the neighbor detection scheme will detect all crash failures, we excluded the late detections by the neighbor scheme from the coverage calculation.
Reference: [68] <author> S. McCanne, V. Jacobson, and M. Vetterli, </author> <title> "Receiver-driven layered multicast," </title> <booktitle> in Proc. ACM SIGCOMM, </booktitle> <pages> pp. 117-130, </pages> <year> 1996. </year>
Reference-contexts: While all of the QoS-guaranteed schemes rely on some form of resource reservation and admission control, each differs in QoS parameters and/or the firmness of QoS guarantees. (Network utilization can be enhanced by relaxing the firmness of QoS guarantees.) There also exist feedback-based schemes <ref> [52, 84, 68, 24] </ref> which attempt to provide QoS support without resource reservation. Despite the abundance of QoS communication schemes, very few implementations are available in the current Internet, mainly because resource reservation is not currently supported. IPv6 [23] and RSVP [111] are expected to alleviate this limitation.
Reference: [69] <author> J. McDonald, </author> <title> "Public network integrity avoding a crisis in trust," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 12, no. 1, </volume> <pages> pp. 5-12, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: Emergency 911 calls went unanswered, on-line business transactions were stopped, and flights were delayed because of air traffic controller failures. Hospital operations were affected and drug stores could not process prescriptions. Even banks had to be closed for security reasons due to disabled alarm systems <ref> [69] </ref>. In 1990's, several similar disasters have been reported for various reasons like a disrupture of a fiber cable during construction, earthquakes, outage of switching systems, or network overloading.
Reference: [70] <author> A. Mehra, A. Indiresan, and K. G. Shin, </author> <title> "Resource management for real-time communication: Making theory meet practice," </title> <booktitle> in Proc. IEEE RTAS, </booktitle> <pages> pp. 130-138, </pages> <year> 1996. </year>
Reference-contexts: For this reason, we implemented the run-time message scheduler as a special thread that is created at system startup and runs at the highest-priority level. Implementation details can be found in <ref> [70] </ref>. A node-heartbeat generator also runs as a separate task.
Reference: [71] <author> S. Mishra, L. L. Peterson, and R. D. Schlichting, </author> <title> "Consul: A communication substrate for fault-tolerant distributed programs," </title> <type> Technical Report 91-32, </type> <institution> University of Arizona, </institution> <month> November </month> <year> 1991. </year>
Reference-contexts: A more general approach toward the open-system architecture is to use point-to-point packet-switched networks with regular or arbitrary topologies. However, most work on this approach, such as Delta-4 [78], ISIS [13], and Consul <ref> [71] </ref>, has considered only fault-tolerance issues without taking real-time constraints into account. One of the hardest problems in the construction of a real-time system in a point-to-point network is timely and reliable message delivery.
Reference: [72] <author> K. Murakami and H. Kim, </author> <title> "Near-optimal virtual path routing for survivable ATM networks," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <pages> pp. 208-215, </pages> <year> 1994. </year>
Reference-contexts: Some connections may need to attempt several recovery paths before they succeed. The pre-computed backup-path approach has been studied mainly in the context of ATM networks. Some of recent efforts on this approach can be found in <ref> [32, 58, 3, 72, 102, 48] </ref>. Essentially, they derive optimal routing of channels (i.e., VPs) to minimize the spare-resource reservation while guaranteeing successful recovery under a deterministic failure model.
Reference: [73] <author> K. Murakami and H. Kim, </author> <title> "Comparative study on restoration schemes of survivable ATM networks," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <year> 1997. </year>
Reference-contexts: According to [3], end-to-end rerouting is the best with regard to resource efficiency, and the local-to-end rerouting is the second, in mesh networks. The simulation with real telephone network topologies also reports similar trends [102]. The impact of topological characteristics on the performance of rerouting strategies is discussed in <ref> [73] </ref>. In the end-to-end rerouting strategy, also called a path-restoration method, a new connection is established between two end-points of each failed connection. There are two further variations in this strategy, depending on whether the failure recovery paths are pre-computed or not.
Reference: [74] <author> A. K. J. Parekh, </author> <title> A Generalized Processor Sharing Approach to Flow Control in Integrated Services Networks, </title> <type> PhD thesis, </type> <institution> MIT, </institution> <month> February </month> <year> 1992. </year>
Reference-contexts: In-between, there are VBR 2 deterministically 1 Constant Bit Rate 2 Variable Bit Rate 2 guaranteed services [85] (also called hard real-time communication) and VBR statistically--guaranteed services (also called soft real-time communication). Well-known hard real-time communication schemes include <ref> [29, 34, 19, 25, 74, 106] </ref>, and examples of soft real-time communication schemes are [37, 63, 19, 108, 51]. To cope with large time-scale burstiness, renegotiation-based schemes have also been proposed [76, 35, 109]. <p> However, such a condition does not hold for all real-time channel schemes, but in general it is valid only for `rate-based' schemes, not for `scheduler-based' schemes (we borrowed this classification from [4]). In the rate-based schemes <ref> [74, 110] </ref>, QoS has a static relation with the traffic characteristics. For example, a higher message rate (hence, higher bandwidth) results in a smaller message delay.
Reference: [75] <author> C. Parris and D. Ferrari, </author> <title> "A dynamic connection management scheme for guaranteed performance services in packet-switching integrated services networks," </title> <type> Technical Report TR-93-005, </type> <institution> UC Berkeley, </institution> <year> 1993. </year> <month> 132 </month>
Reference-contexts: If network topology information is maintained at each node, a path can be found without broadcasting route-search messages. Recently, more elaborate routing algorithms have been developed. For instance, in [100], a smallest-delay path, instead of a minimum-hop path, is selected. In <ref> [75] </ref>, a smallest-delay path is selected among minimum-hop paths. Another popular metric of QoS routing is the residual bandwidth, so as to favor a path with larger available bandwidth. The algorithm presented in [98] uses a metric which aggregates multiple routing parameters such as throughput, delay, and error rate.
Reference: [76] <author> C. Parris, H. Zhang, and D. Ferrari, </author> <title> "Dynamic management of guaranteed perfor-mance multimedia connections," </title> <journal> Multimedia Systems Journal, </journal> <volume> vol. 1, no. 6, </volume> <pages> pp. 267-283, </pages> <year> 1994. </year>
Reference-contexts: Well-known hard real-time communication schemes include [29, 34, 19, 25, 74, 106], and examples of soft real-time communication schemes are [37, 63, 19, 108, 51]. To cope with large time-scale burstiness, renegotiation-based schemes have also been proposed <ref> [76, 35, 109] </ref>. <p> It is because unlike short bursts, long bursts lasting for tens of seconds or even minutes. Such long bursts are handled better 6 by using QoS re-negotiation at run-time <ref> [18, 109, 76, 35] </ref>. For instance, it is shown in [35] that a piecewise CBR stream with QoS re-negotiation requires 3 - 4 times less resources than the corresponding fixed-rate CBR stream.
Reference: [77] <author> L. L. Peterson, N. C. Hutchinson, S. W. O`Malley, and H. C. Rao, </author> <title> "The x-Kernel: A platform for accessing internet resources," </title> <journal> IEEE Computer, </journal> <volume> vol. 23, no. 5, </volume> <pages> pp. 23-33, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: The AP-side software is not important in our experiment, since APs run very simple applications which request message delivery to the associated NP, and retrieve messages received by the NP. NP employs a derivative of x-kernel 3.1 <ref> [77] </ref> as a system executive and a substrate for building the protocol stack. Since NPs do not run user tasks, we disabled the virtual address management of x-kernel. Thus, all tasks in NP are executed within a single (kernel) address space.
Reference: [78] <author> D. Powell, G. Bonn, D. Seaton, P. Verissimo, and F. Waeselynck, </author> <title> "The Delta-4 approach to dependability in open disributed computing systems," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <pages> pp. 246-251, </pages> <year> 1988. </year>
Reference-contexts: Some research results with regard to dependable real-time communication in broadcast networks can be found in [21, 2, 62, 15]. A more general approach toward the open-system architecture is to use point-to-point packet-switched networks with regular or arbitrary topologies. However, most work on this approach, such as Delta-4 <ref> [78] </ref>, ISIS [13], and Consul [71], has considered only fault-tolerance issues without taking real-time constraints into account. One of the hardest problems in the construction of a real-time system in a point-to-point network is timely and reliable message delivery.
Reference: [79] <author> P. Ramanathan and K. G. Shin, </author> <title> "Delivery of time-critical messages using a multiple copy approach," </title> <journal> ACM Trans. Computer Systems, </journal> <volume> vol. 10, no. 2, </volume> <pages> pp. 144-166, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: There have been roughly two types of approaches to achieving dependable real-time communication in point-to-point multi-computer networks. The first type is the multi-copy approach in which multiple copies of a message are sent simultaneously via disjoint paths <ref> [79, 56] </ref>. This method attempts to achieve both timely and reliable delivery at the same time. Thus, by transmitting multiple copies of a message over different paths, the 6 chance that at least one copy is delivered within its deadline increases and the effects of possible failures are masked.
Reference: [80] <author> M. Rela, H. Madeira, and J. Silva, </author> <title> "Experimental evaluation of the fail-silent behavior in programs with consistency checks," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <pages> pp. 394-403, </pages> <year> 1996. </year>
Reference-contexts: It would be interesting to compare our results with the experimental results about `fail-silent' behavior of computer systems. For example, (72:6 + 0:1)=(100 18:2) = 88:8 % of failures were reported in <ref> [80] </ref> to have been detected by the CPU-inherent detection mechanism. The discrepancy of the detection coverage can be explained as follows. <p> In <ref> [80] </ref>, a hardware-implemented (pin-level) fault injector was used, so the fault injected at a CPU pin for two memory cycles can be manifested as several errors at the level which a software-implemented fault injector deals with. <p> Second, the underlying workload (i.e., system software and application program) was different. Computationally-intensive workloads (e.g., sorting, searching, matrix multiplication, etc.) were executed in the experiments of <ref> [80] </ref>. The dependency of fault-tolerance measures on workload has been reported by several researchers, e.g., [14, 17]. In addition, our target system, like most other real-time systems, is not equipped with memory-protection capability. The experimental result in [67] indicates that memory protection can enhance detection coverage up to 15%.
Reference: [81] <author> H. Sakauchi, Y. Nishimura, and S. Hasegawa, </author> <title> "A self-healing network with an economical spare-channel assignment," </title> <booktitle> in Proc. IEEE GLOBECOM, </booktitle> <pages> pp. 438-443, </pages> <year> 1990. </year>
Reference-contexts: The local-rerouting strategy, also called a span-restoration method, has usually been 9 Source node Destination node (a) Local rerouting Source node Destination node (b) End-to-end rerouting Source node Destination node (c) Local-to-end rerouting used in STM (Synchronous Transfer Mode) networks. In most research on this strategy <ref> [36, 104, 81, 7, 96, 46] </ref>, the `maximum flow' model is used to find the (semi-) optimal placement of spare-resources under a deterministic failure hypothesis | typically, a single-link failure model.
Reference: [82] <author> H. Schulzrinne, S. Casner, R. Frederick, and V. Jacobson, "RTP: </author> <title> A transport protocol for real-time applications," </title> <type> Technical Report Internet RFC 1889, </type> <month> February </month> <year> 1996. </year>
Reference-contexts: Today's representative computer network, Internet, also lacks QoS support for continuous media applications; the window-based flow control is unsuitable for traffic with end-to-end timing constraints. Nevertheless, many multimedia applications have already begun to run over Internet using such protocols as RTP <ref> [82] </ref>, XTP [103], and IP multicast. However, these protocols do not meet the true multimedia requirements because they only support a best-effort service model. Though they are flexible to be integrated with non-IP-based protocols which can provide QoS guarantees, they themselves cannot guarantee timely packet delivery.
Reference: [83] <author> Z. Segall et al., </author> <title> "FIAT fault injection based automated testing environment," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <pages> pp. 102-107, </pages> <year> 1988. </year>
Reference-contexts: However, as the complexity of contemporary computer increases as a result of using highly-integrated VLSI chips, it is becoming more difficult, or nearly impossible, to evaluate dependability with HFIs alone. On the other hand, software-implemented fault injectors (SFIs) <ref> [83, 16, 53, 27, 57] </ref> have been proposed as less expensive and more controllable alternatives. Although SFI techniques such as overwriting memory or register contents are becoming popular, they still face many difficulties. Some requirements for fault injection in distributed real-time systems are enumerated below. 1.
Reference: [84] <author> N. Shacham, </author> <title> "Multipoint communication by hierarchically encoded data," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <pages> pp. 2107-2114, </pages> <year> 1992. </year>
Reference-contexts: While all of the QoS-guaranteed schemes rely on some form of resource reservation and admission control, each differs in QoS parameters and/or the firmness of QoS guarantees. (Network utilization can be enhanced by relaxing the firmness of QoS guarantees.) There also exist feedback-based schemes <ref> [52, 84, 68, 24] </ref> which attempt to provide QoS support without resource reservation. Despite the abundance of QoS communication schemes, very few implementations are available in the current Internet, mainly because resource reservation is not currently supported. IPv6 [23] and RSVP [111] are expected to alleviate this limitation. <p> We assume that the 110 Source Destination QoS-update message QoS level change source host of a real-time connection can adjust the traffic rate to its current QoS level using such techniques as those in <ref> [52, 84] </ref>. 5.2.1 Run-time QoS Adaptation When a connection is first established, it receives its min-QoS. At run-time, each connection claims excess resources and enhances its QoS level, so that if the network is under-loaded and excess resources are abundant, most connections will receive their max-QoS.
Reference: [85] <author> S. Shenker, C. Partridge, and R. Guerin, </author> <title> "Specification of guaranteed quality of service," </title> <type> Technical Report INTERNET-DRAFT draft-iet-intserv-guaranteed-svc-05.txt, </type> <month> July </month> <year> 1996. </year>
Reference-contexts: Numerous QoS-guaranteed service models have been developed ranging from the static CBR 1 service that resembles the telephony service to the `controlled-load service' that mimics the best-effort service in unloaded networks [101]. In-between, there are VBR 2 deterministically 1 Constant Bit Rate 2 Variable Bit Rate 2 guaranteed services <ref> [85] </ref> (also called hard real-time communication) and VBR statistically--guaranteed services (also called soft real-time communication). Well-known hard real-time communication schemes include [29, 34, 19, 25, 74, 106], and examples of soft real-time communication schemes are [37, 63, 19, 108, 51].
Reference: [86] <author> K. G. Shin and H. Kim, </author> <title> "Derivation and application of hard deadlines for real-time control systems," </title> <journal> IEEE Trans. on System, Man, and Cybernetics, </journal> <volume> vol. 22, no. 6, </volume> <pages> pp. 1403-1413, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: If a temporary connection disruption during failure recovery is acceptable to the underlying applications, this is a cost-effective alternative to the multi-copy method. Actually, temporary message losses are tolerable in many real-time control applications because of the `system inertia' characterized by the control system deadline <ref> [86] </ref>. The scheme proposed in [112] took this approach. It is called the SFI (Single Failure Immune) method because it provides guaranteed failure recovery under a single failure model. <p> For example, loss of a couple of frames in video/voice data streams is acceptable. Temporary message losses are also tolerable in real-time control applications because of the `system inertia' characterized by the control system deadline <ref> [86] </ref>. Therefore, the grain of failure detection is channel failures instead of individual message losses. A real-time channel is said to have `failed', if the rate of correct 1 message delivery within a certain time interval is below a threshold specified by the application.
Reference: [87] <author> D. Sidhu, R. Nair, and S. Abdallah, </author> <title> "Finding disjoint paths in networks," </title> <booktitle> in Proc. ACM SIGCOMM, </booktitle> <pages> pp. 43-51, </pages> <year> 1991. </year>
Reference-contexts: A shortest-path search algorithm is used to find the minimum-cost path where a cost value is assigned to each network link. When multiple backups are set up for each D-connection, one can use such algorithms as in <ref> [99, 87] </ref> which find multiple disjoint paths.
Reference: [88] <author> D. Siewiorek, V. Kini, and H. Mashburn, </author> <title> "A case study of C.mmp, Cm*, and C.vmp: Part i experiences with fault-tolerance in mulitprocessor systems," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 66, no. 10, </volume> <pages> pp. 1178-1199, </pages> <month> October </month> <year> 1978. </year>
Reference-contexts: The traditional tightly-coupled multi-computer approach such as STAR [6], FTMP [47], CM fl <ref> [88] </ref>, SIFT [33], MAFT [60], FTP [64], and AIPS [65] has been dominant in such application areas. To meet the stringent reliability requirement of critical control applications, a fully-connected communication architecture with an excessive 5 Source node Destination nodeReal-time channel Extra resources capacity has usually been employed.
Reference: [89] <author> J. Simmons and R. Gallager, </author> <title> "Design of error detection scheme for Class C service in ATM," </title> <journal> IEEE/ACM Trans Networking, </journal> <volume> vol. 2, no. 1, </volume> <pages> pp. 80-88, </pages> <year> 1994. </year>
Reference-contexts: For example, our behavior-based failure detection schemes are independent of the underlying physical media or protocols, in contrast to the special failure detection techniques capitalizing on physical layer characteristics as <ref> [3, 89] </ref>. Our control-message transmission mechanism is also applicable without relying on special mechanisms provided by a particular network as in [30]. 1.4 The Proposed Approach This section outlines our approach.
Reference: [90] <author> J. Stankovic, D. Niehaus, and K. Ramamritham, "Springnet: </author> <title> A scalable architecture for high performance, predictable, and distributed real-time computing," </title> <type> Technical Report TR-91-74, </type> <institution> University of Messachusetts, </institution> <year> 1991. </year> <month> 133 </month>
Reference: [91] <author> W. Stevens, </author> <title> TCP/IP Illustrated Volume 1, </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: For instance, in Internet, current operational status is continuously exchanged between neighbor networks (i.e., by Exterior Gateway Protocols) or internal gateways (i.e., by Interior Gateway Protocols) for immediate isolation of failures <ref> [20, 91] </ref>. Since packets can traverse any routes, intermediate gateways between the source and destination of a connection can easily reroute its packets to a different path when they detect failures on the current path.
Reference: [92] <author> A. Tanenbaum, </author> <title> Computer Networks, </title> <publisher> 3rd ed., Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1996. </year>
Reference-contexts: First, the probability of transmission errors in optical links is negligible; the error rate is dropped from 10 5 per bit in the 56 kbps links of initial ARPANET to below 10 10 per bit in optical links <ref> [92] </ref>. The chance of packet loss due to transmission errors is very low, and most packet losses are attributed to congestion control mechanisms. Therefore, for 4 real-time communication, tolerating transient-failures has become relatively less important because congestion-induced packet losses are avoided by resource reservation.
Reference: [93] <author> L. M. Thompson, </author> <title> "Using pSOS + for embedded real-time computing," </title> <booktitle> in Proc. COM-PCON, </booktitle> <pages> pp. 282-288, </pages> <year> 1990. </year>
Reference-contexts: The host machine is connected to nodes through an Ethernet (i.e., development network). Nodes are not equipped with disks, and application/system software is downloaded from the host machine. An extended version of the pSOS +m real-time OS <ref> [93] </ref> is used for AP's system software. The AP-side software is not important in our experiment, since APs run very simple applications which request message delivery to the associated NP, and retrieve messages received by the NP.
Reference: [94] <author> W. N. </author> <title> Toy, "Fault-tolerant design of AT&T telephone switching system processors," </title> <booktitle> in Reliable Computer Systems: Design and Evaluation, </booktitle> <pages> pp. 533-574. </pages> <publisher> Digital Press, </publisher> <year> 1992. </year>
Reference-contexts: Not only link failures but also node failures are getting more difficult to deal with. Usually, switching nodes of computer networks (i.e., routers) are not designed to meet such a stringent reliability goal as telephone network switches (e.g., AT&T 5ESS <ref> [94] </ref>). Higher-performance routers in future networks will become even harder to provide high reliability, due mainly to their complex software. Moreover, computer networks are more vulnerable to vandalism like virus or hacking than the telephone network which has a `closed' architecture. <p> For example, telephone services require fast failure recovery so that humans may hardly notice the service disruption caused by network failures. Telephone networks employ an expensive failure-detection technique using hardware duplication/comparison to quickly detect switching-node failures <ref> [94] </ref>. A key challenge is how to achieve fast failure detection without relying on special hardware support for real-time communication in packet-switched computer networks. We use behavior-based failure-detection schemes which are similar to the failure-detection schemes used for reliable datagram communication.
Reference: [95] <author> K. S. Trivedi, </author> <title> Probability and Statistic with Reliability, Queuing, </title> <booktitle> and Computer Science Applications, </booktitle> <publisher> Prentice-Hall, </publisher> <year> 1982. </year>
Reference-contexts: Using the technique in <ref> [95] </ref>, one can calculate R (t) of this D-connection from the Markov model of Figure 2.4 (b): R (t) = 1 P (the system is in the absorbing state at time t) = p (25 + ) 49 2 + 42 + 2 49 2 42 2 p p (25 +
Reference: [96] <author> B. Venables, W. Grover, and M. MacGregor, </author> <title> "Two strategies for spare capacity placement in mesh restorable networks," </title> <booktitle> in Proc. IEEE ICC, </booktitle> <pages> pp. 267-271, </pages> <year> 1993. </year>
Reference-contexts: The local-rerouting strategy, also called a span-restoration method, has usually been 9 Source node Destination node (a) Local rerouting Source node Destination node (b) End-to-end rerouting Source node Destination node (c) Local-to-end rerouting used in STM (Synchronous Transfer Mode) networks. In most research on this strategy <ref> [36, 104, 81, 7, 96, 46] </ref>, the `maximum flow' model is used to find the (semi-) optimal placement of spare-resources under a deterministic failure hypothesis | typically, a single-link failure model.
Reference: [97] <author> A. Vogel, B. Kerherve, G. Bochmann, and J. Gecsei, </author> <title> "Distributed multimedia and qos: A survey," </title> <journal> IEEE Multimedia, </journal> <volume> vol. 2, no. 2, </volume> <pages> pp. 10-19, </pages> <year> 1995. </year>
Reference-contexts: In parallel with the growing demands for real-time communication services, recent years have seen considerable research efforts in developing various performance QoS-guaranteed (or real-time communication) service paradigms. Several survey papers <ref> [4, 107, 28, 97] </ref> discuss many of real-time communication schemes from various perspectives. Here, we only briefly discuss the basic idea behind the real-time communication schemes for multi-hop networks (i.e., point-to-point networks). Most (if not all) real-time communication schemes share three common properties: QoS-contracted, connection-oriented, and reservation-based.
Reference: [98] <author> R. Vogel, R. Herrtwich, W. Kalfa, H. Wittig, and L. Wolf, </author> <title> "QoS-Based routing of multimedia streams in computer networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 14, no. 7, </volume> <pages> pp. 1235-1244, </pages> <month> September </month> <year> 1996. </year>
Reference-contexts: For instance, in [100], a smallest-delay path, instead of a minimum-hop path, is selected. In [75], a smallest-delay path is selected among minimum-hop paths. Another popular metric of QoS routing is the residual bandwidth, so as to favor a path with larger available bandwidth. The algorithm presented in <ref> [98] </ref> uses a metric which aggregates multiple routing parameters such as throughput, delay, and error rate. Unlike the above-cited research, our interest is in backup-route selection. 2.3.1 Optimal Routing Problem Essentially, we want to minimize the amount of spare resources while providing the required fault-tolerance level.
Reference: [99] <author> J. Whalen and J. Kenney, </author> <title> "Finding maximal link disjoint paths in a multigraph," </title> <booktitle> in Proc. IEEE GLOBECOM, </booktitle> <year> 1990. </year>
Reference-contexts: A shortest-path search algorithm is used to find the minimum-cost path where a cost value is assigned to each network link. When multiple backups are set up for each D-connection, one can use such algorithms as in <ref> [99, 87] </ref> which find multiple disjoint paths.
Reference: [100] <author> Z. Whang and J. Crowcroft, </author> <title> "Quality-of-Service routing for supporting multimedia applications," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 14, no. 7, </volume> <pages> pp. 1228-1234, </pages> <month> September </month> <year> 1996. </year>
Reference-contexts: A node which wants to set up a real-time channel broadcasts route-search messages to find a shortest path. If network topology information is maintained at each node, a path can be found without broadcasting route-search messages. Recently, more elaborate routing algorithms have been developed. For instance, in <ref> [100] </ref>, a smallest-delay path, instead of a minimum-hop path, is selected. In [75], a smallest-delay path is selected among minimum-hop paths. Another popular metric of QoS routing is the residual bandwidth, so as to favor a path with larger available bandwidth.
Reference: [101] <author> J. Wroclawski, </author> <title> "Specification of controlled-load network element service," </title> <type> Technical Report INTERNET-DRAFT draft-iet-intserv-ctrl-load-svc-02.txt, </type> <month> June </month> <year> 1996. </year>
Reference-contexts: Numerous QoS-guaranteed service models have been developed ranging from the static CBR 1 service that resembles the telephony service to the `controlled-load service' that mimics the best-effort service in unloaded networks <ref> [101] </ref>. In-between, there are VBR 2 deterministically 1 Constant Bit Rate 2 Variable Bit Rate 2 guaranteed services [85] (also called hard real-time communication) and VBR statistically--guaranteed services (also called soft real-time communication).
Reference: [102] <author> Y. Xiong and L. Mason, </author> <title> "Restoration strategies and spare capacity requirements in self-healing ATM networks," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <year> 1997. </year>
Reference-contexts: According to [3], end-to-end rerouting is the best with regard to resource efficiency, and the local-to-end rerouting is the second, in mesh networks. The simulation with real telephone network topologies also reports similar trends <ref> [102] </ref>. The impact of topological characteristics on the performance of rerouting strategies is discussed in [73]. In the end-to-end rerouting strategy, also called a path-restoration method, a new connection is established between two end-points of each failed connection. <p> Some connections may need to attempt several recovery paths before they succeed. The pre-computed backup-path approach has been studied mainly in the context of ATM networks. Some of recent efforts on this approach can be found in <ref> [32, 58, 3, 72, 102, 48] </ref>. Essentially, they derive optimal routing of channels (i.e., VPs) to minimize the spare-resource reservation while guaranteeing successful recovery under a deterministic failure model.
Reference: [103] <editor> Xpress Transfer Protocol Specification, </editor> <booktitle> XTP Forum, </booktitle> <address> revision 4.0 edition, </address> <month> March </month> <year> 1995. </year>
Reference-contexts: Today's representative computer network, Internet, also lacks QoS support for continuous media applications; the window-based flow control is unsuitable for traffic with end-to-end timing constraints. Nevertheless, many multimedia applications have already begun to run over Internet using such protocols as RTP [82], XTP <ref> [103] </ref>, and IP multicast. However, these protocols do not meet the true multimedia requirements because they only support a best-effort service model. Though they are flexible to be integrated with non-IP-based protocols which can provide QoS guarantees, they themselves cannot guarantee timely packet delivery.
Reference: [104] <author> C. Yang and S. Hasegawa, </author> <title> "FITNESS: Failure immunization technology for network service survivability," </title> <booktitle> in Proc. IEEE GLOBECOM, </booktitle> <pages> pp. 1549-1554, </pages> <year> 1988. </year>
Reference-contexts: The local-rerouting strategy, also called a span-restoration method, has usually been 9 Source node Destination node (a) Local rerouting Source node Destination node (b) End-to-end rerouting Source node Destination node (c) Local-to-end rerouting used in STM (Synchronous Transfer Mode) networks. In most research on this strategy <ref> [36, 104, 81, 7, 96, 46] </ref>, the `maximum flow' model is used to find the (semi-) optimal placement of spare-resources under a deterministic failure hypothesis | typically, a single-link failure model.
Reference: [105] <author> L. Young and R. Iyer, </author> <title> "A hybrid monitor assisted fault injection environment," </title> <type> Technical Report CRHC-92-04, </type> <institution> University of Illinois, Urbana, </institution> <month> March </month> <year> 1992. </year>
Reference-contexts: To overcome the limitation of pure hardware monitors and software monitors, we have developed a hybrid data monitor. 4 We envision the data collection process consisting of three steps: event probing, time-stamping, and event logging. Event probing is done by 4 Young utilized a hardware/software hybrid monitor <ref> [105] </ref>, where a commercial logic analyzer was used to probe hardware signals and a software monitor checked the system status to assist the control of hardware monitor.
Reference: [106] <author> H. Zhang and D. Ferrari, </author> <title> "Rate-controlled static-priority queueing," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <pages> pp. 227 - 236, </pages> <year> 1993. </year>
Reference-contexts: In-between, there are VBR 2 deterministically 1 Constant Bit Rate 2 Variable Bit Rate 2 guaranteed services [85] (also called hard real-time communication) and VBR statistically--guaranteed services (also called soft real-time communication). Well-known hard real-time communication schemes include <ref> [29, 34, 19, 25, 74, 106] </ref>, and examples of soft real-time communication schemes are [37, 63, 19, 108, 51]. To cope with large time-scale burstiness, renegotiation-based schemes have also been proposed [76, 35, 109].
Reference: [107] <author> H. Zhang and S. Keshav, </author> <title> "Comparison of rate-based service disciplines," </title> <booktitle> in Proc. ACM SIGCOMM, </booktitle> <pages> pp. 113-121, </pages> <year> 1991. </year>
Reference-contexts: In parallel with the growing demands for real-time communication services, recent years have seen considerable research efforts in developing various performance QoS-guaranteed (or real-time communication) service paradigms. Several survey papers <ref> [4, 107, 28, 97] </ref> discuss many of real-time communication schemes from various perspectives. Here, we only briefly discuss the basic idea behind the real-time communication schemes for multi-hop networks (i.e., point-to-point networks). Most (if not all) real-time communication schemes share three common properties: QoS-contracted, connection-oriented, and reservation-based.
Reference: [108] <author> H. Zhang and E. Knightly, </author> <title> "Providing end-to-end statistical performance guarantee with bounding interval dependent stochastic models," </title> <booktitle> in Proc. ACM SIGMETRICS, </booktitle> <pages> pp. 211-220, </pages> <year> 1994. </year>
Reference-contexts: Well-known hard real-time communication schemes include [29, 34, 19, 25, 74, 106], and examples of soft real-time communication schemes are <ref> [37, 63, 19, 108, 51] </ref>. To cope with large time-scale burstiness, renegotiation-based schemes have also been proposed [76, 35, 109].
Reference: [109] <author> H. Zhang and E. W. Knightly, "RED-VBR: </author> <title> A renegotiation-based approach to sup-port delay-sensative VBR video," </title> <journal> Multimedia Systems Journal, </journal> <volume> vol. 5, no. 3, </volume> <pages> pp. 164-176, </pages> <year> 1997. </year>
Reference-contexts: Well-known hard real-time communication schemes include [29, 34, 19, 25, 74, 106], and examples of soft real-time communication schemes are [37, 63, 19, 108, 51]. To cope with large time-scale burstiness, renegotiation-based schemes have also been proposed <ref> [76, 35, 109] </ref>. <p> It is because unlike short bursts, long bursts lasting for tens of seconds or even minutes. Such long bursts are handled better 6 by using QoS re-negotiation at run-time <ref> [18, 109, 76, 35] </ref>. For instance, it is shown in [35] that a piecewise CBR stream with QoS re-negotiation requires 3 - 4 times less resources than the corresponding fixed-rate CBR stream. <p> Only for playback applications with all changes of QoS requirements known in advance, an optimal admission control will be possible. For interactive applications, only statistical estimation based on a traffic-generation history has been used in <ref> [109, 35] </ref>. To avoid the uncertainty and complexity of such statistical estimation, we exploit the spare resources. Thus, RBP is maintained by relying on spare resource reservation instead of a separate admission control.
Reference: [110] <author> L. Zhang, </author> <title> "Virtual Clock: A new traffic control algorithm for packet-switched networks," </title> <journal> ACM Trans. Computer Systems, </journal> <volume> vol. 9, no. 2, </volume> <pages> pp. 101-124, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: However, such a condition does not hold for all real-time channel schemes, but in general it is valid only for `rate-based' schemes, not for `scheduler-based' schemes (we borrowed this classification from [4]). In the rate-based schemes <ref> [74, 110] </ref>, QoS has a static relation with the traffic characteristics. For example, a higher message rate (hence, higher bandwidth) results in a smaller message delay.
Reference: [111] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zappala, "RSVP: </author> <title> A new resource reservation protocol," </title> <journal> IEEE Network, </journal> <pages> pp. 8-18, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: Despite the abundance of QoS communication schemes, very few implementations are available in the current Internet, mainly because resource reservation is not currently supported. IPv6 [23] and RSVP <ref> [111] </ref> are expected to alleviate this limitation. <p> However, if failures disconnect a channel's path or disable the channel end-nodes, the resource-release process becomes complicated. The concept of "soft-state connections" of RSVP <ref> [111] </ref> is useful for reclaiming the resources reserved for failed channels. In addition to easy release of resources, we support optional repairing of channels which are temporarily out of services.
Reference: [112] <author> Q. Zheng and K. G. Shin, </author> <title> "Fault-tolerant real-time communication in distributed computing systems," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <pages> pp. 86 - 93, </pages> <year> 1992. </year>
Reference-contexts: Actually, temporary message losses are tolerable in many real-time control applications because of the `system inertia' characterized by the control system deadline [86]. The scheme proposed in <ref> [112] </ref> took this approach. It is called the SFI (Single Failure Immune) method because it provides guaranteed failure recovery under a single failure model.
Reference: [113] <author> Q. Zheng and K. G. Shin, </author> <title> "Establishment of isolated failure immune real-time channels in HARTS," </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> vol. 6, no. 2, </volume> <pages> pp. 113-119, </pages> <month> February </month> <year> 1995. </year>
Reference-contexts: In the SFI method, additional resources are reserved in the vicinity of each real-time channel, and the failed components are detoured by altering the channel path using the reserved resources. Figure 1.1 illustrates the setup of a SFI channel. In <ref> [113] </ref>, the SFI method is extended to survive special patterns of multiple failures in a hexagonal mesh topology.
Reference: [114] <author> Q. Zheng and K. G. Shin, </author> <title> "On the ability of establishing real-time channels in point-to-point packet-switched networks," </title> <journal> IEEE Trans. Communications, </journal> <pages> pp. 1096-1105, </pages> <year> 1994. </year>
Reference-contexts: This approach has an advantage that failures are handled without service disruption, but it is very expensive and timely message delivery is not guaranteed, since messages are delivered in a best-effort manner. The second approach is to set up a single-path real-time channel using such real-time communication schemes as <ref> [55, 114] </ref>. When a real-time channel is disconnected due to component failures, the channel is recovered by establishing a new channel. If a temporary connection disruption during failure recovery is acceptable to the underlying applications, this is a cost-effective alternative to the multi-copy method.
References-found: 115

