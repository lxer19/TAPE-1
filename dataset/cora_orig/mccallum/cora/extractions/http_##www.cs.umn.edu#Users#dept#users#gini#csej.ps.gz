URL: http://www.cs.umn.edu/Users/dept/users/gini/csej.ps.gz
Refering-URL: http://www.cs.umn.edu/Users/dept/users/gini/
Root-URL: http://www.cs.umn.edu
Email: gini@cs.umn.edu  
Phone: (612) 625-5582  
Title: Designing and building autonomous minirobots  
Author: Maria Gini 
Note: Running Head: Autonomous minirobots This work was funded in part by the NSF under grant NSF/DUE-9351513.  
Address: 4-192 EE/CSci Building 200 Union Street SE Minneapolis, MN 55455  
Affiliation: Department of Computer Science University of Minnesota  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> D. Miller D. Hinkle, D. Kortenkamp. </author> <title> The 1995 robot competition and exhibition. </title> <journal> AI Magazine, </journal> <volume> Vol. 17, No. 1, </volume> <month> Spring </month> <year> 1996, </year> <pages> pp 31-45. </pages>
Reference-contexts: 1 Introduction The main purpose of this paper is to describe technical details of an undergraduate project that culminated at the IJCAI robot competition in August 1995 <ref> [1] </ref> and describe how we are integrating in our undergraduate curriculum a variety of projects in robotics.
Reference: [2] <author> T. Balch, G. Boone, T. Collins, H. Forbes, D. MacKenzie, and J. C. Santamaria. Io, Ganymede, and Callisto: </author> <title> A multiagent robot trash-collecting team. </title> <journal> AI Magazine, </journal> <volume> Vol. 16, No. 2, </volume> <month> Summer </month> <year> 1995, </year> <pages> pp 39-51. </pages>
Reference-contexts: The robot is equipped with a specially designed mechanical gripper. The design of the gripper was modeled after the design Georgia Tech used for the competition in the previous year <ref> [2] </ref>. The gripper was designed to allow the capture of cups and cans, but yet be able to release itself whenever an immovable object is grasped. <p> The main idea is to keep the stages as simple as possible, very much like the strategy described in <ref> [2] </ref>. Walleye does not keep track of its own position and does not even attempt to construct a map of the world. The position sensor we use is too crude for the map to be of any use.
Reference: [3] <author> John Fischer and Maria Gini. </author> <title> Vision-based mini-robots. </title> <journal> The Robotics Practitioner, </journal> <volume> Vol. 2, No. 2, </volume> <month> Spring </month> <year> 1996, </year> <pages> pp 40-46. </pages>
Reference-contexts: is deposited close to them. long-backup: the robot backups for a longer period of time in order to move away from the trash area. random-move: the robot turns by a random angle and drives for a random distance. 2.2 Vision The most important part of Walleye is its vision system <ref> [3] </ref>. We designed the vision software to be fast (which was a major challenge considering the limited computing power of the microprocessor we use) and robust. The other major problem we had to face was the limited amount of memory 8 available.
Reference: [4] <author> Joseph L. and Anita M. Flynn. </author> <title> Mobile Robots: Inspiration to Implementation. A.K. </title> <publisher> Peters, </publisher> <address> Wellesley, MA, </address> <year> 1993. </year>
Reference-contexts: Robotics, including computer vision, graphics, and 3D modeling have been selected as application areas because of their interdisciplinary nature and because they provide a wide variety of problems where system integration, communication, and cooperation are important <ref> [4] </ref>.
Reference: [5] <author> R. P. Paul. </author> <title> Robot Manipulators: Mathematics, Programming and Control. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1981. </year>
Reference-contexts: The goal is to detect the objects and control both arms to prevent the objects from falling off of the conveyor belt. During the early stages of the project, the students wrote software to control one arm to pick up a stationary object from a rotary table <ref> [5] </ref>, put it down on a conveyor belt, and turn on the conveyor belt. Students then worked on the problem of controlling a pair of robots, communicating between them, and synchronizing them.
Reference: [6] <author> S. T. Levi and A. K. Agrawala. </author> <title> Real Time System Design. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: By completing this lab, students gained experience with designing and implementing device driver routines, building object-oriented abstractions for complex interfaces, integrating real-time inputs into an application, programming systems with real-time constraints, communication between cooperative processes, and controlling multiple real-time processes <ref> [6] </ref>. 16 Learning how to balance a pole: Another project, that involved building a minirobot with the same boards used in Walleye, focused on learning the classical control task on balancing a pole. Pole-balancing grew out of a classic dynamics problem (see e.g. [7]) and is a well-studied control-learning problem.
Reference: [7] <author> R. Cannon. </author> <title> Dynamics of Physical Systems. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1967. </year>
Reference-contexts: Pole-balancing grew out of a classic dynamics problem (see e.g. <ref> [7] </ref>) and is a well-studied control-learning problem. For the control-learning form of the problem the system must learn to keep a long rod or pole, hinged to a cart and free to fall in a plane, in a roughly vertical orientation by applying forces to the cart.
Reference: [8] <author> Dean Hougen, John Fischer, </author> <title> and Deva Johnam. A neural network pole-balancer that learns and operates on a real robot in real time. </title> <booktitle> In Proceedings of the MLC-COLT Workshop on Robot Learning, </booktitle> <year> 1994, </year> <pages> pages 73-80. 18 </pages>
Reference-contexts: The robot we built, PBMin (Pole Balancing Mini-robot), and the method used for learning is described at length in <ref> [8] </ref>. Since this is a much more advanced research project, it was done by a team including a graduate student and two undergraduates. PBMin uses two sensor inputs, the pole angle and the car position. The pole-angle sensor is a variable resistor attached to a common yard stick.
References-found: 8

