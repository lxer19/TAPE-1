URL: ftp://ftp.cs.umd.edu/pub/papers/papers/3693/3693.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Email: fjcpark, millerg@cs.umd.edu  
Title: Synthesizing Protocol Specifications from Service Specifications in Timed Extended Finite State Machines  
Author: Jun-Cheol Park Raymond E. Miller 
Date: September 23, 1996  
Address: College Park, MD 20742  
Affiliation: Department of Computer Science University of Maryland,  
Abstract: We propose a specification model and present a method to algorithmically derive a protocol specification from a service specification based on the model. Unlike the previous models based on finite state machines, the proposed model can explicitly express concur-rency, synchronization, and timing requirements such as delays and timeouts. We assume that there exists a reliable communication channel between any two protocol entities and the maximum delay for each channel is bounded by a positive constant. Because of the variable nature of the communication delays along with the time constraints associated with events, no protocol specification can fully simulate the service specification. The proposed method derives a protocol specification that is optimal in the sense that it provides the largest possible subset of the service specification under the communication delay constraints. We also give a method to derive a sub specification from a service specification and a maximum communication delay of each channel such that the sub specification, but no superset of it, can be simulated by the derived protocol specification.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. L. Probert and K. </author> <title> Saleh Synthesis of Communication Protocols: </title> <journal> Survey and Assessment IEEE Trans. Comput., </journal> <volume> vol. 40, no. 4, </volume> <pages> pp. 468-476, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: The process ends with a design that provides the set of specified services. Therefore, no further verification of the protocol design is necessary as in the analysis approach. Much research has been done in the area of protocol synthesis. The reader may refer to <ref> [1] </ref> for a survey and assessment of several synthesis methods. The synthesis methods can be fl This research was supported by NASA Grant No. NAG 5-2648 and NSF Grant No. NCR9506039. 1 classified by the modeling formalism.
Reference: [2] <author> P. M. Chu and M. T. </author> <title> Liu Synthesizing Protocol Specification from Service Specification in the FSM model Proc. </title> <booktitle> Comput. Networking Symp., </booktitle> <pages> pp. 173-182, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: The reader may refer to [1] for a survey and assessment of several synthesis methods. The synthesis methods can be fl This research was supported by NASA Grant No. NAG 5-2648 and NSF Grant No. NCR9506039. 1 classified by the modeling formalism. The models include finite state machines <ref> [2, 3, 7] </ref>, Petri nets [5], LOTOS-like models [8, 9], etc. However, these methods do not provide or represent the notion of time, which is important for the proper functioning of communication systems. Recently, a few methods [10, 11] have been proposed that derive protocol specifications from timed service specifications.
Reference: [3] <author> P. M. Chu and M. T. </author> <title> Liu Protocol Synthesis in a State-Transition Model Proc. </title> <booktitle> COMP-SAC'88, </booktitle> <pages> pp. 505-512, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: The reader may refer to [1] for a survey and assessment of several synthesis methods. The synthesis methods can be fl This research was supported by NASA Grant No. NAG 5-2648 and NSF Grant No. NCR9506039. 1 classified by the modeling formalism. The models include finite state machines <ref> [2, 3, 7] </ref>, Petri nets [5], LOTOS-like models [8, 9], etc. However, these methods do not provide or represent the notion of time, which is important for the proper functioning of communication systems. Recently, a few methods [10, 11] have been proposed that derive protocol specifications from timed service specifications.
Reference: [4] <author> P. Zafiropulo, C. H. West, H. Rudin, D. D. Cowan, and D. </author> <title> Brand Towards Analyzing and Synthesizing Protocols IEEE Trans. </title> <journal> Commun., </journal> <volume> vol. COM-28, no. 4, </volume> <pages> pp. 651-661, </pages> <month> April </month> <year> 1980. </year>
Reference-contexts: 1 Introduction There are two common approaches for designing communication protocols: analysis and synthesis <ref> [4] </ref>. In the analysis method, the protocol designer begins with a preliminary version of the protocol usually obtained by ad hoc methods. This approach usually results in an incomplete and erroneous design, which is followed by an analysis and redesign process.
Reference: [5] <author> H. Yamaguchi, K. Okano, T. Higashino, and K. </author> <title> Taniguchi Synthesis of Protocol Entities' Specifications from Service Specifications in a Petri net Model with Registers Proc. </title> <booktitle> IEEE Int'l Conf. Dist. Comp. Syst., </booktitle> <pages> pp. 510-517, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: The synthesis methods can be fl This research was supported by NASA Grant No. NAG 5-2648 and NSF Grant No. NCR9506039. 1 classified by the modeling formalism. The models include finite state machines [2, 3, 7], Petri nets <ref> [5] </ref>, LOTOS-like models [8, 9], etc. However, these methods do not provide or represent the notion of time, which is important for the proper functioning of communication systems. Recently, a few methods [10, 11] have been proposed that derive protocol specifications from timed service specifications.
Reference: [6] <author> W. A. Barrett and J. D. </author> <title> Couch Compiler Construction: </title> <note> Theory and Practice Chapter 3, </note> <institution> Science Research Associates, </institution> <year> 1979. </year>
Reference-contexts: If all the transitions and states except s f and s j are removed, then merge s f and s j into a single state s f;j . 4. Remove * transitions by the standard algorithm given in <ref> [6] </ref>. 1 If min t y &gt; max t y max 1xk fD in x ;i g, then the execution of f out y may not be possible under the delay constraint. 6 Lemma 2 Let P S i ; 1 i n, be the derived protocol specification from SS under
Reference: [7] <author> K. Saleh and R. L. </author> <title> Probert Automatic Synthesis of Protocol Specifications from Service Specifications Proc. </title> <journal> IEEE Phoenix Conf. Comput. and Commun., </journal> <pages> pp. 615-621, </pages> <month> March </month> <year> 1991. </year>
Reference-contexts: The reader may refer to [1] for a survey and assessment of several synthesis methods. The synthesis methods can be fl This research was supported by NASA Grant No. NAG 5-2648 and NSF Grant No. NCR9506039. 1 classified by the modeling formalism. The models include finite state machines <ref> [2, 3, 7] </ref>, Petri nets [5], LOTOS-like models [8, 9], etc. However, these methods do not provide or represent the notion of time, which is important for the proper functioning of communication systems. Recently, a few methods [10, 11] have been proposed that derive protocol specifications from timed service specifications.
Reference: [8] <author> C. Kant, T. Higashino, and G. v. </author> <title> Bochmann Deriving Protocol Specifications from Service Specifications Written in LOTOS Distributed Computing, </title> <journal> vol. </journal> <volume> 10, </volume> <pages> pp. 29-47, </pages> <year> 1996. </year>
Reference-contexts: The synthesis methods can be fl This research was supported by NASA Grant No. NAG 5-2648 and NSF Grant No. NCR9506039. 1 classified by the modeling formalism. The models include finite state machines [2, 3, 7], Petri nets [5], LOTOS-like models <ref> [8, 9] </ref>, etc. However, these methods do not provide or represent the notion of time, which is important for the proper functioning of communication systems. Recently, a few methods [10, 11] have been proposed that derive protocol specifications from timed service specifications.
Reference: [9] <author> R. </author> <title> Langerak Decomposition of Functionality: A Correctness-Preserving LOTOS Transformation Proc. X IFIP Symp. Protocol Specification, </title> <booktitle> Testing and Verification, </booktitle> <pages> pp. 229-242, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: The synthesis methods can be fl This research was supported by NASA Grant No. NAG 5-2648 and NSF Grant No. NCR9506039. 1 classified by the modeling formalism. The models include finite state machines [2, 3, 7], Petri nets [5], LOTOS-like models <ref> [8, 9] </ref>, etc. However, these methods do not provide or represent the notion of time, which is important for the proper functioning of communication systems. Recently, a few methods [10, 11] have been proposed that derive protocol specifications from timed service specifications.
Reference: [10] <author> A. Khoumsi, G. v. Bochmann, and R. </author> <title> Dssouli On Specifying Services and Synthesizing Protocols for Real-time Applications Proc. </title> <booktitle> XIV IFIP Symp. Protocol Specification, Testing and Verification, </booktitle> <pages> pp. 177-192, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: The models include finite state machines [2, 3, 7], Petri nets [5], LOTOS-like models [8, 9], etc. However, these methods do not provide or represent the notion of time, which is important for the proper functioning of communication systems. Recently, a few methods <ref> [10, 11] </ref> have been proposed that derive protocol specifications from timed service specifications. In [10], a model based on finite state machines has been proposed for specifying timing requirements by using a global clock, timers, and counters. <p> However, these methods do not provide or represent the notion of time, which is important for the proper functioning of communication systems. Recently, a few methods [10, 11] have been proposed that derive protocol specifications from timed service specifications. In <ref> [10] </ref>, a model based on finite state machines has been proposed for specifying timing requirements by using a global clock, timers, and counters. The method derives the protocol and medium specifications from a service specification written as a set of timed transitions. <p> For all other states s in a TEFSM, t (s) is defined to be the time when an incoming event e of s has occurred provided the machine has executed e to reach the state s. Definition 2 <ref> [10] </ref> A timed sequence S in a TEFSM M is a finite or infinite sequence of pairs &lt; e i ; t i &gt;, where t i &lt; t i+1 if host (e i ) = host (e i+1 ) and t i t i+1 otherwise and each pair &lt; e
Reference: [11] <author> A. Nakata, T. Higashino, and K. </author> <title> Taniguchi Protocol Synthesis from Timed and Structured Specifications Proc. </title> <booktitle> Int'l Conf. Network Protocols, </booktitle> <pages> pp. 74-81, </pages> <month> November </month> <year> 1995. </year> <month> 12 </month>
Reference-contexts: The models include finite state machines [2, 3, 7], Petri nets [5], LOTOS-like models [8, 9], etc. However, these methods do not provide or represent the notion of time, which is important for the proper functioning of communication systems. Recently, a few methods <ref> [10, 11] </ref> have been proposed that derive protocol specifications from timed service specifications. In [10], a model based on finite state machines has been proposed for specifying timing requirements by using a global clock, timers, and counters. <p> The method derives the protocol and medium specifications from a service specification written as a set of timed transitions. The model represents temporal requirements between remote as well as consecutive events, which necessarily introduces an exponential increase in the number of timers. On the other hand, <ref> [11] </ref> has proposed a model based on LOTOS that restricts the time constraints of service specifications while fixing the maximum delay of the communication media in the sense that the model can specify a complicated order of events in a structural way. <p> The main difference is that our model can express concurrency and synchronization among protocol entities explicitly while these previous models could not. For synthesis, we assume that each communication channel is error-free and has a propagation delay bounded by a constant, as in <ref> [11] </ref>. We present an algorithm that derives a protocol specification from a service specification modeled as a TEFSM when an upper bound of delay for each channel is given. The paper is organized as follows. Section 2 describes our TEFSM model.
Reference: [12] <author> C.-M. Huang and S.-W. </author> <title> Lee Timed Protocol Verification for Estelle-Specified Protocols ACM SIGCOMM Comput. </title> <journal> Commun. Review, </journal> <volume> vol. 25, no. 3, </volume> <pages> pp. 5-32, </pages> <month> July </month> <year> 1995. </year>
Reference-contexts: The lower and upper time limits are measured with respect to a global clock, and can thus be used in modeling timed properties including delays and timeouts. The notion of a timed transition is not new, and our model is in fact inspired by a few previous works <ref> [12, 13] </ref>. The main difference is that our model can express concurrency and synchronization among protocol entities explicitly while these previous models could not. For synthesis, we assume that each communication channel is error-free and has a propagation delay bounded by a constant, as in [11].
Reference: [13] <author> K. Naik and B. </author> <title> Sarikaya Protocol Conformance Test Case Verification Using Timed-Transitions Proc. </title> <booktitle> XIV IFIP Symp. Protocol Specification, Testing and Verification, </booktitle> <pages> pp. 98-113, </pages> <month> June </month> <year> 1994. </year> <month> 13 </month>
Reference-contexts: The lower and upper time limits are measured with respect to a global clock, and can thus be used in modeling timed properties including delays and timeouts. The notion of a timed transition is not new, and our model is in fact inspired by a few previous works <ref> [12, 13] </ref>. The main difference is that our model can express concurrency and synchronization among protocol entities explicitly while these previous models could not. For synthesis, we assume that each communication channel is error-free and has a propagation delay bounded by a constant, as in [11].
References-found: 13

