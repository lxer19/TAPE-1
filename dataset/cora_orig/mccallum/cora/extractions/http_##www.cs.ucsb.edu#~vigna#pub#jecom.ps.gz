URL: http://www.cs.ucsb.edu/~vigna/pub/jecom.ps.gz
Refering-URL: http://www.cs.ucsb.edu/~vigna/listpub.html
Root-URL: http://www.cs.ucsb.edu
Email: vigna@elet.polimi.it bonomi@cefriel.it  
Phone: Tel: +39-2-23993638 Tel: +39-2-239541  
Title: A Model-Centered Electronic Commerce Middleware  
Author: Giovanni Vigna Leonardo Bonomi 
Keyword: Electronic commerce, distributed applications, software development environments.  
Address: P.za Leonardo da Vinci 32 Via Fucini 2 20133 Milano, Italy 20133 Milano, Italy  
Affiliation: Politecnico di Milano CEFRIEL  
Abstract: As electronic business transactions over the Internet become more popular, users and markets pose new requirements on both electronic commerce services and the applications implementing them. These requirements include support for multiuser business protocols, cooperation among users, and real-time (multimedia) interaction. The development of this kind of electronic commerce applications is a complex, costly, and time-consuming activity. Electronic commerce middlewares are an approach to support the development of these applications by providing a set of commerce-oriented functionalities that can be integrated into an application. Nonetheless, these platforms provide little support or guidance during the conceptual design of the application. This paper presents Jecom, a new approach to the development of distributed, cooperative electronic commerce applications. Jecom defines an application reference model, based on roles and state transition diagrams; furthermore, the model is directly supported by a distributed middleware. This way, Jecom supports both the conceptual design and the implementation of complex electronic commerce applications. This integrated support reduces the time and costs of application development. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Coleman. </author> <title> Java Commerce: A Business Perspective. Sun Microsystem's White Paper, </title> <year> 1997. </year>
Reference-contexts: The characterization of the different parties (users and processes) involved, the way their interaction is managed, and the selection and composition of the available services are left in the hands of the developer. Examples of these systems are CommerceNet's Eco System [6], and Sun Microsystems's Java Electronic Commerce Framework <ref> [1] </ref>. Our approach to the development of electronic commerce applications extends the middleware approach in two ways. First, it defines a sound application model, oriented towards multi-user complex business protocols. The model provides a reference during the conceptual design of the application.
Reference: [2] <author> J. Gosling and H. McGilton. </author> <title> The Java Language Environment: A White Paper. </title> <type> Technical report, </type> <institution> Sun Microsystems, </institution> <month> October </month> <year> 1995. </year>
Reference-contexts: Both operations can be performed only if the user profile allows it. User profiles and other user-related information is stored in the User Directory. 1 To assure an adequate software portability, every middleware component, including the code corresponding to the application classes, has been implemented in pure Java <ref> [2] </ref>. 7 The interface presented to the user is dynamically built by the Front-End on the basis of the system status, the selected application class, the status of the selected application instance, and the role assumed by the user.
Reference: [3] <institution> IBM CommercePOINT. </institution> <note> http://www.internet.ibm.com/commercepoint, 1997. </note>
Reference-contexts: In fact, the development effort is usually limited to the structuring of product data into catalogs and to the design of parts of the graphical interface, such as banners and logos. Examples of this type of environments are Microsoft's Merchant Server 1.0 [4], IBM's CommercePOINT <ref> [3] </ref>, and Open Market's Transact [5]. Even though these systems are suitable for simple applications, they fail in supporting the development of electronic commerce applications involving several parties and characterized by complex business models. Middleware platforms aim at overcoming the customware approach, supporting the development of complex electronic commerce applications.
Reference: [4] <institution> Microsoft Merchant Server. </institution> <note> http://www.microsoft.com/merchant/, 1997. </note>
Reference-contexts: In fact, the development effort is usually limited to the structuring of product data into catalogs and to the design of parts of the graphical interface, such as banners and logos. Examples of this type of environments are Microsoft's Merchant Server 1.0 <ref> [4] </ref>, IBM's CommercePOINT [3], and Open Market's Transact [5]. Even though these systems are suitable for simple applications, they fail in supporting the development of electronic commerce applications involving several parties and characterized by complex business models.
Reference: [5] <author> Open Market Transact. </author> <note> http://www.openmarket.com/transact/, 1997. </note>
Reference-contexts: Examples of this type of environments are Microsoft's Merchant Server 1.0 [4], IBM's CommercePOINT [3], and Open Market's Transact <ref> [5] </ref>. Even though these systems are suitable for simple applications, they fail in supporting the development of electronic commerce applications involving several parties and characterized by complex business models. Middleware platforms aim at overcoming the customware approach, supporting the development of complex electronic commerce applications.
Reference: [6] <author> J.M. Tenenbaum, T.S. Chowdhry, and K. Hughes. </author> <title> Eco system: An internet commerce architecture. </title> <booktitle> IEEE Computer, </booktitle> <month> May </month> <year> 1997. </year> <month> 13 </month>
Reference-contexts: The characterization of the different parties (users and processes) involved, the way their interaction is managed, and the selection and composition of the available services are left in the hands of the developer. Examples of these systems are CommerceNet's Eco System <ref> [6] </ref>, and Sun Microsystems's Java Electronic Commerce Framework [1]. Our approach to the development of electronic commerce applications extends the middleware approach in two ways. First, it defines a sound application model, oriented towards multi-user complex business protocols. The model provides a reference during the conceptual design of the application.
References-found: 6

