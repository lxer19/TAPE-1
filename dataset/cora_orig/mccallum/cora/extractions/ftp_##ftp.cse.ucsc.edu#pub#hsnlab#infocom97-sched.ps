URL: ftp://ftp.cse.ucsc.edu/pub/hsnlab/infocom97-sched.ps
Refering-URL: http://www.cse.ucsc.edu/research/hsnlab/publications/publications_sorted_by_subject.html
Root-URL: http://www.cse.ucsc.edu
Title: A General Methodology for Designing Efficient Traffic Scheduling and Shaping Algorithms  
Author: Dimitrios Stiliadis Anujan Varma 
Address: Holmdel, NJ 07733  Santa Cruz, CA 95064  
Affiliation: Bell Laboratories Lucent Technologies  Computer Engineering Department University of California  
Abstract: We introduce a general methodology for designing integrated shaping and scheduling algorithms for packet networks that provide fairness, low end-to-end delay, and low burstiness. The methodology is based on integrating a shaping mechanism with a scheduler from the class of Rate-Proportional Servers (RPS) defined in [10]. The resulting algorithms provide an end-to-end delay bound identical to that of Weighted Fair Queueing. Their worst-case fairness, in terms of minimizing the worst-case delay to empty the session backlog, is much superior to that of Weighted Fair Queueing, and equal to the best known for any scheduling algorithm. In addition, the algorithms achieve a level of fairness in the distribution of free bandwidth among competing sessions better than that of Weighted Fair Queueing. We show that, under this framework, even an unfair scheduling algorithm belonging to the RPS class, such as VirtualClock, can yield worst-case fairness identical to that obtained with Weighted Fair Queueing. We also develop an integrated shaper-scheduler that provides optimal output burstiness and is attractive for use in both network adapters and in switches that support traffic re-shaping. We describe an efficient implementation of this integrated shaping and scheduling algorithm with log 2 (V ) complexity, where V is the number of sessions sharing the outgoing link. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. C. R. Bennett and H. Zhang, </author> <title> "WF 2 Q: Worst-case Fair Weighted Fair Queueing," </title> <booktitle> in Proceedings of IEEE INFOCOM 96, </booktitle> <pages> pp. 120-128, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: The latter, in turn, is optimal when the packet size is fixed <ref> [1] </ref>. The worst-case fairness can be seen as a measure of how closely the packet-by-packet scheduler approximates a fluid-model server where each session is served at each instant with a rate equal to its allocated rate i . <p> Note that the worst-case fairness index of (L max =r) + L i = i L i =r given by the theorem is identical to that of WF 2 Q <ref> [1] </ref>. Thus, the worst-case fairness of WF 2 Q can be obtained with a simple Rate-Proportional Server such as VirtualClock. For the case of an ATM network, the WFI becomes L= i , the best achievable in a packet-by-packet server. V.
Reference: [2] <author> A. Demers, S. Keshav, and S. Shenker, </author> <title> "Analysis and simulation of a fair queueing algorithm," Internetworking: </title> <journal> Research and Experience, </journal> <volume> vol. 1, no. 1, </volume> <pages> pp. 3-26, </pages> <year> 1990. </year>
Reference: [3] <author> D. Ferrari and D. Verma, </author> <title> "A scheme for real-time channel establishment in wide-area networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 8, </volume> <pages> pp. 368-379, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: To our knowledge this is the first implementation of a shaper-scheduler with O (log 2 V ) complexity and optimal output burstiness. Our design can also be used to implement a rate-controlled server in a switch, as described in [4], and be used with other schedulers such as Delay-EDD <ref> [3] </ref>. II. Preliminaries A. Definitions and Notations We assume a packet switch where a set of V connections share a common outgoing link. The terms connection, flow, and session will be used synonymously.
Reference: [4] <author> L. Georgiadis, R. Guerin, V. Peris, and K. N. Sivarajan, </author> <title> "Efficient network QoS provisioning based on per node traffic shaping," </title> <booktitle> in Proceedings of IEEE INFOCOM '96, </booktitle> <pages> pp. 102-110, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: This implementation combines the VirtualClock algorithm with our shaping mechanism. To our knowledge this is the first implementation of a shaper-scheduler with O (log 2 V ) complexity and optimal output burstiness. Our design can also be used to implement a rate-controlled server in a switch, as described in <ref> [4] </ref>, and be used with other schedulers such as Delay-EDD [3]. II. Preliminaries A. Definitions and Notations We assume a packet switch where a set of V connections share a common outgoing link. The terms connection, flow, and session will be used synonymously.
Reference: [5] <author> S. Golestani, </author> <title> "A self-clocked fair queueing scheme for broadband applications," </title> <booktitle> in Proceedings of IEEE INFOCOM '94, </booktitle> <pages> pp. 636-646, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: Interested readers are referred to [16] for a detailed proof. When the maximum packet size is identical for all sessions, the right-hand side of this equation reduces to 3 max (1= i ; 1= j )L max : On comparing with the corresponding fairness parameter of Self-Clocked Fair Queueing <ref> [5] </ref>, we note that the service fairness of Shaped SPFQ is within a constant factor of 3.
Reference: [6] <author> S. Golestani, </author> <title> "Network delay analysis of a class of fair queueing algorithms," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 13, </volume> <pages> pp. 1057-70, </pages> <month> August </month> <year> 1995. </year>
Reference: [7] <author> S. Keshav, </author> <title> "A control-theoretic approach to flow control," </title> <booktitle> in Proceedings of ACM SIGCOMM'91, </booktitle> <pages> pp. 3-15, </pages> <month> September </month> <year> 1991. </year>
Reference: [8] <author> A. Parekh, </author> <title> A Generalized Processor Sharing Approach to Flow Control in Integrated Services Networks. </title> <type> Ph.D. thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <year> 1992. </year>
Reference: [9] <author> A. K. Parekh and R. G. Gallager, </author> <title> "A generalized processor sharing approach to flow control | the single node case," </title> <booktitle> in Proceedings of IEEE INFOCOM '92, </booktitle> <volume> vol. 2, </volume> <pages> pp. 915-924, </pages> <month> May </month> <year> 1992. </year>
Reference: [10] <author> D. Stiliadis and A. Varma, </author> <title> "Design and analysis of Frame-based Fair Queueing: A new traffic scheduling algorithm for packet-switched networks," </title> <booktitle> in Proceedings of ACM SIGMETRICS '96, </booktitle> <pages> pp. 104-115, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: Thus, if we represent the total amount of service received by each session by a function, then these functions can be seen to grow at the same rate for each backlogged session. In <ref> [10] </ref>, we introduced such a function to represent the state of each connection in a scheduler and called it connection potential. The potential of a connection is a non-decreasing function of time during a system-busy period. <p> Frame-based Fair Queueing (FFQ) and Starting Potential based Fair Queueing (SPFQ) are two example algorithms based on the class of Rate Proportional Servers <ref> [10] </ref>, [12]. Both algorithms maintain the system potential function only as an approximation of the actual global state in the fluid model, but re-calibrate the system potential periodically to correct any discrepancies. III. Shaped Rate-Proportional Servers (SRPS) of schedulers. <p> The addition of the shaping mechanism affects the arrival pattern at the scheduler. The result is improved fairness in the multiplexing of session traffic. However, we will now show that the worst-case service offered by the scheduler is not affected by the addition of the shaping function. In <ref> [10] </ref>, we showed that every fluid-model RPS is an LR server with Fig. 2. An RPS scheduler with and without shaping. The busy periods seen by both schedulers are identical. zero latency. <p> The time to clear the backlog at time t in the fluid server is thus given by d F i (t) = t fl t. The packet sever may lag the fluid server at most by the transmission time of one packet <ref> [10] </ref>. <p> V. Fairness of Shaped Rate Proportional Servers The Service Fairness of any SRPS depends on the method of calculation of the system potential function. The degree of short-term unfairness of the algorithm depends on the difference between the system potential and the potentials of backlogged connections at any time <ref> [10] </ref>. In an idealized fluid server it is possible to update the system potential at any instant of time. However, in a packet-by-packet server it is desirable to update the system potential only when a packet departs from the system. <p> VIII. Conclusion In this paper, we introduced a general methodology for the design of fair scheduling algorithms by combining a shaping mechanism with a scheduling algorithm from the class of Rate-Proportional Servers <ref> [10] </ref>, [11]. These algorithms provide a delay bound equal to that of Weighted Fair Queueing and superior fairness properties at a much lower complexity of implementation. We described two specific algorithms from this class of Shaped Rate-Proportional Servers, namely Shaped VirtualClock and Shaped SPFQ.
Reference: [11] <author> D. Stiliadis and A. Varma, </author> <title> "Rate-Proportional Servers: A design methodology for fair queueing algorithms." </title> <journal> submitted to IEEE/ACM Transactions on Networking, </journal> <note> January 1996 (http://www.cse.ucsc.edu/ research/hsnlab/publications/). </note>
Reference-contexts: In addition, if the difference between the system potential and the potential of every backlogged connection is bounded, then the server is fair and its fairness can be estimated in terms of this difference <ref> [11] </ref>. Frame-based Fair Queueing (FFQ) and Starting Potential based Fair Queueing (SPFQ) are two example algorithms based on the class of Rate Proportional Servers [10], [12]. <p> VIII. Conclusion In this paper, we introduced a general methodology for the design of fair scheduling algorithms by combining a shaping mechanism with a scheduling algorithm from the class of Rate-Proportional Servers [10], <ref> [11] </ref>. These algorithms provide a delay bound equal to that of Weighted Fair Queueing and superior fairness properties at a much lower complexity of implementation. We described two specific algorithms from this class of Shaped Rate-Proportional Servers, namely Shaped VirtualClock and Shaped SPFQ.
Reference: [12] <author> D. Stiliadis and A. Varma, </author> <title> "Efficient fair-queueing algorithms for ATM and packet networks." </title> <journal> submitted to IEEE/ACM Transactions on Networking, </journal> <note> January 1996 (http://www.cse.ucsc.edu/research/hsnlab/ publications/). </note>
Reference-contexts: Different algorithms in this new class may have different fairness according to the service fairness index. When the scheduler used is Starting Potential-based Fair Queueing (SPFQ) <ref> [12] </ref>, however, we show that the resulting algorithm has service fairness index superior to that of WFQ, and comparable to that of Self-Clocked Fair Queueing (within a constant factor of three). <p> Frame-based Fair Queueing (FFQ) and Starting Potential based Fair Queueing (SPFQ) are two example algorithms based on the class of Rate Proportional Servers [10], <ref> [12] </ref>. Both algorithms maintain the system potential function only as an approximation of the actual global state in the fluid model, but re-calibrate the system potential periodically to correct any discrepancies. III. Shaped Rate-Proportional Servers (SRPS) of schedulers. <p> Furthermore, it is advantageous to update the system potential based on only information extracted from the packet-by-packet implementation of the algorithm. The Starting Potential-based Fair Queueing algorithm proposed in <ref> [12] </ref>, and independently in [15] under the name WF 2 Q+, is a special case of Rate Proportional Servers. The system-potential function in SPFQ is defined as follows: When the system is not busy the system potential function is equal to zero. <p> This value can be obtained by maintaining the starting-potential values of backlogged connections in a separate priority list. Although the starting potentials in Eq. (5.3) are defined with reference to the fluid server, simulation of the fluid server can be avoided by taking advantage of a result from <ref> [12] </ref>: If the starting potential of every backlogged session in the packet server is greater than or equal to S P (t) at time t, then the potential of each backlogged session in the corresponding fluid server at time t is also greater than or equal to S P (t).
Reference: [13] <author> D. Stiliadis and A. Varma, </author> <title> "Latency-Rate servers: A general model for analysis of traffic scheduling algorithms," </title> <booktitle> in Proceedings of IEEE INFOCOM '96, </booktitle> <pages> pp. 111-119, </pages> <month> April </month> <year> 1996. </year>
Reference-contexts: That is, A i (t 1 ; t) i (t t 1 ): A session busy period is the maximal interval of time during which if the session were serviced at exactly the guaranteed rate, it would remain continuously backlogged. In <ref> [13] </ref>, we introduced a general model for traffic scheduling algorithms, called Latency-Rate (LR) servers. Any server in this class is characterized by two parameters: latency fi i and minimum allocated rate i . The following worst-case bound on the behavior of a LR-server was shown in [13] when the arrivals or <p> In <ref> [13] </ref>, we introduced a general model for traffic scheduling algorithms, called Latency-Rate (LR) servers. Any server in this class is characterized by two parameters: latency fi i and minimum allocated rate i . The following worst-case bound on the behavior of a LR-server was shown in [13] when the arrivals or session i are shaped by a leaky bucket with parameters ( i ; i ). <p> For a detailed explanation of the above result, the interested reader is referred to <ref> [13] </ref>. B. Potential Functions The GPS scheduler provides ideal fairness by offering the same normalized service to all backlogged connections at every instant of time. <p> Therefore, the shaper-scheduler combination can be thought of as a single LR-server with zero latency. We can thus arrive at the main result of this section: Corollary 1: A Shaped Rate-Proportional Server is an LR-server with zero latency. Thus, from the theory of Latency-Rate Servers <ref> [13] </ref>, we can conclude that the packet version of SRPS will have a delay bound identical to that of a simple RPS, which, in turn, is equal to that of Weighted Fair Queueing. IV. <p> Furthermore, the service fairness of Weighted Fair Queueing has been shown to be <ref> [13] </ref> max (C j + i L j ; C i + j L i ); where C i = min ((V 1) i 1nV L n )): Thus, it is easy to note that the service fairness index of WFQ is determined by the minimum among the bandwidth allocations of <p> Proof: By Lemma 5, the input traffic to the VirtualClock scheduler can be seen as leaky-bucket shaped with a bucket size of i = 0. Therefore, from the general result for output burstiness of LR servers <ref> [13] </ref>, we have out = i + i ( i L max ) = L i + i ( r In the case of an ATM network, the expression for bursti-ness reduces to L (1 + i =r).
Reference: [14] <author> L. Zhang, "VirtualClock: </author> <title> a new traffic control algorithm for packet switching networks," </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> vol. 9, </volume> <pages> pp. 101-124, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: VI. Shaped VirtualClock Perhaps the simplest implementation of SRPS is obtained when VirtualClock <ref> [14] </ref> is used as the underlying Rate-Proportional Server. Since the system-potential function in VirtualClock is the real time itself, the shaping and scheduling functions in the Shaped VirtualClock server can operate independently, except for sharing a common real-time clock.
Reference: [15] <author> J. C. R. Bennett and H. Zhang, </author> <title> "Hierarchical packet fair queueing algorithms," </title> <booktitle> in Proceedings of ACM SIGMETRICS 96, </booktitle> <pages> pp. 143|156, </pages> <month> September </month> <year> 1996. </year>
Reference-contexts: Furthermore, it is advantageous to update the system potential based on only information extracted from the packet-by-packet implementation of the algorithm. The Starting Potential-based Fair Queueing algorithm proposed in [12], and independently in <ref> [15] </ref> under the name WF 2 Q+, is a special case of Rate Proportional Servers. The system-potential function in SPFQ is defined as follows: When the system is not busy the system potential function is equal to zero.
Reference: [16] <author> D. Stiliadis and A. Varma, </author> <title> "A General Methodology for Designing Efficient Traffic Scheduling and Shaping Algorithms," </title> <type> Tech. Rep., </type> <institution> U.C. Santa Cruz, </institution> <month> May </month> <year> 1996. </year> <note> Available from http://www.cse.ucsc.edu/research/hsnlab/publications/. </note>
Reference-contexts: The above bound applies to a packet server. Interested readers are referred to <ref> [16] </ref> for a detailed proof.
References-found: 16

