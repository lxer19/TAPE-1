URL: ftp://coast.cs.purdue.edu/pub/doc/firewalls/Marcus_Ranum_Network_Firewall.ps.Z
Refering-URL: http://www.cs.purdue.edu/coast/archive/data/categ17.html
Root-URL: http://www.cs.purdue.edu
Email: mjr@dco.dec.com  
Title: A Network Firewall  
Author: Marcus J. Ranum 
Date: June 12, 1992  
Address: Greenbelt, MD  
Affiliation: Digital Equipment Corporation Washington Open Systems Resource Center,  
Abstract: Information is the lifeblood of the computer age, and network connectivity is crucial to day-to-day business. Connecting a private, corporate network to the Internet is not acceptable without some form of secure gateway acting as a firewall between the two networks, to prevent miscreants and unwelcome visitors from accessing hosts on the private network. In the case of a software or hardware vendor, source code, CAD diagrams, and other product-specific information must be kept secret. Hospitals and insurance companies, that maintain confidential information, or pharmaceutical research labs with patent applications cannot afford to take chances with data theft. A break-in over the network could do incalculable damage in a very short time. Digital has implemented several gateways between its corporate network and the Internet, which provide a high degree of access while maintaining excellent security. The gateways are composed of multiple machines acting together, and a specially configured packet-screening machine that provides discretionary TCP/IP access control. Software is configured across the gateways to provide transparent USENET, SMTP mail, FTP, and name service, while preventing direct connections between internal machines and external machines. This paper discusses the overall configuration, software used, and some of the security measures that are in place. These three gateways have been in operation for over six years, and to date no (discovered) break-in has occurred. The importance of the gateways is hard to estimate, since it provides a crucial link between Digital sales and their customers, as well as maintaining an important presence on the network. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Jeff Mogul, </author> <title> Simple and Flexible Datagram Access Controls for UNIX-based Gateways, </title> <booktitle> USENIX proceedings, </booktitle> <month> Feb </month> <year> 1989 </year>
Reference: [2] <author> Wietse Venema, log_tcp, </author> <note> USENET archives, comp.sources.misc Volume 23, Issue 77, </note> <month> Oct </month> <year> 1991 </year>
Reference-contexts: The ``wrapper'' program checks the origin of all incoming TCP connections that come in though the Internet, and checks a simple access control list that causes the service request to be either denied or accepted <ref> [2] </ref>. Both Gatekeeper and Gate are set up to deny network login attempts from any host that is not on the private network, with Gate being limited to accepting telnet connections for a small list of trusted hosts.
Reference: [3] <author> Bill Cheswick, </author> <title> The Design of a Secure Internet Gateway, </title> <booktitle> USENIX proceedings -see also- Bill Cheswick, </booktitle> <editor> Steven Bellovin, and Doug McIlroy, </editor> <booktitle> communications on USENET newsgroup Sun-nets, </booktitle> <month> Apr </month> <year> 1991 </year> <month> - May </month> <year> 1991 </year>
Reference-contexts: This tends to create what Bill Cheswick refers to as ``a sort of crunchy shell around a soft, chewy center'' <ref> [3] </ref> where the network is extremely hard to penetrate, but is lax in security inside. For Digital's internal internet, with over 30,000 nodes running TCP/IP it is not reasonable to assume that they are all secure - the shell needs to be very crunchy indeed. 3.
Reference: [4] <author> Smoot Carl-Mitchell, and John Quarterman, </author> <title> Building Internet Firewalls, UNIX World, </title> <month> Feb, </month> <year> 1992. </year>
Reference-contexts: Existing Practice, Different Approaches, and Tar Baby Several papers have been published that describe various approaches to configuring network firewalls. Most of them advocate using a commercial router that permits screening within the router <ref> [4] </ref> [5]. These configurations can be made very secure, but in the event that the router is compromised, the network can be reconfigured such that the screening is disabled and the private network is completely exposed. It may take some time to detect if this occurs.
Reference: [5] <author> Simson Garfinkel and Gene Spafford, </author> <title> Practical UNIX Security, </title> <publisher> O'Reilly and Associates, </publisher> <month> June </month> <year> 1991 </year>
Reference-contexts: Existing Practice, Different Approaches, and Tar Baby Several papers have been published that describe various approaches to configuring network firewalls. Most of them advocate using a commercial router that permits screening within the router [4] <ref> [5] </ref>. These configurations can be made very secure, but in the event that the router is compromised, the network can be reconfigured such that the screening is disabled and the private network is completely exposed. It may take some time to detect if this occurs.
Reference: [6] <author> Bill Cheswick, </author> <title> An evening with Berferd in which a cracker is Lured, </title> <booktitle> Endured, and Studied, USENIX proceedings, </booktitle> <month> Jan 20, </month> <year> 1992 </year>
Reference-contexts: The AT&T approach permits more general access, which would not be in line with Digital corporate policy for exporting data. Some functionality from the AT&T gateway was added to the Digital gateway <ref> [6] </ref>. This functionality consists of a variety of ``sucker traps'' for the unwary systems cracker. Rather than simply serving as a form of cheap humor, ``sucker traps'' are a useful tool for telling the systems administrator that they are actually being probed.
Reference: [7] <author> Alec David Muffett, </author> <title> crack - The Password Cracker, USENET archives, </title> <journal> comp.sources.misc, </journal> <volume> Volume 22, Issue 49, </volume> <month> Aug </month> <year> 1991 </year>
Reference: [8] <author> Bob Braden and Annette DeSchon, </author> <title> NSFnet Statistics Collection System NNStat, </title> <journal> USC Information Sciences Institute, </journal> <note> published on USENET archives, </note> <month> Mar, </month> <year> 1991 </year>
Reference-contexts: The feasibility of making the entire gateway software reside on a bootable CDROM or other fixed media is being examined as a possible means of eliminating worries about trojan horses and easing release control of the software. The gateways presently have a system running NNStat <ref> [8] </ref> that gathers statistics about IP traffic over the network link. Based on findings by Steven Bellovin [9] the statistics-gathering configuration will probably be extended to look for ``mystery packets'' and flag their apparent sources. 10.
Reference: [9] <author> Steven M. Bellovin, </author> <title> Packets found on an Internet, </title> <institution> AT&T Bell Labs, </institution> <note> published on internet archives research.att.com, </note> <month> May, </month> <year> 1992. </year>
Reference-contexts: The gateways presently have a system running NNStat [8] that gathers statistics about IP traffic over the network link. Based on findings by Steven Bellovin <ref> [9] </ref> the statistics-gathering configuration will probably be extended to look for ``mystery packets'' and flag their apparent sources. 10. Conclusions Experience managing the Digital gateway encourages the author to attempt to list a few important rules derived for managing a gateway: Keep the users off the actual gateway machines.
References-found: 9

