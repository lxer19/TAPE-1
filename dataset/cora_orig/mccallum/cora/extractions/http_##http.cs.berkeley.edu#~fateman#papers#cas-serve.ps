URL: http://http.cs.berkeley.edu/~fateman/papers/cas-serve.ps
Refering-URL: http://www.cs.berkeley.edu/~fateman/htest.html
Root-URL: 
Title: Network Servers for Symbolic Mathematics  
Author: Richard J. Fateman 
Date: December 9, 1996  
Affiliation: University of California, Berkeley  
Abstract: We describe advantages to using network socket facilities for communication and distributed computing from the perspective of symbolic mathematics systems. For some applications, an easily constructed Lisp server model provides a flexible portal between computer algebra and other programs, and one need not use new languages or new systems or write new stand-alone web-specific cgi-bin applications. Such socket programs can use, if necessary, HTML as a common transport encoding, but more efficient means are possible. We show that, rather than distributing all information to each computer algebra user's system, it makes sense to consider networking for accessing tables of information maintained at one or a few sites. Finally, we mention some consequences of the economic value of computation.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Berners-Lee, R. Caillaiau, A. Luotonen, H.F. Nielsen, A. </author> <title> Secret. "The World-Wide Web," </title> <type> CACM 37 (8), </type> <year> 1994 </year> <month> 76|82. </month>
Reference-contexts: a specific example for distributed statistical decision support via remote software modules is described by Gunther et al. [5]. 2.1 Internet Sockets and Lisp The architecture we use in our experiments is a UNIX 11 process which is actually a Lisp program that listens on a particular internet (or WWW <ref> [1] </ref>) port for queries. Another computer can choose to read and write to this program by connecting to that port via tcp/ip from anywhere on the internet. <p> The appearance of special function names is one instance of this; we are also interested in providing answers requiring CAS to deal with domain restrictions such as "integer n &gt; 1 and Real z in <ref> [1; 1] </ref>".
Reference: [2] <author> T. Einwohner and R. Fateman, </author> <title> Automated Integral Tables, </title> <booktitle> ISSAC '95. </booktitle>
Reference-contexts: We hope the availability of useful results from TILU <ref> [2] </ref> will encourage such adoption, but that is a separate story. <p> It would certainly be silly to set up a server that took strings like "2+2" and returned "4". We divide good reasons into unique capabilities, and convenience. 3.1 Unique Capabilities Here are some examples of plausible uses. 7 Integration lookup As previously reported <ref> [2] </ref>, we have produced a pro-gram named TILU that can rapidly look up integral expressions given to it, based on similarities to expressions gleaned from printed as well as electronic compilations of formulas.
Reference: [3] <institution> Reduce differential equation mail server. (sci.math.symbolic announcement) </institution>
Reference: [4] <author> Gradshteyn and Rhyzik. </author> <title> Table of Integrals, Series, and Products Academic Press (5th edition), </title> <note> (also CDROM) 1996. </note>
Reference-contexts: In further work, we expect that we will see expansion of the particular integral server table, through manually entering new formulas, reading printed tables by OCR, and generating formulas algorithmically by various generating methods. We are especially interested in the CD-ROM produced by Academic Press of its Gradshteyn/Rhyzik reference <ref> [4] </ref> which includes T E X style data. While this is not ideal as input, it represents a post-OCR stage that can aid our efforts to digitize the formulas. 8 Highlights of Ancient History Some of the earliest hosts on the Arpanet provided computer algebra service under timesharing.
Reference: [5] <author> O. Gunther, R. Muller P. Schmidt, H. Bhargava, R. Krishnan. </author> <month> "MMM: </month>
Reference-contexts: We have implemented the first, second, and (partially) the third. Others have explored and continue to explore the territory of WWW use. For example a generalized scheme with a specific example for distributed statistical decision support via remote software modules is described by Gunther et al. <ref> [5] </ref>. 2.1 Internet Sockets and Lisp The architecture we use in our experiments is a UNIX 11 process which is actually a Lisp program that listens on a particular internet (or WWW [1]) port for queries.
References-found: 5

