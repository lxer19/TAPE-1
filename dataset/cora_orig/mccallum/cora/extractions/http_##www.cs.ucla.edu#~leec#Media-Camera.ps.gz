URL: http://www.cs.ucla.edu/~leec/Media-Camera.ps.gz
Refering-URL: http://www.cs.ucla.edu/~leec/pub.html
Root-URL: http://www.cs.ucla.edu
Title: Media Architecture: General Purpose vs. Multiple Application-Specific Programmable Processor  
Author: Chunho Leey, Johnson Kinz, Miodrag Potkonjaky and William H. Mangione-Smithz 
Affiliation: yComputer Science Department, UCLA, zElectrical Engineering Department, UCLA  
Abstract: In this paper we report a framework that makes it possible for a designer to rapidly explore the application-specific programmable processor design space under area constraints. The framework uses a production-quality compiler and simulation tools to synthesize a high performance machine for an application. Using the framework we evaluate the validity of the fundamental assumption behind the development of application-specific programmable processors. Application-specific processors are based on the idea that applications differ from each other in key architectural parameters, such as the available instruction-level parallelism, demand on various hardware components (e.g. cache memory units, register files) and the need for different number of functional units. We found that the framework introduced in this paper can be valuable in making early design decisions such as area and architectural trade-off, cache and instruction issue width trade-off under area constraint, and the number of branch units and issue width. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> G. Araujo, A. Sudarsanam, and S. Malik. </author> <title> Instruction set design and optimizations for address computation in DSP architectures. </title> <booktitle> In Proceedings of International Symposium on System Synthesis, </booktitle> <pages> pages 102107, </pages> <year> 1996. </year>
Reference-contexts: Comprehensive surveys of the works on computer-aided design of application-specific programmable processors can be found in [11, 26, 27]. In particular, a great deal of effort has been made in combining retargetable compilation technologies and design of instruction sets <ref> [1, 21, 22, 23, 30] </ref>. Several research groups have published results on the topic of selecting and designing instruction set and processor architecture for particular application domains [18, 33].
Reference: [2] <author> D. C. Argyres. </author> <title> Performance and cost analysis of the execution stage of superscalar microprocessors. </title> <type> Master's thesis, </type> <institution> Department of Computer Science, University of Illinois, Urbana IL, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: It enables a designer to evaluate the trade-off between area and generality of possible designs. 3 Experiment Platform To estimate the cost of a machine configuration, we adopt a simple model described in <ref> [2] </ref>. Given the area of the issue unit, the cost of any machine configuration is a linear function of the number of function units for branch, memory, and ALU operations.
Reference: [3] <author> S. Banerjia, W. A. Havanki, and T. M. Conte. </author> <title> Treegion scheduling for highly parallel processors. </title> <booktitle> In Euro-Par, </booktitle> <address> Passau, Germany, </address> <year> 1997. </year>
Reference-contexts: Recent advances in compiler technology and microprocessor architecture for instruction-level parallelism (ILP) have significantly increased the ability of microprocessors to exploit the opportunities for parallel execution that exist in many programs. Key ILP compiler technologies, such as trace scheduling [8], superblock scheduling [24], tree-scheduling <ref> [3] </ref>, hyperblock scheduling [25] and software pipelining [15] are in the process of migrating from research labs to product groups. Commercial microprocessor manufacturers have introduced a number of products based on new ar chitectures that present hardware structures that are well matched to ILP compilers.
Reference: [4] <author> P. P. Chang, S. A. Mahlke, W. Y. Chen, N. J. Warter, and W. m. W. Hwu. </author> <title> IMPACT: An architectural framework for multiple-instruction-issue processors. </title> <booktitle> In International Symposium on Computer Architecture, </booktitle> <year> 1991. </year>
Reference-contexts: The collection, known as Media-Bench is composed of 21 applications culled from available image processing, communications, cryptography and DSP applications. A brief summary of benchmarks used is shown in Table 2. More detailed descriptions of the benchmarks can be found in [19]. We use the IMPACT tool suit <ref> [4] </ref> to collect performance measurements of benchmarks on various machine configurations. The IMPACT C compiler is a retargetable compiler with code optimization components especially developed for multiple-instruction-issue processors. The target machine for the IMPACT C can be described using the high-level machine description language (HMDES).
Reference: [5] <author> R. P. Colwell, R. P. Nix, J. J. O'Donnell, D. B. Papworth, and P. K. Rodman. </author> <title> A VLIW architecture for a trace scheduling compiler. </title> <booktitle> In Proceedings of ASPLOS-II, </booktitle> <pages> pages 180192, </pages> <year> 1982. </year>
Reference-contexts: Commercial microprocessor manufacturers have introduced a number of products based on new ar chitectures that present hardware structures that are well matched to ILP compilers. Architectural enhancements found in commercial products include predicated instruction execution, VLIW, split register files and multi-gauge arithmetic (or variable-width SIMD) <ref> [5, 12, 17, 32] </ref>. Most of the multimedia extensions of general-purpose processors also adopt similar architectural enhancements [20, 28]. The arrival of production quality ILP compilers and commercial DSPs with VLIW architecture stimulated the idea of so-called custom-fit processors [9].
Reference: [6] <author> T. Conte and W. Mangione-Smith. </author> <title> Determining cost-effective multiple issue processor designs. </title> <booktitle> In International Conference on Computer Design, </booktitle> <year> 1993. </year>
Reference-contexts: Early works in the area of processor architecture synthesis tended to employ ad hoc methods on small code kernels, in large part due to the lack of good retargetable compiler technology. Conte and Mangione-Smith <ref> [6] </ref> presented one of the first efforts that focused on large application codes written in high-level languages (SPEC). While they had a similar goal to ours, i.e. evaluating performance efficiency by including hardware cost, their evaluation approach was substantially different.
Reference: [7] <author> T. M. Conte, K. N. P. Menezes, and S. W. Sathaye. </author> <title> A technique to determine power-efficient, high-performance superscalar processors. </title> <booktitle> In Proceedings of the Twenty-Eighth Hawaii International Conference on System Sciences, </booktitle> <volume> volume 1, </volume> <pages> pages 324333, </pages> <year> 1995. </year>
Reference: [8] <author> J. A. Fisher. </author> <title> Trace scheduling: A technique for global microcode compaction. </title> <journal> IEEE Transactions on Computing, </journal> <volume> C-30:478490, </volume> <year> 1981. </year>
Reference-contexts: Recent advances in compiler technology and microprocessor architecture for instruction-level parallelism (ILP) have significantly increased the ability of microprocessors to exploit the opportunities for parallel execution that exist in many programs. Key ILP compiler technologies, such as trace scheduling <ref> [8] </ref>, superblock scheduling [24], tree-scheduling [3], hyperblock scheduling [25] and software pipelining [15] are in the process of migrating from research labs to product groups. Commercial microprocessor manufacturers have introduced a number of products based on new ar chitectures that present hardware structures that are well matched to ILP compilers.
Reference: [9] <author> J. A. Fisher, P. Faraboschi, and G. Desoli. </author> <title> Custom-fit processors: Letting applications define architectures. </title> <booktitle> In International Symposium on Microarchitec-tures, </booktitle> <address> Paris, France, </address> <year> 1996. </year>
Reference-contexts: Most of the multimedia extensions of general-purpose processors also adopt similar architectural enhancements [20, 28]. The arrival of production quality ILP compilers and commercial DSPs with VLIW architecture stimulated the idea of so-called custom-fit processors <ref> [9] </ref>. Researchers have argued that applications differ from each other in, for example, the available ILP, demand on various hardware components such as cache memory units, register files, and the number of functional units. <p> Conte and Mangione-Smith [6] presented one of the first efforts that focused on large application codes written in high-level languages (SPEC). While they had a similar goal to ours, i.e. evaluating performance efficiency by including hardware cost, their evaluation approach was substantially different. Fisher, Faraboschi and Desoli <ref> [9] </ref> studied the variability of applications-specific VLIW processors using a highly advanced and retargetable compiler. However, their study considered small program kernels rather than complete applications.
Reference: [10] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> New York, NY, </address> <year> 1979. </year>
Reference-contexts: We normalize the run time with respect to a baseline since we are not interested in the sum of run-times [16]. We use geometric mean to summarize the selected machines since we normalize the measurements [13]. We define the problem using more formal Garey-Johnson for mat <ref> [10] </ref>.
Reference: [11] <editor> G. Goossens, J. Van Praet, D. Lanneer, W. Geurts, , et al. </editor> <booktitle> Embedded software in real-time signal processing systems: design technologies. Proceedings of the IEEE, </booktitle> <address> 85(3):436454, </address> <month> March </month> <year> 1997. </year>
Reference-contexts: Since the early 90's, there have been a number of efforts related to the design of application-specific programmable processors and application-specific instruction sets. Comprehensive surveys of the works on computer-aided design of application-specific programmable processors can be found in <ref> [11, 26, 27] </ref>. In particular, a great deal of effort has been made in combining retargetable compilation technologies and design of instruction sets [1, 21, 22, 23, 30].
Reference: [12] <author> C. Hansen. </author> <booktitle> MicroUnity's MediaProcessor architecture. IEEE Micro, </booktitle> <address> 17:3441, </address> <year> 1997. </year>
Reference-contexts: Commercial microprocessor manufacturers have introduced a number of products based on new ar chitectures that present hardware structures that are well matched to ILP compilers. Architectural enhancements found in commercial products include predicated instruction execution, VLIW, split register files and multi-gauge arithmetic (or variable-width SIMD) <ref> [5, 12, 17, 32] </ref>. Most of the multimedia extensions of general-purpose processors also adopt similar architectural enhancements [20, 28]. The arrival of production quality ILP compilers and commercial DSPs with VLIW architecture stimulated the idea of so-called custom-fit processors [9].
Reference: [13] <author> J. L. Hennessy and D. A. Patterson. </author> <title> Computer Architecture: A Quantitative Approach. </title> <publisher> Morgan Kaufman, </publisher> <address> San Francisco, CA, </address> <year> 1993. </year>
Reference-contexts: We normalize the run time with respect to a baseline since we are not interested in the sum of run-times [16]. We use geometric mean to summarize the selected machines since we normalize the measurements <ref> [13] </ref>. We define the problem using more formal Garey-Johnson for mat [10].
Reference: [14] <author> R. D. Hof and O. </author> <title> Port. Silicon dreams. </title> <booktitle> Business Week International Edition, </booktitle> <month> May 13 </month> <year> 1996. </year>
Reference-contexts: 1 Introduction Since 1992, microprocessors account for 23% of total semiconductor sales. By 1998, these chips will account for 27% of total sales, estimated at $242 billion by an industry expert <ref> [14] </ref>. The increasing share of microprocessors in semiconductor market is due to a new phase of silicon integration, thanks mainly to deep submicron fabrication technology.
Reference: [15] <author> P. Y. Hsu. </author> <title> Highly concurrent scalar processing. </title> <type> Technical Report CSG-49, </type> <institution> Coordinated Science Laboratory, University of Illinois at Urbana-Champaign, </institution> <year> 1986. </year>
Reference-contexts: Key ILP compiler technologies, such as trace scheduling [8], superblock scheduling [24], tree-scheduling [3], hyperblock scheduling [25] and software pipelining <ref> [15] </ref> are in the process of migrating from research labs to product groups. Commercial microprocessor manufacturers have introduced a number of products based on new ar chitectures that present hardware structures that are well matched to ILP compilers.
Reference: [16] <author> R. Jain. </author> <title> The Art of Computer Systems Performance Analysis. </title> <publisher> Wiley, </publisher> <year> 1991. </year>
Reference-contexts: We normalize the run time with respect to a baseline since we are not interested in the sum of run-times <ref> [16] </ref>. We use geometric mean to summarize the selected machines since we normalize the measurements [13]. We define the problem using more formal Garey-Johnson for mat [10].
Reference: [17] <author> P. Kalapathy. </author> <title> Hardware-software interactions on MPACT. </title> <journal> IEEE Micro, </journal> <volume> 17:20 26, </volume> <year> 1997. </year>
Reference-contexts: Commercial microprocessor manufacturers have introduced a number of products based on new ar chitectures that present hardware structures that are well matched to ILP compilers. Architectural enhancements found in commercial products include predicated instruction execution, VLIW, split register files and multi-gauge arithmetic (or variable-width SIMD) <ref> [5, 12, 17, 32] </ref>. Most of the multimedia extensions of general-purpose processors also adopt similar architectural enhancements [20, 28]. The arrival of production quality ILP compilers and commercial DSPs with VLIW architecture stimulated the idea of so-called custom-fit processors [9].
Reference: [18] <author> K. Kim, R. Karri, and M. Potkonjak. </author> <title> Heterogeneous built-in resiliency of application specific programmable processors. </title> <booktitle> In International Conference on Computer-Aided Design, </booktitle> <pages> pages 406411, </pages> <year> 1996. </year>
Reference-contexts: In particular, a great deal of effort has been made in combining retargetable compilation technologies and design of instruction sets [1, 21, 22, 23, 30]. Several research groups have published results on the topic of selecting and designing instruction set and processor architecture for particular application domains <ref> [18, 33] </ref>. Early works in the area of processor architecture synthesis tended to employ ad hoc methods on small code kernels, in large part due to the lack of good retargetable compiler technology.
Reference: [19] <author> C. Lee, M. Potkonjak, and W. H. Mangione-Smith. Mediabench: </author> <title> A tool for evaluating and synthesizing multimedia and communications systems. </title> <booktitle> In International Symposium on Microarchitectures, </booktitle> <year> 1997. </year>
Reference-contexts: The collection, known as Media-Bench is composed of 21 applications culled from available image processing, communications, cryptography and DSP applications. A brief summary of benchmarks used is shown in Table 2. More detailed descriptions of the benchmarks can be found in <ref> [19] </ref>. We use the IMPACT tool suit [4] to collect performance measurements of benchmarks on various machine configurations. The IMPACT C compiler is a retargetable compiler with code optimization components especially developed for multiple-instruction-issue processors.
Reference: [20] <author> R.B. Lee and M.D. Smith. </author> <title> Media processing: A new design target. </title> <journal> IEEE Micro, </journal> <volume> 17:69, </volume> <year> 1997. </year>
Reference-contexts: Architectural enhancements found in commercial products include predicated instruction execution, VLIW, split register files and multi-gauge arithmetic (or variable-width SIMD) [5, 12, 17, 32]. Most of the multimedia extensions of general-purpose processors also adopt similar architectural enhancements <ref> [20, 28] </ref>. The arrival of production quality ILP compilers and commercial DSPs with VLIW architecture stimulated the idea of so-called custom-fit processors [9].
Reference: [21] <author> R. Leupers and P. Marwedel. </author> <title> Retargetable generation of code selectors from HDL processor models. </title> <booktitle> In European Design and Test Conference, </booktitle> <pages> pages 140 144, </pages> <year> 1997. </year>
Reference-contexts: Comprehensive surveys of the works on computer-aided design of application-specific programmable processors can be found in [11, 26, 27]. In particular, a great deal of effort has been made in combining retargetable compilation technologies and design of instruction sets <ref> [1, 21, 22, 23, 30] </ref>. Several research groups have published results on the topic of selecting and designing instruction set and processor architecture for particular application domains [18, 33].
Reference: [22] <author> S. Liao, S. Devadas, K. Keutzer, and S. Tjiang. </author> <title> Instruction selection using binate covering for code size optimization. </title> <booktitle> In International Conference on Computer-Aided Design, </booktitle> <pages> pages 393399, </pages> <year> 1995. </year>
Reference-contexts: Comprehensive surveys of the works on computer-aided design of application-specific programmable processors can be found in [11, 26, 27]. In particular, a great deal of effort has been made in combining retargetable compilation technologies and design of instruction sets <ref> [1, 21, 22, 23, 30] </ref>. Several research groups have published results on the topic of selecting and designing instruction set and processor architecture for particular application domains [18, 33].
Reference: [23] <author> C. Liem, T. May, and P. Paulin. </author> <title> Instruction-set matching and selection for dsp and asip code generation. </title> <booktitle> In The European Design and Test Conference, </booktitle> <pages> pages 3137, </pages> <year> 1994. </year>
Reference-contexts: Comprehensive surveys of the works on computer-aided design of application-specific programmable processors can be found in [11, 26, 27]. In particular, a great deal of effort has been made in combining retargetable compilation technologies and design of instruction sets <ref> [1, 21, 22, 23, 30] </ref>. Several research groups have published results on the topic of selecting and designing instruction set and processor architecture for particular application domains [18, 33].
Reference: [24] <author> W. m. W. Hwu, S. A. Mahlke, W. Y. Chen, P. P. Chang, N. J. Warter, R. A. Bringmann, R. G. Ouellette, R. E. Hank, T. Kiyohara, G. E. Haab, J. G. Holm, and D. M. Lavery. </author> <title> The superblock: An effective technique for VLIW and superscalar compilation. </title> <journal> Journal of Supercomputing, </journal> <year> 1993. </year>
Reference-contexts: Recent advances in compiler technology and microprocessor architecture for instruction-level parallelism (ILP) have significantly increased the ability of microprocessors to exploit the opportunities for parallel execution that exist in many programs. Key ILP compiler technologies, such as trace scheduling [8], superblock scheduling <ref> [24] </ref>, tree-scheduling [3], hyperblock scheduling [25] and software pipelining [15] are in the process of migrating from research labs to product groups. Commercial microprocessor manufacturers have introduced a number of products based on new ar chitectures that present hardware structures that are well matched to ILP compilers.
Reference: [25] <author> S. A. Mahlke, D. C. Lin, W. Y. Chen, R. E. Hank, and R. A. Bringmann. </author> <title> Effective compiler support for predicated execution using the Hyperblock. </title> <booktitle> In International Symposium on Microarchitecture, </booktitle> <year> 1992. </year>
Reference-contexts: Recent advances in compiler technology and microprocessor architecture for instruction-level parallelism (ILP) have significantly increased the ability of microprocessors to exploit the opportunities for parallel execution that exist in many programs. Key ILP compiler technologies, such as trace scheduling [8], superblock scheduling [24], tree-scheduling [3], hyperblock scheduling <ref> [25] </ref> and software pipelining [15] are in the process of migrating from research labs to product groups. Commercial microprocessor manufacturers have introduced a number of products based on new ar chitectures that present hardware structures that are well matched to ILP compilers.
Reference: [26] <author> P. Marwedel. </author> <title> Processor-core based design and test. </title> <booktitle> In Asia and South Pacific Design Automation Conference, </booktitle> <pages> pages 499502, </pages> <year> 1997. </year>
Reference-contexts: Since the early 90's, there have been a number of efforts related to the design of application-specific programmable processors and application-specific instruction sets. Comprehensive surveys of the works on computer-aided design of application-specific programmable processors can be found in <ref> [11, 26, 27] </ref>. In particular, a great deal of effort has been made in combining retargetable compilation technologies and design of instruction sets [1, 21, 22, 23, 30].
Reference: [27] <editor> P.G. Paulin, C. Liem, M. Cornero, F. Nacabal, , et al. </editor> <booktitle> Embedded software in real-time signal processing systems: application and architecture trends. Proceedings of the IEEE, </booktitle> <address> 85(3):419435, </address> <month> March </month> <year> 1997. </year>
Reference-contexts: Since the early 90's, there have been a number of efforts related to the design of application-specific programmable processors and application-specific instruction sets. Comprehensive surveys of the works on computer-aided design of application-specific programmable processors can be found in <ref> [11, 26, 27] </ref>. In particular, a great deal of effort has been made in combining retargetable compilation technologies and design of instruction sets [1, 21, 22, 23, 30].
Reference: [28] <author> A. Peleg and U. Weiser. </author> <title> MMX technology extension to the Intel architecture. </title> <journal> IEEE Micro, </journal> <volume> 16(4):4250, </volume> <month> August </month> <year> 1996. </year>
Reference-contexts: Architectural enhancements found in commercial products include predicated instruction execution, VLIW, split register files and multi-gauge arithmetic (or variable-width SIMD) [5, 12, 17, 32]. Most of the multimedia extensions of general-purpose processors also adopt similar architectural enhancements <ref> [20, 28] </ref>. The arrival of production quality ILP compilers and commercial DSPs with VLIW architecture stimulated the idea of so-called custom-fit processors [9].
Reference: [29] <author> S. P. Song and M. Denman. </author> <title> The PowerPC 604 RISC microprocessor. </title> <type> Technical report, </type> <institution> Motorola Inc. and International Business Machines, </institution> <year> 1994. </year>
Reference-contexts: When a VLIW machine is considered, the issue unit area is of linear or sub-linear complexity. The architecture chosen for the analysis, the PowerPC 604 <ref> [29] </ref>, is a four-issue processor. The 604 has two simple integer ALUs and one complex integer ALU, one floating-point unit, one branch unit, and one memory unit. We assume that machine configurations with an issue width smaller than the baseline machine have at least one complex integer ALU.
Reference: [30] <author> A. Sudarsanam and S. Malik. </author> <title> Memory bank and register allocation in software synthesis for ASIPs. </title> <booktitle> In International Conference on Computer-Aided Design, </booktitle> <pages> pages 388392, </pages> <year> 1995. </year>
Reference-contexts: Comprehensive surveys of the works on computer-aided design of application-specific programmable processors can be found in [11, 26, 27]. In particular, a great deal of effort has been made in combining retargetable compilation technologies and design of instruction sets <ref> [1, 21, 22, 23, 30] </ref>. Several research groups have published results on the topic of selecting and designing instruction set and processor architecture for particular application domains [18, 33].
Reference: [31] <author> J. Turley. </author> <title> SA-1100 puts PDA on a chip. </title> <type> Microprocessor Report, 11(12), </type> <month> September </month> <year> 1997. </year>
Reference-contexts: The increasing share of microprocessors in semiconductor market is due to a new phase of silicon integration, thanks mainly to deep submicron fabrication technology. For example, SA-1100 from Digital Semiconductor <ref> [31] </ref> incorporates many system functions such as a memory controller, color LCD driver, PCMCIA interface, IrDA and USB communication channels, and extensive power management into a single chip. One major implication of this advanced technology is that almost all semiconductor manufacturers are moving into the microprocessor business.
Reference: [32] <author> J. Turley and H. Hakkarainen. </author> <title> TI's new `C6x DSP screams at 1,600 MIPS. The Microprocessor Report, </title> <address> 11:1417, </address> <year> 1997. </year>
Reference-contexts: Commercial microprocessor manufacturers have introduced a number of products based on new ar chitectures that present hardware structures that are well matched to ILP compilers. Architectural enhancements found in commercial products include predicated instruction execution, VLIW, split register files and multi-gauge arithmetic (or variable-width SIMD) <ref> [5, 12, 17, 32] </ref>. Most of the multimedia extensions of general-purpose processors also adopt similar architectural enhancements [20, 28]. The arrival of production quality ILP compilers and commercial DSPs with VLIW architecture stimulated the idea of so-called custom-fit processors [9].
Reference: [33] <author> W. Zhao and C.A. Papachristou. </author> <title> An evolution programming approach on multiple behaviors for the design of application specific programmable processors. </title> <booktitle> In European Design and Test Conference ED&TC 96, </booktitle> <pages> pages 144150, </pages> <year> 1996. </year>
Reference-contexts: In particular, a great deal of effort has been made in combining retargetable compilation technologies and design of instruction sets [1, 21, 22, 23, 30]. Several research groups have published results on the topic of selecting and designing instruction set and processor architecture for particular application domains <ref> [18, 33] </ref>. Early works in the area of processor architecture synthesis tended to employ ad hoc methods on small code kernels, in large part due to the lack of good retargetable compiler technology.
References-found: 33

