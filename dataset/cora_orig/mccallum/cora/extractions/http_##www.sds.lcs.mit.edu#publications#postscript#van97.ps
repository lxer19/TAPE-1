URL: http://www.sds.lcs.mit.edu/publications/postscript/van97.ps
Refering-URL: http://www.sds.lcs.mit.edu/publications/van97.html
Root-URL: 
Title: A Defense Against Address Spoofing Using Active Networks  Garland Principal Research Scientist  
Author: Stephen J. Arthur C. Smith 
Degree: by Submitted to the Department of Electrical Engineering and Computer Science in partial fulfillment of the requirements for the degrees of Bachelor of Science in Computer Science and Engineering and Master of Engineering in Electrical Engineering and Computer Science at the  All rights reserved. Author  Certified by:  Thesis Supervisor Accepted by  Chairman, Departmental Committee on Graduate Students  
Date: May 1997  May 29, 1997  
Affiliation: MASSACHUSETTS INSTITUTE OF TECHNOLOGY  c Massachusetts Institute of Technology 1997.  Department of Electrical Engineering and Computer Science  
Abstract-found: 0
Intro-found: 1
Reference: [1] <institution> Berkeley Software Design, Inc. (BSDI) BSDI Releases Defense For Internet Denial-of-Service Attacks. </institution> <note> http://www.bsdi.com/press/19961002 </note>
Reference-contexts: When the SYN-ACK is received by the client, it sends an acknowledgment (ACK) to the server. When the server receives the ACK, a connection is established and data transfer may begin. 1.1.2 The SYN-Flooding Attack The TCP SYN-Flooding attack <ref> [1, 3, 4, 6, 8, 18] </ref> exploits a weakness in the 3-way handshake protocol used by TCP to establish connections. <p> To date, no acceptable solution has emerged; however, a number of fixes have been proposed which have some, but not all, the properties presented in Section 1.2. 2.1 Increased Table Size A simple, but naive, fix to this problem is to increase the stack size <ref> [1, 18] </ref>. If there are more entries in the stack, then it is that much harder to fill up. While this allows a system to handle more half-open connections, it is not an acceptable solution because it does not stop an attack and it can degrade system performance dramatically. <p> In addition, most TCP/IP implementations allocate ephemeral (short lived) ports between 1024 and 5000 [20]. 17 18 CHAPTER 2. EXISTING SOLUTIONS 2.2 SYN Cookies As a complement to increased table size, Berkeley Software Design, Inc. (BSDI) has proposed SYN Cookies as a countermeasure <ref> [1] </ref>. When a SYN is received, only a few bits of information are stored in the data structure, e.g., the sender address. The rest of the information is sent back to the client as a cookie along with the SYN-ACK. <p> This type of filtering, known as Ingress Filtering <ref> [1, 2, 3, 6] </ref>, is the leading proposal of many experts. This proposal, however, has its own defects. Although it does stop an adversary from spoofing addresses outside of a subnet, it does not stop an adversary from spoofing addresses within the same subnet.
Reference: [2] <author> CERT Advisory CA-95:01. </author> <title> IP Spoofing Attacks and Hijacked Terminal Connections. </title> <note> Issue date: January 23, 1995. Revision date: September 24, 1996. ftp://info.cert.org/pub/cert advisories/CA-95%3A01.IP.spoofing </note>
Reference-contexts: Because this attack is only aimed at availability, data integrity and secrecy is not compromised. The key to this and similar attacks is forged IP source addresses known as IP Spoofing <ref> [2] </ref>. For this attack to be effective, the adversary must forge the source IP 1.2. GOALS 15 address to reflect 1) a client other than itself (to avoid being caught) and 2) a client that does not exist or cannot respond to SYN-ACKs. <p> IP Spoofing can be used to attack a server in ways other than SYN-Flooding. For example, an adversary can use IP Spoofing to exploit certain applications that use IP addresses for authentication purposes to gain user and/or possibly root access to systems <ref> [2] </ref>. For this thesis, we are only interested in studying IP Spoofing as a mechanism to deny service to other users, such as the SYN-Flooding attack. 1.2 Goals The TCP SYN-Flooding attack is a recent phenomenon. <p> This type of filtering, known as Ingress Filtering <ref> [1, 2, 3, 6] </ref>, is the leading proposal of many experts. This proposal, however, has its own defects. Although it does stop an adversary from spoofing addresses outside of a subnet, it does not stop an adversary from spoofing addresses within the same subnet.
Reference: [3] <author> CERT Advisory CA-96.21. </author> <title> TCP SYN Flooding and IP Spoofing Attacks. </title> <note> Issue date: September 19, 1996. Revision date: December 10, 1996. ftp://info.cert.org/pub/cert advisories/CA-96.21.tcp syn flooding </note>
Reference-contexts: When the SYN-ACK is received by the client, it sends an acknowledgment (ACK) to the server. When the server receives the ACK, a connection is established and data transfer may begin. 1.1.2 The SYN-Flooding Attack The TCP SYN-Flooding attack <ref> [1, 3, 4, 6, 8, 18] </ref> exploits a weakness in the 3-way handshake protocol used by TCP to establish connections. <p> This type of filtering, known as Ingress Filtering <ref> [1, 2, 3, 6] </ref>, is the leading proposal of many experts. This proposal, however, has its own defects. Although it does stop an adversary from spoofing addresses outside of a subnet, it does not stop an adversary from spoofing addresses within the same subnet.
Reference: [4] <institution> Check Point Software Technologies, Ltd. TCP SYN Flooding Attack and the FireWall-1 SYNDefender. </institution> <month> October, </month> <year> 1996. </year> <note> http://www.checkpoint.com/fw21/syndefender/syndefender-white.html </note>
Reference-contexts: When the SYN-ACK is received by the client, it sends an acknowledgment (ACK) to the server. When the server receives the ACK, a connection is established and data transfer may begin. 1.1.2 The SYN-Flooding Attack The TCP SYN-Flooding attack <ref> [1, 3, 4, 6, 8, 18] </ref> exploits a weakness in the 3-way handshake protocol used by TCP to establish connections. <p> A firewall is nothing more than a computer, router, gateway, or similar device that serves as an access control for a network. Depending on the software, a firewall can be used for different security purposes. Check Point Software's firewall, FW-1 <ref> [4] </ref>, prevents a connection from being requested from the server until the three-way handshake is completed with the firewall [see Figure 2-1]. At that point, the original SYN packet is sent to the server. The server replies to the firewall with a SYN-ACK, and the reply is once again forwarded.
Reference: [5] <author> E. Chen. </author> <title> Symmetric Routing in a Multi-Provider Internet. North American Network Operators' Group May 1995 Meeting Notes. </title> <publisher> Academ Consulting Services. </publisher> <address> http://www.academ.com/nanog/may1995/symmetric.html </address>
Reference-contexts: Although there are protocols, such as Network Time Protocol (NTP) [11], a clock synchronization protocol, and IP Multicast (MBONE) [14], that depend on symmetric routing <ref> [5] </ref>, asymmetric routing is more prevalent in today's networks due to its flexibility. A possible extension to this thesis is to build a more versatile filter that works in an asymmetric routing environment as well. 40 CHAPTER 4.
Reference: [6] <author> Cisco Systems. </author> <title> Defining Strategies to Protect Against TCP SYN Denial of Service Attacks. </title> <address> http://www.cisco.com/warp/public/707/4.html </address>
Reference-contexts: When the SYN-ACK is received by the client, it sends an acknowledgment (ACK) to the server. When the server receives the ACK, a connection is established and data transfer may begin. 1.1.2 The SYN-Flooding Attack The TCP SYN-Flooding attack <ref> [1, 3, 4, 6, 8, 18] </ref> exploits a weakness in the 3-way handshake protocol used by TCP to establish connections. <p> This type of filtering, known as Ingress Filtering <ref> [1, 2, 3, 6] </ref>, is the leading proposal of many experts. This proposal, however, has its own defects. Although it does stop an adversary from spoofing addresses outside of a subnet, it does not stop an adversary from spoofing addresses within the same subnet.
Reference: [7] <author> D. E. Comer. </author> <title> Internetworking with TCP/IP. </title> <publisher> Prentice Hall Inc., </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1995. </year> <title> [8] daemon9, route, and infinity. Project Neptune. </title> <journal> Phrack Magazine. </journal> <volume> Vol. 7, </volume> <pages> Iss. </pages> <note> 48, File 13 of 18. July 1996 Guild Productions. http://www.fc.net:80/phrack/files/p48/p48-13.html </note>
Reference-contexts: This standard dictates exactly how systems communicate with each other. The most common standard in today's networking environment is the Transmission Control Protocol and Internet Protocol suite, more readily known as TCP/IP <ref> [7, 20] </ref>. A conceptual model is shown in Figure 1-1. At the lowest level, a connectionless, unreliable delivery service called IP provides the basis on which the entire suite is built upon. <p> This is useful for applications that spawn capsules in the middle of the network. The next 4 bytes indicate the source address of the capsule; currently, the system uses IPv4 style addresses <ref> [7] </ref>. The rest of the capsule contains a variable header and payload, depending on the type of capsule. The variable header field contains, among other things, information necessary for routing, e.g., the destination address. The payload field may contain data that is necessary for capsule processing at a node. <p> It uses an algorithm known as next-hop routing <ref> [7] </ref>. Because the Internet is large, it is not feasible to keep track of all paths from every possible source to every possible destination. Not only would this consume too much space, but it would take too much time to search through the tables to route a packet.
Reference: [9] <author> V. D. Gligor. </author> <title> On Denial of Service in Computer Networks. </title> <booktitle> Proc. IEEE Int'l. Conf. on Data Engineering, </booktitle> <pages> pp. 608-617, </pages> <month> Feb. </month> <year> 1986. </year>
Reference-contexts: Introduction The security of computer systems involves maintaining three distinct requirements: secrecy, integrity, and availability <ref> [9, 15, 17, 24] </ref>. Secrecy means that only authorized users are allowed access to system resources. Different types of access include viewing, copying, printing, or even just knowing the existence of the resources. Integrity means that only authorized users can modify system resources.
Reference: [10] <author> J. Gosling and H. McGilton. </author> <title> The Java Language Environment: A White Paper. http://java.sun.com/doc/language environment/ May 1996, Sun Microsystems, </title> <publisher> Inc. </publisher> <address> 45 46 REFERENCES </address>
Reference: [11] <author> ICAST Corporation. </author> <note> The MBONE Information Web. http://www.mbone.com/techinfo/ </note>
Reference-contexts: Investigation is currently underway to build such a mechanism, which will be in place before a commercial active network is deployed. * We assume that the network uses symmetric routing. Although there are protocols, such as Network Time Protocol (NTP) <ref> [11] </ref>, a clock synchronization protocol, and IP Multicast (MBONE) [14], that depend on symmetric routing [5], asymmetric routing is more prevalent in today's networks due to its flexibility.
Reference: [12] <author> K. James. </author> <title> Game 3 chess match a draw; IBM site up. </title> <booktitle> USA Today, </booktitle> <month> February 14, </month> <year> 1996. </year> <title> Sec. A, </title> <publisher> p.1. </publisher>
Reference-contexts: International Business Machine (IBM) was ridiculed when their web servers could not handle the large number of incoming requests during the first few days of the first tournament between International Grandmaster and World Chess Champion, Garry Kasparov, and the IBM computer, Deep Blue <ref> [12] </ref>. Availability is something that is very important to the Internet community today and will be for the foreseeable future. Because of this, prevention of denial-of-service attacks, a security threat to availability, is becoming a hot topic in computer systems research. 11 12 CHAPTER 1.
Reference: [13] <author> J. </author> <title> Markoff. A New Method of Internet Sabotage is Spreading. </title> <address> New York Times, </address> <month> September 16, </month> <year> 1996. </year>
Reference-contexts: Because the source code for this attack is highly available (it can be found in a number of sites across the Internet) and because it is easy to mount such an attack, this denial-of-service attack has been on the rise <ref> [13] </ref>. The point at which the TCP handshake can be exploited is when a server has responded with SYN-ACK and is waiting for an ACK from the client. At this point, a pending (half-open) connection exists.
Reference: [14] <author> D. L. Mills. </author> <title> The Network Time Protocol (NTP). </title> <address> http://www.eecis.udel.edu/ ntp/ </address>
Reference-contexts: Investigation is currently underway to build such a mechanism, which will be in place before a commercial active network is deployed. * We assume that the network uses symmetric routing. Although there are protocols, such as Network Time Protocol (NTP) [11], a clock synchronization protocol, and IP Multicast (MBONE) <ref> [14] </ref>, that depend on symmetric routing [5], asymmetric routing is more prevalent in today's networks due to its flexibility. A possible extension to this thesis is to build a more versatile filter that works in an asymmetric routing environment as well. 40 CHAPTER 4.
Reference: [15] <author> R. M. Needham. </author> <title> Denial of Service: An Example. </title> <journal> Comm. ACM, </journal> <volume> Vol. 37, No. 11, </volume> <pages> pp. 43-46, </pages> <month> Nov. </month> <year> 1994. </year>
Reference-contexts: Introduction The security of computer systems involves maintaining three distinct requirements: secrecy, integrity, and availability <ref> [9, 15, 17, 24] </ref>. Secrecy means that only authorized users are allowed access to system resources. Different types of access include viewing, copying, printing, or even just knowing the existence of the resources. Integrity means that only authorized users can modify system resources.
Reference: [16] <author> V. Paxson. </author> <title> End-to-End Routing Behavior in the Internet. </title> <booktitle> ACM SIGCOMM '96, </booktitle> <institution> Stanford University, USA. </institution> <month> August </month> <year> 1996. </year> <note> http://www.acm.org/sigcomm/sigcomm96/papers/paxson.html </note>
Reference-contexts: This is 3.2. ANTS AN ACTIVE NETWORK AND TOOLKIT 29 especially true in the Internet today. Asymmetric routing, however, adds complexity to the network and makes network troubleshooting difficult <ref> [16] </ref>. To reduce complexity, we have added the constraint of symmetric routing to our active network. This means that routes from A to B are the same, but opposite, as routes from B to A. <p> Future investigation would be needed to determine, quantitatively, the impact our dynamic filter has on system and network performance. The filter we have built only works in a network environment where routing is symmetric; however, in today's Internet, as well as many subnets, routing is asymmetric and, usually, unpredictable <ref> [16] </ref>. Under these circumstances, our filter would fail. Another possible extension to this thesis would be to build a filter that works in a more general network environment. Another question worth investigating is how robust is our solution? Availability is difficult to maintain because it is a backwards goal.
Reference: [17] <author> C. P. Pfleeger. </author> <title> Security in Computing. </title> <publisher> Prentice Hall Inc., </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1989. </year>
Reference-contexts: Introduction The security of computer systems involves maintaining three distinct requirements: secrecy, integrity, and availability <ref> [9, 15, 17, 24] </ref>. Secrecy means that only authorized users are allowed access to system resources. Different types of access include viewing, copying, printing, or even just knowing the existence of the resources. Integrity means that only authorized users can modify system resources.
Reference: [18] <author> J. Santos, V. Tardif, and D. Weber. </author> <title> Foiling the TCP SYN Attack. </title> <month> December 10, </month> <year> 1996. </year> <title> MIT Computer Security Course (6.857). </title> <note> Will appear in http://web.mit.edu/course/6/6.857/www </note>
Reference-contexts: When the SYN-ACK is received by the client, it sends an acknowledgment (ACK) to the server. When the server receives the ACK, a connection is established and data transfer may begin. 1.1.2 The SYN-Flooding Attack The TCP SYN-Flooding attack <ref> [1, 3, 4, 6, 8, 18] </ref> exploits a weakness in the 3-way handshake protocol used by TCP to establish connections. <p> To date, no acceptable solution has emerged; however, a number of fixes have been proposed which have some, but not all, the properties presented in Section 1.2. 2.1 Increased Table Size A simple, but naive, fix to this problem is to increase the stack size <ref> [1, 18] </ref>. If there are more entries in the stack, then it is that much harder to fill up. While this allows a system to handle more half-open connections, it is not an acceptable solution because it does not stop an attack and it can degrade system performance dramatically. <p> In addition, increasing the stack size may affect system performance as a whole. Each entry within the stack takes up a great deal of system resources. In one version of RedHat Linux, each entry requires 520 bytes of I/O buffer space <ref> [18] </ref>. If there are 2048 entries, it would require about a megabyte of memory per port 1 . Increasing the stack size will decrease available resources, thereby degrade system performance. 1 TCP uses 16-bit port numbers to identify different applications running on a system. <p> Hence, the adversary can cripple not only a server, but the entire network as well, degrading both system and network performance. 2.3 Management of Pending Connections Another way to cope with SYN-Flooding is to replace pending connections with new requests as they arrive <ref> [18] </ref>. If the stack is full and a new request for a connection arrives, the server evicts one of the pending connections and replaces it with the new request. Two replacement strategies have been proposed: 1) replace the oldest pending connection, and 2) replace a pending connection at random.
Reference: [19] <editor> J. Shiver. </editor> <booktitle> Outage at AOL Pulls the Plug on 6 Million Subscribers. </booktitle> <address> Los Angeles Times, </address> <month> August 8, </month> <year> 1996. </year> <title> Sec. D, </title> <publisher> p.1. </publisher>
Reference-contexts: As the information age dawns, however, availability is becoming extremely important. In fact, it is becoming intolerable for some services to be unavailable. America-on-Line (AOL), one of the leading Internet Service Providers (ISPs), was featured in The Los Angeles Times when their servers collapsed under increased client load <ref> [19] </ref>. International Business Machine (IBM) was ridiculed when their web servers could not handle the large number of incoming requests during the first few days of the first tournament between International Grandmaster and World Chess Champion, Garry Kasparov, and the IBM computer, Deep Blue [12].
Reference: [20] <author> W. R. Stevens. </author> <title> TCP/IP Illustrated, Volume 1 The Protocols. </title> <publisher> Addison-Wesley Publishing Co., </publisher> <address> Reading, MA, </address> <year> 1994. </year>
Reference-contexts: This standard dictates exactly how systems communicate with each other. The most common standard in today's networking environment is the Transmission Control Protocol and Internet Protocol suite, more readily known as TCP/IP <ref> [7, 20] </ref>. A conceptual model is shown in Figure 1-1. At the lowest level, a connectionless, unreliable delivery service called IP provides the basis on which the entire suite is built upon. <p> For example, the FTP service is on TCP port 21, while Telnet is on port 23. Ports 1 to 1023 are well-known ports and are managed by the Internet Assigned Numbers Authority (IANA). In addition, most TCP/IP implementations allocate ephemeral (short lived) ports between 1024 and 5000 <ref> [20] </ref>. 17 18 CHAPTER 2. EXISTING SOLUTIONS 2.2 SYN Cookies As a complement to increased table size, Berkeley Software Design, Inc. (BSDI) has proposed SYN Cookies as a countermeasure [1].
Reference: [21] <author> D. L. Tennenhouse and D. J. Wetherall. </author> <title> Towards an Active Network Architecture. </title> <journal> Computer Communication Review, </journal> <volume> Vol. 26, No. 2, </volume> <month> April </month> <year> 1996. </year>
Reference-contexts: Although there are many fixes proposed by the Internet community, there is no accepted solution in today's network environment [?]. The goal of this research is to find an acceptable solution to this problem using active network technology <ref> [21] </ref>. <p> What we would like to do is stop address spoofing completely. The current network technology offers little assistance in this area. Instead, we use a new technology, active networks, to help us stop address spoofing. 22 CHAPTER 2. EXISTING SOLUTIONS Chapter 3 Active Networks Active networks <ref> [21] </ref> provide a new way of thinking about a network environment. Traditional networks are based on an end-to-end model, in which computation is done at the endpoints, with only routing and header processing occurring within the network. All packets are routed through a network independent of content. <p> This chapter discusses active networks in general and a prototype implementation of an active network called ANTS [23]. 3.1 Architecture There are two approaches to building an active network, a discrete and an integrated one <ref> [21] </ref>. In the following sections, we present both approaches with more emphasis on the integrated approach used by ANTS. 3.1.1 A Discrete Approach The discrete approach separates the mechanism for injecting programs into a programmable node from the actual processing of packets as they flow through a node.
Reference: [22] <author> D. L. Tennenhouse, J. M. Smith, W. D. Sincoskie, D. J. Wetherall, and G. J. Minden. </author> <title> A Survey of Active Network Research. </title> <journal> IEEE Communications Magazine, </journal> <volume> Vol. 35, No. 1, pp80-86. </volume> <month> January </month> <year> 1997. </year>
Reference: [23] <author> D. J. Wetherall. </author> <title> ANTS: A Toolkit for Building and Dynamically Deploying Network Protocols'. </title> <note> Submitted to ACM SIGCOMM'97, Cannes, </note> <institution> France. </institution> <month> September </month> <year> 1997. </year>
Reference-contexts: INTRODUCTION 1.3 Thesis Overview In the next chapter, we examine existing solutions to the problem and evaluate their effectiveness using our proposed criteria. In Chapter 3, we present an overview of active networks and ANTS <ref> [23] </ref>, a toolkit for building active network applications. In Chapter 4, we present our solution to this problem using active networks. Chapter 5 draws conclusions on the effectiveness of our solution, discusses some issues that need further investigation, and suggests some possible future work. <p> This extra computation can be defined by users, who can inject programs into the network to customize processing of user and/or application specific data. This chapter discusses active networks in general and a prototype implementation of an active network called ANTS <ref> [23] </ref>. 3.1 Architecture There are two approaches to building an active network, a discrete and an integrated one [21]. <p> When processing is completed, the transient environment is destroyed and resources held by the capsule are released. 3.2 ANTS An Active Network and Toolkit ANTS is an active network toolkit developed at the Massachusetts Institute of Technology (MIT) Laboratory for Computer Science (LCS) by D. J. Wetherall <ref> [23] </ref>. ANTS is toolkit to help build and maintain active network applications. ANTS also includes an implementation of an integrated active network. ANTS is written in Java and runs as a user-level application on the Linux operating system. <p> The Node class is the implementation of an active node. 3.2. ANTS AN ACTIVE NETWORK AND TOOLKIT 25 Class Methods Application send, receive (upcall), node Capsule evaluate, length, register, serialize, deserialize Node address, get, put, routefornode, delivertoapp Table 3.1: Key Classes and Methods <ref> [23] </ref> 3.2.1 Applications Active network applications are written by specializing the Application class. This class provides some basic methods that interact with the node it runs on to send and receive capsules. <p> This is actually necessary for our filtering algorithm to work. 3.2.5 Security Issues ANTS does not provide any type of authentication or traditional security schemes to ensure the safety of running foreign code on an active node <ref> [23] </ref>. Instead, it relies on the safety mechanisms of Java (e.g., byte-code verification) to execute untrusted code. This, of course, is not sufficient to ensure a robust network.
Reference: [24] <author> C. Yu and V. D. Gligor. </author> <title> A Specification and Verification Method for Preventing Denial of Service. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. 16, No. 6, </volume> <pages> pp. 581-592, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: Introduction The security of computer systems involves maintaining three distinct requirements: secrecy, integrity, and availability <ref> [9, 15, 17, 24] </ref>. Secrecy means that only authorized users are allowed access to system resources. Different types of access include viewing, copying, printing, or even just knowing the existence of the resources. Integrity means that only authorized users can modify system resources.
References-found: 23

