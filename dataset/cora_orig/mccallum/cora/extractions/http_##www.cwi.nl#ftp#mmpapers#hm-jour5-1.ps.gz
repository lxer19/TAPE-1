URL: http://www.cwi.nl/ftp/mmpapers/hm-jour5-1.ps.gz
Refering-URL: http://www.cms.dmu.ac.uk:80/~cph/Teaching/HVR/hvr-rdg.html
Root-URL: 
Email: Email: Lynda.Hardman@cwi.nl  
Title: The Amsterdam Hypermedia Model: extending hypertext to support real multimedia making up a complete multimedia
Author: Lynda Hardman, Dick C. A. Bulterman, Guido van Rossum 
Keyword: and Phrases: Hypermedia model, Multimedia, Composition, Channels, Context for Links, Synchronization  
Address: P.O. Box 4079, 1009 AB Amsterdam, The Netherlands  
Affiliation: CWI  media  
Abstract: We present a model of hypermedia that allows the combination of hyper-structured information with dynamic multimedia information. The model is derived by extending the Dexter hypertext reference model and the CMIF multimedia model. The Amsterdam hypermedia model allows the following, in addition to the model provided by Dexter: the composition of multiple dynamic media, in order to specify a collection of time-based The paper is organised as follows. The Dexter hypertext model and the CMIF multimedia model are summarised, and their limitations for use as a more general hypermedia model are discussed. The extensions included in the Amsterdam hypermedia model are described and a summary of the resulting model is given. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> HALASZ F. and SCHWARTZ M. </author> <title> The Dexter Hypertext Reference Model. In: NIST Hypertext Standardization Workshop. </title> <address> Gaithersburg, MD, </address> <month> January 16-18 </month> <year> 1990 </year>
Reference-contexts: 1. Introduction Systems for authoring and reading hypertext material have existed for a number of years. Unfortunately, each of these systems embodies its own model of hypertext. One of the first formal models of hypertext is the Dexter hypertext reference model <ref> [1] </ref> which describes the structures needed for links among items of information. A drawback of this model, however, is that while it accommodates the inclusion of dynamic data items (information which relies on time for its presentation) it does not include time at the structuring level of documents 1 .
Reference: [2] <author> BULTERMAN D.C.A., VAN ROSSUM G. and VAN LIERE R. </author> <title> A Structure for Transportable, Dynamic Multimedia Documents. </title> <booktitle> In: Proceedings of the Summer 1991 USENIX Conference. </booktitle> <address> Nashville, Tennesse, </address> <year> 1991, </year> <pages> 137 - 155. </pages>
Reference-contexts: A model for hypermedia (hyper-structured multimedia) information requires the inclusion of dynamic media at a funda-mental level. The Amsterdam Hypermedia Model 2 Authoring systems for multimedia presentations also exist, again each with their own model of multimedia. The multimedia group at CWI, however, has developed the CMIF multimedia model <ref> [2] </ref> in order to capture the essence of a multimedia presentation. The group has also built a prototype authoring system, the CMIF editor, based on the model [3]. The CMIF multimedia model places emphasis on time and combining different media in a continuous presentation. <p> The Amsterdam Hypermedia Model 9 3.2. Higher level presentation specification (channels) Channels are abstract output devices for playing multimedia items. They are an important part of the CMIF model for describing multimedia documents. (See <ref> [2] </ref> for further detailed information on channels.) Channels are needed for multimedia in the same way that word processors allow the definition of global styles for different structures (for example, section heading or paragraph body). <p> The synchronization information is stored in an ancestor of both items (preferably that which is lowest in the hierarchy). Synchronization arcs define timing relations in terms of minimum and maximum acceptable delays between intervals within a data node. (Further details on synchronization arcs can be found in <ref> [2] </ref>.) The authoring system should prevent the author from specifying impossible timing constraints (i.e. this is beyond the scope of the model). In the Amsterdam model, hierarchical structure and timing information are expressed via the composite components (described in the previous composition sections, 3.1 and 3.3).
Reference: [3] <author> VAN ROSSUM G., JANSEN J., MULLENDER K.S. and BULTERMAN D.C.A. CMIFed: </author> <title> a Presentation Environment for Portable Hypermedia Documents. </title> <booktitle> In: Proceedings of the First International Conference on Multimedia. </booktitle> <address> Anaheim, California, </address> <month> August </month> <year> 1993. </year> <note> (Also available as CWI Report CS-R9305). </note>
Reference-contexts: The multimedia group at CWI, however, has developed the CMIF multimedia model [2] in order to capture the essence of a multimedia presentation. The group has also built a prototype authoring system, the CMIF editor, based on the model <ref> [3] </ref>. The CMIF multimedia model places emphasis on time and combining different media in a continuous presentation.
Reference: [4] <author> NEWCOMB S.R. ,KIPP N.A. and NEWOMB V.T. </author> <title> HyTime the Hypermedia/ Time-based Document Structuring Language. </title> <journal> Communications of the ACM, </journal> <volume> 34 (11) November 1991, 67 - 83. </volume>
Reference-contexts: While the Amsterdam model make additions to the Dexter model one of the goals is to introduce the required functionality while limiting the changes as much as possible. HyTime <ref> [4] </ref> provides a means of expressing hypermedia information in a standard language: it does not, however, specify what information is required for describing hypermedia.
Reference: [5] <author> GOLDFARB C.F. </author> <title> The SGML Handbook. </title> <publisher> Oxford University Press, </publisher> <year> 1990. </year>
Reference-contexts: The Amsterdam hypermedia model gives a high-level description of the structures needed for hypermedia, which, once created, could be expressed in HyTime. (A direct analogy is with creating hypertext information conforming to the Dexter model and expressing it in SGML <ref> [5] </ref>.) We describe the Amsterdam hypermedia model in this paper. To put this model in its historical context, the following section gives a description of the Dexter (hypertext) and CMIF (multimedia) models and lists their drawbacks for use as a general hypermedia model.
Reference: [6] <author> HARDMAN L., VAN ROSSUM G. and BULTERMAN D.C.A. </author> <title> Structured Multimedia Authoring. </title> <booktitle> In: Proceedings of the First International Conference on Multimedia. </booktitle> <address> Anaheim, California, </address> <month> August </month> <year> 1993. </year> <note> (Also available as CWI Report CS-R9304.) </note>
Reference-contexts: There are two important ways of viewing a CMIF document when authoring the hierarchical view and the channel view. (Further information about our approach to authoring multimedia is given in <ref> [6] </ref>.) The hierarchical (a) atomic component Attributes Presentation Component-specific presentation info. Anchors Anchor ID Value Semantic information Contents Data block or pointer to data Specification (b) composite component Children Component ID Attributes Presentation Component-specific presentation info.
Reference: [7] <author> PALANIAPPAN M., YANKELOVICH N. and SAWTELLE M. </author> <title> Linking Active Anchors: a Stage in the Evolution of Hypermedia. </title> <booktitle> Hypermedia 2 (1) 1990, </booktitle> <volume> 47 - 66. </volume> <booktitle> The Amsterdam Hypermedia Model 16 </booktitle>
Reference-contexts: Often, when hypertext systems are extended to handle dynamic media, time-based issues are included only at the leaf nodes in the hypertext structure, for example the Intermedia system <ref> [7] </ref>. The component itself contains a time-based medium, but the underlying struc-ture does not represent time. Time needs to be integrated at a more fundamental level in a hypermedia model. Some hypertext systems, for example the Harmony system described in [8], use the existing link structures for expressing timing relations. <p> This deficiency in existing models has already been encountered by a group at Brown Universitys Institute for Research in Information and Scholarship (IRIS), who were investigating the issues involved with creating structured documents with dynamic media <ref> [7] </ref>. The group considers the construction of a set of multimedia documents through which the reader can browse. The article raises the question of following a link to multiple anchors.
Reference: [8] <author> FUJIKAWA K., SHIMOJO S., MATSUURA T., NISHIO S. and MIYAHARA H. </author> <title> Multimedia Presentation System Harmony with Temporal and Active Media. </title> <booktitle> In: Proceedings of the Summer 1991 USENIX Conference. </booktitle> <address> Nashville, Tennesse, </address> <year> 1991, </year> <pages> 75 - 93. </pages>
Reference-contexts: The component itself contains a time-based medium, but the underlying struc-ture does not represent time. Time needs to be integrated at a more fundamental level in a hypermedia model. Some hypertext systems, for example the Harmony system described in <ref> [8] </ref>, use the existing link structures for expressing timing relations. However, these link structures should not be corrupted by extending them to record time-based information, since combining structure and timing information makes maintenance of both types of information tedious for the author. <p> Temporal relations Given the dynamic nature of multimedia data, we need to be able to express temporal relations in a hypermedia model. Two examples of systems that have extended the hypertext model to include dynamic media are Harmony <ref> [8] </ref> and Videobook [9]. Harmony, built at Osaka University, contains objects, similar to Dexters atomic components. Each object can include subobjects (anchors, in Dexter terms) which specify parts of an object and can become the source or des-tination of a link. Relations between objects are represented by links.
Reference: [9] <author> OGAWA R., HARADA H. and KANEKO A. </author> <title> Scenario-based Hypermedia: A Model and a System. </title> <editor> In: A. Rizk, N. Streitz and J. Andr, eds. </editor> <booktitle> Hypertext: Concepts, Systems and Applications. Proceedings of the European Conference on Hypertext. </booktitle> <address> INRIA, France, </address> <month> November </month> <year> 1990, </year> <pages> 38 - 51. </pages>
Reference-contexts: Temporal relations Given the dynamic nature of multimedia data, we need to be able to express temporal relations in a hypermedia model. Two examples of systems that have extended the hypertext model to include dynamic media are Harmony [8] and Videobook <ref> [9] </ref>. Harmony, built at Osaka University, contains objects, similar to Dexters atomic components. Each object can include subobjects (anchors, in Dexter terms) which specify parts of an object and can become the source or des-tination of a link. Relations between objects are represented by links.
Reference: [10] <author> BUCHANAN C.M. and ZELLWEGER P.T. </author> <title> Specifying Temporal Behavior in Hypermedia Documents. </title> <editor> In: D. Lucarella, J. Nanard, M. Nanard and P Paolini, eds. </editor> <booktitle> ECHT 92. Proceedings of the Fourth ACM Conference on Hypertext. </booktitle> <address> Milano, Italy, </address> <month> Nov 30 - Dec 4 </month> <year> 1992, </year> <pages> 262 - 271. </pages>
Reference-contexts: The Amsterdam Hypermedia Model 11 Buchanan and Zellweger <ref> [10] </ref> take an object-based approach to specifying timing relations in multimedia, but they do not address the problems associated with using hierarchically structured hypermedia documents. For both timing and structural information, hierarchical and non-hierarchical relations are possible. Our model distinguishes which information is being stored.
Reference: [11] <author> HALASZ F.G. </author> <title> Reections on Notecards: Seven Issues for the Next Generation of Hypermedia Systems. </title> <journal> Communications of the ACM, </journal> <month> 31(7) July </month> <year> 1988, </year> <pages> 836 - 852. </pages>
Reference-contexts: Most systems present a single hypertext node which is either replaced by the destination information or is left on the screen in its own window while another window is created to contain the destination information, as in NoteCards <ref> [11] </ref>. What actually occurs may be determined by the author or, most likely, by the way it happens to have been implemented in the hypertext system.
Reference: [12] <author> BROWN, P.J. </author> <title> UNIX Guide: lessons from ten years development. </title> <editor> In: D. Lucarella, J. Nanard, M. Nanard and P Paolini, eds. </editor> <booktitle> ECHT 92. Proceedings of the Fourth ACM Conference on Hypertext. </booktitle> <address> Milano, Italy, </address> <month> Nov 30 - Dec 4 </month> <year> 1992, </year> <note> 63 -70. </note>
Reference-contexts: We define the source or destination context for a link as the part of the document structure which is affected when following the link to or from an anchor. Context can be found in existing hypertext systems, although not stated explicitly as such. For example, the Guide hypertext system <ref> [12] </ref> for both the UNIX and PC platforms, has implementations of different variations of context. For example, one link type allows the author to specify, via the use of a source region, which of the surrounding material should be replaced on following the link.
Reference: [13] <institution> APPLE COMPUTER INC. HyperCard, Cupertino, </institution> <address> CA, </address> <year> 1987. </year>
Reference-contexts: For example, one link type allows the author to specify, via the use of a source region, which of the surrounding material should be replaced on following the link. HyperCard <ref> [13] </ref> also implements a form of context: following a link may replace only the card, or the card and the background. A benefit of specifying context is that only part of the document structure displayed on screen need be affected on following a link.
References-found: 13

