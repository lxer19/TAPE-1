URL: ftp://ftp.cs.dartmouth.edu/TR/TR94-216.ps.Z
Refering-URL: http://www.cs.dartmouth.edu/reports/abstracts/TR94-216/
Root-URL: http://www.cs.dartmouth.edu
Title: Scheduling on a Ring with Unit Capacity Links  
Author: Perry Fizzano Clifford Stein 
Address: Hanover, New Hampshire 03755  
Affiliation: Department of Computer Science Dartmouth College  
Abstract: We consider the problem of scheduling unit-sized jobs on a ring of processors with the objective of minimizing the completion time of the last job. Unlike much previous work we place restrictions on the capacity of the network links connecting processors. We give a polynomial time centralized algorithm that produces optimal length schedules. We also give a simple distributed 2-approximation algorithm. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Awerbuch, S. Kutten, and D.Peleg. </author> <title> Competetive distributed job scheduling. </title> <booktitle> In Proceedings of the 24th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 571-580, </pages> <year> 1992. </year>
Reference-contexts: We denote by j i the number of jobs currently on processor p i . The network model just described allows a machine to process a job on the same step that it passes a job. This model is the same as that in many previous papers <ref> [1, 3, 4, 5, 6] </ref> and is supported by current technology [2]. Additional restrictions that we place on the model are that it takes unit time to traverse a network link and the capacity of each link is one job per time unit.
Reference: [2] <author> H. Choi and A. Esfahanian. </author> <title> A message routing strategy for multicomputer systems. </title> <journal> Networks, </journal> <volume> 22 </volume> <pages> 627-646, </pages> <year> 1992. </year>
Reference-contexts: The network model just described allows a machine to process a job on the same step that it passes a job. This model is the same as that in many previous papers [1, 3, 4, 5, 6] and is supported by current technology <ref> [2] </ref>. Additional restrictions that we place on the model are that it takes unit time to traverse a network link and the capacity of each link is one job per time unit.
Reference: [3] <author> X. Deng, H. Liu, J. Long, and B. Xiao. </author> <title> Deterministic load balancing in computer networks. </title> <booktitle> In Proceedings of 2nd IEEE Symposium on Parallel and Distributed Processing, </booktitle> <year> 1992. </year>
Reference-contexts: We denote by j i the number of jobs currently on processor p i . The network model just described allows a machine to process a job on the same step that it passes a job. This model is the same as that in many previous papers <ref> [1, 3, 4, 5, 6] </ref> and is supported by current technology [2]. Additional restrictions that we place on the model are that it takes unit time to traverse a network link and the capacity of each link is one job per time unit. <p> Previous results of Deng et al. <ref> [3] </ref> give results for general network structures and general capacities of the network links. <p> This is much faster than the best known algorithm for this instance <ref> [3] </ref> and in addition, is the first polynomial time solution to the problem. This approach has led us to designing a simple distributed algorithm for the same network structure that produces schedules within a factor of two of optimal.
Reference: [4] <author> P. Fizzano, D. Karger, C. Stein, and J. Wein. </author> <title> Job scheduling in rings. </title> <booktitle> In Proceedings of the 6th ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <year> 1994. </year>
Reference-contexts: We denote by j i the number of jobs currently on processor p i . The network model just described allows a machine to process a job on the same step that it passes a job. This model is the same as that in many previous papers <ref> [1, 3, 4, 5, 6] </ref> and is supported by current technology [2]. Additional restrictions that we place on the model are that it takes unit time to traverse a network link and the capacity of each link is one job per time unit.
Reference: [5] <author> B. Hoppe and E. Tardos. </author> <title> The quickest tranship-ment problem. </title> <note> unpublished manuscript submitted to SODA 95, </note> <year> 1994. </year>
Reference-contexts: We denote by j i the number of jobs currently on processor p i . The network model just described allows a machine to process a job on the same step that it passes a job. This model is the same as that in many previous papers <ref> [1, 3, 4, 5, 6] </ref> and is supported by current technology [2]. Additional restrictions that we place on the model are that it takes unit time to traverse a network link and the capacity of each link is one job per time unit.
Reference: [6] <author> C. A. Phillips, C. Stein, and J. Wein. </author> <title> Task scheduling in networks. </title> <booktitle> In Proceedings of the 4th Scandinavian Workshop on Algorithm Theory, </booktitle> <month> July </month> <year> 1994. </year> <note> To appear. 8 </note>
Reference-contexts: We denote by j i the number of jobs currently on processor p i . The network model just described allows a machine to process a job on the same step that it passes a job. This model is the same as that in many previous papers <ref> [1, 3, 4, 5, 6] </ref> and is supported by current technology [2]. Additional restrictions that we place on the model are that it takes unit time to traverse a network link and the capacity of each link is one job per time unit.
References-found: 6

