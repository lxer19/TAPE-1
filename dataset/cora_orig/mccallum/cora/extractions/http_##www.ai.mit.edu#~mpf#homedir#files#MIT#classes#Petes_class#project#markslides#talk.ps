URL: http://www.ai.mit.edu/~mpf/homedir/files/MIT/classes/Petes_class/project/markslides/talk.ps
Refering-URL: 
Root-URL: 
Email: torrance@ai.mit.edu  
Title: Lessons on Representation Design from Discovery Systems and Genetic Algorithms  
Author: Mark C. Torrance 
Date: April 15, 1992  
Affiliation: Artificial Intelligence Laboratory Massachusetts Institute of Technology  
Abstract: One consideration in designing representations for domain knowledge is the ability of an automated reasoning system to manipulate, use, and derive consequences within the representation. Work on designing Discovery Systems has uncovered several characteristics of representations which facilitate automated reasoning. I will discuss the Discovery Systems AM and EURISKO by Lenat, CYRANO by Ken Haase, and the related work of Fawcett and Utgoff on automatic feature generation. I will also present the relationship of representation design in Genetic Algorithm systems, as worked on by John Holland and John Koza, to representations for knowledge based systems.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. E. Fawcett and P. E. Utgoff, </author> <title> Automatic feature generation for prob lem solving systems, </title> <type> Technical Report 92-9, COINS, </type> <institution> University of Mas-sachusetts at Amherst, MA, Department of Computer and Information Science, </institution> <year> 1992, </year> <title> Discusses work forthcoming in a PhD dissertation about a system to derive features relevant to solving a problem from automatic analysis of the structure of the problem. </title>
Reference: [2] <author> K. Haase, </author> <title> Discovery systems: From AM to CYRANO, MIT AI Lab Working Paper 293. A retrospective analysis on Lenat's AM work with an emphasis on the effect of the power and characteristics of the representation on the overall performance of a Discovery System. Also discusses CYRANO, Haase's own discovery system, and the importance of concept formation operators that can operate again on their own output (the cycle of discovery), </title> <month> March </month> <year> 1987. </year>
Reference: [3] <author> J. Holland, </author> <title> Adaptation in Natural and Artificial Systems, </title> <editor> U. </editor> <publisher> of Michigan Press, </publisher> <year> 1975, </year> <title> Seminal analytic text on Genetic Algorithms and Classifier Systems. Discusses the influence of the representation of the problem and the desired solution on the success of these algorithms. </title>
Reference: [4] <author> J. R. Koza, </author> <title> Genetic programming: A paradigm for genetically breeding populations of computer programs to solve problems, </title> <type> Technical report, </type> <institution> Stanford University Department of Computer Science, Margaret Jacks Hall, Stanford, </institution> <address> CA 94305, </address> <month> April </month> <year> 1990, </year> <title> Describes a different representation for programs which yields a higher hit-rate of meaningful programs; Lisp s-expressions. </title>
Reference: [5] <author> D. B. </author> <title> Lenat, </title> <journal> Artificial Intelligence, </journal> <year> 1982, </year> <title> Lenat's three article series about heuristics, introducing and discussing his program EURISKO. </title>
Reference: [6] <author> D. B. Lenat and J. S. Brown, </author> <booktitle> Artifical Intelligence, </booktitle> <volume> 23 </volume> <pages> 269-294, </pages> <year> 1984, </year> <title> Not an article debunking his own work, but rather an explanation of the features of the representation he chose which facilitated AM's success, and how he learned enough from that experience to design EURISKO with those principles explicit at the start. </title> <type> 10 </type>
References-found: 6

