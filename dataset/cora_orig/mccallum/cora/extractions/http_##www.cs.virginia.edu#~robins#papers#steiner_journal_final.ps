URL: http://www.cs.virginia.edu/~robins/papers/steiner_journal_final.ps
Refering-URL: http://www.cs.virginia.edu/~robins/publications.html
Root-URL: http://www.cs.virginia.edu
Title: Closing the Gap: Near-Optimal Steiner Trees in Polynomial Time  
Author: Jeff Griffith, Gabriel Robins, Jeffrey S. Salowe and Tongtong Zhang 
Address: Charlottesville, VA 22903-2442  
Affiliation: Department of Computer Science, University of Virginia,  
Abstract: The minimum rectilinear Steiner tree (MRST) problem arises in global routing and wiring estimation, as well as in many other areas. The MRST problem is known to be NP-hard, and the best performing MRST heuristic to date is the Iterated 1-Steiner (I1S) method recently proposed by Kahng and Robins. In this paper we develop a straightforward, efficient implementation of I1S, achieving a speedup factor of three orders of magnitude over previous implementations. We also give a parallel implementation that achieves near-linear speedup on multiple processors. Several performance-improving enhancements enable us to obtain Steiner trees with average cost within 0.25% of optimal, and our methods produce optimal solutions in up to 90% of the cases for typical nets. We generalize I1S and its variants to three dimensions, as well as to the case where all the pins lie on k parallel planes, which arises in, e.g., multi-layer routing. Motivated by the goal of reducing the running times of our algorithms, we prove that any pointset in the Manhattan plane has a minimum spanning tree (MST) with maximum degree 4, and that in three-dimensional Manhattan space every pointset has an MST with maximum degree of 14 (the best previous upper bounds on the maximum MST degree in two and three dimensional are 6 and 26, respectively); these results are of independent theoretical interest and also settle an open problem in complexity in theory.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. J. Alexander and G. Robins, </author> <title> An Architecture-Independent Unified Approach to FPGA Routing, </title> <type> Tech. Rep. </type> <institution> CS-93-51, Department of Computer Science, University of Virginia, </institution> <month> October </month> <year> 1993. </year>
Reference-contexts: The Iterated 1-Steiner method was generalized to arbitrary weighted graphs by Alexander and Robins <ref> [1] </ref> [2], and is thus a suitable basis of a practical global router which must handle congestion, obstacles, etc. [15].
Reference: [2] <author> M. J. Alexander and G. Robins, </author> <title> A New Approach to FPGA Routing Based on Multi-Weighted Graphs, </title> <booktitle> in Proc. ACM/SIGDA International Workshop on Field-Programmable Gate Arrays, </booktitle> <address> Berkeley, CA, </address> <month> February </month> <year> 1994. </year>
Reference-contexts: The Iterated 1-Steiner method was generalized to arbitrary weighted graphs by Alexander and Robins [1] <ref> [2] </ref>, and is thus a suitable basis of a practical global router which must handle congestion, obstacles, etc. [15].
Reference: [3] <author> T. Barrera, J. Griffith, S. A. McKee, G. Robins, and T. Zhang, </author> <title> Toward a Steiner Engine: Enhanced Serial and Parallel Implementations of the Iterated 1-Steiner Algorithm, </title> <booktitle> in Proc. Great Lakes Symp. VLSI, </booktitle> <address> Kalamazoo, MI, </address> <month> March </month> <year> 1993, </year> <pages> pp. 90-94. </pages>
Reference-contexts: Section 7 outlines the parallel implementation, and Section 8 presents extensive simulation results regarding performance, running times, and parallel speedups. We conclude in Section 9 with directions for further research. A preliminary version of this work appeared in <ref> [3] </ref> and in [4]. 2 Robins and Salowe [39] investigate the maximum MST degree for higher dimensions and other L p norms, and relate the maximum MST degree to the so-called "Hadwiger" numbers. 4 2 Review of the Iterated 1-Steiner Method We begin with a review of the Iterated 1-Steiner method
Reference: [4] <author> T. Barrera, J. Griffith, G. Robins, and T. Zhang, </author> <title> Narrowing the Gap: Near-Optimal Steiner Trees in Polynomial Time, </title> <booktitle> in Proc. IEEE Intl. ASIC Conf., </booktitle> <address> Rochester, NY, </address> <month> September </month> <year> 1993, </year> <pages> pp. 87-90. </pages>
Reference-contexts: Section 7 outlines the parallel implementation, and Section 8 presents extensive simulation results regarding performance, running times, and parallel speedups. We conclude in Section 9 with directions for further research. A preliminary version of this work appeared in [3] and in <ref> [4] </ref>. 2 Robins and Salowe [39] investigate the maximum MST degree for higher dimensions and other L p norms, and relate the maximum MST degree to the so-called "Hadwiger" numbers. 4 2 Review of the Iterated 1-Steiner Method We begin with a review of the Iterated 1-Steiner method of Kahng and
Reference: [5] <author> A. Beguelin, J. J. Dongarra, G. A. Geist, R. Manchek, and V. S. Sunderam, </author> <title> A User's Guide to PVM: Parallel Virtual Machine, </title> <type> Tech. Rep. </type> <institution> ORNL/TR-11826, Oak Ridge National Laboratory, </institution> <year> 1991. </year>
Reference-contexts: This procedure is iterated until no improving candidates can be found (the B1S algorithm parallelizes similarly). We used the Parallel Virtual Machine (PVM) system <ref> [5] </ref> [43] to control remote processors. PVM is a widely-available software package that allows a heterogeneous network of parallel and serial computers to be used as a single computational resource. <p> Using PVM as a framework for parallelism alleviates the need to hand-code the synchronization and communication protocols from scratch; for the specific details on how PVM manages the underlying system resources see <ref> [5] </ref> [43]. Each of the processors in our parallel implementation is a SUN workstation, communicating over an Ethernet.
Reference: [6] <author> P. Berman, U. Foessmeier, M. Karpinski, M. Kaufmann, and A. Z. Zelikovsky, </author> <title> Approaching the 5/4 Approximation for Rectilinear Steiner Trees, </title> <type> Tech. Rep. </type> <institution> WSI-94-06, Wilhelm Schickard-Institut fur Informatik, </institution> <year> 1994. </year>
Reference-contexts: Since Steiner tree construction is a computationally expensive part of global routing, our parallel implementation may be viewed as an important first step toward obtaining a "Steiner engine", i.e. an efficient tool for producing near-optimal Steiner trees. 1 Recently, Berman and Ramaiyer [7] and Foessmeier, Kaufmann and Zelikovsky <ref> [6] </ref> [13] have extended the fundamental work of Zelikovsky [46] [47] to yield a method similar to I1S (specifically, to the "batched" I1S method described below) with performance ratio bounded by 11 8 ; this work settles in the affirmative the longstanding open question of whether there exists a polynomial-time rectilinear
Reference: [7] <author> P. Berman and V. Ramaiyer, </author> <title> Improved Approximations for the Steiner Tree Problem, </title> <booktitle> in Proc. ACM/SIAM Symp. Discrete Algorithms, </booktitle> <address> San Francisco, CA, </address> <month> January </month> <year> 1992, </year> <pages> pp. 325-334. </pages>
Reference-contexts: Since Steiner tree construction is a computationally expensive part of global routing, our parallel implementation may be viewed as an important first step toward obtaining a "Steiner engine", i.e. an efficient tool for producing near-optimal Steiner trees. 1 Recently, Berman and Ramaiyer <ref> [7] </ref> and Foessmeier, Kaufmann and Zelikovsky [6] [13] have extended the fundamental work of Zelikovsky [46] [47] to yield a method similar to I1S (specifically, to the "batched" I1S method described below) with performance ratio bounded by 11 8 ; this work settles in the affirmative the longstanding open question of
Reference: [8] <author> M. Borah, R. M. Owens, and M. J. Irwin, </author> <title> An Edge-Based Heuristic for Rectilinear Steiner Trees, </title> <type> Tech. Rep. </type> <institution> CS-93-003, Department of Computer Science, Pennsylvania State University, </institution> <year> 1993. </year>
Reference-contexts: with cost averaging almost 11% less than the MST cost. 3 We timed the execution of the serial and parallel versions of B1S, using both the naive O (n 4 log n) 3 Recently, other Steiner heuristics with performance approaching that of I1S were proposed by Borah, Owens, and Irwin <ref> [8] </ref>, Chao and Hsu [10] and by Lewis, Pong and VanCleave [33]. 20 implementation [28] and our new O (n 3 ) implementation, which incorporates the efficient, dynamic MST maintenance as described in Section 3.
Reference: [9] <author> D. Braun, J. Burns, S. Devadas, H. K. Ma, K. M. F. Romeo, and A. Sangiovanni-Vincentelli, Chameleon: </author> <title> A New Multi-Layer Channel Router, </title> <booktitle> in Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1986, </year> <pages> pp. 495-502. </pages>
Reference-contexts: Next, we generalize I1S and its variants to three dimensions, as well as to the intermediate case where all pins lie on k parallel planes. This formulation has several applications, including multi-layer routing <ref> [9] </ref> [20] [22], and the design of buildings [41]. Empirical testing suggests that this approach is effective for three-dimensional Steiner routing, yielding up to 15% average improvement over MST cost in three-dimensional Manhattan space. <p> We call this streamlined version of B1S the modified batched 1-Steiner (MB1S) algorithm. 5 Steiner Routing in Three Dimensions Three-dimensional packaging is emerging as a viable VLSI design technology <ref> [9] </ref> [20] [22]; however, most existing CAD routing tools and techniques still implicitly address two dimensions only. In contrast, the EIkS method readily generalizes to arbitrary dimensions.
Reference: [10] <author> T. H. Chao and Y. C. Hsu, </author> <title> Rectilinear Steiner Tree Construction by Local and Global Refinement, </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <year> (1994), </year> <pages> pp. 303-309. </pages>
Reference-contexts: 11% less than the MST cost. 3 We timed the execution of the serial and parallel versions of B1S, using both the naive O (n 4 log n) 3 Recently, other Steiner heuristics with performance approaching that of I1S were proposed by Borah, Owens, and Irwin [8], Chao and Hsu <ref> [10] </ref> and by Lewis, Pong and VanCleave [33]. 20 implementation [28] and our new O (n 3 ) implementation, which incorporates the efficient, dynamic MST maintenance as described in Section 3.
Reference: [11] <author> T. H. Cormen, C. E. Leiserson, and R. Rivest, </author> <title> Introduction to Algorithms, </title> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: Using a reduction from the NP-complete problem of finding a maximum independent set in a graph, it is easy to show that our maximization problem is NP-complete also, even if the independent sets obey the "inheritance property", one of the axioms for matroids (see Cormen et al. <ref> [11] </ref>). Our independent sets do not necessarily obey the inheritance property or the exchange property for matroids. Nevertheless, we can use a greedy approximation, described in Figure 5, to approximate the weight of a maximum independent set.
Reference: [12] <author> J. T. Croft, K. J. Falconer, and R. K. Guy, </author> <title> Unsolved Problems in Geometry, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1991. </year> <month> 27 </month>
Reference-contexts: Note that the best previously known bound for the maximum MST degree in three-dimensional Manhattan space was 26, as implied by a result from the theory of sphere packing <ref> [12] </ref> [44].
Reference: [13] <author> U. Foessmeier, M. Kaufmann, and A. Z. Zelikovsky, </author> <title> Fast Approximation Algorithms for the Rectilinear Steiner Tree Problem, </title> <type> Tech. Rep. </type> <institution> WSI-93-14, Wilhelm Schickard-Institut fur In-formatik, </institution> <year> 1993. </year>
Reference-contexts: Since Steiner tree construction is a computationally expensive part of global routing, our parallel implementation may be viewed as an important first step toward obtaining a "Steiner engine", i.e. an efficient tool for producing near-optimal Steiner trees. 1 Recently, Berman and Ramaiyer [7] and Foessmeier, Kaufmann and Zelikovsky [6] <ref> [13] </ref> have extended the fundamental work of Zelikovsky [46] [47] to yield a method similar to I1S (specifically, to the "batched" I1S method described below) with performance ratio bounded by 11 8 ; this work settles in the affirmative the longstanding open question of whether there exists a polynomial-time rectilinear Steiner <p> At the time of this writing, Berman, Foessmeier, Karpinski, Kaufmann and Zelikovsky <ref> [13] </ref> further improved the performance bound of their polynomial-time rectilinear Steiner heuristic to 61 48 = 1:271. Our third contribution entails several performance-improving enhancements to the I1S method.
Reference: [14] <author> G. N. Fredrickson, </author> <title> Data Structures for On-Line Updating of Minimum Spanning Trees, </title> <journal> SIAM J. Comput., </journal> <volume> 14 (1985), </volume> <pages> pp. 781-798. </pages>
Reference-contexts: An execution example of this method is given in Figure 6, and Figure 7 describes it formally. Note that dynamic MST maintenance can also be achieved in sub-linear time <ref> [14] </ref>, but such methods seem impractical due to their complicated description and large hidden constants.
Reference: [15] <author> J. L. Ganley and J. P. Cohoon, </author> <title> Routing a Multi-Terminal Critical Net: Steiner Tree Construction in the Presence of Obstacles, </title> <booktitle> in Proc. IEEE Intl. Symp. Circuits and Systems, </booktitle> <address> London, England, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: The Iterated 1-Steiner method was generalized to arbitrary weighted graphs by Alexander and Robins [1] [2], and is thus a suitable basis of a practical global router which must handle congestion, obstacles, etc. <ref> [15] </ref>. <p> The serial speedup grows as a function of the net size, since our new serial implementation is asymptotically faster than the naive serial implementation. As noted by Ganley and Cohoon <ref> [15] </ref>, most nets in actual VLSI designs have a small number of pins (i.e., less than 10). It is therefore of particular interest to observe the behavior of our algorithms on small nets.
Reference: [16] <author> M. Garey and D. S. Johnson, </author> <title> The Rectilinear Steiner Problem is NP-Complete, </title> <journal> SIAM J. Applied Math., </journal> <volume> 32 (1977), </volume> <pages> pp. 826-834. </pages>
Reference-contexts: However, a second major result by Garey and Johnson <ref> [16] </ref> establishes that despite this restriction on the solution space, the MRST problem remains NP-complete; this has given rise to numerous heuristics as surveyed by Hwang, Richards and Winter [27]. the intersections of all the horizontal and vertical lines passing through all the points.
Reference: [17] <author> G. Georgakopoulos and C. H. Papadimitriou, </author> <title> The 1-Steiner Tree Problem, </title> <journal> J. Algorithms, </journal> <volume> 8 (1987), </volume> <pages> pp. 122-130. </pages>
Reference-contexts: Figure 3 illustrates a sample execution of I1S, and Figure 4 describes the algorithm formally. (a) (b) (c) Steiner point is formed and is thus eliminated from the topology. Although a single 1-Steiner point may be found in O (n 2 ) time using complicated techniques from computational geometry <ref> [17] </ref> [28], such methods suffer from large constants in their time complexities, and are notoriously difficult to implement.
Reference: [18] <author> E. N. Gilbert and H. O. Pollak, </author> <title> Steiner Minimal Trees, </title> <journal> SIAM J. Applied Math., </journal> <volume> 16 (1968), </volume> <pages> pp. 1-29. </pages>
Reference-contexts: The cost of the MST over P [ S will decrease with each added point, and the construction terminates when there is no x with M ST (P [ S; fxg) &gt; 0. Although a Steiner tree may contain at most n 2 Steiner points <ref> [18] </ref>, I1S may add more than n 2 Steiner points; therefore, at each step we eliminate any extraneous Steiner points having degree 2 or less in the MST over P [ S.
Reference: [19] <author> R. L. Graham and F. K. Hwang, </author> <title> A Remark on Steiner Minimal Trees, </title> <type> Bull. </type> <institution> Inst. Math. Acad. Sinica, </institution> <month> 4 </month> <year> (1976), </year> <pages> pp. 177-182. </pages>
Reference-contexts: The three-dimensional analog of Hwang's result suggests that the maximum MST/MRST ratio for three dimensions is at most 5 3 (this is a consequence of a more general conjecture for higher dimensions <ref> [19] </ref>), although there is currently no known proof of this. An example consisting of six points located in the middles of the faces of a rectilinear cube establishes that 5 3 is a lower bound for the worst MST/MRST performance ratio in three dimensions.
Reference: [20] <author> A. Hanafusa, Y. Yamashita, and M. Yasuda, </author> <title> Three-Dimensional Routing for Multilayer Ceramic Printed Circuit Boards, </title> <booktitle> in Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <address> Santa Clara, CA, </address> <month> November </month> <year> 1990, </year> <pages> pp. 386-389. </pages>
Reference-contexts: Next, we generalize I1S and its variants to three dimensions, as well as to the intermediate case where all pins lie on k parallel planes. This formulation has several applications, including multi-layer routing [9] <ref> [20] </ref> [22], and the design of buildings [41]. Empirical testing suggests that this approach is effective for three-dimensional Steiner routing, yielding up to 15% average improvement over MST cost in three-dimensional Manhattan space. <p> We call this streamlined version of B1S the modified batched 1-Steiner (MB1S) algorithm. 5 Steiner Routing in Three Dimensions Three-dimensional packaging is emerging as a viable VLSI design technology [9] <ref> [20] </ref> [22]; however, most existing CAD routing tools and techniques still implicitly address two dimensions only. In contrast, the EIkS method readily generalizes to arbitrary dimensions.
Reference: [21] <author> M. Hanan, </author> <title> On Steiner's Problem With Rectilinear Distance, </title> <journal> SIAM J. Applied Math., </journal> <volume> 14 (1966), </volume> <pages> pp. 255-265. </pages>
Reference-contexts: Figure 1 shows an MST and an MRST for the same four-pin net. represent the original pointset P , while solid dots represent the set S of added Steiner points. Research on the MRST problem has been guided by several fundamental results. First, Hanan <ref> [21] </ref> has shown that there always exists an MRST with Steiner points chosen from the intersections of all the horizontal and vertical lines passing through all the points in P (see Figure 2), and this result was generalized by Snyder [42] to all higher dimensions.
Reference: [22] <author> A. C. Harter, </author> <title> Three-Dimensional Integrated Circuit Layout, </title> <publisher> Cambridge University Press, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: Next, we generalize I1S and its variants to three dimensions, as well as to the intermediate case where all pins lie on k parallel planes. This formulation has several applications, including multi-layer routing [9] [20] <ref> [22] </ref>, and the design of buildings [41]. Empirical testing suggests that this approach is effective for three-dimensional Steiner routing, yielding up to 15% average improvement over MST cost in three-dimensional Manhattan space. <p> We call this streamlined version of B1S the modified batched 1-Steiner (MB1S) algorithm. 5 Steiner Routing in Three Dimensions Three-dimensional packaging is emerging as a viable VLSI design technology [9] [20] <ref> [22] </ref>; however, most existing CAD routing tools and techniques still implicitly address two dimensions only. In contrast, the EIkS method readily generalizes to arbitrary dimensions.
Reference: [23] <author> N. Hasan, G. Vijayan, and C. K. Wong, </author> <title> A Neighborhood Improvement Algorithm for Rectilinear Steiner Trees, </title> <booktitle> in Proc. IEEE Intl. Symp. Circuits and Systems, </booktitle> <address> New Orleans, LA, </address> <year> 1990. </year>
Reference-contexts: This implies that any MST-based strategy that improves upon an initial MST topology will also enjoy a performance ratio of at most 3 2 . This has prompted a large number of Steiner tree heuristics that resemble classic MST construction methods <ref> [23] </ref> [24] [26] [31] [32], all producing 2 Steiner trees with average cost 7% to 9% smaller than MST cost [27]. Unfortunately, all MST-based MRST constructions were recently shown by Kahng and Robins [29] to have a worst-case performance ratio of exactly 3 2 .
Reference: [24] <author> J.-M. Ho, G. Vijayan, and C. K. Wong, </author> <title> New Algorithms for the Rectilinear Steiner Tree Problem, </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 9 (1990), </volume> <pages> pp. 185-193. </pages>
Reference-contexts: This implies that any MST-based strategy that improves upon an initial MST topology will also enjoy a performance ratio of at most 3 2 . This has prompted a large number of Steiner tree heuristics that resemble classic MST construction methods [23] <ref> [24] </ref> [26] [31] [32], all producing 2 Steiner trees with average cost 7% to 9% smaller than MST cost [27]. Unfortunately, all MST-based MRST constructions were recently shown by Kahng and Robins [29] to have a worst-case performance ratio of exactly 3 2 . <p> This follows from the observation that each point can have at most 8 neighbors in a rectilinear planar MST, i.e. at most one per octant <ref> [24] </ref>. <p> Note that the best previously known upper bound for the maximum MST degree in the Manhattan plane was 6, as was stated without proof in <ref> [24] </ref>.
Reference: [25] <author> F. K. Hwang, </author> <title> On Steiner Minimal Trees with Rectilinear Distance, </title> <journal> SIAM J. Applied Math., </journal> <volume> 30 (1976), </volume> <pages> pp. 104-114. </pages>
Reference-contexts: In solving intractable problems, we often seek provably-good heuristics having bounded worst-case error from optimal. Thus, a third important result is the discovery by Hwang <ref> [25] </ref> that the rectilinear MST is a fairly good approximation to the MRST, with a worst-case performance ratio of cost (MST ) cost (MRST ) 3 2 . <p> yield a method similar to I1S (specifically, to the "batched" I1S method described below) with performance ratio bounded by 11 8 ; this work settles in the affirmative the longstanding open question of whether there exists a polynomial-time rectilinear Steiner tree heuristic with performance ratio strictly smaller than 3 2 <ref> [25] </ref>. At the time of this writing, Berman, Foessmeier, Karpinski, Kaufmann and Zelikovsky [13] further improved the performance bound of their polynomial-time rectilinear Steiner heuristic to 61 48 = 1:271. Our third contribution entails several performance-improving enhancements to the I1S method.
Reference: [26] <author> F. K. Hwang, </author> <title> An O(n log n) Algorithm for Rectilinear Minimal Spanning Trees, </title> <journal> J. ACM, </journal> <volume> 26 (1979), </volume> <pages> pp. 177-182. </pages>
Reference-contexts: This implies that any MST-based strategy that improves upon an initial MST topology will also enjoy a performance ratio of at most 3 2 . This has prompted a large number of Steiner tree heuristics that resemble classic MST construction methods [23] [24] <ref> [26] </ref> [31] [32], all producing 2 Steiner trees with average cost 7% to 9% smaller than MST cost [27]. Unfortunately, all MST-based MRST constructions were recently shown by Kahng and Robins [29] to have a worst-case performance ratio of exactly 3 2 .
Reference: [27] <author> F. K. Hwang, D. S. Richards, and P. Winter, </author> <title> The Steiner Tree Problem, </title> <publisher> North-Holland, </publisher> <year> 1992. </year>
Reference-contexts: However, a second major result by Garey and Johnson [16] establishes that despite this restriction on the solution space, the MRST problem remains NP-complete; this has given rise to numerous heuristics as surveyed by Hwang, Richards and Winter <ref> [27] </ref>. the intersections of all the horizontal and vertical lines passing through all the points. In solving intractable problems, we often seek provably-good heuristics having bounded worst-case error from optimal. <p> This has prompted a large number of Steiner tree heuristics that resemble classic MST construction methods [23] [24] [26] [31] [32], all producing 2 Steiner trees with average cost 7% to 9% smaller than MST cost <ref> [27] </ref>. Unfortunately, all MST-based MRST constructions were recently shown by Kahng and Robins [29] to have a worst-case performance ratio of exactly 3 2 . <p> The instances were generated randomly by independently choosing the coordinates of each point from a uniform distribution in a 10000 fi 10000 grid; such instances are statistically similar to the pin locations of actual VLSI nets and are the standard testbed for Steiner tree heuristics <ref> [27] </ref>. As is the convention in the Steiner approximation literature [27], we evaluate the performance of our method by comparing the cost of our solutions to the MST cost over the same inputs. Performance results are summarized in Table 1 and are illustrated in Figures 14 (a) through 14 (c). <p> by independently choosing the coordinates of each point from a uniform distribution in a 10000 fi 10000 grid; such instances are statistically similar to the pin locations of actual VLSI nets and are the standard testbed for Steiner tree heuristics <ref> [27] </ref>. As is the convention in the Steiner approximation literature [27], we evaluate the performance of our method by comparing the cost of our solutions to the MST cost over the same inputs. Performance results are summarized in Table 1 and are illustrated in Figures 14 (a) through 14 (c).
Reference: [28] <author> A. B. Kahng and G. Robins, </author> <title> A New Class of Iterative Steiner Tree Heuristics With Good Performance, </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 11 (1992), </volume> <pages> pp. 893-902. </pages>
Reference-contexts: Unfortunately, all MST-based MRST constructions were recently shown by Kahng and Robins [29] to have a worst-case performance ratio of exactly 3 2 . This negative result has motivated research into alternate schemes for MRST approximation, with the best performing among these being the Iterated 1-Steiner (I1S) algorithm <ref> [28] </ref> [38]. I1S always performs strictly better than 3 2 times optimal 1 , and also performs very well in practice, achieving almost 11% average improvement over MST cost, which is on average less than 0:5% away from optimal [40]. <p> The performance success of I1S was achieved at the expense of a high time complexity: although a more efficient variant of I1S can be implemented to run within time O (n 2 log n) <ref> [28] </ref>, the computational geometric methods employed to achieve this time bound hide large constant factors and are also difficult to code. Thus, actual previous implementations of I1S typically use a more straight-forward approach which requires time O (n 4 log n). <p> Robins and Salowe [39] investigate the maximum MST degree for higher dimensions and other L p norms, and relate the maximum MST degree to the so-called "Hadwiger" numbers. 4 2 Review of the Iterated 1-Steiner Method We begin with a review of the Iterated 1-Steiner method of Kahng and Robins <ref> [28] </ref>. For two pointsets P and S we define the MST savings of S with respect to P as M ST (P; S) = cost (M ST (P )) cost (M ST (P [ S)). <p> Although a single 1-Steiner point may be found in O (n 2 ) time using complicated techniques from computational geometry [17] <ref> [28] </ref>, such methods suffer from large constants in their time complexities, and are notoriously difficult to implement. Thus, a batched variant of I1S is usually favored, which 5 Algorithm Iterated 1-Steiner (I1S) [28] Input: A set P of n points Output: A rectilinear Steiner tree over P S = ; While <p> 1-Steiner point may be found in O (n 2 ) time using complicated techniques from computational geometry [17] <ref> [28] </ref>, such methods suffer from large constants in their time complexities, and are notoriously difficult to implement. Thus, a batched variant of I1S is usually favored, which 5 Algorithm Iterated 1-Steiner (I1S) [28] Input: A set P of n points Output: A rectilinear Steiner tree over P S = ; While T = fx 2 H (P )jM ST (P [ S; fxg) &gt; 0g 6= ; Do Find x 2 T with maximum M ST (P [ S; fxg) S = S <p> M ST (P [ S; fxg) S = S [ fxg Remove from S points with degree 2 in M ST (P [ S) Output MST (P [ S) efficiently adds an entire set of "independent" Steiner points in a single round, thereby affording both practicality and reduced time complexity <ref> [28] </ref> [38]. Following Hanan's result, for each candidate Steiner point x 2 H (P ) the Batched 1-Steiner (B1S) variant computes the induced MST savings M ST (P; fxg). <p> The total time required by B1S is O (n 4 log n) per round (the number of rounds in practice is a small constant independent of net size, i.e., less than 3 on average <ref> [28] </ref>). The B1S algorithm is summarized in Figure 5. 6 Algorithm Batched 1-Steiner (B1S) [28] Input: A set P of n points Output: A rectilinear Steiner tree over P While T = fx 2 H (P )jM ST (P; fxg) &gt; 0g 6= ; Do S = ; For x 2 <p> The total time required by B1S is O (n 4 log n) per round (the number of rounds in practice is a small constant independent of net size, i.e., less than 3 on average <ref> [28] </ref>). The B1S algorithm is summarized in Figure 5. 6 Algorithm Batched 1-Steiner (B1S) [28] Input: A set P of n points Output: A rectilinear Steiner tree over P While T = fx 2 H (P )jM ST (P; fxg) &gt; 0g 6= ; Do S = ; For x 2 fT in order of non-increasing M ST g Do If M ST (P [ <p> Combining these three techniques of (1) nondeterministic tie-breaking, (2) near-greedy search, and (3) k-Steiner selection, we obtain a new Enhanced Iterated k-Steiner (EIkS) algorithm, as shown in Figure 10. Note that the original I1S algorithm of Kahng and Robins <ref> [28] </ref> (see Figure 4) is equivalent to our new EIkS algorithm with k = 1, m = 1, and ffi = 0. Our EIkS scheme can also be extended using a "non-interfering" criterion as in [28], to yield an enhanced batched k-Steiner (EBkS) algorithm, where a maximal number of Steiner points <p> Note that the original I1S algorithm of Kahng and Robins <ref> [28] </ref> (see Figure 4) is equivalent to our new EIkS algorithm with k = 1, m = 1, and ffi = 0. Our EIkS scheme can also be extended using a "non-interfering" criterion as in [28], to yield an enhanced batched k-Steiner (EBkS) algorithm, where a maximal number of Steiner points are added during each round. The time complexity of EBkS is O (m n 2 (k1) T (n)), where T (n) is the time complexity of B1S. <p> execution of the serial and parallel versions of B1S, using both the naive O (n 4 log n) 3 Recently, other Steiner heuristics with performance approaching that of I1S were proposed by Borah, Owens, and Irwin [8], Chao and Hsu [10] and by Lewis, Pong and VanCleave [33]. 20 implementation <ref> [28] </ref> and our new O (n 3 ) implementation, which incorporates the efficient, dynamic MST maintenance as described in Section 3.
Reference: [29] <author> A. B. Kahng and G. Robins, </author> <title> On Performance Bounds for a Class of Rectilinear Steiner Tree Heuristics in Arbitrary Dimension, </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 11 (1992), </volume> <pages> pp. 1462-1465. </pages>
Reference-contexts: This has prompted a large number of Steiner tree heuristics that resemble classic MST construction methods [23] [24] [26] [31] [32], all producing 2 Steiner trees with average cost 7% to 9% smaller than MST cost [27]. Unfortunately, all MST-based MRST constructions were recently shown by Kahng and Robins <ref> [29] </ref> to have a worst-case performance ratio of exactly 3 2 . This negative result has motivated research into alternate schemes for MRST approximation, with the best performing among these being the Iterated 1-Steiner (I1S) algorithm [28] [38].
Reference: [30] <author> A. B. Kahng and G. Robins, </author> <title> On Optimal Interconnections for VLSI Layout, </title> <publisher> Kluwer Academic Publishers (to appear), </publisher> <address> Boston, MA, </address> <year> 1994. </year>
Reference-contexts: 1 Introduction The minimum rectilinear Steiner tree problem is central to VLSI physical-design phases such as global routing and wiring estimation, where we seek low-cost topologies to interconnect the pins of signal nets <ref> [30] </ref> [37]: The Minimum Rectilinear Steiner Tree (MRST) problem: Given a set P of n points, find a set S of Steiner points such that the minimum rectilinear spanning tree (MST) over P [ S has minimum cost. fl Professor Gabriel Robins, Professor Jeffrey Salowe, and Ms.
Reference: [31] <author> J. H. Lee, N. K. Bose, and F. K. Hwang, </author> <title> Use of Steiner's Problem in Sub-Optimal Routing in Rectilinear Metric, </title> <journal> IEEE Trans. Circuits and Systems, </journal> <volume> 23 (1976), </volume> <pages> pp. 470-476. </pages>
Reference-contexts: This implies that any MST-based strategy that improves upon an initial MST topology will also enjoy a performance ratio of at most 3 2 . This has prompted a large number of Steiner tree heuristics that resemble classic MST construction methods [23] [24] [26] <ref> [31] </ref> [32], all producing 2 Steiner trees with average cost 7% to 9% smaller than MST cost [27]. Unfortunately, all MST-based MRST constructions were recently shown by Kahng and Robins [29] to have a worst-case performance ratio of exactly 3 2 .
Reference: [32] <author> K. W. Lee and C. Sechen, </author> <title> A New Global Router for Row-Based Layout, </title> <booktitle> in Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <address> Santa Clara, CA, </address> <month> November </month> <year> 1990, </year> <pages> pp. 180-183. </pages>
Reference-contexts: This implies that any MST-based strategy that improves upon an initial MST topology will also enjoy a performance ratio of at most 3 2 . This has prompted a large number of Steiner tree heuristics that resemble classic MST construction methods [23] [24] [26] [31] <ref> [32] </ref>, all producing 2 Steiner trees with average cost 7% to 9% smaller than MST cost [27]. Unfortunately, all MST-based MRST constructions were recently shown by Kahng and Robins [29] to have a worst-case performance ratio of exactly 3 2 .
Reference: [33] <author> F. D. Lewis, W. C. Pong, and N. VanCleave, </author> <title> Local Improvement in Steiner Trees, </title> <booktitle> in Proc. Great Lakes Symp. VLSI, </booktitle> <address> Kalamazoo, MI, </address> <month> March </month> <year> 1993, </year> <pages> pp. 105-106. </pages>
Reference-contexts: We timed the execution of the serial and parallel versions of B1S, using both the naive O (n 4 log n) 3 Recently, other Steiner heuristics with performance approaching that of I1S were proposed by Borah, Owens, and Irwin [8], Chao and Hsu [10] and by Lewis, Pong and VanCleave <ref> [33] </ref>. 20 implementation [28] and our new O (n 3 ) implementation, which incorporates the efficient, dynamic MST maintenance as described in Section 3.
Reference: [34] <author> A. L. Loeb, </author> <title> Space Structures: Their Harmony and Counterpoint, </title> <publisher> Birkhauser, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: Such a partition corresponds to the faces of a truncated cube (Figure 11 (a)), i.e., a solid obtained by chopping off the corners of a cube, yielding 6 square faces and 8 equilateral triangle faces (Figure 11 (b)); this solid is known as a "cuboctahedron" <ref> [34] </ref>. The 14 solid regions of this partition are induced by the 14 faces of the cuboc-tahedron, namely the 6 pyramids with square cross-section (Figure 11 (c)) and the 8 pyramids with triangular cross-section (Figure 11 (d)).
Reference: [35] <author> C. Monma and S. Suri, </author> <title> Transitions in geometric minimum spanning trees, Discrete & Computational Geometry, </title> <booktitle> 8 (1992), </booktitle> <pages> pp. 265-293. </pages>
Reference-contexts: Similarly, Corollary 6.3 implies that the degree-bounded MST problem in three-dimensional Manhattan space is solvable in polynomial time when the degree bound is fixed at 14 or more (since we have shown how to efficiently find an ordinary MST that meets such maximum degree constraints). Monma and Suri <ref> [35] </ref> used a similar perturbation argument to prove that for any poinset in the Euclidean plane, there is an MST with maximum degree of 5. 7 A Parallel Implementation Since a typical CAD environment consists of a network of workstations, exploiting the available large-grain parallelism provides a natural and effective means
Reference: [36] <author> C. H. Papadimitriou and U. V. Vazirani, </author> <title> On Two Geometric Problems Relating to the Traveling Salesman Problem, </title> <journal> J. Algorithms, </journal> <volume> 5 (1984), </volume> <pages> pp. 231-246. </pages>
Reference-contexts: Our results regarding MST bounds also settle some open questions in complexity theory, since it is known that the problem of finding a degree-bounded MST is NP-complete, even when the degree bound is fixed at 2 (yielding the Traveling Salesman Problem), or at 3 as shown by Papadimitriou and Vazirani <ref> [36] </ref>. Corollary 6.2 implies that the degree-bounded MST problem in the Manhattan plane is solvable in polynomial time when the degree bound is fixed at 4 or more, since we have shown how to efficiently find an MST that meets these maximum degree constraints; this was previously an open problem.
Reference: [37] <author> B. T. Preas and M. J. Lorenzetti, </author> <title> Physical Design Automation of VLSI Systems, </title> <address> Ben-jamin/Cummings, Menlo Park, CA, </address> <year> 1988. </year>
Reference-contexts: 1 Introduction The minimum rectilinear Steiner tree problem is central to VLSI physical-design phases such as global routing and wiring estimation, where we seek low-cost topologies to interconnect the pins of signal nets [30] <ref> [37] </ref>: The Minimum Rectilinear Steiner Tree (MRST) problem: Given a set P of n points, find a set S of Steiner points such that the minimum rectilinear spanning tree (MST) over P [ S has minimum cost. fl Professor Gabriel Robins, Professor Jeffrey Salowe, and Ms.
Reference: [38] <author> G. Robins, </author> <title> On Optimal Interconnections, </title> <type> Ph.D. Dissertation, </type> <institution> CSD-TR-920024, Department of Computer Science, UCLA, </institution> <year> 1992. </year>
Reference-contexts: Unfortunately, all MST-based MRST constructions were recently shown by Kahng and Robins [29] to have a worst-case performance ratio of exactly 3 2 . This negative result has motivated research into alternate schemes for MRST approximation, with the best performing among these being the Iterated 1-Steiner (I1S) algorithm [28] <ref> [38] </ref>. I1S always performs strictly better than 3 2 times optimal 1 , and also performs very well in practice, achieving almost 11% average improvement over MST cost, which is on average less than 0:5% away from optimal [40]. <p> ST (P [ S; fxg) S = S [ fxg Remove from S points with degree 2 in M ST (P [ S) Output MST (P [ S) efficiently adds an entire set of "independent" Steiner points in a single round, thereby affording both practicality and reduced time complexity [28] <ref> [38] </ref>. Following Hanan's result, for each candidate Steiner point x 2 H (P ) the Batched 1-Steiner (B1S) variant computes the induced MST savings M ST (P; fxg).
Reference: [39] <author> G. Robins and J. S. Salowe, </author> <title> On the Maximum Degree of Minimum Spanning Trees, </title> <booktitle> in Proc. ACM Symp. Computational Geometry, </booktitle> <address> Stony Brook, NY, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: Our results and algorithms on degree-bounded minimum spanning trees are of significant independent theoretical interest <ref> [39] </ref>, and settle several open issues in complexity theory 2 . The rest of the paper is organized as follows. In Section 2 we review the I1S method. Section 3 outlines our more efficient implementation of I1S, and Section 4 describes a variant of I1S with enhanced performance. <p> Section 7 outlines the parallel implementation, and Section 8 presents extensive simulation results regarding performance, running times, and parallel speedups. We conclude in Section 9 with directions for further research. A preliminary version of this work appeared in [3] and in [4]. 2 Robins and Salowe <ref> [39] </ref> investigate the maximum MST degree for higher dimensions and other L p norms, and relate the maximum MST degree to the so-called "Hadwiger" numbers. 4 2 Review of the Iterated 1-Steiner Method We begin with a review of the Iterated 1-Steiner method of Kahng and Robins [28]. <p> CPU time, since the benchmarks represent average running times over hundreds of cases (the algorithms are CPU-bound, so that swapping and I/O have negligible effect on the running time). theoretical significance; for example, our bounds on the maximum MST degree were used to settle an open problem in complexity theory <ref> [39] </ref>.
Reference: [40] <author> J. S. Salowe and D. M. Warme, </author> <title> An Exact Rectilinear Steiner Tree Algorithm, </title> <booktitle> in Proc. IEEE Intl. Conf. Computer Design, </booktitle> <address> Cambridge, MA, </address> <month> October </month> <year> 1993, </year> <pages> pp. 472-475. </pages>
Reference-contexts: I1S always performs strictly better than 3 2 times optimal 1 , and also performs very well in practice, achieving almost 11% average improvement over MST cost, which is on average less than 0:5% away from optimal <ref> [40] </ref>. The Iterated 1-Steiner method was generalized to arbitrary weighted graphs by Alexander and Robins [1] [2], and is thus a suitable basis of a practical global router which must handle congestion, obstacles, etc. [15]. <p> metaheuristic over heuristics B1S and MB1S, i.e., the best solution found by either of these heuristics; * META (EB1S,I2S,EI2S) The metaheuristic over EB1S, I2S, and EI2S; * META (B1S,MB1S,EB1S,I2S,EI2S) The metaheuristic over B1S, MB1S, EB1S, I2S, and 22 EI2S; * OPT The optimal Steiner tree algorithm of Salowe and Warme <ref> [40] </ref>. Recall from the discussion at the end of Section 4 that MB1S is a more efficient version of B1S, since it only examines a fraction of the Hanan candidates in a typical round (i.e., only the ones with positive MST savings in the previous round). <p> OPT is the fastest known optimal rectilinear Steiner tree algorithm <ref> [40] </ref>. All variants have been benchmarked on up to 10000 random instances of each net size. Figure 15 (a) shows the performance comparison of MB1S, EI2S, and OPT, while Table 3 gives more detailed performance data. <p> Table 6 gives more detailed performance data. In all cases, the L parallel planes were uniformly spaced in the unit cube (i.e., they were separated by G L units apart, where G = 10000 is the gridsize). Unfortunately, the OPT algorithm of Salowe and Warme <ref> [40] </ref> does not easily generalize to higher dimensions; thus, we were not able to compare our three-dimensional version of EB1S to optimal. 9 Conclusion We have proposed enhanced serial and parallel implementations of the Batched 1-Steiner heuristic (B1S), achieving speeds of up to three orders of magnitude faster than previous implementations.
Reference: [41] <author> J. M. Smith and J. S. Liebman, </author> <title> Steiner Trees, Steiner Circuits and the Interference Problem in Building Design, </title> <journal> Engineering Optimization, </journal> <volume> 4 (1979), </volume> <pages> pp. 15-36. </pages>
Reference-contexts: Next, we generalize I1S and its variants to three dimensions, as well as to the intermediate case where all pins lie on k parallel planes. This formulation has several applications, including multi-layer routing [9] [20] [22], and the design of buildings <ref> [41] </ref>. Empirical testing suggests that this approach is effective for three-dimensional Steiner routing, yielding up to 15% average improvement over MST cost in three-dimensional Manhattan space.
Reference: [42] <author> T. L. Snyder, </author> <title> On the Exact Location of Steiner Points in General Dimension, </title> <journal> SIAM J. Comput., </journal> <volume> 21 (1992), </volume> <pages> pp. 163-180. </pages>
Reference-contexts: First, Hanan [21] has shown that there always exists an MRST with Steiner points chosen from the intersections of all the horizontal and vertical lines passing through all the points in P (see Figure 2), and this result was generalized by Snyder <ref> [42] </ref> to all higher dimensions. <p> In Section 8 we present simulation data for several combinations of values for L and n. Our three-dimensional EIkS method may be implemented efficiently by using Snyder's <ref> [42] </ref> generalization of Hanan's theorem to higher dimensions. In particular, there always exists an optimal Steiner tree whose Steiner points are chosen from the O (n 3 ) intersections of all orthogonal planes (i.e., planes parallel to the coordinate axis) passing through all points in P .
Reference: [43] <author> V. S. Sunderam, </author> <title> PVM: A Framework for Parallel Distributed Computing, </title> <journal> Concurrency: Practice and Experience, </journal> <volume> 2 (1990), </volume> <pages> pp. 315-339. </pages>
Reference-contexts: This procedure is iterated until no improving candidates can be found (the B1S algorithm parallelizes similarly). We used the Parallel Virtual Machine (PVM) system [5] <ref> [43] </ref> to control remote processors. PVM is a widely-available software package that allows a heterogeneous network of parallel and serial computers to be used as a single computational resource. <p> Using PVM as a framework for parallelism alleviates the need to hand-code the synchronization and communication protocols from scratch; for the specific details on how PVM manages the underlying system resources see [5] <ref> [43] </ref>. Each of the processors in our parallel implementation is a SUN workstation, communicating over an Ethernet.
Reference: [44] <author> G. F. T oth, </author> <title> New Results in the Theory of Packing and Covering, Convexity and its Applications, </title> <year> 1983. </year>
Reference-contexts: Note that the best previously known bound for the maximum MST degree in three-dimensional Manhattan space was 26, as implied by a result from the theory of sphere packing [12] <ref> [44] </ref>.
Reference: [45] <author> A. C. C. Yao, </author> <title> On Constructing Minimum Spanning Trees in k-Dimensional Spaces and Related Problems, </title> <journal> SIAM J. Comput., </journal> <volume> 11 (1982), </volume> <pages> pp. 721-736. </pages>
Reference-contexts: Note that dynamic MST maintenance can also be achieved in sub-linear time [14], but such methods seem impractical due to their complicated description and large hidden constants. A similar method was also used by Yao <ref> [45] </ref> to obtain a sub-quadratic MST algorithm in higher dimensions, but no attempt was made to optimize the number of necessary regions, whereas we also optimize the number of regions.
Reference: [46] <author> A. Z. Zelikovsky, </author> <title> An 11/6 Approximation Algorithm for the Network Steiner Problem, </title> <journal> Algo-rithmica, </journal> <volume> 9 (1993), </volume> <pages> pp. 463-470. </pages>
Reference-contexts: expensive part of global routing, our parallel implementation may be viewed as an important first step toward obtaining a "Steiner engine", i.e. an efficient tool for producing near-optimal Steiner trees. 1 Recently, Berman and Ramaiyer [7] and Foessmeier, Kaufmann and Zelikovsky [6] [13] have extended the fundamental work of Zelikovsky <ref> [46] </ref> [47] to yield a method similar to I1S (specifically, to the "batched" I1S method described below) with performance ratio bounded by 11 8 ; this work settles in the affirmative the longstanding open question of whether there exists a polynomial-time rectilinear Steiner tree heuristic with performance ratio strictly smaller than

References-found: 46

