URL: http://www.cs.virginia.edu/~gjf2a/AAAI_Fall98/papers/Harris.ps
Refering-URL: http://www.cs.virginia.edu/~gjf2a/AAAI_Fall98/sched.html
Root-URL: http://www.cs.virginia.edu
Email: cook@cse.uta.edu,  flewis@arri.uta.edu,  
Title: Using Machine Planning to Design Manufacturing Processes  
Author: Billy Harris and Diane J. Cook and Frank Lewis 
Address: Arlington, TX 76019  Arlington, TX 76019  7300 Jack Newell Blvd. South, Fort Worth, TX 76118  
Affiliation: Department of Computer Science and Engineering, University of Texas at Arlington,  of Computer Science and Engineering, University of Texas at Arlington,  Robotics Research Institute,  
Note: This research was supported in part by the National Science Foundation, under grant GER-9355110. wharris@cse.uta.edu,  Department  Automation  
Abstract: In our current work, we form a manufacturing system using four matrices representing the job sequences and resources required to assemble various products. We convert traditional manufacturing assembly trees into plan operators which our machine planner uses to generate two matrices describing job sequencing. With a combination of ideas from analogical and hierarchical planning, our planner uses a novel approach to improve planning efficiency. The remaining two matrices describe resource usage; we form them by combining an initial assumption of dedicated resources with explicit resource assignment. In addition, we can succinctly incorporate alternate plans into a single matrix set. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Baker, K. </author> <year> 1974. </year> <title> Introduction to Sequencing and Scheduling. </title> <publisher> John Wiley and Sons, </publisher> <address> New York. </address>
Reference-contexts: Assembly Trees Assembly trees are used in manufacturing to specify a partial ordering of jobs required to complete a finished product. An assembly tree (Wolter, Chakrabarty, & Tsao 1992) has a node for each subassembly, and contains information equivalent to the manufacturing bill of materials (BOM) <ref> (Baker 1974) </ref>. An assembly tree or BOM can be considered as a matrix for which entry i; j has a value of 1 if job j is an immediate prerequisite for job i.
Reference: <author> Ghosh, S.; Hendler, J.; Kambhampati, S.; and Kettler, B. </author> <year> 1992. </year> <title> NONLIN Common Lisp Implementation (V1.2): USER MANUAL. </title> <institution> Computer Science Department, University of Maryland. </institution>
Reference-contexts: However, this method can be easily modified to generate more conventional planning operators. We used UM-Nonlin <ref> (Ghosh et al. 1992) </ref> to implement the operators described in this paper. left tree indicates that part B can be constructed by drilling part A.
Reference: <author> Gracanin, D.; Srinivasan, P.; and Valavanis, K. </author> <year> 1994. </year> <title> Parameterized petri nets and their application to planning and coordination in intelligent systems. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics 24(10) </journal> <pages> 1483-1497. </pages>
Reference-contexts: In <ref> (Gracanin, Srinivasan, & Valavanis 1994) </ref>, Gracanin uses a parameterized Petri net to represent the alternate means of assembling an S 4 (shown in Figure 14). Our system can incorporate the alternatives into a matrix notation, which is computationally easier to manipulate.
Reference: <author> Hanks, S., and Weld, D. </author> <year> 1995. </year> <title> A domain-independent algorithm for plan adaptation. </title> <journal> Journal of Artificial Intelligence Research 319-360. </journal>
Reference-contexts: If our problem men-tions n objects, and each stored plan has k objects which must be matched to the new problem, finding the optimal mapping between the two plans may take up to n steps <ref> (Hanks & Weld 1995) </ref>. We believe that search techniques from hierarchical planning (not to be confused with HTN planning) can reduce the cost of analogical match. Hierarchical planners use a divide-and-conquer approach to problem solving by first focusing on the most difficult or most important goals.
Reference: <author> Harris, B.; Lewis, F.; and Cook, D. </author> <year> 1998. </year> <title> Machine planning for manufacturing: Dynamic resource allocation and on-line supervisory control. </title> <note> Journal of Intelligent Manufacturing To Appear. </note>
Reference-contexts: The nodes of the assembly tree can be encoded into HTN operators; thus our planner can find more than one method of constructing an S 4 part. Our polynomial-time algorithm (described in detail in <ref> (Harris, Lewis, & Cook 1998) </ref>) begins by forming separate F v and S v pairs for each solution.
Reference: <author> Ihrig, L., and Kambhampati, S. </author> <year> 1994. </year> <title> Derivation replay for partial-order planning. </title> <booktitle> Proceedings of the 12th National Conference on Artificial Intelligence 992-997. </booktitle>
Reference-contexts: Derivational analogy has been used with both total-order planners (Veloso 1992) and partial-order planners <ref> (Ihrig & Kambhampati 1994) </ref>. Hierarchical Matching Analogy works well if the goal states and initial states are relatively small (even though the plans themselves may be quite complex). However, if most problems have several goals the planner must simultaneously achieve, then deciding which case is most relevant can take time.
Reference: <author> Lewis, F.; Huang, H.; Fierro, R.; and Tacconi, D. </author> <year> 1995. </year> <title> Real-time task planning, resource allocation, and deadlock avoidance. </title> <booktitle> In Proceedings of Workshop on Architectures for Semiotic Modeling, IEEE International Symposium on Intelligent Control, </booktitle> <pages> 347-355. </pages>
Reference-contexts: Our supervisory controller is shown in Figure 13, and is described in detail in (Tacconi & Lewis 1997) and <ref> (Lewis et al. 1995) </ref>.
Reference: <author> Tacconi, D., and Lewis, F. </author> <year> 1997. </year> <title> A new matrix model for discrete event systems: Application to simulation. </title> <journal> IEEE Control Systems Magazine 62-71. </journal>
Reference-contexts: Our supervisory controller is shown in Figure 13, and is described in detail in <ref> (Tacconi & Lewis 1997) </ref> and (Lewis et al. 1995).
Reference: <author> Veloso, M. </author> <year> 1992. </year> <title> Learning by Analogical Reasoning in General Problem Solving. </title> <type> Ph.D. Dissertation, </type> <institution> Carnegie Mellon. </institution>
Reference-contexts: Recent work has proposed an alternative "derivational analogy" in which the planner stores the choices made during the original planning episode and can more easily determine whether the same choices are applicable to the new situation. Derivational analogy has been used with both total-order planners <ref> (Veloso 1992) </ref> and partial-order planners (Ihrig & Kambhampati 1994). Hierarchical Matching Analogy works well if the goal states and initial states are relatively small (even though the plans themselves may be quite complex).
Reference: <author> Wilkins, D. </author> <year> 1984. </year> <title> Domain-independent planning: Representation and plan generation. </title> <booktitle> Artificial Intelligence 22(3) </booktitle> <pages> 269-301. </pages>
Reference-contexts: Parts C and D can be assembled to form the single part D. Hierarchical Task Network Planning Hierarchical task network planning provides the planning system with task schemas as well as traditional operator descriptions <ref> (Wilkins 1984) </ref>. Task schemas provide a method of grouping operators together to form higher-level operations and allow the domain to explicitly represent known ordering constraints. Thus, HTN planners can reduce search compared to conventional planners.
Reference: <author> Wilkins, D. E. </author> <year> 1990. </year> <title> Can ai planners solve practical problems? Computational Intelligence 6(4) </title> <type> 232-246. </type>
Reference-contexts: Introduction While machine planners have been used to manage a brewery <ref> (Wilkins 1990) </ref>, they are not routinely used in manufacturing systems. Since machine planners and manufacturing systems usually have different representations to describe the ordering constraints between operations or the resources needed to execute an operation, integrating the two can be a challenge.
Reference: <author> Wolter, J.; Chakrabarty, S.; and Tsao, J. </author> <year> 1992. </year> <title> Methods of knowledge representation for assembly planning. </title> <booktitle> Proceedings of NSF Design and Manufacturing Systems Conference 463-468. </booktitle>
Reference-contexts: Assembly Trees Assembly trees are used in manufacturing to specify a partial ordering of jobs required to complete a finished product. An assembly tree <ref> (Wolter, Chakrabarty, & Tsao 1992) </ref> has a node for each subassembly, and contains information equivalent to the manufacturing bill of materials (BOM) (Baker 1974).
References-found: 12

