URL: ftp://ftp.csd.uu.se/pub/papers/reports/0109.ps.gz
Refering-URL: http://www.csd.uu.se/papers/reports.html
Root-URL: 
Email: email fanatoli,voronkovg@csd.uu.se  
Title: Reduction of Second-Order Unification to Simultaneous Rigid E-Unification  
Author: Anatoli Degtyarev Andrei Voronkov 
Note: Supported by a TFR grant  
Address: Box 311, S-751 05 Uppsala, Sweden  
Affiliation: Computing Science Department Uppsala University  
Abstract: UPMAIL Technical Report No. 109 June 1, 1995 
Abstract-found: 1
Intro-found: 1
Reference: [Andrews 81] <author> P.B. Andrews. </author> <title> Theorem proving via general matings. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 28(2) </volume> <pages> 193-214, </pages> <year> 1981. </year>
Reference-contexts: 1 Introduction Simultaneous rigid E-unification plays a crucial role in extending to first order languages with equality automatic proof methods based on sequent calculi, such as semantic tableaux [Fitting 88], the connection method [Bibel 82] (also known as the mating method <ref> [Andrews 81] </ref>), model elimination [Loveland 68] and a dozen other procedures. Simultaneous rigid E-unification was defined in [GaRaSn 87] (see also [GNRS 92]) and witnessed several faulty proofs of the decidability. The undecidability of simultaneous rigid E-unification was proven in [DeVo 95b] by reduction of monadic semi-unification [Baaz 93].
Reference: [Baaz 93] <author> M. Baaz. </author> <title> Note on the existence of most general semi-unifiers. In Arithmetic, Proof Theory and Computation Complexity, </title> <booktitle> volume 23 of Oxford Logic Guides, </booktitle> <pages> pages 20-29. </pages> <publisher> Oxford University Press, </publisher> <year> 1993. </year>
Reference-contexts: Simultaneous rigid E-unification was defined in [GaRaSn 87] (see also [GNRS 92]) and witnessed several faulty proofs of the decidability. The undecidability of simultaneous rigid E-unification was proven in [DeVo 95b] by reduction of monadic semi-unification <ref> [Baaz 93] </ref>. Here we give a more elementary and more intuitive proof using reduction of second-order unification. For a short survey of other known results on simultaneous rigid E-unification see [DeMaVo 95, DeVo 95b]. 2 Second-order unification We define second-order unification mainly following [Goldfarb 81].
Reference: [Bibel 82] <author> W. Bibel. </author> <title> Automated theorem proving. </title> <publisher> Vieweg Verlag, </publisher> <year> 1982. </year>
Reference-contexts: 1 Introduction Simultaneous rigid E-unification plays a crucial role in extending to first order languages with equality automatic proof methods based on sequent calculi, such as semantic tableaux [Fitting 88], the connection method <ref> [Bibel 82] </ref> (also known as the mating method [Andrews 81]), model elimination [Loveland 68] and a dozen other procedures. Simultaneous rigid E-unification was defined in [GaRaSn 87] (see also [GNRS 92]) and witnessed several faulty proofs of the decidability.
Reference: [DeVo 94] <author> A. Degtyarev and A. Voronkov. </author> <title> Equality elimination for semantic tableaux. </title> <type> UPMAIL Technical Report 90, </type> <institution> Uppsala University, Computing Science Department, </institution> <month> December </month> <year> 1994. </year>
Reference-contexts: For matrix methods in classical logic with equality there are alternative approaches, e.g. the one proposed in <ref> [DeVo 94, DeVo 95a] </ref>. However, the problem of handling simultaneous rigid E-unification seems to be unavoidable in proof methods for intuitionistic logic with equality. 6
Reference: [DeVo 95a] <author> A. Degtyarev and A. Voronkov. </author> <title> General connections via equality elimination. </title> <type> UP-MAIL Technical Report 93, </type> <institution> Uppsala University, Computing Science Department, </institution> <month> January </month> <year> 1995. </year> <note> (To appear in Proc. WOCFAI'95.) </note>
Reference-contexts: For matrix methods in classical logic with equality there are alternative approaches, e.g. the one proposed in <ref> [DeVo 94, DeVo 95a] </ref>. However, the problem of handling simultaneous rigid E-unification seems to be unavoidable in proof methods for intuitionistic logic with equality. 6
Reference: [DeVo 95b] <author> A. Degtyarev and A. Voronkov. </author> <title> Simultaneous rigid E-unification is undecidable. </title> <type> UPMAIL Technical Report 105, </type> <institution> Uppsala University, Computing Science Department, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: Simultaneous rigid E-unification was defined in [GaRaSn 87] (see also [GNRS 92]) and witnessed several faulty proofs of the decidability. The undecidability of simultaneous rigid E-unification was proven in <ref> [DeVo 95b] </ref> by reduction of monadic semi-unification [Baaz 93]. Here we give a more elementary and more intuitive proof using reduction of second-order unification. <p> The undecidability of simultaneous rigid E-unification was proven in [DeVo 95b] by reduction of monadic semi-unification [Baaz 93]. Here we give a more elementary and more intuitive proof using reduction of second-order unification. For a short survey of other known results on simultaneous rigid E-unification see <ref> [DeMaVo 95, DeVo 95b] </ref>. 2 Second-order unification We define second-order unification mainly following [Goldfarb 81]. Definition 1 A second-order language L 2 is a triple h; X ; Wi of disjoint sets, where is finite and X ; W are countable. <p> This shows that second-order unification in the signature is effectively reducible to simultaneous rigid E-unification in the signature S ff; g; bg. By the undecidability of second order unification [Goldfarb 81] we obtain Theorem 2 Simultaneous rigid E-unification is undecidable. 5 5 Conclusion In <ref> [DeVo 95b] </ref> we show that simultaneous rigid E-unification is expressible in the 9 fl -fragment of intuitionistic logic with equality. Theorem 2 implies that this fragment of intuitionistic logic with equality is undecidable.
Reference: [DeMaVo 95] <author> A. Degtyarev, Yu. Matijasevich, and A. Voronkov. </author> <title> Simultaneous rigid E-unification is not so simple. </title> <type> UPMAIL Technical Report 104, </type> <institution> Uppsala University, Computing Science Department, </institution> <month> April </month> <year> 1995. </year>
Reference-contexts: The undecidability of simultaneous rigid E-unification was proven in [DeVo 95b] by reduction of monadic semi-unification [Baaz 93]. Here we give a more elementary and more intuitive proof using reduction of second-order unification. For a short survey of other known results on simultaneous rigid E-unification see <ref> [DeMaVo 95, DeVo 95b] </ref>. 2 Second-order unification We define second-order unification mainly following [Goldfarb 81]. Definition 1 A second-order language L 2 is a triple h; X ; Wi of disjoint sets, where is finite and X ; W are countable.
Reference: [Fitting 88] <author> M. </author> <title> Fitting. First-order modal tableaux. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 4 </volume> <pages> 191-213, </pages> <year> 1988. </year>
Reference-contexts: 1 Introduction Simultaneous rigid E-unification plays a crucial role in extending to first order languages with equality automatic proof methods based on sequent calculi, such as semantic tableaux <ref> [Fitting 88] </ref>, the connection method [Bibel 82] (also known as the mating method [Andrews 81]), model elimination [Loveland 68] and a dozen other procedures. Simultaneous rigid E-unification was defined in [GaRaSn 87] (see also [GNRS 92]) and witnessed several faulty proofs of the decidability.
Reference: [GNRS 92] <author> J. Gallier, P. Narendran, S. Raatz, and W. Snyder. </author> <title> Theorem proving using equational matings and rigid E-unification. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 39(2) </volume> <pages> 377-429, </pages> <year> 1992. </year>
Reference-contexts: Simultaneous rigid E-unification was defined in [GaRaSn 87] (see also <ref> [GNRS 92] </ref>) and witnessed several faulty proofs of the decidability. The undecidability of simultaneous rigid E-unification was proven in [DeVo 95b] by reduction of monadic semi-unification [Baaz 93]. Here we give a more elementary and more intuitive proof using reduction of second-order unification. <p> For such formulas provability can be tested by the congruence closure algorithm (see <ref> [GNRS 92] </ref>). For a set E of first-order equations and a substitution we denote by E the set of first-order equations fs = t j (s = t) 2 Eg.
Reference: [GaRaSn 87] <author> J.H. Gallier, S. Raatz, and W. Snyder. </author> <title> Theorem proving using rigid E-unification: Equational matings. </title> <booktitle> In Logic in Computer Science (LICS'87) (Ithaca, </booktitle> <address> N.Y.), </address> <pages> pages 338-346. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1987. </year>
Reference-contexts: Simultaneous rigid E-unification was defined in <ref> [GaRaSn 87] </ref> (see also [GNRS 92]) and witnessed several faulty proofs of the decidability. The undecidability of simultaneous rigid E-unification was proven in [DeVo 95b] by reduction of monadic semi-unification [Baaz 93]. Here we give a more elementary and more intuitive proof using reduction of second-order unification.
Reference: [Goldfarb 81] <author> W. D. Goldfarb. </author> <title> The undecidability of the second-order unification problem. </title> <journal> Theoretical Computer Science, </journal> <volume> 13 </volume> <pages> 225-230, </pages> <year> 1981. </year>
Reference-contexts: Here we give a more elementary and more intuitive proof using reduction of second-order unification. For a short survey of other known results on simultaneous rigid E-unification see [DeMaVo 95, DeVo 95b]. 2 Second-order unification We define second-order unification mainly following <ref> [Goldfarb 81] </ref>. Definition 1 A second-order language L 2 is a triple h; X ; Wi of disjoint sets, where is finite and X ; W are countable. <p> Elements of W have arity 0. Elements of 0 are called constants. Unlike <ref> [Goldfarb 81] </ref> we do not introduce individual variables, their role is played by free variables of arity 0. For the rest of this section we assume that L 2 stands for a fixed second-order language h; X ; Wi. <p> This shows that second-order unification in the signature is effectively reducible to simultaneous rigid E-unification in the signature S ff; g; bg. By the undecidability of second order unification <ref> [Goldfarb 81] </ref> we obtain Theorem 2 Simultaneous rigid E-unification is undecidable. 5 5 Conclusion In [DeVo 95b] we show that simultaneous rigid E-unification is expressible in the 9 fl -fragment of intuitionistic logic with equality. Theorem 2 implies that this fragment of intuitionistic logic with equality is undecidable.
Reference: [Loveland 68] <author> D.W. Loveland. </author> <title> Mechanical theorem proving by model elimination. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 15 </volume> <pages> 236-251, </pages> <year> 1968. </year> <month> 7 </month>
Reference-contexts: 1 Introduction Simultaneous rigid E-unification plays a crucial role in extending to first order languages with equality automatic proof methods based on sequent calculi, such as semantic tableaux [Fitting 88], the connection method [Bibel 82] (also known as the mating method [Andrews 81]), model elimination <ref> [Loveland 68] </ref> and a dozen other procedures. Simultaneous rigid E-unification was defined in [GaRaSn 87] (see also [GNRS 92]) and witnessed several faulty proofs of the decidability. The undecidability of simultaneous rigid E-unification was proven in [DeVo 95b] by reduction of monadic semi-unification [Baaz 93].
References-found: 12

