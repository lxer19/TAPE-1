URL: http://www.ai.mit.edu/people/micheld/multires.ps
Refering-URL: http://www.ai.mit.edu/people/micheld/micheld.html
Root-URL: 
Email: micheld, dlb -@ai.mit.edu  
Title: A MULTIRESOLUTION SYNTHETIC ENVIRONMENT BASED ON OBSERVER VIEWPOINT  
Author: Daniel Michel and David L. Brock 
Keyword: multiple resolution, aggregation/disaggregation, observer, simulation management, time management  
Address: 545 technology Square Cambridge, MA 02139  
Affiliation: Artificial Intelligence Laboratory Massachusetts Institute of Technology  
Abstract: This article describes an observer based Distributed Interactive Simulation (DIS) framework capable of integrating multiple models with various levels of resolution. First, the proposed scheme tends to create a virtual world on demand where the model generated depends directly on an observer viewpoint. The virtual world will therefore not be simulated at a fixed level of resolution across all the platforms, but will vary depending on the nature and state of the observer. Several kinds of observers can be defined, such as a visual, symbolic, or frequency observer, they will provide different points of view on the virtual world. Second, a multiple resolution architecture has been developed as a cornerstone for future DIS++ simulations. Entities will be defined in a hierarchy, and will aggregate and disaggregate to a greater or lesser fidelity as required. Existing simulators should then be able to contribute to the virtual world, at different levels of resolution (e.g. ALSP, CCTT, ModSAF, VETT, vehicle simulator). This proposed system of systems should take advantage of the Run Time Infrastructure (RTI) infrastructure, as well as, the High Level Architecture (HLA) work to connect multiple disparate simulators. Services such as federation and declaration management should utilize existing HLA efforts. A time management protocol supporting interoperability among different simulators could be based on the RTI time management algorithms. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Foss B. & Franceschini R. </author> <title> A further revision of the aggregate protocol 14th Workshop on Distributed Interactive Simulation, </title> <month> March </month> <year> 1995. </year>
Reference-contexts: 3 4 child disaggregation 5 6 7 8 9 high platform 1 platform 2 platform 3 1 network hierarchical tree of connected entities who will aggregate and disaggregate to a greater or lesser fidelity as required. 2.3 Aggregation and disaggregation The process of aggregation and disaggregation has already been studied <ref> [1] </ref> and is include in DIS. However, these changes in resolution models should become automated and transparent. 2.3.1Aggregation Aggregation is the process of abstracting multiple entities into a single, lower resolution model.
Reference: [2] <author> Fujimoto R. & Weatherly R. </author> <booktitle> HLA time management and DIS 14th Workshop on Distributed Interactive Simulation, </booktitle> <month> March </month> <year> 1995. </year>
Reference-contexts: It will be the responsibility of each entity to update itself. Thus time management is observer dependent. An observer could take advantage of a time management protocol, as for example provided by the HLA community <ref> [2] </ref>. Thus an observer could run real-time, as-fast-as-possible, causal, or any other kind of simulation. This last issue could create conflicts with numerous observers in the same exercise. Multiple observers need a global time manager (GTM), which will synchronize and coordinate disparate observers.
Reference: [3] <author> Davis P. K. </author> <title> An introduction to variable-resolution modeling Naval Research Logistics, </title> <booktitle> Vol. </booktitle> <pages> 42 pp. </pages> <month> 151-181 </month> <year> 1995. </year>
Reference-contexts: Entities far away are represented with a coarse model whereas near entities use a high resolution algorithm. 4.2.4 Considerations about consistency of the models The issue of model consistency has been address in previous papers <ref> [3] </ref>, and must be taken into account when constructing multiresolution algorithms. In our framework, an entity disaggregates only once. Multiple observer requests for disaggregation will be ignored. This is an important point, since it prevents different observers from seeing children from the same parent differently.
Reference: [4] <author> Calvin J. O. & Weatherly R. </author> <title> An introduction to the high level architecture runtime infrastructure 14th Workshop on Distributed Interactive Simulation, </title> <month> March </month> <year> 1995. </year>
Reference-contexts: Their communication must be optimized through dead-reckoning, or by intelligent filtering such as RTI <ref> [4] </ref>. Even if the distribution is transparent to the entities, there must be some organization for the simulation to run efficiently. Figure 3 depicts a computational cluster for multiresolution simulation. It first needs to specify a communication interface both to send and to receive Protocol Data Units.
Reference: [5] <author> Davis P. K. & Hillestad R. </author> <title> Families of models that cross levels of resolution : issues for design, </title> <booktitle> calibration and management Proceedings of the 1993 Winter Simulation Conference, </booktitle> <year> 1996. </year>
Reference: [6] <author> Hillestad J. & Juncosa M. L. </author> <title> Cutting some trees to see the forest : on aggregation and disaggregation in combat models Naval Research Logistics, </title> <booktitle> Vol. </booktitle> <pages> 42 pp. 183-208, </pages> <year> 1995. </year>
Reference: [7] <author> L. Bruce McDonald L. B. </author> <title> Recommended Key Concepts For Inclusion in DIS 3.x Application Protocols Document 14th Workshop on Distributed Interactive Simulation, </title> <month> March </month> <year> 1995. </year>
Reference: [8] <author> Singhal S. K. & Cheriton D. R. </author> <booktitle> Using projection aggregations to support scalability in distributed simulation Proceedings of the 1996 International Conference on Distributed Computing Systems, </booktitle> <year> 1996. </year>
Reference: [9] <author> Gottschalk S., Lin M. & Manocha D. </author> <month> OBB-Tree: </month>
Reference-contexts: The observer will therefore need to know the filters used by its entities and can then filter them via an n.log (n) algorithm <ref> [9] </ref>. Entities can keep the reference of neighboring entities in order to check directly with them during the next time steps if interaction is required. This will avoid running the filtering process at each time step.
References-found: 9

