URL: file://ftp.cis.ohio-state.edu/pub/communication/papers/spdp96-mport-enc.ps.Z
Refering-URL: http://www.cis.ohio-state.edu/~sivaram/publications.html
Root-URL: 
Email: Email: fsivaram,pandag@cis.ohio-state.edu Email: stunkel@watson.ibm.com  
Title: Efficient Broadcast and Multicast on Multistage Interconnection Networks using Multiport Encoding  
Author: Rajeev Sivaram and Dhabaleswar K. Panda Craig B. Stunkel 
Address: Columbus, OH 43210 P. O. Box 218, Yorktown Heights, NY 10598  
Affiliation: Dept. of Computer and Information Science I.B.M. T. J. Watson Research Center The Ohio State University,  
Note: To appear in the Proceedings of the 8th IEEE Symposium on Parallel and Distributed Processing (SPDP '96), October 1996, New Orleans.  
Abstract: This paper proposes a new approach for implementing fast multicast and broadcast in multistage interconnection networks (MINs) with multiport encoded multidestination worms. For a MIN with k fi k switches and n stages such worms use n header flits each. One flit is used for each stage of the network and it indicates the output ports to which a multicast message must be replicated. A single multiport encoded worm has the capability to cover a large number of destinations with a single communication startup. A switch architecture is proposed for implementing multidestination worms without deadlock. Grouping algorithms of varying complexity are presented to derive the associated multiport encoded worms for a multicast to an arbitrary set of destinations. Using these worms a multinomial tree-based scheme is proposed to implement the multicast. This approach significantly reduces broadcast/multicast latency compared to schemes using unicast messages. Simulation studies indicate that improvement in broadcast/multicast latency up to a factor of 4 is feasible using the new approach. Interestingly, this approach is able to implement multicast with reduced latency as the number of destinations increases beyond a certain number. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Y. Aydogan, C. B. Stunkel, C. Aykanat, and B. Abali. </author> <title> Adaptive Source Routing in Multistage Interconnection Networks. </title> <booktitle> In Proceedings of the International Parallel Processing Symposium, </booktitle> <pages> pages 258-267, </pages> <year> 1996. </year>
Reference-contexts: Every switch in the network is equipped with information to decide which output links lead to the worm's destination. A switch uses this information to route the worm to an appropriate output port. This method of routing is commonly referred to as dynamic routing or destination based routing <ref> [1] </ref>. <p> It is to be noted that in such an encoding scheme, the bits corresponding to a stage can be discarded 2 once a routing decision has been made. Recently, a new scheme called source based adaptive routing has been proposed in <ref> [1] </ref>. Here, the header of the unicast worm is organized as a sequence of k-bit strings similar to the example in Fig. 2 (d). Positions with 1 bits represent alternative output ports to which the unicast worm may be forwarded. <p> Thus, this single worm is capable of covering six destinations using a single communication startup. It can be observed that unicast worms can always be encoded using a similar sequence of k-bit strings. As described in the previous section, such an approach is already being considered <ref> [1] </ref> to support adaptive routing in MINs with unicast worms. Thus such encoding can provide dual functionality, adaptivity for unicast worms and a mechanism for efficient multicast. 3.2.
Reference: [2] <author> C.-M. Chiang and L. M. Ni. </author> <title> Deadlock-Free Multi-Head Wormhole Routing. </title> <booktitle> In Proceedings of the First High Performance Computing-Asia, </booktitle> <year> 1995. </year>
Reference-contexts: A switch architecture to support multidestination worms is proposed. 4.1. Design Criteria There are two orthogonal design considerations that must be taken into account to implement multidestination worms: the replication mechanism at a switch and flow control. Two main replication mechanisms have been proposed in the literature <ref> [2, 8] </ref>: synchronous and asynchronous. When a mul-tidestination worm arrives at a switch, not all of the ports to which the worm needs to be forwarded may be available. <p> Furthermore all copies of a worm's flit at a stage must proceed together to the next stage of the network. Synchronous replication therefore requires some feedback mechanism from the switches to the originating nodes <ref> [2] </ref>. Under asynchronous replication, a multidestina-tion worm arriving at a switch uses the available ports to forward copies of the flits, while remaining blocked on the unavailable ports. Thus asynchronous replication does not require the feedback mechanism. <p> One such mechanism is virtual cut-through [5]. Note that in both wormhole routing and virtual cut-through, in the absence of contention for output ports, worms continue to propagate on a flit by flit basis from one switch to the next. Chiang and Ni <ref> [2] </ref> have shown that both synchronous and asynchronous replication mechanisms can cause deadlock when used in conjunction with wormhole routing. Although a method to avoid deadlock in systems using synchronous replication is suggested in [2], the method is extremely restrictive and is inappropriate for variations of wormhole routing that provide more <p> Chiang and Ni <ref> [2] </ref> have shown that both synchronous and asynchronous replication mechanisms can cause deadlock when used in conjunction with wormhole routing. Although a method to avoid deadlock in systems using synchronous replication is suggested in [2], the method is extremely restrictive and is inappropriate for variations of wormhole routing that provide more intermediate buffering. As shown in [2], the root of the deadlock problem is the dependence between the multiple output ports involved in a worm replication. <p> Although a method to avoid deadlock in systems using synchronous replication is suggested in <ref> [2] </ref>, the method is extremely restrictive and is inappropriate for variations of wormhole routing that provide more intermediate buffering. As shown in [2], the root of the deadlock problem is the dependence between the multiple output ports involved in a worm replication. This dependence results from blocked flits within the input buffer, which deny the entrance of the entire worm into this buffer.
Reference: [3] <author> C.-M. Chiang and L. M. Ni. </author> <title> Efficient Software Multicast in Wormhole-routed Unidirectional Multistage Networks. </title> <booktitle> In Symposium on Parallel and Distributed Processing, </booktitle> <year> 1995. </year>
Reference-contexts: Basic Multicasting Schemes The unicast-based multicasting schemes typically use a multi-phase approach. The basic idea in these schemes is to derive contention free phases so that multiple communications can occur in parallel. The U-min algorithm proposed in [12] and the C-min algorithm proposed in <ref> [3] </ref> are good algorithms for unicast-based multicast. These algorithm use a destination that receives a message in any phase to retransmit the message in succeeding phases. The coverage of the destinations therefore proceeds in the form of a binomial tree, with the number of sources doubling in every phase. <p> These values are similar to those used in the IBM SP2 [11]. We assumed a single read port model as discussed in Sec. 4.2. We performed experiments using the MTS and MTM grouping schemes and compared the results with the unicast based C-Min algorithm <ref> [3] </ref>. For the MTS grouping scheme we chose the least significant digit of the destination ID to group destinations. We studied the effect of startup time (t s ) on multicast latency using 3 different values for t s : 1.0, 5.0 and 10.0 microseconds.
Reference: [4] <author> W. J. Dally and C. L. Seitz. </author> <title> Deadlock-Free Message Routing in Multiprocessor Interconnection Networks. </title> <journal> IEEE Transactions on Computers, </journal> <pages> pages 547-553, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: 1. Introduction The wormhole-routing switching technique is the current trend in building parallel systems due to inherent advantages such as low-latency communication and reduced communication hardware overhead <ref> [4] </ref>. This switching technique is being used with a wide variety of topologies. Examples include k-ary n-cube networks (Cray T3D, Intel Paragon, Ncube), fat-tree networks (CM-5, Meiko CS2), and multistage interconnection networks (IBM SP1/SP2 [10, 11]).
Reference: [5] <author> P. Kermani and L. Kleinrock. </author> <title> Virtual Cut-Through: A new Computer Communications Switching Technique. </title> <journal> Computer Networks, </journal> <volume> 3(4) </volume> <pages> 267-286, </pages> <month> Sept. </month> <year> 1979. </year>
Reference-contexts: Another approach is to guarantee that an arriving worm will have enough space for the worm to be fully buffered. One such mechanism is virtual cut-through <ref> [5] </ref>. Note that in both wormhole routing and virtual cut-through, in the absence of contention for output ports, worms continue to propagate on a flit by flit basis from one switch to the next.
Reference: [6] <author> X. Lin and L. M. Ni. </author> <title> Deadlock-free Multicast Wormhole Routing in Multicomputer Networks. </title> <booktitle> In Proceedings of the International Symposium on Computer Architecture, </booktitle> <pages> pages 116-124, </pages> <year> 1991. </year>
Reference-contexts: This raises a fundamental question: can the latency of these operations be reduced by using a new and efficient mechanism at the hardware level? A new conceptmultidestination wormhole message passinghas been introduced recently <ref> [6, 7] </ref>. Unlike a uni-cast message which has a single destination, such a mechanism allows a message to have multiple destinations. A mul-tidestination worm provides the flexibility to distribute data to multiple nodes or gather data from multiple nodes using a single message and a single communication start-up. <p> Using such worms it has been shown that broadcast and multicast operations on k-ary n-cube networks with different routing schemes (e-cube, adaptive, Hamiltonian, etc.) can be implemented with significantly reduced latency <ref> [6, 7] </ref> compared to unicast-based schemes. Since this mechanism and the associated schemes have been specifically developed for direct networks with k-ary n-cube topologies, they cannot be applied to switch-based indirect networks with multistage interconnects. We propose a new approach to implement fast broadcast and multicast on unidirectional MINs. <p> Multicasting using Multiport Encoded Worms In this section we introduce the basic idea of multiport encoding. We also develop a multicasting scheme to perform efficient multicast using multiport encoded worms. 3.1. Multiport Encoding A multidestination worm transfers a packet from a source to multiple destinations <ref> [6, 7] </ref>. Thus its header must carry information that helps the worm to get routed to all of its destinations.
Reference: [7] <author> D. K. Panda, S. Singal, and P. Prabhakaran. </author> <title> Multidestination Message Passing Mechanism Conforming to Base Wormhole Routing Scheme. </title> <booktitle> In Proceedings of the Parallel Computer Routing and Communication Workshop, </booktitle> <pages> pages 131-145, </pages> <year> 1994. </year>
Reference-contexts: This raises a fundamental question: can the latency of these operations be reduced by using a new and efficient mechanism at the hardware level? A new conceptmultidestination wormhole message passinghas been introduced recently <ref> [6, 7] </ref>. Unlike a uni-cast message which has a single destination, such a mechanism allows a message to have multiple destinations. A mul-tidestination worm provides the flexibility to distribute data to multiple nodes or gather data from multiple nodes using a single message and a single communication start-up. <p> Using such worms it has been shown that broadcast and multicast operations on k-ary n-cube networks with different routing schemes (e-cube, adaptive, Hamiltonian, etc.) can be implemented with significantly reduced latency <ref> [6, 7] </ref> compared to unicast-based schemes. Since this mechanism and the associated schemes have been specifically developed for direct networks with k-ary n-cube topologies, they cannot be applied to switch-based indirect networks with multistage interconnects. We propose a new approach to implement fast broadcast and multicast on unidirectional MINs. <p> For a range of switch sizes, system sizes, message lengths, and communication start-up times, simulation studies indicate that a reduction in broadcast/multicast latency up to a factor of 4 can be achieved by our approach. Similar to the results on k-ary n-cube networks <ref> [7] </ref>, this study also indicates that multiport encoded worms can reduce multicast latency in MINs as the number of destinations participating in a multicast increases beyond a certain number. <p> Multicasting using Multiport Encoded Worms In this section we introduce the basic idea of multiport encoding. We also develop a multicasting scheme to perform efficient multicast using multiport encoded worms. 3.1. Multiport Encoding A multidestination worm transfers a packet from a source to multiple destinations <ref> [6, 7] </ref>. Thus its header must carry information that helps the worm to get routed to all of its destinations.
Reference: [8] <author> D. K. Panda and R. Sivaram. </author> <title> Fast Broadcast and Multi-cast in Wormhole Multistage Networks with Multidestina-tion Worms. </title> <type> Technical Report OSU-CISRC-4/95-TR21, </type> <institution> Dept. of Computer and Information Science, The Ohio State University, </institution> <month> April </month> <year> 1995. </year>
Reference-contexts: A switch architecture to support multidestination worms is proposed. 4.1. Design Criteria There are two orthogonal design considerations that must be taken into account to implement multidestination worms: the replication mechanism at a switch and flow control. Two main replication mechanisms have been proposed in the literature <ref> [2, 8] </ref>: synchronous and asynchronous. When a mul-tidestination worm arrives at a switch, not all of the ports to which the worm needs to be forwarded may be available.
Reference: [9] <author> R. Sivaram, D. K. Panda, and C. B. Stunkel. </author> <title> Efficient Broadcast and Multicast on Multistage Interconnection Networks using Multiport Encoding. </title> <type> Technical Report OSU-CISRC-3/96-TR15, </type> <institution> The Ohio State University, </institution> <month> March </month> <year> 1996. </year>
Reference-contexts: We request interested readers to refer to <ref> [9] </ref> for a formal proof of this theorem. 5.3.2. A Greedy Approach for finding a SM T and a Method for Constructing Larger Multiport Trees We now briefly outline a greedy approach for finding a SM T . Greedy () f 1.
Reference: [10] <author> C. B. Stunkel, D. G. Shea, B. Abali, M. M. Denneeau, P. H. Hochschild, D. J. Joseph, B. J. Nathanson, M. Tsao, and P. R. Varker. </author> <booktitle> Architecture and Implementation of Vulcan. In Proceedings of the International Parallel Processing Symposium, </booktitle> <pages> pages 268-274, </pages> <year> 1994. </year>
Reference-contexts: This switching technique is being used with a wide variety of topologies. Examples include k-ary n-cube networks (Cray T3D, Intel Paragon, Ncube), fat-tree networks (CM-5, Meiko CS2), and multistage interconnection networks (IBM SP1/SP2 <ref> [10, 11] </ref>). For efficient support of either Distributed Memory or Distributed Shared Memory paradigm, these systems require fast collective communication support from the underlying communication subsystem. <p> Another form of header encoding is to store the entire path of the worm in the worm's header. The worm's path is determined a priori and known before the worm enters the network. Such a form of routing is called static routing. Systems like the IBM SP2 <ref> [10, 11] </ref> use such an encoding. Assuming k fi k switches are used, Figs. 2 (c) and 2 (d) show examples of such encoding using log 2 k and k bits per stage, respectively.
Reference: [11] <author> C. B. Stunkel, D. G. Shea, B. Abali, et al. </author> <title> The SP2 High-Performance Switch. </title> <journal> IBM System Journal, </journal> <volume> 34(2) </volume> <pages> 185-204, </pages> <year> 1995. </year>
Reference-contexts: This switching technique is being used with a wide variety of topologies. Examples include k-ary n-cube networks (Cray T3D, Intel Paragon, Ncube), fat-tree networks (CM-5, Meiko CS2), and multistage interconnection networks (IBM SP1/SP2 <ref> [10, 11] </ref>). For efficient support of either Distributed Memory or Distributed Shared Memory paradigm, these systems require fast collective communication support from the underlying communication subsystem. <p> Another form of header encoding is to store the entire path of the worm in the worm's header. The worm's path is determined a priori and known before the worm enters the network. Such a form of routing is called static routing. Systems like the IBM SP2 <ref> [10, 11] </ref> use such an encoding. Assuming k fi k switches are used, Figs. 2 (c) and 2 (d) show examples of such encoding using log 2 k and k bits per stage, respectively. <p> The chunk size, described in Section 4, was assumed to be 4 flits for experiments performed with 4 fi 4 switches, and 8 flits for experiments performed with 8 fi 8 switches. These values are similar to those used in the IBM SP2 <ref> [11] </ref>. We assumed a single read port model as discussed in Sec. 4.2. We performed experiments using the MTS and MTM grouping schemes and compared the results with the unicast based C-Min algorithm [3].
Reference: [12] <author> H. Xu, Y.-D. Gui, and L. M. Ni. </author> <title> Optimal Software Multicast in Wormhole-Routed Multistage Networks. </title> <booktitle> In Proceedings of the Supercomputing Conference, </booktitle> <pages> pages 703-712, </pages> <year> 1994. </year> <month> 10 </month>
Reference-contexts: Many software schemes have been recently proposed to efficiently implement broadcast and multicast in wormhole-routed k-ary n-cube networks and multistage interconnection networks <ref> [12] </ref>. All of these schemes use point-to-point (unicast) message passing and require multiple contention-free phases to achieve fast broadcast and multicast. For multicasting to d destinations, these schemes typically require dlog 2 (d + 1)e communication phases. <p> With p destinations being covered by a single multiport encoded worm on the average, our scheme uses approximately dlog p+1 (d + 1)e communication start-ups to cover d destinations. This approach significantly reduces broadcast/multicast latency compared to schemes using unicast messages <ref> [12] </ref>. For a range of switch sizes, system sizes, message lengths, and communication start-up times, simulation studies indicate that a reduction in broadcast/multicast latency up to a factor of 4 can be achieved by our approach. <p> We also look at different header encoding schemes. 2.1. Basic Multicasting Schemes The unicast-based multicasting schemes typically use a multi-phase approach. The basic idea in these schemes is to derive contention free phases so that multiple communications can occur in parallel. The U-min algorithm proposed in <ref> [12] </ref> and the C-min algorithm proposed in [3] are good algorithms for unicast-based multicast. These algorithm use a destination that receives a message in any phase to retransmit the message in succeeding phases.
References-found: 12

