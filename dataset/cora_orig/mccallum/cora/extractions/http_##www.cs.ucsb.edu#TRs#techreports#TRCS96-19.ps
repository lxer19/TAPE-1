URL: http://www.cs.ucsb.edu/TRs/techreports/TRCS96-19.ps
Refering-URL: http://www.cs.ucsb.edu/TRs/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: smithtrg@cs.ucsb.edu  
Title: Efficient Retrieval for Browsing Large Image Databases  
Author: Daniel Wu Divyakant Agrawal Amr El Abbadi Ambuj Singh Terrence R. Smith fdanielw, agrawal, amr, ambuj, 
Address: Santa Barbara, CA 93106  
Affiliation: Department of Computer Science University of California  
Abstract: The management of large image databases poses several interesting and challenging problems. These problems range from ingesting the data and extracting meta-data to the efficient storage and retrieval of the data. Of particular interest are the retrieval methods and user interactions with an image database during browsing. In image databases, the response to a given query is not an exact well-defined set, rather, the user poses a query and expects a set of responses that should contain many possible candidates from which the user chooses the answer set. We first present the browsing model in Alexandria, a digital library for maps and satellite images. Designed for content-based retrieval, the relevant information in an image is encoded in the form of a multi-dimensional feature vector. Various techniques have been previously proposed for the efficient retrieval of such vectors by reducing the dimensionality of such vectors. We show that for even moderately large databases (in fact, only 1856 texture images), these approaches do not scale well for exact retrieval. However, as a browsing tool, these dimensionality reduction techniques hold much promise.
Abstract-found: 1
Intro-found: 1
Reference: [AFS93] <author> R. Agrawal, C. Faloutsos, and A. Swami. </author> <title> Efficient similarity search in sequence databases. </title> <booktitle> In Foundations of Data Organization and Algorithms. 4th Intl. Conf., </booktitle> <pages> pages 69-84, </pages> <year> 1993. </year>
Reference-contexts: Using the geometric model of representing an image in the database as a feature vector in some n-dimensional space, the types of queries that we make also have geometric interpretation. We consider two types of similarity queries: nearest-neighbor queries and epsilon-queries <ref> [AFS93] </ref>. A nearest-neighbor query takes two arguments, an image specification (I) and the number of nearest neighbors (M ) to retrieve M closest images of the specified image in the n-dimensional space. <p> The norm of a complex-valued sequence ~ X = fX i g n1 i=0 is defined as: k ~ Xk = u t i=0 A basic result from harmonic analysis is Parseval's Theorem <ref> [AFS93] </ref>: Given a sequence ~x and its Fourier transform ~ X their norms must coincide: k~xk = k ~ Xk: Equivalently, n1 X jx i j 2 = i=0 If we truncate the sequence ~ X in the frequency domain to N terms, to form ~ X N , then for
Reference: [AMAM93] <author> A. D. Alexandrov, W. Y. Ma, A. El Abbadi, and B. S. Manjunath. </author> <title> Adaptive filtering and indexing for image databases. </title> <booktitle> In Proc. of the SPIE Int. Conf. on Storage and 18 Num Ave Correct Ave Recall Neighbors DFT DFT fl SVD DFT DFT fl SVD 1 0.58 0.73 0.73 0.5835 0.7274 0.7344 10 8.28 8.99 9.15 0.8284 0.8991 0.9154 20 16.28 18.14 18.68 0.8142 0.9070 0.9341 Retrieval for Image and Video Databases - III, </booktitle> <pages> pages 12-23, </pages> <address> San Jose, CA, </address> <month> February 5993. </month>
Reference-contexts: A search structure such as an R ? -tree [BKSS90] is fully capable of indexing feature vectors and other multi-dimensional data, but its performance degrades with increase in the number of dimensions <ref> [FRM94, AMAM93] </ref>. Feature vectors with number of dimensions 24 would not perform well using an R ? -tree. We must examine other approaches to solving this problem. One approach which we will explore is to reduce the dimension of the feature vectors.
Reference: [BKSS90] <author> N. Beckmann, H.-P. Kriegel, R. Schneider, and B. Seeger. </author> <title> The r ? -tree: an efficient and robust access method for points and rectangle. </title> <booktitle> In Proc. ACM SIGMOD Int. Conf. on Management of Data, </booktitle> <pages> pages 322-331, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: Due to the growing number of feature vectors in the database, the problem of how to efficiently retrieve these vectors must be addressed. A search structure such as an R ? -tree <ref> [BKSS90] </ref> is fully capable of indexing feature vectors and other multi-dimensional data, but its performance degrades with increase in the number of dimensions [FRM94, AMAM93]. Feature vectors with number of dimensions 24 would not perform well using an R ? -tree. We must examine other approaches to solving this problem.
Reference: [Bro66] <author> P. Brodatz. </author> <title> Textures: A Photographic Album for Artists & Designers. </title> <publisher> Dover, </publisher> <address> New York, New York, </address> <year> 1966. </year>
Reference-contexts: We then describe our experimental design in Section 5, and present our results. 2 Similarity Queries of Feature Vectors The dataset used in this paper is based on the collection of textures in the Brodatz album <ref> [Bro66] </ref>. This collection was originally used as a testbed to test the accuracy of the texture identification system in Alexandria. The work of [MM96] enabled feature extraction form this data. Each image from the Brodatz album was partitioned into 16 subimages.
Reference: [FBF + 94] <author> C. Faloutsos, R. Barber, M. Flickner, J. Hafner, W. Niblack, D. Petkovic, and W. Eq-uitz. </author> <title> Efficient and effective querying by image content. </title> <journal> In Journal of Intelligent Information Systems, </journal> <volume> volume 3, </volume> <pages> pages 231-262, </pages> <year> 1994. </year>
Reference-contexts: For example, the research project QBIC at IBM Almaden provides users with the ability to formulate queries based on colors, shapes, and sketches against a database of color photographs <ref> [NBE + 93, FBF + 94] </ref>. The Digital Library project at UC Berkeley takes a similar approach to catalog photographic collections of California Department of Water resources [OS95].
Reference: [FL94] <author> C. Faloutsos and K. Lin. </author> <title> Fastmap: A fast algorithm for indexing, data-mining and visualization of traditional and multimedia datasets. </title> <type> Technical Report CS-TR-3383, </type> <institution> Univ. of Maryland Institute for Advanced Computer Studies, </institution> <month> January </month> <year> 1994. </year> <month> 19 </month>
Reference-contexts: To achieve this reduction in the dimension of the feature vectors, we consider two different compression techniques using the Discrete Fourier Transform (DFT) and the Singular Value Decomposition (SVD). These techniques have been used to reduce the dimensionality of information in several projects <ref> [NBE + 93, PF94, FRM94, FL94] </ref>. For time-series data such as stock market prices, one may obtain a good approximation to the data by retaining only its low-frequency Fourier coefficients.
Reference: [FRM94] <author> C. Faloutsos, M. Ranganathan, and Y. Manolopoulos. </author> <title> Fast subsequence matching in time-series databases. </title> <booktitle> In Proc. ACM SIGMOD Int. Conf. on Management of Data, </booktitle> <pages> pages 419-429, </pages> <address> Minneapolis, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: A search structure such as an R ? -tree [BKSS90] is fully capable of indexing feature vectors and other multi-dimensional data, but its performance degrades with increase in the number of dimensions <ref> [FRM94, AMAM93] </ref>. Feature vectors with number of dimensions 24 would not perform well using an R ? -tree. We must examine other approaches to solving this problem. One approach which we will explore is to reduce the dimension of the feature vectors. <p> To achieve this reduction in the dimension of the feature vectors, we consider two different compression techniques using the Discrete Fourier Transform (DFT) and the Singular Value Decomposition (SVD). These techniques have been used to reduce the dimensionality of information in several projects <ref> [NBE + 93, PF94, FRM94, FL94] </ref>. For time-series data such as stock market prices, one may obtain a good approximation to the data by retaining only its low-frequency Fourier coefficients. <p> The computational aspects of these techniques have been evaluated in prior studies but no comparison has been made to evaluate the relative advantages and disadvantages of these two popular techniques for image databases. 4 3.1 Discrete Fourier Transform Following the approach taken by <ref> [FRM94] </ref>, we begin by studying the properties of the DFT. <p> For SVD-processing, we have simply been taking the largest singular values, because these values provide the most contributions in this approximation scheme. For DFT, however, we simply take the coefficients in increasing harmonics. In the experiments of Faloutsos et al <ref> [FRM94] </ref>, the data consisting of stock market prices was very smooth, very slow-growing, and had very few high frequency harmonics. Consequently, keeping the first few Fourier coefficients provided good results. There is no reason to assume that this property holds for our texture images.
Reference: [MM96] <author> B. S. Manjunath and W. Y. Ma. </author> <title> Texture features for browsing and retrieval of image data. </title> <journal> IEEE Trans. on Pattern Analysis and Machine Intelligence, </journal> <month> November </month> <year> 1996. </year>
Reference-contexts: The Alexandria project at UC Santa Barbara has been building its digital library of map and image data with the goal of supporting a wide range of similarity queries. The current implementation provides similarity queries for texture data <ref> [MM96] </ref>. The user selects from a library of standard textures, and issues a query for images containing similar textures. The many applications for this technology abound. Scientists may want to retrieve images with specific topological features for modeling purposes. <p> This collection was originally used as a testbed to test the accuracy of the texture identification system in Alexandria. The work of <ref> [MM96] </ref> enabled feature extraction form this data. Each image from the Brodatz album was partitioned into 16 subimages. A Gabor transform was performed on each subimage at different scales and orientations.
Reference: [Nas79] <author> J. C. Nash. </author> <title> Compact Numerical Methods for Computers: linear algebra and function minimisation. </title> <publisher> Adam Hilger Ltd, </publisher> <year> 1979. </year>
Reference-contexts: Collecting these m n dimensional vectors into an m fi n matrix A, the Singular Value Decomposition of A is given by: where U is an m fi n matrix, and and V are n fi n matrices <ref> [Nas79] </ref>.
Reference: [NBE + 93] <author> W. Niblack, R. Barber, W. Equitz, M. Flickner, E. Glasman, D. Petkovic, and P. Yanker. </author> <title> The QBIC project: Querying images by content using color, texture and shape. </title> <booktitle> In Proc. of the SPIE Conf. 1908 on Storage and Retrieval for Image and Video Databases, volume 1908, </booktitle> <pages> pages 173-187, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: For example, the research project QBIC at IBM Almaden provides users with the ability to formulate queries based on colors, shapes, and sketches against a database of color photographs <ref> [NBE + 93, FBF + 94] </ref>. The Digital Library project at UC Berkeley takes a similar approach to catalog photographic collections of California Department of Water resources [OS95]. <p> One advantage of epsilon-queries is that they are easier to implement in indexing structures such as an R ? -tree. Recent papers, though, have described implementations of nearest-neighbor searches in R ? -trees [RKV95]. In the browsing model that we have adopted <ref> [NBE + 93, OS95] </ref>, the user begins by specifying a sample image. For databases which store synthetic patterns, this sample image can be drawn on screen using a graphical user interface. <p> To achieve this reduction in the dimension of the feature vectors, we consider two different compression techniques using the Discrete Fourier Transform (DFT) and the Singular Value Decomposition (SVD). These techniques have been used to reduce the dimensionality of information in several projects <ref> [NBE + 93, PF94, FRM94, FL94] </ref>. For time-series data such as stock market prices, one may obtain a good approximation to the data by retaining only its low-frequency Fourier coefficients.
Reference: [OS89] <author> Alan V. Oppenheim and Ronald W. Schafer. </author> <title> Discrete-Time Signal Processing. </title> <publisher> Prentice-Hall, Inc., </publisher> <year> 1989. </year>
Reference-contexts: Taking the DFT of these m vectors also requires O (m n 2 ) operations, but the constant of proportionality is much lower. If n is an even power of 2, the DFT can be calculated using Fast Fourier Transform (FFT) algorithms in O (mn log n) operations <ref> [OS89] </ref>. 12 Ave Ave Retrieved Ave Precision Radius Correct DFT DFT fl SVD DFT DFT fl SVD 1.0 1.45 13.66 5.72 5.66 0.1060 0.2531 0.2559 2.0 10.22 79.00 27.63 23.59 0.1294 0.3700 0.4332 3.0 31.56 226.51 84.24 67.08 0.1393 0.3746 0.4704 These advantages in efficient computation become very attractive as the
Reference: [OS95] <author> V. E. Ogle and M. Stonebraker. Chabot: </author> <title> Retrieval from a relational database of images. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 41-48, </pages> <month> September </month> <year> 1995. </year>
Reference-contexts: The Digital Library project at UC Berkeley takes a similar approach to catalog photographic collections of California Department of Water resources <ref> [OS95] </ref>. These are examples of similarity queries or query-by-example: The user specifies a sample image and initiates a search to retrieve similar images from the database. <p> One advantage of epsilon-queries is that they are easier to implement in indexing structures such as an R ? -tree. Recent papers, though, have described implementations of nearest-neighbor searches in R ? -trees [RKV95]. In the browsing model that we have adopted <ref> [NBE + 93, OS95] </ref>, the user begins by specifying a sample image. For databases which store synthetic patterns, this sample image can be drawn on screen using a graphical user interface.
Reference: [PF94] <author> E. Petrakis and C. Faloutsos. </author> <title> Similarity searching in large image databases. </title> <type> Technical Report CS-TR-3388, </type> <institution> Univ. of Maryland Institute for Advanced Computer Studies, </institution> <month> December </month> <year> 1994. </year>
Reference-contexts: To achieve this reduction in the dimension of the feature vectors, we consider two different compression techniques using the Discrete Fourier Transform (DFT) and the Singular Value Decomposition (SVD). These techniques have been used to reduce the dimensionality of information in several projects <ref> [NBE + 93, PF94, FRM94, FL94] </ref>. For time-series data such as stock market prices, one may obtain a good approximation to the data by retaining only its low-frequency Fourier coefficients.
Reference: [PTVF92] <author> William H. Press, Saul A. Teukolsky, William T. Vetterling, and Brian P. Flannery. </author> <title> Numerical Recipes in C: </title> <booktitle> The Art of Scientific Computing, 2nd Ed. </booktitle> <publisher> Cambridge University Press, </publisher> <year> 1992. </year>
Reference-contexts: is a diagonal matrix with non-negative elements, called singular values, along its diagonal. = B B 1 0 : : : 0 . . . . . . 0 0 : : : n C C Details on how to to compute the SVD of a matrix are given in <ref> [PTVF92] </ref>. The important thing to note is that the SVD provides the best least squares fit to a set of data points. If each image can be mapped to a point in n-dimensional space, then the database consists of a collection of points scattered in n-dimensional space. <p> Most SVD code such as the C routine svdcmp in <ref> [PTVF92] </ref> arrange the singular values of in sorted order; i.e., 1 is the largest singular value, 2 is the next largest, and so on.
Reference: [RKV95] <author> N. Roussooulos, S. Kelley, and F. Vincent. </author> <title> Nearest neighbor queries. </title> <booktitle> In Proc. ACM SIGMOD Int. Conf. on Management of Data, </booktitle> <pages> pages 71-79, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: One advantage of epsilon-queries is that they are easier to implement in indexing structures such as an R ? -tree. Recent papers, though, have described implementations of nearest-neighbor searches in R ? -trees <ref> [RKV95] </ref>. In the browsing model that we have adopted [NBE + 93, OS95], the user begins by specifying a sample image. For databases which store synthetic patterns, this sample image can be drawn on screen using a graphical user interface.
Reference: [Sal89] <author> G. Salton. </author> <title> Automatic Text Processing. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year> <note> 20 i-th Harmonic Scaled jX i j i-th Harmonic Scaled jX i j 0 3.40 | | 3 0.42 4 0.97 7 0.36 8 1.88 11 0.25 12 0.64 15 0.43 16 1.75 19 0.27 20 0.48 23 0.35 24 0.68 21 22 23 </note>
Reference-contexts: To determine whether DFT or SVD produces more accurate results from each query, we adopt the following 2 criteria: we will measure the recall and precision of each query <ref> [Sal89] </ref>. 7 After the user makes an epsilon-query, the database constructs a reference feature vector ~q based upon the specifications of the query. A similarity query seeks to retrieve all vectors ~x that lie in a neighborhood of radius r about ~q. <p> We consider a truncated vector ~ X N in the neighborhood about ~ Q N to be correct if ~x lies in the neighborhood about ~q in the original n-dimensional space. A similar definition of correctness holds for nearest-neighbor queries. In the information retrieval literature <ref> [Sal89] </ref>, the concept of relevant rather than correct image is usually considered. However, the notion of relevance is difficult to ascertain. It involves human testing and cognition, and is very difficult to determine in an automated fashion.
References-found: 16

