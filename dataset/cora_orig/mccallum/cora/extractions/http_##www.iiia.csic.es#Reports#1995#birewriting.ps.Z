URL: http://www.iiia.csic.es/Reports/1995/birewriting.ps.Z
Refering-URL: http://www.iiia.csic.es/Reports/1996/IIIA-RR-96.html
Root-URL: 
Title: Bi-rewrite Systems  
Author: Jordi Levy and Jaume Agust 
Affiliation: Departament de Llenguatges i Sistemes Informatics Universitat Politecnica de Catalunya Institut d'Investigacio en Intelligencia Artificial Consejo Superior de Investigaciones Cientficas  
Abstract: In this article we propose an extension of term rewriting techniques to automate the deduction in monotone pre-order theories. To prove an inclusion a b from a given set I of them, we generate from I, using a completion procedure, a bi-rewrite system hR ; R i, that is, a pair of rewrite relations ! R and ! R , and seek a common term c such that a ! fl R c. Each component of the bi-rewrite system ! R and ! R is allowed to be a subset of the corresponding inclusion relation or defined by the theory of I. In order to assure the decidability and completeness of such proof procedure we study 
Abstract-found: 1
Intro-found: 1
Reference: <author> Bachmair, L. and Dershowitz, N. </author> <year> (1986a). </year> <title> Commutation, transformation and termination. </title> <editor> In Siekmann, J., editor, </editor> <booktitle> 8th Conference in Automated Deduction, CADE-8, volume 230 of Lecture Notes in Computer Science, </booktitle> <pages> pages 5-20. </pages>
Reference-contexts: If fact the statement is implied by lemma 1.2 in <ref> (Bachmair and Dershowitz, 1986a) </ref>. Lemma 8 A terminating bi-rewrite system is Church-Rosser iff it is locally bi-confluent. Proof: The only if implication is trivially proved since R ffi ! R ( ! R [ R ) fl .
Reference: <author> Bachmair, L., Dershowitz, N. and Hsiang, J. </author> <year> (1986b). </year> <title> Orderings for equational proofs. </title> <booktitle> In Proc. Symp. on Logic in Computer Science, LICS'86, </booktitle> <pages> pages 346-357, </pages> <address> Boston, Massachusetts. </address>
Reference-contexts: Proof: It is evident that the Church-Rosser property implies the three local bi-confluence properties, so we will prove the opposite implication. Such proof is based on the ideas of proof transformation and proof ordering proposed by Bachmair in his thesis (Bachmair, 1991) and in <ref> (Bachmair et al., 1986b) </ref>. <p> Chaining into variables, which is needed for completeness, is too prolific, like our extended critical pairs or like variable instance pairs in <ref> (Bachmair et al., 1986b) </ref>. For special order theories this problem can be avoided. For dense total orderings without endpoints, Bledsoe and Hines (1980) proposed techniques for eliminating certain occurrences of variables from formulas. Bled-soe et al. (1985) and Hines (1992) gave completeness results for these restricted chaining systems.
Reference: <author> Bachmair, L. and Dershowitz, N. </author> <year> (1989a). </year> <title> Completion for rewriting module a congruence. </title>
Reference-contexts: @R local bi-conf. induc. induc. - - - - @ @R I ffi ! R I ffi ! R I If ! I is symmetric ( ! I = ! I ) the above termination property becomes similar to the termination property required in rewriting modulo a set of equations <ref> (Bachmair and Der-showitz, 1989a) </ref>.
Reference: <author> J. </author> <booktitle> of Theoretical Computer Science, </booktitle> <volume> 67 </volume> <pages> 173-201. </pages>
Reference: <author> Bachmair, L., Dershowitz, N. and Plaisted, D. </author> <year> (1989b). </year> <title> Completion without failure. </title> <editor> In At-Kaci, H. and Nivat, M., editors, </editor> <title> Resolution of Equations in Algebraic Structures, </title> <booktitle> volume 2: Rewriting Techniques, chapter 1, </booktitle> <pages> pages 1-30. </pages> <publisher> Academic Press, </publisher> <address> New York. </address>
Reference-contexts: In this section instead of giving the completion procedure we sketch out the possibilities of completion a la Knuth Bendix of an example of bi-rewrite system by means of rule schemes. Other completion methods, like unfailing completion <ref> (Bachmair et al., 1989b) </ref> are also suitable of being applied to automate the deduction in theories with monotonic order relations, using the same notion of extended critical pair.
Reference: <author> Bachmair, L. </author> <year> (1991). </year> <title> Canonical Equational Proofs. </title> <publisher> Birkhauser, </publisher> <address> Boston, Massachusetts. </address> <note> 35 Bachmair, </note> <author> L. and Ganzinger, H. </author> <year> (1993a). </year> <title> Ordered chaining for total orderings. </title> <type> Technical Report MPI-I-93-250, </type> <institution> Max-Planck-Institut fur Informatik, Saarbrucken, Germany. </institution> <note> Short version in Proceedings of CADE'94. </note>
Reference-contexts: Unfortunately, in the presence of non-left-linear rules, 4 the critical pair lemma stated in terms of such standard critical pairs can not be proved because the confluence of variable overlaps is no longer possible. The same fact has already been discussed in <ref> (Bachmair, 1991) </ref>. Here is a simple counter-example to the validity of this lemma. <p> Proof: It is evident that the Church-Rosser property implies the three local bi-confluence properties, so we will prove the opposite implication. Such proof is based on the ideas of proof transformation and proof ordering proposed by Bachmair in his thesis <ref> (Bachmair, 1991) </ref> and in (Bachmair et al., 1986b).
Reference: <author> Bachmair, L. and Ganzinger, H. </author> <year> (1993b). </year> <title> Rewrite techniques for transitive relations. </title> <type> Technical Report MPI-I-93-249, </type> <institution> Max-Planck-Institut fur Informatik, Saarbrucken, Germany. </institution> <note> Short version in Proceedings of LICS'94. </note>
Reference: <author> Barendregt, H. </author> <year> (1981). </year> <title> The Lambda Calculus: its syntax and semantics. </title> <booktitle> Studies in Logic and the Foundations of Mathematics. </booktitle> <publisher> Elsevier Science Publishers B. V. </publisher>
Reference: <author> Baumer, H. </author> <year> (1992). </year> <title> On the use of relation algebra in the theory of reduction systems. </title> <type> Technical report, </type> <institution> Dept. Informatica, Univ. of Twente, Enschede, The Netherlands. </institution>
Reference-contexts: However, such method takes into account the structure of terms, so we will describe it in the next subsection. 3.2 From Local Bi-Confluence to (Extended) Critical Pairs Till now, we have studied Church-Rosser, termination and bi-confluence properties in the framework of relational algebra <ref> (Baumer, 1992) </ref>. All proofs were done without any reference to the structure of terms. In the following, we will consider the term structure in order to reduce the bi-confluence properties to the bi-confluence of critical pairs and rule extensions.
Reference: <author> Birkhoff, G. </author> <year> (1935). </year> <title> On the structure of abstract algebras. </title> <journal> Proc. Cambridge Philos. Soc., </journal> <volume> 31 </volume> <pages> 433-454. </pages>
Reference-contexts: If sj p = (l) then we say that sj p and l match. Notice that if F V (r) F V (l) then the substitution in the previous definition, with its domain restricted to Dom () F V (l), is unique. A variant of the theorem of Birkhoff <ref> (Birkhoff, 1935) </ref> allows to prove the following lemma.
Reference: <author> Bledsoe, W. and Hines, L. M. </author> <year> (1980). </year> <title> Variable elimination and chaining in a resolution-based prover for inequalities. </title> <editor> In Bibel, W. and Kowalski, R., editors, </editor> <booktitle> 5th Conference in Automated Deduction, CADE-5, volume 87 of Lecture Notes in Computer Science, </booktitle> <pages> pages 70-87, </pages> <address> Les Arcs, France. </address> <publisher> Springer-Verlag. </publisher>
Reference: <author> Bledsoe, W., Kunen, K. and Shostak, R. </author> <year> (1985). </year> <title> Completeness results for inequality provers. </title> <journal> Artificial Intelligence, </journal> <volume> 27 </volume> <pages> 255-288. </pages>
Reference: <author> Comon, H. </author> <year> (1993). </year> <title> Completion of rewrite systems with membership constraints. </title> <type> Technical report, </type> <institution> CNRS and LRI, Universite de Paris Sud. de Kogel, E. </institution> <year> (1992). </year> <title> Relational algebra and equational proofs. </title> <type> Technical report, </type> <institution> Department of Philosophy, Tilburg University. </institution>
Reference: <author> Dershowitz, N. </author> <year> (1987). </year> <title> Termination of rewriting. </title> <journal> J. of Symbolic Computation, </journal> <volume> 3 </volume> <pages> 69-115. </pages>
Reference-contexts: s n ! t n g Given a bi-rewrite system hR ; R i, its corresponding inclusion theory is defined by the set of axioms Ax = fs t j s ! The orientation criteria is based, like in rewrite systems, on a well-founded ordering on terms (noted as ) <ref> (Dershowitz, 1987) </ref>. In this section we suppose that each inclusion s t in Ax may be oriented, putting either s ! t in R if s t, or t ! s in R if t s.
Reference: <author> Dershowitz, N. and Jouannaud, J.-P. </author> <year> (1990). </year> <title> Rewrite systems. </title> <editor> In Leeuwen, J. V., editor, </editor> <booktitle> Handbook of Theoretical Computer Science. </booktitle> <publisher> Elsevier Science Publishers. </publisher>
Reference: <author> Farmer, W. M. </author> <year> (1988). </year> <title> A unification algorithm for second-order monadic terms. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 39 </volume> <pages> 131-174. </pages>
Reference-contexts: However our particular case turns up to be attractive as long as it enjoys better properties, as we shall see at the end of this section. On the other hand, our linear second-order unification problem generalizes the associative unification (Makanin, 1977) and the monadic second-order unification <ref> (Farmer, 1988) </ref> problems. These unification problems are known to be decidable, although such results are not as easy to prove as one may suppose at first glance.
Reference: <author> Freese, R., Jezek, J. and Nation, J. B. </author> <year> (1993). </year> <title> Term rewrite systems for lattice theory. </title> <journal> J. of Symbolic Computation, </journal> <volume> 16 </volume> <pages> 279-288. </pages>
Reference-contexts: This represents an advantage of the inclusion theory over the equational theory of lattices because there is not a canonical rewrite system for the equational theory of lattices <ref> (Freese et al., 1993) </ref>. In general inclusions express weaker 22 constraints between terms than equations.
Reference: <author> Gallier, J. H. and Snyder, W. </author> <year> (1990). </year> <title> Designing unification procedures using transformations: A survey. </title> <journal> Bulletin of the EATCS, </journal> <volume> 40 </volume> <pages> 273-326. </pages>
Reference-contexts: Notice that capital letters denote set of indexes whereas lower case letters denote concrete indexes. We use the notation on transformations introduced by Gallier and Snyder <ref> (Gallier and Snyder, 1990) </ref> for describing unification processes.
Reference: <author> Geser, A. </author> <year> (1990). </year> <title> Relative Termination. </title> <type> PhD thesis, </type> <institution> Universitat Passau. </institution>
Reference-contexts: Now, if the bi-rewrite system is Church-Rosser, then s ! fl R ffi fl This theorem, lemma 21 and theorem 24 could be considered as instances of the general critical pair theorem proved by Geser in his thesis <ref> (Geser, 1990) </ref>. Nevertheless, we think it is worthy to face the critical pair problem directly for our case. The extended critical pair theorem generalizes the critical pair lemma (Knuth and Bendix, 1970) for bi-rewrite systems.
Reference: <author> Goldfarb, W. D. </author> <year> (1981). </year> <title> The undecidability of the second-order unification problem. </title> <journal> J. of Theoretical Computer Science, </journal> <volume> 13 </volume> <pages> 225-230. </pages>
Reference-contexts: Unfortunately, the simply typed -calculus unification problem, and even the second-order unification problems are undecidable <ref> (Goldfarb, 1981) </ref>. Since then many decidable classes of higher-order unification problems have been described.
Reference: <author> Hindley, J. R. and Seldin, J. P. </author> <year> (1986). </year> <title> Introduction to Combinators and -Calculus. London Mathematical Society Student Texts. </title> <publisher> Cambridge University Press. 36 Hines, </publisher> <editor> L. M. </editor> <year> (1992). </year> <title> Completeness of a prover for dense linear logics. </title> <journal> J. of Automated Reasoning, </journal> <volume> 8 </volume> <pages> 45-75. </pages>
Reference: <author> Huet, G. </author> <year> (1975). </year> <title> A unification algorithm for typed -calculus. </title> <journal> J. of Theoretical Computer Science, </journal> <volume> 1 </volume> <pages> 27-57. </pages>
Reference: <author> Huet, G. </author> <year> (1980). </year> <title> Confluent reductions: Abstract properties and applications to term rewriting systems. </title> <journal> J. of the ACM, </journal> <volume> 27(4) </volume> <pages> 797-821. </pages>
Reference-contexts: It satisfies local confluence properties and termination of ! EnR , but it is not Church-Rosser. However, termination of ! EnR is enough to prove the equivalence between Church-Rosser property and "global" confluence properties (see <ref> (Huet, 1980) </ref> for a similar proof). Evidently, this termination property is not enough to prove equivalence between local and global confluence properties.
Reference: <author> Jensen, D. C. and Pietrzykowski, T. </author> <year> (1976). </year> <title> Mechanizing !-order type theory through unification. </title> <journal> J. of Theoretical Computer Science, </journal> <volume> 3 </volume> <pages> 123-171. </pages>
Reference-contexts: This process requires the use of a unification procedure. The first sound and complete second-order unification procedure was described by Pietrzykowski (1973), and subsequently a modified version of this algorithm was proposed to solve the unification problem for the simply typed -calculus <ref> (Jensen and Pietrzykowski, 1976) </ref>. Based on it, Huet (1975) proposed the computation of the so called independent pre-unifiers using a pre-unification procedure. <p> Theorem 29 soundness and completeness. Substitution is a unifier of the unification problem S if, and only if, there exists a transformation sequence hS; Idi ) fl h;; i. Compared with the general procedure <ref> (Jensen and Pietrzykowski, 1976) </ref>, we avoid the use of the prolific elimination and iteration rules. These rules always compromise the termination of Jensen and Pietrzykowski's procedure. On the contrary, our procedure always finishes for a very useful case: if no free variable occurs more than twice in a unification problem.
Reference: <author> Jouannaud, J.-P. </author> <year> (1983). </year> <title> Confluent and coherent equational term rewriting systems application to proofs in abstract data types. </title> <editor> In Ausiello, G. and Protasi, M., editors, </editor> <booktitle> Proc. Eighth Colloquium on Trees in Algebra and Programming, CAAP'83, volume 159 of Lecture Notes in Computer Science, </booktitle> <address> L'Aquila. </address>
Reference-contexts: Now, using our concrete definition of minimum I-unifier, a variant of the E-critical pair lemma <ref> (Jouannaud, 1983) </ref> ensures that aj p 1 ( ! fl I " ! fl cj p 1 ( ! fl I )(r 0 ) where = ffit . In particular, we have aj p 1 ! fl I (l 0 ) and I cj p 1 .
Reference: <author> Jouannaud, J.-P. and Kirchner, H. </author> <year> (1986). </year> <title> Completion on a set of rules modulo a set of equations. </title> <journal> SIAM J. on Computing, </journal> <volume> 15(1) </volume> <pages> 1155-1194. </pages>
Reference-contexts: In particular, we have aj p 1 ! fl I (l 0 ) and I cj p 1 . In the equational case <ref> (Jouannaud and Kirchner, 1986) </ref> we would need to require the termination of the subterm relation modulo I. However, the stronger condition required in the definition of extensional closure allows us to disregard this requirement. <p> We prove aj p 2 ! I [v;;st] bj p 2 , so aj p 2 ! I bj p 2 ! fl I (l) and we have a ! InR [p 2 ;;l!r] c. Notice that like in (Peterson and Stickel, 1981), and differently from <ref> (Jouannaud and Kirchner, 1986) </ref>, the inclusions in I are required to be (both left- and right-) linear. However, thanks to the stronger condition required to extended rules, we can disregard the well-founded condition on the strict subterm modulo I relation.
Reference: <author> Kirchner, H. </author> <year> (1985). </year> <title> Preuves par Completion dans les Varietes d'Algebres. </title> <type> PhD thesis, </type> <institution> Universite de Nancy I. </institution>
Reference: <author> Klop, J. W. </author> <year> (1987). </year> <title> Term rewriting systems: A tutorial. </title> <journal> Bulletin of the EATCS, </journal> <volume> 32 </volume> <pages> 143-183. </pages>
Reference: <author> Knuth, D. E. and Bendix, P. B. </author> <year> (1970). </year> <title> Simple word problems in universal algebras. </title> <editor> In Leech, J., editor, </editor> <booktitle> Computational Problems in Abstract Algebra, </booktitle> <pages> pages 263-297. </pages> <publisher> Pergamon Press, </publisher> <editor> Elmsford, N. </editor> <booktitle> Y. </booktitle>
Reference-contexts: However, the bi-rewrite system is not Church-Rosser. A simple adaptation of the standard critical pair definition <ref> (Knuth and Bendix, 1970) </ref> can be given for bi-rewrite systems. However, as we will see, it is not sufficient to prove the critical pair lemma. <p> Nevertheless, we think it is worthy to face the critical pair problem directly for our case. The extended critical pair theorem generalizes the critical pair lemma <ref> (Knuth and Bendix, 1970) </ref> for bi-rewrite systems. However, we require the bi-confluence of not only the standard critical pairs, but also of the extended critical pairs.
Reference: <author> Levy, J. and Agust, J. </author> <year> (1993). </year> <title> Bi-rewriting, a term rewriting technique for monotonic order relations. </title> <editor> In Kirchner, C., editor, </editor> <booktitle> Rewriting Techniques and Applications, RTA'93, volume 690 of Lecture Notes in Computer Science, </booktitle> <pages> pages 17-31, </pages> <address> Montreal, Canada. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Monotonicity or anti-monotonicity of functions with respect to special (transitive) relations led Manna and Waldinger (1986) to propose subterm chaining methods for general clauses but the proposed calculus was shown to be incomplete (Manna and Waldinger, 1992). In <ref> (Levy and Agust, 1993) </ref> we were the first to apply rewrite techniques to non-symmetric and monotonic relations by means of bi-rewrite systems. Bachmair and Ganzinger (1993b) used the idea of bi-rewriting to give a refutationally complete inference system of ordered chaining for general clauses and general transitive relations.
Reference: <author> Levy, J. </author> <year> (1994). </year> <title> The Calculus of Refinements, a formal specification model based on inclusions. </title> <type> PhD thesis, </type> <institution> Dept. Llenguatges i Sistemes Informatics, Universitat Politecnica de Catalunya. </institution>
Reference: <author> Levy, J. </author> <year> (1996). </year> <title> Linear second-order unification. In Rewriting Techniques and Applications, </title> <address> RTA'96, New Jersey, USA. </address> <note> (to be published). </note>
Reference-contexts: The following theorem states soundness and completeness conditions of the unification procedure based on the previous transformation rules. The proof of this theorem is out of the scope of this article and it can be found in <ref> (Levy, 1996) </ref>. Theorem 29 soundness and completeness. Substitution is a unifier of the unification problem S if, and only if, there exists a transformation sequence hS; Idi ) fl h;; i. <p> This fact is related with the termination of the naive string unification procedure when variables occur at most twice (Schulz, 1991), and is also proved in <ref> (Levy, 1996) </ref>. Theorem 30 termination. If no free variable occurs more than twice in a linear second order unification problem, then this problem is decidable. Although the condition of this theorem may seem very restrictive, it is not so.
Reference: <author> Makanin, G. S. </author> <year> (1977). </year> <title> The problem of solvability of equations in a free semigroup. </title> <journal> Math. USSR Sbornik, </journal> <volume> 32(2) </volume> <pages> 129-198. </pages>
Reference-contexts: However our particular case turns up to be attractive as long as it enjoys better properties, as we shall see at the end of this section. On the other hand, our linear second-order unification problem generalizes the associative unification <ref> (Makanin, 1977) </ref> and the monadic second-order unification (Farmer, 1988) problems. These unification problems are known to be decidable, although such results are not as easy to prove as one may suppose at first glance.
Reference: <author> Manna, Z. and Waldinger, R. </author> <year> (1986). </year> <title> Special relations in automated deduction. </title> <journal> J. of the ACM, </journal> <volume> 33 </volume> <pages> 1-60. </pages>
Reference: <author> Manna, Z. and Waldinger, R. </author> <year> (1992). </year> <title> The special-relation rules are incomplete. </title> <editor> In Kapur, D., editor, </editor> <booktitle> 11th Int. Conf. on Automated Deduction, CADE-11, volume 607 of Lecture Notes in Artificial Intelligence, </booktitle> <address> Saratoga Springs, New York. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Bled-soe et al. (1985) and Hines (1992) gave completeness results for these restricted chaining systems. Monotonicity or anti-monotonicity of functions with respect to special (transitive) relations led Manna and Waldinger (1986) to propose subterm chaining methods for general clauses but the proposed calculus was shown to be incomplete <ref> (Manna and Waldinger, 1992) </ref>. In (Levy and Agust, 1993) we were the first to apply rewrite techniques to non-symmetric and monotonic relations by means of bi-rewrite systems.
Reference: <author> Meseguer, J. </author> <year> (1990). </year> <title> Rewriting as a unified model of concurrency. </title> <booktitle> In Concur'90, Lecture Notes in Computer Science, </booktitle> <address> Amsterdam, The Netherlands. </address> <publisher> Springer-Verlag. </publisher> <address> 37 Meseguer, J. </address> <year> (1992). </year> <title> Conditional rewriting logic as a unified model of concurrency. </title> <journal> J. of Theoretical Computer Science, </journal> <volume> 96 </volume> <pages> 73-155. </pages>
Reference: <author> Miller, D. </author> <year> (1991a). </year> <title> A logic programming language with lambda-abstraction, function variables, and simple unification. </title> <type> Technical Report ECS-LFCS-91-159, </type> <institution> Laboratory for Foundations of Computer Science, Edinburgh, Great Britain. </institution>
Reference: <author> Miller, D. </author> <year> (1991b). </year> <title> Unification of simply typed lambda-terms as logic programming. </title> <type> Technical Report ECS-LFCS-91-160, </type> <institution> Laboratory for Foundations of Computer Science, Edinburgh, Great Britain. </institution>
Reference: <author> Newman, M. H. A. </author> <year> (1942). </year> <title> On theories with a combinatorial definition of "equivalence". </title> <journal> Annals of Math., </journal> <volume> 43(2) </volume> <pages> 223-243. </pages>
Reference: <author> Nipkow, T. </author> <year> (1991). </year> <title> Higher-order critical pairs. </title> <booktitle> In Proc. Symp. on Logic in Computer Science, LICS'91, </booktitle> <pages> pages 342-349. </pages>
Reference-contexts: If belongs to the set of minimum linear second-order unifiers of l and F (s), being F a fresh free variable, then (F (t)) (r) is a (second-order) critical pair. Similarly for critical pairs between R and R . Nipkow in <ref> (Nipkow, 1991) </ref> could not define critical pairs in this way because F (s) violates his definition of pattern.
Reference: <author> Nipkow, T. </author> <year> (1992). </year> <title> Functional unification of higher-order patterns. </title> <type> Technical report, </type> <institution> Institut fur Informatik, TU Munchen. </institution>
Reference: <author> Peterson, G. E. and Stickel, M. E. </author> <year> (1981). </year> <title> Complete sets of reductions for some equational theories. </title> <journal> J. of the ACM, </journal> <volume> 28(2) </volume> <pages> 233-264. </pages>
Reference-contexts: Notice that in a ! InR rewrite step, the ! I rewrite steps take place bellow the ! R rewrite step. We say that the ! R rewrite step covers such ! I rewrite steps. We will use the notions of E-matching and E-unification from <ref> (Peterson and Stickel, 1981) </ref> but adapted to bi-rewriting. Given two terms s and t, we say that s I-matches t iff there exists a substitution such that s ! fl I (t), and s I 1 -matches t iff there exists a substitution such that s ! fl I (t). <p> We prove aj p 2 ! I [v;;st] bj p 2 , so aj p 2 ! I bj p 2 ! fl I (l) and we have a ! InR [p 2 ;;l!r] c. Notice that like in <ref> (Peterson and Stickel, 1981) </ref>, and differently from (Jouannaud and Kirchner, 1986), the inclusions in I are required to be (both left- and right-) linear. However, thanks to the stronger condition required to extended rules, we can disregard the well-founded condition on the strict subterm modulo I relation.
Reference: <author> Pietrzykowski, T. </author> <year> (1973). </year> <title> A complete mechanization of second-order type theory. </title> <journal> J. of the ACM, </journal> <volume> 20 </volume> <pages> 333-364. </pages>
Reference: <author> Prehofer, C. </author> <year> (1995). </year> <title> Solving Higher-Order Equations: From Logic to Programming. </title> <type> PhD thesis, </type> <institution> Technische Universitat Munchen. </institution>
Reference-contexts: Recently Prehofer has proved in his thesis <ref> (Prehofer, 1995) </ref> decidability results for some unification problems based on Nipkow's patterns. He proves, for instance, that unification of linear second-order systems is decidable (theorem 5.3.1).
Reference: <author> Robinson, G. A. and Wos, L. T. </author> <year> (1969). </year> <title> Paramodulation and theorem proving in first order theories with equality. </title> <journal> Machine Intelligence, </journal> <volume> 4 </volume> <pages> 133-150. </pages>
Reference-contexts: Special techniques have been devised for such relations, specially for equivalence relations which have attracted most of the attention. Slagle (1972) was the first to encode resolution with the transitivity axiom in a chaining system with paramodulation <ref> (Robinson and Wos, 1969) </ref> for theories with equality, orders and sets. Chaining into variables, which is needed for completeness, is too prolific, like our extended critical pairs or like variable instance pairs in (Bachmair et al., 1986b). For special order theories this problem can be avoided.
Reference: <author> Schmidt-Schau, M. </author> <year> (1995). </year> <title> Unification of stratified second-order terms. </title> <journal> J. of Symbolic Computation. (Submited). </journal>
Reference: <author> Schulz, K. U. </author> <year> (1991). </year> <title> Makanin's algorithm, two improvements and a generalization. </title> <type> Technical Report CIS-Bericht-91-39, </type> <institution> Centrum fur Informations und Sprachverarbeitung, Universitat Munchen. </institution>
Reference-contexts: On the contrary, our procedure always finishes for a very useful case: if no free variable occurs more than twice in a unification problem. This fact is related with the termination of the naive string unification procedure when variables occur at most twice <ref> (Schulz, 1991) </ref>, and is also proved in (Levy, 1996). Theorem 30 termination. If no free variable occurs more than twice in a linear second order unification problem, then this problem is decidable. Although the condition of this theorem may seem very restrictive, it is not so.
Reference: <author> Slagle, J. R. </author> <year> (1972). </year> <title> Automatic theorem proving for theories with built-in theories including equality, partial orderings, and sets. </title> <journal> J. of the ACM, </journal> <volume> 19 </volume> <pages> 120-135. </pages>
Reference: <author> Struth, G. </author> <year> (1996). </year> <title> Rewriting for non-symmetric transitive relations modulo a congruence. </title> <type> Technical report, </type> <institution> Max-Planck-Institut fur Informatik. </institution> <note> Accesible by WWW at http://www.mpi-sb.mpg.de/~ struth/papers/rta.ps. </note>
Reference: <author> Toyama, Y. </author> <year> (1987). </year> <title> On the Church-Rosser property for the direct sum of term rewriting systems. </title> <journal> J. of the ACM, </journal> <volume> 34(1) </volume> <pages> 128-143. 38 </pages>
Reference-contexts: This problem would be avoided if a ! b 2 R , but then the inclusion theory corresponding to the bi-rewrite system would be different. Non-left-linear rules also invalidate the bi-rewrite parallel of Toyama's theorem <ref> (Toyama, 1987) </ref> as the following counter-example shows.
References-found: 50

