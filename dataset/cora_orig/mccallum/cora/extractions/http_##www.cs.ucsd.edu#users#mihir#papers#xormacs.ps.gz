URL: http://www.cs.ucsd.edu/users/mihir/papers/xormacs.ps.gz
Refering-URL: http://www.cs.ucsd.edu/users/mihir/papers/xormacs.html
Root-URL: http://www.cs.ucsd.edu
Email: E-mail: mihir@cs.ucsd.edu  e-mail: guerin@watson.ibm.com.  e-mail: rogaway@cs.ucdavis.edu.  
Title: XOR MACs: New Methods for Message Authentication Using Finite Pseudorandom Functions  
Author: Mihir Bellare Roch Gu erin Phillip Rogaway 
Address: San Diego, 9500 Gilman Drive, La Jolla, CA 92093.  PO Box 704, Yorktown Heights, New York 10598, USA.  CA 95616, USA.  
Affiliation: Department of Computer Science Engineering, Mail Code 0114, University of California at  Advanced Networking Laboratory, IBM T.J. Watson Research Center,  Dept. of Computer Science, Eng. II Bldg., University of California, Davis,  
Date: October 1995  
Note: Lecture Notes in Computer Science Vol. 963, D. Coppersmith ed., Springer-Verlag, 1995.  
Abstract: A preliminary version of this paper appeared in Advances in Cryptology - Crypto 95 Proceedings, Abstract We describe a new approach for authenticating messages. Our "XOR MACs" have several nice features, including parallelizability, incrementality, and provable security. Our method uses any finite pseudorandom function (PRF). The finite PRF can be "instantiated" via DES (yielding an alternative to the CBC MAC), via the compression function of MD5 (yielding an alternative to various "keyed MD5" constructions), or in a variety of other ways. The proven security is quantitative, expressing the adversary's inability to forge in terms of her (presumed) inability to break the underlying finite PRF. This is backed by attacks showing the analysis is tight. Our proofs exploit linear algebraic techniques, and relate the security of a given XOR scheme to the probability that a certain associated matrix is of full rank. Our analysis shows that XOR schemes are actually more secure than the CBC MAC, in a sense that we can make precise. 
Abstract-found: 1
Intro-found: 1
Reference: [ABI] <author> N. Alon, L. Babai and A. Itai. </author> <title> A fast and simple randomized parallel algorithm for the maximal independent set problem. </title> <editor> J. </editor> <booktitle> of Algorithms, Vol.7, </booktitle> <pages> 567-583, </pages> <year> 1986. </year>
Reference: [BKR] <author> M. Bellare, J. Kilian and P. Rogaway. </author> <title> On the security of cipher block chaining. </title> <booktitle> Advances in Cryptology - Crypto 94 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 839, </volume> <editor> Y. Desmedt ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: This type of security analysis for a MAC, starting from a finite PRF, begins with <ref> [BKR] </ref>. Our XOR schemes are so simple that it is tempting to think one can easily find attacks. This is why we stress the importance of the proofs of security which show that no attacks short of breaking the underlying PRF will succeed. <p> This is in fact the only attack short of breaking the PRF. This is not obvious, of course; indeed it is far from clear why XMACR and XMACC should be secure. That is why we have our proofs. 3 Definitions Modeling block ciphers as finite pseudorandom functions begins with <ref> [BKR] </ref>. <p> We will consider the information theoretic case. The following was proved in <ref> [BKR] </ref>. Let R be the family of random functions of input and output length l, and let E be any adversary. <p> Yet this by itself is not proof that our schemes are more secure, because it may by that the analysis of <ref> [BKR] </ref> is not tight. In fact, however, there are attacks (lower bounds) which indicate that the best improvement one could hope for in their analysis would be that ffi CBC = (nq 2 s + q v )2 l .
Reference: [BGG1] <author> M. Bellare, O. Goldreich and S. Goldwasser. </author> <title> Incremental cryptography: The case of hashing and signing. </title> <booktitle> Advances in Cryptology - Crypto 94 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 839, </volume> <editor> Y. Desmedt ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: Note that even in the software setting parallelizability can be relevant: with an adequate degree of parallelism, multiple machine pipelines can all be kept busy doing useful work. Incrementality. An XOR MAC is incremental <ref> [BGG1] </ref> with respect to block replacement. Suppose M [i] is modified to a new 32-bit value m. Then, for a long message M , one can update the MAC much quicker than it would take to re-compute it. Let's illustrate for XMACR .
Reference: [BGG2] <author> M. Bellare, O. Goldreich and S. Goldwasser. </author> <title> Incremental cryptography and application to virus protection. </title> <booktitle> Proceedings of the 27th Annual Symposium on Theory of Computing, ACM, </booktitle> <year> 1995. </year>
Reference-contexts: Then (r 0 ; z 0 ) is a MAC for M 0 . Extensions of this scheme to support insertion and deletion of blocks (not just replacement) appear in <ref> [BGG2] </ref>. Out-of-order verification. Tag verification can proceed even if message blocks arrive out of order. Here it is only necessary that the each block be accompanied by its index. With other mechanisms MAC verification cannot proceed before the first block has been received, for example.
Reference: [BeRo] <author> B. Berger and J. Rompel, </author> <title> "Simulating (log c n)-wise independence in NC," </title> <booktitle> Proceedings of the 30th Symposium on Foundations of Computer Science, IEEE, </booktitle> <year> 1989. </year>
Reference: [GGM] <author> O. Goldreich, S. Goldwasser, and S. Micali. </author> <title> How to construct random functions. </title> <journal> Journal of the ACM, </journal> <volume> Vol. 33, No. 4, </volume> <pages> 210-217, </pages> <year> 1986. </year>
Reference-contexts: Our XOR schemes are proven secure- we show that if the F is a "secure" finite PRF family then the MAC schemes based on it are also "secure." In formalizing this, security of a finite PRF family means indistinguishability from a family of random functions in the sense of <ref> [GGM] </ref>, while security of a MAC means it resists chosen message attack. <p> This is not obvious, of course; indeed it is far from clear why XMACR and XMACC should be secure. That is why we have our proofs. 3 Definitions Modeling block ciphers as finite pseudorandom functions begins with [BKR]. The underlying notion is the pseudorandom function notion of <ref> [GGM] </ref>, appropriately tailored to take into account the fact that block ciphers have fixed input and output lengths and can't be treated asymptotically, and builds on a suggestion of [LuRa] that DES be viewed as a "pseudorandom in practice" function family. First some notation. <p> Note this is a very large family, consisting of 2 L2 l functions. A finite function family F is "pseudorandom" if the input-output behavior of F a "looks random" to someone who doesn't know the key a. This is formalized via the notion of statistical tests <ref> [GGM] </ref>. Formally, such a test is an oracle algorithm A. Let F; G be finite function families. <p> in distinguishing F from G is defined by Adv A (F; G) = Pr [ A g = 1 ] Pr [ A g = 1 ] : The probability is over the indicated random choice of g and the coin tosses of A. (This definition reflects the following intuition <ref> [GGM] </ref>. Consider the experiment in which A is provided as oracle a function g chosen at random from either F or from G, the choice being made at random according to a bit b. A is trying to predict b.
Reference: [GMR] <author> S. Goldwasser, S. Micali, and R. Rivest. </author> <title> A digital signature scheme secure against adaptive chosen-message attacks. </title> <journal> SIAM Journal of Computing, </journal> <volume> 17(2) </volume> <pages> 281-308, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: The oracle computes the decision d = Vf (a; M; ) and returns it to E. The adversary is allowed an adaptive chosen message attack, as in the notion of <ref> [GMR] </ref>, but we also allow verify queries because, unlike the setting in digital signatures, E cannot compute the verify predicate on her own (since the verify algorithm is not public). Note that E does not see a nor the coin tosses of Sig. <p> We say that E is successful if she makes a verify query (M; ) which is accepted but which is not known-authentic. 1 (The verify query (M; ) in question is called a forgery, and the definition reflects the notion of existential forgery <ref> [GMR] </ref>.) We say that E [q s ; q v ; *]-breaks the scheme if her attack is a (q s ; q v ; *)-attack and her probability of success is at least *.
Reference: [ISO] <author> ISO/IEC 9797. </author> <title> Data cryptographic techniques Data integrity mechanism using a cryptographic check function employing a block cipher algorithm, </title> <year> 1989. </year>
Reference-contexts: The most prevalent MAC is the "cipher block chaining message authentication code" (CBC MAC) specified in the International Standard ISO 9797 <ref> [ISO] </ref> and the U.S. Standard ANSI X9.9 [X9.9]. In recent years another type of MAC has started to become prevalent: these are constructed by somehow "keying" a cryptographic hash, as in MAC a (x) = MD5 (x:a) (see, for example, [Ts]).
Reference: [Kr] <author> H. Krawczyk. </author> <type> Personal communication, </type> <month> September </month> <year> 1994. </year>
Reference-contexts: In particular, the success probability of the adversary in the XOR schemes is independent of the lengths of the messages in her chosen message attack (as long as they stay below a certain specified but very large length) while the attacks of <ref> [Kr, PV] </ref> show that the success probability of the adversary in the CBC scheme grows as a linear function of the message length. See Section 7. We also describe the best attacks we know on the XOR schemes. <p> In fact, however, there are attacks (lower bounds) which indicate that the best improvement one could hope for in their analysis would be that ffi CBC = (nq 2 s + q v )2 l . This result is due independently to Krawczyk <ref> [Kr] </ref> and Preneel and Van Oorschot [PV]| what they show is an attack on the CBC MAC which succeeds in forging the signature of a new message with probability (nq 2 s ) 2 l , after having made q s signing queries on n-block messages.
Reference: [LuRa] <author> M. Luby and C. Rackoff, </author> <title> "How to construct pseudorandom permutations from pseudorandom functions," </title> <journal> SIAM J. Comput, </journal> <volume> Vol. 17, No. 2, </volume> <month> April </month> <year> 1988. </year>
Reference-contexts: The underlying notion is the pseudorandom function notion of [GGM], appropriately tailored to take into account the fact that block ciphers have fixed input and output lengths and can't be treated asymptotically, and builds on a suggestion of <ref> [LuRa] </ref> that DES be viewed as a "pseudorandom in practice" function family. First some notation. Denote by x (i) the i-th bit of a string x and by jxj its length.
Reference: [PV] <author> B. Preneel and P. van Oorschot. </author> <title> A new generic attack on message authentication codes. </title> <booktitle> Advances in Cryptology - Crypto 95 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 963, </volume> <editor> D. Coppersmith ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: In particular, the success probability of the adversary in the XOR schemes is independent of the lengths of the messages in her chosen message attack (as long as they stay below a certain specified but very large length) while the attacks of <ref> [Kr, PV] </ref> show that the success probability of the adversary in the CBC scheme grows as a linear function of the message length. See Section 7. We also describe the best attacks we know on the XOR schemes. <p> In fact, however, there are attacks (lower bounds) which indicate that the best improvement one could hope for in their analysis would be that ffi CBC = (nq 2 s + q v )2 l . This result is due independently to Krawczyk [Kr] and Preneel and Van Oorschot <ref> [PV] </ref>| what they show is an attack on the CBC MAC which succeeds in forging the signature of a new message with probability (nq 2 s ) 2 l , after having made q s signing queries on n-block messages. Thus the dependence on n in ffi CBC is unavoidable.
Reference: [Ts] <author> G. Tsudik, </author> <title> "Message authentication with one-way hash functions." </title> <booktitle> Proceedings of Info-com 92, </booktitle> <publisher> IEEE Press, </publisher> <year> 1992. </year>
Reference-contexts: Standard ANSI X9.9 [X9.9]. In recent years another type of MAC has started to become prevalent: these are constructed by somehow "keying" a cryptographic hash, as in MAC a (x) = MD5 (x:a) (see, for example, <ref> [Ts] </ref>). The goal of the present work is to provide new methods which have certain efficiency and security advantages. We call our methods "XOR schemes." They are simple to describe and implement. They use as their underlying primitive any finite pseudorandom function (PRF).
Reference: [Ri] <author> R. Rivest, </author> <title> "The MD5 message digest algorithm." </title> <institution> IETF RFC-1321, </institution> <year> 1992. </year>
Reference: [X9.9] <author> ANSI X9.9, </author> <title> American National Standard for Financial Institution Message Authentication (Wholesale), </title> <journal> American Bankers Association, </journal> <note> 1981. Revised 1986. 13 </note>
Reference-contexts: The most prevalent MAC is the "cipher block chaining message authentication code" (CBC MAC) specified in the International Standard ISO 9797 [ISO] and the U.S. Standard ANSI X9.9 <ref> [X9.9] </ref>. In recent years another type of MAC has started to become prevalent: these are constructed by somehow "keying" a cryptographic hash, as in MAC a (x) = MD5 (x:a) (see, for example, [Ts]).
References-found: 14

