URL: ftp://ftp.cs.rutgers.edu/pub/allender/wagner.eatcs.ps.Z
Refering-URL: http://www.cs.rutgers.edu/~allender/publications/old.eatcs.html
Root-URL: http://www.cs.rutgers.edu
Title: COUNTING HIERARCHIES: POLYNOMIAL TIME AND CONSTANT DEPTH CIRCUITS Counting Hierarchy: a hierarchy of complexity classes
Author: ERIC W. ALLENDER and KLAUS W. WAGNER 
Note: The  this notion of circuit is being studied not only by complexity theoreticians, but also  
Address: New Brunswick, NJ 08903, USA  D-8700 Wurzburg, FRG  
Affiliation: Department of Computer Science, Rutgers University  Institut fur Informatik, Universitat Wurzburg  
Abstract: In the spring of 1989, Seinosuke Toda of the University of Electro-Communications in Tokyo, Japan, proved that the polynomial hierarchy is contained in P PP [To-89]. In this Structural Complexity Column, we will briefly review Toda's result, and explore how it relates to other topics of interest in computer science. In particular, we will introduce the reader to Along the way, we'll review the important notion of an operator on a com plexity class. 
Abstract-found: 1
Intro-found: 1
Reference: [Aj-83] <author> M. Ajtai, </author> <title> 1 1 formulae on finite structures, </title> <journal> Annals of Pure and Applied Logic 24, </journal> <pages> 1-48. </pages>
Reference-contexts: In some sense, AC 0 and NC 1 represent the extremes of our knowledge about complexity classes. On the one hand, many combinatorial methods have been developed that enable us to show that many problems in NC 1 are not in AC 0 <ref> [FSS-84, Aj-83, Ya-85, H-a-86] </ref>. On the other hand, it is still an open problem whether or not NP = NC 1 . Thus we know a great deal about AC 0 , but really quite little about NC 1 .
Reference: [Al-89] <author> E. Allender, </author> <title> A note on the power of threshold circuits, </title> <booktitle> Proc. 30th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 580-584. </pages> <note> See also [AH-92]. </note>
Reference-contexts: However, because as mentioned above, the mapping between the levels of LCH and circuit depth is only approximate; thus a direct proof is necessary if one wants to achieve the sharpest possible result. In <ref> [Al-89] </ref>, a very simple proof was presented of the fact that (non-uniform) AC 0 k can be recognized by (non-uniform) depth three threshold circuits 4 of size n log k n . The proof in [Al-89] was inspired by Toda's theorem, but it does not follow directly from [To-89]. <p> In <ref> [Al-89] </ref>, a very simple proof was presented of the fact that (non-uniform) AC 0 k can be recognized by (non-uniform) depth three threshold circuits 4 of size n log k n . The proof in [Al-89] was inspired by Toda's theorem, but it does not follow directly from [To-89]. In fact the circuit complexity result of [Al-89] appears to be much easier to prove than Toda's theorem; the proof of [Al-89] makes use of some important but elementary observations of Razborov and Smolensky [Ra-87, Sm-87]. <p> The proof in <ref> [Al-89] </ref> was inspired by Toda's theorem, but it does not follow directly from [To-89]. In fact the circuit complexity result of [Al-89] appears to be much easier to prove than Toda's theorem; the proof of [Al-89] makes use of some important but elementary observations of Razborov and Smolensky [Ra-87, Sm-87]. <p> The proof in <ref> [Al-89] </ref> was inspired by Toda's theorem, but it does not follow directly from [To-89]. In fact the circuit complexity result of [Al-89] appears to be much easier to prove than Toda's theorem; the proof of [Al-89] makes use of some important but elementary observations of Razborov and Smolensky [Ra-87, Sm-87]. It is also true that (uniform) AC 0 k can be recognized by (uniform) depth three threshold circuits of size n log k n , although the proof is slightly more complex than that of [Al-89]. <p> <ref> [Al-89] </ref> makes use of some important but elementary observations of Razborov and Smolensky [Ra-87, Sm-87]. It is also true that (uniform) AC 0 k can be recognized by (uniform) depth three threshold circuits of size n log k n , although the proof is slightly more complex than that of [Al-89]. (The proof of the uniform version still does not appeal to Toda's theorem.) The proof of the theorem for uniform circuits is found in [AH-90]. 3. Conclusion We hope that this will serve as a useful survey of an area of research we find very exciting. <p> inclusions of this sort [Ya-90]. communication.) Is there an interesting circuit complexity class corresponding to IP (log)? 5 * Can the circuit lower bounds of [HM-87] be extended to circuits of greater depth? * Is AC 0 TC 0 3 , or is the simulation of AC 0 presented in <ref> [Al-89] </ref> optimal? (A first step in this direction has been taken by Bruck and Smolensky [BS-92]. They show that AC 0 requires size at least 2 polylogn on depth 2 threshold circuits.) * And last but not least, we leave the big question: is TC 0 = NC 1 ?
Reference: [Al-90] <author> E. Allender, </author> <title> Oracles vs proof techniques that do not relativize, </title> <booktitle> Proc. In ternational Symposium SIGAL '90, Lecture Notes in Computer Science 450, </booktitle> <pages> pp. 39-52. </pages>
Reference: [AH-90] <author> E. Allender and U. Hertrampf, </author> <title> On the power of uniform families of constant depth threshold circuits, </title> <booktitle> Proc. 15th International Sym posium on Mathematical Foundations of Computer Science, 1990, Lecture Notes in Computer Science 452, </booktitle> <pages> pp. 158-164. </pages> <note> See also [AH-92]. </note>
Reference-contexts: be recognized by (uniform) depth three threshold circuits of size n log k n , although the proof is slightly more complex than that of [Al-89]. (The proof of the uniform version still does not appeal to Toda's theorem.) The proof of the theorem for uniform circuits is found in <ref> [AH-90] </ref>. 3. Conclusion We hope that this will serve as a useful survey of an area of research we find very exciting. There are a great many open problems, and we feel confident that much progress on these problems will be made in the next few years.
Reference: [AH-92] <author> E. Allender and U. Hertrampf, </author> <title> Depth reduction for circuits of unbounded fan-in, </title> <note> to appear in Information and Computation. </note>

Reference: [BM-89] <author> L. Babai and S. Moran, </author> <title> Arthur-Merlin games: a randomized proof system and a hierarchy of complexity classes, </title> <journal> J. Comput. and System Sciences 36, </journal> <pages> 254-276. </pages>
Reference: [BIS-90] <author> D. A. Mix Barrington, N. Immerman, and H. Straubing, </author> <booktitle> On uniformity within NC 1 , Journal of Computer and System Sciences 41, </booktitle> <pages> 274-306. </pages>
Reference-contexts: Each circuit family thus defines a language. A circuit family is uniform if the function n 7! C n is easily computable in some sense. For the very small circuit complexity classes we discuss here, a very strong notion of uniformity is appropriate. This is discussed in detail in <ref> [BIS-90] </ref>; we will not give detailed definitions concerning uniformity here. Two important circuit complexity classes are NC 1 and AC 0 ; NC 1 is the class of languages accepted by (uniform) circuits of AND and OR gates of fan-in 2, of polynomial size and logarithmic depth. <p> We will denote the k-th level of the LCH by C k -logtime. Levels of the LCH correspond roughly to circuit depth. It was shown in <ref> [BIS-90] </ref> that S k k -logtime = (uniform) AC 0 , and the same techniques can be used to show that LCH = (uniform) TC 0 . However, the correspondence is not exact.
Reference: [Be-92] <author> R. Beigel, </author> <title> Perceptrons, PP, and the polynomial hierarchy, </title> <booktitle> Proc. 7th IEEE Structure in Complexity Theory Conference, </booktitle> <pages> pp. 14-19. </pages>
Reference-contexts: TC 0 k denotes the class of languages accepted by threshold circuits of depth k. 3 In the meantime, this question has been addressed by Richard Beigel. In <ref> [Be-92] </ref>, Beigel presents an oracle relative to which P NP is not contained in PP. In fact, he shows the stronger result that the inclusion presented in [BHW-91] can not be improved using relativizable proof techniques. <p> Circuit lower bounds (or equivalently, oracles separating levels of the counting hierarchy) have been quite difficult to construct. Toran reviews the separations that are currently known in [Tor-91]. (See also <ref> [Be-92, Gr-90] </ref>.) Seen in this setting, it is clear that Toda's result that PH P PP says something about the threshold circuit complexity of AC 0 .
Reference: [BHW-91] <author> R. Beigel, L. Hemachandra, and G. Wechsung, </author> <title> Probabilistic polynomial time is closed under parity reductions, </title> <journal> Information Processing Letters 37, </journal> <pages> 91-94. </pages>
Reference-contexts: It is not even known if P NP is contained in PP. The largest subclass of PH known to be contained in PP is the class P NP [log] (the class of languages that can be recognized with O (log n) queries to SAT) <ref> [BHW-91] </ref>. 3 2. Circuits (and Neural Nets) Toda's theorem has some very interesting consequences for circuit complexity. Before we can present these consequences, it will be instructive to review some basic notions from circuit complexity. <p> In [Be-92], Beigel presents an oracle relative to which P NP is not contained in PP. In fact, he shows the stronger result that the inclusion presented in <ref> [BHW-91] </ref> can not be improved using relativizable proof techniques. The following points explain in part why TC 0 has been the focus of attention. * The majority gate is of essentially the same power as a gate for integer multiplication [CSV-84].
Reference: [BRS-91] <author> R. Beigel, N. Reingold, and D. Spielman, </author> <title> PP is closed under intersection, </title> <booktitle> Proc. 23rd ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 1-9. </pages> <note> To appear in J. Computer and System Science. </note>
Reference-contexts: It was shown in <ref> [BRS-91] </ref> that PP is closed under union and intersection. This beautiful and surprising result has been generalized to the entire counting hierarchy [Gu-90]. 3.
Reference: [BHZ-87] <author> R. Boppana, J. H-astad, and S. Zachos, </author> <title> Does co-NP have short interactive proofs?, </title> <journal> Information Processing Letters 25, </journal> <pages> 127-132. </pages>
Reference-contexts: The operator is a way to generalize the complexity class Parity-P of [PZ-83,GP-86]. We should mention that Stathis Zachos has an alternative logic-based formulation for defining complexity classes of this sort. His approach has also been quite useful in proving results about these classes; see <ref> [HZ-84, Za-88, ZH-86, BHZ-87, ZF-87] </ref>. We would now like to briefly catalogue some of the known relationships among the complexity classes defined using these operators.
Reference: [Br-90] <author> G. Brassard, </author> <title> Hot news on interactive protocols, </title> <journal> SIGACT News 21, </journal> <volume> 1, </volume> <pages> pp. 7-11. </pages>
Reference: [Br-90a] <author> G. Brassard, </author> <title> Hiding information from oracles, </title> <journal> SIGACT News 21, </journal> <volume> 2, </volume> <pages> pp. 5-11. </pages>
Reference: [Bru-90] <author> J. Bruck, </author> <title> Harmonic analysis of polynomial threshold functions, </title> <journal> SIAM J. Disc. Math. </journal> <volume> 3, </volume> <pages> 168-177. </pages>
Reference-contexts: Any complexity-theoretic work on threshold circuits thus is of some interest to the neural network community, and conversely, some theoretical work of interest to complexity theoreticians was motivated primarily by the study of neural networks <ref> [Go-89, Bru-90, BS-92] </ref>. * A large body of work on threshold logic and threshold circuits already exists (e.g., [Mu-71]). Much of this work was motivated by interest in building com puters with threshold logic components. * As we shall see, TC 0 is intimately connected with the counting hierarchy.
Reference: [BS-92] <author> J. Bruck and C. Smolensky, </author> <title> Polynomial threshold functions, AC 0 functions, and spectral norms, </title> <journal> SIAM J. Comput. </journal> <volume> 21, </volume> <pages> 33-42. </pages>
Reference-contexts: Any complexity-theoretic work on threshold circuits thus is of some interest to the neural network community, and conversely, some theoretical work of interest to complexity theoreticians was motivated primarily by the study of neural networks <ref> [Go-89, Bru-90, BS-92] </ref>. * A large body of work on threshold logic and threshold circuits already exists (e.g., [Mu-71]). Much of this work was motivated by interest in building com puters with threshold logic components. * As we shall see, TC 0 is intimately connected with the counting hierarchy. <p> IP (log)? 5 * Can the circuit lower bounds of [HM-87] be extended to circuits of greater depth? * Is AC 0 TC 0 3 , or is the simulation of AC 0 presented in [Al-89] optimal? (A first step in this direction has been taken by Bruck and Smolensky <ref> [BS-92] </ref>. They show that AC 0 requires size at least 2 polylogn on depth 2 threshold circuits.) * And last but not least, we leave the big question: is TC 0 = NC 1 ?
Reference: [CKS-81] <author> A. Chandra, D. Kozen, and L. Stockmeyer, </author> <title> Alternation, </title> <editor> J. </editor> <booktitle> ACM 28, </booktitle> <pages> 114-133. </pages>
Reference-contexts: As we shall see, one of the surprising consequences of Toda's theorem is that the corresponding result is not true when one considers non-monotone circuits. 2.1. Relating Circuits to the Counting Hierarchy When the alternating Turing machine (ATM) was introduced in <ref> [CKS-81] </ref>, one of the motivations was to have a Turing machine model suitable for studying parallelism. Results relating circuit size and depth to alternating Turing machine space and time, respectively, can be found in [Ru-81].
Reference: [CSV-84] <author> A. Chandra, L. Stockmeyer, and U. Vishkin, </author> <title> Constant depth reducibility, </title> <journal> SIAM J. Comput. </journal> <volume> 13, </volume> <pages> 423-439. </pages>
Reference-contexts: The following points explain in part why TC 0 has been the focus of attention. * The majority gate is of essentially the same power as a gate for integer multiplication <ref> [CSV-84] </ref>. Thus TC 0 characterizes the power of certain arithmetic circuits. * TC 0 exactly characterizes the complexity of symmetric functions [FKPS-85]. * Division is in P-uniform TC 0 [Re-87,RT-90].
Reference: [CGH-90] <author> B. Chor, O. Goldreich, and J. H-astad, </author> <title> The random oracle hypothesis is false, </title> <type> Technical Report 631, </type> <institution> Department of Computer Science, Technion - Israel Institute of Technology. </institution>
Reference: [FKPS-85] <author> R. Fagin, M. Klawe, N. Pippenger, and L. Stockmeyer, </author> <title> Bounded-depth poly-size circuits for symmetric functions, </title> <booktitle> Theoretical Computer Science 36, </booktitle> <pages> 239-250. </pages>
Reference-contexts: Thus TC 0 characterizes the power of certain arithmetic circuits. * TC 0 exactly characterizes the complexity of symmetric functions <ref> [FKPS-85] </ref>. * Division is in P-uniform TC 0 [Re-87,RT-90]. This is one of the few cases in which uniformity considerations come into play when classifying the complexity of natural problems. * Many computer scientists have been studying "connectionist" models of the brain, also known as "neural nets".
Reference: [FS-88] <author> L. Fortnow and M. Sipser, </author> <title> Are there interactive protocols for co-NP lan-guages?, </title> <journal> Information Processing Letters 28, </journal> <pages> 249-251. </pages>
Reference: [FSS-84] <author> M. Furst, J. Saxe, M. Sipser, </author> <title> Parity, circuits, and the polynomial-time hierarchy, </title> <booktitle> Mathematical Systems Theory 17, </booktitle> <pages> 13-27. </pages>
Reference-contexts: In some sense, AC 0 and NC 1 represent the extremes of our knowledge about complexity classes. On the one hand, many combinatorial methods have been developed that enable us to show that many problems in NC 1 are not in AC 0 <ref> [FSS-84, Aj-83, Ya-85, H-a-86] </ref>. On the other hand, it is still an open problem whether or not NP = NC 1 . Thus we know a great deal about AC 0 , but really quite little about NC 1 . <p> That is, the characteristic sequence of an oracle to a polynomial-time Turing machine can be viewed as input to a log-time ATM.) Thus an oracle result about the counting hierarchy implies a real separation in LCH. There is a partial converse, as well. It was pointed out <ref> [FSS-84, Si-83] </ref> that if there is a language in k -logtime that requires more than size 2 log O (1) n to recognize on depth k 1 circuits of AND and OR gates, then there is an oracle relative to which k1 6= k .
Reference: [Gi-77] <author> J. Gill, </author> <title> Computational complexity of probabilistic Turing machines, </title> <journal> SIAM J. Comput. </journal> <volume> 6, </volume> <pages> 675-695. </pages>
Reference-contexts: define the counting hierarchy is to take the usual definition of the polynomial hierarchy: 1 Supported in part by National Science Foundation Grants CCR-8810467 and CCR-9204874 * p * p k for k 0. and replace "NP" with "PP". (Recall that PP is "probabilistic polynomial time" as defined by Gill <ref> [Gi-77] </ref> and Simon [Si-77]; L is in PP A if there is a polynomial-time nondeterministic oracle Turing machine M such that x 2 L iff more than half of the computation paths of M on input x with oracle A are accepting.) That gives us the definition: * C p * <p> Information about the Theorem: A catalog of facts about subclasses of the Counting Hierarchy. 1. 9 C [ 8 C [BP C CC. (This is a generalization of Gill's result <ref> [Gi-77] </ref> that NP and coNP are contained in PP, and also of the trivial inclusion BPP PP.) 3. 9 C = NP C 5. BP C BPP C 7.
Reference: [GP-86] <author> L. Goldschlager and I. Parberry, </author> <title> On the construction of parallel computers from various bases of Boolean functions, </title> <booktitle> Theoretical Computer Science 43, </booktitle> <pages> 43-58. </pages>
Reference: [Go-89] <author> C. Gotsman, </author> <title> On Boolean functions, polynomials, and algebraic threshold functions, </title> <type> Tech. Report TR-89-18, </type> <institution> Hebrew University. </institution>
Reference-contexts: Any complexity-theoretic work on threshold circuits thus is of some interest to the neural network community, and conversely, some theoretical work of interest to complexity theoreticians was motivated primarily by the study of neural networks <ref> [Go-89, Bru-90, BS-92] </ref>. * A large body of work on threshold logic and threshold circuits already exists (e.g., [Mu-71]). Much of this work was motivated by interest in building com puters with threshold logic components. * As we shall see, TC 0 is intimately connected with the counting hierarchy.
Reference: [Gr-90] <author> F. Green, </author> <title> An oracle separating P from P P P H , Proc. </title> <booktitle> 5th IEEE Structure in Complexity Theory Conference, </booktitle> <pages> pp. 295-298. </pages>
Reference-contexts: Circuit lower bounds (or equivalently, oracles separating levels of the counting hierarchy) have been quite difficult to construct. Toran reviews the separations that are currently known in [Tor-91]. (See also <ref> [Be-92, Gr-90] </ref>.) Seen in this setting, it is clear that Toda's result that PH P PP says something about the threshold circuit complexity of AC 0 .
Reference: [Gu-90] <author> S. Gupta, </author> <title> A note on the counting hierarchy, </title> <type> Technical Report OSU-CISRC-8/90-TR24, </type> <institution> Computer and Information Science Research Center, Ohio State University. </institution>
Reference-contexts: It was shown in [BRS-91] that PP is closed under union and intersection. This beautiful and surprising result has been generalized to the entire counting hierarchy <ref> [Gu-90] </ref>. 3. BP C 9 8 C " 8 9 C. [Sc-87] (This is a generalization of the result of [Si-83a, La-83], showing that BPP is in the polynomial hierarchy.) 4.
Reference: [HM-87] <author> A. Hajnal, W. Maass, P. Pudlak, M. Szegedy, G. Turan, </author> <title> Threshold circuits of bounded depth, </title> <booktitle> Proc. 28th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 99-110. </pages>
Reference-contexts: Now that we have established that there is sufficient interest for studying TC 0 , it is unfortunate that we must report that we know abysmally little about threshold circuits. With some effort, Hajnal et. al. have shown the following result: Theorem: <ref> [HM-87] </ref> TC 0 1 TC 0 3 . <p> the class of languages accepted by interactive proof systems with n O (1) (log n) rounds of 4 In the meantime, Yao has shown stronger inclusions of this sort [Ya-90]. communication.) Is there an interesting circuit complexity class corresponding to IP (log)? 5 * Can the circuit lower bounds of <ref> [HM-87] </ref> be extended to circuits of greater depth? * Is AC 0 TC 0 3 , or is the simulation of AC 0 presented in [Al-89] optimal? (A first step in this direction has been taken by Bruck and Smolensky [BS-92].
Reference: [HCR-90] <author> J. Hartmanis, R. Chang, D. Ranjan, and P. Rohatgi, </author> <title> On IP=PSPACE and theorems with narrow proofs, </title> <journal> EATCS Bulletin 41, </journal> <pages> pp. 166-174. </pages>
Reference: [HCRR-90] <author> J. Hartmanis, R. Chang, D. Ranjan, and P. Rohatgi, </author> <title> Structural complexity theory: recent surprises, </title> <booktitle> Proc. 2nd Scandinavian Workshop on Algorithm Theory, Lecture Notes in Computer Science 447, </booktitle> <pages> pp. 1-12. </pages>
Reference: [HZ-84] <author> P. Hinman and S. Zachos, </author> <title> Probabilistic machines, oracles, and quantifiers, </title> <booktitle> Proc. Oberwolfach Recursion-Theoretic Week, Lecture Notes in Mathematics 1141, </booktitle> <pages> pp. 159-192. </pages>
Reference-contexts: The operator is a way to generalize the complexity class Parity-P of [PZ-83,GP-86]. We should mention that Stathis Zachos has an alternative logic-based formulation for defining complexity classes of this sort. His approach has also been quite useful in proving results about these classes; see <ref> [HZ-84, Za-88, ZH-86, BHZ-87, ZF-87] </ref>. We would now like to briefly catalogue some of the known relationships among the complexity classes defined using these operators.
Reference: [H-a-86] <author> J. H-astad, </author> <title> Almost optimal lower bounds for small depth circuits, </title> <booktitle> Proc. 18th ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 6-20. </pages>
Reference-contexts: In some sense, AC 0 and NC 1 represent the extremes of our knowledge about complexity classes. On the one hand, many combinatorial methods have been developed that enable us to show that many problems in NC 1 are not in AC 0 <ref> [FSS-84, Aj-83, Ya-85, H-a-86] </ref>. On the other hand, it is still an open problem whether or not NP = NC 1 . Thus we know a great deal about AC 0 , but really quite little about NC 1 .
Reference: [IL-89] <author> N. Immerman and S. Landau, </author> <title> The complexity of iterated multiplication, </title> <booktitle> Proc. 4th IEEE Structure in Complexity Theory Conference, </booktitle> <pages> pp. 104-111. </pages>
Reference-contexts: However, it has also been conjectured that TC 0 = NC 1 <ref> [IL-89] </ref>, which would imply that the TC 0 hierarchy collapses. Yao has shown that when one considers monotone circuits, the corresponding TC 0 hierarchy is infinite.
Reference: [Ko-89] <author> K. Ko, </author> <title> Relativized polynomial-time hierarchies having exactly K levels, </title> <journal> SIAM J. Comput. </journal> <volume> 18, </volume> <pages> 392-408. </pages>
Reference-contexts: Circuit lower bounds of this sort were achieved first by Yao [Ya-85], and further developments may be found in <ref> [H-a-86 , Ko-89] </ref>. Along the same lines, if one can show that for every k there is a set in C k that requires more than size 2 log O (1) n to recognize on depth k 1 threshold circuits, then the counting hierarchy is infinite.
Reference: [KSTT-89] <author> J. Kobler, U. Schoning, S. Toda, and J. Toran, </author> <title> Turing machines with few accepting computations and low sets for PP, </title> <booktitle> Proc. 4th IEEE Structure in Complexity Theory Conference, </booktitle> <pages> pp. 208-215. </pages>
Reference-contexts: BP C BPP C 7. NP BP P. (This follows from the proof of [VV-86], showing that SAT is reducible via probabilistic reductions to the "unique satisfiability problem".) 8. C = C. 9. P P = P. [PZ-83] (Thus P is closed under p 10. PP BPP = PP. <ref> [KSTT-89] </ref> If the underlying class C is closed under "positive reducibility" (see [Sc-87]) then the usual techniques of "amplification" can be used to exponentially reduce the error probability for sets in the class BP C.
Reference: [La-83] <author> C. Lautemann, </author> <title> BPP and the polynomial hierarchy, </title> <journal> Information Processing Letters 17, </journal> <pages> 215-217. </pages>
Reference-contexts: It was shown in [BRS-91] that PP is closed under union and intersection. This beautiful and surprising result has been generalized to the entire counting hierarchy [Gu-90]. 3. BP C 9 8 C " 8 9 C. [Sc-87] (This is a generalization of the result of <ref> [Si-83a, La-83] </ref>, showing that BPP is in the polynomial hierarchy.) 4. BP C BP C. (This is the "operator swapping" lemma of [To-89].) Some of the inclusions and equalities listed above are quite easy to prove, and others are not at all obvious.
Reference: [LFKN-90] <author> C. Lund, L. Fortnow, H. Karloff, and N. Nisan, </author> <title> Algebraic methods for interactive proof systems, </title> <booktitle> Proc. 31st IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 2-10. </pages>
Reference: [Mu-71] <author> S. Muroga, </author> <title> Threshold Logic and Its Applications, 1971, </title> <editor> J. </editor> <publisher> Wiley and Sons. </publisher>
Reference-contexts: on threshold circuits thus is of some interest to the neural network community, and conversely, some theoretical work of interest to complexity theoreticians was motivated primarily by the study of neural networks [Go-89, Bru-90, BS-92]. * A large body of work on threshold logic and threshold circuits already exists (e.g., <ref> [Mu-71] </ref>). Much of this work was motivated by interest in building com puters with threshold logic components. * As we shall see, TC 0 is intimately connected with the counting hierarchy.
Reference: [PZ-83] <author> C. Papadimitriou and S. Zachos, </author> <title> Two remarks on the power of counting, </title> <booktitle> Proc. 6th GI Conference, Lecture Notes in Computer Science 145, </booktitle> <pages> pp. 269-275. </pages>
Reference-contexts: BP C BPP C 7. NP BP P. (This follows from the proof of [VV-86], showing that SAT is reducible via probabilistic reductions to the "unique satisfiability problem".) 8. C = C. 9. P P = P. <ref> [PZ-83] </ref> (Thus P is closed under p 10. PP BPP = PP. [KSTT-89] If the underlying class C is closed under "positive reducibility" (see [Sc-87]) then the usual techniques of "amplification" can be used to exponentially reduce the error probability for sets in the class BP C.
Reference: [Pa-90] <author> I. Parberry, </author> <title> A primer on the complexity theory of neural networks, </title> <booktitle> in </booktitle>
References-found: 39

