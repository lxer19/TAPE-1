URL: ftp://ftp.fas.sfu.ca/pub/cs/han/kdd/FDM96.ps
Refering-URL: http://fas.sfu.ca/cs/research/groups/DB/sections/publication/kdd/kdd.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: Email: dcheung@cs.hku.hk.  Email: han@cs.sfu.ca.  Email: cstyng@comp.polyu.edu.hk.  Email: adafu@cs.cuhk.hk.  
Title: A Fast Distributed Algorithm for Mining Association Rules  
Author: David W. Cheung Jiawei Han Vincent T. Ng yy Ada W. Fu zz Yongjian Fu 
Address: Hong Kong, Hong Kong.  Canada.  Hong Kong.  Hong Kong,Hong Kong.  
Affiliation: Department of Computer Science, The University of  School of Computing Science, Simon Fraser University,  yy Department of Computing, Hong Kong Polytechnic University,  zz Department of Computer Science and Engineering, The Chinese University of  
Abstract: With the existence of many large transaction databases, the huge amounts of data, the high scalability of distributed systems, and the easy partition and distribution of a centralized database, it is important to investigate efficient methods for distributed mining of association rules. This study discloses some interesting relationships between locally large and globally large itemsets and proposes an interesting distributed association rule mining algorithm, FDM (Fast Distributed Mining of association rules), which generates a small number of candidate sets and substantially reduces the number of messages to be passed at mining association rules. Our performance study shows that FDM has a superior performance over the direct application of a typical sequential algorithm. Further performance enhancement leads to a few variations of the algorithm. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Agrawal and J. C. Shafer. </author> <title> Parallel mining of association rules: Design, implementation, </title> <journal> and experience. </journal> <note> In IBM Research Report, </note> <year> 1996. </year>
Reference-contexts: Mining association rules may require iterative scanning of large transaction or relational databases which is quite costly in processing. Therefore, efficient mining of association rules in transaction and/or relational databases has been studied substantially <ref> [1, 2, 4, 8, 10, 11, 12, 14, 15] </ref>. fl The research of the first author was supported in part by RGC (the Hong Kong Research Grants Council) grant 338/065/0026. <p> Maintenance of discovered association rules by incremental updating has been studied in [4]. Although these studies are on sequential data mining techniques, algorithms for parallel mining of association rules have been proposed recently <ref> [11, 1] </ref>. We feel that the development of distributed algorithms for efficient mining of association rules has its unique importance, based on the following reasoning. (1) Databases or data warehouses [13] may store a huge amount of data. <p> As mentioned before, two algorithms for parallel mining of association rules have been proposed. The two proposed algorithms PDM and Count Distribution (CD) are designed for share-nothing parallel systems <ref> [11, 1] </ref>. However, they can also be adapted to distributed environment. We have proposed an efficient distributed data mining algorithm FDM (Fast Distributed Mining of association rules), which has the following distinct feature in comparison with these two proposed parallel mining algorithms. 1. <p> The essential task of a distributed association rule mining algorithm is to find the globally large itemsets L. For comparison, we outline the Count Distribution (CD) algorithm as the follows <ref> [1] </ref>. The algorithm is an adaptation of the Apriori algorithm in the distributed case. At each iteration, CD generates the candidate sets at every site by applying the Apriori gen function on the set of large itemsets found at the previous iteration.
Reference: [2] <author> R. Agrawal and R. Srikant. </author> <title> Fast algorithms for mining association rules. </title> <booktitle> In Proc. 1994 Int. Conf. Very Large Data Bases, </booktitle> <pages> pages 487-499, </pages> <address> Santiago, Chile, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: Mining association rules may require iterative scanning of large transaction or relational databases which is quite costly in processing. Therefore, efficient mining of association rules in transaction and/or relational databases has been studied substantially <ref> [1, 2, 4, 8, 10, 11, 12, 14, 15] </ref>. fl The research of the first author was supported in part by RGC (the Hong Kong Research Grants Council) grant 338/065/0026. <p> Previous studies examined efficient mining of association rules from many different angles. An influential association rule mining algorithm, Apriori <ref> [2] </ref>, has been developed for rule mining in large transaction databases. A DHP algorithm [10] is an extension of Apriori using a hashing technique. <p> Based on these assumptions, we examine distributed mining of association rules. It has been well known that the major cost of mining association rules is the computation of the set of large itemsets (i.e., frequently occurring sets of items, see Section 2.1) in the database <ref> [2] </ref>. Distributed computing of large itemsets encounters some new problems. One may compute locally large itemsets easily, but a locally large itemset may not be globally large. <p> An itemset X is large (or more precisely, frequently occurring) if its support is no less than the minimum support threshold. An itemset of size k is called a k-itemset. It has been shown that the problem of mining association rules can be reduced to two subproblems <ref> [2] </ref>: (1) find all large itemsets for a given minimum support threshold, and (2) generate the association rules from the large itemsets found. Since (1) dominates the overall cost of mining association rules, the research has been focused on how to develop efficient methods to solve the first subproblem [2]. <p> subproblems <ref> [2] </ref>: (1) find all large itemsets for a given minimum support threshold, and (2) generate the association rules from the large itemsets found. Since (1) dominates the overall cost of mining association rules, the research has been focused on how to develop efficient methods to solve the first subproblem [2]. An interesting algorithm, Apriori [2], has been proposed for computing large itemsets at mining association rules in a transaction database. <p> Since (1) dominates the overall cost of mining association rules, the research has been focused on how to develop efficient methods to solve the first subproblem <ref> [2] </ref>. An interesting algorithm, Apriori [2], has been proposed for computing large itemsets at mining association rules in a transaction database. There have been many studies on mining association rules using sequential algorithms in centralized databases (e.g., [10, 14, 8, 12, 4, 15]), which can be viewed as vari-ations or extensions to Apriori. <p> Therefore, the local support counts of all these candidate sets can be found in one scan and stored in a data structure like the hash-tree used in Apriori <ref> [2] </ref>. <p> The test bed that we use has six workstations. Each one of them has its own local disk, and its partition is loaded on its local disk before the experiment starts. The databases used in our experiment are synthetic data generated using the same techniques introduced in <ref> [2, 10] </ref>. The parameters used are similar to those in [10]. Table 5 is a list of the parameters and their values used in our synthetic databases. Readers not familiar with these parameters can refer to [2, 10]. <p> used in our experiment are synthetic data generated using the same techniques introduced in <ref> [2, 10] </ref>. The parameters used are similar to those in [10]. Table 5 is a list of the parameters and their values used in our synthetic databases. Readers not familiar with these parameters can refer to [2, 10].
Reference: [3] <author> R. Agrawal and R. Srikant. </author> <title> Mining sequential patterns. </title> <booktitle> In Proc. 1995 Int. Conf. Data Engineering, </booktitle> <pages> pages 3-14, </pages> <address> Taipei, Taiwan, </address> <month> March </month> <year> 1995. </year>
Reference-contexts: An influential association rule mining algorithm, Apriori [2], has been developed for rule mining in large transaction databases. A DHP algorithm [10] is an extension of Apriori using a hashing technique. The scope of the study has also been extended to efficient mining of sequential patterns <ref> [3] </ref>, generalized association rules [14], multiple-level association rules [8], quantitative association rules [15], etc. Maintenance of discovered association rules by incremental updating has been studied in [4]. Although these studies are on sequential data mining techniques, algorithms for parallel mining of association rules have been proposed recently [11, 1].
Reference: [4] <author> D.W. Cheung, J. Han, V. Ng, and C.Y. Wong. </author> <title> Maintenance of discovered association rules in large databases: An incremental updating technique. </title> <booktitle> In Proc. 1996 Int'l Conf. on Data Engineering, </booktitle> <address> New Orleans, Louisiana, </address> <month> Feb. </month> <year> 1996. </year>
Reference-contexts: Mining association rules may require iterative scanning of large transaction or relational databases which is quite costly in processing. Therefore, efficient mining of association rules in transaction and/or relational databases has been studied substantially <ref> [1, 2, 4, 8, 10, 11, 12, 14, 15] </ref>. fl The research of the first author was supported in part by RGC (the Hong Kong Research Grants Council) grant 338/065/0026. <p> The scope of the study has also been extended to efficient mining of sequential patterns [3], generalized association rules [14], multiple-level association rules [8], quantitative association rules [15], etc. Maintenance of discovered association rules by incremental updating has been studied in <ref> [4] </ref>. Although these studies are on sequential data mining techniques, algorithms for parallel mining of association rules have been proposed recently [11, 1]. <p> An interesting algorithm, Apriori [2], has been proposed for computing large itemsets at mining association rules in a transaction database. There have been many studies on mining association rules using sequential algorithms in centralized databases (e.g., <ref> [10, 14, 8, 12, 4, 15] </ref>), which can be viewed as vari-ations or extensions to Apriori.
Reference: [5] <author> U. M. Fayyad, G. Piatetsky-Shapiro, P. Smyth, and R. Uthurusamy. </author> <title> Advances in Knowledge Discovery and Data Mining. </title> <publisher> AAAI/MIT Press, </publisher> <year> 1996. </year>
Reference-contexts: Since finding interesting association rules in databases may disclose some useful patterns for decision support, selective marketing, financial forecast, medical diagnosis, and many other applications, it has attracted a lot of attention in recent data mining research <ref> [5] </ref>. Mining association rules may require iterative scanning of large transaction or relational databases which is quite costly in processing.
Reference: [6] <author> A. Geist, A. Beguelin, J. Dongarra, W. Jiang, R. Manchek, and V. Sunderam. </author> <title> PVM: Parallel Virtual Machine, A Users' Guide and Tutorial for Networked Parallel Computing. </title> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference-contexts: We have chosen to implement the representative version of FDM, FDM-LP, and compare it against CD. Both algorithms are implemented on a distributed system by using PVM (Parallel Virtual Machine) <ref> [6] </ref>. A series of three to six RS/6000 workstations, running the AIX system, are connected by a 10Mb LAN to perform the experiment. The databases in the experiment are composed of synthetic data.
Reference: [7] <author> J. Han, Y. Cai, and N. Cercone. </author> <title> Data-driven discovery of quantitative rules in relational databases. </title> <journal> IEEE Trans. Knowledge and Data Engineering, </journal> <volume> 5 </volume> <pages> 29-40, </pages> <year> 1993. </year>
Reference-contexts: Extension of our method to the mining of these kinds of rules in a distributed or parallel system are interesting issues for future research. Also, parallel and distributed data mining of other kinds of rules, such as characteristic rules <ref> [7] </ref>, classification rules, clustering [9], etc. is an important direction for future studies. For our performance studies, an implementation of the different versions of FDM on an IBM SP2 system with 32 nodes has been carried out and the result is very promising.
Reference: [8] <author> J. Han and Y. Fu. </author> <title> Discovery of multiple-level association rules from large databases. </title> <booktitle> In Proc. 1995 Int. Conf. Very Large Data Bases, </booktitle> <pages> pages 420-431, </pages> <address> Zurich, Switzerland, </address> <month> Sept. </month> <year> 1995. </year>
Reference-contexts: Mining association rules may require iterative scanning of large transaction or relational databases which is quite costly in processing. Therefore, efficient mining of association rules in transaction and/or relational databases has been studied substantially <ref> [1, 2, 4, 8, 10, 11, 12, 14, 15] </ref>. fl The research of the first author was supported in part by RGC (the Hong Kong Research Grants Council) grant 338/065/0026. <p> A DHP algorithm [10] is an extension of Apriori using a hashing technique. The scope of the study has also been extended to efficient mining of sequential patterns [3], generalized association rules [14], multiple-level association rules <ref> [8] </ref>, quantitative association rules [15], etc. Maintenance of discovered association rules by incremental updating has been studied in [4]. Although these studies are on sequential data mining techniques, algorithms for parallel mining of association rules have been proposed recently [11, 1]. <p> An interesting algorithm, Apriori [2], has been proposed for computing large itemsets at mining association rules in a transaction database. There have been many studies on mining association rules using sequential algorithms in centralized databases (e.g., <ref> [10, 14, 8, 12, 4, 15] </ref>), which can be viewed as vari-ations or extensions to Apriori. <p> Further improvement of the performance of the FDM algorithm using the skewness of data distribution and the relaxation of support thresholds is also discussed. Recently, there have been interesting studies on the mining of generalized association rules [14], multiple-level association rules <ref> [8] </ref>, quantitative association rules [15], etc. Extension of our method to the mining of these kinds of rules in a distributed or parallel system are interesting issues for future research.
Reference: [9] <author> R. Ng and J. Han. </author> <title> Efficient and effective clustering method for spatial data mining. </title> <booktitle> In Proc. 1994 Int. Conf. Very Large Data Bases, </booktitle> <pages> pages 144-155, </pages> <address> Santiago, Chile, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: Extension of our method to the mining of these kinds of rules in a distributed or parallel system are interesting issues for future research. Also, parallel and distributed data mining of other kinds of rules, such as characteristic rules [7], classification rules, clustering <ref> [9] </ref>, etc. is an important direction for future studies. For our performance studies, an implementation of the different versions of FDM on an IBM SP2 system with 32 nodes has been carried out and the result is very promising.
Reference: [10] <author> J.S. Park, M.S. Chen, and P.S. Yu. </author> <title> An effective hash-based algorithm for mining association rules. </title> <booktitle> In Proc. 1995 ACM-SIGMOD Int. Conf. Management of Data, </booktitle> <pages> pages 175-186, </pages> <address> San Jose, CA, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: Mining association rules may require iterative scanning of large transaction or relational databases which is quite costly in processing. Therefore, efficient mining of association rules in transaction and/or relational databases has been studied substantially <ref> [1, 2, 4, 8, 10, 11, 12, 14, 15] </ref>. fl The research of the first author was supported in part by RGC (the Hong Kong Research Grants Council) grant 338/065/0026. <p> Previous studies examined efficient mining of association rules from many different angles. An influential association rule mining algorithm, Apriori [2], has been developed for rule mining in large transaction databases. A DHP algorithm <ref> [10] </ref> is an extension of Apriori using a hashing technique. The scope of the study has also been extended to efficient mining of sequential patterns [3], generalized association rules [14], multiple-level association rules [8], quantitative association rules [15], etc. <p> An interesting algorithm, Apriori [2], has been proposed for computing large itemsets at mining association rules in a transaction database. There have been many studies on mining association rules using sequential algorithms in centralized databases (e.g., <ref> [10, 14, 8, 12, 4, 15] </ref>), which can be viewed as vari-ations or extensions to Apriori. <p> There have been many studies on mining association rules using sequential algorithms in centralized databases (e.g., [10, 14, 8, 12, 4, 15]), which can be viewed as vari-ations or extensions to Apriori. For example, as an extension to Apriori, the DHP algorithm <ref> [10] </ref> uses a direct hashing technique to eliminate some size-2 candidate sets in the Apriori algorithm. 2.2 Distributed Algorithm for Mining As sociation Rules We examine the mining of association rules in a distributed environment. Let DB be a database with D transactions. <p> The test bed that we use has six workstations. Each one of them has its own local disk, and its partition is loaded on its local disk before the experiment starts. The databases used in our experiment are synthetic data generated using the same techniques introduced in <ref> [2, 10] </ref>. The parameters used are similar to those in [10]. Table 5 is a list of the parameters and their values used in our synthetic databases. Readers not familiar with these parameters can refer to [2, 10]. <p> Each one of them has its own local disk, and its partition is loaded on its local disk before the experiment starts. The databases used in our experiment are synthetic data generated using the same techniques introduced in [2, 10]. The parameters used are similar to those in <ref> [10] </ref>. Table 5 is a list of the parameters and their values used in our synthetic databases. Readers not familiar with these parameters can refer to [2, 10]. <p> used in our experiment are synthetic data generated using the same techniques introduced in <ref> [2, 10] </ref>. The parameters used are similar to those in [10]. Table 5 is a list of the parameters and their values used in our synthetic databases. Readers not familiar with these parameters can refer to [2, 10].
Reference: [11] <author> J.S. Park, M.S. Chen, and P.S. Yu. </author> <title> Efficient parallel mining for association rules. </title> <booktitle> In Proc. 4th Int. Conf. on Information and Knowledge Management, </booktitle> <pages> pages 31-36, </pages> <address> Baltimore, Maryland, </address> <month> Nov. </month> <year> 1995. </year>
Reference-contexts: Mining association rules may require iterative scanning of large transaction or relational databases which is quite costly in processing. Therefore, efficient mining of association rules in transaction and/or relational databases has been studied substantially <ref> [1, 2, 4, 8, 10, 11, 12, 14, 15] </ref>. fl The research of the first author was supported in part by RGC (the Hong Kong Research Grants Council) grant 338/065/0026. <p> Maintenance of discovered association rules by incremental updating has been studied in [4]. Although these studies are on sequential data mining techniques, algorithms for parallel mining of association rules have been proposed recently <ref> [11, 1] </ref>. We feel that the development of distributed algorithms for efficient mining of association rules has its unique importance, based on the following reasoning. (1) Databases or data warehouses [13] may store a huge amount of data. <p> As mentioned before, two algorithms for parallel mining of association rules have been proposed. The two proposed algorithms PDM and Count Distribution (CD) are designed for share-nothing parallel systems <ref> [11, 1] </ref>. However, they can also be adapted to distributed environment. We have proposed an efficient distributed data mining algorithm FDM (Fast Distributed Mining of association rules), which has the following distinct feature in comparison with these two proposed parallel mining algorithms. 1. <p> Special partitioning technique can be used to increase the data skewness to optimize the performance of FDM. Some further study is required to explore this issue. The last issue that we want to discuss is the possible usage of the relaxation factor proposed in <ref> [11] </ref>. In FDM, if a site sends not only those candidate sets which are locally large but also those that are almost locally large to the polling sites, the polling sites may have local support counts from more sites to perform the global pruning of candidate sets.
Reference: [12] <author> A. Savasere, E. Omiecinski, and S. Navathe. </author> <title> An efficient algorithm for mining association rules in large databases. </title> <booktitle> In Proc. 1995 Int. Conf. Very Large Data Bases, </booktitle> <pages> pages 432-443, </pages> <address> Zurich, Switzerland, </address> <month> Sept. </month> <year> 1995. </year>
Reference-contexts: Mining association rules may require iterative scanning of large transaction or relational databases which is quite costly in processing. Therefore, efficient mining of association rules in transaction and/or relational databases has been studied substantially <ref> [1, 2, 4, 8, 10, 11, 12, 14, 15] </ref>. fl The research of the first author was supported in part by RGC (the Hong Kong Research Grants Council) grant 338/065/0026. <p> An interesting algorithm, Apriori [2], has been proposed for computing large itemsets at mining association rules in a transaction database. There have been many studies on mining association rules using sequential algorithms in centralized databases (e.g., <ref> [10, 14, 8, 12, 4, 15] </ref>), which can be viewed as vari-ations or extensions to Apriori.
Reference: [13] <author> A. Silberschatz, M. Stonebraker, and J. D. Ull-man. </author> <title> Database research: Achievements and opportunities into the 21st century. </title> <booktitle> In Report of an NSF Workshop on the Future of Database Systems Research, </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: We feel that the development of distributed algorithms for efficient mining of association rules has its unique importance, based on the following reasoning. (1) Databases or data warehouses <ref> [13] </ref> may store a huge amount of data. Mining association rules in such databases may require substantial processing power, and distributed system is a possible solution. (2) Many large databases are distributed in nature.
Reference: [14] <author> R. Srikant and R. Agrawal. </author> <title> Mining generalized association rules. </title> <booktitle> In Proc. 1995 Int. Conf. Very Large Data Bases, </booktitle> <pages> pages 407-419, </pages> <address> Zurich, Switzerland, </address> <month> Sept. </month> <year> 1995. </year>
Reference-contexts: Mining association rules may require iterative scanning of large transaction or relational databases which is quite costly in processing. Therefore, efficient mining of association rules in transaction and/or relational databases has been studied substantially <ref> [1, 2, 4, 8, 10, 11, 12, 14, 15] </ref>. fl The research of the first author was supported in part by RGC (the Hong Kong Research Grants Council) grant 338/065/0026. <p> A DHP algorithm [10] is an extension of Apriori using a hashing technique. The scope of the study has also been extended to efficient mining of sequential patterns [3], generalized association rules <ref> [14] </ref>, multiple-level association rules [8], quantitative association rules [15], etc. Maintenance of discovered association rules by incremental updating has been studied in [4]. Although these studies are on sequential data mining techniques, algorithms for parallel mining of association rules have been proposed recently [11, 1]. <p> An interesting algorithm, Apriori [2], has been proposed for computing large itemsets at mining association rules in a transaction database. There have been many studies on mining association rules using sequential algorithms in centralized databases (e.g., <ref> [10, 14, 8, 12, 4, 15] </ref>), which can be viewed as vari-ations or extensions to Apriori. <p> Further improvement of the performance of the FDM algorithm using the skewness of data distribution and the relaxation of support thresholds is also discussed. Recently, there have been interesting studies on the mining of generalized association rules <ref> [14] </ref>, multiple-level association rules [8], quantitative association rules [15], etc. Extension of our method to the mining of these kinds of rules in a distributed or parallel system are interesting issues for future research.
Reference: [15] <author> R. Srikant and R. Agrawal. </author> <title> Mining quantitative association rules in large relational tables. </title> <booktitle> In Proc. 1996 ACM-SIGMOD Int. Conf. Management of Data, </booktitle> <address> Montreal, Canada, </address> <month> June </month> <year> 1996. </year>
Reference-contexts: Mining association rules may require iterative scanning of large transaction or relational databases which is quite costly in processing. Therefore, efficient mining of association rules in transaction and/or relational databases has been studied substantially <ref> [1, 2, 4, 8, 10, 11, 12, 14, 15] </ref>. fl The research of the first author was supported in part by RGC (the Hong Kong Research Grants Council) grant 338/065/0026. <p> A DHP algorithm [10] is an extension of Apriori using a hashing technique. The scope of the study has also been extended to efficient mining of sequential patterns [3], generalized association rules [14], multiple-level association rules [8], quantitative association rules <ref> [15] </ref>, etc. Maintenance of discovered association rules by incremental updating has been studied in [4]. Although these studies are on sequential data mining techniques, algorithms for parallel mining of association rules have been proposed recently [11, 1]. <p> An interesting algorithm, Apriori [2], has been proposed for computing large itemsets at mining association rules in a transaction database. There have been many studies on mining association rules using sequential algorithms in centralized databases (e.g., <ref> [10, 14, 8, 12, 4, 15] </ref>), which can be viewed as vari-ations or extensions to Apriori. <p> Further improvement of the performance of the FDM algorithm using the skewness of data distribution and the relaxation of support thresholds is also discussed. Recently, there have been interesting studies on the mining of generalized association rules [14], multiple-level association rules [8], quantitative association rules <ref> [15] </ref>, etc. Extension of our method to the mining of these kinds of rules in a distributed or parallel system are interesting issues for future research.
References-found: 15

