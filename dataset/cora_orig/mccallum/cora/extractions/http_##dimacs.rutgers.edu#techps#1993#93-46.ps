URL: http://dimacs.rutgers.edu/techps/1993/93-46.ps
Refering-URL: http://dimacs.rutgers.edu/TechnicalReports/1993.html
Root-URL: http://www.cs.rutgers.edu
Title: Fast Comparison of Evolutionary Trees  
Author: by Martin Farach ; Mikkel Thorup ; 
Note: 2 Supported by DIMACS (Center for Discrete Mathematics and Theoretical Computer Science), a National Science Foundation Science and Technology Center under NSF contract STC-8809648. 3 Dimacs Visitor 4 Supported by the Danish Technical Research Council; Supported in part by the Danish Research Academy and by DIMACS under NSF contract STC-8809648. DIMACS is a cooperative project of Rutgers University, Princeton University, AT&T Bell Laboratories and Bellcore. DIMACS is an NSF Science and Technology Center, funded under contract STC-91-19999; and also receives support from the New Jersey Commission on Science and Technology.  
Address: New Brunswick, New Jersey 08903  Oxford, England  
Affiliation: Dept. of Computer Science Rutgers University  Dept. of Computing Oxford University  
Abstract: DIMACS Technical Report 93-46 August 1993 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Agarwala and D. Fernandez-Baca. </author> <title> A polynomial-time algorithm for the phylogeny problem when the number of character states is fixed. </title> <type> Technical Report 93-04, </type> <institution> DIMACS, </institution> <year> 1993. </year>
Reference: [2] <author> H. Bodlaender, M. Fellows, and T. Warnow. </author> <title> Two strikes against perfect phylogeny. </title> <booktitle> Proc. of 19th International Colloquium on Automata Languages and Programming, </booktitle> <year> 1992. </year>
Reference-contexts: The standard models of computation for constructing these trees use either characters or distance matrices. Both approaches have their problems, not the least of which is that most tree construction criteria are NP-hard to optimize <ref> [2, 3] </ref>. As is typically the case when there is no really good solution to a problem, the number of solutions actually in use is quite large. Within the biology literature, various heuristics have been proposed (see e.g. [5, 6, 8, 15, 16]).
Reference: [3] <author> W.H.E. Day. </author> <title> Computational complexity of inferring phylogenies from dissimilarity matrices. </title> <journal> Bulletin of Mathematical Biology, </journal> <volume> 49(4) </volume> <pages> 461-467, </pages> <year> 1987. </year>
Reference-contexts: The standard models of computation for constructing these trees use either characters or distance matrices. Both approaches have their problems, not the least of which is that most tree construction criteria are NP-hard to optimize <ref> [2, 3] </ref>. As is typically the case when there is no really good solution to a problem, the number of solutions actually in use is quite large. Within the biology literature, various heuristics have been proposed (see e.g. [5, 6, 8, 15, 16]).
Reference: [4] <author> M. Farach, S. Kannan, and T. Warnow. </author> <title> A robust model for finding optimal evolutionary trees. </title> <journal> Algorithmica, </journal> <note> 1993. In press. See also STOC '93. </note>
Reference: [5] <author> J.S. Farris. </author> <title> Estimating phylogenetic trees from distance matrices. </title> <journal> Am. Nat., </journal> <volume> 106 </volume> <pages> 645-668, </pages> <year> 1972. </year>
Reference-contexts: As is typically the case when there is no really good solution to a problem, the number of solutions actually in use is quite large. Within the biology literature, various heuristics have been proposed (see e.g. <ref> [5, 6, 8, 15, 16] </ref>). More recently, a variety of solutions have been examined from an algorithmic point of view ([1, 4, 11, 12]). Not surprisingly, these various methods don't always give the same answer on the same inputs.
Reference: [6] <author> J. Felsenstein. </author> <title> Numerical methods for inferring evolutionary trees. </title> <journal> The Quarterly Review of Biology, </journal> <volume> 57(4), </volume> <year> 1982. </year> <month> - 11 </month> - 
Reference-contexts: As is typically the case when there is no really good solution to a problem, the number of solutions actually in use is quite large. Within the biology literature, various heuristics have been proposed (see e.g. <ref> [5, 6, 8, 15, 16] </ref>). More recently, a variety of solutions have been examined from an algorithmic point of view ([1, 4, 11, 12]). Not surprisingly, these various methods don't always give the same answer on the same inputs.
Reference: [7] <author> C. R. Finden and A. D. Gordon. </author> <title> Obtaining common pruned trees. </title> <journal> Journal of Classification, </journal> <volume> 2 </volume> <pages> 255-276, </pages> <year> 1985. </year>
Reference-contexts: Mostly, this consensus computation is done by hand in some ad hoc manner. However, as the number of species under consideration in these types of studies grows, this labor-intensive method is becoming prohibitively time-consuming. Finden and Gordon <ref> [7] </ref> formalized the consensus problem as follows. Problem: The Unrooted Maximum Agreement Subtree Problem (UMAST) Input: A pair (T 0 ; T 1 ) of unrooted evolutionary trees with labels from a common set A.
Reference: [8] <author> W.M. Fitch and E. Margoliash. </author> <title> The construction of phylogenetic trees. </title> <journal> Science, </journal> <volume> 155 </volume> <pages> 29-94, </pages> <year> 1976. </year>
Reference-contexts: As is typically the case when there is no really good solution to a problem, the number of solutions actually in use is quite large. Within the biology literature, various heuristics have been proposed (see e.g. <ref> [5, 6, 8, 15, 16] </ref>). More recently, a variety of solutions have been examined from an algorithmic point of view ([1, 4, 11, 12]). Not surprisingly, these various methods don't always give the same answer on the same inputs.
Reference: [9] <author> H. Gabow and R. Tarjan. </author> <title> Faster scaling algorithms for network problems. </title> <journal> SIAM J. Comput., </journal> <volume> 18(5) </volume> <pages> 1013-1036, </pages> <year> 1989. </year>
Reference-contexts: Therefore, there are only O (n) critical matching edges. If there are O (n) edges, then there are O (n) nodes, and since the weight of an edge is an rmast value, no edge can have weight more than n. Using the weighted bipartite matching algorithm of <ref> [9] </ref> gives the desired bounds. We bound the work for each core matching graph separately as follows. Lemma 3.2 Let G c 0 c 1 be a core matching graph with k side-side matching edges.
Reference: [10] <author> D. Harel and R.E. Tarjan. </author> <title> Fast algorithms for finding nearest common ancestor. </title> <journal> Computer and System Science, </journal> <volume> 13 </volume> <pages> 338-355, </pages> <year> 1984. </year>
Reference-contexts: We can radix sort the leaves lexicographically in O (n) time. For each internal node we can, in O (n) time, assign to each node its depth and preprocess the tree so least lca can be answered in constant time <ref> [10] </ref>. Now, for each partition B = B i , we can compute an in-order traversal of T jB as follows. Let l 1 ; : : : ; l k be the in-order list of the leaves of T jB.
Reference: [11] <author> S. Kannan, E. Lawler, and T. Warnow. </author> <title> Determining the evolutionary tree. </title> <booktitle> Proc. of the First Ann. ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <month> Jan. </month> <year> 1990. </year>
Reference: [12] <author> S. Kannan and T. Warnow. </author> <title> Using experiments to infer evolutionary trees. </title> <type> Manuscript, </type> <year> 1992. </year>
Reference: [13] <author> Donald E. Knuth. </author> <title> The Art of Computer Programming, volume 3: Sorting and Searching. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, </address> <year> 1973. </year>
Reference-contexts: From the l 0 i ordering, together with the level information for internal nodes, we can construct T jB in O (k) time <ref> [13] </ref>, thus giving O (n) time to build all trees. Now assume that T is unrooted. Pick an arbitrary internal node v of T and compute the partition B 1 ; : : : ; B x on T v .
Reference: [14] <author> E. Kubicka, G. Kubicki, and F.R. McMorris. </author> <title> An algorithm to find agreement subtrees. </title> <note> To apprear in Journal of Classification, </note> <year> 1992. </year>
Reference-contexts: Finden and Gordon gave a heuristic method for computing the maximum agreement subtree of two rooted binary trees. Their algorithm, which has a O (n 5 ) running time, does not, however, guarantee an optimal solution. In <ref> [14] </ref>, Kubicka et al. presented a O (n ( 1 2 +*) log 2 n ) time algorithm for the binary UMAST problem. Steel and Warnow [17] also considered the UMAST problem, giving the first polynomial time algorithm for the general UMAST problem, i.e. the case with no degree bound.
Reference: [15] <author> N. Saitou and M. Nei. </author> <title> The neighbor-joinging method: a new method for reconstructing phylogentic trees. Mol. </title> <journal> Biol. Evol., </journal> <volume> 4 </volume> <pages> 406-424, </pages> <year> 1987. </year>
Reference-contexts: As is typically the case when there is no really good solution to a problem, the number of solutions actually in use is quite large. Within the biology literature, various heuristics have been proposed (see e.g. <ref> [5, 6, 8, 15, 16] </ref>). More recently, a variety of solutions have been examined from an algorithmic point of view ([1, 4, 11, 12]). Not surprisingly, these various methods don't always give the same answer on the same inputs.
Reference: [16] <author> R. Sokal and P. Sneath. Numberical Toxonomy. Freeman, </author> <year> 1963. </year>
Reference-contexts: As is typically the case when there is no really good solution to a problem, the number of solutions actually in use is quite large. Within the biology literature, various heuristics have been proposed (see e.g. <ref> [5, 6, 8, 15, 16] </ref>). More recently, a variety of solutions have been examined from an algorithmic point of view ([1, 4, 11, 12]). Not surprisingly, these various methods don't always give the same answer on the same inputs.
Reference: [17] <author> M. Steel and T. Warnow. </author> <title> Kaikoura tree theorems: Computing the maximum agreement subtree. </title> <note> Submitted for publication. </note>
Reference-contexts: Their algorithm, which has a O (n 5 ) running time, does not, however, guarantee an optimal solution. In [14], Kubicka et al. presented a O (n ( 1 2 +*) log 2 n ) time algorithm for the binary UMAST problem. Steel and Warnow <ref> [17] </ref> also considered the UMAST problem, giving the first polynomial time algorithm for the general UMAST problem, i.e. the case with no degree bound. <p> Then MWM (G) is the value of a maximum weighted matching on G. The following lemma gives a reduction from UMAST to RMAST. Steel and Warnow <ref> [17] </ref> based their algorithm on a similar but different reduction. <p> The following lemma appears in Steel and Warnow <ref> [17] </ref> and is the basis for their dynamic programming approach to this problem. Lemma 4.1 ([17]) 8v 0 2 V (R 0 ); v 1 2 V (R 1 ), rmast (R v 0 0 ; R v 1 ( 0 ) " A (R v 1 1 )j if v
References-found: 17

