URL: ftp://ftp.cs.rochester.edu/pub/papers/theory/95.tr585.Easy_sets_and_hard_certificate_schemes.ps.gz
Refering-URL: http://www.cs.rochester.edu/trs/theory-trs.html
Root-URL: 
Email: lane@cs.rochester.edu  rothe@mipool.uni-jena.de  wechsung@minet.uni-jena.de  
Title: Easy Sets and Hard Certificate Schemes  
Author: Lane A. Hemaspaandra J org Rothe Gerd Wechsung 
Date: May 18, 1995  
Address: Rochester, NY 14627  07743 Jena, Germany  07743 Jena, Germany  
Affiliation: Department of Computer Science University of Rochester  Institut f ur Informatik Friedrich-Schiller-Universit at Jena  Institut f ur Informatik Friedrich-Schiller-Universit at Jena  
Abstract: 1 Appears simultaneously as a Friedrich-Schiller-Universit at Jena technical report. 2 Supported in part by grants NSF-CCR-8957604, NSF-INT-9116781/JSPS-ENGR-207, and NSF-CCR 9322513. Work done in part while visiting the Friedrich-Schiller-Universit at Jena. 
Abstract-found: 1
Intro-found: 1
Reference: [Adl79] <author> L. Adleman. </author> <title> Time, space, and randomness. </title> <type> Technical Report MIT/LCS/TM-131, </type> <institution> MIT, </institution> <address> Cambridge, MA, </address> <month> April </month> <year> 1979. </year>
Reference-contexts: Roughly speaking, the Kolmogorov complexity of a finite binary string x is the length of a shortest program that generates x. Intuitively, if a string x can be generated by a program shorter than x itself, then x can be compressed. The notion of generalized Kolmogorov complexity <ref> [Adl79, Har83, Sip83] </ref> is a version of Kolmogorov complexity that provides information about not only whether and how far a string can be compressed, but also how fast it can be restored. We now give the definition of (unconditional and conditional) generalized Kolmogorov complexity. <p> We now give the definition of (unconditional and conditional) generalized Kolmogorov complexity. Definition 2.3 ([Har83], see also <ref> [Adl79, Sip83] </ref>) For any Turing machine T and functions s and t mapping IN to IN, define K T [s (n); t (n)] = fx j (9y) [ jxj = n and jyj s (n) and T (y) outputs x in at most t (n) steps ]g: It was shown in <p> Of particular interest in this paper are certificates (more precisely, strings encoding accepting paths of NPMs) that have small generalized Kolmogorov complexity. Levin (see [Tra84]) and Adleman <ref> [Adl79] </ref> independently discovered the connection between small generalized Kolmogorov complexity and certificates. This connection has also been used in other contexts ([HW91], see also [HR90, GT91] and the comments in [HR90] on [CH89]).
Reference: [AR88] <author> E. Allender and R. Rubinstein. </author> <title> P-printable sets. </title> <journal> SIAM Journal on Computing, </journal> <volume> 17 </volume> <pages> 1193-1202, </pages> <year> 1988. </year>
Reference: [BB86] <author> J. Balc azar and R. </author> <title> Book. Sets with small generalized Kolmogorov complexity. </title> <journal> Acta Informatica, </journal> <volume> 23(6) </volume> <pages> 679-688, </pages> <year> 1986. </year>
Reference-contexts: The P-printable sets are closely related to sets of strings having small unconditional generalized Kolmogorov complexity: a set S is P-printable if and only if S 2 P and S K [k log n; n k ] for some constant k ([AR88], see also <ref> [BB86, HH88, Rub86] </ref>). Below we note a similar connection between the sets in EASY 8 8 and EASY 8 io and the sets of certificates having small conditional generalized Kolmogorov complexity, thus showing the robustness of these notions.
Reference: [BD76] <author> A. Borodin and A. Demers. </author> <title> Some comments on functional self-reducibility and the NP hierarchy. </title> <type> Technical Report TR 76-284, </type> <institution> Cornell Department of Computer Science, </institution> <address> Ithaca, NY, </address> <month> July </month> <year> 1976. </year>
Reference-contexts: 1 Introduction Borodin and Demers <ref> [BD76] </ref> proved the following result. Theorem 1.1 [BD76] If NP " coNP 6= P, then there exists a set L such that 1. L 2 P, 3. <p> 1 Introduction Borodin and Demers <ref> [BD76] </ref> proved the following result. Theorem 1.1 [BD76] If NP " coNP 6= P, then there exists a set L such that 1. L 2 P, 3. For no polynomial-time computable function f does it hold that: for each F 2 L, f (F ) outputs a satisfying assignment of F . <p> If NP is P-immune, then EASY 8 io 6= NP. 3. If EASY 8 io 6= NP, then there exists an infinite P set having no infinite P-printable subset. 4. If there exists an infinite P set having no infinite P-printable subset, then P 6= NP. 5. <ref> [BD76] </ref> If NP " coNP 6= P, then P 6 EASY 8 8 . <p> Thus, every infinite set in P has an infinite P-printable subset, as was to be shown. (5) The proof of this result is implicit in the most common proof (often credited as Hartmanis's simplification of the proof of Borodin and Demers) of the theorem of Borodin and Demers <ref> [BD76] </ref>, here stated as Theorem 1.1 (see [Sel88] for related work bearing upon the theorem of Borodin and Demers), as has been noted independently of the present paper by Fenner et al. [FFNR]. <p> Furthermore, by inserting into the obvious implication (P 6= NP " coNP =) P 6= NP) the statement P 6 EASY 8 8 , 3 we have, on the one hand, enlightened the close connection between the famous classic results of [BGS75] and <ref> [BD76] </ref>. On the other hand, having inserted P 6 EASY 8 8 into this implication clearly distinguishes the domains where the hard, non-trivial cores of the proofs of the respective results in [BGS75] and [BD76] fall into. <p> on the one hand, enlightened the close connection between the famous classic results of [BGS75] and <ref> [BD76] </ref>. On the other hand, having inserted P 6 EASY 8 8 into this implication clearly distinguishes the domains where the hard, non-trivial cores of the proofs of the respective results in [BGS75] and [BD76] fall into. <p> is added to B so as to simultaneously ensure both P A 6= NP A and P A (EASY 8 8 ) A . 3 We stress that it is non-trivial to show that this insertion indeed is possible, due to the commonly agreed non-triviality of Borodin and Demers's result <ref> [BD76] </ref> (see Theorem 1.1 and the proof of Theorem 3.2.5). 16 Fix an enumeration fM j g j1 of all DPOMs and an enumeration fN j g j1 of all NPOMs.
Reference: [BGS75] <author> T. Baker, J. Gill, and R. Solovay. </author> <title> Relativizations of the P=?NP question. </title> <journal> SIAM Journal on Computing, </journal> <volume> 4 </volume> <pages> 431-442, </pages> <year> 1975. </year>
Reference-contexts: Our negative results are proven using a novel observation: we show that the classic widespacing oracle construction technique yields instant non-bi-immunity results. Furthermore, we establish a result that improves upon Baker, Gill, and Solovay's classic 1 result that NP 6= P = NP " coNP <ref> [BGS75] </ref> holds in some relativized world, and that in addition links their result with the above-stated result of Borodin and Demers. 2 Definitions and Robustness In general, we adopt the standard notations of Hopcroft and Ullman [HU79]. <p> It certainly played an important role in the important early paper by Kurtz [Kur83] (see also the very early use of wide gaps to facilitate the brute-force computation of smaller strings employed by Ladner [Lad75], and also in Baker, Gill, and Solovay's seminal work <ref> [BGS75] </ref> and in Rackoff's oracle constructions for probabilistic and unambiguous polynomial time classes [Rac82]). Theorem 4.1 (9A) [NP A = PSPACE A ^ NP A is P A -immune ^ NP A is not P A -bi-immune]. Proof. <p> Baker, Gill, and Solovay proved that there exists an oracle E relative to which P E 6= NP E , yet P E = NP E " coNP E <ref> [BGS75] </ref>. Due to the priority argument they apply, this proof is the most complicated of all proofs presented in their paper. <p> Furthermore, by inserting into the obvious implication (P 6= NP " coNP =) P 6= NP) the statement P 6 EASY 8 8 , 3 we have, on the one hand, enlightened the close connection between the famous classic results of <ref> [BGS75] </ref> and [BD76]. On the other hand, having inserted P 6 EASY 8 8 into this implication clearly distinguishes the domains where the hard, non-trivial cores of the proofs of the respective results in [BGS75] and [BD76] fall into. <p> we have, on the one hand, enlightened the close connection between the famous classic results of <ref> [BGS75] </ref> and [BD76]. On the other hand, having inserted P 6 EASY 8 8 into this implication clearly distinguishes the domains where the hard, non-trivial cores of the proofs of the respective results in [BGS75] and [BD76] fall into. <p> Theorem 4.4 (9A) [NP A 6= P A = (EASY 8 8 ) A ]. Corollary 4.5 <ref> [BGS75] </ref> There exists a recursive oracle A such that NP A 6= P A = NP A " coNP A . Proof. <p> To make clear how to construct B, we will recall the crucial parts of Baker, Gill, and Solovay's oracle construction in the proof of <ref> [BGS75, Theorem 6] </ref>, pointing out the differences to our construction. As in [BGS75], define the function e by e (0) df df for j 1. <p> To make clear how to construct B, we will recall the crucial parts of Baker, Gill, and Solovay's oracle construction in the proof of [BGS75, Theorem 6], pointing out the differences to our construction. As in <ref> [BGS75] </ref>, define the function e by e (0) df df for j 1. <p> We note that the definition of vulnerability for this second type of an unsatisfied requirement is different from that given in the proof of <ref> [BGS75, Theorem 6] </ref>. By convention, we agree that requirement R 1 has higher priority than requirement R 2 exactly if R 1 &lt; R 2 . Stage n &gt; 0 of the construction of B is as follows. Stage n. <p> It follows that L B 2 NP A P A . It remains to prove that P A (EASY 8 8 ) A . The remainder of this proof is different from the proof in <ref> [BGS75] </ref>.
Reference: [CH89] <author> J. Cai and L. Hemachandra. </author> <title> Enumerative counting is hard. </title> <journal> Information and Computation, </journal> <volume> 82(1) </volume> <pages> 34-44, </pages> <year> 1989. </year>
Reference-contexts: Levin (see [Tra84]) and Adleman [Adl79] independently discovered the connection between small generalized Kolmogorov complexity and certificates. This connection has also been used in other contexts ([HW91], see also [HR90, GT91] and the comments in [HR90] on <ref> [CH89] </ref>). Definition 2.5 [HY84] A set S is P-printable if there exists a DPM M such that for each length n, M on input 1 n prints all elements of S having length at most n.
Reference: [Cha66] <author> G. Chaitin. </author> <title> On the length of programs for computing finite binary sequences. </title> <journal> Journal of the ACM, </journal> <volume> 13 </volume> <pages> 547-569, </pages> <year> 1966. </year>
Reference-contexts: Since B is an infinite set, f N (x) prints an accepting path of N (x) for infinitely many x 2 A. 2 The Kolmogorov complexity of finite strings was introduced independently by Kol-mogorov [Kol65] and Chaitin <ref> [Cha66] </ref>. Roughly speaking, the Kolmogorov complexity of a finite binary string x is the length of a shortest program that generates x. Intuitively, if a string x can be generated by a program shorter than x itself, then x can be compressed.
Reference: [FFNR] <author> S. Fenner, L. Fortnow, A. Naik, and J. Rogers. </author> <title> On inverting onto functions. </title> <note> In preparation. </note>
Reference-contexts: We have been informed that the authors of <ref> [FFNR] </ref> have shown a number of very interesting conditions, including fl 62 EASY 8 8 and there exists a honest polynomial-time computable onto function that is not polynomial-time invertible, to be all equivalent to the statement P 6 EASY 8 8 . <p> credited as Hartmanis's simplification of the proof of Borodin and Demers) of the theorem of Borodin and Demers [BD76], here stated as Theorem 1.1 (see [Sel88] for related work bearing upon the theorem of Borodin and Demers), as has been noted independently of the present paper by Fenner et al. <ref> [FFNR] </ref>. For completeness, we include the proof that NP " coNP 6= P implies P 6 EASY 8 8 . Let L 2 NP " coNP via NPMs N L and N L , that is, L (N L ) = L and L (N L ) = L. <p> On the other hand, having inserted P 6 EASY 8 8 into this implication clearly distinguishes the domains where the hard, non-trivial cores of the proofs of the respective results in [BGS75] and [BD76] fall into. Fenner et al. <ref> [FFNR] </ref>, a research project that was conducted independently of the research project reported on in this paper, will present an oracle A such that the reverse of our arrow (5) in Figure 2 fails relative to A, and in fact show that P EASY 8 8 holds relative to any sparse
Reference: [GT91] <author> F. Green and J. </author> <title> Tor an. Kolmogorov complexity of #P functions. </title> <type> Manuscript, </type> <year> 1991. </year>
Reference-contexts: Levin (see [Tra84]) and Adleman [Adl79] independently discovered the connection between small generalized Kolmogorov complexity and certificates. This connection has also been used in other contexts ([HW91], see also <ref> [HR90, GT91] </ref> and the comments in [HR90] on [CH89]). Definition 2.5 [HY84] A set S is P-printable if there exists a DPM M such that for each length n, M on input 1 n prints all elements of S having length at most n.
Reference: [Har83] <author> J. Hartmanis. </author> <title> Generalized Kolmogorov complexity and the structure of feasible computations. </title> <booktitle> In Proceedings of the 24th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 439-445. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1983. </year>
Reference-contexts: Roughly speaking, the Kolmogorov complexity of a finite binary string x is the length of a shortest program that generates x. Intuitively, if a string x can be generated by a program shorter than x itself, then x can be compressed. The notion of generalized Kolmogorov complexity <ref> [Adl79, Har83, Sip83] </ref> is a version of Kolmogorov complexity that provides information about not only whether and how far a string can be compressed, but also how fast it can be restored. We now give the definition of (unconditional and conditional) generalized Kolmogorov complexity. <p> Sip83]) For any Turing machine T and functions s and t mapping IN to IN, define K T [s (n); t (n)] = fx j (9y) [ jxj = n and jyj s (n) and T (y) outputs x in at most t (n) steps ]g: It was shown in <ref> [Har83] </ref> that there exists a universal 1 Turing machine U such that for any other Turing machine T there exists a constant c such that K T [s (n); t (n)] K U [s (n) + c; c t (n) log t (n) + c]: Fixing a universal Turing machine U
Reference: [HH88] <author> J. Hartmanis and L. Hemachandra. </author> <title> On sparse oracles separating feasible complexity classes. </title> <journal> Information Processing Letters, </journal> <volume> 28 </volume> <pages> 291-295, </pages> <year> 1988. </year>
Reference-contexts: The P-printable sets are closely related to sets of strings having small unconditional generalized Kolmogorov complexity: a set S is P-printable if and only if S 2 P and S K [k log n; n k ] for some constant k ([AR88], see also <ref> [BB86, HH88, Rub86] </ref>). Below we note a similar connection between the sets in EASY 8 8 and EASY 8 io and the sets of certificates having small conditional generalized Kolmogorov complexity, thus showing the robustness of these notions.
Reference: [HR90] <author> L. Hemachandra and S. Rudich. </author> <title> On the complexity of ranking. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 41(2) </volume> <pages> 251-271, </pages> <year> 1990. </year>
Reference-contexts: Levin (see [Tra84]) and Adleman [Adl79] independently discovered the connection between small generalized Kolmogorov complexity and certificates. This connection has also been used in other contexts ([HW91], see also <ref> [HR90, GT91] </ref> and the comments in [HR90] on [CH89]). Definition 2.5 [HY84] A set S is P-printable if there exists a DPM M such that for each length n, M on input 1 n prints all elements of S having length at most n. <p> Levin (see [Tra84]) and Adleman [Adl79] independently discovered the connection between small generalized Kolmogorov complexity and certificates. This connection has also been used in other contexts ([HW91], see also [HR90, GT91] and the comments in <ref> [HR90] </ref> on [CH89]). Definition 2.5 [HY84] A set S is P-printable if there exists a DPM M such that for each length n, M on input 1 n prints all elements of S having length at most n.
Reference: [HU79] <author> J. Hopcroft and J. Ullman. </author> <title> Introduction to Automata Theory, Languages, and Computation. </title> <publisher> Addison-Wesley, </publisher> <year> 1979. </year>
Reference-contexts: Gill, and Solovay's classic 1 result that NP 6= P = NP " coNP [BGS75] holds in some relativized world, and that in addition links their result with the above-stated result of Borodin and Demers. 2 Definitions and Robustness In general, we adopt the standard notations of Hopcroft and Ullman <ref> [HU79] </ref>. Fix the alphabet = f0; 1g. fl is the set of all strings over . For each string u 2 fl , juj denotes the length of u. The empty string is denoted by *.
Reference: [HW91] <author> L. Hemachandra and G. Wechsung. </author> <title> Kolmogorov characterizations of complexity classes. </title> <journal> Theoretical Computer Science, </journal> <volume> 83 </volume> <pages> 313-322, </pages> <year> 1991. </year>
Reference: [HY84] <author> J. Hartmanis and Y. Yesha. </author> <title> Computation times of NP sets of different densities. </title> <journal> Theoretical Computer Science, </journal> <volume> 34 </volume> <pages> 17-32, </pages> <year> 1984. </year>
Reference-contexts: Levin (see [Tra84]) and Adleman [Adl79] independently discovered the connection between small generalized Kolmogorov complexity and certificates. This connection has also been used in other contexts ([HW91], see also [HR90, GT91] and the comments in [HR90] on [CH89]). Definition 2.5 <ref> [HY84] </ref> A set S is P-printable if there exists a DPM M such that for each length n, M on input 1 n prints all elements of S having length at most n.
Reference: [Kol65] <author> A. </author> <title> Kolmogorov. Three approaches for defining the concept of information quantity. </title> <journal> Problems Information Transmission, </journal> <volume> 1 </volume> <pages> 1-7, </pages> <year> 1965. </year>
Reference-contexts: Since B is an infinite set, f N (x) prints an accepting path of N (x) for infinitely many x 2 A. 2 The Kolmogorov complexity of finite strings was introduced independently by Kol-mogorov <ref> [Kol65] </ref> and Chaitin [Cha66]. Roughly speaking, the Kolmogorov complexity of a finite binary string x is the length of a shortest program that generates x. Intuitively, if a string x can be generated by a program shorter than x itself, then x can be compressed.
Reference: [Kur83] <author> S. Kurtz. </author> <title> A relativized failure of the Berman-Hartmanis conjecture. </title> <type> Technical Report TR83-001, </type> <institution> University of Chicago Department of Computer Science, Chicago, IL, </institution> <year> 1983. </year>
Reference-contexts: The use of the widespacing technique dates so far back that it is hard to know for sure where it was first used. It certainly played an important role in the important early paper by Kurtz <ref> [Kur83] </ref> (see also the very early use of wide gaps to facilitate the brute-force computation of smaller strings employed by Ladner [Lad75], and also in Baker, Gill, and Solovay's seminal work [BGS75] and in Rackoff's oracle constructions for probabilistic and unambiguous polynomial time classes [Rac82]).
Reference: [Lad75] <author> R. Ladner. </author> <title> On the structure of polynomial time reducibility. </title> <journal> Journal of the ACM, </journal> <volume> 22(1) </volume> <pages> 155-171, </pages> <year> 1975. </year>
Reference-contexts: It certainly played an important role in the important early paper by Kurtz [Kur83] (see also the very early use of wide gaps to facilitate the brute-force computation of smaller strings employed by Ladner <ref> [Lad75] </ref>, and also in Baker, Gill, and Solovay's seminal work [BGS75] and in Rackoff's oracle constructions for probabilistic and unambiguous polynomial time classes [Rac82]). Theorem 4.1 (9A) [NP A = PSPACE A ^ NP A is P A -immune ^ NP A is not P A -bi-immune]. Proof.
Reference: [Rac82] <author> C. Rackoff. </author> <title> Relativized questions involving probabilistic algorithms. </title> <journal> Journal of the ACM, </journal> <volume> 29(1) </volume> <pages> 261-268, </pages> <year> 1982. </year>
Reference-contexts: the important early paper by Kurtz [Kur83] (see also the very early use of wide gaps to facilitate the brute-force computation of smaller strings employed by Ladner [Lad75], and also in Baker, Gill, and Solovay's seminal work [BGS75] and in Rackoff's oracle constructions for probabilistic and unambiguous polynomial time classes <ref> [Rac82] </ref>). Theorem 4.1 (9A) [NP A = PSPACE A ^ NP A is P A -immune ^ NP A is not P A -bi-immune]. Proof.
Reference: [Rub86] <author> R. Rubinstein. </author> <title> A note on sets with small generalized Kolmogorov complexity. </title> <type> Technical Report TR86-4, </type> <institution> Iowa State University, Ames, IA, </institution> <month> March </month> <year> 1986. </year>
Reference-contexts: The P-printable sets are closely related to sets of strings having small unconditional generalized Kolmogorov complexity: a set S is P-printable if and only if S 2 P and S K [k log n; n k ] for some constant k ([AR88], see also <ref> [BB86, HH88, Rub86] </ref>). Below we note a similar connection between the sets in EASY 8 8 and EASY 8 io and the sets of certificates having small conditional generalized Kolmogorov complexity, thus showing the robustness of these notions.
Reference: [Sel88] <author> A. Selman. </author> <title> Natural self-reducible sets. </title> <journal> SIAM Journal on Computing, </journal> <volume> 17(5) </volume> <pages> 989-996, </pages> <year> 1988. </year>
Reference-contexts: P has an infinite P-printable subset, as was to be shown. (5) The proof of this result is implicit in the most common proof (often credited as Hartmanis's simplification of the proof of Borodin and Demers) of the theorem of Borodin and Demers [BD76], here stated as Theorem 1.1 (see <ref> [Sel88] </ref> for related work bearing upon the theorem of Borodin and Demers), as has been noted independently of the present paper by Fenner et al. [FFNR]. For completeness, we include the proof that NP " coNP 6= P implies P 6 EASY 8 8 .
Reference: [Sip83] <author> M. Sipser. </author> <title> A complexity theoretic approach to randomness. </title> <booktitle> In Proceedings of the 15th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 330-335, </pages> <year> 1983. </year>
Reference-contexts: Roughly speaking, the Kolmogorov complexity of a finite binary string x is the length of a shortest program that generates x. Intuitively, if a string x can be generated by a program shorter than x itself, then x can be compressed. The notion of generalized Kolmogorov complexity <ref> [Adl79, Har83, Sip83] </ref> is a version of Kolmogorov complexity that provides information about not only whether and how far a string can be compressed, but also how fast it can be restored. We now give the definition of (unconditional and conditional) generalized Kolmogorov complexity. <p> We now give the definition of (unconditional and conditional) generalized Kolmogorov complexity. Definition 2.3 ([Har83], see also <ref> [Adl79, Sip83] </ref>) For any Turing machine T and functions s and t mapping IN to IN, define K T [s (n); t (n)] = fx j (9y) [ jxj = n and jyj s (n) and T (y) outputs x in at most t (n) steps ]g: It was shown in
Reference: [Tra84] <author> B. Trakhtenbrot. </author> <title> A survey of Russian Approaches to perebor (brute-force search) algorithms. </title> <journal> Annals of the History of Computing, </journal> <volume> 6(4) </volume> <pages> 384-400, </pages> <year> 1984. </year> <month> 21 </month>
Reference-contexts: Of particular interest in this paper are certificates (more precisely, strings encoding accepting paths of NPMs) that have small generalized Kolmogorov complexity. Levin (see <ref> [Tra84] </ref>) and Adleman [Adl79] independently discovered the connection between small generalized Kolmogorov complexity and certificates. This connection has also been used in other contexts ([HW91], see also [HR90, GT91] and the comments in [HR90] on [CH89]). <p> Theorem 3.1 1. P 6= NP if and only if EASY 8 8 6= NP. 2. EASY 8 io FINITE [ (NP P) if and only if fl 62 EASY 8 io . Proof. (1) Adleman ([Adl79], see also <ref> [Tra84] </ref> for a discussion of Levin's related work) has shown that P = NP if and only if for each normalized NPM M there is a k such that for each string x 2 L (M ) it holds that acc M (x) " K [k log n; n k j
References-found: 23

