URL: http://www.almaden.ibm.com/cs/quest/papers/kdd97_trends.ps
Refering-URL: http://www.almaden.ibm.com/cs/quest/publications.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: lent@cs.stanford.edu, fragrawal,srikantg@almaden.ibm.com  
Title: Discovering Trends in Text Databases  
Author: Brian Lent and Rakesh Agrawal and Ramakrishnan Srikant 
Address: San Jose, California 95120, U.S.A.  
Affiliation: IBM Almaden Research Center  
Abstract: We describe a system we developed for identifying trends in text documents collected over a period of time. Trends can be used, for example, to discover that a company is shifting interests from one domain to another. Our system uses several data mining techniques in novel ways and demonstrates a method in which to visualize the trends. We also give experiences from applying this system to the IBM Patent Server, a database of U.S. patents. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Agrawal, R., and Srikant, R. </author> <year> 1995. </year> <title> Mining sequential patterns. </title> <booktitle> In Proceedings of the 11th International Conference on Data Engineering. </booktitle>
Reference-contexts: Continuing support has been provided by a graduate fellowship of the Department of Defense Office of Naval Research. 1 Copyright c fl1997, American Association for Artificial Intelligence (www.aaai.org). All rights reserved. sequential patterns mining (Agrawal & Srikant 1995; Srikant & Agrawal 1996) and trend identification using shape queries <ref> (Agrawal et al. 1995) </ref>. We begin by cleansing and parsing the input data, and separating the documents based on their timestamps. <p> A 2-phrase could be &lt; &lt;(IBM)&gt; &lt;(data) (mining)&gt; &gt; &lt; &lt;(Anderson) (Consulting)&gt; &lt;(decision) (support)&gt; &gt;, with "Anderson Consulting" and "decision support" occuring in a different paragraph from "IBM" and "data mining". We cast the phrase-identification problem as the problem of mining sequential patterns <ref> (Agrawal & Srikant 1995) </ref>. The input to the latter problem is a set of sequences, called data-sequences. Each data-sequence is a list of transactions, where each transaction is a set of items (literals). <p> Identifying trends By maintaining a support history for each supported k-phrase we can query the set of histories to select those phrases that have some specific shape in their histories. We propose the use of a shape definition language called SDL <ref> (Agrawal et al. 1995) </ref> to define the users' queries and retrieve the associated objects. There are several benefits for using a shape query language such as SDL to identify trends: First, the language is small, yet powerful, allowing a rich combination of operators. <p> The Shape Query Engine takes the set of partitioned phrases for the years of interest and selects those that match the given shape query. Once a shape query has been defined, either internally or using the graphical editor, a rewriting of the query into SDL <ref> (Agrawal et al. 1995) </ref> is performed. Given the shape query in Figure 3, the rewriting of this query into SDL is shown in Figure 4. The rewriting happens as follows.
Reference: <author> Agrawal, R.; Psaila, G.; Wimmers, E.; and Zait, M. </author> <year> 1995. </year> <title> Querying shapes of histories. </title> <booktitle> In Proceedings of the 21st International Conference on Very Large Databases. </booktitle>
Reference-contexts: Continuing support has been provided by a graduate fellowship of the Department of Defense Office of Naval Research. 1 Copyright c fl1997, American Association for Artificial Intelligence (www.aaai.org). All rights reserved. sequential patterns mining (Agrawal & Srikant 1995; Srikant & Agrawal 1996) and trend identification using shape queries <ref> (Agrawal et al. 1995) </ref>. We begin by cleansing and parsing the input data, and separating the documents based on their timestamps. <p> A 2-phrase could be &lt; &lt;(IBM)&gt; &lt;(data) (mining)&gt; &gt; &lt; &lt;(Anderson) (Consulting)&gt; &lt;(decision) (support)&gt; &gt;, with "Anderson Consulting" and "decision support" occuring in a different paragraph from "IBM" and "data mining". We cast the phrase-identification problem as the problem of mining sequential patterns <ref> (Agrawal & Srikant 1995) </ref>. The input to the latter problem is a set of sequences, called data-sequences. Each data-sequence is a list of transactions, where each transaction is a set of items (literals). <p> Identifying trends By maintaining a support history for each supported k-phrase we can query the set of histories to select those phrases that have some specific shape in their histories. We propose the use of a shape definition language called SDL <ref> (Agrawal et al. 1995) </ref> to define the users' queries and retrieve the associated objects. There are several benefits for using a shape query language such as SDL to identify trends: First, the language is small, yet powerful, allowing a rich combination of operators. <p> The Shape Query Engine takes the set of partitioned phrases for the years of interest and selects those that match the given shape query. Once a shape query has been defined, either internally or using the graphical editor, a rewriting of the query into SDL <ref> (Agrawal et al. 1995) </ref> is performed. Given the shape query in Figure 3, the rewriting of this query into SDL is shown in Figure 4. The rewriting happens as follows.
Reference: <author> Agrawal, R.; Mannila, H.; Srikant, R.; Toivonen, H.; and Verkamo, A. I. </author> <year> 1996. </year> <title> Fast Discovery of Association Rules. </title> <editor> In Fayyad, U. M.; Piatetsky-Shapiro, G.; Smyth, P.; and Uthurusamy, R., eds., </editor> <booktitle> Advances in Knowledge Discovery and Data Mining. </booktitle> <publisher> AAAI/MIT Press. </publisher> <pages> chapter 12, 307-328. </pages>
Reference-contexts: The support of a sequential pattern is the percentage of data-sequences that contain the pattern. The problem is to find all sequential patterns whose support is greater than a user-specified minimum support. This work was later extended and generalized in <ref> (Srikant & Agrawal 1996) </ref>. <p> The generalizations made in the GSP algorithm for adjacent words in a phrase mining sequential patterns <ref> (Srikant & Agrawal 1996) </ref> allows us to do a one-to-one mapping of the minimum gap, maximum gap, and transaction window to the parameters of the algorithm. Figure 1 illustrates the affect of these parameters. <p> Further, we can generalize our notion of having hierarchical mappings to that of nested lists-of-lists-of.... This enhancement of the GSP algorithm can be implemented by changing the apriori-like candidate generation algorithm <ref> (Agrawal et al. 1996) </ref> to consider both phrases and words as individual elements when generating candidate k-phrases. The manner in which these candidates are counted would similarly change. <p> Further, as the data is parsed it is partitioned based on the year the particular patent was granted. For each partition of cleansed patent data, we perform a mining pass using the Generalized Sequential Patterns (GSP) algorithm <ref> (Srikant & Agrawal 1996) </ref> to generate those phrases in each partition that meet the minimum support threshold. The resulting phrases are then saved so that many different shape queries can be run against them.
Reference: <author> Croft, W.; Turtle, H.; and Lewis, D. </author> <year> 1991. </year> <title> The use of phrases and structured queries in information retrieval. </title> <booktitle> In 14th International ACM SIGIR Conference on Research and Development in Information Retrieval, </booktitle> <pages> 32-45. </pages>
Reference-contexts: The use of phrases to build more advanced queries is discussed in <ref> (Croft, Turtle, & Lewis 1991) </ref>. In this work, the authors identify phrases as concepts and as relationships between concepts. The usefulness of phrases is shown in (Lewis & Croft 1990) where the quality of text categorization is improved by using word clusters and phrases.
Reference: <author> Deerwester, S.; Dumais, S. T.; Furnas, G. W.; Lan-dauer, T. K.; and Harshman, R. </author> <year> 1990. </year> <title> Indexing by latent semantic analysis. </title> <journal> Journal of the American Society for Information Science 41(6) </journal> <pages> 391-407. </pages>
Reference-contexts: The purpose of the knowledge base is to supply unary or binary relations amongst the keywords labeling the documents. Using words and phrases to describe themes and concepts in text documents has been studied by the information retrieval community. The work on Latent Semantic Indexing (LSI) <ref> (Deerwester et al. 1990) </ref> describes a mathematical model of relating word associations as weighted vectors that represent "concepts" found within the documents. Using LSI, a query can retrieve a document even when they share no words, but do share a similar concept.
Reference: <author> Feldman, R., and Dagan, I. </author> <year> 1995. </year> <title> Knowledge discovery in textual databases (KDT). </title> <booktitle> In Proceedings of the 1st International Conference on Knowledge Discovery in Databases and Data Mining. </booktitle>
Reference-contexts: The final step in the process is to visualize the results. Related Work An approach to discovering interesting patterns and trend analysis on text documents was presented in <ref> (Feldman & Dagan 1995) </ref>. The text is first annotated with a set of concepts, organized as a hierarchy. Treating the concept hierarchy as a distribution of probabilities, they identify several model distributions to which a given concept hierarchy can be compared.
Reference: <author> Feldman, R., and Hirsh, H. </author> <year> 1996. </year> <title> Mining associations in text in the presence of background knowledge. </title> <booktitle> In Proceedings of the 2nd International Conference on Knowledge Discovery in Databases and Data Mining. </booktitle>
Reference-contexts: Interesting concepts are those that differ from their model distribution. Analyzing trends involves the comparison of concept distributions using old data with distributions using new data. In <ref> (Feldman & Hirsh 1996) </ref>, the authors find associations between the keywords or concepts labeling the documents using background knowledge about relationships among the keywords. The purpose of the knowledge base is to supply unary or binary relations amongst the keywords labeling the documents.
Reference: <author> Gay, L., and Croft, W. </author> <year> 1990. </year> <title> Interpreting nominal compounds for information retrieval. </title> <booktitle> Information Processing and Management 26(1) </booktitle> <pages> 21-38. </pages>
Reference-contexts: The reliability of using words and phrases as search terms and as the basic units in test, and their relationships with the topic of the text, has been studied in (Renouf 1993b; 1993a) and evidenced by the work in <ref> (Gay & Croft 1990) </ref> that identifies sequences of two or more nouns as an effective identification of concepts found within a document. A related area is the automatic determination of text themes, or topics that are emphasized in the text and represented by selected text excerpts.
Reference: <author> Lewis, D., and Croft, W. </author> <year> 1990. </year> <title> Term clustering of syntactic phrases. </title> <booktitle> In 13th International ACM SIGIR Conference on Research and Development in Information Retrieval, </booktitle> <pages> 385-404. </pages>
Reference-contexts: The use of phrases to build more advanced queries is discussed in (Croft, Turtle, & Lewis 1991). In this work, the authors identify phrases as concepts and as relationships between concepts. The usefulness of phrases is shown in <ref> (Lewis & Croft 1990) </ref> where the quality of text categorization is improved by using word clusters and phrases.
Reference: <author> Renouf, A. </author> <year> 1993a. </year> <title> Making sense of text: automated approaches to meaning extraction. </title> <booktitle> 17th International Online Information Meeting Proceedings 77-86. </booktitle>
Reference: <author> Renouf, A. </author> <year> 1993b. </year> <title> What the linguist has to say to the information scientist. </title> <booktitle> Journal of Document and Text Management 1(2) </booktitle> <pages> 173-190. </pages>
Reference: <author> Salton, G.; Allan, J.; Buckley, C.; and Singhal, A. </author> <year> 1994. </year> <title> Automatic analysis, theme generation, and summarization of machine readable texts. </title> <booktitle> SCIENCE 264(5164) </booktitle> <pages> 1421-1426. </pages>
Reference: <author> Salton, G.; Singhal, A.; Buckley, C.; and Mitra, M. </author> <year> 1996. </year> <title> Automatic text decomposition using text segments and text themes. </title> <booktitle> In Proceedings of Hypertext, </booktitle> <pages> 53-65. </pages>
Reference: <author> Srikant, R., and Agrawal, R. </author> <year> 1996. </year> <title> Mining sequential patterns: Generalizations and performance improvements. </title> <booktitle> In Proceedings of the Fifth International Conference on Extending Database Technology (EDBT). </booktitle>
Reference-contexts: The support of a sequential pattern is the percentage of data-sequences that contain the pattern. The problem is to find all sequential patterns whose support is greater than a user-specified minimum support. This work was later extended and generalized in <ref> (Srikant & Agrawal 1996) </ref>. <p> The generalizations made in the GSP algorithm for adjacent words in a phrase mining sequential patterns <ref> (Srikant & Agrawal 1996) </ref> allows us to do a one-to-one mapping of the minimum gap, maximum gap, and transaction window to the parameters of the algorithm. Figure 1 illustrates the affect of these parameters. <p> Further, as the data is parsed it is partitioned based on the year the particular patent was granted. For each partition of cleansed patent data, we perform a mining pass using the Generalized Sequential Patterns (GSP) algorithm <ref> (Srikant & Agrawal 1996) </ref> to generate those phrases in each partition that meet the minimum support threshold. The resulting phrases are then saved so that many different shape queries can be run against them.
References-found: 14

