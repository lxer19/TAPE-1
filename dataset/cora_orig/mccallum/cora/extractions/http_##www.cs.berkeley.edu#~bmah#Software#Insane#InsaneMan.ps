URL: http://www.cs.berkeley.edu/~bmah/Software/Insane/InsaneMan.ps
Refering-URL: http://www.cs.berkeley.edu/~bmah/Software/Insane/
Root-URL: 
Email: bmah@CS.Berkeley.EDU  
Title: INSANE Users Manual Last  INSANE Users Manual  
Author: Bruce A. Mah 
Note: This version of the manual corresponds to INSANE 1.0a8+ (change bars correspond to changes made since INSANE 1.0a8). Depending on recent changes to the INSANE source code, it is possi ble that this may not the be the most recent release of the software.  
Address: Berkeley  
Affiliation: The Tenet Group Computer Science Division Univerisity of California at  
Date: May 29, 1996 1  
Pubnum: Change:  
Abstract: This document is the users manual for an Internet Simulated ATM Networking Environment (INSANE). INSANE is an object-oriented, event-driven simulator written in C++ [Stroustrup91] and Tcl [Ousterhout94], designed to simulate a medium-to-large IP-over-ATM internetworking environment. 
Abstract-found: 1
Intro-found: 1
Reference: [Danzig91] <author> Peter B. Danzig and Sugih Jamin. tcplib: </author> <title> A library of TCP internetwork traffic character istics. </title> <type> Technical Report USC-CS-91-495, </type> <institution> Computer Science Department, University of Southern California, </institution> <address> Los Angeles, CA, </address> <year> 1991. </year>
Reference-contexts: It is designed to investigate the performance effects of different IP-over-ATM designs, in a heterogeneous internetwork. INSANE simulates the operation of a set of typical Internet applications (ftp, telnet, WWW browser, audio, video) using empirical traffic models derived from <ref> [Danzig91] </ref> and other similar sources. These applications run on top of a simulated Internet protocol stack, consisting of TCP, UDP, and IP. Two different datalink layers (ATM and a generic shared-media LAN) are in turn available to IP. The ATM stack uses FIFO and Rate-Controlled Static Priority (RCSP) [Zhang93] queueing.
Reference: [Mah93] <author> Bruce A. Mah. </author> <title> A mechanism for the administration of real-time channels. </title> <type> Masters report, </type> <institution> University of California at Berkeley, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: Two different datalink layers (ATM and a generic shared-media LAN) are in turn available to IP. The ATM stack uses FIFO and Rate-Controlled Static Priority (RCSP) [Zhang93] queueing. ATM signalling is performed by a protocol based on the Real-Time Channel Administration Protocol (RCAP). <ref> [Mah93] </ref> The simulation core, as well as a set of primitive objects, is implemented in C++. [Stroustrup91] Instances of the various primtive objects can be created and configured into complex, composite objects using the Tcl scripting language. [Ousterhout94] Because Tcl provides general-purpose programming langauge constructs such as loops, conditionals, and procedure <p> In the terminology of the ATM Forum, this object implements the NNI. It (and its host-based counterpart, the SigHost object) implement a signalling protocol very similar to the Real-Time Channel Administration Protocol. <ref> [Mah93] </ref> It uses the CellGoBackN object for reliable delivery of signalling messages sent across the ATM network. This class of Sig object is designed to run on networks without admission control; various methods in this class can be overridden to work with networks requiring admission tests at connection setup time. <p> This signalling protocol is based on the Real-Time Channel Administration Protocol (RCAP) described in <ref> [Mah93] </ref>. This class of SigHost object is designed to run on networks without admission control; various methods in this class can be overridden to work with networks requiring admission tests at connection setup time.
Reference: [Ousterhout94] <author> John K. Ousterhout. </author> <title> Tcl and the Tk Toolkit. </title> <publisher> Addison-Wesley Publishing Company, Read ing, </publisher> <address> MA, </address> <year> 1994. </year>
Reference-contexts: is performed by a protocol based on the Real-Time Channel Administration Protocol (RCAP). [Mah93] The simulation core, as well as a set of primitive objects, is implemented in C++. [Stroustrup91] Instances of the various primtive objects can be created and configured into complex, composite objects using the Tcl scripting language. <ref> [Ousterhout94] </ref> Because Tcl provides general-purpose programming langauge constructs such as loops, conditionals, and procedure definitions, the creation of a large simulation scenario is fairly easy. <p> It specifies the objects in a given simulation sce nario, as well as their relationship to each other. The configuration file is a script written in the Tcl <ref> [Ousterhout94] </ref> scripting language. All of the Tcl built-in primitives are available to the script, as well as the commands listed in sections 2 and 3 of the INSANE man ual. FILES Sample configuration files are provided in the INSANE distribution.
Reference: [Postel80] <author> Jon Postel. </author> <title> User Datagram Protocol. Internet Request for Comments 768, </title> <month> August </month> <year> 1980. </year>
Reference-contexts: Using the Internet standard telnet port of 23 is recommended. UDP (2) UDP (2) INSANE Users Manual Last Change: May 29, 1996 53 NAME Udp User Datagram Protocol module SYNOPSIS Udp name DESCRIPTION Not too surprisingly, Udp objects implement UDP <ref> [Postel80] </ref> for applications. OPTIONS name Name of new Udp module.
Reference: [Postel81a] <author> Jon Postel. </author> <title> Internet Protocol. Internet Request for Comments 791, </title> <month> September </month> <year> 1981. </year>
Reference-contexts: BUGS See the manual page for HttpClient. IP (2) IP (2) INSANE Users Manual Last Change: May 29, 1996 27 NAME Ip Internet Protocol module SYNOPSIS Ip name DESCRIPTION Ip implements a service intended to simulate the IP protocol layer. <ref> [Postel81a] </ref> OPTIONS name Name of this Ip module. COMMAND SUMMARY ip ifconfig name address netmask broadcast Attach a new interface to this Ip module. address, netmask, and broadcast are all IP addresses in dotted-quad notation.
Reference: [Postel81b] <author> Jon Postel. </author> <title> Transmission Control Protocol. Internet Request for Comments 793, Septem ber 1981. </title>
Reference-contexts: Simulated applications can tag TCP segments with user-level data, thus allowing them to exchange small amounts of data (such as sequence numbers or delimiters for application-layer protocols). This implementation is based heavily on the TCP implementation found in BSD 4.4Lite. <ref> [Postel81b, Stevens94, Wright95] </ref> OPTIONS name Name of new Tcp module. COMMAND SUMMARY tcp down ipmodule Name of Ip module used on the current network node. ipmodule will be used for the transport of all TCP segments. tcp netstat Print current TCP entity state.
Reference: [Stevens94] <editor> W. Richard Stevens. TCP/IP Illustrated, </editor> <volume> Volume 1. </volume> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Reading, MA, </address> <year> 1994. </year>
Reference-contexts: Simulated applications can tag TCP segments with user-level data, thus allowing them to exchange small amounts of data (such as sequence numbers or delimiters for application-layer protocols). This implementation is based heavily on the TCP implementation found in BSD 4.4Lite. <ref> [Postel81b, Stevens94, Wright95] </ref> OPTIONS name Name of new Tcp module. COMMAND SUMMARY tcp down ipmodule Name of Ip module used on the current network node. ipmodule will be used for the transport of all TCP segments. tcp netstat Print current TCP entity state.
Reference: [Stroustrup91] <author> Bjarne Stroustrup. </author> <title> The C++ Programming Langauge. </title> <publisher> Addison-Wesley Publishing Com pany, </publisher> <year> 1991. </year>
Reference-contexts: The ATM stack uses FIFO and Rate-Controlled Static Priority (RCSP) [Zhang93] queueing. ATM signalling is performed by a protocol based on the Real-Time Channel Administration Protocol (RCAP). [Mah93] The simulation core, as well as a set of primitive objects, is implemented in C++. <ref> [Stroustrup91] </ref> Instances of the various primtive objects can be created and configured into complex, composite objects using the Tcl scripting language. [Ousterhout94] Because Tcl provides general-purpose programming langauge constructs such as loops, conditionals, and procedure definitions, the creation of a large simulation scenario is fairly easy.
Reference: [Wright95] <author> Gary R. Wright and W. Richard Stevens. </author> <title> TCP/IP Illustrated, Volume 2. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1995. </year>
Reference-contexts: Simulated applications can tag TCP segments with user-level data, thus allowing them to exchange small amounts of data (such as sequence numbers or delimiters for application-layer protocols). This implementation is based heavily on the TCP implementation found in BSD 4.4Lite. <ref> [Postel81b, Stevens94, Wright95] </ref> OPTIONS name Name of new Tcp module. COMMAND SUMMARY tcp down ipmodule Name of Ip module used on the current network node. ipmodule will be used for the transport of all TCP segments. tcp netstat Print current TCP entity state.
Reference: [Zhang93] <author> Hui Zhang and Domenico Ferrari. </author> <title> Rate-controlled static-priority queueing. </title> <booktitle> In Proceed ings of IEEE INFOCOM 93, </booktitle> <address> San Francisco, CA, </address> <year> 1993. </year>
Reference-contexts: These applications run on top of a simulated Internet protocol stack, consisting of TCP, UDP, and IP. Two different datalink layers (ATM and a generic shared-media LAN) are in turn available to IP. The ATM stack uses FIFO and Rate-Controlled Static Priority (RCSP) <ref> [Zhang93] </ref> queueing. <p> CELLQUEUERCSP (2) CELLQUEUERCSP (2) INSANE Users Manual Last Change: May 29, 1996 19 NAME CellQueueRcsp Rate Controlled Static Priority cell queue SYNOPSIS CellQueueRcsp name maxvcid levels subqueues ticktime DESCRIPTION A CellQueueRcsp implements a Rate Controlled Static Priority (RCSP) queue <ref> [Zhang93] </ref> for ATM cells. A SigRcsp or SigHostRcsp object (or similar entity) must be used to set the traffic and performance parame ters for each virtual circuit before data will ow on that connection. <p> CellInputPort) of the ATM switch on the other end of the link between the two. cqr statinterval time Set the statistics-printing interval. Statistics are printed at debug level 0. NOTE Of the RCSP parameters, bitrate, levels, and ticktime (corresponding to the variables , , and in <ref> [Zhang93] </ref>) are the only ones iassociated with the datapath (we note that the packet size is fixed because the ATM cell size is fixed). Other parameters are specified in the signalling entity (such as ) or on a per connection basis (such as ). <p> It per forms admission control tests for the Rate Controlled Static Priority (RCSP) service discipline. <ref> [Zhang93, Zhang94] </ref> OPTIONS name Name of this SigHostRcsp object. maxVcids Maximum number of VCIDs supported by this SigHostRcsp object. downCalls Maximum number of signalling downcalls supported from higher-layer protocol objects. <p> SIGRCSP (2) INSANE Users Manual Last Change: May 29, 1996 44 NAME SigRcsp Switch signalling entity supporting Rate Controlled Static Priority scheduling SYNOPSIS SigRcsp name numPorts maxVcids maxRoutes DESCRIPTION The SigRcsp entity handles the signalling for one node of an ATM network using Rate Controlled Static Pri ority (RCSP) queueing. <ref> [Zhang93] </ref> Its behavior is very similar to the Sig class from which it is derived, but it implements admission control tests for RCSP. [Zhang94] OPTIONS name Name of new SigRcsp object. numPorts Number of switch ports supported. maxVcids Maximum number of VCIDs (and hence connections) supported per switch port.
Reference: [Zhang94] <author> Hui Zhang and Domenico Ferrari. </author> <title> Improving utilization in deterministic service in multi media communication. </title> <booktitle> In Proceedings of the 1994 IEEE International Conference on Multimedia Computing and Systems, </booktitle> <pages> pages 295304, </pages> <address> Boston, MA, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: It per forms admission control tests for the Rate Controlled Static Priority (RCSP) service discipline. <ref> [Zhang93, Zhang94] </ref> OPTIONS name Name of this SigHostRcsp object. maxVcids Maximum number of VCIDs supported by this SigHostRcsp object. downCalls Maximum number of signalling downcalls supported from higher-layer protocol objects. <p> SigRcsp name numPorts maxVcids maxRoutes DESCRIPTION The SigRcsp entity handles the signalling for one node of an ATM network using Rate Controlled Static Pri ority (RCSP) queueing. [Zhang93] Its behavior is very similar to the Sig class from which it is derived, but it implements admission control tests for RCSP. <ref> [Zhang94] </ref> OPTIONS name Name of new SigRcsp object. numPorts Number of switch ports supported. maxVcids Maximum number of VCIDs (and hence connections) supported per switch port. Note that VCIDs on the input and output sides of a given switch port are counted separately. maxRoutes Maximum number of routes supported.
References-found: 11

