URL: ftp://ftp.cm.deakin.edu.au/pub/TR/Computing/rhodos/TR-C93-06.ps.gz
Refering-URL: http://gollum.cm.deakin.edu.au/techreports.html
Root-URL: 
Title: The Development and Testing of the Ring Based Conference Authentication Service 1 a user logs
Author: Damien De Paoli and Andrzej Goscinski 
Keyword: Identity-Based Conference Key Distribution, Authentication, Distributed Operating Systems, Distributed Systems.  
Note: When  
Address: Geelong, Victoria 3217  
Affiliation: School of Computing and Mathematics Deakin University  
Email: (ddp@deakin.edu.au, ang@deakin.edu.au)  
Date: September 8, 1994  
Abstract: In this report we show that a feasible and secure conference authentication service utilising a ring formation can be developed. This service is based on the Identity Based Conference Key Distribution System (ICKDS), proposed by Koyama-Ohta. The service has one central trusted server which distributes cryptographic parameters to a set of agents. We propose that users are not trusted thus, all the cryptographic information is stored in the agents. These agents perform the conference authentication task on behalf of a set of users and distribute a conference key without any support or interaction from the central server. The conference service is performed in two stages. The first stage is where a user decides to organise a conference. This user, the initiator, informs his/her local agent of the conference request. The agent then sends out a set of invitations to the invited users (via their local agents). The invitees reply, this is then sent back to the initiators agent. The agents of the invitees who reply that they will participate in the conference are then organ-ised into a logical ring. The second stage consists of each local agent in the ring authenticating the other agents in the ring. In the process of authenticating, each of the local agents receives a common conference key. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Beaton and A. Goscinski. </author> <title> A Simple Distributed Computer System for Supporting Collaboration in Distant and Synchronous Meetings. </title> <booktitle> Computers in Industry 12 (1989) 95-106. </booktitle>
Reference-contexts: Examples of one-way authentication include client login and authentication of a workstation at a boot up stage. Two-way authentication includes user-user, user-server and server-server. Examples of conference authentication are authentication processes carried out for synchronous remote meetings and concurrent group work <ref> [1, 9] </ref>. To carry out conference authentication a series of two-way authentications can be performed. Using this technique, each conference participant generates a key for each other participant. <p> Gregs ASA receives this message and calculates T, the left hand side and right hand side of the congruence. Note that Gregs ASA is checking id [0] (damien) and id <ref> [1] </ref> (michael). Once this has been done (and the left hand side equals the right hand side) then Gregs ASA has authenticated damien and michael. Thus, Gregs ASA has authenticated all the other participants. Subsequently, Gregs ASA generates a conference key. <p> Upon receipt of the M_AS_FINISHED message, Damiens ASA sends the originator token onto Michaels ASA (by sending an M_AS_CONF_ORIGINATOR message). Michaels ASA receives this and subsequently sends a new set of X, Y, Z parameters to Gregs ASA. At which point Gregs ASA authenticates id <ref> [1] </ref> (michael) and sends a set of X, Y, Z parameters to Damiens ASA. Thus, this process continues until all participants have generated a key. same. Thus, Damiens ASA generates a M_AS_CONF_RES_ASA and sends this to both Michaels ASA and Gregs ASA.
Reference: [2] <author> D. De Paoli. </author> <title> Ring-Based Conference Authentication in Distributed Systems. </title> <type> Honours Thesis. </type> <institution> Deakin University, </institution> <month> October </month> <year> 1992. </year>
Reference: [3] <author> W. Diffie and M. E. Hellman. </author> <title> New Directions in Cryptography. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-22(6):644-654, </volume> <year> 1982. </year>
Reference-contexts: The ICKDS system is itself based on Diffie and Hellmans public key cryptosystem <ref> [3] </ref> and Shamirs Identity Based key system [10]. The ICKDS system allows three logical formations to be used: star, ring and mesh. The star formation had already been implemented at the time of the logical design of the ring based conference system.
Reference: [4] <author> G. Gerrity and A. Goscinski. J Indulska. W. Toomey. W. Zhu. </author> <title> RHODOS - A TestBed for Studying Design Issues in Distributed Operating Systems. </title> <booktitle> Proceedings of the 1991 Singapore International Conference on Networks. Towards Network Globalisation. </booktitle> <editor> Editor G. S. Poo, </editor> <month> September </month> <year> 1991. </year> <month> 31 </month>
Reference-contexts: Section 8 the conclusion to this work is presented. 2 The placement of the Authentication Service in RHODOS The RHODOS (ResearcH Oriented Distributed Operating System) was designed as a testbed for qualitative analysis and quantitative comparisons of different concepts and methodologies that can be employed to implement distributed operating systems <ref> [4] </ref>. To assist in this goal, the operating system itself is modular, and consists of a set of cooperating processes. The overall architecture of RHODOS is shown in Figure 1. The archi 3 tecture consists of a m-Kernel and a set of user mode processes.
Reference: [5] <author> A. Goscinski and M. Wang. </author> <title> Conference Authentication and Key Distribution Service in the RHODOS Distributed System. </title> <booktitle> Proceedings of Singapore Conference ICCS/ISITA 92, Communications on the move. </booktitle> <month> November </month> <year> 1992. </year>
Reference-contexts: Whereas in both the ring and mesh, each participant authenticates every other participant, not just the initiator. This accounts for the smaller number of messages and less security of the star. The star formation had already been implemented for RHODOS <ref> [5, 12] </ref>. Due to the lesser security of the star formation, it was decided that another conference authentication facility would be developed for RHODOS, based on the ring formation and the comparison and study of these two systems should be performed. <p> For more information on how these processes interact with the Authentication server see <ref> [5, 12] </ref>. 3 Overview of the Generation of the Cryptographic Parameters for the Ring Based Conference Facility The ring based conference authentication service developed for RHODOS is based on the Identity-Based Conference Key Distribution System [7, 8]. <p> The ICKDS system allows three logical formations to be used: star, ring and mesh. The star formation had already been implemented at the time of the logical design of the ring based conference system. Thus, the ring based service was merged into the existing authentication service <ref> [5, 12] </ref>. The RHODOS Ring-based conference service is provided in two stages. In the first stage a Central Authentication Server (CAS) generates and distributes a set of cryptographic parameters to each workstation when a user successfully logs on. <p> The public system key and both the star-based and ring based signatures are sent to each local users authentication agent. 4 Adapting ICKDS for RHODOS Some important assumptions about the RHODOS environment were made. A full list of these assumptions is given in <ref> [5, 12] </ref>. The relevant assumptions are that RHODOS is a homogeneous distributed operating system (using workstations), and that allows users to communicate via insecure channels. These users are not to be trusted with any cryptographic details, other than their own password. <p> RHODOS will authenticate not only users, but both users and servers. RHODOS assures not only sender authentication, but receiver authentication as well. ICKDS did not take into account message replay, RHODOS overcomes this via timestamps. A more detailed discussion of these extensions is in <ref> [5, 12] </ref>. 5 Logical Design of the RHODOS Ring Based Conference Authentica tion Service The logical design of the ring based conference authentication facility, firstly details how the problem of synchronising the local authentication agents is dealt with. <p> Thus, from the authentication servers perspective it is interacting with the IPC manager. The design of the authentication service detailed in <ref> [5, 12] </ref> specifies that all ASAs and the CAS uses the same port address. That is, they all use the well known port address defined by P_AUTHENTICATION. This, however, creates problems in the test environment. The test environment consists of four authentication servers running on one physical workstation. <p> The program starts up by asking a user to log in. This request for login is sent via the local ASA to the CAS which verifies the identity of the user using a minimum knowledge protocol (for more details see <ref> [5, 12] </ref>). The program then displays a menu as shown in Figure 15. This user-driven menu allows the selection of four menu items. The selection of the first item allows the user to send or receive a one way authenticated message, this corresponds to auth_msg () (Section 4.2.4).
Reference: [6] <author> I. Ingermarsson, D. Tang and C. K. Wong. </author> <title> A Conference Key Distribution System. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-28(5):714-720, </volume> <year> 1982. </year>
Reference-contexts: The advantage of conference authentication schemes is that they reduce the number of messages passed by the conference participants. Conference authentication also has the advantage of generating and distributing the key as the authentication is being undertaken. There are several conference key distribution schemes <ref> [6, 7, 8] </ref>. One of these only performs key distribution [6]. The others perform both key distribution and authentication. Koyama and Ohta proposed a conference authentication called Identity based Conference Key Distribution System (ICKDS) [7]. ICKDS is suited to distributed systems. <p> Conference authentication also has the advantage of generating and distributing the key as the authentication is being undertaken. There are several conference key distribution schemes [6, 7, 8]. One of these only performs key distribution <ref> [6] </ref>. The others perform both key distribution and authentication. Koyama and Ohta proposed a conference authentication called Identity based Conference Key Distribution System (ICKDS) [7]. ICKDS is suited to distributed systems.
Reference: [7] <author> K. Koyama and K. Ohta. </author> <title> Identity-based Conference Key Distributions Systems. </title> <editor> In C. Pomerance, editor, </editor> <booktitle> Advances in Cryptology - CRYPTO87 (Lecture Notes in Computer Science No. </booktitle> <volume> 293), </volume> <pages> pages 175-184. </pages> <editor> G. Goos and J. Hartmanis, </editor> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference-contexts: The advantage of conference authentication schemes is that they reduce the number of messages passed by the conference participants. Conference authentication also has the advantage of generating and distributing the key as the authentication is being undertaken. There are several conference key distribution schemes <ref> [6, 7, 8] </ref>. One of these only performs key distribution [6]. The others perform both key distribution and authentication. Koyama and Ohta proposed a conference authentication called Identity based Conference Key Distribution System (ICKDS) [7]. ICKDS is suited to distributed systems. <p> There are several conference key distribution schemes [6, 7, 8]. One of these only performs key distribution [6]. The others perform both key distribution and authentication. Koyama and Ohta proposed a conference authentication called Identity based Conference Key Distribution System (ICKDS) <ref> [7] </ref>. ICKDS is suited to distributed systems. This is because the system allows a set of parameters to be sent from a center to a set of agents. Once these parameters have been sent, the agents do not need to approach the server to perform authentication tasks. <p> For more information on how these processes interact with the Authentication server see [5, 12]. 3 Overview of the Generation of the Cryptographic Parameters for the Ring Based Conference Facility The ring based conference authentication service developed for RHODOS is based on the Identity-Based Conference Key Distribution System <ref> [7, 8] </ref>. The ICKDS system is itself based on Diffie and Hellmans public key cryptosystem [3] and Shamirs Identity Based key system [10]. The ICKDS system allows three logical formations to be used: star, ring and mesh.
Reference: [8] <author> K. Koyama and K. Ohta. </author> <title> Security of Improved Identity-based Conference Key Distribution systems. </title> <editor> In C. G. Gnther, editor, </editor> <booktitle> Advances in Cryptology - EUROCRYPT88, Volume 330 of Lecture Notes in Computer Science, </booktitle> <pages> pages 11-19. </pages> <publisher> Springer-Verlag, </publisher> <month> May </month> <year> 1988. </year>
Reference-contexts: The advantage of conference authentication schemes is that they reduce the number of messages passed by the conference participants. Conference authentication also has the advantage of generating and distributing the key as the authentication is being undertaken. There are several conference key distribution schemes <ref> [6, 7, 8] </ref>. One of these only performs key distribution [6]. The others perform both key distribution and authentication. Koyama and Ohta proposed a conference authentication called Identity based Conference Key Distribution System (ICKDS) [7]. ICKDS is suited to distributed systems. <p> For more information on how these processes interact with the Authentication server see [5, 12]. 3 Overview of the Generation of the Cryptographic Parameters for the Ring Based Conference Facility The ring based conference authentication service developed for RHODOS is based on the Identity-Based Conference Key Distribution System <ref> [7, 8] </ref>. The ICKDS system is itself based on Diffie and Hellmans public key cryptosystem [3] and Shamirs Identity Based key system [10]. The ICKDS system allows three logical formations to be used: star, ring and mesh.
Reference: [9] <author> J. F. Nunamaker, A. R. Dennis, J. S. Valaich, D. R. Vogel and J. F. George. </author> <title> Electronic Meeting Systems to Support Group Work. </title> <journal> Communications of the ACM, </journal> <volume> 34(7) </volume> <pages> 40-61. </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: Examples of one-way authentication include client login and authentication of a workstation at a boot up stage. Two-way authentication includes user-user, user-server and server-server. Examples of conference authentication are authentication processes carried out for synchronous remote meetings and concurrent group work <ref> [1, 9] </ref>. To carry out conference authentication a series of two-way authentications can be performed. Using this technique, each conference participant generates a key for each other participant.
Reference: [10] <author> A. Shamir. </author> <title> Identity-based Cryptosystems and Signature Scheme. </title> <booktitle> Advances in Cryptology - CRYPTO84 (Lecture Notes in Computer Science No. </booktitle> <volume> 196), </volume> <pages> pages 47-53. </pages> <editor> G. R. Blakely and David Chaum, </editor> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1985. </year>
Reference-contexts: The ICKDS system is itself based on Diffie and Hellmans public key cryptosystem [3] and Shamirs Identity Based key system <ref> [10] </ref>. The ICKDS system allows three logical formations to be used: star, ring and mesh. The star formation had already been implemented at the time of the logical design of the ring based conference system. Thus, the ring based service was merged into the existing authentication service [5, 12].
Reference: [11] <author> W. Toomey. </author> <title> Emulating a RHODOS Process Environment under Unix. </title> <type> Technical Report CS90/49. </type> <institution> Dept. of Computer Science, University College, UNSW, </institution> <month> December </month> <year> 1990. </year>
Reference: [12] <author> M. Wang. </author> <title> The Development and Testing of the Identity-based Conference Key Distribution System for the RHODOS Distributed System. </title> <booktitle> Computer Security -ESORICS 92, Lecture Notes in Computer Science No. </booktitle> <volume> 648, </volume> <pages> pages 209-228. </pages> <publisher> Springer-Verlag, </publisher> <month> November </month> <year> 1992. </year>
Reference-contexts: Whereas in both the ring and mesh, each participant authenticates every other participant, not just the initiator. This accounts for the smaller number of messages and less security of the star. The star formation had already been implemented for RHODOS <ref> [5, 12] </ref>. Due to the lesser security of the star formation, it was decided that another conference authentication facility would be developed for RHODOS, based on the ring formation and the comparison and study of these two systems should be performed. <p> For more information on how these processes interact with the Authentication server see <ref> [5, 12] </ref>. 3 Overview of the Generation of the Cryptographic Parameters for the Ring Based Conference Facility The ring based conference authentication service developed for RHODOS is based on the Identity-Based Conference Key Distribution System [7, 8]. <p> The ICKDS system allows three logical formations to be used: star, ring and mesh. The star formation had already been implemented at the time of the logical design of the ring based conference system. Thus, the ring based service was merged into the existing authentication service <ref> [5, 12] </ref>. The RHODOS Ring-based conference service is provided in two stages. In the first stage a Central Authentication Server (CAS) generates and distributes a set of cryptographic parameters to each workstation when a user successfully logs on. <p> The public system key and both the star-based and ring based signatures are sent to each local users authentication agent. 4 Adapting ICKDS for RHODOS Some important assumptions about the RHODOS environment were made. A full list of these assumptions is given in <ref> [5, 12] </ref>. The relevant assumptions are that RHODOS is a homogeneous distributed operating system (using workstations), and that allows users to communicate via insecure channels. These users are not to be trusted with any cryptographic details, other than their own password. <p> RHODOS will authenticate not only users, but both users and servers. RHODOS assures not only sender authentication, but receiver authentication as well. ICKDS did not take into account message replay, RHODOS overcomes this via timestamps. A more detailed discussion of these extensions is in <ref> [5, 12] </ref>. 5 Logical Design of the RHODOS Ring Based Conference Authentica tion Service The logical design of the ring based conference authentication facility, firstly details how the problem of synchronising the local authentication agents is dealt with. <p> For details on the full set of messages and for details on the other authentication operations see <ref> [12] </ref>. 6.1 Message Specifications M_AS_CONF_INIT: This message belongs to the conference authentication class.It is used by a clients process to initiate an authenticated conference. The client is thus the conference initiator. Source: Client Process Destination: Local ASA. M_AS_CONF_INVITE: This message belongs to the conference authentication class. <p> Thus, from the authentication servers perspective it is interacting with the IPC manager. The design of the authentication service detailed in <ref> [5, 12] </ref> specifies that all ASAs and the CAS uses the same port address. That is, they all use the well known port address defined by P_AUTHENTICATION. This, however, creates problems in the test environment. The test environment consists of four authentication servers running on one physical workstation. <p> The program starts up by asking a user to log in. This request for login is sent via the local ASA to the CAS which verifies the identity of the user using a minimum knowledge protocol (for more details see <ref> [5, 12] </ref>). The program then displays a menu as shown in Figure 15. This user-driven menu allows the selection of four menu items. The selection of the first item allows the user to send or receive a one way authenticated message, this corresponds to auth_msg () (Section 4.2.4).
References-found: 12

