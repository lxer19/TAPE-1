URL: http://www.cs.purdue.edu/homes/pascucci/ps-definitivi/sm-93.ps.gz
Refering-URL: 
Root-URL: 
Title: Product Operator on Cell Complexes  
Author: F. Bernardini V. Ferrucci A. Paoluzzi V. Pascucci 
Address: Via Buonarroti 12, 00185 Roma  
Affiliation: Dip. di Informatica e Sistemistica Universita "La Sapienza"  
Abstract: The intersection of extrusions is a useful tool to generate complex pD models starting from two or more m i D (m i p) cell complexes. This operation is particularly useful in the context of architectural design, where the 3D model of a building may be automatically generated starting from plan views and sections, both represented as 2D cell complexes [8]. In this paper a more general product operator is introduced which allows for the unification of operations like extrusion, standard intersection, intersection of extrusions and Cartesian product of cell-decomposed polyhedra. A naive implementation of such an operator is a hard task even in 3D, as it seems to require an extensive use of Booleans. In this paper a dimension-independent and efficient solution for this problem is given, using only some linear algebra and the Cartesian product of graphs. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Backus, J., Williams, J., Wimmers, E., Lu-cas, P., and Aiken, A. </author> <title> FL language manual, parts 1 and 2. </title> <type> Tech. Rep. </type> <institution> RJ7100 (67163), IBM Almaden Res. Center, </institution> <year> 1989. </year>
Reference-contexts: Products of d-dimensional polyhedra times 1-dimensional polyhedra, as well as the intersection of extrusions operation have been introduced in PLASM, a functional design language [8] strongly inspired from FL <ref> [1] </ref>, where the homomorphism between an algebra of polyhedra and an algebra of programs is being currently explored [7]. In PLASM and in several recent approaches to solid modeling [2,9,5] the reference representation is a cell decomposition. <p> Last but not least, it provides a powerful environment for variational geometry, where shapes are completely parameterized. PLASM can be considered an application shell over FL <ref> [1] </ref>, which is an advanced functional language based on combining forms. FL uses a set of identities| rewriting rules between expressions|for reasoning formally about programs. Simpler equivalent programs can be found at both design and compilation time, with great advantages in style and efficiency of program development.
Reference: [2] <author> Brisson, E. </author> <title> Representing geometric structures in d dimensions: Topology and order. </title> <booktitle> In ACM Symposium on Computational Geometry (New York, </booktitle> <address> NY, 1989), </address> <publisher> ACM Press. </publisher>
Reference: [3] <author> Crampin, M., and Pirani, F. A. E. </author> <title> Applicable Differential Geometry. </title> <publisher> Cambridge University Press, </publisher> <year> 1988. </year>
Reference-contexts: The space of linear functions a is a vector space of dimension d, which is called the dual space of A d , and denoted as A d <ref> [3] </ref>. Instead of defining a convex set as the convex combination of a convexely independent set of points, we prefer to define a convex cell as the set of simultaneous solutions of a set of linear inequalities.
Reference: [4] <author> Gross, J. L., and Tucker, T. W. </author> <title> Topological Graph Theory. </title> <publisher> John Wiley, </publisher> <address> New York, NY, </address> <year> 1987. </year>
Reference-contexts: = t) ^ fi = (h = k) ^ (q s 2 AD q t ) ^ fl = (p h 2 AD p k ) ^ (q s 2 AD q t ) ^ Cartesian graph product The adjacency graph of R is a subgraph of the Cartesian product <ref> [4] </ref> of the adjacency graphs of the operands, with some new arcs. The final graph is obtained by elimination of the nodes corresponding to empty or lower-dimensional cells from the latter. Accordingly to the chosen representation, only nodes corresponding to p-dimensional cells and edges representing (p 1)-adjacencies must be retained.
Reference: [5] <author> Maulik, A. </author> <title> An efficient intersection algorithm for polyhedral cellular decompositions. </title> <booktitle> In ACM Symposium on Solid Modeling Foundations and CAD/CAM Applications (Austin, </booktitle> <address> TX, </address> <year> 1991), </year> <editor> J. Rossignac and J. Turner, Eds., </editor> <publisher> ACM Press, </publisher> <pages> pp. 109-118. </pages>
Reference: [6] <author> Paoluzzi, A., Bernardini, F., Cattani, C., and Ferrucci, V. </author> <title> Dimension-independent modeling with simplicial complexes. </title> <journal> To appear on ACM Transactions on Graphics, </journal> <month> Jan. </month> <year> 1993. </year>
Reference-contexts: Dimension-independent solid modeling requires representations and operations which uniformly apply to objects of dimension 0; 1; 2; 3; . . . ; n. This more abstract viewpoint <ref> [6] </ref> allows to solve in a uniform manner many different geometric problems, like modeling of articulated bodies, piecewise-linear approximation of curved manifolds, graphics representation of multidimensional data and motion encoding.
Reference: [7] <author> Paoluzzi, A., Pascucci, V., and Vicentino, M. </author> <title> More structure and less topology. A programming approach to geometric design. </title> <note> A preliminary version appeared as Tech. Rep. 16-92, </note> <institution> Dip. di In-formatica e Sistemistica, Universita "La Sapienza", Rome, Italy, </institution> <year> 1992. </year>
Reference-contexts: Products of d-dimensional polyhedra times 1-dimensional polyhedra, as well as the intersection of extrusions operation have been introduced in PLASM, a functional design language [8] strongly inspired from FL [1], where the homomorphism between an algebra of polyhedra and an algebra of programs is being currently explored <ref> [7] </ref>. In PLASM and in several recent approaches to solid modeling [2,9,5] the reference representation is a cell decomposition. In this paper we show that to represent the cells as intersection of halfspaces has several advantages. <p> The model illustrated in Figure 1 was produced by the prototype PLASM interpreter. The dimension-independent operators currently implemented in its geometric nucleus <ref> [7] </ref> are the generalized product described here, the extractor of the k-skeleton of a d-complex (0 k d 1), affine transformations and boxing and traversal of structures. <p> We also believe that it may be interesting to study the formal properties of the operation (at least in special cases), and the kind of algebraic structure it defines. E.g. it has been discovered <ref> [7] </ref> that in this setting the operation of extraction of skeletons distributes over the Cartesian product. Such kind of properties may be usefully exploited within an optimizing compiler for a geometric language.
Reference: [8] <author> Paoluzzi, A., and Sansoni, C. </author> <title> Programming language for solid variational geometry. </title> <booktitle> Computer Aided Design 24, 7 (1992), </booktitle> <pages> 349-366. </pages>
Reference-contexts: Products of d-dimensional polyhedra times 1-dimensional polyhedra, as well as the intersection of extrusions operation have been introduced in PLASM, a functional design language <ref> [8] </ref> strongly inspired from FL [1], where the homomorphism between an algebra of polyhedra and an algebra of programs is being currently explored [7]. In PLASM and in several recent approaches to solid modeling [2,9,5] the reference representation is a cell decomposition.
Reference: [9] <author> Rossignac, J., and O'Connor, M. SGC: </author> <title> A dimension-independent model for pointsets with internal structures and incomplete boundaries. In Geometric Modeling for Product Engineering (Rensselaerville, </title> <address> NY, </address> <month> Sept. </month> <year> 1988), </year> <editor> M. J. Wozny, J. Turner, and K. Preiss, Eds., </editor> <booktitle> Proc. of the 1988 IFIP/NSF Workshop on Geometric Mod-elling, North Holland 1990, </booktitle> <pages> pp. 145-180. </pages>
Reference: [10] <author> Williams, J. H., and Wimmers, E. L. </author> <title> An op-mizing compiler based on program transformation. </title> <type> Internal IBM report, </type> <institution> IBM Almaden Res. Center, </institution> <year> 1991. </year>
Reference-contexts: In this context the algebraic properties of the polyhedral operators, e.g. the distributivity of skeleton extractors with respect to the product, can be usefully exploited by the FL optimizing compiler <ref> [10] </ref>. The model illustrated in Figure 1 was produced by the prototype PLASM interpreter. The dimension-independent operators currently implemented in its geometric nucleus [7] are the generalized product described here, the extractor of the k-skeleton of a d-complex (0 k d 1), affine transformations and boxing and traversal of structures.
References-found: 10

