URL: http://www.cs.yale.edu/~kao-ming-yang/kao_sigact_97_general_recurrence.ps
Refering-URL: http://www.cs.yale.edu/~kao-ming-yang/papers.html
Root-URL: http://www.cs.yale.edu
Email: kao@cs.duke.edu  
Title: Multiple-Size Divide-and-Conquer Recurrences  
Author: Ming-Yang Kao 
Address: Durham, NC 27708 U.S.A.  
Affiliation: Department of Computer Science Duke University  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> A. V. Aho, J. E. Hopcroft, and J. D. Ullman. </author> <title> The Design and Analysis of Computer Algorithms. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1974. </year>
Reference-contexts: A special case of this recurrence, namely, k = 1, is discussed in [2, 5] and standard textbooks on algorithms and is used extensively to analyze divide-and-conquer strategies <ref> [1, 4] </ref>. A specific recurrence with k = 2 is used to analyze a divide-and-conquer algorithm for selecting a key with a given rank [1, 3, 4]. fl Copyright c fl 1997 by Ming-Yang Kao. <p> A specific recurrence with k = 2 is used to analyze a divide-and-conquer algorithm for selecting a key with a given rank <ref> [1, 3, 4] </ref>. fl Copyright c fl 1997 by Ming-Yang Kao. <p> The key ingredient of our proof for this theorem is the notion of a characteristic equation. With this new notion, our proof is essentially the same as that of the case with k = 1 <ref> [1, 2, 4, 5] </ref>. This note concentrates on elaborating the characteristic equation's role in our proof by detailing an upper bound proof for a certain case. Once this example is understood, it is straightforward to reconstruct a general proof for Theorem 1.
Reference: [2] <author> J. L. Bentley, D. Haken, and J. B. Saxe. </author> <title> A general method for solving divide-and-conquer recurrences. </title> <journal> SIGACT News, </journal> <volume> 12(3) </volume> <pages> 36-44, </pages> <year> 1980. </year>
Reference-contexts: Thus, the T (n) term on the left-hand side of (1) is defined on T -terms with smaller n, and (2) properly specifies the initial values of T . A special case of this recurrence, namely, k = 1, is discussed in <ref> [2, 5] </ref> and standard textbooks on algorithms and is used extensively to analyze divide-and-conquer strategies [1, 4]. A specific recurrence with k = 2 is used to analyze a divide-and-conquer algorithm for selecting a key with a given rank [1, 3, 4]. fl Copyright c fl 1997 by Ming-Yang Kao. <p> The key ingredient of our proof for this theorem is the notion of a characteristic equation. With this new notion, our proof is essentially the same as that of the case with k = 1 <ref> [1, 2, 4, 5] </ref>. This note concentrates on elaborating the characteristic equation's role in our proof by detailing an upper bound proof for a certain case. Once this example is understood, it is straightforward to reconstruct a general proof for Theorem 1.
Reference: [3] <author> M. Blum, R. W. Floyd, V. Pratt, R. L. Rivest, and R. E. Tarjan. </author> <title> Time bounds for selection. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 7(4) </volume> <pages> 448-461, </pages> <year> 1973. </year>
Reference-contexts: A specific recurrence with k = 2 is used to analyze a divide-and-conquer algorithm for selecting a key with a given rank <ref> [1, 3, 4] </ref>. fl Copyright c fl 1997 by Ming-Yang Kao.
Reference: [4] <author> T. H. Cormen, C. L. Leiserson, and R. L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1991. </year>
Reference-contexts: A special case of this recurrence, namely, k = 1, is discussed in [2, 5] and standard textbooks on algorithms and is used extensively to analyze divide-and-conquer strategies <ref> [1, 4] </ref>. A specific recurrence with k = 2 is used to analyze a divide-and-conquer algorithm for selecting a key with a given rank [1, 3, 4]. fl Copyright c fl 1997 by Ming-Yang Kao. <p> A specific recurrence with k = 2 is used to analyze a divide-and-conquer algorithm for selecting a key with a given rank <ref> [1, 3, 4] </ref>. fl Copyright c fl 1997 by Ming-Yang Kao. <p> The key ingredient of our proof for this theorem is the notion of a characteristic equation. With this new notion, our proof is essentially the same as that of the case with k = 1 <ref> [1, 2, 4, 5] </ref>. This note concentrates on elaborating the characteristic equation's role in our proof by detailing an upper bound proof for a certain case. Once this example is understood, it is straightforward to reconstruct a general proof for Theorem 1.
Reference: [5] <author> G. S. Lueker. </author> <title> Some techniques for solving recurrences. </title> <journal> ACM Computing Surveys, </journal> <volume> 12(4) </volume> <pages> 419-436, </pages> <year> 1980. </year>
Reference-contexts: Thus, the T (n) term on the left-hand side of (1) is defined on T -terms with smaller n, and (2) properly specifies the initial values of T . A special case of this recurrence, namely, k = 1, is discussed in <ref> [2, 5] </ref> and standard textbooks on algorithms and is used extensively to analyze divide-and-conquer strategies [1, 4]. A specific recurrence with k = 2 is used to analyze a divide-and-conquer algorithm for selecting a key with a given rank [1, 3, 4]. fl Copyright c fl 1997 by Ming-Yang Kao. <p> The key ingredient of our proof for this theorem is the notion of a characteristic equation. With this new notion, our proof is essentially the same as that of the case with k = 1 <ref> [1, 2, 4, 5] </ref>. This note concentrates on elaborating the characteristic equation's role in our proof by detailing an upper bound proof for a certain case. Once this example is understood, it is straightforward to reconstruct a general proof for Theorem 1.
References-found: 5

