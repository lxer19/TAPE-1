URL: http://www.cse.ogi.edu/~biggs/xhol.ps
Refering-URL: http://www.cse.ogi.edu/~biggs/
Root-URL: http://www.cse.ogi.edu
Title: A Tree-Based, Graphical Interface for Large Proof Development  
Author: Tom Schubert John Biggs 
Affiliation: Department of Computer Science Portland State University  
Abstract: This paper describes a new X Windows based front end for the HOL theorem proving system, entitled "xhol". The centerpiece of xhol is a graphical display that depicts the entire active proof tree. This display presents not only a road map of what has and hasn't been proved, but also provides the user with clues about what techniques or tactics may be useful in proving the remaining unsolved subgoals. Support is provided for both the standard and Prooftree subgoal packages running on top of HOL88 and we anticipate the release of a version for HOL90 shortly. The tool also integrates enhancements to the goals package that allows the user to control the massive volume of output generated by large proof efforts. The source code is freely available and requires only the X Toolkit that is bundled with the X Window System. We believe the design general enough to support incorporation of extensions by other developers.
Abstract-found: 1
Intro-found: 1
Reference: [ALL + 93] <author> Tej Arora, Tony Leung, Karl Levitt, Tom Schubert, and Phillip Windley. </author> <title> Report on the UCD microcoded VIPER verification project. </title> <booktitle> 1993 International Workshop on Higher Order Logic Theorem Proving and its Applications, </booktitle> <year> 1993. </year>
Reference-contexts: A central motivation for this project was to support the needs of large proof development. HOL currently provides little support for such efforts, as experienced during the UCD Viper proof project <ref> [ALL + 93] </ref>. Subgoal packages such as Prooftree have developed useful proof administration facilities, but have not addressed managing the immense volume of output produced during large interactive proofs where assumption lists can easily grow to fill several hundred lines.
Reference: [Cen91] <institution> The Centar System, </institution> <year> 1991. </year>
Reference-contexts: We chose to write xhol using X windows and the Xt Intrinsics toolkit [MAS91] rather than as an interface on top of another system such as Centar <ref> [Cen91] </ref> or the Cornell Synthesizer Generator [RT89]. <p> These packages have investigated techniques to perform subterm manipulation. * The interface described in [The93] and [TBK92]. This interface supports a number of useful proof construction ideas and is built on the Centar interface system <ref> [Cen91] </ref>. * Tree based theorem proving interfaces. This style of interaction is quite natural and reflects the breaking down of goals into a collection of subgoals.
Reference: [FAY91] <author> George Fink, Myla Archer, and Lie Yang. </author> <title> PM: A proof manager for HOL and other provers. </title> <booktitle> Proceedings of the 1991 International Workshop on the HOL Theorem Proving System and its Applications, </booktitle> <month> August </month> <year> 1991. </year>
Reference-contexts: This interface supports a number of useful proof construction ideas and is built on the Centar interface system [Cen91]. * Tree based theorem proving interfaces. This style of interaction is quite natural and reflects the breaking down of goals into a collection of subgoals. An emacs tree interface <ref> [FAY91] </ref> and two tree based alternatives to the system default stack based goals package are available [Fle90, Kal91b]. 2 XHOL Features The xhol program allows interaction with HOL through both keyboard and mouse-selection input.
Reference: [Fle90] <author> R. A. Fleming. </author> <title> An experimental new subgoal package, </title> <year> 1990. </year>
Reference-contexts: This style of interaction is quite natural and reflects the breaking down of goals into a collection of subgoals. An emacs tree interface [FAY91] and two tree based alternatives to the system default stack based goals package are available <ref> [Fle90, Kal91b] </ref>. 2 XHOL Features The xhol program allows interaction with HOL through both keyboard and mouse-selection input. The display provides five paned areas: a toolbar, an edit window, an output window, 3 a goal window, and a tree window. An example display appears in Appendix B 2 .
Reference: [Kal91a] <author> Sara Kalvala. </author> <title> Developing an interface for HOL. </title> <booktitle> Proceedings of the 1991 International Workshop on the HOL Theorem Proving System and its Applications, </booktitle> <month> August </month> <year> 1991. </year>
Reference-contexts: This widget set provide a sufficient basis for xhol development. 1.2 Related Work During the past several years, a number of user interfaces and proof support packages have been developed for the HOL theorem proving system. In <ref> [Kal91a] </ref>, three distinct interface areas were listed as amenable to improvement by an interface: help information, term surgery, and proof management. Several projects have investigated these issues. A partial list includes: * The xholhelp and the Theorem Retrieval System utilities.
Reference: [Kal91b] <author> Sara Kalvala. </author> <title> A New Subgoal Package for HOL. </title> <institution> University of Cambridge, Computer Lab, </institution> <year> 1991. </year>
Reference-contexts: This enhanced goal package was very helpful during the Viper proof and has been useful in other similar efforts. The interface also supports the multiple proof tree functions available with the Prooftree subgoal package <ref> [Kal91b] </ref>. 1.1 Approach We have incorporated a number of ideas from other packages in xhol, while minimizing the amount of ML code needed to support xhol. <p> This style of interaction is quite natural and reflects the breaking down of goals into a collection of subgoals. An emacs tree interface [FAY91] and two tree based alternatives to the system default stack based goals package are available <ref> [Fle90, Kal91b] </ref>. 2 XHOL Features The xhol program allows interaction with HOL through both keyboard and mouse-selection input. The display provides five paned areas: a toolbar, an edit window, an output window, 3 a goal window, and a tree window. An example display appears in Appendix B 2 .
Reference: [KW89] <author> Stephen G. Kochan and Patrick H. Wood, </author> <title> editors. UNIX Networking. </title> <publisher> Haden Books, </publisher> <year> 1989. </year>
Reference-contexts: less likely to be as portable as one built on Xt Intrinsics, which is included in the X Window System. 2 The X Window System: The X Window System was developed at the Massachusetts Institute of Technology (MIT) to provide a hierarchy of resizable windows that support high-performance, device-independent graphics <ref> [KW89] </ref>. Unlike most window systems, X does not impose stylistic constraints on the construction of a user interface. In fact, X is really more a network protocol than a conventional window system. This protocol basis and portability has lead to X becoming an industry de facto standard.
Reference: [MAS91] <author> Joel McCormack, Paul Asente, and Ralph Swick. </author> <title> X Toolkit Intrinsics | C Language Interface, X Window System, X Version 11, Release 5. </title> <publisher> MIT X Consortium, </publisher> <year> 1991. </year>
Reference-contexts: Large proofs demand a significant amount of memory and the cost of swapping can be very expensive, so moving the interface to another machine can be quite benefical. We chose to write xhol using X windows and the Xt Intrinsics toolkit <ref> [MAS91] </ref> rather than as an interface on top of another system such as Centar [Cen91] or the Cornell Synthesizer Generator [RT89].
Reference: [Pet91] <author> Chris D. Peterson. </author> <title> Athena Widget Set | C Language Interface, X Window System, X Version 11, Release 5. </title> <publisher> MIT X Consortium, </publisher> <year> 1991. </year>
Reference-contexts: Intrinsics attempts to be "policy-free," delegating policy, consistency, and style decisions to the application environment and widget set. While there is no standard widget set, MIT does provide sample implementation of a widget set built upon the Xt Intrinsics, called the Athena widget sets <ref> [Pet91] </ref>. This widget set provide a sufficient basis for xhol development. 1.2 Related Work During the past several years, a number of user interfaces and proof support packages have been developed for the HOL theorem proving system.
Reference: [RT89] <author> Thomas Reps and Tim Teitelbaum. </author> <title> The Synthesizer Generator. </title> <publisher> Springer Verlag, </publisher> <year> 1989. </year>
Reference-contexts: We chose to write xhol using X windows and the Xt Intrinsics toolkit [MAS91] rather than as an interface on top of another system such as Centar [Cen91] or the Cornell Synthesizer Generator <ref> [RT89] </ref>.
Reference: [TBK92] <author> Laurent Thery, Yves Bertot, and Gilles Kahn. </author> <title> Real theorem provers deserve real user-interfaces. </title> <booktitle> Proceedings of the Fifth ACM SIGSOFT Symposium on Software Development Environments, </booktitle> <month> December </month> <year> 1992. </year>
Reference-contexts: More recently, the xmosaic HOL information server developed at BYU provides access to on-line manuals, technical reports, and keyword search access to info-hol mailing group messages [Win93]. * The Windows Library and xholterm. These packages have investigated techniques to perform subterm manipulation. * The interface described in [The93] and <ref> [TBK92] </ref>. This interface supports a number of useful proof construction ideas and is built on the Centar interface system [Cen91]. * Tree based theorem proving interfaces. This style of interaction is quite natural and reflects the breaking down of goals into a collection of subgoals.
Reference: [The93] <author> Laurent Thery. </author> <title> A proof development system for HOL. </title> <booktitle> Proceedings of the 1993 International Workshop on the HOL Theorem Proving System and its Applications, </booktitle> <month> September </month> <year> 1993. </year>
Reference-contexts: More recently, the xmosaic HOL information server developed at BYU provides access to on-line manuals, technical reports, and keyword search access to info-hol mailing group messages [Win93]. * The Windows Library and xholterm. These packages have investigated techniques to perform subterm manipulation. * The interface described in <ref> [The93] </ref> and [TBK92]. This interface supports a number of useful proof construction ideas and is built on the Centar interface system [Cen91]. * Tree based theorem proving interfaces. This style of interaction is quite natural and reflects the breaking down of goals into a collection of subgoals.
Reference: [Win90] <author> Phillip J. Windley. </author> <title> Using HOL inside EMACS. </title> <type> Technical Report CS-90-01, </type> <institution> University of Idaho, </institution> <year> 1990. </year>
Reference-contexts: We wished to: * Provide experienced users with a set of visual tools to speed up interactions with HOL. * Assist new users in the development of proofs. * Provide an interface similar to and compatible with the Emacs interface <ref> [Win90] </ref>. Users may need to work on both bitmapped and non bitmapped displays. Certainly in academic settings, many users frequently wish to work over relatively low speed dialup lines that cannot adequately support graphic interfaces.
Reference: [Win93] <author> Phillip J. Windley. </author> <title> Documentation for the HOL theorem proving system. </title> <note> http://lal.cs.byu.edu/lal/hol-documentation.html, 1993. 12 </note>
Reference-contexts: These tools are extremely useful for obtaining ML function documentation and finding already proven HOL theorems. More recently, the xmosaic HOL information server developed at BYU provides access to on-line manuals, technical reports, and keyword search access to info-hol mailing group messages <ref> [Win93] </ref>. * The Windows Library and xholterm. These packages have investigated techniques to perform subterm manipulation. * The interface described in [The93] and [TBK92]. This interface supports a number of useful proof construction ideas and is built on the Centar interface system [Cen91]. * Tree based theorem proving interfaces.
References-found: 14

