URL: ftp://softlib.rice.edu/pub/CRPC-TRs/reports/CRPC-TR93434.ps.gz
Refering-URL: http://www.crpc.rice.edu/CRPC/softlib/TRs_online.html
Root-URL: 
Email: email: [desprez,ferreira]@lip.ens-lyon.fr  e-mail: btouranc@cs.utk.edu  
Title: Efficient Communication Operations in Reconfigurable Parallel Computers  
Author: F. Desprez A. Ferreira B. Tourancheau zx 
Keyword: Reconfiguration, broadcast, scattering, gossiping, communications, distributed memory parallel computers  
Address: 46, Allee d'Italie 69364 LYON Cedex 07 France  107, Ayres Hall Knoxville, TN 37996-1301 USA  
Affiliation: CNRS Laboratoire LIP, CNRS-URA 1398 ENS Lyon  The University of Tennessee Computer Science Department  
Abstract: Reconfiguration is largely an unexplored property in the context of parallel models of computation. However, it is a powerful concept as far as massively parallel architectures are concerned, because it overcomes the constraints due to the bissection width arising in most of distributed memory machines. In this paper, we show how to use reconfiguration in order to improve communication operations that are widely used in parallel applications. We propose quasi-optimal algorithms for broadcasting, scattering, gossiping and multi-scattering. 
Abstract-found: 1
Intro-found: 1
Reference: [ABB + 91] <author> J.M. Adamo, J. Bonneville, C. Bonello, P. Moukeli, N. Alhafez, and L. Trejo. </author> <title> Developing a High Level Programming Environment for Supernode. </title> <booktitle> In Proceedings of Transputer Application - Glasgow, (UK), </booktitle> <pages> pages 632-637. </pages> <publisher> IOS Press, </publisher> <year> 1991. </year>
Reference-contexts: The DAMP project [BBM91] implements dynamic reconfiguration using a static interconnection network and dynamic connections between transputers in different modules. This is close to circuit switching communication protocol where a path is set before communication occurs. The CNET environment <ref> [ABB + 91] </ref> uses a phase based protocol where topologies are set before the start of the current phase, being therefore quasi-static [BBM91, BDT93]. The target architecture is a SuperNode machine [Wai90]. Concerning optical networks, the current trend is to use free space optics, with reconfiguration, for parallel computing.
Reference: [BBM91] <author> A. Bauch, R. Braam, and E. Maehle. </author> <title> DAMP ADynamic Reconfigurable Multiproces sor System with a Distributed Switching Network. </title> <booktitle> In Proceedings of the 2nd European Distributed Memory Computing Conference - Munich, Lecture Notes in Computer Science, </booktitle> <pages> pages 495-504. </pages> <publisher> Springer Verlag, </publisher> <month> April </month> <year> 1991. </year>
Reference-contexts: We close the paper with a cross-analysis of all the algorithms and ways for further research. 2 Reconfiguration A classification of the reconfiguration capabilities of today's multicomputers is given in <ref> [BBM91, BDT93] </ref>. Parallel distributed memory machines can be classified in 4 categories, depending on the reconfiguration capabilities of their interconnection network, as follows. * static: the interconnection network is fixed and cannot be modified. <p> In the following we describe some related works concerning reconfiguring parallel computers. The Parsifal T-Rack [KA91, TM90, JM89] implements a partial reconfiguration. Processors are connected in a ring of 64 nodes and the remaining links can be connected dynamically through a switching network. The DAMP project <ref> [BBM91] </ref> implements dynamic reconfiguration using a static interconnection network and dynamic connections between transputers in different modules. This is close to circuit switching communication protocol where a path is set before communication occurs. <p> This is close to circuit switching communication protocol where a path is set before communication occurs. The CNET environment [ABB + 91] uses a phase based protocol where topologies are set before the start of the current phase, being therefore quasi-static <ref> [BBM91, BDT93] </ref>. The target architecture is a SuperNode machine [Wai90]. Concerning optical networks, the current trend is to use free space optics, with reconfiguration, for parallel computing. Designs like the Electro-Optical Crossbar have been proposed [IKYI], that uses a hybrid reconfiguration technique for interconnecting processors.
Reference: [BDT93] <author> C. Bonello, F. Desprez, and B. Tourancheau. </author> <title> Parallel BLAS and BLACS for Numer ical Algorithms on a Reconfigurable Network. </title> <editor> In S. Atkins and A.S. Wagner, editors, </editor> <booktitle> NATUG6 - Transputer Research and Applications 6, </booktitle> <pages> pages 21-38. </pages> <publisher> IOS Press, </publisher> <year> 1993. </year>
Reference-contexts: We close the paper with a cross-analysis of all the algorithms and ways for further research. 2 Reconfiguration A classification of the reconfiguration capabilities of today's multicomputers is given in <ref> [BBM91, BDT93] </ref>. Parallel distributed memory machines can be classified in 4 categories, depending on the reconfiguration capabilities of their interconnection network, as follows. * static: the interconnection network is fixed and cannot be modified. <p> This is close to circuit switching communication protocol where a path is set before communication occurs. The CNET environment [ABB + 91] uses a phase based protocol where topologies are set before the start of the current phase, being therefore quasi-static <ref> [BBM91, BDT93] </ref>. The target architecture is a SuperNode machine [Wai90]. Concerning optical networks, the current trend is to use free space optics, with reconfiguration, for parallel computing. Designs like the Electro-Optical Crossbar have been proposed [IKYI], that uses a hybrid reconfiguration technique for interconnecting processors. <p> Several models can be used for the reconfiguration cost. We could, for instance, assume that the reconfiguration time is negligible in comparison to communications but unfortunately this is not realistic. 3 Previous experiments with reconfigurable parallel computers <ref> [BDT93, DT92] </ref> taught us that the reconfiguration cost in existing architectures is best modeled linearly in the number of reconfigured links, i.e. for n links set, the cost of reconfiguration is t r = fi r + nt r . 4 Reconfigurating Communication Pattern In this section, we describe the Reconfigurating <p> endfor else if i &lt; (k + 1) l+1 I'm connected at this step else /* I'm not concerned at this step */ endif endif endfor 5.1 RCP Scattering algorithm The scattering operation, or personalized one-to-all, is used for instance in the distribution of data on a set of processors <ref> [BDT93, Ede91, JH89] </ref>. We assume that node 0 owns N packets of size L that have to be delivered one to each node in the system. In the first step of the algorithm, node 0 divide the set of data in k + 1 equal parts.
Reference: [DT92] <author> F. Desprez and B. Tourancheau. </author> <title> Parallel BLAS and BLACS on a Reconfigurable Net work. </title> <editor> In M. Garbey and H. Kaper, editors, </editor> <title> NATO Advanced Workshop on Asymptotic-Induced Numerical Methods for Partial Differential Equations, Critical Parameters and Domain Decomposition Beaune. </title> <booktitle> NATO ASI Series, </booktitle> <year> 1992. </year>
Reference-contexts: Several models can be used for the reconfiguration cost. We could, for instance, assume that the reconfiguration time is negligible in comparison to communications but unfortunately this is not realistic. 3 Previous experiments with reconfigurable parallel computers <ref> [BDT93, DT92] </ref> taught us that the reconfiguration cost in existing architectures is best modeled linearly in the number of reconfigured links, i.e. for n links set, the cost of reconfiguration is t r = fi r + nt r . 4 Reconfigurating Communication Pattern In this section, we describe the Reconfigurating
Reference: [Ede91] <author> A. Edelman. </author> <title> Optimal Matrix Transposition and Bit Reversal on Hypercubes: All to All Personalized Communication. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 11 </volume> <pages> 328-331, </pages> <year> 1991. </year>
Reference-contexts: endfor else if i &lt; (k + 1) l+1 I'm connected at this step else /* I'm not concerned at this step */ endif endif endfor 5.1 RCP Scattering algorithm The scattering operation, or personalized one-to-all, is used for instance in the distribution of data on a set of processors <ref> [BDT93, Ede91, JH89] </ref>. We assume that node 0 owns N packets of size L that have to be delivered one to each node in the system. In the first step of the algorithm, node 0 divide the set of data in k + 1 equal parts. <p> N k t r ; N k t r = log k+1 (N ) fi r + 2 and the communication cost is given by: T ata h1 X = hfi + k = log k+1 (N )fi + k 5.4 Personalized all-to-all algorithm This operation, also called total exchange <ref> [Ede91] </ref> or multi-scattering [FL91], is used, for instance, in the transposition of a matrix stored by rows or columns [JH87].
Reference: [FL91] <author> P. Fraigniaud and E. Lazard. </author> <title> Methods and Problems of Communication in Usual Net works. </title> <type> Technical Report 91-33, </type> <institution> Laboratoire LIP, </institution> <year> 1991. </year>
Reference-contexts: Each processor has independent units for communication and computation. Thus, on the same node it is possible to perform simultaneously, bidirectional data transfer on each link (full duplex and k-port assumptions <ref> [FL91] </ref>) and arithmetic operations. Each node is assumed to have k links (0..k 1) to connect with other nodes. This assumption allows us to realize every topology with a degree less or equal to k. We assume that k t P . The communication protocol is a "point-to-point rendez-vous". <p> It is used for example, to load the same code or data, or to communicate results on a network of processors. This 5 operation has been extensively studied for distributed memory architectures <ref> [FL91, JH89, SW87] </ref> under different models of communication [FL91]. 5.2.1 Nave algorithm If we imagine that in the RCP, node 0 has a message to be broadcast, then a straightforward broadcast algorithm is obtained, where at each step, every reached node sends the message along its k links. <p> It is used for example, to load the same code or data, or to communicate results on a network of processors. This 5 operation has been extensively studied for distributed memory architectures [FL91, JH89, SW87] under different models of communication <ref> [FL91] </ref>. 5.2.1 Nave algorithm If we imagine that in the RCP, node 0 has a message to be broadcast, then a straightforward broadcast algorithm is obtained, where at each step, every reached node sends the message along its k links. <p> This operation is sometimes called gossiping <ref> [FL91] </ref> or complete broadcast [Sei89]. This operation can be efficiently implemented on a reconfigurable network using several steps of all-to-all operations on K k+1 topologies. The number of steps remains the same as for the one-to-all type operations (broadcast and scattering). <p> r ; N k t r = log k+1 (N ) fi r + 2 and the communication cost is given by: T ata h1 X = hfi + k = log k+1 (N )fi + k 5.4 Personalized all-to-all algorithm This operation, also called total exchange [Ede91] or multi-scattering <ref> [FL91] </ref>, is used, for instance, in the transposition of a matrix stored by rows or columns [JH87].
Reference: [IKYI] <author> H. Ito, N. Komagata, H. Yamada, and Humio Inaba. </author> <title> New structure of laser diode and light emitting diode based on coaxial transverse junction. </title> <type> Technical report, </type> <institution> Research Institute of Electrical Communication, Tohoku University, </institution> <address> Sendai 980, Japan. </address>
Reference-contexts: The target architecture is a SuperNode machine [Wai90]. Concerning optical networks, the current trend is to use free space optics, with reconfiguration, for parallel computing. Designs like the Electro-Optical Crossbar have been proposed <ref> [IKYI] </ref>, that uses a hybrid reconfiguration technique for interconnecting processors. There are N processors, each located in a distinct row and column of the N fi N processing layer.
Reference: [JH87] <author> S.L. Johnsson and C.T. Ho. </author> <title> Algorithms for Matrix Transposition on Boolean n-cube Configured Ensemble Architectures. </title> <type> Technical Report YALEU/DCS/TR-572, </type> <institution> Department of Computer Science - Yale University, </institution> <month> September </month> <year> 1987. </year>
Reference-contexts: r fi t 100 s 11:5 s 0:88 s/byte Notice that for small messages ( 20 bytes) the splitting phase is not recommended. 9 5.3 All-to-all algorithm The all-to-all operation is usually very costly and is used in many parallel algorithms when all the processors have to exchange their data <ref> [JH87] </ref>. This operation is sometimes called gossiping [FL91] or complete broadcast [Sei89]. This operation can be efficiently implemented on a reconfigurable network using several steps of all-to-all operations on K k+1 topologies. The number of steps remains the same as for the one-to-all type operations (broadcast and scattering). <p> the communication cost is given by: T ata h1 X = hfi + k = log k+1 (N )fi + k 5.4 Personalized all-to-all algorithm This operation, also called total exchange [Ede91] or multi-scattering [FL91], is used, for instance, in the transposition of a matrix stored by rows or columns <ref> [JH87] </ref>.
Reference: [JH89] <author> S.L. Johnsson and C.T. Ho. </author> <title> Optimum Broadcasting and Personalized Communication in Hypercubes. </title> <journal> IEEE Transaction on Computers, </journal> <volume> 9(38) </volume> <pages> 1249-1268, </pages> <year> 1989. </year>
Reference-contexts: endfor else if i &lt; (k + 1) l+1 I'm connected at this step else /* I'm not concerned at this step */ endif endif endfor 5.1 RCP Scattering algorithm The scattering operation, or personalized one-to-all, is used for instance in the distribution of data on a set of processors <ref> [BDT93, Ede91, JH89] </ref>. We assume that node 0 owns N packets of size L that have to be delivered one to each node in the system. In the first step of the algorithm, node 0 divide the set of data in k + 1 equal parts. <p> It is used for example, to load the same code or data, or to communicate results on a network of processors. This 5 operation has been extensively studied for distributed memory architectures <ref> [FL91, JH89, SW87] </ref> under different models of communication [FL91]. 5.2.1 Nave algorithm If we imagine that in the RCP, node 0 has a message to be broadcast, then a straightforward broadcast algorithm is obtained, where at each step, every reached node sends the message along its k links.
Reference: [JM89] <author> P. Jones and A. Murta. </author> <title> Practical Experience of Run-time Link Reconfiguration in a Multi-transputer Machine. In Concurrency: </title> <journal> Practice and Experience, </journal> <volume> volume 1. </volume> <publisher> John Wiley and sons, Ltd, </publisher> <month> December </month> <year> 1989. </year>
Reference-contexts: These architectures depend on which reconfiguration model they implement. In the following we describe some related works concerning reconfiguring parallel computers. The Parsifal T-Rack <ref> [KA91, TM90, JM89] </ref> implements a partial reconfiguration. Processors are connected in a ring of 64 nodes and the remaining links can be connected dynamically through a switching network. The DAMP project [BBM91] implements dynamic reconfiguration using a static interconnection network and dynamic connections between transputers in different modules.
Reference: [JMM92] <editor> D.B. Johnson, F. Makedon, and P. Metaxas, editors. </editor> <booktitle> Proc. of the DAGS/PC symp. </booktitle> <year> 1992. </year>
Reference-contexts: 1 Introduction For massively parallel architectures, the hardware complexity of the interconnection network is much higher than that of the processing units: "the interconnection network employs 99% of the hardware involved" <ref> [JMM92] </ref>. Moreover, due to the communication-intensive nature of most computational tasks, their performance depends heavily on the underlying interconnection network. Reconfiguration is largely an unexplored property in the context of parallel models of computation.
Reference: [KA91] <author> A.E. Knowles and N.N. Avramov. </author> <title> A Message Passing System for a Network of Trans puters. </title> <editor> In K. Boyanov, editor, </editor> <booktitle> Parallel and Distributed Processing, </booktitle> <pages> pages 27-39. </pages> <publisher> Elsevier Science Publishers B.V. (North-Holland), </publisher> <year> 1991. </year>
Reference-contexts: These architectures depend on which reconfiguration model they implement. In the following we describe some related works concerning reconfiguring parallel computers. The Parsifal T-Rack <ref> [KA91, TM90, JM89] </ref> implements a partial reconfiguration. Processors are connected in a ring of 64 nodes and the remaining links can be connected dynamically through a switching network. The DAMP project [BBM91] implements dynamic reconfiguration using a static interconnection network and dynamic connections between transputers in different modules.
Reference: [Sei89] <author> S.R. Seidel. </author> <title> Circuit-Switched vs. Store and Forward Solutions to Symmetric Communi cation Problems. </title> <booktitle> In HCCA 4, </booktitle> <year> 1989. </year> <month> 12 </month>
Reference-contexts: This operation is sometimes called gossiping [FL91] or complete broadcast <ref> [Sei89] </ref>. This operation can be efficiently implemented on a reconfigurable network using several steps of all-to-all operations on K k+1 topologies. The number of steps remains the same as for the one-to-all type operations (broadcast and scattering).
Reference: [SS89] <author> Y. Saad and M.H. Schultz. </author> <title> Data Communication in Parallel Architectures. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 6 </volume> <pages> 115-135, </pages> <year> 1989. </year>
Reference-contexts: The time needed to communicate a message of size L between two processors is modeled as a linear function of the start-up time fi, the length L and the propagation time t of the communication channel. Here we shall use the communication cost as defined in <ref> [SS89] </ref>: (t com = fi + Lt ). Several models can be used for the reconfiguration cost.
Reference: [SW87] <author> Q.F. Stout and B. Wagar. </author> <title> Intensive Hypercube Communications. </title> <type> Technical report, </type> <institution> University of Michigan Computing Research Laboratory, </institution> <year> 1987. </year>
Reference-contexts: It is used for example, to load the same code or data, or to communicate results on a network of processors. This 5 operation has been extensively studied for distributed memory architectures <ref> [FL91, JH89, SW87] </ref> under different models of communication [FL91]. 5.2.1 Nave algorithm If we imagine that in the RCP, node 0 has a message to be broadcast, then a straightforward broadcast algorithm is obtained, where at each step, every reached node sends the message along its k links.
Reference: [TCS88] <author> X. Thibault, D. Comte, and P. Siron. </author> <title> A Reconfigurable Optical Interconnection Network for Highly Parallel Architecture. </title> <booktitle> In Frontiers of Massively Parallel Computation. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1988. </year>
Reference-contexts: Therefore, since the grating angles are predefined, the reconfiguration time of this design is bounded by the laser switching time, which is in the order of nano-seconds using Gallium Arsenide (GaAs) technology. The Milord project from the ONERA/CERT <ref> [TCS88] </ref> uses optical technology for the switching network of a transputer based machine. It implements phases model of reconfiguration due to the cost of the switching cost. The optical crossbar is based on a matrix-vector concept using Spacial Light Modulator devices.
Reference: [TM90] <author> T. Theoharis and J.J. Modi. </author> <title> Implementation of Matrix Multiplication on the T-RACK. </title> <journal> Parallel Computing, </journal> <volume> 14 </volume> <pages> 229-233, </pages> <year> 1990. </year>
Reference-contexts: These architectures depend on which reconfiguration model they implement. In the following we describe some related works concerning reconfiguring parallel computers. The Parsifal T-Rack <ref> [KA91, TM90, JM89] </ref> implements a partial reconfiguration. Processors are connected in a ring of 64 nodes and the remaining links can be connected dynamically through a switching network. The DAMP project [BBM91] implements dynamic reconfiguration using a static interconnection network and dynamic connections between transputers in different modules.
Reference: [Wai90] <author> P. Waille. </author> <title> Introduction a l'Architecture des Machines Supernode. </title> <type> Technical Report RT-56, </type> <institution> LGI-IMAG, </institution> <month> Februar </month> <year> 1990. </year> <month> 13 </month>
Reference-contexts: The CNET environment [ABB + 91] uses a phase based protocol where topologies are set before the start of the current phase, being therefore quasi-static [BBM91, BDT93]. The target architecture is a SuperNode machine <ref> [Wai90] </ref>. Concerning optical networks, the current trend is to use free space optics, with reconfiguration, for parallel computing. Designs like the Electro-Optical Crossbar have been proposed [IKYI], that uses a hybrid reconfiguration technique for interconnecting processors.
References-found: 18

