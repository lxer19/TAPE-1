URL: http://www.cs.umd.edu/projects/bdisk/inyourface.ps
Refering-URL: http://www.cs.umd.edu/projects/bdisk/papers.html
Root-URL: 
Email: franklin@cs.umd.edu  sbz@cs.brown.edu  
Title: Data In Your Face: Push Technology in Perspective  
Author: Michael Franklin Stan Zdonik 
Affiliation: University of Maryland  Brown University  
Abstract: Push technology has recently generated a tremendous amount of media attention, commercial activity, and controversy. The wide range of opinions on push is understandable given that it represents a major departure from the way distributed information systems have traditionally been built. Adding to the noise, however, is confusion about the basic principles of push and where it fits in to the world of data delivery. For example, many discussions on the topic blur the distinction between push and broadcast. We argue that this confusion stems from two fundamental causes: First, push is just one dimension of a larger design space of data delivery mechanisms. Second, networked informationsystems can employ different data delivery options between different sets of information producers and consumers. In this short paper we characterize the design space for dissemination-based information systems and applications, and show how current push solutions fit into this space. We then use this framework highlight how the implementation of current Internet-based push solutions differs from the appearance that they present to users. 
Abstract-found: 1
Intro-found: 1
Reference: [Acha95a] <author> S. Acharya, R. Alonso, M. Franklin, S. Zdonik, </author> <title> Broadcast Disks: Data Management for Asymmetric Communication Environments, </title> <booktitle> ACM SIGMOD Conf., </booktitle> <address> San Jose, </address> <month> May, </month> <year> 1995. </year>
Reference-contexts: Such digests allow users to follow a mailing list without being continually interrupted by individual messages. There have also been many systems that use Periodic Push over a broadcast or multicast link. These include TeleText [Amma85, Wong88], DataCycle [Herm87], Broadcast Disks <ref> [Acha95a, Acha95b] </ref> and mobile databases [Imie94]. 2.3 End-to-End Considerations The second source of confusion about push technology is the fact that networked information systems typically contain many interconnected nodes.
Reference: [Acha95b] <author> S. Acharya, M. Franklin, S. Zdonik, </author> <title> Dissemination-based Data Delivery Using Broadcast Disks, </title> <journal> IEEE Personal Communications, </journal> <volume> 2(6), </volume> <month> December, </month> <year> 1995. </year>
Reference-contexts: Such digests allow users to follow a mailing list without being continually interrupted by individual messages. There have also been many systems that use Periodic Push over a broadcast or multicast link. These include TeleText [Amma85, Wong88], DataCycle [Herm87], Broadcast Disks <ref> [Acha95a, Acha95b] </ref> and mobile databases [Imie94]. 2.3 End-to-End Considerations The second source of confusion about push technology is the fact that networked information systems typically contain many interconnected nodes.
Reference: [Acha97] <author> S. Acharya, M. Franklin, S. Zdonik, </author> <title> Balancing Push and Pull for Data Broadcast, </title> <booktitle> ACM SIGMOD Conf., </booktitle> <year> 1997. </year>
Reference-contexts: We discuss several of the mechanisms below. Aperiodic Pull Traditional request/response mechanisms use aperiodic pull over a unicast connection. If instead, a 1-to-N connection is used, then clients can snoop on the requests made by other clients, and obtain data that they haven't explicitly asked for (e.g, see <ref> [Acha97, Akso98] </ref>). Periodic Pull In some applications, such as remote sensing, a system may periodically send requests to other sites to obtain status information or to detect changed values.
Reference: [Akso98] <author> D. Aksoy, M. Franklin, </author> <title> Scheduling for Large-Scale On-Demand Data Broadcasting, </title> <booktitle> Proc. IEEE INFO-COM Conf., </booktitle> <address> San Francisco, </address> <month> March, </month> <year> 1998. </year>
Reference-contexts: We discuss several of the mechanisms below. Aperiodic Pull Traditional request/response mechanisms use aperiodic pull over a unicast connection. If instead, a 1-to-N connection is used, then clients can snoop on the requests made by other clients, and obtain data that they haven't explicitly asked for (e.g, see <ref> [Acha97, Akso98] </ref>). Periodic Pull In some applications, such as remote sensing, a system may periodically send requests to other sites to obtain status information or to detect changed values.
Reference: [Amma85] <author> M. Ammar, J. Wong, </author> <title> The Design of Teletext Broadcast Cycles, Perf. Evaluation, </title> <month> 5 </month> <year> (1985). </year>
Reference-contexts: Examples range from newspapers, to telephones, to radio and television, to E-mail. Early work on using computer networks for pushing data was performed in the 1980's. The Boston Community Information System at MIT [Giff90], Teletext systems for distributing data over broadcast media <ref> [Amma85, Wong88] </ref>, and the Datacycle database machine [Herm87], are all examples of systems that incorporated some form of push technology. <p> Such digests allow users to follow a mailing list without being continually interrupted by individual messages. There have also been many systems that use Periodic Push over a broadcast or multicast link. These include TeleText <ref> [Amma85, Wong88] </ref>, DataCycle [Herm87], Broadcast Disks [Acha95a, Acha95b] and mobile databases [Imie94]. 2.3 End-to-End Considerations The second source of confusion about push technology is the fact that networked information systems typically contain many interconnected nodes.
Reference: [Fran97] <author> M. Franklin, S. Zdonik, </author> <booktitle> A Framework for Scalable Dissemination-Based Information Systems ACM OOPSLA Conf., </booktitle> <address> Atlanta, </address> <month> October, </month> <year> 1997. </year> <month> 5 </month>
Reference-contexts: We then describe why it is often inappropriate to refer to complex distributed systems as simply push-based or pull-based. A more detailed discussion of these issues can be found in <ref> [Fran97] </ref>. 2.1 Options for Data Delivery Support for different styles of data delivery allows a distributed information system to be optimized for various server, client, network, data, and application properties.
Reference: [Giff90] <author> D. Gifford, </author> <title> Polychannel Systems for Mass Digital Communication, </title> <journal> CACM, </journal> <volume> 33(2), </volume> <month> February, </month> <year> 1990. </year>
Reference-contexts: Push technology has been around in various forms for as long as people have been communicating. Examples range from newspapers, to telephones, to radio and television, to E-mail. Early work on using computer networks for pushing data was performed in the 1980's. The Boston Community Information System at MIT <ref> [Giff90] </ref>, Teletext systems for distributing data over broadcast media [Amma85, Wong88], and the Datacycle database machine [Herm87], are all examples of systems that incorporated some form of push technology.
Reference: [Glan96] <author> D. Glance, </author> <title> Multicast Support for Data Dissemination in OrbixTalk, </title> <journal> IEEE Data Engineering Bulletin, </journal> <volume> 19(3), </volume> <month> Sept., </month> <year> 1996. </year>
Reference-contexts: Most existing Web or Internet-based push systems are actually implemented using Periodic Pull between the client machines and the data source (s). Aperiodic Push - Publish/subscribe protocols are becoming a popular way to disseminate information in a network <ref> [Oki93, Yan95, Glan96] </ref>.
Reference: [Herm87] <author> G. Herman, G. Gopal, K. Lee, A. Weinrib, </author> <title> The Datacycle Architecture for Very High Throughput Database Systems, </title> <booktitle> Proc. ACM SIGMOD Conf., </booktitle> <address> San Francisco, CA, </address> <month> May, </month> <year> 1987. </year>
Reference-contexts: Examples range from newspapers, to telephones, to radio and television, to E-mail. Early work on using computer networks for pushing data was performed in the 1980's. The Boston Community Information System at MIT [Giff90], Teletext systems for distributing data over broadcast media [Amma85, Wong88], and the Datacycle database machine <ref> [Herm87] </ref>, are all examples of systems that incorporated some form of push technology. <p> Such digests allow users to follow a mailing list without being continually interrupted by individual messages. There have also been many systems that use Periodic Push over a broadcast or multicast link. These include TeleText [Amma85, Wong88], DataCycle <ref> [Herm87] </ref>, Broadcast Disks [Acha95a, Acha95b] and mobile databases [Imie94]. 2.3 End-to-End Considerations The second source of confusion about push technology is the fact that networked information systems typically contain many interconnected nodes.
Reference: [Imie94] <author> T. Imielinski, S. Viswanathan, B. Badrinath, </author> <title> Energy Efficient Indexing on Air, </title> <booktitle> ACM SIGMOD Conf., </booktitle> <year> 1994. </year>
Reference-contexts: Aperiodic Push - Publish/subscribe protocols are becoming a popular way to disseminate information in a network [Oki93, Yan95, Glan96]. In a publish/subscribe system, users provide information (sometimes in the form of a al. <ref> [Imie94] </ref> depend on a strict schedule to allow mobile clients to doze during periods when no data of interest to them will be broadcast. 3 Some systems attempt to implement a 1-to-N style of data delivery using unicast (i.e., by sending identical, individual messages to multiple clients). <p> Such digests allow users to follow a mailing list without being continually interrupted by individual messages. There have also been many systems that use Periodic Push over a broadcast or multicast link. These include TeleText [Amma85, Wong88], DataCycle [Herm87], Broadcast Disks [Acha95a, Acha95b] and mobile databases <ref> [Imie94] </ref>. 2.3 End-to-End Considerations The second source of confusion about push technology is the fact that networked information systems typically contain many interconnected nodes. These nodes may be (logically) organized in various structures, and different data delivery mechanisms may be used between different sets of nodes.
Reference: [Oki93] <author> B. Oki, M. Pfluegl, A. Siegel, D. Skeen, </author> <title> The Information Bus An Architecture for Extensible Distributed Systems, </title> <booktitle> Proc. 14th SOSP, </booktitle> <address> Ashville, NC, </address> <month> December, </month> <year> 1993. </year>
Reference-contexts: Most existing Web or Internet-based push systems are actually implemented using Periodic Pull between the client machines and the data source (s). Aperiodic Push - Publish/subscribe protocols are becoming a popular way to disseminate information in a network <ref> [Oki93, Yan95, Glan96] </ref>.
Reference: [Wong88] <author> J. Wong, </author> <title> Broadcast Delivery, </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 76(12), </volume> <month> December, </month> <year> 1988. </year>
Reference-contexts: Examples range from newspapers, to telephones, to radio and television, to E-mail. Early work on using computer networks for pushing data was performed in the 1980's. The Boston Community Information System at MIT [Giff90], Teletext systems for distributing data over broadcast media <ref> [Amma85, Wong88] </ref>, and the Datacycle database machine [Herm87], are all examples of systems that incorporated some form of push technology. <p> Such digests allow users to follow a mailing list without being continually interrupted by individual messages. There have also been many systems that use Periodic Push over a broadcast or multicast link. These include TeleText <ref> [Amma85, Wong88] </ref>, DataCycle [Herm87], Broadcast Disks [Acha95a, Acha95b] and mobile databases [Imie94]. 2.3 End-to-End Considerations The second source of confusion about push technology is the fact that networked information systems typically contain many interconnected nodes.
Reference: [Yan95] <author> T. Yan, H. Garcia-Molina, </author> <title> SIFT ATool for Wide-area Information Dissemination, </title> <booktitle> Proc. 1995 USENIX Technical Conference, </booktitle> <year> 1995. </year> <month> 6 </month>
Reference-contexts: Most existing Web or Internet-based push systems are actually implemented using Periodic Pull between the client machines and the data source (s). Aperiodic Push - Publish/subscribe protocols are becoming a popular way to disseminate information in a network <ref> [Oki93, Yan95, Glan96] </ref>.
References-found: 13

