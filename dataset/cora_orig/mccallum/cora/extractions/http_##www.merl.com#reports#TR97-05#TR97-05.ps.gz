URL: http://www.merl.com/reports/TR97-05/TR97-05.ps.gz
Refering-URL: http://www.merl.com/reports/TR97-05/index.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: V-Clip: Fast and Robust Polyhedral Collision Detection  
Author: Brian Mirtich 
Address: 1997 201 Broadway, Cambridge, Massachusetts 02139  
Affiliation: Mitsubishi Electric Information Technology Center America,  
Date: June 1997  July, 1997  
Web: http://www.merl.com  
Note: MERL A MITSUBISHI ELECTRIC RESEARCH LABORATORY  Submitted to ACM Transactions on Graphics,  Copyright c  
Pubnum: TR-97-05  
Abstract: This paper presents the Voronoi-clip, or V-Clip, collision detection algorithm for polyhedral objects specified by a boundary representation. V-Clip tracks the closest pair of features between convex polyhedra, using an approach reminiscent of the Lin-Canny closest features algorithm. V-Clip is an improvement over the latter in several respects. Coding complexity is reduced, and robustness is significantly improved; the implementation has no numerical tolerances and does not exhibit cycling problems. The algorithm also handles penetrating polyhedra, making it useful for nonconvex polyhedral collision detection. This paper presents the theoretical principles of V-Clip, and gives a pseudocode description of the algorithm. It also documents various tests that compare V-Clip, Lin-Canny, and the Enhanced GJK algorithm, a simplex-based algorithm that is widely used for the same application. The results show V-Clip to be a strong contender in this field, comparing favorably with the other algorithms in most of the tests, in terms of both performance and robustness. This work may not be copied or reproduced in whole or in part for any commercial purpose. Permission to copy in whole or in part without payment of fee is granted for nonprofit educational and research purposes provided that all such whole or partial copies include the following: a notice that such copying is by permission of Mitsubishi Electric Information Technology Center America; an acknowledgment of the authors and individual contributions to the work; and all applicable portions of the copyright notice. Copying, reproduction, or republishing for any other purpose shall require a license with payment of fee to Mitsubishi Electric Information Technology Center America. All rights reserved. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Ayala, P. Brunet, R. Juan, and I. Navazo. </author> <title> Object representation by means of nonminimal division quadtrees and octrees. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 4(1) </volume> <pages> 41-59, </pages> <month> January </month> <year> 1985. </year>
Reference-contexts: This strategy works well when a convex decomposition is available with a moderate number of pieces, and a hierarchy not more than a few levels deep; it breaks down for utterly non-convex objects. Other types of collision detection algorithms are then more suitable, such as those based on octrees <ref> [1] </ref>, binary space partitioning trees [14], sphere hierarchies [9], or oriented bounding boxes (OBBs). These algorithms also often provide robustness in the presence of modeling errors, such as improperly oriented or missing facets. <p> Theorem 2 The edge distance function D E;X () is continuous and convex. If e ( 0 ) 62 X, then D E;X is differentiable at 0 . The question at hand is whether the minimum value of D E;X , over <ref> [0; 1] </ref> occurs in the range [; ]. Because of Theorem 2, this question is answered MERL-TR-97-05 June 1997 10 simply by checking the signs of its derivative at and . <p> For compound exclusion, since both plane crossings are with vertex-edge Voronoi planes, Algorithm 2 is used. To see that an update must occur in this case, consider the convex distance function D E;V () defined over <ref> [0; 1] </ref>. If compound exclusion occurs, then 0 &lt; &lt; &lt; 1. If D E;V attains its minimum in [0; ] then the condition of line 1 is true. If D E;V attains its minimum in [; 1] then the condition of line 3 is true. <p> If compound exclusion occurs, then 0 &lt; &lt; &lt; 1. If D E;V attains its minimum in [0; ] then the condition of line 1 is true. If D E;V attains its minimum in <ref> [; 1] </ref> then the condition of line 3 is true.
Reference: [2] <author> David Baraff. </author> <title> Curved surfaces and coherence for non-penetrating rigid body simulation. </title> <journal> Computer Graphics, </journal> <volume> 24(4) </volume> <pages> 19-28, </pages> <month> August </month> <year> 1990. </year> <booktitle> SIGGRAPH Conference Proceedings, </booktitle> <year> 1990. </year>
Reference-contexts: One example is Baraff's algorithm, which maintains a separating plane that embeds a face of one of the polyhedra, or one edge from each polyhedra <ref> [2] </ref>. The polyhedra are disjoint if and only if such a separating plane can be found. The separating plane is cached from one invocation to the next.
Reference: [3] <author> Stephen Cameron. </author> <title> Enhancing GJK: Computing minimum penetration distances between convex polyhedra. </title> <booktitle> In International Conference on Robotics and Automation. IEEE, </booktitle> <month> April </month> <year> 1997. </year>
Reference-contexts: With these improvements, the algorithm attains the same almost-constant time complexity as Lin-Canny <ref> [3] </ref>. In this paper, Enhanced GJK refers to Cameron's algorithm and implementation. 1.3 V-Clip This paper presents the Voronoi-clip, or V-Clip, algorithm, a closest features algorithm that bears a family resemblance to its ancestor, Lin-Canny. The motivation for designing V-Clip was to overcome the chief limitations of Lin-Canny: 1.
Reference: [4] <author> Kelvin Chung. </author> <title> Quick collision detection library. </title> <address> www.cs.hku.hk/ ~ tlchung/collision library.html, </address> <year> 1997. </year>
Reference-contexts: The GJK algorithm is the essential core of an algorithm by Rabbitz, which advances the original by making better use of coherence [15]. Q-Collide is a collision detection library spawned from I-Collide, which replaces Lin-Canny with Rabbitz's algorithm for the low-level collision detection <ref> [4] </ref>. (All of Q-Collide's code and data structures to manage large numbers of objects are taken directly from I-Collide.) Cameron has recently developed the fastest descendent of GJK: it includes mechanisms to exploit coherence, and also uses topological vertex information to more carefully choose new simplices when the current simplices fail
Reference: [5] <author> Jonathan D. Cohen, Ming C. Lin, Dinesh Manocha, and Madhav K. Ponamgi. I-collide: </author> <title> An interactive and exact collision detection system for large-scaled environments. </title> <booktitle> In Symposium on Interactive 3D Graphics, </booktitle> <pages> pages 189-196. </pages> <note> ACM Siggraph, ACM Siggraph, </note> <month> April </month> <year> 1995. </year>
Reference-contexts: The separating plane is cached from one invocation to the next. The Lin-Canny closest features algorithm [11] is a more sophisticated feature-based algorithm that computes the distance between disjoint polyhedra; it has traditionally been considered among the fastest solutions for this problem. The publicly available I-Collide collision detection package <ref> [5] </ref> uses Lin-Canny to perform the low-level collision checks. The algorithm tracks and caches the closest features between a pair of convex polyhedra. Once these features are known, the closest points between them, and therefore between the polyhedra, can be determined. Lin-Canny has two drawbacks. <p> The task of designing tests was simplified since none of the tested algorithms are meant to be complete collision detection packages that handle thousands of objects, such as I-Collide <ref> [5] </ref> and V-Collide [10], but rather the lowest level collision detection routines in such systems.
Reference: [6] <author> Herbert Edelsbrunner and Ernst Peter Mucke. </author> <title> Simulation of simplicity: A technique to cope with degenerate cases in geometric algorithms. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 9(1) </volume> <pages> 66-104, </pages> <month> January </month> <year> 1990. </year>
Reference-contexts: The robustness stems from the fact that V-Clip does not explicitly construct closest points between features while iterating. Rather, it localizes the closest points to various regions of interest through simple clipping operations and scalar derivative tests. In other words, V-Clip uses topological primitives <ref> [6] </ref> while Lin-Canny must compute new objects: the closest points between features. Edge-face and face-face are the two most problematic cases in Lin-Canny; they account for most of the coding complexity and cycling problems. In V-Clip, the edge-face case is much simplified, and the face-face case is eliminated.
Reference: [7] <author> Elmer G. Gilbert, Daniel W. Johnson, and S. Sathiya Keerthi. </author> <title> A fast procedure for computing the distance between complex objects in three-dimensional space. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 4(2) </volume> <pages> 193-203, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: An algorithm designed by Gilbert, Johnson and Keerthi (GJK) was one of the earliest examples of this type <ref> [7] </ref>. Given two polyhedra, GJK searches for a simplex, defined by vertices of the Minkowski difference polyhedron, that either encloses or is nearest to the origin.
Reference: [8] <author> S. Gottschalk, M. C. Lin, and D. Manocha. Obb-tree: </author> <title> A hierarchical structure for rapid interference detection. </title> <booktitle> In SIGGRAPH Conference Proceedings. </booktitle> <publisher> ACM Press, </publisher> <year> 1996. </year> <title> 9 For our Enhanced GJK tests, we set the EAGER HILL CLIMBING flag in Cameron's implementation, since this lowers the operation counts. However, Cameron has observed that this actually increases the execution time. </title> <month> MERL-TR-97-05 June </month> <year> 1997 </year> <month> 27 </month>
Reference-contexts: These algorithms also often provide robustness in the presence of modeling errors, such as improperly oriented or missing facets. For example, the Rapid collision detection library, based on the OBB algorithm by Gottschalk, et. al., adeptly handles "polygon soup." <ref> [8] </ref> While libraries like Rapid are the best choice in applications like complex walk through environments, the algorithms discussed in this paper are faster and preferable when the models are well-behaved, of moderate size, and not exceedingly nonconvex.
Reference: [9] <author> Philip M. Hubbard. </author> <title> Approximating polyhedra with spheres for time-critical collision detection. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 15(3), </volume> <month> July </month> <year> 1996. </year>
Reference-contexts: Other types of collision detection algorithms are then more suitable, such as those based on octrees [1], binary space partitioning trees [14], sphere hierarchies <ref> [9] </ref>, or oriented bounding boxes (OBBs). These algorithms also often provide robustness in the presence of modeling errors, such as improperly oriented or missing facets.
Reference: [10] <author> T. Hudson, M. Lin, J. Cohen, S. Gottschalk, and D. Manocha. V-collide: </author> <title> Accelerated collision detection for VRML. </title> <booktitle> In Proceedings of VRML, </booktitle> <year> 1997. </year>
Reference-contexts: The task of designing tests was simplified since none of the tested algorithms are meant to be complete collision detection packages that handle thousands of objects, such as I-Collide [5] and V-Collide <ref> [10] </ref>, but rather the lowest level collision detection routines in such systems. Thus, it suffices to test the algorithms on systems involving only two objects. 4 Available from: TO BE ANNOUNCED... 5 Available from: www.cs.berkeley.edu/ ~ mirtich/collDet.html 6 Available from: www.cs.unc.edu/ ~ geom/I COLLIDE.html 7 Available from: www.comlab.ox.ac.uk/oucl/users/stephen.cameron/distances.html.
Reference: [11] <author> Ming C. Lin. </author> <title> Efficient Collision Detection for Animation and Robotics. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <month> December </month> <year> 1993. </year>
Reference-contexts: The polyhedra are disjoint if and only if such a separating plane can be found. The separating plane is cached from one invocation to the next. The Lin-Canny closest features algorithm <ref> [11] </ref> is a more sophisticated feature-based algorithm that computes the distance between disjoint polyhedra; it has traditionally been considered among the fastest solutions for this problem. The publicly available I-Collide collision detection package [5] uses Lin-Canny to perform the low-level collision checks. <p> At each iteration, V-Clip tests whether the current pair of features satisfy the conditions, and if not, updates one of the 2 Lin gives a slightly different definition in which the Voronoi regions are open sets <ref> [11] </ref>. MERL-TR-97-05 June 1997 5 E, and vertex V . Top right: The Voronoi region VR (V ). One of the Voronoi planes bounding this region is VP (V; E), corresponding to V 's neighboring edge E. Bottom left: The Voronoi region VR (E).
Reference: [12] <author> David G. Luenberger. </author> <title> Linear and Nonlinear Programming. </title> <publisher> Addison Wesley, </publisher> <address> Reading, MA, </address> <note> second edition, </note> <year> 1984. </year>
Reference: [13] <author> Brian Mirtich. </author> <title> Impulse-based Dynamic Simulation of Rigid Body Systems. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <month> December </month> <year> 1996. </year>
Reference-contexts: A related problem is the coding complexity of the algorithm: much effort is devoted to handling degenerate situations correctly. Despite these problems, Lin-Canny's 1 In specific cases, it is possible to determine the collision time using Lin-Canny with a one-sided root-finding approach <ref> [13] </ref>.
Reference: [14] <author> Bruce F. Naylor. </author> <title> Interactive solid modeling via partitioning trees. </title> <booktitle> In Graphics Interface, </booktitle> <pages> pages 11-18, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Other types of collision detection algorithms are then more suitable, such as those based on octrees [1], binary space partitioning trees <ref> [14] </ref>, sphere hierarchies [9], or oriented bounding boxes (OBBs). These algorithms also often provide robustness in the presence of modeling errors, such as improperly oriented or missing facets.
Reference: [15] <author> Rich Rabbitz. </author> <title> Fast collision detection of moving convex polyhedra. </title> <editor> In Paul S. Heckbert, editor, </editor> <booktitle> Graphics Gems IV, </booktitle> <pages> pages 83-109, </pages> <address> Cambridge, 1994. </address> <publisher> Academic Press, Inc. </publisher>
Reference-contexts: If the origin is enclosed, the polyhedra are penetrating, and a measure of the penetration is available. The GJK algorithm is the essential core of an algorithm by Rabbitz, which advances the original by making better use of coherence <ref> [15] </ref>.
Reference: [16] <author> H. L. Royden. </author> <title> Real Analysis. </title> <publisher> Macmillan Publishing Company, </publisher> <address> Ney York, third edition, </address> <year> 1988. </year>
References-found: 16

