URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr95/tr95-036.ps
Refering-URL: http://www.cis.ufl.edu/tech-reports/tech-reports/tr95-abstracts.html
Root-URL: http://www.cis.ufl.edu
Title: On Bridging and Extending OMG/IDL and STEP/EXPRESS for Achieving Information Sharing and System Interoperability  
Author: Stanley Y. W. Su, Herman Lam, Tsae-Feng Yu Sooha Lee, and Javier Arroyo 
Affiliation: Database Systems Research and Development Center University of Florida  
Date: 21-22 October 1995  
Note: Paper to be published in the Fifth Annual Express User Group International Conference (EUG '95) Grenoble, France,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> L. Acker, et al., </author> <title> "SOMobjects Development Toolkit Users Guide," </title> <journal> IBM, </journal> <note> Version 2.0, </note> <month> June </month> <year> 1993. </year>
Reference-contexts: Based on the architecture, objects can make requests which are dispatched to the proper object servers and receive responses from them. The interfaces of all objects of interest are specified in a common Interface Definition Language (IDL) <ref> [1, 25] </ref>. An interface specification is compiled to generate program skeletons and stubs for inclusion into server programs and client programs, respectively.
Reference: [2] <author> A. Alashqur, S. Y. W. Su and H. Lam, </author> <title> "OQL- A Query Language for Manipulating Object-oriented Databases", </title> <booktitle> in Proc. of 15th Int. Conf. Very Large Databases, </booktitle> <address> Amsterdam, </address> <publisher> Nether-lands, </publisher> <pages> pp. 433-442, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: The query language OQL (an early version of this language is reported in <ref> [2] </ref>) is used for this purpose.
Reference: [3] <author> J. A. Arroyo-Figueroa, </author> <title> "The Design and Implementation of K.1: A Third Generation Database Programming Language," </title> <type> Technical Report, </type> <institution> Database Systems R&D Center, University of Florida, </institution> <month> August </month> <year> 1992. </year>
Reference-contexts: Finally, the extensibility feature of NCL is discussed. 3.1 The Overall Structure of an NCL Schema NCL is an integration of the language features of IDL, EXPRESS and K.3. The third language is the version 3 of an implemented knowledge base programming language developed at the University of Florida <ref> [3, 28, 29] </ref>. NCL's underlying object model is the extensible object model of K.3 which is founded on the concept of objects and object associations introduced in the Object-oriented Semantic Association Model (OSAM* [30]) and its algebra and calculus ([12, 34]).
Reference: [4] <author> R. G. G. Cattell et al., </author> <title> "The Object Database Standard - ODMG 93. </title> <publisher> Morgan Kaufmann", </publisher> <year> 1993. </year>
Reference-contexts: Thus, much of the needed semantics have to be embedded in the application code. Recognizing the limitations of the object models underlying most of the existing object- oriented DBMSs, the Object Data Management Group (ODMG <ref> [4, 9] </ref>) has made some effort to extend the object model's capabilities to capture semantic constraints. However, these extensions are still far from meeting the actual needs for information modeling of complex manufacturing products.
Reference: [5] <author> P. P. S. Chen, </author> <title> "The entity-Relationship Model: Toward a unified view of data," </title> <journal> ACM TODS, </journal> <volume> vol. 1, no. 1, </volume> <year> 1976. </year>
Reference-contexts: In most of the existing information system development methodologies (e.g., IE [24] and SSADM [8]), separate tools are used for managing data resources and business workflows/processes. For example, data resources are defined by data models such as the relational model [7], the Entity-Relationship model <ref> [5] </ref> and its variations, IDEF-1X [20]. Whereas, businessworkflows/processes are defined using models like IDEF0 [10], KI-SHELL [13] and DFD [22]. However, in the real world, data resources and business workflows/processes are closely related and highly inter-dependent. They model complementary aspects of a real or virtual enterprise.
Reference: [6] <author> N. Christopher, et al. </author> <title> "The NIIIP Reference Architecture," Prepared for OMG Review, </title> <month> March </month> <year> 1995. </year>
Reference-contexts: This R&D effort is a part of the project entitled the National Industrial Information Infrastructure Protocols (NIIIP) supported by the Technology Reinvestment Program (TRP) of the Advanced Research Project Agency (ARPA) <ref> [6] </ref>. A main objective of NIIIP is to develop an information infrastructure to support the operation of a virtual enterprise (VE).
Reference: [7] <author> E. Codd, </author> <title> "Relational Databases: A Practical Foundation for Productivity," </title> <journal> CACM, </journal> <volume> 25:2, </volume> <month> De-cember </month> <year> 1982 </year>
Reference-contexts: In most of the existing information system development methodologies (e.g., IE [24] and SSADM [8]), separate tools are used for managing data resources and business workflows/processes. For example, data resources are defined by data models such as the relational model <ref> [7] </ref>, the Entity-Relationship model [5] and its variations, IDEF-1X [20]. Whereas, businessworkflows/processes are defined using models like IDEF0 [10], KI-SHELL [13] and DFD [22]. However, in the real world, data resources and business workflows/processes are closely related and highly inter-dependent. They model complementary aspects of a real or virtual enterprise.
Reference: [8] <author> E. Downs (ed), </author> <title> Structured Systems Analysis and Design Method Application and Context, </title> <publisher> Prentice Hall International (UK) Ltd, </publisher> <year> 1988 </year>
Reference-contexts: This hierarchical decomposition of object classes is not supported by most of the existing object- oriented data models. However, it is very useful for modeling objects with different level of abstractions. In most of the existing information system development methodologies (e.g., IE [24] and SSADM <ref> [8] </ref>), separate tools are used for managing data resources and business workflows/processes. For example, data resources are defined by data models such as the relational model [7], the Entity-Relationship model [5] and its variations, IDEF-1X [20]. Whereas, businessworkflows/processes are defined using models like IDEF0 [10], KI-SHELL [13] and DFD [22].
Reference: [9] <author> D. Florescu, L. Raschid and P. Valduriez, </author> <title> "Query Reformulation in Multidatabase Systems using Semantic Knowledge," </title> <type> Paper Draft, </type> <year> 1995. </year> <title> [10] "Integrated computer aided manufacturing (ICAM) architecture part II, Volume IV -function modeling manual (IDEF0)", Report Number: AFWAL-TR-81-4023 V.4. </title> <publisher> SofTech Inc., </publisher> <address> 460 Tot-ten Pond Road, Waltham, MA 02154. </address>
Reference-contexts: Thus, much of the needed semantics have to be embedded in the application code. Recognizing the limitations of the object models underlying most of the existing object- oriented DBMSs, the Object Data Management Group (ODMG <ref> [4, 9] </ref>) has made some effort to extend the object model's capabilities to capture semantic constraints. However, these extensions are still far from meeting the actual needs for information modeling of complex manufacturing products.
Reference: [11] <author> Subcommittee 4 of ISO Technical Committee 184, </author> <title> "Product Data Representation and Exchange Part 11: The EXPRESS Language Reference Manual," ISO Document, </title> <type> ISO DIS 10303-11, </type> <month> August </month> <year> 1992. </year>
Reference-contexts: This approach achieves the "method-based interoperability". The ISO/STEP community, on the other hand, emphasizes the development of standards for product modeling and product data exchange. One of its major efforts is the development of an information modeling language named EXPRESS <ref> [11] </ref>. EXPRESS provides a rich set of constraint specifications by using keywords, functions, procedures and constraint rules. It is a powerful information modeling language. The language has been widely accepted and used by a number of product design and manufacturing communities.
Reference: [12] <author> N. Kamel, P. Wu and S. Y. W. Su, </author> <title> "A Pattern-Based Object Calculus," International Journal on Very Large Data Bases, </title> <journal> Boxwood Press, </journal> <volume> Vol. 3, No. 1, </volume> <month> Jan. </month> <year> 1994, </year> <pages> pp. 53-76. </pages>
Reference: [13] <institution> Knowledge-based Integration Methodology for Workflow Support (KIShell), UES Inc., </institution> <year> 1993. </year>
Reference-contexts: For example, data resources are defined by data models such as the relational model [7], the Entity-Relationship model [5] and its variations, IDEF-1X [20]. Whereas, businessworkflows/processes are defined using models like IDEF0 [10], KI-SHELL <ref> [13] </ref> and DFD [22]. However, in the real world, data resources and business workflows/processes are closely related and highly inter-dependent. They model complementary aspects of a real or virtual enterprise.
Reference: [14] <author> H. Lam, S. Y. W. Su and A. Alashqur, </author> <title> "Integrating the Concepts and Techniques of SEmantic Modeling and the Object-oriented Paradigm," </title> <booktitle> Proc. 13th Int'l Computer Software & Applications Conference (COMPSAC), </booktitle> <pages> pp. 209-217, </pages> <month> October </month> <year> 1989. </year>
Reference-contexts: Section 3 gives the overall syntactic structure of a schema defined in NCL. The extended features of the language, namely, constraints specified by keywords, association types, and ECAA rules are explained and illustrated by examples. Section 4 describes the key components of a knowledge base management system called OSAM*.KBMS <ref> [14, 15, 30, 31, 32, 33] </ref> and their build-time and run-time supports to the NCL language.
Reference: [15] <author> H. Lam, et al., </author> <title> "Prototype implementation of an Object-oriented Knowledge Base Management System," </title> <booktitle> extended abstract in The Second Florida Conference on Productivity through Computer, Integrated Engineering and Manufacturing, </booktitle> <pages> pp. 68-70, </pages> <month> November </month> <year> 1989. </year>
Reference-contexts: Section 3 gives the overall syntactic structure of a schema defined in NCL. The extended features of the language, namely, constraints specified by keywords, association types, and ECAA rules are explained and illustrated by examples. Section 4 describes the key components of a knowledge base management system called OSAM*.KBMS <ref> [14, 15, 30, 31, 32, 33] </ref> and their build-time and run-time supports to the NCL language.
Reference: [16] <author> H. Lam, S. Y. W. Su, et al., "GTOOLS: </author> <title> An Active GUI Toolset for an Object-oriented KBMS," </title> <journal> International Journal of Computer System Science and Engineering, </journal> <volume> Vol.7,No.2,pp. </volume> <pages> 69-85, </pages> <month> April </month> <year> 1992. </year>
Reference-contexts: Figure 2 shows the key components of the KBMS and tools. A number of graphical tools called XGTOOLS (its earlier version was described in <ref> [16] </ref>) can be used to define, edit and browse knowledge base schemas and to graphically query the schemas against their instances stored in the knowledge bases. The defined schemas can then be translated into NCL in a textural form.
Reference: [17] <author> H. Lam, S. Y. W. Su, et al., </author> <title> "Model Extensibility in an Extensible Knowledgebase Management System," </title> <journal> submitted to IEEE Transactions on Knowledge and Data Engineering. </journal>
Reference-contexts: The details of data model extensibility in NCL is beyond the scope of this paper. Interested readers should refer to <ref> [17, 35] </ref>. 4 NCL's Supporting System and Tools The processing of NCL is supported by a knowledge base management system OSAM.KBMS and a number of tools [32, 33]. Figure 2 shows the key components of the KBMS and tools.
Reference: [18] <author> Lander, S. and Lesser, V., </author> <title> "Customizing Distributed Search Among Agents with Heterogeneous Knowledge," </title> <booktitle> Proceedings of the First International Conference on Information and Knowle dge Management, </booktitle> <address> Baltimore, MD, </address> <month> November </month> <year> 1992. </year>
Reference-contexts: A triggered operation may in turn trigger other rules. The automatic enforcement of these rules makes the underlying system active. It has been widely recognized that the concepts and techniques of agents, mediators and negotiators <ref> [18, 19, 36, 37] </ref> are very useful for achieving information and program sharing in a complex, heterogeneous computing environment.
Reference: [19] <author> Lander, S. and Lesser, V., </author> <title> "Understanding the Role of Negotiation in Distributed Search Among Heterogeneou s Agents," </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intellig ence, </booktitle> <month> August/September </month> <year> 1993. </year>
Reference-contexts: A triggered operation may in turn trigger other rules. The automatic enforcement of these rules makes the underlying system active. It has been widely recognized that the concepts and techniques of agents, mediators and negotiators <ref> [18, 19, 36, 37] </ref> are very useful for achieving information and program sharing in a complex, heterogeneous computing environment.
Reference: [20] <author> M. E. S. Loomis, </author> <title> "Data Modeling The IDEF-1X Technique," </title> <journal> IEEE communication, </journal> <month> March </month> <year> 1986. </year>
Reference-contexts: In most of the existing information system development methodologies (e.g., IE [24] and SSADM [8]), separate tools are used for managing data resources and business workflows/processes. For example, data resources are defined by data models such as the relational model [7], the Entity-Relationship model [5] and its variations, IDEF-1X <ref> [20] </ref>. Whereas, businessworkflows/processes are defined using models like IDEF0 [10], KI-SHELL [13] and DFD [22]. However, in the real world, data resources and business workflows/processes are closely related and highly inter-dependent. They model complementary aspects of a real or virtual enterprise.
Reference: [21] <author> P. Loucopoulous, W. J. Black, A. G. Sutcliffe, and P. J. Layzell, </author> <title> "Towards a unified view of systems development methods," </title> <journal> Int. J. Inf. Manage., </journal> <volume> 7 </volume> <pages> 205-218, </pages> <year> 1987. </year>
Reference-contexts: They model complementary aspects of a real or virtual enterprise. Thus, it is essential for information systems of the future to model and manage data and business workflows/processes in an integrated manner. Efforts in integrating different modeling languages can be found in projects such as and 8 AMADEUS <ref> [21] </ref> and TEMPORA [26].
Reference: [22] <author> T. De Marco, </author> <title> Structured Analysis and System Specification, </title> <publisher> Prentice-Hall, </publisher> <year> 1982. </year>
Reference-contexts: For example, data resources are defined by data models such as the relational model [7], the Entity-Relationship model [5] and its variations, IDEF-1X [20]. Whereas, businessworkflows/processes are defined using models like IDEF0 [10], KI-SHELL [13] and DFD <ref> [22] </ref>. However, in the real world, data resources and business workflows/processes are closely related and highly inter-dependent. They model complementary aspects of a real or virtual enterprise. Thus, it is essential for information systems of the future to model and manage data and business workflows/processes in an integrated manner.
Reference: [23] <author> J. Martin, </author> <title> Information Engineering (Book 1: Introduction), </title> <publisher> Prentice Hall, Inc., </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1989. </year>
Reference: [24] <author> J. Martin, </author> <title> Information Engineering (Book 3: Design and Construction), </title> <publisher> Prentice Hall, Inc., </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1990. </year>
Reference-contexts: This hierarchical decomposition of object classes is not supported by most of the existing object- oriented data models. However, it is very useful for modeling objects with different level of abstractions. In most of the existing information system development methodologies (e.g., IE <ref> [24] </ref> and SSADM [8]), separate tools are used for managing data resources and business workflows/processes. For example, data resources are defined by data models such as the relational model [7], the Entity-Relationship model [5] and its variations, IDEF-1X [20].
Reference: [25] <author> OMG Committee, </author> <title> "The Common Object Request Broker: Architecture and Specification," OMG Document, </title> <journal> Revision 1.1, </journal> <volume> No. 91.12.1, </volume> <month> December </month> <year> 1991. </year>
Reference-contexts: OMG is formed by a consortium of over 500 industrial companies which aims to define and develop object-oriented technologies for achieving the interoperability among dissimilar computing platforms. It proposed a Common Object Request Broker Architecture (CORBA) <ref> [25] </ref> for achieving object interoperability. Based on the architecture, objects can make requests which are dispatched to the proper object servers and receive responses from them. The interfaces of all objects of interest are specified in a common Interface Definition Language (IDL) [1, 25]. <p> Based on the architecture, objects can make requests which are dispatched to the proper object servers and receive responses from them. The interfaces of all objects of interest are specified in a common Interface Definition Language (IDL) <ref> [1, 25] </ref>. An interface specification is compiled to generate program skeletons and stubs for inclusion into server programs and client programs, respectively.
Reference: [26] <author> TEMPORA. </author> <title> Project Manual Esprit Project 2469. </title> <type> Technical Report, </type> <address> BIM, Belgium, </address> <year> 1992. </year>
Reference-contexts: Thus, it is essential for information systems of the future to model and manage data and business workflows/processes in an integrated manner. Efforts in integrating different modeling languages can be found in projects such as and 8 AMADEUS [21] and TEMPORA <ref> [26] </ref>.
Reference: [27] <author> J. Smith and D. Smith, </author> <title> "Database Abstractions: Aggregation and Generalization", </title> <journal> TODS, </journal> <volume> 2:2, </volume> <month> June </month> <year> 1977. </year>
Reference-contexts: In fact, the superclass-subclass and attribute specifications in an ENTITY declaration are two general types of associations; namely, Generalization and Aggregation associations which have long been recognized by the database community <ref> [27] </ref>. These two association types are predefined types in the kernel model of NCL. Other association types can be introduced by means of model extension for capturing the diverse and complex semantic relationship among object classes.
Reference: [28] <author> Y. M. Shyy, S. Y. W. Su, </author> <title> "K: High-level Knowledge Base Programming Language for Advanced Database Applications," </title> <booktitle> ACM SIGMOD Int'l Conf. on Management of Data, </booktitle> <pages> pp. 338-347, </pages> <year> 1991. </year>
Reference-contexts: Finally, the extensibility feature of NCL is discussed. 3.1 The Overall Structure of an NCL Schema NCL is an integration of the language features of IDL, EXPRESS and K.3. The third language is the version 3 of an implemented knowledge base programming language developed at the University of Florida <ref> [3, 28, 29] </ref>. NCL's underlying object model is the extensible object model of K.3 which is founded on the concept of objects and object associations introduced in the Object-oriented Semantic Association Model (OSAM* [30]) and its algebra and calculus ([12, 34]).
Reference: [29] <author> Y.M. Shyy, J. Arroyo-Figueroa, S. Y. W. Su, and H. Lam, </author> <title> "The Des ign and Implementation of K: A High-level Knowledge Base Programming Language of OSAM*.KBMS," </title> <note> accepted for publication in the VLDB Journal, </note> <year> 1995. </year>
Reference-contexts: Finally, the extensibility feature of NCL is discussed. 3.1 The Overall Structure of an NCL Schema NCL is an integration of the language features of IDL, EXPRESS and K.3. The third language is the version 3 of an implemented knowledge base programming language developed at the University of Florida <ref> [3, 28, 29] </ref>. NCL's underlying object model is the extensible object model of K.3 which is founded on the concept of objects and object associations introduced in the Object-oriented Semantic Association Model (OSAM* [30]) and its algebra and calculus ([12, 34]).
Reference: [30] <author> S. Y.W. Su, V. Krishnamurthy and H. Lam, </author> <title> "An Object Oriented Semantic Association Model (OSAM*)," </title> <booktitle> AI in Industrial Engineering and Manufacturing: Theoretical Issues and Applications, </booktitle> <institution> American Institute of Industrial Engineering, </institution> <year> 1989. </year>
Reference-contexts: Section 3 gives the overall syntactic structure of a schema defined in NCL. The extended features of the language, namely, constraints specified by keywords, association types, and ECAA rules are explained and illustrated by examples. Section 4 describes the key components of a knowledge base management system called OSAM*.KBMS <ref> [14, 15, 30, 31, 32, 33] </ref> and their build-time and run-time supports to the NCL language. <p> NCL's underlying object model is the extensible object model of K.3 which is founded on the concept of objects and object associations introduced in the Object-oriented Semantic Association Model (OSAM* <ref> [30] </ref>) and its algebra and calculus ([12, 34]).
Reference: [31] <author> S. Y. W. Su and A. M. Alashqur, </author> <title> "A Pattern-based Constraint Specification Language for Object-oriented Databases," </title> <booktitle> Proc. of IEEE COMPCON'91, </booktitle> <address> San Francisco, Febrary 25- March 1 1991. </address>
Reference-contexts: Section 3 gives the overall syntactic structure of a schema defined in NCL. The extended features of the language, namely, constraints specified by keywords, association types, and ECAA rules are explained and illustrated by examples. Section 4 describes the key components of a knowledge base management system called OSAM*.KBMS <ref> [14, 15, 30, 31, 32, 33] </ref> and their build-time and run-time supports to the NCL language.
Reference: [32] <author> S. Y. W. Su and H. Lam, </author> <title> "An Object-oriented Knowledge Base Management System for Supporting Advanced Applications," </title> <booktitle> Proc. of the 4th Int'l Hong Kong Computer Society Database Workshop, </booktitle> <pages> pp. 3-22, </pages> <month> December 12-13, </month> <year> 1992. </year> <month> 17 </month>
Reference-contexts: Section 3 gives the overall syntactic structure of a schema defined in NCL. The extended features of the language, namely, constraints specified by keywords, association types, and ECAA rules are explained and illustrated by examples. Section 4 describes the key components of a knowledge base management system called OSAM*.KBMS <ref> [14, 15, 30, 31, 32, 33] </ref> and their build-time and run-time supports to the NCL language. <p> The details of data model extensibility in NCL is beyond the scope of this paper. Interested readers should refer to [17, 35]. 4 NCL's Supporting System and Tools The processing of NCL is supported by a knowledge base management system OSAM.KBMS and a number of tools <ref> [32, 33] </ref>. Figure 2 shows the key components of the KBMS and tools.
Reference: [33] <author> S. Y. W. Su and H. Lam, et al., "OSAM*.KBMS: </author> <title> An Object-Oriented Knowledge-Base Man--agement System for Supporting Advanced Applications," </title> <booktitle> Proc. of the 1993 ACM SIGMOD Int'l Conf. on Management of Data, </booktitle> <pages> pp. 540-541, </pages> <year> 1993. </year>
Reference-contexts: Section 3 gives the overall syntactic structure of a schema defined in NCL. The extended features of the language, namely, constraints specified by keywords, association types, and ECAA rules are explained and illustrated by examples. Section 4 describes the key components of a knowledge base management system called OSAM*.KBMS <ref> [14, 15, 30, 31, 32, 33] </ref> and their build-time and run-time supports to the NCL language. <p> The details of data model extensibility in NCL is beyond the scope of this paper. Interested readers should refer to [17, 35]. 4 NCL's Supporting System and Tools The processing of NCL is supported by a knowledge base management system OSAM.KBMS and a number of tools <ref> [32, 33] </ref>. Figure 2 shows the key components of the KBMS and tools.
Reference: [34] <author> S. Y. W. Su, M. Guo and H. Lam, </author> <title> "Association Algebra: A Mathematical Foundation for Object-Oriented Databases,' </title> ' <journal> Transactions on Knowledge and Data Engineering, IEEE, </journal> <volume> Vol. 5, No. 5, </volume> <month> Oct. </month> <year> 1993, </year> <pages> pp. 775-798. </pages>
Reference: [35] <author> S. Y. W. Su and H. Lam, et al. "NCL: </author> <title> A Common Language for Achieving Rule-Based Interoperability among Heterogeneous Systems", </title> <note> Submitted for publication Journal of Intelligent Information Systems, Special Issue, </note> <year> 1995. </year>
Reference-contexts: The details of data model extensibility in NCL is beyond the scope of this paper. Interested readers should refer to <ref> [17, 35] </ref>. 4 NCL's Supporting System and Tools The processing of NCL is supported by a knowledge base management system OSAM.KBMS and a number of tools [32, 33]. Figure 2 shows the key components of the KBMS and tools. <p> For more details on the use of rules to achieve "rule-based interoperability" among heterogeneous systems, the reader is referred to a full length paper <ref> [35] </ref>. 5 Summary and Conclusion In this paper, we have stressed the importance of having an object model and language which is standard-based, extensible, and semantics-rich for modeling the data, software and other resources of a large real or virtual enterprise and for achieving rule-based interoperability among heterogeneous systems.
Reference: [36] <author> G. Wiederhold and M. Genesereth, </author> <title> "The Basis for Mediation," </title> <booktitle> Proc. </booktitle> <address> COOPIS'95 Conference,Vienna Austria, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: A triggered operation may in turn trigger other rules. The automatic enforcement of these rules makes the underlying system active. It has been widely recognized that the concepts and techniques of agents, mediators and negotiators <ref> [18, 19, 36, 37] </ref> are very useful for achieving information and program sharing in a complex, heterogeneous computing environment.
Reference: [37] <author> G. Wiederhold, </author> <title> "Interoperation, </title> <booktitle> Mediation, and Ontologies", presented at the FGCS/ICOT Workshop in Tokyo, </booktitle> <month> 13 Dec. </month> <year> 1994. </year> <month> 18 </month>
Reference-contexts: A triggered operation may in turn trigger other rules. The automatic enforcement of these rules makes the underlying system active. It has been widely recognized that the concepts and techniques of agents, mediators and negotiators <ref> [18, 19, 36, 37] </ref> are very useful for achieving information and program sharing in a complex, heterogeneous computing environment.
References-found: 36

