URL: http://www.cs.ucl.ac.uk/staff/jon/hipparch/Barcellos.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/staff/jon/hipparch/program.html
Root-URL: http://www.cs.ucl.ac.uk
Title: PRMP: A Hierarchical, Polling-Based Reliable Multicast Protocol  
Author: Marinho Barcellos and Paul Ezhilchelvan 
Keyword: Reliable Multicast, Transport Protocols, Scalability.  
Note: on leave from UNISINOS-Universidade do Vale do Rio dos Sinos, S~ao Leopoldo, Brazil.  
Address: NE1 7RU UK  
Affiliation: Department of Computing Science, University of Newcastle upon Tyne Newcastle upon Tyne,  
Email: fA.M.P.Barcellos@ncl.ac.uk, P.D.Ezhilchelvan@ncl.ac.ukg  
Phone: Phone: +44-191-477-6553 Fax: +44-191-222-8232  
Date: 29th June 1998  
Abstract: Traditional sender-initiated unicast protocols do not scale well for one-to-many reliable multicast due mainly to implosion caused by excessive rate of feedback packets arriving from receivers. In our previous work, we showed that such problem can be circumvented by making the sender poll the receivers at carefully planned timing instants, so that the arrival rate of feedback packets is not large enough to cause implosion. However, there are two compelling reasons for extending such "flat" protocol into a hierarchic version. First, given the amount of state per receiver necessary at the source, the flat scheme cannot scale to thousands of receivers. Secondly, when the receivers of a group are spread over a wide-area network, local error control and recovery may bring substantial gains in terms of throughput (reduced latency if recovery can be done by nearby receiver) and network cost (recovery isolation). In this paper we present prmp, the extended hierarchic version of our polling-based reliable multicast. In redesigning the protocol, we take advantage of the polling-based implosion avoidance mechanism; adapt the error and flow control mechanisms for the hierarchic case; and finally, add both session and congestion controls. We propose two congestion control mechanisms, window- and rate-based, and show their efficacy through simulation. We comment on related protocols (compare but not evaluate). As all prmp mechanisms are designed having network cost and throughput in mind, prmp can achieve reliable multicast with the same kind of reliability guarantees provided by tcp but without incurring prohibitive costs in terms of network cost or recovery latency found in other protocols. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Pingali, D. Towsley, J. Kurose, </author> <title> A Comparison of Sender-Initiated and Receiver-Initiated Reliable Multicast Protocols, </title> <booktitle> Proc. ACM SIGMETRICS Conf. on Measurement and Modelling of Computer Systems, </booktitle> <address> Nashville, </address> <month> May 16-20, </month> <year> 1994. </year>
Reference: [2] <author> S. Floyd, V. Jacobson, S. McCanne, C. Liu, L. Zhang, </author> <title> A Reliable Multicast Framework for Light-Weight Sessions and Application Level Framing, </title> <booktitle> ACM SIGCOMM'95, Conf. on Applications, Technologies, Architectures, and Protocols for Computer Communication. Aug. 28 - Sept. 1st, </booktitle> <address> Cambridge, USA. </address>
Reference-contexts: When a large amount of data is transmitted by rmtp+, there is thus an "idle period" of T dally between transmissions of successive blocks, and during this period the parent simply waits to receive no nack. This can decrease the throughput. The Scalable Reliable Multicast Protocol (srm <ref> [2] </ref>) is developed for many-to-many multicast applications. Its main design feature is the decentralized error recovery.
Reference: [3] <author> M. P. Barcellos, P. Ezhilchelvan, </author> <title> An End-to-End Reliable Multicast Protocol Using Polling for Scaleability, </title> <publisher> IEEE INFOCOM'98, </publisher> <address> San Francisco, California, </address> <note> 29th March-2nd April 1998, pp.1180-1187. </note>
Reference-contexts: Recall that resp.ts is a copy of poll.ts, the timestamp of A (s) for poll which prompted resp to be sent. All remaining aspects of the error control mechanism (as described in <ref> [3] </ref>), including the collection of nacks to determine whether unicast or multicats retransmission is effective, are preserved in the hierarchic version. Flow Control A child agent may be overrun by packets from its parent agent if the latter transmits faster than the former can take. <p> The limited network model employed in <ref> [3] </ref> was extended to support spatially and temporally correlated losses ([14]), 13 congestion, and other topological issues. The model also permits to better evaluate the implosion con-trol mechanism, including the effect of heterogeneous, fluctuating round-trip times in the poll-planning mechanism. <p> Input Variables The default chosen for simulation are listed in the Table 3; unless otherwise noted, these values were used. We now explain the rationale behind the choice for the main inputs, beginning with ws value. As pointed out in <ref> [3] </ref>, sender-initiated schemes like prmp need acks from receivers in order to make progress in the transmission. prmp reduces the amount of feedback so that implosion losses are avoided, but still the sending window has to advance relying on whatever feedback received.
Reference: [4] <author> J. Lin, S. Paul, RMTP: </author> <title> A Reliable Multicast Transport Protocol, </title> <journal> IEEE INFOCOM'96, </journal> <month> March </month> <year> 1996, </year> <month> pp.1414-1424 </month>
Reference: [5] <author> R. W.Buskens, M.A. Siddiqui, S. Paul, </author> <title> Reliable Multicast of Continuous Data Streams, </title> <institution> Bell Labs Tech. </institution> <note> Journal, Spring 1997, pp.151-174. </note>
Reference: [6] <author> R. Yavatkar, J. Griffioen, M. Sudan, </author> <title> A Reliable Dissemination for Interactive Collaborative Applications, </title> <journal> ACM Multimedia'95. </journal> <volume> 28 </volume>
Reference: [7] <author> T. Speakman, D. Farinacci, S. Lin, A. Tweedly, </author> <title> Pretty Good Multicast Transport Protocol Specification, RFT Internet Draft, </title> <month> 8 January </month> <year> 1998. </year>
Reference: [8] <author> M. Grossglauser, </author> <title> Optimal Deterministic Timeouts for Reliable Scalable Multicast, </title> <publisher> IEEE INFOCOM'96, </publisher> <address> San Francisco, California, </address> <month> March </month> <year> 1996. </year>
Reference: [9] <author> M.P.Barcellos, P. Ezhilchelvan, </author> <title> An End-to-End Reliable Multicast Protocol Using Polling for Scaleability, </title> <type> U. </type> <institution> of Newcastle Technical Report, TR-609, </institution> <month> December </month> <year> 1997. </year>
Reference-contexts: It then decides whether retransmission be done by a single multicast or multiple unicasts. poll packets do not join txq: they are generated only if the txq becomes empty and there are polling requests due for transmission. A more detailed description of the protocol architecture can be found in <ref> [9] </ref>. 3 Hierarchical Protocol The tree-based schemes generally scale well for reliable multicast ([10]) because the responsibility for reliable delivery is placed not solely on the source but also on every parent in the tree.
Reference: [10] <author> B.N. Levine, J.J. Garcia-Luna-Aceves, </author> <title> A Comparison of Reliable Multicast Protocols, </title> <journal> ACM Multimedia Systems Journal, </journal> <year> 1997. </year>
Reference: [11] <author> C. Papadopoulos, G. Parulkar, and G. Varghese, </author> <title> An Error Control Scheme for Large-Scale Multicast Applications, </title> <address> INFOCOM'98, San Francisco, 28 March-2nd. </address> <month> April 98. </month>
Reference-contexts: The "Imaginary" Tree Topology For our simulations, we have employed an "imaginary" tree topology as defined in <ref> [11] </ref>. The topology is general enough to capture some of the properties expected in wan multicast. Figure 4 illustrates the tree topology and the set of agents which comprise the prmp tree (in this work we do not address the topological allocation of agents to hosts).
Reference: [12] <author> V. Jacobson, </author> <title> Congestion Avoidance and Control, </title> <journal> Computer Communication Review, vol.18, no.4, </journal> <volume> pp.314-329, </volume> <month> Aug. </month> <year> 1988. </year>
Reference-contexts: for that receiver: "rto", the timeout used for detecting the loss of polling responses, and "rtt plan", the rtt value used for anticipating expected arrival time of responses in planning the poll. rtt rto is determined to account for the variations in the rtt estimates, by using the scheme in <ref> [12] </ref>. rtt plan is merely a smoothed value of the most recent rtt estimate: rtt plan fffirtt plan+(1 ff)firtt estimate, with ff set to 0.9.
Reference: [13] <author> V. Paxson, </author> <title> End-to-End Internet Packet Dynamics, </title> <publisher> IEEE INFOCOM'98, </publisher> <address> San Francisco, California, </address> <note> 29th March-2nd April 1998, pp.139-152. </note>
Reference: [14] <author> M. Yajnick, J. Kurose, D.Tosley, </author> <title> Packet Loss Correlation in the Mbone Multicast Network, </title> <type> UMCASS CMP-SCI Technical Report 96-32. 29 </type>
References-found: 14

