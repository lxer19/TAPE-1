URL: http://www.cs.uni-bonn.de/III/lehre/seminare/Handlungsplanung/WS96/BylanderStripsCompl.ps.gz
Refering-URL: http://www.cs.uni-bonn.de/III/lehre/seminare/Handlungsplanung/WS96/
Root-URL: http://cs.uni-bonn.de
Email: email: bylander@ringer.cs.utsa.edu  
Phone: phone: 210-691-5693  
Title: The Computational Complexity of Propositional STRIPS Planning  
Author: Tom Bylander 
Note: to appear in Artificial Intelligence  
Date: March 7, 1994  
Address: San Antonio, Texas 78249 USA  
Affiliation: Division of Mathematics, Computer Science, and Statistics University of Texas at San Antonio  
Abstract: I present several computational complexity results for propositional STRIPS planning, i.e., STRIPS planning restricted to ground formulas. Different planning problems can be defined by restricting the type of formulas, placing limits on the number of pre- and postconditions, by restricting negation in pre- and postconditions, and by requiring optimal plans. For these types of restrictions, I show when planning is tractable (polynomial) and intractable (NP-hard). In general, it is PSPACE-complete to determine if a given planning instance has any solutions. Extremely severe restrictions on both the operators and the formulas are required to guarantee polynomial time or even NP-completeness. For example, when only ground literals are permitted, determining plan existence is PSPACE-complete even if operators are limited to two preconditions and two postconditions. When definite Horn ground formulas are permitted, determining plan existence is PSPACE-complete even if operators are limited to zero preconditions and one postcondition. One of the interesting tractable problems is if each operator is restricted to positive preconditions and one postcondition (only ground literals). The blocks-world problem, slightly modified, is a subproblem of this restricted planning problem. These results in combination with previous analyses are not encouraging for domain-independent planning. y This paper is a revised, integrated, and extended version of [5] and [6]. fl This research has been supported in part by DARPA/AFOSR contract F49620-89-C-0110.
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> J. Allen, J. Hendler, and A. Tate, editors. </editor> <booktitle> Readings in Planning. </booktitle> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, California, </address> <year> 1990. </year>
Reference-contexts: From the perspective of the expressiveness-tractability tradeoff [27], I primarily consider the expressiveness of operators and formulas. 1.1 Previous Research The literature on planning is voluminous, and no attempt to properly survey the planning literature is attempted here. Instead, the reader is referred to Allen et al. <ref> [1] </ref> and Hendler et al. [23]. Despite the sizable literature, results on computational complexity are sparse. Dean and Boddy [12] analyze the complexity of temporal projection|given a partial ordering of events and causal rules triggered by events, determine what conditions must be true after each event.
Reference: [2] <author> F. Bacchus and Q. Yang. </author> <title> The downward refinement property. </title> <booktitle> In Proc. Twelfth Int. Joint Conf. on Artificial Intelligence, </booktitle> <pages> pages 286-292, </pages> <address> Sydney, </address> <year> 1991. </year>
Reference-contexts: Ratner and Warmuth [34] show that finding optimal solutions to the n fi n generalization of the 8-puzzle is NP-hard. Gupta and Nau [21] and Chenoweth [11] show that optimal blocks-world planning is NP-hard. Bacchus and Yang <ref> [2] </ref> present tractable tests for determining when an hierarchical planning problem has a property called downward refinement, i.e., every abstract solution can be refined into a concrete solution. <p> Understanding how these properties are realized as restrictions on the set of operators as a whole is a promising research approach. Korf's [24] analysis of serial decomposability and Bacchus and Yang's <ref> [2] </ref> analysis of abstraction are significant steps in this direction, though see [7] for negative results on the complexity of serial decomposability.
Reference: [3] <author> C. Backstrom and I. Klein. </author> <title> Parallel non-binary planning in polynomial time. </title> <booktitle> In Proc. Twelfth Int. Joint Conf. on Artificial Intelligence, </booktitle> <pages> pages 268-273, </pages> <address> Sydney, </address> <year> 1991. </year>
Reference-contexts: There are also some results concerning the tractability of very specialized kinds of planning. In the case where states are value assignments to finite-valued state variables, Backstrom and Klein <ref> [3] </ref> show that planning is tractable if each operator has one postcondition, i.e., changes the value of one variable, if the preconditions of any two operators do not require different values for non-changing variables, and if no two operators have the same postcondition.
Reference: [4] <author> C. Backstrom and B. Nebel. </author> <title> Complexity results for SAS+ planning. </title> <booktitle> In Proc. Thirteenth Int. Joint Conf. on Artificial Intelligence, </booktitle> <address> Chambery, France, </address> <year> 1993. </year> <note> To appear. </note>
Reference-contexts: The blocks-world problem, slightly modified, is a subproblem of this problem. Note that one can always unstack all the blocks followed by making the goal stacks from the table on up. The intermediate state in this case is when all the blocks are unstacked. Backstrom and Nebel <ref> [4] </ref> give a generalization of this restriction and the corresponding algorithm in which state variables are used instead of propositions. The second polynomial problem is if there are a limited number of goals and each operator is limited to one precondition.
Reference: [5] <author> T. Bylander. </author> <title> Complexity results for planning. </title> <booktitle> In Proc. Twelfth Int. Joint Conf. on Artificial Intelligence, </booktitle> <pages> pages 274-279, </pages> <address> Sydney, </address> <year> 1991. </year>
Reference-contexts: Based on my results for PLANSAT <ref> [5] </ref>, they show that PLANMIN is PSPACE-complete, that it is PSPACE-complete if each operator is limited to positive preconditions, and that it is NP-complete if each operator is limited to positive postconditions.
Reference: [6] <author> T. Bylander. </author> <title> Complexity results for extended planning. </title> <booktitle> In Proc. First Int. Conf. on AI Planning Systems, </booktitle> <pages> pages 20-27, </pages> <address> College Park, Maryland, </address> <year> 1992. </year>
Reference: [7] <author> T. Bylander. </author> <title> Complexity results for serial decomposability. </title> <booktitle> In Proc. Tenth National Conf. on Artificial Intelligence, </booktitle> <pages> pages 729-734, </pages> <address> San Jose, California, </address> <year> 1992. </year>
Reference-contexts: Understanding how these properties are realized as restrictions on the set of operators as a whole is a promising research approach. Korf's [24] analysis of serial decomposability and Bacchus and Yang's [2] analysis of abstraction are significant steps in this direction, though see <ref> [7] </ref> for negative results on the complexity of serial decomposability. More generally, I speculate that the analysis of general-purpose planning will evolve into the analysis of many different special-purpose planning problems and techniques for encoding these special-purpose problems in a general-purpose planner.
Reference: [8] <author> T. Bylander. </author> <title> An average case analysis of planning. </title> <booktitle> In Proc. Eleventh National Conf. on Artificial Intelligence, </booktitle> <pages> pages 480-485, </pages> <address> Washington, DC, </address> <year> 1993. </year>
Reference-contexts: Promising directions include Musick and Russell [32], who develop a Markov model approximation for analyzing hill-climbing algorithms on single postcondition problems, and Bylander <ref> [8] </ref>, who shows that most PLANSAT instances under certain distributional assumptions can be efficiently solved. An alternative approach is to restrict global properties of planning instances rather than local properties of operators and formulas.
Reference: [9] <author> D. Chapman. </author> <title> Planning for conjunctive goals. </title> <journal> Artificial Intelligence, </journal> <volume> 32(3) </volume> <pages> 333-377, </pages> <year> 1987. </year> <note> Also appears in [1]. </note>
Reference-contexts: Planning is the reasoning task of finding a sequence of operators that achieve a goal from a given initial state. It is well-known that planning is intractable in general, and that several obstacles stand in the way <ref> [9] </ref>. However, there are few results that provide clear dividing lines between tractable and intractable planning. Below, I clarify several of these dividing lines by analyzing the computational complexity of a planning problem and a variety of restricted and augmented versions. <p> Clearly, this is an issue that future work should address. Perhaps the most important complexity results for planning are due to Chapman's analysis of tweak <ref> [9] </ref>. Because virtually all other planners are as expressive as tweak, Chap-man's results have wide applicability. tweak's representation includes the following features. <p> To say the least, these results in combination with previous analyses are not encouraging for domain-independent planning. However, operators must have multiple preconditions, simultaneous positive and negative postconditions, and apparently many more "features" to implement any interesting domain <ref> [9, 23] </ref>. While additional features might be good for making a planner more useful as a programming tool, generality has its downside|tractability of planning cannot be guaranteed even with moderately expressive operators.
Reference: [10] <author> P. Cheeseman, B. Kanefsky, and W. M. Taylor. </author> <title> Where the really hard problems are. </title> <booktitle> In Proc. Twelfth Int. Joint Conf. on Artificial Intelligence, </booktitle> <pages> pages 331-337, </pages> <address> Sydney, </address> <year> 1991. </year>
Reference-contexts: However, while it appears that NP-complete problems are hard only for narrow ranges of the problems <ref> [10, 30, 31] </ref>, there is little research on problems that are PSPACE-complete. Promising directions include Musick and Russell [32], who develop a Markov model approximation for analyzing hill-climbing algorithms on single postcondition problems, and Bylander [8], who shows that most PLANSAT instances under certain distributional assumptions can be efficiently solved.
Reference: [11] <author> S. V. Chenoweth. </author> <title> On the NP-hardness of blocks world. </title> <booktitle> In Proc. Ninth National Conf. on Artificial Intelligence, </booktitle> <pages> pages 623-628, </pages> <address> Anaheim, California, </address> <year> 1991. </year>
Reference-contexts: Ratner and Warmuth [34] show that finding optimal solutions to the n fi n generalization of the 8-puzzle is NP-hard. Gupta and Nau [21] and Chenoweth <ref> [11] </ref> show that optimal blocks-world planning is NP-hard. Bacchus and Yang [2] present tractable tests for determining when an hierarchical planning problem has a property called downward refinement, i.e., every abstract solution can be refined into a concrete solution.
Reference: [12] <author> T. Dean and M. Boddy. </author> <title> Reasoning about partially ordered events. </title> <journal> Artificial Intelligence, </journal> <volume> 36(3) </volume> <pages> 375-399, </pages> <year> 1988. </year>
Reference-contexts: Instead, the reader is referred to Allen et al. [1] and Hendler et al. [23]. Despite the sizable literature, results on computational complexity are sparse. Dean and Boddy <ref> [12] </ref> analyze the complexity of temporal projection|given a partial ordering of events and causal rules triggered by events, determine what conditions must be true after each event.
Reference: [13] <author> T. L. Dean and D. V. McDermott. </author> <title> Temporal data base management. </title> <journal> Artificial Intelligence, </journal> <volume> 32(1) </volume> <pages> 1-55, </pages> <year> 1987. </year> <note> Also appears in [1]. </note>
Reference-contexts: Other approaches have dealt with the problem of determining the resulting state in a variety of ways. In TMM <ref> [13] </ref>, when a set of time tokens conflict with a new time token, all the time tokens in the set are constrained to end before or begin after the new one. This conservative approach would possibly create more constraints than necessary to eliminate the contradiction.
Reference: [14] <author> J. Doyle and M. P. Wellman. </author> <title> Impediments to universal preference-based default theories. </title> <journal> Artificial Intelligence, </journal> <volume> 49 </volume> <pages> 97-128, </pages> <year> 1991. </year>
Reference-contexts: All of this again calls into question the "restricted language thesis" proposed by Levesque and Brachman [27], i.e., that the expressiveness of representations needs to be restricted so that inference is tractable. Doyle and Patil <ref> [14] </ref> persuasively argue that restricting the expressiveness of a general-purpose representation system to ensure polynomial reasoning "destroys the generality of the language and the system" and "fails to permit expression of concepts necessary to some applications." The above complexity results for planning provide additional evidence against the restricted language thesis. <p> Of course, the fact that Extend can be formalized in terms of model preference ordering does not make it reasonable. Doyle and Wellman <ref> [14] </ref> point out that any model preference ordering that is based on local ordering criteria (e.g., the default preference ordering) and that prefers one model over all others (e.g., the Extend function) generally violates some principle 12 A minor (?) difference is that the formulas left out of a possible world
Reference: [15] <author> M. E. Drummond. </author> <title> A representation of action and belief for automatic planning systems. </title> <booktitle> In Reasoning about Actions and Plans: Proc. of the 1986 Workshop, </booktitle> <pages> pages 189-211, </pages> <address> Timberline, Oregon, </address> <year> 1987. </year> <month> 34 </month>
Reference-contexts: This conservative approach would possibly create more constraints than necessary to eliminate the contradiction. The plan net approach of Drummond <ref> [15] </ref> requires a "reconciliation set selection function" to choose among alternative ways to resolve inconsistency, but does not specify any constraints on its definition. Of course, in the situation calculus, this is where the infamous frame problem appears [22].
Reference: [16] <author> K. Erol, D. S. Nau, and V. S. Subrahmanian. </author> <title> Complexity, decidability, and undecid-ability results for domain-independent planning. </title> <type> Technical report, </type> <institution> Dept. of Computer Science, Univ. of Maryland, College Park, Maryland, </institution> <year> 1991. </year>
Reference-contexts: Chapman proved that planning is undecidable and so clearly demonstrated the difficulty of planning in general, but did not show what features of tweak's representation are to blame for the complexity. Erol et al. <ref> [16] </ref> analyze tweak-like planning further, showing that planning is undecidable only if the number of constants is infinite. They also demonstrate that if the set of constants are finite, the operators are fixed, no functions are allowed, and no negative pre- or postconditions are permitted, then tweak-like planning is polynomial. <p> Figures 1, 2, and 3 summarize the results. A few of the results are due to Erol et al. <ref> [16] </ref>, and are footnoted accordingly. 1.3.1 PLANSAT Let PLANSAT be the problem of determining the existence of a solution for propositional STRIPS planning. <p> PLANSAT is polynomial in the previous case if the number of goals is bounded by a constant. PLANSAT is polynomial if each operator is limited to positive preconditions and positive postconditions. Erol et al. <ref> [16] </ref> show that PLANSAT is NLOGSPACE-complete if each operator is limited to one positive precondition and positive postconditions. 4 PLANSAT is PSPACE-hard because any Turing machine transition from one state to another can be mapped into an operator. <p> That is, the postcondition of one operator might be useful to achieve several goals via other operators, and it is difficult to choose a minimum set of such conditions. This improves on the result in Erol et al. <ref> [16] </ref>, who show that PLANMIN is NP-complete if each operator is limited to one positive precondition and positive postconditions. 6 Erol et al. [16] also analyze the complexity of PLANMIN (which they call PLAN LENGTH), but, with one exception described in the next paragraph, they only consider restrictions on negation in <p> This improves on the result in Erol et al. <ref> [16] </ref>, who show that PLANMIN is NP-complete if each operator is limited to one positive precondition and positive postconditions. 6 Erol et al. [16] also analyze the complexity of PLANMIN (which they call PLAN LENGTH), but, with one exception described in the next paragraph, they only consider restrictions on negation in preconditions and postconditions. <p> to propositional STRIPS planning under the following restrictions: the initial state and goal conditions are ground literals, pre- and postconditions in operators are limited to literals; each variable in an operator is limited to a polynomial number of values; and each operator is limited to a constant number of variables <ref> [16] </ref>. An exponential number of values for a variable would lead to an exponential number of ground atomic formulas. A polynomial number of variables in an operator would lead to an exponential number of propositional STRIPS planning operators. <p> However, as noted above, moving a block from one stack to another has the same effect as two existing operators, each with one postcondition. Erol et al. <ref> [16] </ref> show that such "macro" operators can lead to shorter plans, and the problem remains tractable. 4 Complexity Results for PLANMIN This section describes and demonstrates complexity results for PLANMIN, the decision problem of determining whether an instance of propositional STRIPS planning has a solution of k or fewer operators, where <p> Let n be the number of clauses. An equivalent PLANMIN + 1 instance can be constructed using the following types 11 Also shown in Erol et al. <ref> [16] </ref>. 21 of conditions. T (i) u i = true is selected. F (i) u i = false is selected. V (i) some value for u i has been selected. C (j) The jth clause is satisfied. <p> Corollary 4.3 PLANMIN 1+ 1+ is NP-complete. This improves on the result in Erol et al. <ref> [16] </ref>, who show that PLANMIN 1+ + is NP complete, but do not derive the minimum number of postconditions to obtain this result.
Reference: [17] <author> R. E. Fikes and N. J. Nilsson. </author> <title> STRIPS: A new approach to the application of theorem proving to problem solving. </title> <journal> Artificial Intelligence, </journal> 2(3/4):189-208, 1971. Also appears in <volume> [1]. </volume>
Reference-contexts: They are intended to be tools for theoretical analysis rather than programming convenience. The results for these models apply to first-order STRIPS planning [28] when there is a limited number of relevant ground formulas. The first model of planning, called "propositional STRIPS planning," is STRIPS planning <ref> [17] </ref> in which an initial state is a finite set of ground atomic formulas, indicating that the corresponding conditions are initially true, and that all other relevant conditions are initially false; the preconditions and postconditions of an operator are ground literals; and the goals are ground literals.
Reference: [18] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability. </title> <editor> W. H. </editor> <publisher> Freeman, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: literals, full knowledge of initial state and operators, deterministic operators, and only asking whether any solution exists, planning is a very hard problem. 1.3.2 PLANMIN To describe the computational complexity of an optimization problem, it is converted into the decision problem of determining whether a given bound can be achieved <ref> [18] </ref>. So to describe the complexity of optimal planning, let PLANMIN be the problem of determining the existence of a solution of k operators or less for propositional STRIPS planning, where k is given as part of the input. The proofs for these results are in Section 4.
Reference: [19] <author> M. P. Georgeff. </author> <title> Planning. </title> <booktitle> Annual Review of Computer Science, </booktitle> <volume> 2 </volume> <pages> 349-400, </pages> <year> 1987. </year> <note> Also appears in [1]. </note>
Reference-contexts: The ramification problem 1 is finessed by requiring a preference ordering of all the literals so that, roughly, if two literals are true of 1 The ramification problem is that the effects of an operator in the context of a formula can be ambiguous <ref> [19, 20] </ref>.
Reference: [20] <author> M. L. Ginsberg and D. E. Smith. </author> <title> Reasoning about actions I: A possible worlds approach. </title> <journal> Artificial Intelligence, </journal> <volume> 35(2) </volume> <pages> 165-195, </pages> <year> 1988. </year>
Reference-contexts: The ramification problem 1 is finessed by requiring a preference ordering of all the literals so that, roughly, if two literals are true of 1 The ramification problem is that the effects of an operator in the context of a formula can be ambiguous <ref> [19, 20] </ref>. <p> Propositional STRIPS planning is equivalent to Nilsson's [33] simplified description of STRIPS except that propositional STRIPS planning requires that each planning instance explicitly specifies all relevant ground atomic formulas. Extended propositional STRIPS planning is most closely related to Ginsberg and Smith's <ref> [20] </ref> possible world approach to reasoning about actions. <p> are true in all states, as is done in [28]; each quantified variable in a formula is limited to a polynomial number of values; and each formula is limited to a constant number of quantified variables. 5.2 Related Work Extended propositional STRIPS planning is closely related to Ginsberg and Smith's <ref> [20] </ref> possible worlds approach to reasoning about actions. A possible state S in my framework corresponds to a "partial world" W (a set of first-order formulas) in theirs. Each partial world would also include the domain theory as "protected" formulas.
Reference: [21] <author> N. Gupta and D. S. Nau. </author> <title> Complexity results for blocks-world planning. </title> <booktitle> In Proc. Ninth National Conf. on Artificial Intelligence, </booktitle> <pages> pages 629-633, </pages> <address> Anaheim, California, </address> <year> 1991. </year>
Reference-contexts: Ratner and Warmuth [34] show that finding optimal solutions to the n fi n generalization of the 8-puzzle is NP-hard. Gupta and Nau <ref> [21] </ref> and Chenoweth [11] show that optimal blocks-world planning is NP-hard. Bacchus and Yang [2] present tractable tests for determining when an hierarchical planning problem has a property called downward refinement, i.e., every abstract solution can be refined into a concrete solution.
Reference: [22] <author> P. J. Hayes. </author> <title> The frame problem and related problems in artificial intelligence. </title> <editor> In A. Elithorn and D. Jones, editors, </editor> <booktitle> Artificial and Human Thinking, </booktitle> <pages> pages 45-59. </pages> <publisher> Jossey-Bass, </publisher> <address> San Francisco, </address> <year> 1973. </year>
Reference-contexts: The plan net approach of Drummond [15] requires a "reconciliation set selection function" to choose among alternative ways to resolve inconsistency, but does not specify any constraints on its definition. Of course, in the situation calculus, this is where the infamous frame problem appears <ref> [22] </ref>. This problem can be recast as preferring one model over another, as in Shoham's preference logics [36]. Note that it is easy to map a possible state to its model.
Reference: [23] <editor> J. Hendler, A. Tate, and M. </editor> <title> Drummond. AI planning: Systems and techniques. </title> <journal> AI Magazine, </journal> <volume> 11(2) </volume> <pages> 61-77, </pages> <year> 1990. </year>
Reference-contexts: Instead, the reader is referred to Allen et al. [1] and Hendler et al. <ref> [23] </ref>. Despite the sizable literature, results on computational complexity are sparse. Dean and Boddy [12] analyze the complexity of temporal projection|given a partial ordering of events and causal rules triggered by events, determine what conditions must be true after each event. <p> To say the least, these results in combination with previous analyses are not encouraging for domain-independent planning. However, operators must have multiple preconditions, simultaneous positive and negative postconditions, and apparently many more "features" to implement any interesting domain <ref> [9, 23] </ref>. While additional features might be good for making a planner more useful as a programming tool, generality has its downside|tractability of planning cannot be guaranteed even with moderately expressive operators.
Reference: [24] <author> R. E. Korf. Macro-operators: </author> <title> A weak method for learning. </title> <journal> Artificial Intelligence, </journal> <volume> 26(1) </volume> <pages> 35-77, </pages> <year> 1985. </year>
Reference-contexts: Korf [25] considers how various global properties of planning problems (e.g., serializable subgoals, operator decomposability, abstraction) affect the complexity of using problem space search to find plans. In contrast, I focus exclusively on local properties of operators. However, except for Korf's own analysis of operator decomposability <ref> [24] </ref>, neither he nor I describe the relationship from these properties of planning problems to the properties of operators. Clearly, this is an issue that future work should address. Perhaps the most important complexity results for planning are due to Chapman's analysis of tweak [9]. <p> As mentioned above, Korf [25] discusses how global properties such as serializable subgoals, operator decomposability, and abstraction can lead to efficient search for plans. Understanding how these properties are realized as restrictions on the set of operators as a whole is a promising research approach. Korf's <ref> [24] </ref> analysis of serial decomposability and Bacchus and Yang's [2] analysis of abstraction are significant steps in this direction, though see [7] for negative results on the complexity of serial decomposability.
Reference: [25] <author> R. E. Korf. </author> <title> Planning as search: A quantitative approach. </title> <journal> Artificial Intelligence, </journal> <volume> 33(1) </volume> <pages> 65-88, </pages> <year> 1987. </year> <note> Also appears in [1]. </note>
Reference-contexts: However, they only consider problems of prediction in which a partial ordering of events is given, whereas the equivalent planning problem would be to find some ordering of any set of events that achieves some set of conditions. Korf <ref> [25] </ref> considers how various global properties of planning problems (e.g., serializable subgoals, operator decomposability, abstraction) affect the complexity of using problem space search to find plans. In contrast, I focus exclusively on local properties of operators. <p> An alternative approach is to restrict global properties of planning instances rather than local properties of operators and formulas. As mentioned above, Korf <ref> [25] </ref> discusses how global properties such as serializable subgoals, operator decomposability, and abstraction can lead to efficient search for plans. Understanding how these properties are realized as restrictions on the set of operators as a whole is a promising research approach.
Reference: [26] <author> M. R. Krom. </author> <title> The decision problem for a class of first-order formulas in which all disjunctions are binary. </title> <journal> Zeitschrift fur Mathematische Logik und Grundlagen der Mathematik, </journal> <volume> 13(1) </volume> <pages> 15-20, </pages> <year> 1967. </year>
Reference-contexts: For a Krom domain theory, a postcondition always implies the same set of conditions 7 The use of "Krom" to refer to this type of formula can be traced to a paper by Krom <ref> [26] </ref>. 7 regardless of the current state and other postconditions. Thus, any EPLANSAT problem restricted to Krom theories is equivalent to the corresponding PLANSAT problem without any limitations on the number or type of postconditions.
Reference: [27] <author> H. J. Levesque and R. J. Brachman. </author> <title> Expressiveness and tractability in knowledge representation and reasoning. </title> <journal> Computational Intelligence, </journal> <volume> 3(1) </volume> <pages> 78-93, </pages> <year> 1987. </year>
Reference-contexts: However, there are few results that provide clear dividing lines between tractable and intractable planning. Below, I clarify several of these dividing lines by analyzing the computational complexity of a planning problem and a variety of restricted and augmented versions. From the perspective of the expressiveness-tractability tradeoff <ref> [27] </ref>, I primarily consider the expressiveness of operators and formulas. 1.1 Previous Research The literature on planning is voluminous, and no attempt to properly survey the planning literature is attempted here. Instead, the reader is referred to Allen et al. [1] and Hendler et al. [23]. <p> While additional features might be good for making a planner more useful as a programming tool, generality has its downside|tractability of planning cannot be guaranteed even with moderately expressive operators. All of this again calls into question the "restricted language thesis" proposed by Levesque and Brachman <ref> [27] </ref>, i.e., that the expressiveness of representations needs to be restricted so that inference is tractable.
Reference: [28] <author> V. Lifschitz. </author> <title> On the semantics of STRIPS. </title> <booktitle> In Reasoning about Actions and Plans: Proc. of the 1986 Workshop, </booktitle> <pages> pages 1-9, </pages> <address> Timberline, Oregon, </address> <year> 1987. </year> <note> Also appears in [1]. </note>
Reference-contexts: Both models are impoverished compared to working planners. They are intended to be tools for theoretical analysis rather than programming convenience. The results for these models apply to first-order STRIPS planning <ref> [28] </ref> when there is a limited number of relevant ground formulas. <p> One is that I assume that all non-literal formulas in the initial state and in the postconditions of operators are true in all states, as is done in Lifschitz's formalization of the semantics of STRIPS planning <ref> [28] </ref>. <p> extended propositional STRIPS planning under the same conditions as for propositional STRIPS planning 26 with the following generalizations: the initial state, operators, and goals can contain non-literal formulas; all non-literal formulas in the initial state and in the postconditions of operators are true in all states, as is done in <ref> [28] </ref>; each quantified variable in a formula is limited to a polynomial number of values; and each formula is limited to a constant number of quantified variables. 5.2 Related Work Extended propositional STRIPS planning is closely related to Ginsberg and Smith's [20] possible worlds approach to reasoning about actions.
Reference: [29] <author> S. Micali and V. V. Vazivani. </author> <title> An O( q jvj jEj) algorithm for finding maximum matching in general graphs. </title> <booktitle> In Proc. 21st IEEE Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 17-27, </pages> <address> Syracuse, New York, </address> <year> 1980. </year>
Reference-contexts: Proof: This can be reduced to maximum matching of a graph, which has a polynomial algorithm <ref> [29] </ref>. A matching of a graph is a set of edges such that no two edges are incident to the same vertex. Assuming that the goal is reachable, the reduction from a given PLANMIN 0 2+ instance is as follows. Each operator that makes a negative goal true is removed. <p> Therefore, the shortest plan must be of size n m. Determining reachability can be done in time linear in the number of conditions plus the number of operators. Micali and Vazivani's maximum matching algorithm <ref> [29] </ref> is O (e p where e is the number of edges, and v is the number of vertices.
Reference: [30] <author> S. Minton, M. D. Johnston, A. B. Philips, and P. Laird. </author> <title> Minimizing conflicts: A heuristic repair method for constraint satisfaction and scheduling problems. </title> <journal> Artificial Intelligence, </journal> <volume> 58 </volume> <pages> 161-205, </pages> <year> 1992. </year> <month> 35 </month>
Reference-contexts: However, while it appears that NP-complete problems are hard only for narrow ranges of the problems <ref> [10, 30, 31] </ref>, there is little research on problems that are PSPACE-complete. Promising directions include Musick and Russell [32], who develop a Markov model approximation for analyzing hill-climbing algorithms on single postcondition problems, and Bylander [8], who shows that most PLANSAT instances under certain distributional assumptions can be efficiently solved.
Reference: [31] <author> D. Mitchell, B. Selman, and H. Levesque. </author> <title> Hard and easy distributions of SAT prob-lems. </title> <booktitle> In Proc. Tenth National Conf. on Artificial Intelligence, </booktitle> <pages> pages 459-465, </pages> <address> San Jose, California, </address> <year> 1992. </year>
Reference-contexts: However, while it appears that NP-complete problems are hard only for narrow ranges of the problems <ref> [10, 30, 31] </ref>, there is little research on problems that are PSPACE-complete. Promising directions include Musick and Russell [32], who develop a Markov model approximation for analyzing hill-climbing algorithms on single postcondition problems, and Bylander [8], who shows that most PLANSAT instances under certain distributional assumptions can be efficiently solved.
Reference: [32] <author> R. Musick and S. Russell. </author> <title> How long will it take? In Proc. </title> <booktitle> Tenth National Conf. on Artificial Intelligence, </booktitle> <pages> pages 466-471, </pages> <address> San Jose, California, </address> <year> 1992. </year>
Reference-contexts: However, while it appears that NP-complete problems are hard only for narrow ranges of the problems [10, 30, 31], there is little research on problems that are PSPACE-complete. Promising directions include Musick and Russell <ref> [32] </ref>, who develop a Markov model approximation for analyzing hill-climbing algorithms on single postcondition problems, and Bylander [8], who shows that most PLANSAT instances under certain distributional assumptions can be efficiently solved.
Reference: [33] <author> N. J. Nilsson. </author> <booktitle> Principles of Artificial Intelligence. </booktitle> <publisher> Tioga, </publisher> <address> Palo Alto, California, </address> <year> 1980. </year>
Reference-contexts: The preference ordering ensures that the result of applying an operator is unambiguous. First-order STRIPS planning can be reduced to extended propositional STRIPS planning if the number of relevant ground formulas is limited. 2 See Section 5 for a more complete description. Propositional STRIPS planning is equivalent to Nilsson's <ref> [33] </ref> simplified description of STRIPS except that propositional STRIPS planning requires that each planning instance explicitly specifies all relevant ground atomic formulas. Extended propositional STRIPS planning is most closely related to Ginsberg and Smith's [20] possible world approach to reasoning about actions.
Reference: [34] <author> D. Ratner and M. Warmuth. </author> <title> Finding a shortest solution for the n fi n extension of the 15-puzzle is intractable. </title> <booktitle> In Proc. Fifth National Conf. on Artificial Intelligence, </booktitle> <pages> pages 168-172, </pages> <address> Philadelphia, </address> <year> 1986. </year>
Reference-contexts: Ratner and Warmuth <ref> [34] </ref> show that finding optimal solutions to the n fi n generalization of the 8-puzzle is NP-hard. Gupta and Nau [21] and Chenoweth [11] show that optimal blocks-world planning is NP-hard.
Reference: [35] <author> W. J. Savitch. </author> <title> Relationship between nondeterministic and deterministic tape complexities. </title> <journal> J. Computer and System Sciences, </journal> <volume> 4 </volume> <pages> 177-192, </pages> <year> 1970. </year>
Reference-contexts: Although the length N of a solution plan might be exponential, an algorithm only needs memory for O (lg N ) states to determine if a solution exists <ref> [35] </ref>. <p> Such loops can be removed, resulting in a solution of length less than 2 n . Hence, no more than 2 n nondeterministic choices are required. Because NPSPACE = PSPACE <ref> [35] </ref>, PLANSAT is also in PSPACE. Turing machines whose space is polynomially bounded can be polynomially reduced to PLANSAT.
Reference: [36] <author> Y. Shoham. </author> <title> Reasoning about Change. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1988. </year> <month> 36 </month>
Reference-contexts: Of course, in the situation calculus, this is where the infamous frame problem appears [22]. This problem can be recast as preferring one model over another, as in Shoham's preference logics <ref> [36] </ref>. Note that it is easy to map a possible state to its model. The result of the Extend function can then be formalized as follows: Let S be a possible state, and M , its corresponding model. Let o be an operator whose preconditions are satisfied by S.
References-found: 36

