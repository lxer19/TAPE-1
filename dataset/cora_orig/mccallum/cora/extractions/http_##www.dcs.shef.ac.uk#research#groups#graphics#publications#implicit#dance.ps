URL: http://www.dcs.shef.ac.uk/research/groups/graphics/publications/implicit/dance.ps
Refering-URL: http://www.dcs.shef.ac.uk/research/groups/graphics/publications/publications.html
Root-URL: 
Email: E-mail: a.opalach@dcs.shef.ac.uk  
Phone: Tel: +44 114 282 5577 Fax: +44 114 278 0972  
Title: High Level Control of Implicit Surfaces for Character Animation  
Author: Agata Opalach Steve Maddock 
Keyword: Implicit Surfaces, Character Animation, Dance Notation, Automatic Motion Generation  
Address: Regent Court, 211 Portobello Street, Sheffield, S1 4DP, UK  
Affiliation: Department of Computer Science, The University of Sheffield,  
Abstract: Implicit surfaces, also known as blobby molecules [2], metaballs [14] or soft objects [22], are particularly suitable for modelling smoothly blended, plasticine objects. One of their most attractive features is their deformability. The shape of an object can be altered by simply moving the skeletal elements. A closed, smoothly blended surface is always guaranteed although the topology of an object may change. In this paper we will look closer at the use of implicit surfaces for character animation. We use a layered model to represent characters. A graph defines an articulated figure. The limbs which cover the articulated figure are designed by a user and form the body of a character. The body is covered by esh which can be automatically generated by the system (skin) or partially designed by a user (strands of esh: hair, a tail etc.). We use a mixture of manual and automatic motion control. Keyframes for the articulated figure are specified using dance notation and the motion of esh is automatically generated by the system. A user can control the motion of esh at a high level using a set of adjustable parameters (gravity, esh firmness and exaggeration). We illustrate our approach using a dancer performing to the given choreography. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Beier, T. </author> <title> Practical Uses for Implicit Surfaces in Animation, Siggraph 90 Course Notes No 23, Modelling and Animating With Implicit Surfaces, </title> <note> pp 20.1-20.11 </note>
Reference-contexts: An implicit surface can be defined as where Iso is the isovalue at which an isosurface is extracted and . Figure 1 shows an implicit surface created around two points. We will refer to skeletal elements as primitives. Wyvill et al. [23] and Beier <ref> [1] </ref> comment on the usefulness of implicit surfaces for character animation. They stress the ability of implicit surfaces to conform to the environment, to metamorphose and to change topology effects often required in character animation and more difficult to achieve using polygonal or parametric surface models. <p> We want the primitives to change their spatial relationship slightly to create more natural motion, with deformation. On the other hand we do not want to specify a separate path for each primitive in a character. Keyframe animation is often used for motion control of implicit surfaces <ref> [23, 1] </ref>. A set of keyframe positions for all primitives is given and the inbetweens are automatically generated by interpolating between the corresponding primitives in each keyframe. The same approach can be used for metamorphosis of two implicit models [24].
Reference: 2. <author> Blinn, J. F., </author> <title> A Generalisation of Algebraic Surface Drawing, </title> <journal> ACM Trans. Graphics, </journal> <volume> Vol. 1, No 3, </volume> <month> July </month> <year> 1982, </year> <pages> pp 135-256 </pages>
Reference: 3. <author> Bloomenthal, J. and Wyvill, B., </author> <title> Interactive Techniques for Implicit Modelling, </title> <journal> Computer Graphics, </journal> <volume> Vol. 24, No 2, </volume> <year> 1990, </year> <pages> pp 109-116 </pages>
Reference-contexts: Skin: Skin around a limb is automatically generated by our system. The algorithm is adapted from the scattering method described in <ref> [3] </ref>, in which particles travel to the isosurface. Initially, for each primitive in a limb (a parent primitive), esh primitives are evenly distributed around it at its radius of inuence. Then, they migrate towards the parent until they reach the isosurface.
Reference: 4. <author> Chadwick, J.E., D.R. Haumann and R.E. Parent, </author> <title> Layered Construction for Deformable Animated Characters, </title> <journal> Computer Graphics, </journal> <volume> Vol. 23, </volume> <booktitle> Proc. of SIGGRAPH89, </booktitle> <pages> pp 243-252. </pages>
Reference-contexts: Creases and bulges of the skin can then be modelled but the blending graph has to be chosen with care to avoid surface discontinuities. Alternative methods for modelling skin surface of an articulated figure use polygons <ref> [12, 4] </ref> or parametric surfaces [8]. <p> Alternative methods for modelling skin surface of an articulated figure use polygons [12, 4] or parametric surfaces [8]. In [12] a method called joint-dependent local deformation (JLD) is developed to modify polygons around a joint. <ref> [4] </ref> uses free-form deformation (FFD) [17] and modifies a deformation lattice to alter the surface polygons. [8] describes hierarchical B-spline surface which can generate folds and creases around joints.
Reference: 5. <author> Desbrun, M. and M.-P. Gascuel, </author> <title> Highly Deformable Material for Animation and Collision Processing, </title> <booktitle> Proc. 5th Eurographics Workshop on Animation and Simulation, </booktitle> <address> Oslo, </address> <month> September 94. </month>
Reference-contexts: The particles are then treated as skeletal elements (points) and rendered as an implicit surface. A generalised physically based particle system for skeletal elements has been used to model a highly deformable material <ref> [5] </ref>. Such material can undergo fractures and its chunks can join back together. Collision detection and response between unblendable materials can also be modelled. In our system we use a mixture of keyframing and automatically generated motion to animate implicit surfaces.
Reference: 6. <author> Desbrun, M. and M.-P. Gascuel, </author> <title> Adaptive Sampling of Implicit Surfaces for Interactive Modelling and Animation, </title> <booktitle> Proc. 1st International Workshop on Implicit Surfaces95, </booktitle> <address> Grenoble, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: Such skin is always C 1 continuous regardless of the movement of the primitives. During animation however, deformation of the skin is difficult to control. Unwanted blending may occur if two adjacent limbs are allowed to blend. A solution to this problem <ref> [15, 6, 10] </ref> requires a blending graph to be defined for the articulated structure which determines which parts of a character can blend with each other and which deform during contact. <p> Then, they migrate towards the parent until they reach the isosurface. The primitives which reach the parent without intersecting the isosurface are ignored. The rest constitutes the skin. The distribution of esh primitives is not even. Some recent work <ref> [21, 6] </ref> proposes adaptive sampling of implicit surfaces which produces a more uniform distribution of sample points.
Reference: 7. <author> Eshkol, N. and A. Wachmann, </author> <title> Movement Notation, </title> <editor> Weidenfeld and Nicolson, </editor> <year> 1958. </year>
Reference-contexts: We try to balance between fully automatic motion generation and total manual control over the movement. Keyframes of an articulated figure which defines a character are given by a user in a script file using Eshkol and Wachmanns dance notation <ref> [7] </ref>. The motion of esh is calculated by the system from the motion of the articulated figure. An animator can control the esh behaviour by changing a set of parameters, which can be adjusted by turning each feature up or down. <p> Animation Control In order to specify an animation sequence we first define keyframes for an articulated figure which defines a character in a script file. The specification language consists of commands describing the movement in Eshkol and Wachmanns dance notation <ref> [7] </ref>. Our system animates the limbs according to the given choreography. During the animation, the primitives in a limb stay in a constant position in relation to each other. The deformation is achieved through the motion of the esh. <p> A set of parameters (gravity, esh firmness and exaggeration factor) is provided to give an animator control over the way the esh motion is generated. 4.1 Dance Notation In their movement notation <ref> [7] </ref>, Eshkol and Wachmann define a model of limbs and joints to represent a human body. They then define movement for each limb using three types of transformations: rotatory movements, plane movements and curved surface movements.
Reference: 8. <author> Forsey, </author> <title> D.R., A Surface Model for Skeleton-Based Character Animation, </title> <booktitle> Proc. Eurographics Workshop on Animation and Simulation91, Vienna, </booktitle> <pages> pp. 55-73. </pages>
Reference-contexts: Creases and bulges of the skin can then be modelled but the blending graph has to be chosen with care to avoid surface discontinuities. Alternative methods for modelling skin surface of an articulated figure use polygons [12, 4] or parametric surfaces <ref> [8] </ref>. In [12] a method called joint-dependent local deformation (JLD) is developed to modify polygons around a joint. [4] uses free-form deformation (FFD) [17] and modifies a deformation lattice to alter the surface polygons. [8] describes hierarchical B-spline surface which can generate folds and creases around joints. <p> methods for modelling skin surface of an articulated figure use polygons [12, 4] or parametric surfaces <ref> [8] </ref>. In [12] a method called joint-dependent local deformation (JLD) is developed to modify polygons around a joint. [4] uses free-form deformation (FFD) [17] and modifies a deformation lattice to alter the surface polygons. [8] describes hierarchical B-spline surface which can generate folds and creases around joints. Although these methods give more control over the way the skin deforms, they require polygon or parametric patch fitting to preserve surface continuity, which is automatic in the case of implicit surfaces.
Reference: 9. <author> Gascuel, M.-P., </author> <title> An Implicit Formulation for Precise Contact Modelling between Flexible Solids, </title> <booktitle> Proceedings of SIGGRAPH 93 (Anaheim, </booktitle> <address> California, </address> <month> August 1-6, </month> <year> 1993). </year> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, 1993, ACM SIGGRAPH, </booktitle> <address> New York, </address> <pages> pp 313-320 </pages>
Reference-contexts: A C 1 continuous surface is always created but the way the isosurface deforms during animation is difficult to predict or control. Another approach is to apply deformation to the shape of the scalar field around primitives to achieve realistic and controlled results. For instance, Gascuel <ref> [9] </ref> uses dynamic simulation to animate implicitly defined solids. She detects collisions between them and calculates the precise contact surface between them and the local deformation during collisions. Wyvill [25] uses space warping to create squash and stretch on a bouncing ball.
Reference: 10. <author> Guy, A. and B. Wyvill, </author> <title> Controlled Blending For Implicit Surfaces, </title> <booktitle> Proc. 1st International Workshop on Implicit Surfaces95, </booktitle> <address> Grenoble, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: Such skin is always C 1 continuous regardless of the movement of the primitives. During animation however, deformation of the skin is difficult to control. Unwanted blending may occur if two adjacent limbs are allowed to blend. A solution to this problem <ref> [15, 6, 10] </ref> requires a blending graph to be defined for the articulated structure which determines which parts of a character can blend with each other and which deform during contact.
Reference: 11. <author> Lasseter, J., </author> <title> Principles of Traditional Animation Applied to 3D Computer Animation, </title> <journal> Computer Graphics, </journal> <volume> Vol. 21, No 4, </volume> <month> July </month> <year> 1987, </year> <pages> pp 35-44 </pages>
Reference-contexts: The esh deforms during motion according to both physical laws (e.g. gravity) and traditional animation principles [19]. In [16], we implemented automatic generation of squash and stretch, follow through and exaggeration, a few of the rules of traditional animation. As stressed by Lasseter <ref> [11] </ref>, these effects are important in computer generated character animation. designed by a user and esh covering the body 3. Model defining a character. Each link in the graph represents a limb, which is designed by a user.
Reference: 12. <author> Magnenat-Thalmann, N., R. Laperriere and D.Thalmann, </author> <title> Joint-Dependent Local Deformations for Hand Animation and Object Grasping, </title> <booktitle> Proc. Graphics Interface88, </booktitle> <pages> pp. 26-33. </pages>
Reference-contexts: Creases and bulges of the skin can then be modelled but the blending graph has to be chosen with care to avoid surface discontinuities. Alternative methods for modelling skin surface of an articulated figure use polygons <ref> [12, 4] </ref> or parametric surfaces [8]. <p> Creases and bulges of the skin can then be modelled but the blending graph has to be chosen with care to avoid surface discontinuities. Alternative methods for modelling skin surface of an articulated figure use polygons [12, 4] or parametric surfaces [8]. In <ref> [12] </ref> a method called joint-dependent local deformation (JLD) is developed to modify polygons around a joint. [4] uses free-form deformation (FFD) [17] and modifies a deformation lattice to alter the surface polygons. [8] describes hierarchical B-spline surface which can generate folds and creases around joints.
Reference: 13. <author> Miller, G. and Pearce, A., </author> <title> Globular Dynamics: A Connected Particle System for Animating Viscous Fluids, </title> <journal> Vol. </journal> <volume> 13, No 3, </volume> <year> 1989, </year> <pages> pp 305-309 </pages>
Reference-contexts: Physical simulation in a particle system can also be used to animate implicit surfaces. It gives particularly good results for modelling inanimate materials, e.g. mud, clay or dough. Deformable material modelled in a particle system can be visualised using implicit surfaces <ref> [13, 18, 20] </ref>. The motion of individual particles is modelled by physically based simulation using the Newton equations of motion and by considering the interaction forces between the particles. The particles are then treated as skeletal elements (points) and rendered as an implicit surface. <p> This introduces irregularities to the appearance of the esh, which follows the traditional animation rule of avoiding symmetry in order to make a character more interesting. The interaction between two primitives is given by the Lennard-Jones forces implemented after <ref> [13] </ref>: where F ip - force between primitive i and p D - distance between the primitives P - the position vector from the primitive i to the primitive p m, n - constants, m = 2n b 1 , b 2 - variables, r 0 - the equilibrium distance between
Reference: 14. <author> Nishimura, H., Hirai, M., Kawai, T., Kawata, T., Shirakawa, I. and Omura, K., </author> <title> Object Modelling by Distribution Function and a Method of Image Generation, </title> <journal> The Transactions of the Institute of Electronics and Communication Engineers of Japan, 1985, </journal> <volume> Vol. J68-D, Part 4, </volume> <pages> pp. </pages> <month> 718-725, </month> <title> in Japanese, translated into English by Takao Fujuwara </title>
Reference: 15. <author> Opalach, A. and Maddock, S., </author> <title> Implicit Surfaces: Appearance, Blending and Consistency, </title> <booktitle> Proc. 4th Eurographics Workshop on Animation and Simulation (Barcelona, </booktitle> <month> 4-5th September, </month> <year> 1993), </year> <pages> 233-245. </pages>
Reference-contexts: To overcome these problems, we identified the ABC of implicit surfaces f i : 3 fi F P ( ) f i P ( ) n P for character animation: appearance, blending and coherence <ref> [15] </ref>. A character has to have appearance which we define as a recognisable look, that is clearly maintained throughout the animation. Blending is an attractive property of implicit surfaces but it is sometimes undesirable, e.g. blending between the limbs and the body. <p> Such skin is always C 1 continuous regardless of the movement of the primitives. During animation however, deformation of the skin is difficult to control. Unwanted blending may occur if two adjacent limbs are allowed to blend. A solution to this problem <ref> [15, 6, 10] </ref> requires a blending graph to be defined for the articulated structure which determines which parts of a character can blend with each other and which deform during contact.
Reference: 16. <author> Opalach, A. and Maddock, S., </author> <title> Disney Effects Using Implicit Surfaces, </title> <booktitle> Proc. 5th Eurographics Workshop on Animation and Simulation (Oslo, </booktitle> <month> 17-18th September, </month> <year> 1994) </year>
Reference-contexts: We control the way a character moves by specifying keyframes for the articulated figure which defines it and let the system create the motion of the outer layer (skin, esh, plasticine coating, hair, tail etc.). We used this approach for generating traditional animation effects using implicit surfaces <ref> [16] </ref>. The esh deforms during motion according to both physical laws (e.g. gravity) and traditional animation principles [19]. In [16], we implemented automatic generation of squash and stretch, follow through and exaggeration, a few of the rules of traditional animation. <p> We used this approach for generating traditional animation effects using implicit surfaces <ref> [16] </ref>. The esh deforms during motion according to both physical laws (e.g. gravity) and traditional animation principles [19]. In [16], we implemented automatic generation of squash and stretch, follow through and exaggeration, a few of the rules of traditional animation. As stressed by Lasseter [11], these effects are important in computer generated character animation. designed by a user and esh covering the body 3. Model defining a character.
Reference: 17. <author> Sedeberg, T. and S. Parry, </author> <title> Free Form Deformations of Solid Geometric Models, </title> <journal> Computer Graphics, </journal> <volume> Vol. 20, </volume> <booktitle> Proc. </booktitle> <address> SIGGRAPH86. </address>
Reference-contexts: Alternative methods for modelling skin surface of an articulated figure use polygons [12, 4] or parametric surfaces [8]. In [12] a method called joint-dependent local deformation (JLD) is developed to modify polygons around a joint. [4] uses free-form deformation (FFD) <ref> [17] </ref> and modifies a deformation lattice to alter the surface polygons. [8] describes hierarchical B-spline surface which can generate folds and creases around joints.
Reference: 18. <author> Terzopoulos, D., Platt, J. and Fleisher, K. </author> <title> Heating and melting deformable models (from goop to glop), </title> <journal> Graphics Interface89, </journal> <month> June </month> <year> 1989, </year> <pages> pp 219-226 </pages>
Reference-contexts: Physical simulation in a particle system can also be used to animate implicit surfaces. It gives particularly good results for modelling inanimate materials, e.g. mud, clay or dough. Deformable material modelled in a particle system can be visualised using implicit surfaces <ref> [13, 18, 20] </ref>. The motion of individual particles is modelled by physically based simulation using the Newton equations of motion and by considering the interaction forces between the particles. The particles are then treated as skeletal elements (points) and rendered as an implicit surface.
Reference: 19. <author> Thomas, F. and O. Johnston, </author> <title> Disney Animation: the Illusion of Life, </title> <publisher> Abbeville Press, </publisher> <year> 1981 </year>
Reference-contexts: We used this approach for generating traditional animation effects using implicit surfaces [16]. The esh deforms during motion according to both physical laws (e.g. gravity) and traditional animation principles <ref> [19] </ref>. In [16], we implemented automatic generation of squash and stretch, follow through and exaggeration, a few of the rules of traditional animation. As stressed by Lasseter [11], these effects are important in computer generated character animation. designed by a user and esh covering the body 3.
Reference: 20. <author> Tonnesen, D., </author> <title> Modelling liquids and solids using thermal particles, </title> <booktitle> Proceedings of the Graphics Interface 1991, </booktitle> <pages> pp. 255-262 </pages>
Reference-contexts: Physical simulation in a particle system can also be used to animate implicit surfaces. It gives particularly good results for modelling inanimate materials, e.g. mud, clay or dough. Deformable material modelled in a particle system can be visualised using implicit surfaces <ref> [13, 18, 20] </ref>. The motion of individual particles is modelled by physically based simulation using the Newton equations of motion and by considering the interaction forces between the particles. The particles are then treated as skeletal elements (points) and rendered as an implicit surface.
Reference: 21. <author> Witkin, A. and P. Heckbert, </author> <title> Using Particles to Sample and Control Implicit Surfaces, </title> <booktitle> Computer Graphics, Proc. SIGGRAPH94, </booktitle> <pages> pp 269-278. </pages>
Reference-contexts: Then, they migrate towards the parent until they reach the isosurface. The primitives which reach the parent without intersecting the isosurface are ignored. The rest constitutes the skin. The distribution of esh primitives is not even. Some recent work <ref> [21, 6] </ref> proposes adaptive sampling of implicit surfaces which produces a more uniform distribution of sample points.
Reference: 22. <author> Wyvill, G. and McPheeters, C. and Wyvill, B., </author> <title> Data Structure for Soft Objects, </title> <journal> The Visual Computer, </journal> <volume> Vol. 2, No 4, </volume> <month> August </month> <year> 1986a, </year> <pages> pp 227-234 </pages>
Reference: 23. <author> Wyvill, G. and McPheeters, C. and Wyvill, B., </author> <title> Animating Soft Objects, </title> <journal> The Visual Computer, </journal> <volume> Vol. 2, No 4, </volume> <month> August </month> <year> 1986b, </year> <pages> pp 235-242 </pages>
Reference-contexts: An implicit surface can be defined as where Iso is the isovalue at which an isosurface is extracted and . Figure 1 shows an implicit surface created around two points. We will refer to skeletal elements as primitives. Wyvill et al. <ref> [23] </ref> and Beier [1] comment on the usefulness of implicit surfaces for character animation. They stress the ability of implicit surfaces to conform to the environment, to metamorphose and to change topology effects often required in character animation and more difficult to achieve using polygonal or parametric surface models. <p> We want the primitives to change their spatial relationship slightly to create more natural motion, with deformation. On the other hand we do not want to specify a separate path for each primitive in a character. Keyframe animation is often used for motion control of implicit surfaces <ref> [23, 1] </ref>. A set of keyframe positions for all primitives is given and the inbetweens are automatically generated by interpolating between the corresponding primitives in each keyframe. The same approach can be used for metamorphosis of two implicit models [24].
Reference: 24. <author> Wyvill, B., </author> <title> Metamorphosis of Implicit Surfaces, Siggraph 90 Course Notes 23, Modelling and Animating with Implicit Surfaces </title>
Reference-contexts: A set of keyframe positions for all primitives is given and the inbetweens are automatically generated by interpolating between the corresponding primitives in each keyframe. The same approach can be used for metamorphosis of two implicit models <ref> [24] </ref>. In this case, a matching between the primitives in two keyframes has to be found first. A C 1 continuous surface is always created but the way the isosurface deforms during animation is difficult to predict or control.
Reference: 25. <author> Wyvill, B., </author> <title> Warping Implicit Surfaces, </title> <booktitle> Proc. Western Computer Graphics Symposium (SKIGRAPH 92), </booktitle> <year> 1992, </year> <pages> pp 55-63 </pages>
Reference-contexts: For instance, Gascuel [9] uses dynamic simulation to animate implicitly defined solids. She detects collisions between them and calculates the precise contact surface between them and the local deformation during collisions. Wyvill <ref> [25] </ref> uses space warping to create squash and stretch on a bouncing ball. The ball squashes when it enters the region of space closer to the ground and stretches when it bounces back up. Physical simulation in a particle system can also be used to animate implicit surfaces.
References-found: 25

