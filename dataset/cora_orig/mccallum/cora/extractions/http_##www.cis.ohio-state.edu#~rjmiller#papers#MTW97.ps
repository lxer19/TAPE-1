URL: http://www.cis.ohio-state.edu/~rjmiller/papers/MTW97.ps
Refering-URL: http://www.cis.ohio-state.edu/~rjmiller/Research/pub.html
Root-URL: 
Email: rjmiller@cis.ohio-state.edu  odysseas@almaden.ibm.com  williams@almaden.ibm.com  
Title: DataWeb: Customizable Database Publishing for the Web  
Author: Renee J. Miller Odysseas G. Tsatalos John H. Williams 
Address: 2015 Neil Ave. Columbus, OH 43210  650 Harry Rd. San Jose, CA 95120  650 Harry Rd. San Jose, CA 95120  
Affiliation: Ohio State University  IBM Almaden  IBM Almaden  
Abstract: The goal of the DataWeb Project is to facilitate the querying and browsing of multimedia databases over a wide spectrum of networks and media. The explosive use of the World Wide Web has made it possible for organizations to make data available to an ever widening audience for an ever growing spectrum of uses. However, the Web also has altered the requirements for querying, and these new requirements must be addressed before the potential of Web-based applications can be fulfilled. As part of the DataWeb project, we have developed an intelligent query facility that builds on the access paradigms supported by current hypertext-style web applications and on decision support systems. This facility generalizes the basic navigation and abstraction mechanisms of these applications to be both extensible and scalable. Enabling users with minimal familiarity of the database contents to easily locate data of interest, this query facility forms the multimedia querying mechanism for a database publishing test-bed. The test-bed is operational and provides access to data of the Greek National Tourist Organization, including on-line brochures, slides, video clips and other travel related information.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Andrews, F. Kappe, and H. Maurer. </author> <title> Serving Information to the Web with Hyper-G. </title> <booktitle> In [24], </booktitle> <year> 1995. </year>
Reference-contexts: This support may be provided within application programs or within the database by adding support for native database types for hypertext documents <ref> [1, 14, 16] </ref>. While these tools facilitate the management of web sites (making use of DBMS to store web content), they do little to permit effective use of existing database from the Web.
Reference: [2] <author> D. Backman. </author> <title> Management Applications: Right Tool for the Right Job. In Network Computing Online, </title> <year> 1996. </year>
Reference-contexts: Using the common gateway interface (CGI), Web application programs can access DBMS and retrieve static Web pages or dynamically create pages based on input from the user and the data retrieved <ref> [2, 19] </ref>. However, the creation of these Web applications remains a costly tasks [19]. Emerging Web authoring and management tools provide some automated support for easing this task including version management, consistency checking of the generated pages and links, and basic multi-user configuration management of Web documents [2, 5]. <p> However, the creation of these Web applications remains a costly tasks [19]. Emerging Web authoring and management tools provide some automated support for easing this task including version management, consistency checking of the generated pages and links, and basic multi-user configuration management of Web documents <ref> [2, 5] </ref>. This support may be provided within application programs or within the database by adding support for native database types for hypertext documents [1, 14, 16].
Reference: [3] <author> E.F Codd and S. B. Codd. </author> <title> Providing OLAP (On-line Analytical Processing) to User-Analysts: An IT Mandate. </title> <type> Technical report, </type> <institution> E.F. Codd and Associates, </institution> <year> 1994. </year>
Reference-contexts: query predicates and to ensuring that the response time requirements of Web applications can be achieved. 2 Creating Summaries Dynamically The query model we propose borrows some basic concepts from the area of On Line Analytical Processing (OLAP), which includes data analysis and decision support systems along with multidimensional databases <ref> [3, 6, 10] </ref>. These systems group together subsets of the database and present aggregates of the data items in each group. Hierarchical abstractions over the data are used to form the aggregates. <p> As a result these abstractions have to be interactive. OLAP systems also limit the number of hierarchies to a small number (Codd and Codd suggest the limit should be less than twenty <ref> [3] </ref>). A fixed, limited set of abstractions is not sufficient for a database publishing environment. The number of required access paths or abstractions will depend on the needs of users. The number may be large and may vary dynamically. <p> Unlike under-specified queries, the system cannot determine at query evaluation whether the query is over-specified. Hence, responses to all queries, be they summaries or actual listings of target data, must permit the convenient incremental relaxation of the query. This relaxation process is called roll-up in the OLAP literature <ref> [3] </ref>. Queries may be relaxed by removing user restrictions (predicates), by moving up in an abstraction hierarchy (moving from Rhodes up to Dodecanese) or by relaxing matching criteria in an approximate match predicate (such as a multimedia operator).
Reference: [4] <author> N. N. Duan. </author> <title> Distributed Database Access in a Corporate Environment Using Java. </title> <booktitle> In [26], </booktitle> <year> 1996. </year>
Reference-contexts: Work on database publishing includes a large body of work on application generators that provide automated help for generating HTML query forms for accessing and manipulating database content <ref> [22, 9, 15, 7, 4, 17] </ref>. In addition, there has been work on reducing the impedance mismatch between data manipulation languages (DMLs), such as SQL, and Web authoring languages, such as HTML [13]. This work aids application development by reducing the programming burden for application developers.
Reference: [5] <author> J. Frentzen. </author> <title> Full-featured Web Publishing Systems Surface. </title> <booktitle> In PC Week Online, </booktitle> <month> Aug 5 </month> <year> 1996. </year>
Reference-contexts: However, the creation of these Web applications remains a costly tasks [19]. Emerging Web authoring and management tools provide some automated support for easing this task including version management, consistency checking of the generated pages and links, and basic multi-user configuration management of Web documents <ref> [2, 5] </ref>. This support may be provided within application programs or within the database by adding support for native database types for hypertext documents [1, 14, 16].
Reference: [6] <author> J. Gray, A. Bosworth, A. Layman, and H. Pirahesh. </author> <title> Data Cube: A Relational Aggregation Operator Generalizing Group-By, </title> <booktitle> Cross-Tab, and Sub-Totals. In Proc. of the 18th Int'l Conf. on Data Engineering, </booktitle> <pages> pages 152-159, </pages> <address> Los Alamitos, CA, 1996. </address> <publisher> IEEE Computer Scoiety Press. </publisher>
Reference-contexts: query predicates and to ensuring that the response time requirements of Web applications can be achieved. 2 Creating Summaries Dynamically The query model we propose borrows some basic concepts from the area of On Line Analytical Processing (OLAP), which includes data analysis and decision support systems along with multidimensional databases <ref> [3, 6, 10] </ref>. These systems group together subsets of the database and present aggregates of the data items in each group. Hierarchical abstractions over the data are used to form the aggregates. <p> The model used is based on the GMAP model proposed in [21]. We are currently evaluating our query optimization techniques and looking at additional database support mechanisms for browsing style query workloads. These include special optimization techniques for multi-dimensional aggregation operators including operators for generating cross tabulations and histograms <ref> [6] </ref>, along with the use of spatial access methods and additional caching techniques to optimize incremental queries. Our experience with the customization facilities has been very positive. Using the query server, an application developer does not need to write any HTML or CGI code to develop a flexible navigational interface.
Reference: [7] <author> S. P. Hadjiefthymiades and D. I. Martakos. </author> <title> A Generic Framework For the Deployment of Structured Databases on the World Wide Web. </title> <booktitle> In [26], </booktitle> <year> 1996. </year>
Reference-contexts: Work on database publishing includes a large body of work on application generators that provide automated help for generating HTML query forms for accessing and manipulating database content <ref> [22, 9, 15, 7, 4, 17] </ref>. In addition, there has been work on reducing the impedance mismatch between data manipulation languages (DMLs), such as SQL, and Web authoring languages, such as HTML [13]. This work aids application development by reducing the programming burden for application developers.
Reference: [8] <author> R. L. Haskin. </author> <title> The Shark Continuous-Media File Server. </title> <booktitle> In Digest of Papers of the IEEE Compcon, </booktitle> <year> 1993. </year>
Reference-contexts: The query server formats query responses as html pages which are passed to a standard Web server. These 6 pages can then be viewed with a standard Web client. We currently use an SQL server which is interfaced directly to the Shark video server <ref> [8] </ref>. 2 The SQL server maintains all of the conventional record-oriented data about the application (for example, information about hotels, regions and sites of interest). Images, video clips and large passages of text are stored as files in Shark.
Reference: [9] <author> A. Hunter, I. Ferguson, and S. Hedges. SWOOP: </author> <title> An Application Generator for ORACLE WWW Systems. </title> <booktitle> In [25], </booktitle> <year> 1995. </year>
Reference-contexts: Work on database publishing includes a large body of work on application generators that provide automated help for generating HTML query forms for accessing and manipulating database content <ref> [22, 9, 15, 7, 4, 17] </ref>. In addition, there has been work on reducing the impedance mismatch between data manipulation languages (DMLs), such as SQL, and Web authoring languages, such as HTML [13]. This work aids application development by reducing the programming burden for application developers.
Reference: [10] <author> Kenan Technologies. </author> <title> An Introduction to Multidimensional Database Technology. </title> <type> Technical report, </type> <institution> Kenan Systems Corporation, </institution> <address> Cambridge, MA, </address> <year> 1993. </year>
Reference-contexts: query predicates and to ensuring that the response time requirements of Web applications can be achieved. 2 Creating Summaries Dynamically The query model we propose borrows some basic concepts from the area of On Line Analytical Processing (OLAP), which includes data analysis and decision support systems along with multidimensional databases <ref> [3, 6, 10] </ref>. These systems group together subsets of the database and present aggregates of the data items in each group. Hierarchical abstractions over the data are used to form the aggregates.
Reference: [11] <author> D. Lee, R. Barber, W. Niblack, M. Flickner, J. Hafner, and D. Petkovic. </author> <title> Query By Image Content Using Multiple Objects and Multiple Features: User Interface Issues. </title> <booktitle> In Int'l Conf. on Image Processing (ICIP) Volume II, </booktitle> <pages> pages 76-80, </pages> <address> Austin, TX, </address> <month> November </month> <year> 1994. </year>
Reference-contexts: Applying this predicate restricts the summaries and data presented to include only hotels satisfying the predicate. Predicates on multimedia content are also provided. For example, a user may request hotels that resemble a given hotel using an image operator supported by QBIC <ref> [11] </ref>. This drill-down style of interaction enables the system to make intelligent responses to under-specified queries. Such queries are common for novice users. <p> The Shark server offers appropriate quality of service guarantees for real time video display and also doubles as a generic high performance BLOB (Binary Large Object) server. The image files stored in the Shark server may be processed using image operators provided by QBIC <ref> [11] </ref>. The Shark server handles integration with QBIC. 4.1 Query Server The query server accepts user input (mostly in the form of mouse clicks) and creates a (summary) query.
Reference: [12] <author> R. J. Miller, O. G. Tsatalos, and J. H. Williams. </author> <title> Integrating Hierarchical Navigation and Querying: A User Customizable Solution. In ACM Multimedia Workshop on Effective Abstractions in Multimedia Layout, Presentation, and Interaction, </title> <address> San Francisco, CA, </address> <month> November </month> <year> 1995. </year>
Reference-contexts: We model navigation as a process of query rewriting and query refinement. We illustrate this process through an example from our prototype system which contains data of the Greek National Tourist Organization including on-line brochures, slides, video clips and other travel related information <ref> [12] </ref>. A session begins with an initial query from the user. In most cases, particularly for novice users, this query will be the default query that selects everything from a target set. In our example, the request may be for all hotels. <p> Hierarchies form the basic navigation primitive and are customizable in that new hierarchies may be easily registered in the database. More details on hierarchies may be found in <ref> [12] </ref>. The answer to the default query on our Greek hotel database is depicted in Figure 3. The geography hierarchy has been selected for presenting the summary. To facilitate the location of relevant information, 4 extensive metadata is associated with the nodes of the abstraction hierarchies.
Reference: [13] <author> T. Nguyen and V. Srinivasan. </author> <title> Accessing Relational Databases from the World Wide Web. </title> <booktitle> In Proc. ACM SIGMOD Int'l Conf. on Mngmt. of Data, </booktitle> <pages> pages 529-540, </pages> <address> Montreal, Canada, </address> <month> June </month> <year> 1996. </year>
Reference-contexts: In addition, there has been work on reducing the impedance mismatch between data manipulation languages (DMLs), such as SQL, and Web authoring languages, such as HTML <ref> [13] </ref>. This work aids application development by reducing the programming burden for application developers. Other tools attempt to cover the language differences (and help Web authors unfamiliar with database languages) by providing 9 visual interfaces that insert DML commands in Web documents using visual (point and click) commands [20].
Reference: [14] <author> J. E. Pitkow and R. K. Jones. </author> <title> Supporting the Web: a Distributed Hyperklink Database System. </title> <booktitle> In [26], </booktitle> <year> 1996. </year>
Reference-contexts: This support may be provided within application programs or within the database by adding support for native database types for hypertext documents <ref> [1, 14, 16] </ref>. While these tools facilitate the management of web sites (making use of DBMS to store web content), they do little to permit effective use of existing database from the Web.
Reference: [15] <author> B. Rasmussen. </author> <title> WDB A Web Interface to SQL Databases. </title> <type> Technical report, </type> <institution> European Southern Observatory, </institution> <year> 1994. </year> <note> http://arch-http.hq.eso.org/bfrasmus/wdb. </note>
Reference-contexts: Work on database publishing includes a large body of work on application generators that provide automated help for generating HTML query forms for accessing and manipulating database content <ref> [22, 9, 15, 7, 4, 17] </ref>. In addition, there has been work on reducing the impedance mismatch between data manipulation languages (DMLs), such as SQL, and Web authoring languages, such as HTML [13]. This work aids application development by reducing the programming burden for application developers.
Reference: [16] <author> E. Sandewall. </author> <title> Towards a World-Wide Data Base. </title> <booktitle> In [26], </booktitle> <year> 1996. </year>
Reference-contexts: This support may be provided within application programs or within the database by adding support for native database types for hypertext documents <ref> [1, 14, 16] </ref>. While these tools facilitate the management of web sites (making use of DBMS to store web content), they do little to permit effective use of existing database from the Web.
Reference: [17] <author> L. Shklar and K. Shah, </author> <title> editors. Workshop on Providing Web Access to Legacy Data. </title> <booktitle> In [25], </booktitle> <year> 1995. </year> <month> 10 </month>
Reference-contexts: Work on database publishing includes a large body of work on application generators that provide automated help for generating HTML query forms for accessing and manipulating database content <ref> [22, 9, 15, 7, 4, 17] </ref>. In addition, there has been work on reducing the impedance mismatch between data manipulation languages (DMLs), such as SQL, and Web authoring languages, such as HTML [13]. This work aids application development by reducing the programming burden for application developers.
Reference: [18] <author> B. Shneiderman, </author> <title> editor. Sparks of Innovation in Human-Computer Interaction. </title> <publisher> Ablex Publishing Corp., </publisher> <address> Norwood, NJ, </address> <year> 1993. </year>
Reference-contexts: In this paper, we overview our attempts of providing an effective browsing mechanism for the dynamic data contained in structured database management systems. These techniques form the query support for DataWeb, a database publishing environment. Unlike previous attempts at integrating browsing and declarative querying (see <ref> [18] </ref> for a survey), we pay close attention to the incorporation of multimedia query predicates and to ensuring that the response time requirements of Web applications can be achieved. 2 Creating Summaries Dynamically The query model we propose borrows some basic concepts from the area of On Line Analytical Processing (OLAP),
Reference: [19] <author> E. Sullivan. </author> <title> Making the Web Truly Dynamic. </title> <booktitle> In PC Week Online, </booktitle> <month> May 28 </month> <year> 1996. </year>
Reference-contexts: The use of DBMS to store Web content has been touted as an effective means of creating dynamic, scalable Web servers <ref> [19] </ref>. Using the common gateway interface (CGI), Web application programs can access DBMS and retrieve static Web pages or dynamically create pages based on input from the user and the data retrieved [2, 19]. However, the creation of these Web applications remains a costly tasks [19]. <p> Using the common gateway interface (CGI), Web application programs can access DBMS and retrieve static Web pages or dynamically create pages based on input from the user and the data retrieved <ref> [2, 19] </ref>. However, the creation of these Web applications remains a costly tasks [19]. Emerging Web authoring and management tools provide some automated support for easing this task including version management, consistency checking of the generated pages and links, and basic multi-user configuration management of Web documents [2, 5]. <p> creating dynamic, scalable Web servers <ref> [19] </ref>. Using the common gateway interface (CGI), Web application programs can access DBMS and retrieve static Web pages or dynamically create pages based on input from the user and the data retrieved [2, 19]. However, the creation of these Web applications remains a costly tasks [19]. Emerging Web authoring and management tools provide some automated support for easing this task including version management, consistency checking of the generated pages and links, and basic multi-user configuration management of Web documents [2, 5].
Reference: [20] <author> J. M. Telford. </author> <title> NetScheme InterMart Toolkit. In DBMS Online, </title> <month> November </month> <year> 1996. </year>
Reference-contexts: This work aids application development by reducing the programming burden for application developers. Other tools attempt to cover the language differences (and help Web authors unfamiliar with database languages) by providing 9 visual interfaces that insert DML commands in Web documents using visual (point and click) commands <ref> [20] </ref>. These solutions provide valuable aid to a Web author. However, the Web author is still responsible for finding a convenient way of introducing the data and schema to new users and enabling users to navigate through the data, effectively locating data of interest.
Reference: [21] <author> O. Tsatalos, M. Solomon, and Y. Ioannidis. </author> <title> The GMAP: A Versatile Tool for Physical Data Independence. </title> <booktitle> In Proc. of the Int'l Conf. on Very Large Data Bases (VLDB), </booktitle> <address> Palo Alto, CA, September 1994. </address> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference-contexts: To improve the performance of these queries, we use a main memory cache of query results and extend the query optimizer to consider plans that use these cached results. The model used is based on the GMAP model proposed in <ref> [21] </ref>. We are currently evaluating our query optimization techniques and looking at additional database support mechanisms for browsing style query workloads.
Reference: [22] <author> C. Varela, D. Nekhayev, P. Chandrasekharan, C. Krishnan, V. Govindan, D. Modgil, S. Siddiqui, D. Lebedenko, and M. Winslett. </author> <title> DB: Browsing Object-Oriented Databases Over the Web. </title> <booktitle> In [25], </booktitle> <year> 1995. </year>
Reference-contexts: Work on database publishing includes a large body of work on application generators that provide automated help for generating HTML query forms for accessing and manipulating database content <ref> [22, 9, 15, 7, 4, 17] </ref>. In addition, there has been work on reducing the impedance mismatch between data manipulation languages (DMLs), such as SQL, and Web authoring languages, such as HTML [13]. This work aids application development by reducing the programming burden for application developers.
Reference: [23] <author> WWW94 Conf. </author> <title> Workshop: Specialized Servers and Gateways, </title> <address> Geneva, Switzerland, </address> <month> May </month> <year> 1994. </year> <institution> Elsevier Science BV. </institution>
Reference-contexts: A plethora of Web interface products are available that facilitate the development of Web applications for querying and manipulating databases. These products are mostly targeted at reducing the development effort for creating traditional forms-style query interfaces for the Web <ref> [23] </ref>. However, forms do not provide effective interfaces for a large portion of Web users. Web users differ in at least three important aspects from users of conventional database applications.
Reference: [24] <institution> The Third Int'l World-Wide Web Conf., Darmstadt, Germany, </institution> <month> April </month> <year> 1995. </year>
Reference: [25] <institution> The Fourth Int'l World-Wide Web Conf., </institution> <address> Boston, MA, </address> <month> December </month> <year> 1995. </year>
Reference: [26] <institution> The Fifth Int'l World-Wide Web Conf., Paris, France, </institution> <month> May </month> <year> 1996. </year> <month> 11 </month>
References-found: 26

