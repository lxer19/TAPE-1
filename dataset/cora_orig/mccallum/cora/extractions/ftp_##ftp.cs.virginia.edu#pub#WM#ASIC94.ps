URL: ftp://ftp.cs.virginia.edu/pub/WM/ASIC94.ps
Refering-URL: http://www.cs.virginia.edu/~wm/smc.html
Root-URL: http://www.cs.virginia.edu
Title: Abstract  
Abstract: The Stream Memory Controller (SMC) is an experimental memory interface which allows hardware-assisted memory access reordering for vector computations in order to maximize the efficiency of the system memory bus. This paper describes the design and test strategies for the SMC Processor Bus Interface (PBI) and fifo logic ASIC. This IC is designed as part of a daughter card attachment to a 40Mhz Intel i860 system. The entire integrated circuit design was completed in a top-down design environment using VHDL for synthesis and a target process of 0.75mm. The design includes SRAM elements, combinatorial logic, and state machine components. This ASIC is the first in a series of ICs intended as a proof-of-concept of the SMC based system. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Wulf,Wm A. et al. </author> <title> Experimental Implementation of Dynamic Access Ordering, </title> <booktitle> Proceedings of the 27th Annual Hawaii International Conference on System Sciences, </booktitle> <year> 1994, </year> <pages> pp. 431-440 </pages>
Reference-contexts: Moreover, the nature of memories themselves has changed. Current DRAM components should not be treated as uniform access-time RAM. Memory systems which utilize Page-mode, and Synchronous DRAMs can achieve greater bandwidth by exploiting the characteristics of these components in the memory hierarchy <ref> [1] </ref>. The SMC is designed specifically for use with vector calculations where the memory access patterns can be completely characterized by a base address, a vector length, and a stride length. <p> In fact, a simple round-robin algorithm with adequate fifo depth is sufficient to provide a significant performance increase. Additional simulation data also indicates that fifos greater than 16 double-words in depth do not significantly enhance the performance of the system <ref> [1] </ref>. The PBI Test ASIC The purpose of the PBI test ASIC is to verify that the high speed bus requirements of the i860 processor can be met by the present design.
Reference: [2] <institution> Intel i860 Hardware Reference Manual. Intel Corporation, </institution> <year> 1993. </year>
Reference-contexts: This option requires the SMC to service a 64-bit double-word of data every clock cycle for 100% usage of the available bus bandwidth. The i860 can pipeline up to three outstanding bus accesses before stalling which increases the complexity of the PBI logic significantly <ref> [2] </ref>. Since the overall benefit of an SMC system hinges on providing the processor with a steady stream of data with minimum overhead, the emphasis on this design was achieving a system that could keep up with the processors requests whenever data is available.
Reference: [3] <author> System-1076, </author> <title> Quicksim II Users Manual. </title> <institution> Mentor Graphics Corp, </institution> <year> 1993. </year>
Reference-contexts: Design Methodology For the design of the SMC, a top-down approach with significant state-of-the art synthesis tools was chosen. Each component of the SMC has been described in VHDL and simulated both individually and as a system using the Mentor Graphics System-1076 and Quicksim II simulator <ref> [3] </ref>, and Logic Modelling Corporations (LMC) i860 and discrete component models [4]. LMCs processor bus models allow high level C like syntax to generate bus accesses by the i860 to the SMC memory space.
Reference: [4] <institution> Smartmodel Library Reference Manual. Logic Modelling Corp, </institution> <year> 1992. </year>
Reference-contexts: Each component of the SMC has been described in VHDL and simulated both individually and as a system using the Mentor Graphics System-1076 and Quicksim II simulator [3], and Logic Modelling Corporations (LMC) i860 and discrete component models <ref> [4] </ref>. LMCs processor bus models allow high level C like syntax to generate bus accesses by the i860 to the SMC memory space.
Reference: [5] <author> Epoch Users Manual. </author> <title> Cascade Design Automation, </title> <address> EUM-3.1, </address> <year> 1993. </year>
Reference-contexts: The only MOSIS compatible ASIC library available using Autologic was the CMOSN 1.2mm process which was inefficient in terms of size and speed, and also does not contain a dual-ported SRAM cell. Because of these problems a switch was made to Cascade Design Automations Epoch EDA system <ref> [5] </ref>. The Epoch systems support of various sub-micron MOSIS process libraries, and the inclusion of dual-ported SRAM macro-cells provided with those libraries made it an attractive choice as the synthesis system. However, the Epoch synthesis tools do not support behavioral-level VHDL synthesis.
Reference: [6] <editor> Cascade Delay Calculation Manual. </editor> <title> Document No. </title> <booktitle> 93-0071-Rev 2, Cascade Design Automation, </booktitle> <month> May 12, </month> <year> 1994. </year> <note> Table 1: Static Timing Accuracy Pin TACTIC Predicted CLK to Valid Actual CLK to Valid Data(0) 26ns 25ns Brdy 9.7ns 8.6ns OEBA 12.0ns 8.4ns Clock_Rf 2.62ns 3ns </note>
Reference-contexts: Familiarity gained over the last 9 months with the Epoch design system should result in even more accurate and conservative delay modelling on the next version of the SMC. The synthesis and back annotation tools in the Epoch environment use the same delay calculator as TACTIC <ref> [6] </ref>, which essentially means that the delays observed throughout the design and simulation process have approximately the same accuracy as the TACTIC analysis. The PBI test ASIC is currently working in a operational test system.
References-found: 6

