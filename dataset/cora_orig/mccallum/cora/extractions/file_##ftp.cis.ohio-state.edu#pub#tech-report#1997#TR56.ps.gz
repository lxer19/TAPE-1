URL: file://ftp.cis.ohio-state.edu/pub/tech-report/1997/TR56.ps.gz
Refering-URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/TRList.html
Root-URL: 
Email: E-mail: fssubrama,singhalg@cis.ohio-state.edu  
Phone: Tel: Fax: (614)-292-2911  
Title: A Methodology for Detecting Violation of Real-Time Constraints in Secure Electronic Commerce Transactions  
Author: Srividhya Subramanian and Mukesh Singhal 
Keyword: Electronic commerce, real-time, transaction, security, atomicity, privacy, anonymity, stock market.  
Address: Columbus, OH 43210-1277  
Affiliation: Dept. of Computer and Information Science The Ohio State University,  
Abstract: In electronic commerce applications, it is often critical to transact within a short stipulated time. In such applications, it is financially damaging to the customer if the transaction does not complete within the stipulated time. In this paper, we describe various situations in the stock market (one of the biggest electronic commerce markets) requiring real-time transactions. We propose a methodology to enhance any electronic commerce protocol to a real-time aware electronic commerce protocol. The methodology consists of two parts: the first part adds a timestamp to some messages in the original protocol and the second part augments the protocol with a mechanism to detect violation of real-time constraints. We show that the methodology does not violate any of the useful properties present in existing electronic commerce protocols. As a result, the methodology may be successfully applied to any existing electronic commerce protocol. The methodology is illustrated by applying it to an existing well known electronic commerce protocol, namely, the NetBill protocol. 
Abstract-found: 1
Intro-found: 1
Reference: [And94] <author> R. Anderson. </author> <title> Why Cryptosystems Fail. </title> <journal> In Communications of ACM, </journal> <volume> volume 37, </volume> <year> 1994. </year>
Reference-contexts: Several properties have been identified as either required or desirable in electronic commerce protocols <ref> [NM95, And94] </ref>.
Reference: [B + 94] <author> J. P. Boly et al. </author> <title> The ESPRIT Project CAFE High Security Digital Payment Systems. </title> <booktitle> In ESORICS '94, </booktitle> <year> 1994. </year>
Reference-contexts: The main difference between the two examples lies in the fact that in the second example, it is not essential for the investor to receive the trade confirmation immediately, only for the sale to take place. While many protocols exist for electronic commerce <ref> [Cyb, Dig, SSBR94, Man95, BGH + 95, Hic95, B + 94] </ref>, none addresses the issue of real-time transactions.
Reference: [BGH + 95] <author> M. Bellare, J. A. Garay, R. Hauser, et al. </author> <title> iKP- A Family of Secure Electronic Payment Protocols. </title> <booktitle> In Proceedings of the First USENIX Workshop on Electronic Commerce, </booktitle> <year> 1995. </year>
Reference-contexts: The main difference between the two examples lies in the fact that in the second example, it is not essential for the investor to receive the trade confirmation immediately, only for the sale to take place. While many protocols exist for electronic commerce <ref> [Cyb, Dig, SSBR94, Man95, BGH + 95, Hic95, B + 94] </ref>, none addresses the issue of real-time transactions.
Reference: [Cyb] <author> CyberCash. </author> <title> The CyberCash System How it works. </title> <note> Available at http://www.cybercash.com/cybercash/cyber2.html. 15 </note>
Reference-contexts: The main difference between the two examples lies in the fact that in the second example, it is not essential for the investor to receive the trade confirmation immediately, only for the sale to take place. While many protocols exist for electronic commerce <ref> [Cyb, Dig, SSBR94, Man95, BGH + 95, Hic95, B + 94] </ref>, none addresses the issue of real-time transactions.
Reference: [Dig] <author> DigiCash. </author> <title> About Ecash. </title> <note> Available at http://www.digicash.com/ecash/ecash--home.html. </note>
Reference-contexts: The main difference between the two examples lies in the fact that in the second example, it is not essential for the investor to receive the trade confirmation immediately, only for the sale to take place. While many protocols exist for electronic commerce <ref> [Cyb, Dig, SSBR94, Man95, BGH + 95, Hic95, B + 94] </ref>, none addresses the issue of real-time transactions.
Reference: [Hic95] <author> K. E. B. Hickman. </author> <title> Secure Socket Library. </title> <note> 1995. Available at http://www.mcom.com/info/SSL.html. </note>
Reference-contexts: The main difference between the two examples lies in the fact that in the second example, it is not essential for the investor to receive the trade confirmation immediately, only for the sale to take place. While many protocols exist for electronic commerce <ref> [Cyb, Dig, SSBR94, Man95, BGH + 95, Hic95, B + 94] </ref>, none addresses the issue of real-time transactions.
Reference: [Man95] <author> M. Manasse. </author> <title> The Millicent Protocols for Electronic Commerce. </title> <booktitle> In Proceedings of the First USENIX Workshop on Electronic Commerce, </booktitle> <year> 1995. </year>
Reference-contexts: The main difference between the two examples lies in the fact that in the second example, it is not essential for the investor to receive the trade confirmation immediately, only for the sale to take place. While many protocols exist for electronic commerce <ref> [Cyb, Dig, SSBR94, Man95, BGH + 95, Hic95, B + 94] </ref>, none addresses the issue of real-time transactions.
Reference: [NM95] <author> B. C. Neuman and G. Medvinsky. </author> <title> Requirements for Network Payment: </title> <booktitle> The NetCheque Perspective. In Proceedings of IEEE COMPCON'95, </booktitle> <year> 1995. </year>
Reference-contexts: Several properties have been identified as either required or desirable in electronic commerce protocols <ref> [NM95, And94] </ref>.
Reference: [SSBR94] <author> L. H. Stein, E. A. Stefferud, N. S. Borenstein, and M. T. Rose. </author> <title> The Green Commerce Model. </title> <note> 1994. Available at http://www.fv.com/tech/green-model.html. </note>
Reference-contexts: The main difference between the two examples lies in the fact that in the second example, it is not essential for the investor to receive the trade confirmation immediately, only for the sale to take place. While many protocols exist for electronic commerce <ref> [Cyb, Dig, SSBR94, Man95, BGH + 95, Hic95, B + 94] </ref>, none addresses the issue of real-time transactions.
Reference: [ST95] <author> M. Sirbu and J. D. Tygar. NetBill: </author> <title> An Internet Commerce System. </title> <booktitle> In IEEE COMPCON, </booktitle> <year> 1995. </year> <note> Available at http://www.ini.cmu.edu/netbill/CompCon.html. </note>
Reference-contexts: The arguments for preserving the useful security properties of the original protocol remains the same as in Subsection 3.3. 4 Application of the General Methodology to the Net Bill Protocol In this section we use an existing well known electronic commerce protocol, namely, NetBill <ref> [ST95] </ref> to illustrate the general methodology. We will see how our methodology works when applied to an existing operational electronic commerce protocol and how it preserves the useful properties of this protocol. 4.1 The NetBill Protocol The NetBill protocol was designed at the Carnegie Mellon University.
Reference: [Tyg96] <author> J. D. Tygar. </author> <title> Atomicity in Electronic Commerce. </title> <booktitle> In PODC, </booktitle> <year> 1996. </year>
Reference-contexts: We use the notation "X ) Y Msg" to indicate that X sends the specified message Msg to Y. The parties involved in the protocol are the customer C, the merchant M and the NetBill server N. The NetBill protocol consists of the following steps <ref> [Tyg96] </ref>: 1. C ) M Price request 2. M ) C Price quote 3. C ) M Goods request 4. M ) C Goods, encrypted with key K 5. C ) M Signed Electronic Payment Order (EPO) 12 6. M ) N Endorsed EPO (eEPO), including K 7.
Reference: [WW + 91] <author> S. R. White, S. H. Weingart, et al. </author> <title> Introduction to the Citadel Architechture: Security in Physically Exposed Environments. </title> <type> In Technical Report, </type> <institution> Distributed Security Systems Group, IBM T. J. Watson Research Center, </institution> <year> 1991. </year>
Reference-contexts: Secure co-processors are secure physical devices that erase their RAM and CPU registers if they are accessed in any method apart from the defined interfaces. These devices have limited capabilities, are inexpensive and are available commercially <ref> [WW + 91] </ref>. Many customers may share the same clock. In order to avoid problems involving clock synchronization, we use a single trusted clock for all measurements in a single transaction.
Reference: [Yee94] <author> B. S. Yee. </author> <title> Using Secure Coprocessors. </title> <type> In Ph.D. thesis, </type> <institution> Computer Science Technical Report CMU-CS-94-149, Carnegie Mellon University, </institution> <year> 1994. </year> <month> 16 </month>
Reference-contexts: They exchange messages containing information, goods, payment, etc. over this network. The communication channels are FIFO. The customer is in close proximity (measured in terms of message delay) from a trusted clock. This trusted clock may be a secure co-processor <ref> [Yee94] </ref> attached to the customer's workstation. Secure co-processors are secure physical devices that erase their RAM and CPU registers if they are accessed in any method apart from the defined interfaces. These devices have limited capabilities, are inexpensive and are available commercially [WW + 91].
References-found: 13

