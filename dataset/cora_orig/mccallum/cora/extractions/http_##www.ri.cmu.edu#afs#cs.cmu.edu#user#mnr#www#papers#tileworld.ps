URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/mnr/www/papers/tileworld.ps
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/mnr/www/index.html
Root-URL: 
Title: Introducing the Tileworld: Experimentally Evaluating Agent Architectures  
Author: Martha E. Pollack Marc Ringuette 
Keyword: Topic: Automated Reasoning Subtopics: Planning and Scheduling, Resource-Bounded Reasoning, Experimental Evaluation of Planning Systems  
Note: 0y This research was supported by the Office of Naval Research under Contract No. N00014-85-C-0251, by a contract with the Nippon Telegraph and Telephone Corporation and by a gift from the System Development Foundation.  
Address: 333 Ravenswood Ave. Menlo Park, CA 94025  Pittsburgh, PA 15213  
Affiliation: Artificial Intelligence Center and Center for the Study of Language and Information SRI International  School of Computer Science Carnegie Mellon University  
Abstract: We describe a system called Tileworld, which consists of a simulated robot agent and a simulated environment which is both dynamic and unpredictable. Both the agent and the environment are highly parameterized, enabling one to control certain characteristics of each. We can thus experimentally investigate the behavior of various meta-level reasoning strategies by tuning the parameters of the agent, and can assess the success of alternative strategies in different environments by tuning the environmental parameters. Our hypothesis is that the appropriateness of a particular meta-level reasoning strategy will depend in large part upon the characteristics of the environment in which the agent incorporating that strategy is situated. We describe our initial experiments using Tileworld, in which we have been evaluating a version of the meta-level reasoning strategy proposed in earlier work by one of the authors [5]. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. E. Agre and D. Chapman. Pengi: </author> <title> An implementation of a theory of activity. </title> <booktitle> In AAAI-87, Proceedings of the National Conference on Artificial Intelligence, </booktitle> <address> Seattle, Wa., </address> <year> 1987. </year>
Reference-contexts: One solution that has been proposed eliminates explicit execution-time reasoning by compiling into the agent all decisions about what to do in particular situations <ref> [1, 6, 12] </ref>. This is an interesting endeavor whose ultimate feasibility remains an open question, but we and others believe that in complex domains, the exclusive use of compilation techniques is impractical [8, 9, 14].
Reference: [2] <author> J. Blythe and T. M. Mitchell. </author> <title> On Becoming Reactive. </title> <booktitle> In Proceedings of the 6th International Workshop on Machine Learning, </booktitle> <institution> Cornell University, </institution> <month> June </month> <year> 1989. </year>
Reference: [3] <author> M. Boddy and T. Dean. </author> <title> Solving time-dependent planning problems. </title> <booktitle> In Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <address> Detroit, MI, </address> <year> 1989. </year>
Reference-contexts: An alternative is to design agents that perform explicit reasoning at execution time, but manage that reasoning by engaging in meta-level reasoning. Within the past few years, researchers in AI have provided theoretical analyses of meta-level reasoning, often applying decision-theoretic notions to it <ref> [3, 11, 15] </ref>. In addition, architectural specifications for agents performing meta-level reasoning have been developed [5], and prototype systems that engage in meta-level reasoning have been implemented [7, 10]. The project we describe in this paper involves the implementation of a system for experimentally evaluating competing theoretical and architectural proposals.
Reference: [4] <author> M. E. Bratman. </author> <title> Intention, Plans and Practical Reason. </title> <publisher> Harvard University Press, </publisher> <address> Cambridge, Ma., </address> <year> 1987. </year>
Reference-contexts: We will describe the form of an experiment more precisely in a later section. 3 Using Plans To Constrain Future Reasoning The agent we have implemented and used in our experiments instantiates an architecture for meta-level reasoning presented in [5]. The architecture builds on observations made by Bratman <ref> [4] </ref> that agents who are situated in dynamic environments benefit from having plans because their plans can constrain the amount of subsequent reasoning they need to perform. <p> action that might be undertaken. * An agent's plans restrict the set of further potential courses of action it needs to give full consideration to, by filtering out options that are inconsistent with the performance of what it already plans to do. 2 Additional constraining roles have also been postulated <ref> [4, 13] </ref>. 3 The first role of plans has always been at least implicit in the standard models of AI planning: AI planners compute means to goals that the agent already has.
Reference: [5] <author> M. E. Bratman, D. J. Israel, and M. E. Pollack. </author> <title> Plans and resource-bounded practical reasoning. </title> <journal> Computational Intelligence, </journal> <volume> 4 </volume> <pages> 349-355, </pages> <year> 1988. </year>
Reference-contexts: Within the past few years, researchers in AI have provided theoretical analyses of meta-level reasoning, often applying decision-theoretic notions to it [3, 11, 15]. In addition, architectural specifications for agents performing meta-level reasoning have been developed <ref> [5] </ref>, and prototype systems that engage in meta-level reasoning have been implemented [7, 10]. The project we describe in this paper involves the implementation of a system for experimentally evaluating competing theoretical and architectural proposals. <p> We shall describe below how the parameters of our simulated environment correspond to interesting characteristics of real, dynamic environments. In our initial experiments using Tileworld, we have been evaluating a version of the meta-level reasoning strategy proposed in earlier work by one of the authors <ref> [5] </ref>. <p> We will describe the form of an experiment more precisely in a later section. 3 Using Plans To Constrain Future Reasoning The agent we have implemented and used in our experiments instantiates an architecture for meta-level reasoning presented in <ref> [5] </ref>. The architecture builds on observations made by Bratman [4] that agents who are situated in dynamic environments benefit from having plans because their plans can constrain the amount of subsequent reasoning they need to perform. <p> The Tileworld domain has been demonstrated, and has been shown to be a viable system for evaluating agent architectures. The Tileworld agent was demonstrated and used to test differing deliberation and filtering strategies as described in <ref> [5] </ref>. 10 We continue to investigate the question of how an agent should structure and control its computational effort.
Reference: [6] <author> R. A. Brooks. </author> <title> Planning is just a way of avoiding figuring out what to do next. </title> <type> Technical Report 303, </type> <institution> MIT, </institution> <year> 1987. </year>
Reference-contexts: One solution that has been proposed eliminates explicit execution-time reasoning by compiling into the agent all decisions about what to do in particular situations <ref> [1, 6, 12] </ref>. This is an interesting endeavor whose ultimate feasibility remains an open question, but we and others believe that in complex domains, the exclusive use of compilation techniques is impractical [8, 9, 14].
Reference: [7] <author> P. R. Cohen, M. L Greenberg, D. M. Hart, and A. E. Howe. </author> <title> Real-time problem solving in the Phoenix environment. </title> <booktitle> In Proceedings of the Workshop on Real-Time Artificial Intelligence Problems, </booktitle> <address> Detroit, MI, </address> <year> 1989. </year>
Reference-contexts: Within the past few years, researchers in AI have provided theoretical analyses of meta-level reasoning, often applying decision-theoretic notions to it [3, 11, 15]. In addition, architectural specifications for agents performing meta-level reasoning have been developed [5], and prototype systems that engage in meta-level reasoning have been implemented <ref> [7, 10] </ref>. The project we describe in this paper involves the implementation of a system for experimentally evaluating competing theoretical and architectural proposals. More specifically, we have been constructing a system called Tileworld, which consists of a simulated robot agent and a simulated environment which is both dynamic and unpredictable.
Reference: [8] <author> B. D'Ambrosio and M. Fehling. </author> <title> Resource bounded-agents in an uncertain world. </title> <booktitle> In Proceedings of the AAAI Symposium on Limited Rationality, </booktitle> <address> Stanford, Ca., </address> <year> 1989. </year>
Reference-contexts: This is an interesting endeavor whose ultimate feasibility remains an open question, but we and others believe that in complex domains, the exclusive use of compilation techniques is impractical <ref> [8, 9, 14] </ref>. An alternative is to design agents that perform explicit reasoning at execution time, but manage that reasoning by engaging in meta-level reasoning. Within the past few years, researchers in AI have provided theoretical analyses of meta-level reasoning, often applying decision-theoretic notions to it [3, 11, 15].
Reference: [9] <author> J. Doyle. </author> <title> Artificial intelligence and rational self-government. </title> <type> Technical Report CS-88-124, </type> <institution> Carnegie Mellon University, </institution> <address> Pittsburgh, Pa., </address> <year> 1988. </year>
Reference-contexts: This is an interesting endeavor whose ultimate feasibility remains an open question, but we and others believe that in complex domains, the exclusive use of compilation techniques is impractical <ref> [8, 9, 14] </ref>. An alternative is to design agents that perform explicit reasoning at execution time, but manage that reasoning by engaging in meta-level reasoning. Within the past few years, researchers in AI have provided theoretical analyses of meta-level reasoning, often applying decision-theoretic notions to it [3, 11, 15].
Reference: [10] <author> M.P. Georgeff and F.F. Ingrand. </author> <title> Decision-making in an embedded reasoning system. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <address> Detroit, Mi., </address> <year> 1989. </year>
Reference-contexts: Within the past few years, researchers in AI have provided theoretical analyses of meta-level reasoning, often applying decision-theoretic notions to it [3, 11, 15]. In addition, architectural specifications for agents performing meta-level reasoning have been developed [5], and prototype systems that engage in meta-level reasoning have been implemented <ref> [7, 10] </ref>. The project we describe in this paper involves the implementation of a system for experimentally evaluating competing theoretical and architectural proposals. More specifically, we have been constructing a system called Tileworld, which consists of a simulated robot agent and a simulated environment which is both dynamic and unpredictable.
Reference: [11] <author> E. J. Horvitz. </author> <title> Reasoning about beliefs and actions under computational resource constraints. </title> <booktitle> In Proceedings of the 1987 Workshop on Uncertainty in Artificial Intelligence, </booktitle> <address> Seattle, WA, </address> <year> 1987. </year>
Reference-contexts: An alternative is to design agents that perform explicit reasoning at execution time, but manage that reasoning by engaging in meta-level reasoning. Within the past few years, researchers in AI have provided theoretical analyses of meta-level reasoning, often applying decision-theoretic notions to it <ref> [3, 11, 15] </ref>. In addition, architectural specifications for agents performing meta-level reasoning have been developed [5], and prototype systems that engage in meta-level reasoning have been implemented [7, 10]. The project we describe in this paper involves the implementation of a system for experimentally evaluating competing theoretical and architectural proposals.
Reference: [12] <author> L. P. Kaelbling. </author> <title> Goals as parallel program specifications. </title> <booktitle> In AAAI-88, Proceedings of the Seventh National Conference on Artificial Intelligence, </booktitle> <address> Saint Paul, Minnesota, </address> <year> 1988. </year>
Reference-contexts: One solution that has been proposed eliminates explicit execution-time reasoning by compiling into the agent all decisions about what to do in particular situations <ref> [1, 6, 12] </ref>. This is an interesting endeavor whose ultimate feasibility remains an open question, but we and others believe that in complex domains, the exclusive use of compilation techniques is impractical [8, 9, 14].
Reference: [13] <author> M. E. Pollack. </author> <note> Overloaded expectations. In preparation, </note> <year> 1990. </year>
Reference-contexts: action that might be undertaken. * An agent's plans restrict the set of further potential courses of action it needs to give full consideration to, by filtering out options that are inconsistent with the performance of what it already plans to do. 2 Additional constraining roles have also been postulated <ref> [4, 13] </ref>. 3 The first role of plans has always been at least implicit in the standard models of AI planning: AI planners compute means to goals that the agent already has.
Reference: [14] <author> J.L. Pollock. Oscar: </author> <title> A general theory of rationality. </title> <booktitle> In Proceedings of the AAAI Symposium on Limited Rationality, </booktitle> <address> Stanford, Ca., </address> <year> 1989. </year> <month> 12 </month>
Reference-contexts: This is an interesting endeavor whose ultimate feasibility remains an open question, but we and others believe that in complex domains, the exclusive use of compilation techniques is impractical <ref> [8, 9, 14] </ref>. An alternative is to design agents that perform explicit reasoning at execution time, but manage that reasoning by engaging in meta-level reasoning. Within the past few years, researchers in AI have provided theoretical analyses of meta-level reasoning, often applying decision-theoretic notions to it [3, 11, 15].
Reference: [15] <author> S. J. Russell and E. H. </author> <title> Wefald. </title> <booktitle> Principles of metareasoning. In Proceedings of the First International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <address> Toronto, </address> <year> 1989. </year> <month> 13 </month>
Reference-contexts: An alternative is to design agents that perform explicit reasoning at execution time, but manage that reasoning by engaging in meta-level reasoning. Within the past few years, researchers in AI have provided theoretical analyses of meta-level reasoning, often applying decision-theoretic notions to it <ref> [3, 11, 15] </ref>. In addition, architectural specifications for agents performing meta-level reasoning have been developed [5], and prototype systems that engage in meta-level reasoning have been implemented [7, 10]. The project we describe in this paper involves the implementation of a system for experimentally evaluating competing theoretical and architectural proposals.
References-found: 15

