URL: http://www.cs.utexas.edu/users/vl/mypapers/challenge.ps
Refering-URL: http://www.cs.utexas.edu/users/vl/papers.html
Root-URL: 
Title: A Problem in Automated Reasoning: Simplifying Formulas of Classical Logic  
Author: Vladimir Lifschitz 
Note: DRAFT  
Date: January 28, 1997  
Address: Austin, TX 78712  
Affiliation: Department of Computer Sciences University of Texas at Austin  
Abstract: Some important ideas in logical AI, such as circumscription, are described by syntactic transformations that produce logical formulas, and the result of such a transformation often needs to be simplified. This is a collection of notes and examples related to the problem of simplifying formulas of classical logic.
Abstract-found: 1
Intro-found: 1
Reference: [ Church, 1956 ] <author> Alonzo Church. </author> <title> Introduction to Mathematical Logic, volume 1. </title> <publisher> Princeton University Press, </publisher> <year> 1956. </year>
Reference-contexts: The usefulness of for simplifying logical formulas is explained by the combination of two circumstances. First, this connective represents an important idea. Second, its use makes formulas shorter, because defining it in terms of "more basic" connectives requires that the arguments be repeated twice. Conditioned disjunction "if-then-else" <ref> [ Church, 1956 ] </ref> , [ McCarthy, 1963 ] is a ternary connective with similar properties. Equivalences play a special role in the approach to predicate logic developed in [ Dijkstra and Scholten, 1990 ] .
Reference: [ Clark, 1978 ] <author> Keith Clark. </author> <title> Negation as failure. </title> <editor> In Herve Gallaire and Jack Minker, editors, </editor> <booktitle> Logic and Data Bases, </booktitle> <pages> pages 293-322. </pages> <publisher> Plenum Press, </publisher> <address> New York, </address> <year> 1978. </year>
Reference-contexts: Formula (4) is simpler than (3) not only in the sense that it is first-order. Like (2), it is an explicit definition of P . Another important algorithm that produces formulas of classical logic is Clark's completion <ref> [ Clark, 1978 ] </ref> , introduced in connection with the study of negation as failure in logic programming. A modification of this algorithm, called "literal completion," is related to the commonsense idea of causality [ McCain and Turner, 1997 ] , [ Lifschitz, 1997 ] .
Reference: [ Dijkstra and Scholten, 1990 ] <author> Edsger Dijkstra and Carel Scholten. </author> <title> Predicate Calculus and Program Semantics. </title> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: Conditioned disjunction "if-then-else" [ Church, 1956 ] , [ McCarthy, 1963 ] is a ternary connective with similar properties. Equivalences play a special role in the approach to predicate logic developed in <ref> [ Dijkstra and Scholten, 1990 ] </ref> . Problem 2: Simplify the formulas (a) P ^ ((P ^ Q) R); Possible Answers: (a) P ^ (Q R); Discussion. In each case, the second conjunctive term of the given formula is simplified using the first term.
Reference: [ Doherty et al., 1997 ] <author> Patrick Doherty, Witold Lukaszewicz, and Andrzey Sza las. </author> <title> Computing circumscription revisited: A reduction algorithm. </title> <journal> Journal of Automated Reasoning, </journal> <note> 1997. To appear. </note>
Reference-contexts: Two algorithms have been implemented and can be executed by submitting tasks over the Web: SCAN ( [ Gabbay and Ohlbach, 1992 ] , http://www.mpi-sb .mpg.de/guide/staff/ohlbach/scan/scan.html) and DLS ( <ref> [ Doherty et al., 1997 ] </ref> , http://www.ida.liu.se/labs/kplab/projects/dls/). Interest in this subject is related to its connections with circumscription and with the correspondence problem in modal logic, and also with the idea of "forgetting a predicate" [ Lin and Reiter, 1994 ] .
Reference: [ Gabbay and Ohlbach, 1992 ] <author> Dov Gabbay and Hans Ohlbach. </author> <title> Quantifier elimination in second-order predicate logic. </title> <editor> In Bernhard Nebel, Charles Rich, and William Swartout, editors, </editor> <booktitle> Proc. of the Third Int'l Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 425-435, </pages> <year> 1992. </year>
Reference-contexts: Two algorithms have been implemented and can be executed by submitting tasks over the Web: SCAN ( <ref> [ Gabbay and Ohlbach, 1992 ] </ref> , http://www.mpi-sb .mpg.de/guide/staff/ohlbach/scan/scan.html) and DLS ( [ Doherty et al., 1997 ] , http://www.ida.liu.se/labs/kplab/projects/dls/).
Reference: [ Lifschitz, 1994 ] <author> Vladimir Lifschitz. </author> <title> Circumscription. In D.M. </title> <editor> Gabbay, C.J. Hogger, and J.A. Robinson, editors, </editor> <booktitle> The Handbook of Logic in AI and Logic Programming, </booktitle> <volume> volume 3, </volume> <pages> pages 298-352. </pages> <publisher> Oxford University Press, </publisher> <year> 1994. </year>
Reference-contexts: As in Problems 2 and 3, the first term is used to simplify the second term. A step like this is involved in the simplification of the answer to an example of commonsense reasoning in <ref> [ Lifschitz, 1994 ] </ref> , Section 3.2. 6 Problem 8: Simplify the conjunction of the formulas 8mn (m 0 = n 0 m = n); 8m [P (m) 9n (m = n 0 ^ Q (n)) _ (m = 0 ^ P (0))]; _ (m = 0 ^ :P (0))]: Possible
Reference: [ Lifschitz, 1996 ] <author> Vladimir Lifschitz. </author> <title> Foundations of logic programming. </title> <editor> In Gerhard Brewka, editor, </editor> <booktitle> Principles of Knowledge Representation, </booktitle> <pages> pages 69-128. </pages> <publisher> CSLI Publications, </publisher> <year> 1996. </year>
Reference-contexts: The formula in this example is essentially the completion of the logic program P not Q; R P; In the theory of logic programming, this is a standard example illustrating the difference between two theories of negation as failure|one based on answer sets, the other on well-foundedness (see, for instance, <ref> [ Lifschitz, 1996 ] </ref> , Section 3.3). Problem 4: Simplify the conjunction of the formulas P 1 (Q _ (P 0 ^ P 1 )); Possible Answer: P 1 (P 0 _ Q): Discussion.
Reference: [ Lifschitz, 1997 ] <author> Vladimir Lifschitz. </author> <title> A logic for causal reasoning. </title> <note> Submitted for publication, </note> <year> 1997. </year>
Reference-contexts: A modification of this algorithm, called "literal completion," is related to the commonsense idea of causality [ McCain and Turner, 1997 ] , <ref> [ Lifschitz, 1997 ] </ref> . Completion, like circumscription, often leads to formulas that need to be simplified. Some of the simplification problems discussed below are suggested by examples from the theory of logic programming and the theory of causal and nonmonotonic reasoning. <p> Problem 4: Simplify the conjunction of the formulas P 1 (Q _ (P 0 ^ P 1 )); Possible Answer: P 1 (P 0 _ Q): Discussion. The two given formulas are obtained by applying literal completion to (the propositional version of) Example 4 from <ref> [ Lifschitz, 1997 ] </ref> .
Reference: [ Lin and Reiter, 1994 ] <author> Fangzhen Lin and Raymond Reiter. </author> <booktitle> Forget it! Presented at the AAAI Fall Symposium on Relevance, </booktitle> <address> New Orleans, </address> <year> 1994. </year>
Reference-contexts: Interest in this subject is related to its connections with circumscription and with the correspondence problem in modal logic, and also with the idea of "forgetting a predicate" <ref> [ Lin and Reiter, 1994 ] </ref> . It is true that the elimination of second-order variables, when it is possible, often makes the formula simpler, but there are also cases when a second-order formula is as easy (or even easier) to understand than its first-order countepart.
Reference: [ McCain and Turner, 1997 ] <author> Norman McCain and Hudson Turner. </author> <title> Causal theories of action and change. </title> <note> Submitted for publication, </note> <year> 1997. </year>
Reference-contexts: Another important algorithm that produces formulas of classical logic is Clark's completion [ Clark, 1978 ] , introduced in connection with the study of negation as failure in logic programming. A modification of this algorithm, called "literal completion," is related to the commonsense idea of causality <ref> [ McCain and Turner, 1997 ] </ref> , [ Lifschitz, 1997 ] . Completion, like circumscription, often leads to formulas that need to be simplified. Some of the simplification problems discussed below are suggested by examples from the theory of logic programming and the theory of causal and nonmonotonic reasoning.
Reference: [ McCarthy, 1963 ] <author> John McCarthy. </author> <title> A basis for a mathematical theory of computation. </title> <booktitle> In Proc. IFIP Congress 1962, </booktitle> <pages> pages 21-28, </pages> <address> Amsterdam, 1963. </address> <publisher> North Holland. </publisher> <pages> 8 </pages>
Reference-contexts: First, this connective represents an important idea. Second, its use makes formulas shorter, because defining it in terms of "more basic" connectives requires that the arguments be repeated twice. Conditioned disjunction "if-then-else" [ Church, 1956 ] , <ref> [ McCarthy, 1963 ] </ref> is a ternary connective with similar properties. Equivalences play a special role in the approach to predicate logic developed in [ Dijkstra and Scholten, 1990 ] .
Reference: [ McCarthy, 1986 ] <author> John McCarthy. </author> <title> Applications of circumscription to for-malizing common sense knowledge. </title> <journal> Artificial Intelligence, </journal> <volume> 26(3) </volume> <pages> 89-116, </pages> <year> 1986. </year> <editor> Reproduced in [ McCarthy, </editor> <year> 1990 </year> ] . 
Reference-contexts: Similarly, some important ideas in logical AI are described by syntactic transformations that produce formulas of classical logic, and the result of such a transformation often needs to be simplified. Circumscription <ref> [ McCarthy, 1986 ] </ref> is the best known example. The result of applying the circumscription operator to the atomic formula P (a) is P (a) ^ 8p [p (a) ^ 8x (p (x) P (x)) 8x (P (x) p (x))]; (3) where p is a predicate variable.
Reference: [ McCarthy, 1990 ] <author> John McCarthy. </author> <title> Formalizing Common Sense: Papers by John McCarthy. </title> <publisher> Ablex, </publisher> <address> Norwood, NJ, </address> <year> 1990. </year>
Reference: [ Richardson, 1968 ] <author> Daniel Richardson. </author> <title> Some undecidable problems involving elementary functions of a real variable. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 33 </volume> <pages> 514-520, </pages> <year> 1968. </year>
Reference-contexts: The best we can hope for is a method that is sufficiently powerful for a broad range of examples. In this respect, simplifying logical formulas is similar to simplifying algebraic expressions. Since there is no decision procedure for the equality of elementary functions of a real variable <ref> [ Richardson, 1968 ] </ref> , a simplification method for such functions cannot be ideal either. 3 5 Examples: Propositional Logic Problem 1: Simplify formula (1). Possible Answer: Formula (2). Discussion.
Reference: [ Wolfram, 1991 ] <author> Stephen Wolfram. </author> <title> Mathematica: a System for Doing Mathematics by Computer. </title> <publisher> Addison-Wesley, </publisher> <year> 1991. </year> <note> Second edition. 9 </note>
Reference-contexts: Possible Answer: Formula (2). Discussion. The behavior that we expect in this case from the logical simplifier is similar to what the function Simplify of Mathematica <ref> [ Wolfram, 1991 ] </ref> does when it turns x 2 + 2x + 1 into (1 + x) 2 . The usefulness of for simplifying logical formulas is explained by the combination of two circumstances. First, this connective represents an important idea.
References-found: 15

