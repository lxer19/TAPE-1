URL: ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-97-2-1.ps.Z
Refering-URL: http://www.cs.man.ac.uk/cstechrep/Abstracts/UMCS-97-2-1.html
Root-URL: http://www.cs.man.ac.uk
Title: Optimisation Techniques for Expressive Description Logics  
Author: Ian Horrocks 
Affiliation: Computer Science University of Manchester  
Pubnum: ISSN 1361 6161  
Abstract: Department of Computer Science University of Manchester Technical Report Series UMCS-97-2-1 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> L. C. Aiello, J. Doyle, and S. Shapiro, editors. </editor> <booktitle> Principals of Knowledge Representation and Reasoning: Proceedings of the Fifth International Conference (KR'96). </booktitle> <publisher> Morgan Kaufmann, </publisher> <month> November </month> <year> 1996. </year>
Reference: [2] <author> F. Baader. </author> <title> Terminological cycles in kl-one-based knowledge representation languages. </title> <institution> Research Report RR-90-01, Deutsches Forschungszentrum fur Kunstliche Intelligenz GmbH (DFKI), </institution> <month> January </month> <year> 1990. </year>
Reference-contexts: Alternative semantics based on least and greatest fixpoints have been proposed <ref> [2, 9] </ref> but it is not clear that any one semantics is universally preferable [44].
Reference: [3] <author> F. Baader. </author> <title> Augmenting concept languages by transitive closure of roles: An alternative to terminological cycles. </title> <booktitle> In Proceedings of IJCAI'91, </booktitle> <pages> pages 446-451, </pages> <year> 1991. </year>
Reference-contexts: Tableaux algorithms have the additional advantage that they can be relatively easily adapted to deal with different description languages [13]. Extensions to such algorithms which support both transitive closure <ref> [3] </ref> and GCIs [14] are well understood but the problem's inherent complexity (EXPTIME) appears to limit their practical applicability. <p> Grail's concept axioms can also be seen to be a subset of the concept introduction and GCI axioms described in Table 3 on page 5 and Table 4 on page 6. The new Grail classifier uses an extended tableaux subsumption algorithm based on <ref> [14, 3, 42, 4] </ref> which supports the full set of ALC concept forming operators as well as GCIs. Grail's role forming operators and axioms are rather more complex.
Reference: [4] <author> F. Baader, M. Buchheit, and B. </author> <title> Hollunder. Cardinality restrictions on concepts. </title> <journal> Artificial Intelligence, </journal> <note> 1996. To appear. </note>
Reference-contexts: Blocking imposes a new condition on generating rules: the rule can only be applied to a variable x if it has no ancestor variable y such that S x S y <ref> [14, 4] </ref>. If a variable 10 does not meet this condition it is said to be blocked. When a variable is blocked it is in effect being identified with the blocking variable and the constraint system is describing a cyclical model. <p> Grail's concept axioms can also be seen to be a subset of the concept introduction and GCI axioms described in Table 3 on page 5 and Table 4 on page 6. The new Grail classifier uses an extended tableaux subsumption algorithm based on <ref> [14, 3, 42, 4] </ref> which supports the full set of ALC concept forming operators as well as GCIs. Grail's role forming operators and axioms are rather more complex.
Reference: [5] <editor> F. Baader, H.-J. Heinsohn, B. Hollunder, J. Muller, B. Nebel, W. Nutt, and H.-J. </editor> <title> Profitlich. Terminological knowledge representation: A proposal for a terminological logic. </title> <type> Technical Memo TM-90-04, </type> <institution> Deutsches Forschungszentrum fur Kunstliche Intelligenz GmbH (DFKI), </institution> <year> 1991. </year>
Reference-contexts: some preliminary test results. 2 Description Logic Syntax and Semantics Description Logics (DLs) are a family of formalisms closely related to semantic networks but with the distinguishing characteristic that the semantics of the concept (class) description language is sufficiently well defined that the resulting structured objects can be reasoned with <ref> [5] </ref>. In particular the subsumption (sub-class/super-class) relationship between two concept expressions can be computed by a suitable algorithm. Although implemented DLs use various forms of syntax in their description languages a standard infix notation is commonly used in theoretical papers. <p> The meaning of concepts, roles and attributes is given by an interpretation I which consists of a set I , the domain, and an interpretation function I <ref> [5] </ref>.
Reference: [6] <author> F. Baader and B. Hollunder. KRIS: </author> <title> Knowledge representation and inference system. </title> <journal> SIGART Bulletin, </journal> <volume> 2(3) </volume> <pages> 8-14, </pages> <year> 1991. </year>
Reference-contexts: has been tested in a number of ways: 22 * by classifying the Galen core knowledge base (the high level ontology which con-tains 1,794 distinct concepts, 207 roles and 277 GCIs) with various combinations of optimisations enabled and disabled; * by comparing its performance with that of the Kris DL <ref> [6] </ref> using a modified version of the full Galen knowledge base (the modified knowledge base contains 413 roles and 3,917 concepts); * by comparing its performance with the KSAT algorithm [20].
Reference: [7] <author> F. Baader and B. </author> <title> Hollunder. A terminological knowledge representation system with complete inference algorithms. </title> <booktitle> In Processing declarative knowledge: Intermational workshop PDK'91, number 567 in Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 67-86, </pages> <address> Berlin, 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: An alternative approach, first used in the Kris system <ref> [7] </ref>, transposes the subsumption problem into an equivalent satisfiability problem: C D () :(D u :C) |C subsumes D if and only if D u :C is not satisfiable. The satisfiability problem can be solved using an algorithm based on the tableaux calculus [7, 26]. <p> The satisfiability problem can be solved using an algorithm based on the tableaux calculus <ref> [7, 26] </ref>.
Reference: [8] <editor> F. Baader, B. Hollunder, B. Nebel, and H.-J. </editor> <title> Profitlich. An empirical analysis of optimization techniques for terminological representation systems. </title> <editor> In B. Nebel, C. Rich, and W. Swartout, editors, </editor> <booktitle> Principals of Knowledge Representation and Reasoning: Proceedings of the Third International Conference (KR'92), </booktitle> <pages> pages 270-281. </pages> <publisher> Morgan-Kaufmann, </publisher> <year> 1992. </year> <note> Also available as DFKI RR-93-03. </note>
Reference-contexts: However empirical studies using implemented DL systems (which do not support transitive closure or GCIs) have shown that: * constructs which lead to pathological behaviour rarely occur in `realistic' knowledge bases [24]; 2 * optimising the implementation can significantly improve the performance of a tab- leaux algorithm <ref> [8] </ref>. In view of these considerations it seemed worthwhile to investigate tableaux optimisation techniques for a more expressive DL (Grail) via empirical testing with a real knowledge base (the Galen model). <p> A DL classifier will cache the computed partial order in the form of a concept hierarchy which can then be used to provide rapid answers to queries regarding classified concepts and to minimise the number of subsumption tests required to classify a new concept <ref> [8] </ref>. The semantics of DLs mean that subsumption can be formally defined in terms of the subset-superset relationship between interpretations. <p> The new classifier also includes optimisation techniques which have already been demon strated to be effective <ref> [8] </ref>. <p> If the second branch of the nth truth assignment returns a dependency set D 2 , backtrack returning the dependency set (D 1 [ D 2 ) fng. 6.5 Caching The combination of normalisation, encoding and lazy expansion <ref> [8] </ref> facilitates the rapid detection of `obvious' unsatisfiability (subsumption) but detecting `obvious' satisfiability (non-subsumption) is more difficult for tableaux algorithms.
Reference: [9] <author> F. Baader and U. Sattler. </author> <title> Description logics with symbolic number restrictions. </title> <editor> In Wolfgang Wahlster, editor, </editor> <booktitle> Proceedings of the 12th European Conference on Artificial Intelligence (ECAI'96), </booktitle> <pages> pages 283-287. </pages> <publisher> John Wiley & Sons Ltd., </publisher> <year> 1996. </year>
Reference-contexts: Alternative semantics based on least and greatest fixpoints have been proposed <ref> [2, 9] </ref> but it is not clear that any one semantics is universally preferable [44].
Reference: [10] <author> R. Baud, C. Lovis, L. Alpay, A.-M. Rassinoux, J.-R. Scherrer, A. W. Nowlan, and A. L. Rector. </author> <title> Modelling for natural language understanding. </title> <editor> In Charles Safran, editor, </editor> <booktitle> Seventeenth Annual Symposium on Computer Applications in Medical Care (SCAMC-93), </booktitle> <pages> pages 289-93, </pages> <address> Washington DC, 1993. </address> <publisher> McGraw Hill. </publisher>
Reference-contexts: by the discovery of implicit subsumption relationships; * the DL can be used as a powerful database query language supporting intensional as well as extensional queries [12] and query optimisation [11]; * the concept model can be used in intelligent data entry systems [35, 28] and in natural language processing <ref> [10, 37, 48] </ref>; * data can be shared between existing applications by using the concept model as an interlingua and providing mappings to a variety of coding schemes. 1 1.1 The GRAIL Description Logic Grail was developed specifically for building the medical terminology model (although it is now being used in
Reference: [11] <author> D. Beneventano, S. Bergamaschi, S. Lodi, and C. Sartori. </author> <title> Terminological logics for schema design and query processing in OODBs. </title> <editor> In F. Baader, M. Buchheit, </editor> <address> 32 M.A. </address> <publisher> Jeusfeld, </publisher> <editor> and W. Nutt, editors, </editor> <title> Reasoning about structured objects|knowledge representation meets databases. </title> <booktitle> Proceedings of the KI'94 Workshop KRDB'94, Saarbrucken, </booktitle> <address> Germany, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: required; * the DL classifier can be used to check the coherence of new descriptions and to enrich the schema by the discovery of implicit subsumption relationships; * the DL can be used as a powerful database query language supporting intensional as well as extensional queries [12] and query optimisation <ref> [11] </ref>; * the concept model can be used in intelligent data entry systems [35, 28] and in natural language processing [10, 37, 48]; * data can be shared between existing applications by using the concept model as an interlingua and providing mappings to a variety of coding schemes. 1 1.1 The
Reference: [12] <author> P. Bresciani. </author> <title> Querying databases from description logics. </title> <editor> In F. Baader, M. Buchheit, M.A. Jeusfeld, and W. Nutt, editors, </editor> <title> Reasoning about structured objects|knowledge representation meets databases. </title> <booktitle> Proceedings of the 2nd Workshop KRDB'95, </booktitle> <year> 1995. </year>
Reference-contexts: to the terminology where required; * the DL classifier can be used to check the coherence of new descriptions and to enrich the schema by the discovery of implicit subsumption relationships; * the DL can be used as a powerful database query language supporting intensional as well as extensional queries <ref> [12] </ref> and query optimisation [11]; * the concept model can be used in intelligent data entry systems [35, 28] and in natural language processing [10, 37, 48]; * data can be shared between existing applications by using the concept model as an interlingua and providing mappings to a variety of coding
Reference: [13] <author> P. Bresciani, E. Franconi, and S. Tessaris. </author> <title> Implementing and testing expressive description logics: a preliminary report. </title> <editor> In Gerard Ellis, Robert A. Levinson, An-drew Fall, and Veronica Dahl, editors, </editor> <title> Knowledge Retrieval, Use and Storage for Efficiency: </title> <booktitle> Proceedings of the First International KRUSE Symposium, </booktitle> <pages> pages 28-39, </pages> <year> 1995. </year>
Reference-contexts: In contrast, the new Grail classifier converts the subsumption problem into an equivalent satisfiability problem which is solved using a sound and complete tableaux based algorithm [26]. Tableaux algorithms have the additional advantage that they can be relatively easily adapted to deal with different description languages <ref> [13] </ref>. Extensions to such algorithms which support both transitive closure [3] and GCIs [14] are well understood but the problem's inherent complexity (EXPTIME) appears to limit their practical applicability. <p> This approach has many advantages and has dominated recent DL research: * it has a sound theoretical basis in first order logic [26]; * it can be relatively easily adapted to allow for different expressive possibilities by changing the set of tableaux expansion rules <ref> [13] </ref>; 7 * it has been shown to be optimal for a number of DL languages in the sense that the worst case complexity of the algorithm is no worse than the known complexity of the satisfiability problem for the logic [26]; * the theoretical frontiers of decidability and tractability are
Reference: [14] <author> M. Buchheit, F. M. Donini, and A. Schaerf. </author> <title> Decidable reasoning in terminological knowledge representation systems. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 1 </volume> <pages> 109-138, </pages> <year> 1993. </year>
Reference-contexts: Tableaux algorithms have the additional advantage that they can be relatively easily adapted to deal with different description languages [13]. Extensions to such algorithms which support both transitive closure [3] and GCIs <ref> [14] </ref> are well understood but the problem's inherent complexity (EXPTIME) appears to limit their practical applicability. <p> Blocking imposes a new condition on generating rules: the rule can only be applied to a variable x if it has no ancestor variable y such that S x S y <ref> [14, 4] </ref>. If a variable 10 does not meet this condition it is said to be blocked. When a variable is blocked it is in effect being identified with the blocking variable and the constraint system is describing a cyclical model. <p> Grail's concept axioms can also be seen to be a subset of the concept introduction and GCI axioms described in Table 3 on page 5 and Table 4 on page 6. The new Grail classifier uses an extended tableaux subsumption algorithm based on <ref> [14, 3, 42, 4] </ref> which supports the full set of ALC concept forming operators as well as GCIs. Grail's role forming operators and axioms are rather more complex. <p> useful with less expressive DLs and should become standard in tableaux satisfiability algorithms. * A complete procedure could be used for `background' processing after a quick answer has been provided by an incomplete procedure and to provide a benchmark against which the performance of an incomplete procedure could be judged <ref> [14] </ref>.
Reference: [15] <author> F. Donini, B. Hollunder, M. Lenzerini, A. M. Spaccamela, D. Nardi, and W. Nutt. </author> <title> The frontier of tractability for concept description languages. </title> <type> Technical report, </type> <institution> Deutsches Forschungszentrum fur Kunstliche Intelligenz GmbH (DFKI), </institution> <year> 1989. </year>
Reference-contexts: it has been shown to be optimal for a number of DL languages in the sense that the worst case complexity of the algorithm is no worse than the known complexity of the satisfiability problem for the logic [26]; * the theoretical frontiers of decidability and tractability are well understood <ref> [43, 15] </ref>. 3.1 Basic Method Tableaux algorithms test the satisfiability of a concept expression by trying to construct a model|a domain in which some individual satisfies the concept expression.
Reference: [16] <author> J. W. Freeman. </author> <title> Improvements to propositional satisfiability search algorithms. </title> <type> PhD thesis, </type> <institution> Department of Computer and Information Science, University of Pennsylva-nia, </institution> <address> Philadelphia, PA, USA, </address> <year> 1995. </year>
Reference-contexts: In particular both boolean constraint propagation and heuristic guided search can be used to minimise the size of the search tree <ref> [16] </ref>. 6.3.1 Boolean Constraint Propagation Boolean constraint propagation (BCP) [16] is a technique used to maximise deterministic expansion, and thus pruning of the search tree via clash detection, before performing non-deterministic expansion (branching). <p> In particular both boolean constraint propagation and heuristic guided search can be used to minimise the size of the search tree <ref> [16] </ref>. 6.3.1 Boolean Constraint Propagation Boolean constraint propagation (BCP) [16] is a technique used to maximise deterministic expansion, and thus pruning of the search tree via clash detection, before performing non-deterministic expansion (branching). BCP deterministically expands disjunctive constraints presenting only one expansion possibility and detects a clash when a disjunctive constraint has no expansion possibilities. <p> When expanding the constraints on a variable x, Grail examines all the unexpanded disjunctive constraints on x and branches on the disjunct which has the Maximum number of Occurrences in disjunctions of Minimum Size|the well 17 known MOMS heuristic <ref> [16] </ref>. The order in which the two branches are searched is also heuristically determined based on the ratio of positive and negated occurrences of the chosen disjunct.
Reference: [17] <author> J. W. Freeman. </author> <title> Hard random 3-SAT problems and the Davis-Putnam procedure. </title> <journal> Artificial Intelligence, </journal> <volume> 81 </volume> <pages> 183-198, </pages> <year> 1996. </year>
Reference-contexts: Grail deals with this problem by using a semantic branching technique adapted from DPL SAT algorithms <ref> [17] </ref>.
Reference: [18] <author> G. De Giacomo and M. Lenzerini. </author> <title> Tbox and abox reasoning in expressive description logics. </title> <editor> In Aiello et al. </editor> <volume> [1], </volume> <pages> pages 316-327. </pages>
Reference-contexts: Grail's role forming operators and axioms are rather more complex. Although Grail's syntax implies support for the inverse role forming operator the subsumption algorithm does not support reasoning about inverse roles|the two new roles introduced by a newAttribute statement are treated independently. As reasoning with inverse roles is problematical <ref> [43, 18] </ref> the same approach has been adopted in the new Grail classifier. 11 Grail's role inclusion axioms are dealt with by extensions to the tableaux expansion rules similar to those used to deal with transitively closed roles [42]; these extensions do not affect the operation of the optimisation techniques and
Reference: [19] <author> M. L. Ginsberg. </author> <title> Dynamic backtracking. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 1 </volume> <pages> 25-46, </pages> <year> 1993. </year>
Reference-contexts: It is perhaps worth noting that this optimisation is in fact a form of dynamic backtracking <ref> [19] </ref>: a branching choice is made (i.e. the selection of the negated primitive from a GCI disjunction); search continues, perhaps involving further branching choices; a contradiction is discovered; the earlier choice is changed without discarding subsequent searching. 6.3 Semantic Branching Standard tableaux algorithms are inherently inefficient as the search technique uses
Reference: [20] <author> F. Giunchiglia and R. Sebastiani. </author> <title> Building decision procedures for modal logics from propositional decision procedures|the case study of modal K. </title> <editor> In Michael McRobbie and John Slaney, editors, </editor> <booktitle> Proceedings of the Thirteenth International Conference on Automated Deduction (CADE-13), number 1104 in Lecture Notes in Artificial Intelligence. </booktitle> <publisher> Springer, </publisher> <year> 1996. </year>
Reference-contexts: choices; a contradiction is discovered; the earlier choice is changed without discarding subsequent searching. 6.3 Semantic Branching Standard tableaux algorithms are inherently inefficient as the search technique uses syntactic branching|choosing an unexpanded disjunction and searching all the possible constraint systems obtained by adding constraints corresponding to each of the disjuncts <ref> [20] </ref>. As the alternative constraint systems are not disjoint there is nothing to prevent the recurrence of clashing constraints in different branches of the search tree. The resulting wasted expansion could be costly if discovering the clash requires the solution of a complex sub-problem. <p> GCIs) with various combinations of optimisations enabled and disabled; * by comparing its performance with that of the Kris DL [6] using a modified version of the full Galen knowledge base (the modified knowledge base contains 413 roles and 3,917 concepts); * by comparing its performance with the KSAT algorithm <ref> [20] </ref>. The comparisons with Kris and KSAT also provided useful correctness tests: the concept hierarchies computed by Kris and Grail were identical, as were the results of 44,000 satisfiability tests performed by both KSAT and Grail. <p> The same process took Kris 955s, 256,555 subsumption tests and 113,296 satisfiability tests. 7.3 Comparing GRAIL and KSAT As well as classifying the Galen terminology, Grail was also compared with KSAT, a decision procedure for the propositional modal logic K (m) which has been shown to be equivalent to ALC <ref> [43, 20] </ref>. The Grail and KSAT decision procedures were compared using randomly generated N -CNF K (m) concepts, a test method devised by KSAT's developers [21].
Reference: [21] <author> F. Giunchiglia and R. Sebastiani. </author> <title> A SAT-based decision procedure for ALC. </title> <editor> In Aiello et al. </editor> <volume> [1], </volume> <pages> pages 304-314. </pages>
Reference-contexts: times as many satisfiability tests and exhibits a higher rate of increase in the number of satisfiability tests required as the knowledge base size is increased. * Grail out-performs KSAT when testing the satisfiability of single randomly generated ALC concept expressions, a test method devised and used by KSAT's developers <ref> [21] </ref>. For the hardest problems generated, KSAT's median solution time is more than 3 times greater than Grail's and its mean solution time is more than 10 times greater; KSAT also takes almost 25 times longer to solve the complete problem set. <p> The Grail and KSAT decision procedures were compared using randomly generated N -CNF K (m) concepts, a test method devised by KSAT's developers <ref> [21] </ref>. <p> The tests performed here follow the basic method from <ref> [21] </ref>, using N = 3, m = 1, p = 0:5, d = 3 and L in the range 3-123. The performance of KSAT and the new Grail satisfiability algorithm is compared in KSAT and Grail to perform satisfiability tests on 1,000 randomly generated concepts.
Reference: [22] <author> C. Goble, N. Paton, and S. Bechhofer, </author> <year> 1996. </year> <note> http://www.cs.man.ac.uk/mig/tambis/. 33 </note>
Reference-contexts: be shared between existing applications by using the concept model as an interlingua and providing mappings to a variety of coding schemes. 1 1.1 The GRAIL Description Logic Grail was developed specifically for building the medical terminology model (although it is now being used in a variety of other applications <ref> [23, 22] </ref>). A detailed design study [34] led to the specification of a DL with a restricted set of concept and role forming operators but an unusually expressive set of terminological axioms.
Reference: [23] <author> C. A. Goble, C. Haul, and S. Bechhofer. </author> <title> Describing and classifying multimedia using the description logic Grail. </title> <booktitle> In Proceedings of IS&T/SPIE, </booktitle> <volume> vol 2670, </volume> <booktitle> Storage and Retrieval for Still Image and Video Databases fIVg, </booktitle> <address> San Jose, California, USA, </address> <month> February </month> <year> 1996. </year>
Reference-contexts: be shared between existing applications by using the concept model as an interlingua and providing mappings to a variety of coding schemes. 1 1.1 The GRAIL Description Logic Grail was developed specifically for building the medical terminology model (although it is now being used in a variety of other applications <ref> [23, 22] </ref>). A detailed design study [34] led to the specification of a DL with a restricted set of concept and role forming operators but an unusually expressive set of terminological axioms.
Reference: [24] <author> J. Heinsohn, D. Kudenko, B. Nebel, and H.-J. Profitlich. </author> <title> An empirical analysis of terminological representation systems. </title> <journal> Artificial Intelligence, </journal> <volume> 68 </volume> <pages> 367-397, </pages> <year> 1994. </year>
Reference-contexts: However empirical studies using implemented DL systems (which do not support transitive closure or GCIs) have shown that: * constructs which lead to pathological behaviour rarely occur in `realistic' knowledge bases <ref> [24] </ref>; 2 * optimising the implementation can significantly improve the performance of a tab- leaux algorithm [8]. In view of these considerations it seemed worthwhile to investigate tableaux optimisation techniques for a more expressive DL (Grail) via empirical testing with a real knowledge base (the Galen model).
Reference: [25] <author> T. Hogg, B. A. Huberman, and C. P. Williams. </author> <title> Phase transitions and the search problem. </title> <journal> Artificial Intelligence, </journal> <volume> 81 </volume> <pages> 1-15, </pages> <address> 1996. </address> <publisher> Editorial. </publisher>
Reference-contexts: With this kind of problem Grail also exhibits easy-hard-easy behavior as con-strainedness is varied to give problems with probabilities of satisfiability in the range 1-0, a behavior which has been shown to be characteristic of many (NP-Complete) search problems <ref> [25] </ref>. 23 7.1 Classifying the GALEN Knowledge Base The performance of the new Grail classifier was first tested with respect to classification of the Galen core knowledge base. In Figure 4 on the current page the classification time per concept is plotted against knowledge base size.
Reference: [26] <author> B. Hollunder and W. Nutt. </author> <title> Subsumption algorithms for concept languages. </title> <institution> Research Report RR-90-04, Deutsches Forschungszentrum fur Kunstliche Intelligenz GmbH (DFKI), </institution> <month> April </month> <year> 1990. </year>
Reference-contexts: This algorithm is known to be incomplete and may even be unsound [27]. In contrast, the new Grail classifier converts the subsumption problem into an equivalent satisfiability problem which is solved using a sound and complete tableaux based algorithm <ref> [26] </ref>. Tableaux algorithms have the additional advantage that they can be relatively easily adapted to deal with different description languages [13]. Extensions to such algorithms which support both transitive closure [3] and GCIs [14] are well understood but the problem's inherent complexity (EXPTIME) appears to limit their practical applicability. <p> The satisfiability problem can be solved using an algorithm based on the tableaux calculus <ref> [7, 26] </ref>. <p> The satisfiability problem can be solved using an algorithm based on the tableaux calculus [7, 26]. This approach has many advantages and has dominated recent DL research: * it has a sound theoretical basis in first order logic <ref> [26] </ref>; * it can be relatively easily adapted to allow for different expressive possibilities by changing the set of tableaux expansion rules [13]; 7 * it has been shown to be optimal for a number of DL languages in the sense that the worst case complexity of the algorithm is no <p> possibilities by changing the set of tableaux expansion rules [13]; 7 * it has been shown to be optimal for a number of DL languages in the sense that the worst case complexity of the algorithm is no worse than the known complexity of the satisfiability problem for the logic <ref> [26] </ref>; * the theoretical frontiers of decidability and tractability are well understood [43, 15]. 3.1 Basic Method Tableaux algorithms test the satisfiability of a concept expression by trying to construct a model|a domain in which some individual satisfies the concept expression. <p> to 2,573s, a factor of more than 4.7, while the number of satisfiability tests performed increased to 22,961, a factor of more than 2.7. 7.2 Comparing GRAIL and KRIS In order to compare the performance of Grail and Kris the Galen knowledge base was converted to an ALCF knowledge base <ref> [26] </ref> by: 1. Discarding all role inclusion axioms. 2. Converting all GCIs A v B into concept definitions CN : = A u B where CN is a unique system generated name. 3.
Reference: [27] <author> I. Horrocks. </author> <title> A comparison of two terminological knowledge representation systems. </title> <type> Master's thesis, </type> <institution> University of Manchester, </institution> <year> 1995. </year>
Reference-contexts: This algorithm is known to be incomplete and may even be unsound <ref> [27] </ref>. In contrast, the new Grail classifier converts the subsumption problem into an equivalent satisfiability problem which is solved using a sound and complete tableaux based algorithm [26]. Tableaux algorithms have the additional advantage that they can be relatively easily adapted to deal with different description languages [13].
Reference: [28] <author> J. Kirby and A. L. Rector. </author> <title> The PEN&PAD data entry system: From prototype to practical system. </title> <booktitle> In AMIA Fall Symposium, </booktitle> <year> 1996. </year> <note> to appear. </note>
Reference-contexts: new descriptions and to enrich the schema by the discovery of implicit subsumption relationships; * the DL can be used as a powerful database query language supporting intensional as well as extensional queries [12] and query optimisation [11]; * the concept model can be used in intelligent data entry systems <ref> [35, 28] </ref> and in natural language processing [10, 37, 48]; * data can be shared between existing applications by using the concept model as an interlingua and providing mappings to a variety of coding schemes. 1 1.1 The GRAIL Description Logic Grail was developed specifically for building the medical terminology model
Reference: [29] <author> D. B. Lenat and R. V. Guha. </author> <title> The evolution of cycl, the cyc representation language. </title> <journal> SIGART Bulletin, </journal> <volume> 2(3) </volume> <pages> 84-87, </pages> <year> 1991. </year>
Reference-contexts: It is worth noting that the requirement for similarly (or more) expressive DLs has been demonstrated for a wide range of other applications [30, 41]. 1.2 Subsumption Algorithms In common with the majority of implemented DL systems <ref> [31, 32, 36, 29] </ref> the original Grail classifier uses a structural subsumption algorithm. This algorithm is known to be incomplete and may even be unsound [27].
Reference: [30] <author> Alon Y. Levy and Marie-Christine Rousset. </author> <title> Using description logics to model and reason about views. </title> <editor> In F. Baader, M. Buchheit, M.A. Jeusfeld, and W. Nutt, editors, </editor> <title> Reasoning about structured objects|knowledge representation meets databases. </title> <booktitle> Proceedings of the 3rd Workshop KRDB'96, </booktitle> <pages> pages 48-49, </pages> <year> 1996. </year>
Reference-contexts: It is worth noting that the requirement for similarly (or more) expressive DLs has been demonstrated for a wide range of other applications <ref> [30, 41] </ref>. 1.2 Subsumption Algorithms In common with the majority of implemented DL systems [31, 32, 36, 29] the original Grail classifier uses a structural subsumption algorithm. This algorithm is known to be incomplete and may even be unsound [27].
Reference: [31] <author> R. M. MacGregor. </author> <title> Inside the Loom description classifier. </title> <journal> SIGART Bulletin, </journal> <volume> 2(3) </volume> <pages> 88-92, </pages> <year> 1991. </year>
Reference-contexts: It is worth noting that the requirement for similarly (or more) expressive DLs has been demonstrated for a wide range of other applications [30, 41]. 1.2 Subsumption Algorithms In common with the majority of implemented DL systems <ref> [31, 32, 36, 29] </ref> the original Grail classifier uses a structural subsumption algorithm. This algorithm is known to be incomplete and may even be unsound [27].
Reference: [32] <author> E. Mays, R. Dionne, and R. Weida. </author> <title> K-rep system overview. </title> <journal> SIGART Bulletin, </journal> <volume> 2(3) </volume> <pages> 93-97, </pages> <year> 1991. </year>
Reference-contexts: It is worth noting that the requirement for similarly (or more) expressive DLs has been demonstrated for a wide range of other applications [30, 41]. 1.2 Subsumption Algorithms In common with the majority of implemented DL systems <ref> [31, 32, 36, 29] </ref> the original Grail classifier uses a structural subsumption algorithm. This algorithm is known to be incomplete and may even be unsound [27].
Reference: [33] <author> B. Nebel. </author> <title> Terminological cycles: Semantics and computational properties. </title> <booktitle> In Sowa [46], chapter 11, </booktitle> <pages> pages 331-361. </pages>
Reference-contexts: these restrictions, any I is a model of any T and subsumption between concept expressions is therefore independent of T : C 1 C 2 () C I 2 for all I This semantics for the subsumption relation, called descriptive semantics, can produce counter-intuitive results when the terminology contains cycles <ref> [33] </ref>. Alternative semantics based on least and greatest fixpoints have been proposed [2, 9] but it is not clear that any one semantics is universally preferable [44].
Reference: [34] <author> W. A. Nowlan. </author> <title> Structured methods of information management for medical records. </title> <type> PhD thesis, </type> <institution> University of Manchester, </institution> <year> 1993. </year>
Reference-contexts: A detailed design study <ref> [34] </ref> led to the specification of a DL with a restricted set of concept and role forming operators but an unusually expressive set of terminological axioms.
Reference: [35] <author> W. A. Nowlan and A. L. Rector. </author> <title> Medical knowledge representation and predictive data entry. </title> <editor> In M. Stefanelle, A. Hasman, M. Fieschi, and J. Talmon, editors, </editor> <booktitle> Proceedings of AIME 91, number 44 in Lecture notes in Medical Informatics, </booktitle> <pages> pages 105-116. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: new descriptions and to enrich the schema by the discovery of implicit subsumption relationships; * the DL can be used as a powerful database query language supporting intensional as well as extensional queries [12] and query optimisation [11]; * the concept model can be used in intelligent data entry systems <ref> [35, 28] </ref> and in natural language processing [10, 37, 48]; * data can be shared between existing applications by using the concept model as an interlingua and providing mappings to a variety of coding schemes. 1 1.1 The GRAIL Description Logic Grail was developed specifically for building the medical terminology model
Reference: [36] <author> P. F. Patel-Schneider. </author> <title> The Classic knowledge representation system: Guiding principals and implementation rationale. </title> <journal> SIGART Bulletin, </journal> <volume> 2(3) </volume> <pages> 108-113, </pages> <year> 1991. </year> <month> 34 </month>
Reference-contexts: It is worth noting that the requirement for similarly (or more) expressive DLs has been demonstrated for a wide range of other applications [30, 41]. 1.2 Subsumption Algorithms In common with the majority of implemented DL systems <ref> [31, 32, 36, 29] </ref> the original Grail classifier uses a structural subsumption algorithm. This algorithm is known to be incomplete and may even be unsound [27].
Reference: [37] <author> A.-M. Rasinoux, C. Juge, P.-A. Michel, R. H. Baud, D. Lemaitre, F.-C. Jean, P. De--goulet, and J.-R. Scherrer. </author> <title> Analysis of medical jargon: The RECIT system. </title> <editor> In P. Barahona, M. Stefanelli, J. Wyatt, and J. Sickmann, editors, </editor> <booktitle> Fifth conference on Artificial Intelligence in Medicine Europe (AIME '95), number 934 in Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 42-42. </pages> <publisher> Springer, </publisher> <year> 1995. </year>
Reference-contexts: by the discovery of implicit subsumption relationships; * the DL can be used as a powerful database query language supporting intensional as well as extensional queries [12] and query optimisation [11]; * the concept model can be used in intelligent data entry systems [35, 28] and in natural language processing <ref> [10, 37, 48] </ref>; * data can be shared between existing applications by using the concept model as an interlingua and providing mappings to a variety of coding schemes. 1 1.1 The GRAIL Description Logic Grail was developed specifically for building the medical terminology model (although it is now being used in
Reference: [38] <author> A. Rector, S. Bechhofer, C. A. Goble, I. Horrocks, W. A. Nowlan, and W. D. Solomon. </author> <title> The Galen concept modelling language for medical terminology. </title> <booktitle> AI in Medicine, </booktitle> <year> 1996. </year> <note> To appear. </note>
Reference-contexts: Moreover, in spite of the fact that many schemes are specific to particular purposes, specialities or even databases, their rigidity frequently compels application designers to use additional ad-hoc terms to cover fine detail <ref> [38] </ref>. The concept model has been built using Grail, a description logic (DL) based knowledge representation system.
Reference: [39] <author> A. Rector and I. Horrocks. </author> <title> Experience building a large, re-usable medical ontology using a description logic with transitivity and concept inclusions. </title> <booktitle> In Workshop on Ontological Engineering, AAAI Spring Symposium, </booktitle> <address> Stanford, CA. </address> <publisher> AAAI Press, </publisher> <address> Menlo Park, California, </address> <year> 1997. </year> <note> To appear. </note>
Reference-contexts: 1 Introduction As part of the European Galen project the Medical Informatics Group at Manchester University have built a large concept model representing knowledge about medical terminology. The model is intended to promote sharing and re-use of medical data by acting as a flexible and extensible classification schema <ref> [40, 39] </ref>. In existing applications this function is often served by `controlled vocabularies', of which more than 20 are currently in use. These vocabularies or `coding schemes' are often very large and thus both difficult and costly to build and maintain.
Reference: [40] <author> A. L. Rector, P. Zanstra, D. Solomon, </author> <title> and The Galen Consortium. Galen: Terminology services for clinical information systems. </title> <editor> In M. F. Laires, M. J. Ladeira, and J. P. Christensen, editors, </editor> <booktitle> Health in the New Communications Age, </booktitle> <pages> pages 90-100. </pages> <publisher> IOS Press, </publisher> <address> Amsterdam, </address> <year> 1995. </year>
Reference-contexts: 1 Introduction As part of the European Galen project the Medical Informatics Group at Manchester University have built a large concept model representing knowledge about medical terminology. The model is intended to promote sharing and re-use of medical data by acting as a flexible and extensible classification schema <ref> [40, 39] </ref>. In existing applications this function is often served by `controlled vocabularies', of which more than 20 are currently in use. These vocabularies or `coding schemes' are often very large and thus both difficult and costly to build and maintain.
Reference: [41] <author> U. Sattler. </author> <title> A concept language for engineering applications with part-whole relations. </title> <booktitle> In Proceedings of the International Conference on Description Logics|DL'95, </booktitle> <pages> pages 119-123, </pages> <address> Roma, Italy, </address> <year> 1995. </year>
Reference-contexts: It is worth noting that the requirement for similarly (or more) expressive DLs has been demonstrated for a wide range of other applications <ref> [30, 41] </ref>. 1.2 Subsumption Algorithms In common with the majority of implemented DL systems [31, 32, 36, 29] the original Grail classifier uses a structural subsumption algorithm. This algorithm is known to be incomplete and may even be unsound [27].
Reference: [42] <author> U. Sattler. </author> <title> A concept language extended with different kinds of transitive roles. </title> <editor> In G. Gorz and S. Holldobler, editors, </editor> <booktitle> 20. Deutsche Jahrestagung fur Kunstliche Intelligenz, number 1137 in Lecture Notes in Artificial Intelligence. </booktitle> <publisher> Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: Grail's concept axioms can also be seen to be a subset of the concept introduction and GCI axioms described in Table 3 on page 5 and Table 4 on page 6. The new Grail classifier uses an extended tableaux subsumption algorithm based on <ref> [14, 3, 42, 4] </ref> which supports the full set of ALC concept forming operators as well as GCIs. Grail's role forming operators and axioms are rather more complex. <p> As reasoning with inverse roles is problematical [43, 18] the same approach has been adopted in the new Grail classifier. 11 Grail's role inclusion axioms are dealt with by extensions to the tableaux expansion rules similar to those used to deal with transitively closed roles <ref> [42] </ref>; these extensions do not affect the operation of the optimisation techniques and their description is beyond the scope of this report. 5 Intractability When classifying the Galen knowledge base the large number of GCIs is a major cause of intractability.
Reference: [43] <author> K. Schild. </author> <title> A correspondence theory for terminological logics: Preliminary report. </title> <booktitle> In Proceedings of IJCAI'91, </booktitle> <pages> pages 466-471, </pages> <year> 1991. </year>
Reference-contexts: it has been shown to be optimal for a number of DL languages in the sense that the worst case complexity of the algorithm is no worse than the known complexity of the satisfiability problem for the logic [26]; * the theoretical frontiers of decidability and tractability are well understood <ref> [43, 15] </ref>. 3.1 Basic Method Tableaux algorithms test the satisfiability of a concept expression by trying to construct a model|a domain in which some individual satisfies the concept expression. <p> Grail's role forming operators and axioms are rather more complex. Although Grail's syntax implies support for the inverse role forming operator the subsumption algorithm does not support reasoning about inverse roles|the two new roles introduced by a newAttribute statement are treated independently. As reasoning with inverse roles is problematical <ref> [43, 18] </ref> the same approach has been adopted in the new Grail classifier. 11 Grail's role inclusion axioms are dealt with by extensions to the tableaux expansion rules similar to those used to deal with transitively closed roles [42]; these extensions do not affect the operation of the optimisation techniques and <p> The same process took Kris 955s, 256,555 subsumption tests and 113,296 satisfiability tests. 7.3 Comparing GRAIL and KSAT As well as classifying the Galen terminology, Grail was also compared with KSAT, a decision procedure for the propositional modal logic K (m) which has been shown to be equivalent to ALC <ref> [43, 20] </ref>. The Grail and KSAT decision procedures were compared using randomly generated N -CNF K (m) concepts, a test method devised by KSAT's developers [21].
Reference: [44] <author> K. Schild. </author> <title> Terminological cycles and the propositional -calculus. </title> <type> Technical Report RR-93-18, </type> <institution> Deutsches Forschungszentrum fur Kunstliche Intelligenz GmbH (DFKI), </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: Alternative semantics based on least and greatest fixpoints have been proposed [2, 9] but it is not clear that any one semantics is universally preferable <ref> [44] </ref>. Descriptive semantics are usually prefered as they are the most conceptually obvious (they correspond to the semantics of first order logic) and, unlike fixpoint semantics (but see [44]), are applicable to all DLs, including those supporting GCIs. <p> on least and greatest fixpoints have been proposed [2, 9] but it is not clear that any one semantics is universally preferable <ref> [44] </ref>. Descriptive semantics are usually prefered as they are the most conceptually obvious (they correspond to the semantics of first order logic) and, unlike fixpoint semantics (but see [44]), are applicable to all DLs, including those supporting GCIs.
Reference: [45] <author> M. Schmidt-Schauand G. Smolka. </author> <title> Attributive concept descriptions with complements. </title> <journal> Artificial Intelligence, </journal> <volume> 48 </volume> <pages> 1-26, </pages> <year> 1991. </year>
Reference-contexts: For a relatively simple DL such as ALC <ref> [45] </ref> only two forms of constraint are required, x : C and xRy where x and y are variables corresponding to unique individuals in the domain.
Reference: [46] <editor> J. F. Sowa, editor. </editor> <booktitle> Principals of Semantic Networks: Explorations in the representation of knowledge. </booktitle> <publisher> Morgan-Kaufmann, </publisher> <year> 1991. </year>
Reference: [47] <author> A. Tarski. </author> <title> Logic, Semantics, </title> <booktitle> Mathemetics: Papers from 1923 to 1938. </booktitle> <publisher> Oxford University Press, </publisher> <year> 1956. </year>
Reference-contexts: Although implemented DLs use various forms of syntax in their description languages a standard infix notation is commonly used in theoretical papers. The interpretation of concept expressions and of the subsumption relationship is also widely based on a Tarski style model theoretic semantics <ref> [47] </ref>. 2.1 Syntax DLs support the logical description of concepts, roles (relationships) and attributes (single-valued roles). Concepts, roles and attributes can be combined, using using a variety of operators, to form more complex expressions [50] which can be used in terminological axioms to add information to the knowledge base. <p> Using this correspondence the above axiom could be translated into first order logic as: 8x:(parent (x) () person (x) ^ 9y (person (y) ^ child (x; y))) 3 2.2 Model Theoretic Semantics A Tarski style model theoretic semantics <ref> [47] </ref> is used to interpret expressions and to justify subsumption inferences. Concepts, roles and attributes are taken to refer to sets of objects in the domain of interest and the relationships between them.
Reference: [48] <author> J. C. Wagner, A.-M. Rassinoux, R. H. Baud, and J.-R. Scherrer. </author> <title> Generating noun phrases from a medical knowledge representation. </title> <booktitle> Twelfth International Congress of the European Federation for Medical Informatics, MIE-94, </booktitle> <pages> pages 218-223, </pages> <year> 1994. </year> <month> 35 </month>
Reference-contexts: by the discovery of implicit subsumption relationships; * the DL can be used as a powerful database query language supporting intensional as well as extensional queries [12] and query optimisation [11]; * the concept model can be used in intelligent data entry systems [35, 28] and in natural language processing <ref> [10, 37, 48] </ref>; * data can be shared between existing applications by using the concept model as an interlingua and providing mappings to a variety of coding schemes. 1 1.1 The GRAIL Description Logic Grail was developed specifically for building the medical terminology model (although it is now being used in
Reference: [49] <author> W. A. Woods. </author> <title> Understanding subsumption and taxonomy: a framework for progress. </title> <booktitle> In Sowa [46], chapter 1, </booktitle> <pages> pages 45-94. </pages>
Reference-contexts: Subsumption based on descriptive semantics will be assumed in the remainder of this report. 3 Tableaux Subsumption Algorithms Most early DL systems used structural subsumption algorithms <ref> [49] </ref> based on rules such as: |C subsumes A u B if and only if C subsumes either A or B.
Reference: [50] <author> W. A. Woods and J. G. Schmolze. </author> <title> The kl-one family. </title> <journal> Computers and Mathematics with Applications Special Issue on Artificial Intelligence, </journal> <volume> 23(2-5):133-177, </volume> <year> 1992. </year> <month> 36 </month>
Reference-contexts: Concepts, roles and attributes can be combined, using using a variety of operators, to form more complex expressions <ref> [50] </ref> which can be used in terminological axioms to add information to the knowledge base. The operators supported by DLs usually include some or all of the standard logical connectives along with one or both of universal and existential quantification (often called value restrictions and exists restrictions).
References-found: 50

