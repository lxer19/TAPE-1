URL: http://www.robotics.stanford.edu/~koller/papers/ijc95kp.ps
Refering-URL: http://www.robotics.stanford.edu/~koller/papers/ijc95kp.html
Root-URL: http://www.robotics.stanford.edu
Email: daphne@cs.berkeley.edu  ap@cs.berkeley.edu  
Title: Generating and Solving Imperfect Information Games  
Author: Daphne Koller Avi Pfeffer 
Address: Berkeley, CA 94720  Berkeley, CA 94720  
Affiliation: University of California  University of California  
Abstract: Work on game playing in AI has typically ignored games of imperfect information such as poker. In this paper, we present a framework for dealing with such games. We point out several important issues that arise only in the context of imperfect information games, particularly the insufficiency of a simple game tree model to represent the players' information state and the need for randomization in the players' optimal strategies. We describe Gala, an implemented system that provides the user with a very natural and expressive language for describing games. From a game description, Gala creates an augmented game tree with information sets which can be used by various algorithms in order to find optimal strategies for that game. In particular, Gala implements the first practical algorithm for finding optimal randomized strategies in two-player imperfect information competitive games [ Koller et al., 1994 ] . The running time of this algorithm is polynomial in the size of the game tree, whereas previous algorithms were exponential. We present experimental results showing that this algorithm is also efficient in practice and can therefore form the basis for a game playing system.
Abstract-found: 1
Intro-found: 1
Reference: [ Avenhaus et al., 1995 ] <author> R. Avenhaus, B. von Stengel, and S. Zamir. </author> <title> Inspection games. </title> <booktitle> In Handbook of Game Theory, </booktitle> <volume> Vol. </volume> <pages> 3, </pages> <note> to appear. North-Holland, </note> <year> 1995. </year>
Reference-contexts: We experimented with two games: the simplified poker game described in Section 2, increasing the number of cards in the deck; and an inspection game which has received significant attention in the game theory community as a model of on-site inspections for arms control treaties <ref> [ Avenhaus et al., 1995 ] </ref> . The resulting running times are shown in Figure 3. They are as one would expect in a comparison between a polynomial and exponential algorithm.
Reference: [ Blair et al., 1993 ] <author> J.R.S. Blair, D. Mutchler, and C. Liu. </author> <title> Games with imperfect information. </title> <booktitle> In Working Notes AAAI Fall Symposium on Games: Planning and Learning, </booktitle> <year> 1993. </year>
Reference: [ Gordon, 1993 ] <author> S. Gordon. </author> <title> A comparison between probabilistic search and weighted heuristics in a game with incomplete information. </title> <booktitle> In Working Notes AAAI Fall Symposium on Games: Planning and Learning, </booktitle> <year> 1993. </year>
Reference: [ Koller et al., 1994 ] <author> D. Koller, N. Megiddo, and B. von Sten-gel. </author> <title> Fast algorithms for finding randomized strategies in game trees. </title> <booktitle> In Proceedings of the 26th Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 750-759, </pages> <year> 1994. </year>
Reference-contexts: This approach uses a conversion to an alternative form called the sequence form, which allows it to avoid the exponential blowup associated with the normal form. We will describe the main ideas briefly here; for more details see <ref> [ Koller et al., 1994 ] </ref> . The sequence form is based on a different representation of the strategic variables. <p> The format of the sequence form resembles that of the normal form in many ways, and it appears that many normal-form solution algorithms can be converted to work for the sequence form. The work of <ref> [ Koller et al., 1994 ] </ref> focuses on the two-player case. They provide sequence-form variants for the best normal-form algorithms for solving both zero-sum and general two-player games. <p> Currently, these can only be solved using the traditional (normal-form) algorithms accessed through our GAMBIT interface, and these are practical only for small games. However, the sequence form can be used to represent any perfect recall game, and the results of <ref> [ Koller et al., 1994 ] </ref> indicate that many of the standard techniques could carry over from the normal form to the sequence form. We hope to use the sequence form approach for more general games, and show that the resulting exponential reduction in complexity indeed occurs in practice.
Reference: [ Kuhn, 1950 ] <author> H.W. Kuhn. </author> <title> A simplified two-person poker. </title> <booktitle> In Contributions to the Theory of Games I, </booktitle> <pages> pages 97-103. </pages> <publisher> Princeton University Press, </publisher> <year> 1950. </year>
Reference: [ McKelvey, 1992 ] <author> R.D. McKelvey. </author> <title> GAMBIT: Interactive Extensive Form Game Program. </title> <institution> California Institute of Technology, </institution> <year> 1992. </year>
Reference: [ Pell, 1992 ] <author> B. Pell. </author> <title> Metagame in symmetric, chess-like games. </title> <booktitle> In Heuristic Programming in Artificial Intelligence 3 The Third Computer Olympiad. </booktitle> <publisher> Ellis Horwood, </publisher> <year> 1992. </year>
Reference-contexts: These parameters can actually be code-containing features. Thus, it is possible to provide the movement patterns of pieces in a game at runtime. This allows a simple interface between Gala and Pell's Metagame program <ref> [ Pell, 1992 ] </ref> , which generates symmetric chess-like games randomly. Given a description of a game in the Gala language, Gala generates the corresponding game tree with information sets as described in Section 2. The tree is defined by the choose, reveal and outcome primitives.
Reference: [ Russell and Norvig, 1994 ] <author> S.J. Russell and P. Norvig. </author> <title> Artificial Intelligence: A Modern Approach. </title> <publisher> Prentice Hall, </publisher> <year> 1994. </year>
Reference-contexts: This same simple idea is still the core of most game-playing programs. This paradigm has been successfully applied to a large class of games, in particular chess, checkers, othello, backgammon, and go <ref> [ Russell and Norvig, 1994, Ch. 5 ] </ref> . There have been far fewer successful programs that play games such as poker or bridge. We claim that this is not an accident.
Reference: [ Smith and Nau, 1993 ] <author> S.J.J. Smith and D.S. Nau. </author> <title> Strategic planning for imperfect-information games. </title> <booktitle> In Working Notes AAAI Fall Symposium on Games: Planning and Learning, </booktitle> <year> 1993. </year>
Reference: [ von Neumann and Morgenstern, 1947 ] <author> J. von Neumann and O. Morgenstern. </author> <title> The Theory of Games and Economic Behavior. </title> <publisher> Princeton University Press, </publisher> <address> 2nd edition, </address> <year> 1947. </year>
Reference-contexts: It should be fairly obvious that the standard techniques are inadequate for solving such games: no variant of the minimax algorithm duplicates the type of complex reasoning we just described. In game theory <ref> [ von Neumann and Morgenstern, 1947 ] </ref> , on the other hand, virtually all of the work has focused on games with imperfect information. Game theory is mostly intended to deal with games derived from real life, and particularly from economic applications. In real life one rarely has perfect information. <p> Just as in the case of perfect information games, the equilibrium strategies are particularly compelling when the game is zero-sum. Then, as shown by von Neumann <ref> [ von Neumann and Morgenstern, 1947 ] </ref> , any equilibrium strategy is optimal against a rational player.
Reference: [ Zermelo, 1913 ] <author> E. Zermelo. </author> <title> Uber eine Anwendung der Mengenlehre auf die Theorie des Schachspiels. </title> <booktitle> In Proceedings of the Fifth International Congress of Mathematicians II, </booktitle> <pages> pages 501-504. </pages> <publisher> Cambridge University Press, </publisher> <year> 1913. </year> <month> 1192 </month>
References-found: 11

