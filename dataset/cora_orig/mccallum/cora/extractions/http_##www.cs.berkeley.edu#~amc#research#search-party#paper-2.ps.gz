URL: http://www.cs.berkeley.edu/~amc/research/search-party/paper-2.ps.gz
Refering-URL: http://www.cs.berkeley.edu/~amc/research/search-party/
Root-URL: 
Email: http://www.cs.berkeley.edu/~amc/  
Title: Search Party: An Approach to Reliable Multicast with Local Recovery  
Author: Adam M. Costello 
Date: 9 Feb 1998  
Abstract: IP multicast is an efficient means of sending to a group, but the packets are sent unreliably. Some applications, like distributed whiteboard and news articles, require detection and retransmission of lost packets. Existing reliable multicast protocols have limited feasibility, scalability, or robustness. In order to scale to large groups, the protocol must use some form of local recovery to avoid involving the entire group in the repair process for packet losses affecting small regions of the distribution tree. The search party approach starts with the local recovery structure of the very scalable replier-based scheme [PPV97], but adds randomization to greatly improve robustness at a modest cost in overhead and/or retransmission delay (the tradeoff between the two costs is fine-tunable). Analytic results appear promising enough to warrant simulation experiments. 
Abstract-found: 1
Intro-found: 1
Reference: [BFC93] <author> T. Ballardie, P. Francis, and J. Crowcroft. </author> <title> Core based trees (CBT) an architecture for scalable inter-domain multicast routing. </title> <booktitle> In Proceedings of SIGCOMM '93, </booktitle> <address> San Francisco, CA, </address> <month> August </month> <year> 1993. </year>
Reference-contexts: Section 2 summarizes some of the related work on reliable multicast. The search party approach is pre 1 More recently proposed multicast routing protocols like PIM [DEF + 94] and CBT <ref> [BFC93] </ref> can use shared trees, in which the source is not the root, but this paper restricts its attention to source-rooted trees. 2 A single host can play all three roles, but this paper treats them as logically distinct entities. 3 Actually, the situation is more complex, because data links can
Reference: [DC90] <author> S. Deering and D. Cheriton. </author> <title> Multicast routing in datagram internetworks and extended LANs. </title> <journal> ACM Transactions on Computer Systems (TOCS), </journal> <volume> 8(2) </volume> <pages> 85-110, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: 1 Introduction The IP multicast service <ref> [DC90] </ref> allows a source to send packets unreliably to a group of N members much more efficiently than sending N unicast packets. Some applications, like real-time audio and video broadcasting, are delay-sensitive and loss-tolerant, and thus well-suited to IP multicast service.
Reference: [DEF + 94] <author> S. Deering, D. Estrin, D. Farinacci, V. Jacobson, C.-G. Liu, and L. Wei. </author> <title> An architecture for wide-area multicast routing. </title> <booktitle> In Proceedings of SIGCOMM '94, </booktitle> <address> London, U.K., </address> <month> September </month> <year> 1994. </year> <institution> University College London. </institution>
Reference-contexts: Section 2 summarizes some of the related work on reliable multicast. The search party approach is pre 1 More recently proposed multicast routing protocols like PIM <ref> [DEF + 94] </ref> and CBT [BFC93] can use shared trees, in which the source is not the root, but this paper restricts its attention to source-rooted trees. 2 A single host can play all three roles, but this paper treats them as logically distinct entities. 3 Actually, the situation is more
Reference: [FJL + 97] <author> S. Floyd, V. Jacobson, C. Liu, S. Mc-Canne, and L. Zhang. </author> <title> A reliable mul-ticast framework for light-weight sessions and application level framing. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <note> 1997. To appear. </note>
Reference-contexts: Some applications, like real-time audio and video broadcasting, are delay-sensitive and loss-tolerant, and thus well-suited to IP multicast service. But other applications that could benefit from efficient multicasting require reliable delivery. Some are real-time, like distributed whiteboard <ref> [FJL + 97] </ref> and multiplayer games, while others are bulk transfers, like software updates and news articles. To support these applications, we need a reliable multicast protocol to handle detection and retransmission of lost packets. To forward multicast packets, IP routers use distribution trees. <p> Various other implementations could be used to perform the same operation. This paper uses the term subcast to refer to any of them (see figure 1). The router at the root of the subtree is called the exploder. 2.2 SRM In Scalable Reliable Multicast <ref> [FJL + 97] </ref>, members multicast repair requests to the entire group, but use random timers to ensure that only about one request is sent at a time. <p> Any member capable of responding to a request may do so, and random timers are used again to limit the number of responses to about one. SRM therefore avoids implosion, but does not provide local recovery, because every recovery involves the entire tree. Section 7.2 of <ref> [FJL + 97] </ref> sketches a few potential ideas for local recovery in SRM, but their efficacy is not evaluated. 2.3 Replier The replier-based scheme [PPV97] enlists the routers to provide a new (but simple) forwarding service. <p> Requests and responses must be handled differently when router addresses are not used. Requests contain the depth D of the exploder, plus a flag indicating whether the responder should subcast the response itself, or unicast it back to the requestor (an idea proposed in <ref> [FJL + 97] </ref>). If the responder subcasts the response, it must do so one level too high, at depth D 1, because the desired exploder is not an ancestor of the responder.
Reference: [KP91] <author> Phil Karn and Craig Partridge. </author> <title> Improving round-trip time estimates in reliable transport protocols. </title> <journal> ACM Transactions on Computer Systems (TOCS), </journal> <volume> 9(4) </volume> <pages> 364-373, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: Every response contains a time reference copied from the request. The purpose of the time reference is not merely to avoid retranmission ambiguity <ref> [KP91] </ref>; it provides a sample r value to every member who sees the response, not just the one who sent the request. The sample value is the time the response is received minus the time the referenced data packet was received (if it was received) minus the offset.
Reference: [LLG96] <author> B. Levine, D. Lavo, and J.J. Garcia-Luna-Aceves. </author> <title> The case for concurrent multicast using shared ack trees. </title> <booktitle> In Proceedings of ACM Multimedia, </booktitle> <pages> pages 365-376, </pages> <month> November </month> <year> 1996. </year>
Reference-contexts: Plans for future work appear in section 4, conclusions in section 5, and acknowledge-ments in section 6. 2 Related Work A good summary of reliable multicast work is included in <ref> [LLG96] </ref>, which classifies reliable multi-cast protocols as sender-initiated, receiver-initiated with nak avoidance (RINA), ring-based, and tree-based. In sender-initiated schemes, receivers send acks directly to the source, so they suffer from implosion.
Reference: [LP96] <author> J. Lin and S. Paul. RMTP: </author> <title> A reliable multicast transport protocol. </title> <booktitle> In IEEE INFOCOM '96, </booktitle> <address> San Francisco, CA, </address> <month> March </month> <year> 1996. </year>
Reference-contexts: This section examines one tree-based protocol (RMTP), one RINA protocol (SRM), and a newer protocol that does not fit well into the taxonomy (unnamed|this paper calls it "the replier-based scheme"). 2.1 RMTP The Reliable Multicast Transport Protocol <ref> [LP96] </ref> organizes the members into a hierarchy. acks are sent not to the source, but to the parent member. Internal nodes in the hierarchy (called Designated Receivers) are able to send retransmissions from their data caches. RMTP therefore provides both implosion avoidance and local recovery.
Reference: [PPV97] <author> Christos Papadopoulos, Guru Parulkar, and George Varghese. </author> <title> An error control scheme for large-scale multicast applications, </title> <booktitle> 1997. </booktitle> <address> http://www.ccrc. wustl.edu/~christos/PostScriptDocs/ Infocom98.ps.Z. </address>
Reference-contexts: SRM therefore avoids implosion, but does not provide local recovery, because every recovery involves the entire tree. Section 7.2 of [FJL + 97] sketches a few potential ideas for local recovery in SRM, but their efficacy is not evaluated. 2.3 Replier The replier-based scheme <ref> [PPV97] </ref> enlists the routers to provide a new (but simple) forwarding service. Each router in a multicast tree selects one of its child links to be the replier link (except that the router immediately below the source selects its parent link). <p> The expected exposure for the worst-case topology is x L . Assuming that is chosen to keep x below some constant, the expected exposure is thus O (log N ), same as for the replier-based scheme. 7 This is a generalization of exposure as defined in <ref> [PPV97] </ref>. 8 3.4.4 Retransmission Delay The probability that no retransmission has arrived before time t is p (t) = 1 for t &lt; r e (rt) for t r + ^r The middle section of the distribution relies on the effectiveness of the refinement of the request behavior, which is questionable.
Reference: [Str89] <author> Peggy Tang Strait. </author> <title> A First Course in Probability and Statistics. </title> <note> Harcourt Brace Javanovich, second edition, 1989. 14 </note>
Reference-contexts: It follows that if m randomcast packets are sent from each of the L leaves in a subtree, the number of packets to escape the subtree has a binomial distribution with n = mL and p = 1=L, for which the expected value is np = m <ref> [Str89] </ref>. It is well-known that as n increases while np remains constant, the the binomial distribution assymptotically approaches the Poisson distribution with = np. Therefore, as L increases, the probability that k packets escape approaches m k k!e m (which is independent of L).
References-found: 9

