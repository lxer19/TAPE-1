URL: http://www.cs.duke.edu/~pankaj/spring97/term/keyser.ps.gz
Refering-URL: http://www.cs.duke.edu/~pankaj/spring97/cps234.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Robustness Issues in Computational Geometry  
Author: John Keyser 
Note: Comp 234 Final Paper  
Abstract-found: 0
Intro-found: 1
Reference: [BMP94] <author> M. O. Benouamer, D. Michelucci, and B. Peroche. </author> <title> Error-free boundary evaluation based on a lazy rational arithmetic: A detailed implementation. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 26(6) </volume> <pages> 403-416, </pages> <month> June </month> <year> 1994. </year>
Reference: [Can88] <author> John F. Canny. </author> <title> The Complexity of Robot Motion Planning. </title> <publisher> The MIT Press, </publisher> <address> Cam-bridge, Massachusetts, </address> <year> 1988. </year>
Reference-contexts: Thus the (possibly irrational) root is stored exactly, even though it is not represented as a series of bits. The interval size is selected so that no other roots of the polynomial lie in that interval. If desired, the gap theorem (see <ref> [Can88] </ref>) can be used to ensure that the interval is narrow enough that no other polynomials under consideration will have a root in the interval. Usually, however, that would produce an interval so small that alternate methods for ensuring isolated roots are explored.
Reference: [Cla95] <author> Kenneth L. Clarkson. </author> <title> Save and effective determinant evaluation. </title> <type> Manuscript, </type> <month> Febru-ary </month> <year> 1995. </year>
Reference: [CS93] <author> Joao Luiz Dibl Comba and Jorge Stolfi. </author> <title> Affine arithmetic and its applications to computer graphics. </title> <institution> Anais do VII Sibgraphi, </institution> <year> 1993. </year>
Reference: [dF96] <author> Luiz Henrique de Figueiredo. </author> <title> Surface intersection using affine arithmetic. </title> <booktitle> In Proceedings of Graphics Interface '96, </booktitle> <pages> pages 168-175, </pages> <year> 1996. </year>
Reference: [DSB92] <author> Tamal K. Dey, Kokichi Sugihara, and Chandrajit L. Bajaj. </author> <title> Delaunay triangulations in three dimensions with finite precision arithmetic. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <volume> 9 </volume> <pages> 457-470, </pages> <year> 1992. </year>
Reference: [ea95] <editor> C. Burnikel et al. </editor> <booktitle> Exact computation in leda. In Proceedings of the 11th ACM Conference on Computational Geometry, </booktitle> <pages> pages C18-C19, </pages> <year> 1995. </year>
Reference: [EC94] <author> Ioannis Z. Emiris and John F. Canny. </author> <title> A general approach to removing degeneracies. </title> <booktitle> In Proceedings of the 32nd IEEE Symposium on the Foundations of Computer Science, </booktitle> <pages> pages 405-413, </pages> <year> 1994. </year> <month> 16 </month>
Reference-contexts: Thus, a sign determination can be made, even when the data is given in degenerate format. Linear and Random Perturbation. Emiris and Canny present a variation to the SoS method which makes use of a linear perturbation ([ECS94], <ref> [EC94] </ref>). Specifically, the perturbation used is: i;j (*) = i;j + * i j Notice that in this representation, the perturbation is linear in *. This fact helps to improve the efficiency of the overall approach.
Reference: [ECS94] <author> Ioannis Z. Emiris, John F. Canny, and Raimund Seidel. </author> <title> Efficient perturbations for handling geometric degeneracies. </title> <type> Manuscript, </type> <month> June </month> <year> 1994. </year>
Reference: [EM90] <author> Herbert Edelsbrunner and Ernst Peter Mucke. </author> <title> Simulation of simplicity: A technique to cope with degenerate cases in geometric algorithms. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 9(1) </volume> <pages> 66-104, </pages> <year> 1990. </year>
Reference: [FBZ93] <author> Shiaofen Fang, Beat Bruderlin, and Xiaohong Zhu. </author> <title> Robustness in solid modeling: A tolerance-based intuitionistic approach. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 25(9) </volume> <pages> 567-576, </pages> <month> September </month> <year> 1993. </year>
Reference: [FNO93] <author> R. T. Farouki, C. A. Neff, and M. A. O'Connor. </author> <title> Automatic parsing of degenerate quadric-surface intersections. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 8(3) </volume> <pages> 174-208, </pages> <month> July </month> <year> 1993. </year>
Reference: [For95] <author> Steven Fortune. </author> <title> Voronoi diagrams and delaunay triangulations. </title> <editor> In D. Z. Du and F. Hwang, editors, </editor> <booktitle> Computing in Euclidean Geometry, </booktitle> <pages> pages 225-265. </pages> <publisher> World Scientific Press, </publisher> <address> Singapore, </address> <year> 1995. </year>
Reference: [For96] <author> Steven Fortune. </author> <title> Robustness issues in geometric algorithms. </title> <booktitle> In Proceedings 1st ACM Workshop on Applied Computational Geometry, </booktitle> <pages> pages 20-23, </pages> <year> 1996. </year>
Reference-contexts: Several papers will give a brief survey of robustness issues in general before presenting some new technique. Among those who specifically attempt to survey the robustness issue (to various levels of detail) are: [Hof89b], [Hof89a], [Sch96], <ref> [For96] </ref>, and [Sei94]. 2 Precision Problems The design and description of algorithms can be simplified by the assumption of the real RAM model of computation ([For95]). This model assumes that all arithmetic operations are exact, real, and carried out in constant time.
Reference: [FvW93] <author> Steven Fortune and Christopher J. van Wyk. </author> <title> Efficient exact arithmetic for computational geometry. </title> <booktitle> In Proceedings of the 9th ACM Conference on Computational Geometry, </booktitle> <pages> pages 163-171, </pages> <year> 1993. </year>
Reference: [FvW96] <author> Steven Fortune and Christopher J. van Wyk. </author> <title> Static analysis yields efficient exact integer arithmetic for computational geometry. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 15(3) </volume> <pages> 223-248, </pages> <month> July </month> <year> 1996. </year>
Reference: [GM95] <author> Leonidas J. Guibas and David H. Marimont. </author> <title> Rounding arrangements dynamically. </title> <booktitle> In Proceedings of the 11th ACM Conference on Computational Geometry, </booktitle> <pages> pages 190-199, </pages> <year> 1995. </year>
Reference: [GSS89] <author> Leonidas J. Guibas, David Salesin, and Jorge Stolfi. </author> <title> Epsilon geometry: Building robust algorithms from imprecise computations. </title> <booktitle> In Proceedings of the 5th ACM Conference on Computational Geometry, </booktitle> <pages> pages 208-217, </pages> <year> 1989. </year>
Reference: [GT93] <author> James Guilford and Joshua Turner. </author> <title> Representational primitives for geometric toler-ancing. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 25(9) </volume> <pages> 577-586, </pages> <month> September </month> <year> 1993. </year>
Reference: [HK89] <author> John E. Hopcroft and Peter J. Kahn. </author> <title> A paradigm for robust geometric algorithms. </title> <type> Report TR 89-1044, </type> <institution> Department of Computer Science, Cornell University, </institution> <address> Ithaca, NY, </address> <year> 1989. </year>
Reference: [Hof89a] <author> Christoph M. Hoffmann. </author> <title> Geometric and Solid Modeling. </title> <publisher> Morgan Kaufmann Pub--lishers, Inc., </publisher> <address> San Mateo, California, </address> <year> 1989. </year>
Reference-contexts: Several papers will give a brief survey of robustness issues in general before presenting some new technique. Among those who specifically attempt to survey the robustness issue (to various levels of detail) are: [Hof89b], <ref> [Hof89a] </ref>, [Sch96], [For96], and [Sei94]. 2 Precision Problems The design and description of algorithms can be simplified by the assumption of the real RAM model of computation ([For95]). This model assumes that all arithmetic operations are exact, real, and carried out in constant time.
Reference: [Hof89b] <author> Christoph M. Hoffmann. </author> <title> The problems of accuracy and robustness in geometric computation. </title> <journal> IEEE Computar, </journal> <volume> 22(3) </volume> <pages> 31-41, </pages> <month> March </month> <year> 1989. </year>
Reference-contexts: It should be noted that there have been several other attempts at surveying the robustness issue. Several papers will give a brief survey of robustness issues in general before presenting some new technique. Among those who specifically attempt to survey the robustness issue (to various levels of detail) are: <ref> [Hof89b] </ref>, [Hof89a], [Sch96], [For96], and [Sei94]. 2 Precision Problems The design and description of algorithms can be simplified by the assumption of the real RAM model of computation ([For95]). This model assumes that all arithmetic operations are exact, real, and carried out in constant time.
Reference: [HPY96a] <author> Chun-Yi Hu, Nicholas M. Patrikalakis, and Xiuzi Ye. </author> <title> Robust interval solid modelling part i: Representations. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 28(10) </volume> <pages> 807-817, </pages> <month> October </month> <year> 1996. </year>
Reference: [HPY96b] <author> Chun-Yi Hu, Nicholas M. Patrikalakis, and Xiuzi Ye. </author> <title> Robust interval solid modelling part ii: Boundary evaluation. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 28(10) </volume> <pages> 819-830, </pages> <month> October </month> <year> 1996. </year>
Reference: [Jac95] <author> David J. Jackson. </author> <title> Boundary representation modelling with local tolerancing. </title> <booktitle> In Proceedings of Solid Modeling '95, </booktitle> <pages> pages 247-253, </pages> <year> 1995. </year>
Reference: [Joh92] <author> J. R. Johnson. </author> <title> Real algebraic number computation using interval arithmetic. </title> <booktitle> In Proceedings of ISSAC '92, </booktitle> <pages> pages 195-205, </pages> <year> 1992. </year>
Reference: [KLN91] <author> Michael Karasick, Derek Lieber, and Lee R. Nackman. </author> <title> Efficient delaunay triangulation using rational arithmetic. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 10(1) </volume> <pages> 71-91, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: These papers ([YD95],[Yap94]) provide an excellent overview of many of the concepts and techniques used in exact arithmetic. A number of techniques have been used in order to improve the efficiency or applicability of exact computation. Among these techniques are the following methods. Interval Arithmetic. In <ref> [KLN91] </ref>, Karasick et al. look into methods for improving exact computation by the use of interval arithmetic. In their approach, they attempt to perform computations using a simplified representation of the rational number (i.e. one requiring fewer bits).
Reference: [KS96] <author> Simon Kahan and Jack Snoeyink. </author> <title> On the bit complexity of minimum link paths: Superquadratic algorithms for problems solvable in linear time. </title> <booktitle> In Proceedings of 12th Annual ACM Symposium on Computational Geometry, </booktitle> <pages> pages 151-158, </pages> <year> 1996. </year>
Reference-contexts: This model assumes that all arithmetic operations are exact, real, and carried out in constant time. An example of how the RAM model can overly simplify analysis is provided in <ref> [KS96] </ref>. This paper presents an algorithm analyzed by the RAM model as taking only linear time which actually requires fi (n 2 log n) bits of precision in order to accurately represent the output.
Reference: [LJ93] <author> J. Lee and G. E. Johnson. </author> <title> Optimal tolerance allotment using a genetic algorithm and truncated monte carlo simulation. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 25(9) </volume> <pages> 601-611, </pages> <month> Septem-ber </month> <year> 1993. </year>
Reference: [Mas93] <author> Glauco Massotti. </author> <title> Floating-point numbers with error estimates. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 25(9) </volume> <pages> 524-538, </pages> <month> September </month> <year> 1993. </year>
Reference: [Mil88] <author> Victor Milenkovic. </author> <title> Verifiable implementations of geometric algorithms using finite precision arithmetic. </title> <type> Report CMU-CS-88-168, </type> <institution> Department of Computer Science, Cornell University, Pittsburgh, </institution> <month> July </month> <year> 1988. </year>
Reference: [Mil89] <author> Victor Milenkovic. </author> <title> Calculating approximate curve arrangements using rounded arithmetic. </title> <booktitle> In Proceedings of the 5th ACM Conference on Computational Geometry, </booktitle> <pages> pages 197-207, </pages> <year> 1989. </year> <month> 18 </month>
Reference: [RV89] <author> Jarolsaw R. Rossignac and Herbert B. Voelcker. </author> <title> Active zones in csg for accelerating boundary evaluation, redundancy elimination, interference detection, and shading algorithms. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 8(1) </volume> <pages> 51-87, </pages> <month> January </month> <year> 1989. </year>
Reference: [Sch96] <author> Stefan Schirra. </author> <title> Precision and robustness. </title> <booktitle> Lecture Notes for Advanced School on Algorithmic Foundations of Geographic Information Systems, </booktitle> <address> CISM, Udine, Italy, </address> <month> September </month> <year> 1996. </year>
Reference-contexts: Several papers will give a brief survey of robustness issues in general before presenting some new technique. Among those who specifically attempt to survey the robustness issue (to various levels of detail) are: [Hof89b], [Hof89a], <ref> [Sch96] </ref>, [For96], and [Sei94]. 2 Precision Problems The design and description of algorithms can be simplified by the assumption of the real RAM model of computation ([For95]). This model assumes that all arithmetic operations are exact, real, and carried out in constant time.
Reference: [Seg90] <author> Mark Segal. </author> <title> Using tolerances to guarantee valid polyhedral modeling results. </title> <booktitle> In Proceedings of SIGGRAPH 90, </booktitle> <pages> pages 105-114, </pages> <year> 1990. </year>
Reference: [Sei94] <author> Raimund Seidel. </author> <title> The nature and meaning of perturbations in geometric computing. </title> <editor> In P. Enjalbert, E. W. Mayr, and K. W. Wagner, editors, </editor> <booktitle> STACS 94, volume 775 of Lecture Notes in Computer Science, </booktitle> <pages> pages 3-17. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1994. </year>
Reference-contexts: Several papers will give a brief survey of robustness issues in general before presenting some new technique. Among those who specifically attempt to survey the robustness issue (to various levels of detail) are: [Hof89b], [Hof89a], [Sch96], [For96], and <ref> [Sei94] </ref>. 2 Precision Problems The design and description of algorithms can be simplified by the assumption of the real RAM model of computation ([For95]). This model assumes that all arithmetic operations are exact, real, and carried out in constant time. <p> Symbolic Perturbation Yap's method for symbolic perturbation is far more general than the other perturbation methods ([Yap90]. In Yap's formulation, a predicate can be any polynomial or rational function, or, according to <ref> [Sei94] </ref>, even an analytic function. Yap has a predicate return a number if that number is not zero, or, if the predicate value is zero, return either 0 + or 0 .
Reference: [She96] <author> Jonathan Richard Shewchuk. </author> <title> Robust adaptive floating-point geometric predicates. </title> <booktitle> In Proceedings of the 12th ACM Conference on Computational Geometry, </booktitle> <pages> pages 141-150, </pages> <year> 1996. </year>
Reference: [Yap90] <author> Chee-Keng Yap. </author> <title> Symbolic treatment of geometric degeneracies. </title> <journal> Journal of symbolic Computation, </journal> <volume> 10 </volume> <pages> 349-370, </pages> <year> 1990. </year>
Reference: [Yap94] <author> Chee-Keng Yap. </author> <title> Towards exact geometric computation. </title> <note> Manuscript; To appear, Computational Geometry: Theory and Applications, </note> <month> November </month> <year> 1994. </year>
Reference-contexts: Yap also points out in <ref> [Yap94] </ref> that as processor speeds increase, for certain problems, the appeal of robustness offered by exact computation may begin to approach the appeal of speed that floating-point offers. These papers ([YD95],[Yap94]) provide an excellent overview of many of the concepts and techniques used in exact arithmetic.
Reference: [YD95] <author> Chee Yap and Thomas Dube. </author> <title> The exact computation paradigm. </title> <editor> In D. Z. Du and F. Hwang, editors, </editor> <booktitle> Computing in Euclidean Geometry, </booktitle> <pages> pages 452-492. </pages> <publisher> World Scientific Press, </publisher> <address> Singapore, </address> <year> 1995. </year>
Reference-contexts: Several programming libraries are also available for performing exact arithmetic. One of the most well-developed current libraries is the LEDA library ([ea95]). For a description of a number of other libraries available, see <ref> [YD95] </ref>. Exact arithmetic routines are usually confined to operations on integers or rational numbers. Some packages handle algebraic numbers as well, and this extension appears to handle almost all problems in computational geometry ([Yap94]). <p> Yap and Dube point out several reasons why exact computation is an important paradigm in the conclusion of <ref> [YD95] </ref>. Among the reasons listed there are that exact algorithms are much more straightforward than a corresponding "robust" floating point algorithm, that almost all algorithms (in computational geometry and elsewhere) are developed assuming exact arithmetic, and that exact computation is useful for studying and validating floating-point computation.
Reference: [Yu91] <author> Jiaxun Yu. </author> <title> Exact arithmetic solid modeling. PnD. </title> <type> Thesis, </type> <institution> Purdue University, </institution> <month> De-cember </month> <year> 1991. </year> <month> 19 </month>
Reference-contexts: Still, treating degeneracies as special cases is usually the most straightforward and most commonly used method of handling them. For one example of an attempt to handle degeneracies through the use of special cases, see <ref> [Yu91] </ref>. One final note should be made about the effect that inexact computation will have on this approach.
References-found: 41

