URL: ftp://ic.eecs.berkeley.edu/pub/Memos_Conference/iccad92.KF.ps.gz
Refering-URL: http://www-cad.eecs.berkeley.edu/HomePages/kukimoto/
Root-URL: 
Title: Rectification Method for Lookup-Table Type FPGA's  
Author: Yuji Kukimoto Masahiro Fujita 
Address: Berkeley, CA 94720 Kawasaki 211, Japan  
Affiliation: Department of EECS Processor Laboratory University of California Fujitsu Laboratories Ltd.  
Abstract: Field programmable gate array (FPGA) makes rapid pro-totyping an easier task, and is useful in many applications due to its growing speed and capacity. In this paper, we present a rectification method for look-up table type FPGA's. Instead of changing the netlist of a circuit, we only modify functionality realized by look-up tables and keep the netlist equal so that there will be no change on the delay of the circuit. We formalize the problem using characteristic functions and present a redesign method based on Boolean relation techniques. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. S. Brace, R. L. Rudell, and R. E. Bryant. </author> <title> Efficient implementation of a BDD package. </title> <booktitle> In Proceedings of 27th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 40-45, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: The consensus operator, C x f , is defined as: C x f = f x f x These operations can be computed efficiently if using BDD's <ref> [3, 1] </ref> as a representation of Boolean functions. 4 Problem Formulation In this section we formulate a redesign method for table lookup FPGA's. Here we assume that a given combinational circuit implemented by lookup tables does not satisfy a given specification.
Reference: [2] <author> R. K. Brayton and F. Somenzi. </author> <title> Boolean relations and the incompletely specification of logic networks. </title> <booktitle> In Proceedings of International Conference on Very Large Scale Integration, </booktitle> <pages> pages 231-240, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: The detailed explanation of Boolean relations can be found in <ref> [2, 22, 23] </ref>. Definition 1 A Boolean relation R is a relation over two sets B m and B n , where B = f0; 1g. R B m fi B n .
Reference: [3] <author> R. E. Bryant. </author> <title> Graph-based algorithms for boolean function manipulation. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-35(8):677-691, </volume> <month> August </month> <year> 1986. </year>
Reference-contexts: The consensus operator, C x f , is defined as: C x f = f x f x These operations can be computed efficiently if using BDD's <ref> [3, 1] </ref> as a representation of Boolean functions. 4 Problem Formulation In this section we formulate a redesign method for table lookup FPGA's. Here we assume that a given combinational circuit implemented by lookup tables does not satisfy a given specification. <p> Cerny's method is formulated with characteristic functions and can be efficiently implemented by BDD's <ref> [3] </ref> This topic has recently been revisited in [21, 17]. Here we follow the algorithm presented in [4]. In Figure 4 a multi-level network is shown. The area surrounded by a dotted line represents a sub-circuit composed of several lookup tables.
Reference: [4] <author> E. Cerny and M. A. Marin. </author> <title> An approach to unified methodology of combinational switching circuits. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-26(8):745-756, </volume> <month> August </month> <year> 1977. </year>
Reference-contexts: The selection of LUT's can be done in various other ways 1 . 5.2 Permissible Functionality of Sub circuits Given a set of lookup tables, the permissible functionality of the nodes in the set which realizes a given specification is computed as a Boolean relation based on Cerny's technique <ref> [4] </ref>. Cerny's method is formulated with characteristic functions and can be efficiently implemented by BDD's [3] This topic has recently been revisited in [21, 17]. Here we follow the algorithm presented in [4]. In Figure 4 a multi-level network is shown. <p> in the set which realizes a given specification is computed as a Boolean relation based on Cerny's technique <ref> [4] </ref>. Cerny's method is formulated with characteristic functions and can be efficiently implemented by BDD's [3] This topic has recently been revisited in [21, 17]. Here we follow the algorithm presented in [4]. In Figure 4 a multi-level network is shown. The area surrounded by a dotted line represents a sub-circuit composed of several lookup tables. <p> F O (x; v; z) is the characteristic function which represents the observability of x and v at z. n Y (z j g j (x; v)) Theorem 1 (Cerny <ref> [4] </ref>) 2 Let Spec (x; z) be the characteristic function which represents a new specification of a given network 3 . <p> the functionality of the circuit to Spec (x; z), the output function of a sub-circuit must be compatible with Boolean relation R (u; v) defined by R (u; v) = C x (F I (x; u) + S z F O (x; v; z)Spec (x; z)) (See theorem 3 in <ref> [4] </ref> for details.) The derived Boolean relation captures all the functionality permissible for the subnetwork to perform rectification. However since we pose the constraint that each node in the subnetwork has to preserve the support of its function, a further restriction is needed for this relation.
Reference: [5] <author> J. Cong, A. Kahng, K.-C. Chen, and P. Trajmar. </author> <title> Graph based FPGA technology mapping for delay optimization. </title> <booktitle> In Proceedings of ACM Workshop on Field-Programmable Gate Arrays, </booktitle> <month> February </month> <year> 1992. </year>
Reference-contexts: Not a few papers have been published so far on logic synthesis for FPGA's, for example, Chortle and its successors Chortle-crf and Chortle-d by Francis et al. [10, 9, 11], DAG-map by Cong et al. <ref> [5] </ref>, Hydra by Filo et al. [8], MIS-pga by Murgai et al. [18, 19, 20], Xmap by Karplus [16], and the mapping algorithm proposed by Woo [25].
Reference: [6] <author> M. Damiani and G. De Micheli. </author> <title> Recurrence equations and the optimization of synchronous logic circuits. </title> <booktitle> In Proceedings of 29th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 556-561, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: Recently from a completely different start point, i.e. optimization of synchronous circuits, Damiani et al. <ref> [7, 6] </ref> independently came up with the same problem where there exist constraints among output patterns of different input minterms.
Reference: [7] <author> M. Damiani and G. De Micheli. </author> <title> Synthesis and optimization of synchronous logic circuits from recurrence equations. </title> <booktitle> In Proceedings of the European Conference on Design Automation(EDAC92), </booktitle> <pages> pages 226-231, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: Recently from a completely different start point, i.e. optimization of synchronous circuits, Damiani et al. <ref> [7, 6] </ref> independently came up with the same problem where there exist constraints among output patterns of different input minterms. <p> Here, as Damiani did in <ref> [7] </ref>, we introduce 2 l unknowns (a i;1 ; : : : ; a i;2 l ) for representing an output value for each input minterm. v i = a i;1 u 1 u 2 : : : u l + a i;2 u 1 u 2 : : : u
Reference: [8] <author> D. Filo, J. C.-Y. Yang, F. Mailhot, and G. De Micheli. </author> <title> Technology mapping for a two-output RAM-based field programmable gate array. </title> <booktitle> In Proceedings of Eu-ropean Conference on Design Automation, </booktitle> <pages> pages 534-538, </pages> <month> February </month> <year> 1991. </year>
Reference-contexts: Not a few papers have been published so far on logic synthesis for FPGA's, for example, Chortle and its successors Chortle-crf and Chortle-d by Francis et al. [10, 9, 11], DAG-map by Cong et al. [5], Hydra by Filo et al. <ref> [8] </ref>, MIS-pga by Murgai et al. [18, 19, 20], Xmap by Karplus [16], and the mapping algorithm proposed by Woo [25].
Reference: [9] <author> R. Francis, J. Rose, and Z. Vranesic. Chortle-crf: </author> <title> Fast technology mapping for lookup table-based FPGAs. </title> <booktitle> In Proceedings of 28th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 227-233, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: There has also been increasing interest in using FPGA's for low-volume production of ASIC designs. Not a few papers have been published so far on logic synthesis for FPGA's, for example, Chortle and its successors Chortle-crf and Chortle-d by Francis et al. <ref> [10, 9, 11] </ref>, DAG-map by Cong et al. [5], Hydra by Filo et al. [8], MIS-pga by Murgai et al. [18, 19, 20], Xmap by Karplus [16], and the mapping algorithm proposed by Woo [25].
Reference: [10] <author> R. J. Francis, J. Rose, and K. Chung. Chortle: </author> <title> A technology mapping program for lookup table-based field programmable gate arrays. </title> <booktitle> In Proceedings of 27th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 613-619, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: There has also been increasing interest in using FPGA's for low-volume production of ASIC designs. Not a few papers have been published so far on logic synthesis for FPGA's, for example, Chortle and its successors Chortle-crf and Chortle-d by Francis et al. <ref> [10, 9, 11] </ref>, DAG-map by Cong et al. [5], Hydra by Filo et al. [8], MIS-pga by Murgai et al. [18, 19, 20], Xmap by Karplus [16], and the mapping algorithm proposed by Woo [25].
Reference: [11] <author> R. J. Francis, J. Rose, and Z. Vranesic. </author> <title> Technology mapping of lookup table-based FPGAs for performance. </title> <booktitle> In Proceedings of IEEE International Conference on Computer-Aided Design, </booktitle> <pages> pages 568-571, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: There has also been increasing interest in using FPGA's for low-volume production of ASIC designs. Not a few papers have been published so far on logic synthesis for FPGA's, for example, Chortle and its successors Chortle-crf and Chortle-d by Francis et al. <ref> [10, 9, 11] </ref>, DAG-map by Cong et al. [5], Hydra by Filo et al. [8], MIS-pga by Murgai et al. [18, 19, 20], Xmap by Karplus [16], and the mapping algorithm proposed by Woo [25].
Reference: [12] <author> M. Fujita, T. Kakuda, and Y. Matsunaga. </author> <title> Redesign and automatic error correction of combinational circuits. </title> <booktitle> In Proceedings of the IFIP TC10/WG10.5 Workshop on Logic and Architecture Synthesis, </booktitle> <pages> pages 253-262. </pages> <publisher> North Holland, </publisher> <month> May </month> <year> 1990. </year>
Reference-contexts: We formalize the problem using characteristic functions and present a redesign technique based on Boolean relations. There has been only limited work on redesign problems. The method for re-utilizing existing circuits when designing new ones is reported in <ref> [12, 14] </ref>. Another method for engineering changes is proposed in [24]. However, since both methods allow the change of a circuit structure, these approaches are not so suitable for redesigns of FPGA chips. This paper is organized as follows.
Reference: [13] <author> M. Fujita and Y. Matsunaga. </author> <title> Multi-level logic minimization based on minimal support and its application to the minimization of look-up table type FP-GAs. </title> <booktitle> In Proceedings of IEEE International Conference on Computer-Aided Design, </booktitle> <pages> pages 560-563, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: In <ref> [13] </ref>, a minimization algorithm based on minimal support was proposed, where the procedure is used to reduce the number of inputs for each lookup table (LUT), followed by a node covering procedure in order to reduce the number of LUT's. However no work has been reported on rectifying FPGA designs.
Reference: [14] <author> M. Fujita, Y. Tamiya, Y. Kukimoto, and K.C. Chen. </author> <title> Application of boolean unification to combinational logic synthesis. </title> <booktitle> In Proceedings of IEEE International Conference on Computer-Aided Design, </booktitle> <pages> pages 510-513, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: We formalize the problem using characteristic functions and present a redesign technique based on Boolean relations. There has been only limited work on redesign problems. The method for re-utilizing existing circuits when designing new ones is reported in <ref> [12, 14] </ref>. Another method for engineering changes is proposed in [24]. However, since both methods allow the change of a circuit structure, these approaches are not so suitable for redesigns of FPGA chips. This paper is organized as follows.
Reference: [15] <author> L. Guerra and Y. Watanabe. </author> <title> Local transformations on multi-output nodes using boolean relations. </title> <type> EE290ls project report, </type> <institution> UC Berkeley, </institution> <month> May </month> <year> 1992. </year>
Reference-contexts: To handle this general case, a candidate set is firstly partitioned into sets such that each clustered set has no transitive fanin/fanout relations addressed above. By applying a procedure proposed by Watanabe et al. <ref> [15] </ref> to this clustered network, one can obtain a Boolean relation for each clustered node set, which can be directly used in the following procedure. See [15] for details. 3 Since the new specification is represented in its characteristic function, any type of specifications, such as incompletely specified functions and Boolean <p> By applying a procedure proposed by Watanabe et al. <ref> [15] </ref> to this clustered network, one can obtain a Boolean relation for each clustered node set, which can be directly used in the following procedure. See [15] for details. 3 Since the new specification is represented in its characteristic function, any type of specifications, such as incompletely specified functions and Boolean relations, can be handled uniformly. restrict relation (R) f 2 R old = R; 3 foreach fanin u i 2 u 4 V s = fv <p> We have formulated the problem using characteristic functions and have shown that the problem is characterized by Boolean relations and associated constraints, for which we proposed algorithms to solve. Acknowledgments The authors would like to thank Y. Watanabe for pointing out <ref> [15] </ref>.
Reference: [16] <author> K. Karplus. Xmap: </author> <title> a technology mapper for table-lookup field-programmable gate arrays. </title> <booktitle> In Proceedings of 28th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 240-243, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: papers have been published so far on logic synthesis for FPGA's, for example, Chortle and its successors Chortle-crf and Chortle-d by Francis et al. [10, 9, 11], DAG-map by Cong et al. [5], Hydra by Filo et al. [8], MIS-pga by Murgai et al. [18, 19, 20], Xmap by Karplus <ref> [16] </ref>, and the mapping algorithm proposed by Woo [25]. In [13], a minimization algorithm based on minimal support was proposed, where the procedure is used to reduce the number of inputs for each lookup table (LUT), followed by a node covering procedure in order to reduce the number of LUT's.
Reference: [17] <author> Y. Kukimoto and M. Fujita. </author> <title> Reduction of critical path delay by optimizing boolean relations. </title> <booktitle> In Proceedings of ACM International Workshop on Timing Issues in the Specification and Synthesis of Digital Systems: </booktitle> <address> Tau92, </address> <month> March </month> <year> 1992. </year>
Reference-contexts: Cerny's method is formulated with characteristic functions and can be efficiently implemented by BDD's [3] This topic has recently been revisited in <ref> [21, 17] </ref>. Here we follow the algorithm presented in [4]. In Figure 4 a multi-level network is shown. The area surrounded by a dotted line represents a sub-circuit composed of several lookup tables.
Reference: [18] <author> R. Murgai, Y. Nishizaki, N. Shenoy, R. K. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> Logic synthesis for programmable gate arrays. </title> <booktitle> In Proceedings of 27th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 620-625, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: Not a few papers have been published so far on logic synthesis for FPGA's, for example, Chortle and its successors Chortle-crf and Chortle-d by Francis et al. [10, 9, 11], DAG-map by Cong et al. [5], Hydra by Filo et al. [8], MIS-pga by Murgai et al. <ref> [18, 19, 20] </ref>, Xmap by Karplus [16], and the mapping algorithm proposed by Woo [25].
Reference: [19] <author> R. Murgai, N. Shenoy, R. K. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> Improved logic synthesis algorithms for table look up architectures. </title> <booktitle> In Proceedings of IEEE International Conference on Computer-Aided Design, </booktitle> <pages> pages 564-567, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: Not a few papers have been published so far on logic synthesis for FPGA's, for example, Chortle and its successors Chortle-crf and Chortle-d by Francis et al. [10, 9, 11], DAG-map by Cong et al. [5], Hydra by Filo et al. [8], MIS-pga by Murgai et al. <ref> [18, 19, 20] </ref>, Xmap by Karplus [16], and the mapping algorithm proposed by Woo [25].
Reference: [20] <author> R. Murgai, N. Shenoy, R. K. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> Performance directed synthesis for table look up programmable gate arrays. </title> <booktitle> In Proceedings of IEEE International Conference on Computer-Aided Design, </booktitle> <pages> pages 572-575, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: Not a few papers have been published so far on logic synthesis for FPGA's, for example, Chortle and its successors Chortle-crf and Chortle-d by Francis et al. [10, 9, 11], DAG-map by Cong et al. [5], Hydra by Filo et al. [8], MIS-pga by Murgai et al. <ref> [18, 19, 20] </ref>, Xmap by Karplus [16], and the mapping algorithm proposed by Woo [25].
Reference: [21] <author> H. Savoj and R. K. Brayton. </author> <title> Observability relations and observability don't cares. </title> <booktitle> In Proceedings of IEEE International Conference on Computer-Aided Design, </booktitle> <pages> pages 518-521, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: Cerny's method is formulated with characteristic functions and can be efficiently implemented by BDD's [3] This topic has recently been revisited in <ref> [21, 17] </ref>. Here we follow the algorithm presented in [4]. In Figure 4 a multi-level network is shown. The area surrounded by a dotted line represents a sub-circuit composed of several lookup tables.
Reference: [22] <author> F. Somenzi and R. K. Brayton. </author> <title> An exact minimizer for boolean relations. </title> <booktitle> In Proceedings of IEEE International Conference on Computer-Aided Design, </booktitle> <pages> pages 316-319, </pages> <month> November </month> <year> 1989. </year>
Reference-contexts: The detailed explanation of Boolean relations can be found in <ref> [2, 22, 23] </ref>. Definition 1 A Boolean relation R is a relation over two sets B m and B n , where B = f0; 1g. R B m fi B n .
Reference: [23] <author> Y. Watanabe and R. K. Brayton. </author> <title> Heuristic minimization of boolean relations. </title> <booktitle> In Proceedings of MCNC International Workshop on Logic Synthesis, </booktitle> <month> May </month> <year> 1991. </year>
Reference-contexts: The detailed explanation of Boolean relations can be found in <ref> [2, 22, 23] </ref>. Definition 1 A Boolean relation R is a relation over two sets B m and B n , where B = f0; 1g. R B m fi B n .
Reference: [24] <author> Y. Watanabe and R. K. Brayton. </author> <title> Incremental synthesis for engineering changes. </title> <booktitle> In Proceedings of MCNC International Conference on Logic Synthesis, </booktitle> <month> May </month> <year> 1991. </year>
Reference-contexts: We formalize the problem using characteristic functions and present a redesign technique based on Boolean relations. There has been only limited work on redesign problems. The method for re-utilizing existing circuits when designing new ones is reported in [12, 14]. Another method for engineering changes is proposed in <ref> [24] </ref>. However, since both methods allow the change of a circuit structure, these approaches are not so suitable for redesigns of FPGA chips. This paper is organized as follows. In section 2, the proposed redesign technique is informally discussed with comprehensive examples. Terminology is briefly described in Section 3.
Reference: [25] <author> N.-S. Woo. </author> <title> A heuristic method for FPGA technology mapping based on the edge visibility. </title> <booktitle> In Proceedings of 28th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 248-251, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: synthesis for FPGA's, for example, Chortle and its successors Chortle-crf and Chortle-d by Francis et al. [10, 9, 11], DAG-map by Cong et al. [5], Hydra by Filo et al. [8], MIS-pga by Murgai et al. [18, 19, 20], Xmap by Karplus [16], and the mapping algorithm proposed by Woo <ref> [25] </ref>. In [13], a minimization algorithm based on minimal support was proposed, where the procedure is used to reduce the number of inputs for each lookup table (LUT), followed by a node covering procedure in order to reduce the number of LUT's.
References-found: 25

