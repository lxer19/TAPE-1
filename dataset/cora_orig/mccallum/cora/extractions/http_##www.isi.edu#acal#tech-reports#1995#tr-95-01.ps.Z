URL: http://www.isi.edu/acal/tech-reports/1995/tr-95-01.ps.Z
Refering-URL: http://www.isi.edu/acal/tech-reports/index.html
Root-URL: http://www.isi.edu
Title: Abstract  
Abstract: Caches usually consume a significant amount of energy in modern microprocessors (e.g. superpipelined or superscalar processors). In this paper, we examine contemporary cache design techniques and provide an analytical model for estimating cache energy consumption. We also present several novel techniques for designing an energy efficiency cache, which include block buffering, cache sub-banking, and Gray code addressing. The experimental results suggest that both block buffering and Gray code addressing techniques are ideal for instruction cache designs which tend to be accessed in consecutive sequence. Cache sub-banking is ideal for both instruction and data caches. Overall, these techniques can achieve an order of magnitude energy reduction on caches. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Bunda, W.C. Athas, and D. Fussell, </author> <title> Evaluating Power Implication of CMOS Microprocessor Design Decisions, </title> <booktitle> Proceedings of the 1994 International Workshop on Low Power Design, </booktitle> <month> April </month> <year> 1994. </year>
Reference-contexts: Jouppi suggested a two-level cache structure consumes less power than a single-level organization (assuming the area devoted to the cache is the same) [7]. Bunda investigated the impact of a 16-bit instruction set design to the instruction-fetch energy <ref> [1] </ref>. Memory addressing by using Gray code has shown a significant bit switching reduction on the instruction address path compared to the traditional 2s complement memory addressing [14]. 3 Methodology This paper presents a study of cache designs for energy efficiency. The methodology used in this study is the following. <p> An instruction-level simulator of VLSI-SLAM is used to monitor bit switching activities of cache behaviors when benchmark programs are running. 4 Experimental Cache Structures In this section, we briey describe the experimental caches used in this study. They includes conventional cache designs, block buffering <ref> [1] </ref>, cache sub-banking [16], and Gray code addressing [14]. <p> The energy consumption for accessing the buffer will be a lot less than that for accessing the cache. A basic structure of a block-buffered cache <ref> [1] </ref> is presented in Figure 2. The block buffer itself is, in effect, another cache which is closer to the processor than conventional on-chip caches. The processor checks if there is a block hit (i.e. the current access data is located at the same block of the latest access data).
Reference: [2] <author> A.P. Chandrakasan, S. Sheng and R.W. Brodersen, </author> <title> Low-power CMOS digital design, </title> <journal> IEEE J. Solid-State Circuits, </journal> <volume> Vol. 27, No4, </volume> <year> 1992. </year>
Reference: [3] <author> J.P. Hayes, </author> <title> Computer Architecture And Organization, </title> <publisher> McGraw-Hill Int. Editions, </publisher> <year> 1988. </year>
Reference-contexts: Using Gray code sequence for memory addressing can significantly reduce bit switching on the memory address path. A formal definition of Gray code sequence is described as follows <ref> [3] </ref>, Gray Code Representation 1. G 1 = 0, 1. 2. Let G k = g 0 , g 1 ,..., g 2k-2 , g 2k-1 .
Reference: [4] <author> R. Haygood, </author> <title> A Prolog Benchmark Suite for Aquarius, </title> <type> Technical Report, </type> <institution> Computer Science Department, University of California, </institution> <address> UCB/CSD 89/509, 1989.. </address>
Reference-contexts: These benchmark programs are selected from the Aquarius benchmark suite <ref> [4] </ref>. These benchmark programs contain millions of execution cycles. Applications of these benchmark programs include list manipulation, data base queries, theorem provers, and a circuit generator. The benchmark programs are compiled through the Aquarius Prolog compiler front-end [18] and an optimizing compiler backend [13] for VLSI-SLAM.
Reference: [5] <author> M.D.Hill, </author> <title> A case for Direct-mapped Caches, </title> <journal> IEEE Computer,21,12, </journal> <year> 1988. </year>
Reference: [6] <author> B. Holmer, B. Sano, M. Carlton, P. Van Roy, R. Haygood, W. Bush, and A. Despain. </author> <title> Fast Prolog with an Extended General Purpose Architecture, </title> <booktitle> in Proceedings of the 17th Annual International Symposium on Computer Architecture, </booktitle> <month> May </month> <year> 1990. </year>
Reference: [7] <author> N.P. Jouppi, S.J.E Wilton,. </author> <title> Tradeoffs in Two-Level On-Chip Caching, </title> <booktitle> The 21st Annual International Symposium on Computer Architecture, </booktitle> <month> April </month> <year> 1994. </year>
Reference-contexts: There have been few studies of cache designs for energy efficiency compared to the number of studies on cache designs for high performance. Jouppi suggested a two-level cache structure consumes less power than a single-level organization (assuming the area devoted to the cache is the same) <ref> [7] </ref>. Bunda investigated the impact of a 16-bit instruction set design to the instruction-fetch energy [1].
Reference: [8] <author> D. Liu, and C. Svensson, </author> <title> Trading Speed for Low Power by Choice of Supply and Threshold Voltages, </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> Vol. 28, No. 1, </volume> <year> 1993. </year>
Reference: [9] <author> S. Prasad and K. Roy, </author> <title> Circuit activity driven multilevel logic optimization for low power reliable operation, </title> <type> EDAC, </type> <month> February, </month> <year> 1993. </year>
Reference: [10] <author> S. Przybylski, M. Horowitz, and J. Hennessy, </author> <title> Characteristics of Performance-Optimal Multi-Level Cache Hierarchies, </title> <booktitle> The 16th Annual International Symposium on Computer Architecture, </booktitle> <month> May, </month> <title> 1989.low power reliable operation, </title> <type> EDAC, </type> <month> February, </month> <year> 1993. </year>
Reference: [11] <author> A.J. Smith, </author> <title> A Comparative Study of Set Associative Memory Mapping Algorithms and Their Use for Cache and Memory, </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. 4, No. 2, </volume> <month> March </month> <year> 1978. </year>
Reference: [12] <author> A. Shen, A. Ghosh and S. Devadas, </author> <title> On Average Power Dissipation and Random Pattern Testability of CMOS Combinational Logic Networks, </title> <journal> IEEE ICCAD, </journal> <month> Nov, </month> <year> 1993. </year>
Reference: [13] <author> C-L Su and Alvin M. Despain, </author> <title> An instruction Scheduler and Register Allocator for Prolog Parallel Microprocessors, </title> <booktitle> International Computer Symposium, </booktitle> <year> 1992. </year>
Reference-contexts: These benchmark programs contain millions of execution cycles. Applications of these benchmark programs include list manipulation, data base queries, theorem provers, and a circuit generator. The benchmark programs are compiled through the Aquarius Prolog compiler front-end [18] and an optimizing compiler backend <ref> [13] </ref> for VLSI-SLAM. An instruction-level simulator of VLSI-SLAM is used to monitor bit switching activities of cache behaviors when benchmark programs are running. 4 Experimental Cache Structures In this section, we briey describe the experimental caches used in this study.
Reference: [14] <author> C.L. Su, C.Y. Tsui, and A.M. Despain, </author> <title> Low Power Architecture Design and Compilation Techniques for High-Performance Processors, </title> <booktitle> Proceedings of the IEEE COMPCON, </booktitle> <month> February </month> <year> 1994. </year>
Reference-contexts: Bunda investigated the impact of a 16-bit instruction set design to the instruction-fetch energy [1]. Memory addressing by using Gray code has shown a significant bit switching reduction on the instruction address path compared to the traditional 2s complement memory addressing <ref> [14] </ref>. 3 Methodology This paper presents a study of cache designs for energy efficiency. The methodology used in this study is the following. First, we provide an analytical model for estimating energy consumption for different cache components. <p> Third, a novel cache design targeted for energy efficiency is proposed. Finally, the energy consumption of the proposed caches are evaluated and compared to the traditional cache designs. The work load used in this study is a set of Prolog benchmark programs running on a RISC-like micro-processor, the VLSI-BAM <ref> [14] </ref> 3.1 Cache Energy Model direct-mapped cache design. When the processor performs a memory access operation, the reference address is first sent to the Memory Address Register (MAR). <p> They includes conventional cache designs, block buffering [1], cache sub-banking [16], and Gray code addressing <ref> [14] </ref>.
Reference: [15] <author> C-L Su and Alvin M. Despain, </author> <title> Cache Sub-banking: A Cache Design for Energy Optimization, </title> <type> Technical Report, </type> <institution> ACAL-TR-94-17, USC, </institution> <year> 1994 </year>
Reference: [16] <author> C.Y. Tsui, M. Pedram, and A.M. Despain, </author> <title> Technology Decomposition and Mapping Targeting Low Power Dissipation, </title> <booktitle> Proceeding of the 30th Design Automation Conference, </booktitle> <year> 1993. </year>
Reference-contexts: An instruction-level simulator of VLSI-SLAM is used to monitor bit switching activities of cache behaviors when benchmark programs are running. 4 Experimental Cache Structures In this section, we briey describe the experimental caches used in this study. They includes conventional cache designs, block buffering [1], cache sub-banking <ref> [16] </ref>, and Gray code addressing [14].
Reference: [17] <author> H. Vaishnav and M. Pedram, Pcube: </author> <title> A Performance driven placement algorithm for low power designs, </title> <publisher> EURO-DAC, September,1993. </publisher>
Reference-contexts: This method is orthogonal to supply voltage reduction and process optimization and thus can be used to further reduce power consumption once the supply voltage and process of the processor are chosen. Currently most of the work has been carried out in the layout <ref> [17] </ref> and logic levels [9,12,16]. In this work, we focus mainly on minimizing the energy consumption of instruction and data caches on advanced processors for ILP (Instruction-level Parallelism), in which caches usually consume a significant amount of energy.
Reference: [18] <author> P. Van Roy and A. M. Despain, </author> <title> High-Performance Logic Programming with the Aquarius Prolog Compiler, </title> <booktitle> IEEE Computer, </booktitle> <month> January </month> <year> 1992. </year>
Reference-contexts: These benchmark programs are selected from the Aquarius benchmark suite [4]. These benchmark programs contain millions of execution cycles. Applications of these benchmark programs include list manipulation, data base queries, theorem provers, and a circuit generator. The benchmark programs are compiled through the Aquarius Prolog compiler front-end <ref> [18] </ref> and an optimizing compiler backend [13] for VLSI-SLAM. An instruction-level simulator of VLSI-SLAM is used to monitor bit switching activities of cache behaviors when benchmark programs are running. 4 Experimental Cache Structures In this section, we briey describe the experimental caches used in this study.
References-found: 18

