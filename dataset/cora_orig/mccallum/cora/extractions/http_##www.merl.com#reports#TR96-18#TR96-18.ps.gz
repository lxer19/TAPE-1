URL: http://www.merl.com/reports/TR96-18/TR96-18.ps.gz
Refering-URL: http://www.merl.com/reports/TR96-18/index.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: DART A Low Overhead ATM Network Interface Chip of Hot Interconnects IV: A Symposium on
Author: Randy Osborne, Qin Zheng, and John Howard MERL Ross Casley and Doug Hahn 
Address: Palo Alto, California,  1996 201 Broadway, Cambridge, Massachusetts 02139  
Date: July 1996  August 15-17, 1996  
Affiliation: Sunnyvale Research Lab Mitsubishi Electric Information Technology Center America, Inc. Takeo Nakabayashi System LSI Laboratory, Mitsubishi Electric Corp.  Stanford University,  Mitsubishi Electric Information Technology Center America,  
Web: http://www.merl.com  
Note: MERL A MITSUBISHI ELECTRIC RESEARCH LABORATORY  In proceedings  Copyright c  
Pubnum: TR-96-18  
Abstract: DART is an ATM Network Interface Controller chip designed for both high bandwidth and low overhead communication. Innovative features are direct, protected application access to/from the network, host-assisted flow control, and "message processing" for flexible low overhead communication mechanisms. DART is being manufactured as a commercial product by Mitsubishi Electric. This work may not be copied or reproduced in whole or in part for any commercial purpose. Permission to copy in whole or in part without payment of fee is granted for nonprofit educational and research purposes provided that all such whole or partial copies include the following: a notice that such copying is by permission of Mitsubishi Electric Information Technology Center America; an acknowledgment of the authors and individual contributions to the work; and all applicable portions of the copyright notice. Copying, reproduction, or republishing for any other purpose shall require a license with payment of fee to Mitsubishi Electric Information Technology Center America. All rights reserved. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Blumrich et al, </author> <title> "Two virtual Memory Mapped Network Interface Designs", </title> <type> Hot Interconnects 94 </type>
Reference: [2] <author> Brewer et al, </author> <title> "Remote Queues: Exposing Messages Queues for Optimization and Atomicity", </title> <publisher> SPAA95 </publisher>
Reference-contexts: For very low overhead communication, DART supports "message processing" | low level processing of AAL5 and AAL0 frames between the network and application. Possible uses include low overhead communication mechanisms (e.g. sender-based protocols [3,9], remote queues <ref> [2] </ref>, and remote memory operations | read and write of memory in other computers), reflective memory in real-time systems, filtering of unwanted messages, and fast/cheap demultiplexing. DART is a fully featured NIC chip intended to satisfy the demands of the commercial market. <p> On the RX side, message processing provides a way to examine incoming frames before depositing them in host memory. Possible uses include sender-based protocols, remote queues <ref> [2] </ref>, and remote memory operations for extremely low latency communication (remote reads and writes), host-less filtering of unwanted messages (such as arise with ATM Forum style LAN emulation), and fast/cheap demultiplexing. <p> Most of the afore-mentioned uses of message processing are obvious. fetch&add can be implemented using a register maintained by the message co-processor. Remote queues <ref> [2] </ref>, with data stored directly in a named queue, can be implemented using the co-processor to maintain queue pointers: the message control info identifies the queue and the co-processor generates the address at which DART stores the message data. This is a simple form of a virtual ring queue (c.f.
Reference: [3] <editor> Buzzard et al, "Hamlyn: </editor> <title> A High-Performance Network Interface with Sender-based Memory-management", Hot Interconnects 95 5 Half the round trip number in [12] and subtracting 10.5sec (an overestimate using the latency for SONET [6]) to eliminate switch latency. The DART Verilog roughly simulates a TAXI interface like the Fore NIC uses. Using Mit-subishi's SONET TC chip on each link end would add an average of 6.8sec latency over TAXI for each link traversal. </title>
Reference: [4] <author> Chen, B. et al, </author> <title> "The Measured Performance of Personal Computer Operating Systems", </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> Volume 14, Number 1, </volume> <month> February </month> <year> 1996. </year>
Reference-contexts: The variability in the entry time is mostly due to kernel I-cache misses (1 to 19) and occasional kernel I-TLB misses (1 to 3). From these results we estimate 9.8 to 29.8sec 4 Brad Chen assisted greatly, using methodology described in <ref> [4] </ref>. to process 3 RM cell events. At full line rate of 155 Mbps, with the minimum interrupt period set to one RM period (32 cell times) this overhead will be experienced on average every 86sec, yielding a host overhead of 11% to 35% for full line rate duplex ABR.
Reference: [5] <author> Druschel, P. and Peterson, P. and Davies, B., </author> <title> "Experiences with a High-Speed Network Adaptor: A Software Perspective", </title> <publisher> SIGCOMM94 </publisher>
Reference-contexts: To support high bandwidth, low overhead, and application-specific protocols, DART allows an application to bypass the OS by providing direct, protected access to the network. DART uses the Application Data Channel <ref> [5] </ref> idea: hardware looks up transmit privileges and demultiplexes received messages using the VC number to index into state tables maintained by the OS. Address translation hardware ensures that applications only send and receive from designated areas setup by the OS. access (DAA) channels.
Reference: [6] <institution> Fore Systems Technical Assistance (March 96) and Data Communications, </institution> <month> March 95 </month>
Reference: [7] <author> R. Osborne, </author> <title> "A Hybrid Deposit Model for Low Overhead Communication in High Speed LANs", </title> <booktitle> 4th IFIP Int'l Workshop on Protocols for High Speed Networks, </booktitle> <month> Aug. </month> <note> 1994 [8] "Quantum Flow Control", Version 2.0, </note> <editor> Gaddis and Kelt, Eds., </editor> <month> July </month> <year> 1995. </year> <note> Available via http://www.qfc.org </note>
Reference-contexts: There is 1.1sec startup time per message chain on the TX side (above the cell slot time of 2.7sec) and thus a stream of single cell messages using short frame format attains 70% of maximum bandwidth. Using first generation ATM NIC hardware (Fore 100 series NIC) and host software, <ref> [7] </ref> reported 25sec for a 32 byte remote write and 45sec for a 32 byte remote read.
Reference: [9] <author> Swanson, M. and Stoller, L., </author> <title> "Low Latency Workstation Cluster Communications Using Sender-based Protocols", </title> <institution> University of Utah, </institution> <month> June </month> <year> 1994 </year>
Reference: [10] <author> Thekkath, C. and Levy, H. and Lazowska, E., </author> <title> "Separating Data and Control Transfer in Distributed Operating Systems", </title> <booktitle> ASPLOS VI, </booktitle> <month> Oct. </month> <year> 1994 </year>
Reference: [11] <institution> Traffic Management 4.0, </institution> <note> ATM Forum Document af-tm-0056, April 1996 (formerly TM95-0013R10, February 1996) [12] von Eicken et al, </note> <author> "U-Net: </author> <title> A User-Level Network Interface for Parallel and Distributed Computing", SOSP95 [13] von Eicken et al, "Active Messages: A Mechanism for Integrated Communication and Computation", </title> <booktitle> Int'l Symposium on Computer Architecture, </booktitle> <month> May </month> <year> 1992 </year>
Reference-contexts: DART is a fully featured NIC chip intended to satisfy the demands of the commercial market. DART's traffic management supports both the ATM Forum rate-based flow control scheme <ref> [11] </ref> and the Quantum Flow Control Consortium credit-based flow control scheme [8] with flexibility to follow standards evolution and implement proprietary schemes. The transmit side implements per connection traffic shaping capable of any transmission rate, four transmission priority levels; and multiple traffic classes (CBR, VBR, ABR, UBR). <p> This function is required for all ATM service classes supported. ATM Forum Traffic Management Specification <ref> [11] </ref> provides a detailed description of the various ATM service classes and their traffic shaping requirements. The traffic shaper schedules cell transmission times for each VC such that the inter-cell time dt for a VC is controlled above a certain value.
Reference: [14] <author> Zheng et al, </author> <title> "Implementation of Flexible ABR Flow Control in ATM Networks", TR96-08, MERL/Mitsubishi Electric ITA, April 1996 Acknowledgements The authors thank Dr. Masao Nakaya of Mitsubishi Electric and Dr. Tohei Nitta of Mitsubishi Electric Information Technology Center America (ITA) for making the DART project possible. The authors also thank Dr. Hugh Lauer and Dr. Abhijit Ghosh of ITA for their contribution in managing the project. </title> <month> MERL-TR-96-18 12 July </month> <year> 1996 </year>
Reference-contexts: In addition, in many cases VBR will be a better choice for low latency, small message traffic than the ATM Forum's ABR scheme. For more information on DART's traffic management implementation see <ref> [14] </ref>. 4 Message Processing Message processing is low level processing of frames (i.e. messages) between retrieving a frame from the host and injecting it in the network (TX), and between receiving a frame from the network and storing it to the host (RX).
References-found: 11

