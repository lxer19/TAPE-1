URL: ftp://ftp.cs.kun.nl/pub/SoftwEng.InfSyst/articles/EISMetaMod.ps.Z
Refering-URL: http://www.sci.kun.nl/afdis/publist.html
Root-URL: 
Email: eis@cs.kun.nl  
Title: Modelling the Evolution of Information Systems  Modelling the Evolution of Information Systems.  
Author: H.A. Proper, E.D. Falkenberg, J.L.H. Oei, H.A. Proper, and E.D. Falkenberg. 
Address: Nijmegen, Nijmegen, The Netherlands, 1992.  
Affiliation: Department of Information Systems, University of  
Note: Published as:  
Date: July 9, 1993  
Pubnum: Technical Report 92-36,  
Abstract: In this article, we discuss the need for information systems capable of evolving to the same extent as organisation systems do. A set of requirements for evolving information systems is presented, implying the importance of the time concept in these systems. On the basis of these requirements an architecture and a conceptual framework for evolving information systems is proposed. In our conceptual framework for update we distinguish recording, correction and forgetting. State transitions are considered on three different levels of abstraction, viz. the event level, the recording level and the correction level. A formal specification of the transformation process between user update requests, primitive update requests, and the three-level model for update is provided.
Abstract-found: 1
Intro-found: 1
Reference: [All84] <author> J.F. Allen. </author> <title> Towards a General Theory of Action and Time. </title> <journal> Artificial Intelligence, </journal> 1984(23) 123-154, 1984. 
Reference-contexts: T e is time axis for event occurences, also with a total order &lt;. Both the T r and T e time axis can be defined in a multitude of ways, see e.g. [CR87], [WJL91] or <ref> [All84] </ref>. 7 4. EO = ES fi T e is the set of all event occurences. An event occurence is identified by an event specification and the point of time at which the event occurs. 5. ER = EOfiT r is the set of all event recordings.
Reference: [Bem87] <institution> T.M.A. Bemelmans. Bestuurlijke informatiesystemen en automatisering. Stenfert Kroese, Leiden, The Netherlands, </institution> <note> 3d revised edition, 1987. (In Dutch). </note>
Reference-contexts: (<ref> [Bem87] </ref>). In case of a highly dynamic organisation, this latter percentage is likely to be even higher. Realizing this situation, it can be concluded that information systems are needed which can be adapted to the changing environment in smaller, easier, and more frequent steps than generally is the case. In [Bem87], the adaptability of (information) systems is termed flexibility in a broader sense, and the ability of a (information) system to continue to function in a satisfactory way without having to change the information system, although the organisation has changed, is termed flexibility in the narrower sense.
Reference: [BF91] <editor> S. Brinkkemper and E.D. Falkenberg. </editor> <title> Three Dichotomies in the Information System Methodology. </title> <editor> In P.W.G. Bots, H.G. Sol, and I.G. Sprinkhuizen-Kuyper, editors, In-formatiesystemen in beweging. </editor> <publisher> Kluwer, </publisher> <address> Deventer, The Netherlands, </address> <year> 1991. </year>
Reference-contexts: In a traditional information system, where the traditional schema (type) vs. instance dichotomy (e.g. <ref> [BF91] </ref>) is applied to the application model, only the instances can be updated. That is, schema specifications, as well as activity and behaviour specifications (which are usually hidden in program procedures), cannot be updated in traditional information systems.
Reference: [Bub80] <author> J.A. Bubenko. </author> <title> Information Modelling in the Context of System Development. </title> <editor> In S.H. Lavington, editor, </editor> <booktitle> Information Processing 80, </booktitle> <pages> pages 395-411. </pages> <address> North-Holland/IFIP, Amsterdam, The Netherlands, </address> <year> 1980. </year>
Reference: [Che76] <author> P.P. Chen. </author> <title> The Entity-Relationship Model: Toward a Unified View of Data. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 1(1) </volume> <pages> 9-36, </pages> <month> March </month> <year> 1976. </year>
Reference: [CR87] <author> J. Clifford and A. Rao. </author> <title> A simple, general structure for Temporal Domains. </title> <editor> In C. Rol-land, F. Bodart, and M. Leonard, editors, </editor> <booktitle> Temporal Aspects in Information Systems, </booktitle> <pages> pages 17-28. </pages> <address> North-Holland/IFIP, Amsterdam, The Netherlands, </address> <year> 1987. </year> <month> 21 </month>
Reference-contexts: T r is the time axis for event recordings, with a total order &lt;. 3. T e is time axis for event occurences, also with a total order &lt;. Both the T r and T e time axis can be defined in a multitude of ways, see e.g. <ref> [CR87] </ref>, [WJL91] or [All84]. 7 4. EO = ES fi T e is the set of all event occurences. An event occurence is identified by an event specification and the point of time at which the event occurs. 5. ER = EOfiT r is the set of all event recordings.
Reference: [FOP92a] <author> E.D. Falkenberg, J.L.H. Oei, and H.A. Proper. </author> <title> A Conceptual Framework for Evolving Information Systems. </title> <editor> In H.G. Sol and R.L. Crosslin, editors, </editor> <booktitle> Dynamic Modelling of Information Systems II, </booktitle> <pages> pages 353-375. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, The Netherlands, </address> <year> 1992. </year>
Reference-contexts: 1 Introduction As argued in <ref> [FOP92a] </ref>, [FOP92c] and [Rod91], there is a substantial demand for information systems which are able to evolve to the same extent and at the same pace at which the supported organisation system evolves due to changes in the universe of discourse ([Gri82]). <p> Another limitation of many traditional systems is that they are snapshot systems, i.e. they reflect information valid at a certain point of time, but lack the ability to preserve the history of information. An evolving information system, on the contrary, must be conservative or temporal ([SA85] [SA86], <ref> [FOP92a] </ref>, [FOP92c]) in the sense that it should not forget anything ever fed to the system, unless explicitly asked for, thus allowing for the formulation of queries about the history fl The investigations were partly supported by the Foundation for Computer Science in the Netherlands (SION) with financial support from the <p> Traditional systems can thus be regarded as degenerations of these evolving information systems ([FOP92c]). For a more elaborate discussion on the difference between traditional and evolving information systems, see also <ref> [FOP92a] </ref>. An important concept in evolving information systems are updates. In traditional information systems, updates are a non-trivial aspect, in the field of evolving information systems, this is even more the case. In this article we focus on a suitable meta model for update in generalised evolving information systems. <p> In the same way corrections requiring the removal or insertion of a recording of an event can be represented. In <ref> [FOP92a] </ref> more examples are given and elaborated. As stated before, the recordings of the user's update requests have to be split up, based on the roll-backs, in a list of sets of recordings. Each of these sets will correspond to an application model's recording history.
Reference: [FOP92b] <author> E.D. Falkenberg, J.L.H. Oei, and H.A. Proper. </author> <title> A Metamodel for Update in Information Systems. </title> <type> Technical Report 92-05, </type> <institution> Department of Information Systems, University of Nijmegen, Nijmegen, </institution> <address> The Netherlands, </address> <year> 1992. </year>
Reference-contexts: The evolving information systems at which we aim, however, do support update of all these specifications. A very important requirement for these evolving information systems is that no update of any sort should result in the interruption of activities of the evolving organisation ([FOP92a], [FOP92c], <ref> [FOP92b] </ref>). Related work on conceptual schema evolution can be found in e.g. [MS90], [Rod91]. Another limitation of many traditional systems is that they are snapshot systems, i.e. they reflect information valid at a certain point of time, but lack the ability to preserve the history of information. <p> The framework for the processing of updates in evolving information systems, as it will be presented in this paper, is based on the possible causes for update requests. On this basis, three main classes of update are distinguished: recording, correction and forgetting ([FOP92c], <ref> [FOP92b] </ref>). Since the application model should be a reflection of the universe of discourse, every event (change of state at a point of time) in the universe of discourse (for instance the hiring/firing of personell) should be reported to the information system by means of a recording of this event. <p> These modelling constructs are referred to as application modelling elements ([FOP92a], <ref> [FOP92b] </ref>). A recording of an event can thus be regarded as the modification of the set of application model elements constituting the state of the application model. A (to be) recorded event is denoted as a sentence conform the language as determined by the chosen meta model. <p> Therefore the roll-back must have been to First (R UI (i 1) R UI (i)). Note that PI rc ER and PI rb RB. On the primitive user update requests two usefull properties hold. In <ref> [FOP92b] </ref>, where only the primitive user update request were taken into account, these properties were axioms on the primitive user update requests. In this article, these properties are to be regarded as requirements on the translation algorithm in definition 5.3.
Reference: [FOP92c] <author> E.D. Falkenberg, J.L.H. Oei, and H.A. Proper. </author> <title> Evolving Information Systems: Beyond Temporal Information Systems. </title> <editor> In A.M. Tjoa and I. Ramos, editors, </editor> <booktitle> Proceedings of the Data Base and Expert System Applications Conference (DEXA 92), </booktitle> <pages> pages 282-287, </pages> <address> Valencia, Spain, </address> <month> September </month> <year> 1992. </year> <note> Springer-Verlag. </note>
Reference-contexts: 1 Introduction As argued in [FOP92a], <ref> [FOP92c] </ref> and [Rod91], there is a substantial demand for information systems which are able to evolve to the same extent and at the same pace at which the supported organisation system evolves due to changes in the universe of discourse ([Gri82]). <p> The evolving information systems at which we aim, however, do support update of all these specifications. A very important requirement for these evolving information systems is that no update of any sort should result in the interruption of activities of the evolving organisation ([FOP92a], <ref> [FOP92c] </ref>, [FOP92b]). Related work on conceptual schema evolution can be found in e.g. [MS90], [Rod91]. Another limitation of many traditional systems is that they are snapshot systems, i.e. they reflect information valid at a certain point of time, but lack the ability to preserve the history of information. <p> Another limitation of many traditional systems is that they are snapshot systems, i.e. they reflect information valid at a certain point of time, but lack the ability to preserve the history of information. An evolving information system, on the contrary, must be conservative or temporal ([SA85] [SA86], [FOP92a], <ref> [FOP92c] </ref>) in the sense that it should not forget anything ever fed to the system, unless explicitly asked for, thus allowing for the formulation of queries about the history fl The investigations were partly supported by the Foundation for Computer Science in the Netherlands (SION) with financial support from the Netherlands <p> In the remainder of this paper, a framework for update in evolving information systems is introduced, which is based on the possible causes for update requests. As argued in <ref> [FOP92c] </ref>, update in traditional systems can be regarded as a degeneration of update in evolving systems. This is solely possible due to the fact that the requirements of traditional information systems, with respect to update are less demanding than those of evolving information systems. <p> Three kinds of elementary transitions are determined: a birth-transition, creating an application model element, a death-transition, terminating an element, and a change transition which transforms an existing application model element (<ref> [FOP92c] </ref>). As has been argued in e.g. [FOP92c] and [SA85], the time of recording of an event is different from its occurence time. The time at which an event occurs in a universe of discourse is the event time, and the time at which the event is recorded is the recording time.
Reference: [Gri82] <editor> J.J. van Griethuysen, editor. </editor> <title> Concepts and Terminology for the Conceptual Schema and the Information Base. </title> <publisher> Publ. nr. </publisher> <address> ISO/TC97/SC5-N695, </address> <year> 1982. </year>
Reference: [GS86] <author> C. Gane and T. Sarson. </author> <title> Structured System Analysis: Tools and techniques. IST Databooks. </title> <publisher> MacDonald Douglas Corporation, </publisher> <address> St. Louis, </address> <year> 1986. </year>
Reference: [HN93] <author> A.H.M. ter Hofstede and E.R. Nieuwland. </author> <title> Task structure semantics through process algebra. </title> <journal> Software Engineering Journal, </journal> <volume> 8(1) </volume> <pages> 14-20, </pages> <month> January </month> <year> 1993. </year>
Reference: [HPW92a] <author> A.H.M. ter Hofstede, H.A. Proper, and Th.P. van der Weide. </author> <title> A Conceptual Language for the Description and Manipulation of Complex Information Models. </title> <type> Technical Report 92-34, </type> <institution> Department of Information Systems, University of Nijmegen, Nijmegen, </institution> <address> The Netherlands, </address> <year> 1992. </year>
Reference: [HPW92b] <author> A.H.M. ter Hofstede, H.A. Proper, and Th.P. van der Weide. </author> <title> A Note on Schema Equivalence. </title> <type> Technical Report 92-30, </type> <institution> Department of Information Systems, University of Nijmegen, Nijmegen, </institution> <address> The Netherlands, </address> <year> 1992. </year>
Reference-contexts: An information system reflects an organisation correctly if and only if there exists a isomor-phism between the states and transitions of the application model and the states and transitions in the universe of discourse ([HW93], <ref> [HPW92b] </ref>). From this requirement follows that the order in which the events occured in the universe of discourse (should) be the same as the order of the recorded events.
Reference: [HPW92c] <author> A.H.M. ter Hofstede, H.A. Proper, and Th.P. van der Weide. </author> <title> Data Modelling in Complex Application Domains. </title> <editor> In P. Loucopoulos, editor, </editor> <booktitle> Proceedings of the Fourth International Conference CAiSE'92 on Advanced Information Systems Engineering, volume 593 of Lecture Notes in Computer Science, </booktitle> <pages> pages 364-377, </pages> <address> Manchester, United Kingdom, May 1992. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: The schema depicted there is in the style of PSM ([HW93], <ref> [HPW92c] </ref>), being an extension of the modelling technique from NIAM ([NH89], [Win90]). The extension used in figure 10 deals with schema objectifications, where a population of the objectified schema at hand is to be looked upon as an abstract object instance.
Reference: [HPW93] <author> A.H.M. ter Hofstede, H.A. Proper, and Th.P. van der Weide. </author> <title> Formal Definition of a Conceptual Language for the Description and Manipulation of Information Models. </title> <journal> Information Systems, </journal> <volume> 18(7), </volume> <year> 1993. </year>
Reference-contexts: consider the following two events for the rental store: e 1 : ADD Song: 'Walk of Life' on Record: 'Brothers in Arms' e 2 : DELETE Song on Record: 'Brothers in Arms' The event specifications in the above example are, again, denoted in the semi-natural language LISA-D as defined in <ref> [HPW93] </ref>. The first event specification (e 1 ) represents the adding of the fact that song `Walk of Life' is recorded on record `Brothers in Arms', whereas the second event specification (e 2 ) represents the deletion of all facts about songs recorded on record `Brothers in Arms'.
Reference: [HW92] <author> A.H.M. ter Hofstede and Th.P. van der Weide. </author> <title> Formalisation of techniques: chopping down the methodology jungle. </title> <journal> Information and Software Technology, </journal> <volume> 34(1) </volume> <pages> 57-65, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: recordings cause state transitions on the correction level. 6.1 The Event Level It is generally assumed that in the universe of discourse, described in the information system, a set of stable states can be recognised, and that there exist a number of actions that result in event occurences see e.g. <ref> [HW92] </ref>, [HW93]. As stated before, the elements of the application model reflect the application-dependent or time-variant elements in the universe of discourse, implying that the state of a universe of discourse at a particular point of time can be modelled by means of a set of application model elements.
Reference: [HW93] <author> A.H.M. ter Hofstede and Th.P. van der Weide. </author> <title> Expressiveness in conceptual data modelling. </title> <journal> Data & Knowledge Engineering, </journal> <volume> 10(1) </volume> <pages> 65-100, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: cause state transitions on the correction level. 6.1 The Event Level It is generally assumed that in the universe of discourse, described in the information system, a set of stable states can be recognised, and that there exist a number of actions that result in event occurences see e.g. [HW92], <ref> [HW93] </ref>. As stated before, the elements of the application model reflect the application-dependent or time-variant elements in the universe of discourse, implying that the state of a universe of discourse at a particular point of time can be modelled by means of a set of application model elements.
Reference: [LGN81] <author> M. Lundeberg, G. Goldkuhl, and A. Nilsson. </author> <title> Information Systems Development A Systematic Approach. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1981. </year>
Reference: [Lin90] <editor> P. Lindgreen, editor. </editor> <title> A Framework of Information Systems Concepts. </title> <booktitle> Interim Report of the IFIP WG 8.1 Task Group FRISCO, </booktitle> <year> 1990. </year>
Reference-contexts: It should be noted, however, that not all temporal systems are evolving information systems. As we have seen in this subsection, evolving information systems have to meet additional requirements. 3 The Architecture of Evolving Information Systems In our systems view on organisations, conform the approach taken in <ref> [Lin90] </ref>, an organisation system is considered to be a set of interrelated actors, activities, states and points of time. The information systems considered here, are restricted to information systems where the only actor performing information processing activities is computerized. This computerized actor is called the information processor.
Reference: [MS90] <author> E. McKenzie and R. Snodgrass. </author> <title> Schema Evolution and the Relational Algebra. </title> <journal> Information Systems, </journal> <volume> 15(2) </volume> <pages> 207-232, </pages> <year> 1990. </year> <month> 22 </month>
Reference-contexts: A very important requirement for these evolving information systems is that no update of any sort should result in the interruption of activities of the evolving organisation ([FOP92a], [FOP92c], [FOP92b]). Related work on conceptual schema evolution can be found in e.g. <ref> [MS90] </ref>, [Rod91]. Another limitation of many traditional systems is that they are snapshot systems, i.e. they reflect information valid at a certain point of time, but lack the ability to preserve the history of information.
Reference: [NH89] <author> G.M. Nijssen and T.A. Halpin. </author> <title> Conceptual Schema and Relational Database Design: a fact oriented approach. </title> <publisher> Prentice-Hall, </publisher> <address> Sydney, Australia, </address> <year> 1989. </year>
Reference: [OHFB92] <author> J.L.H. Oei, L.J.G.T. van Hemmen, E.D. Falkenberg, and S. Brinkkemper. </author> <title> The Meta Model Hierarchy: A Framework for Information System Concepts and Techniques. </title> <type> Technical Report 92-17, </type> <institution> Department of Information Systems, University of Nijmegen, Nijmegen, </institution> <address> The Netherlands, </address> <year> 1992. </year>
Reference-contexts: In this paper the meta model and the corresponding specification language (s) are assumed to be stable. Changes are restricted to the application model only. Conform the terminology introduced in <ref> [OHFB92] </ref> this means that in this paper we restrict ourselves to information systems supporting first-order evolution. Second-order evolution involves changes of the meta model as well.
Reference: [Rod91] <author> J.F. Roddick. </author> <title> Dynamically changing schemas within database models. </title> <journal> The Australian Computer Journal, </journal> <volume> 23(3) </volume> <pages> 105-109, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: 1 Introduction As argued in [FOP92a], [FOP92c] and <ref> [Rod91] </ref>, there is a substantial demand for information systems which are able to evolve to the same extent and at the same pace at which the supported organisation system evolves due to changes in the universe of discourse ([Gri82]). Most traditional information systems hardly support any aspect of evolution. <p> A very important requirement for these evolving information systems is that no update of any sort should result in the interruption of activities of the evolving organisation ([FOP92a], [FOP92c], [FOP92b]). Related work on conceptual schema evolution can be found in e.g. [MS90], <ref> [Rod91] </ref>. Another limitation of many traditional systems is that they are snapshot systems, i.e. they reflect information valid at a certain point of time, but lack the ability to preserve the history of information.
Reference: [SA85] <author> R. Snodgrass and I. Ahn. </author> <title> A Taxonomy of Time in Databases. </title> <booktitle> In Proceedings of the ACM SIGMOD International Conference on the Management of Data, </booktitle> <pages> pages 236-246, </pages> <address> Austin, Texas, </address> <year> 1985. </year>
Reference-contexts: In such systems, the distinction between event time the time at which an event occurs in the universe of discourse and recording time the time at which the event is recorded in the information system is of great importance ([Bub80], <ref> [SA85] </ref>, [SA86], [Sno90]). Traditional systems can thus be regarded as degenerations of these evolving information systems ([FOP92c]). For a more elaborate discussion on the difference between traditional and evolving information systems, see also [FOP92a]. An important concept in evolving information systems are updates. <p> Three kinds of elementary transitions are determined: a birth-transition, creating an application model element, a death-transition, terminating an element, and a change transition which transforms an existing application model element ([FOP92c]). As has been argued in e.g. [FOP92c] and <ref> [SA85] </ref>, the time of recording of an event is different from its occurence time. The time at which an event occurs in a universe of discourse is the event time, and the time at which the event is recorded is the recording time.
Reference: [SA86] <author> R. Snodgrass and I. Ahn. </author> <title> Temporal Databases. </title> <journal> IEEE Computer, </journal> <volume> 19(9) </volume> <pages> 35-42, </pages> <year> 1986. </year>
Reference-contexts: Another limitation of many traditional systems is that they are snapshot systems, i.e. they reflect information valid at a certain point of time, but lack the ability to preserve the history of information. An evolving information system, on the contrary, must be conservative or temporal ([SA85] <ref> [SA86] </ref>, [FOP92a], [FOP92c]) in the sense that it should not forget anything ever fed to the system, unless explicitly asked for, thus allowing for the formulation of queries about the history fl The investigations were partly supported by the Foundation for Computer Science in the Netherlands (SION) with financial support from <p> In such systems, the distinction between event time the time at which an event occurs in the universe of discourse and recording time the time at which the event is recorded in the information system is of great importance ([Bub80], [SA85], <ref> [SA86] </ref>, [Sno90]). Traditional systems can thus be regarded as degenerations of these evolving information systems ([FOP92c]). For a more elaborate discussion on the difference between traditional and evolving information systems, see also [FOP92a]. An important concept in evolving information systems are updates. <p> These point of times are called the recording time of events. Our notion of event time and recording time is identical to the notions of valid time, and transaction time, respectively, in <ref> [SA86] </ref>. (The reason for this renaming is that the new names correspond better to the three level architecture we will introduce in section 6.) The classification made in [SA86] is based on the support of this valid and/or transaction time. <p> Our notion of event time and recording time is identical to the notions of valid time, and transaction time, respectively, in <ref> [SA86] </ref>. (The reason for this renaming is that the new names correspond better to the three level architecture we will introduce in section 6.) The classification made in [SA86] is based on the support of this valid and/or transaction time. Conform this classification, distinguishing snapshot-, historical-, rollback-, and temporal systems, evolving information systems are temporal systems, as both valid and transaction time are supported. It should be noted, however, that not all temporal systems are evolving information systems.
Reference: [Sno90] <author> R. Snodgrass. </author> <title> Temporal Databases Status and Research Directions. </title> <booktitle> SIGMOD Record, </booktitle> <volume> 19(4) </volume> <pages> 83-89, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: In such systems, the distinction between event time the time at which an event occurs in the universe of discourse and recording time the time at which the event is recorded in the information system is of great importance ([Bub80], [SA85], [SA86], <ref> [Sno90] </ref>). Traditional systems can thus be regarded as degenerations of these evolving information systems ([FOP92c]). For a more elaborate discussion on the difference between traditional and evolving information systems, see also [FOP92a]. An important concept in evolving information systems are updates.
Reference: [Ver89] <author> A.A. Verrijn-Stuart. </author> <title> Some Reflections on the Namur Conference on Information Systems Concepts. </title> <editor> In E.D. Falkenberg and P. Lindgreen, editors, </editor> <title> Information System Concepts: An In-depth Analysis. </title> <address> North-Holland/IFIP, Amsterdam, The Netherlands, </address> <year> 1989. </year>
Reference-contexts: The information processor may be composed out of several sub-processors, which may be (physically) distributed. In this paper, however, the specific aspects of distributed information systems are not taken in consideration. The restriction to a computerized actor performing information system processing activities, corresponds to what has been defined in <ref> [Ver89] </ref> as an information system in the narrower sense IS (N). In this paper, whenever the term information systems is used, information systems in the narrower sense are meant. Conform this systems view on organisations and information systems, 3 a general architecture for information systems is presented.
Reference: [Win90] <author> J.J.V.R. Wintraecken. </author> <title> The NIAM Information Analysis Method: Theory and Practice. </title> <publisher> Kluwer, </publisher> <address> Deventer, The Netherlands, </address> <year> 1990. </year>
Reference-contexts: The model depicted there is in the style of the modelling technique from NIAM ([NH89], <ref> [Win90] </ref>). ' $ T r & % ' $ t & % RbTo RcAt UI rb % % % % % RbTo RcAt UI rm ffi ffi ffi ffi ffi RbTo RcAtRpBy - E E l l RcOf RcAt PI rc UI occ OccOf OccAt - 5 Derivation of Primitive Update <p> The schema depicted there is in the style of PSM ([HW93], [HPW92c]), being an extension of the modelling technique from NIAM ([NH89], <ref> [Win90] </ref>). The extension used in figure 10 deals with schema objectifications, where a population of the objectified schema at hand is to be looked upon as an abstract object instance.
Reference: [WJL91] <author> G. Wiederhold, S. Jajodia, and W. Litwin. </author> <title> Dealing with the Granularity of Time in Temporal Databases. </title> <editor> In R. Andersen, J.A. Bubenko, and A. Stlvberg, editors, </editor> <booktitle> Proceedings of the Third International Conference CAiSE'91 on Advanced Information Systems Engineering, volume 498 of Lecture Notes in Computer Science, </booktitle> <pages> pages 124-140, </pages> <address> Trondheim, Norway, May 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: T r is the time axis for event recordings, with a total order &lt;. 3. T e is time axis for event occurences, also with a total order &lt;. Both the T r and T e time axis can be defined in a multitude of ways, see e.g. [CR87], <ref> [WJL91] </ref> or [All84]. 7 4. EO = ES fi T e is the set of all event occurences. An event occurence is identified by an event specification and the point of time at which the event occurs. 5. ER = EOfiT r is the set of all event recordings.
References-found: 30

