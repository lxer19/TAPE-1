URL: ftp://ftp.cs.cmu.edu/project/chimera/clh.csee95.ps.Z
Refering-URL: http://www.cs.cmu.edu/~kem/ri/unused_pages/aml-pubs.html
Root-URL: 
Email: Internet: clh@cs.cmu.edu  
Title: The Role of the Software Engineer in Real-Time Software Development: An Introductory Course  
Author: Carol L. Hoover 
Address: Pittsburgh, Pennsylvania 15213  
Affiliation: School of Computer Science, Carnegie Mellon University  
Abstract: A noteworthy feature of the computing industry is the increasing demand for application-specific software. For example, software to control a factory in real-time involves timing, fault-tolerance, and safety constraints. These requirements differ from those one would encounter in the design of a software interface to a database. Software engineers who architect real-time systems need to know how to apply basic principles about real-time computing, but there is a gap between real-time computing theory and industrial engineering practice. The subject of this report is a full-semester course, Introduction to Real-Time Software and Systems, which bridges this gap by focusing on the role of the software engineer in real-time software development. This course shows how real-time computing theory can be incorporated into software engineering practice. The report describes the rationale, structure, and content of the course. It also relates the authors experiences in teaching the course.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Abbott, R.; and Garcia-Molina, H. </author> <year> (1988). </year> <title> Scheduling Real-Time Transactions: A Performance Evaluation. </title> <institution> Princeton University, Dept. of Computer Science Technical Report CS-TR-146-88, Princeton, N.J. </institution>
Reference-contexts: Ref.: [12, 49, 51, 64] 19 Performance Analysis [46, 29: Chapter 9] 20 Performance Analysis Continued Add. Ref.: <ref> [1, 21, 48] </ref> 21 Hardware Issues, Hardware/Software Interfaces, Systems Integration, and Test [4, 29: Chapters 2 & 13] 22 Systems Integration Continued 23 Distributed Real-Time Systems, Reliability and Fault Tolerance [28; 29: Chapters 11 & 12] 24 Reliability and Fault Tolerance Continued Add.
Reference: 2. <author> Attiya, H.; and Lynch, N. A. </author> <year> (1991). </year> <title> Theory of Real-Time Systems: Project Survey. Foundations of Real-Time Computing: Formal Specifications and Methods. </title> <editor> van Tilborg, A. M.; and Koob, G. M., eds. </editor> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston. </address>
Reference-contexts: 1 Introduction [59] 2 Real-Time Project Formulation: Software Life Cycle Models Lecture Notes 3 Real-Time Requirements and Specification Methods [11, 29: Chapter 5] 4 Real-Time Requirements and Specification Methods Continued Add. Ref.: <ref> [2, 3, 13, 5 Scheduling Issues [42, 61, 63] </ref> 6 Case Study: Chimera Add. Ref.: [7, 14, 15, 7 Rate Monotonic Scheduling (RMS) and Rate Monotonic Analysis (RMA) [52, 53, 54] 8 RMA Continued Add.
Reference: 3. <author> Avrunin, G. S.; and Wileden, J. C. </author> <year> (1991). </year> <title> Automated Analysis of Concurrent and Real-Time Software. Foundations of Real-Time Computing: Formal Specifications and Methods. </title> <editor> van Tilborg, A. M.; and Koob, G. M., eds. </editor> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston. </address>
Reference-contexts: 1 Introduction [59] 2 Real-Time Project Formulation: Software Life Cycle Models Lecture Notes 3 Real-Time Requirements and Specification Methods [11, 29: Chapter 5] 4 Real-Time Requirements and Specification Methods Continued Add. Ref.: <ref> [2, 3, 13, 5 Scheduling Issues [42, 61, 63] </ref> 6 Case Study: Chimera Add. Ref.: [7, 14, 15, 7 Rate Monotonic Scheduling (RMS) and Rate Monotonic Analysis (RMA) [52, 53, 54] 8 RMA Continued Add.
Reference: 4. <author> Bagrodia, R.; and Shen, C. </author> <year> (1991). </year> <title> Integrated Design, Simulation, and Verification of Real-Time Systems. </title> <booktitle> 11th International Conference on Distributed Computing Systems, </booktitle> <month> May 20-24, </month> <pages> pp. 164-171. </pages>
Reference-contexts: Ref.: [12, 49, 51, 64] 19 Performance Analysis [46, 29: Chapter 9] 20 Performance Analysis Continued Add. Ref.: [1, 21, 48] 21 Hardware Issues, Hardware/Software Interfaces, Systems Integration, and Test <ref> [4, 29: Chapters 2 & 13] </ref> 22 Systems Integration Continued 23 Distributed Real-Time Systems, Reliability and Fault Tolerance [28; 29: Chapters 11 & 12] 24 Reliability and Fault Tolerance Continued Add.
Reference: 5. <author> Baker, T.; and Pazy, O. </author> <year> (1991). </year> <title> Real-Time Features for Ada 9X. </title> <booktitle> Proceedings of the 12th IEEE Real-Time Systems Symposium, </booktitle> <month> Dec. </month> <pages> 4-6, pp. 172-180. 16 </pages>
Reference-contexts: Ref.: [7, 14, 15, 7 Rate Monotonic Scheduling (RMS) and Rate Monotonic Analysis (RMA) [52, 53, 54] 8 RMA Continued Add. Ref.: [36] 9 Language Issues [26, 29: Chapter 3] 10 C++ Tutorial 11 Ada Tutorial <ref> [5] </ref> 12 Ada Continued Add. Ref. [19, 31, 38] 13 Cyclic Executive [18, 37, 50] 14 Other Software Architectures Add.
Reference: 6. <author> Baker, T.P.; and Shaw, A. </author> <year> (1988). </year> <title> The Cyclic Executive Model and Ada. </title> <booktitle> Proceedings of the 9th IEEE Real-Time Systems Symposium, </booktitle> <month> Dec. </month> <pages> 6-8, pp. 120-129. </pages>
Reference-contexts: Ref.: [36] 9 Language Issues [26, 29: Chapter 3] 10 C++ Tutorial 11 Ada Tutorial [5] 12 Ada Continued Add. Ref. [19, 31, 38] 13 Cyclic Executive [18, 37, 50] 14 Other Software Architectures Add. Ref.: <ref> [6, 27, 47] </ref> 15 Real-Time Kernels [10, 23, 29: Chapter 6] 6 By studying concepts presented in the lectures and associated readings, students should acquire the knowledge needed to perform the following actions.
Reference: 7. <author> Blazewicz, J. </author> <year> (1987). </year> <title> Selected Topics in Scheduling Theory. </title> <journal> Annals of Discrete Mathematics, </journal> <volume> Vol. 31, </volume> <pages> pp. 1-60. </pages>
Reference: 8. <author> Conn, H. C. et al. </author> <year> (1986). </year> <title> Software Tools and Techniques for Embedded Distributed Processing. </title> <publisher> Noyes Publications, </publisher> <address> Park Ridge, N. </address> <note> J. </note>
Reference-contexts: Ref.: [1, 21, 48] 21 Hardware Issues, Hardware/Software Interfaces, Systems Integration, and Test [4, 29: Chapters 2 & 13] 22 Systems Integration Continued 23 Distributed Real-Time Systems, Reliability and Fault Tolerance [28; 29: Chapters 11 & 12] 24 Reliability and Fault Tolerance Continued Add. Ref.: <ref> [8, 9, 21, 22, 44, 45, 55, 56, 57, 66] </ref> 25 Case Study: Real-Time Communications 26 Case Study: Radar Applications 26+ Project Presentations Lecture Topics Readings 7 List and define several software life cycle models.
Reference: 9. <author> Crichlow, J.M. </author> <year> (1988). </year> <title> Operating Systems for Distributed and Parallel Computing. An Introduction to Distributed and Parallel Computing. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, N.J. </address>
Reference-contexts: Ref.: [1, 21, 48] 21 Hardware Issues, Hardware/Software Interfaces, Systems Integration, and Test [4, 29: Chapters 2 & 13] 22 Systems Integration Continued 23 Distributed Real-Time Systems, Reliability and Fault Tolerance [28; 29: Chapters 11 & 12] 24 Reliability and Fault Tolerance Continued Add. Ref.: <ref> [8, 9, 21, 22, 44, 45, 55, 56, 57, 66] </ref> 25 Case Study: Real-Time Communications 26 Case Study: Radar Applications 26+ Project Presentations Lecture Topics Readings 7 List and define several software life cycle models.
Reference: 10. <author> Dannenberg, R.B. </author> <month> (Aug., </month> <year> 1993). </year> <title> Software Support for Interactive Multimedia Performance. </title> <booktitle> Interface, </booktitle> <volume> Vol. 22, No. 3, </volume> <pages> pp. 213-228. </pages>
Reference-contexts: Ref.: [36] 9 Language Issues [26, 29: Chapter 3] 10 C++ Tutorial 11 Ada Tutorial [5] 12 Ada Continued Add. Ref. [19, 31, 38] 13 Cyclic Executive [18, 37, 50] 14 Other Software Architectures Add. Ref.: [6, 27, 47] 15 Real-Time Kernels <ref> [10, 23, 29: Chapter 6] </ref> 6 By studying concepts presented in the lectures and associated readings, students should acquire the knowledge needed to perform the following actions.
Reference: 11. <author> Davis, A. M. </author> <month> (Sept. </month> <year> 1988). </year> <title> A Comparison of Techniques for the Specification of External System Behavior. </title> <journal> Communications of the ACM, </journal> <volume> Vol. 31, No. 9, </volume> <pages> pp. 1098-1115. </pages>
Reference-contexts: 1 Introduction [59] 2 Real-Time Project Formulation: Software Life Cycle Models Lecture Notes 3 Real-Time Requirements and Specification Methods <ref> [11, 29: Chapter 5] </ref> 4 Real-Time Requirements and Specification Methods Continued Add. Ref.: [2, 3, 13, 5 Scheduling Issues [42, 61, 63] 6 Case Study: Chimera Add. Ref.: [7, 14, 15, 7 Rate Monotonic Scheduling (RMS) and Rate Monotonic Analysis (RMA) [52, 53, 54] 8 RMA Continued Add.
Reference: 12. <author> Faulk, S. R.; and Parnas, D. L. </author> <month> (March </month> <year> 1988). </year> <title> On Synchronization in Hard-Real-Time Systems. </title> <journal> Communications of the ACM, </journal> <volume> Vol. 31, No. 3, </volume> <pages> pp. 274-287. </pages>
Reference-contexts: Compare and contrast real-time characteristics of some existing real-time systems. 3.2 Real-Time Project Formulation: Software Life Cycles (Lecture 2) Describe essential phases of software development. 16 Case Study: Real-Time Issues in Computerized Music 17 Operating System Issues [60; 29: Chapters 7 & 8] 18 OS Issues Continued Add. Ref.: <ref> [12, 49, 51, 64] </ref> 19 Performance Analysis [46, 29: Chapter 9] 20 Performance Analysis Continued Add.
Reference: 13. <author> Faulk et al. </author> <month> (Sept. </month> <year> 1992). </year> <title> The Core Method for Real-Time Requirements. </title> <journal> IEEE Software, </journal> <volume> Vol. 9, No. 5, </volume> <pages> pp. 22-33. </pages>
Reference-contexts: 1 Introduction [59] 2 Real-Time Project Formulation: Software Life Cycle Models Lecture Notes 3 Real-Time Requirements and Specification Methods [11, 29: Chapter 5] 4 Real-Time Requirements and Specification Methods Continued Add. Ref.: <ref> [2, 3, 13, 5 Scheduling Issues [42, 61, 63] </ref> 6 Case Study: Chimera Add. Ref.: [7, 14, 15, 7 Rate Monotonic Scheduling (RMS) and Rate Monotonic Analysis (RMA) [52, 53, 54] 8 RMA Continued Add.
Reference: 14. <author> Gonzalez, Jr., M. J. </author> <year> (1977). </year> <title> Deterministic Processor Scheduling. </title> <journal> Computing Surveys, </journal> <volume> Vol. 9, No. 3, </volume> <pages> pp. 173-204. </pages>
Reference: 15. <author> Graham, R. L.; Lawler, E. L.; Lenstra, J. K.; and Rinnooy Kan, A. H. G. </author> <year> (1979). </year> <title> Optimization and Approximation in Deterministic Sequencing and Scheduling: A Survey. </title> <journal> Annals of Discrete Mathematics, </journal> <volume> Vol. 5, </volume> <pages> pp. 287-326. </pages>
Reference: 16. <author> Haikala, I.; and Marijarvi, J. </author> <year> (1992). </year> <title> (Continuing) Education of Software Professionals. </title> <booktitle> Proceedings of the Software Engineering Education: SEI Conference, </booktitle> <month> Oct. </month> <pages> 5-7, </pages> <publisher> Springer-Verlag, Berlin, </publisher> <pages> pp. 180-193. </pages>
Reference: 17. <author> Hatley, D. J.; and Pirbhai, I. A. </author> <year> (1987). </year> <title> Strategies for Real-Time System Specification. </title> <publisher> Dorset House, </publisher> <address> New York. </address>
Reference: 18. <author> Hayes-Roth, Barbara. </author> <month> (May </month> <year> 1990). </year> <title> Architectural Foundations for Real-Time Performance in Intelligent Agents. </title> <booktitle> Real-Time Systems, </booktitle> <volume> Vol. 2, Nos. 1&2, </volume> <pages> pp. 99-125. </pages>
Reference-contexts: Ref.: [7, 14, 15, 7 Rate Monotonic Scheduling (RMS) and Rate Monotonic Analysis (RMA) [52, 53, 54] 8 RMA Continued Add. Ref.: [36] 9 Language Issues [26, 29: Chapter 3] 10 C++ Tutorial 11 Ada Tutorial [5] 12 Ada Continued Add. Ref. [19, 31, 38] 13 Cyclic Executive <ref> [18, 37, 50] </ref> 14 Other Software Architectures Add. Ref.: [6, 27, 47] 15 Real-Time Kernels [10, 23, 29: Chapter 6] 6 By studying concepts presented in the lectures and associated readings, students should acquire the knowledge needed to perform the following actions.
Reference: 19. <author> Hood, P.; and Grover, V. </author> <year> (1986). </year> <title> Designing Real-Time Systems in Ada. SofTech, Inc., </title> <type> Technical Report 1123-1. </type>
Reference-contexts: Ref.: [7, 14, 15, 7 Rate Monotonic Scheduling (RMS) and Rate Monotonic Analysis (RMA) [52, 53, 54] 8 RMA Continued Add. Ref.: [36] 9 Language Issues [26, 29: Chapter 3] 10 C++ Tutorial 11 Ada Tutorial [5] 12 Ada Continued Add. Ref. <ref> [19, 31, 38] </ref> 13 Cyclic Executive [18, 37, 50] 14 Other Software Architectures Add. Ref.: [6, 27, 47] 15 Real-Time Kernels [10, 23, 29: Chapter 6] 6 By studying concepts presented in the lectures and associated readings, students should acquire the knowledge needed to perform the following actions.
Reference: 20. <author> Hoover, C. L. </author> <year> (1993). </year> <title> TAP-D: A Model for Developing Specialization Tracks in Graduate Software Engineering Education. </title> <institution> Carnegie Mellon University, School of Computer Science Technical Report CMU-CS-93-181, </institution> <address> Pittsburgh, Pa. </address> <month> 17 </month>
Reference: 21. <author> Howes, N.R. </author> <year> (1991). </year> <title> Real-Time Ada Design Methodologies and Their Impact on Performance. Institute for Defense Analysis Paper P-2488, </title> <address> Arlington, Va. </address>
Reference-contexts: Ref.: [12, 49, 51, 64] 19 Performance Analysis [46, 29: Chapter 9] 20 Performance Analysis Continued Add. Ref.: <ref> [1, 21, 48] </ref> 21 Hardware Issues, Hardware/Software Interfaces, Systems Integration, and Test [4, 29: Chapters 2 & 13] 22 Systems Integration Continued 23 Distributed Real-Time Systems, Reliability and Fault Tolerance [28; 29: Chapters 11 & 12] 24 Reliability and Fault Tolerance Continued Add. <p> Ref.: [1, 21, 48] 21 Hardware Issues, Hardware/Software Interfaces, Systems Integration, and Test [4, 29: Chapters 2 & 13] 22 Systems Integration Continued 23 Distributed Real-Time Systems, Reliability and Fault Tolerance [28; 29: Chapters 11 & 12] 24 Reliability and Fault Tolerance Continued Add. Ref.: <ref> [8, 9, 21, 22, 44, 45, 55, 56, 57, 66] </ref> 25 Case Study: Real-Time Communications 26 Case Study: Radar Applications 26+ Project Presentations Lecture Topics Readings 7 List and define several software life cycle models.
Reference: 22. <author> Huang, J. </author> <year> (1991). </year> <title> Real-Time Transaction Processing: Design, Implementation and Performance Evaluation. </title> <institution> University of Massachusetts at Amherst, Dept. of Computer and Information Science Technical Report 91-41, </institution> <address> Amherst, Mass. </address>
Reference-contexts: Ref.: [1, 21, 48] 21 Hardware Issues, Hardware/Software Interfaces, Systems Integration, and Test [4, 29: Chapters 2 & 13] 22 Systems Integration Continued 23 Distributed Real-Time Systems, Reliability and Fault Tolerance [28; 29: Chapters 11 & 12] 24 Reliability and Fault Tolerance Continued Add. Ref.: <ref> [8, 9, 21, 22, 44, 45, 55, 56, 57, 66] </ref> 25 Case Study: Real-Time Communications 26 Case Study: Radar Applications 26+ Project Presentations Lecture Topics Readings 7 List and define several software life cycle models.
Reference: 23. <author> Isherwood, D. </author> <year> (1991). </year> <booktitle> Dos and Real Time? IEE Third International Conference on Software Engineering for Real-Time Systems, </booktitle> <month> Sept. </month> <pages> 16-18, pp. 79-85. </pages>
Reference-contexts: Ref.: [36] 9 Language Issues [26, 29: Chapter 3] 10 C++ Tutorial 11 Ada Tutorial [5] 12 Ada Continued Add. Ref. [19, 31, 38] 13 Cyclic Executive [18, 37, 50] 14 Other Software Architectures Add. Ref.: [6, 27, 47] 15 Real-Time Kernels <ref> [10, 23, 29: Chapter 6] </ref> 6 By studying concepts presented in the lectures and associated readings, students should acquire the knowledge needed to perform the following actions.
Reference: 24. <author> Jahanian, F.; and Mok, A. K. L. </author> <month> (Sept. </month> <year> 1986). </year> <title> Safety Analysis of Timing Properties in Real-Time Systems. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. SE-12, No. 9, </volume> <pages> pp. 890-904. </pages>
Reference: 25. <author> Jha, R.; and Eisenhauer, G. </author> <year> (1989). </year> <title> Distributed Ada-Approach and Implementation. </title> <booktitle> TRI-Ada Proceedings, </booktitle> <month> Oct. </month> <pages> 23-26, pp. 439-449. </pages>
Reference: 26. <author> Kligerman, E.; and Stoyenko, A. D. </author> <month> (Sept. </month> <year> 1986). </year> <title> Real-Time Euclid: Language for Reliable Real-Time Systems. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. SE-12, No. 9, </volume> <pages> pp. 941-949. </pages>
Reference-contexts: Ref.: [2, 3, 13, 5 Scheduling Issues [42, 61, 63] 6 Case Study: Chimera Add. Ref.: [7, 14, 15, 7 Rate Monotonic Scheduling (RMS) and Rate Monotonic Analysis (RMA) [52, 53, 54] 8 RMA Continued Add. Ref.: [36] 9 Language Issues <ref> [26, 29: Chapter 3] </ref> 10 C++ Tutorial 11 Ada Tutorial [5] 12 Ada Continued Add. Ref. [19, 31, 38] 13 Cyclic Executive [18, 37, 50] 14 Other Software Architectures Add.
Reference: 27. <author> Krishna, C.M.; and Lee, Y.H. </author> <month> (March </month> <year> 1992). </year> <title> Workshop Report: </title> <booktitle> 1991 Workshop on Architectural Aspects of Real-Time Systems. Real-Time Systems, </booktitle> <volume> Vol. 4, No. 1, </volume> <pages> pp. 85-87. </pages>
Reference-contexts: Ref.: [36] 9 Language Issues [26, 29: Chapter 3] 10 C++ Tutorial 11 Ada Tutorial [5] 12 Ada Continued Add. Ref. [19, 31, 38] 13 Cyclic Executive [18, 37, 50] 14 Other Software Architectures Add. Ref.: <ref> [6, 27, 47] </ref> 15 Real-Time Kernels [10, 23, 29: Chapter 6] 6 By studying concepts presented in the lectures and associated readings, students should acquire the knowledge needed to perform the following actions.
Reference: 28. <author> Lala, J.; Harper, R.; and Alger, L. </author> <month> (May </month> <year> 1991). </year> <title> A Design Approach for Ultrareli-able Real-Time Systems. </title> <journal> Computer, </journal> <volume> Vol. 24, No. 5, </volume> <pages> pp. 12-22. </pages>
Reference-contexts: Ref.: [12, 49, 51, 64] 19 Performance Analysis [46, 29: Chapter 9] 20 Performance Analysis Continued Add. Ref.: [1, 21, 48] 21 Hardware Issues, Hardware/Software Interfaces, Systems Integration, and Test [4, 29: Chapters 2 & 13] 22 Systems Integration Continued 23 Distributed Real-Time Systems, Reliability and Fault Tolerance <ref> [28; 29: Chapters 11 & 12] </ref> 24 Reliability and Fault Tolerance Continued Add. Ref.: [8, 9, 21, 22, 44, 45, 55, 56, 57, 66] 25 Case Study: Real-Time Communications 26 Case Study: Radar Applications 26+ Project Presentations Lecture Topics Readings 7 List and define several software life cycle models.
Reference: 29. <author> Laplante, P. A. </author> <year> (1993). </year> <title> Real-Time Systems Design and Analysis: An Engineers Handbook. </title> <publisher> IEEE Press, </publisher> <address> Piscataway, N. </address> <note> J. </note>
Reference-contexts: We added one week tutorials in rate monotonic scheduling and analysis and in Ada-support for the design and implementation of real-time systems. We also selected relevant chapters from a textbook to fill-in gaps in the course materials and to provide overviews of topic areas <ref> [29] </ref>. Students pursued self-defined exploratory projects in the full-semester course. Essential components for creating this course are a set of readings which adequately cover the course topics and several case studies which illustrate real-time software development issues across the software life cycle.
Reference: 30. <author> Lawson, J. T.; and Mariani, M. P. </author> <year> (1979). </year> <title> Distributed Data Processing System Design -- A Look at the Partitioning Problem. Tutorial: Distributed Systems Design, </title> <publisher> IEEE Computer Society Press, </publisher> <pages> pp. 225-230. </pages>
Reference: 31. <author> Lee, P.; and Nehman, W. (Nov.-Dec. </author> <year> 1991). </year> <title> An Overview of Real-Time Issues and Ada. </title> <journal> ACM Ada Letters, </journal> <volume> Vol. 11, No. 9, </volume> <pages> pp. 83-95. </pages>
Reference-contexts: Ref.: [7, 14, 15, 7 Rate Monotonic Scheduling (RMS) and Rate Monotonic Analysis (RMA) [52, 53, 54] 8 RMA Continued Add. Ref.: [36] 9 Language Issues [26, 29: Chapter 3] 10 C++ Tutorial 11 Ada Tutorial [5] 12 Ada Continued Add. Ref. <ref> [19, 31, 38] </ref> 13 Cyclic Executive [18, 37, 50] 14 Other Software Architectures Add. Ref.: [6, 27, 47] 15 Real-Time Kernels [10, 23, 29: Chapter 6] 6 By studying concepts presented in the lectures and associated readings, students should acquire the knowledge needed to perform the following actions.
Reference: 32. <author> Lee, I.; Davidson, S.; and Gerber, R. </author> <year> (1991). </year> <title> Communicating Shared Resources: </title>
References-found: 32

