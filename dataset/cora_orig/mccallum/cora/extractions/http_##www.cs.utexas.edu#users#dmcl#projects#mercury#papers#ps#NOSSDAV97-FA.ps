URL: http://www.cs.utexas.edu/users/dmcl/projects/mercury/papers/ps/NOSSDAV97-FA.ps
Refering-URL: http://www.cs.utexas.edu/users/dmcl/projects/mercury/papers.html
Root-URL: http://www.cs.utexas.edu
Email: E-mail: fpawang,ving@cs.utexas.edu,  
Phone: Telephone: (512) 471-9732, Fax: (512) 471-8885  
Title: Fair Airport Scheduling Algorithms  
Author: Pawan Goyal and Harrick M. Vin 
Web: URL: http://www.cs.utexas.edu/users/dmcl  
Address: Taylor Hall 2.124, Austin, Texas 78712-1188, USA  
Affiliation: Distributed Multimedia Computing Laboratory Department of Computer Sciences, University of Texas at Austin  
Abstract: We design a class of Fair Airport algorithms that combines Start-time Fair Queuing with a non-work conserving algorithm in Rate Controlled Service Discipline (RCSD) class. We derive fairness and deadline guarantees for FA servers and demonstrate that by appropriately choosing an algorithm from RCSD class, algorithms that either allocate only rate or achieve separation of rate and delay allocation and are fair over Fluctuation Constrained variable rate servers can be designed. This method leads to the design of the first fair algorithm that achieves separation of rate and delay allocation. We also show that the FA class contains algorithms with different implementation complexity and performance guarantees and thus enables tradeoffs between the two. Furthermore, since FA contains algorithms that are fair over variable rate servers, they can be employed for achieving hierarchical link sharing. Finally, we demonstrate that the FA algorithms can be generalized to achieve other objectives such as prioritized fair allocation of residual bandwidth. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. K. Baruah, J. E. Gehrke, and C. G. Plaxton. </author> <title> Fair On-Line Scheduling of a Dynamic Set of Tasks on a SingleResource. </title> <type> Technical Report TR-96-03, </type> <institution> Department of Computer Sciences, The University of Texas at Austin, </institution> <month> February </month> <year> 1996. </year>
Reference-contexts: Hence, in the worst-case, O (Q) computation may have to be performed in a single packet transmission time. This worst-case complexity can be reduced to O (logQ) by implementing the rate regulators and the GSQ and ASQ scheduling algorithms using a single augmented red-black tree data structure <ref> [1, 4, 12] </ref>. * Fairness Guarantee: Theorem 1 presented in Appendix A demonstrates that if the GSQ scheduler ensures (6), then in any interval [t 1 ; t 2 ] in which both flows f and m are continuously backlogged: j r f W m (t 1 ; t 2 )
Reference: [2] <author> J.C.R. Bennett and H. Zhang. </author> <title> Hierarchical Packet Fair Queuing Algorithms. </title> <booktitle> In Proceedings of SIG-COMM'96, </booktitle> <pages> pages 143156, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: may be desirable to employ: * Scheduling algorithms that allocate only rate and have delay guarantee similar to Weighted Fair Queuing (WFQ): Several fair algorithms that have delay guarantee similar to WFQ are known (for example, WFQ [6, 13], FFQ [15], SPFQ [14], WF 2 Q [3], WF 2 Q+ <ref> [2] </ref>, Leap Forward Virtual Clock [16], etc.). Most of these algorithms are either unfair over variable rate servers or require the number of bits transmitted to be counted to achieve fairness over variable rate servers [10].
Reference: [3] <author> J.C.R. Bennett and H. Zhang. </author> <title> W F 2 Q: Worst-case Fair Weighted Fair Queuing. </title> <booktitle> In Proceedings of IN-FOCOM'96, </booktitle> <pages> pages 120127, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: on packet delay, it may be desirable to employ: * Scheduling algorithms that allocate only rate and have delay guarantee similar to Weighted Fair Queuing (WFQ): Several fair algorithms that have delay guarantee similar to WFQ are known (for example, WFQ [6, 13], FFQ [15], SPFQ [14], WF 2 Q <ref> [3] </ref>, WF 2 Q+ [2], Leap Forward Virtual Clock [16], etc.). Most of these algorithms are either unfair over variable rate servers or require the number of bits transmitted to be counted to achieve fairness over variable rate servers [10].
Reference: [4] <author> T. H. Cormen and C. E. Leiserson. </author> <title> Introduction to Algorithms. </title> <publisher> MIT Press, </publisher> <address> Cambridge MA, </address> <year> 1990. </year>
Reference-contexts: Hence, in the worst-case, O (Q) computation may have to be performed in a single packet transmission time. This worst-case complexity can be reduced to O (logQ) by implementing the rate regulators and the GSQ and ASQ scheduling algorithms using a single augmented red-black tree data structure <ref> [1, 4, 12] </ref>. * Fairness Guarantee: Theorem 1 presented in Appendix A demonstrates that if the GSQ scheduler ensures (6), then in any interval [t 1 ; t 2 ] in which both flows f and m are continuously backlogged: j r f W m (t 1 ; t 2 )
Reference: [5] <author> R.L. Cruz. </author> <title> Service Burstiness and Dynamic Bursti-ness Measures: A Framework. Journal of High Speed Networks, </title> <address> 2:105127, </address> <year> 1992. </year>
Reference-contexts: Finally, Section 6 summarizes the results of the paper. 2 Design of Fair Airport Scheduling Al gorithms The class of Fair Airport (FA) scheduling algorithms is inspired by and derives its name from the class of Airport scheduling algorithms proposed in <ref> [5] </ref>. In an Airport scheduling algorithm, every packet of a flow on arrival joins a rate regulator for the flow and an Auxiliary Service Queue (ASQ) (see Figure 1).
Reference: [6] <author> A. Demers, S. Keshav, and S. Shenker. </author> <title> Analysis and Simulation of a Fair Queueing Algorithm. </title> <booktitle> In Proceedings of ACM SIGCOMM, </booktitle> <pages> pages 112, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: of a scheduling algorithm is to provide pre-specified bounds on packet delay, it may be desirable to employ: * Scheduling algorithms that allocate only rate and have delay guarantee similar to Weighted Fair Queuing (WFQ): Several fair algorithms that have delay guarantee similar to WFQ are known (for example, WFQ <ref> [6, 13] </ref>, FFQ [15], SPFQ [14], WF 2 Q [3], WF 2 Q+ [2], Leap Forward Virtual Clock [16], etc.). Most of these algorithms are either unfair over variable rate servers or require the number of bits transmitted to be counted to achieve fairness over variable rate servers [10].
Reference: [7] <author> L. Georgiadis, R. Guerin, V. Peris, and K.N. Sivara-jan. </author> <title> Efficient Network QoS Provisioning Based on per Node Traffic Shaping. </title> <booktitle> In Proceedings of INFO-COM'96, </booktitle> <pages> pages 102110, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: To address this limitation, we design a class of Fair Airport (FA) algorithms. An algorithm in FA class combines SFQ with a non-work conserving algorithm in Rate Controlled Service Discipline (RCSD) class <ref> [7, 18] </ref>. We derive fairness and deadline guarantees for FA servers and demonstrate that by appropriately choosing an algorithm from RCSD class, algorithms that either allocate only rate or achieve separation of rate and delay allocation and are fair over Fluctuation Constrained variable rate servers can be designed. <p> However, whereas the to achieve prioritized fair allocation of residual bandwidth former can support only predetermined set of delay vectors, the latter can support any [17]. * The concept of Fair Airport algorithm is general. The rate controller can be generalized as in <ref> [7] </ref> to enforce different traffic constraints. It can be shown that the generalized FA class continues to remain fair. * The FA algorithms can be generalized to achieve prioritized fair allocation of residual bandwidth which may be desirable to support high throughput flows in max-min fair networks [11].
Reference: [8] <author> P. Goyal and H. M. Vin. </author> <title> Generalized Guaranteed Rate Scheduling Algorithms: A Framework. </title> <note> In IEEE/ACM Transactions on Networking (to appear). Also available as technical report TR95-30, </note> <institution> Department of Computer Sciences, The University of Texas at Austin. </institution>
Reference-contexts: guarantee: Theorem 2 presented in Appendix A demonstrates that the delay guarantee of a FA server is given as: L F A (p f ) EAT (p f ; r f ) + fi f (8) This guarantee is employed to determine bounds on various QoS guarantees for a flow <ref> [8] </ref>. <p> This guarantee is employed to improve upon the performance bounds determined from delay guarantee when the actual service received by a flow is better than that guaranteed by the server [10]. The end-to-end delay and delay-cum-throughput guarantee of a network of servers are derived in <ref> [8] </ref> and [10], respectively. 4 Two Instantiations of Fair Airport In this section, we instantiate the GSQ scheduler to Virtual Clock and Delay EDD to demonstrate that FA algorithms can achieve the delay guarantee of WFQ as well as separation of rate and delay allocation, respectively.
Reference: [9] <author> P. Goyal, H. M. Vin, and H. Cheng. </author> <title> Start-time Fair Queuing: A Scheduling Algorithm for Integrated Services Packet Switching Networks. </title> <booktitle> In Proceedings of ACM SIGCOMM'96, </booktitle> <pages> pages 157168, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Throughput intensive applications like ftp, on the other hand, require network resources to be allocated such that the throughput is maximized. A network meets these requirements primarily by appropriately scheduling its resources. An examination of application and network requirements in <ref> [9] </ref> revealed that a suitable packet scheduling algorithm for integrated services network should: (1) achieve low average as well as maximum delay for low throughput applications (e.g., interactive audio, telnet, etc.); (2) be fair over variable rate servers; and (3) be computation-ally efficient. <p> To meet these requirements, Start-time Fair Queuing (SFQ) was developed in <ref> [9] </ref>. Though SFQ meets these requirements, the maximum delay of packets in SFQ depends on the maximum packet length of all the flows at a server. <p> We also show that the FA class contains algorithms with different implementation complexity and performance guarantees and thus enables tradeoffs between the two. Furthermore, since FA contains algorithms that are fair over variable rate servers, they can be employed for achieving hierarchical link sharing <ref> [9] </ref>. Finally, the FA algorithms can be generalized to achieve other objectives such as prioritized fair allocation of residual bandwidth. The rest of the paper is structured as follows. We present the design of FA algorithms in Section 2 and summarize their properties in Section 3.
Reference: [10] <author> P. Goyal, H. M. Vin, and H. Cheng. </author> <title> Start-time Fair Queuing: A Scheduling Algorithm for Integrated Ser vices Packet Switching Networks. </title> <type> Technical Report TR-96-02, </type> <institution> Department of Computer Sciences, The University of Texas at Austin, </institution> <month> January </month> <year> 1996. </year> <note> Avail able via URL http://www.cs.utexas.edu/users/dmcl. </note>
Reference-contexts: Most of these algorithms are either unfair over variable rate servers or require the number of bits transmitted to be counted to achieve fairness over variable rate servers <ref> [10] </ref>. <p> This guarantee is employed to improve upon the performance bounds determined from delay guarantee when the actual service received by a flow is better than that guaranteed by the server <ref> [10] </ref>. The end-to-end delay and delay-cum-throughput guarantee of a network of servers are derived in [8] and [10], respectively. 4 Two Instantiations of Fair Airport In this section, we instantiate the GSQ scheduler to Virtual Clock and Delay EDD to demonstrate that FA algorithms can achieve the delay guarantee of WFQ <p> This guarantee is employed to improve upon the performance bounds determined from delay guarantee when the actual service received by a flow is better than that guaranteed by the server <ref> [10] </ref>. The end-to-end delay and delay-cum-throughput guarantee of a network of servers are derived in [8] and [10], respectively. 4 Two Instantiations of Fair Airport In this section, we instantiate the GSQ scheduler to Virtual Clock and Delay EDD to demonstrate that FA algorithms can achieve the delay guarantee of WFQ as well as separation of rate and delay allocation, respectively. <p> Theorem 12 in <ref> [10] </ref> demonstrates that if Q is the set of flows serviced by the server and 8t &gt; 0 : n2Q ~ l n l n (15) and the server is a (C; ffi (C)) Fluctuation Constrained Delay EDD server, then the departure time of packet p f , denoted by L <p> Hence, FA contains scheduling algo rithms that are fair over variable rate servers. * Scheduling algorithms in FA that achieve fairness over variable rate servers meet a key requirement of hierarchical fair schedulers and can be employed to support hierarchical link sharing <ref> [10] </ref>. Furthermore, as Lemma 1 demonstrates, the throughput guaranteed to a flow by a FC FA server can be modeled as a FC server. Hence, analysis in [10] can be used to provide guarantees to flows when a link bandwidth is hierar chically shared using a FA algorithm. * It contains <p> achieve fairness over variable rate servers meet a key requirement of hierarchical fair schedulers and can be employed to support hierarchical link sharing <ref> [10] </ref>. Furthermore, as Lemma 1 demonstrates, the throughput guaranteed to a flow by a FC FA server can be modeled as a FC server. Hence, analysis in [10] can be used to provide guarantees to flows when a link bandwidth is hierar chically shared using a FA algorithm. * It contains algorithms with different implementation complexity and performance guarantees. For example, a static priority GSQ scheduler is more efficient than a Delay EDD scheduler.
Reference: [11] <author> Q. Ma, P. Steenkiste, and H. Zhang. </author> <title> Routing High bandwidth Traffic in Max-min Fair Networks. </title> <booktitle> In Pro ceedings of SIGCOMM'96, </booktitle> <pages> pages 206217, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: It can be shown that the generalized FA class continues to remain fair. * The FA algorithms can be generalized to achieve prioritized fair allocation of residual bandwidth which may be desirable to support high throughput flows in max-min fair networks <ref> [11] </ref>. To achieve this objective, let the set of flows served by a server be partitioned into various priority classes.
Reference: [12] <author> E. M. McCreight. </author> <title> Priority Search Trees. </title> <journal> SIAM Jour nal on Computing, </journal> <volume> 14:257276, </volume> <year> 1985. </year>
Reference-contexts: Hence, in the worst-case, O (Q) computation may have to be performed in a single packet transmission time. This worst-case complexity can be reduced to O (logQ) by implementing the rate regulators and the GSQ and ASQ scheduling algorithms using a single augmented red-black tree data structure <ref> [1, 4, 12] </ref>. * Fairness Guarantee: Theorem 1 presented in Appendix A demonstrates that if the GSQ scheduler ensures (6), then in any interval [t 1 ; t 2 ] in which both flows f and m are continuously backlogged: j r f W m (t 1 ; t 2 )
Reference: [13] <author> A.K. Parekh. </author> <title> A Generalized Processor Sharing Ap proach to Flow Control in Integrated Services Net works. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engi neering and Computer Science, MIT, </institution> <year> 1992. </year>
Reference-contexts: of a scheduling algorithm is to provide pre-specified bounds on packet delay, it may be desirable to employ: * Scheduling algorithms that allocate only rate and have delay guarantee similar to Weighted Fair Queuing (WFQ): Several fair algorithms that have delay guarantee similar to WFQ are known (for example, WFQ <ref> [6, 13] </ref>, FFQ [15], SPFQ [14], WF 2 Q [3], WF 2 Q+ [2], Leap Forward Virtual Clock [16], etc.). Most of these algorithms are either unfair over variable rate servers or require the number of bits transmitted to be counted to achieve fairness over variable rate servers [10].
Reference: [14] <author> D. Stiliadis. </author> <title> Traffic Scheduling in Packet-Switched Networks: Analysis, Design and Implementation. </title> <type> PhD thesis, </type> <institution> Department of Computer Science and Engineering, University of California at Santa Cruz, </institution> <year> 1996. </year>
Reference-contexts: to provide pre-specified bounds on packet delay, it may be desirable to employ: * Scheduling algorithms that allocate only rate and have delay guarantee similar to Weighted Fair Queuing (WFQ): Several fair algorithms that have delay guarantee similar to WFQ are known (for example, WFQ [6, 13], FFQ [15], SPFQ <ref> [14] </ref>, WF 2 Q [3], WF 2 Q+ [2], Leap Forward Virtual Clock [16], etc.). Most of these algorithms are either unfair over variable rate servers or require the number of bits transmitted to be counted to achieve fairness over variable rate servers [10].
Reference: [15] <author> D. Stiliadis and A. Varma. </author> <title> Design and Analysis of Frame-based Fair Queueing: A New Traffic Schedul ing Algorithm for Packet Switched Networks. </title> <booktitle> In Pro ceedings of SIGMETRICS'96, </booktitle> <month> May </month> <year> 1996. </year>
Reference-contexts: algorithm is to provide pre-specified bounds on packet delay, it may be desirable to employ: * Scheduling algorithms that allocate only rate and have delay guarantee similar to Weighted Fair Queuing (WFQ): Several fair algorithms that have delay guarantee similar to WFQ are known (for example, WFQ [6, 13], FFQ <ref> [15] </ref>, SPFQ [14], WF 2 Q [3], WF 2 Q+ [2], Leap Forward Virtual Clock [16], etc.). Most of these algorithms are either unfair over variable rate servers or require the number of bits transmitted to be counted to achieve fairness over variable rate servers [10].
Reference: [16] <author> S. Suri, G. Varghese, and G. Chandramenon. </author> <title> Leap Forward Virtual Clock: A New Fair Queuing Scheme with Guaranteed Delays and Throughput fairness. </title> <booktitle> In Proceedings of INFOCOM'97, </booktitle> <month> April </month> <year> 1997. </year>
Reference-contexts: * Scheduling algorithms that allocate only rate and have delay guarantee similar to Weighted Fair Queuing (WFQ): Several fair algorithms that have delay guarantee similar to WFQ are known (for example, WFQ [6, 13], FFQ [15], SPFQ [14], WF 2 Q [3], WF 2 Q+ [2], Leap Forward Virtual Clock <ref> [16] </ref>, etc.). Most of these algorithms are either unfair over variable rate servers or require the number of bits transmitted to be counted to achieve fairness over variable rate servers [10].
Reference: [17] <author> H. Zhang and D. Ferrari. </author> <title> Rate Controlled Static Prior ity Queueing. </title> <booktitle> In Proceedings of INFOCOM'93, </booktitle> <volume> vol ume 2, </volume> <pages> pages 227236, </pages> <year> 1993. </year>
Reference-contexts: For example, a static priority GSQ scheduler is more efficient than a Delay EDD scheduler. However, whereas the to achieve prioritized fair allocation of residual bandwidth former can support only predetermined set of delay vectors, the latter can support any <ref> [17] </ref>. * The concept of Fair Airport algorithm is general. The rate controller can be generalized as in [7] to enforce different traffic constraints.
Reference: [18] <author> H. Zhang and D. Ferrari. </author> <title> Rate-controlled Ser vice Disciplines. Journal of High Speed Networks, </title> <address> 3(4):389412, </address> <year> 1994. </year>
Reference-contexts: To address this limitation, we design a class of Fair Airport (FA) algorithms. An algorithm in FA class combines SFQ with a non-work conserving algorithm in Rate Controlled Service Discipline (RCSD) class <ref> [7, 18] </ref>. We derive fairness and deadline guarantees for FA servers and demonstrate that by appropriately choosing an algorithm from RCSD class, algorithms that either allocate only rate or achieve separation of rate and delay allocation and are fair over Fluctuation Constrained variable rate servers can be designed.
Reference: [19] <author> Q. Zheng and K. Shin. </author> <title> On the Ability of Estab lishing Real-Time Channels in Point-to-Point Packet switching Networks. </title> <journal> IEEE Transactions on Commu nications, </journal> <volume> 42(3):10961105, </volume> <month> March </month> <year> 1994. </year>
Reference-contexts: Due to high computational complexity, it may not be feasible to employ (15) as the schedulability test. Hence, conditions stronger than (15) that have lower computational complexity have been developed in <ref> [19] </ref>. The delay guarantee holds under the stronger conditions as well.
References-found: 19

