URL: http://www.cs.umr.edu/techreports/91-14.ps
Refering-URL: http://www.cs.umr.edu/techreports/
Root-URL: 
Email: ff@cs.umr.edu  
Title: APPLICATION-ORIENTED FAULT-TOLERANT PARALLEL BRANCH BOUND  
Author: Aggie Y. Sun and Bruce McMillin 
Note: This work was supported in part by the National Science Foundation under Grant Numbers MIP-8909749 and CDA-8820714, and in part by the AMOCO Faculty Development Program.  
Address: Rolla, Missouri 65401  
Affiliation: Department of Computer Science University of Missouri at Rolla  
Date: September 3, 1991  
Pubnum: CSC-91-014  
Abstract-found: 0
Intro-found: 1
Reference: [ChAv83] <author> Chen, L. and Avizienis, A., </author> <title> "N-Version Programming: A Fault-Tolerance Approach to Reliability of Software Operation," </title> <booktitle> 13th Annual Int'l Symposium on Fault Tolerant Computing, </booktitle> <month> June </month> <year> 1983, </year> <pages> pp. 120-126. </pages>
Reference: [HoSL78] <author> Hopkins, A. Smith, B., Lala, J., </author> <title> ``FTMP-A Highly Reliable Fault Tolerant Multiprocessor for Aircraft,'' </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> Vol. 66, No. 10, </volume> <month> October </month> <year> 1978, </year> <pages> pp. 1221-1239. </pages>
Reference: [McNi88] <author> McMillin, B. and Ni, </author> <title> L.,"Executable Assertion Development for the Distributed Parallel Environment," </title> <booktitle> Proceedings of the 12th Int'l. COMPSAC, </booktitle> <address> Chicago, IL, </address> <month> October, </month> <year> 1988, </year> <pages> pp. 284-291. </pages>
Reference: [McNi89] <author> McMillin, B. and Ni, L., </author> <title> "Reliable Distributed Sorting through the Application-Oriented Fault Tolerance Paradigm," </title> <booktitle> The 9th Int'l Conference on Distributed Computing Symposium, </booktitle> <year> 1989. </year>
Reference-contexts: In applying this technique to the class of Branch & Bound problems, assertions were, for the most part, in the form of if-then ERROR statements, producing very little overhead. For some applications, such as the bitonic sort <ref> [McNi89] </ref> where only assertions of this form are needed, Application-Oriented Fault Toler ance presents an attractive solution to fault tolerance.
Reference: [Quin88] <author> Quinn, M. J., </author> <title> Designing Efficient Algorithms for Parallel Computers, </title> <publisher> McGraw Hill, </publisher> <year> 1988, </year> <pages> pp. 185-195. </pages>
Reference: [Vorn87] <author> Vornberger, O., </author> <title> "Fault Tolerant Parallelization of Branch-&-Bound Algorithms," </title> <booktitle> The 7th Distributed Computing Symposium, </booktitle> <year> 1987, </year> <pages> pp. 194-199. </pages>
Reference-contexts: This paper also described the process of acquiring the necessary assertions for the Application-Oriented Fault-Tolerant constraints based on the characteristics and behavior of the problem.. Other work has been done for the class of Branch and Bound Problems but do not consider byzantine faults <ref> [Vorn87] </ref>. The N Puzzle Problem may seem specific, but the tree abstraction and the bound evaluated at each node are common to the class of Branch and Bound algorithms, thus, Application-Oriented Fault Tolerance can be incorporated in the same manner with a few minor adjustments.
Reference: [Wens78] <editor> Wensley, J., et. al. ``SIFT: </editor> <title> The design and analysis of a fault-tolerant computer for aircraft control,'' </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> Vol. 66, </volume> <month> October </month> <year> 1978, </year> <pages> pp. 1240-1255. </pages>
References-found: 7

