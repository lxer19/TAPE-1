URL: http://www.cs.tamu.edu/research/robotics/Amato/Papers/cg96.ps.gz
Refering-URL: http://www.cs.tamu.edu/faculty/amato/dsmft/publications.html
Root-URL: http://www.cs.tamu.edu
Title: On computing Voronoi diagrams by divide-prune-and-conquer  
Author: NANCY M. AMATO EDGAR A. RAMOS amat o@c s t amu. e du r amos e @di mac s r ut ge r s e du 
Affiliation: Texas A&M University DIMACS/Rutgers University  
Abstract: Using a divide, prune, and conquer approach based on geometric partitioning, we obtain: (1) An output sensitive algorithmfor computing a weighted Voronoi diagram in R 4 (the projection of certain polyhedra in R 5 ) thatruns in time O((n + f) log 3 f) where n is the number of sites and f is the number of output cells; and (2) a deterministic parallel algorithm in the EREWPRAM model for computing an algebraic planar Voronoi diagram(in which bisectors between sites are simple curves consisting of a constant number of algebraic pieces of constant degree) that runs in time O(log 2 n) using optimal O(n log n) work. The fi rstresult implies an algo-rithmfor the problems of computing the convex hull of a pointsetand the intersection of a setof halfspaces in R 5 , and computing the Euclidean Voronoi diagram in R 4 . The second result implies both sequential and parallel work-optimal deterministic algorithms for a number of Voronoi diagram problems (including line segments in the plane), and other non-Voronoi diagram problems that can fi t in the framework (including the intersection of equal radius balls in R 3 and some lower envelope problems in R 3 ). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Alt and O. Schwarzkopf. </author> <title> The Voronoi diagram of curved objects. </title> <booktitle> In Proc. 11th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> 89-97, </pages> <year> 1995. </year>
Reference-contexts: The result for ball intersections follows eitherby aprojection onto the plane, orby doing everything on a2-sphere. In the final version, we plan to include a more complete list of applications. The work of Alt and Schwarzkopf <ref> [1] </ref> seems relevant to broaden the scope of our algorithm.
Reference: [2] <author> N.M. Amato, </author> <title> M.T. Goodrich, and E.A. Ramos. Parallel algorithms for higher-dimensional convex hulls. </title> <booktitle> In Proc. 35th Annu. IEEE Sympos. Found. Comput. Sci. (FOCS 94), </booktitle> <pages> 683-694, </pages> <year> 1994. </year>
Reference-contexts: In another example, computing the intersection of equal radius balls in R 3 , this resultsin the only known optimal deterministic sequential algorithm. This latter result was announced in Amato, Goodrich and Ramos <ref> [2] </ref>, butthe presentation there was very brief 1 . Here, we remedy that and, at the same time, within a more general framework, give a cleaner algorithm that includes a larger family of problems. <p> It dates back to Clarkson and Shor's [12] randomized outputsensitive algorithm for computing halfspace intersections in R 3 . That approach was refined by Reif and Sen [27] and Amato, Goodrich and Ramos <ref> [2] </ref> with the aim of obtaining parallel algorithms for halfspace intersections in R 3 . Chan, Snoeyink and Yap [7, 8] extended the approach to halfspace intersections in R 4 . <p> The non redundant portion of the contour C fl (t ) is the restriction of C (t ) to t fl . The (green) edges 12 The factor r ffi can be dropped completely if resampling is used, both sequentially and in parallel <ref> [11, 18, 2] </ref>; that results in a (1=r)- cutting of size O (r). that bound the redundant portion are called attaching edges. They generate a subdivision D (t ) of t into the components of the redundant and non redundant portions.
Reference: [3] <author> N. M. Amato, M. T. Goodrich and E. A. Ramos. </author> <title> Computing faces in segment and simplex arrangements. </title> <booktitle> In Proc. 26th Annual ACM Sympos. TheoryComput., </booktitle> <pages> 672-682, </pages> <year> 1995. </year>
Reference-contexts: Cutting. Under the assumptions above, the following 11 Note thatitis possibleto have more thanone component, forex-ample, inthe Voronoi diagramof line segments, orin the intersection of unit balls in R 3 . geometric sampling result holds, and is the basis for the algorithm. See <ref> [3] </ref>.
Reference: [4] <author> F. Aurenhammer. Powerdiagrams: </author> <title> properties, algorithms and applications. </title> <journal> SIAM J. Comput., </journal> <month> 16 </month> <year> (1987) </year> <month> 78-96. </month>
Reference-contexts: Thus, for an arbitrary collection, H, of such halfspaces in R d+1 , we call such a projection in R d , V (H), a weighted Voronoi diagram; a weighted Voronoi diagram is sometimes referred to as a power diagram <ref> [4] </ref>. Optimal worst case algorithms (both simple randomized (Clarkson and Shor [12], Seidel [29])) and complicated deterministic (Chazelle [10]) are known for general d; their running time is O (n log n + n dd=2e ).
Reference: [5] <author> H. Bronnimann, B. Chazelle, and J. Matousek. </author> <title> Productrange spaces, sensitive sampling, </title> <booktitle> and derandomization. In Proc. 34th Annu. IEEE Sympos. Found. Comput. Sci. (FOCS 93), </booktitle> <pages> 400-409, </pages> <year> 1993. </year>
Reference-contexts: Chan, Snoeyink and Yap [7, 8] extended the approach to halfspace intersections in R 4 . The approach of Edelsbrunner and Shi [17] also fits in the same framework, and it is even closer to 1 Anotheralgorithm presentedin <ref> [5] </ref> is flawedand apparentlyhas notbeen fixed. the primal/dual approach in [8], which we are adopting here (see remark below).
Reference: [6] <author> T.M. Chan. </author> <title> Outputsensitive results on convex hulls, extreme points, </title> <journal> andrelatedproblemsInProc. 11thAnnu. ACMSympos. Comput. Geom., </journal> <pages> 10-19, </pages> <year> 1995. </year>
Reference-contexts: On the other hand, the gift wrapping approach by Swart [31] has running time O (nf ), and has been improved by Chan <ref> [6] </ref> (for d = 3; 4 the resulting time is O (n log f + (nf ) 4=3 log c n)). <p> Our new insightleads to an approach for arbitrary dimension, but unfortunately it runs into difficulties, so the results that are obtained in higher dimensions are notvery interesting. As in [8], some marginal improvementis possible using tradeoffs between preprocessing and query times in closest point data structures <ref> [6] </ref>. A negative feature of both Chan et al.'s algorithm and ours is thatnondegeneracy is needed for their analysis. To handle arbitrary input the algorithm is supposed to use a symbolic perturbation technique [15, 32].
Reference: [7] <author> T.M. Chan, J. Snoeyink, and C.-K. Yap. </author> <title> Outputsensitive construction of polytopes in four dimensionsand clipped Voronoi diagrams in three. </title> <booktitle> In Proc. 6th Annu. ACM-SIAM Sympos. Discrete Algorithms, </booktitle> <pages> 282-291, </pages> <year> 1995. </year>
Reference-contexts: On the other hand, the gift wrapping approach by Swart [31] has running time O (nf ), and has been improved by Chan [6] (for d = 3; 4 the resulting time is O (n log f + (nf ) 4=3 log c n)). Chan, Snoeyink and Yap <ref> [7, 8] </ref> made important progress by giving an algorithm that runs in time O ((n + f ) log 2 f ) for d = 3. Our contribution is to extend this to d = 4 with an additional log factor: O ((n + f ) log 3 f ). <p> That approach was refined by Reif and Sen [27] and Amato, Goodrich and Ramos [2] with the aim of obtaining parallel algorithms for halfspace intersections in R 3 . Chan, Snoeyink and Yap <ref> [7, 8] </ref> extended the approach to halfspace intersections in R 4 . <p> In step 4, C is an appropriate constant. 2 bd, int and cl are used to denote the topological operations of boundary, interior and closure respectively. Remark. The original output sensitive algorithm by Chan et al. <ref> [7] </ref> was presented in the dual space, thatis, as an algorithm that computes the intersection of halfspaces. Remaining in that context we found the extension. Their revised version [8] uses both the primal and dual. <p> An alternative, as pointed out in [8] is the partitioning introduced by Meggido [26] (see [14]). This is worse in its asymptotic growth with d, but comparable for sufficiently small d. Chan et al <ref> [7, 8] </ref> combine the first step of Meggido's approach (pairing hyperplanes and projecting down their pairwise intersections) and a cutting in D for hyperplanes. This does not seem better than the sampling scheme above.
Reference: [8] <author> T.M. Chan, J. Snoeyink, and C.-K. Yap. </author> <title> Primal dividing and dual pruning: Outputsensitive construction of 4-d polytopes and 3-d Voronoi diagrams. </title> <note> Submitted to Discrete Comput. Geom. </note>
Reference-contexts: On the other hand, the gift wrapping approach by Swart [31] has running time O (nf ), and has been improved by Chan [6] (for d = 3; 4 the resulting time is O (n log f + (nf ) 4=3 log c n)). Chan, Snoeyink and Yap <ref> [7, 8] </ref> made important progress by giving an algorithm that runs in time O ((n + f ) log 2 f ) for d = 3. Our contribution is to extend this to d = 4 with an additional log factor: O ((n + f ) log 3 f ). <p> Our new insightleads to an approach for arbitrary dimension, but unfortunately it runs into difficulties, so the results that are obtained in higher dimensions are notvery interesting. As in <ref> [8] </ref>, some marginal improvementis possible using tradeoffs between preprocessing and query times in closest point data structures [6]. A negative feature of both Chan et al.'s algorithm and ours is thatnondegeneracy is needed for their analysis. <p> That approach was refined by Reif and Sen [27] and Amato, Goodrich and Ramos [2] with the aim of obtaining parallel algorithms for halfspace intersections in R 3 . Chan, Snoeyink and Yap <ref> [7, 8] </ref> extended the approach to halfspace intersections in R 4 . <p> Chan, Snoeyink and Yap [7, 8] extended the approach to halfspace intersections in R 4 . The approach of Edelsbrunner and Shi [17] also fits in the same framework, and it is even closer to 1 Anotheralgorithm presentedin [5] is flawedand apparentlyhas notbeen fixed. the primal/dual approach in <ref> [8] </ref>, which we are adopting here (see remark below). A subproblem has as input a pair (; S ) where X and S S, and computes the restriction of V ( S) to , denoted V (S); S is selected so that V (S ) = V (S). <p> Remark. The original output sensitive algorithm by Chan et al. [7] was presented in the dual space, thatis, as an algorithm that computes the intersection of halfspaces. Remaining in that context we found the extension. Their revised version <ref> [8] </ref> uses both the primal and dual. Since this approach leads to a presentation that it is easier to visualize, and possibly more appropriate for an implementation, we follow it here. <p> With probability at least 1/2 6 Algorithmically, this must be enforced through symbolic perturbation. This is in addition to the general position assumption for S already stated. 7 As in <ref> [8] </ref>, for a complex in P we use superscript for a dual restriction (with respect to a region in D), and a lowerscript for a primal restriction (with respectto a region in P). the desired cutting is obtained. This can be improved by the approach of resampling. <p> This can be improved by the approach of resampling. However, from a rough calculation, it appears the size of, say, a (1=2)-cutting is impractically large already for d = 3; 4 which are our main interest. An alternative, as pointed out in <ref> [8] </ref> is the partitioning introduced by Meggido [26] (see [14]). This is worse in its asymptotic growth with d, but comparable for sufficiently small d. <p> An alternative, as pointed out in [8] is the partitioning introduced by Meggido [26] (see [14]). This is worse in its asymptotic growth with d, but comparable for sufficiently small d. Chan et al <ref> [7, 8] </ref> combine the first step of Meggido's approach (pairing hyperplanes and projecting down their pairwise intersections) and a cutting in D for hyperplanes. This does not seem better than the sampling scheme above. <p> The problem of whether it is possible to reduce these constants to practical values forsmall d, say d 4, deserves careful consideration. Refi ning a region with a halfspace. In a divide step, is split into smaller polytopes via a cutting. As in <ref> [8] </ref>, it is sufficient to consider a refinement t = " h 0 where h 0 is a halfspace bounded by a hyperplane h = fx 2 D : m x = m d g in D with m 6= 0. 8 V h is a (d 1)-dimensional Voronoi diagram. <p> For apoint p, to determine on which side of D h it lies, perform a point location for M (p) in M (D h ). 2.3 The algorithm Key idea. The key idea in the algorithm <ref> [8] </ref> is, when recursing on D, to restrictwork to fl P to fl : instead of computing D , the subproblem computes D fl . <p> The components of fl are not dealt with independently because it is difficult to split S fl between them. The following outline follows closely that in <ref> [8] </ref>: Algorithm Hul l (; bc ( fl ); S fl ) 1. If j S fl j C then return D fl ( S fl ) in O (1) time 2. Compute a (1=c)-cutting T () for (; S fl ) 3. <p> Other components are either completely inside or outside. This can be determined with the pointlocation used to determine interior points. Further details are given in <ref> [8] </ref>, and will be given in the complete version of this paper. Determining bc ( fl ). For a ridge r in bc ( fl ), we want to determine whether r 0 = M (r) is a facet in bc ( fl ) (note the difference in dimension). <p> Since the depth of each tree is O (log n), one obtains O ((n + f ) log d n) as a global bound for all conflict lists. A lemma of Edelsbrunner and Shi [17] refined in <ref> [8] </ref> allows to substitute log d n with log d f . Patching up the algorithm in low dimensions. We indicate howto patch up the algorithm ford+1 = 5. First, we deal with the computation of attaching facets. <p> Higher dimensions. In higher dimensions, the algorithm can be patched up using linear programming queries as in <ref> [8] </ref>. The improvement over previous results is only marginal. Handling degeneracies for d + 1 = 4.
Reference: [9] <author> B. Chazelle. </author> <title> Cutting hyperplanesfordivide-and-conquer. </title> <journal> Discrete Comput. Geom., </journal> <month> 9 </month> <year> (1993) </year> <month> 145-158. </month>
Reference-contexts: There are several options for computing a cutting <ref> [12, 22, 9, 26] </ref> in linear time both using randomization or deterministically.
Reference: [10] <author> B. Chazelle. </author> <title> An optimal convex hull algorithm in any fixed dimension. </title> <journal> Discrete Comput. Geom., </journal> <month> 10 </month> <year> (1993) </year> <month> 377-409. </month>
Reference-contexts: Optimal worst case algorithms (both simple randomized (Clarkson and Shor [12], Seidel [29])) and complicated deterministic (Chazelle <ref> [10] </ref>) are known for general d; their running time is O (n log n + n dd=2e ).
Reference: [11] <author> B. Chazelle and J. Friedman. </author> <title> A deterministic view of random sampling and its use in geometry. </title> <note> Combinatorica 10 (1990) 229-249. </note>
Reference-contexts: The non redundant portion of the contour C fl (t ) is the restriction of C (t ) to t fl . The (green) edges 12 The factor r ffi can be dropped completely if resampling is used, both sequentially and in parallel <ref> [11, 18, 2] </ref>; that results in a (1=r)- cutting of size O (r). that bound the redundant portion are called attaching edges. They generate a subdivision D (t ) of t into the components of the redundant and non redundant portions.
Reference: [12] <author> K. L. Clarkson and P. W. Shor. </author> <title> Applications of random sampling in computational geometry, II. </title> <journal> Discrete Comput. Geom., </journal> <month> 4 </month> <year> (1989) </year> <month> 387-421. </month>
Reference-contexts: Optimal worst case algorithms (both simple randomized (Clarkson and Shor <ref> [12] </ref>, Seidel [29])) and complicated deterministic (Chazelle [10]) are known for general d; their running time is O (n log n + n dd=2e ). <p> It dates back to Clarkson and Shor's <ref> [12] </ref> randomized outputsensitive algorithm for computing halfspace intersections in R 3 . That approach was refined by Reif and Sen [27] and Amato, Goodrich and Ramos [2] with the aim of obtaining parallel algorithms for halfspace intersections in R 3 . <p> There are several options for computing a cutting <ref> [12, 22, 9, 26] </ref> in linear time both using randomization or deterministically.
Reference: [13] <author> D. P. Dobkin and D. G. Kirkpatrick. </author> <title> Fastdetection of polyhedral intersection. </title> <type> Theoret. </type> <institution> Comput. Sci. </institution> <month> 27 </month> <year> (1983) </year> <month> 241-253. </month>
Reference-contexts: Note that for our purposes we actually need V (S c t ) both inside and outside of t . Dobkin-Kirkpatrick (D-K) hierarchy. Let T = S c t . A D-K hierarchy <ref> [13] </ref> for V (T ) is a sequence V (T i ), i = 0; : : : ; k, where T 0 = T , T i T i+1 , T k = O (1) and jT i+1 j ffjT i j for some constant0 &lt; ff &lt; 1 so
Reference: [14] <author> H. Edelsbrunner. </author> <title> Algorithms in Combinatorial Geometry, </title> <booktitle> volume 10 of EATCS Monographs on Theoretical Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Heidelberg, WestGermany, </address> <year> 1987. </year>
Reference-contexts: Contents. The next section describes the application to lower convex hulls, and the following one presents the application to algebraic planar Voronoi diagrams. 2 Output sensitive computation of lower convex hulls 2.1 Preliminaries Definitions are given for completeness and to establish the notation. A standard reference is <ref> [14] </ref>. Polytopes and polyhedra. A (convex)polytope in R d is the convexhull of afinite pointsetS (the smallestconvex set containing S), denoted conv (S). More general, a (convex) polyhedron is the intersection of a finite set of halfspaces H, denoted T H. Let P be a polyhedron. <p> However, from a rough calculation, it appears the size of, say, a (1=2)-cutting is impractically large already for d = 3; 4 which are our main interest. An alternative, as pointed out in [8] is the partitioning introduced by Meggido [26] (see <ref> [14] </ref>). This is worse in its asymptotic growth with d, but comparable for sufficiently small d. Chan et al [7, 8] combine the first step of Meggido's approach (pairing hyperplanes and projecting down their pairwise intersections) and a cutting in D for hyperplanes.
Reference: [15] <author> H. Edelsbrunner and E. Mucke. </author> <title> Simulation of Simplicity: a technique to cope with degenerate cases in geometric algorithms. </title> <journal> ACM Trans. </journal> <note> Graphics 9 (1990) 66-104. </note>
Reference-contexts: A negative feature of both Chan et al.'s algorithm and ours is thatnondegeneracy is needed for their analysis. To handle arbitrary input the algorithm is supposed to use a symbolic perturbation technique <ref> [15, 32] </ref>. Then, for degenerate inputthe algorithm guarantees the same running time butwith f replaced by the number of faces of the perturbed Voronoi diagram. We verify that withoutusing perturbation the algorithm for d = 3 can be adapted to work for degenerate input with the same time bound.
Reference: [16] <author> H. EdelsbrunnerandN. Shah. </author> <title> Incrementaltopologicalflipping works for regular triangulations. </title> <booktitle> In Proc. 8th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> 43-52, </pages> <year> 1992. </year>
Reference: [17] <author> H. Edelsbrunner and W. Shi. </author> <title> An O(n log 2 h) time algorithm for the three-dimensional convex hull problem. </title> <journal> SIAM J. </journal> <volume> Com-put. </volume> <month> 20 </month> <year> (1991) </year> <month> 259-277. </month>
Reference-contexts: Chan, Snoeyink and Yap [7, 8] extended the approach to halfspace intersections in R 4 . The approach of Edelsbrunner and Shi <ref> [17] </ref> also fits in the same framework, and it is even closer to 1 Anotheralgorithm presentedin [5] is flawedand apparentlyhas notbeen fixed. the primal/dual approach in [8], which we are adopting here (see remark below). <p> The sum of I over the same range is O (N + I ). Since the depth of each tree is O (log n), one obtains O ((n + f ) log d n) as a global bound for all conflict lists. A lemma of Edelsbrunner and Shi <ref> [17] </ref> refined in [8] allows to substitute log d n with log d f . Patching up the algorithm in low dimensions. We indicate howto patch up the algorithm ford+1 = 5. First, we deal with the computation of attaching facets.
Reference: [18] <author> M.T. Goodrich. </author> <title> Geometric partitioning made easier, even in parallel. </title> <booktitle> In Proc. 9th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> 73-82, </pages> <year> 1993. </year>
Reference-contexts: The non redundant portion of the contour C fl (t ) is the restriction of C (t ) to t fl . The (green) edges 12 The factor r ffi can be dropped completely if resampling is used, both sequentially and in parallel <ref> [11, 18, 2] </ref>; that results in a (1=r)- cutting of size O (r). that bound the redundant portion are called attaching edges. They generate a subdivision D (t ) of t into the components of the redundant and non redundant portions.
Reference: [19] <author> M.T. Goodrich, C. O`Dunlaing and C.-K. Yap. </author> <title> Constructing the Voronoi diagram of a set of line segments in parallel. </title> <note> Algorithmica 9 (1993) 128-141. </note>
Reference-contexts: This includes, for example, the Euclidean Voronoi diagram of nonintersecting segments in the plane for which the previous bestdeterministic result, by Goodrich, O`Dunlaing and Yap <ref> [19] </ref>, used time O (log 2 n) and O (n log 2 n) work in the CREW PRAM model. In another example, computing the intersection of equal radius balls in R 3 , this resultsin the only known optimal deterministic sequential algorithm.
Reference: [20] <author> D. G. Kirkpatrick and R. Seidel. </author> <title> The ultimate planar convex hull algorithm? SIAM J. </title> <institution> Comput. </institution> <month> 15 </month> <year> (1986) </year> <month> 287-299. </month>
Reference: [21] <author> R. Klein. </author> <title> Concrete and Abstract Voronoi diagrams. LCNS 400, </title> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: We call these algebraic planar Voronoi diagrams. They include a large and important subset of the generalized Voronoi diagrams considered by Klein <ref> [21] </ref>. The algorithm is deterministic and parallel; in the EREW PRAM model it runs in time O (log 2 n) using optimal O (n log n) work, where n is the number of sites.
Reference: [22] <author> J. Matousek. </author> <title> Approximations and optimal geometric divide-and-conquer. </title> <booktitle> In Proc. 23rdAnnu. ACM Sympos. TheoryCom-put., </booktitle> <pages> 505-511, </pages> <year> 1991. </year> <note> Also to appear in J. </note> <institution> Comput. Syst. Sci. </institution>
Reference-contexts: There are several options for computing a cutting <ref> [12, 22, 9, 26] </ref> in linear time both using randomization or deterministically. <p> The computation can be performed deterministicallyin the EREWPRAM model in time O (log 2 n) and O (n log r) work. This result is obtained by a derandomization that uses efficient construction of (1=r)-approximations using partition trees [24] together with the technique of linearization <ref> [22] </ref>. For this the algebraic restriction is important. This makes the algorithm quite complicated.
Reference: [23] <author> J. Matousek. </author> <title> Cutting hyperplanearrangements. </title> <journal> Discrete Com-put. Geom. </journal> <month> 6 </month> <year> (1991) </year> <month> 385-406. </month>
Reference: [24] <author> J. Matousek. </author> <title> Efficientpartiton trees Discrete Comput. </title> <journal> Geom. </journal> <month> 8 </month> <year> (1992) </year> <month> 315-334. </month>
Reference-contexts: The computation can be performed deterministicallyin the EREWPRAM model in time O (log 2 n) and O (n log r) work. This result is obtained by a derandomization that uses efficient construction of (1=r)-approximations using partition trees <ref> [24] </ref> together with the technique of linearization [22]. For this the algebraic restriction is important. This makes the algorithm quite complicated.
Reference: [25] <author> J. Matousek. </author> <title> Linear optimization queries. </title> <journal> J. </journal> <note> Algorithms 14 (1993) 432-448. </note>
Reference-contexts: The aim is to obtain an algorithm with running time thatmatches the lower bound W (n log f + f ). Seidel [28] gave an algorithm with a running time O (n 2 + f log f ), and Matousek <ref> [25] </ref> reduced the n 2 term (using complicated techniques) to a subquadratic term which is n 4=3 (times a polylog factor) for d = 3; 4.
Reference: [26] <author> N. Meggido. </author> <title> Linear programming in linear time when the dimension is fixed. </title> <journal> J. </journal> <note> ACM 31 (1984) 114-127. </note>
Reference-contexts: There are several options for computing a cutting <ref> [12, 22, 9, 26] </ref> in linear time both using randomization or deterministically. <p> This can be improved by the approach of resampling. However, from a rough calculation, it appears the size of, say, a (1=2)-cutting is impractically large already for d = 3; 4 which are our main interest. An alternative, as pointed out in [8] is the partitioning introduced by Meggido <ref> [26] </ref> (see [14]). This is worse in its asymptotic growth with d, but comparable for sufficiently small d. Chan et al [7, 8] combine the first step of Meggido's approach (pairing hyperplanes and projecting down their pairwise intersections) and a cutting in D for hyperplanes.
Reference: [27] <author> J.H. Reif and S. Sen. </author> <title> Optimal parallel randomized algorithms for three-dimensional convex hulls and related problems. </title> <journal> SIAM J. Comput. </journal> <month> 21 </month> <year> (1992) </year> <month> 466-485. </month>
Reference-contexts: It dates back to Clarkson and Shor's [12] randomized outputsensitive algorithm for computing halfspace intersections in R 3 . That approach was refined by Reif and Sen <ref> [27] </ref> and Amato, Goodrich and Ramos [2] with the aim of obtaining parallel algorithms for halfspace intersections in R 3 . Chan, Snoeyink and Yap [7, 8] extended the approach to halfspace intersections in R 4 . <p> Fortunately, as discussed below, the Voronoi diagram of the contour sites resolves both difficulties. The corresponding approach for half-space intersections in R 3 was used by Reif and Sen <ref> [27] </ref>. Voronoi diagram of the contour sites. We want to compute V (S c t ) in time O (log 2 n t ) and O (n t log n t ) work in the EREW PRAM.
Reference: [28] <author> R. Seidel. </author> <title> Constructing higher-dimensional convex hulls at logarithmic costper face. </title> <booktitle> In Proc. 18th Annu. ACM Sympos. TheoryComput., </booktitle> <pages> 404-413, </pages> <year> 1986. </year>
Reference-contexts: The aim is to obtain an algorithm with running time thatmatches the lower bound W (n log f + f ). Seidel <ref> [28] </ref> gave an algorithm with a running time O (n 2 + f log f ), and Matousek [25] reduced the n 2 term (using complicated techniques) to a subquadratic term which is n 4=3 (times a polylog factor) for d = 3; 4.
Reference: [29] <author> R. Seidel. </author> <title> Small-dimensional linear programming and convex hulls made easy. </title> <journal> Discrete Comput. Geom., </journal> <volume> 6 </volume> <pages> 423-434, </pages> <year> 1991. </year>
Reference-contexts: Optimal worst case algorithms (both simple randomized (Clarkson and Shor [12], Seidel <ref> [29] </ref>)) and complicated deterministic (Chazelle [10]) are known for general d; their running time is O (n log n + n dd=2e ).
Reference: [30] <author> M. Sharir and P.K. Agarwal. </author> <title> Davenport-Schinzel Sequences and Their Geometric Applications. </title> <publisher> Cambridge University Press, </publisher> <year> 1995. </year>
Reference-contexts: A different divide-and-conquer approach is needed: to compute V (T ), T is divided into two nearly equal parts T 1 and T 2 , V (T 1 ) and V (T 2 ) are computed recursively, and then merged; see <ref> [30, pages 134-135] </ref>. The computation takes time O (n jt log n jt ) sequentially, and time O (log 2 n jt ) and work O (n jt log n jt ) in the EREW PRAM.
Reference: [31] <author> G. F. Swart. </author> <title> Finding the convex hull facetby facet. </title> <journal> Journal of Algorithms. </journal> <month> 6 </month> <year> (1985) </year> <month> 17-48. </month>
Reference-contexts: On the other hand, the gift wrapping approach by Swart <ref> [31] </ref> has running time O (nf ), and has been improved by Chan [6] (for d = 3; 4 the resulting time is O (n log f + (nf ) 4=3 log c n)).
Reference: [32] <author> C.-K. Yap. </author> <title> A geometry consistency theorem for a symbolic perturbation scheme. </title> <institution> J. Comput. Sys. Sci. </institution> <month> 40 </month> <year> (1989) </year> <month> 2-18. </month>
Reference-contexts: A negative feature of both Chan et al.'s algorithm and ours is thatnondegeneracy is needed for their analysis. To handle arbitrary input the algorithm is supposed to use a symbolic perturbation technique <ref> [15, 32] </ref>. Then, for degenerate inputthe algorithm guarantees the same running time butwith f replaced by the number of faces of the perturbed Voronoi diagram. We verify that withoutusing perturbation the algorithm for d = 3 can be adapted to work for degenerate input with the same time bound.
References-found: 32

