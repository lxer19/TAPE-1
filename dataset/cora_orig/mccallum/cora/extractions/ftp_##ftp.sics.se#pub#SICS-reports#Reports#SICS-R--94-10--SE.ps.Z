URL: ftp://ftp.sics.se/pub/SICS-reports/Reports/SICS-R--94-10--SE.ps.Z
Refering-URL: http://www.sics.se/libindex.html
Root-URL: 
Title: R  Some Formal Aspects of AKL  
Author: by Torkel Franzn 
Keyword: concurrent constraint programming, logic programming  
Address: Box 1263, S-164 28 Kista, Sweden  
Affiliation: ccp group  SICS,  
Pubnum: 9 4 1 0  
Email: email: torkel@sics.se  
Date: ISSN 0283-3638  
Abstract: The Agents Kernel Language allows committed choice programming as well as nondeterministic logic programming based on the Andorra principle (and combinations of these), with a considerable degree of parallelism. In the present report the AKL computation model is formally defined and soundness and completeness results for a logical subset of AKL are presented. The computation model is extended to cover ports, a medium of communication used in AKL, and the solution collecting operation bagof. These extensions preserve the basic character of the computation model, and in particular the role played by the constraint theory. Declarative interpretations of these constructs are introduced, and the limitations of these readings are discussed. Finally, the confluence of strongly fair (possibly infinite) computations in a different subset of AKL is proved. 
Abstract-found: 1
Intro-found: 1
Reference: [Co] <author> A.Colmerauer, </author> <title> Equations and Inequations on Finite and Infinite Trees, </title> <booktitle> FGCS '84 Proceedings. </booktitle>
Reference: [HaJa] <author> Seif Haridi & Sverker Janson, </author> <title> Kernel Andorra Prolog and its Computation Model, </title> <booktitle> in Proceedings of the International Conference on Logic Programming, </booktitle> <address> Jerusalem, </address> <publisher> MIT Press 1990. </publisher>
Reference: [H-Sm] <author> Markus Hhfeld and Gert Smolka, </author> <title> Definite Relations over Constraint Languages. </title> <type> LILOG Report LR-53, </type> <month> October </month> <year> 1988. </year>
Reference: [JaHa] <author> Sverker Janson & Seif Haridi, </author> <title> Programming Paradigms of the Andorra Kernel Language. </title> <booktitle> ICLP '91 Proceedings. </booktitle>
Reference-contexts: Again the reader is referred to <ref> [JaHa] </ref> for comparisons relating to programming.
Reference: [Janson] <author> Sverker Janson, </author> <year> 1994. </year> <title> AKL - A Multiparadigm Programming Language. </title> <institution> Uppsala Theses in Computing Science 19, Computing Science Department, Uppsala University, and SICS Dissertation Series 14. </institution>
Reference: [Keisu] <author> T.Keisu, </author> <title> Tree Constraints. </title> <type> PhD Thesis, </type> <institution> Royal Institute of Technology/SICS, </institution> <month> May </month> <year> 1994. </year> <title> SICS Dissertation Series 16. </title>
Reference-contexts: Using abbreviated notation with implicit existential quantifiers, this rule is choice (s 1 fiB 1 ,..s n fiB n ) fi choice (s 1 ?B 1 ,s 1 s 2 ?B 2 ,..s 1 s 2 ...s n-1 s n ?B n ) the case of finite and rational trees <ref> [Keisu] </ref>. 6 The syntax of clauses and goals Some definitions in the following will be repeated from earlier sections or given a more careful formulation. The discussion above will however be assumed familiar. <p> Note that in the case of rational trees, it is not true in general that the variables x i can be eliminated 9 For an extended treatment, see <ref> [Keisu] </ref>. from the right-hand side of these equations. If I is empty, the conjunction is interpreted as true. Such a system of equations will be called a solution or solved form of the constraint. <p> Then, again using the existence property, " u " y " z (s ( u ,y ) q ( y ,z ) $ w (s ' q ')) holds if and only if "u"y (s (u,y)$w (s'E')E) and "y"z (Eq (y,z)$wq'). For the details of the argument, see <ref> [Keisu] </ref>. 20 Adding ports In extending a domain D closed under lists to contain ports, we must add ports so that every port is associated with a unique list (through port (x,y)) while every list is associated with infinitely many different ports.
Reference: [Lloyd] <editor> J.W.Lloyd, </editor> <booktitle> Foundations of Logic Programming. Second edition, </booktitle> <year> 1987. </year>
Reference: [Ma] <author> Michael J.Maher, </author> <title> Logic Semantics for a Class of Committed-Choice Programs, </title> <booktitle> in: Proceedings of the Fourth International Conference on Logic Programming, </booktitle> <address> Melbourne, </address> <publisher> MIT Press, </publisher> <year> 1987. </year>
Reference: [Naish] <editor> Negation and Quantifiers in NU-Prolog. </editor> <booktitle> Proceedings of the Third International Conference on Logic Programming, </booktitle> <address> London, </address> <year> 1986. </year>
Reference-contexts: whereby a condition-guarded choice box in which all guards are suspended is transformed into a nondeterminate choice box. 7 This rule, which presupposes that the constraint system incorporates a decision procedure for full first order constraint formulas, has been implemented and studied in 6 This condition is also used in <ref> [Naish] </ref>. 7 Using abbreviated notation with implicit existential quantifiers, this rule is choice (s 1 fiB 1 ,..s n fiB n ) fi choice (s 1 ?B 1 ,s 1 s 2 ?B 2 ,..s 1 s 2 ...s n-1 s n ?B n ) the case of finite and rational
Reference: [Sa] <author> Vijay Saraswat, </author> <title> Concurrent Constraint Programming Languages, </title> <type> PhD dissertation, </type> <institution> Carnegie-Mellon University, </institution> <year> 1989. </year>
Reference: [Wa1] <author> David H.D. Warren, </author> <title> The Andorra Principle, </title> <booktitle> presented at Gigalips workshop, </booktitle> <year> 1987. </year>
Reference: [Wa2] <author> David H.D. Warren, </author> <title> The Extended Andorra Model with Implicit Control, </title> <booktitle> presented at a Parallel Logic Programming workshop in Eliat, </booktitle> <year> 1990. </year>
References-found: 12

