URL: ftp://ftp.cs.utexas.edu/pub/boyer/cli-reports/069.ps
Refering-URL: ftp://ftp.cs.utexas.edu/pub/boyer/cli-reports/index.html
Root-URL: 
Title: Mechanically Verified Hardware Implementing an 8-Bit Parallel IO Byzantine Agreement Processor  
Phone: (512) 322-9951  
Author: J Strother Moore 
Note: NASA Contractor Report 189588  Contract NAS1-18878 1992  
Address: 1717 W. 6th St. Suite 290 Austin, Texas 78703  Austin, Texas  
Affiliation: Computational Logic Inc.  Computational Logic, Inc.  
Abstract-found: 0
Intro-found: 0
Reference: 1. <author> W.R. Bevier and W.D. Young. </author> <title> The Proof of Correctness of a Fault-Tolerant Circuit Design. </title> <booktitle> Proceedings of the Second International Working Conference on Dependable Computing for Critical Applications, </booktitle> <month> February, </month> <year> 1991, </year> <pages> pp. 107-114. </pages>
Reference-contexts: Keywords: hardware verification, fault tolerance, Byzantine agreement, Oral Messages algorithm, automatic theorem proving, Boyer-Moore logic. 1 1. Background In <ref> [1] </ref> Bevier and Young describe a formalization of the ``Oral Messages'' (or ``Byzantine Generals'') algorithm of Pease, Shostak and Lamport [5] and a functional description of a processor that implements the algorithm in the case of a four processor network. <p> In this paper we implement that processor in the formalized hardware description language (HDL) of Brock and Hunt and we exhibit a theorem, which has been proved by NQTHM, that states that our hardware implements local-step. Readers are urged to see <ref> [1] </ref> for additional background material. The processor reads sense data and inputs from its peers, exchanges this data in a certain fixed pattern among the peers, and then votes on certain combinations of the exchanged data. <p> Provided at most one processor is faulty, all nonfaulty processors hold identical opinions about all the processors, including any faulty processor. This fact is proved informally but precisely in [5]; it is stated formally and proved mechanically in <ref> [1] </ref>. In actual applications, the sense data and all of the exchanged data are in fact bit vectors of some fixed length, though that restriction is unnecessary in the abstract view of the processor and in its proof.
Reference: 2. <author> R. S. Boyer and J S. Moore. </author> <title> A Computational Logic Handbook. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1988. </year>
Reference-contexts: Background In [1] Bevier and Young describe a formalization of the ``Oral Messages'' (or ``Byzantine Generals'') algorithm of Pease, Shostak and Lamport [5] and a functional description of a processor that implements the algorithm in the case of a four processor network. They use the Boyer-Moore theorem prover, NQTHM <ref> [2] </ref>, to check the Pease-Shostak-Lamport theorem and to prove that their abstract processor correctly implements the algorithm for the case in question.
Reference: 3. <author> B.C. Brock and W.A. Hunt. </author> <title> A Formal Introduction to a Simple HDL. In Formal Methods for VLSI Design, </title> <editor> J. Staunstrup, Ed., </editor> <publisher> Elsevier Science Publishers B.V. (North-Holland), </publisher> <year> 1990, </year> <pages> pp. 285-329. </pages>
Reference-contexts: The last two cycles (6 and 7) are no-ops. 3 Our job is to construct a Formal HDL description of a module that implements this function and to prove that we did so. The Formal HDL we use is the descendant of that described by Brock and Hunt in <ref> [3] </ref>. (At the time of this writing, the new Formal HDL has not yet been documented though we explain it briefly here.) The language is connected to the hardware design tools of LSI Logic, Inc., via a Lisp program that translates Formal HDL descriptions into LSI Logic's Netlist Description Language (NDL).
Reference: 4. <author> J S. Moore. </author> <title> A Formal Model of Asynchronous Communication and Its Use in Mechanically Verifying a Biphase Mark Protocol. </title> <type> Tech. </type> <institution> Rept. NASA CR-4433, NASA, </institution> <year> 1992. </year>
Reference-contexts: A more sensible design would use serial io, devoting one pin to each of the channels on which full vectors are currently exchanged. This would reduce the pin count to eighteen and allow arbitrarily sized data at the 16 cost of waiting for it to stream in. In <ref> [4] </ref>, we verify that a biphase mark communications protocol allows reliable communication between two processors whose cycle times are within about 5% of each other. <p> The reader of this document will recognize that it would be straightforward to implement the biphase mark specification in our Formal HDL and prove that we had done so. Proving that an HDL description implemented the send and recv of <ref> [4] </ref> would be an exercise very similar to proving that lstep implements local-step except it would be easier because there is no need to parameterize the implementation and the state mapping is much simpler. Indeed, the whole approach taken in [4] was motivated by our concern that the verification of the <p> that an HDL description implemented the send and recv of <ref> [4] </ref> would be an exercise very similar to proving that lstep implements local-step except it would be easier because there is no need to parameterize the implementation and the state mapping is much simpler. Indeed, the whole approach taken in [4] was motivated by our concern that the verification of the implementation of send and recv be straightforward and independent of all extraneous considerations. <p> An algorithm like that verified in [6] should be used to get the processors in approximate synchronization, so that they are all executing the same step of the algorithm during the same time interval. Our model of asynchronous communications <ref> [4] </ref> would permit us to prove that two such processors could communicate. As we envision it, the low level specification of a realistic Byzantine agreement processor will be a function, say async-local-step, which is like local-step but has a much finer temporal grain.
Reference: 5. <author> M. Pease and R. Shostak and L. Lamport. </author> <title> "Reaching Agreement in the Presence of Faults". </title> <journal> Journal of the ACM 27, </journal> <volume> 2 (1980), </volume> <pages> 228-234. </pages>
Reference-contexts: Keywords: hardware verification, fault tolerance, Byzantine agreement, Oral Messages algorithm, automatic theorem proving, Boyer-Moore logic. 1 1. Background In [1] Bevier and Young describe a formalization of the ``Oral Messages'' (or ``Byzantine Generals'') algorithm of Pease, Shostak and Lamport <ref> [5] </ref> and a functional description of a processor that implements the algorithm in the case of a four processor network. They use the Boyer-Moore theorem prover, NQTHM [2], to check the Pease-Shostak-Lamport theorem and to prove that their abstract processor correctly implements the algorithm for the case in question. <p> Provided at most one processor is faulty, all nonfaulty processors hold identical opinions about all the processors, including any faulty processor. This fact is proved informally but precisely in <ref> [5] </ref>; it is stated formally and proved mechanically in [1]. In actual applications, the sense data and all of the exchanged data are in fact bit vectors of some fixed length, though that restriction is unnecessary in the abstract view of the processor and in its proof.
Reference: 6. <author> J. Rushby and F. von Henke. </author> <title> Formal Verification of the Interactive Convergence Clock Synchronization Algorithm using EHDM. </title> <type> Tech. </type> <institution> Rept. SRI CSL 89-3R, Computer Science Laboratory, SRI International, </institution> <address> Menlo Park, CA 94025, </address> <month> January, </month> <year> 1989. </year>
Reference-contexts: Our processor implements local-step. Local-step was proved by Bevier and Young to provide fault-tolerance when it was connected in a network with three identical peers, all of which step in concert. More realistically, the four processors should each have an independent clock. An algorithm like that verified in <ref> [6] </ref> should be used to get the processors in approximate synchronization, so that they are all executing the same step of the algorithm during the same time interval. Our model of asynchronous communications [4] would permit us to prove that two such processors could communicate.
Reference: 7. <author> D.E. Thomas and P. Moorby. </author> <title> The Verilog Hardware Description Language. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1991. </year> <title> i Table of Contents </title>
Reference-contexts: NDL is a conventional hardware description language similar to Verilog <ref> [7] </ref>. Commercially available LSI Logic tools permit one to analyze NDL descriptions to extract schematics, do layout, etc. In this document we exhibit our implementation and the theorem that we claim establishes its correctness.
Reference: 1. <institution> Background . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1 </institution>
Reference-contexts: Keywords: hardware verification, fault tolerance, Byzantine agreement, Oral Messages algorithm, automatic theorem proving, Boyer-Moore logic. 1 1. Background In <ref> [1] </ref> Bevier and Young describe a formalization of the ``Oral Messages'' (or ``Byzantine Generals'') algorithm of Pease, Shostak and Lamport [5] and a functional description of a processor that implements the algorithm in the case of a four processor network. <p> In this paper we implement that processor in the formalized hardware description language (HDL) of Brock and Hunt and we exhibit a theorem, which has been proved by NQTHM, that states that our hardware implements local-step. Readers are urged to see <ref> [1] </ref> for additional background material. The processor reads sense data and inputs from its peers, exchanges this data in a certain fixed pattern among the peers, and then votes on certain combinations of the exchanged data. <p> Provided at most one processor is faulty, all nonfaulty processors hold identical opinions about all the processors, including any faulty processor. This fact is proved informally but precisely in [5]; it is stated formally and proved mechanically in <ref> [1] </ref>. In actual applications, the sense data and all of the exchanged data are in fact bit vectors of some fixed length, though that restriction is unnecessary in the abstract view of the processor and in its proof.

Reference: 3. <institution> The Specification . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7 </institution>
Reference-contexts: The last two cycles (6 and 7) are no-ops. 3 Our job is to construct a Formal HDL description of a module that implements this function and to prove that we did so. The Formal HDL we use is the descendant of that described by Brock and Hunt in <ref> [3] </ref>. (At the time of this writing, the new Formal HDL has not yet been documented though we explain it briefly here.) The language is connected to the hardware design tools of LSI Logic, Inc., via a Lisp program that translates Formal HDL descriptions into LSI Logic's Netlist Description Language (NDL).

Reference: 5. <institution> The Theorem Proved by NQTHM . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14 </institution>
Reference-contexts: Keywords: hardware verification, fault tolerance, Byzantine agreement, Oral Messages algorithm, automatic theorem proving, Boyer-Moore logic. 1 1. Background In [1] Bevier and Young describe a formalization of the ``Oral Messages'' (or ``Byzantine Generals'') algorithm of Pease, Shostak and Lamport <ref> [5] </ref> and a functional description of a processor that implements the algorithm in the case of a four processor network. They use the Boyer-Moore theorem prover, NQTHM [2], to check the Pease-Shostak-Lamport theorem and to prove that their abstract processor correctly implements the algorithm for the case in question. <p> Provided at most one processor is faulty, all nonfaulty processors hold identical opinions about all the processors, including any faulty processor. This fact is proved informally but precisely in <ref> [5] </ref>; it is stated formally and proved mechanically in [1]. In actual applications, the sense data and all of the exchanged data are in fact bit vectors of some fixed length, though that restriction is unnecessary in the abstract view of the processor and in its proof.
Reference: 6. <institution> Comments on our Design . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15 </institution>
Reference-contexts: Our processor implements local-step. Local-step was proved by Bevier and Young to provide fault-tolerance when it was connected in a network with three identical peers, all of which step in concert. More realistically, the four processors should each have an independent clock. An algorithm like that verified in <ref> [6] </ref> should be used to get the processors in approximate synchronization, so that they are all executing the same step of the algorithm during the same time interval. Our model of asynchronous communications [4] would permit us to prove that two such processors could communicate.
References-found: 11

