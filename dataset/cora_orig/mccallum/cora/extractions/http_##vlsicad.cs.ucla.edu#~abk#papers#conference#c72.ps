URL: http://vlsicad.cs.ucla.edu/~abk/papers/conference/c72.ps
Refering-URL: http://vlsicad.cs.ucla.edu/~abk/publications.html
Root-URL: http://www.cs.ucla.edu
Title: A Layout Advisor for Timing-Critical Bus Routing  
Author: Wei Huang and Andrew B. Kahng 
Address: Los Angeles, CA 90095-1596 USA  
Affiliation: UCLA Computer Science Dept.,  
Abstract: We describe a "topology advisor" for routing of critical (multi-source) buses in building-block design. The tool accepts as input a block layout, a two-layer routing cost structure superposed over the block layout, terminal locations for a multi-source bus, and source-sink delay upper bound (linear or Elmore delay) constraints for all terminal pairs. The b best routing solutions (b a user parameter) that satisfy all constraints are returned. Efficient implementations of exhaustive search are used to guarantee optimal results when practical, and otherwise yield fast, high-quality results (if the problem is large or if the constraints are loose). Practical features include: (i) modeling of per-region and per-layer routing costs, (ii) routing to terminals located inside blocks, (iii) optional splitting of k-pin bus routes when the optimal routing passes through narrow channels, and (iv) heuristic speedups based on clustering and sampling. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C.J. Alpert and A.B. Kahng, </author> <title> "Geometric Embeddings for Faster and Better Multi-Way Netlist Partitioning", </title> <booktitle> in Proc. ACM/IEEE Design Automation Conf., </booktitle> <address> Dallas, </address> <year> 1993, </year> <pages> pp. 743-748. </pages>
Reference-contexts: In such cases, we use Steiner point sampling to speed up the search. The K-center partitioning heuristic of Gonzalez <ref> [1] </ref> is used to form a geometric clustering of all candidate Steiner points. This heuristic randomly picks a "center", then iteratively picks as its next center the point with maximum distance to the nearest of all previously picked centers.
Reference: [2] <author> K.D. Boese, </author> <title> A.B. Kahng, "Zero-Skew Clock Routing Trees With Minimum Wirelength", </title> <booktitle> in Proc. IEEE International Conf. on ASIC, </booktitle> <year> 1992, </year> <pages> pp. </pages> <month> 1.1.1-1.1.5. </month>
Reference: [3] <author> J.P. Cohoon, D.S. Richards, </author> <title> "Optimal Two-Terminal alpha-beta Wire Routing", in Integration: </title> <journal> the VLSI Journal, </journal> <volume> 1988(6), </volume> <pages> pp. 35-57. </pages>
Reference-contexts: We perform actual generation of full Steiner topologies according to this recurrence. Escape Graph Generation and Costing For a given block layout with obstacles, we use line-sweep to generate an escape graph as in Cohoon and Richards <ref> [3] </ref>. The escape graph is quite similar to the standard notion of a channel intersection graph; we assume that routing must be performed within resources (e.g., channels) corresponding to edges in this graph. Note also that our tool allows terminals inside of obstacles, e.g., for route planning in pre-synthesis floorplanning.
Reference: [4] <author> J. Cong, L. </author> <title> He, "Optimal Wiresizing for Interconnects with Multiple Sources", </title> <booktitle> in Proc. IEEE Int'l Conf. on Computer-Aided Design, </booktitle> <year> 1995, </year> <pages> pp. 568-574 </pages>
Reference-contexts: Performance-driven multi-source routing is NP-complete [6] even without obstacles. Linear programming has been used to construct lower and upper bounded delay routing trees with a single source, under the linear delay model [12]; this work requires an input topology. For multi-source routing, [5] heuristically generates minimum-cost minimum-diameter Steiner arborescences; <ref> [4] </ref> wiresizes such routing trees via decomposition into source and loading subtrees. None of these algorithms for multiple-source net routing accept path delay bounds as constraints.
Reference: [5] <author> J. Cong, P.H. Madden, </author> <title> "Performance-Driven Routing with Multiple Sources", </title> <booktitle> Proc. IEEE ISCAS, </booktitle> <year> 1995, </year> <pages> pp. 203-206 </pages>
Reference-contexts: Performance-driven multi-source routing is NP-complete [6] even without obstacles. Linear programming has been used to construct lower and upper bounded delay routing trees with a single source, under the linear delay model [12]; this work requires an input topology. For multi-source routing, <ref> [5] </ref> heuristically generates minimum-cost minimum-diameter Steiner arborescences; [4] wiresizes such routing trees via decomposition into source and loading subtrees. None of these algorithms for multiple-source net routing accept path delay bounds as constraints.
Reference: [6] <author> M. Farach, S. Kannan, T. Warnow, </author> <title> "A Robust Model for Finding Optimal Evolutionary Tree", </title> <note> in Algorithmica, </note> <year> 1995, </year> <pages> pp. 155-179 </pages>
Reference-contexts: Our work centers on the timing- and resource-constrained (multi-source) bus routing aspect of full-chip route planning. We believe that this problem will become increasingly important in top-down reuse-centric ASIC methodologies. Previous literature on the multi-source delay-constrained routing problem is limited. Performance-driven multi-source routing is NP-complete <ref> [6] </ref> even without obstacles. Linear programming has been used to construct lower and upper bounded delay routing trees with a single source, under the linear delay model [12]; this work requires an input topology.
Reference: [7] <author> J.L. Ganley, J.P. Cohoon, </author> <title> "Routing a Multi-Terminal Critical Net: Steiner Tree Construction in the Presence of Obstacles", </title> <booktitle> in Proc. of IEEE International Symposium on Circuits and Systems, </booktitle> <address> New York, </address> <publisher> 1994(1), </publisher> <pages> pp. 113-116. </pages>
Reference-contexts: For multi-source routing, [5] heuristically generates minimum-cost minimum-diameter Steiner arborescences; [4] wiresizes such routing trees via decomposition into source and loading subtrees. None of these algorithms for multiple-source net routing accept path delay bounds as constraints. In the presence of obstacles, Ganley and Cohoon <ref> [7] </ref> perform minimum-wirelength routing using exhaustive search for small nets and a k-Steinerization heuristic for large nets. 2 A Bus Routing Advisor Our new "topology advisor" for intelligent bus routing can provide routing solutions for multi-source buses that are used to time-share scarce global interconnect resources. <p> The returned output consists of the best b routing solutions that satisfy delay constraints and are subgraphs of the escape graph <ref> [7] </ref>. Here, b is a user parameter and "best" is also user-defined (typically, we seek either the minimum weighted-cost tree satisfying delay bounds, or the tree that has maximum delay slack (defined as the smallest difference between delay upper bound and actual path delay, over all source-sink paths).
Reference: [8] <author> E.N. Gilbert, H.O. Pollak, </author> <title> "Steiner Minimal Trees", </title> <journal> in SIAM J. Appl. Math., </journal> <volume> 16(1), </volume> <year> 1968, </year> <pages> pp. 1-29. </pages>
Reference-contexts: Output the certain number of "best" trees depend on user defined cost function. topology, each Steiner point is adjacent to exactly three other nodes. There are n 2 Steiner points in a full topology over n terminals. By an early result of Gilbert and Pollak <ref> [8] </ref> stating that every topology has an underlying full topology, we need test only full topologies. Given the full Steiner topologies over n terminals, the full topologies over n + 1 terminals are obtained by adding the new Steiner point into every possible edge.
Reference: [9] <author> W. Huang, </author> <title> "A Layout Advisor for Timing Critical Bus Routing", M.S. </title> <type> thesis, </type> <institution> Computer Science Dept., UCLA, </institution> <year> 1997. </year>
Reference-contexts: The table also reports treelength (TL) of the best solution normalized to the corresponding treelength for the same instance with "loosest" constraints. We report multiple-source nets having 5 and 6 pins, in 12- and 25- block layouts. More detailed results, including those for single-source nets are in <ref> [9] </ref>. Different numbers of tight pairs (/1, /2, ...) and tightness values (T = 1:1, T = 1:2, T = 1:3) and tightness values are tested. Specific numbers shown in each table are the average (minimum, maximum) values taken over ten test cases. <p> We report multi-source nets having 5 and 6 pins, in 12-and 25- block layouts. More detailed results including single-source nets are in <ref> [9] </ref>. Different numbers of tight pairs and tightness values are tested. The numbers we show in the table are average (minimum, maximum) values over ten test cases. Runtime divided by optimal runtime [RT] and tree-length divided by optimal treelength [TL] are also shown in the tables.
Reference: [10] <author> A. B. Kahng, G. Robins, </author> <title> On Optimal Interconnections for VLSI, </title> <publisher> Kluwer, </publisher> <year> 1994. </year>
Reference-contexts: Routing costs for horizontal 2 A simple extension of Hanan's 1968 result for rectilinear Steiner minimal trees is that the minimum-cost tree is a subgraph of a "Hanan grid" induced by terminal locations, block and routing region boundaries, as well as boundaries between different-cost regions. See, e.g., <ref> [10] </ref> for a review. edges are similarly computed. All Pairs Min-Jog Shortest Paths For each topology, our approach tests all assignments of candidate Steiner point locations to Steiner points of the topology.
Reference: [11] <author> L. Kou, G. Markowsky, L. Berman, </author> <title> "A Fast algorithm for Steiner trees", </title> <booktitle> in Axta Information, </booktitle> <volume> 15(2), </volume> <year> 1981, </year> <pages> pp. 141-145. </pages>
Reference-contexts: A lower bound on the Steiner tree cost over s and all terminals but a is generated using all-pairs shortest paths distances (metric closure of the escape graph distances). By the 1981 result of Kou, Markowsky and Berman <ref> [11] </ref>, the length of the Steiner minimal tree is at least 1=(2fl (11=L)) (L is the number of terminals of the tree) times the length of the minimum spanning tree (MST) in the metric closure of the escape graph.
Reference: [12] <author> J. Oh, I. Pyo, M. Pedram, </author> <title> "Constructing Lower and Upper Bounded Delay Routing Trees Using Linear Programming", </title> <booktitle> in Proc. European Design and Test Conf. </booktitle> <year> 1996, </year> <pages> pp. 244-249. </pages>
Reference-contexts: Previous literature on the multi-source delay-constrained routing problem is limited. Performance-driven multi-source routing is NP-complete [6] even without obstacles. Linear programming has been used to construct lower and upper bounded delay routing trees with a single source, under the linear delay model <ref> [12] </ref>; this work requires an input topology. For multi-source routing, [5] heuristically generates minimum-cost minimum-diameter Steiner arborescences; [4] wiresizes such routing trees via decomposition into source and loading subtrees. None of these algorithms for multiple-source net routing accept path delay bounds as constraints.
Reference: [13] <author> N. Saitou, M. Nei, </author> <title> "The Neighbor-joining Method: A New Method for Reconstructing Phylogenetic Trees", in Mol. </title> <journal> Biol. Evol., </journal> <volume> 4(4), </volume> <year> 1987, </year> <pages> pp. 406-425. </pages>
References-found: 13

