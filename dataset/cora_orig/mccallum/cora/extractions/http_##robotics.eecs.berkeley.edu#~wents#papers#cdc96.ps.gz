URL: http://robotics.eecs.berkeley.edu/~wents/papers/cdc96.ps.gz
Refering-URL: http://robotics.eecs.berkeley.edu/~wents/publications.html
Root-URL: 
Title: Recursive Workspace Control of Multibody Systems: A Planar Biped Example  
Author: Jeffrey M. Wendlandt S. Shankar Sastry 
Address: Berkeley  
Affiliation: Intelligent Machines and Robotics Laboratory University of California at  
Date: December 11-13, 1996  
Note: The 35th IEEE Conference on Decision and Control,  
Abstract: This paper presents a method of controlling multibody systems using a recursive formulation of workspace control. Using recursive multibody dynamics techniques, we generate the model for a workspace controller avoiding the need to symbolically create the complex equations of motion. The workspace controller is then applied to make a planar biped balance. The paper first describes the biped model and then presents the recursive workspace controller. Finally, the paper presents the results of a simulation in which the controller commands the biped to lower to a standing position. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> J.K Hodgins, W.L. Wooten, D.C. Brogan, and J.F. O'Brien. </editor> <booktitle> Animating human athletics. In Computer Graphics Proceedings. SIGGRAPH '95, </booktitle> <pages> pages 71-78, </pages> <address> New York, 1995. </address> <publisher> ACM Press. </publisher>
Reference-contexts: 1 Introduction Predictive computer models for human motion have applications in animation <ref> [1] </ref>, sports equipment design, soldier equipment design, and soldier training. To be effective, however, the predictive models must react appropriately and dynamically to changing body positions, varying loads, and external forces.
Reference: [2] <author> O. Khatib. </author> <title> A unified approach for motion and force control of robot manipulators: the operational space formulation. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> RA-3(1):43-53, </volume> <year> 1987. </year>
Reference-contexts: In this paper, we create a planar MB model, shown in recursive MB techniques. We calculate the workspace dynamics, also known as operational space dynamics fl Funded through ARO under grant DAAH-O4-96-1-0119 (AASERT) and DAAH-04-95-1-0588 y wents@eecs.berkeley.edu <ref> [2] </ref>, for the central body through several passes from rigid body to rigid body in the multibody structure. We formulate the controller in the central body to provide an intuitive relationship between input and output.
Reference: [3] <author> B. Mirtich. </author> <title> Impulse-based Simulation of Rigid Body Systems. </title> <type> PhD thesis, </type> <institution> U.C. Berkeley, </institution> <year> 1996. </year> <note> To be filed in 1996. </note>
Reference-contexts: The recursive multibody techniques alleviate the need to symbolically generate the complex differential equations of motion. The controlled system is simulated in 3D using Impulse <ref> [3] </ref> [4], a multibody simulator that is designed to handle contact. Impulse simulates the controlled system and provides the inputs to the recursive workspace controller. The simulator calls the controller at a user specified rate. The first section of the paper describes the model of the planar biped. <p> The AB inertia and bias force for the central body provide the approximate workspace dynamics. AB inertias and bias forces are discussed in many references including 2 [5], [6], [7], and <ref> [3] </ref>. The recursive workspace controller assumes that the feet are fixed to the floor. We approximate this condition from a big base assumption presented in [6]. The approximation assigns the feet a large mass and inertia (approximating the Earth) and sets the feet bias forces to zero.
Reference: [4] <author> Brian Mirtich and John Canny. </author> <title> Impulse-based simulation of rigid bodies. In Symposium on Interactive 3D Graphics, </title> <address> New York, 1995. </address> <publisher> ACM Press. </publisher>
Reference-contexts: The recursive multibody techniques alleviate the need to symbolically generate the complex differential equations of motion. The controlled system is simulated in 3D using Impulse [3] <ref> [4] </ref>, a multibody simulator that is designed to handle contact. Impulse simulates the controlled system and provides the inputs to the recursive workspace controller. The simulator calls the controller at a user specified rate. The first section of the paper describes the model of the planar biped. <p> The controller is coded in the C programming language and interfaced to the simulator Impulse. Impulse evolves the multibody system dynamics in contact with the floor. A more detailed description of Impulse can be found in <ref> [4] </ref>. The body pose and orientation relative to the inertial frame over the 10 second simulation time is shown in degrees. The final configuration of the biped is shown in Figure 1. The six joint angles are shown over time in Figure 5.
Reference: [5] <author> R. Featherstone. </author> <title> The calculation of robot dynamics using articulated-body inertias. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 2(1) </volume> <pages> 13-30, </pages> <year> 1983. </year>
Reference-contexts: The workspace dynamics calculation consists of an inboard recursion from the feet to the central body. The workspace dynamics calculation produces the approximate workspace dynamics for the central body. This stage calculates the articulated body (AB) inertia <ref> [5] </ref> and bias forces of the inboard link based on the AB inertia and bias forces of the outboard link. The AB inertia and bias forces relate an external force applied to a link to the acceleration of that link and take into account the links outboard to the link. <p> The AB inertia and bias force for the central body provide the approximate workspace dynamics. AB inertias and bias forces are discussed in many references including 2 <ref> [5] </ref>, [6], [7], and [3]. The recursive workspace controller assumes that the feet are fixed to the floor. We approximate this condition from a big base assumption presented in [6]. <p> The algorithm calculates the articulated body (AB) iner tia <ref> [5] </ref> and bias forces of the inboard link based on the AB inertia and bias force of the outboard link. The AB inertia and bias forces for the central body are calculated in the last step in the iteration.
Reference: [6] <author> K. W. Lilly. </author> <title> Efficient Dynamic Simulation of Robotic Mechanisms. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1993. </year>
Reference-contexts: The AB inertia and bias force for the central body provide the approximate workspace dynamics. AB inertias and bias forces are discussed in many references including 2 [5], <ref> [6] </ref>, [7], and [3]. The recursive workspace controller assumes that the feet are fixed to the floor. We approximate this condition from a big base assumption presented in [6]. The approximation assigns the feet a large mass and inertia (approximating the Earth) and sets the feet bias forces to zero. <p> AB inertias and bias forces are discussed in many references including 2 [5], <ref> [6] </ref>, [7], and [3]. The recursive workspace controller assumes that the feet are fixed to the floor. We approximate this condition from a big base assumption presented in [6]. The approximation assigns the feet a large mass and inertia (approximating the Earth) and sets the feet bias forces to zero. There exists exact methods for calculating the workspace dynamics and a method is derived in [8]. The exact workspace inertia is calculated [6]. <p> a big base assumption presented in <ref> [6] </ref>. The approximation assigns the feet a large mass and inertia (approximating the Earth) and sets the feet bias forces to zero. There exists exact methods for calculating the workspace dynamics and a method is derived in [8]. The exact workspace inertia is calculated [6]. We have derived an exact workspace dynamics algorithm in terms of Lie group notation but do not present it in this paper. The exact method requires an additional central body to feet recursion. <p> The fixed base approximation is then applied to the two feet. The next inboard recursion calculates the AB inertia for each link based on the AB inertia of the outboard link. The approximate calculation of the workspace inertia is given in <ref> [6] </ref> and an exact calculation with coriolis and gravitational forces is given in [8] in terms of the spatial op erator algebra.
Reference: [7] <author> A. Jain. </author> <title> Unified formulation of dynamics for serial rigid multibody systems. </title> <journal> Journal of Guidance Control and Dynamics, </journal> <volume> 14(3) </volume> <pages> 531-542, </pages> <month> May-June </month> <year> 1991. </year>
Reference-contexts: The AB inertia and bias force for the central body provide the approximate workspace dynamics. AB inertias and bias forces are discussed in many references including 2 [5], [6], <ref> [7] </ref>, and [3]. The recursive workspace controller assumes that the feet are fixed to the floor. We approximate this condition from a big base assumption presented in [6]. The approximation assigns the feet a large mass and inertia (approximating the Earth) and sets the feet bias forces to zero.
Reference: [8] <author> K. Kreutz-Delgado, A. Jain, and G. Rodriguez. </author> <title> Recursive formulation of operational space control. </title> <journal> International Journal of Robotics Research, </journal> <volume> 11(4) </volume> <pages> 320-8, </pages> <year> 1992. </year>
Reference-contexts: We approximate this condition from a big base assumption presented in [6]. The approximation assigns the feet a large mass and inertia (approximating the Earth) and sets the feet bias forces to zero. There exists exact methods for calculating the workspace dynamics and a method is derived in <ref> [8] </ref>. The exact workspace inertia is calculated [6]. We have derived an exact workspace dynamics algorithm in terms of Lie group notation but do not present it in this paper. The exact method requires an additional central body to feet recursion. <p> The next inboard recursion calculates the AB inertia for each link based on the AB inertia of the outboard link. The approximate calculation of the workspace inertia is given in [6] and an exact calculation with coriolis and gravitational forces is given in <ref> [8] </ref> in terms of the spatial op erator algebra. We have derived a recursive algorithm to calculate the exact workspace dynamics in terms of Lie group theory and the steps in this algorithm share many similarities with the algorithm derived by the spatial operator algebra in [8]. 3.4 Workspace Force Calculation <p> forces is given in <ref> [8] </ref> in terms of the spatial op erator algebra. We have derived a recursive algorithm to calculate the exact workspace dynamics in terms of Lie group theory and the steps in this algorithm share many similarities with the algorithm derived by the spatial operator algebra in [8]. 3.4 Workspace Force Calculation The previous step provides the approximate workspace inertia and workspace bias forces. The workspace inertia is the AB inertia for link 1, P 1 . The workspace coriolis forces and gravitational forces are contained in z 1 .
Reference: [9] <author> R. Murray, Z. Li, and S. Sastry. </author> <title> A Mathematical Introduction to Robotic Manipulation. </title> <publisher> CRC Press, </publisher> <address> Boca Raton, Fl, </address> <year> 1994. </year>
Reference-contexts: In Equation (3.6), Ad h is the adjoint for h 2SE (2) and is a 3x3 matrix given by Ad h = 4 R +px 3 where h = R p The adjoint appropriately transforms velocities and forces in different frames. See <ref> [9] </ref> for a background 3 in using Lie group theory in robotics. The joint map is given by H i:o and is a vector that represents the twist of joint i written in the link frame outboard to joint i, the frame of link i:o. <p> The coriolis terms are contained in a b i and in the last term of b b i:o . The first term in b b i:o is the gravitational force written in link i:o coordinates. Again, for a more detailed discussion of the notation of twists and adjoints, see <ref> [9] </ref>.
Reference: [10] <author> F.C. Park, J.E. Bobrow, and S.R. Ploen. </author> <title> A Lie group formulation of robot dynamics. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 14(6) </volume> <pages> 609-618, </pages> <month> De-cember </month> <year> 1995. </year> <month> 6 </month>
Reference-contexts: The first term in b b i:o is the gravitational force written in link i:o coordinates. Again, for a more detailed discussion of the notation of twists and adjoints, see [9]. In <ref> [10] </ref>, the authors derive the solution of the inverse dynamics problem (given joint angles, velocities, and accelerations calculate the necessary torques) for serial chains in terms of Lie group theory and give a background in twists and adjoints. 3.3 Workspace Dynamics Calculation The approximate workspace dynamics are calculated through a recursion
References-found: 10

