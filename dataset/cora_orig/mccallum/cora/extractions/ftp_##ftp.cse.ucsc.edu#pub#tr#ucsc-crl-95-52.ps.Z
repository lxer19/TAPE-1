URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-95-52.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Title: Genetic Simulated Annealing and Application to Non-slicing Floorplan Design  
Author: Seiichi Koakutsu Maggie Kang Wayne Wei-Ming Dai 
Keyword: Non-Slicing Floorplan, Genetic Simulated Annealing, Bounded Slicing Grid, Crossover, Mutation, Space Solution, Timing Driven GSA Floor-plan  
Address: Santa Cruz, CA 95064 USA  
Affiliation: Baskin Center for Computer Engineering Information Sciences University of California, Santa Cruz  
Date: November 18, 1995  
Pubnum: UCSC-CRL-95-52  
Abstract: We propose a new optimization method, named genetic simulated annealing (GSA), which combines the local stochastic hill climbing features from simulated annealing (SA) and the global crossover operations from genetic algorithm (GA). We demonstrated the advantages of GSA by solving one of the most difficult problems in layout | the non-slicing floorplan design problem. Given the same amount of computing resources, our experimental results showed that GSA consistently obtained better results than SA, in terms of both the chip area and the total wire length. We also applied GSA to timing driven floorplan design and experimental results indicated that it achieved the specified wire length bounds for the critical nets with small penalty on the chip area and the total wire length. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Kirkpatrick, C. D. Gelatt, Jr. and M. P. Vecchi, </author> <title> "Optimization by Simulated Annealing," </title> <journal> Science, </journal> <volume> 220, pp.671-680, </volume> <month> May </month> <year> 1983. </year>
Reference-contexts: 1 Introduction Most of VLSI layout problems can be formulated as combinatorial optimization problems and are proven to be NP-hard or NP-complete problems. Simulated annealing (SA) <ref> [1, 2] </ref> and Genetic algorithm (GA) [3, 4] are heuristics for combinatorial optimization problems and have been successfully used for various problems in the CAD area [5, 6, 7, 8, 9].
Reference: [2] <author> N. Metropolis, A. W. Rosenbluth, M. N. Rosenbluth, A. H. Teller and E. Teller, </author> <title> "Equation of State Calculations by Fast Computing Machines," </title> <journal> J. of Chemical Physics, vol.21, no.6, </journal> <volume> pp.1087-1092, </volume> <year> 1953. </year>
Reference-contexts: 1 Introduction Most of VLSI layout problems can be formulated as combinatorial optimization problems and are proven to be NP-hard or NP-complete problems. Simulated annealing (SA) <ref> [1, 2] </ref> and Genetic algorithm (GA) [3, 4] are heuristics for combinatorial optimization problems and have been successfully used for various problems in the CAD area [5, 6, 7, 8, 9].
Reference: [3] <author> J. H. Holland, </author> <booktitle> Adaptation in Natural and Artificial Systems. </booktitle> <address> Ann Arbor, </address> <publisher> MI:University of Michigan Press (1975). </publisher>
Reference-contexts: 1 Introduction Most of VLSI layout problems can be formulated as combinatorial optimization problems and are proven to be NP-hard or NP-complete problems. Simulated annealing (SA) [1, 2] and Genetic algorithm (GA) <ref> [3, 4] </ref> are heuristics for combinatorial optimization problems and have been successfully used for various problems in the CAD area [5, 6, 7, 8, 9].
Reference: [4] <author> D. E. Goldberg, </author> <title> Genetic Algorithms: In Search, Optimization and Machine Learning. </title> <address> Reading, MA: </address> <publisher> Addison-Wesley, </publisher> <year> 1989. </year> <note> 14 References </note>
Reference-contexts: 1 Introduction Most of VLSI layout problems can be formulated as combinatorial optimization problems and are proven to be NP-hard or NP-complete problems. Simulated annealing (SA) [1, 2] and Genetic algorithm (GA) <ref> [3, 4] </ref> are heuristics for combinatorial optimization problems and have been successfully used for various problems in the CAD area [5, 6, 7, 8, 9].
Reference: [5] <author> C. Sechen and A. Sangiovanni-Vincentelli, </author> <title> "TimberWolf 3.2 : A new standard cell placement and global routing package," </title> <booktitle> Proc. 23rd Design Automation Conf., </booktitle> <address> pp.432-439, </address> <month> June </month> <year> 1986. </year>
Reference-contexts: Simulated annealing (SA) [1, 2] and Genetic algorithm (GA) [3, 4] are heuristics for combinatorial optimization problems and have been successfully used for various problems in the CAD area <ref> [5, 6, 7, 8, 9] </ref>. While SA is very powerful for searching local regions of the solution space exhaustively via stochastic hill climbing, GA is very powerful for searching large regions of the solution space roughly and globally using crossover operations.
Reference: [6] <author> D. F. Wong and C. L. Liu, </author> <title> "A new algorithm for floorplan design," </title> <booktitle> Proc. 23rd Design Automation Conf., </booktitle> <address> pp.101-107, </address> <month> June </month> <year> 1986. </year>
Reference-contexts: Simulated annealing (SA) [1, 2] and Genetic algorithm (GA) [3, 4] are heuristics for combinatorial optimization problems and have been successfully used for various problems in the CAD area <ref> [5, 6, 7, 8, 9] </ref>. While SA is very powerful for searching local regions of the solution space exhaustively via stochastic hill climbing, GA is very powerful for searching large regions of the solution space roughly and globally using crossover operations. <p> That is, the global optimal solution must be reachable by a sequence of moves and each move can be evaluated quickly. Wong and Liu represented a slicing floorplan by a normalized Polish expression which enables efficient neighborhood search <ref> [6] </ref>. Cohoon et al. applied distributed GA to the same problem and obtained better floorplan results with fewer number of cost calculations [8]. 4.
Reference: [7] <author> J. P. Cohoon and W. D. Paris, </author> <title> "Genetic placement," </title> <journal> IEEE trans. Computer-Aided Design, vol.CAD-6, no.6, </journal> <volume> pp.956-964, </volume> <month> November </month> <year> 1987. </year>
Reference-contexts: Simulated annealing (SA) [1, 2] and Genetic algorithm (GA) [3, 4] are heuristics for combinatorial optimization problems and have been successfully used for various problems in the CAD area <ref> [5, 6, 7, 8, 9] </ref>. While SA is very powerful for searching local regions of the solution space exhaustively via stochastic hill climbing, GA is very powerful for searching large regions of the solution space roughly and globally using crossover operations.
Reference: [8] <author> J. P. Cohoon, S. U. Hegde, W. N. Martin and D. S. Richards, </author> <title> "Distributed Genetic Algorithms for the Floorplan Design Problem," </title> <journal> IEEE trans. Computer-Aided Design, Vol.CAD-10, No.4, </journal> <volume> pp.483-492, </volume> <year> 1991. </year>
Reference-contexts: Simulated annealing (SA) [1, 2] and Genetic algorithm (GA) [3, 4] are heuristics for combinatorial optimization problems and have been successfully used for various problems in the CAD area <ref> [5, 6, 7, 8, 9] </ref>. While SA is very powerful for searching local regions of the solution space exhaustively via stochastic hill climbing, GA is very powerful for searching large regions of the solution space roughly and globally using crossover operations. <p> Wong and Liu represented a slicing floorplan by a normalized Polish expression which enables efficient neighborhood search [6]. Cohoon et al. applied distributed GA to the same problem and obtained better floorplan results with fewer number of cost calculations <ref> [8] </ref>. 4.
Reference: [9] <author> K. Shahookar and P. Mazumder, </author> <title> "A genetic approach to standard cell placement using meta-genetic parameter optimization," </title> <journal> IEEE trans. Comput.-Aided Design, Vol.CAD-9, No.5, </journal> <volume> pp.500-511, </volume> <year> 1990. </year>
Reference-contexts: Simulated annealing (SA) [1, 2] and Genetic algorithm (GA) [3, 4] are heuristics for combinatorial optimization problems and have been successfully used for various problems in the CAD area <ref> [5, 6, 7, 8, 9] </ref>. While SA is very powerful for searching local regions of the solution space exhaustively via stochastic hill climbing, GA is very powerful for searching large regions of the solution space roughly and globally using crossover operations.
Reference: [10] <author> D. Sirag and P. Weisser, </author> <title> "Toward a Unified Thermodynamic Genetic Operator," </title> <booktitle> in Proc. 2nd Int. Conf. Genetic Algorithms, </booktitle> <address> pp.116-122, </address> <year> 1987. </year>
Reference-contexts: Fig.2.2 shows the pseudo-code of GA. 3 Genetic Simulated Annealing In order to improve the performance of GA and SA, several hybrid algorithms have been proposed. Mutation used in GA tends to destroy some good features of solutions at the final stages of optimization process. While Sigrag and Weisser <ref> [10] </ref> proposed a thermodynamic genetic operator, which incorporates an annealing schedule to control the probability of applying the mutation, Adler [11] used a SA-based acceptance function to control the probability of accepting a new solution produced by the mutation.
Reference: [11] <author> D. Adler, </author> <title> "Genetic Algorithms and Simulated Annealing: A Marriage Proposal," </title> <booktitle> in Proc. Int. Conf. Neural Network, </booktitle> <address> pp.1104-1109, </address> <year> 1993. </year>
Reference-contexts: Mutation used in GA tends to destroy some good features of solutions at the final stages of optimization process. While Sigrag and Weisser [10] proposed a thermodynamic genetic operator, which incorporates an annealing schedule to control the probability of applying the mutation, Adler <ref> [11] </ref> used a SA-based acceptance function to control the probability of accepting a new solution produced by the mutation. More recent works on GA-oriented hybrids are the Simulated Annealing Genetic Algorithm (SAGA) method proposed by Brown et al. [12] and Annealing Genetic (AG) method proposed by Lin et al. [13].
Reference: [12] <author> D. Brown, C. Huntley, and A. Spillane, </author> <title> "A Parallel Genetic Heuristic for the Quadratic Assignment Problem," </title> <booktitle> in Proc. 3rd Int. Conf. Genetic Algorithms, </booktitle> <address> pp.406-415, </address> <year> 1989. </year>
Reference-contexts: More recent works on GA-oriented hybrids are the Simulated Annealing Genetic Algorithm (SAGA) method proposed by Brown et al. <ref> [12] </ref> and Annealing Genetic (AG) method proposed by Lin et al. [13]. Both methods divide each "generation" into two phases: GA phase and SA phase. GA generates a set of new solutions using the crossover operator and then SA further refines each solution in the population.
Reference: [13] <author> F.-T. Lin, C.-Y. Kao, and C.-C. Hsu, </author> <title> "Applying the Genetic Approach to Simulated Annealing in Solving Some NP-Hard Problems," </title> <journal> IEEE Trans. System, Man, and Cybernetics., vol.23, no.6, </journal> <volume> pp.1752-1767, </volume> <year> 1993. </year>
Reference-contexts: More recent works on GA-oriented hybrids are the Simulated Annealing Genetic Algorithm (SAGA) method proposed by Brown et al. [12] and Annealing Genetic (AG) method proposed by Lin et al. <ref> [13] </ref>. Both methods divide each "generation" into two phases: GA phase and SA phase. GA generates a set of new solutions using the crossover operator and then SA further refines each solution in the population.
Reference: [14] <author> S. Koakutsu, Y. Sugai, H. Hirata, </author> <title> "Block Placement by Improved Simulated Annealing Based on Genetic Algorithm," </title> <journal> Tran. of the Institute of Electronics, Information and Communication Engineers of Japan, vol.J73-A, No.1, </journal> <volume> pp.87-94, </volume> <year> 1990. </year>
Reference-contexts: Since they incorporate full SA into each generation and the number of generations is usually very large, GA-oriented hybrid methods are very time-consuming. SA-oriented hybrid approaches, on the other hand, attempt to adopt the global crossover operations of GA into SA. Parallel Genetic Simulated Annealing (PGSA) <ref> [14, 15] </ref>, is a parallel version of SA incorporating GA features. During parallel SA-based search, crossover is used to generate new solutions in order to enlarge the search region of SA. We propose a new optimization method called Genetic Simulated Annealing (GSA).
Reference: [15] <author> S. Koakutsu, Y. Sugai, H. Hirata, </author> <title> "Floorplanning by Improved Simulated Annealing Based on Genetic Algorithm," </title> <journal> Trans. of the Institute of Electrical Engineers of Japan, vol.112-C, No.7, </journal> <volume> pp.411-416, </volume> <year> 1992. </year>
Reference-contexts: Since they incorporate full SA into each generation and the number of generations is usually very large, GA-oriented hybrid methods are very time-consuming. SA-oriented hybrid approaches, on the other hand, attempt to adopt the global crossover operations of GA into SA. Parallel Genetic Simulated Annealing (PGSA) <ref> [14, 15] </ref>, is a parallel version of SA incorporating GA features. During parallel SA-based search, crossover is used to generate new solutions in order to enlarge the search region of SA. We propose a new optimization method called Genetic Simulated Annealing (GSA).
Reference: [16] <author> S. Nakatake, H. Murata, K. Fujiyoshi, and Y. Kajitani, </author> <title> "Bounded-Slicing Structure for Module Placement," </title> <journal> Techinical Report of the Institute of Electronics, Information and Communication Engineers of Japan, vol.VLD94, no.313, </journal> <volume> pp.19-24, </volume> <year> 1994. </year>
Reference: [17] <author> Y.-T. Lai, and S. M. Leinwarnd, </author> <title> "Algorithms for Floorplan Design Via Rectangular Dualization," </title> <journal> IEEE Trans. Computer-Aided Design, vol.CAD-7, no.12, </journal> <volume> pp.1278-1289, </volume> <year> 1988. </year>
Reference-contexts: Many different floorplanning methods have been proposed, for example, rectangular dualization based methods <ref> [17, 18] </ref>, integer programming based methods [19, 20], constructive methods [21, 22], and hierarchical methods [23, 24, 25]. In order to apply stochastic optimization to a combinatorial problem, we must represent the solution space completely and efficiently.
Reference: [18] <author> M. J. Ciesielski, and E. Kinnen, </author> <title> "Digraph Relaxation for 2-Dmensional Placement of IC Blocks," </title> <journal> IEEE Trans. Computer-Aided Design, vol.CAD-6, no.1, </journal> <volume> pp.55-66, </volume> <year> 1987. </year>
Reference-contexts: Many different floorplanning methods have been proposed, for example, rectangular dualization based methods <ref> [17, 18] </ref>, integer programming based methods [19, 20], constructive methods [21, 22], and hierarchical methods [23, 24, 25]. In order to apply stochastic optimization to a combinatorial problem, we must represent the solution space completely and efficiently.
Reference: [19] <author> S. Sutanthavibul, E. Shragowitz, and J. B. Rosen, </author> <title> "An Analytical Approach to Floorplan Design and Optimization," </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <note> vol.CAD-10, no.6, pp.761-769, 1991. References 15 </note>
Reference-contexts: Many different floorplanning methods have been proposed, for example, rectangular dualization based methods [17, 18], integer programming based methods <ref> [19, 20] </ref>, constructive methods [21, 22], and hierarchical methods [23, 24, 25]. In order to apply stochastic optimization to a combinatorial problem, we must represent the solution space completely and efficiently.
Reference: [20] <author> C.-S. Ying, and J. S.-L. Wong, </author> <title> "An Analytical Approach to Floorplanning for Hierarchical Building Block Layout," </title> <journal> IEEE Trans. Computer-Aided Design, vol.CAD-8, no.4, </journal> <volume> pp.403-412, </volume> <year> 1989. </year>
Reference-contexts: Many different floorplanning methods have been proposed, for example, rectangular dualization based methods [17, 18], integer programming based methods <ref> [19, 20] </ref>, constructive methods [21, 22], and hierarchical methods [23, 24, 25]. In order to apply stochastic optimization to a combinatorial problem, we must represent the solution space completely and efficiently.
Reference: [21] <author> S. Wimer, and I. Koren, </author> <title> "Analysis of Strategies for Constructive General Block Placement, </title> <journal> IEEE Trans. Computer-Aided Design, vol.CAD-7, no.3, </journal> <volume> pp.371-377, </volume> <year> 1988. </year>
Reference-contexts: Many different floorplanning methods have been proposed, for example, rectangular dualization based methods [17, 18], integer programming based methods [19, 20], constructive methods <ref> [21, 22] </ref>, and hierarchical methods [23, 24, 25]. In order to apply stochastic optimization to a combinatorial problem, we must represent the solution space completely and efficiently. That is, the global optimal solution must be reachable by a sequence of moves and each move can be evaluated quickly.
Reference: [22] <author> D. P. La Potin, and S. W. Director, "Mason: </author> <title> A Global Floorplanning Approach for VLSI Design," </title> <journal> IEEE Trans. Computer-Aided Design, vol.CAD-5, no.4, </journal> <volume> pp.477-489, </volume> <year> 1985. </year>
Reference-contexts: Many different floorplanning methods have been proposed, for example, rectangular dualization based methods [17, 18], integer programming based methods [19, 20], constructive methods <ref> [21, 22] </ref>, and hierarchical methods [23, 24, 25]. In order to apply stochastic optimization to a combinatorial problem, we must represent the solution space completely and efficiently. That is, the global optimal solution must be reachable by a sequence of moves and each move can be evaluated quickly.
Reference: [23] <author> T. Lengauer, and R. Muller, </author> <title> "Robust and Accurate Hierarchical Floorplanning with Integrated Global Wiring," </title> <journal> IEEE Trans. Computer-Aided Design, vol.CAD-12, no.6, </journal> <volume> pp.802-809, </volume> <year> 1993. </year>
Reference-contexts: Many different floorplanning methods have been proposed, for example, rectangular dualization based methods [17, 18], integer programming based methods [19, 20], constructive methods [21, 22], and hierarchical methods <ref> [23, 24, 25] </ref>. In order to apply stochastic optimization to a combinatorial problem, we must represent the solution space completely and efficiently. That is, the global optimal solution must be reachable by a sequence of moves and each move can be evaluated quickly.
Reference: [24] <author> W. W.-M. Dai, B. Eschermann, E. S. Kuh, and M. Pedram, </author> <title> "Hierarchical Placement and Floorplanning in BEAR," </title> <journal> IEEE Trans. Computer-Aided Design, vol.CAD-8, no.12, </journal> <volume> pp.1335-1349, </volume> <year> 1989. </year>
Reference-contexts: Many different floorplanning methods have been proposed, for example, rectangular dualization based methods [17, 18], integer programming based methods [19, 20], constructive methods [21, 22], and hierarchical methods <ref> [23, 24, 25] </ref>. In order to apply stochastic optimization to a combinatorial problem, we must represent the solution space completely and efficiently. That is, the global optimal solution must be reachable by a sequence of moves and each move can be evaluated quickly.
Reference: [25] <author> W.-M. Dai, and E. S. Kuh, </author> <title> "Simultaneous Floor Planning and Global Routing for Hierarchical Building-Block Layout," </title> <journal> IEEE Trans. Computer-Aided Design, vol.CAD-6, no.5, </journal> <volume> pp.828-837, </volume> <year> 1987. </year>
Reference-contexts: Many different floorplanning methods have been proposed, for example, rectangular dualization based methods [17, 18], integer programming based methods [19, 20], constructive methods [21, 22], and hierarchical methods <ref> [23, 24, 25] </ref>. In order to apply stochastic optimization to a combinatorial problem, we must represent the solution space completely and efficiently. That is, the global optimal solution must be reachable by a sequence of moves and each move can be evaluated quickly.
References-found: 25

