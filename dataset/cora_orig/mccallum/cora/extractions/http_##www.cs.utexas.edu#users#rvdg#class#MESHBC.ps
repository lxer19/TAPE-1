URL: http://www.cs.utexas.edu/users/rvdg/class/MESHBC.ps
Refering-URL: http://www.cs.utexas.edu/users/rvdg/class/materials.html
Root-URL: 
Email: mbarnett@cs.uidaho.edu  payne@ssd.intel.com  rvdg@cs.utexas.edu  jwatts@scp.caltech.edu  
Title: Broadcasting on Meshes with Worm-Hole Routing  
Author: Michael Barnett David G. Payne Robert A. van de Geijn Jerrell Watts 
Date: November 2, 1993  September 21, 1994  
Note: Original Version:  Revised Version:  
Address: Moscow, Idaho 83844-1010  15201 N.W. Greenbrier Pkwy Beaverton, Oregon 97006  Austin, Texas 78712-1188  Pasadena, California 91125  
Affiliation: Department of Computer Science University of Idaho  Supercomputer Systems Division Intel Corporation  Department of Computer Sciences The University of Texas at Austin  Scalable Concurrent Programming Laboratory California Institute of Technology  
Abstract: We address the problem of broadcasting on mesh architectures with arbitrary (non-power-two) dimensions. It is assumed that such mesh architectures employ cut-through or worm-hole routing. The primary focus is on avoiding network conflicts in the various proposed algorithms. We give algorithms for performing a conflict-free minimum-spanning tree broadcast, a pipelined algorithm that is similar to Ho and Johnsson's EDST algorithm for hypercubes, and a novel scatter-collect approach that is a natural choice for communication libraries due to its simplicity. Results obtained on the Intel Paragon system are included.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Barnett, D. Payne, and R. van de Geijn. </author> <title> Optimal broadcasting in mesh-connected architectures. </title> <type> Technical Report TR-91-38, </type> <institution> Department of Computer Sciences, The University of Texas at Austin, </institution> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: Each of these separate broadcasts is within a linear array, for which it is easy to see that our method avoids network conflicts. A more formal proof of this observation can be found in <ref> [1] </ref>. 3.3 MST Broadcast on non-power-two meshes But meshes, unlike hypercubes, are not restricted to contain a number of nodes that is a power of two. <p> At each step, the linear array 6 s s s s s s - s s s ? 3 4 5 linear array to the mesh. (a) The paths h1; 0i and h2; 3i do not conflict. (b) The logical path h1; 0i is routed on the physical path <ref> [1; 0] </ref>, while the logical path h2; 3i is routed on the physical path [2; 1; 0; 3] inducing conflict on the link between 0 and 1. is divided approximately in half, and the root sends a message to a node in the half of the linear array that doesn't contain <p> - s s s ? 3 4 5 linear array to the mesh. (a) The paths h1; 0i and h2; 3i do not conflict. (b) The logical path h1; 0i is routed on the physical path [1; 0], while the logical path h2; 3i is routed on the physical path <ref> [2; 1; 0; 3] </ref> inducing conflict on the link between 0 and 1. is divided approximately in half, and the root sends a message to a node in the half of the linear array that doesn't contain the root. <p> In [11], a broadcast is presented that has somewhat of a flavor of our "scatter-collect". In essence, the author followed our suggestion that the broadcast can be implemented as a modified global summation and used some of the techniques for such algorithms developed in <ref> [1, 2, 3, 12] </ref>. The resulting algorithms are not asymptotically optimal, but do avoid network conflicts.
Reference: [2] <author> M. Barnett, R. Littlefield, D.G. Payne, and R. van de Geijn. </author> <title> Efficient Communication Primitives on Mesh Architectures with Hardware Routing. </title> <booktitle> Sixth SIAM Conf. on Par. Proc. for Sci. Comp., </booktitle> <address> Norfolk, Virginia, March 22-24, </address> <year> 1993. </year>
Reference-contexts: - s s s ? 3 4 5 linear array to the mesh. (a) The paths h1; 0i and h2; 3i do not conflict. (b) The logical path h1; 0i is routed on the physical path [1; 0], while the logical path h2; 3i is routed on the physical path <ref> [2; 1; 0; 3] </ref> inducing conflict on the link between 0 and 1. is divided approximately in half, and the root sends a message to a node in the half of the linear array that doesn't contain the root. <p> In [11], a broadcast is presented that has somewhat of a flavor of our "scatter-collect". In essence, the author followed our suggestion that the broadcast can be implemented as a modified global summation and used some of the techniques for such algorithms developed in <ref> [1, 2, 3, 12] </ref>. The resulting algorithms are not asymptotically optimal, but do avoid network conflicts.
Reference: [3] <author> M. Barnett, R. Littlefield, D.G. Payne, and R. van de Geijn, </author> <title> Global Combine on Mesh Architectures with Wormhole Routing, </title> <booktitle> 7th International Parallel Processing Symposium, </booktitle> <pages> pages 156-162, </pages> <publisher> IEEE Computer Society Press, </publisher> <address> Newport Beach, CA, </address> <month> April 13-16, </month> <year> 1993. </year>
Reference-contexts: - s s s ? 3 4 5 linear array to the mesh. (a) The paths h1; 0i and h2; 3i do not conflict. (b) The logical path h1; 0i is routed on the physical path [1; 0], while the logical path h2; 3i is routed on the physical path <ref> [2; 1; 0; 3] </ref> inducing conflict on the link between 0 and 1. is divided approximately in half, and the root sends a message to a node in the half of the linear array that doesn't contain the root. <p> must traverse a minimum of r + c 1 links to get from the root to the most distant node. 5 Alternative Algorithm: Scatter-Collect Ideas from our previous work on performing the global combine can be used to obtain an alternative tradeoff between the startup cost and the transfer cost <ref> [3] </ref>. We first present a simple algorithm for one-dimensional meshes, and then extend it for the two-dimensional case. 5.1 1-D scatter-collect The RSbcast algorithm can be modified by splitting the vector in half at each step of the algorithm (the "scatter"). <p> In [11], a broadcast is presented that has somewhat of a flavor of our "scatter-collect". In essence, the author followed our suggestion that the broadcast can be implemented as a modified global summation and used some of the techniques for such algorithms developed in <ref> [1, 2, 3, 12] </ref>. The resulting algorithms are not asymptotically optimal, but do avoid network conflicts.
Reference: [4] <author> J.-C. Bermond, P. Michallon, and D. Trystram. </author> <title> Broadcasting in wraparound meshes with parallel monodi-rectional links. </title> <journal> Parallel Computing, </journal> <volume> 18 </volume> <pages> 639-648, </pages> <year> 1992. </year>
Reference-contexts: The EDST strategy can be generalized to meshes by using two edge-disjoint "fences 1 " and alternating between them in the same manner as above. This technique was independently discovered by Bermond, Michallon and Trystram and is more thoroughly described in <ref> [4] </ref>. In that paper, the assumptions are somewhat different. <p> Our approach to edge-disjoint fences is closely related to the work in <ref> [4] </ref>, where the embedding of edge-disjoint trees in wraparound (torii) meshes is discussed. The true wraparound links provide a mesh that has roughly half the diameter of the worm-hole meshes we consider.
Reference: [5] <author> C.-T. Ho and S. L. Johnsson, </author> <title> Distributed Routing Algorithms for Broadcasting and Personalized Communication in Hypercubes. </title> <booktitle> Proceedings of the 1986 International Conference on Parallel Processing, </booktitle> <pages> pages 640-648, </pages> <publisher> IEEE, </publisher> <year> 1986. </year>
Reference-contexts: For hypercubes, better algorithms exist. In particular, if communication latency is ignored, asymptotically the cost of a broadcast can be reduced to be proportional to n, independent of p, by using Ho and Johnsson's EDST algorithm <ref> [5] </ref>. This algorithm is not widely used, probably because its complexity makes it less attractive for a library and difficult to modify for special cases. The two-dimensional (2D) mesh architecture with wormhole routing is an attractive interconnection architecture for distributed-memory multicomputers. <p> The source node alternates between the trees, sending a packet along each in round-robin fashion. This is the EDST broadcast first proposed by Ho and Johnsson <ref> [5] </ref>. The resulting pipe depth becomes log 2 (p) + 1. The EDST algorithm is unsuitable for mesh architectures, however. In particular, the hypercube trees are no longer edge-disjoint when embedded in a mesh. The overlapping pipelines create considerable contention, destroying the performance of the algorithm. <p> Interestingly enough, broadcasting a fixed length message on a small number of nodes takes longer that on a large number of nodes! * In practice the scatter/collect outperforms the theoretically better EDF algorithm. 7 Related Work As mentioned previously, the state of the art in broadcasting on hypercubes is <ref> [5, 6] </ref>. Our approach to edge-disjoint fences is closely related to the work in [4], where the embedding of edge-disjoint trees in wraparound (torii) meshes is discussed. The true wraparound links provide a mesh that has roughly half the diameter of the worm-hole meshes we consider.
Reference: [6] <author> C.-T. Ho and M.T. Raghunath. </author> <title> Efficient communication primitives on hypercubes. </title> <type> Technical Report RJ 7932 (72915), </type> <institution> IBM, </institution> <month> Jan. </month> <year> 1991. </year> <month> 20 </month>
Reference-contexts: Interestingly enough, broadcasting a fixed length message on a small number of nodes takes longer that on a large number of nodes! * In practice the scatter/collect outperforms the theoretically better EDF algorithm. 7 Related Work As mentioned previously, the state of the art in broadcasting on hypercubes is <ref> [5, 6] </ref>. Our approach to edge-disjoint fences is closely related to the work in [4], where the embedding of edge-disjoint trees in wraparound (torii) meshes is discussed. The true wraparound links provide a mesh that has roughly half the diameter of the worm-hole meshes we consider.
Reference: [7] <author> S.L. Lillevik, </author> <title> The Touchsone 30 Gigaflop Delta Prototype. </title> <booktitle> In Sixth Distributed Memory Computing Conference Proceedings, </booktitle> <pages> pages 671-677. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year>
Reference: [8] <author> R.J. Littlefield, </author> <title> "Modeling Node Bandwidth Limits and Their Effect on Vector Combining Algorithms" Pacific Northwest Laboratory, no. </title> <address> PNL-SA-20425, </address> <year> 1992. </year>
Reference-contexts: In that paper, the assumptions are somewhat different. Specifically, 1 We use the term fence since we discovered the algorithm by first considering a method that creates paths that look like a fence, similar to techniques discussed in <ref> [8] </ref> 9 the authors assumed the mesh was a multi-ported, store-and-forward torus, rather than a single-ported, worm-hole routed mesh. For simplicity, assume the root of the broadcast to be node P 0 .
Reference: [9] <author> L. M. Ni and P. K. McKinley. </author> <title> A survey of wormhole routing techniques in direct networks. </title> <journal> IEEE Computer, </journal> <volume> 26(2) </volume> <pages> 62-76, </pages> <month> Feb. </month> <year> 1993. </year>
Reference: [10] <author> Y. Saad and M. H. Schultz. </author> <title> Data Communiciation in Parallel Architectures. </title> <institution> Yale University Research Report YALEU/DCS/RR-461, </institution> <month> 857-873, </month> <year> 1986. </year>
Reference-contexts: one to reduce the transmission time component, as we shall see next. 4.1 Pipelining on a Linear Array When the p nodes are arranged as a linear array, a broadcast from P 0 can be accomplished by partitioning the message into k equal-sized packets and pipelining them along the array <ref> [10] </ref>. Specifically, the root begins by sending the first packet to the second node in the array. At the same time the root node sends the next packet, the second node forwards the first packet to the next node, overlapping the transmission time of the two packets.
Reference: [11] <author> S. R. Seidel. </author> <title> Broadcasting on Linear Arrays and Meshes. </title> <institution> Oak Ridge National Laboratory Technical Report ORNL/TM-12356, </institution> <month> Mar. </month> <year> 1993. </year>
Reference-contexts: The true wraparound links provide a mesh that has roughly half the diameter of the worm-hole meshes we consider. Their trees are much more complicated than the ones presented here; it is not clear whether their construction would lead to network conflict in a worm-hole mesh. In <ref> [11] </ref>, a broadcast is presented that has somewhat of a flavor of our "scatter-collect". In essence, the author followed our suggestion that the broadcast can be implemented as a modified global summation and used some of the techniques for such algorithms developed in [1, 2, 3, 12].
Reference: [12] <author> R. A. van de Geijn. </author> <title> Efficient Global Combine Operations. </title> <booktitle> In Sixth Distributed Memory Computing Conference Proceedings, </booktitle> <pages> pages 291-294. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year> <month> 21 </month>
Reference-contexts: In [11], a broadcast is presented that has somewhat of a flavor of our "scatter-collect". In essence, the author followed our suggestion that the broadcast can be implemented as a modified global summation and used some of the techniques for such algorithms developed in <ref> [1, 2, 3, 12] </ref>. The resulting algorithms are not asymptotically optimal, but do avoid network conflicts.
References-found: 12

