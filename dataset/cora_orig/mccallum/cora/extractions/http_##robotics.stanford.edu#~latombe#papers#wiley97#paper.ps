URL: http://robotics.stanford.edu/~latombe/papers/wiley97/paper.ps
Refering-URL: http://robotics.stanford.edu/~latombe/projects/
Root-URL: http://www.robotics.stanford.edu
Title: Sample Contributed Book  
Note: cbook 26/2/1998 22:49PAGE PROOFS for John Wiley Sons Ltd (jwcbook.sty v5.0, 17-4-1997)  
Abstract-found: 0
Intro-found: 0
Reference: [ATBM92] <author> Ahuactzin J. M., Talbi E.-G., Bessiere P., and Mazer E. </author> <title> (1992) Using genetic algorithms for robot motion planning. </title> <booktitle> In 10th Europ. Conf. Artific. Intelligence, </booktitle> <pages> pages 671675. </pages> <address> London, England. </address>
Reference-contexts: The planner in [Kon91] finds paths for 6-dof manipulators using heuristic search techniques that limit the part of the C-space that is explored, and the planner cbook 26/2/1998 22:49PAGE PROOFS for John Wiley & Sons Ltd (jwcbook.sty v5.0, 17-4-1997) 4 KAVRAKI AND LATOMBE in <ref> [ATBM92] </ref> utilizes genetic algorithms to help search for a path in high-dimensional C-spaces. Parallel processing techniques are investigated in [CG93, LPO91]. Hybrid methods are discussed in [CQM95].
Reference: [BF94] <author> Barraquand J. and Ferbach P. </author> <title> (1994) Path planning through variational dynamic programming. </title> <booktitle> In Proc. IEEE Int. Conf. Robotics and Automation, </booktitle> <pages> pages 18391846. </pages> <address> San Diego, CA. </address>
Reference-contexts: The probability that any random walk finds its way through such a passage is almost zero, while the use of several potential functions that can prevent this from happening is rather time consuming. Other interesting lines of work include the method in <ref> [BF94] </ref> which is based on a variational dynamic programming approach and can tackle problems of similar complexity to the problems solved by RPP.
Reference: [BG94] <author> Berchtold S. and Glavina B. </author> <title> (1994) A scalable optimizer for automatically generated manipulator motions. </title> <booktitle> In Proc. IEEE/RSJ/GI Int. Conf. Intelligen Robots and Systems, </booktitle> <pages> pages 17961802. </pages> <address> Munchen, Germany. </address>
Reference-contexts: This path may be improved by running a smoothing algorithm on it. Possible smoothing techniques include the one in [LTJ90], which selects random segments of the global path and tries to shortcut them by using the local planner, and the method in <ref> [BG94] </ref>, which iteratively performs local geometric operations (i.e., cutting off triangle corners). The main question is how to compute the paths P init and P goal . The queries should preferably terminate quasi-instantaneously, so no expensive algorithm is desired here.
Reference: [BKL + 97] <author> Barraquand J., Kavraki L., Latombe J., Li T.-Y., Motwani R., and Raghavan P. </author> <title> (1997) A random sampling scheme for path planning. </title> <note> Int. J. of Robotics Research To appear. </note>
Reference-contexts: We also discuss the theoretical analysis of the planner developed in [KKL96, KLMR95] and outline a unified framework for this analysis. In particular, we discuss the notion of goodness properties <ref> [BKL + 97] </ref> and evaluate the performance of PRM under the assumption of *-goodness and expansiveness for the solution space and path-goodness for the planned path. The organization of the paper is as follows. Section 4.2 gives an overview of some previous research and relates our work to this research. <p> The reader is referred to [Lat91, KLMR95] for an overview of the complexity of several complete planners and related hardness results. Recently there has been renewed interest in developing practical path planners <ref> [Lat91, BKL + 97] </ref>. <p> The work in [HST94], again done independently, describes ideas similar to PRM. Applications to non-holonomic robots were investigated in [ Sve97, SO97]. Applications to many-dof holonomic robots were discussed in [Kav95, KL94a, KL94b, K SLO96]. The theoretical analysis of PRM was initiated in [KKL96, KLMR95], while <ref> [BKL + 97] </ref> presents PRM in the context of randomized approaches to robot path planning and [HLM97] extends PRM to a new planner that is able to deal with difficult assembly problems. 4.3 The PRM Planner We now describe PRM in general terms for a holonomic robot without focusing on any <p> Suppose that two nodes can be connected by the local planner but the path connecting them is arbitrarily close to the free space boundary. Then the local planner may have to break it into arbitrarily many small segments <ref> [BKL + 97] </ref>. <p> Acknowledgments This work has been supported by grants DAAA21-89-C0002, N00014-92-J-1809, N00014-94-1-0721 and DAAH04-96-1-1007. L. Kavraki is currently partially supported by NSF CAREER Award IRI-970228. Parts of this paper have been published in <ref> [Kav95, KL94a, KL94b, KKL96, KLMR95, K SLO96, BKL + 97] </ref>. The authors would like to thank their collaborators in the course of this work, especially Michael Kolountzakis, Rajeev Motwani, Mark Overmars, Praghavan Raghavan, and Petr Svestka.
Reference: [BL91] <author> Barraquand J. and Latombe J. </author> <title> (1991) Robot motion planning: A distributed representation approach. </title> <journal> Int. J. of Robotics Research 10: </journal> <volume> 628649. </volume>
Reference-contexts: The main disadvantage of these planners is the presence of local minima in the potential fields. These minima may be difficult to escape. Local minima-free potential functions (also called navigation functions) have been defined in <ref> [Kod87, RK92, BL91] </ref>. But these functions are expensive to compute in high-dimensional C-spaces and have not been used for many-dof robots. One of the first successful potential field planners for robots with many dof is described in [FT89]. <p> However the bookkeeping done during the learning phase becomes impractical when the dof grow larger. Techniques for both computing potential functions and escaping local minima in high-dimensional C-spaces were presented in <ref> [BL91, BLL92] </ref>. The Randomized Path Planner (RPP) described in [BL91] escapes local minima by executing random walks. An analysis of this planner is initiated in [LL96]. RPP has solved many difficult problems involving robots with 3 to 31 dof. <p> However the bookkeeping done during the learning phase becomes impractical when the dof grow larger. Techniques for both computing potential functions and escaping local minima in high-dimensional C-spaces were presented in [BL91, BLL92]. The Randomized Path Planner (RPP) described in <ref> [BL91] </ref> escapes local minima by executing random walks. An analysis of this planner is initiated in [LL96]. RPP has solved many difficult problems involving robots with 3 to 31 dof. <p> Verifying that a straight line segment remains within the joint limits is straightforward. Collision checking can be done by recursively decomposing the line segment into two halves and checking for collision the middle configuration until a prespecified resolution has been achieved <ref> [BL91] </ref>. The node neighbors. Another important choice to be made is that of the set N q , the candidate neighbors of q. The local planner will be called to connect q with nodes in N q and the cumulative cost of these invocations dominates preprocessing time. <p> We can proceed as follows. For any two components, starting with the largest, we select a pair of nodes, p in the first and q in the second, which are close to each other (according to the C-space metric D). In our implementation RPP <ref> [BL91] </ref> is called to connect p and q. If it produces a connection, the two connected components are merged into one, and a new pair of components is considered.
Reference: [BLL92] <author> Barraquand J., Langlois B., and Latombe J.-C. </author> <title> (1992) Numerical potential field techniques for robot path planning. </title> <journal> IEEE Tr. Syst., Man, and Cybern. </journal> <volume> 22(2): </volume> <pages> 224241. </pages>
Reference-contexts: However the bookkeeping done during the learning phase becomes impractical when the dof grow larger. Techniques for both computing potential functions and escaping local minima in high-dimensional C-spaces were presented in <ref> [BL91, BLL92] </ref>. The Randomized Path Planner (RPP) described in [BL91] escapes local minima by executing random walks. An analysis of this planner is initiated in [LL96]. RPP has solved many difficult problems involving robots with 3 to 31 dof.
Reference: [Can88] <author> Canny J. </author> <title> (1988) The Complexity of Robot Motion Planning. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA. </address>
Reference-contexts: Instead, PRM applies a roadmap approach [Lat91], that is, it constructs a roadmap of paths in the free C-space. Previous roadmap methods include the visibility graph [LPW79], Voronoi diagram [OY82], and silhouette methods <ref> [Can88] </ref>. All these three methods compute a roadmap that completely represents the connectivity of the free C-space. The visibility graph and Voronoi diagram methods are limited to low-dimensional C-spaces. The silhouette method applies to C-spaces of any dimension, but its complexity makes it little practical.
Reference: [CB94] <author> Choset H. and Burdick J. </author> <title> (1994) Sensor based planning and nonsmooth analysis. </title> <booktitle> In Proc. of IEEE Int. Conf. Robotics and Automation, </booktitle> <pages> pages 30343041. </pages> <address> San Diego, CA. </address> <publisher> cbook 26/2/1998 22:49PAGE PROOFS for John Wiley & Sons Ltd (jwcbook.sty v5.0, </publisher> <address> 17-4-1997) 20 REFERENCES </address>
Reference-contexts: Roadmaps have also been built and used incrementally in several other planners. The planner in [CL90] incrementally builds the skeleton of the C-space using a local opportunistic strategy. This work has inspired the approaches in <ref> [RC94, CB94] </ref> which construct retracts of the free C-space using sensor data and thus do not assume that the (static) environment in which the robot moves is known a priori.
Reference: [CG93] <author> Chalou D. and Gini M. </author> <title> (1993) Parallel robot motion planning. </title> <booktitle> In Proc. of IEEE Int. Conf. Robotics and Automation, </booktitle> <pages> pages 2451. </pages> <address> Atlanta GA. </address>
Reference-contexts: Additionally, RPP has been embedded in a larger manipulation planner to automatically animate scenes involving human figures modeled with 62 dof [KKKL94]. However, several examples have also been identified where RPP behaves poorly <ref> [CG93] </ref>. In these examples, RPP falls into local minima whose basins of attraction are mostly bounded by obstacles, with only narrow passages to escape. <p> Parallel processing techniques are investigated in <ref> [CG93, LPO91] </ref>. Hybrid methods are discussed in [CQM95]. The planning method presented in this paper differs significantly from the methods referenced above, which are for the most part based on potential field or cell decomposition approaches.
Reference: [CH92] <author> Chen P. and Hwang Y. </author> <year> (1992) </year> <month> Sandros: </month> <title> A motion planner with performance proportional to task difficulty. </title> <booktitle> In Proc. of IEEE Int. Conf. Robotics and Automation, </booktitle> <pages> pages 23462353. </pages> <address> Nice, France. </address>
Reference-contexts: Other interesting lines of work include the method in [BF94] which is based on a variational dynamic programming approach and can tackle problems of similar complexity to the problems solved by RPP. In [GG90, GZ94] a sequential framework with backtracking is proposed for serial manipulators, and in <ref> [CH92] </ref> a motion planner with performance proportional to task difficulty is developed for arbitrary many-dof robots operating in cluttered environments.
Reference: [Che92] <author> Chen P. </author> <title> (1992) Improving path planning with learning. </title> <booktitle> In Proc. Machine Learning Conference, </booktitle> <pages> pages 5561. </pages>
Reference-contexts: This work has inspired the approaches in [RC94, CB94] which construct retracts of the free C-space using sensor data and thus do not assume that the (static) environment in which the robot moves is known a priori. The approach in <ref> [Che92] </ref> builds a sparse network of robot subgoals with the use of a simple and a computationally expensive planner. The randomized techniques of PRM were initially presented in [KL94a, KL94b]. Parallel independent work was done in [Ove92, SO97, O S95].
Reference: [CL90] <author> Canny J. and Lin M. </author> <title> (1990) An opportunistic global path planner. </title> <booktitle> In Proc. IEEE Int. Conf. Robotics and Automation, </booktitle> <pages> pages 15541559. </pages> <address> Cincinnati, OH. </address>
Reference-contexts: The visibility graph and Voronoi diagram methods are limited to low-dimensional C-spaces. The silhouette method applies to C-spaces of any dimension, but its complexity makes it little practical. Roadmaps have also been built and used incrementally in several other planners. The planner in <ref> [CL90] </ref> incrementally builds the skeleton of the C-space using a local opportunistic strategy. This work has inspired the approaches in [RC94, CB94] which construct retracts of the free C-space using sensor data and thus do not assume that the (static) environment in which the robot moves is known a priori.
Reference: [CL95] <author> Chang H. and Li T. </author> <title> (1995) Assembly maintainability study with motion planning. </title> <booktitle> In Proc. IEEE Int. Conf. on Rob. and Autom., </booktitle> <pages> pages 10121019. </pages>
Reference-contexts: RPP has solved many difficult problems involving robots with 3 to 31 dof. It has also been used in practice with good results to plan motions for performing riveting operations on plane fuselages [GMKL92], and to plan disassembly operations for the maintenance of aircraft engines <ref> [CL95] </ref>. Additionally, RPP has been embedded in a larger manipulation planner to automatically animate scenes involving human figures modeled with 62 dof [KKKL94]. However, several examples have also been identified where RPP behaves poorly [CG93].
Reference: [CQM95] <author> Cameron S., Qin C., and McLean A. </author> <title> (1995) Towards efficient motion planning for manipulators with complex geometry. </title> <booktitle> In Proc. of the IEEE Int. Symposium on Assembly and Task Planning, </booktitle> <pages> pages 207212. </pages>
Reference-contexts: Parallel processing techniques are investigated in [CG93, LPO91]. Hybrid methods are discussed in <ref> [CQM95] </ref>. The planning method presented in this paper differs significantly from the methods referenced above, which are for the most part based on potential field or cell decomposition approaches. Instead, PRM applies a roadmap approach [Lat91], that is, it constructs a roadmap of paths in the free C-space.
Reference: [FT89] <author> Faverjon B. and Tournassoud P. </author> <title> (1989) A practical approach to motion planning for manipulators with many degrees of freedom. </title> <editor> In Miura H. and Arimoto S. </editor> <booktitle> (eds) Robotics Research 5, </booktitle> <pages> pages 6573. </pages> <publisher> MIT Press. </publisher>
Reference-contexts: Local minima-free potential functions (also called navigation functions) have been defined in [Kod87, RK92, BL91]. But these functions are expensive to compute in high-dimensional C-spaces and have not been used for many-dof robots. One of the first successful potential field planners for robots with many dof is described in <ref> [FT89] </ref>. This planner employs a learning scheme to avoid falling into the local minima of the potential field and has been applied with some success to robots with up to 6 dof. However the bookkeeping done during the learning phase becomes impractical when the dof grow larger.
Reference: [GG90] <author> Gupta K. and Guo Z. </author> <title> (1990) Motion planning with many degrees of freedom: sequential search with backtracking. </title> <journal> IEEE Transactions on Robotics and Automation 6(5): </journal> <volume> 522532. </volume>
Reference-contexts: Other interesting lines of work include the method in [BF94] which is based on a variational dynamic programming approach and can tackle problems of similar complexity to the problems solved by RPP. In <ref> [GG90, GZ94] </ref> a sequential framework with backtracking is proposed for serial manipulators, and in [CH92] a motion planner with performance proportional to task difficulty is developed for arbitrary many-dof robots operating in cluttered environments.
Reference: [GHLW95] <author> Goldberg K., Halperin D., Latombe J., and Wilson R. </author> <title> (eds) (1995) Algorithmic Foundations of Robotics. A K Peters, </title> <publisher> Ltd. </publisher>
Reference: [GMKL92] <author> Graux L., Millies P., Kociemba P., and Langlois B. </author> <title> (1992) Integration of a path generation algorithm into off-line programming of airbus panels. </title> <type> TP 922404, SAE. </type>
Reference-contexts: An analysis of this planner is initiated in [LL96]. RPP has solved many difficult problems involving robots with 3 to 31 dof. It has also been used in practice with good results to plan motions for performing riveting operations on plane fuselages <ref> [GMKL92] </ref>, and to plan disassembly operations for the maintenance of aircraft engines [CL95]. Additionally, RPP has been embedded in a larger manipulation planner to automatically animate scenes involving human figures modeled with 62 dof [KKKL94]. However, several examples have also been identified where RPP behaves poorly [CG93].
Reference: [GZ94] <author> Gupta K. and Zhu X. </author> <title> (1994) Practical motion planning for many degrees of freedom: A novel approach within sequential framework. </title> <booktitle> In Proc. of IEEE Int. Conf. Robotics and Automation, pages 20382043. </booktitle> <address> San Diego, CA. </address>
Reference-contexts: Other interesting lines of work include the method in [BF94] which is based on a variational dynamic programming approach and can tackle problems of similar complexity to the problems solved by RPP. In <ref> [GG90, GZ94] </ref> a sequential framework with backtracking is proposed for serial manipulators, and in [CH92] a motion planner with performance proportional to task difficulty is developed for arbitrary many-dof robots operating in cluttered environments.
Reference: [HLM97] <author> Hsu D., Latombe J., and Motwani R. </author> <title> (1997) Path planning in expansive configuration spaces. </title> <booktitle> In Proc. IEEE Int. Conf. Robotics and Automation. </booktitle> <address> Minneapolis, MN. </address>
Reference-contexts: Applications to many-dof holonomic robots were discussed in [Kav95, KL94a, KL94b, K SLO96]. The theoretical analysis of PRM was initiated in [KKL96, KLMR95], while [BKL + 97] presents PRM in the context of randomized approaches to robot path planning and <ref> [HLM97] </ref> extends PRM to a new planner that is able to deal with difficult assembly problems. 4.3 The PRM Planner We now describe PRM in general terms for a holonomic robot without focusing on any specific type of robot. <p> Let ~ be a constant in (0; 1]. If s is chosen such that: s *ff 8 + fi then preprocessing generates a roadmap that is an adequate representation of C free with probability at least 1 ~. The proof of this theorem is given in <ref> [HLM97] </ref>. Its significance is twofold.
Reference: [HST94] <author> Horsch T., Schwarz F., and Tolle H. </author> <title> (1994) Motion planning for many degrees of freedom random reflections at c-space obstacles. </title> <booktitle> In Proc. IEEE Int. Conf. Robotics and Automation, </booktitle> <pages> pages 33183323. </pages> <address> San Diego, CA. </address>
Reference-contexts: The randomized techniques of PRM were initially presented in [KL94a, KL94b]. Parallel independent work was done in [Ove92, SO97, O S95]. A common paper from the two groups was published in [K SLO96]. The work in <ref> [HST94] </ref>, again done independently, describes ideas similar to PRM. Applications to non-holonomic robots were investigated in [ Sve97, SO97]. Applications to many-dof holonomic robots were discussed in [Kav95, KL94a, KL94b, K SLO96].
Reference: [Kav93] <author> Kavraki L. </author> <title> (1993) Computation of configuration-space obstacles using the fast fourier transform. </title> <booktitle> In Proc. IEEE Internat. Conf. on Robotics and Automation, </booktitle> <pages> pages 255261. </pages> <address> Atlanta, GA. </address>
Reference-contexts: (sec) (sec) (sec) checks nodes C 1 C 2 C 3 C 4 20.1 13.1 7.0 621943 1062 100.0 36.7 56.7 36.7 40.3 26.3 14.0 1145091 2233 100.0 90.0 86.7 90.0 60.2 39.1 21.1 1631612 3284 100.0 100.0 100.0 100.0 80.4 52.2 28.2 2104209 4272 100.0 100.0 100.0 100.0 Transform <ref> [Kav93] </ref>. For self-collision, each link of the robot is tested against the others. Experiments. Figure 4.3 shows four configurations forming the test set of an articulated robot in a scene with several narrow gates. The robot has a fixed base, denoted by a square, and 7 revolute dof.
Reference: [Kav95] <author> Kavraki L. E. </author> <title> (1995) Random Networks in Configuration Space for Fast Path Planning. </title> <type> PhD thesis, </type> <institution> Stanford University. </institution>
Reference-contexts: Two snapshots along a path produced by PRM for a rigid 6-dof robot are shown in Figure 4.1. In this paper we describe the PRM algorithm as this has evolved through our previous work presented in <ref> [Kav95, KL94a, KL94b, K SLO96] </ref> and report a number of experimental results. We also discuss the theoretical analysis of the planner developed in [KKL96, KLMR95] and outline a unified framework for this analysis. <p> A common paper from the two groups was published in [K SLO96]. The work in [HST94], again done independently, describes ideas similar to PRM. Applications to non-holonomic robots were investigated in [ Sve97, SO97]. Applications to many-dof holonomic robots were discussed in <ref> [Kav95, KL94a, KL94b, K SLO96] </ref>. <p> Other experiments can be found in <ref> [Kav95, KL94a, KL94b, K SLO96] </ref>. The planner is implemented in C and for the experiments reported here we used a DEC Alpha workstation. This machine is rated at 126.0 SPECfp92 and 74.3 SPECint92. <p> Acknowledgments This work has been supported by grants DAAA21-89-C0002, N00014-92-J-1809, N00014-94-1-0721 and DAAH04-96-1-1007. L. Kavraki is currently partially supported by NSF CAREER Award IRI-970228. Parts of this paper have been published in <ref> [Kav95, KL94a, KL94b, KKL96, KLMR95, K SLO96, BKL + 97] </ref>. The authors would like to thank their collaborators in the course of this work, especially Michael Kolountzakis, Rajeev Motwani, Mark Overmars, Praghavan Raghavan, and Petr Svestka.
Reference: [Kav97] <author> Kavraki L. E. </author> <title> (1997) Geometry and the discovery of new ligands. </title> <editor> In Laumond J.-P. and Overmars M. </editor> <title> (eds) Algorithms for Robotic Motion and Manipulation, pages 435448. </title> <editor> A. K. </editor> <publisher> Peters. </publisher>
Reference-contexts: becoming increasingly important in emerging applications, e.g., computer graphic animation, where motion planning can drastically reduce the amount of data input by human animators [KKKL94], and molecular biology, where motion planning can be used to compute motions of molecules (modeled as spatial linkages with many dof) docking against other molecules <ref> [Kav97] </ref>. In this paper we describe the Probabilistic RoadMap planner (PRM). This planner has been applied with success to multiple planning problems involving robots with 3 to 16 dof moving in static environments. PRM computation is organized in two phases: the preprocessing phase and the query phase.
Reference: [KKKL94] <author> Koga Y., Kondo K., Kuffner J., and Latombe J. </author> <title> (1994) Planning motions with intentions. </title> <booktitle> Computer Graphics (SIGGRAPH'94) pages 395408. </booktitle>
Reference-contexts: Besides its use in robotics, planning with many dof is becoming increasingly important in emerging applications, e.g., computer graphic animation, where motion planning can drastically reduce the amount of data input by human animators <ref> [KKKL94] </ref>, and molecular biology, where motion planning can be used to compute motions of molecules (modeled as spatial linkages with many dof) docking against other molecules [Kav97]. In this paper we describe the Probabilistic RoadMap planner (PRM). <p> Additionally, RPP has been embedded in a larger manipulation planner to automatically animate scenes involving human figures modeled with 62 dof <ref> [KKKL94] </ref>. However, several examples have also been identified where RPP behaves poorly [CG93]. In these examples, RPP falls into local minima whose basins of attraction are mostly bounded by obstacles, with only narrow passages to escape.
Reference: [KKL96] <author> Kavraki L., Kolountzakis M., and Latombe J. </author> <title> (1996) Analysis of probabilistic roadmaps for path planning. </title> <booktitle> In Proc. IEEE Int. Conf. on Rob. and Autom., </booktitle> <pages> pages 3020 3025. </pages>
Reference-contexts: In this paper we describe the PRM algorithm as this has evolved through our previous work presented in [Kav95, KL94a, KL94b, K SLO96] and report a number of experimental results. We also discuss the theoretical analysis of the planner developed in <ref> [KKL96, KLMR95] </ref> and outline a unified framework for this analysis. In particular, we discuss the notion of goodness properties [BKL + 97] and evaluate the performance of PRM under the assumption of *-goodness and expansiveness for the solution space and path-goodness for the planned path. <p> The work in [HST94], again done independently, describes ideas similar to PRM. Applications to non-holonomic robots were investigated in [ Sve97, SO97]. Applications to many-dof holonomic robots were discussed in [Kav95, KL94a, KL94b, K SLO96]. The theoretical analysis of PRM was initiated in <ref> [KKL96, KLMR95] </ref>, while [BKL + 97] presents PRM in the context of randomized approaches to robot path planning and [HLM97] extends PRM to a new planner that is able to deal with difficult assembly problems. 4.3 The PRM Planner We now describe PRM in general terms for a holonomic robot without <p> Let a be the same constant as in Theorem 4.5.4. If s is chosen such that: 6 0 (`) then the planner outputs YES with probability at least 1 . We refer the reader to <ref> [KKL96] </ref> for the proof of both theorems above. <p> Acknowledgments This work has been supported by grants DAAA21-89-C0002, N00014-92-J-1809, N00014-94-1-0721 and DAAH04-96-1-1007. L. Kavraki is currently partially supported by NSF CAREER Award IRI-970228. Parts of this paper have been published in <ref> [Kav95, KL94a, KL94b, KKL96, KLMR95, K SLO96, BKL + 97] </ref>. The authors would like to thank their collaborators in the course of this work, especially Michael Kolountzakis, Rajeev Motwani, Mark Overmars, Praghavan Raghavan, and Petr Svestka.
Reference: [KL94a] <author> Kavraki L. and Latombe J.-C. </author> <title> (1994) Randomized preprocessing of configuration space for fast path planning. </title> <booktitle> In Proc. IEEE Int. Conf. Robotics and Automation, </booktitle> <pages> pages 21382145. </pages> <address> San Diego, CA. </address>
Reference-contexts: Two snapshots along a path produced by PRM for a rigid 6-dof robot are shown in Figure 4.1. In this paper we describe the PRM algorithm as this has evolved through our previous work presented in <ref> [Kav95, KL94a, KL94b, K SLO96] </ref> and report a number of experimental results. We also discuss the theoretical analysis of the planner developed in [KKL96, KLMR95] and outline a unified framework for this analysis. <p> The approach in [Che92] builds a sparse network of robot subgoals with the use of a simple and a computationally expensive planner. The randomized techniques of PRM were initially presented in <ref> [KL94a, KL94b] </ref>. Parallel independent work was done in [Ove92, SO97, O S95]. A common paper from the two groups was published in [K SLO96]. The work in [HST94], again done independently, describes ideas similar to PRM. Applications to non-holonomic robots were investigated in [ Sve97, SO97]. <p> A common paper from the two groups was published in [K SLO96]. The work in [HST94], again done independently, describes ideas similar to PRM. Applications to non-holonomic robots were investigated in [ Sve97, SO97]. Applications to many-dof holonomic robots were discussed in <ref> [Kav95, KL94a, KL94b, K SLO96] </ref>. <p> Other experiments can be found in <ref> [Kav95, KL94a, KL94b, K SLO96] </ref>. The planner is implemented in C and for the experiments reported here we used a DEC Alpha workstation. This machine is rated at 126.0 SPECfp92 and 74.3 SPECint92. <p> Acknowledgments This work has been supported by grants DAAA21-89-C0002, N00014-92-J-1809, N00014-94-1-0721 and DAAH04-96-1-1007. L. Kavraki is currently partially supported by NSF CAREER Award IRI-970228. Parts of this paper have been published in <ref> [Kav95, KL94a, KL94b, KKL96, KLMR95, K SLO96, BKL + 97] </ref>. The authors would like to thank their collaborators in the course of this work, especially Michael Kolountzakis, Rajeev Motwani, Mark Overmars, Praghavan Raghavan, and Petr Svestka.
Reference: [KL94b] <author> Kavraki L. and Latombe J.-C. </author> <title> (1994) Randomized preprocessing of configuration space for path planning: Articulated robots. </title> <booktitle> In Proc. IEEE/RSJ/GI Int. Conf. Intelligent Robots and Systems, </booktitle> <pages> pages 17641772. </pages> <address> Germany. </address>
Reference-contexts: Two snapshots along a path produced by PRM for a rigid 6-dof robot are shown in Figure 4.1. In this paper we describe the PRM algorithm as this has evolved through our previous work presented in <ref> [Kav95, KL94a, KL94b, K SLO96] </ref> and report a number of experimental results. We also discuss the theoretical analysis of the planner developed in [KKL96, KLMR95] and outline a unified framework for this analysis. <p> The approach in [Che92] builds a sparse network of robot subgoals with the use of a simple and a computationally expensive planner. The randomized techniques of PRM were initially presented in <ref> [KL94a, KL94b] </ref>. Parallel independent work was done in [Ove92, SO97, O S95]. A common paper from the two groups was published in [K SLO96]. The work in [HST94], again done independently, describes ideas similar to PRM. Applications to non-holonomic robots were investigated in [ Sve97, SO97]. <p> A common paper from the two groups was published in [K SLO96]. The work in [HST94], again done independently, describes ideas similar to PRM. Applications to non-holonomic robots were investigated in [ Sve97, SO97]. Applications to many-dof holonomic robots were discussed in <ref> [Kav95, KL94a, KL94b, K SLO96] </ref>. <p> Other experiments can be found in <ref> [Kav95, KL94a, KL94b, K SLO96] </ref>. The planner is implemented in C and for the experiments reported here we used a DEC Alpha workstation. This machine is rated at 126.0 SPECfp92 and 74.3 SPECint92. <p> Acknowledgments This work has been supported by grants DAAA21-89-C0002, N00014-92-J-1809, N00014-94-1-0721 and DAAH04-96-1-1007. L. Kavraki is currently partially supported by NSF CAREER Award IRI-970228. Parts of this paper have been published in <ref> [Kav95, KL94a, KL94b, KKL96, KLMR95, K SLO96, BKL + 97] </ref>. The authors would like to thank their collaborators in the course of this work, especially Michael Kolountzakis, Rajeev Motwani, Mark Overmars, Praghavan Raghavan, and Petr Svestka.
Reference: [KLMR95] <author> Kavraki L., Latombe J., Motwani R., and Raghavan P. </author> <title> (1995) Randomized cbook 26/2/1998 22:49PAGE PROOFS for John Wiley & Sons Ltd (jwcbook.sty v5.0, 17-4-1997) REFERENCES 21 query processing in robot motion planning. </title> <booktitle> In Proc. ACM Symp. on Theory of Computing, </booktitle> <pages> pages 353362. </pages>
Reference-contexts: In this paper we describe the PRM algorithm as this has evolved through our previous work presented in [Kav95, KL94a, KL94b, K SLO96] and report a number of experimental results. We also discuss the theoretical analysis of the planner developed in <ref> [KKL96, KLMR95] </ref> and outline a unified framework for this analysis. In particular, we discuss the notion of goodness properties [BKL + 97] and evaluate the performance of PRM under the assumption of *-goodness and expansiveness for the solution space and path-goodness for the planned path. <p> There is strong evidence that its solution requires exponential time in the number of dimensions of the C-space, i.e., the number of degrees of freedom of the robot. The reader is referred to <ref> [Lat91, KLMR95] </ref> for an overview of the complexity of several complete planners and related hardness results. Recently there has been renewed interest in developing practical path planners [Lat91, BKL + 97]. <p> The work in [HST94], again done independently, describes ideas similar to PRM. Applications to non-holonomic robots were investigated in [ Sve97, SO97]. Applications to many-dof holonomic robots were discussed in [Kav95, KL94a, KL94b, K SLO96]. The theoretical analysis of PRM was initiated in <ref> [KKL96, KLMR95] </ref>, while [BKL + 97] presents PRM in the context of randomized approaches to robot path planning and [HLM97] extends PRM to a new planner that is able to deal with difficult assembly problems. 4.3 The PRM Planner We now describe PRM in general terms for a holonomic robot without <p> If s is chosen such that: s * 1 + log then preprocessing generates an almost complete set of nodes for C free with probability at least 1 . For the proof of this theorem see <ref> [KLMR95] </ref>. Note that the probability that a roadmap does not provide almost complete coverage of C free decreases exponentially with the number of nodes. <p> Naturally, the number of nodes needed becomes smaller. Theorem 4.5.1 only says that most of C free is likely to be visible from some node in the roadmap; using this property alone, we can show that queries can be answered quickly <ref> [KLMR95] </ref>: Theorem 4.5.2 Let the number of iterations g at Step 1 (b)i of query-processing be set to log (2= ), where is a constant in (0; 1]. If an almost complete set of nodes has been chosen, then the probability that query-processing outputs FAILURE is at most . <p> If v is the size of V , this can be done with O (v 2 ) invocations of the complex planner by trying it on every pair of nodes in V . In <ref> [KLMR95] </ref> we present a randomized algorithm for solving permeation. Suppose there are k components in V . The analysis of the algorithm in [KLMR95] shows that the worst case is when all components are equal to v=k and then the expected cost of permeation is O (vk). <p> In <ref> [KLMR95] </ref> we present a randomized algorithm for solving permeation. Suppose there are k components in V . The analysis of the algorithm in [KLMR95] shows that the worst case is when all components are equal to v=k and then the expected cost of permeation is O (vk). <p> Acknowledgments This work has been supported by grants DAAA21-89-C0002, N00014-92-J-1809, N00014-94-1-0721 and DAAH04-96-1-1007. L. Kavraki is currently partially supported by NSF CAREER Award IRI-970228. Parts of this paper have been published in <ref> [Kav95, KL94a, KL94b, KKL96, KLMR95, K SLO96, BKL + 97] </ref>. The authors would like to thank their collaborators in the course of this work, especially Michael Kolountzakis, Rajeev Motwani, Mark Overmars, Praghavan Raghavan, and Petr Svestka.
Reference: [Kod87] <author> Koditschek D. </author> <title> (1987) Exact robot navigation by means of potential functions: some topological considerations. </title> <booktitle> In Proc. IEEE Int. Conf. Robotics and Automation, </booktitle> <pages> pages 16. </pages>
Reference-contexts: The main disadvantage of these planners is the presence of local minima in the potential fields. These minima may be difficult to escape. Local minima-free potential functions (also called navigation functions) have been defined in <ref> [Kod87, RK92, BL91] </ref>. But these functions are expensive to compute in high-dimensional C-spaces and have not been used for many-dof robots. One of the first successful potential field planners for robots with many dof is described in [FT89].
Reference: [Kon91] <author> Kondo K. </author> <title> (1991) Motion planning with six degrees of freedom by multistrategic bidirectional heuristic free-space enumeration. </title> <journal> IEEE Tr. on Robotics and Automation 7(3): </journal> <volume> 267277. </volume>
Reference-contexts: In [GG90, GZ94] a sequential framework with backtracking is proposed for serial manipulators, and in [CH92] a motion planner with performance proportional to task difficulty is developed for arbitrary many-dof robots operating in cluttered environments. The planner in <ref> [Kon91] </ref> finds paths for 6-dof manipulators using heuristic search techniques that limit the part of the C-space that is explored, and the planner cbook 26/2/1998 22:49PAGE PROOFS for John Wiley & Sons Ltd (jwcbook.sty v5.0, 17-4-1997) 4 KAVRAKI AND LATOMBE in [ATBM92] utilizes genetic algorithms to help search for a path
Reference: [K SLO96] <author> Kavraki L., Svestka P., Latombe J., and Overmars M. </author> <title> (1996) Probabilistic roadmaps for fast path planning in high dimensional configuration spaces. </title> <journal> IEEE Tr. on Rob. and Autom. </journal> <volume> 12: </volume> <pages> 566580. </pages>
Reference-contexts: Two snapshots along a path produced by PRM for a rigid 6-dof robot are shown in Figure 4.1. In this paper we describe the PRM algorithm as this has evolved through our previous work presented in <ref> [Kav95, KL94a, KL94b, K SLO96] </ref> and report a number of experimental results. We also discuss the theoretical analysis of the planner developed in [KKL96, KLMR95] and outline a unified framework for this analysis. <p> The randomized techniques of PRM were initially presented in [KL94a, KL94b]. Parallel independent work was done in [Ove92, SO97, O S95]. A common paper from the two groups was published in <ref> [K SLO96] </ref>. The work in [HST94], again done independently, describes ideas similar to PRM. Applications to non-holonomic robots were investigated in [ Sve97, SO97]. Applications to many-dof holonomic robots were discussed in [Kav95, KL94a, KL94b, K SLO96]. <p> A common paper from the two groups was published in [K SLO96]. The work in [HST94], again done independently, describes ideas similar to PRM. Applications to non-holonomic robots were investigated in [ Sve97, SO97]. Applications to many-dof holonomic robots were discussed in <ref> [Kav95, KL94a, KL94b, K SLO96] </ref>. <p> Other experiments can be found in <ref> [Kav95, KL94a, KL94b, K SLO96] </ref>. The planner is implemented in C and for the experiments reported here we used a DEC Alpha workstation. This machine is rated at 126.0 SPECfp92 and 74.3 SPECint92. <p> Acknowledgments This work has been supported by grants DAAA21-89-C0002, N00014-92-J-1809, N00014-94-1-0721 and DAAH04-96-1-1007. L. Kavraki is currently partially supported by NSF CAREER Award IRI-970228. Parts of this paper have been published in <ref> [Kav95, KL94a, KL94b, KKL96, KLMR95, K SLO96, BKL + 97] </ref>. The authors would like to thank their collaborators in the course of this work, especially Michael Kolountzakis, Rajeev Motwani, Mark Overmars, Praghavan Raghavan, and Petr Svestka.
Reference: [Lat91] <author> Latombe J. </author> <title> (1991) Robot Motion Planning. </title> <publisher> Kluwer, </publisher> <address> Boston, MA. </address>
Reference-contexts: 4.1 Introduction Path planning for robots in known and static workspaces has been studied extensively over the last two decades <ref> [Lat91] </ref>. Recently there has been renewed interest in developing planners that can be applied to robots with many degrees of freedom (dof), say 5 or more. Indeed, Sample Contributed Book. <p> There is strong evidence that its solution requires exponential time in the number of dimensions of the C-space, i.e., the number of degrees of freedom of the robot. The reader is referred to <ref> [Lat91, KLMR95] </ref> for an overview of the complexity of several complete planners and related hardness results. Recently there has been renewed interest in developing practical path planners [Lat91, BKL + 97]. <p> The reader is referred to [Lat91, KLMR95] for an overview of the complexity of several complete planners and related hardness results. Recently there has been renewed interest in developing practical path planners <ref> [Lat91, BKL + 97] </ref>. <p> Parallel processing techniques are investigated in [CG93, LPO91]. Hybrid methods are discussed in [CQM95]. The planning method presented in this paper differs significantly from the methods referenced above, which are for the most part based on potential field or cell decomposition approaches. Instead, PRM applies a roadmap approach <ref> [Lat91] </ref>, that is, it constructs a roadmap of paths in the free C-space. Previous roadmap methods include the visibility graph [LPW79], Voronoi diagram [OY82], and silhouette methods [Can88]. All these three methods compute a roadmap that completely represents the connectivity of the free C-space.
Reference: [LL96] <author> Lamiraux F. and Laumond J. </author> <title> (1996) On the expected complexity of random path planning. </title> <booktitle> In Int. Conf. on Robotics and Automation. </booktitle> <address> Minneapolis, MN. </address>
Reference-contexts: Techniques for both computing potential functions and escaping local minima in high-dimensional C-spaces were presented in [BL91, BLL92]. The Randomized Path Planner (RPP) described in [BL91] escapes local minima by executing random walks. An analysis of this planner is initiated in <ref> [LL96] </ref>. RPP has solved many difficult problems involving robots with 3 to 31 dof. It has also been used in practice with good results to plan motions for performing riveting operations on plane fuselages [GMKL92], and to plan disassembly operations for the maintenance of aircraft engines [CL95].
Reference: [LMCG95] <author> Lin M., Manocha D., Cohen J., and Gottschalk S. </author> <title> (1995) Collision detection: Algorithms and applications. </title> <editor> In Goldberg et al. </editor> <booktitle> [GHLW95], </booktitle> <pages> pages 129141. </pages>
Reference-contexts: In our implementation the gate is 2.5 times wider than the smallest dimension of each robot link. Our implementation choices remain the same as in the 2D case except that the local planner is the straight-line planner and that collision checking was performed using RAPID <ref> [LMCG95] </ref>. Similar experiments over a large number of runs have shown that approximately 1.5 hours are required to create a roadmap to which all of the configurations in Figure 4.6 can be connected with probability higher than 90%. The roadmap contained 20; 000 nodes on the average.
Reference: [LP83] <author> Lozano-Perez T. </author> <title> (1983) Spatial planning: A configuration space approach. </title> <journal> IEEE Tr. on Computers 32: </journal> <volume> 108120. </volume>
Reference-contexts: During the preprocessing phase a probabilistic roadmap is constructed by repeatedly generating random free configurations of the robot and connecting these configurations using some simple, but very fast motion planner. We call this planner the local planner. The roadmap thus formed in the free configuration space (C-space <ref> [LP83] </ref>) of the robot is stored as an undirected graph. The configurations are the nodes of the graph and the paths computed by the local planner are the graph edges.
Reference: [LPO91] <author> Lozano-Perez T. and O'Donnel P. </author> <title> (1991) Parallel robot motion planning. </title> <booktitle> In Proc. IEEE Int. Conf. Rob. and Automation, </booktitle> <pages> pages 10001007. </pages> <address> Sacramento, CA. </address>
Reference-contexts: Parallel processing techniques are investigated in <ref> [CG93, LPO91] </ref>. Hybrid methods are discussed in [CQM95]. The planning method presented in this paper differs significantly from the methods referenced above, which are for the most part based on potential field or cell decomposition approaches.
Reference: [LPW79] <author> Lozano-Perez T. and Wesley M. </author> <title> (1979) An algorithm for planning collision-free paths among polyhedral obstacles. </title> <journal> Comm. of the AC 22(10): </journal> <volume> 560570. </volume>
Reference-contexts: Instead, PRM applies a roadmap approach [Lat91], that is, it constructs a roadmap of paths in the free C-space. Previous roadmap methods include the visibility graph <ref> [LPW79] </ref>, Voronoi diagram [OY82], and silhouette methods [Can88]. All these three methods compute a roadmap that completely represents the connectivity of the free C-space. The visibility graph and Voronoi diagram methods are limited to low-dimensional C-spaces.
Reference: [LTJ90] <author> Laumond J.-P., Taix M., and Jacobs P. </author> <title> (1990) A motion planner for car-like robots based on a global/local approach. </title> <booktitle> In Proc. IEEE Internat. Workshop Intell. Robot Syst., </booktitle> <pages> pages 765773. </pages>
Reference-contexts: A feasible path from q init to q goal is eventually constructed by concatenating P init , the recomputed path corresponding to P , and P goal reversed. This path may be improved by running a smoothing algorithm on it. Possible smoothing techniques include the one in <ref> [LTJ90] </ref>, which selects random segments of the global path and tries to shortcut them by using the local planner, and the method in [BG94], which iteratively performs local geometric operations (i.e., cutting off triangle corners). The main question is how to compute the paths P init and P goal .
Reference: [O S95] <author> Overmars M. and Svestka P. </author> <title> (1995) A probabilistic learning approach to motion planning. </title> <editor> In Goldberg et al. [GHLW95], </editor> <month> pages </month> <year> 1937. </year>
Reference-contexts: The approach in [Che92] builds a sparse network of robot subgoals with the use of a simple and a computationally expensive planner. The randomized techniques of PRM were initially presented in [KL94a, KL94b]. Parallel independent work was done in <ref> [Ove92, SO97, O S95] </ref>. A common paper from the two groups was published in [K SLO96]. The work in [HST94], again done independently, describes ideas similar to PRM. Applications to non-holonomic robots were investigated in [ Sve97, SO97]. <p> Our best experimental results have been obtained when the local planner is deterministic and very fast. These results were also independently confirmed in <ref> [Ove92, O S95, Sve97] </ref>. A quite general such local planner, which is applicable to all holonomic robots, connects any two given configurations by a straight line segment in C and checks this line segment for collision and joint limits (if any).
Reference: [Ove92] <author> Overmars M. </author> <title> (1992) A random approach to motion planning. </title> <type> Technical Report RUU-CS-92-32, </type> <institution> Utrecht University, the Neverlands. </institution>
Reference-contexts: The approach in [Che92] builds a sparse network of robot subgoals with the use of a simple and a computationally expensive planner. The randomized techniques of PRM were initially presented in [KL94a, KL94b]. Parallel independent work was done in <ref> [Ove92, SO97, O S95] </ref>. A common paper from the two groups was published in [K SLO96]. The work in [HST94], again done independently, describes ideas similar to PRM. Applications to non-holonomic robots were investigated in [ Sve97, SO97]. <p> Our best experimental results have been obtained when the local planner is deterministic and very fast. These results were also independently confirmed in <ref> [Ove92, O S95, Sve97] </ref>. A quite general such local planner, which is applicable to all holonomic robots, connects any two given configurations by a straight line segment in C and checks this line segment for collision and joint limits (if any).
Reference: [OY82] <author> O'Dunlaing C. and Yap C. </author> <title> (1982) A retraction method for planning the motion of a dis. </title> <editor> J. </editor> <booktitle> of Algorithms 6: </booktitle> <pages> 104111. </pages>
Reference-contexts: Instead, PRM applies a roadmap approach [Lat91], that is, it constructs a roadmap of paths in the free C-space. Previous roadmap methods include the visibility graph [LPW79], Voronoi diagram <ref> [OY82] </ref>, and silhouette methods [Can88]. All these three methods compute a roadmap that completely represents the connectivity of the free C-space. The visibility graph and Voronoi diagram methods are limited to low-dimensional C-spaces. The silhouette method applies to C-spaces of any dimension, but its complexity makes it little practical.
Reference: [RC94] <author> Rimon E. and Canny J. </author> <title> (1994) onstruction of c-space roadmaps from local sensory data, what should the sensors look for? In Proc. </title> <booktitle> IEEE Int. Conf. Robotics and Automatio, </booktitle> <pages> pages 117123. </pages> <address> San Diego, CA. </address>
Reference-contexts: Roadmaps have also been built and used incrementally in several other planners. The planner in [CL90] incrementally builds the skeleton of the C-space using a local opportunistic strategy. This work has inspired the approaches in <ref> [RC94, CB94] </ref> which construct retracts of the free C-space using sensor data and thus do not assume that the (static) environment in which the robot moves is known a priori.
Reference: [Rei79] <author> Reif J. </author> <title> (1979) Complexity of the mover's problem and generalizations. </title> <booktitle> In Proc. 20th IEEE Symp. on Found. of Comp. Sci., </booktitle> <pages> pages 421427. </pages>
Reference-contexts: Section 4.5 presents a unified framework for analyzing the performance of PRM and outlines a number of theoretical results. Section 4.6 summarizes the paper. 4.2 Relation to Previous Work Robot path planning has been proven a hard problem <ref> [Rei79] </ref>. There is strong evidence that its solution requires exponential time in the number of dimensions of the C-space, i.e., the number of degrees of freedom of the robot. The reader is referred to [Lat91, KLMR95] for an overview of the complexity of several complete planners and related hardness results.
Reference: [RK92] <author> Rimon E. and Koditschek D. </author> <title> (1992) Exact robot navigation using artificial potential functions. </title> <journal> IEEE Tr. on Rob. and Autom. </journal> <volume> 8: </volume> <pages> 501518. </pages>
Reference-contexts: The main disadvantage of these planners is the presence of local minima in the potential fields. These minima may be difficult to escape. Local minima-free potential functions (also called navigation functions) have been defined in <ref> [Kod87, RK92, BL91] </ref>. But these functions are expensive to compute in high-dimensional C-spaces and have not been used for many-dof robots. One of the first successful potential field planners for robots with many dof is described in [FT89].
Reference: [ SO97] <author> Svestka P. and Overmars M. </author> <title> (1997) Motion planning for car-like robots using a probabilistic learning approach. </title> <journal> Int. J. of Robotics Research 16(2): </journal> <volume> 119143. </volume>
Reference-contexts: The approach in [Che92] builds a sparse network of robot subgoals with the use of a simple and a computationally expensive planner. The randomized techniques of PRM were initially presented in [KL94a, KL94b]. Parallel independent work was done in <ref> [Ove92, SO97, O S95] </ref>. A common paper from the two groups was published in [K SLO96]. The work in [HST94], again done independently, describes ideas similar to PRM. Applications to non-holonomic robots were investigated in [ Sve97, SO97]. <p> Parallel independent work was done in [Ove92, SO97, O S95]. A common paper from the two groups was published in [K SLO96]. The work in [HST94], again done independently, describes ideas similar to PRM. Applications to non-holonomic robots were investigated in <ref> [ Sve97, SO97] </ref>. Applications to many-dof holonomic robots were discussed in [Kav95, KL94a, KL94b, K SLO96]. <p> The method is general and can be applied to virtually any type of holonomic robot as described in this paper. Applications to non-holonomic robots can be found in <ref> [ Sve97, SO97] </ref>. Finally, the method can be regarded as a learning approach by interleaving the preprocessing and query processing phases. The analyses of PRM relate geometric properties of the solution space to the performance of the planner.
Reference: [ Sve97] <author> Svestka P. </author> <title> (1997) Robot Motion Planning using Probabilistic Road Maps. </title> <type> PhD thesis, </type> <institution> Utrecht University, </institution> <address> the Netherlands. </address> <publisher> cbook 26/2/1998 22:49PAGE PROOFS for John Wiley & Sons Ltd (jwcbook.sty v5.0, 17-4-1997) </publisher>
Reference-contexts: Parallel independent work was done in [Ove92, SO97, O S95]. A common paper from the two groups was published in [K SLO96]. The work in [HST94], again done independently, describes ideas similar to PRM. Applications to non-holonomic robots were investigated in <ref> [ Sve97, SO97] </ref>. Applications to many-dof holonomic robots were discussed in [Kav95, KL94a, KL94b, K SLO96]. <p> Our best experimental results have been obtained when the local planner is deterministic and very fast. These results were also independently confirmed in <ref> [Ove92, O S95, Sve97] </ref>. A quite general such local planner, which is applicable to all holonomic robots, connects any two given configurations by a straight line segment in C and checks this line segment for collision and joint limits (if any). <p> The method is general and can be applied to virtually any type of holonomic robot as described in this paper. Applications to non-holonomic robots can be found in <ref> [ Sve97, SO97] </ref>. Finally, the method can be regarded as a learning approach by interleaving the preprocessing and query processing phases. The analyses of PRM relate geometric properties of the solution space to the performance of the planner.
References-found: 47

