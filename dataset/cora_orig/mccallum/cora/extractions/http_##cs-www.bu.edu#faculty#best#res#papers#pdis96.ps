URL: http://cs-www.bu.edu/faculty/best/res/papers/pdis96.ps
Refering-URL: http://cs-www.bu.edu/faculty/best/res/Home.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: (virgilio@bu.edu)  (best@bu.edu)  (crovella@bu.edu)  (dri@dcc.ufmg.br)  
Title: Characterizing Reference Locality in the WWW  
Author: Virglio Almeida yx Azer Bestavros Mark Crovella Adriana de Oliveira 
Date: Dec 1996.  
Note: In Proceedings of PDIS'96: The IEEEConference on Parallel and Distributed Information Systems, MiamiBeach, FL,  
Abstract: In this paper we propose models for both temporal and spatial locality of reference in streams of requests arriving at Web servers. We show that simple models based on document popularity alone are insufficient for capturing either temporal or spatial locality. Instead, we rely on an equivalent, but numerical, representation of a reference stream: a stack distance trace. We show that temporal locality can be characterized by the marginal distribution of the stack distance trace, and we propose models for typical distributions and compare their cache performance to our traces. We also show that spatial locality in a reference stream can be characterized using the notion of self-similarity. Self-similarity describes long-range correlations in the dataset, which is a property that previous researchers have found hard to incorporate into synthetic reference strings. We show that stack distance strings appear to be stongly self-similar, and we provide measurements of the degree of self-similarity in our traces. Finally, we discuss methods for generating synthetic Web traces that exhibit the properties of temporal and spatial locality that we measured in our data. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Marc Abrams, Charles R. Standridge, Ghaleb Abdulla, Stephen Williams, and Edward A. Fox. </author> <title> Caching proxies: Limitations and potentials. </title> <booktitle> In Proceedings of the Fourth Interntional Conference on the WWW, Boston, </booktitle> <address> MA, </address> <month> December </month> <year> 1995. </year>
Reference-contexts: This finding agrees with Glassman's predictions [12] and was further confirmed for general proxy caching by Abrams et al <ref> [1] </ref>. In [18], Markatos examines the potential performance gains from using Main Memory Web Caches. He shows that a small amount of main memory could yield substantial improvement in performance if cache management methods that are sensitive to document popularity and to user preferences for small documents [9] are employed.
Reference: [2] <author> S. Acharya, R. Alonso, M. Franklin, and S. Zdonik. </author> <title> Broadcast disks: Data management for asymmetric communications environments. </title> <booktitle> In Proceedings of ACM SIGMOD'95, </booktitle> <address> San Jose, CA, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: Again, the tightness of the fit for the family of curves in Figure-2 to straight lines slope close to -1 suggest that Zipf's law does apply to sequences of requests. Given the above observations, one possible access model <ref> [12, 2] </ref> is to generate document requests according to the popularity profile of documents. We call this model the Zipf-based model.
Reference: [3] <author> Jan Beran. </author> <title> Statistics for Long-Memory Processes. Monographs on Statistics and Applied Probability. </title> <publisher> Chapman and Hall, </publisher> <address> New York, NY, </address> <year> 1994. </year>
Reference-contexts: The fourth method is the maximum likelihood estimator for H, called the Whittle estimator, which provides confidence intervals as well. Interested readers are referred to <ref> [3, 16] </ref> for a discussion of these methods in more detail. Plots of the graphical estimators for the BU trace are shown in Figure 10.
Reference: [4] <author> Azer Bestavros. </author> <title> Demand-based document dissemination to reduce traffic and balance load in distributed information systems. </title> <booktitle> In Proceedings of SPDP'95: The 7 th IEEE Symposium on Parallel and Distributed Processing, </booktitle> <address> San Anotonio, Texas, </address> <month> October </month> <year> 1995. </year>
Reference-contexts: In these studies, it was shown that "Popular files are very popular" <ref> [4, 13] </ref>. In [9], Cunha, Bestavros, and Crovella characterized the popularity of Web documents requested by clients and confirmed the applicability of Zipf's law [27, discussed in [17]] to Web documents.
Reference: [5] <author> Azer Bestavros. </author> <title> Using speculation to reduce server load and service time on the www. In Proceedings of CIKM'95: </title> <booktitle> The 4 th ACM International Conference on Information and Knowledge Management, </booktitle> <address> Baltimore, Maryland, </address> <month> November </month> <year> 1995. </year>
Reference-contexts: In [7], Bestavros and Cunha propose a protocol that allows a client to prefetch Web documents based on Markov models built from the client's previous access patterns. In <ref> [5] </ref> Bestavros propose a protocol that allows prefetching to be initiated as a result of hints generated by servers based on a Markov model built by analyzing the server's access logs. 7 Conclusion In this paper we have measured the locality present in reference traces arriving at four servers in the
Reference: [6] <author> Azer Bestavros, Robert Carter, Mark Crovella, Carlos Cunha, Abdelsalam Heddaya, and Sulaiman Mirdad. </author> <title> Application level document caching in the internet. </title> <booktitle> In IEEE SDNE'96: The Second International Workshop on Services in Distributed and Networked Environments, </booktitle> <address> Whistler, British Columbia, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: The first comprehensive study of client-based caching for the Web was conducted by our Oceans group. 6 In that study <ref> [6] </ref>, the effectiveness of session caching, host caching, and LAN proxy caching were established using a unique set of 5,700 client traces (almost 600,000 URL requests), which were obtained by intrumenting Mosaic [9].
Reference: [7] <author> Azer Bestavros and Carlos Cunha. </author> <title> A prefetching protocol using client speculation for the www. Technical Report TR-95-011, </title> <institution> Boston University, CS Dept, </institution> <address> Boston, MA 02215, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: Exploiting the spatial locality of reference properties exhibited in Web access patterns was investigated in two recent prefetching studies of our Oceans group. In <ref> [7] </ref>, Bestavros and Cunha propose a protocol that allows a client to prefetch Web documents based on Markov models built from the client's previous access patterns.
Reference: [8] <author> Mark E. Crovella and Azer Bestavros. </author> <title> Self-similarity in World Wide Web traffic: Evidence and possible causes. </title> <booktitle> In Proceedings of the ACM SIGMETRICS'96, </booktitle> <month> May </month> <year> 1996. </year>
Reference: [9] <author> Carlos A. Cunha, Azer Bestavros, and Mark E. Crov-ella. </author> <title> Characteristics of www client-based traces. </title> <type> Technical Report TR-95-010, </type> <institution> Boston University Department of Computer Science, </institution> <month> April </month> <year> 1995. </year>
Reference-contexts: Thus, the workload viewed from a server standpoint consists of a number of requests originated at many different clients. In order to analyze reference locality, we examined the access logs for different Web servers, namely: 2 Since we have shown in previous work <ref> [9] </ref> that document size is correlated with expected reference frequency, this assumption is somewhat limiting for direct use in cache performance analysis. For that reason we are currently extending this work to include document sizes in our analysis. <p> In these studies, it was shown that "Popular files are very popular" [4, 13]. In <ref> [9] </ref>, Cunha, Bestavros, and Crovella characterized the popularity of Web documents requested by clients and confirmed the applicability of Zipf's law [27, discussed in [17]] to Web documents. Zipf's law was originally applied to the relationship between a word's popularity in terms of rank and its frequency of use. <p> comprehensive study of client-based caching for the Web was conducted by our Oceans group. 6 In that study [6], the effectiveness of session caching, host caching, and LAN proxy caching were established using a unique set of 5,700 client traces (almost 600,000 URL requests), which were obtained by intrumenting Mosaic <ref> [9] </ref>. This study concluded that LAN proxy caching| while effective in reducing response time by as much as a half|is ultimately limited by the low level of sharing of remote documents amongst clients of the same site. <p> In [18], Markatos examines the potential performance gains from using Main Memory Web Caches. He shows that a small amount of main memory could yield substantial improvement in performance if cache management methods that are sensitive to document popularity and to user preferences for small documents <ref> [9] </ref> are employed. Exploiting the spatial locality of reference properties exhibited in Web access patterns was investigated in two recent prefetching studies of our Oceans group.
Reference: [10] <author> P. Denning and S. Schwartz. </author> <title> Properties of the working set model. </title> <journal> Communications of the ACM, </journal> <volume> 15(3) </volume> <pages> 191-198, </pages> <year> 1972. </year>
Reference-contexts: 1 Introduction The principle of locality of reference has very important consequences for computer systems design. Reference streams exhibiting temporal locality can benefit from caching; and reference streams exhibiting spatial locality can benefit from prefetching. The application of these principles (e.g., in memory systems) is well understood <ref> [10, 23] </ref>. In order to apply these principles to the design of World Wide Web (Web) caching and prefetching systems, it's important to characterize the degree of locality present in typical Web reference streams. <p> We have begun to use the method for generating web reference traces and are currently evaluating the properties of the resulting traces. Initial experiments involving models of only temporal locality properties are encouraging. 6 Related Work Modeling: Denning and Schwartz <ref> [10] </ref> established the fundamental properties that characterize the phenomenon of locality in hierarchical structures of memory. In [19], the authors studied stack algorithms and introduced stack distance as a means for analyzing behavior of demand-paged memory systems.
Reference: [11] <author> Kenneth Falconer. </author> <title> Fractal Geometry. </title> <publisher> John Wiley & Sons, Ltd., </publisher> <year> 1990. </year>
Reference-contexts: A statistically self-similar series X t like the one shown on the left of Figure 9 has an almost sure fractal dimension (in the sense of either the Hausdorff dim H or box-counting dimension dim B ) of <ref> [11] </ref> dim (X t ) = 2 H: Thus the fractal dimension of such a series is 3/2 for Gaussian noise (H = 1=2), and decreases to 1 as the correlation present in the series increases (H ! 1).
Reference: [12] <author> Steven Glassman. </author> <title> A caching relay for the world wide web. </title> <booktitle> In Proceedings of the First Interntional Conference on the WWW, 1994. </booktitle>
Reference-contexts: Again, the tightness of the fit for the family of curves in Figure-2 to straight lines slope close to -1 suggest that Zipf's law does apply to sequences of requests. Given the above observations, one possible access model <ref> [12, 2] </ref> is to generate document requests according to the popularity profile of documents. We call this model the Zipf-based model. <p> In the remainder of this section we present a brief review of these protocols. For space limitations, we limit ourselves to Web-related work. Glassman <ref> [12] </ref> presents one of the earliest attempts for caching on the Web, whereby "satellite relays" (proxy caches) are organized into a tree-structured hierarchy with cache misses in lower relays percolating up through higher relays until the requested object is found. <p> This study concluded that LAN proxy caching| while effective in reducing response time by as much as a half|is ultimately limited by the low level of sharing of remote documents amongst clients of the same site. This finding agrees with Glassman's predictions <ref> [12] </ref> and was further confirmed for general proxy caching by Abrams et al [1]. In [18], Markatos examines the potential performance gains from using Main Memory Web Caches.
Reference: [13] <author> James Gwertzman and Margo Seltzer. </author> <title> The case for geographical push caching. </title> <booktitle> In In Proceedings of HotOS'95: The Fifth IEEE Workshop on Hot Topics in Operating Systems, </booktitle> <address> Washington, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: In these studies, it was shown that "Popular files are very popular" <ref> [4, 13] </ref>. In [9], Cunha, Bestavros, and Crovella characterized the popularity of Web documents requested by clients and confirmed the applicability of Zipf's law [27, discussed in [17]] to Web documents.
Reference: [14] <author> The Internet Town Hall. </author> <title> The internet traffic archive. </title> <note> (http://www.town.hall.org/Archives/pub/ITA/), 1995. </note>
Reference-contexts: In the case of the NCSA, the data refers only to one server (Costello). The SDSC and EPA logs are available at the Internet Traffic Archives <ref> [14] </ref>, the NCSA log was obtained after contacting the staff at the site and the BU logs were collected at the departmental Web server. The logs have one line of information per request processed by the server.
Reference: [15] <author> Changcheng Huang, Michael Devetsikiotis, Ioannis Lambadaris, and A. Roger Kaye. </author> <title> Modeling and simulation of self-similar variable bit rate compressed video: A unified approach. </title> <booktitle> In Proceedings of ACM SIGCOMM '95, </booktitle> <pages> pages 114-125, </pages> <year> 1995. </year>
Reference-contexts: Invert the stack distance trace to form a sequence of file names. On first glance, step 2 seems difficult. Fortunately recent results have shown that marginal distribution and long-range dependence can be considered as separate problems for trace generation <ref> [15] </ref>. That work shows that, given a long-range dependent series X t with H = H X and marginal cumulative probability function F X (x), we can generate another long-range dependent series Y t with H = H X and arbitrary marginal cumulative probability function F Y (x). <p> This is achieved by individual transformation of the elements of X t as follows: Y t = F 1 The authors in <ref> [15] </ref> show that this transformation preserves long-range dependence with the same value of H. Thus, our approach to step 2 is as follows. First, generate a self-similar series with given H. This can be done in a number of ways; a fast approach is described in [20].
Reference: [16] <author> W.E. Leland, M.S. Taqqu, W. Willinger, and D.V. Wil-son. </author> <title> On the self-similar nature of Ethernet traffic (extended version). </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 2 </volume> <pages> 1-15, </pages> <year> 1994. </year>
Reference-contexts: The fourth method is the maximum likelihood estimator for H, called the Whittle estimator, which provides confidence intervals as well. Interested readers are referred to <ref> [3, 16] </ref> for a discussion of these methods in more detail. Plots of the graphical estimators for the BU trace are shown in Figure 10.
Reference: [17] <author> Benoit B. Mandelbrot. </author> <title> The Fractal Geometry of Nature. </title> <editor> W. H. </editor> <publisher> Freedman and Co., </publisher> <address> New York, </address> <year> 1983. </year>
Reference-contexts: In these studies, it was shown that "Popular files are very popular" [4, 13]. In [9], Cunha, Bestavros, and Crovella characterized the popularity of Web documents requested by clients and confirmed the applicability of Zipf's law [27, discussed in <ref> [17] </ref>] to Web documents. Zipf's law was originally applied to the relationship between a word's popularity in terms of rank and its frequency of use. <p> The intersection of fractal X having 1 &lt; dim H (X) &lt; 2 and a line L (dim H (L) = 1) is almost surely a new fractal X 0 with dim H (X 0 ) = dim H (X) 1 <ref> [17] </ref>. This means that a cache miss fractal derived from a stack distance fractal such as our traces should have a dimension between 0 and 1.
Reference: [18] <author> Evangelos Markatos. </author> <title> Main memory caching of web documents. </title> <booktitle> In Proceedings of the Fifth International Conference on the WWW, Paris, </booktitle> <address> France, </address> <year> 1996. </year>
Reference-contexts: This finding agrees with Glassman's predictions [12] and was further confirmed for general proxy caching by Abrams et al [1]. In <ref> [18] </ref>, Markatos examines the potential performance gains from using Main Memory Web Caches. He shows that a small amount of main memory could yield substantial improvement in performance if cache management methods that are sensitive to document popularity and to user preferences for small documents [9] are employed.
Reference: [19] <author> R. Mattson, J. Gecsei, D. Slutz, and I. Traiger. </author> <title> Evaluation techniques and storage hierarchies. </title> <journal> IBM Systems Journal, </journal> <volume> 9 </volume> <pages> 78-117, </pages> <year> 1970. </year>
Reference-contexts: For the Web, we believe that the identification of similar prefetching entities is possible if spatial locality is characterized properly. Previous research in the locality properties of symbolic reference streams have shown the benefits of transforming the reference stream into an equivalent, but numerical, representation: a stack distance stream <ref> [19] </ref>. This transformation preserves all of the information of the original trace except for the specific reference names, and so it is invertible, allowing reconstruction of the original trace (albeit with synthetic names). <p> Two properties of the stack distance stream can be used to measure the notions of temporal and spatial locality: marginal distribution, and correlation structure <ref> [19, 22] </ref>. The marginal distribution measures the likelihood that two references to the same object are separated by some number of intervening references in the stream. The correlation structure of the stream measures the likelihood that we can predict future references based on the stream of past references. <p> Based on the concepts proposed in <ref> [19, 24] </ref>, we define a stack distance model that captures the temporal locality relationships present in a request stream. <p> Initial experiments involving models of only temporal locality properties are encouraging. 6 Related Work Modeling: Denning and Schwartz [10] established the fundamental properties that characterize the phenomenon of locality in hierarchical structures of memory. In <ref> [19] </ref>, the authors studied stack algorithms and introduced stack distance as a means for analyzing behavior of demand-paged memory systems. They also discussed the significance of stack distance strings for evaluating performance of memory management schemes. Then, Spirn [24] proposes the use of distance string models to represent program behavior.
Reference: [20] <author> Vern Paxson. </author> <title> Fast approximation of self-similar network traffic. </title> <type> Technical Report LBL-36750, </type> <institution> Lawrence Berkeley Lab, Berkeley, </institution> <address> CA, </address> <year> 1995. </year>
Reference-contexts: Thus, our approach to step 2 is as follows. First, generate a self-similar series with given H. This can be done in a number of ways; a fast approach is described in <ref> [20] </ref>. Then apply the transformation of Equation 5 to obtain a series with the proper lognormal marginal distribution. We have begun to use the method for generating web reference traces and are currently evaluating the properties of the resulting traces.
Reference: [21] <author> Mimi M. Recker and James E. Pitkow. </author> <title> Predicting document access in large, multimedia repositories. </title> <type> Technical Report Technical Report VU-GIT-94-35, </type> <institution> Georgia Tech|Graphics, Visualization, and Usability Center, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: Using a Zipf-based model, it was estimated that with an infinite-size cache, the maximum achievable hit rate is 40%. Another early attempt at characterizing Web access pat terns is the work of Recker and Pitkow <ref> [21] </ref>, in which a model for Web information access is proposed based on two metrics borrowed from psychological research on human memory|namely the frequency and recency rates of past accesses.
Reference: [22] <author> G. Shedlar and C. Tung. </author> <title> Locality in page reference strings. </title> <journal> SIAM Journal of Computing, </journal> <volume> 1(3), </volume> <month> Sept. </month> <year> 1972. </year>
Reference-contexts: Two properties of the stack distance stream can be used to measure the notions of temporal and spatial locality: marginal distribution, and correlation structure <ref> [19, 22] </ref>. The marginal distribution measures the likelihood that two references to the same object are separated by some number of intervening references in the stream. The correlation structure of the stream measures the likelihood that we can predict future references based on the stream of past references. <p> Previous work has shown that the correlation structure of the stack distance stream is useful for modeling spatial locality <ref> [22] </ref>; however previous attempts to model the correlation structure of reference strings have used models with only short-range dependence, such as finite first-order Markov chains. As pointed out in [24], such short-range dependent models are not capable of capturing the long-term structure of reference strings, which includes phase change behavior.
Reference: [23] <author> Alan Jay Smith. </author> <title> Cache memories. </title> <journal> Computing Surveys, </journal> <volume> 14(3) </volume> <pages> 473-530, </pages> <month> September </month> <year> 1982. </year>
Reference-contexts: 1 Introduction The principle of locality of reference has very important consequences for computer systems design. Reference streams exhibiting temporal locality can benefit from caching; and reference streams exhibiting spatial locality can benefit from prefetching. The application of these principles (e.g., in memory systems) is well understood <ref> [10, 23] </ref>. In order to apply these principles to the design of World Wide Web (Web) caching and prefetching systems, it's important to characterize the degree of locality present in typical Web reference streams.
Reference: [24] <author> Jeffrey Spirn. </author> <title> Distance string models for program behavior. </title> <journal> IEEE Computer, </journal> <volume> 13(11), </volume> <month> November </month> <year> 1976. </year>
Reference-contexts: Based on the concepts proposed in <ref> [19, 24] </ref>, we define a stack distance model that captures the temporal locality relationships present in a request stream. <p> Previous work has shown that the correlation structure of the stack distance stream is useful for modeling spatial locality [22]; however previous attempts to model the correlation structure of reference strings have used models with only short-range dependence, such as finite first-order Markov chains. As pointed out in <ref> [24] </ref>, such short-range dependent models are not capable of capturing the long-term structure of reference strings, which includes phase change behavior. Measuring Stack Distance Self-Similarity: To capture the long-range dependence in stack distance strings we employ the statistics of self-similarity. <p> In [19], the authors studied stack algorithms and introduced stack distance as a means for analyzing behavior of demand-paged memory systems. They also discussed the significance of stack distance strings for evaluating performance of memory management schemes. Then, Spirn <ref> [24] </ref> proposes the use of distance string models to represent program behavior. Distance strings are equivalent in information content to the reference string, but are more easily handled by mathematical models. <p> Usually, the abrupt changes in locality generate large distances in distance string model. Markov distance string models are capable of predicting bursts based on the most recent generated distances. Thus, the work in <ref> [24] </ref> argues that Markov models are not able to capture the behavior of real programs, which exhibit some form of long-range dependencies. <p> However, the model is not easily used because of the empirical process of obtaining and adjusting its parameters from plots of the traces. Also, the proposed model does not represent multiprogramming environments, where context switches occur frequently. Our paper extends the work referenced in <ref> [26, 25, 24] </ref> to the context of large distributed systems and also adds parameters to fully describe locality aspects of a reference stream that arrives at a Web server.
Reference: [25] <author> Dominique Thiebaut. </author> <title> On the fractal dimension of computer programs and its application to the prediction of the cache miss ratio. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 38(7), </volume> <month> July </month> <year> 1989. </year>
Reference-contexts: The cache misses are grouped over time in clusters, which are statistically self-similar. As a result of the analysis, they conjecture that the fractal dimension of a given cache miss distribution is a measure of the complexity of the underlying software. Based on the work in [26], paper <ref> [25] </ref> models the patterns generated by a processor accessing memory as random walk with fractal dimension. The author proposes that in an asymptotic behavior the number of misses that a program encounters in an infinite cache is given by a hyperbolic function of the fractal dimension. <p> However, the model is not easily used because of the empirical process of obtaining and adjusting its parameters from plots of the traces. Also, the proposed model does not represent multiprogramming environments, where context switches occur frequently. Our paper extends the work referenced in <ref> [26, 25, 24] </ref> to the context of large distributed systems and also adds parameters to fully describe locality aspects of a reference stream that arrives at a Web server.
Reference: [26] <author> Jean Voldman, Benoit Mandelbrot, Lee W. Hoevel, Joshua Knight, and Philip L. Rosenfeld. </author> <title> Fractal nature of software-cache interaction. </title> <journal> IBM Journal of Research and Development, </journal> <volume> 27(2) </volume> <pages> 164-170, </pages> <year> 1983. </year>
Reference-contexts: A timeseries with long-range dependence ap-pears much more "bursty" than series with only short-range or no dependence | which agrees with generally observed characterizations of reference locality. Long-range dependence in the stack distance series is also related to previously noted fractal properties of cache miss patterns <ref> [26] </ref>, and we interpret prior work in fractal reference patterns in terms of our observations. This method of measuring spatial locality also provides an interpretation for the notion of spatial locality when reference streams are composed of symbols rather than numbers. <p> In fact, fractal geometry has been noted in the past as a characteristic of reference locality in computer systems. In particular, Voldman et. al. <ref> [26] </ref> presented data on misses in cache memory systems for three different workloads (scientific, database, and general). The authors showed that each of these cache miss sequences shows fractal patterns: individual misses are clustered in time, clusters form clusters, and so on. <p> This corresponds with the intuition that a series with more dependence is more "predictable" and fills space less completely. The connection between our work and <ref> [26] </ref> then is that, if stack distances are self-similar, we expect cache misses to have fractal properties. The reason for this is as follows. <p> Application of Fractals: As discussed in Section 5, the use of fractal geometry and self-similarity to analyze behavior of computer systems was pioneered by the work of Voldman et. al. <ref> [26] </ref>. The authors looked at memory reference traces of three software environments and found that the distributions of intermiss distances follow a power-law, indicative of fractal behavior. The cache misses are grouped over time in clusters, which are statistically self-similar. <p> The cache misses are grouped over time in clusters, which are statistically self-similar. As a result of the analysis, they conjecture that the fractal dimension of a given cache miss distribution is a measure of the complexity of the underlying software. Based on the work in <ref> [26] </ref>, paper [25] models the patterns generated by a processor accessing memory as random walk with fractal dimension. The author proposes that in an asymptotic behavior the number of misses that a program encounters in an infinite cache is given by a hyperbolic function of the fractal dimension. <p> However, the model is not easily used because of the empirical process of obtaining and adjusting its parameters from plots of the traces. Also, the proposed model does not represent multiprogramming environments, where context switches occur frequently. Our paper extends the work referenced in <ref> [26, 25, 24] </ref> to the context of large distributed systems and also adds parameters to fully describe locality aspects of a reference stream that arrives at a Web server.
Reference: [27] <author> G. K. Zipf. </author> <title> Human Behavior and the Principle of Least-Effort. </title> <publisher> Addison-Wesley, </publisher> <address> Cambridge, MA, </address> <year> 1949. </year>
Reference-contexts: In these studies, it was shown that "Popular files are very popular" [4, 13]. In [9], Cunha, Bestavros, and Crovella characterized the popularity of Web documents requested by clients and confirmed the applicability of Zipf's law <ref> [27, discussed in [17] </ref>] to Web documents. Zipf's law was originally applied to the relationship between a word's popularity in terms of rank and its frequency of use.
References-found: 27

