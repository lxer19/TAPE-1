URL: http://www.cms.dmu.ac.uk/General/WWW/People/cph/VRPapers/montpellier.ps.gz
Refering-URL: http://www.cms.dmu.ac.uk/General/WWW/People/cph/VRPapers/
Root-URL: 
Title: Towards the next generation of Human-Computer Interface  
Author: David N. Snowdon, Adrian J. West Toby L.J. Howard 
Keyword: Virtual Reality, VR, generic virtual world, parallelism, computer graphics, transputer, object-oriented techniques, autonomous objects, human-computer interfaces, AVIARY  
Note: Presented at `Informatique'93: Interface to Real Virtual Worlds', pages 399-408, 24-26th March 1993, Montpellier, France.  Author for correspondence  
Address: Oxford Road Manchester M13 9PL United Kingdom  
Affiliation: Advanced Interfaces Group Department of Computer Science University of Manchester  
Email: Email: ajw@cs.man.ac.uk  
Phone: Tel: +44 61 275 6251  
Abstract: The techniques of Virtual Reality would seem to have great potential for revolutionising some currently problematic areas of human-computer interaction. The Advanced Interfaces Group at the University of Manchester are currently engaged in addressing major issues in the use of these techniques for real applications. Part of this work is the construction of an environment capable of hosting a wide range of virtual-reality based models, and providing a coherent applications interface to them. This paper details the underlying software model of the AVIARY implementation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A.J. West, T.L.J. Howard, R.J. Hubbold, A.D. Murta, D.N. Snowdon, and D.A. Butler. </author> <title> AVIARY a generic virtual reality interface for real applications. In Virtual Reality Systems, </title> <booktitle> sponsored by the British Computer Society,, </booktitle> <month> May </month> <year> 1992. </year>
Reference-contexts: 1 Introduction This paper focuses largely on the implementation of the AVIARY system. While our motivation and the underlying philosophy of the system are described in detail in <ref> [1] </ref>, it is necessary to introduce these briefly in order to place the implementation in context. 2 The AVIARY project a high level view The techniques of Virtual Reality (VR) would certainly seem to herald a revolutionary advance in the human-computer interface (HCI) enabling many of the current limitations, particularly in
Reference: [2] <author> Peter J. Crowther. Forage. </author> <type> Project report, </type> <institution> Department of Computer Science, University of Manchester, </institution> <month> April </month> <year> 1989. </year>
Reference-contexts: Bridge processes have been written which allow messages to be exchanged between the different networks. On distributed (or loosely coupled) systems, messages between objects must be converted to a stream of bytes by the sender and the data structure re-created by the receiver. AVIARY utilizes a system (described in <ref> [2] </ref>) which allows this process to happen automatically for arbitrary data structures. 5.2 The Virtual Environment Manager The Virtual Environment Manager (VEM) is a non-replicated object which provides services which must be consistent throughout the system.
Reference: [3] <author> Timothy L. Kay and James T. Kajiya. </author> <title> Ray tracing complex scenes. </title> <journal> ACM Computer Graphics, </journal> <volume> 20(4) </volume> <pages> 269-278, </pages> <month> August </month> <year> 1986. </year>
Reference-contexts: To prevent the EDB from needing to perform n 2 collision tests, for n artifacts, the EDB organises the volumes containing the artifacts into a hierarchy of bounding extents of the type described in <ref> [3] </ref>. These extents use sets of planes to enclose an object and can be made to fit arbitrarily tightly for convex surfaces.
Reference: [4] <author> Robert Webb and Mike Gigante. </author> <title> Using dynamic bounding volume hierarchies to improve efficiency of rigid body simulations. </title> <booktitle> In CGI'92 in Tokyo, </booktitle> <year> 1992. </year>
Reference-contexts: These extents use sets of planes to enclose an object and can be made to fit arbitrarily tightly for convex surfaces. This use of a hierarchy of bounding extents is similar to that described in <ref> [4] </ref> where bounding boxes are organised into a binary tree with leaf nodes containing the bounding spheres of objects. Unlike [4], only one form of extent is used and the tree is traversed depth first rather than via a list threaded through the nodes of the node when performing updates. <p> This use of a hierarchy of bounding extents is similar to that described in <ref> [4] </ref> where bounding boxes are organised into a binary tree with leaf nodes containing the bounding spheres of objects. Unlike [4], only one form of extent is used and the tree is traversed depth first rather than via a list threaded through the nodes of the node when performing updates.
Reference: [5] <author> John K. Bennett. </author> <title> The design and implementation of distributed smalltalk. </title> <booktitle> In OOPSLA '87, </booktitle> <pages> pages 318-330, </pages> <address> Seattle, WA 98195, </address> <month> October </month> <year> 1987. </year> <institution> Department of Computer Science, University of Washington, ACM. </institution>
Reference-contexts: These issues have been addressed in distributed object-orientated systems and solutions include migrating objects so they reside on the same machine and allowing multiple copies of objects. A description of a distributed Smalltalk system having some relevance to this problem is given in <ref> [5] </ref>. Another possibility for improving performance where an object's state is changing in a predictable manner for a period of time is for remote objects to employ `dead reckoning' techniques to produce the objects state. For example: an artifact is moving at a constant velocity.
References-found: 5

