URL: file://ftp.cs.princeton.edu/pub/people/arora/tspbetter.ps
Refering-URL: http://theory.lcs.mit.edu/~rajiyer/Penn/reading_list.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Nearly Linear Time Approximation Schemes for Euclidean TSP and other Geometric Problems  
Author: Sanjeev Arora 
Keyword: p  
Note: arora@cs.princeton.edu  
Affiliation: Princeton University  
Abstract: We present a randomized polynomial time approximation scheme for Euclidean TSP in &lt; 2 that is substantially more efficient than our earlier scheme in [3] (and the scheme of Mitchell [40]). For any fixed c &gt; 1 and any set of n nodes in the plane, the new scheme finds a (1 + 1 approximation to the optimum traveling salesman tour in O(n(log n) O(c) ) time. (Our earlier scheme ran in n O(c) time.) For points in &lt; d the algorithm runs in O(n(log n) (O( ) time. This time is polynomial (actually nearly linear) for every fixed c; d. Designing such a polynomial-time algorithm was an open problem (our earlier algorithm in [3] ran in quasipolynomial time for d 3). The algorithm generalizes to the same set of Euclidean problems handled by the previous algorithm, including Steiner Tree, k-TSP, Minimum degree-restricted spanning tree, k-MST, etc, although for k-TSP and k-MST the running time gets multiplied by k. We also use our ideas to design nearly-linear time approximation schemes for Euclidean versions of problems that are known to be in P, such as Minimum Spanning Tree and Min Cost Perfect Matching. All our algorithms also have simple parallel implementations (say, in N C 2 ). fl Supported by NSF CAREER award NSF CCR-9502747 and an Alfred Sloan Fellowship. Email: c )-
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Agarwal, H. Edelsbrunner, O. Schwarzkopf and E. Welzl. </author> <title> Euclidean MST and bichromatic closest pairs. </title> <journal> Discrete and Comp. Geo. </journal> <volume> 6 </volume> <pages> 407-422, </pages> <year> 1991. </year>
Reference-contexts: Prior work on polynomial-time problems. Problems such as Euclidean MST and Perfect Matching have been studied before. Exploiting geometric structure for these problems leads to algorithms that are faster than the corresponding algorithms for general graphs [31, 16]. Agarwal et al. <ref> [1] </ref> have designed a ~ O (n 4=3 )-algorithm for Euclidean MST in when the dimension d is fixed, 2 I originally conjectured that the "r" parameter needs to be (log n).
Reference: [2] <author> D. Applegate, R. Bixby, V. Chvatal, and W. Cook. </author> <title> Finding cuts in the TSP (A preliminary report). </title> <type> Report 95-05, </type> <institution> DIMACS, Rutgers University, NJ. </institution>
Reference: [3] <author> S. Arora. </author> <title> Polynomial-time approximation schemes for Euclidean TSP and other geometric problems. </title> <booktitle> Proceedings of 37th IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 2-12, </pages> <year> 1996. </year> <note> Preliminary manuscript (with "quasipolynomial" in the title), January 20, </note> <year> 1996. </year>
Reference-contexts: However, until recently, we knew of no polynomial-time algorithm better than the Christofides algorithm from 1976 [11], which provably computes a tour of cost at most 1:5 times the optimum. Recently, Euclidean TSP was shown to have a polynomial time approximation scheme or PTAS (Arora <ref> [3] </ref> and soon after, Mitchell [40]). For any fixed c &gt; 1 and any n points in &lt; 2 , this algorithm in n O (c) time finds a tour of cost at most (1 + 1=c) times the optimum. <p> We regret, however, that the "poly (log n)" term grows as something like (log n) 40c even for points in &lt; 2 , so finding a practical version of this algorithm remains an open problem. Our new algorithm is similar to our earlier algorithm in <ref> [3] </ref>. That algorithm relied on the fact that the plane can be recursively partitioned such that some (1 + 1=c)-approximate salesman tour crosses each line of the partition at most r = O (c log n) times. Such a tour can be found by dynamic programming. <p> The approximation scheme of this paper relies on a similar result about (1 + 1=c)-approximate salesman tours, except we show that the parameter "r" needs to be only O (1=c). 2 This result| shown using a "cut-and-patch" on the optimum tour similar to that in <ref> [3] </ref>| relies on a new charging argument that looks at all log n levels in the partition simultaneously. <p> We suspect that our charging argument will find other uses in computational geometry. As shown in <ref> [3] </ref>, our "cut-and patch" approach generalizes to many other NP-hard problems such as Minimum Steiner Tree, k-MST and k-TSP. Thus it is straightforward to generalize our new algorithm to those problems. <p> All these problems had constant factor approximation algorithms prior to <ref> [3] </ref>, see the survey by Bern and Eppstein [7]. Minimum Steiner Tree: Given n nodes in &lt; d , find the minimum cost tree connecting them. Degree-restricted-MST. <p> Thus it is reminiscent of the algorithm we described in <ref> [3] </ref>. However, the geometric partitioning in this paper is very simple: it is a variant of the familiar quadtree. Our algorithm starts with an O (n log n)-time "perturbation" of the instance that makes it well-rounded. <p> edges while entering and exiting, then this enumeration could have required as much as n 2 =2 time (since the number of edges among n nodes is n n 2 =2), instead of m O (r) . 2.1 Proof of Structure Theorem The following simple lemma (which also appeared in <ref> [3] </ref>, but is a folk-theorem) will be important. Lemma 3 (Patching Lemma) There is a constant g &gt; 0 such that the following is true. Let S be any line segment of length l and be a closed path that crosses S at least thrice. <p> Specifically, the Patching Lemma holds for all of them (see <ref> [3] </ref> for some of the details). The preprocessing step (which makes the instance well-rounded) has to be slightly modified in the case of k-TSP and k-MST.
Reference: [4] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, and M. Szegedy. </author> <title> Proof verification and intractability of approximation problems. </title> <booktitle> In Proc. 33rd IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 13-22, </pages> <year> 1992. </year>
Reference: [5] <author> S. Arora and S. Safra. </author> <title> Probabilistic Checking of Proofs: A new characterization of NP. </title> <booktitle> In Proc. 33rd IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 2-12, </pages> <year> 1992. </year>
Reference: [6] <author> J. Bentley. </author> <title> Fast algorithms for geometric traveling salesman problem. </title> <journal> ORSA J. on Computing, </journal> <volume> 4 </volume> <pages> 387-411, </pages> <year> 1992. </year>
Reference: [7] <author> M. Bern and D. Eppstein. </author> <title> Approximation Algorithms for Geometric Problems. </title> <booktitle> In [21]. </booktitle>
Reference-contexts: All these problems had constant factor approximation algorithms prior to [3], see the survey by Bern and Eppstein <ref> [7] </ref>. Minimum Steiner Tree: Given n nodes in &lt; d , find the minimum cost tree connecting them. Degree-restricted-MST.
Reference: [8] <author> M. Bern, D. Eppstein, and S.-H.Teng. </author> <title> Parallel construction of quadtree and quality triangulations. </title> <booktitle> In Proc. 3rd WADS, </booktitle> <pages> pp 188-199. </pages> <publisher> Springer Verlar LNCS 709, </publisher> <year> 1993. </year>
Reference: [9] <author> A. Blum, P. Chalasani, and S. Vempala. </author> <title> A constant-factor approximation for the k-MST problem in the plane. </title> <booktitle> In Proc. 27th ACM Symposium on Theorem of Computing, </booktitle> <year> 1995. </year>
Reference: [10] <author> B. Chandra, H. Karloff, and C. Tovey. </author> <title> New results for the old K-OPT algorithm for the TSP. </title> <booktitle> In Proc. 5th ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pp 150-159, </pages> <year> 1994. </year> <month> 12 </month>
Reference: [11] <author> N. Christofides. </author> <title> Worst-case analysis of a new heuristic for the traveling salesman problem. </title> <type> Report 388, </type> <institution> Grad School of Industrial Administration, </institution> <address> CMU, </address> <year> 1976. </year>
Reference-contexts: Thus one could hope to resolve the above-mentioned paradox by designing an excellent approximation algorithm for geometric TSP. However, until recently, we knew of no polynomial-time algorithm better than the Christofides algorithm from 1976 <ref> [11] </ref>, which provably computes a tour of cost at most 1:5 times the optimum. Recently, Euclidean TSP was shown to have a polynomial time approximation scheme or PTAS (Arora [3] and soon after, Mitchell [40]).
Reference: [FL81] <author> W.Fernandez de la Vega and G.S.Lueker. </author> <title> Bin packing can be solved within 1+* in linear time. </title> <booktitle> Combinatorica:1(4), </booktitle> <pages> 349-355, </pages> <year> 1981. </year>
Reference-contexts: quasipolynomial in n for every fixed c; d. (Mitchell's algorithm works only in &lt; 2 .) With the discovery of this algorithm, Euclidean TSP joined a select group of NP-hard problems that have PTAS's, a group that includes Subset-Sum (Ibarra and Kim [22]) and Bin-Packing (de la Vega and Lueker <ref> [FL81] </ref>; see also Karmarkar and Karp [27]) Though theoretically significant, the recent PTAS for Euclidean TSP is impractical. The constant inside the big-O is about 15, implying a running time n 30 for 1.5-approximation (that is, when c = 2).
Reference: [12] <author> D. Z. Du and F. K. Hwang. </author> <title> A proof of Gilbert-Pollak's conjecture on the Steiner ratio. </title> <journal> Algorithmica, </journal> <volume> 7: </volume> <pages> 121-135, </pages> <year> 1992. </year>
Reference: [13] <author> D. Eppstein. </author> <title> Faster geometric k-point MST approximation. </title> <note> To appear in CGTA. </note>
Reference: [14] <author> D. Eppstein and J. Erickson. </author> <title> Iterated Nearest Neighbors and Finding Minimal Polytopes. </title> <journal> Discrete Comp. Geo., </journal> <volume> 11: </volume> <pages> 321-350, </pages> <year> 1994. </year>
Reference: [15] <author> U. Feige, S. Goldwasser, L. Lovasz, S. Safra, and M. Szegedy. </author> <title> Approximating clique is almost NP-complete. </title> <booktitle> In Proc. 32nd IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 2-12, </pages> <year> 1991. </year>
Reference: [16] <author> H. Gabow. </author> <title> Data Structures for weighted matching and nearest common ancestors with linking. </title> <booktitle> Proc. 1st Annual ACM SODA, </booktitle> <pages> pages 434-443, </pages> <year> 1990. </year>
Reference-contexts: Prior work on polynomial-time problems. Problems such as Euclidean MST and Perfect Matching have been studied before. Exploiting geometric structure for these problems leads to algorithms that are faster than the corresponding algorithms for general graphs <ref> [31, 16] </ref>. Agarwal et al. [1] have designed a ~ O (n 4=3 )-algorithm for Euclidean MST in when the dimension d is fixed, 2 I originally conjectured that the "r" parameter needs to be (log n).
Reference: [17] <author> M. R. Garey, R. L. Graham, and D. S. Johnson. </author> <title> Some NP-complete geometric problems. </title> <booktitle> In Proc. ACM Symposium on Theory of Computing, </booktitle> <pages> pp 10-22, </pages> <year> 1976. </year>
Reference: [18] <author> E. N. Gilbert and R. O. Pollak. </author> <title> Steiner minimal trees. </title> <journal> SIAM J. Appl. Math. </journal> <volume> 16 </volume> <pages> 1-29, </pages> <year> 1968. </year>
Reference: [19] <author> R. L. Graham. </author> <title> Bounds for certain multiprocessing anomalies. </title> <journal> Bell System Tech. J., </journal> <volume> 45: </volume> <year> 1563-1581.1966. </year>
Reference: [20] <author> R. L. Graham. </author> <type> Personal communication, </type> <year> 1996. </year>
Reference: [21] <author> D. Hochbaum, ed. </author> <title> Approximation Algorithms for NP-hard problems. </title> <publisher> PWS Publishing, </publisher> <address> Boston, </address> <year> 1996. </year>
Reference: [22] <author> O. H. Ibarra and C. E. Kim. </author> <title> Fast approximation algorithms for the knapsack and sum of subsets problems. </title> <journal> JACM, </journal> <volume> 22(4) </volume> <pages> 463-468, </pages> <year> 1975. </year>
Reference-contexts: (O (c log n)) d2 , which is quasipolynomial in n for every fixed c; d. (Mitchell's algorithm works only in &lt; 2 .) With the discovery of this algorithm, Euclidean TSP joined a select group of NP-hard problems that have PTAS's, a group that includes Subset-Sum (Ibarra and Kim <ref> [22] </ref>) and Bin-Packing (de la Vega and Lueker [FL81]; see also Karmarkar and Karp [27]) Though theoretically significant, the recent PTAS for Euclidean TSP is impractical. The constant inside the big-O is about 15, implying a running time n 30 for 1.5-approximation (that is, when c = 2).
Reference: [23] <author> D. S. Johnson. </author> <title> Approximation algorithms for combinatorial problems. </title> <journal> J. Computer and Systems Sci. </journal> <volume> 9 (1974), </volume> <pages> 256-278. </pages>
Reference: [24] <author> D. S. Johnson and Lyle A. McGeoch. </author> <title> The Traveling Salesman Problem: A Case Study in Local Optimization. Chapter in Local Search in Combinatorial Optimization, </title> <editor> E.H.L. Aarts and J.K. Lenstra (eds.), </editor> <publisher> John Wiley and Sons, </publisher> <address> NY. </address> <note> (To appear.) </note>
Reference-contexts: Versions of the Lin-Kernighan heuristic [37] run |after careful tuning| in nearly linear time and often produces tours whose cost is within a few percent of the optimum (Johnson and McGeoch <ref> [24] </ref>). Potentially, this paradox could have a simple explanation since many "real-life" instances (see for example the TSPLIB library [45], a test-bed for much experimental work on the TSP) are geometric, and many complexity-theoretic results may not apply to them.
Reference: [25] <author> D. S. Johnson, C. Papadimitriou and M. Yannakakis. </author> <title> How easy is local search? J. </title> <institution> Computer and Systems Sci. </institution> <month> 37 </month> <year> (1988), </year> <pages> 79-100. </pages>
Reference: [26] <author> W. B. Johnson and J. Lindenstrauss. </author> <title> Extensions of Lipschitz mappings into Hilbert space. </title> <note> Contemporary Mathematics 26 (1984) 189-206. </note>
Reference: [27] <author> N. Karmarkar and R.M. Karp. </author> <title> An efficient approximation scheme for the one-dimensional bin-packing problem. </title> <booktitle> In Proc. 23 rd IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 312-320, </pages> <year> 1982. </year> <month> 13 </month>
Reference-contexts: c; d. (Mitchell's algorithm works only in &lt; 2 .) With the discovery of this algorithm, Euclidean TSP joined a select group of NP-hard problems that have PTAS's, a group that includes Subset-Sum (Ibarra and Kim [22]) and Bin-Packing (de la Vega and Lueker [FL81]; see also Karmarkar and Karp <ref> [27] </ref>) Though theoretically significant, the recent PTAS for Euclidean TSP is impractical. The constant inside the big-O is about 15, implying a running time n 30 for 1.5-approximation (that is, when c = 2).
Reference: [28] <author> R. M. Karp. </author> <title> Reducibility among combinatorial problems. </title> <editor> In R. E. Miller and J. W. Thatcher, editors, </editor> <booktitle> Complexity of Computer Computations, Advances in Computing Research, </booktitle> <pages> pages 85-103. </pages> <publisher> Plenum Press, </publisher> <year> 1972. </year>
Reference: [29] <author> R. M. Karp. </author> <title> Probabilistic analysis of partitioning algorithms for the TSP in the plane. </title> <journal> Math. Oper. Res. </journal> <volume> 2 (1977), </volume> <pages> 209-224. </pages>
Reference: [30] <author> P. Klein and D. Karger. </author> <type> Personal communication, </type> <month> March </month> <year> 1996. </year>
Reference: [31] <author> D. Karger, P. Klein, and R. Tarjan. </author> <title> A randomized linear time algorithm for finding minimum spanning trees. </title> <journal> JACM 1996. </journal>
Reference-contexts: Prior work on polynomial-time problems. Problems such as Euclidean MST and Perfect Matching have been studied before. Exploiting geometric structure for these problems leads to algorithms that are faster than the corresponding algorithms for general graphs <ref> [31, 16] </ref>. Agarwal et al. [1] have designed a ~ O (n 4=3 )-algorithm for Euclidean MST in when the dimension d is fixed, 2 I originally conjectured that the "r" parameter needs to be (log n).
Reference: [32] <author> M. W. Krentel. </author> <title> Structure in locally optimal solutions. </title> <booktitle> Proc. 30th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp 216-221, </pages> <year> 1989. </year>
Reference: [33] <author> S. Khuller, B. Raghavachari, and N. Young. </author> <title> Low degree spanning tree of small weight. </title> <booktitle> In Proc. 26th ACM Symposium on Theory of Computing, </booktitle> <year> 1994. </year>
Reference: [34] <author> E. Koutsoupias, M. Grigni, and C. H. Papadimitriou. </author> <title> An Approximation Scheme for Planar Graph TSP. </title> <booktitle> In Proc. IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp 640-645, </pages> <year> 1995. </year>
Reference: [35] <author> E. L. Lawler, J. K. Lenstra, A. H. G. Rinnooy Kan, D. B. Shmoys. </author> <title> The traveling salesman problem. </title> <publisher> John Wiley, </publisher> <year> 1985 </year>
Reference-contexts: 1 Introduction The quest to understand the Traveling Salesman Problem has motivated research in many areas |such as linear programming, polyhedral theory, NP-completeness, probabilistic analysis of algorithms, approximation algorithms, and MAX SNP-completeness (see <ref> [35] </ref>). However, one paradox about the TSP remains unexplained: even though most theoretical results point to the problem's computational nastiness, in practice heuristics solve it quite well.
Reference: [36] <author> S. Lin. </author> <title> Computer solutions for the traveling salesman problem. </title> <journal> Bell System Tech. J., </journal> <volume> 44, </volume> <pages> 2245-2269. </pages>
Reference: [37] <author> S. Lin and B. W. Kernighan. </author> <title> An effective heuristic algorithm for the traveling salesman problem. </title> <journal> Operations Research 21 </journal> <pages> 498-516, </pages> <year> 1973. </year>
Reference-contexts: However, one paradox about the TSP remains unexplained: even though most theoretical results point to the problem's computational nastiness, in practice heuristics solve it quite well. Versions of the Lin-Kernighan heuristic <ref> [37] </ref> run |after careful tuning| in nearly linear time and often produces tours whose cost is within a few percent of the optimum (Johnson and McGeoch [24]).
Reference: [38] <author> C.S. Mata and J. Mitchell. </author> <title> Approximation Algorithms for Geometric tour and network problems. </title> <booktitle> In Proc. 11th ACM Symp. Comp. Geom., </booktitle> <pages> pp 360-369, </pages> <year> 1995. </year>
Reference: [39] <author> J. Mitchell. </author> <title> Guillotine subdivisions approximate polygonal subdivisions: A simple new method for the geometric k-MST problem. </title> <booktitle> In Proc. ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pp. 402-208, </pages> <year> 1996. </year>
Reference: [40] <author> J. Mitchell. </author> <title> Guillotine subdivisions approximate polygonal subdivisions: Part II- A simple PTAS for geometric k-MST, TSP, and related problems. </title> <type> Preliminary manuscript, </type> <month> April 30, </month> <year> 1996. </year>
Reference-contexts: Recently, Euclidean TSP was shown to have a polynomial time approximation scheme or PTAS (Arora [3] and soon after, Mitchell <ref> [40] </ref>). For any fixed c &gt; 1 and any n points in &lt; 2 , this algorithm in n O (c) time finds a tour of cost at most (1 + 1=c) times the optimum.
Reference: [41] <author> C. H. Papadimitriou. </author> <title> Euclidean TSP is NP-complete. </title> <journal> TCS, </journal> <volume> 4, </volume> <pages> pp 237-244, </pages> <year> 1977. </year>
Reference-contexts: Min Cost Perfect Matching The perturbation at the start of the algorithm requires some care, but otherwise the algorithm is similar to the TSP case. 5 Conclusions Can the running time of our algorithm be improved? 11 Since Euclidean TSP is strongly NP-hard (this follows from the reductions in <ref> [41] </ref>, for example), any algorithm that computes (1 + c)-approximations must have a running time with some exponential dependence on c (unless of course, NP-complete problems can be solved in subexponential time).
Reference: [42] <author> C. H. Papadimitriou. </author> <title> The complexity of the Lin-Kernighan heuristic for the traveling salesman problem. </title> <type> Manuscript, </type> <year> 1990. </year>
Reference: [43] <author> C. Papadimitriou and M. Yannakakis. </author> <title> The complexity of facets (and some facets of complexity). </title> <editor> In J. </editor> <booktitle> of Computer and System Sciences 28, </booktitle> <pages> pp 244-259, </pages> <note> 1984 (prelim. version in Proc. 24th ACM STOC, </note> <year> 1982). </year>
Reference: [44] <author> C. Papadimitriou and M. Yannakakis. </author> <title> Optimization, approximation and complexity classes. </title> <journal> J. of Computer and System Sciences 43, </journal> <pages> pp. 425-440, </pages> <year> 1991. </year> <month> 14 </month>
Reference-contexts: For example, Euclidean TSP | the version in which the nodes lie in &lt; 2 and distance is measured using the Euclidean or ` 2 norm| is not known to be MAX-SNP-hard, in contrast to Metric TSP (Papadimitriou and Yannakakis <ref> [44] </ref>). Thus one could hope to resolve the above-mentioned paradox by designing an excellent approximation algorithm for geometric TSP. However, until recently, we knew of no polynomial-time algorithm better than the Christofides algorithm from 1976 [11], which provably computes a tour of cost at most 1:5 times the optimum.
Reference: [45] <author> G. Reinelt. </author> <title> TSPLIB-A travelling salesman problem library. </title> <journal> ORSA J. Computing, </journal> <volume> 3, </volume> <pages> pp 376-384, </pages> <year> (1991). </year>
Reference-contexts: Potentially, this paradox could have a simple explanation since many "real-life" instances (see for example the TSPLIB library <ref> [45] </ref>, a test-bed for much experimental work on the TSP) are geometric, and many complexity-theoretic results may not apply to them.
Reference: [46] <author> S. Sahni and T. Gonzales. </author> <title> P-complete approximation problems. </title> <journal> JACM, </journal> <volume> 23 </volume> <pages> 555-565, </pages> <year> 1976. </year>
Reference: [47] <author> W. D. </author> <title> Smith Finding the optimum N -city traveling salesman tour in the Euclidean plan in subexponential time and polynomial space. </title> <type> Manuscript, </type> <year> 1988. </year>
Reference: [48] <author> L. Trevisan. </author> <title> The n-dimensional Euclidean TSP is Max SNP-hard, </title> <booktitle> In ACM STOC, </booktitle> <year> 1997. </year>
Reference-contexts: Likewise, Trevisan <ref> [48] </ref> has presented evidence that every approximation scheme for &lt; d must have a running time with a doubly exponential dependence on d. He shows for some c &gt; 1 that finding a (1 + 1=c)-approximate solution in &lt; O (log n) is NP-hard under randomized reductions.
Reference: [49] <author> P. </author> <title> Vaidya Geometry helps in matching. </title> <journal> SIAM J. Comp., </journal> <volume> 18 </volume> <pages> 1201-1225, </pages> <year> 1988. </year>
Reference-contexts: I thank Karen Wang, whose failure to construct any instance demonstrating this [51] motivated me to abandon that conjecture. 3 and Vaidya <ref> [49] </ref> has designed a ~ O (n 2:5 )-algorithm for matching. Vaidya [50] has also designed approximation schemes that compute (1 + 1=c)-approximations for MST and Euclidean Matching in ~ O (cn2 O (d) ) and ~ O (n 1:5 (2c) O (d) ) time respectively.
Reference: [50] <author> P. </author> <title> Vaidya Approximate minimum weight matching on k-dimensional spaces. </title> <journal> Algorithmica, </journal> <volume> 4: </volume> <pages> 569-583, </pages> <year> 1989. </year>
Reference-contexts: T in case of double-MST, then the running time reduces to O (poly (c)n log 3 n) and if one is willing to settle for solutions of cost (1:5 + 1=c)OP T in case of Christofides then its running time reduces to O (poly (c)n 1:5 log 3 n) (Vaidya <ref> [50] </ref>). 2 on the two sides of the line. <p> I thank Karen Wang, whose failure to construct any instance demonstrating this [51] motivated me to abandon that conjecture. 3 and Vaidya [49] has designed a ~ O (n 2:5 )-algorithm for matching. Vaidya <ref> [50] </ref> has also designed approximation schemes that compute (1 + 1=c)-approximations for MST and Euclidean Matching in ~ O (cn2 O (d) ) and ~ O (n 1:5 (2c) O (d) ) time respectively.
Reference: [51] <author> K. Wang. </author> <title> Is the m parameter in Arora's TSP algorithm the best possible? Junior project, </title> <institution> Princeton University, </institution> <month> Fall </month> <year> 1996. </year>
Reference-contexts: Agarwal et al. [1] have designed a ~ O (n 4=3 )-algorithm for Euclidean MST in when the dimension d is fixed, 2 I originally conjectured that the "r" parameter needs to be (log n). I thank Karen Wang, whose failure to construct any instance demonstrating this <ref> [51] </ref> motivated me to abandon that conjecture. 3 and Vaidya [49] has designed a ~ O (n 2:5 )-algorithm for matching.
Reference: [52] <author> A.Z. Zelikovsky. </author> <title> An 11=6-approximation algorithm for the network Steiner Problem. </title> <journal> Algorith-mica, </journal> <volume> 9: </volume> <pages> 463-470, </pages> <year> 1993. </year>
References-found: 53

