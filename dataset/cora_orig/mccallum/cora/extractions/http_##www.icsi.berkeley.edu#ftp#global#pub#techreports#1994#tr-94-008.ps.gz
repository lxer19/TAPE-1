URL: http://www.icsi.berkeley.edu/ftp/global/pub/techreports/1994/tr-94-008.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/ftp/global/pub/techreports/1994/
Root-URL: http://www.icsi.berkeley.edu
Email: email: becker@kea.informatik.uni-frankfurt.de  email: &lt;name&gt;@kea.informatik.uni-frankfurt.de  
Title: A Hybrid Fault Simulator for Synchronous Sequential Circuits  
Author: Rolf Krieger Bernd Becker Martin Keim 
Note: This work was supported by DFG grant Be 1176/3-1.  
Address: Berkeley, CA 94707;  20 Informatik, J.W.Goethe-Universitat, D-60054 Frankfurt;  
Affiliation: Fachbereich 20 Informatik, J.W.Goethe-Universitat, D-60054 Frankfurt, and International Computer Science Institute,  Fachbereich  
Pubnum: TR-94-008  
Abstract: Fault simulation for synchronous sequential circuits is a very time consuming task. The complexity of the task increases if there is no information about the initial state of the circuit available. In this case, an unknown initial state is assumed which is usually handled by introducing a three-valued logic. It is known, that fault simulation based upon this logic only determines a lower bound for the fault coverage achievable by a test sequence. Therefore, we developed a hybrid fault simulator H-FS combining the advantages of a fault simulator using the three-valued logic and of an exact symbolic fault simulator based upon binary decision diagrams. H-FS is able to handle even the largest benchmark circuits and thereby determines fault coverages much more accurately. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Abramovici and M. Breuer. </author> <title> On redundancy and fault detection in sequential circuits. </title> <journal> IEEE Trans. on Comp., </journal> <volume> 28(11) </volume> <pages> 864-865, </pages> <year> 1979. </year> <month> 12 </month>
Reference-contexts: If there is no knowledge about the initial state of the machine using the single observation time strategy the detectability of a stuck-at fault with respect to an input sequence Y can be defined according to <ref> [1] </ref> as follows: Definition 2: A fault f is detectable by an input sequence y (1); y (2); : : : ; y (n) if 9t n, 9i l, 9b 2 f0; 1g such that (A) 8s 2 s set (t 1): o i (t) = b with o (t) =
Reference: [2] <author> V. Agrawal, K.-T. Cheng, D. Johnson, and T. Lin. </author> <title> Designing circuits with partial scan. </title> <journal> IEEE Design & Test of Comp., </journal> <volume> 5(4) </volume> <pages> 8-15, </pages> <year> 1988. </year>
Reference-contexts: A lot of work has been done to overcome these problems. On the one hand, a full or partial scan design <ref> [2, 7] </ref> or a sophisticated state assignment procedure [7, 10] can help. But a scan design involves additional circuitry such as multiplexers which increase the area and degrade the performance of the circuit [2]. <p> On the one hand, a full or partial scan design [2, 7] or a sophisticated state assignment procedure [7, 10] can help. But a scan design involves additional circuitry such as multiplexers which increase the area and degrade the performance of the circuit <ref> [2] </ref>. A state assignment procedure can only be applied during the synthesis and not if an already designed circuit is considered. On the other hand, a fault simulation procedure based upon the multiple observation time test strategy can help [17].
Reference: [3] <author> B. Becker and R. Krieger. FAST-SC: </author> <title> Fast fault simulation in synchronous sequential circuits. </title> <booktitle> In VLSI Design Conf., </booktitle> <pages> pages 128-131, </pages> <year> 1993. </year>
Reference-contexts: Therefore, in most cases only a lower bound for the fault coverage is determined by performing the fault simulation using a three-valued logic <ref> [3, 12, 14, 19] </ref>. Unfortunately, there are a lot of circuits for which the gap between this lower bound and the exact fault coverage which can be achieved by a given test sequence is very large. The reason for that gap is the inherent inaccuracy of the three-valued logic. <p> The first class makes use of the machine word length for simulating 32 faults in parallel [8]. The second class is based upon the single fault propagation (SFP). Some approaches belonging to the second class use the machine word length for parallel evaluation of input patterns <ref> [3, 12] </ref>. The overall fault simulation procedure used in our approach correponds to SFP. Since different logics encoding the unknown initial state in different ways are to be used, we cannot take advantage of the machine word length for parallelization. <p> From this it follows that the mode M B can accelerate the fault simulation. Note that H-FS working in mode M X is very fast for deterministic test sequences. In many examples its efficiency is approximately comparable with that of fault simulators published in <ref> [12, 3, 8] </ref>. Tab. 3 shows the fault coverages and execution times for circuits which are known to be hard to initialize. We considered the different modes of H-FS for random test sequences. For all these circuits, H-FS can increase the fault coverages considerably working in mode M B .
Reference: [4] <author> K. Brace, R. Rudell, and R. Bryant. </author> <title> Efficient implementation of a BDD package. </title> <booktitle> In Design Automation Conf., </booktitle> <pages> pages 40-45, </pages> <year> 1990. </year>
Reference-contexts: The two constant functions contained in B m will be abbreviated by 0 and 1. For the simulation, an element of the logic is represented by a reduced ordered binary decision diagram (OBDD) as introduced in [6]. Using an OBDD-package, OBDDs can be constructed and modified, efficiently <ref> [4] </ref>. To perform a symbolic fault simulation a component of an input vector will be interpreted as one of the constant functions 0 and 1. <p> Its accuracy can be controled by the space limit S max . 5 Experimental Results To investigate the performance of our approach we implemented the hybrid fault simulation procedure H-FS based upon the procedures X-FS, BX-FS and B-FS. For the implementation, we used C++ and the OBDD-Package of <ref> [4] </ref>. The measurements were performed on a SUN SPARC station 10 with 32Mbytes of memory. For our experiments, we considered the ISCAS-89 benchmark circuits [5]. A space limit S max of 2Mbytes was used to guarantee that the procedures of H-FS based upon OBDDs work efficiently.
Reference: [5] <author> F. Brglez, D. Bryan, and K. Kozminski. </author> <title> Combinational profiles of sequential benchmark circuits. </title> <booktitle> In Int'l Symp. Circ. and Systems, </booktitle> <pages> pages 1929-1934, </pages> <year> 1989. </year>
Reference-contexts: After the application of a few patterns that possibly initialize a large number of memory elements and reduce the space requirement of B-FS, it will try to start B-FS again. For that reason, the hybrid fault simulation strategy works also for the largest benchmark circuits <ref> [5] </ref>, and it determines the exact fault coverage or at least a tighter lower bound. In some cases simulating random test sequences it achieves fault coverages which are higher than fault coverages achieved by up-to-date test generation systems [9, 18]. <p> The hybrid fault simulation procedure is described in section 4. Finally, in section 5 experimental results are given, which demonstrate the efficiency of the presented hybrid fault simulation procedure for the ISCAS89-benchmark circuits <ref> [5] </ref>. 2 Definitions A synchronous sequential circuit can be considered as a Finite State Machine (FSM) as introduced in [13]. <p> Moreover, the loss of accuracy is probably negligible if problems discussed above do not occur. But even for some of the ISCAS 4 benchmark circuits <ref> [5] </ref> it can be proved that their synchronizing sequence cannot be verified using a three-valued logic. <p> Conclusions drawn from the results presented in [9] emphasize this statetment. The authors of [9] propose the application of symbolic traversal techniques to test generation. Their experiments have shown that their symbolic methods are not applicable to the largest benchmarks presented in <ref> [5] </ref>. For that reason, we developed a hybrid fault simulation procedure H-FS which allows to select the logic for simulating the next input vector. Fig. 5 depicts the overall structure of H-FS. It incorporates the fault simulators X-FS, BX-FS and B-FS. <p> For the implementation, we used C++ and the OBDD-Package of [4]. The measurements were performed on a SUN SPARC station 10 with 32Mbytes of memory. For our experiments, we considered the ISCAS-89 benchmark circuits <ref> [5] </ref>. A space limit S max of 2Mbytes was used to guarantee that the procedures of H-FS based upon OBDDs work efficiently. Tab. 1 shows the fault coverages and execution times for some circuits for deterministic test sequences also used in [12].
Reference: [6] <author> R. Bryant. </author> <title> Graph based algorithms for Boolean function manipulation. </title> <journal> IEEE Trans. on Comp., </journal> <volume> 8 </volume> <pages> 677-691, </pages> <year> 1986. </year>
Reference-contexts: Another proposal is the application of symbolic traversal techniques to test generation [9]. This approach is based upon reduced ordered binary decision diagrams (OBDDs) <ref> [6] </ref>. It is of great promise but up to now not feasible for larger circuits. In this paper, we present an event-driven hybrid fault simulator based upon the single observation time test strategy which can help to solve these problems. <p> More precisely, it consists of three kinds of fault simulation procedures: (1) a fault simulation procedure X-FS based upon the three-valued logic, (2) a symbolic fault simulation procedure B-FS based upon binary decision diagrams <ref> [6] </ref> and (3) a fault simulation procedure BX-FS which is hybrid itsself in the sense that a symbolic true value simulation and an explicit fault simulation procedure based upon the three-valued logic are combined. They differ in their time and space requirement and the accuracy of the fault coverage determined. <p> The two constant functions contained in B m will be abbreviated by 0 and 1. For the simulation, an element of the logic is represented by a reduced ordered binary decision diagram (OBDD) as introduced in <ref> [6] </ref>. Using an OBDD-package, OBDDs can be constructed and modified, efficiently [4]. To perform a symbolic fault simulation a component of an input vector will be interpreted as one of the constant functions 0 and 1.
Reference: [7] <author> K.-T. Cheng and V. Agrawal. </author> <title> State assignment for initializable synthesis. </title> <booktitle> In IEEE Int'l Conf. on CAD, </booktitle> <pages> pages 212-215, </pages> <year> 1989. </year>
Reference-contexts: A lot of work has been done to overcome these problems. On the one hand, a full or partial scan design <ref> [2, 7] </ref> or a sophisticated state assignment procedure [7, 10] can help. But a scan design involves additional circuitry such as multiplexers which increase the area and degrade the performance of the circuit [2]. <p> A lot of work has been done to overcome these problems. On the one hand, a full or partial scan design [2, 7] or a sophisticated state assignment procedure <ref> [7, 10] </ref> can help. But a scan design involves additional circuitry such as multiplexers which increase the area and degrade the performance of the circuit [2]. A state assignment procedure can only be applied during the synthesis and not if an already designed circuit is considered.
Reference: [8] <author> W. Cheng and J. Patel. </author> <title> PROOFS: A super fast fault simulator for sequential circuits. </title> <booktitle> In European Conf. on Design Automation, </booktitle> <pages> pages 475-479, </pages> <year> 1990. </year>
Reference-contexts: Roughly spoken, they can be devided into two classes. The first class makes use of the machine word length for simulating 32 faults in parallel <ref> [8] </ref>. The second class is based upon the single fault propagation (SFP). Some approaches belonging to the second class use the machine word length for parallel evaluation of input patterns [3, 12]. The overall fault simulation procedure used in our approach correponds to SFP. <p> From this it follows that the mode M B can accelerate the fault simulation. Note that H-FS working in mode M X is very fast for deterministic test sequences. In many examples its efficiency is approximately comparable with that of fault simulators published in <ref> [12, 3, 8] </ref>. Tab. 3 shows the fault coverages and execution times for circuits which are known to be hard to initialize. We considered the different modes of H-FS for random test sequences. For all these circuits, H-FS can increase the fault coverages considerably working in mode M B .
Reference: [9] <author> H. Cho, S. Jeong, F. Somenzi, and C. Pixley. </author> <title> Synchronizing sequences and symbolic traversal techniques in test generation. Jour. of Electronic Testing, </title> <journal> Theory and Applications, </journal> <volume> 4 </volume> <pages> 19-31, </pages> <year> 1993. </year>
Reference-contexts: But even for small circuits, the application of this strategy is very time consuming and should be restricted to faults which are redundant with respect to the single time observation strategy. Another proposal is the application of symbolic traversal techniques to test generation <ref> [9] </ref>. This approach is based upon reduced ordered binary decision diagrams (OBDDs) [6]. It is of great promise but up to now not feasible for larger circuits. <p> In some cases simulating random test sequences it achieves fault coverages which are higher than fault coverages achieved by up-to-date test generation systems <ref> [9, 18] </ref>. Consequently, using our fault simulator most of these systems can improve their performance considerably. The paper is structured as follows: We start in section 2 by presenting some definitions and important properties of synchronous sequential circuits. <p> But the quality improvement must be paid for with an exponential worst case space requirement. Due to this fact, in general fault simulation based upon OBDDs (BX-FS and B-FS) is not feasible for large circuits. Conclusions drawn from the results presented in <ref> [9] </ref> emphasize this statetment. The authors of [9] propose the application of symbolic traversal techniques to test generation. Their experiments have shown that their symbolic methods are not applicable to the largest benchmarks presented in [5]. <p> But the quality improvement must be paid for with an exponential worst case space requirement. Due to this fact, in general fault simulation based upon OBDDs (BX-FS and B-FS) is not feasible for large circuits. Conclusions drawn from the results presented in <ref> [9] </ref> emphasize this statetment. The authors of [9] propose the application of symbolic traversal techniques to test generation. Their experiments have shown that their symbolic methods are not applicable to the largest benchmarks presented in [5]. <p> For 11 instance, consider the fault coverages obtained for circuit s510. After simulating a random sequence of length 1024 we get a fault coverage of 100%. This fault coverage is much better than the fault coverage determined by the test generation procedure VERITAS described in <ref> [9] </ref> which only achieves a fault coverage of 93:3% for a deterministic test sequence of length 3027. We are sure, that the performance of a tool like VERITAS can be improved considerably by using H-FS.
Reference: [10] <author> S. Devadas and K. Kreutzer. </author> <title> Boolean minimization and algebraic factorization procedures for fully testable sequential machines. </title> <booktitle> In IEEE Int'l Conf. on CAD, </booktitle> <pages> pages 208-211, </pages> <year> 1989. </year>
Reference-contexts: A lot of work has been done to overcome these problems. On the one hand, a full or partial scan design [2, 7] or a sophisticated state assignment procedure <ref> [7, 10] </ref> can help. But a scan design involves additional circuitry such as multiplexers which increase the area and degrade the performance of the circuit [2]. A state assignment procedure can only be applied during the synthesis and not if an already designed circuit is considered.
Reference: [11] <author> M. Garey and D. Johnson. </author> <title> Computers and Intractability A Guide to NP-Completeness. </title> <address> Free-mann, San Francisco, </address> <year> 1979. </year>
Reference-contexts: This can be proved by a reduction of the non-tautology problem to the problem described above. The non-tautology problem corresponds to the question wether a given Boolean expression ist not a tautology, i.e. is there a truth assignment that makes the Boolean expression false <ref> [11] </ref>. 3 Fault Simulation In this section, we discuss several strategies to solve the problem formulated in the previous section. All strategies are based upon the same algorithm for fault simulation. The only difference between the strategies is the logic used for the simulation.
Reference: [12] <author> N. Gouders and R. Kaibel. </author> <title> A parallel pattern fault simulator for synchronous sequential circuits. </title> <booktitle> In IEEE Int'l Conf. on CAD, </booktitle> <volume> volume 2, </volume> <pages> pages 542-545, </pages> <year> 1991. </year>
Reference-contexts: Therefore, in most cases only a lower bound for the fault coverage is determined by performing the fault simulation using a three-valued logic <ref> [3, 12, 14, 19] </ref>. Unfortunately, there are a lot of circuits for which the gap between this lower bound and the exact fault coverage which can be achieved by a given test sequence is very large. The reason for that gap is the inherent inaccuracy of the three-valued logic. <p> The first class makes use of the machine word length for simulating 32 faults in parallel [8]. The second class is based upon the single fault propagation (SFP). Some approaches belonging to the second class use the machine word length for parallel evaluation of input patterns <ref> [3, 12] </ref>. The overall fault simulation procedure used in our approach correponds to SFP. Since different logics encoding the unknown initial state in different ways are to be used, we cannot take advantage of the machine word length for parallelization. <p> A space limit S max of 2Mbytes was used to guarantee that the procedures of H-FS based upon OBDDs work efficiently. Tab. 1 shows the fault coverages and execution times for some circuits for deterministic test sequences also used in <ref> [12] </ref>. We investigated the performance of H-FS working in different modes as described in section 4. jT j denotes the length of the test sequence. Exact fault coverages are indicated by an asterisk. <p> From this it follows that the mode M B can accelerate the fault simulation. Note that H-FS working in mode M X is very fast for deterministic test sequences. In many examples its efficiency is approximately comparable with that of fault simulators published in <ref> [12, 3, 8] </ref>. Tab. 3 shows the fault coverages and execution times for circuits which are known to be hard to initialize. We considered the different modes of H-FS for random test sequences. For all these circuits, H-FS can increase the fault coverages considerably working in mode M B .
Reference: [13] <author> Z. Kohavi. </author> <title> Switching and Finite Automata Theory. </title> <publisher> McGraw-Hill Book Company, </publisher> <year> 1978. </year>
Reference-contexts: Finally, in section 5 experimental results are given, which demonstrate the efficiency of the presented hybrid fault simulation procedure for the ISCAS89-benchmark circuits [5]. 2 Definitions A synchronous sequential circuit can be considered as a Finite State Machine (FSM) as introduced in <ref> [13] </ref>.
Reference: [14] <author> C. Kung and C. Lin. </author> <title> Parallel sequence fault simulation for synchronous sequential circuits. </title> <booktitle> In European Conf. on Design Automation, </booktitle> <pages> pages 434-438, </pages> <year> 1992. </year>
Reference-contexts: Therefore, in most cases only a lower bound for the fault coverage is determined by performing the fault simulation using a three-valued logic <ref> [3, 12, 14, 19] </ref>. Unfortunately, there are a lot of circuits for which the gap between this lower bound and the exact fault coverage which can be achieved by a given test sequence is very large. The reason for that gap is the inherent inaccuracy of the three-valued logic.
Reference: [15] <author> H. Liaw and C. Lin. </author> <title> On the obdd-representation of general boolean functions. </title> <journal> In IEEE Transaction on Computers, </journal> <volume> volume 41, </volume> <pages> pages 661-664, </pages> <year> 1992. </year>
Reference-contexts: The worst case size of an OBDD representing a function in m arguments is nearly O (2 m =m) <ref> [15] </ref>. The space requirement of B-FS may be much larger because the true value simulation assigns an OBDD to each lead of the circuit which must be stored for the event-driven explicit fault simulation.
Reference: [16] <author> A. Miczo. </author> <title> The sequential ATPG: A theoretical limit. </title> <booktitle> In IEEE Int'l Test Conf., </booktitle> <pages> pages 143-147, </pages> <year> 1983. </year>
Reference-contexts: The reason for that gap is the inherent inaccuracy of the three-valued logic. For instance, there are circuits whose synchronizing sequence cannot be verified using the three-valued logic <ref> [16] </ref>. (A synchronizing sequence is an input sequence which drives the circuit from any initial state into a single state). A lot of work has been done to overcome these problems. <p> There are circuits having synchronizing sequences that cannot be verified by a simulation based upon the three-valued logic. Many papers point out to this problem. The inaccuracy can be explained on the one hand by the binary encoding of the states <ref> [16] </ref> and on the other hand by the logic realizing the next state function. For instance, consider the circuit shown in Fig. 2.
Reference: [17] <author> I. Pomeranz and S. Reddy. </author> <title> Fault simulation for synchronous sequential circuits under the multiple observation time testing approach. </title> <booktitle> In European Test Conf., </booktitle> <pages> pages 292-300, </pages> <year> 1993. </year>
Reference-contexts: A state assignment procedure can only be applied during the synthesis and not if an already designed circuit is considered. On the other hand, a fault simulation procedure based upon the multiple observation time test strategy can help <ref> [17] </ref>. But even for small circuits, the application of this strategy is very time consuming and should be restricted to faults which are redundant with respect to the single time observation strategy. Another proposal is the application of symbolic traversal techniques to test generation [9]. <p> Another important observation is that this circuit does not contain any fault that is redundant to the single observation time test strategy. Consequently, an application of the expensive multiple observation time test strategy as proposed in <ref> [17] </ref> is superfluous. In opposite to other procedures using symbolic methods, we are also able to perform a more accurate fault simulation for the largest benchmark circuits. For instance, using H-FS in mode M B , the fault coverage is approximately 3% higher than using M X for circuit s13207. <p> Due to the accuracy of our symbolic fault simulation the expensive application of this strategy can be restricted to some few faults. Therefore, we are sure that the resulting procedure is working much more efficiently than the procedure presented in <ref> [17] </ref>.
Reference: [18] <author> I. Pomeranz, S. Reddy, and L. Reddy. </author> <title> Increasing fault coverage for synchronous sequential circuits by the multiple observation time test strategy. </title> <booktitle> In IEEE Int'l Conf. on CAD, </booktitle> <pages> pages 454-457, </pages> <year> 1991. </year>
Reference-contexts: In some cases simulating random test sequences it achieves fault coverages which are higher than fault coverages achieved by up-to-date test generation systems <ref> [9, 18] </ref>. Consequently, using our fault simulator most of these systems can improve their performance considerably. The paper is structured as follows: We start in section 2 by presenting some definitions and important properties of synchronous sequential circuits.
Reference: [19] <author> E. Rudnick, T. Niermann, and J. Patel. </author> <title> Methods for reducing events in sequential ciruit fault simulation. </title> <booktitle> In IEEE Int'l Conf. on CAD, </booktitle> <pages> pages 546-549, </pages> <year> 1991. </year> <pages> 13 14 </pages>
Reference-contexts: Therefore, in most cases only a lower bound for the fault coverage is determined by performing the fault simulation using a three-valued logic <ref> [3, 12, 14, 19] </ref>. Unfortunately, there are a lot of circuits for which the gap between this lower bound and the exact fault coverage which can be achieved by a given test sequence is very large. The reason for that gap is the inherent inaccuracy of the three-valued logic.
References-found: 19

