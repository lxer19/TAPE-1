URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr91/tr91-029.ps
Refering-URL: http://www.cis.ufl.edu/tech-reports/tech-reports/tr91-abstracts.html
Root-URL: http://www.cis.ufl.edu
Title: NP-Hard Network Upgrading Problems+  
Author: Doowon Paik Sartaj Sahni 
Keyword: And Phrases Network performance, performance enhancement, vertex upgrades, NP-hard  
Note: This research was supported, in part, by the National Science Foundation under grant MIP86-17374.  
Affiliation: University of Minnesota University of Florida  
Abstract: University of Florida Technical Report 91-29 Abstract Graphs with delays associated with their edges are often used to model communication and signal flow networks. Network performance can be improved by upgrading the network vertices. Such an improvement reduces the edge delays and comes at a cost. We study different formulations of this network performance improvement problem and show that these are NP-hard. 
Abstract-found: 1
Intro-found: 1
Reference: [CHAN90] <author> P. K. Chan, </author> <title> "Algorithms For Library-Specific Sizing Of Combinational Logic", </title> <booktitle> Proc. 27th DAC Conf., 1990 pp. </booktitle> <pages> 353-356. </pages>
Reference-contexts: either 0 or 2 satellite vertices (to use a satellite link there must be a send and a receive vertex; further there is no advantage to using more than one satellite link in any communication). - Directed acyclic graphs (dags) are often used to model signal flow in electronic circuits <ref> [CHAN90, GHAN87, MCGE90] </ref>. Vertices represent circuit modules and directed edges represent signal flow. In a simplistic model, each has a delay of one. A module can be upgraded by replacing it with a functionally equivalent one using a superior technology.
Reference: [GARE79] <author> M. R. Garey, and D. S. Johnson, </author> <title> "Computers and Intractability ", W. </title> <editor> H. </editor> <publisher> Freeman and Company, </publisher> <address> San Francisco, </address> <year> 1979. </year>
Reference-contexts: Related vertex deletion problems were studied by Krishnamoorthy and Deo [KRIS79]. They showed that several interesting vertex deletion problems are NP-complete. The four problems defined above are considered in Sections 2 through 5, respectively. The discussion of these sections makes use of the following known NP-hard problems <ref> [GARE79] </ref>. 1. Vertex Cover Input: An undirected graph G = (V, E) and a positive integer k |V| Output: "Yes" iff there is a subset V V with |V| k such that for each edge (u,v) E at least one of u and v belongs to V. 2. <p> So, the case when none of a,b, and c is in S does not arise. The lemma now follows from the further observation that the vertex cover problem limited to connected graphs of degree 5 and number of vertices 30 is NP-hard <ref> [GARE79] </ref>. Theorem 3: Satellite (d) is NP-hard for d 1. Proof : For integer d, the proof is by induction on d. For the induction base, Lemmas 7 and 8 show that Satellite (1) and Satellite (2) are NP-hard.
Reference: [GHAN87] <author> S. Ghanta, H. C. Yen, and H. C. Du, </author> <title> "Timing Analysis Algorithms For Large Designs", </title> <institution> University of Minnesota, </institution> <type> Technical Report, </type> <institution> 87-57,1987. </institution>
Reference-contexts: either 0 or 2 satellite vertices (to use a satellite link there must be a send and a receive vertex; further there is no advantage to using more than one satellite link in any communication). - Directed acyclic graphs (dags) are often used to model signal flow in electronic circuits <ref> [CHAN90, GHAN87, MCGE90] </ref>. Vertices represent circuit modules and directed edges represent signal flow. In a simplistic model, each has a delay of one. A module can be upgraded by replacing it with a functionally equivalent one using a superior technology.
Reference: [KRIS79] <author> M. Krishnamoorthy and N. Deo, </author> <title> "Node deletion NP-complete problems", </title> <journal> SIAM Jr on Computing, </journal> <volume> Vol 8, No 4, </volume> <year> 1979, </year> <pages> pp 619-625. </pages>
Reference-contexts: LongestPath (0,d) can be solved in pseudo-polynomial time for trees, series-parallel dags, and general series-parallel dags [PAIK91c]. The pseudo-polynomial time algorithms apply to dags with arbitrary vertex weights and edge delays. Related vertex deletion problems were studied by Krishnamoorthy and Deo <ref> [KRIS79] </ref>. They showed that several interesting vertex deletion problems are NP-complete. The four problems defined above are considered in Sections 2 through 5, respectively. The discussion of these sections makes use of the following known NP-hard problems [GARE79]. 1.
Reference: [MCGE90] <author> P. McGeer, R. Brayton, R. Rudell, and A. Sangiovanni-Vincentelli, </author> <title> "Extended Stuck-fault Testability For Combinational Networks", </title> <booktitle> Proc. of the 6th MIT Conference on Advanced Research in VLSI, </booktitle> <publisher> MIT Press, </publisher> <month> April </month> <year> 1990. </year> - 
Reference-contexts: either 0 or 2 satellite vertices (to use a satellite link there must be a send and a receive vertex; further there is no advantage to using more than one satellite link in any communication). - Directed acyclic graphs (dags) are often used to model signal flow in electronic circuits <ref> [CHAN90, GHAN87, MCGE90] </ref>. Vertices represent circuit modules and directed edges represent signal flow. In a simplistic model, each has a delay of one. A module can be upgraded by replacing it with a functionally equivalent one using a superior technology.
Reference: [PAIK90] <author> D. Paik, S. Reddy, and S. Sahni, </author> <title> "Vertex Splitting In Dags And Applications To Partial Scan Designs And Lossy Circuits", </title> <institution> University of Florida, </institution> <type> Technical Report, </type> <institution> 90-34,1990. </institution>
Reference-contexts: Since, in this paper, we are mainly concerned with showing that these problems are NP-hard, the complexity results obtained for the simpler models apply to the more realistic problems also. Network performance enhancement through vertex upgrades has been considered before. Paik, Reddy, and Sahni <ref> [PAIK90] </ref> modeled the optimal placement of scan registers in a dag as a vertex splitting problem in a dag. The objective was to split the fewest number of vertices so that the resulting dag had no path of length &gt; d.
Reference: [PAIK91a] <author> D. Paik, S. Reddy, and S. Sahni, </author> <title> "Deleting Verticies To Bound Path Lengths", </title> <institution> University of Florida, </institution> <type> Technical Report, </type> <pages> 91-4, </pages> <year> 1991. </year>
Reference-contexts: The objective was to split the fewest number of vertices so that the resulting dag had no path of length &gt; d. They showed that this problem was NP-hard for general dags but polynomially solvable for tree and series-parallel dags. In <ref> [PAIK91a] </ref>, Paik, Reddy, and Sahni showed that the problem of upgrading circuit modules so as to control signal loss can be modeled as a dag vertex deletion problem in which one seeks to delete the fewest number of vertices so that the resulting dag has no path of length &gt; d.
Reference: [PAIK91b] <author> D. Paik, and S. Sahni, </author> <title> "Upgrading Circuit Modules To Improve Performance", </title> <institution> University of Florida, </institution> <type> Technical Report, </type> <year> 1991. </year>
Reference: [PAIK91c] <author> D. Paik, and S. Sahni, </author> <title> "Upgrading Vertices In Trees, Series-Parallel Digraphs And General Series-Parallel Digraphs To Bound Path Length", </title> <institution> University of Florida, </institution> <type> Technical Report, </type> <year> 1991. </year> - 
Reference-contexts: They also proposed several heuristics for LongestPath (0,d) for dags with non unit weights and delays. LongestPath (0,d) can be solved in pseudo-polynomial time for trees, series-parallel dags, and general series-parallel dags <ref> [PAIK91c] </ref>. The pseudo-polynomial time algorithms apply to dags with arbitrary vertex weights and edge delays. Related vertex deletion problems were studied by Krishnamoorthy and Deo [KRIS79]. They showed that several interesting vertex deletion problems are NP-complete. The four problems defined above are considered in Sections 2 through 5, respectively.
References-found: 9

