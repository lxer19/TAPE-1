URL: http://www.cs.Helsinki.FI/research/pmdm/datamining/pubs/icde96.ps.gz
Refering-URL: http://www.cs.helsinki.fi/~ronkaine/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: e-mail: Heikki.Mannila@cs.Helsinki.FI  
Title: Knowledge Discovery from Telecommunication Network Alarm Databases system is built on the basis of viewing
Author: K. Hatonen M. Klemettinen H. Mannila P. Ronkainen H. Toivonen 
Address: P.O. Box 26, FIN-00014 Helsinki, Finland  
Affiliation: University of Helsinki, Department of Computer Science  
Note: To appear in the 12th International Conference on Data Engineering (ICDE'96), New Orleans, Louisiana, February/March 1996.  The  
Abstract: A telecommunication network produces daily large amounts of alarm data. The data contains hidden valuable knowledge about the behavior of the network. This knowledge can be used in filtering redundant alarms, locating problems in the network, and possibly in predicting severe faults. We describe the TASA (Telecommunication Network Alarm Sequence Analyzer) system for discovering and browsing knowledge from large alarm databases. The TASA system offers a variety of selection and ordering criteria for episodes, and supports iterative retrieval from the discovered knowledge. This means that a large part of the iterative nature of the KDD process can be replaced by iteration in the rule postpro-cessing stage. The user interface is based on dynamically generated HTML. The system is in experimental use, and the results are encouraging: some of the discovered knowledge is being integrated into the alarm handling software of telecommunication operators. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Rakesh Agrawal, Heikki Mannila, Ramakrish-nan Srikant, Hannu Toivonen, and A. Inkeri Verkamo. </author> <title> Fast discovery of association rules. </title> <editor> In Usama M. Fayyad, Gregory Piatetsky-Shapiro, Padhraic Smyth, and Ramasamy Uthurusamy, editors, </editor> <booktitle> Advances in Knowledge Discovery and Data Mining. </booktitle> <publisher> AAAI Press, </publisher> <address> Menlo Park, CA, </address> <year> 1996. </year> <note> To appear. </note>
Reference-contexts: The algorithm is presented in more detail in [11] for a slightly simpler setting. Related ideas have been expressed in <ref> [1, 2, 10] </ref>, where the idea of obtaining all rules is pursued. The pattern extraction task in the TASA system can be formalized as follows.
Reference: [2] <author> Rakesh Agrawal and Ramakrishnan Srikant. </author> <title> Fast algorithms for mining association rules in large databases. </title> <booktitle> In Proceedings of the Twentieth International Conference on Very Large Data Bases (VLDB'94), </booktitle> <month> September </month> <year> 1994. </year>
Reference-contexts: The algorithm is presented in more detail in [11] for a slightly simpler setting. Related ideas have been expressed in <ref> [1, 2, 10] </ref>, where the idea of obtaining all rules is pursued. The pattern extraction task in the TASA system can be formalized as follows.
Reference: [3] <author> R. Brachman and T. Anand. </author> <title> Data archeology. In Knowledge Discovery in Databases, </title> <booktitle> Papers from the 1993 AAAI Workshop (KDD'93), </booktitle> <month> July </month> <year> 1993. </year>
Reference-contexts: KDD combines methods and tools from machine learning, statistics, and databases. It can be loosely defined as the task of obtaining useful and interesting knowledge from large collections of data. KDD is an iterative and interactive process <ref> [3, 4] </ref>. In the core of the KDD process are the algorithms for discovering different types of patterns (rules, trends, etc.) from data. However, in the whole problem of obtaining useful knowledge, the inference of patterns is only a small part.
Reference: [4] <author> Usama M. Fayyad, Gregory Piatetsky-Shapiro, and Padhraic Smyth. </author> <title> From data mining to knowledge discovery: An overview. </title> <editor> In Usama M. Fayyad, Gregory Piatetsky-Shapiro, Padhraic Smyth, and Ramasamy Uthurusamy, editors, </editor> <booktitle> Advances in Knowledge Discovery and Data Mining. </booktitle> <publisher> AAAI Press, </publisher> <address> Menlo Park, CA, </address> <year> 1996. </year> <note> To appear. </note>
Reference-contexts: KDD combines methods and tools from machine learning, statistics, and databases. It can be loosely defined as the task of obtaining useful and interesting knowledge from large collections of data. KDD is an iterative and interactive process <ref> [3, 4] </ref>. In the core of the KDD process are the algorithms for discovering different types of patterns (rules, trends, etc.) from data. However, in the whole problem of obtaining useful knowledge, the inference of patterns is only a small part. <p> The users can manipulate the collection of discovered rules using selection and ordering operations, as well as more complex operations for including or excluding certain classes of rules. 1 We use here the terminology of Fayyad et al. <ref> [4] </ref>, where "data mining" refers to the pattern extraction part of the KDD process. Any realistic KDD system produces a lot of information. This wealth of information has to be presented to the users in an accessible form.
Reference: [5] <editor> Usama M. Fayyad, Gregory Piatetsky-Shapiro, Padhraic Smyth, and Ramasamy Uthurusamy, editors. </editor> <booktitle> Advances in Knowledge Discovery and Data Mining. </booktitle> <publisher> AAAI Press, </publisher> <address> Menlo Park, CA, </address> <year> 1996. </year> <note> To appear. </note>
Reference-contexts: 1 Introduction Knowledge discovery in databases (KDD) has recently attracted a lot of interest from researchers and users of database systems; see <ref> [5, 13] </ref> for overviews. KDD combines methods and tools from machine learning, statistics, and databases. It can be loosely defined as the task of obtaining useful and interesting knowledge from large collections of data. KDD is an iterative and interactive process [3, 4].
Reference: [6] <author> Gabriel Jakobson and Mark D. Weissman. </author> <title> Alarm correlation. </title> <journal> IEEE Network, </journal> <volume> 7(6):52 - 59, </volume> <month> Novem-ber </month> <year> 1993. </year>
Reference-contexts: Thus the operators do not have time to learn what the appropriate response to each situation is. To alleviate the problem of processing the alarms, alarm filtering and correlation <ref> [6] </ref> have been used to reduce the number of alarms that actually are shown to the operators and to raise the abstraction level of the information shown.
Reference: [7] <author> J. D. Kalbfleisch and R. L. Prentice. </author> <title> The Statistical Analysis of Failure Time Data. </title> <publisher> John Wiley Inc., </publisher> <address> New York, NY, </address> <year> 1980. </year>
Reference-contexts: From the statistical point of view, an alarm sequence can be viewed as a marked point process, and each event (i.e., an alarm) can be considered as a failure of a component. Therefore the hazard rate based methods of analysis of failure-time data for the data can be used <ref> [7] </ref>. Combined with the Bayesian paradigm, the statistical machinery for these types of models is very powerful, and elaborate simulation mechanisms exist for their analysis (e.g., the EM and Gibbs methods, see [15]). We are, in fact, applying such techniques for small subproblems of the alarm analysis problem.
Reference: [8] <author> Mika Klemettinen, Heikki Mannila, Pirjo Ronkainen, Hannu Toivonen, and A. Inkeri Verkamo. </author> <title> Finding interesting rules from large sets of discovered association rules. </title> <booktitle> In Proceedings of the Third International Conference on Information and Knowledge Management (CIKM'94), </booktitle> <pages> pages 401 - 407, </pages> <address> New York, NY, </address> <month> November </month> <year> 1994. </year> <note> ACM. </note>
Reference-contexts: Pruning and ordering need to be done according to the values of various attributes of the rules, e.g., types or severities of the alarms, or confidence, frequency, or statistical significance of the rules. Additionally, rules can be selected or removed by giving templates <ref> [8] </ref>, i.e., simple regular expressions that describe the form of rules that are to be selected (inclusive template) or removed (restrictive template). This technique is surprisingly powerful.
Reference: [9] <author> Willi Kloesgen. </author> <title> Efficient discovery of interesting statements in databases. </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 4(1):53 - 69, </volume> <year> 1995. </year>
Reference-contexts: The aim of knowledge discovery in databases is to extract interesting knowledge from large collections of data. What is interesting varies from one situation to another. The interestingness criteria are in many KDD systems given as inputs to the pattern extraction process <ref> [9, 14] </ref>. If the users change their views, the data has to be analyzed anew. This can in the worst case require a lot of computational effort, and it can cause delays in the KDD process.
Reference: [10] <author> Heikki Mannila, Hannu Toivonen, and A. Inkeri Verkamo. </author> <title> Efficient algorithms for discovering association rules. </title> <editor> In Usama M. Fayyad and Ra-masamy Uthurusamy, editors, </editor> <booktitle> Knowledge Discovery in Databases, Papers from the 1994 AAAI Workshop (KDD'94), </booktitle> <pages> pages 181 - 192, </pages> <address> Seattle, Washington, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: Next we describe how the number of occurrences of a given episode in a sequence is defined. Given an 3 TASA also searches for association rules between alarm predicates that are satisfied in one alarm. See <ref> [10] </ref> for the algorithm. C D E partial order alarm sequence S and a width W for a time window, we form all subsequences of S consisting of alarms happening within an interval of W time units. <p> The algorithm is presented in more detail in [11] for a slightly simpler setting. Related ideas have been expressed in <ref> [1, 2, 10] </ref>, where the idea of obtaining all rules is pursued. The pattern extraction task in the TASA system can be formalized as follows.
Reference: [11] <author> Heikki Mannila, Hannu Toivonen, and A. Inkeri Verkamo. </author> <title> Discovering frequent episodes in sequences. </title> <booktitle> In Proceedings of the First International Conference on Knowledge Discovery and Data Mining (KDD'95), </booktitle> <address> Montreal, Canada, </address> <month> August </month> <year> 1995. </year> <pages> 210 - 215. </pages>
Reference-contexts: The knowledge discovered in TASA is expressed in terms of rules. The system is based on a novel framework for locating frequently occurring episodes from sequential data. The algorithms we use are based on methods presented in <ref> [11] </ref>, and they have a completeness property: they find from the data all rules having certain properties. We use these algorithms to find effectively large sets of patterns from the data (typically thousands of rules). <p> The algorithm is presented in more detail in <ref> [11] </ref> for a slightly simpler setting. Related ideas have been expressed in [1, 2, 10], where the idea of obtaining all rules is pursued. The pattern extraction task in the TASA system can be formalized as follows. <p> Given S, E, E , W , and c as above, find the frequencies of all episodes from E such that the frequency is at least c. The following algorithm will output all such episodes <ref> [11] </ref>. 1. <p> If an episode does not occur often enough, then its superepisodes | which are more specific | cannot occur often enough. Therefore, the candidate collection C i of episodes is built (step 5) to contain only episodes whose all subepisodes occur often enough. See <ref> [11] </ref> for more details. Characteristics of experiments on a real sequence of 73679 alarms of 287 types, covering a time period of 50 days, are presented in Tables 1 and 2. By jL i j we denote the total number of frequent episodes. <p> The experiments have been run on a PC with 90 MHz Pentium processor and 16 MB main memory, under the Linux operating system. The alarm data resided in a flat text file. For more experimental results, see <ref> [11] </ref>. 5.2 Finding rules from episodes Once we know how often each episode from a class of episodes occurs in an alarm sequence, finding the confidences of rules is easy.
Reference: [12] <author> Christopher J. Matheus, Gregory Piatetsky-Shapiro, and Dwight McNeill. </author> <title> Selecting and reporting what is interesting: An application of KEFIR to healthcare data. </title> <editor> In Usama M. Fayyad, Gregory Piatetsky-Shapiro, Padhraic Smyth, and Ramasamy Uthurusamy, editors, </editor> <booktitle> Advances in Knowledge Discovery and Data Mining. </booktitle> <publisher> AAAI Press, </publisher> <address> Menlo Park, CA, </address> <year> 1996. </year> <note> To appear. </note>
Reference-contexts: They want to see the discovered knowledge, but they also want to be able to see how that knowledge is actually supported by the original data. For the user interface system we have adopted the method used by Matheus et al. <ref> [12] </ref>: the output produced by the TASA system is in the form of HTML documents. This gives several immediate benefits, both in terms of added functionality and in terms of easy implementation.
Reference: [13] <editor> Gregory Piatetsky-Shapiro and William J. Fraw-ley, editors. </editor> <title> Knowledge Discovery in Databases. </title> <publisher> AAAI Press, </publisher> <address> Menlo Park, CA, </address> <year> 1991. </year>
Reference-contexts: 1 Introduction Knowledge discovery in databases (KDD) has recently attracted a lot of interest from researchers and users of database systems; see <ref> [5, 13] </ref> for overviews. KDD combines methods and tools from machine learning, statistics, and databases. It can be loosely defined as the task of obtaining useful and interesting knowledge from large collections of data. KDD is an iterative and interactive process [3, 4].
Reference: [14] <author> Gregory Piatetsky-Shapiro and Christopher J. Matheus. </author> <title> The interestingness of deviations. </title> <editor> In Usama M. Fayyad and Ramasamy Uthurusamy, editors, </editor> <booktitle> Knowledge Discovery in Databases, Papers from the 1994 AAAI Workshop (KDD'94), </booktitle> <pages> pages 25 - 36, </pages> <address> Seattle, Washington, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: The aim of knowledge discovery in databases is to extract interesting knowledge from large collections of data. What is interesting varies from one situation to another. The interestingness criteria are in many KDD systems given as inputs to the pattern extraction process <ref> [9, 14] </ref>. If the users change their views, the data has to be analyzed anew. This can in the worst case require a lot of computational effort, and it can cause delays in the KDD process. <p> Such histograms are valuable guides for locating possible periodic relationships between the left and right-hand sides, as is demonstrated by Figure 6. For the user interface system we have adopted the method used in <ref> [14] </ref>: we have based the implementation of the rule browsing system on the use of the HTML language and the browsers for HTML documents. This gives several immediate benefits, both in terms of added functionality and in terms of easy implementation.
Reference: [15] <author> Martin A. Tanner. </author> <title> Tools for Statistical Inference | Methods for the Exploration of Posterior Distributions and Likelihood Functions. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1993. </year>
Reference-contexts: Therefore the hazard rate based methods of analysis of failure-time data for the data can be used [7]. Combined with the Bayesian paradigm, the statistical machinery for these types of models is very powerful, and elaborate simulation mechanisms exist for their analysis (e.g., the EM and Gibbs methods, see <ref> [15] </ref>). We are, in fact, applying such techniques for small subproblems of the alarm analysis problem. However, these methods require a lot of human effort in the building of the statistical models, as well as enormous amounts of computational resources.
Reference: [16] <author> Hannu Toivonen, Mika Klemettinen, Pirjo Ron-kainen, Kimmo Hatonen, and Heikki Mannila. </author> <title> Pruning and grouping of discovered association rules. </title> <booktitle> In Workshop Notes of the ECML-95 Workshop on Statistics, Machine Learning, and Knowledge Discovery in Databases, </booktitle> <pages> pages 47 - 52, </pages> <address> Heraklion, Crete, Greece, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: The behavior of the alarm sequence can be better understood by clustering rules so that two rules with right-hand side B belong to the same cluster if they often explain B in the same situations <ref> [16] </ref>. 6.2 User interface issues The view of KDD as a process shows immediately the importance of the user interface of the KDD system. Any realistic KDD system produces a lot of information. This wealth of information has to be presented to the users in an accessible form.
References-found: 16

