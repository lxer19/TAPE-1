URL: http://vibes.cs.uiuc.edu/Publications/Papers/SIAM97.ps.gz
Refering-URL: http://vibes.cs.uiuc.edu/Publications/publications.htm
Root-URL: http://www.cs.uiuc.edu
Title: Performance Modeling of a Parallel I/O System: An Application Driven Approach  
Author: Evgenia Smirni Christopher L. Elford Daniel A. Reed Andrew A. Chien 
Abstract: The broadening disparity between the performance of I/O devices and the performance of processors and communication links on parallel platforms is a major obstacle to achieving high performance in many parallel application domains. We believe that understanding the interactions among application I/O access patterns, parallel file systems, and I/O hardware configurations is a prerequisite to identifying levels of I/O parallelism (i.e., the number of disks across which files should be distributed) that maximize application performance. To validate this conjecture, we constructed a series of I/O benchmarks that encapsulate the behavior of a class of I/O intensive access patterns. Performance measurements on the Intel Paragon XP/S demonstrated that the ideal distribution of data across storage devices is a strong function of the I/O access pattern. Based on this experience, we propose a simple, product form queuing network model that effectively predicts the performance of both I/O benchmarks and I/O intensive scientific applications as a function of I/O hardware configuration.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Chen, P. M., and Patterson, D. A. </author> <title> Maximizing Performance in a Striped Disk Array. </title> <booktitle> In Proceedings of the 17th Annual International Symposium on Computer Architecture (1990), </booktitle> <pages> pp. 322-331. </pages>
Reference-contexts: The goal of this paper is creation of such a model for parallel I/O. Modeling disk arrays and parallel I/O systems has been an active research area for several years. Approximate analytical models of disk arrays <ref> [1, 2] </ref> using synthetic workloads assist the development of simple rules for preferred striping configuration in disk arrays. Our work complements these efforts by capturing the interaction of I/O requirements of scientific applications with both file system software and hardware.
Reference: [2] <author> Lee, E., and Katz, R. </author> <title> An Analytic Performance Model of Disk Arrays. </title> <booktitle> In ACM SIGMETRICS (May 1993), </booktitle> <pages> pp. 98-109. </pages> <address> 8 Fig. </address> <month> 6. </month> <title> QCRD phase two seek durations (in seconds) for 1, 16, and 80 disks. Fig. 7. Model prediction for QCRD. </title>
Reference-contexts: The goal of this paper is creation of such a model for parallel I/O. Modeling disk arrays and parallel I/O systems has been an active research area for several years. Approximate analytical models of disk arrays <ref> [1, 2] </ref> using synthetic workloads assist the development of simple rules for preferred striping configuration in disk arrays. Our work complements these efforts by capturing the interaction of I/O requirements of scientific applications with both file system software and hardware.
Reference: [3] <author> Reed, D. A., Elford, C. L., Madhyastha, T., Scullin, W. H., Aydt, R. A., and Smirni, E. </author> <title> I/O, Performance Analysis, and Performance Data Immersion. </title> <booktitle> In MASCOTS '96 (Feb. </booktitle> <year> 1996), </year> <pages> pp. 1-12. </pages>
Reference-contexts: Below, we characterize the I/O performance of QCRD, one application from the SIO code suite, using an extended version of the Pablo performance analysis environment <ref> [3] </ref>. The QCRD application [5] uses the method of symmetrical hyperspherical coordinates and local hyperspherical surface functions to solve the Schrodinger equation for the differential and integral cross-section of the scattering of an atom by a diatomic molecule.
Reference: [4] <author> Smirni, E., Aydt, R. A., Chien, A. A., and Reed, D. A. </author> <title> I/O Requirements of Scientific Applications: An Evolutionary View. </title> <booktitle> In High Performance Distributed Computing (1996). </booktitle>
Reference-contexts: Microbenchmark execution times. system bottlenecks and to reflect the I/O behavior of actual applications. As we noted earlier, application developers tend to use the UNIX I/O API because it is portable and because it is most familiar. Unfortunately, this does not exploit all available parallel file system features <ref> [4] </ref>. However, given the frequent use of the UNIX I/O API, we focus on modeling the Intel Paragon XP/S PFS performance characteristics using the default UNIX file access mode and the default 64 KB PFS stripe size.
Reference: [5] <author> Wu, Y.-S. M., Cuccaro, S. A., Hipes, P. G., and Kuppermann, A. </author> <title> Quantum Chemical Reaction Dynamics on a Highly Parallel Supercomputer. </title> <journal> Theoretica Chimica Acta 79 (1991), </journal> <pages> 225-239. </pages>
Reference-contexts: Below, we characterize the I/O performance of QCRD, one application from the SIO code suite, using an extended version of the Pablo performance analysis environment [3]. The QCRD application <ref> [5] </ref> uses the method of symmetrical hyperspherical coordinates and local hyperspherical surface functions to solve the Schrodinger equation for the differential and integral cross-section of the scattering of an atom by a diatomic molecule.
References-found: 5

