URL: http://www.math.tau.ac.il/~mansour/papers/96podc.ps.gz
Refering-URL: 
Root-URL: 
Title: Randomness in Private Computations  
Author: Eyal Kushilevitz Yishay Mansour 
Abstract: We consider the amount of randomness used in private distributed computations. Specifically, we show how n players can compute the exclusive-or (xor) of n boolean inputs t-privately, using only O(t 2 log(n=t)) random bits (the best known upper bound is O(tn)). We accompany this result by a lower bound on the number of random bits required to carry out this task; we show that any protocol solving this problem requires at least t random bits (again, this significantly improves over the known lower bounds). For the upper bound, we show how, given m subsets of f1; : : : ; ng, to construct in (deterministic) polynomial time a probability distribution of n random variables such that (1) the parity of random-variables in each of these m subsets is 0 or 1 with equal probability; and (2) the support of the distribution is of size at most 2m. This construction generalizes previously considered types of sample spaces (such as k-wise independent spaces and Schulman's spaces [S92]). We believe that this construction is of independent interest and may have various applications. 
Abstract-found: 1
Intro-found: 1
Reference: [AGHP90] <author> N. Alon, O. Goldreich, J. Hastad, and R. Per-alta, </author> <title> "Simple Constructions of Almost k-wise Independent Random Variables", </title> <booktitle> Proc. of 31st FOCS, </booktitle> <year> 1990, </year> <pages> pp. 544-553. </pages>
Reference-contexts: These methods range over pseudo-random generators [Y82, BM84, N90], techniques for re-cycling random bits [IZ89, CW89], sources of weak randomness [CG85, VV85, Z91], and construction of various kinds of small probability spaces <ref> [NN90, AGHP90, S92, KM93, KM94b, KK94] </ref>. A particular goal was to allow derandomization; i.e., to completely eliminate the use of randomness. For some problems, the best known deterministic algorithms are randomized algorithm which are latter derandomized (see, e.g., [KM94a]). We consider the role of randomness in t-private protocols. <p> In such applications, we cannot completely eliminate the use of randomness while maintaining the secrecy so we are just interested in reducing the number of random bits used. For such applications, other constructions such as *-bias (uniform) sample spaces <ref> [NN90, AGHP90] </ref> are not useful, as they only guarantee that parities are "almost" balanced. In cryptographic settings this could mean information leakage.
Reference: [AS92] <author> N. Alon, and J. Spencer, </author> <title> "The Probabilistic Method", </title> <publisher> John Wiley & Sons, </publisher> <year> 1992. </year>
Reference: [BB89] <author> J. Bar-Ilan, and D. Beaver, </author> <title> "Non-Cryptographic Fault-Tolerant Computing in a Constant Number of Rounds", </title> <booktitle> Proc. of 8th PODC, </booktitle> <year> 1989, </year> <pages> pp. 201-209. </pages>
Reference-contexts: The study of private computations in this setting was initiated by [BGW88, CCD88] and was the subject of a considerable amount of work, e.g., <ref> [BB89, CK89, K89, B89, FY92, CK92, CGK90, CGK92, KMO94, KOR96] </ref>. 1 The use of randomness is a crucial ingredient in private protocols; without randomness only degenerate functions can be computed privately. 1 This setting is different than the one studied in [Y86, GMW87] in which the computational power of the players
Reference: [B89] <author> D. Beaver, </author> <title> "Perfect Privacy for Two-Party Protocols", </title> <publisher> TR-11-89, Harvard University, </publisher> <year> 1989. </year>
Reference-contexts: The study of private computations in this setting was initiated by [BGW88, CCD88] and was the subject of a considerable amount of work, e.g., <ref> [BB89, CK89, K89, B89, FY92, CK92, CGK90, CGK92, KMO94, KOR96] </ref>. 1 The use of randomness is a crucial ingredient in private protocols; without randomness only degenerate functions can be computed privately. 1 This setting is different than the one studied in [Y86, GMW87] in which the computational power of the players
Reference: [BGG90] <author> M. Bellare, O. Goldreich, and S. Goldwasser, </author> <title> "Randomness in Interactive Proofs", </title> <booktitle> Proc. of 31st FOCS, </booktitle> <year> 1990, </year> <pages> pp. 563-571. </pages>
Reference-contexts: Furthermore, randomization is used to construct both more efficient and, not less significant, much simpler algorithms. Randomness as a resource was extensively studied in the last decade. One line of research was devoted to a quantitative study of the role of randomness in specific contexts, e.g., <ref> [RS89, KPU88, BGG90, CG90, BGS94, BSV94, KR94] </ref>; another direction was developing general-purpose methods for saving random bits.
Reference: [BGW88] <author> M. Ben-or, S. Goldwasser, and A. Wigder-son, </author> <title> "Completeness Theorems for Non-Cryptographic Fault-Tolerant Distributed Computation", </title> <booktitle> Proc. of 20th STOC, </booktitle> <year> 1988, </year> <pages> pp. 1-10. </pages>
Reference-contexts: The players are assumed to be honest but curious; namely, they all follow the prescribed protocol P but they could try to get additional information from the messages they receive during the execution of the protocol. The study of private computations in this setting was initiated by <ref> [BGW88, CCD88] </ref> and was the subject of a considerable amount of work, e.g., [BB89, CK89, K89, B89, FY92, CK92, CGK90, CGK92, KMO94, KOR96]. 1 The use of randomness is a crucial ingredient in private protocols; without randomness only degenerate functions can be computed privately. 1 This setting is different than the <p> The randomness complexity is the worst case (over all inputs and all executions) number of random bits. Next, we define the notion of privacy (we follow, e.g., <ref> [BGW88, CK89] </ref>). For a set of players T (sometimes called a coalition), denote by C T the communication seen by the players in T (i.e., all message they receive during the execution of the protocol).
Reference: [BM84] <author> M. Blum, and S. </author> <title> Micali "How to Generate Cryptographically Strong Sequences Of Pseudo-Random Bits", </title> <journal> FOCS 82 and SIAM J. on Computing, </journal> <volume> Vol 13, </volume> <year> 1984, </year> <pages> pp. 850-864. </pages>
Reference-contexts: One line of research was devoted to a quantitative study of the role of randomness in specific contexts, e.g., [RS89, KPU88, BGG90, CG90, BGS94, BSV94, KR94]; another direction was developing general-purpose methods for saving random bits. These methods range over pseudo-random generators <ref> [Y82, BM84, N90] </ref>, techniques for re-cycling random bits [IZ89, CW89], sources of weak randomness [CG85, VV85, Z91], and construction of various kinds of small probability spaces [NN90, AGHP90, S92, KM93, KM94b, KK94]. A particular goal was to allow derandomization; i.e., to completely eliminate the use of randomness.
Reference: [BGS94] <author> C. Blundo, A. Giorgio Gaggia, and D. R. Stin-son, </author> <title> "On the Dealer's Randomness Required in Secret Sharing Schemes", </title> <booktitle> Proc. of EuroCrypt94. </booktitle>
Reference-contexts: Furthermore, randomization is used to construct both more efficient and, not less significant, much simpler algorithms. Randomness as a resource was extensively studied in the last decade. One line of research was devoted to a quantitative study of the role of randomness in specific contexts, e.g., <ref> [RS89, KPU88, BGG90, CG90, BGS94, BSV94, KR94] </ref>; another direction was developing general-purpose methods for saving random bits.
Reference: [BSV94] <author> C. Blundo, A. De-Santis, and U. Vaccaro, </author> <title> "Randomness in Distribution Protocols", </title> <booktitle> Proc. of 21st ICALP, </booktitle> <year> 1994. </year>
Reference-contexts: Furthermore, randomization is used to construct both more efficient and, not less significant, much simpler algorithms. Randomness as a resource was extensively studied in the last decade. One line of research was devoted to a quantitative study of the role of randomness in specific contexts, e.g., <ref> [RS89, KPU88, BGG90, CG90, BGS94, BSV94, KR94] </ref>; another direction was developing general-purpose methods for saving random bits.
Reference: [BDPV95] <author> C. Blundo, A. De-Santis, G. Persiano, and U. Vaccaro, </author> <title> "On the Number of Random Bits in Totally Private Computations", </title> <booktitle> Proc. of 22nd ICALP, </booktitle> <year> 1995. </year>
Reference-contexts: As a result (and due to its relative simplicity), the task of computing xor t-privately was the subject of previous research <ref> [FY92, CK92, KR94, BDPV95] </ref>. We investigate the amount of randomness required to compute the exclusive-or of n input bits t-privately. The known upper bound uses O (tn) random bits. <p> The known upper bound uses O (tn) random bits. Better upper bounds were known only for the case t = 1 (see [KR94]), in which a single random bit is sufficient. As for lower bounds, Blundo et. al. <ref> [BDPV95] </ref> proved that if t n c (for some constant c) then (n 2 ) random bits are required and if t (2 p then (n) bits are required. For smaller values of t it was only known that no deterministic protocol for this task exists.
Reference: [CG90] <author> R. Canetti, and O. Goldreich, </author> <title> "Bounds on Tradeoffs between Randomness and Communication Complexity", </title> <booktitle> FOCS 90 and Computational Complexity Vol. </booktitle> <volume> 3, </volume> <year> (1993), </year> <pages> 141-167. </pages>
Reference-contexts: Furthermore, randomization is used to construct both more efficient and, not less significant, much simpler algorithms. Randomness as a resource was extensively studied in the last decade. One line of research was devoted to a quantitative study of the role of randomness in specific contexts, e.g., <ref> [RS89, KPU88, BGG90, CG90, BGS94, BSV94, KR94] </ref>; another direction was developing general-purpose methods for saving random bits.
Reference: [CCD88] <author> D. Chaum, C. Crepeau, and I. Damgard, </author> <title> "Mul-tiparty Unconditionally Secure Protocols", </title> <booktitle> Proc. of 20th STOC, </booktitle> <year> 1988, </year> <pages> pp. 11-19. </pages>
Reference-contexts: The players are assumed to be honest but curious; namely, they all follow the prescribed protocol P but they could try to get additional information from the messages they receive during the execution of the protocol. The study of private computations in this setting was initiated by <ref> [BGW88, CCD88] </ref> and was the subject of a considerable amount of work, e.g., [BB89, CK89, K89, B89, FY92, CK92, CGK90, CGK92, KMO94, KOR96]. 1 The use of randomness is a crucial ingredient in private protocols; without randomness only degenerate functions can be computed privately. 1 This setting is different than the
Reference: [CK89] <author> B. Chor, and E. Kushilevitz, </author> <title> "A Zero-One Law for Boolean Privacy", </title> <journal> STOC 89 and SIAM J. Disc. Math. </journal> <volume> Vol. 4, </volume> <year> (1991), </year> <pages> 36-47. </pages>
Reference-contexts: The study of private computations in this setting was initiated by [BGW88, CCD88] and was the subject of a considerable amount of work, e.g., <ref> [BB89, CK89, K89, B89, FY92, CK92, CGK90, CGK92, KMO94, KOR96] </ref>. 1 The use of randomness is a crucial ingredient in private protocols; without randomness only degenerate functions can be computed privately. 1 This setting is different than the one studied in [Y86, GMW87] in which the computational power of the players <p> The randomness complexity is the worst case (over all inputs and all executions) number of random bits. Next, we define the notion of privacy (we follow, e.g., <ref> [BGW88, CK89] </ref>). For a set of players T (sometimes called a coalition), denote by C T the communication seen by the players in T (i.e., all message they receive during the execution of the protocol).
Reference: [CK92] <author> B. Chor, and E. Kushilevitz, </author> <title> "A Communication-Privacy Tradeoff for Modular Addition", </title> <journal> Information Processing Letters, </journal> <volume> Vol. 45, </volume> <year> 1993, </year> <pages> pp. 205-210. </pages>
Reference-contexts: The study of private computations in this setting was initiated by [BGW88, CCD88] and was the subject of a considerable amount of work, e.g., <ref> [BB89, CK89, K89, B89, FY92, CK92, CGK90, CGK92, KMO94, KOR96] </ref>. 1 The use of randomness is a crucial ingredient in private protocols; without randomness only degenerate functions can be computed privately. 1 This setting is different than the one studied in [Y86, GMW87] in which the computational power of the players <p> As a result (and due to its relative simplicity), the task of computing xor t-privately was the subject of previous research <ref> [FY92, CK92, KR94, BDPV95] </ref>. We investigate the amount of randomness required to compute the exclusive-or of n input bits t-privately. The known upper bound uses O (tn) random bits.
Reference: [CGK90] <author> B. Chor, M. Gereb-Graus, and E. Kushilevitz, </author> <title> "Private Computations over the Integers", </title> <journal> FOCS 90 and SIAM Jour. on Computing, </journal> <volume> Vol. 24, No. 2, </volume> <month> April </month> <year> 1995, </year> <pages> pp. 376-386. </pages>
Reference-contexts: The study of private computations in this setting was initiated by [BGW88, CCD88] and was the subject of a considerable amount of work, e.g., <ref> [BB89, CK89, K89, B89, FY92, CK92, CGK90, CGK92, KMO94, KOR96] </ref>. 1 The use of randomness is a crucial ingredient in private protocols; without randomness only degenerate functions can be computed privately. 1 This setting is different than the one studied in [Y86, GMW87] in which the computational power of the players
Reference: [CGK92] <author> B. Chor, M. Gereb-Graus, and E. Kushilevitz, </author> <title> "On the Structure of the Privacy Hierarchy", </title> <journal> Journal of Cryptology, </journal> <volume> Vol. 7, No. 1, </volume> <year> 1994, </year> <pages> pp. 53-60. </pages>
Reference-contexts: The study of private computations in this setting was initiated by [BGW88, CCD88] and was the subject of a considerable amount of work, e.g., <ref> [BB89, CK89, K89, B89, FY92, CK92, CGK90, CGK92, KMO94, KOR96] </ref>. 1 The use of randomness is a crucial ingredient in private protocols; without randomness only degenerate functions can be computed privately. 1 This setting is different than the one studied in [Y86, GMW87] in which the computational power of the players
Reference: [CG85] <author> B. Chor, and O. Goldreich, </author> <title> "Unbiased Bits from Sources of Weak Randomness and Probabilistic Communication Complexity", </title> <journal> FOCS 85 and SIAM J. Computing Vol. </journal> <volume> 17, </volume> <year> (1988), </year> <pages> 230-261. </pages>
Reference-contexts: These methods range over pseudo-random generators [Y82, BM84, N90], techniques for re-cycling random bits [IZ89, CW89], sources of weak randomness <ref> [CG85, VV85, Z91] </ref>, and construction of various kinds of small probability spaces [NN90, AGHP90, S92, KM93, KM94b, KK94]. A particular goal was to allow derandomization; i.e., to completely eliminate the use of randomness.
Reference: [CW89] <author> A. Cohen, and A. Wigderson, "Dispersers, </author> <title> Deterministic Amplification, and Weak Random Sources", </title> <booktitle> Proc. of 30th FOCS, </booktitle> <year> 1989, </year> <pages> pp. 14-19. </pages>
Reference-contexts: These methods range over pseudo-random generators [Y82, BM84, N90], techniques for re-cycling random bits <ref> [IZ89, CW89] </ref>, sources of weak randomness [CG85, VV85, Z91], and construction of various kinds of small probability spaces [NN90, AGHP90, S92, KM93, KM94b, KK94]. A particular goal was to allow derandomization; i.e., to completely eliminate the use of randomness.
Reference: [FY92] <author> M. Franklin, and M. Yung, </author> <title> "Communication Complexity of Secure Computation", </title> <booktitle> Proc. of 24th STOC, </booktitle> <year> 1992, </year> <pages> pp. 699-710. </pages>
Reference-contexts: The study of private computations in this setting was initiated by [BGW88, CCD88] and was the subject of a considerable amount of work, e.g., <ref> [BB89, CK89, K89, B89, FY92, CK92, CGK90, CGK92, KMO94, KOR96] </ref>. 1 The use of randomness is a crucial ingredient in private protocols; without randomness only degenerate functions can be computed privately. 1 This setting is different than the one studied in [Y86, GMW87] in which the computational power of the players <p> As a result (and due to its relative simplicity), the task of computing xor t-privately was the subject of previous research <ref> [FY92, CK92, KR94, BDPV95] </ref>. We investigate the amount of randomness required to compute the exclusive-or of n input bits t-privately. The known upper bound uses O (tn) random bits.
Reference: [GMW87] <author> O. Goldreich, S. Micali, and A. Wigderson, </author> <title> "How to Play Any Mental Game", </title> <booktitle> Proc. of 19th STOC, </booktitle> <year> 1987, </year> <pages> pp. 218-229. </pages>
Reference-contexts: the subject of a considerable amount of work, e.g., [BB89, CK89, K89, B89, FY92, CK92, CGK90, CGK92, KMO94, KOR96]. 1 The use of randomness is a crucial ingredient in private protocols; without randomness only degenerate functions can be computed privately. 1 This setting is different than the one studied in <ref> [Y86, GMW87] </ref> in which the computational power of the players is restricted and hence intractability assumptions can be used. 1 The xor (exclusive-or) function (and more gen-erally, modular sum function) is a basic building block in all private-protocols.
Reference: [IZ89] <author> R. Impagliazzo, and D. Zuckerman, </author> <title> "How to Recycle Random Bits", </title> <booktitle> Proc. of 30th FOCS, </booktitle> <year> 1989, </year> <pages> pp. 248-253. </pages>
Reference-contexts: These methods range over pseudo-random generators [Y82, BM84, N90], techniques for re-cycling random bits <ref> [IZ89, CW89] </ref>, sources of weak randomness [CG85, VV85, Z91], and construction of various kinds of small probability spaces [NN90, AGHP90, S92, KM93, KM94b, KK94]. A particular goal was to allow derandomization; i.e., to completely eliminate the use of randomness.
Reference: [KK94] <author> D. Karger, and D. Koller, </author> <title> "(De)randomized Construction of Small Sample Spaces in N C", </title> <booktitle> Proc. of 35th FOCS, </booktitle> <year> 1994, </year> <pages> pp. 252-263. </pages>
Reference-contexts: These methods range over pseudo-random generators [Y82, BM84, N90], techniques for re-cycling random bits [IZ89, CW89], sources of weak randomness [CG85, VV85, Z91], and construction of various kinds of small probability spaces <ref> [NN90, AGHP90, S92, KM93, KM94b, KK94] </ref>. A particular goal was to allow derandomization; i.e., to completely eliminate the use of randomness. For some problems, the best known deterministic algorithms are randomized algorithm which are latter derandomized (see, e.g., [KM94a]). We consider the role of randomness in t-private protocols. <p> This is a uniform space 3 whose size is linear in m (2m vectors). We also show how to find such spaces in parallel (in N C). Relation to Other Work The abovementioned result of [S92] was generalized in various ways <ref> [KM93, KM94b, KK94] </ref>. In particular, 2 Schulman [S92] initiated the study of sample spaces that satisfy a list of specific independence constraints. <p> Karger and Koller <ref> [KK94] </ref>, presented a construction that can handle parity requirements as in our work. <p> However, there is a significant difference between their construction (as well as those in [KM93, KM94b]) and the construction presented in this paper: our construction builds a uniform sample space while the constructions of <ref> [KM93, KM94b, KK94] </ref> build a nonuniform sample spaces (i.e., each s 2 S is selected with a different probability p s ). While non-uniformity does not matter if the goal is derandomization, it has many disadvantages if we have other applications in mind.
Reference: [KM94a] <author> D. Karger, and R. Motwani, </author> <title> "Derandomization through Approximation: An N C Algorithm for Minimum Cuts", </title> <booktitle> Proc. of 26th STOC, </booktitle> <year> 1994, </year> <pages> pp. 497-506. </pages>
Reference-contexts: A particular goal was to allow derandomization; i.e., to completely eliminate the use of randomness. For some problems, the best known deterministic algorithms are randomized algorithm which are latter derandomized (see, e.g., <ref> [KM94a] </ref>). We consider the role of randomness in t-private protocols.
Reference: [KM94b] <author> H. Karloff, and Y. Mansour, </author> <title> "On Construction of k-wise Independent Random Variables", </title> <booktitle> Proc. of 26th STOC, </booktitle> <year> 1994, </year> <pages> pp. 564-573. </pages>
Reference-contexts: These methods range over pseudo-random generators [Y82, BM84, N90], techniques for re-cycling random bits [IZ89, CW89], sources of weak randomness [CG85, VV85, Z91], and construction of various kinds of small probability spaces <ref> [NN90, AGHP90, S92, KM93, KM94b, KK94] </ref>. A particular goal was to allow derandomization; i.e., to completely eliminate the use of randomness. For some problems, the best known deterministic algorithms are randomized algorithm which are latter derandomized (see, e.g., [KM94a]). We consider the role of randomness in t-private protocols. <p> This is a uniform space 3 whose size is linear in m (2m vectors). We also show how to find such spaces in parallel (in N C). Relation to Other Work The abovementioned result of [S92] was generalized in various ways <ref> [KM93, KM94b, KK94] </ref>. In particular, 2 Schulman [S92] initiated the study of sample spaces that satisfy a list of specific independence constraints. <p> Karger and Koller [KK94], presented a construction that can handle parity requirements as in our work. However, there is a significant difference between their construction (as well as those in <ref> [KM93, KM94b] </ref>) and the construction presented in this paper: our construction builds a uniform sample space while the constructions of [KM93, KM94b, KK94] build a nonuniform sample spaces (i.e., each s 2 S is selected with a different probability p s ). <p> However, there is a significant difference between their construction (as well as those in [KM93, KM94b]) and the construction presented in this paper: our construction builds a uniform sample space while the constructions of <ref> [KM93, KM94b, KK94] </ref> build a nonuniform sample spaces (i.e., each s 2 S is selected with a different probability p s ). While non-uniformity does not matter if the goal is derandomization, it has many disadvantages if we have other applications in mind.
Reference: [KY76] <author> D. E. Knuth, and A. C. Yao, </author> <title> "The Complexity of Non-Uniform Random Number Generation", </title> <booktitle> Algorithms and Complexity, </booktitle> <pages> pp. 357-428, </pages> <editor> ed. J. Traub, </editor> <publisher> Academic Press, </publisher> <year> 1976. </year>
Reference-contexts: for saving random bits (the goal of the current paper): for sampling in a uniform space dlog 2 jSje random bits are enough, while for sampling in a non-uniform space we may need much more, and in some cases will not be able to create exactly the same distribution (see <ref> [KY76] </ref>). Sampling is needed if, for example, we do not want to pay the jSj penalty in the running-time involved with derandomizing an algorithm but just want to run the algorithm once. In such a case a nonuniform space does not necessarily reduce the number of random bits required.
Reference: [KM93] <author> D. Koller, and N. Megiddo, </author> <title> "Constructing Small Sample Spaces Satisfying Given Constraints", </title> <booktitle> Proc. of 25th STOC, </booktitle> <year> 1993, </year> <pages> pp. 268-277. </pages>
Reference-contexts: These methods range over pseudo-random generators [Y82, BM84, N90], techniques for re-cycling random bits [IZ89, CW89], sources of weak randomness [CG85, VV85, Z91], and construction of various kinds of small probability spaces <ref> [NN90, AGHP90, S92, KM93, KM94b, KK94] </ref>. A particular goal was to allow derandomization; i.e., to completely eliminate the use of randomness. For some problems, the best known deterministic algorithms are randomized algorithm which are latter derandomized (see, e.g., [KM94a]). We consider the role of randomness in t-private protocols. <p> This is a uniform space 3 whose size is linear in m (2m vectors). We also show how to find such spaces in parallel (in N C). Relation to Other Work The abovementioned result of [S92] was generalized in various ways <ref> [KM93, KM94b, KK94] </ref>. In particular, 2 Schulman [S92] initiated the study of sample spaces that satisfy a list of specific independence constraints. <p> Karger and Koller [KK94], presented a construction that can handle parity requirements as in our work. However, there is a significant difference between their construction (as well as those in <ref> [KM93, KM94b] </ref>) and the construction presented in this paper: our construction builds a uniform sample space while the constructions of [KM93, KM94b, KK94] build a nonuniform sample spaces (i.e., each s 2 S is selected with a different probability p s ). <p> However, there is a significant difference between their construction (as well as those in [KM93, KM94b]) and the construction presented in this paper: our construction builds a uniform sample space while the constructions of <ref> [KM93, KM94b, KK94] </ref> build a nonuniform sample spaces (i.e., each s 2 S is selected with a different probability p s ). While non-uniformity does not matter if the goal is derandomization, it has many disadvantages if we have other applications in mind.
Reference: [KMO94] <author> E. Kushilevitz, S. Micali, and R. Ostrovsky, </author> <title> "Reducibility and Completeness in Multi-Party Private Computations", </title> <booktitle> Proc. of 35th FOCS, </booktitle> <year> 1994, </year> <pages> pp. 478-489. </pages>
Reference-contexts: The study of private computations in this setting was initiated by [BGW88, CCD88] and was the subject of a considerable amount of work, e.g., <ref> [BB89, CK89, K89, B89, FY92, CK92, CGK90, CGK92, KMO94, KOR96] </ref>. 1 The use of randomness is a crucial ingredient in private protocols; without randomness only degenerate functions can be computed privately. 1 This setting is different than the one studied in [Y86, GMW87] in which the computational power of the players
Reference: [KOR96] <author> E. Kushilevitz, R. Ostrovsky, and A. Rosen, </author> <title> "Characterizing Linear Size Circuits in terms of Privacy", </title> <booktitle> Proc. of 28th STOC, </booktitle> <year> 1996. </year>
Reference-contexts: The study of private computations in this setting was initiated by [BGW88, CCD88] and was the subject of a considerable amount of work, e.g., <ref> [BB89, CK89, K89, B89, FY92, CK92, CGK90, CGK92, KMO94, KOR96] </ref>. 1 The use of randomness is a crucial ingredient in private protocols; without randomness only degenerate functions can be computed privately. 1 This setting is different than the one studied in [Y86, GMW87] in which the computational power of the players
Reference: [KPU88] <author> D. Krizanc, D. Peleg, and E. Upfal, </author> <title> "A Time--Randomness Tradeoff for Oblivious Routing", </title> <booktitle> Proc. of 20th STOC, </booktitle> <year> 1988, </year> <pages> pp. 93-102. </pages>
Reference-contexts: Furthermore, randomization is used to construct both more efficient and, not less significant, much simpler algorithms. Randomness as a resource was extensively studied in the last decade. One line of research was devoted to a quantitative study of the role of randomness in specific contexts, e.g., <ref> [RS89, KPU88, BGG90, CG90, BGS94, BSV94, KR94] </ref>; another direction was developing general-purpose methods for saving random bits.
Reference: [K89] <author> E. Kushilevitz, </author> <title> "Privacy and Communication Complexity", </title> <journal> FOCS 89, and SIAM Jour. on Disc. Math., </journal> <volume> Vol. 5, No. 2, </volume> <month> May </month> <year> 1992, </year> <pages> pp. 273-284. </pages>
Reference-contexts: The study of private computations in this setting was initiated by [BGW88, CCD88] and was the subject of a considerable amount of work, e.g., <ref> [BB89, CK89, K89, B89, FY92, CK92, CGK90, CGK92, KMO94, KOR96] </ref>. 1 The use of randomness is a crucial ingredient in private protocols; without randomness only degenerate functions can be computed privately. 1 This setting is different than the one studied in [Y86, GMW87] in which the computational power of the players
Reference: [KR94] <author> E. Kushilevitz, and A. Rosen, </author> <title> "A Randomness-Rounds Tradeoff in Private Computation", </title> <booktitle> Advances in Cryptology, Proceedings of Crypto '94, </booktitle> <editor> Y. Desmedt, ed., Springer-Verlag, </editor> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> Vol. 839, </volume> <pages> pp. 397-410, </pages> <year> 1994. </year>
Reference-contexts: Furthermore, randomization is used to construct both more efficient and, not less significant, much simpler algorithms. Randomness as a resource was extensively studied in the last decade. One line of research was devoted to a quantitative study of the role of randomness in specific contexts, e.g., <ref> [RS89, KPU88, BGG90, CG90, BGS94, BSV94, KR94] </ref>; another direction was developing general-purpose methods for saving random bits. <p> As a result (and due to its relative simplicity), the task of computing xor t-privately was the subject of previous research <ref> [FY92, CK92, KR94, BDPV95] </ref>. We investigate the amount of randomness required to compute the exclusive-or of n input bits t-privately. The known upper bound uses O (tn) random bits. <p> We investigate the amount of randomness required to compute the exclusive-or of n input bits t-privately. The known upper bound uses O (tn) random bits. Better upper bounds were known only for the case t = 1 (see <ref> [KR94] </ref>), in which a single random bit is sufficient. As for lower bounds, Blundo et. al. [BDPV95] proved that if t n c (for some constant c) then (n 2 ) random bits are required and if t (2 p then (n) bits are required. <p> Intuitively, in such a case, the protocol becomes deterministic. The impossibility result follows from the fact that there is no deterministic 1-private protocol for 3 or more parties (see <ref> [KR94] </ref>). To be more formal, consider the protocol for n (t 1) 3 players that is obtained by running P while giving each P i j input 0, and each P i (in this set and out of it) the corresponding coordinate of ~s. <p> We will construct a new protocol P 0 that computes xor for n s 3 players, P s+1 ; : : : ; P n , 1-privately and deterministically. It is well known that such a protocol does not exist (see <ref> [KR94] </ref>) and hence we will get the desired contradiction.
Reference: [NN90] <author> J. Naor, and M. Naor, </author> <title> "Small-Bias Probability Spaces: Efficient Constructions and Applications", </title> <journal> STOC 90, and SIAM J. on Computing, </journal> <volume> Vol 22, No. 4, </volume> <year> 1993, </year> <pages> pp. 838-856. </pages>
Reference-contexts: These methods range over pseudo-random generators [Y82, BM84, N90], techniques for re-cycling random bits [IZ89, CW89], sources of weak randomness [CG85, VV85, Z91], and construction of various kinds of small probability spaces <ref> [NN90, AGHP90, S92, KM93, KM94b, KK94] </ref>. A particular goal was to allow derandomization; i.e., to completely eliminate the use of randomness. For some problems, the best known deterministic algorithms are randomized algorithm which are latter derandomized (see, e.g., [KM94a]). We consider the role of randomness in t-private protocols. <p> In such applications, we cannot completely eliminate the use of randomness while maintaining the secrecy so we are just interested in reducing the number of random bits used. For such applications, other constructions such as *-bias (uniform) sample spaces <ref> [NN90, AGHP90] </ref> are not useful, as they only guarantee that parities are "almost" balanced. In cryptographic settings this could mean information leakage.
Reference: [N90] <author> N. Nisan, </author> <title> "Pseudorandom Generator for Space Bounded Computation", </title> <booktitle> Proc. of 22nd STOC, </booktitle> <year> 1990, </year> <pages> pp. 204-212. </pages>
Reference-contexts: One line of research was devoted to a quantitative study of the role of randomness in specific contexts, e.g., [RS89, KPU88, BGG90, CG90, BGS94, BSV94, KR94]; another direction was developing general-purpose methods for saving random bits. These methods range over pseudo-random generators <ref> [Y82, BM84, N90] </ref>, techniques for re-cycling random bits [IZ89, CW89], sources of weak randomness [CG85, VV85, Z91], and construction of various kinds of small probability spaces [NN90, AGHP90, S92, KM93, KM94b, KK94]. A particular goal was to allow derandomization; i.e., to completely eliminate the use of randomness.
Reference: [RS89] <author> P. Raghavan, and M. Snir, </author> <title> "Memory vs. Randomization in On-Line Algorithms", </title> <booktitle> Proc. of 16th ICALP, </booktitle> <year> 1989, </year> <pages> pp. 687-703. </pages>
Reference-contexts: Furthermore, randomization is used to construct both more efficient and, not less significant, much simpler algorithms. Randomness as a resource was extensively studied in the last decade. One line of research was devoted to a quantitative study of the role of randomness in specific contexts, e.g., <ref> [RS89, KPU88, BGG90, CG90, BGS94, BSV94, KR94] </ref>; another direction was developing general-purpose methods for saving random bits.
Reference: [S92] <author> L. J. Schulman, </author> <title> "Sample Spaces Uniform on Neighborhoods", </title> <booktitle> Proc. of 24th STOC, </booktitle> <year> 1992, </year> <pages> pp. 17-25. </pages>
Reference-contexts: These methods range over pseudo-random generators [Y82, BM84, N90], techniques for re-cycling random bits [IZ89, CW89], sources of weak randomness [CG85, VV85, Z91], and construction of various kinds of small probability spaces <ref> [NN90, AGHP90, S92, KM93, KM94b, KK94] </ref>. A particular goal was to allow derandomization; i.e., to completely eliminate the use of randomness. For some problems, the best known deterministic algorithms are randomized algorithm which are latter derandomized (see, e.g., [KM94a]). We consider the role of randomness in t-private protocols. <p> For our upper bound, we develop a new construction of small sample spaces that naturally generalizes k-wise independent sample spaces, and sample spaces of the type studied by Schulman <ref> [S92] </ref>. 2 More precisely, given subsets T 1 ; : : :; T m f1; : : :; ng we look for a small sample space in which the parity of the variables in every T j gets the values 0 and 1 with equal probability, i.e. 1=2. <p> This is a uniform space 3 whose size is linear in m (2m vectors). We also show how to find such spaces in parallel (in N C). Relation to Other Work The abovementioned result of <ref> [S92] </ref> was generalized in various ways [KM93, KM94b, KK94]. In particular, 2 Schulman [S92] initiated the study of sample spaces that satisfy a list of specific independence constraints. <p> This is a uniform space 3 whose size is linear in m (2m vectors). We also show how to find such spaces in parallel (in N C). Relation to Other Work The abovementioned result of <ref> [S92] </ref> was generalized in various ways [KM93, KM94b, KK94]. In particular, 2 Schulman [S92] initiated the study of sample spaces that satisfy a list of specific independence constraints. <p> To conclude, we have proved: Theorem 2: There exists an n-party, t-private protocol to compute xor using O (t 2 log (n=t)) random bits. Remark: Note that the size of the sets T i;j defined above may be very large (up to n 1), hence the sample spaces of <ref> [S92] </ref> are not enough. It should also be clear that just by using a t-wise independent sample space the protocol fails.
Reference: [VV85] <author> U. Vazirani, and V. Vazirani, </author> <title> "Random Polynomial Time is Equal to Slightly-Random Polynomial Time", </title> <booktitle> Proc. of 26th FOCS, </booktitle> <year> 1985, </year> <pages> pp. 417-428. </pages>
Reference-contexts: These methods range over pseudo-random generators [Y82, BM84, N90], techniques for re-cycling random bits [IZ89, CW89], sources of weak randomness <ref> [CG85, VV85, Z91] </ref>, and construction of various kinds of small probability spaces [NN90, AGHP90, S92, KM93, KM94b, KK94]. A particular goal was to allow derandomization; i.e., to completely eliminate the use of randomness.
Reference: [Y82] <author> A. C. Yao, </author> <title> "Theory and Applications of Trapdoor Functions", </title> <booktitle> Proc. of 23rd FOCS, </booktitle> <year> 1982, </year> <pages> pp. 80-91. </pages>
Reference-contexts: One line of research was devoted to a quantitative study of the role of randomness in specific contexts, e.g., [RS89, KPU88, BGG90, CG90, BGS94, BSV94, KR94]; another direction was developing general-purpose methods for saving random bits. These methods range over pseudo-random generators <ref> [Y82, BM84, N90] </ref>, techniques for re-cycling random bits [IZ89, CW89], sources of weak randomness [CG85, VV85, Z91], and construction of various kinds of small probability spaces [NN90, AGHP90, S92, KM93, KM94b, KK94]. A particular goal was to allow derandomization; i.e., to completely eliminate the use of randomness.
Reference: [Y86] <author> A. C. Yao, </author> <title> "How to Generate and Exchange Secrets", </title> <booktitle> Proc. of 27th FOCS, </booktitle> <year> 1986, </year> <pages> pp. 162-167. </pages>
Reference-contexts: the subject of a considerable amount of work, e.g., [BB89, CK89, K89, B89, FY92, CK92, CGK90, CGK92, KMO94, KOR96]. 1 The use of randomness is a crucial ingredient in private protocols; without randomness only degenerate functions can be computed privately. 1 This setting is different than the one studied in <ref> [Y86, GMW87] </ref> in which the computational power of the players is restricted and hence intractability assumptions can be used. 1 The xor (exclusive-or) function (and more gen-erally, modular sum function) is a basic building block in all private-protocols.
Reference: [Z91] <author> D. Zuckerman, </author> <title> "Simulating BPP Using a General Weak Random Source", </title> <booktitle> Proc. of 32nd FOCS, </booktitle> <year> 1991, </year> <pages> pp. 79-89. </pages>
Reference-contexts: These methods range over pseudo-random generators [Y82, BM84, N90], techniques for re-cycling random bits [IZ89, CW89], sources of weak randomness <ref> [CG85, VV85, Z91] </ref>, and construction of various kinds of small probability spaces [NN90, AGHP90, S92, KM93, KM94b, KK94]. A particular goal was to allow derandomization; i.e., to completely eliminate the use of randomness.
References-found: 39

