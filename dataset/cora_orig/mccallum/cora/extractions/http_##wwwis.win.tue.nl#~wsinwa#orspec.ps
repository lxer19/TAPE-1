URL: http://wwwis.win.tue.nl/~wsinwa/orspec.ps
Refering-URL: http://wwwis.win.tue.nl/~wsinwa/publications.html
Root-URL: http://www.win.tue.nl
Email: e-mail: wsinwa@win.tue.nl  
Phone: telephone: -31 40 2474295, fax: -31 40 2463992,  
Title: Petri net based scheduling  
Author: W.M.P. van der Aalst 
Keyword: Scheduling, Timed Petri nets, Analysis of Petri nets.  
Address: P.O. Box 513, 5600 MB, Eindhoven, The Netherlands,  
Affiliation: Department of Mathematics and Computing Science, Eindhoven University of Technology,  
Abstract: Timed Petri nets can be used to model and analyse scheduling problems. To support the modelling of scheduling problems, we provide a method to map tasks, resources and constraints onto a timed Petri net. By mapping scheduling problems onto Petri nets, we are able to use standard Petri net theory. In this paper we will show that we can use Petri net based tools and techniques to find conflicting and redundant precedences, upper- and lowerbounds for the makespan, etc. This is illustrated by a Petri net based analysis of the notorious 10 fi 10 problem due to Fisher & Thompson (1963). 
Abstract-found: 1
Intro-found: 1
Reference: <author> AALST, W.M.P. </author> <title> VAN DER (1992a), Modelling and Analysis of Complex Logistic Systems, </title> <editor> in: H.J. Pels and J.C. Wortmann (eds.), </editor> <booktitle> Integration in Production Management Systems, IFIP Transactions B-7, </booktitle> <publisher> Elsevier Science Publishers, Amsterdam, </publisher> <pages> 277-292. </pages>
Reference: <author> AALST, W.M.P. </author> <title> VAN DER (1992b), Timed coloured Petri nets and their application to logistics, </title> <type> Ph.D. thesis, </type> <institution> Eindhoven University of Technology, Eindhoven. </institution>
Reference-contexts: Since the classical Petri net is not easily capable of handling quantitative time, we add a timing concept. There are many ways to introduce time into the classical Petri net <ref> (Aalst, 1992b) </ref>. In this paper a timing mechanism is used where time is associated with tokens, and transitions determine delays (Aalst, 1993). 3 Each token has a timestamp which models the time the token becomes available for con-sumption. <p> By inspecting the terminal states of the reachability graph, we can deduce a lowerbound for the makespan of the scheduling problem. Although the size of the reachability graph is limited, it may be worthwhile to use the ATCFN analysis method <ref> (Aalst, 1992b) </ref> to find the same lowerbound. Result 6: We can also find a lowerbound for the makespan of a scheduling problem. It is also possible to use simulation to analyse the dynamic behaviour of a timed Petri net which models a scheduling problem. <p> We also used priority rules to obtain a smaller reachability graph. This resulted in smaller upper bounds. However, even the best priority rules we have tested result in schedules with a makespan of more than 1100. We used the ATCFN analysis method <ref> (Aalst, 1992b) </ref> to calculate a lower bound of 691 for the makespan of any feasible schedule. This takes about 14 seconds. We also tested an approach which adds extra precedence constraints. This approach resulted in a schedule with a makespan equal to 1023.
Reference: <author> AALST, W.M.P. </author> <title> VAN DER (1993), Interval Timed Coloured Petri Nets and their Analysis, </title> <editor> in: M. Ajmone Marsan (ed.), </editor> <booktitle> Application and Theory of Petri Nets 1993, Lecture Notes in Computer Science 691, </booktitle> <publisher> Springer-Verlag, Berlin, </publisher> <pages> 453-472. </pages>
Reference-contexts: There are many ways to introduce time into the classical Petri net (Aalst, 1992b). In this paper a timing mechanism is used where time is associated with tokens, and transitions determine delays <ref> (Aalst, 1993) </ref>. 3 Each token has a timestamp which models the time the token becomes available for con-sumption. Since these timestamps indicate when tokens become available, a transition becomes enabled the earliest moment for which each of its input places contains a token which is available.
Reference: <author> AALST, W.M.P. </author> <title> VAN DER (1994), Putting Petri nets to work in industry, </title> <booktitle> Computers in Industry 25, </booktitle> <pages> 45-54. </pages>
Reference-contexts: Each task requires a specific machine to be processed and the processing times are as indicated in Fisher & Thompson (1963). 19 Then, we map the scheduling problem onto a timed Petri net (see Definition 3). We have used the Petri net based tool ExSpect <ref> (Aalst, 1994) </ref> to construct this net automatically. The corresponding timed Petri net contains 400 places and 200 transitions. We will use IAT, one of the analysis tools of ExSpect (Aalst, 1992b; Aalst, 1994), to analyse the constructed timed Petri net.
Reference: <author> BAKER, K.R. </author> <year> (1974), </year> <title> Introduction to Sequencing and Scheduling, </title> <publisher> Wiley & Sons. </publisher>
Reference: <author> BERTHOMIEU, B. AND M. </author> <title> DIAZ (1991), Modelling and verification of time dependent systems using Time Petri Nets, </title> <journal> IEEE Transactions on Software Engineering 17, </journal> <pages> 259-273. </pages>
Reference: <author> CARLIER, J. AND P. </author> <month> CHRETIENNE </month> <year> (1988), </year> <title> Timed Petri net schedules, </title> <editor> in: G. Rozen-berg (ed.), </editor> <booktitle> Advances in Petri Nets 1988, Lecture Notes in Computer Science 340, </booktitle> <publisher> Springer-Verlag, Berlin, </publisher> <pages> 62-84. </pages>
Reference: <author> CARLIER, J., P. CHRETIENNE, AND C. </author> <title> GIRAULT (1984), Modelling scheduling problems with Timed Petri Nets, </title> <editor> in: G. Rozenberg (ed.), </editor> <booktitle> Advances in Petri Nets 1984, Lecture Notes in Computer Science 188, </booktitle> <publisher> Springer-Verlag, Berlin, </publisher> <pages> 62-82. </pages>
Reference: <author> CARLIER, J. AND E. </author> <title> PINSON (1989), An algorithm for solving the job-shop problem, </title> <booktitle> Management Science 35, </booktitle> <pages> 164-176. </pages>
Reference: <author> CHRETIENNE, P. </author> <year> (1983), </year> <title> Les reseaux de petri temporises, </title> <type> Ph.D. thesis, </type> <institution> Univ. Paris VI, Paris. </institution>
Reference: <author> FISHER, H. AND G.L. </author> <title> THOMPSON (1963), Probabilistic learning combinations of local job-shop scheduling rules, </title> <editor> in: J.F. Muth and G.L. Thompson (eds.), </editor> <title> Industrial Scheduling, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, 225-251. </address> <note> 21 FRENCH, </note> <author> S. </author> <year> (1982), </year> <title> Sequencing and Scheduling: An Introduction to the Mathematics of the Job-Shop, </title> <publisher> Wiley & Sons. </publisher>
Reference: <author> GAO, G.R., Y.B. WONG, AND Q. </author> <title> NING (1991), A timed Petri-net model for loop scheduling, </title> <booktitle> Proceedings of the 12th International Conference on Applications and Theory of Petri Nets, Gjern, </booktitle> <pages> 22-41. </pages>
Reference: <author> HAUPT, R. </author> <year> (1989), </year> <title> A survey of priority rule-based scheduling, OR Spectrum 11, </title> <type> 3-16. </type>
Reference-contexts: Finally, we can use heuristics to reduce the number of outgoing arcs, e.g. if we can allocate a resource to a large task or a small task, then we select the small task. Note that we can use the priority rules for rule based scheduling <ref> (Haupt, 1989) </ref>. Typical priority rules are: SPT (shortest processing time), MWKR (most work remaining), LWKR (least work remaining), DD (earliest due-date), etc. It is quite easy to extend the timed Petri net model defined in Section 2 with priorities, i.e. a priority is assigned to each transition.
Reference: <author> HILLION, </author> <title> H.P. AND J.P PROTH (1989), Performance Evaluation of Job-Shop Systems Using Timed Event Graphs, </title> <journal> IEEE Transactions on Automatic Control 34, </journal> <pages> 3-9. </pages>
Reference: <author> JENSEN, K. </author> <year> (1992), </year> <title> Coloured Petri Nets. Basic concepts, analysis methods and practical use., </title> <booktitle> EATCS monographs on Theoretical Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin. </address>
Reference: <author> JENSEN, K. AND G. ROZENBERG (eds.) </author> <year> (1991), </year> <title> High-level Petri Nets: Theory and Application, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin. </address>
Reference: <author> LAWLER, E.L., J.K. LENSTRA, A.H.G. RINNOOY KAN, </author> <title> AND D.B. SHMOYS (1993), Sequencing and scheduling: Algorithms and complexity, </title> <booktitle> in: </booktitle> <address> S.C. Graves, A.H.G. </address>
Reference-contexts: If start2 fires at time 0, alternative states are visited. However, both firing sequences result in the same terminal state. 5 3 The general scheduling problem Scheduling is concerned with the optimal allocation of scarce resources to tasks over time <ref> (Lawler, Lenstra, Rinnooy Kan & Shmoys, 1993) </ref>. Scheduling techniques are used to answer questions that arise in production planning, project planning, computer control, manpower planning, etc. Many techniques have been developed for a variety of problem types. To fix the terminology, we begin by defining the `general scheduling problem'.
Reference: <editor> Rinnooy Kan, and P. Zipkin (eds.), </editor> <booktitle> Handbooks in Operations Research and Management Science, Volume 4: Logistics of Production and Inventory, </booktitle> <publisher> North-Holland, Amsterdam. </publisher>
Reference: <author> MARSAN, M. AJMONE, G. BALBO, AND G. </author> <title> CONTE (1984), A Class of Generalised Stochastic Petri Nets for the Performance Evaluation of Multiprocessor Systems, </title> <journal> ACM Transactions on Computer Systems 2, </journal> <pages> 93-122. </pages>
Reference: <author> MARSAN, M. AJMONE, G. BALBO, AND G. </author> <title> CONTE (1986), Performance Models of Multiprocessor Systems, </title> <publisher> The MIT Press, </publisher> <address> Cambridge. </address>
Reference: <author> MARTINEZ, J. AND M. </author> <title> SILVA (1982), A simple and fast algorithm to obtain all invariants of a generalised Petri Net, </title> <editor> in: C. Girault and W. Reisig (eds.), </editor> <booktitle> Application and theory of Petri nets : selected papers from the first and the second European workshop, Informatik Fachberichte 52, </booktitle> <address> Berlin, </address> <publisher> Springer-Verlag, Berlin, </publisher> <pages> 301-310. </pages>
Reference: <author> MURATA, T. </author> <year> (1989), </year> <title> Petri Nets: Properties, Analysis and Applications, </title> <booktitle> Proceedings of the IEEE 77, </booktitle> <pages> 541-580. </pages>
Reference: <author> PETERS, N. </author> <year> (1994), </year> <title> Analysis of scheduling problems by means of INA/ExSpect, </title> <type> Master's thesis, </type> <institution> Eindhoven University of Technology, Eindhoven. </institution>
Reference: <author> PETRI, C.A. </author> <year> (1962), </year> <title> Kommunikation mit Automaten, </title> <type> Ph.D. thesis, </type> <institution> Institut fur instru-mentelle Mathematik, Bonn. </institution>
Reference: <author> PINEDO, M. </author> <year> (1995), </year> <title> Scheduling : theory, algorithms, and systems, </title> <publisher> Prentice-Hall, </publisher> <address> Engle-wood Cliffs. </address>
Reference-contexts: Carlier, Chretienne & Girault (1984, 1988, 1983), Gao, Wong & Ning (1991) and Watanabe & Yamauchi (1993) also focussed on minimal cycle times for repetitive scheduling problems. In this paper we focus on the traditional non-cyclic scheduling problems such as machine scheduling and job-shop scheduling <ref> (Pinedo, 1995) </ref>. We also use a different timed Petri net model. In our model time is associated with tokens instead of transitions. The remainder of this paper is organized as follows. Section 2 introduces a timed Petri net model. This Petri net model has been extended with a timing concept.
Reference: <author> RAMAMOORTHY, C.V. AND G.S. </author> <title> HO (1980), Performance Evaluation of Asynchronous Concurrent Systems Using Petri Nets, </title> <journal> IEEE Transactions on Software engineering 6, </journal> <pages> 440-449. </pages>
Reference: <author> REISIG, W. </author> <year> (1985), </year> <title> Petri nets: an introduction, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs. </address>
Reference: <author> STARKE, P.H. </author> <year> (1992), </year> <note> INA: Integrierter Netz Analysator, Handbuch. </note>
Reference-contexts: INA can be used to determine more than 40 different properties <ref> (Starke, 1992) </ref>. Note that we use standard Petri net tools without developing new analysis-software! 6 Extensions In Section 3 we defined what we mean by a scheduling problem. Although Definition 2 is quite general, we made a number of assumptions.
Reference: <author> WATANABE, T. </author> <title> AND M YAMAUCHI (1993), New priority-lists for scheduling in timed Petri nets, </title> <editor> in: M. Ajmone Marsan (ed.), </editor> <booktitle> Application and Theory of Petri Nets 1993, Lecture Notes in Computer Science 691, </booktitle> <publisher> Springer-Verlag, Berlin, </publisher> <pages> 493-512. 22 </pages>
References-found: 29

