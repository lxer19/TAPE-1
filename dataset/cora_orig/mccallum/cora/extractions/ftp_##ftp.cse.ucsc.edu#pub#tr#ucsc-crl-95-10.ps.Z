URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-95-10.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Title: Distributed Algorithms for Multicast Path Setup in Data Networks  
Author: Fred Bauer Anujan Varma 
Keyword: Multicasting, Steiner problem in networks, Distributed algorithms.  
Address: Santa Cruz, CA 95064  
Affiliation: Computer Engineering Department University of California  
Pubnum: UCSC-CRL-95-10  
Email: E-mail: ffred,varmag@cse.ucsc.edu  
Date: August 16, 1995  
Abstract: Establishing a multicast tree in a point-to-point network of switch nodes, such as a wide-area ATM network, can be modeled as the NP-complete Steiner problem in networks. In this paper, we introduce and evaluate two distributed algorithms for finding multicast trees in point-to-point data networks. These algorithms are based on the centralized Steiner heuristics, the shortest path heuristic (SPH) and the Kruskal-based shortest path heuristic (K-SPH), and have the advantage that only the multicast members and nodes in the neighborhood of the multicast tree need to participate in the execution of the algorithm. We compare our algorithms by simulation against a baseline algorithm, the pruned minimum spanning-tree heuristic, which is the basis of many previously published algorithms for finding multicast trees. Our results show that the competitiveness (the ratio of the sum of the heuristic tree's edge weights to that of the best solution found) of both of our algorithms was on the average 25 percent better in comparison to those produced by the pruned spanning-tree approach. In addition, the competitiveness of our algorithms was, in almost all cases, within 10 percent of the best solution found by any of the Steiner heuristics considered, including both centralized and distributed algorithms. Limiting the execution of the algorithm to a subset of the nodes in the network results in an increase in convergence time over the pruned spanning-tree approach, but this overhead can be reduced by careful implementation. This research is supported by the Advanced Research Projects Agency (ARPA) under Contract No. F19628-93-C-0175 and by the NSF Young Investigator Award No. MIP-9257103. This paper was presented in part at GLOBECOM '95, Singapore, November 1995. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. Bauer and A. Varma. </author> <title> "Degree-constrained multicasting in point-to-point networks," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <address> Boston, </address> <month> Apr. </month> <year> 1995, </year> <pages> pp. 369-376. </pages>
Reference-contexts: Some have been shown through analysis to produce solutions no worse than twice the optimal solution [20]. Empirical evidence from our previous papers indicate that these heuristics find solutions much better than twice the optimal with reasonable speed in most cases <ref> [1] </ref>. Most of the algorithms proposed in the literature for SPN are serial in nature. However, a few distributed heuristics exist [4, 12]. <p> In this paper, we present two distributed algorithms for the Steiner problem in networks. The algorithms are based on the shortest path heuristic (SPH) and the Kruskal-based shortest path heuristic (K-SPH), described in <ref> [1] </ref>. We analyze their message and convergence-time complexities and compare their simulation results against those from a pruned MST algorithm. We choose the distributed MST algorithm due to Gallager, Humblet, and Spira [6] as our baseline algorithm for comparison. <p> It must (i) use the existing routing information available at each node in the network, (ii) use minimal computational and network resources, (iii) require a minimum of coordination between neighbors, and (iv) limit itself to nodes directly involved in the multicast. Of the centralized heuristics evaluated in <ref> [1] </ref>, we chose the following four heuristics as candidates for distributed implementation: the shortest-path heuristic (SPH), a variant of SPH known as SPH-Z, the Kruskal-based shortest-path heuristic (K-SPH), and the Average distance heuristic (ADH). Each of these heuristics is described in [15]. <p> Likewise, ADH fails our criteria because its calculation of the most central node requires excessive overhead for coordination between nodes in the network. In addition, our earlier results indicate that, on the average, the solutions produced by K-SPH and ADH are of nearly identical quality <ref> [1] </ref>. Of these two heuristics, K-SPH is the more attractive candidate because of its relative simplicity and lower running time. 3 Distributed heuristics SPH and K-SPH are designed to run as asynchronous, independent processes running one per node in a network. <p> To determine the best solution, we considered solutions produced by the two distributed 14 heuristics described in this paper and the distributed MST algorithm, as well as the serial heuristics described in <ref> [1] </ref>. We use the best heuristic solution found for each test network rather than an optimal solution because explicit algorithms to find optimal solutions are prohibitively expensive on large networks.
Reference: [2] <author> J. Beasley. </author> <title> "An SST-based algorithm for the Steiner problem in graphs," </title> <journal> Networks, </journal> <volume> vol. 19, </volume> <pages> pp. 1-16, </pages> <year> 1989. </year>
Reference-contexts: Determining this optimal multicast tree for the virtual circuit is a difficult problem. Previous authors have established that the multicast tree problem can be modeled as the Steiner problem in networks <ref> [2, 3, 8, 20] </ref>, referred to hereafter as the SPN, and that finding explicit solutions in large networks is prohibitively expensive.
Reference: [3] <author> K. Bharath-Kumar and Jaffe. </author> <title> "Routing to multiple destinations in computer networks," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-31, no. 3, </volume> <pages> pp. 343-351, </pages> <month> Mar. </month> <year> 1983. </year>
Reference-contexts: Determining this optimal multicast tree for the virtual circuit is a difficult problem. Previous authors have established that the multicast tree problem can be modeled as the Steiner problem in networks <ref> [2, 3, 8, 20] </ref>, referred to hereafter as the SPN, and that finding explicit solutions in large networks is prohibitively expensive. <p> A number of good, inexpensive, centralized heuristics exist for the SPN and have been reviewed extensively elsewhere <ref> [3, 8, 10, 15, 16, 17, 20] </ref>. Some have been shown through analysis to produce solutions no worse than twice the optimal solution [20]. Empirical evidence from our previous papers indicate that these heuristics find solutions much better than twice the optimal with reasonable speed in most cases [1].
Reference: [4] <author> G. Chen, M. Houle, and M. Kuo. </author> <title> "The Steiner problem in distributed computing systems," </title> <journal> Information Sciences, </journal> <volume> vol. 74, no. </volume> <pages> 1-2, pp. 73-96, </pages> <month> Oct. </month> <year> 1993. </year>
Reference-contexts: Empirical evidence from our previous papers indicate that these heuristics find solutions much better than twice the optimal with reasonable speed in most cases [1]. Most of the algorithms proposed in the literature for SPN are serial in nature. However, a few distributed heuristics exist <ref> [4, 12] </ref>. Many of these algorithms are based on reducing the SPN to the minimum spanning tree problem, referred to here as the MST, and using a distributed minimum spanning tree algorithm such as the one described by Gallager, Humblet, and Spira [6]. <p> A Steiner tree is created by pruning the minimum spanning tree by removing subtrees containing no multicast members. For example, Chen, et al. <ref> [4] </ref> finds a Steiner tree by applying a distributed minimum spanning tree algorithm twice. First the algorithm is applied to the original graph. <p> We choose the distributed MST algorithm due to Gallager, Humblet, and Spira [6] as our baseline algorithm for comparison. This algorithm is perhaps the simplest of all pruned MST algorithms, yet produces Steiner trees that are representative of other, more elaborate pruned MST heuristics such as those described in <ref> [4, 12] </ref>. The distributed heuristics are compared on the basis of three criteria: competitiveness, number of messages exchanged, and convergence time. Our simulations of the algorithms are performed on a large set of sparse, randomly-generated network topologies. <p> We chose this MST algorithm as our baseline algorithm because the majority of previous distributed algorithms reviewed find multicast trees are based on finding minimal spanning trees <ref> [4, 12] </ref>. <p> membership, and (b) as a percentage of multicast membership in a 200-node network. (a) (b) network size with 30% membership, and (b) as a percentage of multicast membership in a 200-node network. 20 The heuristics developed are an improvement over existing distributed Steiner heuristics based on the minimum spanning tree <ref> [4, 12] </ref> for two reasons: they produce solutions of superior quality in most cases and requires the participation of only a subset of network nodes.
Reference: [5] <author> M. Doar and I. Leslie. </author> <title> "How bad is naive multicast routing?," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <address> San Francisco, CA, </address> <month> Apr. </month> <year> 1993, </year> <pages> pp. 82-89. </pages>
Reference-contexts: Later in Section 3.3 we discuss how these heuristics scale with increasing multicast membership size (10% to 90%) and network size (20 to 200 nodes). 13 The 1000 networks were generated to resemble real networks in a manner similar to that of Doar <ref> [5] </ref>. Each of the 200 nodes is distributed across a Cartesian coordinate plane with minimum and maximum coordinates (0; 0) and (400; 400), creating a forest of 200 nodes spread across this plane. The nodes are then connected by a random spanning tree. <p> This distance is also the time it takes for a message to traverse this edge. We used the probability function P (x; y) = fie 2ffn ; where d x;y is the rectilinear distance between nodes x and y <ref> [5] </ref>. The parameters ff and fi govern the density of the graph. Increasing ff increases the number of connections to nodes far away and increasing fi increases the number of edges from each node.
Reference: [6] <author> R. Gallager, P. Humblet, and P. Spira. </author> <title> "A distributed algorithm for minimum-weight spanning trees," </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> vol. 5, no. 1, </volume> <pages> pp. 66-77, </pages> <month> Jan. </month> <year> 1983. </year>
Reference-contexts: However, a few distributed heuristics exist [4, 12]. Many of these algorithms are based on reducing the SPN to the minimum spanning tree problem, referred to here as the MST, and using a distributed minimum spanning tree algorithm such as the one described by Gallager, Humblet, and Spira <ref> [6] </ref>. A Steiner tree is created by pruning the minimum spanning tree by removing subtrees containing no multicast members. For example, Chen, et al. [4] finds a Steiner tree by applying a distributed minimum spanning tree algorithm twice. First the algorithm is applied to the original graph. <p> We analyze their message and convergence-time complexities and compare their simulation results against those from a pruned MST algorithm. We choose the distributed MST algorithm due to Gallager, Humblet, and Spira <ref> [6] </ref> as our baseline algorithm for comparison. This algorithm is perhaps the simplest of all pruned MST algorithms, yet produces Steiner trees that are representative of other, more elaborate pruned MST heuristics such as those described in [4, 12]. <p> Finally, the distance between two trees is the distance of the shortest among all paths between any node in one tree and any node in the other tree. As in <ref> [6] </ref>, we append the weight of an edge or path with the index of its destination node in determining shortest paths so that, in case of a tie, the actions of the individual nodes would be consistent. <p> We choose the distributed MST algorithm due to Gallager, Humblet, and Spira <ref> [6] </ref> as our baseline algorithm to compare the results. This algorithm was used to produce a minimum spanning tree of the network graph, which was then pruned to obtain a Steiner tree. <p> Thus, the theoretical upper bound on the number of messages in the pruned MST heuristic is O (N log 2 N + E) <ref> [6] </ref>. In comparison, the upper bound on the number of messages for both SPH and K-SPH is O (ZN ). Thus, when the number of multicast nodes is large in comparison to log N , the pruned MST heuristic has a smaller upper bound on the number of messages.
Reference: [7] <author> P. Humblet. </author> <title> "Another adaptive distributed shortest path algorithm," </title> <journal> IEEE/ACM Transactions on Communications, </journal> <volume> vol. 39, no. 6, </volume> <pages> pp. 995-1003, </pages> <month> Jun. </month> <year> 1991. </year>
Reference-contexts: If an environment is assumed where nodes and links do fail during execution, a combination of schemes to ensure convergence and correctness need to be applied. These would certainly include an adaptive all-paths distributed algorithm such as the one described by Humblet <ref> [7] </ref> and a timeout mechanism to detect rejected merger requests. Additional work is required to study the effectiveness and performance of these schemes.
Reference: [8] <author> F. Hwang and D. Richards. </author> <title> "Steiner tree problems," </title> <journal> Networks, </journal> <volume> vol. 22, </volume> <pages> pp. 55-89, </pages> <year> 1992. </year> <month> 21 </month>
Reference-contexts: Determining this optimal multicast tree for the virtual circuit is a difficult problem. Previous authors have established that the multicast tree problem can be modeled as the Steiner problem in networks <ref> [2, 3, 8, 20] </ref>, referred to hereafter as the SPN, and that finding explicit solutions in large networks is prohibitively expensive. <p> A number of good, inexpensive, centralized heuristics exist for the SPN and have been reviewed extensively elsewhere <ref> [3, 8, 10, 15, 16, 17, 20] </ref>. Some have been shown through analysis to produce solutions no worse than twice the optimal solution [20]. Empirical evidence from our previous papers indicate that these heuristics find solutions much better than twice the optimal with reasonable speed in most cases [1].
Reference: [9] <author> M. Imase and B. Waxman. </author> <title> "Dynamic Steiner tree problem," </title> <journal> SIAM J. Disc. Math., </journal> <volume> vol. 4, no. 3, </volume> <pages> pp. 369-384, </pages> <month> Aug. </month> <year> 1991. </year>
Reference-contexts: Here competitiveness is defined to be the ratio of the sum of the heuristic tree's edge weights to that of an optimal tree <ref> [9, 18, 19] </ref>. 1 Other equivalent terms for this measure include inefficiency and quality of solution. Thus the competitiveness of a multicast tree decreases with the size of the multicast group.
Reference: [10] <author> V. Kompella, J. Pasquale, and G. Polyzos. </author> <title> "Multicasting for multimedia applications," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <address> New York, NY, </address> <month> May </month> <year> 1992, </year> <pages> pp. 2078-2085. </pages>
Reference-contexts: A number of good, inexpensive, centralized heuristics exist for the SPN and have been reviewed extensively elsewhere <ref> [3, 8, 10, 15, 16, 17, 20] </ref>. Some have been shown through analysis to produce solutions no worse than twice the optimal solution [20]. Empirical evidence from our previous papers indicate that these heuristics find solutions much better than twice the optimal with reasonable speed in most cases [1].
Reference: [11] <author> V. Kompella, J. Pasquale, and G. Polyzos. </author> <title> "Multicast routing for multimedia communications," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 1, no. 3, </volume> <pages> pp. 286-292, </pages> <month> Jun. </month> <year> 1993. </year>
Reference-contexts: The distributed minimum spanning tree algorithm is then applied a second time to this subgraph. The solution is obtained by pruning unnecessary leaves and branches from this second minimum spanning tree. Likewise, Kompella, et al. [12] describe two distributed versions of earlier centralized heuristics proposed by the same authors <ref> [11] </ref>. Both of these distributed heuristics first build a constrained Steiner tree that reflects the combined criteria of cost and delay. A distributed MST algorithm is applied to this constrained Steiner tree and the solution tree is pruned.
Reference: [12] <author> V. Kompella, J. Pasquale, and G. Polyzos. </author> <title> "Two distributed algorithms for the constrained Steiner tree problem," </title> <booktitle> in Proc. </booktitle> <institution> Comput. Commun. and Netw., </institution> <address> San Diego, CA, </address> <month> Jun. </month> <year> 1993. </year>
Reference-contexts: Empirical evidence from our previous papers indicate that these heuristics find solutions much better than twice the optimal with reasonable speed in most cases [1]. Most of the algorithms proposed in the literature for SPN are serial in nature. However, a few distributed heuristics exist <ref> [4, 12] </ref>. Many of these algorithms are based on reducing the SPN to the minimum spanning tree problem, referred to here as the MST, and using a distributed minimum spanning tree algorithm such as the one described by Gallager, Humblet, and Spira [6]. <p> The distributed minimum spanning tree algorithm is then applied a second time to this subgraph. The solution is obtained by pruning unnecessary leaves and branches from this second minimum spanning tree. Likewise, Kompella, et al. <ref> [12] </ref> describe two distributed versions of earlier centralized heuristics proposed by the same authors [11]. Both of these distributed heuristics first build a constrained Steiner tree that reflects the combined criteria of cost and delay. <p> We choose the distributed MST algorithm due to Gallager, Humblet, and Spira [6] as our baseline algorithm for comparison. This algorithm is perhaps the simplest of all pruned MST algorithms, yet produces Steiner trees that are representative of other, more elaborate pruned MST heuristics such as those described in <ref> [4, 12] </ref>. The distributed heuristics are compared on the basis of three criteria: competitiveness, number of messages exchanged, and convergence time. Our simulations of the algorithms are performed on a large set of sparse, randomly-generated network topologies. <p> We chose this MST algorithm as our baseline algorithm because the majority of previous distributed algorithms reviewed find multicast trees are based on finding minimal spanning trees <ref> [4, 12] </ref>. <p> membership, and (b) as a percentage of multicast membership in a 200-node network. (a) (b) network size with 30% membership, and (b) as a percentage of multicast membership in a 200-node network. 20 The heuristics developed are an improvement over existing distributed Steiner heuristics based on the minimum spanning tree <ref> [4, 12] </ref> for two reasons: they produce solutions of superior quality in most cases and requires the participation of only a subset of network nodes.
Reference: [13] <author> J. Kruskal. </author> <title> "On the shortest spanning subtree of a graph and the traveling salesman problem," </title> <journal> Proc. Amer. Math. Soc., </journal> <volume> vol. 7, </volume> <pages> pp. 48-50, </pages> <year> 1956. </year>
Reference-contexts: It then grows the tree by successively adding the next closest multicast member to the multicast tree by the shortest path between the multicast member and the tree. The algorithm terminates when all the multicast members have joined the tree. K-SPH Heuristic K-SPH, introduced in <ref> [13] </ref>, differs from SPH in the manner in which the multicast tree is expanded. Instead of growing the tree one node at a time, the algorithm joins subtrees pairwise repeatedly until all the multicast nodes are part of a single tree.
Reference: [14] <author> V. Rayward-Smith and A. Clare. </author> <title> "On finding Steiner vertices," </title> <journal> Networks, </journal> <volume> vol. 16, </volume> <pages> pp. 283-294, </pages> <year> 1986. </year>
Reference-contexts: In the expansion step, it finds two subtrees that are closest to each other and joins them along the shortest path between them to form a single subtree. This heuristic is a refinement of the average distance heuristic first proposed by Rayward-Smith <ref> [14] </ref>. 2.1 Distributed Steiner Heuristics After further consideration, only two of the four heuristics, SPH and K-SPH, remain as suitable candidates for distributed implementation. Both heuristics SPH-Z and ADH fail our criteria for conversion.
Reference: [15] <author> M. Smith and P. Winter. </author> <title> "Path-distance heuristics for the Steiner problem in undirected networks," </title> <journal> Algorithmica, </journal> <volume> vol. 7, no. </volume> <pages> 2-3, pp. 309-327, </pages> <year> 1992. </year>
Reference-contexts: A number of good, inexpensive, centralized heuristics exist for the SPN and have been reviewed extensively elsewhere <ref> [3, 8, 10, 15, 16, 17, 20] </ref>. Some have been shown through analysis to produce solutions no worse than twice the optimal solution [20]. Empirical evidence from our previous papers indicate that these heuristics find solutions much better than twice the optimal with reasonable speed in most cases [1]. <p> Of the centralized heuristics evaluated in [1], we chose the following four heuristics as candidates for distributed implementation: the shortest-path heuristic (SPH), a variant of SPH known as SPH-Z, the Kruskal-based shortest-path heuristic (K-SPH), and the Average distance heuristic (ADH). Each of these heuristics is described in <ref> [15] </ref>. A brief summary of heuristics SPH and K-SPH follows. SPH Heuristic SPH, introduced in [16], initializes the multicast tree to an arbitrary multicast member.
Reference: [16] <author> H. Takahashi and A. </author> <title> Matsuyama. "An approximate solution for the Steiner problem in graphs," </title> <journal> Math. Japonica, </journal> <volume> vol. 24, no. 6, </volume> <pages> pp. 573-577, </pages> <year> 1980. </year>
Reference-contexts: A number of good, inexpensive, centralized heuristics exist for the SPN and have been reviewed extensively elsewhere <ref> [3, 8, 10, 15, 16, 17, 20] </ref>. Some have been shown through analysis to produce solutions no worse than twice the optimal solution [20]. Empirical evidence from our previous papers indicate that these heuristics find solutions much better than twice the optimal with reasonable speed in most cases [1]. <p> Each of these heuristics is described in [15]. A brief summary of heuristics SPH and K-SPH follows. SPH Heuristic SPH, introduced in <ref> [16] </ref>, initializes the multicast tree to an arbitrary multicast member. It then grows the tree by successively adding the next closest multicast member to the multicast tree by the shortest path between the multicast member and the tree. The algorithm terminates when all the multicast members have joined the tree.
Reference: [17] <author> S. Voss. </author> <title> "Steiner's problem in graphs: Heuristic methods," </title> <journal> Discrete Applied Mathematics, </journal> <volume> vol. 40, </volume> <pages> pp. 45-72, </pages> <year> 1992. </year>
Reference-contexts: A number of good, inexpensive, centralized heuristics exist for the SPN and have been reviewed extensively elsewhere <ref> [3, 8, 10, 15, 16, 17, 20] </ref>. Some have been shown through analysis to produce solutions no worse than twice the optimal solution [20]. Empirical evidence from our previous papers indicate that these heuristics find solutions much better than twice the optimal with reasonable speed in most cases [1]. <p> This may be impractical in a large network with sparse multicast groups. Second, the theoretical upper bound on competitiveness of a pruned MST to that of an optimal Steiner tree has been shown to be s + 1, where s is the number of non-multicast nodes <ref> [17] </ref>. Here competitiveness is defined to be the ratio of the sum of the heuristic tree's edge weights to that of an optimal tree [9, 18, 19]. 1 Other equivalent terms for this measure include inefficiency and quality of solution. <p> In contrast, the ratio between the cost of a solution produced by pruning a minimum spanning tree and that of an optimal solution can be as large as the number of non-multicast nodes <ref> [17] </ref>. In our case, the cost of pruned MST solutions was rarely worse than twice that of the best solution found, but was often significantly worse than that produced by shortest path heuristics. Figure 14 displays the complete cumulative distribution for the pruned minimum spanning tree algorithm.
Reference: [18] <author> B. Waxman. </author> <title> "Routing of multipoint connections," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 6, no. 9, </volume> <pages> pp. 1617-1622, </pages> <month> Dec. </month> <year> 1988. </year>
Reference-contexts: Here competitiveness is defined to be the ratio of the sum of the heuristic tree's edge weights to that of an optimal tree <ref> [9, 18, 19] </ref>. 1 Other equivalent terms for this measure include inefficiency and quality of solution. Thus the competitiveness of a multicast tree decreases with the size of the multicast group.
Reference: [19] <author> J. Westbrook and D. Yan. </author> <title> "Greedy algorithms for the on-line Steiner tree and generalized Steiner problems," in Algorithms and data structures. </title> <booktitle> Third Workshop, WADS '93., </booktitle> <address> Montreal, Quebec, Canada, </address> <month> Aug. </month> <year> 1993, </year> <pages> pp. 621-633. </pages>
Reference-contexts: Here competitiveness is defined to be the ratio of the sum of the heuristic tree's edge weights to that of an optimal tree <ref> [9, 18, 19] </ref>. 1 Other equivalent terms for this measure include inefficiency and quality of solution. Thus the competitiveness of a multicast tree decreases with the size of the multicast group.
Reference: [20] <author> P. Winter. </author> <title> "Steiner problem in networks: A survey," </title> <journal> Networks, </journal> <volume> vol. 17, no. 2, </volume> <pages> pp. 129-167, </pages> <year> 1987. </year>
Reference-contexts: Determining this optimal multicast tree for the virtual circuit is a difficult problem. Previous authors have established that the multicast tree problem can be modeled as the Steiner problem in networks <ref> [2, 3, 8, 20] </ref>, referred to hereafter as the SPN, and that finding explicit solutions in large networks is prohibitively expensive. <p> For example, two popular explicit algorithms, the spanning tree enumeration algorithm and the dynamic programming algorithm <ref> [20] </ref>, have algorithmic complexities of O (p 2 2 (np) + n 3 ) and O (n3 p + n 2 2 p + n 3 ), respectively, where n is the number of nodes in the graph and p the number of multicast members. <p> A number of good, inexpensive, centralized heuristics exist for the SPN and have been reviewed extensively elsewhere <ref> [3, 8, 10, 15, 16, 17, 20] </ref>. Some have been shown through analysis to produce solutions no worse than twice the optimal solution [20]. Empirical evidence from our previous papers indicate that these heuristics find solutions much better than twice the optimal with reasonable speed in most cases [1]. <p> A number of good, inexpensive, centralized heuristics exist for the SPN and have been reviewed extensively elsewhere [3, 8, 10, 15, 16, 17, 20]. Some have been shown through analysis to produce solutions no worse than twice the optimal solution <ref> [20] </ref>. Empirical evidence from our previous papers indicate that these heuristics find solutions much better than twice the optimal with reasonable speed in most cases [1]. Most of the algorithms proposed in the literature for SPN are serial in nature. However, a few distributed heuristics exist [4, 12]. <p> Thus the competitiveness of a multicast tree decreases with the size of the multicast group. In comparison, the equivalent theoretical upper bound for the shortest path heuristic (SPH) for the Steiner tree problem is 2 (1 1 p ) <ref> [20] </ref>, where p is the size of the multicast group. Our empirical evidence suggests that pruned MST heuristics often produce solutions of inferior quality as compared to those produced by shortest path Steiner heuristics. In this paper, we present two distributed algorithms for the Steiner problem in networks. <p> This result is consistent with the known theoretical upper bounds on the heuristics. It has been shown that the cost of a solution produced by either SPH or K-SPH is within twice the cost of an optimal solution <ref> [20] </ref>. In contrast, the ratio between the cost of a solution produced by pruning a minimum spanning tree and that of an optimal solution can be as large as the number of non-multicast nodes [17].
References-found: 20

