URL: http://www.cs.utah.edu/~zachary/fie96.ps
Refering-URL: http://www.cs.utah.edu/~zachary/
Root-URL: 
Email: zachary@cs.utah.edu  
Title: An Introduction to Computing for Engineers: New Approaches to Content and Pedagogy  
Author: Joseph L. Zachary 
Address: Salt Lake City, UT 84112  
Affiliation: Department of Computer Science University of Utah  
Abstract: The descriptive and analytical powers of computation must be exploited in engineering education. Unfortunately, the introductory programming classes that are taken by engineering majors often suffer from two failings. First, they frequently ignore the context in which programming is actually done. Second, they are most often designed for students planning to major in computer science. We have developed a new introductory programming course designed expressly for engineering majors. It is supported by the recently-published textbook Introduction to Scientific Programming and by a Web site containing interactive online material. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A National Computing Initiative. </author> <title> The Agenda for Leadership. Report of the Panel on Research Issues in Large-Scale Computational Science and Engineering, by H.J. </title> <editor> Raveche, D.H. Lawrie, and A.M. Despain. </editor> <booktitle> SIAM Workshop, </booktitle> <address> Leesburg, Virginia, </address> <year> 1987. </year>
Reference: [2] <institution> Future Research Directions in Problem Solving Environments for Computational Science, S. </institution> <note> Gallopoulos, </note> <editor> E. Houstis, J. Rice, eds., </editor> <booktitle> NSF Report, </booktitle> <year> 1991. </year>
Reference: [3] <author> J.R. Rice, </author> <title> Academic Programs in Computational Science and Engineering, </title> <journal> IEEE Computational Science and Engineering, </journal> <volume> Vol. 1, No. 1, </volume> <editor> p. </editor> <volume> 13, </volume> <month> Spring </month> <year> 1994. </year>
Reference: [4] <author> J.L. Zachary, </author> <title> Introduction to Scientific Programming: Computational Problem Solving Using Maple and C, </title> <address> TELOS/Springer-Verlag, </address> <year> 1996. </year>
Reference-contexts: These materials exploit Java applets as well as other innovative online technologies that we have developed. Our course is supported by the recently-published textbook Introduction to Scientific Programming <ref> [4] </ref> and by a Web site containing the online material [5]. Programming Languages There is no single best language for either beginning or advanced programmers to use. Programming languages are nothing more than sophisticated tools.
Reference: [5] <institution> An extensive collection of online material that supports our class is available at the Internet http site www.cs.utah.edu/hamlet/IntroSciProg.html. </institution>
Reference-contexts: These materials exploit Java applets as well as other innovative online technologies that we have developed. Our course is supported by the recently-published textbook Introduction to Scientific Programming [4] and by a Web site containing the online material <ref> [5] </ref>. Programming Languages There is no single best language for either beginning or advanced programmers to use. Programming languages are nothing more than sophisticated tools. <p> We are also developing a Java applet that will let students interactively trace the execution of all of the C programs used in the course <ref> [5] </ref>. By doing this in Java, a student with an Internet connection will be able to use our material whether or not they have an implementation of Maple or a C compiler.
Reference: [6] <institution> Online material that is used for a variety of classes at the University of Utah is available at the Internet http site www.cs.utah.edu/hamlet. </institution>
Reference-contexts: When we first offered Engineering Computing in the winter of 1994, we did not use a textbook. Instead, we developed what amounted to a complete online textbook <ref> [6] </ref> that the students used via a custom hypertext viewer. We also developed Maple worksheets that allowed the students to create animations that illustrated curve fitting and numerical integration techniques. <p> We also developed a set of tutorials on C that were viewable with any Web browser <ref> [6] </ref>. For the 1996-97 academic year, we are developing a third generation of online material. We are developing Java applets to illustrate the concepts previously covered in the Maple worksheets described above as well as to bring to life most of the illustrative problems used in the course.
References-found: 6

