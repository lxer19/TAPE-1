URL: http://www.cs.gatech.edu/grads/c/Chris.Carothers/PAPERS/mascots-94.ps
Refering-URL: http://www.cs.gatech.edu/grads/c/Chris.Carothers/homepage.html
Root-URL: 
Title: Distributed Simulation of Large-Scale PCS Networks  
Author: Christopher D. Carothers and Richard M. Fujimoto Yi-Bing Lin and Paul England 
Note: Appeared in MASCOTS '94  
Address: Atlanta, Georgia 30332  Morristown, New Jersey 07962  
Affiliation: College of Computing Georgia Institute of Technology  Bellcore  
Abstract: There has been rapid growth in demand for mobile communications over the past few years that has led to intensive research and development of complex PCS (personal communication service) networks. Capacity planning and performance modeling is necessary to maintain a high quality of service to the mobile subscriber while minimizing cost. Simulation is widely used in such studies, however, because these models are extremely time consuming to execute, only small-scale PCS networks have previously been simulated. In this paper, we examine the use of the Time Warp distributed simulation mechanism in simulating large scale (1024 or more cells) PCS networks. An object-oriented, distributed discrete event simulator using Time Warp has been developed, and initial performance measurements completed. Speedups in the range of 2.8 to 7.8 using 8 Unix workstations have been obtained, enabling simulation runs that require 20 hours on a single workstation to be completed in only 3.5 hours. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Brown. </author> <title> Calendar queues: A fast O(1) priority queue implementation for the simulation event set problem. </title> <journal> Communications of the ACM, </journal> <volume> 31(10) </volume> <pages> 1220-1227, </pages> <month> Oct. </month> <year> 1988. </year>
Reference-contexts: It is anticipated that most simulations will contain far more entities than processors, so each processor will typically contain hundreds or thousands of entities (LPs). A priority queue data structure called the calendar queue <ref> [1] </ref> is used in each processor to efficiently select the next entity to execute. The processor's scheduler always selects the entity containing the smallest timestamped event as the next one for execution. Each entity includes a linear list to hold the unprocessed events (method invocations) scheduled for that entity.
Reference: [2] <author> O. F. Bryan, Jr. </author> <title> Modsim II an object-oriented simulation language for sequential and parallel processors. </title> <booktitle> In 1989 Winter Simulation Conference Proceedings, </booktitle> <pages> pages 122-127, </pages> <year> 1989. </year>
Reference-contexts: T = 5 fi 10 4 * 3.5 3.7 3.9 p b T fi 10 5 simulated sec (c) The impact of the termination time Sp = 256 * * * * * * * * * * event simulation packages, such as ModSim <ref> [2] </ref> on a high performance engineering workstation, so a simulation of this magnitude will require many hours of CPU time. Execution times will increase as network complexity and the functionality of the simulator increase. Further, such large simulation programs may require more memory than is available on a single machine.
Reference: [3] <author> Cox, D. C. </author> <title> Personal Communications A Viewpoint. </title> <journal> IEEE Communications Magazine, </journal> <volume> 128(11), </volume> <year> 1990. </year>
Reference-contexts: 1 PCS Network Simulation A personal communication service (PCS) network <ref> [3] </ref> is a wireless communication network, which provides communication services for portables or PCS subscribers. The service area of a PCS network is partitioned into several sub-areas or cells, and radio channels are assigned to the cells.
Reference: [4] <author> England, Paul. </author> <title> The pTask System for High Performance Distributed Computing. </title> <note> Submitted for publication, </note> <year> 1993. </year>
Reference-contexts: It is anticipated that the number of unprocessed events for each entity will remain small (often only a few events) for most applications. Interprocessor communications are handled by pTask, a library and programming environment for developing distributed C++ applications <ref> [4] </ref>. The system supports heterogeneous platforms and automatically converts data sent between different types of machines. pTask also includes support for special nodes such as supercomputers and graphics workstations. Communications between identical computational nodes circumvent the conversion routines, thereby improving performance.
Reference: [5] <author> R. M. Fujimoto. </author> <title> Parallel discrete event simulation. </title> <journal> Communications of the ACM, </journal> <volume> 33(10) </volume> <pages> 30-53, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: Section 4 describes results of a study to measure the performance of this implementation. Section 5 presents conclusions of this study, and future work. 2 Distributed Time Warp For a detailed description of the Time Warp mechanism we refer the reader to <ref> [5] </ref>. A version of Time Warp has been developed that executes on a collection of DEC 5000 workstations, Sun Sparc workstations, or a mixture of these machines. All performance results presented here were performed on DEC machines interconnected by an Ethernet. The Time Warp system is written in C++.
Reference: [6] <author> R. M. Fujimoto. </author> <title> Performance of Time Warp under synthetic workloads. </title> <booktitle> In Proceedings of the SCS Multiconference on Distributed Simulation, </booktitle> <pages> pages 23-28, </pages> <year> 1990. </year>
Reference-contexts: As shown by Figure 3, speedup increases when: The number of portables per cell increases By increasing the number of portables per cell, the message density 6 is increased. <ref> [6] </ref> shows that as the message density for exponentially distributed timestamps, increases so does speedup. Our results here reiterate those findings. The reason for the increase in performance is due to a reduction in rollbacks. <p> Our definition is consistent with the one presented in <ref> [6] </ref>. 7 Efficiency is defined as the events committed = events (N), mobility and call interarrival times. Call holding times are exponentially distributed with a 3 minute mean. <p> In previous simulations using the Time Warp mechanism on a shared memory multiprocessor, we observed much shorter rollback lengths (&lt; 2). We believed the cause arises from the self-initiating nature of the PCS model. To determine the cause, we implemented a distributed version of the PHOLD model <ref> [6] </ref>, which has been shown to have short rollback lengths on shared memory multiprocessors. Our implementation of PHOLD had 1024 LPs. Communications between entities was uniform and fully connected. We ran PHOLD with the same workloads as done in the PCS experiments, 25, 50 and 75 initial messages per LP.
Reference: [7] <author> Kuek, S.S., and Wong, W.C. </author> <title> Ordered Dynamic Channel Assignment Scheme with Reassignment in Highway Microcells. </title> <journal> IEEE Trans. Veh. Tech-nol., </journal> <volume> 41(3) </volume> <pages> 271-277, </pages> <year> 1992. </year>
Reference-contexts: In a PCS simulation, the network is usually represented by hexagonal or square cells. Ideally, PCS simulation experiments should model large networks containing thousands of cells. However, due to limited computing resources, most studies only examine small-scale networks containing fewer than 50 cells <ref> [7, 13] </ref>, and output statistics of the boundary cells are usually discarded to avoid the boundary effect. Lin and Mak [9] showed that this approach may lead to biased output statistics, and suggest using a large network with a wrap-around topology to achieve reliable simulation results. <p> If all channels are busy, then the call is blocked (dropped). The output measure is the blocking probability p b (the probability that a phone call is dropped). The blocking probability of a fixed channel assignment PCS network can be modeled analytically using the Erlang-B system <ref> [7, 13] </ref>. However, Lin and Chen [8] showed that the Erlang-B system is only appropriate for predicting the blocking probability when the number of portables is much larger than the number of available channels. <p> Further, unlike a simulation, an analytic model for a fixed channel assignment PCS network cannot be easily modified to study other aspects of a PCS network such as the handoff effect [11] and dynamic channel assignment <ref> [7, 13] </ref>. Here we assume that the expected number of portables in a cell is N .
Reference: [8] <author> Lin, Y.-B., and Chen, W. </author> <title> Impact of Busy Lines and Mobility on Cell Blocking in a PCS Network. </title> <note> Submitted for publication, </note> <year> 1993. </year>
Reference-contexts: The output measure is the blocking probability p b (the probability that a phone call is dropped). The blocking probability of a fixed channel assignment PCS network can be modeled analytically using the Erlang-B system [7, 13]. However, Lin and Chen <ref> [8] </ref> showed that the Erlang-B system is only appropriate for predicting the blocking probability when the number of portables is much larger than the number of available channels.
Reference: [9] <author> Lin, Y.-B., and Mak, V.K. </author> <title> On Simulating a Large-Scale Personal Communications Services Network. </title> <note> To appear in ACM TOMACS, </note> <year> 1993. </year>
Reference-contexts: Ideally, PCS simulation experiments should model large networks containing thousands of cells. However, due to limited computing resources, most studies only examine small-scale networks containing fewer than 50 cells [7, 13], and output statistics of the boundary cells are usually discarded to avoid the boundary effect. Lin and Mak <ref> [9] </ref> showed that this approach may lead to biased output statistics, and suggest using a large network with a wrap-around topology to achieve reliable simulation results. To illustrate the impact of network size, consider the following PCS simulation.
Reference: [10] <author> David M. Nicol. </author> <title> Performance bounds on parallel self-initiating discrete-event simulations. </title> <journal> ACM TOMACS, </journal> <volume> 1(1) </volume> <pages> 24-50, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: If all channels from the neighboring destination Cell are busy, this call counts as a handoff block, also known as a forced termination. If a channel is available, the call reconnects and continues without interruption. To implement the physical functionality of a PCS network, we wrote a self-initiating simulation <ref> [10] </ref> 4 , where the Cells, via the Portables, generate their own incoming calls. This aspect of our implementation will become clearer in the discussion below and has a significant effect on the behavior of the distributed simulation.
Reference: [11] <author> Tekinary, S., and Jabbari, B. </author> <title> A Measurement Based Prioritization Scheme for Handovers in Cellular and Microcellular Networks. </title> <journal> IEEE J. Sel. Areas Comm., </journal> <month> October </month> <year> 1992. </year>
Reference-contexts: Further, unlike a simulation, an analytic model for a fixed channel assignment PCS network cannot be easily modified to study other aspects of a PCS network such as the handoff effect <ref> [11] </ref> and dynamic channel assignment [7, 13]. Here we assume that the expected number of portables in a cell is N .
Reference: [12] <author> Wong, W. C. </author> <title> Packet Reservation Multiple Access in a Metropolitan Microcellular Radio Environment. </title> <journal> IEEE J. Sel. Areas Comm., </journal> <volume> 11(6) </volume> <pages> 918-925, </pages> <year> 1993. </year>
Reference-contexts: Here we assume that the expected number of portables in a cell is N . A portable resides in a cell for a period of time t (in this paper, t has an exponential distribution with mean 1 , as proposed in <ref> [12] </ref>), then move to one of the four neighboring cells with equal probability. The call arrivals to a portable form a Pois son process with the arrival rate .
Reference: [13] <author> Zhang, M., and Yum, T.-S. </author> <title> Comparisons of Channel-Assignment Strategies in Cellular Mobile Telephone Systems. </title> <journal> IEEE Trans. Veh. Tech-nol., </journal> <volume> 38(4) </volume> <pages> 211-215, </pages> <year> 1989. </year>
Reference-contexts: In a PCS simulation, the network is usually represented by hexagonal or square cells. Ideally, PCS simulation experiments should model large networks containing thousands of cells. However, due to limited computing resources, most studies only examine small-scale networks containing fewer than 50 cells <ref> [7, 13] </ref>, and output statistics of the boundary cells are usually discarded to avoid the boundary effect. Lin and Mak [9] showed that this approach may lead to biased output statistics, and suggest using a large network with a wrap-around topology to achieve reliable simulation results. <p> If all channels are busy, then the call is blocked (dropped). The output measure is the blocking probability p b (the probability that a phone call is dropped). The blocking probability of a fixed channel assignment PCS network can be modeled analytically using the Erlang-B system <ref> [7, 13] </ref>. However, Lin and Chen [8] showed that the Erlang-B system is only appropriate for predicting the blocking probability when the number of portables is much larger than the number of available channels. <p> Further, unlike a simulation, an analytic model for a fixed channel assignment PCS network cannot be easily modified to study other aspects of a PCS network such as the handoff effect [11] and dynamic channel assignment <ref> [7, 13] </ref>. Here we assume that the expected number of portables in a cell is N .
References-found: 13

