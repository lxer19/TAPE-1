URL: http://www.cs.columbia.edu/~hgs/rtsp/draft/draft-ietf-mmusic-rtsp-09.ps
Refering-URL: http://www.cs.columbia.edu/~hgs/rtsp/
Root-URL: http://www.cs.columbia.edu
Title: Internet Engineering Task Force MMUSIC WG Real Time Streaming Protocol (RTSP) Status of Real Time
Author: INTERNET-DRAFT H. Schulzrinne, A. Rao, R. Lanphier 
Note: this Memo This document is an Internet-Draft. Internet-Drafts are working documents of the Internet Engineering Task Force (IETF), its areas, and its working groups. Note that other groups may also distribute working documents as Internet-Drafts. Distribution of this document is unlimited. Copyright Notice Copyright (c) The Internet Society (1998). All Rights Reserved. The  1889). Contents  
Date: February 2, 1998 Expires: August 2, 1998  
Affiliation: draft-ietf-mmusic-rtsp-09.ps Columbia U./Netscape/RealNetworks  
Abstract: Internet-Drafts are draft documents valid for a maximum of six months and may be updated, replaced, or obsoleted by other documents at any time. It is inappropriate to use Internet-Drafts as reference material or to cite them other than as work in progress. To learn the current status of any Internet-Draft, please check the 1id-abstracts.txt listing contained in the Internet-Drafts Shadow Directories on ftp.is.co.za (Africa), nic.nordu.net (Europe), munnari.oz.au (Pacific Rim), ds.internic.net (US East Coast), or ftp.isi.edu (US West Coast). Abstract 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Schulzrinne, </author> <title> RTP profile for audio and video conferences with minimal control, </title> <type> RFC 1890, </type> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: During an RTSP session, an RTSP client may open and close many reliable transport connections to the server to issue RTSP requests. Alternatively, it may use a connectionless transport protocol such as UDP. The streams controlled by RTSP may use RTP <ref> [1] </ref>, but the operation of RTSP does not depend on the transport mechanism used to carry continuous media. The protocol is intentionally similar in syntax and operation to HTTP/1.1 [2] so that extension mechanisms to HTTP can in most cases also be added to RTSP. <p> If the server has no preference, it SHOULD set the port number value to zero. Example: m=audio 0 RTP/AVP 31 C.1.3 Payload type (s) The payload type (s) are specified in the m= field. In case the payload type is a static payload type from RFC 1890 <ref> [1] </ref>, no other information is required. In case it is a dynamic payload type, the media attribute rtpmap is used to specify what the media is. <p> Codec-specific parameters are not specified in this field, but rather in the fmtp attribute described below. Implementors seeking to register new encodings should follow the procedure in RFC 1890 <ref> [1] </ref>. If the media type is not suited to the RTP AV profile, then it is recommended that a new profile be created and the appropriate profile name be used in lieu of RTP/AVP in the m= field. C.1.4 Format-specific parameters Format-specific parameters are conveyed using the fmtp media attribute.
Reference: [2] <author> R. Fielding, J. Gettys, J. Mogul, H. Nielsen, and T. Berners-Lee, </author> <title> Hypertext transfer protocol HTTP/1.1, RFC 2068, </title> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1997. </year>
Reference-contexts: Alternatively, it may use a connectionless transport protocol such as UDP. The streams controlled by RTSP may use RTP [1], but the operation of RTSP does not depend on the transport mechanism used to carry continuous media. The protocol is intentionally similar in syntax and operation to HTTP/1.1 <ref> [2] </ref> so that extension mechanisms to HTTP can in most cases also be added to RTSP. <p> Because of backward compatibility with a historical blunder, HTTP/1.1 <ref> [2] </ref> carries only the absolute path in the request and puts the host name in a separate header field. This makes virtual hosting easier, where a single host with one IP address hosts several document trees. <p> Addition of media to an existing presentation: Particularly for live presentations, it is useful if the server can tell the client about additional media becoming available. RTSP requests may be handled by proxies, tunnels and caches as in HTTP/1.1 <ref> [2] </ref>. 1.2 Requirements The key words MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD, SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL in this document are to be interpreted as described in RFC 2119 [4]. 1.3 Terminology Some of the terminology has been adopted from HTTP/1.1 [2]. <p> tunnels and caches as in HTTP/1.1 <ref> [2] </ref>. 1.2 Requirements The key words MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD, SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL in this document are to be interpreted as described in RFC 2119 [4]. 1.3 Terminology Some of the terminology has been adopted from HTTP/1.1 [2]. Terms not listed here are defined as in HTTP/1.1. Aggregate control: The control of the multiple streams using a single timeline by the server. For au dio/video feeds, this means that the client may issue a single play or pause message to control both the audio and video feeds. <p> Easy to parse: RTSP can be parsed by standard HTTP or MIME parsers. Secure: RTSP re-uses web security mechanisms, either at the transport level (TLS, RFC XXXX [7]) or within the protocol itself. All HTTP authentication mechanisms such as basic (RFC 2068 <ref> [2, Sec tion 11.1] </ref>) and digest authentication (RFC 2069 [8]) are directly applicable. <p> A server SHOULD implement all header fields described in Section 12. It is up to the creators of presentation descriptions not to ask the impossible of a server. This situation is similar in HTTP/1.1 <ref> [2] </ref>, where the methods described in [H19.6] are not likely to be supported across all servers. <p> For brevity, [HX.Y] is to be taken to refer to Section X.Y of the current HTTP/1.1 specification (RFC 2068 <ref> [2] </ref>). All the mechanisms specified in this document are described in both prose and an augmented Backus-Naur form (BNF) similar to that used in [H2.1]. It is described in detail in RFC 2234 [17], with the difference that this RTSP specification maintains the 1# notation for comma-separated lists. <p> Accept ; Section 12.1 j Accept-Encoding ; Section 12.2 j Accept-Language ; Section 12.3 j Authorization ; Section 12.5 j From ; Section 12.20 j If-Modified-Since ; Section 12.23 j Range ; Section 12.29 j Referer ; Section 12.30 j User-Agent ; Section 12.41 Note that in contrast to HTTP/1.1 <ref> [2] </ref>, RTSP requests always contain the absolute URL (that is, including the scheme, host and port) rather than just the absolute path. HTTP/1.1 requires servers to understand the absolute URL, but clients are supposed to use the Host request header. <p> The reason phrases listed here are only recommended they may be replaced by local equivalents without affecting the protocol. Note that RTSP adopts most HTTP/1.1 <ref> [2] </ref> status codes and adds RTSP-specific status codes starting at x50 to avoid conflicts with newly defined HTTP status codes. H. Schulzrinne, A. Rao, R. <p> The Unsupported header should be returned stating the option for which there is no support. 12 Header Field Definitions HTTP/1.1 <ref> [2] </ref> or other, non-standard header fields not listed here currently have no well-defined meaning and SHOULD be ignored by the recipient. H. Schulzrinne, A. Rao, R. Lanphier Expires August 2, 1998 [Page 34] INTERNET-DRAFT draft-ietf-mmusic-rtsp-09.ps February 2, 1998 Table 3 summarizes the header fields used by RTSP. <p> A range of 10:0 10:08, on the other hand, would exclude the frame at 10.08. Range = Range : 1#ranges-specifier [ ; time = utc-time ] ranges-specifier = npt-range j utc-range j smpte-range Example: Range: clock=19960213T143205Z-;time=19970123T143720Z The notation is similar to that used for the HTTP/1.1 <ref> [2] </ref> byte-range header. It allows clients to select an excerpt from the media object, and to play from a given point to the end as well as from the current location to a given point. <p> Schulzrinne, A. Rao, R. Lanphier Expires August 2, 1998 [Page 58] INTERNET-DRAFT draft-ietf-mmusic-rtsp-09.ps February 2, 1998 15 Syntax The RTSP syntax is described in an augmented Backus-Naur form (BNF) as used in RFC 2068 <ref> [2] </ref>. H. Schulzrinne, A. Rao, R. <p> it must check the values of Location and Content-Location headers in responses that are generated under control of said organizations to make sure that they do not attempt to invalidate resources over which they have no authority. ([H15.9]) In addition to the recommendations in the current HTTP specification (RFC 2068 <ref> [2] </ref>, as of this writing), future HTTP specifications may provide additional guidance on security issues. The following are added considerations for RTSP implementations. Concentrated denial-of-service attack: The protocol offers the opportunity for a remote-controlled denial of-service attack.
Reference: [3] <author> F. Yergeau, G. Nicol, G. Adams, and M. Duerst, </author> <title> Internationalization of the hypertext markup language, RFC 2070, </title> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1997. </year>
Reference-contexts: Rao, R. Lanphier Expires August 2, 1998 [Page 5] INTERNET-DRAFT draft-ietf-mmusic-rtsp-09.ps February 2, 1998 * Data is carried out-of-band by a different protocol. (There is an exception to this.) * RTSP is defined to use ISO 10646 (UTF-8) rather than ISO 8859-1, consistent with current HTML internationalization efforts <ref> [3] </ref>. * The Request-URI always contains the absolute URI. Because of backward compatibility with a historical blunder, HTTP/1.1 [2] carries only the absolute path in the request and puts the host name in a separate header field.
Reference: [4] <author> S. Bradner, </author> <title> Key words for use in RFCs to indicate requirement levels, </title> <type> RFC 2119, </type> <institution> Internet Engineering Task Force, </institution> <month> Mar. </month> <year> 1997. </year>
Reference-contexts: RTSP requests may be handled by proxies, tunnels and caches as in HTTP/1.1 [2]. 1.2 Requirements The key words MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD, SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL in this document are to be interpreted as described in RFC 2119 <ref> [4] </ref>. 1.3 Terminology Some of the terminology has been adopted from HTTP/1.1 [2]. Terms not listed here are defined as in HTTP/1.1. Aggregate control: The control of the multiple streams using a single timeline by the server.
Reference: [5] <author> ISO/IEC, </author> <title> Information technology generic coding of moving pictures and associated audio in-formaiton part 6: extension for digital storage media and control, Draft International Standard ISO 13818-6, International Organization for Standardization ISO/IEC JTC1/SC29/WG11, </title> <address> Geneva, Switzerland, </address> <month> Nov. </month> <year> 1995. </year>
Reference-contexts: NPT advances normally when in normal play mode (scale = 1), advances at a faster rate when in fast scan forward (high positive scale ratio), decrements when in scan reverse (high negative scale ratio) and is fixed in pause mode. NPT is (logically) equivalent to SMPTE time codes. <ref> [5] </ref> npt-range = ( npt-time - [ npt-time ] ) j ( - npt-time ) npt-time = now j npt-sec j npt-hhmmss npt-sec = 1*DIGIT [ . *DIGIT ] npt-hhmmss = npt-hh : npt-mm : npt-ss [ . *DIGIT ] npt-hh = 1*DIGIT ; any positive number npt-mm = 1*2DIGIT ;
Reference: [6] <author> M. Handley and V. Jacobson, SDP: </author> <title> Session description protocol, Request for Comments XXXX, </title> <institution> Internet Engineering Task Force, </institution> <month> Feb. </month> <year> 1998. </year>
Reference-contexts: Presentation description: A presentation description contains information about one or more media streams within a presentation, such as the set of encodings, network addresses and information about the content. Other IETF protocols such as SDP (RFC XXXX <ref> [6] </ref>) use the term session for a live presentation. The presentation description may take several different formats, including but not limited to the session description format SDP. Response: An RTSP response. If an HTTP response is meant, that is indicated explicitly. H. Schulzrinne, A. Rao, R. <p> The sequence parameter of the RTP-Info (Section 12.33) header provides the first sequence number of the next segment. C Use of SDP for RTSP Session Descriptions The Session Description Protocol (SDP, RFC XXXX <ref> [6] </ref>) may be used to describe streams or presentations in RTSP. Such usage is limited to specifying means of access and encoding (s) for: aggregate control: A presentation composed of streams from one or more servers that are not available for aggregate control. <p> C.1 Definitions The terms session-level, media-level and other key/attribute names and values used in this appendix are to be used as defined in SDP (RFC XXXX <ref> [6] </ref>): C.1.1 Control URL The a=control: attribute is used to convey the control URL. This attribute is used both for the session and media descriptions. If used for individual media, it indicates the URL to be used for controlling that particular media stream. <p> The encoding name within the rtpmap attribute may be one of those specified in RFC 1890 (Sections 5 and 6), or an experimental encoding with a X- prefix as specified in SDP (RFC XXXX <ref> [6] </ref>). Codec-specific parameters are not specified in this field, but rather in the fmtp attribute described below. Implementors seeking to register new encodings should follow the procedure in RFC 1890 [1].
Reference: [7] <author> A. Freier, P. Karlton, and P. Kocher, </author> <title> The TLS protocol, Request for Comments XXXX, </title> <institution> Internet Engineering Task Force, </institution> <month> Feb. </month> <year> 1998. </year>
Reference-contexts: Easy to parse: RTSP can be parsed by standard HTTP or MIME parsers. Secure: RTSP re-uses web security mechanisms, either at the transport level (TLS, RFC XXXX <ref> [7] </ref>) or within the protocol itself. All HTTP authentication mechanisms such as basic (RFC 2068 [2, Sec tion 11.1]) and digest authentication (RFC 2069 [8]) are directly applicable. <p> The scheme rtsp requires that commands are issued via a reliable protocol (within the Internet, TCP), while the scheme rtspu identifies an unreliable protocol (within the Internet, UDP). The scheme rtsps indicates that a TCP connection secured by TLS (RFC XXXX) <ref> [7] </ref> must be used. If the port is empty or not given, port 554 is assumed. <p> The server SHOULD use a large, random and non-sequential session identifier to minimize the possibility of this kind of attack. Authentication: Servers SHOULD implement both basic and digest [8] authentication. In environments requiring tighter security for the control messages, transport layer mechanisms such as TLS (RFC XXXX <ref> [7] </ref>) SHOULD be used. Stream issues: RTSP only provides for stream control. Stream delivery issues are not covered in this section, nor in the rest of this draft.
Reference: [8] <author> J. Franks, P. Hallam-Baker, and J. Hostetler, </author> <title> An extension to HTTP: digest access authentication, RFC 2069, </title> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1997. </year>
Reference-contexts: Secure: RTSP re-uses web security mechanisms, either at the transport level (TLS, RFC XXXX [7]) or within the protocol itself. All HTTP authentication mechanisms such as basic (RFC 2068 [2, Sec tion 11.1]) and digest authentication (RFC 2069 <ref> [8] </ref>) are directly applicable. Transport-independent: RTSP may use either an unreliable datagram protocol (UDP) (RFC 768 [9]), a reliable datagram protocol (RDP, RFC 1151, not widely used [10]) or a reliable stream protocol such as TCP (RFC 793 [11]) as it implements application-level reliability. <p> The server SHOULD use a large, random and non-sequential session identifier to minimize the possibility of this kind of attack. Authentication: Servers SHOULD implement both basic and digest <ref> [8] </ref> authentication. In environments requiring tighter security for the control messages, transport layer mechanisms such as TLS (RFC XXXX [7]) SHOULD be used. Stream issues: RTSP only provides for stream control. Stream delivery issues are not covered in this section, nor in the rest of this draft.
Reference: [9] <author> J. Postel, </author> <title> User datagram protocol, RFC STD 6, </title> <type> 768, </type> <institution> Internet Engineering Task Force, </institution> <month> Aug. </month> <year> 1980. </year>
Reference-contexts: All HTTP authentication mechanisms such as basic (RFC 2068 [2, Sec tion 11.1]) and digest authentication (RFC 2069 [8]) are directly applicable. Transport-independent: RTSP may use either an unreliable datagram protocol (UDP) (RFC 768 <ref> [9] </ref>), a reliable datagram protocol (RDP, RFC 1151, not widely used [10]) or a reliable stream protocol such as TCP (RFC 793 [11]) as it implements application-level reliability. Multi-server capable: Each media stream within a presentation can reside on a different server.
Reference: [10] <author> B. Hinden and C. Partridge, </author> <title> Version 2 of the reliable data protocol (RDP), </title> <type> RFC 1151, </type> <institution> Internet Engineering Task Force, </institution> <month> Apr. </month> <year> 1990. </year>
Reference-contexts: All HTTP authentication mechanisms such as basic (RFC 2068 [2, Sec tion 11.1]) and digest authentication (RFC 2069 [8]) are directly applicable. Transport-independent: RTSP may use either an unreliable datagram protocol (UDP) (RFC 768 [9]), a reliable datagram protocol (RDP, RFC 1151, not widely used <ref> [10] </ref>) or a reliable stream protocol such as TCP (RFC 793 [11]) as it implements application-level reliability. Multi-server capable: Each media stream within a presentation can reside on a different server. The client automatically establishes several concurrent control sessions with the different media servers.
Reference: [11] <author> J. Postel, </author> <title> Transmission control protocol, RFC STD 7, </title> <type> 793, </type> <institution> Internet Engineering Task Force, </institution> <month> Sept. </month> <note> 1981. </note> <author> H. Schulzrinne, A. Rao, R. </author> <note> Lanphier Expires August 2, 1998 [Page 72] INTERNET-DRAFT draft-ietf-mmusic-rtsp-09.ps February 2, </note> <year> 1998 </year>
Reference-contexts: Transport-independent: RTSP may use either an unreliable datagram protocol (UDP) (RFC 768 [9]), a reliable datagram protocol (RDP, RFC 1151, not widely used [10]) or a reliable stream protocol such as TCP (RFC 793 <ref> [11] </ref>) as it implements application-level reliability. Multi-server capable: Each media stream within a presentation can reside on a different server. The client automatically establishes several concurrent control sessions with the different media servers. Media synchronization is performed at the transport level.
Reference: [12] <author> H. Schulzrinne, </author> <title> A comprehensive multimedia control architecture for the Internet, </title> <booktitle> in Proc. International Workshop on Network and Operating System Support for Digital Audio and Video (NOSSDAV), </booktitle> <address> (St. Louis, Missouri), </address> <month> May </month> <year> 1997. </year>
Reference-contexts: Separation of stream control and conference initiation: Stream control is divorced from inviting a media server to a conference. The only requirement is that the conference initiation protocol either provides or can be used to create a unique conference identifier. In particular, SIP <ref> [12] </ref> or H.323 [13] may be used to invite a server to a conference. Suitable for professional applications: RTSP supports frame-level accuracy through SMPTE time stamps to allow remote digital editing. <p> For H.323, the conferenceID value is to be used. conference-id = 1*xchar Conference identifiers are used to allow RTSP sessions to obtain parameters from multimedia conferences the media server is participating in. These conferences are created by protocols outside the scope of this specification, e.g., H.323 [13] or SIP <ref> [12] </ref>. Instead of the RTSP client explicitly providing transport information, for example, it asks the media server to use the values in the conference description instead. 3.4 Session Identifiers Session identifiers are opaque strings of arbitrary length. Linear white space must be URL-escaped.
Reference: [13] <author> International Telecommunication Union, </author> <title> Visual telephone systems and equipment for local area networks which provide a non-guaranteed quality of service, Recommendation H.323, </title> <institution> Telecommunication Standardization Sector of ITU, Geneva, Switzerland, </institution> <month> May </month> <year> 1996. </year>
Reference-contexts: Separation of stream control and conference initiation: Stream control is divorced from inviting a media server to a conference. The only requirement is that the conference initiation protocol either provides or can be used to create a unique conference identifier. In particular, SIP [12] or H.323 <ref> [13] </ref> may be used to invite a server to a conference. Suitable for professional applications: RTSP supports frame-level accuracy through SMPTE time stamps to allow remote digital editing. <p> For H.323, the conferenceID value is to be used. conference-id = 1*xchar Conference identifiers are used to allow RTSP sessions to obtain parameters from multimedia conferences the media server is participating in. These conferences are created by protocols outside the scope of this specification, e.g., H.323 <ref> [13] </ref> or SIP [12]. Instead of the RTSP client explicitly providing transport information, for example, it asks the media server to use the values in the conference description instead. 3.4 Session Identifiers Session identifiers are opaque strings of arbitrary length. Linear white space must be URL-escaped.
Reference: [14] <author> P. McMahon, </author> <title> GSS-API authentication method for SOCKS version 5, RFC 1961, </title> <institution> Internet Engineering Task Force, </institution> <month> June </month> <year> 1996. </year>
Reference-contexts: However, the presentation description must contain at least one RTSP URI. Proxy and firewall friendly: The protocol should be readily handled by both application and transport-layer (SOCKS <ref> [14] </ref>) firewalls. A firewall may need to understand the SETUP method to open a hole for the UDP media stream. H. Schulzrinne, A. Rao, R.
Reference: [15] <author> J. Miller, P. Resnick, and D. Singer, </author> <title> Rating services and rating systems (and their machine readable descriptions), Recommendation REC-PICS-services-961031, W3C (World Wide Web Consortium), </title> <address> Boston, Massachusetts, </address> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: H. Schulzrinne, A. Rao, R. Lanphier Expires August 2, 1998 [Page 8] INTERNET-DRAFT draft-ietf-mmusic-rtsp-09.ps February 2, 1998 HTTP-friendly: Where sensible, RTSP reuses HTTP concepts, so that the existing infrastructure can be reused. This infrastructure includes PICS (Platform for Internet Content Selection <ref> [15, 16] </ref>) for associating labels with content. However, RTSP does not just add methods to HTTP since the controlling continuous media requires server state in most cases. Appropriate server control: If a client can start a stream, it must be able to stop a stream.
Reference: [16] <author> J. Miller, T. Krauskopf, P. Resnick, and W. Treese, </author> <title> PICS label distribution label syntax and communication protocols, Recommendation REC-PICS-labels-961031, W3C (World Wide Web Consortium), </title> <address> Boston, Massachusetts, </address> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: H. Schulzrinne, A. Rao, R. Lanphier Expires August 2, 1998 [Page 8] INTERNET-DRAFT draft-ietf-mmusic-rtsp-09.ps February 2, 1998 HTTP-friendly: Where sensible, RTSP reuses HTTP concepts, so that the existing infrastructure can be reused. This infrastructure includes PICS (Platform for Internet Content Selection <ref> [15, 16] </ref>) for associating labels with content. However, RTSP does not just add methods to HTTP since the controlling continuous media requires server state in most cases. Appropriate server control: If a client can start a stream, it must be able to stop a stream.
Reference: [17] <author> D. Crocker and P. Overell, </author> <title> Augmented BNF for syntax specifications: ABNF, </title> <type> RFC 2234, </type> <institution> Internet Engineering Task Force, </institution> <month> Nov. </month> <year> 1997. </year>
Reference-contexts: All the mechanisms specified in this document are described in both prose and an augmented Backus-Naur form (BNF) similar to that used in [H2.1]. It is described in detail in RFC 2234 <ref> [17] </ref>, with the difference that this RTSP specification maintains the 1# notation for comma-separated lists. In this draft, we use indented and smaller-type paragraphs to provide background and motivation.
Reference: [18] <author> B. Braden, </author> <title> Requirements for internet hosts application and support, RFC STD 3, </title> <type> 1123, </type> <institution> Internet Engineering Task Force, </institution> <month> Oct. </month> <year> 1989. </year>
Reference-contexts: If there is no acknowledgement, the sender may resend the same message after a timeout of one round-trip time (RTT). The H. Schulzrinne, A. Rao, R. Lanphier Expires August 2, 1998 [Page 22] INTERNET-DRAFT draft-ietf-mmusic-rtsp-09.ps February 2, 1998 round-trip time is estimated as in TCP (RFC 1123) <ref> [18] </ref>, with an initial round-trip value of 500 ms. An implementation MAY cache the last RTT measurement as the initial value for future connections.
Reference: [19] <author> R. Elz, </author> <title> A compact representation of IPv6 addresses, RFC 1924, </title> <institution> Internet Engineering Task Force, </institution> <month> Apr. </month> <year> 1996. </year>
Reference-contexts: The use of IP addresses in URLs SHOULD be avoided whenever possible (see RFC 1924 <ref> [19] </ref>). A presentation or a stream is identified by a textual media identifier, using the character set and escape conventions [H3.2] of URLs (RFC 1738 [20]). URLs may refer to a stream or an aggregate of streams, i.e., a presentation.
Reference: [20] <author> T. Berners-Lee, L. Masinter, and M. McCahill, </author> <title> Uniform resource locators (URL), </title> <type> RFC 1738, </type> <institution> Internet Engineering Task Force, </institution> <month> Dec. </month> <year> 1994. </year>
Reference-contexts: The use of IP addresses in URLs SHOULD be avoided whenever possible (see RFC 1924 [19]). A presentation or a stream is identified by a textual media identifier, using the character set and escape conventions [H3.2] of URLs (RFC 1738 <ref> [20] </ref>). URLs may refer to a stream or an aggregate of streams, i.e., a presentation. Accordingly, requests described in Section 10 can apply to either the whole presentation or an individual stream within the presentation.
Reference: [21] <author> F. Yergeau, UTF-8, </author> <title> a transformation format of ISO 10646, </title> <type> RFC 2279, </type> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1998. </year>
Reference-contexts: of preference) an RFC, a published paper, a patent filing, a technical report, documented source code or a computer manual; * For proprietary options, contact information (postal and email address); 4 RTSP Message RTSP is a text-based protocol and uses the ISO 10646 character set in UTF-8 encoding (RFC 2279 <ref> [21] </ref>). Lines are terminated by CRLF, but receivers should be prepared to also interpret CR and LF by themselves as line terminators. Text-based protocols make it easier to add optional parameters in a self-describing manner. <p> This is also the encoding used for RTCP. ISO 8859-1 translates directly into Unicode with a high-order octet of zero. ISO 8859-1 characters with the most-significant bit set are represented as 1100001x 10xxxxxx. (See RFC 2279 <ref> [21] </ref>) RTSP messages can be carried over any lower-layer transport protocol that is 8-bit clean. Requests contain methods, the object the method is operating upon and parameters to further describe the method. Methods are idempotent, unless otherwise noted.
Reference: [22] <author> B. Braden, </author> <title> T/TCP TCP extensions for transactions functional specification, </title> <type> RFC 1644, </type> <institution> Internet Engineering Task Force, </institution> <month> July </month> <year> 1994. </year>
Reference-contexts: If the packet loss is caused by congestion, multiple retransmissions at different layers will exacerbate the congestion. If RTSP is used over a small-RTT LAN, standard procedures for optimizing inital TCP round trip estimates, such as those used in T/TCP (RFC 1644) <ref> [22] </ref>, can be beneficial. The Timestamp header (Section 12.38) is used to avoid the retransmission ambiguity problem [23, p. 301] and obviates the need for Karn's algorithm. Each request carries a sequence number in the CSeq header (Section 12.17), which is incremented by one for each distinct request transmitted.
Reference: [23] <author> W. R. Stevens, </author> <title> TCP/IP illustrated: </title> <booktitle> the implementation, </booktitle> <volume> vol. </volume> <pages> 2. </pages> <address> Reading, Massachusetts: </address> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: If RTSP is used over a small-RTT LAN, standard procedures for optimizing inital TCP round trip estimates, such as those used in T/TCP (RFC 1644) [22], can be beneficial. The Timestamp header (Section 12.38) is used to avoid the retransmission ambiguity problem <ref> [23, p. 301] </ref> and obviates the need for Karn's algorithm. Each request carries a sequence number in the CSeq header (Section 12.17), which is incremented by one for each distinct request transmitted.
Reference: [24] <author> H. Schulzrinne, S. Casner, R. Frederick, and V. Jacobson, RTP: </author> <title> a transport protocol for real-time applications, </title> <type> RFC 1889, </type> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: It is specified as a range, e.g., port=3456-3457. server port: This parameter provides the unicast RTP/RTCP port pair on the server where media data and control information is to be sent. It is specified as a range, e.g., port=3456-3457. ssrc: The ssrc parameter indicates the RTP SSRC <ref> [24, Sec. 3] </ref> value that should be (request) or will be (response) used by the media server. This parameter is only valid for unicast transmission. It identifies the synchronization source to be associated with the media stream. H. Schulzrinne, A. Rao, R. <p> PLAY Playing SETUP Ready TEARDOWN Init RECORD Recording Playing PLAY Playing PAUSE Ready TEARDOWN Init SETUP Playing Recording RECORD Recording PAUSE Ready TEARDOWN Init SETUP Recording B Interaction with RTP RTSP allows media clients to control selected, non-contiguous sections of media presentations, rendering those streams with an RTP media layer <ref> [24] </ref>. The media layer rendering the RTP stream should not be affected by jumps in NPT. Thus, both RTP sequence numbers and RTP timestamps MUST be continuous and monotonic across jumps of NPT.

References-found: 24

