URL: http://www.cs.brown.edu/courses/cs196a/UW-CSE-93-11-03.PS
Refering-URL: http://www.cs.brown.edu/courses/cs196a/
Root-URL: http://www.cs.brown.edu/
Title: The Challenges of Mobile Computing  
Author: George H. Forman John Zahorjan 
Keyword: mobile computing, hand-held computers, PDAs, surveys, wireless communication, networks, disconnection, low bandwidth, data security, mobility, location dependence, portability, low power, small user interfaces  
Date: March 9, 1994  
Affiliation: Computer Science Engineering University of Washington  
Abstract: Advances in wireless networking technology have engendered a new paradigm of computing, called mobile computing, in which users carrying portable devices have access to a shared infrastructure independent of their physical location. This provides flexible communication between people and continuous access to networked services. Mobile computing is expected to revolutionize the way computers are used. This paper is a survey of the fundamental software design pressures particular to mobile computing. The issues discussed arise from three essential requirements: the use of wireless networking, the ability to change locations, and the need for unencumbered portability. Promising approaches to address these challenges are identified, along with their shortcomings. Available as UW CSE Tech Report # 93-11-03 from ftp.cs.washington.edu. An edited version of this paper has been accepted for publication in IEEE Computer. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Anantha Chandrakasan, Samuel Sheng, and R.W. Brodersen. </author> <title> Design Considerations for a Future Portable Multimedia Terminal. In Third Generation Wireless Information Networks, </title> <publisher> Kluwer Academic Publishers, </publisher> <pages> pages 75-97, </pages> <year> 1992. </year>
Reference-contexts: In order to retain more computational power at lower frequencies, processors are being designed that perform more work on each clock cycle <ref> [1] </ref>. Power can be conserved not only by the design but also by efficient operation. Power management software can power down individual components when they are idle, for example, spinning down the internal disk or turning off screen lighting.
Reference: [2] <author> Fred Douglis. </author> <title> On the Role of Compression in Distributed Systems. </title> <booktitle> In 5th SIGOPS Workshop on Models and Paradigms for Distributed Systems Structuring, </booktitle> <pages> 6 pages, </pages> <month> Sept </month> <year> 1992. </year>
Reference-contexts: Hence, none of the PDA products have disks. Coping with limited storage is not a new problem. Solutions include compressing file systems, accessing remote storage over the network, sharing code libraries, and compressing virtual memory pages <ref> [2] </ref>.
Reference: [3] <author> Dan Duchamp, Steven K. Feiner, and Gerald Q. Maguire, Jr. </author> <title> Software Technology for Wireless Mobile Computing. </title> <journal> IEEE Network Magazine, </journal> <pages> pages 12-18, </pages> <month> Nov </month> <year> 1991. </year>
Reference-contexts: This also consumes more network capacity, even though the bandwidth between the mobile unit and the server may not degrade. To avoid these disadvantages, service connections may be dynamically transferred to servers that are closer <ref> [3] </ref>. When many mobile units converge, such as during meetings, load balancing concerns may outweigh the importance of communication locality. Table 1: Characteristics of Personal Digital Assistant products and the AT&T EO tablet computer. Each has a pen interface and a black & white reflective LCD screen. <p> Also, window title bars and borders either consume significant portions of screen space or become difficult to operate with the pointing device. Duchamp and Feiner have investigated the use of head-mounted virtual reality displays for portable computers <ref> [3] </ref>. As the user turns his head, the image displayed in the eye shifts to give the sensation that there is a screen all around. This effectively increases the screen area available for windowing systems. <p> Pens have become the standard input device for PDAs because of their ease of use while mobile, their versatility and their ability to supplant the keyboard. Switching to pens requires changing both the user interface and the software interface because mice and pens are really quite different <ref> [3] </ref>. Users with pens can jump to absolute screen positions and enter path information more easily than with mice; it is nearly impossible to write with a mouse. <p> Portability entails limited resources available on board to handle the changeable mobile computing environment. The challenge for mobile computing designers is how to adapt the system designs that have worked well for traditional computing. To date, few prototype mobile computing systems have been built that include the wireless network <ref> [3, 15] </ref>. 6 Acknowledgments Support for this work was provided in part by the National Science Foundation (Grants CCR-9123308 and CCR-9200832), Tektronix Inc. (a graduate fellowship), the Wash-ington Technology Center, and Digital Equipment Corporation (Systems Research Center and External Research Program).
Reference: [4] <author> T. Imielinski and B. R. Badrinath. </author> <title> Data Management for Mobile Computing. </title> <booktitle> SIGMOD Record, </booktitle> <volume> 22(1) </volume> <pages> 34-39, </pages> <month> March </month> <year> 1993. </year> <month> 15 </month>
Reference-contexts: Human intervention is often required to coordinate the use of addresses. In order to communicate with a mobile computer, messages must be sent to its most recent address. There are four basic mechanisms for determining the current address of a mobile computer: broadcast <ref> [5, 4] </ref>, central services [8], home bases [12], and forwarding pointers [5]. These are the building blocks of the current proposals for `mobile-IP' schemes. Selective Broadcast: With the broadcast method, a message is sent to all network cells, asking the mobile computer sought to reply with its current address. <p> this library)?" or "where is the nearest open gas station heading north?" Whereas such queries require static location information about the world, Badrinath and Imielinski are studying a related class of queries that depends on the dynamic locations of other mobile objects, for example, determining where the nearest taxi is <ref> [4] </ref>. Privacy: Answering these queries requires knowing the location of another mobile user. In some cases this may be sensitive information, more so if given at a fine resolution.
Reference: [5] <author> John Ioannisdis, Dan Duchamp, and Gerald Q. Maguire Jr. </author> <title> IP-based Protocols for Mobile Internetworking. </title> <booktitle> In Proceedings of SIGCOMM '91 Symposium, </booktitle> <pages> pages 235-245, </pages> <month> Sept </month> <year> 1991. </year>
Reference-contexts: Human intervention is often required to coordinate the use of addresses. In order to communicate with a mobile computer, messages must be sent to its most recent address. There are four basic mechanisms for determining the current address of a mobile computer: broadcast <ref> [5, 4] </ref>, central services [8], home bases [12], and forwarding pointers [5]. These are the building blocks of the current proposals for `mobile-IP' schemes. Selective Broadcast: With the broadcast method, a message is sent to all network cells, asking the mobile computer sought to reply with its current address. <p> In order to communicate with a mobile computer, messages must be sent to its most recent address. There are four basic mechanisms for determining the current address of a mobile computer: broadcast [5, 4], central services [8], home bases [12], and forwarding pointers <ref> [5] </ref>. These are the building blocks of the current proposals for `mobile-IP' schemes. Selective Broadcast: With the broadcast method, a message is sent to all network cells, asking the mobile computer sought to reply with its current address.
Reference: [6] <author> James J. Kistler and M. Satyanarayanan. </author> <title> Disconnected Operation in the Coda File System. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 10(1) </volume> <pages> 3-25, </pages> <month> Feb </month> <year> 1992. </year>
Reference-contexts: These techniques, therefore, have the potential to mask some network failures. The Coda file system provides a good example of handling network disconnections, although it is designed for today's notebook computers where disconnections may be less frequent, more predictable and longer lasting than in mobile computing <ref> [6] </ref>. In formation from the user's profile is used to help keep the best selection of files in an on-board cache. It is important to cache whole files rather than blocks so that entire files can be read during a disconnection. <p> More conservative file systems disallow this to prevent multiple users from making inconsistent versions. Coda's optimism is justified by studies showing that only rarely are files actually shared in a distributed system; less than 1% of all writes are followed by a write by a different user <ref> [6] </ref>. In those cases 4 where strong consistency guarantees are needed, clients can ask for them explicitly. Hence, providing flexible consistency semantics can allow better autonomy. Of course, not all network disconnections can be masked. <p> With the addition of wireless networks to portable computers, newly produced data can be copied immediately to secure, remote media. This can be accomplished with replicated file systems such as Coda and Echo <ref> [6] </ref>. 4.3 Small User Interface The size constraints on a portable computer require a small user interface. Desktop windowing environments may be sufficient for today's notebook computers, but for smaller, more portable devices current windowing technology is inadequate.
Reference: [7] <author> Kester Li, Roger Kumpf, Paul Horton, and Thomas Anderson. </author> <title> A Quantitative Analysis of Disk Drive Power Management in Portable Computers. </title> <type> Technical Report, </type> <institution> Computer Science Division, University of California at Berkeley, </institution> <year> 1993. </year>
Reference-contexts: Li et al. determined recently that for today's notebook computing it is worthwhile to spin down the internal disk drive after it has been idle for just a few seconds <ref> [7] </ref>. Applications can conserve power by reducing their appetite for computation, communication and memory, and by performing their periodic operations infrequently to amortize the startup overhead. Since cellular telephone transmission typically requires about ten times as much power as reception, trading talking for more listening can also save power.
Reference: [8] <author> Chaoying Ma. </author> <title> On Building Very Large Naming Systems. </title> <booktitle> In 5th SIGOPS Workshop on Models and Paradigms for Distributed Systems Structuring, </booktitle> <pages> 5 pages, </pages> <month> Sept </month> <year> 1992. </year>
Reference-contexts: Human intervention is often required to coordinate the use of addresses. In order to communicate with a mobile computer, messages must be sent to its most recent address. There are four basic mechanisms for determining the current address of a mobile computer: broadcast [5, 4], central services <ref> [8] </ref>, home bases [12], and forwarding pointers [5]. These are the building blocks of the current proposals for `mobile-IP' schemes. Selective Broadcast: With the broadcast method, a message is sent to all network cells, asking the mobile computer sought to reply with its current address.
Reference: [9] <author> B. Clifford Neuman. </author> <title> Protection and Security Issues for Future Systems. </title> <booktitle> In Workshop on Operating Systems of the 90s and Beyond, Springer-Verlag Lecture Notes in Computer Science #563, </booktitle> <pages> pages 184-201, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: The security depends upon a secret encryption key being known only to the authorized parties. Managing these keys securely is difficult, but can be automated by software such as MIT's Kerberos <ref> [9] </ref>. Kerberos provides secure authentication services, provided the Kerberos server itself is trusted. It authenticates users without exposing their passwords on the network and generates secret encryption keys that can be selectively shared between mutually suspicious parties.
Reference: [10] <author> Carl D. Tait and Dan Duchamp. </author> <title> Detection and Exploitation of File Working Sets. </title> <booktitle> In 11th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 2-9, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: Lazy write-back can even reduce overall communication when the data to be transmitted are further mutated or deleted before they are transmitted. Prefetching involves knowing or guessing which files will be needed soon and downloading them over the network before they are demanded <ref> [10] </ref>. Bad guesses can waste network bandwidth, however. System performance can be improved by scheduling communication intelligently. When available bandwidth does not satisfy the demand, priority should be given to those processes for which the user is waiting. Backups should be performed only with "leftover" bandwidth.
Reference: [11] <author> C.C. Tappert, C.Y. Suen, and T. Wakahara. </author> <title> On-line Handwriting Recognition| </title>
Reference-contexts: This approach has been adopted by all the PDA products in Table 1. Handwriting recognition rates for high-end systems are typically 96-98% accurate when trained to a specific user. (Tappert et al. give a thorough survey <ref> [11] </ref>.) With context information, recognition rates can be enhanced effectively to 100%, but context 13 constraints do not help for all kinds of input, such as when entering words that are not in the dictionary.
References-found: 11

