URL: http://www.eecs.umich.edu/~chaudhry/papers/avs95.ps
Refering-URL: http://www.eecs.umich.edu/~chaudhry/publications.html
Root-URL: http://www.cs.umich.edu
Email: email: moyne@eecs.umich.edu  
Title: Adaptive Extensions to a Multi-Branch Runto-Run Controller for Plasma Etching  
Author: James R. Moyne, Nauman Chaudhry, and Roland Telfeyan 
Address: Ann Arbor, MI 48109-2108  
Affiliation: University of Michigan Display Technology Manufacturing Center  
Date: 1995  
Note: Journal of Vacuum Science and Technology:  1.0 Introduction  
Abstract: Fuzzy logic and database learning mechanisms have been incorporated into a generic plasma etching runto-run controller, resulting in a very dynamic, adaptable and robust system. The system features an Applied 8300 RIE controlled by a Techware II equipment controller. A TCP/IP connection links this equipment controller to the runto-run controller residing on a SUN. The runto-run control environment is generic in that the basic control framework and controller development results are applicable to VLSI manufacturing in general. The controller is multi-branch as it utilizes multiple algorithms in complementary fashion to achieve process optimization and control. The current implementation utilizes three branches: (1) a linear approximation control algorithm, (2) an optimization algorithm that utilizes (real-time) data collected insitu to determine optimal runto-run process parameter settings, and (3) a statistical optimization algorithm that utilizes runto-run data. We have extended the controller to accommodate an automated branch selection process that utilizes fuzzy logic to incorporate process engineer as well as optimization and control algorithmic knowledge. We have also extended the controller to adapt to unforeseen events through utilization of a learning mechanism; this mechanism detects these unforeseen events, intelligently queries the process engineer, guides the engineer through the development of an event servicing scheme, and incorporates this new knowledge into its control knowledge base so that the event may be serviced automatically in the future. Implementation results of the controller (in the control of the etcher) confirm the robust control capabilities in the face of process shift and drift, and recipe change. Achieving optimization and control of plasma processes for purposes of maintaining acceptable yield in the face of smaller feature sizes and more complicated processes has proven to be an elusive task. The realization that the development of a comprehensive predictive physical process model set is probably years away has resulted in a general shift towards control that is based on empirical information (e.g., statistical process control (SPC) and neural networks) [2, 5, 7, 11]. In addition the lack of a critical mass of sensors and actuators for plasma process monitoring and 
Abstract-found: 1
Intro-found: 0
Reference: [1] <author> J. Buckley and D. Tucker, </author> <title> "Second generation fuzzy expert system," Fuzzy Sets and Systems 31 (1989). </title>
Reference-contexts: Note that each rule contains a predicate, operator, action and certainty factor (a number between zero and one indicating the confidence or believability of the rule). In order to handle information that is somewhat contradictory (e.g., rules 2 and 4 in Fig. 3) we utilize a method introduced by <ref> [1] </ref>. With this method, all rules associated with a particular action (i.e., the action of choosing a particular branch) are partitioned into two sets, those recommending for the action and those recommending against the action [4].
Reference: [2] <author> Camporese, D., </author> <title> "Artificial Neural Networks for Real-Time Tool Controllers," </title> <booktitle> SRC RTTC Workshop, </booktitle> <month> (February </month> <year> 1991). </year>
Reference-contexts: The realization that the development of a comprehensive predictive physical process model set is probably years away has resulted in a general shift towards control that is based on empirical information (e.g., statistical process control (SPC) and neural networks) <ref> [2, 5, 7, 11] </ref>. In addition the lack of a critical mass of sensors and actuators for plasma process monitoring and 2 control has forced the utilization of innovative control techniques such as virtual sensors and multilevel hierarchical control [5, 7, 11].
Reference: [3] <author> N. Chaudhry, J. Moyne, E. Rundensteiner, </author> <title> "A Design Methodology for Database with Uncertain Data", </title> <booktitle> Proceedings of the Seventh International Working Conference on Scientific and Statistical Database Management, </booktitle> <address> Charlottesville, Virginia, </address> <month> (September </month> <year> 1994). </year> <month> 12 </month>
Reference-contexts: A branch selection algorithm has been developed that satisfies the aforementioned requirements; the algorithm utilizes fuzzy logic applied to a knowledge base to determine branch selection <ref> [3, 4] </ref>. A review of the requirements of the branch selection algorithm and the available methods for its implementation reveals that fuzzy logic is indeed an ideal mechanism for the development and use of the required knowledge base [3, 6, 14]. <p> A review of the requirements of the branch selection algorithm and the available methods for its implementation reveals that fuzzy logic is indeed an ideal mechanism for the development and use of the required knowledge base <ref> [3, 6, 14] </ref>. Specifically, the fuzzy system that has been developed is attractive for many reasons. First, it makes effective use of vague or nonexact information in conjunction with deterministic information, and it can provide suggestions with a limited amount of knowledge.
Reference: [4] <author> N. Chaudhry, J. Moyne, E. Rundensteiner, </author> <title> "A Fuzzy Database for Runto-Run Control of Semiconductor Manufacturing," </title> <note> (in preparation). </note>
Reference-contexts: A branch selection algorithm has been developed that satisfies the aforementioned requirements; the algorithm utilizes fuzzy logic applied to a knowledge base to determine branch selection <ref> [3, 4] </ref>. A review of the requirements of the branch selection algorithm and the available methods for its implementation reveals that fuzzy logic is indeed an ideal mechanism for the development and use of the required knowledge base [3, 6, 14]. <p> This knowledge base is incorporated / linked into the database of the GCC R2R control enabler, and the resulting system is thus able to enforce routing information relating to which control thread (s) to invoke for a particular process run (see Fig. 2) <ref> [4, 8] </ref>. Thus the database contains a schema for the storage of fuzzy and non-fuzzy rules as well as the interaction with the GCC database. It also contains a fuzzifier that categorizes process run data as necessary so that it may be utilized by the available rules [4]. <p> Thus the database contains a schema for the storage of fuzzy and non-fuzzy rules as well as the interaction with the GCC database. It also contains a fuzzifier that categorizes process run data as necessary so that it may be utilized by the available rules <ref> [4] </ref>. The rule syntax allows expression of rules that advise for or against an action. As an example, Fig. 3 is an illustration of a valid rule base. <p> With this method, all rules associated with a particular action (i.e., the action of choosing a particular branch) are partitioned into two sets, those recommending for the action and those recommending against the action <ref> [4] </ref>. For each of these sets a confidence is derived (a number between zero and one) by applying fuzzy set theory. Thus an Upper Confidence level advising for an action and a Lower Confidence level advising against an action are both derived. <p> Thus an Upper Confidence level advising for an action and a Lower Confidence level advising against an action are both derived. After both confidences are derived, we then provide the following technique for making a decision of branch selection <ref> [4] </ref>. 1.) Upper and Lower Confidence levels computed are combined into a tuple (X 1 , X 2 ), where X 1 represents the degree of support for an action, and X 2 represents one minus the degree of support against an action (0 X 1 , X 2 1). 2.)
Reference: [5] <editor> M.E. Elta, H. Etemad, J.S. Freudenberg, M.D. Giles, J.W. Grizzle, </editor> <volume> P.T. Kabamba, </volume> <pages> P.P. </pages> <editor> Khargonekar, S. Lafortune, S.M. Meerkov, J.R. Moyne, B.A. Rashap, D. Teneketzis, F.L. Terry, Jr., </editor> <title> "Applications of control to semiconductor manufacturing: reactive ion etching," </title> <booktitle> Microelectronic Processing '93 Proceedings, </booktitle> <volume> Vol. </volume> <year> 2091, </year> <month> September </month> <year> 1993. </year>
Reference-contexts: The realization that the development of a comprehensive predictive physical process model set is probably years away has resulted in a general shift towards control that is based on empirical information (e.g., statistical process control (SPC) and neural networks) <ref> [2, 5, 7, 11] </ref>. In addition the lack of a critical mass of sensors and actuators for plasma process monitoring and 2 control has forced the utilization of innovative control techniques such as virtual sensors and multilevel hierarchical control [5, 7, 11]. <p> In addition the lack of a critical mass of sensors and actuators for plasma process monitoring and 2 control has forced the utilization of innovative control techniques such as virtual sensors and multilevel hierarchical control <ref> [5, 7, 11] </ref>. Among the multiple process control levels, it is clear that run-torun (R2R) control enjoys a higher level of maturity than time critical or real-time control due mainly to better sensing and actuation capabilities and the availability of a number of sequential control methods [7, 9, 12]. <p> a discussion of potential future research and development directions. 2.0 Control Environment The R2R control framework design described in this paper is part of a multilevel control system that includes real-time equipment and process control as well as pseudo-real-time process control components operating in conjunction with the sequential control component <ref> [5, 7, 11] </ref>. A typical implementation of this multilevel control system is illustrated in Fig. 1. Note that the process control problem in this case is decoupled into three distinct components: insitu process factory control, insitu process control, and discrete (R2R) product control.
Reference: [6] <author> C. Lee, </author> <title> "Fuzzy logic in Control Systems: Fuzzy Logic Controller, Parts 1 and 2," </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics 20, </journal> <month> 2 (March/ April </month> <year> 1990). </year>
Reference-contexts: A review of the requirements of the branch selection algorithm and the available methods for its implementation reveals that fuzzy logic is indeed an ideal mechanism for the development and use of the required knowledge base <ref> [3, 6, 14] </ref>. Specifically, the fuzzy system that has been developed is attractive for many reasons. First, it makes effective use of vague or nonexact information in conjunction with deterministic information, and it can provide suggestions with a limited amount of knowledge.
Reference: [7] <author> J. Moyne, H. Etemad, M. Elta, </author> <title> "Run-to-run Control Framework for VLSI Manufacturing," </title> <booktitle> Microelectronic Processing '93 Conference Proceedings, </booktitle> <address> Monterey, California, </address> <month> (September </month> <year> 1993). </year>
Reference-contexts: The realization that the development of a comprehensive predictive physical process model set is probably years away has resulted in a general shift towards control that is based on empirical information (e.g., statistical process control (SPC) and neural networks) <ref> [2, 5, 7, 11] </ref>. In addition the lack of a critical mass of sensors and actuators for plasma process monitoring and 2 control has forced the utilization of innovative control techniques such as virtual sensors and multilevel hierarchical control [5, 7, 11]. <p> In addition the lack of a critical mass of sensors and actuators for plasma process monitoring and 2 control has forced the utilization of innovative control techniques such as virtual sensors and multilevel hierarchical control <ref> [5, 7, 11] </ref>. Among the multiple process control levels, it is clear that run-torun (R2R) control enjoys a higher level of maturity than time critical or real-time control due mainly to better sensing and actuation capabilities and the availability of a number of sequential control methods [7, 9, 12]. <p> Among the multiple process control levels, it is clear that run-torun (R2R) control enjoys a higher level of maturity than time critical or real-time control due mainly to better sensing and actuation capabilities and the availability of a number of sequential control methods <ref> [7, 9, 12] </ref>. However all levels of plasma process optimization and control are far from a level of maturity required for industry-wide adoption and are thus receiving considerable attention as research topics in both industry and academia. <p> The technology must be developed to be generic and portable to the many facets of plasma processing and indeed semiconductor processing in general. Second, in analyzing the alternatives, it appears that none of the available sequential control algorithms cover the entire spectrum of process optimization and control <ref> [7, 12] </ref>. A more robust controller framework is needed, i.e., a framework that supports the complementary utilization of a number of sequential optimization and control algorithms. <p> In this paper we describe a generic, dynamic, adaptable and robust system for runto-run control, focusing on recent enhancements in the area of utilization of fuzzy databases. This description builds on previous presented in Moyne, et. al. <ref> [7] </ref>. Specifically, following this introduction, the logical view of the R2R control framework and environment is introduced in Section 2. The controller design is then presented in Section 3; this presentation includes a description of multi-branch control, and learning mechanism framework components. <p> a discussion of potential future research and development directions. 2.0 Control Environment The R2R control framework design described in this paper is part of a multilevel control system that includes real-time equipment and process control as well as pseudo-real-time process control components operating in conjunction with the sequential control component <ref> [5, 7, 11] </ref>. A typical implementation of this multilevel control system is illustrated in Fig. 1. Note that the process control problem in this case is decoupled into three distinct components: insitu process factory control, insitu process control, and discrete (R2R) product control. <p> Specifically, it is dependent on design goals and requirements as well as the state-of-the-art in design and implementation at each level. As an example, it is generally accepted that R2R control technology is much more mature in this arena than that of direct equipment and process control <ref> [7] </ref>. Therefore near-term development of a generic R2R control system must not be dependent on the existence of equipment or process (i.e., insitu) control. Eventually, however, as insitu control reaches maturity, the generic R2R system should provide a migration path for the incorporation of the additional control capability. <p> These requirements are summarized in Table 1; note that we have described these requirements in detail in previous work <ref> [7] </ref>. . <p> Process Optimization and Control Scheme The process optimization and control scheme (illustrated in Fig. 2) includes a multi-branch process control and optimization method for R2R control <ref> [7] </ref>. Note that the scheme is enabled by a GCC implementation. Each branch consists of a single optimization or control algorithm (e.g., a commercially available algorithm). These branches are utilized in complementary fashion to enhance the robustness of the controller. <p> The optimization / control scheme that was utilized incorporates three branches: (1) a multiple-input-multiple-output (MIMO) linear approximation control algorithm [12], (2) an optimization algorithm that utilizes (real-time) data 10 collected insitu to determine optimal runto-run process parameter settings <ref> [7] </ref>, and (3) a statistical optimization algorithm that utilizes runto-run data [9]. The utilization of all three threads in a single control scheme has not yet been implemented, however implementations of two threads have been applied to the process with successful results. <p> As an example, Fig. 5 illustrates successful R2R control of the process using a MIMO linear approximation control algorithm branch after optimizing the process with the algorithm that utilizes real-time data to determine optimal runto-run process parameter settings <ref> [7] </ref>. Note that the controller adjusts the process rapidly to compensate for both target shifts (etch rate target changed after run #8) as well as process perturbations such as sensor drift (oxygen flow sensor perturbed by .2 sccm after run #3).
Reference: [8] <author> J. Moyne and L. McAfee, Jr. </author> <title> "A generic cell controller for the automated VLSI manufacturing facility," </title> <journal> IEEE Transactions on Semiconductor Manufacturing, </journal> <volume> Vol. 5, No. 2, </volume> <pages> pp. 77-87, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: A unique feature of the GCC is its ability to recognize and adapt to unforeseen control events on-the-fly; the GCC guides the process engineer through the development / learning of a scheme for the servicing of the event <ref> [8] </ref>. Process Optimization and Control Scheme The process optimization and control scheme (illustrated in Fig. 2) includes a multi-branch process control and optimization method for R2R control [7]. Note that the scheme is enabled by a GCC implementation. <p> This knowledge base is incorporated / linked into the database of the GCC R2R control enabler, and the resulting system is thus able to enforce routing information relating to which control thread (s) to invoke for a particular process run (see Fig. 2) <ref> [4, 8] </ref>. Thus the database contains a schema for the storage of fuzzy and non-fuzzy rules as well as the interaction with the GCC database. It also contains a fuzzifier that categorizes process run data as necessary so that it may be utilized by the available rules [4].
Reference: [9] <author> C.W. Moreno, </author> <title> "Self-Learning Optimizing Control Software," </title> <booktitle> ISA Proceedings, </booktitle> <month> June </month> <year> 1986. </year>
Reference-contexts: Among the multiple process control levels, it is clear that run-torun (R2R) control enjoys a higher level of maturity than time critical or real-time control due mainly to better sensing and actuation capabilities and the availability of a number of sequential control methods <ref> [7, 9, 12] </ref>. However all levels of plasma process optimization and control are far from a level of maturity required for industry-wide adoption and are thus receiving considerable attention as research topics in both industry and academia. <p> The optimization / control scheme that was utilized incorporates three branches: (1) a multiple-input-multiple-output (MIMO) linear approximation control algorithm [12], (2) an optimization algorithm that utilizes (real-time) data 10 collected insitu to determine optimal runto-run process parameter settings [7], and (3) a statistical optimization algorithm that utilizes runto-run data <ref> [9] </ref>. The utilization of all three threads in a single control scheme has not yet been implemented, however implementations of two threads have been applied to the process with successful results.
Reference: [10] <institution> ORACLE Corporation, Red Bluffs, California. </institution>
Reference-contexts: The R2R controller was developed on a SUN Microsystems SPARC 10 workstation. The GCC database (including the fuzzy branch selection knowledge base) was developed using an ORACLE RDBMS and interacts with the rest of the controller via a Structured Query Language (SQL) interface <ref> [10] </ref>. The R2R controller communicates with a Techware II equipment controller via a TCP/IP over Ethernet communication link [13]. Experiments conducted for this case study involved the etching of a simple 3-layer PolySilicon / SiO 2 / Si wafer.
Reference: [11] <author> B. Rashap, P. Knargonekar, J. Grizzle, M. Elta, J. Freudenberg, and F. Terry, </author> <title> Real-Time Control of Reactive Ion Etching: Identification and Disturbance Rejection, </title> <booktitle> Proceedings IEEE CDC (1993). </booktitle>
Reference-contexts: The realization that the development of a comprehensive predictive physical process model set is probably years away has resulted in a general shift towards control that is based on empirical information (e.g., statistical process control (SPC) and neural networks) <ref> [2, 5, 7, 11] </ref>. In addition the lack of a critical mass of sensors and actuators for plasma process monitoring and 2 control has forced the utilization of innovative control techniques such as virtual sensors and multilevel hierarchical control [5, 7, 11]. <p> In addition the lack of a critical mass of sensors and actuators for plasma process monitoring and 2 control has forced the utilization of innovative control techniques such as virtual sensors and multilevel hierarchical control <ref> [5, 7, 11] </ref>. Among the multiple process control levels, it is clear that run-torun (R2R) control enjoys a higher level of maturity than time critical or real-time control due mainly to better sensing and actuation capabilities and the availability of a number of sequential control methods [7, 9, 12]. <p> a discussion of potential future research and development directions. 2.0 Control Environment The R2R control framework design described in this paper is part of a multilevel control system that includes real-time equipment and process control as well as pseudo-real-time process control components operating in conjunction with the sequential control component <ref> [5, 7, 11] </ref>. A typical implementation of this multilevel control system is illustrated in Fig. 1. Note that the process control problem in this case is decoupled into three distinct components: insitu process factory control, insitu process control, and discrete (R2R) product control.
Reference: [12] <author> E. Sachs and A. Hu, </author> <title> "Run by run process control: Combining SPC and Feedback Control," </title> <note> (submitted to) IEEE Transactions on Semiconductor Manufacturing, </note> <month> (October </month> <year> 1991). </year>
Reference-contexts: Among the multiple process control levels, it is clear that run-torun (R2R) control enjoys a higher level of maturity than time critical or real-time control due mainly to better sensing and actuation capabilities and the availability of a number of sequential control methods <ref> [7, 9, 12] </ref>. However all levels of plasma process optimization and control are far from a level of maturity required for industry-wide adoption and are thus receiving considerable attention as research topics in both industry and academia. <p> The technology must be developed to be generic and portable to the many facets of plasma processing and indeed semiconductor processing in general. Second, in analyzing the alternatives, it appears that none of the available sequential control algorithms cover the entire spectrum of process optimization and control <ref> [7, 12] </ref>. A more robust controller framework is needed, i.e., a framework that supports the complementary utilization of a number of sequential optimization and control algorithms. <p> The optimization / control scheme that was utilized incorporates three branches: (1) a multiple-input-multiple-output (MIMO) linear approximation control algorithm <ref> [12] </ref>, (2) an optimization algorithm that utilizes (real-time) data 10 collected insitu to determine optimal runto-run process parameter settings [7], and (3) a statistical optimization algorithm that utilizes runto-run data [9].
Reference: [13] <institution> Techware Systems, Richmond, British Columbia, Canada. </institution>
Reference-contexts: The GCC database (including the fuzzy branch selection knowledge base) was developed using an ORACLE RDBMS and interacts with the rest of the controller via a Structured Query Language (SQL) interface [10]. The R2R controller communicates with a Techware II equipment controller via a TCP/IP over Ethernet communication link <ref> [13] </ref>. Experiments conducted for this case study involved the etching of a simple 3-layer PolySilicon / SiO 2 / Si wafer. Recipe targets were etch rate and target over-etch, while adjustable recipe parameters were oxygen flow and etch time.
Reference: [14] <author> L. Zadeh, </author> <title> "Fuzzy Sets," </title> <booktitle> Information and Control 9 (1965). </booktitle>
Reference-contexts: A review of the requirements of the branch selection algorithm and the available methods for its implementation reveals that fuzzy logic is indeed an ideal mechanism for the development and use of the required knowledge base <ref> [3, 6, 14] </ref>. Specifically, the fuzzy system that has been developed is attractive for many reasons. First, it makes effective use of vague or nonexact information in conjunction with deterministic information, and it can provide suggestions with a limited amount of knowledge.
References-found: 14

