URL: ftp://ftp.cs.umd.edu/pub/papers/papers/3046.1/3046.1.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Title: Minimum-Latency Transport Protocols with Modulo-N Incarnation Numbers  
Author: A. Udaya Shankar David Lee 
Keyword: Connection management, cacheing, handshaking, real-time properties.  
Note: N 2 of misinterpretation of incarnation numbers. This restriction can be overcome with some additional cacheing.  To appear in IEEE/ACM Transactions on Networking, 1995. First author supported by NSF grant no. NCR-89-04590  
Address: College Park, Maryland 20742  Murray Hill, New Jersey 07974  
Affiliation: Institute for Advanced Computer Studies and Department of Computer Science University of Maryland  AT&T Bell Laboratories  
Pubnum: CS-TR-3046.1 UMIACS-TR-93-24.1  
Email: shankar@cs.umd.edu  lee@research.att.com  
Date: December 15, 1994  
Abstract: To provide reliable connection management, a transport protocol uses 3-way handshakes in which user incarnations are identified by bounded incarnation numbers from some modulo-N space. Cacheing schemes have been proposed to reduce the 3-way handshake to a 2-way handshake, providing the minimum latency desired for transaction-oriented applications. In this paper, we define a class of cacheing protocols and determine the minimum N and optimal cache residency time as a function of real-time constraints (e.g. message lifetime, incarnation creation rate, inactivity duration, etc.). The protocols use the client-server architecture and handle failures and recoveries. Both clients and servers generate incarnation numbers from a local counter (e.g. clock). These protocols assume a maximum duration for each incarnation; without this assumption, there is a very small probability ( 1 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. W. Biersack and D. C. Feldmeier. </author> <title> A Timer-Based Connection Management Protocol with Synchronized Clocks and its Verification. </title> <booktitle> Computer Networks and ISDN Systems, </booktitle> <month> July </month> <year> 1993. </year>
Reference-contexts: This is key to ensuring that even if N does not satisfy the lower bound with respect to maximum incarnation lifetime, the probability of misinterpretation is very low. Timer-based techniques provide another approach for achieving minimum-latency connection-establishment <ref> [1, 11, 4, 7, 3] </ref>. Here also, a server is required to maintain information on each client it has served for a certain duration. The duration is roughly comparable to the optimal duration in our cache-based mechanism (the major component in both is the message lifetime).
Reference: [2] <author> R. Braden. </author> <title> Extending TCP for Transactions Concepts. Request for Comment RFC-1379, </title> <institution> Network Information Center, </institution> <month> November </month> <year> 1992. </year>
Reference-contexts: However, a cacheing scheme is feasible, and several have been proposed (e.g. [5]), culminating recently in a proposed modification to TCP <ref> [2] </ref>. In this paper, we define a cache-based transport protocol and determine the relationship between various parameters (N , message lifetime, incarnation creation rate, inactivity duration, cache residency times, etc.) that ensures correct operation. The protocol uses an incarnation number generator that is periodically saved on (fail-proof ) stable storage. <p> Our protocol uses modulo-N numbers to identify incarnations. We have obtained the minimum value of N that guarantees correct operation. To our knowledge, no such bound has been previously presented in the general setting we have considered. Unlike other cacheing protocols proposed <ref> [2] </ref>, our protocol does not use a cache entry if it is older than the maximum message lifetime plus maximum client wait duration.
Reference: [3] <author> D. R. Cheriton. VMTP: </author> <title> A Transport Protocol for the Next Generation of Communication Systems. </title> <booktitle> In Proceedings ACM SIGCOMM '86, </booktitle> <pages> pages 406-415, </pages> <address> Stowe, Vermont, </address> <month> August </month> <year> 1986. </year>
Reference-contexts: Another approach to minimum-latency transport protocols is provided by so-called timer-based mechanisms (e.g. SCMP [7], Delta-t [4, 11], VMTP <ref> [3] </ref>). Here also, a server is required to maintain per-client information for a certain duration that depends on message lifetime. However if the entry is purged before this time, there is no backup 3-way handshake. <p> This is key to ensuring that even if N does not satisfy the lower bound with respect to maximum incarnation lifetime, the probability of misinterpretation is very low. Timer-based techniques provide another approach for achieving minimum-latency connection-establishment <ref> [1, 11, 4, 7, 3] </ref>. Here also, a server is required to maintain information on each client it has served for a certain duration. The duration is roughly comparable to the optimal duration in our cache-based mechanism (the major component in both is the message lifetime).
Reference: [4] <author> J. G. Fletcher and R. W. Watson. </author> <title> Mechanisms for a Reliable Timer Based Protocol. </title> <journal> Computer Networks, </journal> 2(4/5):271-290, September 1978. 
Reference-contexts: Another approach to minimum-latency transport protocols is provided by so-called timer-based mechanisms (e.g. SCMP [7], Delta-t <ref> [4, 11] </ref>, VMTP [3]). Here also, a server is required to maintain per-client information for a certain duration that depends on message lifetime. However if the entry is purged before this time, there is no backup 3-way handshake. <p> This is key to ensuring that even if N does not satisfy the lower bound with respect to maximum incarnation lifetime, the probability of misinterpretation is very low. Timer-based techniques provide another approach for achieving minimum-latency connection-establishment <ref> [1, 11, 4, 7, 3] </ref>. Here also, a server is required to maintain information on each client it has served for a certain duration. The duration is roughly comparable to the optimal duration in our cache-based mechanism (the major component in both is the message lifetime).
Reference: [5] <author> L. Garlick, R. Rom, and J. Postel. </author> <title> Issues in Reliable Host-to-Host Protocols. </title> <booktitle> In Second Berkeley Workshop on Distributed Data Management and Computer Networks, </booktitle> <month> May </month> <year> 1977. </year>
Reference-contexts: A server cannot be expected to indefinitely remember the last incarnation number of every client to which it was connected, due to the enormous number of clients in a typical internetwork. However, a cacheing scheme is feasible, and several have been proposed (e.g. <ref> [5] </ref>), culminating recently in a proposed modification to TCP [2]. In this paper, we define a cache-based transport protocol and determine the relationship between various parameters (N , message lifetime, incarnation creation rate, inactivity duration, cache residency times, etc.) that ensures correct operation.
Reference: [6] <author> International Standards Organization. </author> <title> Information Processing Systems Open Systems Interconnection Transport Protocol Specification Addendum 2: Class four operation over connectionless network service. International Standard ISO 8073/DAD 2, ISO, </title> <month> April </month> <year> 1989. </year>
Reference-contexts: The notion of incarnations is essential for expressing desired correctness properties, e.g. a client incarnation becomes open to at most one server incarnation. (Incarnations and correctness properties are defined precisely below.) Traditional transport protocols, including the well-known TCP [8] and TP4 <ref> [6] </ref>, identify successive incarnations by increasing (though not necessarily successive) incarnation numbers from some modulo-N space 2 .
Reference: [7] <author> B. Liskov, L. Shrira, and J. Wroclawski. </author> <title> Efficient At-Most-Once Messages Based on Synchronized Clocks. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 9(2) </volume> <pages> 125-142, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: Another approach to minimum-latency transport protocols is provided by so-called timer-based mechanisms (e.g. SCMP <ref> [7] </ref>, Delta-t [4, 11], VMTP [3]). Here also, a server is required to maintain per-client information for a certain duration that depends on message lifetime. However if the entry is purged before this time, there is no backup 3-way handshake. <p> This is key to ensuring that even if N does not satisfy the lower bound with respect to maximum incarnation lifetime, the probability of misinterpretation is very low. Timer-based techniques provide another approach for achieving minimum-latency connection-establishment <ref> [1, 11, 4, 7, 3] </ref>. Here also, a server is required to maintain information on each client it has served for a certain duration. The duration is roughly comparable to the optimal duration in our cache-based mechanism (the major component in both is the message lifetime). <p> In most timer-based protocols, if a client's entry is removed before the specified duration (e.g. due to a crash or memory limitation), then the server can incorrectly accept old connection requests of that client. SCMP <ref> [7] </ref> is an exception: by assuming synchronized clocks, it maintains correctness but it may reject new connections for a period of time depending on clock skews and other parameters. In any case, timer-based approaches do not have a back-up 3-way handshake.
Reference: [8] <author> J. Postel. </author> <title> Transmission Control Protocol: DARPA Internet Program Protocol Specification. Request for Comment RFC-793, </title> <institution> STD-007, Network Information Center, </institution> <month> September </month> <year> 1981. </year>
Reference-contexts: The notion of incarnations is essential for expressing desired correctness properties, e.g. a client incarnation becomes open to at most one server incarnation. (Incarnations and correctness properties are defined precisely below.) Traditional transport protocols, including the well-known TCP <ref> [8] </ref> and TP4 [6], identify successive incarnations by increasing (though not necessarily successive) incarnation numbers from some modulo-N space 2 . <p> Another feature of traditional transport protocols is that an entity stores a remote incarnation's number only while it is connected to the remote incarnation. This necessitates a 3-way handshake for connection establishment <ref> [8, 10] </ref>. A client that wants to connect to a server sends a connection request with its incarnation number, say x. When the server receives this, it responds by sending a response containing x and a server incarnation number, say y.
Reference: [9] <author> A.U. Shankar. </author> <title> Modular Design Principles for Protocols with an Application to the Transport Layer. </title> <booktitle> Proceedings of the IEEE, </booktitle> <month> December </month> <year> 1991. </year>
Reference-contexts: It is trivial to add the data transfer function to the connection management protocol defined here <ref> [9] </ref>. Each message is either a primary message or a secondary message. A primary message is sent repeatedly 11 until a response is received or the maximum wait duration has elapsed. A secondary message is sent only in response to the reception of a primary message.
Reference: [10] <author> C.A. Sunshine and Y.K. Dalal. </author> <title> Connection Management in Transport Protocols. </title> <journal> Computer Networks, </journal> <volume> 2(6), </volume> <month> December </month> <year> 1978. </year>
Reference-contexts: Another feature of traditional transport protocols is that an entity stores a remote incarnation's number only while it is connected to the remote incarnation. This necessitates a 3-way handshake for connection establishment <ref> [8, 10] </ref>. A client that wants to connect to a server sends a connection request with its incarnation number, say x. When the server receives this, it responds by sending a response containing x and a server incarnation number, say y.
Reference: [11] <author> R. W. Watson. </author> <title> The Delta-t Transport Protocol: Features and Experience. </title> <booktitle> In IEEE 14th Conferance on Local Computer Networks, </booktitle> <pages> pages 399-407, </pages> <address> Minneapolis, MN, </address> <month> October </month> <year> 1989. </year> <month> 19 </month>
Reference-contexts: Another approach to minimum-latency transport protocols is provided by so-called timer-based mechanisms (e.g. SCMP [7], Delta-t <ref> [4, 11] </ref>, VMTP [3]). Here also, a server is required to maintain per-client information for a certain duration that depends on message lifetime. However if the entry is purged before this time, there is no backup 3-way handshake. <p> This is key to ensuring that even if N does not satisfy the lower bound with respect to maximum incarnation lifetime, the probability of misinterpretation is very low. Timer-based techniques provide another approach for achieving minimum-latency connection-establishment <ref> [1, 11, 4, 7, 3] </ref>. Here also, a server is required to maintain information on each client it has served for a certain duration. The duration is roughly comparable to the optimal duration in our cache-based mechanism (the major component in both is the message lifetime).
References-found: 11

