URL: http://www.research.microsoft.com/crypto/papers/ssh.ps
Refering-URL: http://www.research.microsoft.com/crypto/
Root-URL: http://www.research.microsoft.com
Title: Secret Sharing Homomorphisms: Keeping Shares of a Secret Secret (Extended Abstract)  
Author: Josh Cohen Benaloh 
Abstract: In 1979, Blackley and Shamir independently proposed schemes by which a secret can be divided into many shares which can be distributed to mutually suspicious agents. This paper describes a homomorphism property attained by these and several other secret sharing schemes which allows multiple secrets to be combined by direct computation on shares. This property reduces the need for trust among agents and allows secret sharing to be applied to many new problems. One application described here gives a method of verifiable secret sharing which is much simpler and more efficient than previous schemes. A second application is described which gives a fault-tolerant method of holding verifiable secret-ballot elections. 
Abstract-found: 1
Intro-found: 1
Reference: [Adl79] <author> Adleman, L. </author> <title> "Subexponential Algorithm for The Discrete Logarithm Problem." </title> <booktitle> Proc. 20 th IEEE Symp. on Foundations of Computer Science, </booktitle> <address> San Juan, PR (Oct. </address> <year> 1979), </year> <pages> 55-60. </pages>
Reference-contexts: In general, discrete logarithms may be difficult to compute. However, if p is small or of one of a variety of special forms, the problem is tractable (see [PoHe78], <ref> [Adl79] </ref>, [COS86]). It should be emphasized that such special cases for p do not in any way weaken the security of our schemes. The security is not cryptographic, but rather is information theoretic.
Reference: [AsBl80] <author> Asmuth, C. and Bloom, J. </author> <title> "A Modular Approach to Key Safeguarding." </title> <institution> Texas A&M University, Departement of Mathematics, College Station, </institution> <address> TX (1980). </address>
Reference-contexts: Some other techniques can also be easily seen to produce (+; +)-composite (k; n) threshold schemes. See [Bla79], <ref> [AsBl80] </ref>, and [Kot84] for some further examples. What if the super-secret is not the sum of the sub-secrets? Shamir's scheme is not (fi; fi)-composite. This is because the product of two non-constant polynomials is of higher degree than the factors.
Reference: [BeYu86] <author> Benaloh, J. and Yung, M. </author> <title> "Distributing the Power of a Govern--ment to Enhance the Privacy of Voters." </title> <booktitle> Proc. 5 th ACM Symp. on Principles of Distributed Computing, </booktitle> <address> Calgary, AB (Aug. </address> <year> 1986). </year>
Reference-contexts: Since the encryptions of shares are made public, the security is no longer information theoretic, but rather depends upon a cryptographic assumption. The encryption function used here was introduced in [CoFi85] and draws upon the ideas of probabilistic encryption found in [GoMi84]. The function is also described in <ref> [BeYu86] </ref>. Before beginning, a prime number r is fixed such that r jSj | the size of the secret domain. To develop an encryption function E, one selects primes p and q such that rj (p 1) and r6 j (q 1). Let N be the product N = pq. <p> This may be accomplished by interactive proof techniques described in [CoFi85] and <ref> [BeYu86] </ref>. To use E to encrypt a value s, one randomly selects an x and forms E (s; x; y; N ) = y s x r mod N . <p> Although, there is high confidence in the correctness of the tally in such an election, the government is a "trusted authority" with the ability to see every vote and thereby compromise every voter's privacy. In <ref> [BeYu86] </ref>, the government is replaced by a set of "tellers" such that it is necessary for all tellers to conspire in order to compromise a voter's privacy.
Reference: [Bla79] <author> Blakley, G. </author> <title> "Safeguarding Cryptographic Keys." </title> <booktitle> Proc. AFIPS 1979 National Computer Conference, </booktitle> <address> New York, NY (June 1979), </address> <pages> 313-317. </pages>
Reference-contexts: Some other techniques can also be easily seen to produce (+; +)-composite (k; n) threshold schemes. See <ref> [Bla79] </ref>, [AsBl80], and [Kot84] for some further examples. What if the super-secret is not the sum of the sub-secrets? Shamir's scheme is not (fi; fi)-composite. This is because the product of two non-constant polynomials is of higher degree than the factors.
Reference: [BlMe85] <author> Blakley, G. and Meadows, C. </author> <title> "A Database Encryption Scheme Which Allows the Computation of Statistics Using Encrypted Data." </title> <booktitle> Proc. IEEE Symposium on Computer Security and Privacy, </booktitle> <address> Oakland, CA (Apr. </address> <year> 1985). </year>
Reference-contexts: The parties want to determine the super-secret without revealing their sub-secrets and without depending upon cryptographic assumptions. Cryptographic techniques for computing with encrypted data have been studied in [RAD78], [DLM82], [Yao82], <ref> [BlMe85] </ref>, and [Fei85], for example. This approach to the problem, however, depends heavily upon cryptographic assumptions such as the difficulty of factoring.
Reference: [CGMA85] <author> Chor, B., Goldwasser, S., Micali, S., and Awerbuch, B. </author> <title> "Verifiable Secret Sharing and Achieving Simultaneity in the Presence of Faults." </title> <booktitle> Proc. 26 th IEEE Symp. on Foundations of Computer Science, </booktitle> <address> Portland, OR (Oct. </address> <year> 1985), </year> <pages> 383-395. </pages>
Reference-contexts: However, there is no known efficient method for determining s from its encryption when the factors of N are not known. 4.1 Verifiable Secret Sharing The first application gives a simple and efficient method for verifiable secret sharing. This problem was first described in <ref> [CGMA85] </ref> and the application of secret sharing homomorphisms to this problem was developed as a result of an observation made by Oded Goldreich.
Reference: [CoFi85] <author> Cohen, J. and Fischer, M. </author> <title> "A Robust and Verifiable Cryptographically Secure Election Scheme." </title> <booktitle> Proc. 26 th IEEE Symp. on Foundations of Computer Science, </booktitle> <address> Portland, OR (Oct. </address> <year> 1985), </year> <pages> 372-382. </pages>
Reference-contexts: Since the encryptions of shares are made public, the security is no longer information theoretic, but rather depends upon a cryptographic assumption. The encryption function used here was introduced in <ref> [CoFi85] </ref> and draws upon the ideas of probabilistic encryption found in [GoMi84]. The function is also described in [BeYu86]. Before beginning, a prime number r is fixed such that r jSj | the size of the secret domain. <p> This may be accomplished by interactive proof techniques described in <ref> [CoFi85] </ref> and [BeYu86]. To use E to encrypt a value s, one randomly selects an x and forms E (s; x; y; N ) = y s x r mod N . <p> In <ref> [CoFi85] </ref>, an election scheme is presented which allows a government to hold an election in which the legitimacy of the votes and the tally is verified by means of interactive proofs. <p> The tally of the election will be the sum of the voters' secrets. After votes are cast, each teller simply adds the vote-shares it has received using the (single government) verifiable election scheme of <ref> [CoFi85] </ref>. Since the (k; n) threshold scheme has the (+; +)-homomorphism property, this sum of vote-shares is itself a share of the sum (tally) of the votes. Thus, once k or more tellers release their sub-tallies, the overall election tally can be determined.
Reference: [Coh86] <author> Cohen, J. </author> <title> "Improving Privacy in Cryptographic Elections." </title> <institution> TR-454, Yale University, Departement of Computer Science, </institution> <address> New Haven, CT (Feb. </address> <year> 1986). </year>
Reference-contexts: The basic election scheme described in these papers can, however, be embedded within a (+; +)-composite (k; n) threshold scheme (in particular, in Shamir's scheme) as suggested by the outline below. This extension is also described in <ref> [Coh86] </ref>. Instead of a single government, n sub-governments (or tellers) each hold a sub-election. Each voter chooses either 0 or 1 as a secret value (0 indicating a no vote, 1 indicating a yes vote) and distributes one share of the secret vote to each of the n tellers.
Reference: [COS86] <author> Coppersmith, D., Odlyzko, A., and Schroeppel, R. </author> <title> "Discrete Logarithms in GF (p)." </title> <journal> Algorithmica, </journal> <volume> 1 (1986), </volume> <pages> 1-15. </pages>
Reference-contexts: In general, discrete logarithms may be difficult to compute. However, if p is small or of one of a variety of special forms, the problem is tractable (see [PoHe78], [Adl79], <ref> [COS86] </ref>). It should be emphasized that such special cases for p do not in any way weaken the security of our schemes. The security is not cryptographic, but rather is information theoretic.
Reference: [DLM82] <author> DeMillo, R., Lynch, N., and Merritt, M. </author> <title> "Cryptographic Protocols." </title> <booktitle> Proc. 14 th ACM Symp. on Theory of Computing, </booktitle> <address> San Fran-cisco, CA (May 1982), </address> <pages> 383-400. </pages>
Reference-contexts: The parties want to determine the super-secret without revealing their sub-secrets and without depending upon cryptographic assumptions. Cryptographic techniques for computing with encrypted data have been studied in [RAD78], <ref> [DLM82] </ref>, [Yao82], [BlMe85], and [Fei85], for example. This approach to the problem, however, depends heavily upon cryptographic assumptions such as the difficulty of factoring.
Reference: [Fei85] <author> Feigenbaum, J. </author> <title> "Encrypting Problem Instances or Can You Take Advantage of Someone Without Having to Trust Him", </title> <booktitle> Proc. Crypto '85, </booktitle> <address> Santa Barbara, CA (Aug. </address> <year> 1985), </year> <pages> 477-488. </pages> <note> Published as Advances in Cryptology, </note> <editor> ed. by H. </editor> <booktitle> Williams in Lecture Notes in Computer Science, </booktitle> <volume> vol. 218, </volume> <editor> ed. by G. Goos and J. Hartmanis. </editor> <publisher> Springer-Verlag, </publisher> <address> New York (1985). </address>
Reference-contexts: The parties want to determine the super-secret without revealing their sub-secrets and without depending upon cryptographic assumptions. Cryptographic techniques for computing with encrypted data have been studied in [RAD78], [DLM82], [Yao82], [BlMe85], and <ref> [Fei85] </ref>, for example. This approach to the problem, however, depends heavily upon cryptographic assumptions such as the difficulty of factoring.
Reference: [FMR84] <author> Fischer, M., Micali, S., and Rackoff, C. </author> <title> "A Secure Protocol for the Oblivious Transfer." </title> <booktitle> Presented at Eurocrypt84, Paris, France (Apr. 1984). (Not in proceedings.) </booktitle>
Reference-contexts: This suggests the following outline of an interactive proof that a polynomial P , given by its (encrypted) values at n distinct points, is of degree at most d (see <ref> [FMR84] </ref> and [GMR85] for a description of interactive proofs and applications). 1. Encryptions of the values of the points that describe P are released by the prover. 2. Encryptions of many (say 100) additional random polynomials again of degree at most d are also released by the prover. 3.
Reference: [GMR85] <author> Goldwasser, S., Micali, S., and Rackoff C. </author> <title> "The Knowledge of Complexity of Interactive Proof-Systems." </title> <booktitle> Proc. 17 th ACM Symp. on Theory of Computing, </booktitle> <address> Providence, RI (May 1985), </address> <pages> 291-304. </pages>
Reference-contexts: This suggests the following outline of an interactive proof that a polynomial P , given by its (encrypted) values at n distinct points, is of degree at most d (see [FMR84] and <ref> [GMR85] </ref> for a description of interactive proofs and applications). 1. Encryptions of the values of the points that describe P are released by the prover. 2. Encryptions of many (say 100) additional random polynomials again of degree at most d are also released by the prover. 3.
Reference: [GoMi84] <author> Goldwasser, S. and Micali, S. </author> <title> "Probabilistic Encryption." </title> <journal> J. Comput. System Sci. </journal> <volume> 28, </volume> <year> (1984), </year> <pages> 270-299. </pages>
Reference-contexts: Since the encryptions of shares are made public, the security is no longer information theoretic, but rather depends upon a cryptographic assumption. The encryption function used here was introduced in [CoFi85] and draws upon the ideas of probabilistic encryption found in <ref> [GoMi84] </ref>. The function is also described in [BeYu86]. Before beginning, a prime number r is fixed such that r jSj | the size of the secret domain. To develop an encryption function E, one selects primes p and q such that rj (p 1) and r6 j (q 1).
Reference: [Kot84] <author> Kothari, S. </author> <title> "Generalized Linear Threshold Scheme." </title> <booktitle> Proc. Crypto '84, </booktitle> <address> Santa Barbara, CA (Aug. </address> <year> 1984), </year> <pages> 231-241. </pages> <note> Published as Advances in Cryptology, </note> <editor> ed. by G. Blakely and D. </editor> <booktitle> Chaum in Lecture Notes in Computer Science, </booktitle> <volume> vol. 196, </volume> <editor> ed. by G. Goos and J. Hart-manis. </editor> <publisher> Springer-Verlag, </publisher> <address> New York (1985). </address>
Reference-contexts: Shamir's definition of a (k; n) threshold scheme does not allow for such partial information, but Kothari in <ref> [Kot84] </ref> generalizes Shamir's definition slightly to allow for the possibility of a priori information about a secret. <p> Some other techniques can also be easily seen to produce (+; +)-composite (k; n) threshold schemes. See [Bla79], [AsBl80], and <ref> [Kot84] </ref> for some further examples. What if the super-secret is not the sum of the sub-secrets? Shamir's scheme is not (fi; fi)-composite. This is because the product of two non-constant polynomials is of higher degree than the factors.
Reference: [PoHe78] <author> Pohlig, S. and Hellman, M. </author> <title> "An Improved Algorithm for Computing Logarithms Over GF(2) and Its Cryptographic Significance." </title> <journal> IEEE Trans. on Information Theory 24, </journal> <month> 1 (Jan. </month> <year> 1978), </year> <pages> 106-110. </pages>
Reference-contexts: In general, discrete logarithms may be difficult to compute. However, if p is small or of one of a variety of special forms, the problem is tractable (see <ref> [PoHe78] </ref>, [Adl79], [COS86]). It should be emphasized that such special cases for p do not in any way weaken the security of our schemes. The security is not cryptographic, but rather is information theoretic.
Reference: [RAD78] <author> Rivest, R., Adleman, L., and Dertouzos, M. </author> <title> "On Data Banks and Privacy Homomorphisms." Foundations of Secure Computation, </title> <editor> ed. by R. A. DeMillo, et. al. </editor> <publisher> Academic Press, </publisher> <address> New York (1978), </address> <pages> 169-179. </pages>
Reference-contexts: The parties want to determine the super-secret without revealing their sub-secrets and without depending upon cryptographic assumptions. Cryptographic techniques for computing with encrypted data have been studied in <ref> [RAD78] </ref>, [DLM82], [Yao82], [BlMe85], and [Fei85], for example. This approach to the problem, however, depends heavily upon cryptographic assumptions such as the difficulty of factoring.
Reference: [Sha79] <author> Shamir, A. </author> <title> "How to Share a Secret." </title> <journal> Comm. ACM 22, </journal> <volume> 11 (Nov. </volume> <year> 1979), </year> <pages> 612-613. </pages>
Reference-contexts: If k or more of the agents reveal their composite tally-shares, then the election tally is publically revealed. A conspiracy of at least k dishonest agents is required, however, in order to obtain information about an individual vote. 2 The Homomorphism Property Shamir in <ref> [Sha79] </ref> defines a (k; n) threshold scheme to be a division of a secret D into n pieces D 1 ; : : : ; D n in such a way that: (1) knowledge of any k or more D i pieces makes D easily computable; (2) knowledge of any k1
Reference: [Yao82] <author> Yao, A. </author> <title> "Protocols for Secure Computations." </title> <booktitle> Proc. 23 rd IEEE Symp. on Foundations of Computer Science, </booktitle> <address> Chicago, IL (Nov. </address> <year> 1982), </year> <pages> 160-164. </pages>
Reference-contexts: The parties want to determine the super-secret without revealing their sub-secrets and without depending upon cryptographic assumptions. Cryptographic techniques for computing with encrypted data have been studied in [RAD78], [DLM82], <ref> [Yao82] </ref>, [BlMe85], and [Fei85], for example. This approach to the problem, however, depends heavily upon cryptographic assumptions such as the difficulty of factoring.
References-found: 19

