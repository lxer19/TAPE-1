URL: http://www.cs.ucsd.edu/users/ptucker/publications/mmtech.ps
Refering-URL: http://www.cs.ucsd.edu/users/ptucker/pubs.html
Root-URL: http://www.cs.ucsd.edu
Title: Minimax Programs  
Date: 16, 1997  
Note: June  
Abstract: T. C. Hu and P. A. Tucker fl Department of Computer Science and Engineering, School of Engineering, University of California, San Diego La Jolla, CA 92093 hu@cs.ucsd.edu ptucker@cs.ucsd.edu Technical Report CS97-547 Abstract We introduce an optimization problem called a minimax program that is similar to a linear program, except that the addition operator is replaced in the constraint equations by the maximum operator. We clarify the relation of this problem to some better-known problems. We identify an interesting special case and present an efficient algorithm for its solution.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Cormen, T. H., Leiserson, C. E., and Rivest, R. L. </author> <title> Introduction to Algorithms. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1990. </year> <month> 18 </month>
Reference-contexts: For a DAG with a single source, such as our network, there is a well known algorithm (as described in Cormen, et al. <ref> [1] </ref>) that merely takes the vertices in order v 0 ; : : : ; v m1 , relaxing all arcs once, and requires only O (E) time. (Relaxation of an arc (i; j) involves conditionally updating d (j) to d (i) + w (i; j) if that operation decreases d
Reference: [2] <author> Fulkerson, D. R., and Gross, O. A. </author> <title> Incidence matrices and interval graphs. </title> <journal> Pacific Journal of Mathematics 15 (1965), </journal> <pages> 835-855. </pages>
Reference-contexts: The interval graph property is intimately related to the consecutive ones property of (0; 1) matrices <ref> [2] </ref>. A matrix has this property if its rows can be permuted such that all ones in every column are consecutive. <p> The graph proximity corresponding to the intervals can model physical or temporal proximity constraints in many application contexts. For example, Fulkerson and Gross's paper <ref> [2] </ref> arose out of a study of genetic mutations where the interval property modeled adjacency in a DNA strand. A number of scheduling problems, whether for rooms or processors, turn out to have the interval graph property 6 when represented as a graph coloring problem where edges indicate incompat-ibilities.
Reference: [3] <author> Hoffman, A. J. </author> <title> On simple combinatorial problems. </title> <booktitle> Discrete Mathematics 106/107 (1992), </booktitle> <pages> 285-289. </pages>
Reference-contexts: This simple algorithm does not work for weighted set cover. Hoffman <ref> [3] </ref> identifies a broader range of 7 cases (including weights) for which a greedy algorithm does find the optimal solution to a combinatoric problem in integer program formulation. 4.2 Bitonic Columns One natural generalization of the consecutive ones property of a matrix is what we call the mountain property: for some
Reference: [4] <author> Huang, Y. </author> <title> Software Dependability Measurement during Testing. </title> <type> PhD thesis, </type> <institution> University of California, </institution> <address> San Diego, La Jolla, CA, </address> <year> 1994. </year>
Reference-contexts: Minimax programs can arise as a natural problem formulation in domains such as software testing by a mixture of test methods <ref> [4] </ref>, an application to be discussed Section 6. It is convenient to define a standard form for minimax programs. First it should be observed that there is no need for the presence of negative coefficients in the cost or requirement vectors, or in the constraint matrix A. <p> Huang's thesis <ref> [4] </ref> on software dependability measurement investigated a metric called trustability (T ) that represents the degree of confidence that a program being tested is free of faults.
Reference: [5] <author> Keil, J. M. </author> <title> Finding Hamiltonian circuits in interval graphs. </title> <booktitle> Information Processing Letters 20 (1985), </booktitle> <pages> 201-206. </pages>
Reference-contexts: be obtained with a time complexity less than that of the reduction to set cover. 4 A Fast Special Case Among NP-complete problems that have a graph representation it is known that instances with the interval graph property can often be solved efficiently, even in linear time (e.g., Hamilton circuit <ref> [5] </ref> and vertex cover [6]). The interval graph property is intimately related to the consecutive ones property of (0; 1) matrices [2]. A matrix has this property if its rows can be permuted such that all ones in every column are consecutive.
Reference: [6] <author> Marathe, M. V., Ravi, R., and Rangan, C. P. </author> <title> Generalized vertex covering in interval graphs. </title> <booktitle> Discrete Applied Mathematics 39 (1992), </booktitle> <pages> 87-93. </pages>
Reference-contexts: time complexity less than that of the reduction to set cover. 4 A Fast Special Case Among NP-complete problems that have a graph representation it is known that instances with the interval graph property can often be solved efficiently, even in linear time (e.g., Hamilton circuit [5] and vertex cover <ref> [6] </ref>). The interval graph property is intimately related to the consecutive ones property of (0; 1) matrices [2]. A matrix has this property if its rows can be permuted such that all ones in every column are consecutive.
Reference: [7] <author> Tucker, P. A. </author> <title> Efficient testing for a bitonic column property. </title> <type> Tech. Rep. </type> <institution> CS97-546, Department of Computer Science and Engineering, University of California, </institution> <address> San Diego, </address> <month> June </month> <year> 1997. </year> <month> 19 </month>
Reference-contexts: A separate paper <ref> [7] </ref> introduces an efficient algorithm for recognition of matrices with this property. The rest of this paper is organized as follows. Section 2 defines a minimax program. Section 3 describes its relation to other problems. Section 4 identifies an interesting and practical special case that can be solved quickly. <p> This situation is amenable to solution by an efficient algorithm, described below. A companion paper <ref> [7] </ref> gives an O (mn log m) algorithm for finding such a permutation, if one exists. Here we assume that the input is presented as a cost matrix in conforming permutation. The algorithm falls into the dynamic programming paradigm; consequently it can be conceptualized as iteratively operating on a table. <p> The algorithm takes as input a cost matrix obtained from the constraint matrix by the identity c ij = 1=a ij . We assume that the rows of the cost matrix are in a permutation where the valley property holds. If necessary, the algorithm given by Tucker <ref> [7] </ref> can be used as preprocessing to obtain a conforming permutation. The algorithm begins by constructing a network data structure consisting of m + 1 vertices, indexed 0; 1; : : : ; m.
References-found: 7

