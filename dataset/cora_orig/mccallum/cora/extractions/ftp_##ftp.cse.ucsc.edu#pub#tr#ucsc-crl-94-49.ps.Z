URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-94-49.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Title: Performance Evaluation of Systems with Restricted Overlap of Resources  
Author: David E. Levy David E. Levy is Alexandre Brandwajn Patrick E. Mantey Edwin J. Lau Dean 
Degree: A dissertation submitted in partial satisfaction of the requirements for the degree of Doctor of Philosophy in Computer Engineering by  approved:  
Note: The dissertation of  
Date: September 1994  
Affiliation: University of California Santa Cruz  of Graduate Studies and Research  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Allen, </author> <title> A.O. Probability, Statistics, and Queueing Theory. </title> <publisher> Academic Press, </publisher> <year> 1990. </year>
Reference-contexts: The solution is found in the balance equations which can be rewritten by substituting the conditional probabilities with their definition in terms of the joint probabilities, i.e. p (n; S) = p n (S) p (n); see for example <ref> [1] </ref>, and the definition of p (n). <p> The idea is to adjust the average queueing time, calculated under exponential assumptions, by a factor which accounts for the variability. This technique, outlined in <ref> [1] </ref>, is based on empirical observations of Allen and Cunneen, however [1] recognizes its formulation has been used by others. 33 We start by assuming the existence of an underlying "exponential form" for the average waiting time, W q , of the restricted overlap solution. <p> The idea is to adjust the average queueing time, calculated under exponential assumptions, by a factor which accounts for the variability. This technique, outlined in <ref> [1] </ref>, is based on empirical observations of Allen and Cunneen, however [1] recognizes its formulation has been used by others. 33 We start by assuming the existence of an underlying "exponential form" for the average waiting time, W q , of the restricted overlap solution. <p> Now, we can use the solution to a multi-server queue <ref> [1] </ref> to solve for the probability of n in the system: p n = n! for D n &gt; 1 and (pc) n p 0 for n &gt; D and where p 0 = [ i=0 i! (pc) D ] 1 Note for our parameter choices, p n is a rapidly
Reference: [2] <author> Amdahl Corporation. </author> <title> Amdahl 6100 Storage Processor. </title> <type> Announcement, </type> <year> 1988. </year>
Reference-contexts: In the late 1980's, a new generation of mainframe I/O controllers were introduced <ref> [33, 2] </ref> which capitalize on an intelligent multiported cached design. When a desired record is not found in the the cache, the cache storage buffers the disk request along with the remaining records on the track following the desired record. <p> The miss probability is varied between 10% to 40% to demonstrate its effect on the response time. The cache write policy is assumed to be write-back, e.g. in IBM mainframe class disk controllers <ref> [33, 2] </ref>, writes can be treated as DASD Fast Writes [33]. The write-back policy 24 implies all write requests experience the service of stage I I and we agglomerate the time to do the asynchronous transfer to disk into stage I II , as mentioned previously.
Reference: [3] <author> Baccelli, F., A.M. Makowski, and A. Schwartz. </author> <title> "The Fork-Join Queue and Related Systems with Synchronization Contraints: Stochastic Ordering and Computable Bounds". </title> <booktitle> Advances in Applied Probability, </booktitle> <volume> (21), </volume> <year> 1989. </year>
Reference-contexts: Our approach explicitly deals with the parallel service of the cache and staging activity subject to the operating system constraints. The fork-join queueing systems <ref> [3, 51] </ref> are also applied to solving parallel processing problems. However, these models typically deal with breaking, forking, a task into subtasks which individually queue at separate servers. The task is then considered complete when all of the subtasks complete service, join. <p> work on analytic performance models of disk arrays, including RAID-5, have not accounted for the presence of a cached controller [43, 72, 15] or ignored the overlapped service which exists between the cache and data staging [49]. 46 The model presented in [43] uses an approach based on fork-join queueing <ref> [3] </ref>. The model is a closed queueing system in which requests are generated by a set of processes; each process generating a request upon the completion of the previous request. This type of model is a better representation of scientific and time-sharing systems.
Reference: [4] <author> Berson, S., S. Ghandeharizadeh, R. Muntz, and X. Ju. </author> <title> "Staggered Striping in Multimedia Information Systems". </title> <institution> UCLA Computer Science Department Technical Report, (CSD-930042), </institution> <month> December </month> <year> 1993. </year>
Reference-contexts: The use of distributed storage has the advantage of reducing contention at a single storage device. The distributed I/O architecture can also provide high data rates when objects are striped across the storage units, see e.g. <ref> [38, 13, 4, 73] </ref>. The goal of this chapter is to present an approach to multimedia storage for the kiosk application group architecture and evaluate its performance.
Reference: [5] <author> Boxma, O.J. </author> <title> and W.P. Groenendijk. "Pseudo-Conservation Laws in Cyclic-Service Systems". </title> <journal> Journal of Applied Probabilty, </journal> <volume> (24), </volume> <year> 1987. </year>
Reference-contexts: This represents the optimization of not loading a platter into the player if no requests are present for that platter when its turn in the cycle occurs. By introducing this optimization, we no longer have a simple expression for the switch-over statistics needed to directly apply the models of <ref> [5, 41, 66, 76] </ref>. Thus, we introduce a simple model assumption in an effort to approximate the jukebox model. We start by introducing some notation. <p> Thus, the conservation law no longer applies when one accounts for the time to swap platters. Since systems with non-zero switch-over times fail to satisfy the conservation law constraints, the results must be generalized to include such systems. The work of Boxma and Groenendijk <ref> [5] </ref> provides an elegant proof of the so-called pseudo-conservation laws applied to cyclic service systems. <p> cyclic service system at an arbitrary epoch V = amount of work in a cyclic service system with zero switch-over times at an arbitrary epoch Y = amount of work in a cyclic service system at an arbitrary epoch in the switching period The proof of (4.3) is found in <ref> [5] </ref> which follows from the results developed in [24]. Equation (4.3) leads directly to ) V c = V + Y (4.4) fi (2) + Y (4.5) where the term, fi (2) =(2 (1 )) comes from the zero switch-over time calculation in (4.2). <p> Equation (4.3) leads directly to ) V c = V + Y (4.4) fi (2) + Y (4.5) where the term, fi (2) =(2 (1 )) comes from the zero switch-over time calculation in (4.2). Also note, with the same line of reasoning used to derive (4.2), <ref> [5] </ref> shows, 71 N X fi X i + i=1 fi ( 2) (4.6) fi (2) (4.7) Here, V c is written as the sum of serving all outstanding platter requests at an arbitrary time epoch plus the residual of completing service on a request found at an arbitrary time epoch. <p> Therefore, the average work at queue i will be zero. From (4.9), (4.10), (4.11), and some algebra, Y = 2s s ( 2 i=1 i ) (4.12) Finally, from (4.8) and (4.12), W = N ) + 2s This result from <ref> [5] </ref> could be applied directly to our system if the s i 's and s (2) i 's are known. However, given the dynamics of the system, these parameters are state dependent, where state is the current number of requests queued at each platter.
Reference: [6] <author> Brandwajn, A. </author> <title> "An Iterative Solution of Two-Dimensional Birth and Death Processes". </title> <journal> Operations Research, </journal> <volume> 27(3), </volume> <year> 1979. </year>
Reference-contexts: However, they do not account for "partial" vacations, in which some service may be allowed, as with the simultaneous service of the cache in our model definition. 14 An exact solution to the queueing model's balance equations is generated using an iterative method based on equivalence <ref> [6, 7] </ref>. We start by choosing an appropriate state description, (n; S), which corresponds to the dynamics described in the introduction to this chapter. <p> The first is a semi-numerical method based on equivalence <ref> [6, 7] </ref>. Since the solution is iterative, we also investigate an alternative implementation to improve the speed of convergence which builds on the basic equivalence technique. <p> We refrain from referring to this approach as "improved" until we quantify the results in the results section. The modified method, similar to the approach developed in <ref> [6] </ref>, makes use of a recurrence relation found in the conditional probability equations, which were derived from the balance equations in the previous section. The basic idea is to generate new updates with the latest information available.
Reference: [7] <author> Brandwajn, A. </author> <title> "Equivalence and Decomposition in Queueing Systems A Unified Approach". Performance Evaluation, </title> <type> (5), </type> <year> 1985. </year>
Reference-contexts: However, they do not account for "partial" vacations, in which some service may be allowed, as with the simultaneous service of the cache in our model definition. 14 An exact solution to the queueing model's balance equations is generated using an iterative method based on equivalence <ref> [6, 7] </ref>. We start by choosing an appropriate state description, (n; S), which corresponds to the dynamics described in the introduction to this chapter. <p> The first is a semi-numerical method based on equivalence <ref> [6, 7] </ref>. Since the solution is iterative, we also investigate an alternative implementation to improve the speed of convergence which builds on the basic equivalence technique.
Reference: [8] <author> Brandwajn, A. </author> <title> "Performance Benefits of Parallelism in Cached DASD Controllers". </title> <booktitle> In CMG 89 International Conference Proceedings. CMG, </booktitle> <month> December </month> <year> 1989. </year>
Reference-contexts: Note that throughout this dissertation, we refer to the I/O devices as they appear to the operating system (including the effects of caching) and the actual storage devices as logical devices and physical devices, respectively. A model of restricted overlap was introduced in <ref> [8] </ref> to describe the hidden disk activity which occurs during the staging of a track. In the first part of this thesis, a variation of the model, based on a queueing model with vacations, is presented. <p> In the first part of this thesis, a variation of the model, based on a queueing model with vacations, is presented. This model and its extensions are developed in the body of this dissertation. 1.2 Related Work Aside from <ref> [8] </ref>, discussed in the prior section, there is little research, to the best of our knowledge, which is directed at the problem of restricted overlap of resources. <p> However, the model can represent a write-through management scheme by adjusting the model parameters (discussed later in this chapter). A model of restricted overlap was first proposed in <ref> [8] </ref> to model device overlap found in the current generation of cached controllers in computer systems running MVS. The model, shown in Figure 2.1, accounts explicitly for service overlaps. <p> Under the state description presented in <ref> [8] </ref>, the model operation can be described as follows: 1. Requests enter the queue as one of two classes: * Class 1 service from stage I (occurring with probability p) * Class 2 service from stage I I (occurring with probability q = 1 p) 10 2. <p> restric tions: * stages I and I I operated exclusively as do stages I and I II * Class 1 requests enter stage I II for further service with probability, s * stage combination I I and II I can have simultaneous operation overlapped service Although not explicitly presented in <ref> [8] </ref>, this queueing model, with exponential assumptions for each service stage, leads to a set of balance equations which can be solved using finite difference techniques. For future reference, we will call this model the "initial" model.
Reference: [9] <author> Brandwajn, A. </author> <title> Private communication. </title> <year> 1991. </year>
Reference-contexts: For future reference, we will call this model the "initial" model. Upon further study of the problem, a variation of this model, based on service with vacations, was proposed by <ref> [9] </ref>.
Reference: [10] <author> Bratley, P., B.L. Fox, and L.E. </author> <title> Schrage. A Guide to Simulation. </title> <publisher> Springer-Verlag, </publisher> <year> 1983. </year>
Reference-contexts: The need for efficient analytic models is underscored when long simulation run times are experienced due to increased service variability. (Although not investigated in this dissertation, variance reduction techniques may provide a means to reduce run times, see for example <ref> [42, 10] </ref>.) 1.4 Thesis Structure This thesis is structured into three main chapters plus a conclusions chapter. Chapter 2 investigates modeling restricted overlap of resources as it applies to the current generation of cached disk controllers in a "classical" mainframe I/O environment (described in the 7 previous section, Problem Origin).
Reference: [11] <author> Buzen, J.P. and A.W. Shum. </author> <title> "Considerations for Modeling Shared DASD". </title> <booktitle> In CMG 89 International Conference Proceedings. CMG, </booktitle> <month> December </month> <year> 1989. </year>
Reference-contexts: We focus on the the effect of the latter as it applies to the restricted overlap model. A queueing model, which accounts for pending time under exponential assumptions, was presented in <ref> [11] </ref>. A distribution for the pending time experienced by a single complex due to "extraneous" activity is generated. We adopt a similar approach in order to represent pending delays in the restricted overlap vacation model in a shared environment.
Reference: [12] <author> Buzen, J.P. and A.W. Shum. </author> <title> "RAID, CAID, and Virtual Disks: I/O Performance at the Crossroads". </title> <booktitle> In CMG 93 International Conference Proceedings. CMG, </booktitle> <month> December </month> <year> 1993. </year>
Reference-contexts: An overview of how the current hard disk drive technology has shifted the original RAID hypothesis of performance via the "I/O bandwidth" of many actuators to accenting the need for a cached array is presented in <ref> [12] </ref>.
Reference: [13] <author> Cabrera, </author> <title> L.F. and D.D.E. Long. "Using Disk Striping to Provide Multiple High I/O Data Rates". </title> <journal> Computing Systems, </journal> <volume> 4(4), </volume> <year> 1991. </year>
Reference-contexts: The use of distributed storage has the advantage of reducing contention at a single storage device. The distributed I/O architecture can also provide high data rates when objects are striped across the storage units, see e.g. <ref> [38, 13, 4, 73] </ref>. The goal of this chapter is to present an approach to multimedia storage for the kiosk application group architecture and evaluate its performance.
Reference: [14] <author> Cao, P., S.B. Lim, S. Venkataraman, and J. Wilkes. </author> <title> "The TickerTAIP Parallel RAID Architecture". </title> <type> Hewlett-Packard Laboratory Technical Report, </type> <institution> (HPL-OSR-93-25), </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: Since the introduction of RAID, the marketplace and literature has grown richly with various enhancements and alternative methods of developing disk array architectures. Some examples are the parity striping architecture [27], EMC's Integrated Cached Disk Array (ICDA) [54], the TickerTAIP parallel RAID architecture <ref> [14] </ref>, Network Appliance's NFS File Server Appliance [29], and Iceberg from Storage Technology. In this chapter, the analysis focuses on a RAID-5 level disk array with a cached controller.
Reference: [15] <author> Chen, S. and D. Towsley. </author> <title> "The Design and Evaluation of RAID 5 and Parity Striping Disk Array Architectures". </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 17(1/2), </volume> <month> January/February </month> <year> 1993. </year>
Reference-contexts: Previous work on analytic performance models of disk arrays, including RAID-5, have not accounted for the presence of a cached controller <ref> [43, 72, 15] </ref> or ignored the overlapped service which exists between the cache and data staging [49]. 46 The model presented in [43] uses an approach based on fork-join queueing [3]. <p> As in the previous chapter, our approach considers an open queueing model, a closer representation to a transaction based environment. A performance model of RAID-5 which accounts for the problem of write synchronization (the old data must be read in order to calculate parity) is demonstrated in <ref> [15] </ref>. The model maintains two request queues for each disk: one for read/write requests and one for parity requests. Upon the start of any write request at the head of the read/write queue, a parity request is generated. <p> We assume the presence of a controller with sufficient non-volatile cache storage to take advantage of the fast write I/O operation and thus deemphasize the write problem of the non-cached environment modeled in <ref> [15] </ref>. The model of RAID-5 in [72] utilizes a vacation server model to specifically analyze the disk array in the presence of faults, i.e. the periods of time a disk is unavailable due to failure.
Reference: [16] <author> Chesnais, A., E. Gelenbe and I. Mitrani. </author> <title> "On the Modeling of Parallel Access to Shared Data". </title> <journal> Communications of the ACM, </journal> <volume> 26(3), </volume> <year> 1983. </year>
Reference-contexts: Since databases are typically a shared resource, the problem of concurrency control arises. It is popularly solved with locking methods. Thus, any read or write transactions must acquire some kind of token (or lock) before being allowed to proceed. Shared read/write access <ref> [16, 37, 51, 58] </ref> and locking models [69, 68, 71, 50, 30] have been developed to analyze the performance of such systems. Although the models seem similar to the idea of restricted overlap, their emphasis is on modeling the acquisition of the locks prior to the service of a request.
Reference: [17] <author> Cox, </author> <title> D.R. "A Use of Complex Probabilities in the Theory of Stochastic Processes". </title> <journal> Proc. Cambridge Phil. Soc., </journal> <volume> (51), </volume> <year> 1955. </year>
Reference-contexts: distribution of the service stages. 2.2 Restricted Overlap Vacation Model under General Assumptions 2.2.1 Coxian Equivalence In an effort to extend the applicability of the exact solution to systems with service times of general distributions, each server in the model can be represented by a two stage coxian equivalent distribution <ref> [17] </ref>. The two stage coxian matches the first two moments of a general distribution with a coefficient of variation, C v , greater than 1= p 2. The coxian equivalent model is shown in Figure 2.8.
Reference: [18] <author> Denning, P.J. </author> <title> "The Working Set Model for Program Behavior". </title> <journal> Communications of the ACM, </journal> <volume> 11(5), </volume> <month> May </month> <year> 1968. </year>
Reference-contexts: which serves as the topic of this thesis, the relation of this work to previous literature, our approach to analysis, and the complete thesis structure. 1.1 Problem Origin The benefits of caching, utilized throughout the memory hierarchy in computer systems design, depends on the well known locality of reference principle <ref> [18, 19] </ref>. In the late 1980's, a new generation of mainframe I/O controllers were introduced [33, 2] which capitalize on an intelligent multiported cached design.
Reference: [19] <author> Denning, P.J. </author> <title> "Working Sets Past and Present". </title> <journal> IEEE Tranactions on Software Engineering, </journal> <volume> SE-6(1), </volume> <month> January </month> <year> 1980. </year> <month> 94 </month>
Reference-contexts: which serves as the topic of this thesis, the relation of this work to previous literature, our approach to analysis, and the complete thesis structure. 1.1 Problem Origin The benefits of caching, utilized throughout the memory hierarchy in computer systems design, depends on the well known locality of reference principle <ref> [18, 19] </ref>. In the late 1980's, a new generation of mainframe I/O controllers were introduced [33, 2] which capitalize on an intelligent multiported cached design.
Reference: [20] <author> Doshi, </author> <title> B.T. "Queueing Systems with Vacations". Queueing Systems, </title> <type> 1(1), </type> <month> June </month> <year> 1986. </year>
Reference-contexts: The "classical" vacation models typically view the server of a queue as either being in the state of service or vacation, i.e. unavailable. The models deal with various restrictions on service and vacation periods <ref> [20] </ref>, e.g. exhaustive or limited service prior to vacations.
Reference: [21] <author> Erlang, </author> <title> A.K. "Solution of Some Problems in the Theory of Probabilities of Significance in Automatic Telephone Exchanges". </title> <journal> P.O. Elec. Engrs. Journal, </journal> <volume> 10, </volume> <year> 1918. </year>
Reference-contexts: Historically, the analytical branch of performance and capacity planning was created with the development of queueing theory by A.K. Erlang in the early 1900s <ref> [21] </ref>. His work was motivated by improving the design process of telephone exchanges. From the early part of this century, the techniques have been advanced by the mathematics, telephony engineering, and operations research communities.
Reference: [22] <author> Evans, R.V. </author> <title> "Geometric Distribution in Some Two-Dimensional Queueing Systems". </title> <journal> Operations Research, </journal> <volume> (15), </volume> <year> 1967. </year>
Reference-contexts: This cost and the resulting improvement in the number of iterations to reach convergence is presented in this chapter's results section. 2.1.3 Matrix-Geometric Approach In this section, we apply another numerical method based on the matrix-geometric techniques, developed in <ref> [22, 53, 52] </ref>. Matrix-geometric solutions may exist for systems with state space descriptions of the form (i; j), where i and j are countable and only j is unbounded.
Reference: [23] <author> Fishman, G.S. </author> <title> Principles of Discrete Event Simulation. </title> <publisher> Wiley, </publisher> <year> 1978. </year>
Reference-contexts: In this thesis, the role of simulation is as a tool of validation for the analytic models developed. Details of simulation theory can be found in such related texts as <ref> [23, 47] </ref>. Some of the simulations in this thesis were written in CSIM, a process-oriented simulation language [61], and others using a simple discrete event simulator written in C and based on SMPL [47]. The approximate confidence intervals for the simulation runs were estimated at a 95% confidence level.
Reference: [24] <author> Fuhrmann, S.W. and R.B. Cooper. </author> <title> "Stochastic Decompostion in the M/G/1 Queue with Generalized Vacations". </title> <journal> Operations Research, </journal> <volume> (33), </volume> <year> 1985. </year>
Reference-contexts: = amount of work in a cyclic service system with zero switch-over times at an arbitrary epoch Y = amount of work in a cyclic service system at an arbitrary epoch in the switching period The proof of (4.3) is found in [5] which follows from the results developed in <ref> [24] </ref>. Equation (4.3) leads directly to ) V c = V + Y (4.4) fi (2) + Y (4.5) where the term, fi (2) =(2 (1 )) comes from the zero switch-over time calculation in (4.2).
Reference: [25] <author> Ginige, A., A. Seneviratne, R. Gonzalez and S. Chandra. </author> <title> "An Experimental Multimedia System". </title> <booktitle> In Multimedia `92, 4th IEEE ComSoc International Workshop on Multimedia Communications, </booktitle> <month> April </month> <year> 1992. </year>
Reference-contexts: The kiosk application groups have some specific simplifying constraints, discussed in more detail in the body of this chapter, which help isolate the analysis of the retrieval performance and clarify the effects of specific parameters. Otherwise, only a qualitative treatment, e.g. <ref> [63, 25] </ref>, can be applied as the system dynamics become more complex. Other related research efforts have concentrated on limited media forms, such as audio, e.g. the Etherphone project [70] which deals with the considerable task of processing voice samples.
Reference: [26] <author> Gladney, H. M.and P. E. Mantey. </author> <title> "Essential Issues in the Design of Shared Document/Image Libraries". </title> <booktitle> In SPIE/SPSE Symposium on Electronic Imaging Science and Technology, </booktitle> <month> February </month> <year> 1990. </year>
Reference-contexts: The development of electronic libraries stemmed from the desire to replace paper in large research and administrative applications. The requirements for an electronic library were outlined in <ref> [26] </ref> and IBM offers the Image and Records Management (IRM) System which was designed to meet those requirements [36, 26]. <p> The development of electronic libraries stemmed from the desire to replace paper in large research and administrative applications. The requirements for an electronic library were outlined in [26] and IBM offers the Image and Records Management (IRM) System which was designed to meet those requirements <ref> [36, 26] </ref>. The electronic library, as viewed by the kiosk group, can be thought of as a tertiary or archival store which maintains a kiosk group with a particular set of multimedia sequences constituting an application.
Reference: [27] <author> Gray, J., B. Host, and M. Walker. </author> <title> "Parity Striping of Disk Arrays: Low-cost Reliable Storage with Acceptable Throughput". </title> <booktitle> In Proceedings 16th VLDB Conference, </booktitle> <month> August </month> <year> 1990. </year>
Reference-contexts: Data and parity are striped across disks. This alleviates the single disk bottleneck of writes experienced by RAID-4. Since the introduction of RAID, the marketplace and literature has grown richly with various enhancements and alternative methods of developing disk array architectures. Some examples are the parity striping architecture <ref> [27] </ref>, EMC's Integrated Cached Disk Array (ICDA) [54], the TickerTAIP parallel RAID architecture [14], Network Appliance's NFS File Server Appliance [29], and Iceberg from Storage Technology. In this chapter, the analysis focuses on a RAID-5 level disk array with a cached controller.
Reference: [28] <author> Hewlett-Packard. </author> <title> HP C2244/45/46/47 SCSI-2 Disk Drive. Technical Reference Manual, </title> <year> 1992. </year>
Reference-contexts: Our aim is choose a feasible set of parameters which represent current disk storage technology. We also want the model to experience overlap. Accordingly, we consider the operating specifications of Small Computer System Interface-2 (SCSI-2) [62] type devices, for example see <ref> [28] </ref>, which currently offer a comparable capacity and performance to the general class of mainframe direct access storage devices (DASD, "disks" in IBM parlance), for example see [31, 34].
Reference: [29] <author> Hitz, D., J. Lau, and M. Malcolm. </author> <title> "File System Design for an NFS File Server Appliance". </title> <booktitle> In Proceedings of the 1994 Winter USENIX, </booktitle> <month> January </month> <year> 1994. </year>
Reference-contexts: Some examples are the parity striping architecture [27], EMC's Integrated Cached Disk Array (ICDA) [54], the TickerTAIP parallel RAID architecture [14], Network Appliance's NFS File Server Appliance <ref> [29] </ref>, and Iceberg from Storage Technology. In this chapter, the analysis focuses on a RAID-5 level disk array with a cached controller.
Reference: [30] <author> Huang, Y. and Y. Chin. </author> <title> "Performance Evaluation of Three Locking Protocols". </title> <editor> In Courtois, P.-J. and G. Latouche, editor, </editor> <booktitle> Performance '87. </booktitle> <publisher> North Holland, </publisher> <year> 1987. </year>
Reference-contexts: Since databases are typically a shared resource, the problem of concurrency control arises. It is popularly solved with locking methods. Thus, any read or write transactions must acquire some kind of token (or lock) before being allowed to proceed. Shared read/write access [16, 37, 51, 58] and locking models <ref> [69, 68, 71, 50, 30] </ref> have been developed to analyze the performance of such systems. Although the models seem similar to the idea of restricted overlap, their emphasis is on modeling the acquisition of the locks prior to the service of a request.
Reference: [31] <author> IBM. </author> <title> IBM 3380 Direct Access Storage Description and User's Guide. Manual GA26-1664, </title> <year> 1981. </year>
Reference-contexts: Accordingly, we consider the operating specifications of Small Computer System Interface-2 (SCSI-2) [62] type devices, for example see [28], which currently offer a comparable capacity and performance to the general class of mainframe direct access storage devices (DASD, "disks" in IBM parlance), for example see <ref> [31, 34] </ref>. Note our choice of parameters are not meant to reflect any particular disk vendor but rather a set of feasible 23 values which reflect the current technology. The main parameters we utilize to derive our model parameters are the transfer speed, the rotational speed, and the orientation time.
Reference: [32] <institution> IBM. IBM System/370 XA Principles of Operation. Manual SA22-7085, </institution> <year> 1983. </year>
Reference-contexts: Addtional constraints can be present due to operating system rules. For example, according to the current principles of operation of MVS/XA and MVS/ESA <ref> [32, 35] </ref>, only a single I/O request can be outstanding for a given logical device, i.e. there are no 9 multiple exposures.
Reference: [33] <author> IBM. </author> <title> IBM 3990 Storage Control Introduction. Manual GA32-0098, </title> <year> 1987. </year>
Reference-contexts: In the late 1980's, a new generation of mainframe I/O controllers were introduced <ref> [33, 2] </ref> which capitalize on an intelligent multiported cached design. When a desired record is not found in the the cache, the cache storage buffers the disk request along with the remaining records on the track following the desired record. <p> Write-through insures the data is written to stable storage by directing the write to the physical disk. Write-back operations write to a cache, signal the write complete, and then asynchronously write the data to disk in a destaging process. The DASD Fast Write operation <ref> [33] </ref> is similar to a write-back, except data is written to non-volatile storage (NVS) in order to guarantee it permanence. For the purpose of our treatment of restricted overlap, we assume a cached controller of sufficient NVS capacity to manage write requests as DASD Fast Writes. <p> The miss probability is varied between 10% to 40% to demonstrate its effect on the response time. The cache write policy is assumed to be write-back, e.g. in IBM mainframe class disk controllers <ref> [33, 2] </ref>, writes can be treated as DASD Fast Writes [33]. The write-back policy 24 implies all write requests experience the service of stage I I and we agglomerate the time to do the asynchronous transfer to disk into stage I II , as mentioned previously. <p> The miss probability is varied between 10% to 40% to demonstrate its effect on the response time. The cache write policy is assumed to be write-back, e.g. in IBM mainframe class disk controllers [33, 2], writes can be treated as DASD Fast Writes <ref> [33] </ref>. The write-back policy 24 implies all write requests experience the service of stage I I and we agglomerate the time to do the asynchronous transfer to disk into stage I II , as mentioned previously.
Reference: [34] <author> IBM. </author> <title> IBM 3390 Direct Access Storage Introduction. Manual GC26-4573-2, </title> <year> 1990. </year>
Reference-contexts: Accordingly, we consider the operating specifications of Small Computer System Interface-2 (SCSI-2) [62] type devices, for example see [28], which currently offer a comparable capacity and performance to the general class of mainframe direct access storage devices (DASD, "disks" in IBM parlance), for example see <ref> [31, 34] </ref>. Note our choice of parameters are not meant to reflect any particular disk vendor but rather a set of feasible 23 values which reflect the current technology. The main parameters we utilize to derive our model parameters are the transfer speed, the rotational speed, and the orientation time.
Reference: [35] <institution> IBM. IBM Enterprise Systems Architecture/390 Principles of Operation. Manual SA22-7200, </institution> <year> 1990. </year>
Reference-contexts: Addtional constraints can be present due to operating system rules. For example, according to the current principles of operation of MVS/XA and MVS/ESA <ref> [32, 35] </ref>, only a single I/O request can be outstanding for a given logical device, i.e. there are no 9 multiple exposures.
Reference: [36] <author> IBM. </author> <title> Image and Records Management (IRM) General Information Guide (GC22-0027). </title> <year> 1991. </year>
Reference-contexts: The development of electronic libraries stemmed from the desire to replace paper in large research and administrative applications. The requirements for an electronic library were outlined in [26] and IBM offers the Image and Records Management (IRM) System which was designed to meet those requirements <ref> [36, 26] </ref>. The electronic library, as viewed by the kiosk group, can be thought of as a tertiary or archival store which maintains a kiosk group with a particular set of multimedia sequences constituting an application.
Reference: [37] <author> Johnson, T. </author> <title> "Approximate Analysis of Reader and Writer Access to a Shared Resource". </title> <booktitle> In Proc. ACM Sigmetrics Conference on Measurement and Modelling of Computer Systems. </booktitle> <publisher> ACM Press, </publisher> <year> 1990. </year>
Reference-contexts: Since databases are typically a shared resource, the problem of concurrency control arises. It is popularly solved with locking methods. Thus, any read or write transactions must acquire some kind of token (or lock) before being allowed to proceed. Shared read/write access <ref> [16, 37, 51, 58] </ref> and locking models [69, 68, 71, 50, 30] have been developed to analyze the performance of such systems. Although the models seem similar to the idea of restricted overlap, their emphasis is on modeling the acquisition of the locks prior to the service of a request.
Reference: [38] <author> Katz, R.H., G.A. Gibson, and D.A. Patterson. </author> <title> "Disk System Architectures for High Performance Computing". </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 77(12), </volume> <month> December </month> <year> 1989. </year>
Reference-contexts: The technique of striping or interleaving data over multiple disks [39, 59, 46] emerged as a solution to the increasing speed gap between secondary storage and processors. The RAID (Redundant Array of Inexpensive Disks) architectures <ref> [38, 55, 56] </ref> further popularized (and stimulated the commercial interest in) disk arrays by utilizing many small disks, organized for performance and reliability. <p> Performance models can assist in the design, configuration, and procurement of disk arrays. As expressed in the introduction chapter, analytic models are typically preferable to other techniques because of efficient solution times, allowing multiple configuration scenarios to be evaluated. 3.1 Background The RAID architectures as presented in <ref> [38] </ref> are categorized into five levels, RAID-1 through RAID-5. Each level positions the array construct at a different point in the characterization space of cost, capacity, performance, and reliability. A complete taxonomy of the RAID levels can be found in [38] and we briefly outline the levels as follows: * RAID-1 <p> be evaluated. 3.1 Background The RAID architectures as presented in <ref> [38] </ref> are categorized into five levels, RAID-1 through RAID-5. Each level positions the array construct at a different point in the characterization space of cost, capacity, performance, and reliability. A complete taxonomy of the RAID levels can be found in [38] and we briefly outline the levels as follows: * RAID-1 mirroring complete disks. Dual copies of each disk are maintained. 45 * RAID-2 Hamming error code detection and correction. Data is bit-interleaved across a group of data disks and check disks. * RAID-3 single check disk. <p> The use of distributed storage has the advantage of reducing contention at a single storage device. The distributed I/O architecture can also provide high data rates when objects are striped across the storage units, see e.g. <ref> [38, 13, 4, 73] </ref>. The goal of this chapter is to present an approach to multimedia storage for the kiosk application group architecture and evaluate its performance.
Reference: [39] <author> Kim, M. </author> <title> "Synchronized Disk Interleaving". </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-35(11), </volume> <month> November </month> <year> 1986. </year>
Reference-contexts: A disk array is an I/O subsystem architecture which organizes a group of physical disks into a set of logical devices by distributing data across the disks. The technique of striping or interleaving data over multiple disks <ref> [39, 59, 46] </ref> emerged as a solution to the increasing speed gap between secondary storage and processors. The RAID (Redundant Array of Inexpensive Disks) architectures [38, 55, 56] further popularized (and stimulated the commercial interest in) disk arrays by utilizing many small disks, organized for performance and reliability.
Reference: [40] <author> Kleinrock, L. </author> <title> Queueing Systems: </title> <journal> Theory, </journal> <volume> volume 1. </volume> <publisher> Wiley, </publisher> <year> 1975. </year>
Reference-contexts: If the switch-over times, in the given system, are zero (i.e. the time to swap disks is negligible), the conservation laws apply. This means the total amount of work is independent of the choice of service order and service is nonpreemptive. Therefore, from Kleinrock <ref> [40] </ref>, the following result holds, N X i W i = 1 ) W = 1 where W 0 = i=1 fi (2) = 2 However, assuming zero switch-over time for the jukebox model is overly optimistic since the major time penalty incurred in the system is the time spent changing
Reference: [41] <author> Kuehn, P.J. </author> <title> "Multiqueue Systems with Nonexhaustive Cyclic Service". </title> <journal> The Bell System Technical Journal, </journal> <volume> 58(3), </volume> <month> March </month> <year> 1979. </year> <month> 95 </month>
Reference-contexts: This represents the optimization of not loading a platter into the player if no requests are present for that platter when its turn in the cycle occurs. By introducing this optimization, we no longer have a simple expression for the switch-over statistics needed to directly apply the models of <ref> [5, 41, 66, 76] </ref>. Thus, we introduce a simple model assumption in an effort to approximate the jukebox model. We start by introducing some notation.
Reference: [42] <author> Law, A.M. and W.D. </author> <title> Kelton. Simulation Modeling and Analysis. </title> <publisher> McGraw-Hill, </publisher> <year> 1982. </year>
Reference-contexts: The need for efficient analytic models is underscored when long simulation run times are experienced due to increased service variability. (Although not investigated in this dissertation, variance reduction techniques may provide a means to reduce run times, see for example <ref> [42, 10] </ref>.) 1.4 Thesis Structure This thesis is structured into three main chapters plus a conclusions chapter. Chapter 2 investigates modeling restricted overlap of resources as it applies to the current generation of cached disk controllers in a "classical" mainframe I/O environment (described in the 7 previous section, Problem Origin).
Reference: [43] <author> Lee, E.K. and R.H. Katz. </author> <title> "An Analytic Performance Model of Disk Arrays". </title> <booktitle> In Proceedings ACM SIGMETRICS Conference, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: These systems involve a restriction on the network of "subtask" queues as opposed to constraining the service stages of an individual queue as in our approach to the restricted overlap problem. We note the fork-join queueing systems have been used effectively to model RAID-5 devices <ref> [43, 72] </ref>, which will be discussed further in Chapter 3. 6 1.3 Analysis Methodology The thrust of this research centers around an analytical representation of restricted overlap and its application to pragmatic performance issues. Typically, performance modeling efforts are approached from simulation and/or analytic techniques. <p> Previous work on analytic performance models of disk arrays, including RAID-5, have not accounted for the presence of a cached controller <ref> [43, 72, 15] </ref> or ignored the overlapped service which exists between the cache and data staging [49]. 46 The model presented in [43] uses an approach based on fork-join queueing [3]. <p> Previous work on analytic performance models of disk arrays, including RAID-5, have not accounted for the presence of a cached controller [43, 72, 15] or ignored the overlapped service which exists between the cache and data staging [49]. 46 The model presented in <ref> [43] </ref> uses an approach based on fork-join queueing [3]. The model is a closed queueing system in which requests are generated by a set of processes; each process generating a request upon the completion of the previous request.
Reference: [44] <author> Levy, D.E. and P.E. Mantey. </author> <title> "Optical Jukebox Retrieval Performance in Electronic Libraries Utilizing Cyclic Scheduling". </title> <institution> UCSC Computer Research Laboratory Technical Report, (UCSC-CRL-92-08), </institution> <month> March </month> <year> 1992. </year>
Reference-contexts: In contrast, the cyclic method of service degrades gradually as the request arrival rates increase. In the runs we examined, the approximation scheme appears to accurately represent the cyclic service behavior. The interested reader is referred to <ref> [44] </ref> for more data and further discussion regarding the approximation's effectiveness. We have shown a substantial performance gain, in terms of average waiting time, of exhaustive cyclic service over a first-come first-serve strategy for servicing requests to an optical disk jukebox in an archival application environment.
Reference: [45] <author> Little, T.D.C. and A. Ghafoor. </author> <title> "Spatio-Temporal Composition of Distributed Multimedia Objects for Value-Added Networks". </title> <journal> Computer, </journal> <volume> 24(10), </volume> <month> October </month> <year> 1991. </year>
Reference-contexts: They also present a method for multiple media stream maintenance which is complimentary to the development of kiosk groups, as described in the next section. Little and Ghafoor discuss spatial and temporal composition of multimedia objects in an distributed framework <ref> [45] </ref>. The approach presents a general taxonomy of distributed multimedia information systems which subsumes our architecture by virtue of its generality. However, our goal is to provide some insight into the performance expected in our real-time application.
Reference: [46] <author> Livny, M., S. Khoshafian, and H. Boral. </author> <title> "Multi-disk Management Algorithm". </title> <booktitle> In Proceedings ACM SIGMETRICS Conference, </booktitle> <month> May </month> <year> 1987. </year>
Reference-contexts: A disk array is an I/O subsystem architecture which organizes a group of physical disks into a set of logical devices by distributing data across the disks. The technique of striping or interleaving data over multiple disks <ref> [39, 59, 46] </ref> emerged as a solution to the increasing speed gap between secondary storage and processors. The RAID (Redundant Array of Inexpensive Disks) architectures [38, 55, 56] further popularized (and stimulated the commercial interest in) disk arrays by utilizing many small disks, organized for performance and reliability.
Reference: [47] <author> MacDougall, M.H. </author> <title> Simulating Computer Systems: Tools and Techniques. </title> <publisher> The MIT Press, </publisher> <year> 1987. </year>
Reference-contexts: In this thesis, the role of simulation is as a tool of validation for the analytic models developed. Details of simulation theory can be found in such related texts as <ref> [23, 47] </ref>. Some of the simulations in this thesis were written in CSIM, a process-oriented simulation language [61], and others using a simple discrete event simulator written in C and based on SMPL [47]. The approximate confidence intervals for the simulation runs were estimated at a 95% confidence level. <p> Details of simulation theory can be found in such related texts as [23, 47]. Some of the simulations in this thesis were written in CSIM, a process-oriented simulation language [61], and others using a simple discrete event simulator written in C and based on SMPL <ref> [47] </ref>. The approximate confidence intervals for the simulation runs were estimated at a 95% confidence level. In our application, we attempted to maintain confidence intervals half-widths within 10% of the generated average values.
Reference: [48] <author> Mantey, P.E. and D.E. Levy. </author> <title> "Electronic Libraries and Optical Jukebox Server Scheduling". </title> <booktitle> In SPIE/SPSE Symposium on Electronic Imaging Science and Technology, </booktitle> <month> February </month> <year> 1992. </year>
Reference-contexts: The electronic library, as viewed by the kiosk group, can be thought of as a tertiary or archival store which maintains a kiosk group with a particular set of multimedia sequences constituting an application. Since the electronic library has massive collections, the cost must be controlled <ref> [48] </ref> by accepting reduced performance in a storage device such as an optical disk jukebox. This excludes its use as a direct server of requests generated by users at the kiosk stations.
Reference: [49] <author> Menon, J. and D. Mattson. </author> <title> "Performance of Disk Arrays in Transaction Processing Environments". </title> <booktitle> In Proceedings of the 12th International Conference on Distributed Computing Systems, </booktitle> <month> June </month> <year> 1992. </year>
Reference-contexts: Previous work on analytic performance models of disk arrays, including RAID-5, have not accounted for the presence of a cached controller [43, 72, 15] or ignored the overlapped service which exists between the cache and data staging <ref> [49] </ref>. 46 The model presented in [43] uses an approach based on fork-join queueing [3]. The model is a closed queueing system in which requests are generated by a set of processes; each process generating a request upon the completion of the previous request. <p> The focus of the model is on an accurate representation of the various modes of operation of a RAID-5 device and does not account for a cached controller or the periods of hidden activity. In <ref> [49] </ref>, the authors consider a model that accounts for a disk array with a cached controller. However, it is not clear how one might extend the model to represent the 47 overlapped service of cache hits and staging of track information which our model tries to capture.
Reference: [50] <author> Morris, R.J.T. and W.S. Wong. </author> <title> "Performance of Concurrency Control Algorithms with Nonexclusive Access". </title> <editor> In Gelenbe, E., editor, </editor> <booktitle> Performance '84. </booktitle> <publisher> North Holland, </publisher> <year> 1984. </year>
Reference-contexts: Since databases are typically a shared resource, the problem of concurrency control arises. It is popularly solved with locking methods. Thus, any read or write transactions must acquire some kind of token (or lock) before being allowed to proceed. Shared read/write access [16, 37, 51, 58] and locking models <ref> [69, 68, 71, 50, 30] </ref> have been developed to analyze the performance of such systems. Although the models seem similar to the idea of restricted overlap, their emphasis is on modeling the acquisition of the locks prior to the service of a request.
Reference: [51] <author> Nelson, R., D. </author> <title> Towsley and A.N. Tantawi. "Performance Analysis of Parallel Processing Systems". </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 14(4), </volume> <year> 1988. </year>
Reference-contexts: Since databases are typically a shared resource, the problem of concurrency control arises. It is popularly solved with locking methods. Thus, any read or write transactions must acquire some kind of token (or lock) before being allowed to proceed. Shared read/write access <ref> [16, 37, 51, 58] </ref> and locking models [69, 68, 71, 50, 30] have been developed to analyze the performance of such systems. Although the models seem similar to the idea of restricted overlap, their emphasis is on modeling the acquisition of the locks prior to the service of a request. <p> Our approach explicitly deals with the parallel service of the cache and staging activity subject to the operating system constraints. The fork-join queueing systems <ref> [3, 51] </ref> are also applied to solving parallel processing problems. However, these models typically deal with breaking, forking, a task into subtasks which individually queue at separate servers. The task is then considered complete when all of the subtasks complete service, join.
Reference: [52] <author> Neuts, M.F. </author> <title> "Markov Chains with Applications in Queueing Theory, Which Have a Matrix-Geometric Invariant Vector". </title> <booktitle> Advances in Applied Probability, </booktitle> <volume> (10), </volume> <year> 1978. </year>
Reference-contexts: The first is a semi-numerical method based on equivalence [6, 7]. Since the solution is iterative, we also investigate an alternative implementation to improve the speed of convergence which builds on the basic equivalence technique. The second path is based on the matrix-geometric method <ref> [53, 52] </ref>, which capitalizes on the system structure resulting from the choice of state space. 2.1.1 Equivalence Approach Simple Iteration In applying equivalence techniques to the restricted overlap model, we start by considering the aggregate server shown in Figure 2.4. <p> This cost and the resulting improvement in the number of iterations to reach convergence is presented in this chapter's results section. 2.1.3 Matrix-Geometric Approach In this section, we apply another numerical method based on the matrix-geometric techniques, developed in <ref> [22, 53, 52] </ref>. Matrix-geometric solutions may exist for systems with state space descriptions of the form (i; j), where i and j are countable and only j is unbounded.
Reference: [53] <author> Neuts, M.F. </author> <title> Matrix-Geometric Solutions in Stochastic Models: An Algorithmic Approach. </title> <publisher> The John Hopkins University Press, </publisher> <year> 1981. </year>
Reference-contexts: The first is a semi-numerical method based on equivalence [6, 7]. Since the solution is iterative, we also investigate an alternative implementation to improve the speed of convergence which builds on the basic equivalence technique. The second path is based on the matrix-geometric method <ref> [53, 52] </ref>, which capitalizes on the system structure resulting from the choice of state space. 2.1.1 Equivalence Approach Simple Iteration In applying equivalence techniques to the restricted overlap model, we start by considering the aggregate server shown in Figure 2.4. <p> This cost and the resulting improvement in the number of iterations to reach convergence is presented in this chapter's results section. 2.1.3 Matrix-Geometric Approach In this section, we apply another numerical method based on the matrix-geometric techniques, developed in <ref> [22, 53, 52] </ref>. Matrix-geometric solutions may exist for systems with state space descriptions of the form (i; j), where i and j are countable and only j is unbounded.
Reference: [54] <author> Parker, M. </author> <title> "Small Disks Come to Mainframes". </title> <journal> CMG Transactions, </journal> <volume> (74), </volume> <month> Fall </month> <year> 1991. </year>
Reference-contexts: This alleviates the single disk bottleneck of writes experienced by RAID-4. Since the introduction of RAID, the marketplace and literature has grown richly with various enhancements and alternative methods of developing disk array architectures. Some examples are the parity striping architecture [27], EMC's Integrated Cached Disk Array (ICDA) <ref> [54] </ref>, the TickerTAIP parallel RAID architecture [14], Network Appliance's NFS File Server Appliance [29], and Iceberg from Storage Technology. In this chapter, the analysis focuses on a RAID-5 level disk array with a cached controller.
Reference: [55] <author> Patterson, D.A., R.H. Katz, and G.A. Gibson. </author> <title> "A Case for Redundant Arrays of Inexpensive Disks (RAID)". </title> <booktitle> In Proceedings ACM SIGMOD Conference, </booktitle> <month> June </month> <year> 1988. </year>
Reference-contexts: The technique of striping or interleaving data over multiple disks [39, 59, 46] emerged as a solution to the increasing speed gap between secondary storage and processors. The RAID (Redundant Array of Inexpensive Disks) architectures <ref> [38, 55, 56] </ref> further popularized (and stimulated the commercial interest in) disk arrays by utilizing many small disks, organized for performance and reliability.
Reference: [56] <author> Patterson, D.A., R.H. Katz, and G.A. Gibson. </author> <title> "A Case for Redundant Arrays of Inexpensive Disks (RAID)". </title> <booktitle> In Proceedings IEEE Spring CompCon, </booktitle> <month> June </month> <year> 1988. </year>
Reference-contexts: The technique of striping or interleaving data over multiple disks [39, 59, 46] emerged as a solution to the increasing speed gap between secondary storage and processors. The RAID (Redundant Array of Inexpensive Disks) architectures <ref> [38, 55, 56] </ref> further popularized (and stimulated the commercial interest in) disk arrays by utilizing many small disks, organized for performance and reliability.
Reference: [57] <author> Rangan, P. Venkat and Harrick M. Vin. </author> <title> "Designing File Systems for Digital Video and Audio". </title> <booktitle> In Proceedings of the 13th ACM Symposium on Operating System Principles, </booktitle> <month> October </month> <year> 1991. </year>
Reference-contexts: The current economics associated with large storage requirements and real-time delivery constraints of continuous media objects prohibits storing a local copy of all data at each multimedia kiosk. Therefore, some effort must be expended on developing storage techniques [65]. Rangan and Vin <ref> [57] </ref> have developed an effective technique for designing file systems which support continuous media storage and retrieval. They also present a method for multiple media stream maintenance which is complimentary to the development of kiosk groups, as described in the next section.
Reference: [58] <author> Reiman, M.I. and P.E. Wright. </author> <title> "Performance Analysis of Concurrent-Read Exclusive-Write". </title> <booktitle> In Proc. ACM Sigmetrics Conference on Measurement and Modelling of Computer Systems. </booktitle> <publisher> ACM Press, </publisher> <year> 1991. </year>
Reference-contexts: Since databases are typically a shared resource, the problem of concurrency control arises. It is popularly solved with locking methods. Thus, any read or write transactions must acquire some kind of token (or lock) before being allowed to proceed. Shared read/write access <ref> [16, 37, 51, 58] </ref> and locking models [69, 68, 71, 50, 30] have been developed to analyze the performance of such systems. Although the models seem similar to the idea of restricted overlap, their emphasis is on modeling the acquisition of the locks prior to the service of a request.
Reference: [59] <author> Salem, K. and H. Garcia-Molina. </author> <title> "Disk Striping". </title> <booktitle> In International Conference on Data Engineering, </booktitle> <month> February </month> <year> 1986. </year>
Reference-contexts: A disk array is an I/O subsystem architecture which organizes a group of physical disks into a set of logical devices by distributing data across the disks. The technique of striping or interleaving data over multiple disks <ref> [39, 59, 46] </ref> emerged as a solution to the increasing speed gap between secondary storage and processors. The RAID (Redundant Array of Inexpensive Disks) architectures [38, 55, 56] further popularized (and stimulated the commercial interest in) disk arrays by utilizing many small disks, organized for performance and reliability.
Reference: [60] <author> Scherr, A.L. </author> <title> An Analysis of Time-Shared Computer Systems. </title> <publisher> The MIT Press, </publisher> <year> 1967. </year>
Reference-contexts: However, in the early 1960s with the emergence of the computer technologies, analytical modeling via queueing systems found a new domain of applicability and a new group of researchers. Scherr's representation of a computer time-sharing system <ref> [60] </ref> proved to be an effective performance model and provided a seed for the research of computer performance evaluation which continues to impact current system development. This dissertation investigates performance evaluation methods for analyzing systems with restricted overlap of resources.
Reference: [61] <author> Schwetman, H.D. </author> <title> "CSIM Reference Manual (Revision 16)". </title> <institution> Microelectronics and Computer Technology Corporation Technical Report, (ACT-ST-252-87Rev.16), </institution> <month> May </month> <year> 1992. </year> <month> 96 </month>
Reference-contexts: In this thesis, the role of simulation is as a tool of validation for the analytic models developed. Details of simulation theory can be found in such related texts as [23, 47]. Some of the simulations in this thesis were written in CSIM, a process-oriented simulation language <ref> [61] </ref>, and others using a simple discrete event simulator written in C and based on SMPL [47]. The approximate confidence intervals for the simulation runs were estimated at a 95% confidence level. In our application, we attempted to maintain confidence intervals half-widths within 10% of the generated average values.
Reference: [62] <author> SCSI. </author> <title> Small Computer Systems Interface II. X3T9 - I/O Interface, </title> <year> 1990. </year>
Reference-contexts: At this point, we outline our methodology in selecting parameters. Our aim is choose a feasible set of parameters which represent current disk storage technology. We also want the model to experience overlap. Accordingly, we consider the operating specifications of Small Computer System Interface-2 (SCSI-2) <ref> [62] </ref> type devices, for example see [28], which currently offer a comparable capacity and performance to the general class of mainframe direct access storage devices (DASD, "disks" in IBM parlance), for example see [31, 34].
Reference: [63] <author> Sincoskie, W.D. </author> <title> "System Architecture for a Large Scale Video on Demand Service". </title> <booktitle> Computer Networks and ISDN Systems, </booktitle> <month> September </month> <year> 1991. </year>
Reference-contexts: The kiosk application groups have some specific simplifying constraints, discussed in more detail in the body of this chapter, which help isolate the analysis of the retrieval performance and clarify the effects of specific parameters. Otherwise, only a qualitative treatment, e.g. <ref> [63, 25] </ref>, can be applied as the system dynamics become more complex. Other related research efforts have concentrated on limited media forms, such as audio, e.g. the Etherphone project [70] which deals with the considerable task of processing voice samples.
Reference: [64] <author> Strange, G. </author> <title> Linear Algebra and Its Applications. </title> <publisher> Harcourt Brace Jovanovich, Publishers, </publisher> <year> 1988. </year>
Reference-contexts: Since the equations above are expressed using u (n), we apply a simple iteration, akin to the form of Jacobi's method <ref> [64] </ref>. The iteration calculates each successive iteration via the points calculated in the previous iteration.
Reference: [65] <author> Swinehart, D. C. </author> <title> "Keynote Address: Multimedia Communication Systems: Are They Finally Real?". </title> <booktitle> In Multimedia `92, 4th IEEE ComSoc International Workshop on Multimedia Communications, </booktitle> <month> April </month> <year> 1992. </year>
Reference-contexts: The current economics associated with large storage requirements and real-time delivery constraints of continuous media objects prohibits storing a local copy of all data at each multimedia kiosk. Therefore, some effort must be expended on developing storage techniques <ref> [65] </ref>. Rangan and Vin [57] have developed an effective technique for designing file systems which support continuous media storage and retrieval. They also present a method for multiple media stream maintenance which is complimentary to the development of kiosk groups, as described in the next section.
Reference: [66] <author> Takagi, H. </author> <title> Analysis of Polling Systems. </title> <publisher> MIT Press, </publisher> <year> 1986. </year>
Reference-contexts: This represents the optimization of not loading a platter into the player if no requests are present for that platter when its turn in the cycle occurs. By introducing this optimization, we no longer have a simple expression for the switch-over statistics needed to directly apply the models of <ref> [5, 41, 66, 76] </ref>. Thus, we introduce a simple model assumption in an effort to approximate the jukebox model. We start by introducing some notation.
Reference: [67] <author> Takagi, H. </author> <title> Queueing Analysis, A Foundation of Performance Evaluation: </title> <journal> Vacation and Prioirty Systems, </journal> <volume> volume 1. </volume> <publisher> North-Holland, </publisher> <year> 1991. </year>
Reference-contexts: Certainly, a crude approximation can be generated by assuming no overlap and simply solving the resulting M/G/1 queueing system. However, our goal is a representation which accounts for the constrained parallelism. The analytic techniques of vacation models developed in the literature, see monograph <ref> [67] </ref>, do not readily appear to correspond to the restricted overlap problem. The "classical" vacation models typically view the server of a queue as either being in the state of service or vacation, i.e. unavailable.
Reference: [68] <author> Tay, Y.C., N. Goodman and R. Suri. </author> <title> "Locking Performance in Centralized Databases". </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 10(4), </volume> <year> 1985. </year>
Reference-contexts: Since databases are typically a shared resource, the problem of concurrency control arises. It is popularly solved with locking methods. Thus, any read or write transactions must acquire some kind of token (or lock) before being allowed to proceed. Shared read/write access [16, 37, 51, 58] and locking models <ref> [69, 68, 71, 50, 30] </ref> have been developed to analyze the performance of such systems. Although the models seem similar to the idea of restricted overlap, their emphasis is on modeling the acquisition of the locks prior to the service of a request.
Reference: [69] <author> Tay, Y.C., R. Suri and N. Goodman. </author> <title> "A Mean Value Performance Model for Locking in Databases: The No-Waiting Case". </title> <journal> Journal of the ACM, </journal> <volume> 32(3), </volume> <year> 1985. </year>
Reference-contexts: Since databases are typically a shared resource, the problem of concurrency control arises. It is popularly solved with locking methods. Thus, any read or write transactions must acquire some kind of token (or lock) before being allowed to proceed. Shared read/write access [16, 37, 51, 58] and locking models <ref> [69, 68, 71, 50, 30] </ref> have been developed to analyze the performance of such systems. Although the models seem similar to the idea of restricted overlap, their emphasis is on modeling the acquisition of the locks prior to the service of a request.
Reference: [70] <author> Terry, </author> <title> D.B. and D.C. Swinehart. "Managing Stored Voice in the Etherphone System". </title> <journal> ACM Transactions on Computer Systems, </journal> <month> February </month> <year> 1988. </year>
Reference-contexts: Otherwise, only a qualitative treatment, e.g. [63, 25], can be applied as the system dynamics become more complex. Other related research efforts have concentrated on limited media forms, such as audio, e.g. the Etherphone project <ref> [70] </ref> which deals with the considerable task of processing voice samples. The Etherphone concept has been extended to video [75] in a multimedia conferencing application, however, the video component is supported as an analog signal.
Reference: [71] <author> Thomasian, A. and I.K. Ryu. </author> <title> "A Decomposition Solution to the Queueing Network Model of the Centralized DBMS with Static Locking". </title> <booktitle> In Proc. ACM Sigmetrics Conference on Measurement and Modelling of Computer Systems. </booktitle> <publisher> ACM Press, </publisher> <year> 1983. </year>
Reference-contexts: Since databases are typically a shared resource, the problem of concurrency control arises. It is popularly solved with locking methods. Thus, any read or write transactions must acquire some kind of token (or lock) before being allowed to proceed. Shared read/write access [16, 37, 51, 58] and locking models <ref> [69, 68, 71, 50, 30] </ref> have been developed to analyze the performance of such systems. Although the models seem similar to the idea of restricted overlap, their emphasis is on modeling the acquisition of the locks prior to the service of a request.
Reference: [72] <author> Thomasian, A. and J. Menon. </author> <title> "Performance Analysis of RAID5 Disk Arrays with a Vacationing Server Model for Rebuild Mode Operation". </title> <booktitle> In Proceedings IEEE Data Engineering Conference, </booktitle> <month> February </month> <year> 1994. </year>
Reference-contexts: These systems involve a restriction on the network of "subtask" queues as opposed to constraining the service stages of an individual queue as in our approach to the restricted overlap problem. We note the fork-join queueing systems have been used effectively to model RAID-5 devices <ref> [43, 72] </ref>, which will be discussed further in Chapter 3. 6 1.3 Analysis Methodology The thrust of this research centers around an analytical representation of restricted overlap and its application to pragmatic performance issues. Typically, performance modeling efforts are approached from simulation and/or analytic techniques. <p> Previous work on analytic performance models of disk arrays, including RAID-5, have not accounted for the presence of a cached controller <ref> [43, 72, 15] </ref> or ignored the overlapped service which exists between the cache and data staging [49]. 46 The model presented in [43] uses an approach based on fork-join queueing [3]. <p> We assume the presence of a controller with sufficient non-volatile cache storage to take advantage of the fast write I/O operation and thus deemphasize the write problem of the non-cached environment modeled in [15]. The model of RAID-5 in <ref> [72] </ref> utilizes a vacation server model to specifically analyze the disk array in the presence of faults, i.e. the periods of time a disk is unavailable due to failure.
Reference: [73] <author> Tobagi, F.A., J. Pang, R. Baird, and M. Gang. </author> <title> "Streaming RAID A Disk Array Management System for Video Files". </title> <booktitle> In Proceedings of ACM Multimedia 93, </booktitle> <year> 1993. </year>
Reference-contexts: The use of distributed storage has the advantage of reducing contention at a single storage device. The distributed I/O architecture can also provide high data rates when objects are striped across the storage units, see e.g. <ref> [38, 13, 4, 73] </ref>. The goal of this chapter is to present an approach to multimedia storage for the kiosk application group architecture and evaluate its performance.
Reference: [74] <author> Varma, A. </author> <title> Private communication. </title> <year> 1993. </year>
Reference-contexts: However, the fault tolerance is derived from a data reconstructive procedure which leads to added device utilization. A future enhancement of the model could account for this added activity. Also, a more detailed analysis could be investigated for various write-back policies, as proposed by <ref> [74] </ref> for RAID cache destaging. Chapter 4 presents a multimedia kiosk architecture. We presented a model of an electronic library with an optical disk jukebox utilizing cyclic service of the storage platters.
Reference: [75] <author> Vin, H.M., P.T. Zellwger, D.C. Swinehart, and P. Venkat Rangan. </author> <title> "Multimedia Conferencing in the Etherphone Environment". </title> <journal> Computer, </journal> <volume> 24(10), </volume> <month> October </month> <year> 1991. </year>
Reference-contexts: Other related research efforts have concentrated on limited media forms, such as audio, e.g. the Etherphone project [70] which deals with the considerable task of processing voice samples. The Etherphone concept has been extended to video <ref> [75] </ref> in a multimedia conferencing application, however, the video component is supported as an analog signal. In this chapter, we investigate the performance of maintaining a set of multimedia stubs in a cache which is local to each kiosk.
Reference: [76] <author> Watson, </author> <title> K.S. "Performance Evaluation of Cyclic Service Strategies". </title> <editor> In Gelenbe, E., editor, </editor> <booktitle> Performance '84. </booktitle> <publisher> North-Holland, </publisher> <year> 1984. </year>
Reference-contexts: This represents the optimization of not loading a platter into the player if no requests are present for that platter when its turn in the cycle occurs. By introducing this optimization, we no longer have a simple expression for the switch-over statistics needed to directly apply the models of <ref> [5, 41, 66, 76] </ref>. Thus, we introduce a simple model assumption in an effort to approximate the jukebox model. We start by introducing some notation.
References-found: 76

