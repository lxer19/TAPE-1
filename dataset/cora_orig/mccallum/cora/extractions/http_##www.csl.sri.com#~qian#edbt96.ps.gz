URL: http://www.csl.sri.com/~qian/edbt96.ps.gz
Refering-URL: http://www.csl.sri.com/~qian/early-pubs.html
Root-URL: 
Title: Correct Schema Transformations  
Author: Xiaolei Qian 
Address: CA 94025, USA  
Affiliation: Computer Science Laboratory, SRI International,  
Abstract: We develop a formal basis of correct schema transformations. Schemas are formalized as abstract data types, and correct schema transformations are formalized as information-preserving signature interpretations. Our formalism captures transformations of all schema components, making it possible to transform uniformly constraints and queries along with structures. In addition, our formalism captures schema transformations between different data models as easily as those within the same data model. Compared with Hull's notion of relative information capacity, our notion of information preservation captures more schema transformations that are natural, and fewer schema transformations that are unnatural. Our work lays the foundation of a transformational frame work of schema manipulations.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> S. Abiteboul and R. Hull. </author> <title> Restructuring hierarchical database objects. </title> <journal> Theoretical Computer Science, </journal> <volume> 62 </volume> <pages> 3-38, </pages> <year> 1988. </year>
Reference-contexts: The first systematic study was done by Hull [11], where he introduced the notion of relative information capacity for comparing the information content of relational schemas. It has been widely used as the formal basis of schema containment and schema equivalence for object models <ref> [1, 12] </ref>, and for entity-relationship models [15, 17]. In [21], Hull's notion is extended to take into account update semantics.
Reference: 2. <author> Y. Bar-Hillel and R. Carnap. </author> <title> An outline of a theory of semantic information. </title> <editor> In Y. Bar-Hillel, editor, </editor> <booktitle> Language and Information, chapter 15, </booktitle> <pages> pages 221-274. </pages> <publisher> Addison-Wesley, </publisher> <year> 1964. </year>
Reference-contexts: However, only primitive forms of cardinality constraints are translated, and query translation is not considered. It is customary to treat a schema as a logical theory and instances of the schema as models of the theory. What constitutes the information content of a schema? According to Bar-Hillel and Carnap <ref> [2] </ref>, the (semantic) information carried by a logical theory (schema) can be characterized by the set of sentences (i.e., constraints) logically implied by the axioms of the theory relative to some language system (i.e., structures and operators). Thus, all three components of a schema contribute to its information content.
Reference: 3. <author> C. Batini, M. Lenzerini, and S. B. Navathe. </author> <title> A comparative analysis of methodologies for database schema integration. </title> <journal> ACM Computing Surveys, </journal> <volume> 18(4) </volume> <pages> 323-364, </pages> <month> December </month> <year> 1986. </year>
Reference-contexts: 1 Introduction Schema transformations, such as removing anomalies and redundancies, schema restructuring, and translating one schema to another (possibly in a different data model), constitute the major activities in schema integration <ref> [3] </ref>. Central to schema transformations is the need to compare the information content of schemas: in transforming one schema to another, the information content of the source schema should be preserved. <p> For example, most approaches to schema integration make the assumption that the schemas to be integrated are already formulated in some canonical data model (see <ref> [3] </ref> for a survey). As pointed out in [19], schema transformations between schemas in different data models are usually specified by ad hoc mapping rules, with no formalisms to guarantee correctness in terms of either information preservation or equivalence.
Reference: 4. <author> C. Beeri. </author> <title> Theoretical foundations for OODB's | a personal perspective. </title> <journal> IEEE Data Engineering Bulletin, </journal> <volume> 14(2) </volume> <pages> 8-12, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: Traditionally, schemas have been formalized using a structural approach, which describes the structure component of a schema using a (fixed) set of type constructors. However, the type constructors have been limited to simple ones that can be stored and manipulated directly, such as tuples and sets. Recently, Beeri <ref> [4, 5] </ref> has advocated a behavioral approach based on the theory of abstract data type (ADT) and algebraic specification (see [22] for a survey), which describes uniformly all components of a schema using a set of ADT specifications.
Reference: 5. <author> C. Beeri. </author> <title> New data models and languages | the challenge. </title> <booktitle> In Proceedings of the Eleventh ACM Symposium on Principles of Database Systems, </booktitle> <pages> pages 1-15, </pages> <year> 1992. </year>
Reference-contexts: Traditionally, schemas have been formalized using a structural approach, which describes the structure component of a schema using a (fixed) set of type constructors. However, the type constructors have been limited to simple ones that can be stored and manipulated directly, such as tuples and sets. Recently, Beeri <ref> [4, 5] </ref> has advocated a behavioral approach based on the theory of abstract data type (ADT) and algebraic specification (see [22] for a survey), which describes uniformly all components of a schema using a set of ADT specifications.
Reference: 6. <author> P. Buneman, S. Davidson, and A. Kosky. </author> <title> Theoretical aspects of schema merging. </title> <booktitle> In Proceedings of the Third International Conference on Extending Database Technology, </booktitle> <year> 1992. </year>
Reference-contexts: In other words, a schema is capable of storing information not only in its instances but also in its structures, constraints, and operators. Most work on schema transformations uses ad hoc and very limited measures in comparing the information content of schemas. In <ref> [6] </ref> for example, a schema contains less information than another if every instance of the first is an instance of the second. The first systematic study was done by Hull [11], where he introduced the notion of relative information capacity for comparing the information content of relational schemas.
Reference: 7. <author> M. A. Casanova, L. Tucherman, A. L. Furtado, and A. P. Braga. </author> <title> Optimization of relational schemas containing inclusion dependencies. </title> <booktitle> In Proceedings of the Fifteenth International Conference on Very Large Data Bases, </booktitle> <pages> pages 317-325, </pages> <year> 1989. </year>
Reference-contexts: When constraints are limited to functional and inclusion dependencies in the relational model, optimization rules are given in <ref> [7, 8] </ref> to ? This work was supported in part by the U.S. Department of Defense Advanced Research Projects Agency and the U.S.
Reference: 8. <author> M. A. Casanova and V. M. P. Vidal. </author> <title> Towards a sound view integration methodology. </title> <booktitle> In Proceedings of the Second ACM Symposium on Principles of Database Systems, </booktitle> <pages> pages 36-47, </pages> <year> 1983. </year>
Reference-contexts: When constraints are limited to functional and inclusion dependencies in the relational model, optimization rules are given in <ref> [7, 8] </ref> to ? This work was supported in part by the U.S. Department of Defense Advanced Research Projects Agency and the U.S. <p> Compared to schema6, schema5 has more redundancy because the third column of R 2 is redundantly stored as the third column of R 1 . Hence replacing schema5 by schema6 removes this redundancy. This schema transformation has been proposed in the literature <ref> [8, 17] </ref>. 6.2 Schema Integration Let i = ( i ; i ) for 1 i n be n schemas such that i and j are union-compatible for 1 i; j n. When we integrate these schemas into one, the first step is to identify the semantic relationships between them.
Reference: 9. <author> H. B. Enderton. </author> <title> A Mathematical Introduction to Logic. </title> <publisher> Academic Press, </publisher> <year> 1972. </year>
Reference-contexts: We denote by v;s (x) the set of -terms of sort s whose list of free variables is x of sort v, where v 2 S fl and s 2 S. The following definition is based on the notion of theory interpretation in <ref> [9, Section 2.7] </ref>. Let 0 = (S 0 ; 0 ; 0 ) be another signature. <p> The inverse of the above schema transformation fauthor 7! book ; name 7! title (x); year-of-birth 7! str-to-int (isbn (x))g (2) 2 For ease of presentation, our notion of signature interpretation is less general than the notion of theory interpretation in <ref> [9] </ref>, in that a sort symbol in the source signature can only be mapped to a sort symbol in the target signature.
Reference: 10. <author> J. Goguen and J. Meseguer. </author> <title> Order-sorted algebra I: Equational deduction for multiple inheritance, overloading, exceptions and partial operations. </title> <journal> Theoretical Computer Science, </journal> <volume> 105 </volume> <pages> 217-273, </pages> <year> 1992. </year>
Reference-contexts: Finally, Section 7 provides some concluding remarks. 2 Schemas 2.1 Basics We borrow the definitions of order-sorted signatures and algebras from the standard abstract data type literature <ref> [10] </ref>. A partially ordered set, or poset , is a pair (S; ), where S is a set and is a partial ordering on S. Let S fl be the set of finite sequences of members in S.
Reference: 11. <author> R. Hull. </author> <title> Relative information capacity of simple relational database schemata. </title> <journal> SIAM Journal of Computing, </journal> <volume> 15(3) </volume> <pages> 856-886, </pages> <month> August </month> <year> 1986. </year>
Reference-contexts: In [14], correct translation is studied from entity-relationship schemas to relational schemas, using a notion of schema equivalence from <ref> [11] </ref>. However, only primitive forms of cardinality constraints are translated, and query translation is not considered. It is customary to treat a schema as a logical theory and instances of the schema as models of the theory. <p> In [6] for example, a schema contains less information than another if every instance of the first is an instance of the second. The first systematic study was done by Hull <ref> [11] </ref>, where he introduced the notion of relative information capacity for comparing the information content of relational schemas. It has been widely used as the formal basis of schema containment and schema equivalence for object models [1, 12], and for entity-relationship models [15, 17]. <p> In [21], Hull's notion is extended to take into account update semantics. However, the constraint and operator components of schemas are largely ignored in these studies, even though Hull observed that the structure component alone of a relational schema does not contain much information at all <ref> [11] </ref>. In fact, it is very difficult to generalize the notion of relative information capacity to deal with constraints and operators. For example, it is shown in [15] that the information capacity of a schema can be increased by reducing its capacity of storing constraints, which is counterintuitive. <p> We compare our notion of information preservation with Hull's notion of relative information capacity (Section 5), and solve an open problem posed in <ref> [11] </ref>. Our formalism is used in Section 6 to demonstrate the correctness of some common schema transformations that have been proposed in the literature, such as redundancy removal, schema integration, and schema translation. <p> The schema transformations from library4 of Section 4.1 to library6 and back, which consist of identity maps, are both information-preserving, and hence library4 library6. The simplest forms of information-preserving schema transformation include instance-preserving schema extension and constraint-preserving schema reduction. 5 Relationship to Relative Information Capacity In <ref> [11] </ref>, Hull introduced four progressively more restrictive measures of the information content of schemas|relative information capacity. We first briefly define these measures, and then characterize their relationships to our notion of information preservation. Through this, we solve an open problem posed in [11]. <p> reduction. 5 Relationship to Relative Information Capacity In <ref> [11] </ref>, Hull introduced four progressively more restrictive measures of the information content of schemas|relative information capacity. We first briefly define these measures, and then characterize their relationships to our notion of information preservation. Through this, we solve an open problem posed in [11]. A schema = (; ) is relational if every function symbol in is either a constant or a predicate. A relational schema corresponds to a schema in the relational model. <p> Hull has shown that calculus dominance implies generic dominance, which in turn implies internal dominance, which in turn implies absolute dominance. 3 This definition is from [12], which is simpler and is not limited to relational schemas. The two definitions are equivalent for relational schemas <ref> [11] </ref>. Moreover, the implication from generic to internal dominance is strict if schemas contain key dependencies.
Reference: 12. <author> R. Hull and C. K. Yap. </author> <title> The format model: A theory of database organization. </title> <journal> Journal of the ACM, </journal> <volume> 31(3) </volume> <pages> 518-537, </pages> <month> July </month> <year> 1984. </year>
Reference-contexts: The first systematic study was done by Hull [11], where he introduced the notion of relative information capacity for comparing the information content of relational schemas. It has been widely used as the formal basis of schema containment and schema equivalence for object models <ref> [1, 12] </ref>, and for entity-relationship models [15, 17]. In [21], Hull's notion is extended to take into account update semantics. <p> Hull has shown that calculus dominance implies generic dominance, which in turn implies internal dominance, which in turn implies absolute dominance. 3 This definition is from <ref> [12] </ref>, which is simpler and is not limited to relational schemas. The two definitions are equivalent for relational schemas [11]. Moreover, the implication from generic to internal dominance is strict if schemas contain key dependencies.
Reference: 13. <author> A. Klug. </author> <title> Calculating constraints on relational expressions. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 5(3) </volume> <pages> 260-290, </pages> <month> September </month> <year> 1980. </year>
Reference-contexts: When constraints are limited to functional dependencies in the relational model and schema transformations are expressed as conjunctive queries, Klug gave an algorithm for deriving constraints in the target schema from those in the source schema <ref> [13] </ref>. When constraints are limited to functional and inclusion dependencies in the relational model, optimization rules are given in [7, 8] to ? This work was supported in part by the U.S. Department of Defense Advanced Research Projects Agency and the U.S.
Reference: 14. <author> V. M. Markowitz and A. Shoshani. </author> <title> Representing extended entity-relationship structures in relational databases: A modular approach. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 17(3) </volume> <pages> 423-464, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: As pointed out in [19], schema transformations between schemas in different data models are usually specified by ad hoc mapping rules, with no formalisms to guarantee correctness in terms of either information preservation or equivalence. In <ref> [14] </ref>, correct translation is studied from entity-relationship schemas to relational schemas, using a notion of schema equivalence from [11]. However, only primitive forms of cardinality constraints are translated, and query translation is not considered. <p> Similar schema translations from the entity-relationship model to the relational model have been proposed in <ref> [14] </ref>. 7 Conclusion We have developed a formal basis of correct schema transformations. In particular, schemas are formalized as ADTs, schema transformations are formalized as signature interpretations, and correct schema transformations are formalized as information-preserving signature interpretations.
Reference: 15. <author> R. J. Miller, Y. E. Ioannidis, and R. Ramakrishnan. </author> <title> Schema equivalence in heterogeneous systems: Bridging theory and practice. </title> <journal> Information Systems, </journal> <volume> 19(1) </volume> <pages> 3-32, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: It has been widely used as the formal basis of schema containment and schema equivalence for object models [1, 12], and for entity-relationship models <ref> [15, 17] </ref>. In [21], Hull's notion is extended to take into account update semantics. However, the constraint and operator components of schemas are largely ignored in these studies, even though Hull observed that the structure component alone of a relational schema does not contain much information at all [11]. <p> In fact, it is very difficult to generalize the notion of relative information capacity to deal with constraints and operators. For example, it is shown in <ref> [15] </ref> that the information capacity of a schema can be increased by reducing its capacity of storing constraints, which is counterintuitive. Traditionally, schemas have been formalized using a structural approach, which describes the structure component of a schema using a (fixed) set of type constructors.
Reference: 16. <author> X. Qian. </author> <title> Correct schema transformations. </title> <type> Technical Report SRI-CSL-95-08, </type> <institution> Computer Science Laboratory, SRI International, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: However, it remains open whether the implications from calculus to generic dominance, and from internal to absolute dominance are strict. 5.2 Comparison Let = (; ) and 0 = ( 0 ; 0 ) be two schemas. The proof of the following theorem can be found in <ref> [16] </ref>. Theorem 1. If 0 (calc), then v 0 . If v 0 , then 0 (abs). There exist schemas and 0 such that 0 (gen,int,abs) but 6v 0 (and hence 6 0 (calc)).
Reference: 17. <author> A. Rosenthal and D. Reiner. </author> <title> Tools and transformations|rigorous and otherwise| for practical database design. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 19(2) </volume> <pages> 167-211, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: It has been widely used as the formal basis of schema containment and schema equivalence for object models [1, 12], and for entity-relationship models <ref> [15, 17] </ref>. In [21], Hull's notion is extended to take into account update semantics. However, the constraint and operator components of schemas are largely ignored in these studies, even though Hull observed that the structure component alone of a relational schema does not contain much information at all [11]. <p> Compared to schema6, schema5 has more redundancy because the third column of R 2 is redundantly stored as the third column of R 1 . Hence replacing schema5 by schema6 removes this redundancy. This schema transformation has been proposed in the literature <ref> [8, 17] </ref>. 6.2 Schema Integration Let i = ( i ; i ) for 1 i n be n schemas such that i and j are union-compatible for 1 i; j n. When we integrate these schemas into one, the first step is to identify the semantic relationships between them.
Reference: 18. <author> S. Spaccapietra and C. Parent. </author> <title> View integration: A step forward in solving structural conflicts. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 6(2) </volume> <pages> 258-274, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: It is not hard to verify that the union of library2 and library2 0 together with the above semantic relationship is equivalent to library3 of Section 2.2. Hence library3 can be taken as their integration. This schema transformation has been proposed in the literature <ref> [18] </ref>. 6.3 Schema Translation Given two schemas and 0 , a schema transformation : ! 0 is a translation from to 0 if 0 .
Reference: 19. <editor> D. Tsichritzis and F. Lochovsky. </editor> <title> Data Models. </title> <publisher> Prentice-Hall, </publisher> <year> 1982. </year>
Reference-contexts: Central to schema transformations is the need to compare the information content of schemas: in transforming one schema to another, the information content of the source schema should be preserved. A schema usually consists of three components <ref> [19] </ref>: (1) a set of structures, (2) a set of constraints on the structures, and (3) a set of operators on the structures. The constraints capture the invariant properties common to all instances of the schema, and the operators provide the vocabulary for formulating queries in the schema. <p> The constraints capture the invariant properties common to all instances of the schema, and the operators provide the vocabulary for formulating queries in the schema. Most work on schema transformations has focused on the structure component of a schema (see <ref> [19, Chapter 14] </ref> for a summary of existing approaches). A classic example of schema transformations is the decomposition of a relation into various normal forms under functional and multivalued dependencies [20, Chapter 7]. <p> For example, most approaches to schema integration make the assumption that the schemas to be integrated are already formulated in some canonical data model (see [3] for a survey). As pointed out in <ref> [19] </ref>, schema transformations between schemas in different data models are usually specified by ad hoc mapping rules, with no formalisms to guarantee correctness in terms of either information preservation or equivalence.
Reference: 20. <author> J. D. Ullman. </author> <booktitle> Principles of Database and Knowledge Base Systems, </booktitle> <volume> volume 1. </volume> <publisher> Computer Science Press, </publisher> <year> 1988. </year>
Reference-contexts: Most work on schema transformations has focused on the structure component of a schema (see [19, Chapter 14] for a summary of existing approaches). A classic example of schema transformations is the decomposition of a relation into various normal forms under functional and multivalued dependencies <ref> [20, Chapter 7] </ref>. When constraints are limited to functional dependencies in the relational model and schema transformations are expressed as conjunctive queries, Klug gave an algorithm for deriving constraints in the target schema from those in the source schema [13]. <p> We say that is constraint-preserving if, for every -axiom p, (p) is a 0 - constraint. A classic example of constraint-preserving schema transformation in the relational model is the dependency-preserving decomposition of a relation into the third normal form (3NF) <ref> [20, Section 7.8] </ref>. Constraint preservation is not sufficient to preserve the instances of the source schema. An example is schema transformation (2) in Section 3. The simplest form of constraint-preserving schema transformation is schema extension, where the schema transformation consists of identity maps, and every -axiom is a 0 -constraint. <p> A classic example of instance-preserving schema transformation in the rela-tional model is the lossless-join decomposition of a relation into the Boyce-Codd normal form (BCNF) <ref> [20, Section 7.7] </ref>. Instance preservation is not sufficient to preserve the constraints of the source schema. An example is schema transformation (1) in Section 3. The simplest form of instance-preserving schema transformation is schema reduction, where the schema transformation consists of identity maps, and every 0 -axiom is a -constraint. <p> If v 0 and 0 v , then we say that and 0 are equivalent , denoted by 0 . A classic example of information-preserving schema transformation in the relational model is the dependency-preserving and lossless-join decomposition of a relation into 3NF <ref> [20, Section 7.8] </ref>.
Reference: 21. <author> V. M. P. Vidal and M. Winslett. </author> <title> Preserving update semantics in schema integration. </title> <booktitle> In Proceedings of the Third International Conference on Information and Knowledge Management, </booktitle> <pages> pages 263-271, </pages> <year> 1994. </year>
Reference-contexts: It has been widely used as the formal basis of schema containment and schema equivalence for object models [1, 12], and for entity-relationship models [15, 17]. In <ref> [21] </ref>, Hull's notion is extended to take into account update semantics. However, the constraint and operator components of schemas are largely ignored in these studies, even though Hull observed that the structure component alone of a relational schema does not contain much information at all [11].
Reference: 22. <author> M. Wirsing. </author> <title> Algebraic specification. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science. </booktitle> <volume> Vol. </volume> <editor> B: </editor> <title> Formal Models and Semantics, </title> <booktitle> chapter 13, </booktitle> <pages> pages 675-788. </pages> <publisher> MIT Press/Elsevier, </publisher> <year> 1990. </year> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: However, the type constructors have been limited to simple ones that can be stored and manipulated directly, such as tuples and sets. Recently, Beeri [4, 5] has advocated a behavioral approach based on the theory of abstract data type (ADT) and algebraic specification (see <ref> [22] </ref> for a survey), which describes uniformly all components of a schema using a set of ADT specifications. The behavioral approach has the additional advantage of supporting more complex and extensible data models. <p> It should be noticed that the notion of signature interpretation is more general than the notion of signature morphism commonly seen in the algebraic specification literature <ref> [22] </ref>, in that a function symbol in the source signature can be mapped to an arbitrary term, not just a function symbol, in the target signature. 2 Let = (S; ; ) and 0 = (S 0 ; 0 ; 0 ) be two signatures, and : ! 0 be a
References-found: 22

