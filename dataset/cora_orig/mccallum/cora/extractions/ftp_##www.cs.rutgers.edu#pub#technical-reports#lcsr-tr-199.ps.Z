URL: ftp://www.cs.rutgers.edu/pub/technical-reports/lcsr-tr-199.ps.Z
Refering-URL: http://www.cs.rutgers.edu/pub/technical-reports/
Root-URL: 
Email: ellman@cs.rutgers.edu  
Title: Abstraction via Approximate Symmetry  
Author: Thomas Ellman 
Web: LCSR-TR-199  
Address: New Brunswick, NJ 08903  
Affiliation: Department of Computer Science Rutgers University  
Abstract: Abstraction techniques are important for solving constraint satisfaction problems with global constraints and low solution density. In the presence of global constraints, backtracking search is unable to prune partial solutions. It therefore operates like pure generate-and-test. Abstraction improves on generate-and-test by enabling entire subsets of the solution space to be pruned early in a backtracking search process. This paper describes how abstraction spaces can be characterized in terms of approximate symmetries of the original, concrete search space. It defines two special types of approximate symmetry, called "range symmetry" and "domain symmetry", which apply to function finding problems. It also presents algorithms for automatically synthesizing hierarchic problem solvers based on range or domain symmetry. The algorithms operate by analyzing declarative descriptions of classes of constraint satisfaction problems. Both algorithms have been fully implemented. This paper concludes by presenting data from experiments testing the two synthesis algorithms and the resulting problem solvers on NP-hard scheduling and partitioning problems.
Abstract-found: 1
Intro-found: 1
Reference: [ Braudaway and Tong, 1989 ] <author> W. Braudaway and C. Tong. </author> <title> Automated synthesis of constrained generators. </title> <booktitle> In Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <address> Detroit, MI, </address> <year> 1989. </year>
Reference-contexts: Each algorithm inputs a description of a concrete search space and a concrete goal. Each outputs an abstract search space, an abstract goal and a set of constrained variable range generators. (Methods of constructing local goals and local abstract goals are described in <ref> [ Braudaway and Tong, 1989 ] </ref> .) 2 2 Symmetry and Abstraction An "abstraction space" A may be defined formally as a partition of the states in the underlying "concrete space" S. Thus each abstract state a*A is a set of concrete states s*S.
Reference: [ Crawford, 1992 ] <author> J. Crawford. </author> <title> A theoretical analysis of reasoning by symmetry in first order logic. </title> <booktitle> Working Notes of the AAAI Workshop on Tractable Reasoning, </booktitle> <address> San Jose, CA, </address> <year> 1992. </year>
Reference: [ Davis, 1987 ] <author> E. Davis. </author> <title> Constraint propagation with interval labels. </title> <journal> Artificial Intelligence, </journal> <volume> 32:281 - 332, </volume> <year> 1987. </year>
Reference-contexts: Approximate symmetry provides a rational reconstruction of the quota concept. Furthermore, approximate symmetry is more general, because it depends only on the algebraic form of the problem and not on semantic notions such as "resources". Abstractions based on windows operate in a manner similar to interval constraint propagation <ref> [ Davis, 1987 ] </ref> . Approximate symmetry provides a means of using such interval-based methods to attack problems with global constraints, to which constraint propagation techniques to not immediately apply.
Reference: [ Dechter and Pearl, 1987 ] <author> R. Dechter and J. Pearl. </author> <title> Network-based heuristics for constraint-satisfaction problems. </title> <journal> Artificial Intelligence, </journal> <volume> 34 </volume> <pages> 1-38, </pages> <year> 1987. </year>
Reference-contexts: In contrast, the methods presented here construct and exploit symmetries that are not present in the original problem. Approximations and abstractions have been used to construct heuristic evaluation functions in the context of constraint satisfaction <ref> [ Dechter and Pearl, 1987 ] </ref> and state space search [ Prieditis, 1991 ] .
Reference: [ Ellman, 1993 ] <author> T. </author> <title> Ellman. Synthesis of abstraction hierarchies for constraint satisfaction by clustering approximately equivalent objects. </title> <booktitle> In Proceedings of the Tenth International Conference on Machine Learning, </booktitle> <address> Amherst, MA, </address> <year> 1993. </year>
Reference-contexts: The partitioning is carried out by clustering R or D based on similarity of values of some known function whose domain is R or D respectively, and which is referenced by the goal function G (p; s). (These clustering techniques are described <ref> [ Ellman, 1993 ] </ref> .) Next, the original goal function G (p; s) is transformed into an abstract goal G (p; a) in order that it will operate on abstract states a that represent abstractions f of the 6 * Given: A set J of jobs; a set T of beginning
Reference: [ Garey and Johnson, 1979 ] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability: </title>
Reference-contexts: 1 Introduction Abstraction techniques are important for solving constraint satisfaction problems (CSPs) with global constraints and low solution density. Examples of such problems include the Partition problem and the Multiprocessor Scheduling problem, both of which are NP-hard <ref> [ Garey and Johnson, 1979 ] </ref> . In the presence of global constraints, backtracking search is unable to prune partial solutions [ Nadel, 1988 ] . It therefore operates like pure generate-and-test. When overall solution density is low, this approach is not effective, except when applied to small problems.
References-found: 6

