URL: http://www.media.mit.edu/~barons/papers/AudioServersAndToolKits-AVIOSJ.ps
Refering-URL: http://www.media.mit.edu/~barons/AronsAnnotatedBibliography.html
Root-URL: http://www.media.mit.edu
Title: The Design of Audio Servers and Toolkits for Supporting Speech in the User Interface  
Author: Barry Arons 
Affiliation: Media Laboratory Massachusetts Institute of Technology  
Abstract: 1 Abstract 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. S. Ackerman, S. Manandhar, and C. Schmandt. Xspeak: </author> <title> A use for a speech interface in a window system. </title> <booktitle> In Proceedings of 1990 Conference. </booktitle> <publisher> American Voice I/O Society, </publisher> <year> 1990. </year>
Reference-contexts: Another interesting application for an audio server is to provide a speech interface to a window system. Most current generation Unix applications are "mouse illiterate"|the users hands only leave the keyboard to move between applications. Xspeak <ref> [9, 1] </ref> provides a voice interface to controlling window management within the X Window System; such an application could easily be implemented on top of an audio server platform. 6 Software-Based All-Digital Audio Servers Window servers control a limited set of hardware: the mouse, display, and keyboard| a hardware-based audio server
Reference: [2] <author> B. Arons, C. Binding, K. Lantz, and C. Schmandt. </author> <title> The VOX audio server. </title> <booktitle> In Proceedings of the 2nd IEEE ComSoc International Multimedia Communications Workshop. IEEE Communications Society, </booktitle> <month> Apr. </month> <year> 1989. </year>
Reference-contexts: Etherphone successfully integrates audio into the Cedar programming environment, making voice accessible from the Tioga editor, and hence a range of other applications. This system is robust, and a strong emphasis was placed on issues such as reliability and security. 4 A Workstation-Based Audio Server The VOX Audio Server <ref> [2] </ref> was designed specifically to address the types of applications envisioned in a "desktop audio" workstation environment, and to remove the limitations cited in previous sections. Many of the core ideas for the audio server are inherited from the M.I.T. serial server and the X Window System [8].
Reference: [3] <author> P. J. Asente and R. R. Swick. </author> <title> X Window System Toolkit. </title> <publisher> Digital Press, </publisher> <year> 1990. </year>
Reference-contexts: Besides enabling access to the server and underlying hardware, it provides memory management, a comprehensive set of options that be can overridden by the user at run-time, and mechanisms for input, output, and event handling. The X Toolkit <ref> [3] </ref> is built on an object-oriented framework with simple base classes and multiple levels of inheritance. This development environment makes it easy to create new user interface components since many attributes can be inherited from existing components, thus substantially reducing the complexity of the software.
Reference: [4] <author> R. Kamel, K. Emami, and R. Eckert. PX: </author> <title> Supporting voice in workstations. </title> <booktitle> IEEE Computer, </booktitle> <month> Aug. </month> <year> 1990. </year>
Reference-contexts: This physical crossbar switch can be eliminated in a software-based all-digital implementation of an audio server. 5 Server Applications Application areas that the audio server supports include: telephone management <ref> [4, 16] </ref>, voice annotation, real-time teleconferencing, conversational answering machines, and, more generally, voice-based tools to support collaborative work. The server mechanism allows a range of such applications to work together synergistically. 5.1 Telephony To implement a simple auto-dialing mechanism, a client application accesses and manipulates a single LAUD.
Reference: [5] <author> J. McCormack and P. Asente. </author> <title> Using the X toolkit or how to write a widget. </title> <booktitle> In Proceedings of Summer USENIX '88. USENIX, </booktitle> <month> Summer </month> <year> 1988. </year>
Reference-contexts: Any application, such as the telephone answering machine described in section 5.1, can be built using a collection of audgets, or directly on top of an audio server. However, the program using the toolkit and audgets will be shorter, simpler, and more concise than the server-only version (e.g., see <ref> [5, 7] </ref>). 8.1 Voice Menu Audget Menus are commonly used in voice mail systems, interactive voice response systems, and a range of other speech applications. A voice menu is similar to a graphical pull-down or pop-up menu; it presents a set of choices to, and accepts input from, the user.
Reference: [6] <author> A. Nye, </author> <title> editor. X Protocol Reference Manual, volume 0 of X Window System Series. </title> <publisher> O'Reilly and Associates, </publisher> <year> 1989. </year>
Reference-contexts: To make the audio server and toolkit idea pervasive, there must be standard protocols and software interfaces|the wide acceptance of the X Window System is due in part to defining a low-level protocol specification <ref> [6] </ref> that is supported on a wide range of computer systems. Note that successful, and profitable, proprietary implementations of servers based on public standards can be built. In the fast-paced environment of "open systems," it is unlikely that a fully proprietary audio server will survive in the marketplace.
Reference: [7] <author> D. S. Rosenthal. </author> <title> A simple X 11 client program, or, how hard can it really be to write `hello world' ? In Proceedings of Winter USENIX '87. </title> <booktitle> USENIX, </booktitle> <month> Winter </month> <year> 1987. </year>
Reference-contexts: Any application, such as the telephone answering machine described in section 5.1, can be built using a collection of audgets, or directly on top of an audio server. However, the program using the toolkit and audgets will be shorter, simpler, and more concise than the server-only version (e.g., see <ref> [5, 7] </ref>). 8.1 Voice Menu Audget Menus are commonly used in voice mail systems, interactive voice response systems, and a range of other speech applications. A voice menu is similar to a graphical pull-down or pop-up menu; it presents a set of choices to, and accepts input from, the user.
Reference: [8] <author> R. W. Scheifler and J. Gettys. </author> <title> The X window system. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 5(2) </volume> <pages> 79-106, </pages> <month> Apr. </month> <year> 1986. </year>
Reference-contexts: Many of the core ideas for the audio server are inherited from the M.I.T. serial server and the X Window System <ref> [8] </ref>. VOX was developed to demonstrate the utility of an audio server, for building research prototypes, and to explore the usefulness of desktop audio applications.
Reference: [9] <author> C. Schmandt, M. S. Ackerman, and D. Hindus. </author> <title> Augmenting a window system with speech input. </title> <booktitle> IEEE Computer, </booktitle> <month> Aug. </month> <year> 1990. </year>
Reference-contexts: Another interesting application for an audio server is to provide a speech interface to a window system. Most current generation Unix applications are "mouse illiterate"|the users hands only leave the keyboard to move between applications. Xspeak <ref> [9, 1] </ref> provides a voice interface to controlling window management within the X Window System; such an application could easily be implemented on top of an audio server platform. 6 Software-Based All-Digital Audio Servers Window servers control a limited set of hardware: the mouse, display, and keyboard| a hardware-based audio server
Reference: [10] <author> C. Schmandt and B. Arons. </author> <title> A conversational telephone messaging system. </title> <journal> IEEE Transactions on Consumer Electronics, </journal> <volume> CE-30(3):xxi-xxiv, </volume> <month> Aug. </month> <year> 1984. </year>
Reference-contexts: The ability to detect touch-tones allows a user to interact with the software-based answering machine from a standard telephone set. Adding text-to-speech synthesis, speech recognition, and silence detection allows for conversational interactions, as explored in the Phone Slave project <ref> [10, 11] </ref>. 5.2 Workstation Control Speech can be used to control the workstation, augmenting (not replacing) the keyboard and mouse. The Conversational Desktop [13, 12, 15] provided a speech-based interface to functions such as scheduling, audio reminders, teleconferencing, and voice mail.
Reference: [11] <author> C. Schmandt and B. Arons. </author> <title> Phone Slave: A graphical telecommunications interface. </title> <booktitle> Proceedings of the Society for Information Display, </booktitle> <volume> 26(1) </volume> <pages> 79-82, </pages> <year> 1984. </year>
Reference-contexts: The ability to detect touch-tones allows a user to interact with the software-based answering machine from a standard telephone set. Adding text-to-speech synthesis, speech recognition, and silence detection allows for conversational interactions, as explored in the Phone Slave project <ref> [10, 11] </ref>. 5.2 Workstation Control Speech can be used to control the workstation, augmenting (not replacing) the keyboard and mouse. The Conversational Desktop [13, 12, 15] provided a speech-based interface to functions such as scheduling, audio reminders, teleconferencing, and voice mail.
Reference: [12] <author> C. Schmandt and B. Arons. </author> <title> A robust parser and dialog generator for a conversational office system. </title> <booktitle> In Proceedings of 1986 Conference, </booktitle> <pages> pages 355-365. </pages> <publisher> American Voice I/O Society, </publisher> <year> 1986. </year>
Reference-contexts: Adding text-to-speech synthesis, speech recognition, and silence detection allows for conversational interactions, as explored in the Phone Slave project [10, 11]. 5.2 Workstation Control Speech can be used to control the workstation, augmenting (not replacing) the keyboard and mouse. The Conversational Desktop <ref> [13, 12, 15] </ref> provided a speech-based interface to functions such as scheduling, audio reminders, teleconferencing, and voice mail. The hardware configuration for the system was complex and dynamic|audio was routed to and from recognizers, recorders, synthesizers, and customized audio processing equipment.
Reference: [13] <author> C. Schmandt and B. Arons. </author> <title> Conversational Desktop. </title> <journal> ACM SIGGRAPH Video Review, </journal> <volume> Volume 27, </volume> <year> 1987. </year>
Reference-contexts: Adding text-to-speech synthesis, speech recognition, and silence detection allows for conversational interactions, as explored in the Phone Slave project [10, 11]. 5.2 Workstation Control Speech can be used to control the workstation, augmenting (not replacing) the keyboard and mouse. The Conversational Desktop <ref> [13, 12, 15] </ref> provided a speech-based interface to functions such as scheduling, audio reminders, teleconferencing, and voice mail. The hardware configuration for the system was complex and dynamic|audio was routed to and from recognizers, recorders, synthesizers, and customized audio processing equipment.
Reference: [14] <author> C. Schmandt and B. Arons. </author> <title> Desktop audio. Unix Review, </title> <address> Oct. </address> <year> 1989. </year>
Reference-contexts: This article explores the design of audio servers, toolkits built on audio servers, and some applications that use these facilities to integrate voice into our everyday computing environment <ref> [14, 18] </ref>. It discusses the implementation of an audio server, the impact of a software-based digital audio system on the design of a server, proposes an architecture for a toolkit, and a minimal set of speech interface components.
Reference: [15] <author> C. Schmandt, B. Arons, and C. Simmons. </author> <title> Voice interaction in an integrated office and telecommunications environment. </title> <booktitle> In Proceedings of 1985 Conference. </booktitle> <publisher> American Voice I/O Society, </publisher> <year> 1985. </year>
Reference-contexts: Adding text-to-speech synthesis, speech recognition, and silence detection allows for conversational interactions, as explored in the Phone Slave project [10, 11]. 5.2 Workstation Control Speech can be used to control the workstation, augmenting (not replacing) the keyboard and mouse. The Conversational Desktop <ref> [13, 12, 15] </ref> provided a speech-based interface to functions such as scheduling, audio reminders, teleconferencing, and voice mail. The hardware configuration for the system was complex and dynamic|audio was routed to and from recognizers, recorders, synthesizers, and customized audio processing equipment.
Reference: [16] <author> C. Schmandt and S. Casner. Phonetool: </author> <title> Integrating telephones and workstations. </title> <booktitle> In Proceedings of GLOBECOM '89. IEEE Communications Society, </booktitle> <month> Nov. </month> <year> 1989. </year>
Reference-contexts: This physical crossbar switch can be eliminated in a software-based all-digital implementation of an audio server. 5 Server Applications Application areas that the audio server supports include: telephone management <ref> [4, 16] </ref>, voice annotation, real-time teleconferencing, conversational answering machines, and, more generally, voice-based tools to support collaborative work. The server mechanism allows a range of such applications to work together synergistically. 5.1 Telephony To implement a simple auto-dialing mechanism, a client application accesses and manipulates a single LAUD.
Reference: [17] <author> C. Schmandt and M. McKenna. </author> <title> An audio and telephone server for multi-media workstations. </title> <booktitle> In Proceedings of the 2nd IEEE Conference on Computer Workstations, </booktitle> <pages> pages 150-160. </pages> <publisher> IEEE Computer Society, </publisher> <month> Mar. </month> <year> 1988. </year>
Reference-contexts: Media Lab since 1984 <ref> [17] </ref>. This server originated with the desire to use a general purpose workstation to control audio equipment built into a customized minicomputer. The approach taken is simplistic; the "network" is a serial line (RS-232) that carries character-oriented commands between the workstation and the server.
Reference: [18] <author> C. R. Strathmeyer. </author> <title> Voice in computing: An overview of available technologies. </title> <booktitle> IEEE Computer, </booktitle> <month> Aug. </month> <year> 1990. </year>
Reference-contexts: This article explores the design of audio servers, toolkits built on audio servers, and some applications that use these facilities to integrate voice into our everyday computing environment <ref> [14, 18] </ref>. It discusses the implementation of an audio server, the impact of a software-based digital audio system on the design of a server, proposes an architecture for a toolkit, and a minimal set of speech interface components.
Reference: [19] <institution> Sun Microsystems Inc., Mountain View, California. </institution> <type> NeWS: Technical Overview, </type> <year> 1987. </year>
Reference-contexts: Some applications, however, will need access to the data for specialized audio processing, or to display the data in graphical form. One attractive alternative to having all the data cross the client-server interface is to have an interpreter in the server <ref> [19] </ref>. This permits a client application to download programs to the server that manipulate the data directly in the server. 7 Software Toolkits for Audio While an audio server may provide great flexibility, it can increase the complexity of application programs.
Reference: [20] <author> D. Swinehart. </author> <title> Telephone management in the Etherphone system. </title> <booktitle> In Proceedings of GlobeCom '87. GlobeCom, </booktitle> <month> Nov. </month> <year> 1987. </year>
Reference-contexts: The Etherphone system <ref> [20, 21] </ref> developed at Xerox PARC uses a centralized voice storage server. Etherphone successfully integrates audio into the Cedar programming environment, making voice accessible from the Tioga editor, and hence a range of other applications.

References-found: 20

