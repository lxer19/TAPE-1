URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1996/1996-15.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Phone: 2  
Title: Transforming Termination by Self-Labelling  
Author: Aart Middeldorp, Hitoshi Ohsaki, Hans Zantema 
Address: 305, Japan  P.O. Box 80.089, 3508 TB Utrecht, The Netherlands  
Affiliation: 1 Institute of Information Sciences and Electronics University of Tsukuba, Tsukuba  Department of Computer Science, Utrecht University  
Abstract: We introduce a new technique for proving termination of term rewriting systems. The technique, a specialization of Zantema's semantic labelling technique, is especially useful for establishing the correctness of transformation methods that attempt to prove termination by transforming term rewriting systems into systems whose termination is easier to prove. We apply the technique to modularity, distribution elimination, and currying, resulting in new results, shorter correctness proofs, and a positive solution to an open problem.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> F. Bellegarde and P. Lescanne, </author> <title> Termination by Completion, </title> <booktitle> Applicable Algebra in Engineering, Communication and Computing 1 (1990) 79-96. </booktitle>
Reference-contexts: Transformation orders (Bellegarde and Lescanne <ref> [1] </ref>), distribution elimination (Zantema [19]), and semantic labelling (Zantema [18]) are examples of methods of the second kind. The starting point of the present paper is the observation that semantic labelling is in a sense too powerful.
Reference: 2. <author> L. Bachmair and N. Dershowitz, </author> <title> Commutation, Transformation, and Termination, </title> <booktitle> Proceedings of the 8th Conference on Automated Deduction, Oxford, Lecture Notes in Computer Science 230 (1986) 5-20. </booktitle>
Reference: 3. <author> N. Dershowitz, </author> <title> Orderings for Term-Rewriting Systems, </title> <note> Theoretical Computer Science 17 (1982) 279-301. </note>
Reference-contexts: So there exists a well-founded order A on F that satisfies the condition of Definition 2. An easy induction argument on the structure of r reveals that l A rpo r for every l ! r 2 R. Here A rpo denotes the recursive path order (Dershowitz <ref> [3] </ref>) induced by the precedence A. Since A rpo is a reduction order, termination of (F ; R) follows. ut The next result states that any terminating TRS can be transformed by semantic labelling into a precedence terminating TRS. Theorem 4.
Reference: 4. <author> N. Dershowitz, </author> <title> Termination of Rewriting, </title> <note> Journal of Symbolic Computation 3(1) (1987) 69-116. </note>
Reference-contexts: 1 Introduction Termination is an undecidable property of term rewriting systems. In the literature (Dershowitz <ref> [4] </ref> contains an early survey of termination techniques) several methods for proving termination are described that are quite successful in practice.
Reference: 5. <author> N. Dershowitz, </author> <title> Hierarchical Termination, </title> <booktitle> Proceedings of the 4th International Workshop on Conditional (and Typed) Rewriting Systems, Jerusalem, Lecture Notes in Computer Science 968 (1995) 89-105. </booktitle>
Reference-contexts: For the rules in S lab we use the second clause. ut We would like to remark that neither the results of Krishna Rao [12, 13] nor the colorful theorems of Dershowitz <ref> [5] </ref> apply, because we don't put any restrictions on the base system R. One easily shows that S quasi-commutes ([2]) over right-linear R, but this doesn't hold for arbitrary TRSs R.
Reference: 6. <author> N. Dershowitz and J.-P. Jouannaud, </author> <title> Rewrite Systems, </title> <booktitle> in: Handbook of Theoretical Computer Science, </booktitle> <volume> Vol. </volume> <editor> B (ed. J. van Leeuwen), </editor> <publisher> North-Holland (1990) 243-320. </publisher>
Reference-contexts: Our final illustration of the strength of self-labelling can be found in Sect. 7 where we present a short proof of the preservation of termination under currying. 2 Preliminaries We assume the reader is familiar with the basics of term rewriting (as expounded in <ref> [6, 11] </ref>). This paper deals with the termination property. A term rewriting system (TRS for short) (F ; R) is said to be terminating if it doesn't admit infinite rewrite sequences.
Reference: 7. <author> M.C.F. Ferreira, </author> <title> Termination of Rewriting: Well-foundedness, Totality and Transformations, </title> <type> Ph.D. thesis, </type> <institution> University of Utrecht, </institution> <year> 1995. </year>
Reference-contexts: A thorough investigation of the relative strength of (variants of) distribution elimination and dummy elimination can be found in Ferreira <ref> [7] </ref>. 7 Currying In this final section we show that the main result of Kennaway, Klop, Sleep, and de Vries [10]|the preservation of termination under currying|is easily proved by self-labelling. Currying is the transformation on TRSs defined below. Definition 12.
Reference: 8. <author> M.C.F. Ferreira and H. Zantema, </author> <title> Dummy Elimination: Making Termination Easier, </title> <booktitle> Proceedings of the 10th International Conference on Fundamentals of Computation Theory, Dresden, Lecture Notes in Computer Science 965 (1995) 243-252. </booktitle>
Reference-contexts: The transformation E distr is similar in spirit to the dummy elimination technique of Ferreira and Zantema <ref> [8] </ref>: a function symbol is eliminated from (the right-hand sides of) the rewrite rules without duplicating the other parts. In dummy elimination this is achieved by introducing a fresh constant to separate those parts, rather than gluing different parts together.
Reference: 9. <author> S. Kamin and J.J. Levy, </author> <title> Two Generalizations of the Recursive Path Ordering, </title> <type> unpublished manuscript, </type> <institution> University of Illinois, </institution> <year> 1980. </year>
Reference-contexts: If termination of (F lab ; R lab [ dec (F ; )) is proved by means of a recursive path order, as will be the case with self-labelling, then a corresponding termination ordering for (F ; R) can be described as a semantic path order as defined in <ref> [9] </ref>. 3 Self-Labelling In this section we show that every terminating TRS can be transformed by semantic labelling into a TRS whose termination is very easily established. The proof of this result forms the basis of a powerful technique for proving the correctness of transformation techniques for establishing termination.
Reference: 10. <author> J.R. Kennaway, J.W. Klop, R. Sleep, and F.-J. de Vries, </author> <title> On Comparing Curried and Uncurried Rewrite Systems, </title> <type> report CS-R9350, </type> <institution> CWI, </institution> <address> Amsterdam, </address> <year> 1993. </year> <note> To appear in the Journal of Symbolic Computation. </note>
Reference-contexts: The proof reveals how to improve distribution elimination in the absence of distribution rules. 3. Using self-labelling we give a short proof of the main result of Kennaway, Klop, Sleep, and de Vries <ref> [10] </ref>, the correctness of currying, which for the purpose of this paper we view as a termination method of the second kind. The proofs of the above results are remarkably similar. The remainder of this paper is organized as follows. In the next section we recapitulate semantic labelling. <p> Here x 1 ; : : : ; x i ; y are pairwise different variables and f i+1 denotes f if i + 1 = n. Clearly termination of R @ implies termination of R. Theorem 13 Kennaway et al. <ref> [10] </ref>. If R is a terminating TRS then R @ is ter minating. ut The proof in [10] is rather involved. We present a self-labelling proof. Proof. Let F 0 = F @ n f@g. <p> Clearly termination of R @ implies termination of R. Theorem 13 Kennaway et al. <ref> [10] </ref>. If R is a terminating TRS then R @ is ter minating. ut The proof in [10] is rather involved. We present a self-labelling proof. Proof. Let F 0 = F @ n f@g. The question is how termination of (F @ ; R @ ) follows from termination of (F 0 ; R). <p> For the rules in (R @ n R) lab we use the second clause. ut The reader is invited to compare our proof with the one of Kennaway et al. <ref> [10] </ref>.
Reference: 11. <author> J.W. Klop, </author> <title> Term Rewriting Systems, </title> <booktitle> in: Handbook of Logic in Computer Science, </booktitle> <volume> Vol. </volume> <editor> II (eds. S. Abramsky, D. Gabbay and T. Maibaum), </editor> <publisher> Oxford University Press (1992) 1-116. </publisher>
Reference-contexts: Our final illustration of the strength of self-labelling can be found in Sect. 7 where we present a short proof of the preservation of termination under currying. 2 Preliminaries We assume the reader is familiar with the basics of term rewriting (as expounded in <ref> [6, 11] </ref>). This paper deals with the termination property. A term rewriting system (TRS for short) (F ; R) is said to be terminating if it doesn't admit infinite rewrite sequences.
Reference: 12. <author> M.R.K. Krishna Rao, </author> <title> Modular Proofs for Completeness of Hierarchical Term Rewriting Systems, </title> <note> Theoretical Computer Science 151 (1995) 487-512. </note>
Reference-contexts: For the rules in S lab we use the second clause. ut We would like to remark that neither the results of Krishna Rao <ref> [12, 13] </ref> nor the colorful theorems of Dershowitz [5] apply, because we don't put any restrictions on the base system R. One easily shows that S quasi-commutes ([2]) over right-linear R, but this doesn't hold for arbitrary TRSs R.
Reference: 13. <author> M.R.K. Krishna Rao, </author> <title> Simple Termination of Hierarchical Combinations of Term Rewriting Systems, </title> <booktitle> Proceedings of the 2nd International Symposium on Theoretical Aspects of Computer Software, Sendai, Lecture Notes in Computer Science 789 (1994) 203-223. </booktitle>
Reference-contexts: For the rules in S lab we use the second clause. ut We would like to remark that neither the results of Krishna Rao <ref> [12, 13] </ref> nor the colorful theorems of Dershowitz [5] apply, because we don't put any restrictions on the base system R. One easily shows that S quasi-commutes ([2]) over right-linear R, but this doesn't hold for arbitrary TRSs R.
Reference: 14. <author> A. Middeldorp, </author> <title> A Sufficient Condition for the Termination of the Direct Sum of Term Rewriting Systems, </title> <booktitle> Proceedings of the 4th IEEE Symposium on Logic in Computer Science, </booktitle> <address> Pacific Grove (1989) 396-401. </address>
Reference: 15. <author> E. Ohlebusch, </author> <title> Modular Properties of Composable Term Rewriting Systems, </title> <type> Ph.D. thesis, </type> <institution> Universitat Bielefeld, </institution> <year> 1994. </year>
Reference-contexts: Modularity is concerned with the preservation of properties under combinations of TRSs. Recently the focus in modularity research (Ohlebusch <ref> [15] </ref> contains a recent overview) has shifted to so-called hierarchical combinations ([5, 12, 13]). We will prove the following result: the combination of an arbitrary terminating TRS and a terminating recursive program scheme that defines new functions is terminating.
Reference: 16. <author> Y. Toyama, </author> <title> On the Church-Rosser Property for the Direct Sum of Term Rewriting Systems, </title> <note> Journal of the ACM 34(1) (1987) 128-143. </note>
Reference: 17. <author> Y. Toyama, </author> <title> Counterexamples to Termination for the Direct Sum of Term Rewriting Systems, </title> <note> Information Processing Letters 25 (1987) 141-143. </note>
Reference-contexts: As a very special case of Theorem 6 we mention that the disjoint union of any terminating TRS R and the TRS S consisting of the single projection rule g (x; y) ! x is terminating. This is to be contrasted with the celebrated counterexample of Toyama <ref> [17] </ref> against the preservation of termination under disjoint unions in which one of the TRSs consists of both projection rules g (x; y) ! x and g (x; y) ! y. 5 Distribution Elimination Our second application of self-labelling is the proof of a conjecture of Zan-tema [19] concerning distribution elimination.
Reference: 18. <author> H. Zantema, </author> <title> Termination of Term Rewriting by Semantic Labelling, </title> <note> Fundamenta Informaticae 24 (1995) 89-105. </note>
Reference-contexts: Transformation orders (Bellegarde and Lescanne [1]), distribution elimination (Zantema [19]), and semantic labelling (Zantema <ref> [18] </ref>) are examples of methods of the second kind. The starting point of the present paper is the observation that semantic labelling is in a sense too powerful. <p> In this paper we make use of the fact that termination (confluence) is preserved under signature extension, which follows from modularity considerations ([14, 16]). In this preliminary section we briefly recall the ingredients of semantic labelling (Zantema <ref> [18] </ref>). Actually we present a special case which is sufficient for our purposes. Let (F; R) be a TRS and A = (A; ff A g f2F ) an F -algebra with non-empty carrier A. Let be a well-founded order on A, write &lt; for the union of and equality. <p> ff a (x 1 ; : : : ; x n ) ! f b (x 1 ; : : : ; x n ) j f 2 F and a; b 2 A with a bg: The following theorem is a special case of the main result of Zantema <ref> [18] </ref>. Theorem 1. Let (F ; R) be a TRS, A an F-algebra, and a well-founded order on the carrier of A. <p> This is not the case for semantic labelling as defined in <ref> [18] </ref>, but for our purpose it suffices.
Reference: 19. <author> H. Zantema, </author> <title> Termination of Term Rewriting: Interpretation and Type Elimination, </title> <note> Journal of Symbolic Computation 17 (1994) 23-50. 15 </note>
Reference-contexts: Transformation orders (Bellegarde and Lescanne [1]), distribution elimination (Zantema <ref> [19] </ref>), and semantic labelling (Zantema [18]) are examples of methods of the second kind. The starting point of the present paper is the observation that semantic labelling is in a sense too powerful. <p> Using self-labelling we prove a new modularity result: the extension of any terminating term rewriting system with a terminating recursive program scheme that defines new functions is again terminating. 1 2. Using self-labelling we give a positive solution to an open problem in <ref> [19] </ref> concerning distribution elimination: right-linearity is not necessary for the correctness of distribution elimination in the absence of distribution rules. The proof reveals how to improve distribution elimination in the absence of distribution rules. 3. <p> counterexample of Toyama [17] against the preservation of termination under disjoint unions in which one of the TRSs consists of both projection rules g (x; y) ! x and g (x; y) ! y. 5 Distribution Elimination Our second application of self-labelling is the proof of a conjecture of Zan-tema <ref> [19] </ref> concerning distribution elimination. Let (F ; R) be a TRS and let e 2 F be a designated function symbol whose arity is at least one. <p> Observe that e does not occur in E distr (R) if and only if e does not occur in the left-hand sides of rewrite rules of R that are not distribution rules for e. One of the main results of Zantema <ref> [19] </ref> is stated below. Theorem 7. Let (F ; R) be a TRS and let e 2 F be a non-constant symbol which does not occur in the left-hand sides of rewrite rules of R that are not distribution rules for e. 1. <p> The mapping E distr . 2. If E distr (R) is simply terminating and right-linear then R is simply termi nating. 3. If E distr (R) is totally terminating then R is totally terminating. ut The following example from <ref> [19] </ref> shows that right-linearity is essential in parts 1 and 2. Example 1. <p> The TRS E distr (R) = ff (a; b; x) ! f (x; x; a); f (a; b; x) ! f (x; x; b)g can be shown to be simply terminating, while the term f (a; b; e (a; b)) admits an infinite reduction in R. In <ref> [19] </ref> it is conjectured that in the absence of distribution rules for e the right-linearity assumption in part 1 of Theorem 7 can be omitted.
References-found: 19

