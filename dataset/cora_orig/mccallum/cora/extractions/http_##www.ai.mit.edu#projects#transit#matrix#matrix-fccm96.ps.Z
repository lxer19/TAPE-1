URL: http://www.ai.mit.edu/projects/transit/matrix/matrix-fccm96.ps.Z
Refering-URL: http://www.ai.mit.edu/projects/transit/matrix/matrix_fccm96_abs.html
Root-URL: 
Email: eamirsky@ai.mit.edu andre@mit.edu  
Phone: (617) 253-8597 (617) 253-5868 545  FAX: (617) 253-5060  
Title: MATRIX: A Reconfigurable Computing Architecture with Configurable Instruction Distribution and Deployable Resources  
Author: Ethan Mirsky Andr e DeHon 
Address: Cambridge, MA 02139  
Affiliation: Technology Sq.  
Note: FCCM'96 IEEE Symposium on FPGAs for Custom Computing Machines April 17-19, 1996, Napa, CA  
Abstract: MATRIX is a novel, coarse-grain, reconfigurable computing architecture which supports configurable instruction distribution. Device resources are allocated to controlling and describing the computation on a per task basis. Application-specific regularity allows us to compress the resources allocated to instruction control and distribution, in many situations yielding more resources for datapaths and computations. The adaptability is made possible by a multi-level configuration scheme, a unified configurable network supporting both datapaths and instruction distribution, and a coarse-grained building block which can serve as an instruction store, a memory element, or a computational element. In a 0.5 CMOS process, the 8-bit functional unit at the heart of the MATRIX architecture has a footprint of roughly 1.5mmfi1.2mm, making single dies with over a hundred function units practical today. At this process point, 100MHz operation is easily achievable, allowing MATRIX components to deliver on the order of 10 Gop/s (8-bit ops). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Narasimha B. Bhat, Kamal Chaudhary, and Ernest S. Kuh. </author> <title> Performance-Oriented Fully Routable Dynamic Architecture for a Field Programmable Logic Device. </title> <institution> UCB/ERL M93/42, University of California, Berke-ley, </institution> <month> June </month> <year> 1993. </year>
Reference-contexts: While the MATRIX BFU is similar in functional composition to these devices, MATRIX is unique in control flexibility, allowing the control structure, be it SIMD, VLIW, MIMD, systolic, or a hybrid structure, to be customized on a per application basis. Dharma <ref> [1] </ref>, DPGA [14], and VEGA [9] demonstrate various fixed design points with dedicated context memory for reusing the computing and interconnect resources in fine-grained programmable arrays. Dharma has a rigid decomposition of resources into computational phases.
Reference: [2] <author> Michael Bolotski, Thomas Simon, Carlin Vieri, Ra-jeevan Amirtharajah, and Thomas F. Knight Jr. </author> <title> Abacus: A 1024 Processor 8ns SIMD Array. </title> <booktitle> In Advanced Research in VLSI 1995, </booktitle> <year> 1995. </year>
Reference-contexts: Consequently, more array resources are available as less control resources are used. To handle mixed granularity data efficiently, a number of architectures have been proposed or built which have segmentable datapaths (e.g. [13] <ref> [2] </ref>). These generally exhibit SIMD instruction control for the datapath, but can be reconfigured to treat the n bit datapath as k, n k -bit words, for certain, restricted, values of k.
Reference: [3] <author> Timothy Bridges. </author> <title> The GPA Machine: A Generally Partitionable MSIMD Architecture. </title> <booktitle> In Proceedings of the Third Symposium on The Frontiers for Massively Parallel Computations, </booktitle> <pages> pages 196-202. </pages> <publisher> IEEE, </publisher> <year> 1990. </year>
Reference-contexts: In the SIMD cases, MATRIX allows the construction of the master control and reduction networks out of the same pool of resources as array logic, avoiding the need for fixed control logic on each chip or an off-chip array controller. Like MSIMD (e.g. <ref> [3, 11] </ref>) or MIMD multigauge [13] designs, the array can be broken into units operating on different instructions. Synchronization between the separate functions can be lock-step VLIW, like the convolution example, or completely orthogonal depending on the application.
Reference: [4] <author> Dev C. Chen and Jan M. Rabaey. </author> <title> A Reconfigurable Multiprocessor IC for Rapid Prototyping of Algorithmic-Specific High-Speed DSP Data Paths. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> 27(12) </volume> <pages> 1895-1904, </pages> <month> December </month> <year> 1992. </year>
Reference-contexts: SIMD machines fix the assignment of control resources, memory, and datapath flow at fabrication time, while traditional programmable logic does not support the high-speed reuse of functional units to perform different functions. 4 Relation to Existing Computing Devices Owing to the coarse-grain configurability, the most closely related architectures are PADDI <ref> [4] </ref>, PADDI-2 [15], and PMEL's vDSP [6]. PADDI has 16-bit functional units with an 8-word deep instruction memory per processing element. A chip-wide instruction pointer is broadcast on a cycle-by-cycle basis giving PADDI a distinctly VLIW control structure.
Reference: [5] <author> Don Cherepacha and David Lewis. </author> <title> A Datap-ath Oriented Architecture for FPGAs. </title> <booktitle> In Second International ACM/SIGDA Workshop on Field-Programmable Gate Arrays. ACM, </booktitle> <month> February </month> <year> 1994. </year> <title> proceedings not available outside of the workshop, contact author lewis@eecg.toronto.edu. </title>
Reference-contexts: The differences in these devices exhibit the tension associated with making a pre-fabrication partitioning and assignment of resources between instruction memory, data memory, and active computing resources. While necessarily granular in nature, MATRIX allows the resource assignment to be made on a per application basis. The proposed DP-FPGA <ref> [5] </ref> controls multiple FPGA LUTs or interconnect primitives with a single instruction. However, the assignment of instructions to functional units, and hence the width of the datapath of identically controlled elements is fixed at fabrication time.
Reference: [6] <author> Peter Clarke. </author> <title> Pilkington Preps Reconfigurable Video DSP. Electronic Engineering Times, </title> <note> page 16, August 7 1995. Online briefing http://www.pmel. com/dsp.html. </note>
Reference-contexts: control resources, memory, and datapath flow at fabrication time, while traditional programmable logic does not support the high-speed reuse of functional units to perform different functions. 4 Relation to Existing Computing Devices Owing to the coarse-grain configurability, the most closely related architectures are PADDI [4], PADDI-2 [15], and PMEL's vDSP <ref> [6] </ref>. PADDI has 16-bit functional units with an 8-word deep instruction memory per processing element. A chip-wide instruction pointer is broadcast on a cycle-by-cycle basis giving PADDI a distinctly VLIW control structure.
Reference: [7] <author> Andr e DeHon. </author> <title> DPGA Utilization and Application. </title> <booktitle> In Proceedings of the 1996 International Symposium on Field Programmable Gate Arrays. </booktitle> <address> ACM/SIGDA, </address> <month> February </month> <year> 1996. </year> <note> Extended version available as Transit Note #129, available FCCM'96 -- IEEE Symposium on FPGAs for Custom Computing Machines April 17-19, 1996, Napa, CA via anonymous FTP transit.ai.mit.edu: transit-notes/tn129.ps.Z. </note>
Reference-contexts: However, the lack of resources for instruction distribution make them efficient only when the functional diversity is low i.e. when the same operation is required repeatedly and that entire operation can be fit spatially onto the FPGA or FPGAs in the system. Dynamically Programmable Gate Arrays (DPGAs) [14] <ref> [7] </ref> dedicate a modest amount of on-chip area to store additional instructions allowing them to support higher oper FCCM'96 -- IEEE Symposium on FPGAs for Custom Computing Machines April 17-19, 1996, Napa, CA ation diversity than traditional FPGAs.
Reference: [8] <author> Dave Epstein. </author> <title> Chromatic Raises the Multimedia Bar. </title> <type> Microprocessor Report, </type> <institution> 9(14):23 ff., </institution> <month> October 23 </month> <year> 1995. </year>
Reference-contexts: These generally exhibit SIMD instruction control for the datapath, but can be reconfigured to treat the n bit datapath as k, n k -bit words, for certain, restricted, values of k. Modern multimedia processors (e.g. [12] <ref> [8] </ref>) allow the datapath to be treated as a collection of 8, 16, 32, or 64 bit words. MATRIX handles mixed or varying granularities by composing BFUs and FCCM'96 -- IEEE Symposium on FPGAs for Custom Computing Machines April 17-19, 1996, Napa, CA deploying instruction control.
Reference: [9] <author> David Jones and David Lewis. </author> <title> A Time-Multiplexed FPGA Architecture for Logic Emulation. </title> <booktitle> In Proceedings of the IEEE 1995 Custom Integrated Circuits Conference, </booktitle> <pages> pages 495-498. </pages> <publisher> IEEE, </publisher> <month> May </month> <year> 1995. </year>
Reference-contexts: While the MATRIX BFU is similar in functional composition to these devices, MATRIX is unique in control flexibility, allowing the control structure, be it SIMD, VLIW, MIMD, systolic, or a hybrid structure, to be customized on a per application basis. Dharma [1], DPGA [14], and VEGA <ref> [9] </ref> demonstrate various fixed design points with dedicated context memory for reusing the computing and interconnect resources in fine-grained programmable arrays. Dharma has a rigid decomposition of resources into computational phases. The DPGA provides a more flexible multicontext implementation with a small context memory (e.g. 4 in the prototype).
Reference: [10] <author> Junien Labrousse and Gerrit A. Slavenburg. CREATE-LIFE: </author> <title> A Modular Design Approach for High Performance ASIC's. </title> <booktitle> In Compcon '90: Thirty-fifth IEEE Computer Society International Conference, Digest of Papers, </booktitle> <pages> pages 427-433. </pages> <publisher> IEEE, </publisher> <month> Febru-ary </month> <year> 1990. </year>
Reference-contexts: Since the datapath size and assignment of control resources is not fixed for a MATRIX component, MATRIX has greater flexibility to match the datapath composition and granularity to the needs of the application. The LIFE <ref> [10] </ref> VLIW architecture was designed to allow easy synthesis of function-specific micro-programmed architectures. The number and type of the functional units can be varied prior to fabrication. The control structure and resources in the architecture remain fixed.
Reference: [11] <author> Gary J. Nutt. </author> <title> Microprocessor Implementation of a Parallel Processor. </title> <booktitle> In Proceedings of the Fourth Annual International Symposium on Computer Architecture, </booktitle> <pages> pages 147-152. </pages> <publisher> ACM, </publisher> <year> 1977. </year>
Reference-contexts: In the SIMD cases, MATRIX allows the construction of the master control and reduction networks out of the same pool of resources as array logic, avoiding the need for fixed control logic on each chip or an off-chip array controller. Like MSIMD (e.g. <ref> [3, 11] </ref>) or MIMD multigauge [13] designs, the array can be broken into units operating on different instructions. Synchronization between the separate functions can be lock-step VLIW, like the convolution example, or completely orthogonal depending on the application.
Reference: [12] <author> Michael Slater. </author> <note> MicroUnity Lifts Veil on MediaPro-cessor. Microprocessor Report, 9(14):11 ff., </note> <month> October 23 </month> <year> 1995. </year>
Reference-contexts: These generally exhibit SIMD instruction control for the datapath, but can be reconfigured to treat the n bit datapath as k, n k -bit words, for certain, restricted, values of k. Modern multimedia processors (e.g. <ref> [12] </ref> [8]) allow the datapath to be treated as a collection of 8, 16, 32, or 64 bit words. MATRIX handles mixed or varying granularities by composing BFUs and FCCM'96 -- IEEE Symposium on FPGAs for Custom Computing Machines April 17-19, 1996, Napa, CA deploying instruction control.
Reference: [13] <author> Lawrence Snyder. </author> <title> An Inquiry into the Benefits of Multigauge Parallel Computation. </title> <booktitle> In Proceedings of the 1985 International Conference on Parallel Processing, </booktitle> <pages> pages 488-492. </pages> <publisher> IEEE, </publisher> <month> August </month> <year> 1985. </year>
Reference-contexts: In the SIMD cases, MATRIX allows the construction of the master control and reduction networks out of the same pool of resources as array logic, avoiding the need for fixed control logic on each chip or an off-chip array controller. Like MSIMD (e.g. [3, 11]) or MIMD multigauge <ref> [13] </ref> designs, the array can be broken into units operating on different instructions. Synchronization between the separate functions can be lock-step VLIW, like the convolution example, or completely orthogonal depending on the application. <p> Consequently, more array resources are available as less control resources are used. To handle mixed granularity data efficiently, a number of architectures have been proposed or built which have segmentable datapaths (e.g. <ref> [13] </ref> [2]). These generally exhibit SIMD instruction control for the datapath, but can be reconfigured to treat the n bit datapath as k, n k -bit words, for certain, restricted, values of k.
Reference: [14] <author> Edward Tau, Ian Eslick, Derrick Chen, Jeremy Brown, and Andr e DeHon. </author> <title> A First Generation DPGA Implementation. </title> <booktitle> In Proceedings of the Third Canadian Workshop on Field-Programmable Devices, </booktitle> <pages> pages 138-143, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: However, the lack of resources for instruction distribution make them efficient only when the functional diversity is low i.e. when the same operation is required repeatedly and that entire operation can be fit spatially onto the FPGA or FPGAs in the system. Dynamically Programmable Gate Arrays (DPGAs) <ref> [14] </ref> [7] dedicate a modest amount of on-chip area to store additional instructions allowing them to support higher oper FCCM'96 -- IEEE Symposium on FPGAs for Custom Computing Machines April 17-19, 1996, Napa, CA ation diversity than traditional FPGAs. <p> While the MATRIX BFU is similar in functional composition to these devices, MATRIX is unique in control flexibility, allowing the control structure, be it SIMD, VLIW, MIMD, systolic, or a hybrid structure, to be customized on a per application basis. Dharma [1], DPGA <ref> [14] </ref>, and VEGA [9] demonstrate various fixed design points with dedicated context memory for reusing the computing and interconnect resources in fine-grained programmable arrays. Dharma has a rigid decomposition of resources into computational phases.
Reference: [15] <author> Alfred K. Yeung and Jan M. Rabaey. </author> <title> A 2.4 GOPS Data-Drivern Reconfigurable Multiprocessor IC for DSP. </title> <booktitle> In Proceedings of the 1995 IEEE International Solid-State Circuits Conference, </booktitle> <pages> pages 108-109. </pages> <publisher> IEEE, </publisher> <month> February </month> <year> 1995. </year>
Reference-contexts: fix the assignment of control resources, memory, and datapath flow at fabrication time, while traditional programmable logic does not support the high-speed reuse of functional units to perform different functions. 4 Relation to Existing Computing Devices Owing to the coarse-grain configurability, the most closely related architectures are PADDI [4], PADDI-2 <ref> [15] </ref>, and PMEL's vDSP [6]. PADDI has 16-bit functional units with an 8-word deep instruction memory per processing element. A chip-wide instruction pointer is broadcast on a cycle-by-cycle basis giving PADDI a distinctly VLIW control structure.
References-found: 15

