URL: http://www.cs.ucl.ac.uk/staff/ucacerc/evolve.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/staff/E.Collopy/research.html
Root-URL: http://www.cs.ucl.ac.uk
Email: Email: fecollopy, mleveneg@cs.ucl.ac.uk  
Title: Evolving Example Relations to Satisfy Functional Dependencies  
Author: Ethan Collopy and Mark Levene 
Keyword: f Database Design, Functional Dependency, Numerical Dependency, Armstrong Relation, Example Relation, Stochastic Algorithms, Data Mining g  
Date: January 8, 1997  
Address: Gower Street London WC1E 6BT, U.K.  
Affiliation: Department of Computer Science University College London  
Abstract: Example and counterexample relations are important during the process of database design in order to guide the database designer towards specifying a correct set of integrity constraints; we assume that the constraints are specified in terms of functional dependencies (FDs). We propose a stochastic algorithm which evolves an example relation that satisfies a set of FDs from a random relation of a specified cardinality and domain size as input by the database designer. This allows choice in the structure of the example relation viewed, therefore providing variety in the example relations which can be created. Extensive simulations were conducted over 72 FD sets with the domain and tuple sizes varied over numerous batches, each containing 1000 sample evolutions. All evolved relations were mined using a quality function whose criterion is exact satisfaction of the given FD set. Our results show that this probabilistic procedure for a set of FDs and a batch of random relations evolves a relation which has a high probability of possessing a high quality, in terms of proximity to an Armstrong relation, when the domain size is sufficient and given that there are none or few sets of attributes without determinations. We also give a novel algorithm, which uses a backtracking mechanism for presenting, one at a time and on demand, all relevant counterexample relations with cardinality two. Such techniques are highly useful tools within the context of database design. 
Abstract-found: 1
Intro-found: 1
Reference: [ADA93] <author> P. Atzeni and V. De Antonellis. </author> <title> Relational Database Theory. </title> <address> Benjamin/Cummings, Redwood City, California, </address> <year> 1993. </year>
Reference: [Arm74] <author> W. Armstrong. </author> <title> Dependency structures of data base relationships. </title> <booktitle> In Proceedings of the IFIP Congress, </booktitle> <pages> pages 580 - 583, </pages> <address> Stockholm, 1974. </address> <publisher> Elsevier - North-Holland. </publisher>
Reference: [BDFS84] <author> C. Beeri, M. Dowd, R. Fagin, and R. Statman. </author> <title> On the structure of Armstrong relations for functional dependencies. </title> <journal> Journal of the ACM, </journal> <volume> 31(1):30 - 46, </volume> <month> January </month> <year> 1984. </year>
Reference-contexts: Dave 1246 19 NW1 London Dave 1246 19 YO2 York Dan 3748 7 NW1 London Dan 3748 7 W14 London Charles 1246 11 YO2 York Table 24: An evolved AR with the same domain size j GEN (F ) j in the size of the FD set are discussed in <ref> [BDFS84] </ref>. <p> evolves relations by mutating attributes of FDs which are inside the specified set and not by forcing violations of FDs which hold outside of the specified set. = fAB ! G; CD ! G; EF ! Gg; F 5 following the form of the FD sets described previously and in <ref> [BDFS84] </ref>. For F 5 there are many attributes which are independent of each other and so it is highly improbable that an Armstrong relation will be formed.
Reference: [BS93] <author> T. Back and H. Schwefel. </author> <title> An overview of evolutionary algorithms for parameter optimization. </title> <journal> Evolutionary Computation, </journal> <volume> 1(1):1- 23, </volume> <year> 1993. </year>
Reference: [DKS92] <author> J. Demetrovics, G. Katona, and A. Sali. </author> <title> The characterization of branching dependencies. </title> <journal> Discrete Applied Mathematics, </journal> <volume> 40 </volume> <pages> 139-153, </pages> <year> 1992. </year>
Reference: [DP90] <author> B.A. Davey and H.A. Priestly. </author> <title> Introduction to lattices and order. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, U.K., </address> <year> 1990. </year>
Reference: [DT95] <author> J. Demetrovics and V. D. </author> <title> Thi. Some observations on the minimal Armstrong relations for normalised relation schemes. </title> <journal> Computers and Artificial Intelligence, </journal> <volume> 14(5):455 - 467, </volume> <year> 1995. </year>
Reference: [Fag82] <author> R. Fagin. </author> <title> Armstrong databases. </title> <type> Technical Report RJ3440 (40926), </type> <institution> IBM Research Report, </institution> <year> 1982. </year>
Reference: [FPSSU96] <editor> U. M. Fayyad, G. Piatetsky-Shapiro, P. Smyth, and R. Uthurusamy, editors. </editor> <booktitle> Advances in Knowledge Discovery and Data Mining. </booktitle> <publisher> MIT Press, </publisher> <year> 1996. </year>
Reference-contexts: average number of states to absorption with respect to FD size and degree of interference (the number of interfering pairs in the FD set). * Incorporate our techniques of using NDs to approximate FDs and quality functions into data mining algorithms to evaluate and improve methods of data dependency mining <ref> [FPSSU96] </ref>.
Reference: [GL90] <author> G. Gottlob and L. Libkin. </author> <title> Investigations on Armstrong relations, dependency inference and excluded functional dependencies. </title> <journal> Acta Cybernetica, </journal> <year> 1990. </year>
Reference: [GM85a] <author> J. Grant and J. Minker. </author> <title> Inferences for numerical dependencies. </title> <journal> Theoretical Computer Science, </journal> <volume> 41 </volume> <pages> 271-287, </pages> <year> 1985. </year>
Reference: [GM85b] <author> J. Grant and J. Minker. </author> <title> Normalisation and axiomatisation for dependencies. </title> <journal> Information and Control, </journal> <volume> 65 </volume> <pages> 1-17, </pages> <year> 1985. </year>
Reference: [HS94] <author> M. Holsheimer and A.P.J.M. Siebes. </author> <title> Data mining: the search for knowledge in databases. </title> <type> Technical report, </type> <institution> Centrum voor Wiskunde en Informatica, </institution> <year> 1994. </year>
Reference-contexts: Data mining tools require a quality function which assesses and classifies the knowledge discovered in a form which is understandable by the user <ref> [HS94] </ref>. Our quality function describes the proximity of relation s to an Armstrong relation for FD set F, being one when the evolved example relation is an Armstrong relation.
Reference: [KS60] <author> J.G. Kemeny and J.L. Snell. </author> <title> Finite Markov Chains. </title> <address> D. </address> <publisher> van Nostrand, </publisher> <address> Princeton, NJ, </address> <year> 1960. </year>
Reference: [Lev95] <author> M. Levene. </author> <title> A lattice view of functional dependencies in incomplete relations. </title> <journal> Acta Cyberetica, </journal> <volume> 12:181 - 207, </volume> <year> 1995. </year>
Reference: [MR86] <author> H. Mannila and K-J. Raiha. </author> <title> Design by example: An application of Armstrong relations. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 33:126 - 141, </volume> <year> 1986. </year>
Reference: [MR92] <author> H. Mannila and K-J. Raiha. </author> <title> The Design of Relational Databases. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1992. </year>
Reference-contexts: Example 6.1 We show the result of forming an Armstrong relation (AR) for this set in Table 19, using Algorithm 14.2 in <ref> [MR92] </ref>. It has 7 tuples (exactly j GEN (F ) j +1) and a domain size of 5.
Reference: [PM88] <author> S. Park and K. Miller. </author> <title> Random number generators: Good ones are hard to find. </title> <journal> Communications of the ACM, </journal> <volume> 31(10):1192 - 1201, </volume> <year> 1988. </year>
Reference-contexts: For the random number generation a linear congruent procedure was used taken from the algorithm provided by Park and Miller <ref> [PM88] </ref> which avoids cycles by incorporating multiplier and modulus having 534 million full period generators. C++ with embedded CORAL was also used for assessing the quality of the relations after evolution, the knowledge discovery component of our system.
Reference: [RSS92] <author> R. Ramakrishnan, D. Srivastava, and S. Sudarshan. </author> <title> CORAL control, relations and logic. </title> <booktitle> In Proceedings of the 18th VLDB Conference, </booktitle> <pages> pages 238 - 250, </pages> <address> Vancouver, British Columbia, Canada, </address> <year> 1992. </year>
Reference: [SM81] <author> A. M. Silva and M. A. Melkanoff. </author> <title> A method for helping discover the dependencies of a relation. </title> <editor> In H. Gallaire, J. Minker, and J. M. Nicolas, editors, </editor> <booktitle> Advances in Data Base Theory, </booktitle> <volume> volume 1, </volume> <pages> pages 115-133, </pages> <address> New York, U.S.A, 1981. </address> <publisher> Plenum Press. </publisher>
Reference: [Ull88] <author> J. D. Ullman. </author> <booktitle> Principles of Database and Knowledge-Base Systems, </booktitle> <volume> volume 1. </volume> <publisher> Computer Science Press, </publisher> <address> Rockville, MD, </address> <year> 1988. </year>
Reference: [Wil95] <author> M. Wild. </author> <title> Computations with finite closure systems and implications. </title> <booktitle> In Proceedings of the International Conference on Computing and Combinatorics, </booktitle> <pages> pages 111-120, </pages> <address> Xian, China, </address> <year> 1995. </year> <month> 22 </month>
References-found: 22

