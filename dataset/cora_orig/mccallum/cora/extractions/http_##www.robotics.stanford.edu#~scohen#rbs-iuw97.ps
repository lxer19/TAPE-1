URL: http://www.robotics.stanford.edu/~scohen/rbs-iuw97.ps
Refering-URL: http://www.robotics.stanford.edu/~scohen/
Root-URL: http://www.robotics.stanford.edu
Email: fscohen,guibasg@cs.stanford.edu  
Title: Shape-based Image Retrieval Using Geometric Hashing  
Author: Scott D. Cohen Leonidas J. Guibas 
Address: Stanford, CA 94305  
Affiliation: Computer Science Department Stanford University  
Date: May 1997 1  
Note: Proceedings of the ARPA Image Understanding Workshop,  
Abstract: We present a general strategy for shape-based image retrieval which considers similarity modulo a given transformation group G. The shape content of an image is summarized by recording what geometric primitives, such as line segments and circular arcs, fit where in the image. Geometric hashing is used to compute a set of primitive features which are invariant under a G-transformation of the image. Our search engine is feature-based in the sense that similarity is determined by looping over the features in the query and asking: Which database images have features that are close to a given query feature? The most similar database images are ones that have many features which are close to query features. We apply our approach to an example database of 500 chinese character bitmaps. 
Abstract-found: 1
Intro-found: 1
Reference: [ Arya et al., 1994 ] <author> S. Arya, D.M. Mount, N.S. Ne-tanyahu, R. Silverman, and A.Y. Wu. </author> <title> An optimal algorithm for approximate nearest neighbor searching. </title> <booktitle> In Proceedings of the Fifth Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 573-582, </pages> <year> 1994. </year>
Reference-contexts: We use the L 2 distance between the normalized point features l ; a b as a measure of feature dissimilarity. Our choice for a Euclidean nearest-neighbor searching algorithm is due to Arya, Mount, et.al. in <ref> [ Arya et al., 1994 ] </ref> . The algorithm preprocesses a set S R d of n points in O (n log n) time and O (n) space, so that the k nearest neighbors to a given query point q can be computed in O (k log n) time.
Reference: [ Brin, 1995 ] <author> S. Brin. </author> <title> Near neighbor search in large metric spaces. </title> <booktitle> In Proceedings of VLDB `95. 21st International Conference on Very Large Data Bases, </booktitle> <pages> pages 574-584, </pages> <year> 1995. </year>
Reference-contexts: The features in the chinese character database are the line segments in the invariant projected illustration. What is an appropriate distance measure between two line segments? We might, for example, use the Haus-dorff distance between two line segments. There is work <ref> [ Yianilos, 1993, Brin, 1995 ] </ref> on nearest-neighbor searching in general metric spaces (i.e. using only the distance between two objects). Here we opt for a simpler, ad hoc approach which embeds the segments as points in a four-dimensional Euclidean space.
Reference: [ Cohen and Guibas, 1996 ] <author> Scott D. Cohen and Leonidas J. Guibas. </author> <title> Shape-based illustration indexing and retrieval some first steps. </title> <booktitle> In Proceedings of the ARPA Image Understanding Workshop, </booktitle> <pages> pages 1209-1212, </pages> <month> February </month> <year> 1996. </year>
Reference-contexts: Our feature extraction approach starts with an illustration of the image. The illustration curves are projected onto a basis of basic shapes such as line segments, corners, circular arcs, etc.. More precisely, we record what basic shapes fit where in the illustration curves. This strategy was first suggested in <ref> [ Cohen and Guibas, 1996 ] </ref> . The projection step is discussed further in section 2. An invariant set of geometric primitives (a.k.a. basic shapes) is then derived from the projected illustration using geometric hashing ( [ Lamdan and Wolfson, 1988 ] ).
Reference: [ Cohen and Guibas, 1997 ] <author> Scott D. Cohen and Leonidas J. Guibas. </author> <title> Partial matching of planar polylines under similarity transformations. </title> <booktitle> In Proceedings of the Eighth Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 777-786, </pages> <month> January </month> <year> 1997. </year>
Reference-contexts: The FEX algorithm in [ Etemadi, 1992 ] finds straight segments and circular arcs, while the algorithm in [ Rosin and West, 1995 ] identifies straight segments, circular arcs, and elliptical arcs. The algorithm in <ref> [ Cohen and Guibas, 1997 ] </ref> locates any pattern shape described as a polyline within another polyline, allowing for a similarity transformation of the pattern. There is a potential problem with separating the curve extraction and curve projection steps.
Reference: [ Etemadi, 1992 ] <author> A. Etemadi. </author> <title> Robust segmentation of edge data. </title> <booktitle> In International Conference on Image Processing and its Applications, </booktitle> <pages> pages 311-314, </pages> <month> April </month> <year> 1992. </year>
Reference-contexts: Different databases may call for different bases. There are many methods for finding common geometric primitives in polylines. For example, the segmentation algorithm in [ Lowe, 1987 ] uses a split-and-merge algorithm to divide an edgel chain into straight segments. The FEX algorithm in <ref> [ Etemadi, 1992 ] </ref> finds straight segments and circular arcs, while the algorithm in [ Rosin and West, 1995 ] identifies straight segments, circular arcs, and elliptical arcs.
Reference: [ Guibas and Tomasi, 1996 ] <author> Leonidas J. Guibas and Carlo Tomasi. </author> <title> Image retrieval and robot vision research at Stanford. </title> <booktitle> In Proceedings of the ARPA Image Understanding Workshop, </booktitle> <pages> pages 101-108, </pages> <month> February </month> <year> 1996. </year>
Reference-contexts: 1 Introduction The function of a content-based image retrieval system <ref> [ Niblack et al., 1993, Guibas and Tomasi, 1996 ] </ref> is typically to find database images that look similar to a given query image or drawing. Database and query images are usually summarized by their color, shape, and texture content.
Reference: [ Lamdan and Wolfson, 1988 ] <author> Yehezkel Lamdan and Haim J. Wolfson. </author> <title> Geometric hashing: A general and efficient model-based recognition scheme. </title> <booktitle> In Second International Conference on Computer Vision, </booktitle> <pages> pages 238-249, </pages> <year> 1988. </year>
Reference-contexts: This strategy was first suggested in [ Cohen and Guibas, 1996 ] . The projection step is discussed further in section 2. An invariant set of geometric primitives (a.k.a. basic shapes) is then derived from the projected illustration using geometric hashing ( <ref> [ Lamdan and Wolfson, 1988 ] </ref> ). The invariance is with respect to a transformation of the projected illustration. The geometric hashing step is the subject of section 3. Define the features of an image to be the geometric primitives in its invariant projected illustration.
Reference: [ Lowe, 1987 ] <author> D.G. Lowe. </author> <title> Three-dimensional object recognition from single two-dimensional images. </title> <journal> Artificial Intelligence, </journal> <volume> 31 </volume> <pages> 355-395, </pages> <year> 1987. </year> [ <note> Niblack et al., </note> <author> 1993 ] W. Niblack, R. Barber, W. Equitz, M. Flickner, E. Glasman, D. Petkovic, P. Yanker, C. Faloutsos, and G. Taubin. </author> <title> The QBIC project: querying images by content using color, texture, and shape. </title> <booktitle> In Proceedings of the SPIE, volume 1908, </booktitle> <pages> pages 173-187, </pages> <year> 1993. </year>
Reference-contexts: The basis of basic shapes is chosen so that as little information as possible is lost during projection. Different databases may call for different bases. There are many methods for finding common geometric primitives in polylines. For example, the segmentation algorithm in <ref> [ Lowe, 1987 ] </ref> uses a split-and-merge algorithm to divide an edgel chain into straight segments. The FEX algorithm in [ Etemadi, 1992 ] finds straight segments and circular arcs, while the algorithm in [ Rosin and West, 1995 ] identifies straight segments, circular arcs, and elliptical arcs.
Reference: [ Ogniewicz and Kubler, 1995 ] <author> R. L. Ogniewicz and O. Kubler. </author> <title> Hierarchic Voronoi skeletons. </title> <journal> Pattern Recognition, </journal> <volume> 28(3) </volume> <pages> 343-359, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: Our shape summary of a character is the medial axis of the set of black pixels which define the character. The results shown in figure 2 were computed using algorithms and software described in <ref> [ Ogniewicz and Kubler, 1995 ] </ref> .
Reference: [ Rosin and West, 1995 ] <author> Paul L. Rosin and Ge-off A.W. West. </author> <title> Nonparametric segmentation of curves into various representations. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 17(12) </volume> <pages> 1140-1153, </pages> <month> December </month> <year> 1995. </year>
Reference-contexts: For example, the segmentation algorithm in [ Lowe, 1987 ] uses a split-and-merge algorithm to divide an edgel chain into straight segments. The FEX algorithm in [ Etemadi, 1992 ] finds straight segments and circular arcs, while the algorithm in <ref> [ Rosin and West, 1995 ] </ref> identifies straight segments, circular arcs, and elliptical arcs. The algorithm in [ Cohen and Guibas, 1997 ] locates any pattern shape described as a polyline within another polyline, allowing for a similarity transformation of the pattern.
Reference: [ Yianilos, 1993 ] <author> P. Yianilos. </author> <title> Data structures and algorithms for nearest neighbor searching in general metric spaces. </title> <booktitle> In Proceedings of the Fourth Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 311-321, </pages> <year> 1993. </year> <title> the right column shows the results window. Each query takes about one second on an SGI Indy. </title>
Reference-contexts: The features in the chinese character database are the line segments in the invariant projected illustration. What is an appropriate distance measure between two line segments? We might, for example, use the Haus-dorff distance between two line segments. There is work <ref> [ Yianilos, 1993, Brin, 1995 ] </ref> on nearest-neighbor searching in general metric spaces (i.e. using only the distance between two objects). Here we opt for a simpler, ad hoc approach which embeds the segments as points in a four-dimensional Euclidean space.
References-found: 11

