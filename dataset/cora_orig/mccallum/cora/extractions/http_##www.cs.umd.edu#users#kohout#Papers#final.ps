URL: http://www.cs.umd.edu/users/kohout/Papers/final.ps
Refering-URL: http://www.cs.umd.edu/users/kohout/
Root-URL: 
Email: kohout,hendler@cs.umd.edu  musliner@src.honeywell.com  
Phone: phone: (301) 405-7027 fax: (301) 405-6707  phone: (612) 951-7599  
Title: Guaranteeing Safety in Spatially Situated Agents  
Author: Robert C. Kohout and James A. Hendler David J. Musliner 
Address: College Park, MD 20742  MN65-2200 3660 Technology Drive Minneapolis, MN 55418  
Affiliation: Department of Computer Science and Institute for Advanced Computer Studies University of Maryland  Honeywell Technology Center  
Abstract: Mission-critical" systems, which include such diverse applications as nuclear power plant controllers, "fly-by-wire" airplanes, medical care and monitoring systems, and autonomous mobile vehicles, are characterized by the fact that system failure is potentially catastrophic. The high cost of failure justifies the expenditure of considerable effort at design-time in order to guarantee the correctness of system behavior. This paper examines the problem of guaranteeing safety in a well studied class of robot motion problems known as the "asteroid avoidance problem." We establish necessary and sufficient conditions for ensuring safety in the simple version of this problem which occurs most frequently in the literature, as well as sufficient conditions for a more general and realistic case. In doing so, we establish functional relationships between the number, size and speed of obstacles, the robot's maximum speed and the conditions which must be maintained in order to ensure safety. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Bang, T. </author> <year> 1951. </year> <title> A solution of the "plank problem". </title> <booktitle> In Proceedings of the American Mathematical Society, </booktitle> <volume> volume 2, </volume> <pages> 990-993. </pages>
Reference-contexts: Now we need to show that the n half-planks, 1 ; : : : ; n , cannot completely cover the safety region. To do this, we use the 2-dimensional version of Bang's solution to Tarski's "plank problem" <ref> (Bang 1951) </ref>, which states 1 : Theorem 2 (Bang) If L is a convex body of minimal width l in a 2-dimensional Euclidean plane, and L is contained in the union of p planks of widths h 1 ; : : : ; h p , then h 1 + +
Reference: <author> Bentley, J. L., and Ottmann, T. A. </author> <year> 1979. </year> <title> Algorithms for reporting and counting geometric intersections. </title> <journal> IEEE Transactions on Computers C-28(9):643-647. </journal>
Reference-contexts: This proof satisfies the existence criteria. In order to compute the solution, we need to compute the intersection of the n half-planks with the safety region. If k is the number of intersections of the half-planks, this can be done in O ((k + n)logn) using a modification of <ref> (Bentley & Ottmann 1979) </ref> algorithm for reporting the intersection of line segments, as elaborated in (Melhorn 1984, pp. 154-160). (Chazelle & Edelsbrunner 1992) describe an O (nlogn+k) algorithm which could also be modified to find safe harbors within the safety region. Either of these solutions satisfies the ability criterion.
Reference: <author> Canny, J., and Reif, J. </author> <year> 1987. </year> <title> New lower bound techniques for robot motion planning problems. </title> <booktitle> In Proceedings of the 28th IEEE Symposium of Foundations of Computer Science, </booktitle> <pages> 49-60. </pages>
Reference-contexts: The speed of the obstacles is fixed. (Reif & Sharir 1985) named this class of problems the asteroid avoidance problem, and they showed that, for the three-dimensional case, the problem is PSPACE-hard when the velocity of the robot is bounded, and N P-hard even when the robot's velocity is unbounded. <ref> (Canny & Reif 1987) </ref> showed that the 2-dimensional case is N P-hard.
Reference: <author> Chazelle, B., and Edelsbrunner, H. </author> <year> 1992. </year> <title> An optimal algorithm for intersecting line segments in the plane. </title> <journal> Journal of the Association for Computing Machinery 39(1):1 - 54. </journal>
Reference-contexts: If k is the number of intersections of the half-planks, this can be done in O ((k + n)logn) using a modification of (Bentley & Ottmann 1979) algorithm for reporting the intersection of line segments, as elaborated in (Melhorn 1984, pp. 154-160). <ref> (Chazelle & Edelsbrunner 1992) </ref> describe an O (nlogn+k) algorithm which could also be modified to find safe harbors within the safety region. Either of these solutions satisfies the ability criterion.
Reference: <author> Fujimura, K., and Samet, H. </author> <year> 1989. </year> <title> A hierarchical strategy for path planning among moving obstacles. </title> <journal> IEEE Transactions on Robots and Automation 5(1) </journal> <pages> 61-69. </pages>
Reference: <author> Kant, K., and Zucker, S. </author> <year> 1986. </year> <title> Towards efficient trajectory planning: Path velocity decomposition. </title> <journal> International Journal of Robotics Research 5 </journal> <pages> 72-89. </pages>
Reference: <author> Lozano-Perez, T., and Wesley, M. </author> <year> 1979. </year> <title> An algorithm for planning collision-free paths among polyhedral obstacles. </title> <journal> Communications of the ACM 22(10) </journal> <pages> 560-570. </pages>
Reference: <author> Melhorn, K. </author> <year> 1984. </year> <title> Multi-dimensional Searching and Computational Geometry, </title> <booktitle> volume 3. </booktitle> <address> New York, Berlin, Heidelberg: </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: If k is the number of intersections of the half-planks, this can be done in O ((k + n)logn) using a modification of (Bentley & Ottmann 1979) algorithm for reporting the intersection of line segments, as elaborated in <ref> (Melhorn 1984, pp. 154-160) </ref>. (Chazelle & Edelsbrunner 1992) describe an O (nlogn+k) algorithm which could also be modified to find safe harbors within the safety region. Either of these solutions satisfies the ability criterion.
Reference: <author> Musliner, D. J.; Durfee, E. H.; and Shin, K. G. </author> <year> 1995. </year> <title> World modeling for the dynamic construction of real-time control plans. </title> <booktitle> Artificial Intelligence 74(1) </booktitle> <pages> 83-127. </pages>
Reference-contexts: Determining a correct plan of action is the focus of AI Planning research. However, the high-variance time requirements of current techniques make it difficult to guarantee that they will produce a correct solution in time to actually use it. CIRCA <ref> (Musliner, Durfee, & Shin 1995) </ref> was developed to address this problem: by modeling the world as a finite set of situation-states, with well defined transitions between them, CIRCA is able to search the situation space "o*ine" (i.e. before the system is actually deployed), in an effort to find a closed set
Reference: <author> Reif, J., and Sharir, M. </author> <year> 1985. </year> <title> Motion planning in the presense of moving obstacles. </title> <booktitle> In Proceedings of the 25th IEEE Symposium of Foundations of Computer Science, </booktitle> <pages> 144-154. </pages>
Reference-contexts: The trajectories of the obstacles are known to the system in advance. 2. The obstacles move linearly. 3. The speed of the obstacles is fixed. <ref> (Reif & Sharir 1985) </ref> named this class of problems the asteroid avoidance problem, and they showed that, for the three-dimensional case, the problem is PSPACE-hard when the velocity of the robot is bounded, and N P-hard even when the robot's velocity is unbounded. (Canny & Reif 1987) showed that the 2-dimensional <p> For instance (Fu-jimura & Samet 1989) give an O (n 2 logn) algorithm for solving the asteroid avoidance problem, under the assumption that the robot can move faster than all of the obstacles. <ref> (Reif & Sharir 1985) </ref> claim that under such an assumption, it is always possible to find such a path, as long as the initial position of the robot is not in the "shadow" of any obstacle, where the shadow of an obstacle is defined to be all those locations from which <p> This dominance allows us to effectively decouple the two components, and to consider the problem of maintaining safety independently of the influences of goals-of-achievement. This has allowed us to develop and implement a simulation in which a robot can achieve goals while avoiding moving obstacles. <ref> (Reif & Sharir 1985) </ref> present a search-based solution to the asteroids problem which is exponential in the number of moving obstacles.
Reference: <author> Saksena, M.; da Silva, J.; and Agrawala, A. </author> <year> 1993. </year> <title> Design and implementation of Maruti. </title> <type> Technical Report CS-TR-3181, </type> <institution> University of Maryland Department of Computer Science. </institution>
Reference-contexts: Using the Maruti hard real-time operating system <ref> (Saksena, da Silva, & Agrawala 1993) </ref>, we are able to guarantee processing time to the safety-critical routines, and allow the search to use the processor time that is left over when the critical routines have finished.
References-found: 11

