URL: http://www.cs.columbia.edu/~ezk/research/usenetfs-ea/usenetfs.ps
Refering-URL: http://www.cs.columbia.edu/~ezk/research/wip.html
Root-URL: http://www.cs.columbia.edu
Email: fezk,iong@cs.columbia.edu  
Title: Usenetfs: A Stackable File System for Large Article Directories structure from being flat to one
Author: Erez Zadok and Ion Badulescu 
Note: Usenetfs is a file system that rearranges the directory  
Affiliation: Computer Science Department, Columbia University  
Abstract: The Internet has grown much in popularity in the past few years. Numerous users read USENET newsgroups daily for entertainment, work, study, and more. USENET News servers have seen a gradual increase in the traffic exchanged between them, to a point where the hardware and software supporting the servers is no longer capable of meeting demand, at which point the servers begin dropping articles they could not process. The rate of this increase has been faster than software or hardware improvements were able to keep up, resulting in much time and effort spent by administrators upgrading their news systems. One of the primary reasons for the slowness of news servers has been the need to process many articles in very large flat directories representing newsgroups such as control.cancel and misc.jobs.offered. A large portion of the resources is spent on processing articles in these few newsgroups. Most Unix directories are organized as a linear unsorted sequence of entries. Large newsgroups can have hundreds of thousands of articles in one directory, resulting in significant delays processing any single article. Usenetfs was designed and implemented as a stackable Vnode layer loadable kernel module[2, 4, 5]. It modifies path names so they are restructured into a deeper directory hierarchy. Usenetfs is small and is transparent to the user. It requires no change to News software, to other file systems, or to the rest of the operating system. Usenetfs is more portable than other native kernel-based file systems because it interacts with the Vnode interface which is similar on many different platforms. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. L. Fritchie. </author> <title> The Cyclic News Filesystem: Getting INN To Do More With Less. </title> <booktitle> System Administration (LISA XI) Conference (San Diego, California), </booktitle> <pages> pages 99111. </pages> <publisher> USENIX, </publisher> <month> 26-31 October </month> <year> 1997. </year>
Reference-contexts: They fall into one of two categories: 1. Modified news servers that store articles in an alter nate fashion <ref> [1] </ref>. 2. New native file systems that arrange directory entries in a manner that is accessible faster than linear search time [3, 7]. These solutions are not widely deployed because they require changes to INN or the core operating system.
Reference: [2] <author> J. S. Heidemann and G. J. Popek. </author> <title> File System Development with Stackable Layers. </title> <booktitle> Transactions on Computing Systems, </booktitle> <address> 12(1):5889. (New York, New York), </address> <publisher> ACM, </publisher> <month> February, </month> <year> 1994. </year>
Reference-contexts: Usenetfs mounts (stacks) itself on top of a news spool hierarchy and interfaces between existing news software and disk based file systems. It makes a hierarchy of many small directories appear to be a single large flat directory. Vnode Stacking <ref> [2, 4, 5] </ref> is a technique for modulariz-ing file system functions, by allowing one vnode interface to call another. Before stacking existed, there was only a single vnode interface; higher level operating system code called the vnode interface which in turn called code for a specific file system.
Reference: [3] <author> H. Reiser. </author> <title> Trees Are Fast. </title> <type> Unpublished Technical Report. </type> <note> The Naming System Venture, June 1998. Available http://www.idiom.com/beverly/reiserfs.html. </note>
Reference-contexts: They fall into one of two categories: 1. Modified news servers that store articles in an alter nate fashion [1]. 2. New native file systems that arrange directory entries in a manner that is accessible faster than linear search time <ref> [3, 7] </ref>. These solutions are not widely deployed because they require changes to INN or the core operating system. Our approach does modify the operating system, but in a standard, modular fashion. 1.2 The Stackable Vnode Interface Usenetfs is a small file system based on the loopback (lofs)[6] one.
Reference: [4] <author> D. S. H. Rosenthal. </author> <title> Requirements for a Stacking Vnode/VFS Interface. Unix International document SD-01-02-N014. </title> <booktitle> UNIX International, </booktitle> <year> 1992. </year>
Reference-contexts: Usenetfs mounts (stacks) itself on top of a news spool hierarchy and interfaces between existing news software and disk based file systems. It makes a hierarchy of many small directories appear to be a single large flat directory. Vnode Stacking <ref> [2, 4, 5] </ref> is a technique for modulariz-ing file system functions, by allowing one vnode interface to call another. Before stacking existed, there was only a single vnode interface; higher level operating system code called the vnode interface which in turn called code for a specific file system.
Reference: [5] <author> G. C. Skinner and T. K. Wong. </author> <note> Stacking Vnodes: </note>
Reference-contexts: Usenetfs mounts (stacks) itself on top of a news spool hierarchy and interfaces between existing news software and disk based file systems. It makes a hierarchy of many small directories appear to be a single large flat directory. Vnode Stacking <ref> [2, 4, 5] </ref> is a technique for modulariz-ing file system functions, by allowing one vnode interface to call another. Before stacking existed, there was only a single vnode interface; higher level operating system code called the vnode interface which in turn called code for a specific file system.
References-found: 5

