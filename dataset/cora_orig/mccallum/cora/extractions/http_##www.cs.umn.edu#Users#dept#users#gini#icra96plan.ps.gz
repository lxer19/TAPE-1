URL: http://www.cs.umn.edu/Users/dept/users/gini/icra96plan.ps.gz
Refering-URL: http://www.cs.umn.edu/Users/dept/users/gini/
Root-URL: http://www.cs.umn.edu
Email: gini@cs.umn.edu  
Title: Task planning with incomplete information  
Author: Maria Gini 
Date: March 4, 1996  
Address: 4-192 EE/CSci Building 200 Union Street SE Minneapolis, MN 55455  
Affiliation: Department of Computer Science, University of Minnesota  
Abstract: Traditional approaches to task planning assume the planner has access to all of the world information needed to develop a complete, correct plan|a plan which can then be executed in its entirety by a robot. We consider problems where some crucial information is missing at plan time but can be obtained from sensors during execution. We discuss the solution of these problems through deferred planning (i.e., by deferring specific planning steps until more complete information is available and then restarting the planner). We also present early results of a comparative study of strategies for deciding which plan steps to defer. 
Abstract-found: 1
Intro-found: 1
Reference: [ Abramson, 1991 ] <author> Bruce Abramson. </author> <title> An analysis of error recovery and sensory integration for dynamic planners. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence, </booktitle> <pages> pages 744-749, </pages> <year> 1991. </year>
Reference: [ Agre and Chapman, 1987 ] <author> Philip Agre and David Chapman. Pengi: </author> <title> A theory of activity. </title> <booktitle> In Proc. of AAAI-87, </booktitle> <pages> pages 268-272, </pages> <address> Washington, </address> <month> July </month> <year> 1987. </year>
Reference-contexts: We have found this incremental cost to vary greatly depending on context. 5 Related Research Several solutions have been proposed to deal with incomplete knowledge. They range from eliminating planning altogether in favor of reactive planning [ Brooks, 1986 ] or situated systems <ref> [ Agre and Chapman, 1987 ] </ref> , [ Kaelbling, 1988 ] , to combining reactivity and planning [ Georgeff and Lansky, 1987 ] , [ Firby, 1987 ] , [ Wilkins et al., 1994 ] , to verifying, before execution, the executability of plans and adding sensing whenever needed to reduce
Reference: [ Brooks, 1986 ] <author> Rodney Brooks. </author> <title> A robust layered control system for a mobile robot. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> RA-2(1):14-23, </volume> <month> March </month> <year> 1986. </year>
Reference-contexts: We have found this incremental cost to vary greatly depending on context. 5 Related Research Several solutions have been proposed to deal with incomplete knowledge. They range from eliminating planning altogether in favor of reactive planning <ref> [ Brooks, 1986 ] </ref> or situated systems [ Agre and Chapman, 1987 ] , [ Kaelbling, 1988 ] , to combining reactivity and planning [ Georgeff and Lansky, 1987 ] , [ Firby, 1987 ] , [ Wilkins et al., 1994 ] , to verifying, before execution, the executability of plans
Reference: [ Cassandra et al., 1994 ] <author> Anthony R. Cassandra, Leslie Pack Kaelbling, and Michael L. Littman. </author> <title> Acting optimally in partially observable stochastic domains. </title> <booktitle> In Proc. Nat'l Conf. on Artificial Intelligence, </booktitle> <volume> volume 2, </volume> <pages> pages 1023-1028, </pages> <year> 1994. </year>
Reference: [ Chrisman and Simmons, 1991 ] <author> Lonnie Chrisman and Reid Simmons. </author> <title> Sensible planning: Focusing perceptual attention. </title> <booktitle> In Proc. of AAAI-91, </booktitle> <address> Los Angeles, CA, </address> <year> 1991. </year>
Reference: [ Doyle et al., 1986 ] <author> Richard Doyle, David Atkinson, and Rajkumar Doshi. </author> <title> Generating perception requests and expectations to verify the execution of plans. </title> <booktitle> In Proc. of AAAI-86, </booktitle> <pages> pages 202-206, </pages> <address> Philadelphia, </address> <year> 1986. </year>
Reference-contexts: Chapman, 1987 ] , [ Kaelbling, 1988 ] , to combining reactivity and planning [ Georgeff and Lansky, 1987 ] , [ Firby, 1987 ] , [ Wilkins et al., 1994 ] , to verifying, before execution, the executability of plans and adding sensing whenever needed to reduce the uncertainty <ref> [ Doyle et al., 1986 ] </ref> , to preplanning for every contingency [ Schoppers, 1987 ] . <p> Most methods of planning with uncertainty resort to monitoring information using sensors to keep the uncertainty bounded <ref> [ Doyle et al., 1986 ] </ref> , and often use stochastic models [ Hager and Mintz, 1991, Cassandra et al., 1994, Draper et al., 1994 ] . For instance, Hager and Mintz [ 1991 ] have proposed methods for sensor planning based on probabilistic models of uncertainty.
Reference: [ Draper et al., 1994 ] <author> Denise Draper, Steve Hanks, and Daniel Weld. </author> <title> Probabilistic planning with information gathering and contingent execution. </title> <booktitle> In International Conference on AI Planning Systems, </booktitle> <year> 1994. </year> <month> 11 </month>
Reference-contexts: For instance, Hager and Mintz [ 1991 ] have proposed methods for sensor planning based on probabilistic models of uncertainty. Draper et al <ref> [ Draper et al., 1994 ] </ref> have introduced a variety of actions, such as information producing actions, imperfect sensing, and informational dependencies in the context of classical planning, and extended the applicability of planning by creating probabilistic planning algorithms. 5.4 Decision Theoretic Methods The idea of planning to gather information is
Reference: [ Etzioni et al., 1992 ] <author> Oren Etzioni, Steve Hanks, Daniel Weld, Denise Draper, Neal Lesh, and Mike Williamson. </author> <title> An approach to planning with incomplete information. </title> <booktitle> In Third International Conference on Knowledge Representation and Reasoning, </booktitle> <year> 1992. </year>
Reference: [ F. Giunchiglia, 1994 ] <author> P. Traverso F. Giunchiglia, L. Spalazzi. </author> <title> Planning with failure. </title> <booktitle> In International Conference on AI Planning Systems, </booktitle> <year> 1994. </year>
Reference-contexts: For instance, Pednault [ Pednault, 1989 ] allows actions with context-dependent effects [ Pednault, 1989 ] . A language has been proposed <ref> [ F. Giunchiglia, 1994 ] </ref> to represent and reason about actions and plans that are not guaranteed to succeed.
Reference: [ Firby, 1987 ] <author> R. James Firby. </author> <title> An investigation into reactive planning in complex domains. </title> <booktitle> In Proceedings of the Sixth National Conference on Artificial Intelligence, </booktitle> <pages> pages 202-206, </pages> <address> Seattle, </address> <year> 1987. </year>
Reference-contexts: They range from eliminating planning altogether in favor of reactive planning [ Brooks, 1986 ] or situated systems [ Agre and Chapman, 1987 ] , [ Kaelbling, 1988 ] , to combining reactivity and planning [ Georgeff and Lansky, 1987 ] , <ref> [ Firby, 1987 ] </ref> , [ Wilkins et al., 1994 ] , to verifying, before execution, the executability of plans and adding sensing whenever needed to reduce the uncertainty [ Doyle et al., 1986 ] , to preplanning for every contingency [ Schoppers, 1987 ] .
Reference: [ Genesereth and Nourbakhsh, 1993 ] <author> Michael R. Genesereth and Illah R. Nourbakhsh. </author> <title> Timesaving tips for problem solving with incomplete information. </title> <booktitle> In Proc. of AAAI-93, </booktitle> <year> 1993. </year>
Reference: [ Georgeff and Lansky, 1987 ] <author> Michael P. Georgeff and Amy L. Lansky. </author> <title> Reactive reasoning and planning. </title> <booktitle> In Proceedings of the Sixth National Conference on Artificial Intelligence, </booktitle> <address> Seattle, WA, </address> <year> 1987. </year>
Reference-contexts: They range from eliminating planning altogether in favor of reactive planning [ Brooks, 1986 ] or situated systems [ Agre and Chapman, 1987 ] , [ Kaelbling, 1988 ] , to combining reactivity and planning <ref> [ Georgeff and Lansky, 1987 ] </ref> , [ Firby, 1987 ] , [ Wilkins et al., 1994 ] , to verifying, before execution, the executability of plans and adding sensing whenever needed to reduce the uncertainty [ Doyle et al., 1986 ] , to preplanning for every contingency [ Schoppers, 1987
Reference: [ Golden et al., 1994 ] <author> Keith Golden, Oren Etzioni, and Daniel Weld. </author> <title> Omnipotence without omniscience: efficient sensor management for planning. </title> <booktitle> In Proc. Nat'l Conf. on Artificial Intelligence, </booktitle> <volume> volume 2, </volume> <pages> pages 1048-1054, </pages> <year> 1994. </year>
Reference-contexts: They show how both can be represented by annotating preconditions and postconditions of STRIPS operators, and they present a provably correct planning algorithm based on their representation. We have not addressed representation issues because for the domain we examined STRIPS-like operators are sufficient. The XII planner <ref> [ Golden et al., 1994 ] </ref> allows planning with incomplete information. It takes a middle ground between the traditional closed world assumption (which states that information not known is false) and the open world assumption (which states that information not explicitly known is unknown).
Reference: [ Haddawy and Hanks, 1993 ] <author> Peter Haddawy and Steve Hanks. </author> <title> Utility models for goal-directed decision-theoretic planners. </title> <type> Technical Report 93-06-04, </type> <institution> Dept. of Computer Science and Engineering, University of Washington, </institution> <year> 1993. </year>
Reference-contexts: Wellman and Doyle [ Wellman and Doyle, 1992 ] propose modular utility functions for decision-theoretic planning. Modular functions allow specifying preferences, and composition methods allow combining them. Unfortunately, constructing utility functions from goals requires significant modeling of the problem domain. 10 Haddaway and Hanks <ref> [ Haddawy and Hanks, 1993 ] </ref> propose a method for combining decision theory with planning. They assume a context in which goals might be only partially satisfied and have both a temporal and atemporal component.
Reference: [ Hager and Mintz, 1991 ] <author> G. Hager and M. Mintz. </author> <title> Computational methods for task-directed sensor data fusion and sensor planning. </title> <journal> International Journal of Robotics Research, </journal> <volume> 10 </volume> <pages> 285-313, </pages> <year> 1991. </year>
Reference: [ Hansen, 1994 ] <author> Eric A. Hansen. </author> <title> Cost-effective sensing during plan execution. </title> <booktitle> In Proc. Nat'l Conf. on Artificial Intelligence, </booktitle> <volume> volume 2, </volume> <pages> pages 1029-1035, </pages> <year> 1994. </year>
Reference-contexts: Horvitz [ 1989 ] proposes a general model for reasoning under scarce resources that is based on decision theory. Chrisman and Simmons [ 1991 ] produce near optimal cost plans by using Markov Decision Processes to decide what to sense. Hansen <ref> [ Hansen, 1994 ] </ref> incorporates sensing costs in the framework of stochastic dynamic programming. Abramson [ 1991 ] casts sensory integration as a decision problem and presents a formula for deciding how often to sense depending on the rate of change of the environment.
Reference: [ Horvitz et al., 1989 ] <author> Eric J. Horvitz, Gregory F. Cooper, and David E. Heckerman. </author> <title> Reflection and action under scarce resources: theoretical principles and empirical study. </title> <booktitle> In Proceedings of IJCAI-89, </booktitle> <pages> pages 1121-1127, </pages> <address> Detroit, MI, </address> <month> August </month> <year> 1989. </year>
Reference: [ Kaelbling, 1988 ] <author> Leslie Pack Kaelbling. </author> <title> Goals as parallel program specifications. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 60-65, </pages> <address> St. Paul, MN, </address> <month> August </month> <year> 1988. </year>
Reference-contexts: They range from eliminating planning altogether in favor of reactive planning [ Brooks, 1986 ] or situated systems [ Agre and Chapman, 1987 ] , <ref> [ Kaelbling, 1988 ] </ref> , to combining reactivity and planning [ Georgeff and Lansky, 1987 ] , [ Firby, 1987 ] , [ Wilkins et al., 1994 ] , to verifying, before execution, the executability of plans and adding sensing whenever needed to reduce the uncertainty [ Doyle et al., 1986
Reference: [ Krebsbach et al., 1991 ] <author> Kurt Krebsbach, Duane Olawsky, and Maria Gini. </author> <title> Deferring task planning in the tool box world: Empirical results. </title> <type> Technical Report TR 91-60, </type> <institution> University of Minnesota Department of Computer Science, Minneapolis, MN, </institution> <year> 1991. </year> <month> 12 </month>
Reference-contexts: This overall strategy will be selected before planning starts. Complete results of the relevant experiments in the Tool Box World can be found in <ref> [ Krebsbach et al., 1991 ] </ref> and [ Olawsky et al., 1995 ] . Goal ordering: The initial goal ordering describes the order in which bump will attempt to construct portions of the plan to satisfy each goal. This ordering is fixed when planning commences and does not change.
Reference: [ Krebsbach et al., 1992 ] <author> Kurt Krebsbach, Duane Olawsky, and Maria Gini. </author> <title> Sensing and de-ferral in planning: Empirical results. </title> <booktitle> In Proceedings of the First International Conference on AI Planning Systems, </booktitle> <pages> pages 136-144, </pages> <address> College Park, Maryland, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: In such cases, bump inserts sensor operations directly into the plan which the agent then executes to enable further planning. Alternatively, bump may choose to assume a default value for the uncertain information rather than plan to sense it <ref> [ Krebsbach et al., 1992 ] </ref> . We call this distinction the sense/default question, and it has played a central role in guiding our recent research efforts. The eventual goal of this line of research is to develop improved task planning strategies for increasingly realistic problem domains.
Reference: [ Krebsbach, 1993 ] <author> Kurt Krebsbach. </author> <title> Rational sensing for an AI planner: A cost-based approach. </title> <type> Ph.d. dissertation, </type> <institution> University of Minnesota Department of Computer Science, </institution> <year> 1993. </year>
Reference-contexts: They define utility of goals and provide a rich utility model, but they have not yet incorporated the utility models into a planning algorithm. Work on extending the approach presented in this paper to use dynamic programming is described in <ref> [ Krebsbach, 1993 ] </ref> . A tree of possible sensing policies is generated o*ine using dynamic programming, the optimal sensor decisions are cached at each level, and subsequently actual world states are used as indexes into this structure to make a rational sensor choice online.
Reference: [ McDermott, 1978 ] <author> Drew McDermott. </author> <title> Planning and acting. </title> <journal> Cognitive Science, </journal> <volume> 2 </volume> <pages> 71-109, </pages> <year> 1978. </year>
Reference-contexts: Unfortunately, the search space becomes prohibitively large, and this makes this approach impractical for any reasonably complex problem. 5.2 Interleaving Planning with Execution Interleaving planning with execution has been proposed by many as a way of getting around the issue of missing or uncertain information <ref> [ McDermott, 1978 ] </ref> . 9 Our work has been inspired, among others, by the work of Turney and Segre [ 1989 ] , who studied strategies for alternating between improvising and planning. Since sensing is assumed to be expensive, their system prefers actions with the fewest sensor requests first.
Reference: [ Moore, 1985 ] <author> Robert L. Moore. </author> <title> A formal theory of knowledge and action. </title> <booktitle> In Formal Theories of the Commonsense World, </booktitle> <pages> pages 319-358. </pages> <publisher> Ablex Publishing Corporation, </publisher> <year> 1985. </year>
Reference: [ Nilsson, 1989 ] <author> Nils Nilsson. </author> <title> Teleo-reactive agents. </title> <type> Early draft, </type> <institution> Department of Computer Science, Stanford University, </institution> <year> 1989. </year>
Reference-contexts: There are three basic ways to do this: 1. Find a complete plan (or set of plans) that will work for all possible values of the relevant sensor reading. That is, plan for all contingencies (This is similar to universal planning [ Schoppers, 1987 ] and to "tree plans" <ref> [ Nilsson, 1989 ] </ref> ). 2. Find a single complete plan based on an assumed value of the sensor reading. This plan will work (without modification) only if the assumption is correct. 3.
Reference: [ Olawsky and Gini, 1990 ] <author> Duane Olawsky and Maria Gini. </author> <title> Deferred planning and sensor use. In Innovative Approaches to Planning, Scheduling and Control: </title> <booktitle> Proceedings of the DARPA Workshop on Planning, </booktitle> <pages> pages 166-174, </pages> <address> San Diego, CA, </address> <month> November </month> <year> 1990. </year>
Reference-contexts: For many realistic domains, having all of the necessary world information at plan time cannot be assumed, so we have implemented a planner, We have implemented a planner bump (Basic University of Minnesota Planner), which is capable of interleaving planning and execution <ref> [ Olawsky and Gini, 1990 ] </ref> . bump is able to defer portions of the planning process which depend on unknown or uncertain information until the information in question can be obtained through sensors. <p> In related research, <ref> [ Olawsky and Gini, 1990 ] </ref> identified two general strategies to manage the transfer of control between the planning and execution modules (i.e., control strategies). In both strategies, if the planner discovers that it requires unknown information, it inserts a sensor operation into the plan to obtain the information. <p> These two strategies are the only truly domain independent control strategies that we have found useful. It is certainly possible to devise domain dependent strategies for these types of problems. For example, in <ref> [ Olawsky and Gini, 1990 ] </ref> we described a modified Continue Elsewhere strategy call Sense Before Closing (SBC). This strategy was designed for the Tool Box World, and it attempts to sense all the unknown information before any tool boxes are closed. <p> The method is polynomial in both space and time. Acknowledgments The research reported here has been performed in cooperation with Duane Olawsky and Kurt Krebsback. We would like to sincerely acknowledge their contribution. Parts of this paper have appeared previously in <ref> [ Olawsky and Gini, 1990 ] </ref> and [ Olawsky et al., 1995 ] .
Reference: [ Olawsky et al., 1995 ] <author> D. Olawsky, K. Krebsbach, and M. Gini. </author> <title> An analysis of sensor-based task planning. </title> <type> Technical Report 95-51, </type> <institution> University of Minnesota, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: Deciding on the best strategy for a given planning problem consists of computing the tradeoffs of various strategies. Such a computation quickly becomes intractable for even a modest degree of uncertainty, suggesting the need for heuristic techniques <ref> [ Olawsky et al., 1995 ] </ref> . 4 Measures of Plan Quality We first discuss two measures of the quality of a plan. It is useful to think of the quality measures as functions to minimize or maximize, and the strategies as means to that end. <p> This overall strategy will be selected before planning starts. Complete results of the relevant experiments in the Tool Box World can be found in [ Krebsbach et al., 1991 ] and <ref> [ Olawsky et al., 1995 ] </ref> . Goal ordering: The initial goal ordering describes the order in which bump will attempt to construct portions of the plan to satisfy each goal. This ordering is fixed when planning commences and does not change. <p> The method is polynomial in both space and time. Acknowledgments The research reported here has been performed in cooperation with Duane Olawsky and Kurt Krebsback. We would like to sincerely acknowledge their contribution. Parts of this paper have appeared previously in [ Olawsky and Gini, 1990 ] and <ref> [ Olawsky et al., 1995 ] </ref> .
Reference: [ Pednault, 1989 ] <author> E. P. D. Pednault. </author> <title> ADL: Exploring the middle ground beween STRIPS and the situation calculus. </title> <booktitle> In International Conference on Knowledge Representation and Reasoning, </booktitle> <year> 1989. </year>
Reference-contexts: For instance, Pednault <ref> [ Pednault, 1989 ] </ref> allows actions with context-dependent effects [ Pednault, 1989 ] . A language has been proposed [ F. Giunchiglia, 1994 ] to represent and reason about actions and plans that are not guaranteed to succeed. <p> For instance, Pednault <ref> [ Pednault, 1989 ] </ref> allows actions with context-dependent effects [ Pednault, 1989 ] . A language has been proposed [ F. Giunchiglia, 1994 ] to represent and reason about actions and plans that are not guaranteed to succeed.
Reference: [ Peot and Smith, 1992 ] <author> Mark Peot and David Smith. </author> <title> Conditional nonlinear planning. </title> <booktitle> In Proceedings of the First International Conference on AI Planning Systems, </booktitle> <pages> pages 189-197, </pages> <address> College Park, Maryland, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: In BUMP we use the more traditional approach to planning in which search is performed in the space of partial plans as opposed to the state-space graph, and so the search space never grows so large to be unmanageable. Conditional planning <ref> [ Peot and Smith, 1992 ] </ref> and contingency planning [ Schoppers, 1987 ] create a plan that will work under all circumstances by creating tree structured plans that branch depending on sensor outcomes. Conditional planning is a way of avoiding the problem of interleaving planning with execution.
Reference: [ Schoppers, 1987 ] <author> Marcel Schoppers. </author> <title> Universal plans for reactive robots in unpredictable environments. </title> <booktitle> In Proceedings of the Tenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1039-1046, </pages> <address> Milan, Italy, </address> <month> August </month> <year> 1987. </year>
Reference-contexts: There are three basic ways to do this: 1. Find a complete plan (or set of plans) that will work for all possible values of the relevant sensor reading. That is, plan for all contingencies (This is similar to universal planning <ref> [ Schoppers, 1987 ] </ref> and to "tree plans" [ Nilsson, 1989 ] ). 2. Find a single complete plan based on an assumed value of the sensor reading. This plan will work (without modification) only if the assumption is correct. 3. <p> and planning [ Georgeff and Lansky, 1987 ] , [ Firby, 1987 ] , [ Wilkins et al., 1994 ] , to verifying, before execution, the executability of plans and adding sensing whenever needed to reduce the uncertainty [ Doyle et al., 1986 ] , to preplanning for every contingency <ref> [ Schoppers, 1987 ] </ref> . <p> Conditional planning [ Peot and Smith, 1992 ] and contingency planning <ref> [ Schoppers, 1987 ] </ref> create a plan that will work under all circumstances by creating tree structured plans that branch depending on sensor outcomes. Conditional planning is a way of avoiding the problem of interleaving planning with execution.
Reference: [ Turney and Segre, 1989 ] <author> Jennifer Turney and Alberto Segre. </author> <title> A framework for learning in planning domains with uncertainty. </title> <type> Technical Report 89-1009, </type> <institution> Department of Computer Science, Cornell University, </institution> <address> Ithaca, NY, </address> <month> May </month> <year> 1989. </year>
Reference: [ Wellman and Doyle, 1992 ] <author> M. Wellman and J. Doyle. </author> <title> Modular utility representation for decision-theoretic planning. </title> <booktitle> In International Conference on AI Planning Systems, </booktitle> <pages> pages 236-242, </pages> <year> 1992. </year>
Reference-contexts: The problem we address in our research is how and when to sense to acquire missing information, not how and when to monitor. Wellman and Doyle <ref> [ Wellman and Doyle, 1992 ] </ref> propose modular utility functions for decision-theoretic planning. Modular functions allow specifying preferences, and composition methods allow combining them.
Reference: [ Wilkins et al., 1994 ] <author> D. E Wilkins, K. L. Myers, J. D. Lowrance, and L. P. Wesley. </author> <title> Planning and reacting in uncertain and dynamic environments. </title> <journal> Journal of Experimental and Theoretical Artificial Intelligence, </journal> <volume> 6 </volume> <pages> 197-227, </pages> <year> 1994. </year> <month> 13 </month>
Reference-contexts: They range from eliminating planning altogether in favor of reactive planning [ Brooks, 1986 ] or situated systems [ Agre and Chapman, 1987 ] , [ Kaelbling, 1988 ] , to combining reactivity and planning [ Georgeff and Lansky, 1987 ] , [ Firby, 1987 ] , <ref> [ Wilkins et al., 1994 ] </ref> , to verifying, before execution, the executability of plans and adding sensing whenever needed to reduce the uncertainty [ Doyle et al., 1986 ] , to preplanning for every contingency [ Schoppers, 1987 ] .
References-found: 32

