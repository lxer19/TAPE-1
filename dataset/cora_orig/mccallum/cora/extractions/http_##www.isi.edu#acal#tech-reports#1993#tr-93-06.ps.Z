URL: http://www.isi.edu/acal/tech-reports/1993/tr-93-06.ps.Z
Refering-URL: http://www.isi.edu/acal/tech-reports/index.html
Root-URL: http://www.isi.edu
Title: Prophetic Branches: A Branch Architecture for Code Compaction and Efficient Execution  
Author: Apoorv Srivastava and Alvin M. Despain 
Keyword: Branch architectures, pipelined processors, code compaction, high-speed processors  
Note: To appear in MICRO-26,  
Address: Los Angeles, California 90089-2561  
Affiliation: Advanced Computer Architecture Laboratory Department of Computer Engineering University of Southern California  
Date: June 1993  December 1993  
Pubnum: ACAL-TR-93-06  
Abstract: Deeply pipelined processors increase the cost of executing conditional branches. Several branch architectures based on both hardware and software techniques have been proposed to reduce this cost. A popular branch mechanism based on software techniques is static branch prediction with delay slot annulling. This mechanism reduces the cost of conditional branches by making delay slots visible in the architecture. Architectural visibility allows the software to exploit delay slots by executing instructions speculatively. The visibility of the delay slots, however, also results in an increase in code size; compilers must find appropriate instructions which can be scheduled into the delay slots. If no useful instructions can be found, then nops must be inserted in the delay slot. In this paper we propose a novel branch architecture called prophetic branches which allows compilers to exploit branch delays, yet could result in only a minimal increase in code size over non-pipelined code. We show that this branch mechanism can be implemented in deeply pipelined processors with only a minor change in the control logic. 
Abstract-found: 1
Intro-found: 1
Reference: <author> DeRLev88 John H. DeRosa and Henry M. Levy, </author> <title> An Evaluation of Branch Architectures in Proc. </title> <booktitle> 15th Int. Symposium on Computer Architecture, </booktitle> <editor> May 1988 DitMcL87 David R. Ditzel and Hubert R McLellan, </editor> <title> Design Tradeoffs to Support the C Programming Language in the CRISP Microprocessor, </title> <booktitle> Proceedings Second Int. Conf. on Architectural Support for Programming Languages and Operating Systems (ASP-LOS II), </booktitle> <month> October 5-8, </month> <year> 1987, </year> <institution> Palo Alto, Cal-ifornia. </institution>
Reference: <author> LeeSmi84 J.K.F. Lee and A.J. Smith, </author> <title> Branch prediction strategies and branch target buffer design, </title> <journal> IEEE Computer Magazine, </journal> <pages> pp. 6-22, </pages> <editor> Jan 1984 McFHen86 S. McFarling and John L. </editor> <title> Hennessy, Reducing the cost of branches, </title> <booktitle> in 13th Int. Symposium on Computer Arch. Conference Proceeings, </booktitle> <month> June </month> <year> 1986. </year>
Reference: <author> HwuCC89 Wen-mei W. Hwu, Thomas M. Conte, and Pohua P. Chang, </author> <title> Comparing Software and Hardware Schemes For Reducing the Cost of Branches, </title> <booktitle> The 16th Annual Int. Symposium on Computer Architecture, </booktitle> <month> June </month> <year> 1989. </year>
Reference: <author> HwuCha92 Wen-mei W. Hwu and Pohua P. Chang, </author> <title> Efficient Instruction Sequencing with Inline Target Insertion, </title> <journal> IEEE Transactions on Computers, </journal> <volume> Vol. 41, No. 12, </volume> <month> December </month> <year> 1992, </year> <pages> pages 1537-1551. </pages>
Reference: <author> HenPat90 John Hennessy and David A. Patterson, </author> <title> Computer Architecture a Quantitative Approach, </title> <publisher> Morgan Kaufmann Publishers, </publisher> <year> 1990. </year>
References-found: 5

