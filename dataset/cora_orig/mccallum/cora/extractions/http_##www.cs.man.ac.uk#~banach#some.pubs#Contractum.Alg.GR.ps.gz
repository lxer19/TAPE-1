URL: http://www.cs.man.ac.uk/~banach/some.pubs/Contractum.Alg.GR.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~banach/Recent.publications.html
Root-URL: http://www.cs.man.ac.uk
Title: The Contractum in Algebraic Graph Rewriting  
Author: R. Banach 
Address: Manchester, M13 9PL, U.K.  
Affiliation: Computer Science Department, Manchester University,  
Abstract: Algebraic graph rewriting, which works by first removing the part of the graph to be regarded as garbage, and then gluing in the new part of the graph, is contrasted with term graph rewriting, which works by first gluing in the new part of the graph (the contractum) and performing redirections, and then removing garbage. It is shown that in the algebraic framework these two strategies can be reconciled. This is done by finding a natural analogue of the contractum in the algebraic framework, which requires the reformulation of the customary double pushout construction. The new and old algebraic constructions coexist within a pushout cube. In this, the usual outward form of the double pushout appears as the two rear squares, and the alternative inward formulation as the two front squares. The two formulations are entirely equivalent in the world of algebraic graph rewriting. An application illustrating the ef ficacy of the new approach to the preservation of acyclicity in graph rewriting is given. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Banach R. </author> <title> (1996); Locating the Contractum in the Double Pushout Approach, </title> <note> Theoretical Computer Science 156, to appear. </note>
Reference: <author> Banach, R. </author> <title> (1994); Term Graph Rewriting and Garbage Collection Using Opfibrations, </title> <booktitle> Theoretical Computer Science 131, </booktitle> <pages> 29-94. </pages>
Reference: <author> Barendregt H.P., van Eekelen M.C.J.D., Glauert J.R.W ., Kennaway J.R., Plasmeijer M.J., </author> <title> Sleep M.R. (1987); Term Graph Rewriting, </title> <booktitle> in: Proc. </booktitle> <editor> PARLE-87, de Bakker J.W., Nijman A.J., eds., </editor> <booktitle> Lecture Notes in Computer Science 259 141-158, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference: <author> Ehrig H. </author> <title> (1979); Introduction to the Algebraic Theory of Graph Grammars (A survey), </title> <booktitle> in: Lecture notes in Computer Science 73, </booktitle> <pages> 1-69, </pages> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference: <author> Ehrig H. </author> <title> (1986); A Tutorial Introduction to the Algebraic Approach of Graph Grammars, </title> <booktitle> in: Third International Workshop on Graph Grammars, Lecture Notes in Computer Science 291, </booktitle> <pages> 3-14, </pages> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference: <author> Ehrig H., Habel A., Kreowski H-J., Parisi-Presice F. </author> <title> (1991a); From Graph Grammars to High Level Replacement Systems, </title> <booktitle> in: Fourth Int. Workshop on Graph Grammars and their Applications to Computer Science, </booktitle> <editor> Ehrig, Kreowski, Rozenber g (eds.), </editor> <booktitle> Lecture Notes in Compter Science 532, </booktitle> <pages> 269-291, </pages> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference: <author> Ehrig H., Habel A., Kreowski H-J., Parisi-Presice F. </author> <title> (1991b); Parallelism and Concurrency in High Level Replacement Systems, </title> <booktitle> Mathematical Structures in Computer Science 1, </booktitle> <pages> 361-404. </pages>
Reference: <author> Ehrig H., Kreowski H-J. </author> <title> (1979); Pushout Properties: An Analysis of Gluing Constructions for Graphs, </title> <journal> Mathematische Nachrichten 91, </journal> <pages> 135-149. </pages>
Reference: <author> Ehrig H., Kreowski H-J., Taentzer G. </author> <title> (1993); Canonical Derivations for High-Level Replacement Systems, in: Graph Transformations in Computer Science, </title> <editor> Schneider, Ehrig (eds.), </editor> <booktitle> Lecture Notes in Computer Science 776, </booktitle> <pages> 152-169, </pages> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference: <author> Habel A., Kreowski H., Plump D. </author> <title> (1988); Jungle Evaluation, </title> <booktitle> in: Proc. Fifth Workshop on Specifi--cation of Abstract Data Types, </booktitle> <editor> Sannella D., Tarlecki A., eds., </editor> <booktitle> Lecture Notes in Computer Science 332, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference: <author> Hoffman B., Plump D. </author> <title> (1988); Jungle Evaluation for Efficient Term Rewriting, </title> <booktitle> in: Proc. International Workshop on Algebraic and Logic Programming, Mathematical Research 49, </booktitle> <address> Akade-mie-Verlag, Berlin. </address>
Reference: <author> Plump D. </author> <title> (1993); Hypergraph Rewriting: Critical Pairs and Undecidability of Conuence, in: Term Graph Rewriting: Theory and Practice, </title> <editor> Sleep et al. (eds.), </editor> <publisher> John Wiley. </publisher>
Reference: <author> Sleep M.R., Plasmeijer M.J., van Eekelen M.C.J.D. (eds.) </author> <title> (1993); Term Graph Rewriting: Theory and Practice, </title> <publisher> John Wiley. </publisher>
Reference: <editor> T.C.S. </editor> <booktitle> (1993); Special Issue of Selected Papers of the International Workshop on Computing by Graph Transformation, Bordeaux, France, 1991. Theoretical Computer Science, </booktitle> <volume> 109, </volume> <pages> Nos. 1-2. </pages>
References-found: 14

