URL: http://www.cs.helsinki.fi/~ronkaine/time97.ps.gz
Refering-URL: http://www.cs.helsinki.fi/~ronkaine/
Root-URL: 
Email: Heikki.Mannila@cs.Helsinki.FI, Pirjo.Ronkainen@cs.Helsinki.FI  
Title: Similarity of Event Sequences Extended abstract  
Author: Heikki Mannila and Pirjo Ronkainen 
Keyword: sequences of events, distance, dynamic programming  
Address: P.O. Box 26, FIN-00014 Helsinki, Finland  
Affiliation: University of Helsinki, Department of Computer Science  
Abstract: Sequences of events are an important form of data that occurs in many application domains, such as telecommunications, biostatistics, user interface design, etc. We present a simple model for measuring the similarity of event sequences, and show that the resulting measure of distance can be efficiently computed using a form of dynamic programming. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. V. Aho. </author> <title> Algorithms for finding patterns in strings. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, Volume A: Algorithms and Complexity, </booktitle> <pages> pages 255 - 400. </pages> <publisher> Elsevier Science Publishers B.V (North-Holland), </publisher> <address> Amsterdam, The Netherlands, </address> <year> 1990. </year>
Reference-contexts: We start with the intuitive idea that similarity between sequences should somehow reflect the amount of work that has to be done to convert one sequence to another. We formalize this notion as edit distance <ref> [1, 3, 10] </ref> between sequences, and show that the resulting definition of similarity has several appealing features. We apply a simple and well-known dynamic programming framework for computing the edit distances and show that the resulting algorithm is efficient in practice. In detail, the paper is organized as follows. <p> h E defined on it, one can, for example, define that the cost of a transformation of an event (e; t) to another event (e 0 0 h E (e; e ) + b, where b is a constant. 4 Dynamic programming algorithm We use a fairly typical dynamic programming <ref> [1, 3, 10] </ref> for finding the optimal operation sequence of transforming the sequence S = (e 1 ; t 1 ); (e 2 ; t 2 ); : : : ; (e n ; t n ) to the sequence T = (f 1 ; u 1 ); (f 2 ;
Reference: [2] <author> C. Bettini, X. S. Wang, and S. Jajodia. </author> <title> Testing complex temporal relationships involving multiple granu-larities and its application to data mining. </title> <booktitle> In Proceedings of the Fifteenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems (PODS'96), </booktitle> <pages> pages 68 - 78, </pages> <address> Montreal, Canada, </address> <month> June </month> <year> 1996. </year>
Reference-contexts: Examples of such data are telecommunications network alarms, user interface actions, crimes committed by a person, occurrences of recurrent illnesses, WWW page requests, etc. Recently, interest in knowledge discovery from sequences of events has increased: see, e.g., <ref> [4, 5, 11, 8, 2, 9, 7, 6] </ref>. Similarity between objects is a fundamental notion that has to be defined before one can apply various statistical, machine learning, or data mining methods.
Reference: [3] <author> M. Crochemore and W. Rytter. </author> <title> Text Algorithms. </title> <publisher> Oxford University Press, </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: We start with the intuitive idea that similarity between sequences should somehow reflect the amount of work that has to be done to convert one sequence to another. We formalize this notion as edit distance <ref> [1, 3, 10] </ref> between sequences, and show that the resulting definition of similarity has several appealing features. We apply a simple and well-known dynamic programming framework for computing the edit distances and show that the resulting algorithm is efficient in practice. In detail, the paper is organized as follows. <p> h E defined on it, one can, for example, define that the cost of a transformation of an event (e; t) to another event (e 0 0 h E (e; e ) + b, where b is a constant. 4 Dynamic programming algorithm We use a fairly typical dynamic programming <ref> [1, 3, 10] </ref> for finding the optimal operation sequence of transforming the sequence S = (e 1 ; t 1 ); (e 2 ; t 2 ); : : : ; (e n ; t n ) to the sequence T = (f 1 ; u 1 ); (f 2 ;
Reference: [4] <author> C. Dousson, P. Gaborit, and M. Ghallab. </author> <title> Situation recognition: Representation and algorithms. </title> <booktitle> In Proceedings of the Thirteenth International Joint Conference on Artificial Intelligence (IJCAI-93), </booktitle> <pages> pages 166 - 172, </pages> <address> Chambery, France, </address> <month> Aug. </month> <year> 1993. </year>
Reference-contexts: Examples of such data are telecommunications network alarms, user interface actions, crimes committed by a person, occurrences of recurrent illnesses, WWW page requests, etc. Recently, interest in knowledge discovery from sequences of events has increased: see, e.g., <ref> [4, 5, 11, 8, 2, 9, 7, 6] </ref>. Similarity between objects is a fundamental notion that has to be defined before one can apply various statistical, machine learning, or data mining methods.
Reference: [5] <author> P. Laird. </author> <title> Identifying and using patterns in sequential data. </title> <editor> In K. Jantke, S. Kobayashi, E. Tomita, and T. Yokomori, editors, </editor> <booktitle> Algorithmic Learning Theory, 4th International Workshop, </booktitle> <pages> pages 1 - 18, </pages> <address> Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Examples of such data are telecommunications network alarms, user interface actions, crimes committed by a person, occurrences of recurrent illnesses, WWW page requests, etc. Recently, interest in knowledge discovery from sequences of events has increased: see, e.g., <ref> [4, 5, 11, 8, 2, 9, 7, 6] </ref>. Similarity between objects is a fundamental notion that has to be defined before one can apply various statistical, machine learning, or data mining methods.
Reference: [6] <author> H. Mannila and H. Toivonen. </author> <title> Discovering generalized episodes using minimal occurrences. </title> <booktitle> In Proceedings of the Second International Conference on Knowledge Discovery and Data Mining (KDD'96), </booktitle> <pages> pages 146 - 151, </pages> <address> Portland, Oregon, Aug. 1996. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: Examples of such data are telecommunications network alarms, user interface actions, crimes committed by a person, occurrences of recurrent illnesses, WWW page requests, etc. Recently, interest in knowledge discovery from sequences of events has increased: see, e.g., <ref> [4, 5, 11, 8, 2, 9, 7, 6] </ref>. Similarity between objects is a fundamental notion that has to be defined before one can apply various statistical, machine learning, or data mining methods.
Reference: [7] <author> H. Mannila, H. Toivonen, and A. I. Verkamo. </author> <title> Discovering frequent episodes in sequences. </title> <booktitle> In Proceedings of the First International Conference on Knowledge Discovery and Data Mining (KDD'95), </booktitle> <pages> pages 210 - 215, </pages> <address> Montreal, Canada, Aug. 1995. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: Examples of such data are telecommunications network alarms, user interface actions, crimes committed by a person, occurrences of recurrent illnesses, WWW page requests, etc. Recently, interest in knowledge discovery from sequences of events has increased: see, e.g., <ref> [4, 5, 11, 8, 2, 9, 7, 6] </ref>. Similarity between objects is a fundamental notion that has to be defined before one can apply various statistical, machine learning, or data mining methods.
Reference: [8] <author> R. A. Morris, L. Khatib, and G. Ligozat. </author> <title> Generating scenarios from specifications of repeating events. </title> <booktitle> In Second International Workshop on Temporal Representation and Reasoning (TIME-95), </booktitle> <address> Melbourne Beach, Florida, </address> <month> Apr. </month> <year> 1995. </year>
Reference-contexts: Examples of such data are telecommunications network alarms, user interface actions, crimes committed by a person, occurrences of recurrent illnesses, WWW page requests, etc. Recently, interest in knowledge discovery from sequences of events has increased: see, e.g., <ref> [4, 5, 11, 8, 2, 9, 7, 6] </ref>. Similarity between objects is a fundamental notion that has to be defined before one can apply various statistical, machine learning, or data mining methods.
Reference: [9] <author> T. Oates and P. R. Cohen. </author> <title> Searching for structure in multiple streams of data. </title> <booktitle> In Proceedings of the Thirteenth International Conference on Machine Learning (ICML'96), </booktitle> <pages> pages 346 - 354, </pages> <address> San Francisco, CA, July 1996. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Examples of such data are telecommunications network alarms, user interface actions, crimes committed by a person, occurrences of recurrent illnesses, WWW page requests, etc. Recently, interest in knowledge discovery from sequences of events has increased: see, e.g., <ref> [4, 5, 11, 8, 2, 9, 7, 6] </ref>. Similarity between objects is a fundamental notion that has to be defined before one can apply various statistical, machine learning, or data mining methods.
Reference: [10] <author> G. A. Stephen. </author> <title> String Searching Algorithms. </title> <publisher> World Scientific Publishing, </publisher> <address> Singapore, </address> <year> 1994. </year>
Reference-contexts: We start with the intuitive idea that similarity between sequences should somehow reflect the amount of work that has to be done to convert one sequence to another. We formalize this notion as edit distance <ref> [1, 3, 10] </ref> between sequences, and show that the resulting definition of similarity has several appealing features. We apply a simple and well-known dynamic programming framework for computing the edit distances and show that the resulting algorithm is efficient in practice. In detail, the paper is organized as follows. <p> h E defined on it, one can, for example, define that the cost of a transformation of an event (e; t) to another event (e 0 0 h E (e; e ) + b, where b is a constant. 4 Dynamic programming algorithm We use a fairly typical dynamic programming <ref> [1, 3, 10] </ref> for finding the optimal operation sequence of transforming the sequence S = (e 1 ; t 1 ); (e 2 ; t 2 ); : : : ; (e n ; t n ) to the sequence T = (f 1 ; u 1 ); (f 2 ;
Reference: [11] <author> J. T.-L. Wang, G.-W. Chirn, T. G. Marr, B. Shapiro, D. Shasha, and K. Zhang. </author> <title> Combinatorial pattern discovery for scientific data: Some preliminary results. </title> <editor> In R. Snodgrass and M. Winslett, editors, </editor> <booktitle> Proceedings of ACM SIGMOD Conference on Management of Data (SIGMOD'94), </booktitle> <pages> pages 115 - 125, </pages> <address> Minneapolis, MI, </address> <month> June </month> <year> 1994. </year> <note> ACM. </note>
Reference-contexts: Examples of such data are telecommunications network alarms, user interface actions, crimes committed by a person, occurrences of recurrent illnesses, WWW page requests, etc. Recently, interest in knowledge discovery from sequences of events has increased: see, e.g., <ref> [4, 5, 11, 8, 2, 9, 7, 6] </ref>. Similarity between objects is a fundamental notion that has to be defined before one can apply various statistical, machine learning, or data mining methods.
References-found: 11

