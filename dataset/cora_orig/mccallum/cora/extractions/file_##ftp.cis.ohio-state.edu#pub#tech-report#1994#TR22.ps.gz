URL: file://ftp.cis.ohio-state.edu/pub/tech-report/1994/TR22.ps.gz
Refering-URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/TRList.html
Root-URL: 
Email: floren,jayasimg@cis.ohio-state.edu  
Title: A Necessary and Sufficient Condition for Deadlock-Free Wormhole Routing  
Author: Loren Schwiebert and D. N. Jayasimha 
Note: 1 Part of this work was done when this author was on leave at NASA Lewis Research  
Date: April 29, 1994 Revised: December 10, 1994  
Address: Columbus, OH 43210-1277  OH 44142.  
Affiliation: Department of Computer and Information Science The Ohio State University  Center, Cleveland,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> P. Berman, L. Gravano, G. Pifarr e, and J. Sanz. </author> <title> Adaptive Deadlock- and Livelock-Free Routing With All Minimal Paths in Torus Networks. </title> <booktitle> In Proceedings of the 4 th Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 3-12, </pages> <year> 1992. </year>
Reference-contexts: This methodology has been used by Schwiebert and Jayasimha [26] to propose a fully adaptive minimal routing algorithm for meshes. Berman, et al. <ref> [1] </ref> propose a torus routing algorithm with a routing relation of the form R : C fi N fi N ! C p that allows cyclic dependencies between the channels. <p> Only a few fully adaptive routing algorithms have been designed for n-dimensional mesh and torus topologies <ref> [1, 7, 20, 23, 26] </ref>. When restricted to hypercubes, the routing algorithms proposed by Jesshope, Miller, and Yantchev [20], and by Linder and Harden [23] require more virtual channels than the routing algorithm proposed by Duato [10]. <p> The routing algorithm proposed by Dally and Aoki [7] is more restrictive than the routing algorithm proposed by Duato. The routing algorithm proposed by Berman, et al. <ref> [1] </ref>, when restricted to hypercubes, is equivalent to the routing algorithm proposed by Duato. The routing algorithm 22 proposed by Schwiebert and Jayasimha [26], when modified for hypercubes, is more adaptive than the routing algorithm proposed by Duato.
Reference: [2] <author> Y. M. Boura and C. R. Das. </author> <title> A Class of Partially Adaptive Routing Algorithms for n dimensional Meshes. </title> <booktitle> In International Conference on Parallel Processing, volume III, </booktitle> <pages> pages 175-182, </pages> <year> 1993. </year>
Reference-contexts: dependency graph has also been used as a basis for developing adaptive routing algorithms defined by relations of the form R : C fi N fi N ! C p , where a set of output channels, rather than a single channel, is defined on which to route the message <ref> [2, 4, 5, 9, 16, 17, 18, 20, 23, 28] </ref>. Glass and Ni [18] and Boura and Das [2] have proposed methodologies for generating deadlock-free algorithms, but both proof techniques require an acyclic channel dependency graph. <p> Glass and Ni [18] and Boura and Das <ref> [2] </ref> have proposed methodologies for generating deadlock-free algorithms, but both proof techniques require an acyclic channel dependency graph. Glass and Ni propose a method of analyzing routing algorithms based on the permitted and prohibited dependencies from one channel to another. <p> An n-dimensional mesh is similar to a torus, except a mesh does not have wrap-around channels. Partially adaptive routing algorithms for wormhole-routed hypercubes and meshes have been proposed by many authors <ref> [2, 4, 9, 16, 18, 21, 28] </ref>. Boura and Das [2] as well as Glass and Ni [16, 18] have proposed methods for producing partially adaptive routing algorithms for hypercubes and meshes. <p> An n-dimensional mesh is similar to a torus, except a mesh does not have wrap-around channels. Partially adaptive routing algorithms for wormhole-routed hypercubes and meshes have been proposed by many authors [2, 4, 9, 16, 18, 21, 28]. Boura and Das <ref> [2] </ref> as well as Glass and Ni [16, 18] have proposed methods for producing partially adaptive routing algorithms for hypercubes and meshes.
Reference: [3] <author> A. A. Chien. </author> <title> A Cost and Speed Model for k-ary n-cube Wormhole Routers. In Hot Interconnects '93, </title> <month> August </month> <year> 1993. </year>
Reference-contexts: Routing algorithms that require more virtual channels need additional router control logic and are usually more complex. Multiplexing and scheduling virtual channels on a physical channel is more complicated with additional virtual channels. Router latency and cycle time also increase with the number of virtual channels <ref> [3] </ref>, so fewer virtual channels are generally better. Reducing the number of virtual channels needed for a given degree of adaptiveness is accomplished by using a less restrictive routing algorithm.
Reference: [4] <author> A. A. Chien and J. H. Kim. </author> <title> Planar-Adaptive Routing: Low-cost Adaptive Networks for Multiprocessors. </title> <booktitle> In Proceedings of the 19 th Annual International Symposium on Computer Architecture, </booktitle> <pages> pages 268-277, </pages> <year> 1992. </year> <month> 31 </month>
Reference-contexts: dependency graph has also been used as a basis for developing adaptive routing algorithms defined by relations of the form R : C fi N fi N ! C p , where a set of output channels, rather than a single channel, is defined on which to route the message <ref> [2, 4, 5, 9, 16, 17, 18, 20, 23, 28] </ref>. Glass and Ni [18] and Boura and Das [2] have proposed methodologies for generating deadlock-free algorithms, but both proof techniques require an acyclic channel dependency graph. <p> An n-dimensional mesh is similar to a torus, except a mesh does not have wrap-around channels. Partially adaptive routing algorithms for wormhole-routed hypercubes and meshes have been proposed by many authors <ref> [2, 4, 9, 16, 18, 21, 28] </ref>. Boura and Das [2] as well as Glass and Ni [16, 18] have proposed methods for producing partially adaptive routing algorithms for hypercubes and meshes.
Reference: [5] <author> W. J. Dally. </author> <title> Fine-Grain Message-Passing Concurrent Computers. </title> <booktitle> In Proceedings of the Third Conference on Hypercube Concurrent Computers, </booktitle> <volume> volume 1, </volume> <pages> pages 2-12, </pages> <year> 1988. </year>
Reference-contexts: dependency graph has also been used as a basis for developing adaptive routing algorithms defined by relations of the form R : C fi N fi N ! C p , where a set of output channels, rather than a single channel, is defined on which to route the message <ref> [2, 4, 5, 9, 16, 17, 18, 20, 23, 28] </ref>. Glass and Ni [18] and Boura and Das [2] have proposed methodologies for generating deadlock-free algorithms, but both proof techniques require an acyclic channel dependency graph.
Reference: [6] <author> W. J. Dally. </author> <title> Virtual-Channel Flow Control. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 3(2) </volume> <pages> 194-205, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: Providing additional physical channels between nodes in the network can reduce both latency and contention. This is an expensive solution, however, and can actually increase message latency if the routers are pin-out constrained. A more cost-effective method of reducing message latency, proposed by Dally <ref> [6] </ref>, is to allow multiple virtual channels to share the same physical channel. Each virtual channel has a separate buffer, with multiple messages multiplexed over the same physical channel.
Reference: [7] <author> W. J. Dally and H. Aoki. </author> <title> Deadlock-Free Adaptive Routing in Multicomputer Networks Using Virtual Channels. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 4(4) </volume> <pages> 466-475, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: Berman, et al. [1] propose a torus routing algorithm with a routing relation of the form R : C fi N fi N ! C p that allows cyclic dependencies between the channels. Dally and Aoki <ref> [7] </ref> prove deadlock freedom for a routing algorithm with cyclic dependencies by guaranteeing an acyclic packet wait-for graph. <p> Only a few fully adaptive routing algorithms have been designed for n-dimensional mesh and torus topologies <ref> [1, 7, 20, 23, 26] </ref>. When restricted to hypercubes, the routing algorithms proposed by Jesshope, Miller, and Yantchev [20], and by Linder and Harden [23] require more virtual channels than the routing algorithm proposed by Duato [10]. <p> When restricted to hypercubes, the routing algorithms proposed by Jesshope, Miller, and Yantchev [20], and by Linder and Harden [23] require more virtual channels than the routing algorithm proposed by Duato [10]. The routing algorithm proposed by Dally and Aoki <ref> [7] </ref> is more restrictive than the routing algorithm proposed by Duato. The routing algorithm proposed by Berman, et al. [1], when restricted to hypercubes, is equivalent to the routing algorithm proposed by Duato.
Reference: [8] <author> W. J. Dally and C. L. Seitz. </author> <title> Deadlock-Free Message Routing in Multiprocessor Interconnection Networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-36(5):547-553, </volume> <month> May </month> <year> 1987. </year>
Reference-contexts: 1 Introduction Wormhole routing <ref> [8] </ref> has become the switching technique of choice in modern distributed-memory multiprocessors such as the Intel Paragon, the Cray T3D, the MIT J-machine, the Caltech MOSAIC, and the nCUBE-2/3. Implementations of wormhole routing typically divide each message into packets, which are then divided into flits. <p> Each virtual channel has a separate buffer, with multiple messages multiplexed over the same physical channel. Both latency and contention can be further reduced by using the multiple paths that exist in the network between the source and destination nodes. However, Dally and Seitz <ref> [8] </ref> have shown that since a message holds channels until the entire message has been transmitted, a routing algorithm with no restrictions on the use of virtual or physical channels can result in deadlock. The simplest routing algorithms are nonadaptive and define a single path between the source and destination. <p> local information, because of the overhead of transmitting non-local information and the additional router complexity that is required to utilize this information. 2 Previous Work Designing deadlock-free routing algorithms for wormhole routing was simplified by Dally and Seitz with a proof that an acyclic channel dependency graph guarantees deadlock freedom <ref> [8] </ref>. Each ver 3 tex of the channel dependency graph is a virtual channel. There is a directed edge from one virtual channel to another if a message is permitted to use the second virtual channel immediately after the first. <p> All these proof techniques provide only a sufficient condition for deadlock-free adaptive routing. Although Dally and Seitz proved that an acyclic channel dependency graph is a necessary and sufficient condition for nonadaptive routing algorithms <ref> [8] </ref>, determining what constitutes a necessary and sufficient condition for adaptive routing algorithms has remained an open problem. Lin, McKinley, and Ni [22] propose a proof technique based on the fact that a routing algorithm is deadlock-free if none of the channels in the network can be held forever. <p> These are standard assumptions made when proving deadlock freedom for wormhole-routed routing algorithms and have also appeared in <ref> [8, 11] </ref>. 1. A node can generate messages of arbitrary length destined for any other node at any rate. 2. A message arriving at its destination is eventually consumed. 3.
Reference: [9] <author> J. T. Draper and J. Ghosh. </author> <title> Multipath E-Cube Algorithms (MECA) for Adaptive Wormhole Routing and Broadcasting in k-ary n-cubes. </title> <booktitle> In International Parallel Processing Symposium, </booktitle> <pages> pages 407-410, </pages> <year> 1992. </year>
Reference-contexts: dependency graph has also been used as a basis for developing adaptive routing algorithms defined by relations of the form R : C fi N fi N ! C p , where a set of output channels, rather than a single channel, is defined on which to route the message <ref> [2, 4, 5, 9, 16, 17, 18, 20, 23, 28] </ref>. Glass and Ni [18] and Boura and Das [2] have proposed methodologies for generating deadlock-free algorithms, but both proof techniques require an acyclic channel dependency graph. <p> An n-dimensional mesh is similar to a torus, except a mesh does not have wrap-around channels. Partially adaptive routing algorithms for wormhole-routed hypercubes and meshes have been proposed by many authors <ref> [2, 4, 9, 16, 18, 21, 28] </ref>. Boura and Das [2] as well as Glass and Ni [16, 18] have proposed methods for producing partially adaptive routing algorithms for hypercubes and meshes. <p> In section 8.2, we show how to increase the adaptiveness in a mesh without virtual channels by using a routing algorithm that permits cycles in the channel dependency graph. The hypercube routing algorithm proposed by Draper and Ghosh <ref> [9] </ref> uses two virtual channels for each physical channel. Each message routes in dimension order along the first set of channels, but may skip some dimensions in which the message needs to route. The message then routes in dimension order along the second set of channels.
Reference: [10] <author> J. Duato. </author> <title> On the Design of Deadlock-Free Adaptive Routing Algorithms for Multicomputers: </title> <booktitle> Design Methodologies. In Parallel Architectures and Languages Europe 91, </booktitle> <volume> volume I, </volume> <pages> pages 390-405, </pages> <year> 1991. </year>
Reference-contexts: Boura and Das propose a method of proving deadlock freedom by partitioning the channels into two sets and requiring messages to route completely in the first set before using channels in the second set. Duato <ref> [10, 11] </ref> proved that requiring an acyclic channel dependency graph is too restrictive for routing algorithms defined by relations of the form R : N fi N ! C p , where the current node and 4 the destination node, independent of the input channel, define a set of output channels <p> Since the problem of counting the number of cycles in a directed graph is NP-hard [14], an exponential time algorithm is used for finding CW G 0 . Other general techniques for proving deadlock freedom also require exponential time in the worst case <ref> [10, 12, 22] </ref>. The algorithm for reducing the CW G to CW G 0 has the following steps: 1. Create a list, L, of all cycles in the CW G. <p> The message then switches to the second set of virtual channels and routes first in all remaining positive directions and then all negative directions, waiting for busy channels when necessary. A fully adaptive hypercube routing algorithm has been proposed by several authors <ref> [10, 19, 22, 27] </ref>. This routing algorithm requires two virtual channels per physical channel. A message routes in dimension order along the first set of virtual channels. <p> When restricted to hypercubes, the routing algorithms proposed by Jesshope, Miller, and Yantchev [20], and by Linder and Harden [23] require more virtual channels than the routing algorithm proposed by Duato <ref> [10] </ref>. The routing algorithm proposed by Dally and Aoki [7] is more restrictive than the routing algorithm proposed by Duato. The routing algorithm proposed by Berman, et al. [1], when restricted to hypercubes, is equivalent to the routing algorithm proposed by Duato. <p> The routing algorithm 22 proposed by Schwiebert and Jayasimha [26], when modified for hypercubes, is more adaptive than the routing algorithm proposed by Duato. The routing algorithm proposed by Duato <ref> [10] </ref> uses the first set of virtual channels for nonadaptive routing and the second set of virtual channels for fully adaptive routing.
Reference: [11] <author> J. Duato. </author> <title> A New Theory of Deadlock-Free Adaptive Routing in Wormhole Networks. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 4(12) </volume> <pages> 1320-1331, </pages> <month> December </month> <year> 1993. </year>
Reference-contexts: Boura and Das propose a method of proving deadlock freedom by partitioning the channels into two sets and requiring messages to route completely in the first set before using channels in the second set. Duato <ref> [10, 11] </ref> proved that requiring an acyclic channel dependency graph is too restrictive for routing algorithms defined by relations of the form R : N fi N ! C p , where the current node and 4 the destination node, independent of the input channel, define a set of output channels <p> These are standard assumptions made when proving deadlock freedom for wormhole-routed routing algorithms and have also appeared in <ref> [8, 11] </ref>. 1. A node can generate messages of arbitrary length destined for any other node at any rate. 2. A message arriving at its destination is eventually consumed. 3.
Reference: [12] <author> J. Duato. </author> <title> A Necessary and Sufficient Condition for Deadlock-Free Adaptive Routing in Wormhole Networks. </title> <booktitle> In International Conference on Parallel Processing, </booktitle> <volume> volume I, </volume> <pages> pages 142-149, </pages> <year> 1994. </year>
Reference-contexts: If it is possible to show that no channel can be held forever by a message, regardless of the destination and path taken, then the routing algorithm is deadlock-free. This proof technique was proposed as a necessary and sufficient condition, although Duato points out that only sufficiency is proved <ref> [12] </ref>. Duato [12] has recently proposed a necessary and sufficient condition for proving deadlock free 5 dom for a restricted class of adaptive routing algorithms. This proof technique applies only to rout-ing relations of the form R : N fi N ! C p . <p> This proof technique was proposed as a necessary and sufficient condition, although Duato points out that only sufficiency is proved <ref> [12] </ref>. Duato [12] has recently proposed a necessary and sufficient condition for proving deadlock free 5 dom for a restricted class of adaptive routing algorithms. This proof technique applies only to rout-ing relations of the form R : N fi N ! C p . <p> In section 6, we provide a more complete description of False Resource Cycles and present a technique for distinguishing between False Resource Cycles and True Cycles. To illustrate the difference between False Resource Cycles and True Cycles, Duato's example <ref> [12] </ref> of an incoherent routing algorithm is presented. The processors and channels are shown in figure 1. The routing algorithm permits only minimal routing, with the exception of channel c B2 . Channel c B2 can be used by a message destined for only node n 3 . <p> Since the problem of counting the number of cycles in a directed graph is NP-hard [14], an exponential time algorithm is used for finding CW G 0 . Other general techniques for proving deadlock freedom also require exponential time in the worst case <ref> [10, 12, 22] </ref>. The algorithm for reducing the CW G to CW G 0 has the following steps: 1. Create a list, L, of all cycles in the CW G. <p> Duato's proof technique requires the existence of an acyclic extended channel dependency graph for some connected subset of the channels <ref> [12] </ref>. Since there is just one channel between neighboring nodes and the channel dependency graph has cycles, Duato's proof technique cannot be applied to the Highest Positive Last routing algorithm. The routing algorithm is substantially more adaptive than any previously proposed mesh routing algorithm that requires only one channel. <p> For example, when the distance between the source and destination is two, nonadaptive routing can use half the paths. Duato's necessary and sufficient condition <ref> [12] </ref> cannot be used to prove that the Enhanced Fully Adaptive routing algorithm is deadlock-free. Duato's proof technique requires the existence of an acyclic extended channel dependency graph for some connected subset of the channels.
Reference: [13] <author> J. Duato. </author> <title> Private Communication, </title> <month> May </month> <year> 1994. </year>
Reference-contexts: However, the message cannot route South if the input channel was North. (If this restriction is not imposed, the routing algorithm is not deadlock-free.) Also, routing algorithms of this type are not coherent <ref> [13] </ref>, because a message can route West and immediately route East. The message has now routed through the same processor twice. However, a routing algorithm is not coherent if a message can route through any processor more than once. Furthermore, the routing algorithm is not coherent even for minimal paths.
Reference: [14] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-completeness. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> New York, NY, </address> <year> 1979. </year>
Reference-contexts: This methodology is needed only for routing algorithms that do not require a message to wait for a specific output channel. The design methodology requires the identification of all cycles in the CW G. Since the problem of counting the number of cycles in a directed graph is NP-hard <ref> [14] </ref>, an exponential time algorithm is used for finding CW G 0 . Other general techniques for proving deadlock freedom also require exponential time in the worst case [10, 12, 22]. The algorithm for reducing the CW G to CW G 0 has the following steps: 1.
Reference: [15] <author> P. T. Gaughan and S. Yalamanchili. </author> <title> Adaptive Routing Protocols for Hypercube Interconnection Networks. </title> <journal> IEEE Computer, </journal> <volume> 26(5) </volume> <pages> 12-23, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Minimal routing algorithms provide higher throughput for high message traffic and are generally simpler to implement. Nonminimal routing algorithms are useful for fault tolerance. Gaughan and Yalamanchili <ref> [15] </ref> present a good overview of adaptive routing protocols. Whether minimal or nonminimal, adaptive routing algorithms can be further differentiated by the fraction of shortest paths they allow. Partially adaptive routing algorithms do not allow all messages to use any shortest path.
Reference: [16] <author> C. Glass and L. M. Ni. </author> <title> Adaptive Routing in Mesh-Connected Networks. </title> <booktitle> In 12 th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 12-19, </pages> <year> 1992. </year>
Reference-contexts: dependency graph has also been used as a basis for developing adaptive routing algorithms defined by relations of the form R : C fi N fi N ! C p , where a set of output channels, rather than a single channel, is defined on which to route the message <ref> [2, 4, 5, 9, 16, 17, 18, 20, 23, 28] </ref>. Glass and Ni [18] and Boura and Das [2] have proposed methodologies for generating deadlock-free algorithms, but both proof techniques require an acyclic channel dependency graph. <p> An n-dimensional mesh is similar to a torus, except a mesh does not have wrap-around channels. Partially adaptive routing algorithms for wormhole-routed hypercubes and meshes have been proposed by many authors <ref> [2, 4, 9, 16, 18, 21, 28] </ref>. Boura and Das [2] as well as Glass and Ni [16, 18] have proposed methods for producing partially adaptive routing algorithms for hypercubes and meshes. <p> An n-dimensional mesh is similar to a torus, except a mesh does not have wrap-around channels. Partially adaptive routing algorithms for wormhole-routed hypercubes and meshes have been proposed by many authors [2, 4, 9, 16, 18, 21, 28]. Boura and Das [2] as well as Glass and Ni <ref> [16, 18] </ref> have proposed methods for producing partially adaptive routing algorithms for hypercubes and meshes. The partially adaptive routing algorithm for hypercubes proposed by Li [21] has the addi 21 tional advantage of ensuring that the multiple paths are edge-disjoint for many source-destination pairs.
Reference: [17] <author> C. Glass and L. M. Ni. </author> <title> Maximally Fully Adaptive Routing in 2D Meshes. </title> <booktitle> In International Conference on Parallel Processing, </booktitle> <volume> volume I, </volume> <pages> pages 101-104, </pages> <year> 1992. </year>
Reference-contexts: dependency graph has also been used as a basis for developing adaptive routing algorithms defined by relations of the form R : C fi N fi N ! C p , where a set of output channels, rather than a single channel, is defined on which to route the message <ref> [2, 4, 5, 9, 16, 17, 18, 20, 23, 28] </ref>. Glass and Ni [18] and Boura and Das [2] have proposed methodologies for generating deadlock-free algorithms, but both proof techniques require an acyclic channel dependency graph.
Reference: [18] <author> C. Glass and L. M. Ni. </author> <title> The Turn Model for Adaptive Routing. </title> <booktitle> In Proceedings of the 19 th Annual International Symposium on Computer Architecture, </booktitle> <pages> pages 278-287, </pages> <year> 1992. </year>
Reference-contexts: dependency graph has also been used as a basis for developing adaptive routing algorithms defined by relations of the form R : C fi N fi N ! C p , where a set of output channels, rather than a single channel, is defined on which to route the message <ref> [2, 4, 5, 9, 16, 17, 18, 20, 23, 28] </ref>. Glass and Ni [18] and Boura and Das [2] have proposed methodologies for generating deadlock-free algorithms, but both proof techniques require an acyclic channel dependency graph. <p> Glass and Ni <ref> [18] </ref> and Boura and Das [2] have proposed methodologies for generating deadlock-free algorithms, but both proof techniques require an acyclic channel dependency graph. Glass and Ni propose a method of analyzing routing algorithms based on the permitted and prohibited dependencies from one channel to another. <p> An n-dimensional mesh is similar to a torus, except a mesh does not have wrap-around channels. Partially adaptive routing algorithms for wormhole-routed hypercubes and meshes have been proposed by many authors <ref> [2, 4, 9, 16, 18, 21, 28] </ref>. Boura and Das [2] as well as Glass and Ni [16, 18] have proposed methods for producing partially adaptive routing algorithms for hypercubes and meshes. <p> An n-dimensional mesh is similar to a torus, except a mesh does not have wrap-around channels. Partially adaptive routing algorithms for wormhole-routed hypercubes and meshes have been proposed by many authors [2, 4, 9, 16, 18, 21, 28]. Boura and Das [2] as well as Glass and Ni <ref> [16, 18] </ref> have proposed methods for producing partially adaptive routing algorithms for hypercubes and meshes. The partially adaptive routing algorithm for hypercubes proposed by Li [21] has the addi 21 tional advantage of ensuring that the multiple paths are edge-disjoint for many source-destination pairs. <p> partially adaptive routing. 8.2 Mesh Routing Algorithm We now propose a partially adaptive nonminimal routing algorithm for meshes, which does not require an acyclic channel dependency graph and does not require any virtual channels. (For a 2D mesh, this routing algorithm is similar to north-last, proposed by Glass and Ni <ref> [18] </ref>, although our routing algorithm permits messages to make more use of 180 ffi turns.) This new routing algorithm, called the Highest Positive Last routing algorithm, is defined below. <p> The routing algorithm is substantially more adaptive than any previously proposed mesh routing algorithm that requires only one channel. Previous partially adaptive routing algorithms have required an acyclic channel dependency graph. For example, Glass and Ni <ref> [18] </ref> propose the negative-first routing algorithm for n-dimensional meshes. The negative-first routing algorithm requires messages to route in all negative directions and then all positive directions. The negative-first routing algorithm also permits nonminimal routing on the negative channels before using any positive channels. <p> a significant relaxation of the routing restrictions, especially compared with using dimension order routing for the first set of virtual channels. 27 The degree of adaptiveness is the proportion of virtual paths permitted by the routing algo-rithm, compared to a routing algorithm with no restrictions, averaged over all source-destination pairs <ref> [18] </ref>. The degree of adaptiveness for both routing algorithms is shown in figure 5. For comparison, the degree of adaptiveness for e-cube (nonadaptive dimension order) routing is also shown. Paradoxically, the degree of adaptiveness is not zero for nonadaptive routing.
Reference: [19] <author> L. Gravano, G. Pifarr e, G. Denicolay, and J. Sanz. </author> <title> Adaptive Deadlock-free Worm-hole Routing in Hypercubes. </title> <booktitle> In International Parallel Processing Symposium, </booktitle> <pages> pages 512-515, </pages> <year> 1992. </year> <month> 32 </month>
Reference-contexts: The message then switches to the second set of virtual channels and routes first in all remaining positive directions and then all negative directions, waiting for busy channels when necessary. A fully adaptive hypercube routing algorithm has been proposed by several authors <ref> [10, 19, 22, 27] </ref>. This routing algorithm requires two virtual channels per physical channel. A message routes in dimension order along the first set of virtual channels.
Reference: [20] <author> C. R. Jesshope, P. R. Miller, and J. T. Yantchev. </author> <title> High Performance Communications in Pro--cessor Networks. </title> <booktitle> In Proceedings of the 16 th Annual International Symposium on Computer Architecture, </booktitle> <pages> pages 150-157, </pages> <year> 1989. </year>
Reference-contexts: dependency graph has also been used as a basis for developing adaptive routing algorithms defined by relations of the form R : C fi N fi N ! C p , where a set of output channels, rather than a single channel, is defined on which to route the message <ref> [2, 4, 5, 9, 16, 17, 18, 20, 23, 28] </ref>. Glass and Ni [18] and Boura and Das [2] have proposed methodologies for generating deadlock-free algorithms, but both proof techniques require an acyclic channel dependency graph. <p> Only a few fully adaptive routing algorithms have been designed for n-dimensional mesh and torus topologies <ref> [1, 7, 20, 23, 26] </ref>. When restricted to hypercubes, the routing algorithms proposed by Jesshope, Miller, and Yantchev [20], and by Linder and Harden [23] require more virtual channels than the routing algorithm proposed by Duato [10]. <p> Only a few fully adaptive routing algorithms have been designed for n-dimensional mesh and torus topologies [1, 7, 20, 23, 26]. When restricted to hypercubes, the routing algorithms proposed by Jesshope, Miller, and Yantchev <ref> [20] </ref>, and by Linder and Harden [23] require more virtual channels than the routing algorithm proposed by Duato [10]. The routing algorithm proposed by Dally and Aoki [7] is more restrictive than the routing algorithm proposed by Duato.
Reference: [21] <author> Q. Li. </author> <title> Minimum Deadlock-Free Message Routing Restrictions in Binary Hypercubes. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 15(2) </volume> <pages> 153-159, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: An n-dimensional mesh is similar to a torus, except a mesh does not have wrap-around channels. Partially adaptive routing algorithms for wormhole-routed hypercubes and meshes have been proposed by many authors <ref> [2, 4, 9, 16, 18, 21, 28] </ref>. Boura and Das [2] as well as Glass and Ni [16, 18] have proposed methods for producing partially adaptive routing algorithms for hypercubes and meshes. <p> Boura and Das [2] as well as Glass and Ni [16, 18] have proposed methods for producing partially adaptive routing algorithms for hypercubes and meshes. The partially adaptive routing algorithm for hypercubes proposed by Li <ref> [21] </ref> has the addi 21 tional advantage of ensuring that the multiple paths are edge-disjoint for many source-destination pairs. All three algorithms require only a single virtual channel per physical channel.
Reference: [22] <author> X. Lin, P. K. McKinley, and L. M. Ni. </author> <title> The Message Flow Model for Routing in Wormhole-Routed Networks. </title> <booktitle> In International Conference on Parallel Processing, </booktitle> <volume> volume I, </volume> <pages> pages 294-297, </pages> <year> 1993. </year>
Reference-contexts: Although Dally and Seitz proved that an acyclic channel dependency graph is a necessary and sufficient condition for nonadaptive routing algorithms [8], determining what constitutes a necessary and sufficient condition for adaptive routing algorithms has remained an open problem. Lin, McKinley, and Ni <ref> [22] </ref> propose a proof technique based on the fact that a routing algorithm is deadlock-free if none of the channels in the network can be held forever. <p> The idea of waiting channels was introduced independently by Lin, McKinley, and Ni <ref> [22] </ref>, however, the methodology used in this paper is novel. The channel dependency graph describes the order in which channels can be used. However, from definition 12, it is clear that any deadlock configuration is based on the waiting channels, rather than the channels a message could use. <p> Since the problem of counting the number of cycles in a directed graph is NP-hard [14], an exponential time algorithm is used for finding CW G 0 . Other general techniques for proving deadlock freedom also require exponential time in the worst case <ref> [10, 12, 22] </ref>. The algorithm for reducing the CW G to CW G 0 has the following steps: 1. Create a list, L, of all cycles in the CW G. <p> The message then switches to the second set of virtual channels and routes first in all remaining positive directions and then all negative directions, waiting for busy channels when necessary. A fully adaptive hypercube routing algorithm has been proposed by several authors <ref> [10, 19, 22, 27] </ref>. This routing algorithm requires two virtual channels per physical channel. A message routes in dimension order along the first set of virtual channels.
Reference: [23] <author> D. H. Linder and J. C. Harden. </author> <title> An Adaptive and Fault Tolerant Wormhole Routing Strategy for k-ary n-cubes. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 40(1) </volume> <pages> 2-12, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: dependency graph has also been used as a basis for developing adaptive routing algorithms defined by relations of the form R : C fi N fi N ! C p , where a set of output channels, rather than a single channel, is defined on which to route the message <ref> [2, 4, 5, 9, 16, 17, 18, 20, 23, 28] </ref>. Glass and Ni [18] and Boura and Das [2] have proposed methodologies for generating deadlock-free algorithms, but both proof techniques require an acyclic channel dependency graph. <p> Only a few fully adaptive routing algorithms have been designed for n-dimensional mesh and torus topologies <ref> [1, 7, 20, 23, 26] </ref>. When restricted to hypercubes, the routing algorithms proposed by Jesshope, Miller, and Yantchev [20], and by Linder and Harden [23] require more virtual channels than the routing algorithm proposed by Duato [10]. <p> Only a few fully adaptive routing algorithms have been designed for n-dimensional mesh and torus topologies [1, 7, 20, 23, 26]. When restricted to hypercubes, the routing algorithms proposed by Jesshope, Miller, and Yantchev [20], and by Linder and Harden <ref> [23] </ref> require more virtual channels than the routing algorithm proposed by Duato [10]. The routing algorithm proposed by Dally and Aoki [7] is more restrictive than the routing algorithm proposed by Duato.
Reference: [24] <author> J. May, D. N. Jayasimha, and K. Patel. </author> <title> Comparison of Multiplexing Schemes for Wormhole-Routed Distributed Memory Multiprocessors. </title> <booktitle> In 1 st International Workshop on Parallel Processing, </booktitle> <month> December </month> <year> 1994. </year> <note> To appear. </note>
Reference-contexts: Reducing the number of virtual channels needed for a given degree of adaptiveness is accomplished by using a less restrictive routing algorithm. Conversely, when the same number of virtual channels is used, a less restrictive routing algorithm has better performance than a more restrictive routing algorithm <ref> [24] </ref>. Recent research on adaptive routing algorithms has partially addressed both of these issues by reducing the virtual channel requirements and imposing fewer restrictions on the virtual channels.
Reference: [25] <author> L. M. Ni and P. K. McKinley. </author> <title> A Survey of Wormhole Routing Techniques in Direct Networks. </title> <journal> IEEE Computer, </journal> <volume> 26(2) </volume> <pages> 62-76, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: In addition, wormhole routing requires only enough storage at a router to buffer a few flits, rather than the entire packet. These two properties account for the popularity of wormhole routing in distributed-memory multiprocessors. See Ni and McKinley <ref> [25] </ref> for an in-depth discussion of wormhole routing. The primary drawbacks to wormhole routing are the message latency and contention that can occur with even moderate network traffic. Whenever a message is unable to proceed due to contention, the header and data flits are not removed from the network.
Reference: [26] <author> L. Schwiebert and D. N. Jayasimha. </author> <title> Optimal Fully Adaptive Wormhole Routing for Meshes. </title> <booktitle> In Supercomputing '93, </booktitle> <pages> pages 782-791, </pages> <year> 1993. </year> <note> An extended version of this result to appear in the Journal of Parallel and Distributed Computing. </note>
Reference-contexts: Each edge in the channel dependency subgraph defines a direct dependency. An indirect dependency is a dependency between two channels in the subgraph that exists only because of the intermediate use of one or more channels not in the subgraph. This methodology has been used by Schwiebert and Jayasimha <ref> [26] </ref> to propose a fully adaptive minimal routing algorithm for meshes. Berman, et al. [1] propose a torus routing algorithm with a routing relation of the form R : C fi N fi N ! C p that allows cyclic dependencies between the channels. <p> Only a few fully adaptive routing algorithms have been designed for n-dimensional mesh and torus topologies <ref> [1, 7, 20, 23, 26] </ref>. When restricted to hypercubes, the routing algorithms proposed by Jesshope, Miller, and Yantchev [20], and by Linder and Harden [23] require more virtual channels than the routing algorithm proposed by Duato [10]. <p> The routing algorithm proposed by Berman, et al. [1], when restricted to hypercubes, is equivalent to the routing algorithm proposed by Duato. The routing algorithm 22 proposed by Schwiebert and Jayasimha <ref> [26] </ref>, when modified for hypercubes, is more adaptive than the routing algorithm proposed by Duato. The routing algorithm proposed by Duato [10] uses the first set of virtual channels for nonadaptive routing and the second set of virtual channels for fully adaptive routing.
Reference: [27] <author> C.-C. Su and K. G. Shin. </author> <title> Adaptive Deadlock-Free Routing in Multicomputers Using Only One Extra Virtual Channel. </title> <booktitle> In International Conference on Parallel Processing, </booktitle> <volume> volume I, </volume> <pages> pages 227-231, </pages> <year> 1993. </year>
Reference-contexts: The message then switches to the second set of virtual channels and routes first in all remaining positive directions and then all negative directions, waiting for busy channels when necessary. A fully adaptive hypercube routing algorithm has been proposed by several authors <ref> [10, 19, 22, 27] </ref>. This routing algorithm requires two virtual channels per physical channel. A message routes in dimension order along the first set of virtual channels.
Reference: [28] <author> C. S. Yang and Y. M. Tsai. </author> <title> Fault-Tolerant and Deadlock-Free Wormhole Routing in the Hypercube Network. </title> <booktitle> In International Conference on Parallel and Distributed Systems, </booktitle> <pages> pages 9-16, </pages> <year> 1992. </year>
Reference-contexts: dependency graph has also been used as a basis for developing adaptive routing algorithms defined by relations of the form R : C fi N fi N ! C p , where a set of output channels, rather than a single channel, is defined on which to route the message <ref> [2, 4, 5, 9, 16, 17, 18, 20, 23, 28] </ref>. Glass and Ni [18] and Boura and Das [2] have proposed methodologies for generating deadlock-free algorithms, but both proof techniques require an acyclic channel dependency graph. <p> An n-dimensional mesh is similar to a torus, except a mesh does not have wrap-around channels. Partially adaptive routing algorithms for wormhole-routed hypercubes and meshes have been proposed by many authors <ref> [2, 4, 9, 16, 18, 21, 28] </ref>. Boura and Das [2] as well as Glass and Ni [16, 18] have proposed methods for producing partially adaptive routing algorithms for hypercubes and meshes. <p> The message then routes in dimension order along the second set of channels. The message can no longer skip dimensions and must wait for the channels to become free. The hypercube routing algorithm proposed by Yang and Tsai <ref> [28] </ref> also requires two virtual channels per physical channel. A message first uses any dimension in which it needs to route in a positive direction. When the message finishes with all such dimensions or finds them all busy, the message repeats this process for all negative directions.
References-found: 28

