URL: http://www.cs.iastate.edu/~rlutz/publications/jss96.ps
Refering-URL: http://www.cs.iastate.edu/~rlutz/homepage.html
Root-URL: http://www.cs.iastate.edu
Title: Targeting Safety-Related Errors During Software Requirements Analysis  
Author: Robyn R. Lutz 
Date: January 31, 1996  
Address: Pasadena, CA 91109  
Affiliation: Jet Propulsion Laboratory California Institute of Technology  
Abstract: This paper provides a Safety Checklist for use during the analysis of software requirements for spacecraft and other safety-critical, embedded systems. The checklist specifically targets the two most common causes of safety-related software errors: (1) inadequate interface requirements and (2) discrepancies between the documented requirements and the requirements actually needed for correct functioning of the system. The analysis criteria represented in the checklist are evaluated by application to two spacecraft projects. Use of the checklist to enhance the software-requirements analysis is shown to reduce the number of safety-related software errors. 
Abstract-found: 1
Intro-found: 1
Reference: [ANSI/IEEE 1983] <institution> ANSI/IEEE Standard Glossary of Software Engineering Terminology. </institution> <address> New York: </address> <publisher> IEEE, </publisher> <year> 1983. </year>
Reference: [Cullyer 1991] <author> J. Cullyer, </author> <title> "Safety-critical Control Systems," </title> <journal> Computing and Control Engineering Journal , Vol. </journal> <volume> 2, No. 5, </volume> <month> Sept </month> <year> 1991, </year> <pages> pp. 202-210. </pages>
Reference: [Davis 1990] <author> A. M. Davis, </author> <title> Software Requirements, Analysis and Specification. </title> <address> Englewood Cliffs, N.J.: </address> <publisher> Prentice Hall, </publisher> <year> 1990. </year>
Reference: [Doolan 1992] <author> E. P. Doolan, </author> <title> "Experience with Fagan's Inspection Method," </title> <journal> Software-Practice and Experience, </journal> <volume> Vol. 22(2), </volume> <month> Feb </month> <year> 1992, </year> <pages> pp. 173-182. </pages>
Reference: [Franklin and Gabrelian 1989] <author> M. K. Franklin and A. Gabrelian, </author> <title> "A Transformational Method for Verifying Safety Properties in Real-Time Systems," </title> <booktitle> in Proceedings of the Real-Time Systems Symposium, </booktitle> <year> 1989, </year> <pages> pp. </pages> <address> 112 -123. </address>
Reference: [Ghezzi et al. 1991] <author> C. Ghezzi, D. Mandrioli, S. Morasca, and M. Pezze, </author> <title> "A Unified High-Level Petri Net Formalism for Time-Critical Systems," </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. 17, No. 2, </volume> <month> Feb </month> <year> 1991, </year> <pages> pp. 160-172. 10 </pages>
Reference: [Gray 1991] <author> E. M. Gray and R. H. Thayer, </author> <title> "Requirements," in Aerospace Software Engineering, A Collection of Concepts. </title> <editor> Ed. C. Anderson and M. Dorfman. </editor> <address> Washington: AIAA, </address> <year> 1991, </year> <pages> pp. 89-121. </pages>
Reference: [Henzinger et al. 1991] <author> T. A. Henzinger, Z. Manna, and A. </author> <title> Pnueli,"Temporal Proof Methodologies for Real-Time Systems," </title> <booktitle> in Proceedings of the 18th ACM Symposium on Principles of Programming Languages, </booktitle> <year> 1991, </year> <pages> pp. 353-366. </pages>
Reference: [Jaffe et al. 1991] <author> M. S. Jaffe, N. G. Leveson, M. P. E. Heimdahl, and B. E. Melhart, </author> <title> "Software Requirements Analysis for Real-Time Process-Control Systems," </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. 17, No. 3, </volume> <month> March </month> <year> 1991, </year> <pages> pp. 241-258. </pages>
Reference-contexts: Conclusion The Safety Checklist has been shown to be useful in analyzing software requirements, particularly with regard to interfaces and robustness. By targeting those features which have proven to be the most common causes of safety-related software errors, the checklist contributes to a safer system. The criteria in <ref> [Jaffe et al. 1991] </ref> have been adapted to spacecraft software by taking into account the interface and robustness issues associated with the spacecraft's concurrent processes, interacting controllers, redundant resources, and externally commandable states.
Reference: [Jahanian and Mok 1986] <author> F. Jahanian and A. K.-L. Mok, </author> <title> "Safety Analysis of Timing Properties in Real-Time Systems," </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. SE-12, </volume> <month> Sept </month> <year> 1986, </year> <pages> pp. 890-904. </pages>
Reference: [JPL 1992] <institution> S/W Development Formal Inspections Course. </institution> <note> Version H, </note> <month> Sept, </month> <year> 1992, </year> <title> D-8925, Software Product Assurance, </title> <type> Sect. 522, </type> <institution> Jet Propulsion Laboratory. </institution>
Reference: [Kelly et al. 1992] <author> J. Kelly, J. S. Sherif, and J. Hops, </author> <title> "An Analysis of Defect Densities Found During Software Inspections," </title> <journal> Journal of Systems Software, </journal> <volume> Vol. 17, </volume> <year> 1992, </year> <pages> pp. 111-117. </pages>
Reference: [Ladkin and Vogt 1990] <editor> P. B. Ladkin and F. H. Vogt, eds., </editor> <booktitle> Proceedings of the Berkeley Workshop on Temporal and Real-Time Specification. </booktitle> <address> Berkeley, CA: </address> <institution> International Computer Science Institute, </institution> <year> 1990, </year> <month> TR-90-060. </month>
Reference: [Leveson 1991] <author> N. G. Leveson, </author> <title> "Software Safety in Embedded Computer Systems," </title> <journal> Communications of the ACM , Vol. </journal> <volume> 34, No. 2, </volume> <month> Feb </month> <year> 1991, </year> <pages> pp. 35-46. </pages>
Reference: [Lutz 1993] <author> R. Lutz, </author> <title> "Analyzing Software Requirements Errors in Safety-Critical, Embedded Systems," </title> <booktitle> Proceedings of the IEEE International Symposium on Requirements Engineering, </booktitle> <month> Jan </month> <year> 1993, </year> <pages> pp. 126-133. </pages>
Reference-contexts: In the study described here, each of the 192 errors was classified based on that information according to which item, if any, in the Safety Checklist addressed the issue causing the error. A previous study of the root causes of these errors <ref> [Lutz 1993] </ref> provided a basic understanding of the technical issues involved in the errors and served as a framework for the process of classification. Table 1 reports the results (see Appendix). Of the 192 errors, 149 (77%) have causes addressed by the checklist.
Reference: [Lutz and Wong 1992] <author> R. Lutz and J. S. K. Wong, </author> <title> "Detecting Unsafe Error Recovery Schedules," </title> <journal> IEEE Transactions on Software Engineering , Vol, </journal> <volume> 18, No. 8, </volume> <month> Aug </month> <year> 1992, </year> <pages> pp. 749-760. 11 </pages>
Reference-contexts: such as the time required to complete recovery activity (e.g., to point the sensor at the sun), the delay required to avoid transient values (e.g., power transients or warm-up delays), or the correct persistence limit at which to trigger a response are common requirements inadequacies that cause subsequent interface errors <ref> [Lutz and Wong 1992] </ref>. Both the most common error on Voyager (item 3) and the third most common error on Galileo (item 1) involve the arrival of input.
Reference: [Lynch and Attiya 1989] <author> N. Lynch and H. Attiya, </author> <title> "Using Mappings to Prove Timing Properties," </title> <address> MIT/LCS/TM-412.b, </address> <month> Dec </month> <year> 1989. </year>
Reference: [Neumann 1991] <author> P. G. Neumann, </author> <title> "The Computer-Related Risk of the Year: Weak Links and Correlated Events," </title> <booktitle> in Proceedings of the Sixth Annual Conference on Computer Assurance. </booktitle> <address> NIST/IEEE, </address> <year> 1991, </year> <pages> pp. 5-8. </pages>
Reference: [Razouk and Gorlick 1989] <author> R. R. Razouk and M. M. Gorlick, </author> <title> "A Real-Time Interval Logic for Reasoning About Executions of Real-Time Programs," </title> <booktitle> in SIGSOFT '89 Third Symposium on Software Testing, Analysis and Verification, </booktitle> <month> Dec </month> <year> 1989, </year> <pages> pp. 10-19. </pages>
Reference: [Rushby 1993] <author> J. Rushby, </author> <title> Formal Methods and Digital Systems Validation for Airborne Systems, </title> <address> SRI-CSL-93-07, </address> <month> Nov </month> <year> 1993. </year>
Reference: [Wing 1990] <author> J. M. Wing, </author> <title> "A Specifier's Introduction to Formal Methods," </title> <journal> Computer , Vol. </journal> <volume> 23, </volume> <month> Sept </month> <year> 1990, </year> <pages> pp. 8-26. 12 </pages>
References-found: 21

