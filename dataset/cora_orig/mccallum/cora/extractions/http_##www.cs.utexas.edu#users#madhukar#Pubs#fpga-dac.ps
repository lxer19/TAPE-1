URL: http://www.cs.utexas.edu/users/madhukar/Pubs/fpga-dac.ps
Refering-URL: http://www.cs.utexas.edu/users/madhukar/Pubs/pubs.html
Root-URL: 
Title: Exact Tree-based FPGA Technology Mapping for Logic Blocks with Independent LUTs  
Author: Madhukar K. Reddy K. K. Lee D. F. Wong 
Address: Austin  
Affiliation: Department of Computer Sciences The University of Texas at  
Abstract: The logic blocks (CLBs) of a lookup table (LUT) based FPGA consist of one or more LUTs, possibly of different sizes. In this paper, we focus on technology mapping for CLBs with several independent LUTs of two different sizes (called ICLBs). The Actel ES6500 family is an example of a class of commercially available ICLBs. Given a tree network with n nodes, the only previously known approach for minimum area tree-based mapping to ICLBs was a heuristic with running time fi(n d+1 ), where d is the maximum inde-gree of any node. We give an O(n 3 ) time exact algorithm for mapping a given tree network, an improvement over this heuristic in terms of run time and the solution quality. For general networks, an effective strategy is to break it into trees and combine them. We also give an O(n 3 ) exact algorithm for combining the optimal solutions to these trees, under the condition that LUTs do not go across trees. The method can be extended to solve mapping onto CLBs that can be configured into different ICLBs, (e.g. Xilinx' XC4000E). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Actel. Actel's Reprogrammable SPGAs. </author> <title> Preliminary Advance Information, </title> <address> Oct. </address> <year> 1996. </year>
Reference: [2] <author> Jason Cong and Yuzheng Ding. </author> <title> Combinational Logic Synthesis for LUT Based Field Programmable Gate Arrays. </title> <journal> ACM Trans. on Design Automation of Electronic Systems, </journal> <volume> 1(2) </volume> <pages> 145-204, </pages> <month> Apr. </month> <year> 1996. </year> <title> Tutorial and Survey Paper. </title>
Reference-contexts: In the Xilinx XC4000E series (Fig. 1 (b) & (c)), each CLB can be configured to (i) one 3-LUT and two 4-LUTs, (ii) one 5-LUT, or a few other non-ICLB configurations [9]. The minimum area LUT mapping problem has been studied extensively. The survey paper of <ref> [2] </ref> gives a good overview of the techniques used and the results obtained. This problem was shown to be NP-complete for k 3 [3, 10] and polynomial time solvable for k = 2 [8]. A polynomial time algorithm (for any k) was given for tree networks in [3]. <p> As the problem is hard, we use the very common and effective strategy of tree based mapping [6] that proceeds in three stages: N is first partitioned into disjoint trees: each PO node and each node with multiple fanout defines a tree in the partition <ref> [2] </ref>. Each tree is then mapped independently. In the final stage, the mapping solutions of all the trees are combined to give a good mapping solution for N . A similar approach was studied in [5]. <p> This should yield improved solutions for networks with a lot of reconvergence. The problem of mapping a tree network using CLBs with independent LUTs needs further study. The Xilinx XC4000 CLB is one such example. See <ref> [2] </ref> for some pointers.
Reference: [3] <author> A. Farrahi and M. Sarrafzadeh. </author> <title> Complexity of the lookup-table minimization problem for FPGA technology mapping. </title> <journal> IEEE Trans. CAD/ICAS, </journal> <volume> 13(11) </volume> <pages> 1319-1332, </pages> <year> 1994. </year>
Reference-contexts: The minimum area LUT mapping problem has been studied extensively. The survey paper of [2] gives a good overview of the techniques used and the results obtained. This problem was shown to be NP-complete for k 3 <ref> [3, 10] </ref> and polynomial time solvable for k = 2 [8]. A polynomial time algorithm (for any k) was given for tree networks in [3]. However, minimizing the number of LUTs does not necessarily minimize the number of ICLBs. <p> This problem was shown to be NP-complete for k 3 [3, 10] and polynomial time solvable for k = 2 [8]. A polynomial time algorithm (for any k) was given for tree networks in <ref> [3] </ref>. However, minimizing the number of LUTs does not necessarily minimize the number of ICLBs. <p> For general networks, a common and effective strategy to obtaining a good mapping solution is to partition the network into trees, map each tree separately and then combine the mapping solutions of the trees. Such an approach was used in <ref> [3, 6] </ref>. Using a similar approach and our tree algorithm, we then give an O (n 3 ) time algorithm for finding the optimal tree-based mapping of a general network, under the condition that LUTs do not go across trees.
Reference: [4] <author> R.J. Francis, J. Rose, and Z.G. Vranesic. Chortle-crf: </author> <title> Fast technology mapping for lookup table-based FPGAs. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 227-233, </pages> <month> Jun. </month> <year> 1991. </year>
Reference-contexts: The algorithm can be extended to configurations with more than two different kinds of independent LUTs. Using this we presented an optimal tree based mapping algorithm for general networks. This can then be extended to incorporate some post-processing steps using techniques that exploit reconvergence (as in <ref> [4] </ref>). This should yield improved solutions for networks with a lot of reconvergence. The problem of mapping a tree network using CLBs with independent LUTs needs further study. The Xilinx XC4000 CLB is one such example. See [2] for some pointers.
Reference: [5] <author> J. He and J. Rose. </author> <title> Technology mapping for heterogeneous FPGAs. </title> <booktitle> In Proc. of ACM/SIGDA Intl. Workshop on FP-GAs, </booktitle> <year> 1994. </year>
Reference-contexts: Any mapping using only 3-LUTs requires four LUTs (and hence two CLBs), while any mapping using only 4-LUTs requires two LUTs (and hence two CLBs). On the other hand, the network can be mapped using just one logic block. The ICLB mapping problem was also previously studied in <ref> [5] </ref>. Though their algorithm for combining the tree solutions is optimal, each tree is mapped using a bin packing based heuristic running in time fi (n d+1 ), where n is the number of nodes and d the maximum indegree of any node in the tree. <p> In this paper, we give an O (n 3 ) time exact algorithm for mapping a tree network using the minimum number of ICLBs, an improvement over the heuristic of <ref> [5] </ref>, in both solution quality and run time. To the best of our knowledge, this is the first polynomial time algorithm for the logic block mapping problem, on any nontrivial class of networks. <p> Each tree is then mapped independently. In the final stage, the mapping solutions of all the trees are combined to give a good mapping solution for N . A similar approach was studied in <ref> [5] </ref>. However, their method for mapping a tree is a heuristic, with no guarantees on the solution quality. As we now have an optimal algorithm for trees, this should give better solutions for the entire network. <p> The straightforward approach to compute Q N would therefore take fi (n p ) time. To get an efficient implementation, we compute Q N in p phases by combining the trees two at a time, similar to <ref> [5] </ref>. Let Q t N denote the array computed during phase t. We maintain the invariant that Q t N has the correct values under the assumption that the only trees in the graph are T 1 ; : : : ; T t .
Reference: [6] <author> K. Keutzer. DAGON: </author> <title> Technology binding and local optimization by DAG matching. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 341-347, </pages> <year> 1987. </year>
Reference-contexts: For general networks, a common and effective strategy to obtaining a good mapping solution is to partition the network into trees, map each tree separately and then combine the mapping solutions of the trees. Such an approach was used in <ref> [3, 6] </ref>. Using a similar approach and our tree algorithm, we then give an O (n 3 ) time algorithm for finding the optimal tree-based mapping of a general network, under the condition that LUTs do not go across trees. <p> As the problem is hard, we use the very common and effective strategy of tree based mapping <ref> [6] </ref> that proceeds in three stages: N is first partitioned into disjoint trees: each PO node and each node with multiple fanout defines a tree in the partition [2]. Each tree is then mapped independently.
Reference: [7] <author> Madhukar K. Reddy, K. K. Lee and D. F. Wong, </author> <title> Tree-Based FPGA Technology Mapping for ICLBs, In Technical Reference TRxxxx, </title> <institution> Dept. of Computer Sciences, University of Texas at Austin, </institution> <year> 1998. </year>
Reference-contexts: The proofs of the lemmas and theorems following can be found in <ref> [7] </ref>. 3.1 Semantics of Q1 and Q2 Definition For a node v in T and for i 2 [0 : : : n] and j 2 [0 : : : k 1 ], the entry Q1 v [i; j] is the minimum jS 1 j s.t. 9 a feasible (k 1
Reference: [8] <author> Shashidhar Thakur and D. F. Wong. </author> <title> Simultaneous area and delay minimum K-LUT mapping for K-exact networks. Integration, </title> <journal> the VLSI journal, </journal> <volume> 20 </volume> <pages> 287-302, </pages> <year> 1996. </year>
Reference-contexts: The minimum area LUT mapping problem has been studied extensively. The survey paper of [2] gives a good overview of the techniques used and the results obtained. This problem was shown to be NP-complete for k 3 [3, 10] and polynomial time solvable for k = 2 <ref> [8] </ref>. A polynomial time algorithm (for any k) was given for tree networks in [3]. However, minimizing the number of LUTs does not necessarily minimize the number of ICLBs.
Reference: [9] <author> Xilinx. </author> <title> XC4000E and XC4000X Series (EX/XL) Field Programmable Gate Arrays. data sheet, </title> <month> Jun. </month> <year> 1997. </year>
Reference-contexts: Some other types of CLBs can also be configured into ICLBs. In the Xilinx XC4000E series (Fig. 1 (b) & (c)), each CLB can be configured to (i) one 3-LUT and two 4-LUTs, (ii) one 5-LUT, or a few other non-ICLB configurations <ref> [9] </ref>. The minimum area LUT mapping problem has been studied extensively. The survey paper of [2] gives a good overview of the techniques used and the results obtained. This problem was shown to be NP-complete for k 3 [3, 10] and polynomial time solvable for k = 2 [8].
Reference: [10] <author> S. Zhang, Michael D. Miller, and Jon C. Muzio. </author> <title> Notes on Complexity of the Lookup-Table Minimization Problem for FPGA Technology Mapping. </title> <journal> IEEE Trans. CAD/ICAS, </journal> <volume> 15(12) </volume> <pages> 1588-1590, </pages> <month> Dec. </month> <year> 1996. </year>
Reference-contexts: The minimum area LUT mapping problem has been studied extensively. The survey paper of [2] gives a good overview of the techniques used and the results obtained. This problem was shown to be NP-complete for k 3 <ref> [3, 10] </ref> and polynomial time solvable for k = 2 [8]. A polynomial time algorithm (for any k) was given for tree networks in [3]. However, minimizing the number of LUTs does not necessarily minimize the number of ICLBs.
References-found: 10

