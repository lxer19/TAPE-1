URL: ftp://ftp.cc.gatech.edu/pub/gvu/tr/1993/93-41.ps.Z
Refering-URL: http://www.cs.gatech.edu/gvu/reports/1993/
Root-URL: 
Email: Mark.Guzdial@cc.gatech.edu  
Title: Page 1 Deriving Software Usage Patterns from Log Files  
Author: Mark Guzdial 
Address: Atlanta, GA 30332-0280  
Affiliation: GVU Center College of Computing Georgia Institute of Technology  
Abstract: Log files (discrete recordings of user actions during software use) offer the ability to collect human-computer interaction data on a number of users, over time, while the users are engaged in typical tasks in typical environments. The disadvantage of log files is the lack of automated methods for analyzing the volumes of data in a meaningful way. This paper presents a log file analysis tool, Hawk, and discusses the characteristics which make it useful for this task. A particular analysis technique, based on Markov chain analysis, is described which can be used to derive high-level software usage patterns. A study of student interactions with a programming environment are used for examples of the use of the the tool and the Log files (that is, discrete recording of user actions during software use) have several characteristics which make them ideal for research on the design of user interfaces and on the interactions between humans and computers. They can be used to collect data on any number of users over time, during each and every use of the software. Particularly important is that log files can be used to collect data while users are working on typical tasks in typical environments. More traditional methods for gathering data on human-computer interactions, such as think-aloud protocols, require unusual settings that can confound the analyses. The disadvantage of log file data is that there are few analysis techniques. Log file data tends to be voluminous, and often at too low a level to be of much use without some aggregation (e.g., individual keystrokes), suggesting the need for automated analyses. Researchers in hypertext and hypermedia have developed techniques and tools for using log files to trace access and then to develop an assessment of student concept formation in terms of information accessed (e.g., Horney and Anderson-Inman, 1992; Dershimer, Berger, and Jackson, 1991) and to characterize student navigation styles in terms of information accessed (Hutchings, Hall, and Colbourn, 1992). Log file analysis techniques for exploring user interactions with other forms of software are more rare. Hammer and Rouse (1979) used Markov chain analysis (a standard analysis tool, e.g., Kemeny, Snell, & Thompson, 1974) to study keystrokes in editing text files, but found the technique to be too sensitive to individual differences. Winne and Gupta (1993) have identified a number of powerful measures to use in evaluating log files of students using a computer-based study aid. The techniques of Winne and Gupta are based on data and graph theory, and they technique.
Abstract-found: 1
Intro-found: 1
Reference: <author> Aho, A.V., B.W. Kernighan, & P.J. </author> <title> Weinberger. </title> <booktitle> (1988) The AWK Programming Language. </booktitle> <address> Reading, MA: </address> <publisher> Addison-Wesley. </publisher>
Reference-contexts: I based Hawk on the UNIX programming language Awk <ref> (Aho, Kernighan, & Weinberger, 1988) </ref> Hawk is (HyperCard AWK) is an interpreter and pseudo-compiler for a variant of Awk embedded in a HyperCard stack. The language provides the processing power for analyzing the log files.
Reference: <author> Dershimer, C, C. Berger, & D. Jackson. </author> <title> (1991) Designing Hypermedia for Concept Development: Formative Evaluation through Analysis of Log Files. </title> <booktitle> Paper presented at the National Association for Research in Science Teaching annual meeting, Fontana, </booktitle> <address> WI. </address>
Reference: <author> Ericsson, K.A. & H.A. </author> <title> Simon (1984) Protocol Analysis. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Farnham-Diggory, S. </author> <title> (1990) Schooling. </title> <address> Cambridge, MA: </address> <publisher> Harvard University Press,. </publisher>
Reference: <author> Guzdial, M., E. Soloway, P. Blumenfeld, L. Hohmann, K. Ewing, I. Tabak, K. Brade, and Y. Kafai. </author> <title> (1992) "The future of CAD: Technological support for kids building artifacts." In Learning to Design, Designing to Learn: Using Technology to Transform the Curriculum. </title>
Reference-contexts: In conducting log file analysis on another programming environment <ref> (Guzdial et al., 1992) </ref>, I found that a nonredundant log file format required the analysis program to store a significant amount of context information while processing the log. Analysis of the redundant format is made easier since much of the context information is available at each entry. II.
Reference: <editor> D. Balestri, S. Ehrmann, and D.L. Ferguson (Eds.) </editor> <publisher> Ablex: </publisher> <address> Norwood, New Jersey. </address>
Reference: <author> Guzdial, M. </author> <title> (1993) Emile: Technological Scaffolding for Science Learners Programming in Multiple Media. </title> <institution> Ph.D Thesis at the University of Michigan. </institution> <note> In Preparation. </note>
Reference: <author> Hammer, J.M. and W.B. </author> <title> Rouse. (1979) Analysis and modeling of freeform text editing behavior. </title> <booktitle> In Proceedings fo the 1979 International Conference on Cybernetics and Society, </booktitle> <address> Denver, </address> <publisher> CO. </publisher>
Reference: <author> Horney, M.A., L. Anderson-Inman. </author> <title> (1992) The ElectroText Project: Hypertext Reading Patterns of Middle School Students. </title> <booktitle> Paper presented at the annual conference of the American Educational Research Association, </booktitle> <address> San Francisco, CA. </address>
Reference: <author> Hutchings, G.A., W. Hall, & C.J. Colbourn. </author> <title> (1992) A Quantitative Study of Students' Interactions with a Hypermedia System. </title> <type> Technical Report CSTR 92-04, </type> <institution> University of Southampton, Department of Electronics and Computer Science, UK. </institution>
Reference: <author> Kemeny, J.G., J.L. Snell, & G.L. Thompson. </author> <title> (1974) Introduction to Finite Mathematics. </title> <address> Englewood Cliffs, NJ: </address> <publisher> Prentice-Hall. </publisher>
Reference: <author> Paris, S.G., Wasik, B.A., and Turner, J. </author> <year> 1989. </year> <title> The development of strategic readers. Handbook of Reading Research. Pearson, P.D. </title> <editor> (Ed.) </editor> <address> New York: </address> <note> Longman. Page 14 Schoenfeld, A.H. (1980). Teaching problemsolving skills. Amerian Mathematical Monthly . 87. 794-805. </note>
Reference: <author> Soloway, E., M. Konemann, C. Walton, M. Guzdial, & L. Hohmann. </author> <title> (1993) The GoalPlanCode Editor: What Did the Students Learn? In preparation. </title>
Reference-contexts: Most of the student's activity occurred in the Composition and Debugging design stages. This is in marked contrast to work on another student programming environment, the GPCeditor, in which 30% of the student's activity occurred in the Decomposition design stage <ref> (Soloway, et al., 1993) </ref>. The results in Table 2 suggest that Emile students do less work in Decomposition than in Composition and Debugging.
Reference: <author> Winne, P.H. and L. Gupta. </author> <title> (1993) Data and Graph Theory Measures for Modeling Cognitive Strategies in Tutorials with STUDY. </title> <booktitle> Paper presented at the annual meeting of the American Educational Research Association, </booktitle> <address> Atlanta, GA. </address>
References-found: 14

