URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1992/tr-92-083.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1992.html
Root-URL: http://www.icsi.berkeley.edu
Title: Invariant Signatures and Non-Interactive Zero-Knowledge Proofs are Equivalent (extended abstract)  
Author: Shafi Goldwasser Rafail Ostrovsky 
Affiliation: International Computer Science Institute at Berkeley and University of California at Berkeley.  IBM T.J. Watson Research Center.  
Note: MIT. This research was supported in part by NSF-FAW CCR-9023313, NSF-PYI CCR-865727, Darpa N0014-89-J-1988, BSF 89-00312.  Supported by NSF Postdoctoral Fellowship. Parts of this work were done at MIT, Bellcore and  
Date: December 1992  
Pubnum: TR-92-083  
Abstract: The standard definition of digital signatures allows a document to have many valid signatures. In this paper, we consider a subclass of digital signatures, called invariant signatures, in which all legal signatures of a document must be identical according to some polynomial-time computable function (of a signature) which is hard to predict given an unsigned document. We formalize this notion and show its equivalence to non-interactive zero-knowledge proofs. 
Abstract-found: 1
Intro-found: 1
Reference: [BM] <author> Blum M., and S. </author> <title> Micali "How to Generate Cryptographically Strong Sequences Of PseudoRandom Bits" SIAM J. </title> <journal> on Computing, </journal> <volume> Vol 13, </volume> <year> 1984, </year> <pages> pp. 850-864, </pages> <note> FOCS 1982. </note>
Reference-contexts: It is thus naturally desirable to establish minimal complexity assumptions for basic cryptographic primitives, and to establish connections among these primitives. Indeed, it has been an active and in many cases successful area of research. For example, pseudo-random generators <ref> [BM] </ref> were shown to be equivalent to the existence of any one-way function [ILL, H]. On the other hand, several other primitives, such as secret-key exchange seem to require the trapdoor [IR] property. Digital signatures have been an especially interesting case in point.
Reference: [BeMi] <author> Bellare, M., and S. </author> <title> Micali "How to Sign Given Any Trapdoor Function" STOC 88. </title>
Reference-contexts: Later, the notion of digital signatures which are secure against chosen message attack 1 was formally defined by [GoMiRi] and proved to exist under a sequence of decreasingly weaker assumptions: the existence of claw-free permutations [GoMiRi] (e.g. factoring), the existence of trapdoor permutations <ref> [BeMi] </ref>, the existence of one-way permutations by [NY], and finally the existence of one-way functions by [Ro]. In all of these schemes, each document may have many valid signatures. <p> Invariant signatures are interesting in their own right, as they capture the flavor of having a unique valid signature per document as in the case of RSA, and yet can be proven secure against adaptive chosen message attack as in the case of <ref> [GoMiRi, BeMi, NY, Ro] </ref>. Achieving these two aspects simultaneously may prove valuable in applications. 1.1 Invariant Signatures Let us recall the definition of digital signatures as defined in [GoMiRi]. <p> We refer to the predicate P as, the invariant property of . This lemma follows immediately from the definition of invariant signature scheme. REMARK: We must stress that digital signatures of <ref> [GoMiRi, BeMi, NY, Ro] </ref> are not known to be invariant in the above sense. In fact, while honest signer can sign in some predetermined (in fact, deterministic [G]) way, there exists many valid signatures for the same document which bear no similarity to each other. <p> Clearly, this intuition is correct if indeed for every y i there exists a unique fixed boolean value b i computable from any valid signature of y i . Unfortunately, this is not the case for digital signatures in general <ref> [GoMiRi, BeMi, NY, Ro] </ref>. We remark that if it were true, then we could have implemented N IZK based on any one-way function instead of one-way trapdoor permutations as currently known. However, the above intuition is true for invariant digital signatures with high probability.
Reference: [BFM] <author> Blum M., P. Feldman, and S. Micali, </author> <title> "Non-interactive zero-knowledge proofs and their applications," </title> <booktitle> Proceedings of the 20th STOC, ACM, </booktitle> <year> 1988. </year>
Reference-contexts: what we may want from a finger print of a document: hard to predict for any document even in an adaptive setting, dependent perhaps on the time of inquiry, and yet unique. 1.2 Non-Interactive Zero-Knowledge Proofs and Digital Signatures We investigate the comparative difficulty of non-interactive zero-knowledge proofs (N IZK) <ref> [BFM] </ref> and digital signatures (DS) [GoMiRi]. These seemingly different primitives were shown to be connected in a paper by Bellare and Goldwasser [BG], where it was shown that the existence of one-way functions and non-interactive zero-knowledge proofs implies the existence of digital signatures (secure against adaptive chosen-message attacks). <p> More precisely, we consider non-interactive zero-knowledge proofs in the random string model, where users in the system can read a pre-existing common (polynomial size) random string set up by the system (a model defined by <ref> [BFM] </ref>). We prove that in this common random string model, the existence of invariant digital signatures is equivalent to the existence of non-interactive zero-knowledge proofs for any hard to predict NP language (see definition in 2.2). <p> probability space which assigns to each element of S the uniform probability 1 jSj . (Then x S denotes the operation of selecting an element of S uniformly at random). 4 2.2 Non-Interactive Zero-Knowledge (N IZK) Proofs in the Common Ran- dom String Model Non-interactive zero-knowledge proofs were introduced in <ref> [BFM] </ref>. We note that this is where the "common random string model" was introduced as well. <p> In <ref> [BFM, DMP1, BDMP] </ref> it was shown how N IZK could be implemented, based on algebraic assumptions. In [DMP2, KMO] the N IZK was implemented based on the general complexity assumptions and without a common random string, but at a price of a small preprocessing stage, which was interactive.
Reference: [BDMP] <author> Blum M., A. DeSantis, S. Micali and G. Persiano, </author> <note> "Non-Interactive Zero-Knowledge" SIAM J.Comp. 91 </note>
Reference-contexts: Moreover, such proof should not reveal anything about the witness. Formally, the following definition is essentially taken from <ref> [BDMP] </ref>. <p> REMARKS: * One difference from above definition to <ref> [BDMP] </ref> is that we impose the soundness condition only on probabilistic polynomial-time prover 0 s. This is not actually necessary as known constructions achieve soundness against all prover 0 s. <p> This is the notion of N IZK we adopt here. To modify the above definition to accom-modat ethis extension, we must require (as in <ref> [BDMP] </ref>) the existence of many pairs of prover i ; verifier i for which completeness and soundness are true, and change the zero-knowledge condition as follows. [Zero-Knowledge 0 :] There exists a probabilistic expected polynomial time algorithm S such that for all x 1 ; x 2 ; : : : <p> In <ref> [BFM, DMP1, BDMP] </ref> it was shown how N IZK could be implemented, based on algebraic assumptions. In [DMP2, KMO] the N IZK was implemented based on the general complexity assumptions and without a common random string, but at a price of a small preprocessing stage, which was interactive.
Reference: [BG] <author> M. Bellare, S. </author> <title> Goldwasser "New Paradigms for digital signatures and Message Authentication based on Non-Interactive Zero Knowledge Proofs" Crypto 89 proceedings, </title> <note> pp. 194 -211 </note>
Reference-contexts: These seemingly different primitives were shown to be connected in a paper by Bellare and Goldwasser <ref> [BG] </ref>, where it was shown that the existence of one-way functions and non-interactive zero-knowledge proofs implies the existence of digital signatures (secure against adaptive chosen-message attacks). <p> invariant signatures require all valid signatures of a document to be "similar" according to some polynomial time computable function which is unpredictable from the document itself. 3 Preliminaries Before we show the equivalence between the existence of N IZK and IN V DS, we review necessary ingredients of [FLS] and <ref> [BG] </ref> scheme. 3.1 Where Feige-Lapidot-Shamir use Trapdoor? The [FLS] solution for N IZK for N P when the participants are polynomial-time requires the assumption that trapdoor permutations exist. This assumption is not necessary throughout their construction. <p> Thus, they show how assuming a common fixed (polynomial length) random string and the existence of a trapdoor one-way permutations, a N IZK which is publically verifiable and Zero-Knowledge (in an adaptive setting) can be constructed for N P. 3.2 Bellare-Goldwasser Signature Scheme In <ref> [BG] </ref>, it is shown how assuming publically verifiable non-interactive zero-knowledge proofs and pseudo-random functions of [GGM], a signature scheme can be constructed. (As was shown by [GGM], pseudo-random functions can be based on any one-way function.) We outline their scheme below: Step1: The signer chooses at random a seed s for <p> Hence, we must show that assuming one-way functions and N IZK proofs is sufficient to construct IN V DS. This, however, is essentially established for us by <ref> [BG] </ref> with the following modification of their construction. The idea is to make sure that E (s) (of [BG] Step 1) uniquely specifies s, i.e., is a commitment to s. If this is the case, then for any document D, F s (D) (of [BG] Step 2) is uniquely defined, and <p> Hence, we must show that assuming one-way functions and N IZK proofs is sufficient to construct IN V DS. This, however, is essentially established for us by <ref> [BG] </ref> with the following modification of their construction. The idea is to make sure that E (s) (of [BG] Step 1) uniquely specifies s, i.e., is a commitment to s. If this is the case, then for any document D, F s (D) (of [BG] Step 2) is uniquely defined, and the invariant function will be simply F s (D). <p> is essentially established for us by <ref> [BG] </ref> with the following modification of their construction. The idea is to make sure that E (s) (of [BG] Step 1) uniquely specifies s, i.e., is a commitment to s. If this is the case, then for any document D, F s (D) (of [BG] Step 2) is uniquely defined, and the invariant function will be simply F s (D). Any bit of F s (D) can be used as a hard-core bit for the invariant predicate P (as discussed in the section on the definition of invariant signatures). <p> Any bit of F s (D) can be used as a hard-core bit for the invariant predicate P (as discussed in the section on the definition of invariant signatures). Now, we specify how to perform step 1 of <ref> [BG] </ref>, based on any one-way function. <p> Following through an 14 argument analogous to [N] shows that this scheme uniquely determines s with overwhelming probability (over uniformly distributed common random string), and hence we can use the proof of security presented in <ref> [BG] </ref> here as well. Hence we are done with (2). 2
Reference: [BY] <author> Bellare, Yung, </author> <title> "Certifying Cryptographic Tools: The Case of Trapdoor Permutations" CRYPTO-92 proceedings. </title>
Reference-contexts: Finally, in [FLS] it was shown how N IZK could be implemented without pre-processing, based on (verifiable) trapdoor one-way permutations. (In <ref> [BY] </ref>, they show how verifiability requirement could be implemented based on trapdoor one-way permutations). Moreover, in [FLS] it was shown how to convert N IZK into publically-verifiable and adaptively secure (see remarks above) N IZK proof system. <p> REMARK: We note that in the above definition the invariant property holds for any public file public key, and not just over G 2 (1 n ). This requirement ensures that invariant property holds for any public key, even a maliciously chosen one, and avoids problem pointed out in <ref> [BY] </ref> of lack of certification in [FLS]. <p> First, we state our main result: MAIN THEOREM: IN V DS exist if and only if nontrivial N IZK exist. 2 In [FLS] it is assumed that f is a verifiable permutation. That is, verifier can check that it is a permutation by inspecting the code of f. In <ref> [BY] </ref>, this is extended to arbitrary trapdoor one-way permutations. 12 Proof outline: We prove our main result in two parts: (1) IN V DS imply the existence of nontrivial N IZK; (2) nontrivial N IZK imply the existence of IN V DS; First, we prove (1).
Reference: [DMP1] <author> De Santis, A., S. Micali and G. Persiano, </author> <title> "Non-Interactive Zero Knowledge Proof Systems," </title> <publisher> CRYPTO-87 </publisher>
Reference-contexts: In <ref> [BFM, DMP1, BDMP] </ref> it was shown how N IZK could be implemented, based on algebraic assumptions. In [DMP2, KMO] the N IZK was implemented based on the general complexity assumptions and without a common random string, but at a price of a small preprocessing stage, which was interactive.
Reference: [DMP2] <author> De Santis, A., S. Micali and G. Persiano, </author> <title> "Bounded-Interaction Zero-Knowledge proofs," </title> <publisher> CRYPTO-88. </publisher>
Reference-contexts: In [BFM, DMP1, BDMP] it was shown how N IZK could be implemented, based on algebraic assumptions. In <ref> [DMP2, KMO] </ref> the N IZK was implemented based on the general complexity assumptions and without a common random string, but at a price of a small preprocessing stage, which was interactive.
Reference: [DH] <author> W. Diffie, M. Hellman, </author> <title> "New directions in cryptography", </title> <journal> IEEE Trans. on Inf. Theory, </journal> <volume> IT-22, </volume> <pages> pp. 644-654, </pages> <year> 1976. </year>
Reference-contexts: On the other hand, several other primitives, such as secret-key exchange seem to require the trapdoor [IR] property. Digital signatures have been an especially interesting case in point. Originally introduced by Diffie and Hellman <ref> [DH] </ref>, the first implementation was based on the RSA trapdoor function [RSA] which yields a deterministic signature scheme where each document has a unique valid signature.
Reference: [EGM] <author> Even S., O. Goldreich and S. </author> <note> Micali "On-line/Off-line Digital Signatures" CRYPTO 89. </note>
Reference: [FLS] <author> Feige, U., D. Lapidot and A. Shamir, </author> <title> "Multiple Non-Interactive Zero-Knowledge Proofs Based on a Single Random String", </title> <booktitle> Proc. IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1990. </year>
Reference-contexts: We remark that the known constructions of non-interactive zero-knowledge proofs with polynomial-time 2 participants use the trapdoor permutations assumption <ref> [FLS] </ref>, while digital signatures can be implemented based on any one-way function [Ro]. We show that the existence of invariant digital signatures is equivalent to the existence of non-interactive zero-knowledge proofs. <p> In [DMP2, KMO] the N IZK was implemented based on the general complexity assumptions and without a common random string, but at a price of a small preprocessing stage, which was interactive. Finally, in <ref> [FLS] </ref> it was shown how N IZK could be implemented without pre-processing, based on (verifiable) trapdoor one-way permutations. (In [BY], they show how verifiability requirement could be implemented based on trapdoor one-way permutations). Moreover, in [FLS] it was shown how to convert N IZK into publically-verifiable and adaptively secure (see remarks <p> Finally, in <ref> [FLS] </ref> it was shown how N IZK could be implemented without pre-processing, based on (verifiable) trapdoor one-way permutations. (In [BY], they show how verifiability requirement could be implemented based on trapdoor one-way permutations). Moreover, in [FLS] it was shown how to convert N IZK into publically-verifiable and adaptively secure (see remarks above) N IZK proof system. Again, we mention that it is not known how the assumptions (of one-way trapdoor permutations) could be reduced further. <p> This requirement ensures that invariant property holds for any public key, even a maliciously chosen one, and avoids problem pointed out in [BY] of lack of certification in <ref> [FLS] </ref>. <p> In contrast, invariant signatures require all valid signatures of a document to be "similar" according to some polynomial time computable function which is unpredictable from the document itself. 3 Preliminaries Before we show the equivalence between the existence of N IZK and IN V DS, we review necessary ingredients of <ref> [FLS] </ref> and [BG] scheme. 3.1 Where Feige-Lapidot-Shamir use Trapdoor? The [FLS] solution for N IZK for N P when the participants are polynomial-time requires the assumption that trapdoor permutations exist. This assumption is not necessary throughout their construction. <p> document to be "similar" according to some polynomial time computable function which is unpredictable from the document itself. 3 Preliminaries Before we show the equivalence between the existence of N IZK and IN V DS, we review necessary ingredients of <ref> [FLS] </ref> and [BG] scheme. 3.1 Where Feige-Lapidot-Shamir use Trapdoor? The [FLS] solution for N IZK for N P when the participants are polynomial-time requires the assumption that trapdoor permutations exist. This assumption is not necessary throughout their construction. In fact, the only place where the trapdoor property is used is to construct a "hidden random string". <p> First, we state our main result: MAIN THEOREM: IN V DS exist if and only if nontrivial N IZK exist. 2 In <ref> [FLS] </ref> it is assumed that f is a verifiable permutation. That is, verifier can check that it is a permutation by inspecting the code of f. <p> Now, let us consider the case for many theorems. In this case, we need different hidden random strings for each new theorem. Thus, how do we extend the above intuition to obtain many hidden random strings for different theorems? (Recall that the solution of <ref> [FLS] </ref> was to pick a new trapdoor 1-way permutation f for each new proof so that a common random string (y 1 ; y 2 ; : : : ; y m ), defines a hidden random string (B (f 1 (y 1 )); B (f 1 (y 2 )); : <p> Let n be a security parameter and nm is a length of a common random string (where m is as specified in <ref> [FLS] </ref>). (1) Run key-generation algorithm for IN V DS 13 m times and publish all m public keys as a "common" public key; (2) Keep a counter i (initialized to 0) of the number of theorems proven so far. (3) to prove theorem T i utilize (P ((y 1 + i)); <p> public key; (2) Keep a counter i (initialized to 0) of the number of theorems proven so far. (3) to prove theorem T i utilize (P ((y 1 + i)); P ((y 2 + i)); : : :; P ((y m + i))) as a hidden random sequence of the <ref> [FLS] </ref> construction. Note that the completeness follows from that fact that both P and are efficiently computable, and the rest of the protocol is analogous to [FLS]. <p> ((y 1 + i)); P ((y 2 + i)); : : :; P ((y m + i))) as a hidden random sequence of the <ref> [FLS] </ref> construction. Note that the completeness follows from that fact that both P and are efficiently computable, and the rest of the protocol is analogous to [FLS]. The soundness holds since the signature scheme we are using is invariant, and hence any particular choice of i with high probability specifies uniquely a hidden random string. <p> Thus, for a sufficiently long random string, even if prover picks an arbitrary (but polynomially-bounded) i the conditions that at least one "block" has a property required by <ref> [FLS] </ref> proof do hold with very high probability (over common random string chosen with uniform distribution). The Zero-Knowledge property holds due to the fact that if the adversary can distinguish the N IZK and the simulator then [FLS] show that such a distinguisher can be turned into a good predictor of <p> i the conditions that at least one "block" has a property required by <ref> [FLS] </ref> proof do hold with very high probability (over common random string chosen with uniform distribution). The Zero-Knowledge property holds due to the fact that if the adversary can distinguish the N IZK and the simulator then [FLS] show that such a distinguisher can be turned into a good predictor of a hidden random bit. (The idea there is to use witness-indistinguishable proof that either the graph is Hamiltonian or that the first 2n random bits of the common random string a pseudo-random and are produced from a <p> Exploring properties of witness-indistinguishability <ref> [FLS] </ref> show that the distinguisher of the simulator can be turned into a distinguisher for a pseudo-random generator or into a predictor of a hidden random bits.) In our construction, predicting a hidden random bit provides us with predictor of the invariant property, which by definition enables us to to forge
Reference: [G] <author> Goldreich O., </author> <title> "Two remarks Concerning the GMR Signature Scheme" MIT Tech. </title> <type> Report 715, </type> <year> 1986. </year>
Reference-contexts: This lemma follows immediately from the definition of invariant signature scheme. REMARK: We must stress that digital signatures of [GoMiRi, BeMi, NY, Ro] are not known to be invariant in the above sense. In fact, while honest signer can sign in some predetermined (in fact, deterministic <ref> [G] </ref>) way, there exists many valid signatures for the same document which bear no similarity to each other.
Reference: [GGM] <author> Goldreich O., S. Goldwasser and S. </author> <title> Micali "How to Construct Random Functions" JASM V. </title> <note> 33 No 4. (October 1986) pp. 792-807. </note>
Reference-contexts: length) random string and the existence of a trapdoor one-way permutations, a N IZK which is publically verifiable and Zero-Knowledge (in an adaptive setting) can be constructed for N P. 3.2 Bellare-Goldwasser Signature Scheme In [BG], it is shown how assuming publically verifiable non-interactive zero-knowledge proofs and pseudo-random functions of <ref> [GGM] </ref>, a signature scheme can be constructed. (As was shown by [GGM], pseudo-random functions can be based on any one-way function.) We outline their scheme below: Step1: The signer chooses at random a seed s for a pseudo random function F s () and publishes an encryption E (s) along with <p> a N IZK which is publically verifiable and Zero-Knowledge (in an adaptive setting) can be constructed for N P. 3.2 Bellare-Goldwasser Signature Scheme In [BG], it is shown how assuming publically verifiable non-interactive zero-knowledge proofs and pseudo-random functions of <ref> [GGM] </ref>, a signature scheme can be constructed. (As was shown by [GGM], pseudo-random functions can be based on any one-way function.) We outline their scheme below: Step1: The signer chooses at random a seed s for a pseudo random function F s () and publishes an encryption E (s) along with the public information necessary to verify N IZK proofs (i.e., the
Reference: [GL] <author> Goldreich, O., and L. </author> <title> Levin "A Hard-Core Predicate for all One-Way Functions" Proc. </title> <booktitle> 21st STOC, </booktitle> <year> 1989, </year> <month> pp.25-32. </month>
Reference-contexts: In particular, they can agree on a trapdoor one-way permutation (f; f 1 ), so that Alice knows (f; f 1 ) and Bob knows only f . In addition, they agree on a hardcore <ref> [GL] </ref> bit B () for f . (Notice that Alice and Bob must make sure that f is really a permutation for B () to be well defined.) Subsequently, when x is given, Alice can invert f and compute a hard-core bit, while Bob can not. <p> In addition, let B be a hard-core predicate associated with f <ref> [GL] </ref>. * A common random tape can be interpreted as a sequence of (y 1 ; y 2 ; : : : ; y m ), with each jy i j of length n (a security parameter of f ). <p> Then hidden random string is defined as: 11 (B (f 1 (y 1 )); B (f 1 (y 2 )); : : :; B (f 1 (y m ))), where B () is a hard-core bit <ref> [GL] </ref>. Notice that since f is a permutation, the hidden random string is well-defined 2 . Notice that since f is a trapdoor permutation, the polynomial time prover can compute f 1 (y i ). <p> Assuming that one-way function f exist, we can construct a hard language in a straight-forward fashion. For example, let L f 4 = fxjB (f 1 (x)) = 1g, where B is hard core bit for f <ref> [GL] </ref>). We now give intuition for the fact that IN V DS imply N IZK in the common random string model. Let us first consider the case of one theorem N IZK, with the common random string R = (y 1 ; : : : ; y m ).
Reference: [GMR] <author> S. Goldwasser, S. Micali and C. Rackoff, </author> <title> "The Knowledge Complexity of Interactive Proof-Systems", </title> <journal> SIAM J. Comput. </journal> <volume> 18 (1989), </volume> <pages> pp. </pages> <note> 186-208; (also in STOC 85, pp. 291-304.) 15 </note>
Reference: [GoMiRi] <author> Goldwasser, S., S. Micali and R. </author> <title> Rivest "A Digital Signature Scheme Secure Against Adaptive Chosen-Message Attacks" SIAM Journal of Computing vol 17, </title> <type> No 2, </type> <month> (April </month> <year> 1988), </year> <pages> pp. 281-308. </pages>
Reference-contexts: Later, the notion of digital signatures which are secure against chosen message attack 1 was formally defined by <ref> [GoMiRi] </ref> and proved to exist under a sequence of decreasingly weaker assumptions: the existence of claw-free permutations [GoMiRi] (e.g. factoring), the existence of trapdoor permutations [BeMi], the existence of one-way permutations by [NY], and finally the existence of one-way functions by [Ro]. <p> Later, the notion of digital signatures which are secure against chosen message attack 1 was formally defined by <ref> [GoMiRi] </ref> and proved to exist under a sequence of decreasingly weaker assumptions: the existence of claw-free permutations [GoMiRi] (e.g. factoring), the existence of trapdoor permutations [BeMi], the existence of one-way permutations by [NY], and finally the existence of one-way functions by [Ro]. In all of these schemes, each document may have many valid signatures. <p> Invariant signatures are interesting in their own right, as they capture the flavor of having a unique valid signature per document as in the case of RSA, and yet can be proven secure against adaptive chosen message attack as in the case of <ref> [GoMiRi, BeMi, NY, Ro] </ref>. Achieving these two aspects simultaneously may prove valuable in applications. 1.1 Invariant Signatures Let us recall the definition of digital signatures as defined in [GoMiRi]. <p> Achieving these two aspects simultaneously may prove valuable in applications. 1.1 Invariant Signatures Let us recall the definition of digital signatures as defined in <ref> [GoMiRi] </ref>. Informally, the setting is as follows: in a network, every user can generate (using a polynomial-time algorithm) a pair of keys: the public key and the corresponding secret key. <p> a finger print of a document: hard to predict for any document even in an adaptive setting, dependent perhaps on the time of inquiry, and yet unique. 1.2 Non-Interactive Zero-Knowledge Proofs and Digital Signatures We investigate the comparative difficulty of non-interactive zero-knowledge proofs (N IZK) [BFM] and digital signatures (DS) <ref> [GoMiRi] </ref>. These seemingly different primitives were shown to be connected in a paper by Bellare and Goldwasser [BG], where it was shown that the existence of one-way functions and non-interactive zero-knowledge proofs implies the existence of digital signatures (secure against adaptive chosen-message attacks). <p> We note that the existence of N IZK proofs for (sometimes) hard to predict L implies the existence of uniform one-way functions [OW]. 2.3 Invariant Digital Signatures (IN V DS) The formulation of the digital signatures of <ref> [GoMiRi] </ref> allows any document to have many valid signatures (i.e. accepted by the signature verification algorithm as valid) of the same document. <p> We refer to the predicate P as, the invariant property of . This lemma follows immediately from the definition of invariant signature scheme. REMARK: We must stress that digital signatures of <ref> [GoMiRi, BeMi, NY, Ro] </ref> are not known to be invariant in the above sense. In fact, while honest signer can sign in some predetermined (in fact, deterministic [G]) way, there exists many valid signatures for the same document which bear no similarity to each other. <p> Clearly, this intuition is correct if indeed for every y i there exists a unique fixed boolean value b i computable from any valid signature of y i . Unfortunately, this is not the case for digital signatures in general <ref> [GoMiRi, BeMi, NY, Ro] </ref>. We remark that if it were true, then we could have implemented N IZK based on any one-way function instead of one-way trapdoor permutations as currently known. However, the above intuition is true for invariant digital signatures with high probability.
Reference: [GMY] <author> Goldwasser S., S. Micali and A. Yao, </author> <title> "Strong Signature Schemes" STOC 83, </title> <publisher> pp.431-439. </publisher>
Reference: [H] <author> Hastad, J., </author> <title> "Pseudo-Random Generators under Uniform Assumptions", </title> <note> STOC 90. </note>
Reference-contexts: Indeed, it has been an active and in many cases successful area of research. For example, pseudo-random generators [BM] were shown to be equivalent to the existence of any one-way function <ref> [ILL, H] </ref>. On the other hand, several other primitives, such as secret-key exchange seem to require the trapdoor [IR] property. Digital signatures have been an especially interesting case in point.
Reference: [IL] <author> R. Impagliazzo and M. Luby, </author> <title> "One-way Functions are Essential for Complexity-Based Cryptography" FOCS 89. </title>
Reference: [IR] <author> R. Impagliazzo and S. Rudich, </author> <title> "On the Limitations of certain One-Way Permutations", </title> <booktitle> Proc. ACM Symp. on Theory of Computing, </booktitle> <pages> pp 44-61, </pages> <year> 1989. </year>
Reference-contexts: Indeed, it has been an active and in many cases successful area of research. For example, pseudo-random generators [BM] were shown to be equivalent to the existence of any one-way function [ILL, H]. On the other hand, several other primitives, such as secret-key exchange seem to require the trapdoor <ref> [IR] </ref> property. Digital signatures have been an especially interesting case in point. Originally introduced by Diffie and Hellman [DH], the first implementation was based on the RSA trapdoor function [RSA] which yields a deterministic signature scheme where each document has a unique valid signature.
Reference: [ILL] <author> R. Impagliazzo, R., L. Levin, and M. </author> <title> Luby "Pseudo-Random Generation from One-Way Functions," </title> <note> STOC 89. </note>
Reference-contexts: Indeed, it has been an active and in many cases successful area of research. For example, pseudo-random generators [BM] were shown to be equivalent to the existence of any one-way function <ref> [ILL, H] </ref>. On the other hand, several other primitives, such as secret-key exchange seem to require the trapdoor [IR] property. Digital signatures have been an especially interesting case in point.
Reference: [KMO] <author> J. Kilian, S. Micali, R. </author> <title> Ostrovsky "Minimum Resource Zero-Knowledge Proofs", </title> <publisher> FOCS-89. </publisher>
Reference-contexts: In [BFM, DMP1, BDMP] it was shown how N IZK could be implemented, based on algebraic assumptions. In <ref> [DMP2, KMO] </ref> the N IZK was implemented based on the general complexity assumptions and without a common random string, but at a price of a small preprocessing stage, which was interactive.
Reference: [N] <author> M. </author> <title> Naor "Bit Commitment Using Pseudo-Randomness", </title> <publisher> Crypto-89. </publisher>
Reference-contexts: In order to commit to a seed s, consisting of bits s 1 ; s 2 ; : : : ; s n , the player commits to each bit s i separately using a modification of Naor's scheme <ref> [N] </ref>. (The scheme of [N] is interactive, in which the player who receives committed bits (called Bob) chooses a random string during the conversation). In our protocol, the challenges of Bob are substituted by a (dedicated for this purpose) portion of the common random string. <p> In order to commit to a seed s, consisting of bits s 1 ; s 2 ; : : : ; s n , the player commits to each bit s i separately using a modification of Naor's scheme <ref> [N] </ref>. (The scheme of [N] is interactive, in which the player who receives committed bits (called Bob) chooses a random string during the conversation). In our protocol, the challenges of Bob are substituted by a (dedicated for this purpose) portion of the common random string. Following through an 14 argument analogous to [N] shows that <p> scheme of <ref> [N] </ref> is interactive, in which the player who receives committed bits (called Bob) chooses a random string during the conversation). In our protocol, the challenges of Bob are substituted by a (dedicated for this purpose) portion of the common random string. Following through an 14 argument analogous to [N] shows that this scheme uniquely determines s with overwhelming probability (over uniformly distributed common random string), and hence we can use the proof of security presented in [BG] here as well. Hence we are done with (2). 2
Reference: [NY] <author> M. Naor and M. Yung, </author> <title> "Universal One-Way Hash Functions and their Cryptographic Applications", </title> <note> STOC 89. </note>
Reference-contexts: Later, the notion of digital signatures which are secure against chosen message attack 1 was formally defined by [GoMiRi] and proved to exist under a sequence of decreasingly weaker assumptions: the existence of claw-free permutations [GoMiRi] (e.g. factoring), the existence of trapdoor permutations [BeMi], the existence of one-way permutations by <ref> [NY] </ref>, and finally the existence of one-way functions by [Ro]. In all of these schemes, each document may have many valid signatures. <p> In all of these schemes, each document may have many valid signatures. The fact that digital signatures can be implemented if one-way functions exist without the need for a trapdoor <ref> [NY, Ro] </ref> is somewhat remarkable, as by definition a digital signature seems to posses the essential flavor of a trapdoor function: namely, it should be easy for everyone to verify the correctness of a signature, while it should be hard for everyone except a privileged user (with access to the private <p> Invariant signatures are interesting in their own right, as they capture the flavor of having a unique valid signature per document as in the case of RSA, and yet can be proven secure against adaptive chosen message attack as in the case of <ref> [GoMiRi, BeMi, NY, Ro] </ref>. Achieving these two aspects simultaneously may prove valuable in applications. 1.1 Invariant Signatures Let us recall the definition of digital signatures as defined in [GoMiRi]. <p> We refer to the predicate P as, the invariant property of . This lemma follows immediately from the definition of invariant signature scheme. REMARK: We must stress that digital signatures of <ref> [GoMiRi, BeMi, NY, Ro] </ref> are not known to be invariant in the above sense. In fact, while honest signer can sign in some predetermined (in fact, deterministic [G]) way, there exists many valid signatures for the same document which bear no similarity to each other. <p> Clearly, this intuition is correct if indeed for every y i there exists a unique fixed boolean value b i computable from any valid signature of y i . Unfortunately, this is not the case for digital signatures in general <ref> [GoMiRi, BeMi, NY, Ro] </ref>. We remark that if it were true, then we could have implemented N IZK based on any one-way function instead of one-way trapdoor permutations as currently known. However, the above intuition is true for invariant digital signatures with high probability.
Reference: [OW] <author> R. Ostrovsky, A. Wigdeson, </author> <title> "One-Way Functions are Essential for Non-Trivial Zero-Knowledge", </title> <note> preliminary draft. </note>
Reference-contexts: We note that the existence of N IZK proofs for (sometimes) hard to predict L implies the existence of uniform one-way functions <ref> [OW] </ref>. 2.3 Invariant Digital Signatures (IN V DS) The formulation of the digital signatures of [GoMiRi] allows any document to have many valid signatures (i.e. accepted by the signature verification algorithm as valid) of the same document. <p> Since our signature scheme is secure against existential adaptive chosen-message attacks, we get a contradiction. In order to show (2), we first note that N IZK for hard to predict L imply the existence of one-way functions <ref> [OW] </ref>. Hence, we must show that assuming one-way functions and N IZK proofs is sufficient to construct IN V DS. This, however, is essentially established for us by [BG] with the following modification of their construction.
Reference: [RSA] <author> Rivest, R.L., Shamir, A. and Adleman, L., </author> <title> "A Method for Obtaining Digital Signatures and Public Key Cryptosystems" Comm. </title> <journal> ACM, </journal> <volume> Vol 21, No 2, </volume> <year> 1978. </year>
Reference-contexts: On the other hand, several other primitives, such as secret-key exchange seem to require the trapdoor [IR] property. Digital signatures have been an especially interesting case in point. Originally introduced by Diffie and Hellman [DH], the first implementation was based on the RSA trapdoor function <ref> [RSA] </ref> which yields a deterministic signature scheme where each document has a unique valid signature.
Reference: [Ro] <author> J. </author> <title> Rompel "One-way Functions are Necessary and Sufficient for Secure Signatures" STOC 90. </title> <type> 16 </type>
Reference-contexts: against chosen message attack 1 was formally defined by [GoMiRi] and proved to exist under a sequence of decreasingly weaker assumptions: the existence of claw-free permutations [GoMiRi] (e.g. factoring), the existence of trapdoor permutations [BeMi], the existence of one-way permutations by [NY], and finally the existence of one-way functions by <ref> [Ro] </ref>. In all of these schemes, each document may have many valid signatures. <p> In all of these schemes, each document may have many valid signatures. The fact that digital signatures can be implemented if one-way functions exist without the need for a trapdoor <ref> [NY, Ro] </ref> is somewhat remarkable, as by definition a digital signature seems to posses the essential flavor of a trapdoor function: namely, it should be easy for everyone to verify the correctness of a signature, while it should be hard for everyone except a privileged user (with access to the private <p> Invariant signatures are interesting in their own right, as they capture the flavor of having a unique valid signature per document as in the case of RSA, and yet can be proven secure against adaptive chosen message attack as in the case of <ref> [GoMiRi, BeMi, NY, Ro] </ref>. Achieving these two aspects simultaneously may prove valuable in applications. 1.1 Invariant Signatures Let us recall the definition of digital signatures as defined in [GoMiRi]. <p> We remark that the known constructions of non-interactive zero-knowledge proofs with polynomial-time 2 participants use the trapdoor permutations assumption [FLS], while digital signatures can be implemented based on any one-way function <ref> [Ro] </ref>. We show that the existence of invariant digital signatures is equivalent to the existence of non-interactive zero-knowledge proofs. <p> We refer to the predicate P as, the invariant property of . This lemma follows immediately from the definition of invariant signature scheme. REMARK: We must stress that digital signatures of <ref> [GoMiRi, BeMi, NY, Ro] </ref> are not known to be invariant in the above sense. In fact, while honest signer can sign in some predetermined (in fact, deterministic [G]) way, there exists many valid signatures for the same document which bear no similarity to each other. <p> We claim that digital signatures (and, hence, IN V DS) already imply the existence of a one-way function <ref> [Ro] </ref>. Thus, it remains to show that based on IN V DS and the existence of one-way functions we can construct N IZK for some hard language. Assuming that one-way function f exist, we can construct a hard language in a straight-forward fashion. <p> Clearly, this intuition is correct if indeed for every y i there exists a unique fixed boolean value b i computable from any valid signature of y i . Unfortunately, this is not the case for digital signatures in general <ref> [GoMiRi, BeMi, NY, Ro] </ref>. We remark that if it were true, then we could have implemented N IZK based on any one-way function instead of one-way trapdoor permutations as currently known. However, the above intuition is true for invariant digital signatures with high probability.
References-found: 27

