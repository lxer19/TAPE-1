URL: http://dimacs.rutgers.edu/Workshops/Security/program2/boyd.ps
Refering-URL: http://dimacs.rutgers.edu/Workshops/Security/program2/program.html
Root-URL: http://www.cs.rutgers.edu
Title: Towards Extensional Goals in Authentication Protocols  
Author: Colin Boyd 
Address: Brisbane Q4001 AUSTRALIA  
Affiliation: Information Security Research Centre School of Data Communications Queensland University of Technology  
Abstract: The importance of clarifying the goals of a cryptographic protocol is widely recognised. The majority of authors have addressed intensional goals which are concerned with correct operation within the protocol itself. Extensional goals are properties independent of the protocol and define what the protocol is designed to achieve. This paper reviews the previous literature on goals in protocols and classifies them as intensional or extensional goals. A hierarchy of extensional protocol goals is proposed which includes the major proposed goals for key establishment. It is shown how these extensional goals can be exploited to motivate design of entity authentication protocols.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Abadi, </author> <title> "Explicit Communication in Authentication: Two New Examples", </title> <journal> IEEE Transactions on Software Engineering, </journal> <note> 1997, to appear. </note>
Reference-contexts: A great deal of effort has been devoted to analysis techniques [15] while general principles for design of protocols are now much better understood [2]. Even so, the rate at which protocol faults are being reported does not appear to be slowing down <ref> [1, 14, 17, 16] </ref>. It is obvious that any attack on a protocol is only valid if it violates some property that the protocol was intended to achieve. In other words all attacks must be considered relative to the protocol goals. <p> It may be more than a coincidence that the majority of recent attacks on protocols seem to have been concerned with authentication rather than key establishment <ref> [1, 14, 17] </ref>. A clear view of what it means to achieve key establishment has allowed protocol designers to more systematically incorporate the correct mechanisms.
Reference: [2] <author> M. Abadi and R. Needham, </author> <note> "Prudent Engineering Practice for Cryptographic Protocols" DEC SRC Research Report 125, </note> <month> June </month> <year> 1994. </year>
Reference-contexts: 1 Introduction Research into cryptographic protocols has been increasing in momentum in recent years. A great deal of effort has been devoted to analysis techniques [15] while general principles for design of protocols are now much better understood <ref> [2] </ref>. Even so, the rate at which protocol faults are being reported does not appear to be slowing down [1, 14, 17, 16]. It is obvious that any attack on a protocol is only valid if it violates some property that the protocol was intended to achieve.
Reference: [3] <author> M. Bellare and P. Rogaway, </author> <title> "Entity Authentication and Key Distribution", </title> <booktitle> Advances in Cryptology - Crypto'93 Springer-Verlag, </booktitle> <year> 1994, </year> <month> pp.232-249. </month>
Reference-contexts: However, Bellare and Rogaway, and others following them, have been able to design particular protocols which are proven secure in a specific sense <ref> [3, 5, 7] </ref>. Security in these models is based on the notion of matching conversations, an idea which seems to have been first introduced by Bird et al [6]. <p> The first condition is intensional and concerns entity authentication. The second is extensional and concerns key establishment. Bellare and Rogaway <ref> [3] </ref> consider a powerful (formally defined) adversary. They define a secure mutual authentication protocol as one in which two principals `accept' if they have matching conversations, but the probability of an unmatched conversation (in the presence of the powerful adversary) is negligible.
Reference: [4] <author> M. Bellare and P. Rogaway, </author> <title> "Optimal Asymmetric Encryption", </title> <booktitle> Advances in Cryptology - Eurocrypt 94, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 92-111. </pages>
Reference: [5] <author> M. Bellare and P. Rogaway, </author> <title> "Provably Secure Session Key Distribution | the Three Party Case", </title> <booktitle> Proceedings of the 27th ACM Symposium on the Theory of Computing, </booktitle> <year> 1995. </year>
Reference-contexts: However, Bellare and Rogaway, and others following them, have been able to design particular protocols which are proven secure in a specific sense <ref> [3, 5, 7] </ref>. Security in these models is based on the notion of matching conversations, an idea which seems to have been first introduced by Bird et al [6]. <p> One reason for this may be that it is difficult to be clear on the purpose of entity authentication in the absence of key establishment. In fact Bellare and Rogaway <ref> [5] </ref> have stated: . . . entity authentication is rarely useful in the absence of an associated key distribution, while key distribution, all by itself, it not only useful, but it is not appreciably more so when an entity authentication occurs along side . . . by the time you become <p> Further considerations on protocol design for entity authentication are discussed below. It should be noted that the above attack is probably prevented by including strict formatting in the RSA encrypted messages, such as is recommended by the RSA Encryption Standard PKCS #1 [26] or by Bellare and Rogaway <ref> [5] </ref>. Such formatting is intended to ensure that the encrypting agent must be aware of the whole plaintext in order to form a valid ciphertext.
Reference: [6] <author> R. Bird, I. Gopal, A. Herzberg, P. Janson, S. Kutten, R. Molva and M. Yung, </author> <title> "Systematic Design of a Family of Attack-Resistant Authentication Protocols", </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 11, 5, pp.679-693, </volume> <month> June </month> <year> 1993. </year>
Reference-contexts: Security in these models is based on the notion of matching conversations, an idea which seems to have been first introduced by Bird et al <ref> [6] </ref>. Roughly, a protocol is secure if a principal will successfully complete a protocol run only when the protocol partner has a `matching' conversation. The idea was also used by Diffie, Van Oorschot and Wiener [12] in their definition of a secure protocol. They give the following definition. <p> An attack on the above protocol is possible 2 which is very similar to some previously published attacks <ref> [6, 12] </ref>. In this attack A is used as an `oracle' by the attacker C. 1. C A ! B : N C 1'. C B ! A : N B 3.
Reference: [7] <author> S. Blake-Wilson and A. Menezes, </author> <title> "Security Proofs for Entity Authentication and Authenticated Key Transport Protocols Employing Asymmetric Techniques", </title> <booktitle> Security Protocols Workshop, </booktitle> <year> 1997. </year>
Reference-contexts: However, Bellare and Rogaway, and others following them, have been able to design particular protocols which are proven secure in a specific sense <ref> [3, 5, 7] </ref>. Security in these models is based on the notion of matching conversations, an idea which seems to have been first introduced by Bird et al [6].
Reference: [8] <author> M. Blum and S. Goldwasser, </author> <title> "An Efficient Probabilistic Public-Key Encryption Scheme which Hides All Partial Information", </title> <booktitle> Advances in Cryptology - Crypto 84, </booktitle> <address> pp.289-299, </address> <publisher> Springer-Verlag, </publisher> <year> 1985. </year> <month> 15 </month>
Reference-contexts: Unfortunately this need not be the case, even with the most well known public key encryption algorithms. To see the point, consider the Blum-Goldwasser public key encryption algorithm <ref> [8] </ref>. In this algorithm the plaintext is added modulo 2 to a string formed by iterative squaring. Consequently it is trivial for an attacker to change the known parts of the ciphertext, which are the identifiers in message 1 (and message 2 in Lowe's fix).
Reference: [9] <author> C. Boyd, </author> <title> "A Framework for Design of Key Establishment Protocols", Information Security and Privacy, </title> <publisher> LNCS 1172, pp.146-157, Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: An informal, but successful, method to design new key establishment protocols has been to use the extensional properties of key freshness and exclusivity in combination with abstract notions of secure channels <ref> [9] </ref>. The purpose of this section is to suggest that a similar process can be done for entity authentication using the extensional properties established in section 3. The two properties that are of interest are liveness and entity authentication. <p> The two properties that are of interest are liveness and entity authentication. An abstract version of protocols intended to achieve liveness is as follows, where A a denotes an abstract authentication channel which provides authenticity of everything received by B <ref> [9] </ref>. N B is any value which can be verified by B as fresh. A ! B : N B This can be made concrete in a variety of ways. Mutual liveness between A and B who share a key K AB can be achieved in the following protocol. 1.
Reference: [10] <author> M. Burrows, M. Abadi and R. Needham, </author> <title> "A Logic of Authentication", </title> <journal> Proceedings of the Royal Society, Series A, </journal> <volume> 246, </volume> <year> (1989), </year> <month> pp.233-271. </month>
Reference-contexts: In section 3 extensional goals for entity authentication are proposed. 2.3 Goals in Logical Analysis Various logics have been used successfully for analysis of cryptographic protocols. The first of these was the logic of Burrows, Abadi and Needham, the BAN logic <ref> [10] </ref>. An analysis of a protocol using 3 the BAN logic results in a set of beliefs of each protocol principal and goals may be expressed as the desired final beliefs.
Reference: [11] <author> W. Diffie and M. Hellman, </author> <title> "New Directions in Cryptography", </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 22, pp.644-654, </volume> <year> 1976. </year>
Reference-contexts: These have been chosen particularly because they have given rise to controversy in the literature about what they achieve and what attacks are valid. 4.1 STS Protocol The station-to-station (STS) protocol [12] uses a signature in the exchanged messages to add authentication to the well-known Diffie-Hellman protocol <ref> [11] </ref>. This uses arithmetic in the multiplicative group of a finite field of prime order with generator ff. Exponents x and y are chosen randomly by A and B respectively and are used to form the session key K = ff xy .
Reference: [12] <author> W. Diffie, P. van Oorschot and M. Wiener, </author> <title> "Authentication and Authenticated Key Exchange", Designs, Codes and Cryptography, </title> <type> 2, </type> <year> 1992, </year> <month> pp.107-125. </month>
Reference-contexts: Roughly, a protocol is secure if a principal will successfully complete a protocol run only when the protocol partner has a `matching' conversation. The idea was also used by Diffie, Van Oorschot and Wiener <ref> [12] </ref> in their definition of a secure protocol. They give the following definition. <p> These have been chosen particularly because they have given rise to controversy in the literature about what they achieve and what attacks are valid. 4.1 STS Protocol The station-to-station (STS) protocol <ref> [12] </ref> uses a signature in the exchanged messages to add authentication to the well-known Diffie-Hellman protocol [11]. This uses arithmetic in the multiplicative group of a finite field of prime order with generator ff. <p> An attack on the above protocol is possible 2 which is very similar to some previously published attacks <ref> [6, 12] </ref>. In this attack A is used as an `oracle' by the attacker C. 1. C A ! B : N C 1'. C B ! A : N B 3.
Reference: [13] <author> D. Gollman, </author> <title> "What do we Mean by Entity Authentication", </title> <booktitle> IEEE Symposium on Security and Privacy, </booktitle> <address> pp.46-54, </address> <year> 1996. </year>
Reference-contexts: Many protocols are poorly designed because their authors are unclear what are the protocol goals they are trying to achieve. This is turn leads to disputes about whether protocol attacks are valid, since designers may regard the goals differently from analysers (as discussed by Gollman <ref> [13] </ref>). Clarity in describing protocols goals is desirable for all parties concerned. Designers should make use of the protocol goals to justify each message field and all cryptographic processing. Experience shows that protocols with well-defined goals are stream-lined and transparent to analyse. <p> It has been recognised by many authors that there is a problem defining in abstract terms what should be meant by entity authentication, although the meaning of key establishment seems easier to decide upon. Gollman <ref> [13] </ref> has put forward a number of different options for what could be meant by authentication. The first one is as follows. Gol1 The protocol shall establish a fresh session key, known only to the participants in the session and possibly some Trusted Third Parties. <p> A ! B : fN B g K B Although this protocol is nearly 20 years old it has aroused quite some interest recently. An attack of Lowe [16] shows that B cannot be sure that the final message came from A. Gollman <ref> [13] </ref> points out that the protocol fails, because of this, to achieve his goal Gol2. Notice that A has never explicitly declared her intention to converse with B.
Reference: [14] <author> J.W. Gray III, </author> <note> "On the Clark-Jacob Version of SPLICE/AS", Information Processing Letters, 1997, to appear. </note>
Reference-contexts: A great deal of effort has been devoted to analysis techniques [15] while general principles for design of protocols are now much better understood [2]. Even so, the rate at which protocol faults are being reported does not appear to be slowing down <ref> [1, 14, 17, 16] </ref>. It is obvious that any attack on a protocol is only valid if it violates some property that the protocol was intended to achieve. In other words all attacks must be considered relative to the protocol goals. <p> It may be more than a coincidence that the majority of recent attacks on protocols seem to have been concerned with authentication rather than key establishment <ref> [1, 14, 17] </ref>. A clear view of what it means to achieve key establishment has allowed protocol designers to more systematically incorporate the correct mechanisms.
Reference: [15] <author> R. Kemmerer, C. Meadows and J. Millen, </author> <title> "Three Systems for Cryptographic Protocol Analysis", </title> <journal> Journal of Cryptology, 7,2, </journal> <volume> pp.79-130, </volume> <year> 1994. </year>
Reference-contexts: 1 Introduction Research into cryptographic protocols has been increasing in momentum in recent years. A great deal of effort has been devoted to analysis techniques <ref> [15] </ref> while general principles for design of protocols are now much better understood [2]. Even so, the rate at which protocol faults are being reported does not appear to be slowing down [1, 14, 17, 16]. <p> Several research efforts have been made in this direction <ref> [15, 24, 27] </ref>. The NRL Protocol Analyzer [19] is a software tool implementing one such approach. Syverson and Meadows [31] have considered methods to specify formal requirements for the protocols which are analysed using the NRL Protocol Analyzer, rather than simply looking for specific flaws such as compromised keys.
Reference: [16] <author> G. Lowe, </author> <title> "Breaking and Fixing the Needham-Schroeder Public Key Protocol using FDR", Tools and Algorithms for the Construction and Analysis of Systems, </title> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <month> pp.147-166. </month>
Reference-contexts: A great deal of effort has been devoted to analysis techniques [15] while general principles for design of protocols are now much better understood [2]. Even so, the rate at which protocol faults are being reported does not appear to be slowing down <ref> [1, 14, 17, 16] </ref>. It is obvious that any attack on a protocol is only valid if it violates some property that the protocol was intended to achieve. In other words all attacks must be considered relative to the protocol goals. <p> A ! B : fN A ; Ag K B 3. A ! B : fN B g K B Although this protocol is nearly 20 years old it has aroused quite some interest recently. An attack of Lowe <ref> [16] </ref> shows that B cannot be sure that the final message came from A. Gollman [13] points out that the protocol fails, because of this, to achieve his goal Gol2. Notice that A has never explicitly declared her intention to converse with B.
Reference: [17] <author> G. Lowe, </author> <title> "Some New Attacks upon Security Protocols", </title> <booktitle> 9th IEEE Computer Security Foundations Workshop, </booktitle> <publisher> IEEE Press 1996, pp.162-169. </publisher>
Reference-contexts: A great deal of effort has been devoted to analysis techniques [15] while general principles for design of protocols are now much better understood [2]. Even so, the rate at which protocol faults are being reported does not appear to be slowing down <ref> [1, 14, 17, 16] </ref>. It is obvious that any attack on a protocol is only valid if it violates some property that the protocol was intended to achieve. In other words all attacks must be considered relative to the protocol goals. <p> Entity authentication is more problematic since there is no explicit inclusion of identifiers in the signed messages which could be used to deduce the desired communications partner. Recently Lowe <ref> [17] </ref> has proposed an attack on the STS protocol. The attack does not affect the key establishment properties but is addressed at whether entity authentication is achieved. <p> It may also be valid if entity authentication was a goal. However, it is interesting to note that Syverson and Van Oorschot prove in their logic [28] that the protocol satisfies their goal SVO2, which they term entity authentication. Lowe proposes <ref> [17] </ref> that the identity of the other party be included in the signatures in order to overcome the attack. <p> It may be more than a coincidence that the majority of recent attacks on protocols seem to have been concerned with authentication rather than key establishment <ref> [1, 14, 17] </ref>. A clear view of what it means to achieve key establishment has allowed protocol designers to more systematically incorporate the correct mechanisms.
Reference: [18] <author> G. Lowe, </author> <title> "A Hierarchy of Authentication Specification", </title> <booktitle> 10th IEEE Computer Security Foundations Workshop, </booktitle> <publisher> IEEE Press, </publisher> <year> 1997. </year>
Reference-contexts: Another method for algebraic analysis uses CSP specifications together with a tool called FDR [24]. Lowe has used this technique to derive a variety of new protocol attacks and recently has considered what are the possible goals for authentication protocols <ref> [18] </ref>. These all concern properties provided to an initiator A communicating with a responder B. Low1: Aliveness Whenever A completes a run of the protocol, apparently with B, then B has previously been running the protocol.
Reference: [19] <author> C. Meadows, </author> <title> "The NRL Protocol Analyzer: An Overview", </title> <journal> Journal of Logic Programming, </journal> <volume> 26,2, </volume> <year> 1996, </year> <month> pp.113-131. </month>
Reference-contexts: Several research efforts have been made in this direction [15, 24, 27]. The NRL Protocol Analyzer <ref> [19] </ref> is a software tool implementing one such approach. Syverson and Meadows [31] have considered methods to specify formal requirements for the protocols which are analysed using the NRL Protocol Analyzer, rather than simply looking for specific flaws such as compromised keys.
Reference: [20] <author> J. Millen, "CAPSL: </author> <title> Common Authentication Protocol Specification Language" Document maintained at web site: </title> <address> http://www.mitre.org/research/capsl/. </address>
Reference-contexts: To this end Millen has initiated a Common Authentication Protocols Specification Language (CAPSL) <ref> [20] </ref> which does just this. A CAPSL specification consists of a number of sections concerning different protocol elements. One of these is a section on protocol assumptions and goals. A CAPSL protocol specifier is free to choose the protocol goals within what may be expressed in the language.
Reference: [21] <author> R. Needham and M. Schroeder, </author> <title> "Using Encryption for Authentication in Large Networks of Computers", </title> <journal> Communications of the ACM, </journal> <volume> 21, pp.393-399, </volume> <year> 1978. </year>
Reference-contexts: However Lowe does discuss how to extend the properties to include recentness. Another approach using CSP has been made by Schneider [27]. He enumerated nine different `flavours' of authentication in his analysis of the well-known Needham-Schroeder public key protocol <ref> [21] </ref>. These fascinatingly subtle variations reveal the microscopic detail with which protocol goals may be differentiated. Each property relates matters such as who initiated the run, whether a nonce is associated with a specific party, or whether a nonce was received by a specific party. All the properties are intensional. <p> This also allows an informal argument that the extensional definition of entity authentication is achieved, if the included identifier is interpreted as the name of the entity with which communication is desired. 4.2 Needham-Schroeder Public Key Protocol The Needham-Schroeder public key protocol <ref> [21] </ref> is another example that has been widely examined by protocol researchers. Users A and B own public keys, K A and K B respectively, which, it is assumed here, are authentically known by the other.
Reference: [22] <author> B. Preneel and P. van Oorschot, </author> <title> "MDx-MAC and Building Fast MACs from Hash Functions", </title> <booktitle> Advances in Cryptology - Crypto'95, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <month> pp.1-14. </month>
Reference-contexts: A ! B : h (N B ; A; B) Here h (K; :) may be a keyed one-way hash function such that need K is needed to calculate it, and it does not give away K. Several constructions for such functions exist in the literature <ref> [22] </ref>. Further considerations on protocol design for entity authentication are discussed below. It should be noted that the above attack is probably prevented by including strict formatting in the RSA encrypted messages, such as is recommended by the RSA Encryption Standard PKCS #1 [26] or by Bellare and Rogaway [5].
Reference: [23] <author> R. Rivest, A. Shamir and L. Adleman, </author> <title> "A Method for Obtaining Digital Signatures and Public Key Cryptosystems", </title> <journal> Communications of the ACM, </journal> <volume> 21, pp.120-126, </volume> <year> 1978. </year>
Reference-contexts: In practice, use of the Blum-Goldwasser algorithm is not very reasonable, since it is known to be vulnerable to a chosen ciphertext attack which is eminently possible in the protocol. On the other hand, there is a reasonable scenario in which use of the well-known RSA algorithm <ref> [23] </ref> is insecure. Suppose the attacker knows (or chooses) an identifier C such that C is the same bit string as identifier A shifted left one place. Then the attacker can capture fN A ; Ag K B and multiply it by f2g K B .
Reference: [24] <author> A. W. Roscoe, </author> <title> "Modelling and Verifying Key Exchange Protocols using CSP and FDR", </title> <booktitle> 8th IEEE Computer Security Foundations Workshop, </booktitle> <address> pp.98-107, </address> <publisher> IEEE Press 1995. </publisher>
Reference-contexts: Several research efforts have been made in this direction <ref> [15, 24, 27] </ref>. The NRL Protocol Analyzer [19] is a software tool implementing one such approach. Syverson and Meadows [31] have considered methods to specify formal requirements for the protocols which are analysed using the NRL Protocol Analyzer, rather than simply looking for specific flaws such as compromised keys. <p> In an extension of their work they also consider requirements for re-authentication of a key [31]; as might be expected, these involve different properties from those relevant for new session keys. Another method for algebraic analysis uses CSP specifications together with a tool called FDR <ref> [24] </ref>. Lowe has used this technique to derive a variety of new protocol attacks and recently has considered what are the possible goals for authentication protocols [18]. These all concern properties provided to an initiator A communicating with a responder B.
Reference: [25] <author> A. W. Roscoe, </author> <title> "Intensional Specifications of Security Protocols", </title> <booktitle> 9th IEEE Computer Security Foundations Workshop, </booktitle> <address> pp.28-38, </address> <year> 1996. </year>
Reference-contexts: This leads to consideration of a new attack on the widely studied Needham-Schroeder public key protocol. Finally it is shown how these extensional goals can be exploited to motivate design of key establishment protocols. 2 Goals Discussed in Previous Work 2.1 Intensional and Extensional Goals Roscoe <ref> [25] </ref> has recently considered the difference between intensional and extensional specifications of cryptographic protocols. Although no formal definition of these terms is given, the general principle is whether specifications take into account the details of how the operates rather than what each protocol principal gains from the protocol.
Reference: [26] <institution> RSA Laboratories, </institution> <note> "PKCS #1: RSA Encryption Standard", Version 1.5, </note> <month> November </month> <year> 1993. </year> <month> 16 </month>
Reference-contexts: Further considerations on protocol design for entity authentication are discussed below. It should be noted that the above attack is probably prevented by including strict formatting in the RSA encrypted messages, such as is recommended by the RSA Encryption Standard PKCS #1 <ref> [26] </ref> or by Bellare and Rogaway [5]. Such formatting is intended to ensure that the encrypting agent must be aware of the whole plaintext in order to form a valid ciphertext.
Reference: [27] <author> S. Schneider, </author> <title> "Verifying Authentication Protocols with CSP", </title> <booktitle> 10th IEEE Computer Security Foundations Workshop, </booktitle> <publisher> IEEE Press, </publisher> <year> 1997. </year>
Reference-contexts: Several research efforts have been made in this direction <ref> [15, 24, 27] </ref>. The NRL Protocol Analyzer [19] is a software tool implementing one such approach. Syverson and Meadows [31] have considered methods to specify formal requirements for the protocols which are analysed using the NRL Protocol Analyzer, rather than simply looking for specific flaws such as compromised keys. <p> Low1 does not provide assurance that B has responded recently, so it provides liveness at some time, rather than the liveness `now' of SVO1. However Lowe does discuss how to extend the properties to include recentness. Another approach using CSP has been made by Schneider <ref> [27] </ref>. He enumerated nine different `flavours' of authentication in his analysis of the well-known Needham-Schroeder public key protocol [21]. These fascinatingly subtle variations reveal the microscopic detail with which protocol goals may be differentiated.
Reference: [28] <author> P. Syverson and P. van Oorschot, </author> <title> "On Unifying Some Cryptographic Protocol Logics", </title> <booktitle> 1994 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pp. 14-28, </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1994. </year>
Reference-contexts: For example they show that some protocols reveal that a certain principal is `alive' because that principal has sent a message recently. We will expand on this idea later. Numerous enhancements and alternatives to the BAN logic have been published. The logic of Syverson and van Oorschot, SVO logic <ref> [28, 29] </ref>, aims to unify a number of previous logics including BAN. The authors identify what they term six `Generic Formal Goals'. These are expressed in English below; for formal statements readers should refer to the papers. SVO1: Far-end Operative A believes B recently `said' something. <p> Thus the attack is valid if mutual belief in the key was a protocol goal. It may also be valid if entity authentication was a goal. However, it is interesting to note that Syverson and Van Oorschot prove in their logic <ref> [28] </ref> that the protocol satisfies their goal SVO2, which they term entity authentication. Lowe proposes [17] that the identity of the other party be included in the signatures in order to overcome the attack.
Reference: [29] <author> P. Syverson and P. van Oorschot, </author> <title> "A Unified Cryptographic Protocol Logic", </title> <note> Draft available from the authors, </note> <year> 1996. </year>
Reference-contexts: For example they show that some protocols reveal that a certain principal is `alive' because that principal has sent a message recently. We will expand on this idea later. Numerous enhancements and alternatives to the BAN logic have been published. The logic of Syverson and van Oorschot, SVO logic <ref> [28, 29] </ref>, aims to unify a number of previous logics including BAN. The authors identify what they term six `Generic Formal Goals'. These are expressed in English below; for formal statements readers should refer to the papers. SVO1: Far-end Operative A believes B recently `said' something.
Reference: [30] <author> P. </author> <title> Syverson (Moderator), "Panel: What is an Attack on a Cryptographic Protocol?", </title> <booktitle> 9th IEEE Computer Security Foundations Workshop, </booktitle> <address> p.188, </address> <publisher> IEEE Press, </publisher> <year> 1996. </year>
Reference-contexts: A panel session at the 1996 Computer Security Foundations workshop was dedicated to the question: "What is an Attack on a Cryptographic Protocol?" <ref> [30] </ref>, and showed that there are many questions yet to be resolved.
Reference: [31] <author> P. Syverson and C. Meadows, </author> <title> "Formal Requirements for Key Distribution Protocols", </title> <booktitle> Advances in Cryptology - Eurocrypt'94, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <month> pp.320-331. </month>
Reference-contexts: Several research efforts have been made in this direction [15, 24, 27]. The NRL Protocol Analyzer [19] is a software tool implementing one such approach. Syverson and Meadows <ref> [31] </ref> have considered methods to specify formal requirements for the protocols which are analysed using the NRL Protocol Analyzer, rather than simply looking for specific flaws such as compromised keys. <p> Syverson and Meadows also provide requirements for the case of key agreement between two users without the help of a server. These requirements are also partly extensional and partly intensional. In an extension of their work they also consider requirements for re-authentication of a key <ref> [31] </ref>; as might be expected, these involve different properties from those relevant for new session keys. Another method for algebraic analysis uses CSP specifications together with a tool called FDR [24].
Reference: [32] <author> R. Yahalom, </author> <title> "Optimality of Asynchronous Two-Party Data-Exchange Protocols", </title> <journal> Journal of Computer Security, </journal> <volume> 2, </volume> <pages> 2-3, </pages> <year> 1993, </year> <note> pp.191-209. 17 </note>
References-found: 32

