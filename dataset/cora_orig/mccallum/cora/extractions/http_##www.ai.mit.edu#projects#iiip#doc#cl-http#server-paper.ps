URL: http://www.ai.mit.edu/projects/iiip/doc/cl-http/server-paper.ps
Refering-URL: http://www.ai.mit.edu/projects/iiip/doc/cl-http/server.html
Root-URL: 
Email: (JCMA@AI.MIT.EDU)  
Title: A Common LISP Hypermedia Server  
Author: John C. Mallery 
Date: 5 May, 1994  
Affiliation: Artificial Intelligence Laboratory Massachusetts Institute of Technology  
Abstract: A World-Wide Web (WWW) server was implemented in Common LISP in order to facilitate exploratory programming in the global hypermedia domain and to provide access to complex research programs, particularly artificial intelligence systems. The server was initially used to provide interfaces for document retrieval and for email servers. More advanced applications include interfaces to systems for inductive rule learning and natural-language question answering. Continuing research seeks to more fully generalize automatic form-processing techniques developed for email servers to operate seamlessly over the Web. The conclusions argue that presentation-based interfaces and more sophisticated form processing should be moved into the clients in order to reduce the load on servers and provide more advanced interaction models for users. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Abelson, H. and G. J. Sussman, </author> <title> The Structure and Interpretation of Computer Programs, </title> <publisher> Cambridge: M.I.T. Press, </publisher> <year> 1985. </year>
Reference: <author> Bobrow, D., et al., </author> <title> ``A Common LISP Object System Specification: X3J13 Document 88-002R,'' </title> <journal> SIGPLAN Notices, </journal> <volume> 23, </volume> <month> September, </month> <year> 1988. </year>
Reference: <author> Houh, H., Lindblad, C. & Wetherall, D., </author> <title> ``Active Pages: Intelligent Nodes on the World Wide Web,'' </title> <booktitle> Proceedings of the First International Conference on the World-Wide Web, </booktitle> <address> Geneva: </address> <publisher> CERN, </publisher> <year> 1994. </year>
Reference-contexts: Computing form retries requires datastructures beyond those normally associated with scripting languages. [Other research <ref> ( Houh, Lindblad, & Wetherall, 1994) </ref> arrives at similar conclusions concerning the limitations of scripting languages for more advanced, dynamic WWW applications.] In general, more advanced form-based applications will need the richer datastructures offered by full-featured programming languages like Common LISP. 3.
Reference: <author> Katz, B., </author> <title> ``Using English for Indexing and Retrieving,'' </title> <booktitle> in Artificial Intelligence at M.I.T.: Expanding Frontiers, </booktitle> <editor> edited by P. H. Winston with S. A. Shellard, </editor> <publisher> Cambridge: M.I.T. Press, vol. </publisher> <address> 1, ch. 6, </address> <year> 1990. </year>
Reference: <author> Katz, B., </author> <title> ``Using Natural Language Annotations in the Voyager Information System,'' </title> <booktitle> International Aerospace Congress IAC'94, </booktitle> <address> Moscow, Russia, </address> <year> 1994. </year>
Reference: <author> Mallery, J. C., </author> <title> ``Semantic Content Analysis: A New Methodology for The RELATUS Natural Language Environment,'' </title> <booktitle> in Artificial Intelligence and International Politics, </booktitle> <editor> V. Hudson, ed., </editor> <address> Boulder: </address> <publisher> Westview Press, </publisher> <year> 1991. </year>
Reference-contexts: Advanced Applications Two artificial intelligence applications were fielded by the end of the development period: Rule Induction: Learn if-then rules over the Web (Renaud, 1994) using an advanced datahandling environment (Mallery, 1994) and a sophisticated rule induction module <ref> (Unseld & Mallery, 1991) </ref>. See snapshots of the experiment and several rules learned. Natural-Language Question Answering: Ask English questions about the M.I.T. Artificial Intelligence Laboratory to a natural language system (Katz, 1990; Katz, 1994). Ask an English question to see how this works. <p> The present and accept methods are like little generators and parsers specialized to a presentation type. They can perform a simple operation, such as accepting an integer between 1 and 10, or they can execute a very complex computation. For example, in one research system <ref> (Mallery, 1991) </ref>, nodes in semantic network representing natural language text can be presented through a sentence generator so that the user sees them as generated sentences or sentence fragments.
Reference: <author> Mallery, J. C., </author> <title> ``Beyond Correlation: Bringing Artificial Intelligence to Event Data,'' International Interactions, </title> <publisher> forthcoming, </publisher> <year> 1994. </year>
Reference-contexts: Advanced Applications Two artificial intelligence applications were fielded by the end of the development period: Rule Induction: Learn if-then rules over the Web (Renaud, 1994) using an advanced datahandling environment <ref> (Mallery, 1994) </ref> and a sophisticated rule induction module (Unseld & Mallery, 1991). See snapshots of the experiment and several rules learned. Natural-Language Question Answering: Ask English questions about the M.I.T. Artificial Intelligence Laboratory to a natural language system (Katz, 1990; Katz, 1994).
Reference: <author> Keene, S. E., </author> <title> Object-Oriented Programming in Common LISP: A Programmer's Guide to CLOS, </title> <address> Reading: </address> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference: <author> Renaud, B., </author> <title> Global Data Sharing and Analysis: A Networked Hypermedia Approach, </title> <institution> Cambridge: Political Science Department, Massachusetts Institute of Technology, </institution> <type> S.B. Thesis, </type> <month> May </month> <year> 1994. </year>
Reference-contexts: A high-profile demonstration at the end of the period was well-received. More recently, an authoring tool for email-based forms was generalized to emit HTML+ <ref> (Renaud, 1994) </ref>. This graphical tool is now used to author forms that can work over email and WWW. The authoring tool is important for the generalization of email forms across the Web because form processing in email servers performs automatic retries when user input is syntactically or semantically incorrect. <p> All these applications handle invalid or incoherent user input by returning dynamically generated HTML+ that explains the problem and guides the user's efforts to resubmit. 4. Advanced Applications Two artificial intelligence applications were fielded by the end of the development period: Rule Induction: Learn if-then rules over the Web <ref> (Renaud, 1994) </ref> using an advanced datahandling environment (Mallery, 1994) and a sophisticated rule induction module (Unseld & Mallery, 1991). See snapshots of the experiment and several rules learned. Natural-Language Question Answering: Ask English questions about the M.I.T. Artificial Intelligence Laboratory to a natural language system (Katz, 1990; Katz, 1994).
Reference: <author> Rao, R., York, W. M., and Doughty, D., </author> <title> ``A Guided Tour of the Common LISP Interface Manager,'' LISP Pointers, </title> <type> 4(1991). </type>
Reference-contexts: A pervasive object-oriented implementation helps enforce abstraction and modularity as it enhances flexibility and code sharing. 11. The Common LISP Interface Manager Modern Common LISP provides a high-level window system tool, the Common LISP Interface Manager (CLIM) (see the specification, <ref> (Rao, et al, 1991) </ref>. Written in Common LISP, CLIM runs on a variety of workstations, implementing its machine-independent abstractions with native window systems and mimicking their look and feel. By introducing high-level abstractions for specifying window interfaces, CLIM makes it easier and quicker to define window interfaces.
Reference: <author> Steele, G. L., </author> <title> Common LISP: The Language, Bedford: </title> <publisher> Digital Press, </publisher> <year> 1990. </year>
Reference: <author> Winston, P. H., and Horn, B. K. P. H., </author> <title> LISP, </title> <address> Reading: </address> <publisher> Addison-Wesley, </publisher> <year> 1989. </year> <title> This is a good introduction to Common LISP with special reference to artificial intelligence. </title>
Reference: <author> Unseld, S., and Mallery, J. C., </author> <title> ``Interaction Detection in Complex Datamodels,'' </title> <publisher> Cambridge: M.I.T. </publisher>

References-found: 13

