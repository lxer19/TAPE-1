URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/TM216.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts96.htm
Root-URL: http://www.mcs.anl.gov
Title: MolView Users Guide  
Author: by Brian P. Walenz 
Note: This work was supported by the Mathematical, Information, and Computational Sciences Division subprogram of the Office of Computational and Technology Research, U.S. Department of Energy, under Contract W-31-109-Eng-38, and by the Argonne Director's Individual Investigator Program.  
Date: June 1996  
Web: ANL/MCS-TM-216  
Address: 9700 South Cass Avenue Argonne, IL 60439  
Affiliation: ARGONNE NATIONAL LABORATORY  Mathematics and Computer Science Division  
Pubnum: Technical Memorandum No. 216  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> M. P. I. Forum, </author> <title> MPI: A message-passing interface standard, </title> <journal> International Journal of Supercomputing Applications, </journal> <month> 8 </month> <year> (1994). </year>
Reference-contexts: When modifying the MolView structures, one simply modifies MD Create*Datatype () so that the blocks of data are specified. For more information, see an MPI manual such as <ref> [1, 2] </ref>. 7.3 Driver to CAVE Transfer Functions The driver to CAVE transfer functions are in Remote.c. They create the MPI datatype (s) needed and call MPI Send (). All the work is done by the MPI datatype.
Reference: [2] <author> W. Gropp, E. Lusk, and A. Skjellum, </author> <title> USING MPI Portable Parallel Programming with the Message-Passing Interface, </title> <publisher> The MIT Press, </publisher> <address> Cambridge, </address> <year> 1994. </year> <month> 16 </month>
Reference-contexts: When modifying the MolView structures, one simply modifies MD Create*Datatype () so that the blocks of data are specified. For more information, see an MPI manual such as <ref> [1, 2] </ref>. 7.3 Driver to CAVE Transfer Functions The driver to CAVE transfer functions are in Remote.c. They create the MPI datatype (s) needed and call MPI Send (). All the work is done by the MPI datatype.
Reference: [3] <author> M. W. J. Neider, T. Davis, </author> <title> OpenGL Programming Guide, </title> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Reading, Massachusetts, </address> <year> 1993. </year>
Reference-contexts: To have the molecule rotate about the center of mass, Center should be set the the center of mass. Likewise, to rotate about a specific atom, Center should be the location of that atom. struct FrameData - int FrameID; int MoleculeID; int NumAtoms; float Center <ref> [3] </ref>; -; void MV AddMolecule (MoleculeData *M) void MV AddFrame (FrameData *F, AtomData *A) void MV Exit (void) MVF AddMolecule (MoleculeID) integer MoleculeID MVF AddFrame (MoleculeID, FrameID, NumberOfAtoms, Center AtomPositions, AtomColors, AtomSizes) integer MoleculeID, FrameID, NumberOfAtoms double precision (3) Center double precision (*) AtomPositions, AtomColors, AtomSizes MVF Exit () The AtomData <p> At the very least, this description must contain the position, color and size of the atom. struct AtomData - float Position <ref> [3] </ref>; float Color [4]; float Size; -; 6.3 Data Transmission A driver program uses three routines to communicate with the CAVE: one to create a molecule, one to add a frame to a previously created molecule, and one to tell the CAVE that the driver is done. <p> Failure to do so will result in the correct molecule being displayed on one CAVE wall, and something else on other CAVE walls. See the OpenGL Programming Guide <ref> [3] </ref> for details on display list creation. 7.6 Menu System Menu routines are in Menus.C and can be modified according to [4]. Sliders merit special attention: they must be updated whenever the values they are associated with change.
Reference: [4] <author> B. Walenz. </author> <title> Unpublished information, </title> <institution> Argonne National Laboratory, </institution> <year> 1996. </year> <month> 17 </month>
Reference-contexts: There is no limit on the number of blocks OneFrame 5 FRAME .33057547E+02 .10593340E+01 .56625598E+00 .86668641E+00 -.14570831E+00 -.96484823E+00 -.11143683E+01 END_OF_MOLECULE TwoFrames 4 FRAME .39404080E+02 .47903853E+00 .55072851E+00 .13601102E+01 .12626000E+01 .92686556E+00 .81957154E-01 FRAME .46088283E+02 -.22749490E-01 .80373052E+00 -.13834594E+01 .22749490E-01 -.80373052E+00 .13834594E+01 END_OF_MOLECULE 6 4 The CAVE Interface MolView uses the CaveMenu system <ref> [4] </ref>. Briefly, interaction with the menus is done by pointing the wand at a menu gadget and pressing the third (right) button. The menus in MolView are grouped by function. <p> At the very least, this description must contain the position, color and size of the atom. struct AtomData - float Position [3]; float Color <ref> [4] </ref>; float Size; -; 6.3 Data Transmission A driver program uses three routines to communicate with the CAVE: one to create a molecule, one to add a frame to a previously created molecule, and one to tell the CAVE that the driver is done. <p> Failure to do so will result in the correct molecule being displayed on one CAVE wall, and something else on other CAVE walls. See the OpenGL Programming Guide [3] for details on display list creation. 7.6 Menu System Menu routines are in Menus.C and can be modified according to <ref> [4] </ref>. Sliders merit special attention: they must be updated whenever the values they are associated with change. Currently, they are updated whenever something happens, not just when their value changes.
References-found: 4

