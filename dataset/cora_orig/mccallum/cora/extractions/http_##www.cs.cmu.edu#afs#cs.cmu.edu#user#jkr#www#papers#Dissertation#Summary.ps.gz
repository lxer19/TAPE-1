URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/user/jkr/www/papers/Dissertation/Summary.ps.gz
Refering-URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/user/jkr/www/papers/Dissertation/
Root-URL: 
Email: jkr@cmu.edu  
Title: DAMN: A DISTRIBUTED ARCHITECTURE FOR MOBILE NAVIGATION Thesis Summary  
Author: Julio Rosenblatt 
Address: Pittsburgh PA 15213  
Affiliation: The Robotics Institute Carnegie Mellon University  
Abstract: In unstructured, unknown, and dynamic environments, planning systems cannot generate a plan a priori that can be expected to perform reasonably in the face of such uncertainty, nor can they anticipate all contingencies that may arise; instead, decision-making must be based on current information and state at all times, proceeding in a data-driven manner, rather than attempting to impose unrealizable plans in a top-down fashion. In addition, the dynamics of the vehicle itself often play an important role in determining which actions may be achieved and which actions are to be avoided. In addition, for domains such as mobile robot navigation, there is the need to combine information from several different sources to be used to perform diverse tasks. A system architecture should be able to accommodate and integrate subsystems that have been developed independently, so it must impose minimal restrictions on the nature of the data, representations, and algorithms used by these subsystems designed to achieve their respective tasks. Also, sensors and the functions that process their data each operate at different rates, so they must be allowed to operate asynchronously to maximize the throughput and thus the responsiveness of the system. The Distributed Architecture for Mobile Navigation, or DAMN, is implemented as a group of distributed behaviors communicating with a centralized command arbiter, sending votes in favor of actions that satisfy its objectives and against those actions which do not. Voting schemes have been implemented that are based in constraint, actuator, effect, and utility space. The arbiter is then responsible for combining the behaviors votes and generating actions which reects their objectives and priorities. As such, it is an implementation of the thesis that centralized arbitration of votes from distributed, independent, asynchronous decision-making processes provides coherent, rational, goal-directed behavior while preserving real-time responsiveness to its immediate physical environment, and that a framework for developing and integrating independent decision-making modules communicating with such arbiters facilitates their development and leads to evolutionary creation of robust systems of incrementally greater capabilities. DAMN has been used to combine various systems of differing capabilities on several mobile robots, and has also been used for active sensor control. Various subsystems developed at CMU and elsewhere have been integrated within this architecture, creating systems that perform road following, cross-country navigation, map-based route following, and teleoperation while avoiding obstacles and meeting mission objectives. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Albus, J., McCain, H. & Lumia, R. </author> <year> (1987), </year> <title> NASA/NBS Standard Reference Model for Telerobot Control System Architecture (NASREM), </title> <type> Tech. Note 1235, </type> <institution> Gaithersburg, MD. </institution>
Reference: [2] <author> Arkin, R., </author> <title> (1989) Motor Schema-Based Mobile Robot Navigation, </title> <journal> in International Journal of Robotics Research, </journal> <volume> Vol. 8(4), </volume> <month> August </month> <year> 1989, </year> <pages> pp. 92-112. </pages>
Reference-contexts: Another form of indirect communication is those cases where no information at all is transmitted within the system from one behavior to another. In command fusion architectures such as Motor Schemas <ref> [2] </ref>, Fuzzy Control [5], and DAMN, each behavior communicates its intentions with a central arbiter or coordinator rather than with each other, thus allowing development and execution of each module to proceed completely independently; however, the central module may represent a bottleneck, and there may be benefits derived from mutually shared
Reference: [3] <author> Brooks, R. </author> <year> (1986), </year> <title> A Robust Layered Control System for a Mobile Robot, </title> <journal> IEEE Journal of Robotics and Automation vol. RA-2, </journal> <volume> no. 1, </volume> <pages> pp. 14-23, </pages> <month> April </month> <year> 1986. </year>
Reference-contexts: Direct communications between modules provides the system designer with a high degree of control over the operation of the system, which may be desirable when modules are engineered to interact in a very narrowly defined manner, as in the Subsumption Architecture <ref> [3] </ref>; however, this makes extensions and modifications to the system difficult, and greatly limits the extent to which the system may be reused in different domains. <p> One of the requirements for a robot control system is that it be capable of satisfying multiple, possibly conicting goals [17]; as the name subsumption implies, this is achieved by having one behaviors commands completely override anothers <ref> [3] </ref>. While this is an effective scheme for choosing among incompatible commands, it does not provide an adequate means for dealing with multiple goals that can and should be satisfied simultaneously.
Reference: [4] <author> J. Firby, </author> <title> Task Networks for Controlling Continuous Processes, </title> <booktitle> proceedings of the Second International Conference on AI Planning Systems, </booktitle> <address> Chicago IL, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: Since expectations are not always met, there is a need to monitor the progress of desired actions and to report failures as they occur [14] <ref> [4] </ref>; consequently, there exist the monitor processes attached to actions. In an unstructured, unknown, or dynamic environment, this approach introduces complexities and inefficiencies which could be avoided if higher level modules participated in the decision-making process without assuming that their commands will be strictly followed [10].
Reference: [5] <author> J. Gowdy, IPT: </author> <title> An Object Oriented Toolkit for Interprocess Communication, </title> <type> Carnegie-Mellon Technical Report CMU-RI-TR-96-07, </type> <year> 1996. </year>
Reference-contexts: Another form of indirect communication is those cases where no information at all is transmitted within the system from one behavior to another. In command fusion architectures such as Motor Schemas [2], Fuzzy Control <ref> [5] </ref>, and DAMN, each behavior communicates its intentions with a central arbiter or coordinator rather than with each other, thus allowing development and execution of each module to proceed completely independently; however, the central module may represent a bottleneck, and there may be benefits derived from mutually shared information that cannot <p> Sequential activity is controlled by a mode manager such as SAUSAGES <ref> [5] </ref>, which exert meta-level control within DAMN by modifying the voting weights assigned to behaviors and thus controlling the degree to which each behavior may inuence the systems decision-making process and thus the robots actions.
Reference: [6] <author> Hayes-Roth, B. </author> <title> A blackboard architecture for control. </title> <journal> Artificial Intelligence, 1985, </journal> <volume> 26, </volume> <pages> 251-321. </pages> <note> Reprinted in: </note> <editor> Bond, A., and Gasser, L. (Eds.), </editor> <booktitle> Readings in Distributed Artificial Intelligence, </booktitle> <publisher> Morgan </publisher>
Reference-contexts: Indirect communications via media such as a blackboard <ref> [6] </ref> or a broadcast mechanism provides a layer of abstraction in the inter-module interface, thus simplifying the task of interchanging modules or adding new ones to a system; this exibility comes at the cost of increased overhead, resulting in reduced efficiency and throughput.
Reference: [7] <author> Kamada, H., Naoi, S., Goto, T. </author> <year> (1990), </year> <title> A Compact Navigation System Using Image Processing and Fuzzy Control, </title> <booktitle> IEEE Southeastcon, </booktitle> <address> New Orleans, </address> <month> April 1-4, </month> <year> 1990 </year>
Reference-contexts: This is similar to defuzzification in Fuzzy Logic control systems [9] <ref> [7] </ref>; indeed an architecture has been implemented which recasts this type of DAMN arbitration into a Fuzzy Logic framework [20]. a) Behavior 1, weight = 0.8, desired curvature = 0.04 c) Weighted Sum, max vote curvature = 0.035 d) Smoothed & Interpolated, peak curvature=0.033 b) Behavior 2, weight = 0.2, desired
Reference: [8] <author> Langer, D., Rosenblatt, J. &. Hebert, M. </author> <year> (1994), </year> <title> A Behavior-Based System For Off-Road Navigation, </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> vol. 10, no. 6, </volume> <pages> pp. 776-782, </pages> <month> December </month> <year> 1994. </year>
Reference-contexts: For example, ALVINN [14] uses an artificial neural network to associate video images of roads with appropriate steering directions and has been one of the most successful road following systems to date, and yet it has been less successful than other systems such as Smarty <ref> [8] </ref> that use range data for the purpose of obstacle avoidance.
Reference: [9] <author> Lee, C. </author> <year> (1990), </year> <title> Fuzzy Logic in Control Systems: Fuzzy Logic Controller -- Parts I & II, </title> <journal> IEEE Transactions on Systems, Man and Cybernetics, </journal> <volume> Vol. 20, No. </volume> <pages> 2. </pages>
Reference-contexts: This is similar to defuzzification in Fuzzy Logic control systems <ref> [9] </ref> [7]; indeed an architecture has been implemented which recasts this type of DAMN arbitration into a Fuzzy Logic framework [20]. a) Behavior 1, weight = 0.8, desired curvature = 0.04 c) Weighted Sum, max vote curvature = 0.035 d) Smoothed & Interpolated, peak curvature=0.033 b) Behavior 2, weight = 0.2,
Reference: [10] <author> H. Moravec, A. Elfes, </author> <title> High Resolution Map From Wide-Angle Sonar, </title> <booktitle> Proceedings 1985, IEEE International Conference on Robotics and Automation, </booktitle> <address> pp.116-121. </address>
Reference-contexts: In an unstructured, unknown, or dynamic environment, this approach introduces complexities and inefficiencies which could be avoided if higher level modules participated in the decision-making process without assuming that their commands will be strictly followed <ref> [10] </ref>. <p> Centralized, blackboard, and hierarchical architectures perform sensor fusion in order to construct a coherent world model which is then used for planning actions, as illustrated in ambiguities and noise inherent in the sensing process <ref> [10] </ref>, but has the disadvantage of creating a computationally expensive sensory bottleneck - all sensor data must be collected and integrated A B T R Deliberative commands weights MODE MANAGER VEHICLE CONTROLLER Behavior A Reactive Behavior C votes votes Lookahead Behavior B votes Deliberative Behavior X Reactive Behavior Z votes votes
Reference: [11] <author> Payton, D. </author> <year> (1986), </year> <title> An Architecture for Reexive Autonomous Vehicle Control, </title> <address> ICRA, San Francisco, CA, </address> <month> April 7-10, </month> <year> 1986, </year> <pages> pp. 1838-1845. </pages>
Reference-contexts: planners and the numerical calculation at the actuator control level, and does so without imposing the constraints and assumptions of an hierarchical architecture; in particular, plans are not used in a top-down fashion but rather as a source of advice, so that the exibility of the reactive level is preserved <ref> [11] </ref>. Functionality from one behavior is added to existing functionality from other behaviors to form conceptual levels of competence without a top-down structure, thus creating a free ow hierarchy [17]. Sensor Fusion vs. Command Arbitration Architectures can also be characterized by the ways in which they combine information and objectives.
Reference: [12] <author> D.W. Payton, </author> <title> Internalized Plans: A Representation for Action Resources, </title> <booktitle> Robotics and Autonomous Systems, </booktitle> <volume> 6(1), </volume> <year> 1990, </year> <pages> pp. </pages> <month> 89-103. </month> <title> (Also in Designing Autonomous Agents, </title> <editor> ed. Pattie Maes, </editor> <publisher> MIT Press, </publisher> <address> Cambridge, Mass. </address> <year> 1991, </year> <pages> pp. 89-103.) </pages>
Reference: [13] <author> Payton, D., Rosenblatt, J. & Keirsey, D. </author> <year> (1990), </year> <title> Plan Guided Reaction. </title> <journal> IEEE Transactions on Systems Man and Cybernetics, </journal> <volume> 20(6), </volume> <pages> pp. 1370-1382. </pages>
Reference: [14] <author> D. Pomerleau, </author> <title> Neural Network Perception for Mobile Robot Guidance, </title> <type> Ph.D. dissertation, Carnegie-Mellon Technical Report CMU-CS-92-115, </type> <year> 1992 </year>
Reference-contexts: Since expectations are not always met, there is a need to monitor the progress of desired actions and to report failures as they occur <ref> [14] </ref> [4]; consequently, there exist the monitor processes attached to actions. In an unstructured, unknown, or dynamic environment, this approach introduces complexities and inefficiencies which could be avoided if higher level modules participated in the decision-making process without assuming that their commands will be strictly followed [10]. <p> Furthermore, information from disparate sources such as maps, sonar, and video, are generally not amenable to combination within a single representational framework that is suitable for planning such dissimilar tasks as following roads and avoiding obstacles. For example, ALVINN <ref> [14] </ref> uses an artificial neural network to associate video images of roads with appropriate steering directions and has been one of the most successful road following systems to date, and yet it has been less successful than other systems such as Smarty [8] that use range data for the purpose of
Reference: [15] <author> Rosenblatt, J. & Thorpe, C. </author> <year> (1995), </year> <title> Combining Multiple Goals in a Behavior-Based Architecture, </title> <booktitle> IROS, </booktitle> <address> Pittsburgh, PA, </address> <month> August 7-9, </month> <year> 1995. </year>
Reference: [16] <author> Rosenschein, S. & Kaelbling, L. </author> <year> (1986), </year> <title> The Synthesis of Digital Machines with Provable Epistemic Properties, </title> <booktitle> Theoretical Aspects of Reasoning about Knowledge, </booktitle> <pages> pp. 83-98. </pages>
Reference: [17] <author> Simon, H. </author> <year> (1967), </year> <title> Motivational and Emotional Controls of Cognition. Reprinted in Models of Thought, </title> <publisher> Yale University Press, </publisher> <year> 1979, </year> <pages> pp. 29-38. </pages>
Reference-contexts: Functionality from one behavior is added to existing functionality from other behaviors to form conceptual levels of competence without a top-down structure, thus creating a free ow hierarchy <ref> [17] </ref>. Sensor Fusion vs. Command Arbitration Architectures can also be characterized by the ways in which they combine information and objectives. <p> However, the objectives of independent behavior development and the accumulative addition of new capabilities were not realized in practice. One of the requirements for a robot control system is that it be capable of satisfying multiple, possibly conicting goals <ref> [17] </ref>; as the name subsumption implies, this is achieved by having one behaviors commands completely override anothers [3]. While this is an effective scheme for choosing among incompatible commands, it does not provide an adequate means for dealing with multiple goals that can and should be satisfied simultaneously.
Reference: [18] <author> Simmons, R., Lin, L.J., Fedor, C. </author> <title> (1990) Autonomous Task Control for Mobile Robots, </title> <booktitle> in Proc. IEEE Symposium on Intelligent Control, </booktitle> <address> Philadelphia, PA, </address> <month> September </month> <year> 1990. </year>
Reference: [19] <author> T. Tyrell, </author> <title> The Use of Hierarchies for Action Selection, </title> <booktitle> in Adaptive Behavior, </booktitle> <volume> vol. 1, </volume> <pages> pp. 387-420, </pages> <year> 1993. </year>
Reference: [20] <author> Yen, J., Puger, N., </author> <year> (1992), </year> <title> A Fuzzy Logic Based Robot Navigation System, </title> <booktitle> AAAI Fall Symposium, </booktitle> <year> 1992. </year>
Reference-contexts: This is similar to defuzzification in Fuzzy Logic control systems [9] [7]; indeed an architecture has been implemented which recasts this type of DAMN arbitration into a Fuzzy Logic framework <ref> [20] </ref>. a) Behavior 1, weight = 0.8, desired curvature = 0.04 c) Weighted Sum, max vote curvature = 0.035 d) Smoothed & Interpolated, peak curvature=0.033 b) Behavior 2, weight = 0.2, desired curvature = 0.0 0 +0.125-0.125 0 +0.125-0.125 This arbitration scheme provides a means by which commands can be combined,
References-found: 20

