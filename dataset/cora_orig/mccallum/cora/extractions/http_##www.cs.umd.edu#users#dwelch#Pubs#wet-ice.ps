URL: http://www.cs.umd.edu/users/dwelch/Pubs/wet-ice.ps
Refering-URL: http://www.cs.umd.edu/users/dwelch/pubs.html
Root-URL: 
Email: dwelch@cs.umd.edu  purtilo@cs.umd.edu  
Title: Domain-Driven Reconfiguration in Collaborative Virtual Environments  
Author: Donald J. Welch Jr. James Purtilo 
Keyword: dynamic reconfiguration, virtual environments  
Note: This research was funded by Office of Naval Research contract number N000149410320 UMIACS TR 97-32  
Date: March 27, 1997  
Affiliation: Department of Computer Science University of Maryland  Institute for Advanced Computer Studies and Department of Computer Science University of Maryland  
Abstract: When virtual environments (VE) collaborate to create a shared virtual world, events occur that can have catastrophic effects on that virtual world. These events can be system events, such as the loss of a host or a network link to that host. They can also be events that happen only in the virtual world, for example, a virtual activity that migrates, bringing increased activity to a different VE. To maintain acceptable or realistic behavior can require the restructuring of the collaborative virtual environment (CVE) during execution. The restructuring must take place in accordance with a set of rules mandated by the domain and specific application. The reconfiguration must occur quickly, to maintain realism for the users. Automatic restructuring brings the added benefit of fewer support staff. We call the automatic restructuring of a distributed application with respect to these rules Domain-Driven Reconfiguration and we have developed a software engineering environment to support its inclusion in CVEs. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Hubert Bahr and Ronald F. DeMara. </author> <title> A Concur rent Model Approach to Scaleable Distributed Interactive Simulation. </title> <booktitle> In 15th Distributed Interactive Simulation Standards Workshop, </booktitle> <address> Orlando, FL, </address> <month> September </month> <year> 1996. </year>
Reference: [2] <author> DIS Steering Committee. </author> <title> The DIS Vision, A Map to the Future of Distributed Simulation, </title> <month> May </month> <year> 1994. </year> <note> Version 1. </note>
Reference-contexts: It must not only detect those events, but also gather all the preliminary information available. Ideally the Domain-Driven Reconfiguration component can detect system events by listening to the application message traffic. This is low-cost and unobtrusive. It is common [9][8] <ref> [2] </ref> to require each component VE to update its state periodically, and failure to do so indicates a problem. A more expensive but faster technique is to query the VEs regularly. Another technique is to use either mobile or stationary agents that report information or events. <p> As the application executes, to include reconfiguring itself, the decision-making logic must take the changes into account. CVEs will have protocols and in many cases provide infrastructure to support components that join and depart the CVE during execution. [9] [12] <ref> [2] </ref> Whichever dynamic reconfiguration technique is apropos for the CVE architecture, the Domain-Driven Reconfiguration component must be able to exploit it. Not only must the CVE builder have access to the full power of the dynamic reconfiguration support, but he must have a powerful way of employing that technique too. <p> Non-functional Requirements There are a number of different architectural approaches to interconnecting virtual environments. The two most popular are middleware, for example DoD's High Level Architecture HLA, [9] and the completely distributed approach typified by NPSNET [6] and DIS <ref> [2] </ref>. The framework must support both these architectural approaches, and should be as architecturally neutral as possible. The perception of human users is the performance driver. Because VEs usually operate with very low performance margins, the Domain-Driven Reconfiguration component must impose little overhead on the CVE.
Reference: [3] <author> Flaviu Cristian. </author> <title> Understanding Fault-Tolerant Distributed Systems. </title> <journal> Communications of the ACM, </journal> <volume> 34(2) </volume> <pages> 57-78, </pages> <month> February </month> <year> 1991. </year>
Reference-contexts: Since our work results from our investigation of fault-tolerance, we have examined these techniques and found them too specialized for Domain-Driven Re-2 configuration problems. <ref> [3] </ref> Because of the time constraints imposed by virtual reality, we designed our Domain-Driven Reconfiguration framework to tradeoff between consistent state and reaction time. Fault-tolerance acts on the loss of some required service, where Domain-Driven Reconfiguration handles losses as well as gains.
Reference: [4] <author> Christine R. Hofmeister and James M. Purtilo. </author> <title> Dynamic Reconfigureation of Distributed Programs. </title> <booktitle> In Proceedings of the 11th International Conference on Distrubuted Computing Systems, </booktitle> <pages> pages 560-571, </pages> <year> 1991. </year>
Reference: [5] <author> Jeff Kramer and Jeff Magee. </author> <title> The Evolving Philosophers Problem: Dynamic Change Management. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 16(11) </volume> <pages> 1293-1306, </pages> <month> November </month> <year> 1990. </year>
Reference: [6] <author> Micheal Macedonia, Michael Zyda, David Pratt, Paul Barham, and Steven Zeswitz. </author> <month> NPSNET: </month>
Reference-contexts: The reconfiguration must be finished, or leave the CVE in its original form. Non-functional Requirements There are a number of different architectural approaches to interconnecting virtual environments. The two most popular are middleware, for example DoD's High Level Architecture HLA, [9] and the completely distributed approach typified by NPSNET <ref> [6] </ref> and DIS [2]. The framework must support both these architectural approaches, and should be as architecturally neutral as possible. The perception of human users is the performance driver. Because VEs usually operate with very low performance margins, the Domain-Driven Reconfiguration component must impose little overhead on the CVE.
References-found: 6

