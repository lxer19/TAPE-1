URL: ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-97-4-1-kollmann.ps.Z
Refering-URL: ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-97-4-1.html
Root-URL: http://www.cs.man.ac.uk
Email: roeferg@informatik.uni-bremen.de  
Title: Navigation of a Kinematically Restricted Wheelchair by the Parti-Game Algorithm  
Author: J. Kollmann, A. Lankenau, A. B uhlmeier, B. Krieg-Br uckner, T. R ofer fjoergk, alone, andreas, bkb, 
Note: Due to the wheelchair's kinematic restrictions, the occuring problems differ from those of holo-nomic research robots. Several successful experiments were performed one of which is presented in full details.  
Date: 7/4/97  
Address: Postfach 330440, D-28334 Bremen  
Affiliation: Bremer Institut f ur sichere Systeme, Technologie Zentrum Informatik, FB 3 Informatik Universit at Bremen  
Abstract: This paper describes a technique of adaptive state-space partitioning for mobile robot navigation. Following this approach, the controller of a wheelchair robot adaptively discretises its state-space and learns which partitions are connected and which are not. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Heger, M. </author> <year> (1996). </year> <type> Risk-Averse Reinforcement Learning (PhD thesis). </type> <institution> ZKW-Bericht 5/96. Zentrum f ur Kognitionswissenschaften, Universit at Bremen. </institution> <address> ISSN 0947-0204. </address>
Reference-contexts: Results as described below provide the basis for future products that can ease the daily life of many handicapped or elder people. The parti-game algorithm [3] has been used to solve various tasks, including the navigation of a mobile robot and the control of a multi-joint robot arm <ref> [1] </ref>. However, as far as we know, these implementations have only been tested in simulations. 2 The Algorithm The parti-game algorithm was developed for path planning in multidimensional state-spaces.
Reference: [2] <author> Jungnickel, D. </author> <year> (1990). </year> <title> Netzwerke und Algorithmen. </title> <type> 2. Auflage. </type> <institution> BI-Wissenschaftsverlag Mannheim. </institution>
Reference-contexts: As a result, the determination of losing cells fails. This is why another path-finding algorithm has been used. It calculates a kind of a shortest path tree, known from graph theory as Dijkstra algorithm (cf. e.g. <ref> [2] </ref>). The edges in Figure 3b represent cell transitions with the corresponding costs, whereas the vertices stand for the cells themselves. A shortest path tree describes the shortest path from a particular vertex to any other one in the graph.
Reference: [3] <author> Moore, A. & Atkeson, C. </author> <year> (1995). </year> <title> The Parti-Game Algorithm for Variable Resolution Reinforcement Learning in Multidimensional State-Spaces. </title> <booktitle> Machine Learning 21, </booktitle> <pages> pp. 199-233. </pages> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston. </address>
Reference-contexts: Results as described below provide the basis for future products that can ease the daily life of many handicapped or elder people. The parti-game algorithm <ref> [3] </ref> has been used to solve various tasks, including the navigation of a mobile robot and the control of a multi-joint robot arm [1]. <p> The robot's current state vector must be provided to the controller to determine the corresponding cell. Greedy controller. Assuming that there is an obstacle-free trajectory from one state to another, there has to be a controller that is able to perform these "direct" movements <ref> [3] </ref>. Collision-detection. Because of the algorithm's ability to learn the topology of its environment from scratch, a reliable mechanism for collision detection has to be implemented. <p> The question asking which cells are to be divided, is one of the design decisions when implementing the parti-game algorithm. According to the principle of adaptive decomposition, only those cells should be divided which contribute to reaching the goal. The following approach has been introduced in <ref> [3] </ref>. The set of cells which have to be partitioned consists of all losing cells neighbouring non losing cells and these non losing cells themselves. As depicted in Figure 2b, there is one continuous line dividing the state-space into two parts. <p> A handicapped person in a wheelchair should not be forced to cope with such inappropriate behaviour. Consequently we implemented Moore's and Atkeson's (cf. <ref> [3] </ref>) worst-case idea. 2.3 Extensions to the Parti-Game Algorithm Our extensions to the original parti-game algorithm (cf. [3]) are described below. Path-finding A means has to be provided that enables the algorithm to decide which cell to head for in order to find an optimal path. <p> A handicapped person in a wheelchair should not be forced to cope with such inappropriate behaviour. Consequently we implemented Moore's and Atkeson's (cf. <ref> [3] </ref>) worst-case idea. 2.3 Extensions to the Parti-Game Algorithm Our extensions to the original parti-game algorithm (cf. [3]) are described below. Path-finding A means has to be provided that enables the algorithm to decide which cell to head for in order to find an optimal path. <p> In this context, the transition costs assessing a single cell transition and the distance from the goal, calculated as the sum of the costs of the involved transitions, are especially relevant. In <ref> [3] </ref> the authors propose to compute a path's length by counting the cell transitions between the start and the goal state (i.e. each cell transisition causes "costs" of one unit). In this approach paths involving larger cells are prone to be considered short, even though they are physically long. <p> However besides the intended effect, this extension to the original parti-game algorithm caused some trouble. When assigning different costs to cell transitions it is no longer possible to calculate a cell's distance from the goal by means of the dynamic programming technique that is used in <ref> [3] </ref>. As indicated above, that approach employs a cost function. It states that the distance of a cell to the goal is either zero (i.e. for the goal cell itself) or 1 + d, where d is the distance from the most favourable neighbouring cell to the goal. <p> After four steps, the target state is reached without colliding with an obstacle and without modifying the knowledge base. a) b) c) d) a) b) c) d) a) b) c) d) 5 Conclusion and Future Work Based on the work of Moore and Atkeson <ref> [3] </ref>, the parti-game algorithm has been adapted and extended to control a real wheelchair. Therefore different extensions had to be made to the algorithm including a new concept of costs and extended cell neighbourhood relationships.
Reference: [4] <author> Siems, U., Herwig, Ch. & R ofer, T. </author> <year> (1994). </year> <title> SimRobot | Ein Programm zur Simulation sensorbest uck-ter Agenten in einer dreidimensionalen Umwelt. </title> <type> ZKW-Bericht 1/94. </type> <institution> Zentrum f ur Kognitionswis-senschaften, Universit at Bremen. </institution> <address> ISSN 0947-0204. </address>
Reference-contexts: Proc. AISB workshop on "Spatial Reasoning in Mobile Robots and Animals", Manchester 1997. Technical Report Series, Department of Computer Science, Manchester University, ISSN 1361 - 6161. Report number UMCS-97-4-1. http://www.cs.man.ac.uk/csonly/cstechrep/titles97.html scene by SimRobot <ref> [4] </ref>. b) The corresponding state-space as learned by parti-game after three solved tasks. Other sections pose bigger problems and should result in a higher resolution of spatial knowledge. This paper demonstrates how such an adaptive representation can be learned by the robot.
References-found: 4

