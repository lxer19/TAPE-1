URL: http://www.cs.columbia.edu/~baz/ps/hot-os-vi.ps
Refering-URL: http://www.cs.columbia.edu/~baz/publications.html
Root-URL: http://www.cs.columbia.edu
Email: baz@cs.columbia.edu  duchamp@research.att.com  
Title: General Purpose Proxies: Solved and Unsolved Problems  
Author: Bruce Zenel Dan Duchamp 
Affiliation: Computer Science Department Columbia University  AT&T Labs Research  
Abstract: Proxies are becoming increasingly common. One use of a proxy is to address network heterogeneity, which can arise especially in mobile computing. In this setting, a proxy can process the traffic flowing to and from a network-limited mobile host, damping the variations in application performance as well as providing other benefits such as reduced cost and increased security. We describe the issues we faced in designing such a proxy system, how we solved some problems, and why others could not be solved. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Amir, H. Balakrishnan, S. Seshan, and Randy H. Katz. </author> <title> Improving TCP/IP Performance over Wireless Networks. </title> <booktitle> In Proc. First Annual International Conference on Mobile Computing and Networking, </booktitle> <pages> pages 211. </pages> <publisher> ACM, </publisher> <month> November </month> <year> 1995. </year>
Reference-contexts: * HTTP: Compresses HTTP text. * SMTP: Discards extension records from email head ers. * NFS: Compresses NFS READ replies destined for the mobile host. * ICMP: Replies to ICMP ECHO requests destined for the mobile host. * TCP: Optimizes TCP in a transparent way using algo rithms outlined in <ref> [1] </ref>. Currently, all the filters use the same control mechanism: filtering is turned on or off depending on mobile host state (e.g., available network bandwidth, mobile host battery life, etc.). A number of arguments persuaded us to focus on filtering protocols rather than rewriting applications.
Reference: [2] <author> B. Callaghan. </author> <title> WebNFS Client Specification. RFC 2054, </title> <institution> IETF Network Working Group, </institution> <month> October </month> <year> 1996. </year>
Reference-contexts: For example, in NFS the most common operation is LOOKUP and most data is transmitted by the READ operation. So the obvious actions of an NFS filter are to compress data in READs and to lookup several names at once (e.g., <ref> [12, 2, 3] </ref>). Second, filters tend to be used on/off even if they have several degrees of freedom. The reason is the vast differences in bandwidth between different link types. For example, Ethernet (10Mb/sec) is almost 350 times faster than a modem (28.8Kb/sec).
Reference: [3] <author> B. Callaghan. </author> <title> WebNFS Server Specification. RFC 2055, </title> <institution> IETF Network Working Group, </institution> <month> October </month> <year> 1996. </year>
Reference-contexts: For example, in NFS the most common operation is LOOKUP and most data is transmitted by the READ operation. So the obvious actions of an NFS filter are to compress data in READs and to lookup several names at once (e.g., <ref> [12, 2, 3] </ref>). Second, filters tend to be used on/off even if they have several degrees of freedom. The reason is the vast differences in bandwidth between different link types. For example, Ethernet (10Mb/sec) is almost 350 times faster than a modem (28.8Kb/sec).
Reference: [4] <author> B.R. Badrinath, A. Bakre, R. Marantz, and T. Imielin-ski. </author> <title> Handling Mobile Hosts: A Case for Indirect Interaction. </title> <booktitle> In Proc. Fourth Workshop on Workstation Operating Systems, </booktitle> <pages> pages 9197. </pages> <publisher> IEEE, </publisher> <month> October </month> <year> 1993. </year>
Reference-contexts: 1. Introduction There is much current interest in the idea of placing an intermediary between two communicating endpoints such as a client and server. Examples include firewalls [9], protocol specific proxies [7], programmable routers [21], and gateways that reduce traffic over low bandwidth or heterogeneous network links <ref> [4, 16] </ref>. As part of our research on mobile computing, we have spent two years building an instance of the latter type of intermediary, which we call a proxy.
Reference: [5] <author> B.R. Badrinath and P. Sudame. </author> <title> To Send or Not to Send: Implementing Deferred Transmissions in a Mobile Host. </title> <booktitle> In Proc. Sixteenth Intl. Conf. on Distributed Computing Systems, </booktitle> <pages> pages 327333. </pages> <publisher> IEEE, </publisher> <month> May </month> <year> 1996. </year>
Reference-contexts: Studies have shown that, in mobile and wireless environments, small changes in the use of UDP and TCP can result in large performance variations <ref> [5, 6, 8] </ref>. Therefore, it is desirable to use a protocol suited to the current network environment.
Reference: [6] <author> A. Bakre and B.R. Badrinath. </author> <title> Handoff and System Support for Indirect TCP/IP. </title> <booktitle> In Proc. Second Symposium on Mobile and Location-Independent Computing, </booktitle> <pages> pages 1124. </pages> <publisher> USENIX, </publisher> <month> April </month> <year> 1995. </year>
Reference-contexts: Studies have shown that, in mobile and wireless environments, small changes in the use of UDP and TCP can result in large performance variations <ref> [5, 6, 8] </ref>. Therefore, it is desirable to use a protocol suited to the current network environment. <p> After some false starts, we decided that the best concept is that of a mobile socket <ref> [6] </ref>. To insert a filter, the client endpoint of a connection is moved to the proxy server and bound to the filter. Then a new connection is made from the filter back to the mobile host and provided to the client.
Reference: [7] <author> C. Brooks, M.S. Mazer, S. Meeks, and J. Miller. </author> <title> Application-Specific Proxy Servers as HTTP Stream Transducers. In World Wide Web Journal: </title> <booktitle> 4th International World Wide Web Conference, </booktitle> <pages> pages 539548, </pages> <month> December </month> <year> 1995. </year>
Reference-contexts: 1. Introduction There is much current interest in the idea of placing an intermediary between two communicating endpoints such as a client and server. Examples include firewalls [9], protocol specific proxies <ref> [7] </ref>, programmable routers [21], and gateways that reduce traffic over low bandwidth or heterogeneous network links [4, 16]. As part of our research on mobile computing, we have spent two years building an instance of the latter type of intermediary, which we call a proxy.
Reference: [8] <author> R. Caceres and L. Iftode. </author> <title> Improving the Performance of Reliable Transport Protocols in Mobile Computing Environments. </title> <journal> IEEE Journ. Selected Areas of Communication, </journal> <volume> 13(5), </volume> <month> June </month> <year> 1994. </year>
Reference-contexts: Studies have shown that, in mobile and wireless environments, small changes in the use of UDP and TCP can result in large performance variations <ref> [5, 6, 8] </ref>. Therefore, it is desirable to use a protocol suited to the current network environment.
Reference: [9] <editor> D.B. Chapman and E.D. Zwicky. </editor> <title> Building Internet Firewalls. </title> <publisher> O'Reilly and Associates, </publisher> <year> 1995. </year>
Reference-contexts: 1. Introduction There is much current interest in the idea of placing an intermediary between two communicating endpoints such as a client and server. Examples include firewalls <ref> [9] </ref>, protocol specific proxies [7], programmable routers [21], and gateways that reduce traffic over low bandwidth or heterogeneous network links [4, 16]. As part of our research on mobile computing, we have spent two years building an instance of the latter type of intermediary, which we call a proxy.
Reference: [10] <author> G. Cornell and C. S. Horstmann. </author> <title> Core JAVA. </title> <publisher> SunSoft Press, </publisher> <year> 1996. </year>
Reference-contexts: A proxy facilitates this by implementing a single logical connection between endpoints as two physical connections, one between the proxy and each of the two endpoints. * More generally, through use of emerging mobile code models such as Java <ref> [10] </ref>, a proxy can enable a highly dynamic approach to trading off computation and communication. Applications can be split, and computation performed nearer to or farther from the server as conditions dictate. These advantages can be achieved without the use of proxies.
Reference: [11] <author> M. Crispin. </author> <title> Interactive Mail Access Protocol Version 2. </title> <type> RFC 1176, </type> <institution> IETF Network Working Group, </institution> <month> August </month> <year> 1990. </year>
Reference-contexts: The server should not have to be aware that the mobile host is temporarily attached to a slow or costly link. * Delay data instead of dropping or compressing it. Spooling Email for later pickup by a protocol such as POP [17] or IMAP <ref> [11] </ref> is one example. * Re-segment data. It is well known that fragmentation coupled with high packet loss rates can lead to disastrous performance and inefficiency. Using a smaller transfer size can eliminate or reduce fragmentation. * Act on behalf of a connected client.
Reference: [12] <author> D. Duchamp. </author> <title> Optimistic Lookup of Whole NFS Paths in a Single Operation. </title> <booktitle> In Proc. 1994 Summer USENIX, </booktitle> <pages> pages 161169. </pages> <publisher> USENIX, </publisher> <month> June </month> <year> 1994. </year>
Reference-contexts: For example, in NFS the most common operation is LOOKUP and most data is transmitted by the READ operation. So the obvious actions of an NFS filter are to compress data in READs and to lookup several names at once (e.g., <ref> [12, 2, 3] </ref>). Second, filters tend to be used on/off even if they have several degrees of freedom. The reason is the vast differences in bandwidth between different link types. For example, Ethernet (10Mb/sec) is almost 350 times faster than a modem (28.8Kb/sec).
Reference: [13] <author> A.D. Joseph et al. </author> <title> Rover: A Toolkit for Mobile Information Access. </title> <booktitle> In Proc. Fifteenth ACM Symposium on Operating Systems Principles, </booktitle> <pages> pages 156171. </pages> <publisher> ACM, </publisher> <month> December </month> <year> 1995. </year>
Reference-contexts: Adapt protocols or applications? There is some question about where adaptation should occur in the mobile/disconnected environment. Some have argued that the endpoints (i.e., servers and applications) should be reconsidered from scratch <ref> [18, 13] </ref>. For example, Rover is a system of mobile objects, with objects being dynamically relocated between endpoints as network conditions change. Protocol filters and Rover-like fluid applications are not exclusive choices.
Reference: [14] <author> J. Fulton and C.K. Kantarjiev. </author> <title> An Update on Low Bandwidth X (LBX). The X Resource, </title> <address> 1(5):251266, </address> <month> January </month> <year> 1993. </year>
Reference-contexts: Actions a proxy filter might take include: * Run an optimized protocol between itself and the mobile host. An example is the Low Bandwidth X (LBX) protocol <ref> [14] </ref>, a compressed version of X11. * Selectively drop structured data. Examples are frames in an MPEG data stream, and superfluous header in formation in Email. * Heuristically drop unstructured data. An example is dropping quoted text from Email bodies. * Compress data instead of dropping it.
Reference: [15] <author> J. Ioannidis, D. Duchamp, G. Q. Maguire, Jr., and S. Deering. </author> <title> Protocols for Supporting Mobile IP Hosts. </title> <type> Internet-Draft, </type> <institution> ftp://software.watson.ibm.com /pub/mobile-ip/columbia-draft-june-92, </institution> <month> June </month> <year> 1992. </year>
Reference-contexts: If the host were not mobile, routes could be installed to make traffic flow through the proxy. However, the path to/from a mobile host depends on its current location. We have augmented the Columbia Mobile IP <ref> [15] </ref> protocol in order to solve this problem. The modified protocol allows a mobile host to choose one certain host to be its proxy server and guarantees that all traffic traveling to and from the mobile host will pass through it. The proxy server can be located anywhere. 2.2.
Reference: [16] <author> M. Kojo, K. Raatikainen, and T. Alanko. </author> <title> Connecting Mobile Workstations to the Internet over a Digital Cellular Telephone Network. </title> <booktitle> In Proc. 1994 Mobidata Workshop. </booktitle> <institution> Rutgers University, </institution> <month> November </month> <year> 1994. </year>
Reference-contexts: 1. Introduction There is much current interest in the idea of placing an intermediary between two communicating endpoints such as a client and server. Examples include firewalls [9], protocol specific proxies [7], programmable routers [21], and gateways that reduce traffic over low bandwidth or heterogeneous network links <ref> [4, 16] </ref>. As part of our research on mobile computing, we have spent two years building an instance of the latter type of intermediary, which we call a proxy.
Reference: [17] <author> J. Myers and M. Rose. </author> <title> Post Office Protocol Version 3. </title> <type> RFC 1725, </type> <institution> IETF Network Working Group, </institution> <month> Novem-ber </month> <year> 1994. </year>
Reference-contexts: The server should not have to be aware that the mobile host is temporarily attached to a slow or costly link. * Delay data instead of dropping or compressing it. Spooling Email for later pickup by a protocol such as POP <ref> [17] </ref> or IMAP [11] is one example. * Re-segment data. It is well known that fragmentation coupled with high packet loss rates can lead to disastrous performance and inefficiency. Using a smaller transfer size can eliminate or reduce fragmentation. * Act on behalf of a connected client.
Reference: [18] <author> B. D. Noble, M. Price, and M. Satyanarayanan. </author> <title> A Programming Interface for Application-Aware Adaptation in Mobile Computing. </title> <booktitle> In Proc. Second Symposium on Mobile and Location-Independent Computing, </booktitle> <pages> pages 5766. </pages> <publisher> USENIX, </publisher> <month> April </month> <year> 1995. </year>
Reference-contexts: Adapt protocols or applications? There is some question about where adaptation should occur in the mobile/disconnected environment. Some have argued that the endpoints (i.e., servers and applications) should be reconsidered from scratch <ref> [18, 13] </ref>. For example, Rover is a system of mobile objects, with objects being dynamically relocated between endpoints as network conditions change. Protocol filters and Rover-like fluid applications are not exclusive choices.
Reference: [19] <author> J. Postel. </author> <title> Internet Control Message Protocol. </title> <type> RFC 792, </type> <institution> IETF Network Working Group, </institution> <month> September </month> <year> 1981. </year>
Reference-contexts: Using a smaller transfer size can eliminate or reduce fragmentation. * Act on behalf of a connected client. For example, to reduce frivolous traffic to the mobile host by replying to messages such as ICMP ECHO <ref> [19] </ref> requests and rstat traffic. * Use a different transport protocol, or different parame ter settings of the same protocol. Studies have shown that, in mobile and wireless environments, small changes in the use of UDP and TCP can result in large performance variations [5, 6, 8].
Reference: [20] <author> B. Schneier. </author> <title> Applied Cryptography, Protocols, Algorithms, and Source Code in C. </title> <publisher> John Wiley and Sons, Inc., </publisher> <year> 1996. </year>
Reference-contexts: Security The first security issue is to establish trust between the proxy and the application. Our approach is two-fold. First, the routing system described in Section 2.1 ensures that the proxy can be placed on a trusted host. Second, we use a two-party authentication protocol called SKID3 <ref> [20] </ref> to authenticate the proxy and the mobile host to each other. Once authenticated, control information passed between the proxy and mobile host is encrypted.
Reference: [21] <author> D.L. Tennenhouse and D.J. Wetherall. </author> <title> Towards an Active Network Architecture. </title> <journal> ACM Computer Communications Review, </journal> <volume> 26(2):518, </volume> <month> April </month> <year> 1996. </year>
Reference-contexts: 1. Introduction There is much current interest in the idea of placing an intermediary between two communicating endpoints such as a client and server. Examples include firewalls [9], protocol specific proxies [7], programmable routers <ref> [21] </ref>, and gateways that reduce traffic over low bandwidth or heterogeneous network links [4, 16]. As part of our research on mobile computing, we have spent two years building an instance of the latter type of intermediary, which we call a proxy. <p> The two proxies can use optimized protocols between themselves, potentially transparently. That is, data travels the path client-proxy1-proxy2-server, and neither the client nor server need be changed or even aware that proxying is taking place. The use of N proxies corresponds to the programmable router model <ref> [21] </ref>: any number of proxies may be placed anywhere along a path.
References-found: 21

