URL: http://www.cs.cornell.edu/skeshav/papers/pp_paper.ps
Refering-URL: http://www.cs.cornell.edu/skeshav/papers.html
Root-URL: 
Title: Packet-Pair Rate Control Buffer Requirements and Overload Performance  
Author: S. P. Morgan S. Keshav 
Note: October 31, 1994  
Address: 600 Mountain Avenue Murray Hill, New Jersey 07974-0636  
Affiliation: AT&T Bell Laboratories  
Abstract: Packet-pair is a feedback-based adaptive rate control scheme for high-speed wide-area data networks that use round-robin queueing at switches. Under packet-pair, each source continually estimates the effective speed of its bottleneck link by transmitting its data as pairs of back-to-back packets and measuring the separation of the returning pairs of acknowledgments. The source periodically adjusts its sending rate in an effort to avoid both overflow and underflow of its logical buffer at the bottleneck switch. The packet-pair scheme includes a timeout and retransmission strategy optimized to deal with losses. This paper reports a simulation study of the good throughput achieved when a link is shared by a number of on-off sources, and the nominal offered load may be several times the actual capacity of the link. Some of the sources follow the packet-pair protocol while others do not. The simulations show no evidence of retransmission instability for packet-pair sources, at least up to nominal offered loads of 500%. Asymptotic goodputs in excess of 80% of the link capacity can be achieved with an aggregate switch buffer equal to one-half of a full-speed round-trip window. A switch buffer management strategy of dropping the entire longest queue when space is required gives packet-pair sources a substantial advantage over non-packet-pair sources in the presence of overload. Users therefore have considerable motivation to employ the packet-pair discipline, since they damage only themselves if they do not. 
Abstract-found: 1
Intro-found: 1
Reference: [RAMA90] <author> K. K. Ramakrishnan and R. Jain, </author> <title> ``A Binary Feedback Scheme for Congestion Avoidance in Computer Networks,'' </title> <journal> ACM Trans. Comp. Sys., </journal> <volume> Vol. 8, No. </volume> <month> 2 (May </month> <year> 1990), </year> <pages> pp. 158-181. </pages>
Reference-contexts: The idea of dynamic rate control is that each data source adjusts its sending rate periodically in response to congestion signals from within the network. A switch may generate a single bit of information indicating congestion <ref> [RAMA90] </ref> or several bits [MISH92]. Recent discussions in the ATM Forum have focused on the concept that the network will generate special resource management (RM) cells to inform sources of their currently permitted peak cell rate. Most of the proposals for dynamic rate control have assumed FIFO queueing.
Reference: [MISH92] <author> P. P. Mishra and H. Kanakia, </author> <title> ``A Hop by Hop Rate-Based Congestion Control Scheme,'' </title> <journal> Computer Communication Review, </journal> <volume> Vol. 22, No. </volume> <month> 4 (October </month> <year> 1992), </year> <pages> pp. 112-123. </pages>
Reference-contexts: The idea of dynamic rate control is that each data source adjusts its sending rate periodically in response to congestion signals from within the network. A switch may generate a single bit of information indicating congestion [RAMA90] or several bits <ref> [MISH92] </ref>. Recent discussions in the ATM Forum have focused on the concept that the network will generate special resource management (RM) cells to inform sources of their currently permitted peak cell rate. Most of the proposals for dynamic rate control have assumed FIFO queueing.
Reference: [KESH91] <author> S. Keshav, </author> <title> ``A Control-Theoretic Approach to Flow Control,'' </title> <journal> Computer Communication Review, </journal> <volume> Vol. 21, No. </volume> <month> 4 (September </month> <year> 1991), </year> <pages> pp. 3-15. </pages>
Reference-contexts: Most of the proposals for dynamic rate control have assumed FIFO queueing. If switches are able to implement round-robin service, we believe that the packet-pair protocol <ref> [KESH91, KESH94] </ref> is a particularly attractive rate-control scheme. In this protocol, data is typically transmitted in the form of packet-pair ``probes''; a singleton packet that cannot be paired with another packet on the same virtual circuit within a reasonable time is automatically sent by a timer.
Reference: [KESH94] <author> S. Keshav, </author> <title> ``Packet-Pair Flow Control,'' </title> <journal> submitted to IEEE/ACM Transactions on Networking. </journal>
Reference-contexts: Most of the proposals for dynamic rate control have assumed FIFO queueing. If switches are able to implement round-robin service, we believe that the packet-pair protocol <ref> [KESH91, KESH94] </ref> is a particularly attractive rate-control scheme. In this protocol, data is typically transmitted in the form of packet-pair ``probes''; a singleton packet that cannot be paired with another packet on the same virtual circuit within a reasonable time is automatically sent by a timer. <p> Packet-pair relies entirely on measurements that can be made for each virtual circuit at the edge of the network. It has been analyzed and simulated elsewhere <ref> [KESH94] </ref> with respect to practical details such as start-up procedures, the optimal control of setpoints, and timeout and retransmission strategies. In the present paper we look particularly at the issues of stability under overload and the provision of firewalls. Stability. <p> The bit stream is divided into packets of equal length P and the packets are sent to a controller C over a link of speed S h and latency L h . (Latency = propagation delay.) For a packet-pair (pp) source, the controller imposes the packet-pair rate control discipline <ref> [KESH94] </ref> on the outgoing packets and puts them onto an access link having speed S a and latency L a . For a non-packet-pair (non-pp) source, the controller simply puts the packets onto the access link as they arrive. <p> The ``drop longest queue'' discipline turns out to be effective in dealing with uncontrolled users. The destination D returns an acknowledgment of length A for each packet that it receives. The controllers receive the acknowledgments and execute the same timeout and retransmission - 4 - strategy <ref> [KESH94] </ref> for both pp and non-pp sources, except that retransmitted packets from pp sources are subject to dynamic rate control, while retransmissions for non-pp sources are done as soon as the controller realizes that a retransmission will be necessary. <p> The absence of congestion collapse for pure non-packet-pair traffic may be due to the fact that the non-packet-pair sources in our simulations use the packet-pair timeout and retransmission protocol <ref> [KESH94] </ref>, which they can do because timeout and retransmission are inde pendent of the algorithms used for rate control. 5. <p> If the network does not provide round-robin queueing but does give explicit rate feedback through the use of RM cells, a packet-pair source would simply use this rate instead of making its own rate estimates, and it would still use the timeout-retransmission strategy described in <ref> [KESH94] </ref>.
Reference: [KESH88] <author> S. Keshav, </author> <title> ``REAL: A Network Simulator,'' </title> <institution> Comp. Sci. Dept. </institution> <type> Tech. Rep. 88/472, </type> <institution> University of California, Berkeley (December 1988). </institution>
Reference-contexts: Some sources use the packet-pair rate control protocol and others do not. Section 3 shows the results of extensive simulations using the REAL network simulator <ref> [KESH88] </ref>. Typical conclusions (Section 4) include the following. The simulations show no evidence of retransmission instability for packet-pair sources, at least up to nominal offered loads of 500%.
Reference: [LAW82] <author> Averill M. Law and W. David Kelton, </author> <title> Simulation Modeling and Analysis, </title> <publisher> (McGraw-Hill, </publisher> <address> New York, </address> <year> 1982), </year> <pages> pp. 145-151. </pages>
Reference-contexts: We did go through the usual routine of taking a sample of n values of goodput corresponding to n = 20 successive simulation intervals, after discarding the first interval as a starting transient. We computed a sample mean X _ _ and variance s 2 , according to <ref> [LAW82] </ref>, X = ( 1/ n) S X i . (8) 2 n (n - 1 ) i = 1 n _ _ The intervals (X _ _ _ _ + 1. 96s ) are plotted on Figs. 2-5. <p> This result is not surprising, inasmuch as drop-longest-queue involves dropping and retransmitting more packets than would have had to be retransmitted under drop-last-packet. It is perhaps surprising that the difference between __________________ 4 Law and Kelton say <ref> [LAW82] </ref>, ``It has been our experience that simulation output data are always correlated.'' - 7 - 0 0.4 0.8 Total Goodput Nominal Offered Load (a) 10 pp 0 non-pp Drop last packet 0 1 2 3 4 5 0.2 0.6 1 Total Goodput Nominal Offered Load (b) 0.5 9 pp 1
References-found: 6

