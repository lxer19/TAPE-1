URL: http://bugle.cs.uiuc.edu/People/derose/Local_reports/Num_Alg_curso.ps.gz
Refering-URL: http://bugle.cs.uiuc.edu/People/derose/other_publications.html
Root-URL: http://www.cs.uiuc.edu
Email: (derose@csrd.uiuc.edu)  
Title: Introduction to Parallel Numerical Algorithms 1 Introduction to Parallel Numerical Algorithms  
Author: Luiz A. De Rose Luiz A. De Rose 
Address: Urbana, Illinois 61801 U.S.A.  
Affiliation: Center for Supercomputing Research and Development University of Illinois at Urbana-Champaign  
Abstract-found: 0
Intro-found: 1
Reference: * <author> J. Ortega, </author> <title> Introduction to parallel and vector solution of linear systems (1988, </title> <editor> Plenum) * J. Dongarra et al., </editor> <title> Solving Linear Systems on Vector and Shared Memory Computers (1991, </title> <editor> SIAM) * R. Hockney and C. Jesshope, </editor> <booktitle> Parallel Computers 2 (1988, </booktitle> <editor> Adam Hilger) * K. Gallivan et al., </editor> <title> Parallel Algorithms for Matrix Computations (1990, SIAM) * H. Stone, High-Performance Computer Architectures (1990, Addison-Wesley) * K. Gallivan, Class notes for Parallel Numerical Algorithms, </title> <institution> Department of Computer Science, University of Illinois at Urbana-Champaign (1991). </institution> * <address> D. Padua, </address> <booktitle> Class notes for Parallel Programming, </booktitle> <institution> Department of Computer Science, University of Illinois at Urbana-Champaign (1991). </institution>

Reference: <author> Luiz A. </author> <title> De Rose Introduction to Parallel Numerical Algorithms [ 6 ] Traditional computers and their limitations The conventional approach to computer design involves a single instruction stream. Instructions are processed sequentially and result in the movement of data from memory to functional unit and back to memory. Specifically: * a scalar instruction is fetched and decoded, * addresses of the data operands to be used are calculated, * operands are fetched from memory, * the calculation is performed in the functional unit, and * the resultant operand is written back to memory. </title>















Reference: <author> Luiz A. </author> <title> De Rose Introduction to Parallel Numerical Algorithms [33] Performance parameters (r 1 ; n 1=2 ) Generic formula for the time t of a single arithmetic operation on a vector of length n, as a function of the vector length (Hockney). t = r 1 These characteristic parameters are called: * the maximum or asymptotic performance r 1 The maximum rate of computation in floating-point operations performed per seconds. * the half-performance length n 1=2 The vector length required to achieve half the maximum performance. </title>
Reference: <author> Luiz A. </author> <title> De Rose Introduction to Parallel Numerical Algorithms [34] Performance parameters (r 1 ; n 1=2 ) (cont.) n 1=2 is technology independent. Let T = b + cn be the time to perform v vector operations, then t = v c 0 b 1 therefore r 1 = c and n 1=2 = c It is clear that speeding up all the circuits of a com puter by the same factor f (by dividing b and c by f ), increases the asymptotic performance by this factor but does not alter n 1=2 </title> . 


Reference: <author> Luiz A. </author> <title> De Rose Introduction to Parallel Numerical Algorithms [37] More interpretations of the meaning of n 1=2 This formula leads to two other interpretations of the meaning of n 1=2 : * It measures the number of floating point operations which could have been done in the time of the vector start-up. * When the vector length equals n 1=2 the first and second terms of the equation of time are equal, and half the time is being lost in vector start-up, and only half the time is being used to perform useful arithmetic. </title>
Reference: <author> Luiz A. </author> <title> De Rose Introduction to Parallel Numerical Algorithms [38] Measurement of n 1=2 and r 1 n 1=2 and r 1 can be obtained experimentally by timing the performance of a computer on a test problem. @ @I 6 n 1=2 n Slope=r 1 1 </title> . . . . . . . . .. . . . . . . . . 


References-found: 6

