URL: ftp://ftp.cs.rochester.edu/pub/papers/theory/97.tr655.Binary_constraint_satisfaction_problems.ps.gz
Refering-URL: http://www.cs.rochester.edu/trs/theory-trs.html
Root-URL: 
Title: Counting, structure identification and maximum consistency for binary constraint satisfaction problems  
Author: Gabriel Istrate 
Note: supported this work.  
Date: 655  
Address: Rochester, New York 14627  
Affiliation: The University of Rochester Computer Science Department  The University of Rochester Computer Science Department  
Pubnum: Technical Report  
Abstract: Using a framework inspired by Schaefer's generalized satisfiability model [Sch78], Cooper, Cohen and Jeavons [CCJ94] studied the complexity of constraint satisfaction problems in the special case when the set of constraints is closed under permutation of labels and domain restriction, and precisely identified the tractable (and intractable) cases. Using the same model we characterize the complexity of three related problems: * counting the number of solutions. * structure identification (Dechter and Pearl [DP92]). * approximating the maximum number of satisfiable constraints. Keywords: constraint satisfaction, counting, structure identification, approximation. 
Abstract-found: 1
Intro-found: 1
Reference: [CCJ94] <author> M. Cooper, D. Cohen, and P. Jeavons. </author> <title> Characterizing tractable constraints. </title> <journal> Artificial Intelligence, </journal> <volume> 65 </volume> <pages> 347-361, </pages> <year> 1994. </year>
Reference-contexts: Inspired by Schaefer's earlier work on the complexity of generalized satisfiability [Sch78], Cooper, Cohen and Jeavons <ref> [CCJ94] </ref> defined a theoretical framework for this problem and identified the tractable (and intractable) cases, under the additional hypothesis that the set of constraints involved is closed under two operations, domain restriction and label permutation. <p> Finally, in many practical situations having a good approximation algorithm is important, as it might help [Kor95] in finding a maximally consistent assignment. In this paper we use the framework from <ref> [CCJ94] </ref> to prove similar results on the complexity of these three problems. As in the case of propositional satisfiability [KS96], structure identification is related (in a very precise manner) to satisfiability: it is tractable precisely when satisfiability is tractable, and it is coNP-complete when satisfiability is NP-complete. <p> We will also need three types of constraints defined in <ref> [CCJ94] </ref>: Definition 2.4 A constraint C between nodes i and j is * a complete constraint iff C = A fi B, for some sets A A m , B A m . * a permutation constraint iff there exist two sets A A m , B A m such that <p> The following characterization of tractable constraints was obtained in <ref> [CCJ94] </ref>: Proposition 2.5 Let S be any set of constraints closed under label restrictions and permutations. If S contains only 0/1/all constraints then CSP (S) 2 P, otherwise CSP (S) is NP-complete. Three special constraints were defined and used to prove Proposition 2.4. <p> Three special constraints were defined and used to prove Proposition 2.4. They will subsequently be denoted by C 1 ; C 2 ; C 3 and are displayed in Figure 1. The following concept, while not explicitly introduced in <ref> [CCJ94] </ref>, is useful in explaining the proof: Definition 2.6 A set of constraints S implements constraint R if there is a constraint network C (using constraints that are obtained from constraints in S via label restrictions and permutations) such that 8x 1 ; x 2 : (x 1 ; x 2 <p> Using this concept, the proof can be explained by the following sequence of steps: * A polynomial time algorithm is developed for the tractable case of CSP (S). * If S contains some constraint that is not 0/1/all then (lemma 6.1 in <ref> [CCJ94] </ref>) S can implement one of C 1 ; C 2 ; C 3 . * Any of C 1 ; C 2 ; C 3 implements constraint C 4 in Figure 2 (this is a special case of lemma 6.2 in [CCJ94]). * graph 3-coloring reduces to CSP (fC 4 <p> that is not 0/1/all then (lemma 6.1 in <ref> [CCJ94] </ref>) S can implement one of C 1 ; C 2 ; C 3 . * Any of C 1 ; C 2 ; C 3 implements constraint C 4 in Figure 2 (this is a special case of lemma 6.2 in [CCJ94]). * graph 3-coloring reduces to CSP (fC 4 g). 3 3 Results We will study the following problems; the second one was defined and studied, under the name structure identification in [DP92]: Counting CSP (S) (#CSP (S)): Instance: A constraint network C whose constraints belong to set S. <p> Since, by the result in <ref> [CCJ94] </ref>, CSP (S 2 ) is NP-complete, this proves 6 the coNP-hardness of IN V CSP (S). Membership in coNP is easy: it can be easily noticed that the unique candidate for an S-formula for M is the formula constructed as in the proof of Lemma 3.6.
Reference: [CH96] <author> N. Creignou and M. Hermann. </author> <title> Complexity of generalized counting problems. </title> <journal> Information and Computation, </journal> <volume> 125(1) </volume> <pages> 1-12, </pages> <year> 1996. </year>
Reference-contexts: We will also refer to a number of optimization problems and their complexity (see [CK95]). In addition we will use the following #P -complete problem from <ref> [CH96] </ref>: Positive 2Sat (#P OS 2SAT ): Instance: A 2CN F formula whose clauses contain exactly two positive variables. Question: How many satisfying assignments does have ? Definition 2.1 An NP-optimization problem (NPO) is a four-tuple = (I; sol; c; goal) such that: 1.
Reference: [CK95] <author> P. Crescenzi and V. Kann. </author> <title> A compendium of NP optimization problems. Survey, </title> <booktitle> Electronic Colloquium on Computational Complexity, </booktitle> <year> 1995. </year> <note> http://www.eccc.uni-trier.de/eccc/info/surveys.html. </note>
Reference-contexts: We will also refer to a number of optimization problems and their complexity (see <ref> [CK95] </ref>). In addition we will use the following #P -complete problem from [CH96]: Positive 2Sat (#P OS 2SAT ): Instance: A 2CN F formula whose clauses contain exactly two positive variables. <p> A problem is AP X-complete if it is in AP X and hard to approximate within some constant factor (note that the definition of AP X-completeness we use is not the standard definition <ref> [CK95] </ref>, but an alternate characterization from [KMSV94]). Definition 2.2 If m 2, a width-m constraint satisfaction problem, (CSP), also called m-constraint network, consists of a finite set of nodes, N , (identified by the integers 1; 2; : : :n).
Reference: [DI92] <author> R. Dechter and A. Itai. </author> <title> Finding all solutions if you can find one. </title> <booktitle> In Workshop on Tractable Reasoning, AAAI'92, </booktitle> <pages> pages 35-39, </pages> <year> 1992. </year>
Reference-contexts: Consistency is, however, not the only problem whose complexity is worth investigating. In some instances knowing the number of solutions is important (see Dechter and Itai <ref> [DI92] </ref> for a discution). Another problem, called structure identification, introduced in Dechter and Pearl [DP92], deals with deciding whether a set of models is the set of all models of some constraint network.
Reference: [DP92] <author> R. Dechter and J. Pearl. </author> <title> Structure identification in relational data. </title> <journal> Artificial Intelligence, </journal> <volume> 58 </volume> <pages> 237-270, </pages> <year> 1992. </year>
Reference-contexts: Consistency is, however, not the only problem whose complexity is worth investigating. In some instances knowing the number of solutions is important (see Dechter and Itai [DI92] for a discution). Another problem, called structure identification, introduced in Dechter and Pearl <ref> [DP92] </ref>, deals with deciding whether a set of models is the set of all models of some constraint network. Finally, in many practical situations having a good approximation algorithm is important, as it might help [Kor95] in finding a maximally consistent assignment. <p> C 3 implements constraint C 4 in Figure 2 (this is a special case of lemma 6.2 in [CCJ94]). * graph 3-coloring reduces to CSP (fC 4 g). 3 3 Results We will study the following problems; the second one was defined and studied, under the name structure identification in <ref> [DP92] </ref>: Counting CSP (S) (#CSP (S)): Instance: A constraint network C whose constraints belong to set S.
Reference: [KMSV94] <author> S. Khanna, R. Motwani, M. Sudan, and U. Vazirani. </author> <title> On syntactic versus computational views of approximability. </title> <booktitle> In Proceedings of the 34th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 819-830. </pages> <publisher> IEEE Computer Society, </publisher> <year> 1994. </year>
Reference-contexts: A problem is AP X-complete if it is in AP X and hard to approximate within some constant factor (note that the definition of AP X-completeness we use is not the standard definition [CK95], but an alternate characterization from <ref> [KMSV94] </ref>). Definition 2.2 If m 2, a width-m constraint satisfaction problem, (CSP), also called m-constraint network, consists of a finite set of nodes, N , (identified by the integers 1; 2; : : :n).
Reference: [Kor95] <author> R. Korf. </author> <title> From approximate to optimal solutions: A case study of number partitioning. </title> <booktitle> In Proceedings of the 14th IJCAI, </booktitle> <pages> pages 266-272, </pages> <year> 1995. </year>
Reference-contexts: Another problem, called structure identification, introduced in Dechter and Pearl [DP92], deals with deciding whether a set of models is the set of all models of some constraint network. Finally, in many practical situations having a good approximation algorithm is important, as it might help <ref> [Kor95] </ref> in finding a maximally consistent assignment. In this paper we use the framework from [CCJ94] to prove similar results on the complexity of these three problems.
Reference: [KS96] <author> D. Kavvadias and M. Sideri. </author> <title> The inverse satisfiability problem. </title> <booktitle> In Proceeding of the Second Annual International Computing and Combinatorics Conference, </booktitle> <pages> pages 250-259, </pages> <year> 1996. </year>
Reference-contexts: In this paper we use the framework from [CCJ94] to prove similar results on the complexity of these three problems. As in the case of propositional satisfiability <ref> [KS96] </ref>, structure identification is related (in a very precise manner) to satisfiability: it is tractable precisely when satisfiability is tractable, and it is coNP-complete when satisfiability is NP-complete.
Reference: [KSW96] <author> S. Khanna, M. Sudan, and D. Williamson. </author> <title> A complete classification of the approximability of maximization problems derived from boolean constraint satisfaction. Technical Report TR96-062, </title> <booktitle> Electronic Colloquium on Computational Complexity, </booktitle> <address> http://www.eccc.uni-trier.de/eccc/, 1996. </address>
Reference-contexts: But M AXCSP (fC 6 g) can be seen as the satisfiability problem M AXSAT (fC 6 g) which is seen to be AP X-complete using Theorem 2.2 in <ref> [KSW96] </ref>. Case 2: S contains some permutation constraint R that is not complete. Consider C 7 = f (0; 1); (1; 0)g. C 7 can easily be obtained from a permutation constraint using label restrictions and permutations. But M AXCSP (fC 7 g) is essentially M AXCU T .
Reference: [Mac77] <author> A. Mackworth. </author> <title> Consistency in network of relations. </title> <journal> Artificial Intelligence, </journal> <volume> 8 </volume> <pages> 99-118, </pages> <year> 1977. </year>
Reference-contexts: 1 Introduction Determining consistency (satisfiability) of a constraint satisfaction problem is NP-complete in general <ref> [Mac77] </ref>, even in the case when all constraints are binary.
Reference: [MR95] <author> R. Motwani and P. Raghavan. </author> <title> Randomized Algorithms. </title> <publisher> Cambridge University Press, </publisher> <year> 1995. </year>
Reference-contexts: It follows that a random assignment will satisfy at least c=m 2 clauses of . Finding such an assignment can be easily performed using the method of conditional probabilities, just as in the case of M AX2SAT (see <ref> [MR95] </ref>). It remains to prove AP X-completeness.
Reference: [Sch78] <author> T. J. Schaefer. </author> <title> The complexity of satisfiability problems. </title> <booktitle> In Proceedings of the 13th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 216-226, </pages> <year> 1978. </year> <month> 9 </month>
Reference-contexts: Inspired by Schaefer's earlier work on the complexity of generalized satisfiability <ref> [Sch78] </ref>, Cooper, Cohen and Jeavons [CCJ94] defined a theoretical framework for this problem and identified the tractable (and intractable) cases, under the additional hypothesis that the set of constraints involved is closed under two operations, domain restriction and label permutation.
References-found: 12

