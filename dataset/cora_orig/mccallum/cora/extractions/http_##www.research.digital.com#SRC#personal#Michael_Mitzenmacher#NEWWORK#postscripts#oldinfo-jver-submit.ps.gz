URL: http://www.research.digital.com/SRC/personal/Michael_Mitzenmacher/NEWWORK/postscripts/oldinfo-jver-submit.ps.gz
Refering-URL: http://www.research.digital.com/SRC/personal/Michael_Mitzenmacher/NEWWORK/papers.html
Root-URL: http://www.research.digital.com
Email: michaelm@pa.dec.com  
Title: How Useful is Old Information?  
Author: Michael Mitzenmacher 
Keyword: Key Words: load balancing, stale information, queueing theory, distributed systems, limiting systems.  
Address: 130 Lytton Ave. Palo Alto, CA 94301  
Affiliation: Digital Systems Research Center  
Abstract: We consider the problem of load balancing in dynamic distributed systems in cases where new incoming tasks can make use of old information. For example, consider a multi-processor system where incoming tasks with exponentially distributed service requirements arrive as a Poisson process, the tasks must choose a processor for service, and a task knows when making this choice the processor loads from T seconds ago. What is a good strategy for choosing a processor, in order for tasks to minimize their expected time in the system? Such models can also be used to describe settings where there is a transfer delay between the time a task enters a system and the time it reaches a processor for service. Our models are based on considering the behavior of limiting systems where the number of processors goes to infinity. The limiting systems can be shown to accurately describe the behavior of sufficiently large systems, and simulations demonstrate that they are reasonably accurate even for systems with a small number of processors. Our studies of specific models demonstrate the importance of using randomness to break symmetry in these systems and yield important rules of thumb for system design. The most significant result is that only small amounts of load information can be extremely useful in these settings; for example, having incoming tasks choose the least loaded of two randomly chosen processors is extremely effective over a large range of possible system parameters. In contrast, using global information can actually degrade performance unless used carefully; for example, unlike most settings where the load information is current, having tasks go to the apparently least loaded server can significantly hurt performance. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Alanyali and B. Hajek, </author> <title> "Analysis of Simple Algorithms for Dynamic Load Balancing", </title> <type> INFOCOM '95. </type>
Reference-contexts: We apply a fluid-limit approach, in which we develop a deterministic model corresponding to the limiting system as n ! 1. We often call this system the limiting system. This approach has successfully been applied previously to study load balancing problems in <ref> [1, 15, 16, 17, 19, 26] </ref> (see also [1] for more references, or [18, 25] for the use of this approach in different settings), and it can be seen as a generalization of the previous Markov chain analysis. <p> We often call this system the limiting system. This approach has successfully been applied previously to study load balancing problems in [1, 15, 16, 17, 19, 26] (see also <ref> [1] </ref> for more references, or [18, 25] for the use of this approach in different settings), and it can be seen as a generalization of the previous Markov chain analysis. Using this technique, we examine several new models of load balancing in the presence of old information.
Reference: [2] <author> B. Awerbuch, Y. Azar, A. Fiat, and T. Leighton, </author> <title> "Making Commitments in the Face of Uncertainty: How to Pick a Winner Almost Every Time", </title> <booktitle> Proceedings of the 28th ACM Symposium on the Theory of Computing, </booktitle> <year> 1996, </year> <pages> pp. 519-530. </pages>
Reference-contexts: A recent work by Awerbuch, Azar, Fiat, and Leighton <ref> [2] </ref> covers a similar theme, although their models are substantially different from ours. The idea of each task choosing from a small number of processors in order to balance the load has been studied before, both in theoretical and practical contexts.
Reference: [3] <author> Y. Azar, A. Broder, A. Karlin, and E. Upfal, </author> <title> "Balanced Allocations", </title> <booktitle> Proceedings of the 26th ACM Symposium on the Theory of Computing, </booktitle> <year> 1994, </year> <pages> pp. 593-602. </pages>
Reference-contexts: In the static setting, this improvement appears to have first been noted by Karp, Luby, and Meyer auf der 2 Heide [10]. A more complete analysis was given by Azar, Broder, Karlin, and Upfal <ref> [3] </ref>. In the dynamic setting, this work was extended to a queueing theoretic model in [15, 16]; similar results were independently reported in [26]. Other similar previous work includes that of Towsley and Mirchandaney [21] and that of Mirchandaney, Towsley, and Stankovic [12, 13]. <p> However, the strategy of choosing a small number of servers and queueing at the least loaded has been shown to perform significantly better in the case where the load information is up to date [5, 15, 16, 26]. It has also proved effective in other similar models <ref> [3, 10, 16] </ref>. Moreover, the strategy also appears to be practical and have a low 1 In this and other strategies, we assume that ties are broken randomly.
Reference: [4] <author> D. R. Cox, W. L. Smith, </author> <title> Queues, </title> <publisher> Wiley, </publisher> <year> 1961. </year>
Reference-contexts: We use this fact to find the i . Formulae for the distribution of the number of tasks at time T for an M/M/1 queue with arrival rate and i tasks initially have long been known (for example, see <ref> [4, pp. 60-64] </ref>); the probability of finishing with j tasks after T seconds, which we denote by m i;j , is m i;j (T ) = 2 (ji) e (1+)T [B ji (2T ) + 1 p + (1 ) k=1 2 (1+k) B i+j+k+1 (2T )]; where here B z
Reference: [5] <author> D. L. Eager, E. D. Lazowska, and J. Zahorjan, </author> <title> "Adaptive load sharing in homogeneous distributed systems", </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. 12, </volume> <year> 1986, </year> <pages> pp. 662-675. </pages>
Reference-contexts: Other similar previous work includes that of Towsley and Mirchandaney [21] and that of Mirchandaney, Towsley, and Stankovic [12, 13]. These authors examine how some simple load sharing policies are affected by communication delay, extending a similar study of load balancing policies by Eager, Lazowska, and Zahorjan <ref> [5, 6] </ref>. Their analyses are based on Markov chains associated with the load sharing policies they propose and simulations. Our work is most related to the queueing models of the above work, although it expands on this work in several directions. <p> However, the strategy of choosing a small number of servers and queueing at the least loaded has been shown to perform significantly better in the case where the load information is up to date <ref> [5, 15, 16, 26] </ref>. It has also proved effective in other similar models [3, 10, 16]. Moreover, the strategy also appears to be practical and have a low 1 In this and other strategies, we assume that ties are broken randomly. <p> Hence it makes an excellent point of comparison in this setting. Other simple schemes that we do not examine here but can easily be studied with this model include threshold based schemes <ref> [5, 17] </ref>, where a second choice is made only if the first appears unsatisfactory. We develop analytical results for the limiting case as n ! 1, for which the system can be accurately modeled by an limiting system. <p> an appropriate form as a Markov chain; indeed, we initially require exponential service times and Poisson arrivals to ensure this form.) Previous experience suggests that using the limiting system to estimate performance metrics such as the expected time in the system proves accurate, even for relatively small values of n <ref> [5, 15, 16, 17] </ref>. We shall verify this for the models we consider by comparing our analytical results with simulations. 3 Periodic Updates The previous section has described possible ways that the bulletin board can be used.
Reference: [6] <author> D. L. Eager, E. D. Lazowska, and J. Zahorjan, </author> <title> "A comparison of receiver-initiated and sender-initiated adaptive load sharing", </title> <journal> Performance Evaluation Review, </journal> <volume> Vol. 16, </volume> <year> 1986, </year> <pages> pp. 53-68. </pages>
Reference-contexts: Other similar previous work includes that of Towsley and Mirchandaney [21] and that of Mirchandaney, Towsley, and Stankovic [12, 13]. These authors examine how some simple load sharing policies are affected by communication delay, extending a similar study of load balancing policies by Eager, Lazowska, and Zahorjan <ref> [5, 6] </ref>. Their analyses are based on Markov chains associated with the load sharing policies they propose and simulations. Our work is most related to the queueing models of the above work, although it expands on this work in several directions.
Reference: [7] <author> S. N. Ethier and T. G. Kurtz, </author> <title> Markov Processes: Characterization and Convergence, 1986, </title> <publisher> John Wiley and Sons. </publisher>
Reference-contexts: The limiting system consists of a set of differential equations, which we shall describe below, that describe in some sense the expected behavior of the system. This corresponds to the exact behavior of the system as n ! 1. More information on this approach can be found in <ref> [7, 11, 15, 16, 17, 19, 25, 26] </ref>; we emphasize that here we will not detour into a theoretical justification for this limiting approach, and instead refer the reader to these sources for more information. (We note, however, that this approach works only because the systems for finite n have an <p> In fact, these equations describe the limiting behavior of the process as n ! 1, as can be proven with standard (albeit complex) methods <ref> [7, 11, 16, 17, 19, 25, 26] </ref>. Here we take these equations as the appropriate limiting system and focus on using the differential equations to study load balancing strategies. For integers k 0, at t = kT there is a state jump as the bulletin board is updated. <p> with the corresponding limiting system: how good is this approximation? The second question is whether the trajectory of the limiting system always converges to its fixed cycle, and if so, how quickly? For the first question, we note that the standard methods referred to previously (based on work by Kurtz, <ref> [7, 11, 19] </ref>) provide only very weak bounds on the convergence rate between limiting and finite systems. By focusing on a specific problem, proving tighter bounds may be possible (see, for example, the discussion in [25]).
Reference: [8] <author> A. Fox. </author> <title> Private communication. </title>
Reference-contexts: This strategy is essentially the one used to solve the problem of herding behavior in the TranSend system mentioned previously <ref> [8, 9] </ref>. Again, a limiting system given by a family of differential equations can be model this system.
Reference: [9] <author> A. Fox, S. D. Gribble, Y. Chawathe, E. A. Brewer, and Paul Gauthier, </author> <title> "Cluster-Based Scalable Network Services", </title> <booktitle> Proceedings of the Sixteenth ACM Symposium on Operating Systems Principles (SOSP-16), </booktitle> <month> October </month> <year> 1997. </year>
Reference-contexts: This strategy is essentially the one used to solve the problem of herding behavior in the TranSend system mentioned previously <ref> [8, 9] </ref>. Again, a limiting system given by a family of differential equations can be model this system.
Reference: [10] <author> R. M. Karp, M. Luby, and F. Meyer auf der Heide, </author> <title> "Efficient PRAM Simulation on a Distributed Memory Machine", </title> <booktitle> Proceedings of the 24th ACM Symposium on the Theory of Computing, </booktitle> <year> 1992, </year> <pages> pp. 318-326. </pages>
Reference-contexts: In many models, using just two choices per task can lead to an exponential improvement over one choice in the maximum load on a processor. In the static setting, this improvement appears to have first been noted by Karp, Luby, and Meyer auf der 2 Heide <ref> [10] </ref>. A more complete analysis was given by Azar, Broder, Karlin, and Upfal [3]. In the dynamic setting, this work was extended to a queueing theoretic model in [15, 16]; similar results were independently reported in [26]. <p> However, the strategy of choosing a small number of servers and queueing at the least loaded has been shown to perform significantly better in the case where the load information is up to date [5, 15, 16, 26]. It has also proved effective in other similar models <ref> [3, 10, 16] </ref>. Moreover, the strategy also appears to be practical and have a low 1 In this and other strategies, we assume that ties are broken randomly.
Reference: [11] <author> T. G. Kurtz, </author> <title> Approximation of Population Processes, </title> <publisher> SIAM, </publisher> <year> 1981. </year> <month> 26 </month>
Reference-contexts: The limiting system consists of a set of differential equations, which we shall describe below, that describe in some sense the expected behavior of the system. This corresponds to the exact behavior of the system as n ! 1. More information on this approach can be found in <ref> [7, 11, 15, 16, 17, 19, 25, 26] </ref>; we emphasize that here we will not detour into a theoretical justification for this limiting approach, and instead refer the reader to these sources for more information. (We note, however, that this approach works only because the systems for finite n have an <p> In fact, these equations describe the limiting behavior of the process as n ! 1, as can be proven with standard (albeit complex) methods <ref> [7, 11, 16, 17, 19, 25, 26] </ref>. Here we take these equations as the appropriate limiting system and focus on using the differential equations to study load balancing strategies. For integers k 0, at t = kT there is a state jump as the bulletin board is updated. <p> with the corresponding limiting system: how good is this approximation? The second question is whether the trajectory of the limiting system always converges to its fixed cycle, and if so, how quickly? For the first question, we note that the standard methods referred to previously (based on work by Kurtz, <ref> [7, 11, 19] </ref>) provide only very weak bounds on the convergence rate between limiting and finite systems. By focusing on a specific problem, proving tighter bounds may be possible (see, for example, the discussion in [25]).
Reference: [12] <author> R. Mirchandaney, D. Towsley, and J. A. Stankovic, </author> <title> "Analysis of the Effects of Delays on Load Sharing", </title> <journal> IEEE Transactions on Computers, </journal> <volume> Vol. 38, </volume> <year> 1989, </year> <pages> pp. 1513-1525. </pages>
Reference-contexts: In the dynamic setting, this work was extended to a queueing theoretic model in [15, 16]; similar results were independently reported in [26]. Other similar previous work includes that of Towsley and Mirchandaney [21] and that of Mirchandaney, Towsley, and Stankovic <ref> [12, 13] </ref>. These authors examine how some simple load sharing policies are affected by communication delay, extending a similar study of load balancing policies by Eager, Lazowska, and Zahorjan [5, 6]. Their analyses are based on Markov chains associated with the load sharing policies they propose and simulations. <p> Interestingly, another interpretation of the waiting room is as a communication delay, corresponding to the time it takes a task from a client to move to a server. This model is thus related to similar models in <ref> [12] </ref>. The state of the system will again be represented by a collection of numbers for a set of ordered pairs.
Reference: [13] <author> R. Mirchandaney, D. Towsley, and J. A. Stankovic, </author> <title> "Adaptive Load Sharing in Heterogeneous Distributed Systems", </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> Vol. 9, </volume> <year> 1990, </year> <pages> pp. 331-346. </pages>
Reference-contexts: In the dynamic setting, this work was extended to a queueing theoretic model in [15, 16]; similar results were independently reported in [26]. Other similar previous work includes that of Towsley and Mirchandaney [21] and that of Mirchandaney, Towsley, and Stankovic <ref> [12, 13] </ref>. These authors examine how some simple load sharing policies are affected by communication delay, extending a similar study of load balancing policies by Eager, Lazowska, and Zahorjan [5, 6]. Their analyses are based on Markov chains associated with the load sharing policies they propose and simulations.
Reference: [14] <author> M. Mitzenmacher, </author> <title> "Constant Time per Edge is Optimal on Rooted Tree Networks", </title> <booktitle> Proc. of the 8 th ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <year> 1996, </year> <pages> pp. 162-169. </pages>
Reference-contexts: In some cases there are even provable relationships between the two models (see, for example, <ref> [14, 20] </ref>). In this case, however, changing the distribution of the random variable X causes a dramatic change in behavior. 5 Individual updates In the models we have considered thus far, the bulletin board contains load information from the same time t for all the servers.
Reference: [15] <author> M. Mitzenmacher, </author> <title> "Load Balancing and Density Dependent Jump Markov Processes", </title> <booktitle> Proc. of the 37 th IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1996, </year> <pages> pp. 213-222. </pages>
Reference-contexts: In the static setting, this improvement appears to have first been noted by Karp, Luby, and Meyer auf der 2 Heide [10]. A more complete analysis was given by Azar, Broder, Karlin, and Upfal [3]. In the dynamic setting, this work was extended to a queueing theoretic model in <ref> [15, 16] </ref>; similar results were independently reported in [26]. Other similar previous work includes that of Towsley and Mirchandaney [21] and that of Mirchandaney, Towsley, and Stankovic [12, 13]. <p> We apply a fluid-limit approach, in which we develop a deterministic model corresponding to the limiting system as n ! 1. We often call this system the limiting system. This approach has successfully been applied previously to study load balancing problems in <ref> [1, 15, 16, 17, 19, 26] </ref> (see also [1] for more references, or [18, 25] for the use of this approach in different settings), and it can be seen as a generalization of the previous Markov chain analysis. <p> However, the strategy of choosing a small number of servers and queueing at the least loaded has been shown to perform significantly better in the case where the load information is up to date <ref> [5, 15, 16, 26] </ref>. It has also proved effective in other similar models [3, 10, 16]. Moreover, the strategy also appears to be practical and have a low 1 In this and other strategies, we assume that ties are broken randomly. <p> The limiting system consists of a set of differential equations, which we shall describe below, that describe in some sense the expected behavior of the system. This corresponds to the exact behavior of the system as n ! 1. More information on this approach can be found in <ref> [7, 11, 15, 16, 17, 19, 25, 26] </ref>; we emphasize that here we will not detour into a theoretical justification for this limiting approach, and instead refer the reader to these sources for more information. (We note, however, that this approach works only because the systems for finite n have an <p> an appropriate form as a Markov chain; indeed, we initially require exponential service times and Poisson arrivals to ensure this form.) Previous experience suggests that using the limiting system to estimate performance metrics such as the expected time in the system proves accurate, even for relatively small values of n <ref> [5, 15, 16, 17] </ref>. We shall verify this for the models we consider by comparing our analytical results with simulations. 3 Periodic Updates The previous section has described possible ways that the bulletin board can be used.
Reference: [16] <author> M. Mitzenmacher, </author> <title> "The Power of Two Choices in Randomized Load Balancing", </title> <type> Ph.D. thesis, </type> <institution> University of California, Berkeley, </institution> <month> September </month> <year> 1996. </year>
Reference-contexts: In the static setting, this improvement appears to have first been noted by Karp, Luby, and Meyer auf der 2 Heide [10]. A more complete analysis was given by Azar, Broder, Karlin, and Upfal [3]. In the dynamic setting, this work was extended to a queueing theoretic model in <ref> [15, 16] </ref>; similar results were independently reported in [26]. Other similar previous work includes that of Towsley and Mirchandaney [21] and that of Mirchandaney, Towsley, and Stankovic [12, 13]. <p> We apply a fluid-limit approach, in which we develop a deterministic model corresponding to the limiting system as n ! 1. We often call this system the limiting system. This approach has successfully been applied previously to study load balancing problems in <ref> [1, 15, 16, 17, 19, 26] </ref> (see also [1] for more references, or [18, 25] for the use of this approach in different settings), and it can be seen as a generalization of the previous Markov chain analysis. <p> However, the strategy of choosing a small number of servers and queueing at the least loaded has been shown to perform significantly better in the case where the load information is up to date <ref> [5, 15, 16, 26] </ref>. It has also proved effective in other similar models [3, 10, 16]. Moreover, the strategy also appears to be practical and have a low 1 In this and other strategies, we assume that ties are broken randomly. <p> However, the strategy of choosing a small number of servers and queueing at the least loaded has been shown to perform significantly better in the case where the load information is up to date [5, 15, 16, 26]. It has also proved effective in other similar models <ref> [3, 10, 16] </ref>. Moreover, the strategy also appears to be practical and have a low 1 In this and other strategies, we assume that ties are broken randomly. <p> The limiting system consists of a set of differential equations, which we shall describe below, that describe in some sense the expected behavior of the system. This corresponds to the exact behavior of the system as n ! 1. More information on this approach can be found in <ref> [7, 11, 15, 16, 17, 19, 25, 26] </ref>; we emphasize that here we will not detour into a theoretical justification for this limiting approach, and instead refer the reader to these sources for more information. (We note, however, that this approach works only because the systems for finite n have an <p> an appropriate form as a Markov chain; indeed, we initially require exponential service times and Poisson arrivals to ensure this form.) Previous experience suggests that using the limiting system to estimate performance metrics such as the expected time in the system proves accurate, even for relatively small values of n <ref> [5, 15, 16, 17] </ref>. We shall verify this for the models we consider by comparing our analytical results with simulations. 3 Periodic Updates The previous section has described possible ways that the bulletin board can be used. <p> In fact, these equations describe the limiting behavior of the process as n ! 1, as can be proven with standard (albeit complex) methods <ref> [7, 11, 16, 17, 19, 25, 26] </ref>. Here we take these equations as the appropriate limiting system and focus on using the differential equations to study load balancing strategies. For integers k 0, at t = kT there is a state jump as the bulletin board is updated. <p> The situation is generally easier when the trajectory converges to a fixed point, instead of a fixed cycle, as we shall see. (See also <ref> [16] </ref>.) Proving this convergence hence remains an interesting open theoretical question. 3.4 Simulations We present some simulation results, with two main purposes in mind: first, we wish to show that the limiting system approach does in fact yield a good approximation for the finite case; second, we wish to gain insight <p> In fact, this approach leads to predictions of system behavior that match simulations quite accurately, as we will detail in Section 4.3. Using techniques discussed in <ref> [16, 17] </ref>, one can prove that, for all the strategies we consider here, the fixed point is stable, which informally means that the trajectory remains close to its fixed point (once it gets close). We omit the straightforward proof here. <p> We omit the straightforward proof here. Our simulations suggest that in fact the limiting system converges exponentially to its fixed point; that is, that the distance between the fixed point and the trajectory decreases geometrically quickly over time. (See <ref> [16, 17] </ref>.) Although we can prove this for some special cases, proving exponential convergence for these systems in general remains an open question. 4.2 Continuous Update, Constant Time In theory, it is possible to extend the continuous update model to approximate the behavior of a system where the bulletin board shows
Reference: [17] <author> M. Mitzenmacher, </author> <title> "On the Analysis of Randomized Load Balancing Schemes", </title> <booktitle> Proc. of the 9th ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <year> 1997, </year> <pages> pp. 292-301. </pages>
Reference-contexts: We apply a fluid-limit approach, in which we develop a deterministic model corresponding to the limiting system as n ! 1. We often call this system the limiting system. This approach has successfully been applied previously to study load balancing problems in <ref> [1, 15, 16, 17, 19, 26] </ref> (see also [1] for more references, or [18, 25] for the use of this approach in different settings), and it can be seen as a generalization of the previous Markov chain analysis. <p> Hence it makes an excellent point of comparison in this setting. Other simple schemes that we do not examine here but can easily be studied with this model include threshold based schemes <ref> [5, 17] </ref>, where a second choice is made only if the first appears unsatisfactory. We develop analytical results for the limiting case as n ! 1, for which the system can be accurately modeled by an limiting system. <p> The limiting system consists of a set of differential equations, which we shall describe below, that describe in some sense the expected behavior of the system. This corresponds to the exact behavior of the system as n ! 1. More information on this approach can be found in <ref> [7, 11, 15, 16, 17, 19, 25, 26] </ref>; we emphasize that here we will not detour into a theoretical justification for this limiting approach, and instead refer the reader to these sources for more information. (We note, however, that this approach works only because the systems for finite n have an <p> an appropriate form as a Markov chain; indeed, we initially require exponential service times and Poisson arrivals to ensure this form.) Previous experience suggests that using the limiting system to estimate performance metrics such as the expected time in the system proves accurate, even for relatively small values of n <ref> [5, 15, 16, 17] </ref>. We shall verify this for the models we consider by comparing our analytical results with simulations. 3 Periodic Updates The previous section has described possible ways that the bulletin board can be used. <p> In fact, these equations describe the limiting behavior of the process as n ! 1, as can be proven with standard (albeit complex) methods <ref> [7, 11, 16, 17, 19, 25, 26] </ref>. Here we take these equations as the appropriate limiting system and focus on using the differential equations to study load balancing strategies. For integers k 0, at t = kT there is a state jump as the bulletin board is updated. <p> In fact, this approach leads to predictions of system behavior that match simulations quite accurately, as we will detail in Section 4.3. Using techniques discussed in <ref> [16, 17] </ref>, one can prove that, for all the strategies we consider here, the fixed point is stable, which informally means that the trajectory remains close to its fixed point (once it gets close). We omit the straightforward proof here. <p> We omit the straightforward proof here. Our simulations suggest that in fact the limiting system converges exponentially to its fixed point; that is, that the distance between the fixed point and the trajectory decreases geometrically quickly over time. (See <ref> [16, 17] </ref>.) Although we can prove this for some special cases, proving exponential convergence for these systems in general remains an open question. 4.2 Continuous Update, Constant Time In theory, it is possible to extend the continuous update model to approximate the behavior of a system where the bulletin board shows <p> Taking a reasonable sized r can lead to a good approximation for constant time. Other distributions can be handled similarly. (See, e.g., <ref> [17] </ref>.) In practice, this model is difficult to use, as the state of a server must now be 17 Board T seconds behind Update interval T A e T e 5 1 5 2 5 1 Choice 2 Choices 3 Choices Shortest l=0.9, m= 1.0 represented by an r + 1-dimensional
Reference: [18] <author> M. Mitzenmacher, </author> <title> "Constant Time per Edge is Optimal on Rooted Tree Networks", </title> <booktitle> Proc. of the 8 th ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <year> 1996, </year> <pages> pp. 162-169. </pages>
Reference-contexts: We often call this system the limiting system. This approach has successfully been applied previously to study load balancing problems in [1, 15, 16, 17, 19, 26] (see also [1] for more references, or <ref> [18, 25] </ref> for the use of this approach in different settings), and it can be seen as a generalization of the previous Markov chain analysis. Using this technique, we examine several new models of load balancing in the presence of old information.
Reference: [19] <author> A. Shwartz and A. Weiss, </author> <title> Large Deviations for Performance Analysis, 1995, </title> <publisher> Chapman & Hall. </publisher>
Reference-contexts: We apply a fluid-limit approach, in which we develop a deterministic model corresponding to the limiting system as n ! 1. We often call this system the limiting system. This approach has successfully been applied previously to study load balancing problems in <ref> [1, 15, 16, 17, 19, 26] </ref> (see also [1] for more references, or [18, 25] for the use of this approach in different settings), and it can be seen as a generalization of the previous Markov chain analysis. <p> The limiting system consists of a set of differential equations, which we shall describe below, that describe in some sense the expected behavior of the system. This corresponds to the exact behavior of the system as n ! 1. More information on this approach can be found in <ref> [7, 11, 15, 16, 17, 19, 25, 26] </ref>; we emphasize that here we will not detour into a theoretical justification for this limiting approach, and instead refer the reader to these sources for more information. (We note, however, that this approach works only because the systems for finite n have an <p> In fact, these equations describe the limiting behavior of the process as n ! 1, as can be proven with standard (albeit complex) methods <ref> [7, 11, 16, 17, 19, 25, 26] </ref>. Here we take these equations as the appropriate limiting system and focus on using the differential equations to study load balancing strategies. For integers k 0, at t = kT there is a state jump as the bulletin board is updated. <p> with the corresponding limiting system: how good is this approximation? The second question is whether the trajectory of the limiting system always converges to its fixed cycle, and if so, how quickly? For the first question, we note that the standard methods referred to previously (based on work by Kurtz, <ref> [7, 11, 19] </ref>) provide only very weak bounds on the convergence rate between limiting and finite systems. By focusing on a specific problem, proving tighter bounds may be possible (see, for example, the discussion in [25]).
Reference: [20] <author> G. D. Stamoulis and J. N. Tsitsiklis, </author> <title> "The Efficiency of Greedy Routing in Hy-percubes and Butterflies", </title> <journal> IEEE Transactions on Communications, </journal> <volume> Vol. 42(11), </volume> <year> 1994, </year> <pages> pp. 3051-3061. </pages>
Reference-contexts: In some cases there are even provable relationships between the two models (see, for example, <ref> [14, 20] </ref>). In this case, however, changing the distribution of the random variable X causes a dramatic change in behavior. 5 Individual updates In the models we have considered thus far, the bulletin board contains load information from the same time t for all the servers.
Reference: [21] <author> D. Towsley and R. Mirchandaney, </author> <title> "The Effect of Communication Delays on the Performance of Load Balancing Policies in Distributed Systems", </title> <booktitle> Proceedings of the Second International MCPR Workshop, </booktitle> <year> 1988, </year> <pages> pp. 213-226. </pages>
Reference-contexts: A more complete analysis was given by Azar, Broder, Karlin, and Upfal [3]. In the dynamic setting, this work was extended to a queueing theoretic model in [15, 16]; similar results were independently reported in [26]. Other similar previous work includes that of Towsley and Mirchandaney <ref> [21] </ref> and that of Mirchandaney, Towsley, and Stankovic [12, 13]. These authors examine how some simple load sharing policies are affected by communication delay, extending a similar study of load balancing policies by Eager, Lazowska, and Zahorjan [5, 6].
Reference: [22] <author> R. Weber, </author> <title> "On the Optimal Assignment of Customers to Parallel Servers", </title> <journal> J. of Appl. Prob., </journal> <volume> Vol 15, </volume> <year> 1978, </year> <pages> pp. 406-413. </pages>
Reference-contexts: If the incoming tasks know the current number of tasks already queued at each server, it is often best for the task to go to the server with the shortest queue <ref> [22] </ref>. <p> Going to the server with the smallest load appears natural in more centralized systems where global information is maintained. Indeed, going to the shortest queue has been shown to be optimal in a variety of situations in a series of papers, starting for example with <ref> [22, 24] </ref>. Hence it makes an excellent point of comparison in this setting. Other simple schemes that we do not examine here but can easily be studied with this model include threshold based schemes [5, 17], where a second choice is made only if the first appears unsatisfactory.
Reference: [23] <author> W. Whitt, </author> <title> "Deciding Which Queue to Join: Some Counterexamples", </title> <journal> Operations Research, </journal> <volume> Vol 34, </volume> <year> 1986, </year> <pages> pp. 55-62. 27 </pages>
Reference-contexts: Although choosing the shortest queue is known to be suboptimal in certain systems with current information <ref> [23] </ref>, its failure in the presence 10 Update every T seconds Update interval T A e g T e 5 1 5 2 5 1 Choice 2 Choices 3 Choices Shortest l=0.9, m= 1.0 Update every T seconds Update interval T A e g T e 2 6 1 0 1
Reference: [24] <author> W. Winston, </author> <title> "Optimality of the Shortest Line Discipline", </title> <journal> J. of Appl. Prob., </journal> <volume> Vol 14, </volume> <year> 1977, </year> <pages> pp. 181-189. </pages>
Reference-contexts: Going to the server with the smallest load appears natural in more centralized systems where global information is maintained. Indeed, going to the shortest queue has been shown to be optimal in a variety of situations in a series of papers, starting for example with <ref> [22, 24] </ref>. Hence it makes an excellent point of comparison in this setting. Other simple schemes that we do not examine here but can easily be studied with this model include threshold based schemes [5, 17], where a second choice is made only if the first appears unsatisfactory.
Reference: [25] <author> N. C. Wormald, </author> <title> "Differential Equations for Random Processes and Random Graphs", </title> <journal> Annals of Appl. Prob., </journal> <volume> Vol 5, </volume> <year> 1995, </year> <pages> pp. 1217-1235. </pages>
Reference-contexts: We often call this system the limiting system. This approach has successfully been applied previously to study load balancing problems in [1, 15, 16, 17, 19, 26] (see also [1] for more references, or <ref> [18, 25] </ref> for the use of this approach in different settings), and it can be seen as a generalization of the previous Markov chain analysis. Using this technique, we examine several new models of load balancing in the presence of old information. <p> The limiting system consists of a set of differential equations, which we shall describe below, that describe in some sense the expected behavior of the system. This corresponds to the exact behavior of the system as n ! 1. More information on this approach can be found in <ref> [7, 11, 15, 16, 17, 19, 25, 26] </ref>; we emphasize that here we will not detour into a theoretical justification for this limiting approach, and instead refer the reader to these sources for more information. (We note, however, that this approach works only because the systems for finite n have an <p> In fact, these equations describe the limiting behavior of the process as n ! 1, as can be proven with standard (albeit complex) methods <ref> [7, 11, 16, 17, 19, 25, 26] </ref>. Here we take these equations as the appropriate limiting system and focus on using the differential equations to study load balancing strategies. For integers k 0, at t = kT there is a state jump as the bulletin board is updated. <p> By focusing on a specific problem, proving tighter bounds may be possible (see, for example, the discussion in <ref> [25] </ref>). In practice, however, as we shall see in Section 3.4, the limiting system approach proves extremely accurate even for small systems, and hence it is a useful technique for gauging system behavior.
Reference: [26] <editor> N.D. Vvedenskaya, R.L. Dobrushin, and F.I. Karpelevich. </editor> <title> "Queueing System with Selection of the Shortest of Two Queues: an Asymptotic Approach", </title> <journal> Problems of Information Transmission, </journal> <volume> Vol 32, </volume> <year> 1996, </year> <pages> pp. 15-27. 28 </pages>
Reference-contexts: A more complete analysis was given by Azar, Broder, Karlin, and Upfal [3]. In the dynamic setting, this work was extended to a queueing theoretic model in [15, 16]; similar results were independently reported in <ref> [26] </ref>. Other similar previous work includes that of Towsley and Mirchandaney [21] and that of Mirchandaney, Towsley, and Stankovic [12, 13]. These authors examine how some simple load sharing policies are affected by communication delay, extending a similar study of load balancing policies by Eager, Lazowska, and Zahorjan [5, 6]. <p> We apply a fluid-limit approach, in which we develop a deterministic model corresponding to the limiting system as n ! 1. We often call this system the limiting system. This approach has successfully been applied previously to study load balancing problems in <ref> [1, 15, 16, 17, 19, 26] </ref> (see also [1] for more references, or [18, 25] for the use of this approach in different settings), and it can be seen as a generalization of the previous Markov chain analysis. <p> However, the strategy of choosing a small number of servers and queueing at the least loaded has been shown to perform significantly better in the case where the load information is up to date <ref> [5, 15, 16, 26] </ref>. It has also proved effective in other similar models [3, 10, 16]. Moreover, the strategy also appears to be practical and have a low 1 In this and other strategies, we assume that ties are broken randomly. <p> The limiting system consists of a set of differential equations, which we shall describe below, that describe in some sense the expected behavior of the system. This corresponds to the exact behavior of the system as n ! 1. More information on this approach can be found in <ref> [7, 11, 15, 16, 17, 19, 25, 26] </ref>; we emphasize that here we will not detour into a theoretical justification for this limiting approach, and instead refer the reader to these sources for more information. (We note, however, that this approach works only because the systems for finite n have an <p> In fact, these equations describe the limiting behavior of the process as n ! 1, as can be proven with standard (albeit complex) methods <ref> [7, 11, 16, 17, 19, 25, 26] </ref>. Here we take these equations as the appropriate limiting system and focus on using the differential equations to study load balancing strategies. For integers k 0, at t = kT there is a state jump as the bulletin board is updated.
References-found: 26

