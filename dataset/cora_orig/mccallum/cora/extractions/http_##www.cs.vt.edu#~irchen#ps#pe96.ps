URL: http://www.cs.vt.edu/~irchen/ps/pe96.ps
Refering-URL: http://www.cs.vt.edu/~irchen/
Root-URL: http://www.cs.vt.edu
Title: Performance Analysis of Admission Control Algorithms Based on Reward Optimization for Real-Time Multimedia Servers  
Author: Ing-Ray Chen and Tao-Hung Hsi 
Keyword: Multimedia servers, admission control, quality of service (QoS), capacity reser vation, client-server computing, performance analysis.  
Abstract: We propose and analyze a class of admission control algorithms based on reward optimization for multimedia servers designed to provide on-demand services to clients in an environment where workload characteristics of clients can change dynamically. These admission control algorithms are developed based on two strategic choices, namely, "deterministic" or "best-effort" regarding quality of service (QoS) control, and "priority-reservation" or "no priority-reservation" regarding reservation control. We first formulate the design of admission control algorithms for real-time multimedia servers as a reward optimization problem, with the "reward" referring to the value which the system receives after servicing prioritized clients based on the QoS requested and delivered. Then, we derive closed-form solutions for the reward rate expressions which the system can possibly obtain as a result of applying these admission control algorithms and validate the analytical results with a simulated VBR video server. A physical interpretation is given for the best combination of strategic choices under which the system can obtain the best reward as a function of workload and cost characteristics of the clients. We demonstrate that the reward value which the system receives under our proposed admission control algorithms at optimizing conditions can be much higher than those under traditional admission control algorithms which do not consider reward optimization. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Chang and A. Zakhor, </author> <title> "Admission control and data placement for VBR video servers," </title> <booktitle> Inter. Conf. Image Processing, </booktitle> <year> 1994, </year> <pages> pp. 278-282. </pages>
Reference-contexts: Each client is allocated with a buffer which alternates between being filled by disk reads and being emptied into the network (or displayed locally) in each round <ref> [1, 11, 12, 16] </ref>. <p> A new client to the system is rejected if this probability at the arrival instant is found to be greater than a specified threshold probability value, say, 10 4 . Chang and Zakhor <ref> [1] </ref> have proposed a class of statistical admission control strategies for buffer management for variable bit rate (VBR) video servers and showed that statistical admission control is more effective than deterministic admission control for interactive video server systems. This paper does not consider statistical admission control strategies. <p> Naturally, due to the VBR video data, the number of media blocks retrieved in each service round for a client may vary from one service round to another. To resolve this problem, the disk subsystem adopts a placement and retrieval scheme proposed by Chang and Zakhor <ref> [1] </ref>. Specifically, different numbers of constant-data-length media blocks can be retrieved in each service round in accordance with a particular client's playback requirement demanded for the next service round.
Reference: [2] <author> Y. N. </author> <title> Doganta and A.N. Tantawi, "Making a cost-effective video server," </title> <booktitle> IEEE Multimedia, Winter 1994, </booktitle> <pages> pp. 22-31. </pages>
Reference-contexts: While in general a storage unit may consist of tape, disk and expanded memory units (e.g., as in a video server <ref> [2] </ref>), we assume that a disk subsystem is being used as the storage medium since it is a cost-effective solution with a reasonable latencies and data throughput rates [5].
Reference: [3] <author> K. Fujikawa, et al., </author> <title> "Application level QoS modeling for a distributed multimedia system," </title> <booktitle> 1995 Pacific Workshop Dist. Multimedia Systems, </booktitle> <year> 1995, </year> <pages> pp. 44-51. </pages>
Reference: [4] <author> M.W. Garrett and A. Fernandez, </author> <title> Variable Bit Rate Video Bandwidth Trace Using MPEG Code, </title> <note> Bell-core; host=ftp.bellcore.com; directory=pub/vbr.video.trace; file = MPEG.data. </note>
Reference-contexts: We assume that such information is available to the server. For the simulation study, we obtain such information by using a VBR video bandwidth trace data set for a movie named "Star Wars" as disseminated by Bellcore <ref> [4] </ref>. The data set conforms to the MPEG-I standard; it consists of 174,138 integers (in plain ASCII text), representing the number of bits per video frame. Only the original film frames are coded (i.e., 24 per second). The movie length is approximately 2 hours.
Reference: [5] <author> K. Keeton, </author> <title> "Storage alternatives for video service," </title> <booktitle> 13th IEEE Symp. Mass Storage Systems, </booktitle> <month> June </month> <year> 1994, </year> <pages> pp. 100-105. </pages>
Reference-contexts: While in general a storage unit may consist of tape, disk and expanded memory units (e.g., as in a video server [2]), we assume that a disk subsystem is being used as the storage medium since it is a cost-effective solution with a reasonable latencies and data throughput rates <ref> [5] </ref>. Regardless of the admission control algorithm employed by the system, there is a maximum number of clients which can be admitted by the server.
Reference: [6] <author> L. Kleinrock, </author> <title> Queueing Systems, Vol. 1: Theory, </title> <publisher> John Wiley and Sons, </publisher> <year> 1975. </year>
Reference-contexts: We will use this policy as the base policy against which other more sophisticated reservation control policies can be compared. Essentially, under this policy, there is no priority distinction among clients and the system behaves like a classic M/M/n/n system <ref> [6] </ref> with the arrival rate = h + l and the departure rate i when there are i clients in the system.
Reference: [7] <author> G.G. Mei, M.H. Lin, L. Hu and H. Chang, </author> <title> "A real-time multimedia system for video applications," </title> <booktitle> 26th IEEE Conf. Signals, Systems and Computers, </booktitle> <year> 1992, </year> <pages> pp. 1031-1036. </pages>
Reference: [8] <author> C.W. Mercer, S. Savage, and H. Tokuda, </author> <title> "Processor capacity reserves: Operating system support for for multimedia applications," </title> <booktitle> 1st IEEE Inter. Conf. on Multimedia Computing and Systems, </booktitle> <address> Boston, </address> <year> 1994, </year> <pages> pp. 90-99. </pages>
Reference: [9] <author> E. Oomoto and K. Tanaka, "OVID: </author> <title> Design and implementation of a video-object database system," </title> <journal> IEEE Trans. Know. and Data Eng., </journal> <volume> Vol. 5, No. 4, </volume> <year> 1993, </year> <pages> pp. 629-643. </pages>
Reference: [10] <author> Y.J. Oyang, C.H. Wen, C.Y. Cheng, M.H. Lee and J.T. Li, </author> <title> "A multimedia storage system for on-demand playback," </title> <journal> IEEE Trans. Consumer Electronics, </journal> <volume> Vol. 41, No. 1, </volume> <month> Feb. </month> <year> 1995, </year> <pages> pp. 53-64. </pages>
Reference-contexts: 1 Introduction On-demand multimedia servers including KTV servers and video-on-demand servers are frequently designed to service a large number of clients simultaneously <ref> [10, 13] </ref>. Once a client is admitted, the service of media data normally must be provided continuously to the client based on the quality of service specified unless a re-negotiation takes place [17]. <p> 56 (100, 100, 1, 10, 1, 2, 1) (84,0,0) 627 261 same between algorithms BP and BN P which is not shown here.) The difference shown here is between the optimal pay-off rate under algorithm DP and that under algorithm DN P , with h varying in the range of <ref> [10, 150] </ref> in increment of 10; l varying in the range of [50, 150] in increment of 50; and n = 100. The trend exhibited in the graph when v h =v l &gt; q h =q l can be explained as follows.
Reference: [11] <author> P.V. Rangan and H.M. Vin, </author> <title> "Designing file systems for digital video and audio," </title> <booktitle> 13th ACM Symp. Operating Systems Principles, </booktitle> <year> 1991. </year>
Reference-contexts: Each client is allocated with a buffer which alternates between being filled by disk reads and being emptied into the network (or displayed locally) in each round <ref> [1, 11, 12, 16] </ref>. <p> Based on their algorithm, the maximum number of clients which can be admitted to the system without violating their QoS requirements can be determined at the run time. Rangan and Vin <ref> [11] </ref> performed a similar analysis for a file system for digital video and audio. The approach adopted by Rangan et al. in [11, 12] is strategic in nature, i.e., not allowing the QoS requirement of any admitted client to be violated at any time. <p> Rangan and Vin [11] performed a similar analysis for a file system for digital video and audio. The approach adopted by Rangan et al. in <ref> [11, 12] </ref> is strategic in nature, i.e., not allowing the QoS requirement of any admitted client to be violated at any time. Such an admission strategy results in "deterministic" services where the continuity requirements of all admitted clients are never violated for any brief moment during the entire service span. <p> Since the work by Rangan et al. <ref> [11, 12] </ref> in admission control is strategic in nature regarding QoS control, they again assume that when the system is overloaded, newly arriving clients are simply rejected. <p> Let n denote the maximum number of clients which can be admitted into the system based on a given QoS control strategy (i.e., deterministic or best-effort) as having been obtained analytically 9 1 2 n using the theoretical results derived in <ref> [11, 12, 16] </ref>. We model the capacity reservation mechanism of the system from an abstraction level as follows: We assume that each client, regardless of its priority type, imposes the same QoS requirement to the system and thus must reserve a fraction 1=n of the capacity. <p> Let n d and n b denote the maximum numbers which can be admitted by deterministic and best-effort QoS control policies, respectively. As stated earlier, these numbers can be obtained using the previous theoretical results published elsewhere (e.g., <ref> [11, 16] </ref>). In Section 4, we will show how these numbers can be obtained for a VBR video server. Algorithm DN P : Deterministic and No Priority-Reservation Our first admission control algorithm is formed by combining"deterministic" for QoS control with "no priority-reservation" (and thus free-threshold) for reservation control. <p> fi (v h fi h + l l ) 1 ) i n d j=1 j! h + l ) j 1 ) n d n d j=1 j! h + l ) j Note that algorithm DN P corresponds to a traditional "deterministic" admission control algorithm as described in <ref> [11, 16] </ref>. Algorithm BN P : Best-Effort and No Priority-Reservation We first note that with best-effort QoS control, v h v 0 h and v l v 0 l since the QoS delivered to the client may not always be perfect. <p> fi (v 0 h + v 0 l ) 1 ) i n b j=1 j! h + l ) j 1 ) n b n b j=1 j! h + l ) j Note that algorithm BN P corresponds to a traditional "predictive" admission control algorithm as described in <ref> [11, 16] </ref>. Algorithm DP : Deterministic and Priority-Reservation With priority-reservation control, we can use either fixed-threshold or dynamic-threshold for 16 reservation control.
Reference: [12] <author> P.V. Rangan, H.M. Vin and S. Ramanathan, </author> <title> "Designing an on-demand multimedia service," </title> <journal> IEEE Communications, </journal> <month> July </month> <year> 1992. </year>
Reference-contexts: Each client is allocated with a buffer which alternates between being filled by disk reads and being emptied into the network (or displayed locally) in each round <ref> [1, 11, 12, 16] </ref>. <p> Obviously, the maximum number of clients which can be admitted by the server depends on the underlying hardware structure and capacity of the server and the QoS requirements of the clients. Rangan, Vin and Ramanathan <ref> [12] </ref> have developed a round robin admission control algorithm to guarantee that the underlying hardware structure and capacity can satisfy the QoS requirements of all of the admitted clients. <p> Rangan and Vin [11] performed a similar analysis for a file system for digital video and audio. The approach adopted by Rangan et al. in <ref> [11, 12] </ref> is strategic in nature, i.e., not allowing the QoS requirement of any admitted client to be violated at any time. Such an admission strategy results in "deterministic" services where the continuity requirements of all admitted clients are never violated for any brief moment during the entire service span. <p> Since the work by Rangan et al. <ref> [11, 12] </ref> in admission control is strategic in nature regarding QoS control, they again assume that when the system is overloaded, newly arriving clients are simply rejected. <p> When we choose a strategy regarding QoS control, i.e., deterministic or best-effort, we can determine the maximum number of client requests that the system can service without overloading based on previous theoretical results <ref> [12, 16] </ref>. In addition, if we choose a "priority-reservation" strategy regarding reservation control, we can divide this maximum number of clients into several "priority threshold values," with a threshold value referring to the amount of server capacity reserved for the high-priority clients, for the low-priority clients, or both. <p> Let n denote the maximum number of clients which can be admitted into the system based on a given QoS control strategy (i.e., deterministic or best-effort) as having been obtained analytically 9 1 2 n using the theoretical results derived in <ref> [11, 12, 16] </ref>. We model the capacity reservation mechanism of the system from an abstraction level as follows: We assume that each client, regardless of its priority type, imposes the same QoS requirement to the system and thus must reserve a fraction 1=n of the capacity. <p> Also note that n may vary depending on the QoS control policy employed. The value of n under best-effort services is normally much larger than that under deterministic services <ref> [12, 16] </ref>.
Reference: [13] <author> S. Ramanathan and P.V. Rangan, </author> <title> "Architecture for personalized multimedia," </title> <booktitle> IEEE Multimedia, Spring 1994, </booktitle> <pages> pp. 37-46. </pages>
Reference-contexts: 1 Introduction On-demand multimedia servers including KTV servers and video-on-demand servers are frequently designed to service a large number of clients simultaneously <ref> [10, 13] </ref>. Once a client is admitted, the service of media data normally must be provided continuously to the client based on the quality of service specified unless a re-negotiation takes place [17].
Reference: [14] <author> A. Silberschatz and P.B Galvin, </author> <title> Operating System Concepts, Fourth Edition, </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: We assume that successive blocks of a video file are stored on the disk subsystem randomly. When servicing clients' requests in each service round, the disk subsystem adopts the SCAN algorithm <ref> [14] </ref> to minimize the seek time by reordering accesses based on the locations of media blocks to be retrieved in that service round in the disk subsystem.
Reference: [15] <author> A. Vina, J.L. Lerida, A. Molano and D. del Val, </author> <title> "Real-time multimedia systems," </title> <booktitle> 13th IEEE Symp. Mass Storage Systems, </booktitle> <year> 1994, </year> <pages> pp. 77-83. </pages>
Reference: [16] <author> H.M. Vin, A. Goyal and P. Goyal, </author> <title> "Algorithms for designing multimedia servers," </title> <journal> Computer Communications, </journal> <volume> Vol. 18, No. 3, </volume> <year> 1995, </year> <pages> pp. 192-203. </pages>
Reference-contexts: Each client is allocated with a buffer which alternates between being filled by disk reads and being emptied into the network (or displayed locally) in each round <ref> [1, 11, 12, 16] </ref>. <p> Since deterministic services may needlessly constrain the number of clients that can be admitted and make the server capacity severely under-utilized, Vin, Goyal and Goyal <ref> [16] </ref> proposed that the system may be able to admit a mix of intolerant and tolerant clients, with intolerant clients still requesting deterministic services while tolerant clients only requesting "predictive" services. <p> It was demonstrated that these benefits are obtained without sacrificing the QoS requirements specified by tolerant clients requesting predictive services. Although the work by Vin et al. <ref> [16] </ref> demonstrates the benefits of predictive services over deterministic services, it is not clear how a client would declare itself as a tolerant client and specify the threshold value ff in his/her QoS requirement, since in real-world applications it is unlikely that a client would be willing to lose any data <p> When we choose a strategy regarding QoS control, i.e., deterministic or best-effort, we can determine the maximum number of client requests that the system can service without overloading based on previous theoretical results <ref> [12, 16] </ref>. In addition, if we choose a "priority-reservation" strategy regarding reservation control, we can divide this maximum number of clients into several "priority threshold values," with a threshold value referring to the amount of server capacity reserved for the high-priority clients, for the low-priority clients, or both. <p> Let n denote the maximum number of clients which can be admitted into the system based on a given QoS control strategy (i.e., deterministic or best-effort) as having been obtained analytically 9 1 2 n using the theoretical results derived in <ref> [11, 12, 16] </ref>. We model the capacity reservation mechanism of the system from an abstraction level as follows: We assume that each client, regardless of its priority type, imposes the same QoS requirement to the system and thus must reserve a fraction 1=n of the capacity. <p> Also note that n may vary depending on the QoS control policy employed. The value of n under best-effort services is normally much larger than that under deterministic services <ref> [12, 16] </ref>. <p> Let n d and n b denote the maximum numbers which can be admitted by deterministic and best-effort QoS control policies, respectively. As stated earlier, these numbers can be obtained using the previous theoretical results published elsewhere (e.g., <ref> [11, 16] </ref>). In Section 4, we will show how these numbers can be obtained for a VBR video server. Algorithm DN P : Deterministic and No Priority-Reservation Our first admission control algorithm is formed by combining"deterministic" for QoS control with "no priority-reservation" (and thus free-threshold) for reservation control. <p> fi (v h fi h + l l ) 1 ) i n d j=1 j! h + l ) j 1 ) n d n d j=1 j! h + l ) j Note that algorithm DN P corresponds to a traditional "deterministic" admission control algorithm as described in <ref> [11, 16] </ref>. Algorithm BN P : Best-Effort and No Priority-Reservation We first note that with best-effort QoS control, v h v 0 h and v l v 0 l since the QoS delivered to the client may not always be perfect. <p> fi (v 0 h + v 0 l ) 1 ) i n b j=1 j! h + l ) j 1 ) n b n b j=1 j! h + l ) j Note that algorithm BN P corresponds to a traditional "predictive" admission control algorithm as described in <ref> [11, 16] </ref>. Algorithm DP : Deterministic and Priority-Reservation With priority-reservation control, we can use either fixed-threshold or dynamic-threshold for 16 reservation control. <p> The value of ff refers to the QoS perceived by the client and should be at least as high as 0.95 for a valid server design <ref> [16] </ref>. Consider a case reported in [16] that under a given hardware configuration, the maximum number of clients which can be served concurrently was found to be around n d = 16 if deterministic QoS control is adopted and n b = 84 if best-effort QoS control is adopted with a <p> The value of ff refers to the QoS perceived by the client and should be at least as high as 0.95 for a valid server design <ref> [16] </ref>. Consider a case reported in [16] that under a given hardware configuration, the maximum number of clients which can be served concurrently was found to be around n d = 16 if deterministic QoS control is adopted and n b = 84 if best-effort QoS control is adopted with a read-ahead buffer of 1 media block <p> We consider the following disk access-time parameters (in milliseconds): 1. Seek Time: We assume that the seek time of each hard disk in the disk array can be charac terized by <ref> [16] </ref>: t seek (track 1 ; track 2 ) = s a + s b fl jtrack 1 track 2 j (10) which means that to go from one track (track 1 ) to another (track 2 ), it incurs an overhead time of starting the read-write head and an overhead

References-found: 16

