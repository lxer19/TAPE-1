URL: http://simon.cs.cornell.edu/home/selman/papers-ftp/94.aaai.knowlcomp.ps
Refering-URL: http://simon.cs.cornell.edu/home/selman/papers-ftp/papers.html
Root-URL: 
Title: An Empirical Evaluation of Knowledge Compilation  
Author: Henry Kautz and Bart Selman 
Address: Murray Hill, NJ 07974  
Affiliation: AI Principles Research Department AT&T Bell Laboratories  
Abstract: fkautz, selmang@research.att.com This paper appears in Proceedings of AAAI-94, Seattle, WA, July 1994. This version includes an additional appendix, with a proof of the Mapworld Query Completeness theorem. Abstract Computational efficiency is a central concern in the design of knowledge representation systems. Compiling a knowledge-base into a more tractable form has been suggested as a way around the inherent intractability of many representation formalisms. Because not all theories can be put into an equivalent tractable form, Selman and Kautz (1991) have suggested compiling a theory into upper and lower bounds (one logically weaker, the other logical stronger) that approximate the original information. A central question in this approach is how well the bounds capture the original knowledge. This question is inherently empirical. We present a detailed empirical evaluation of the compilation of two kinds of theories: computation-ally challenging randomly generated theories, and propositional encodings of planning problems. Our results show that one can answer a very high percentage of queries even using unit clause bounds, which are much easier to compute than more general tractable approximations. Furthermore, we demonstrate that many of the queries that can be answered by the bounds are expensive to answer using only the original theory: in other words, knowledge compilation does not just "skim off" easy queries. In fact, we show substantial total computational savings in using the bounds together with the original theory to answer all queries (with no errors) from a large benchmark set, over using the original theory alone. This study suggests that knowledge compilation may indeed be a practical approach for dealing with intractability in knowledge representation systems. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Agre, P. E., and Chapman, D. </author> <year> 1987. </year> <title> Pengi: an implementation of a theory of activity. </title> <booktitle> In Proceedings of AAAI-87, </booktitle> <pages> 268. </pages>
Reference: <author> Aho, A. V.; Hopcroft, J. E.; and Ullman, J. D. </author> <year> 1974. </year> <title> The Design and Analysis of Computer Algorithms. </title> <address> Reading, MA: </address> <publisher> Addison-Wesley. </publisher> <address> 12 Allen, </address> <note> J. </note> <author> F., and Perrault, C. R. </author> <year> 1980. </year> <title> Analyzing intention in utterances. </title> <journal> Artificial Intelligence 143-177. </journal>
Reference-contexts: Nau 1991; Erol, Nau, & Subrahmanian 1992) and thus can be efficiently encoded as mapworld problems. 4 It is not surprising, of course, that an efficient algorithm exists for these queries, because the lengths of the shortest paths between all points in a graph can be determined in polynomial time <ref> (Aho, Hopcroft, & Ullman 1974) </ref>.
Reference: <author> Bratman, M. E.; Israel, D. J.; and Pollack, M. E. </author> <year> 1988. </year> <title> Plans and resource-bounded practical reasoning. </title> <journal> Computational Intelligence 4(4). </journal> <note> also SRI TR 425R. </note>
Reference: <author> Buro, M., and Buning, H. K. </author> <year> 1992. </year> <title> Report on a SAT competition. </title> <type> Technical Memorandum 110, </type> <institution> Mathematik/Informatik Universitat Paderborn. </institution>
Reference: <author> Bylander, T. </author> <year> 1991. </year> <title> A simple model of knowledge compilation. </title> <booktitle> IEEE Expert 6(2) </booktitle> <pages> 73-74. </pages>
Reference: <author> Chandrasekaran, B., and Mittal, S. </author> <year> 1983. </year> <title> Deep versus compiled knowledge approaches to diagnostic problem solving. </title> <journal> International Journal of Man-Machine Studies 19(5) </journal> <pages> 425-436. </pages>
Reference: <author> Chapman, D. </author> <year> 1987. </year> <title> Planning for conjunctive goals. </title> <booktitle> Artificial Intelligence 32 </booktitle> <pages> 333-378. </pages>
Reference: <author> Crawford, J., and Auton, L. </author> <year> 1993. </year> <title> Experimental results on the crossover point in satisfiability problems. </title> <booktitle> In Proceedings of AAAI-93, </booktitle> <pages> 21-27. </pages>
Reference-contexts: Tableau <ref> (Crawford & Auton 1993) </ref> is one of the fastest implementations of the algorithm. 7 As an aside, we observe that even when we take into account the time required to compile the theories, we obtain an overall time savings.
Reference: <author> Dalal, M., and Etherington, D. W. </author> <year> 1992. </year> <title> Tractable approximate deduction using limited vocabularies. </title> <booktitle> In Proceedings of CSCSI-92, </booktitle> <pages> 206-212. </pages>
Reference: <author> Davis, M., and Putnam, H. </author> <year> 1960. </year> <title> A computing procedure for quantification theory. </title> <journal> Journal of the Association for Computing Machinery 7 </journal> <pages> 201-215. </pages>
Reference-contexts: For our planning problems, we constructed a simple autonomous robot domain. To our surprise, planning problems that would intuitively appear quite hard were often answered almost instantaneously by the standard Davis-Putnam satisfiability procedure <ref> (Davis & Putnam 1960) </ref>. In fact, we were able to prove that a very general class of such problems can be solved in linear time by unit propagation (a standard component of satisfiable procedures), even though many AI planning systems would find them very difficult. <p> Mitchell et al. (1992) show that most randomly-generated theories are easy to reason with. Such theories tend to be either very over-constrained or very under-constrained; in either case, experiments show that answering queries is easy using the standard Davis-Putnam procedure <ref> (Davis & Putnam 1960) </ref>. 2 However, Mitchell et al. also described how to generate computationally challenging theories. The key is to generate formulas with a particular ratio of clauses to variables. For random 3CNF formulas, the ratio is about 4.3.
Reference: <author> Dietterich, T. G. </author> <year> 1991. </year> <title> Bridging the gap between specification and implementation. </title> <booktitle> IEEE Expert 6(2) </booktitle> <pages> 80-82. </pages>
Reference-contexts: Others view knowledge compilation as a kind of automatic programming, with the goal of converting a system specification to an implementation that exactly satifies it <ref> (Dietterich 1991) </ref>. Bylander (1991) provides a high-level logical characterization of some different kinds of knowledge compilation; interestingly, he argues that forms of knowledge compilation based on approximations (as is ours) are unlikely to provide significant computational improvement.
Reference: <author> Dowling, W. F., and Gallier, J. H. </author> <year> 1984. </year> <title> Linear time algorithms for testing the satisfiability of propositional Horn formula. </title> <journal> Journal of Logic Programming 3 </journal> <pages> 267-284. </pages>
Reference-contexts: Fig. 1 shows how the bounds can be used to improve the efficiency of a knowledge representation system. The system first tries to obtain an answer quickly by using the bounds, which can be done in linear time for Horn <ref> (Dowling & Gallier 1984) </ref> or unit bounds. In case no answer is obtained, the query is tested directly against the original theory. Note that KC Query thus remains a complete procedure.
Reference: <author> Dubois, O.; Andre, P.; Boufkhad, Y.; and Carlier, J. </author> <year> 1993. </year> <title> SAT versus UNSAT. In Preprints, Second DIMACS Algorithm Implementation Challenge. </title> <address> Piscataway, NJ: </address> <institution> Rutgers University. </institution>
Reference: <author> Erol, K.; Nau, D.; and Subrahmanian, V. </author> <year> 1992. </year> <title> On the complexity of domain-independent planning. </title> <booktitle> In Proceedings of AAAI-92, </booktitle> <pages> 381-386. </pages>
Reference: <author> Fikes, R. E., and Nilsson, N. J. </author> <year> 1971. </year> <title> STRIPS: a new approach to the application of theorem proving to problem solving. </title> <booktitle> Artificial Intelligence 2. </booktitle>
Reference-contexts: Thus, knowledge compilation is not needed in this case: unit propagation yields a linear-time decision procedure. This indicates that there are interesting computational advantages to using a satisfiability encoding for planning. For example, a standard STRIPS-style planner <ref> (Fikes & Nilsson 1971) </ref> would end up exploring (in general) an exponential number of paths before realizing that certain sets of nodes cannot be reached within a fixed time-bound.
Reference: <author> Garey, M. R., and Johnson, D. S. </author> <year> 1979. </year> <title> Computers and Intractability: a Guide to the Theory of NP-Completeness. </title> <address> San Francisco: </address> <publisher> W. H. Freeman and Company. </publisher>
Reference-contexts: This change makes planning much harder | in fact, answering CNF-queries becomes NP-complete, as can be shown by a reduction from path with forbidden pairs <ref> (Garey & Johnson 1979, page 203) </ref>.
Reference: <author> Green, C. </author> <year> 1969. </year> <title> Application of theorem proving to problem solving. </title> <booktitle> In Proceedings of IJCAI-69, </booktitle> <pages> 219-239. </pages> <note> 13 Gupta, </note> <author> N., and Nau, D. S. </author> <year> 1991. </year> <title> Complexity results for blocks-world planning. </title> <booktitle> In Proceedings of AAAI-91, </booktitle> <pages> 629. </pages>
Reference: <author> Kabanza, F. </author> <year> 1990. </year> <title> Synthesis of reactive plans for multi-path environments. </title> <booktitle> In Proceedings of AAAI-90. </booktitle>
Reference: <author> Kaelbling, L. </author> <year> 1988. </year> <title> Goals as parallel program specifications. </title> <booktitle> In Proceedings of AAAI-88, </booktitle> <pages> 60-65. </pages>
Reference: <author> Kautz, H., and Selman, B. </author> <year> 1992. </year> <title> Planning as satisfiability. </title> <booktitle> In Proceedings of ECAI-92, </booktitle> <pages> 359. </pages>
Reference: <author> Kautz, H., and Selman, B. </author> <year> 1994. </year> <title> An empirical evaluation of knowledge compilation by theory approximation (extended version). </title> <type> Technical report, </type> <institution> AT&T Bell Laboratories, </institution> <address> Murray Hill, NJ. </address>
Reference-contexts: Unit propagation is takes only linear time, and is part of all resolution-style theorem proving procedures, such as the Davis-Putnam procedure. In general unit propagation by itself is not a complete decision procedure. However, in the appendix we prove the following theorem <ref> (Kautz & Selman 1994) </ref>: Theorem: Mapworld Query Completeness: For any basic mapworld problem and clausal query ff, we have M [ D [ N [ P j= ff iff unit propagation proves that M [ D [ N [ P [ f:ffg is inconsistent.
Reference: <author> Kautz, H. </author> <year> 1986. </year> <title> Generalized plan recognition. </title> <booktitle> In Proceedings of AAAI-86. </booktitle>
Reference: <author> Keller, R. M. </author> <year> 1991. </year> <title> Applying knowledge compilation techniques to model-based reasoning. </title> <booktitle> IEEE Expert 6(2) </booktitle> <pages> 82-87. </pages>
Reference: <author> McCarthy, J., and Hayes, P. J. </author> <year> 1969. </year> <title> Some philosophical problems from the standpoint of artificial intelligence. </title> <editor> In MICHIE, D., ed., </editor> <booktitle> Machine Intelligence 4. </booktitle> <address> Chich-ester, England: </address> <publisher> Ellis Horwood. 463ff. </publisher>
Reference: <author> Mitchell, D.; Selman, B.; and Levesque, H. </author> <year> 1992. </year> <title> Hard and easy distribution of SAT problems. </title> <booktitle> In Proceedings of AAAI-92. </booktitle>
Reference: <author> Schmidt, C.; Sridharan, N.; and Goodson, J. </author> <year> 1978. </year> <title> The plan recognition problem: </title> <booktitle> an intersectiuon of psychology and artificial intelligence. Artificial Intelligence 11. </booktitle>
Reference: <author> Schoppers, M. J. </author> <year> 1987. </year> <title> Universal plans for reactive robots in unpredictable environments. </title> <booktitle> In Proceedings of AAAI-87, </booktitle> <volume> volume 2, </volume> <pages> 1023. </pages>
Reference: <author> Selman, B., and Kautz, H. </author> <year> 1991. </year> <title> Knowledge compilation using Horn approximations. </title> <booktitle> In Proceedings of AAAI-91, </booktitle> <pages> 904-909. </pages>
Reference: <author> Stefik, M. </author> <year> 1981. </year> <title> Planning with constraints (molgen: </title> <booktitle> Part 1 and 2). Artificial Intelligence 16 </booktitle> <pages> 111-170. </pages>
Reference: <author> Valiant, R., and V.V., V. </author> <year> 1986. </year> <title> NP is as easy as detecting unique solutions. </title> <booktitle> Theoretical Computer Science 47 </booktitle> <pages> 85-93. 14 </pages>
References-found: 30

