URL: http://www.aic.nrl.navy.mil:80/~aha/aaai95-fss/papers/francis.ps.Z
Refering-URL: http://www.aic.nrl.navy.mil:80/~aha/aaai95-fss/papers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: centaur, ashwin-@cc.gatech.edu  
Title: A Domain-Independent Algorithm for Multi-Plan Adaptation and Merging in Least-Commitment Planners  
Author: Anthony G. Francis, Jr. and Ashwin Ram 
Web: http://www.cc.gatech.edu/ai/ai.html  
Address: Atlanta, Georgia 30332-0280  
Affiliation: College of Computing Georgia Institute of Technology  
Abstract: This research was supported by the United States Air Force Laboratory Graduate Fellowship Program, by the Air Force Office of Scientific Research under Contract # F49620-94-1-0092, and by the Georgia Institute of Technology. Abstract Solving problems in many real-world domains requires integrating knowledge from several past experiences. This integration requires the dynamic retrieval of multiple experiences and the extraction of their relevant subparts. Our solution is the Multi-Plan Adaptor (MPA), a method for merging partial-order plans in the context of case-based least-commitment planning. MPA provides this ability by extracting an intermediate goal statement from a partial plan, clipping a stored plan to the intermediate goal statement, and then splicing the clipping into the original partial plan. MPA is implemented in the N ICOLE multistrategy reasoning system, where it is paired with M OORE , an asynchronous, resource-bounded memory module. M OORE initially retrieves its current best guess but continues search, spontaneously returning a better retrieval as soon as it is found. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Barret, A. & Weld, D. </author> <year> (1994). </year> <title> Partial Order Planning: Evaluating Possible Efficiency Gains. </title> <booktitle> Artificial Intelligence , 67(1), </booktitle> <pages> 71-112. </pages>
Reference: <author> Cox, M. </author> <year> (1993). </year> <title> Introspective Multistrategy Learning. </title> <type> Cognitive Science Technical Report #2 , Atlanta: </type> <institution> Georgia Institute of Technology, College of Computing. </institution>
Reference: <author> Fikes, Hart and Nilsson. </author> ( <year> 1972). </year> <title> STRIPS. </title> <journal> Artificial Intelligence , pp 189-208, </journal> <year> 1972. </year>
Reference-contexts: Note that while snippets are superficially similar to plan clippings, plan clippings are constructed dynamically during problem solving, whereas snippets need to be computed and stored in advance. Clippings are similar to macro operators <ref> (Fikes et al. 1972) </ref> in that they use past experience to combine several problem solving steps into a single structure that can be applied as a unit, allowing the system to make large jumps in the problem space and avoid unnecessary search.
Reference: <author> Francis, A. and Ram, A. </author> <year> (1995). </year> <title> A Comparative Utility Analysis of Case-Based Reasoning and Control-Rule Learning Systems. </title> <booktitle> In Proceedings, </booktitle> <publisher> ECML-95 . Springer-Verlag. </publisher>
Reference-contexts: This is the swamping utility problem the benefits of case retrieval can be outweighed by the costs of that retrieval, leading to an overall degradation in performance as a result of case learning <ref> (Francis & Ram 1995) </ref>. Developing heuristics for deciding when and when not to retrieve is a challenging open problem. To solve this problem, we have implemented a multistrategy reasoning system called N ICOLE which pairs MPA with an asynchronous, resource-bounded memory module called M OORE .
Reference: <author> Golden, K., Etzioni, O., & Weld, D. </author> <year> (1994). </year> <title> Omnipotence Without Omniscience: Sensor Management in Planning. </title> <booktitle> In Proceedings of AAAI-94 . AAAI Press/MIT Press. </booktitle>
Reference-contexts: The most relevant example of that work to this research is of course SPA, upon which MPA builds. Other similar plan reuse systems include PRIAR (Kambhampati & Hendler 1992) an SPA-like system based on NONLIN, and XII <ref> (Golden et al 1994) </ref>, an SPA-like system that plans with incomplete information. Hanks and Weld (1995) discuss these and other plan reuse systems from the perspective of the SPA framework.
Reference: <author> Hanks, S., & Weld, D. </author> <year> (1992). </year> <title> Systematic Adaptation for Case-Based Planning. </title> <booktitle> In Proceedings of the First International Conference on AI Planning Systems , 96-105. </booktitle> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Hanks, S., & Weld, D. </author> <year> (1995). </year> <title> A Domain-Independent Algorithm for Plan Adaptation. </title> <journal> Journal of Artificial Intelligence Research 2, p319-360 Hinrichs, T.R. </journal> <year> (1992). </year> <title> Problem Solving in Open Worlds: A Case Study in Design. </title> <publisher> Lawrence Erlbaum. </publisher>
Reference: <author> Ihrig, L. & Kambhampati, S. </author> <title> (1994 ). Derivation Replay for Partial-Order Planning. </title> <booktitle> In Proceedings of AAAI-94 . AAAI Press/MIT Press. </booktitle>
Reference-contexts: Hanks and Weld (1995) discuss these and other plan reuse systems from the perspective of the SPA framework. MPAs plan splicing mechanism is in many ways similar to DERSNLP <ref> (Ihrig & Kambhampati 1994) </ref>, a derivational analogy system built on top of SNLP that uses eager replay to guide a partial order planner.
Reference: <author> Kambhampati, S. & Chen, J. </author> <title> (1993 ). Relative Utility of EBG based Plan Reuse in Partial Ordering vs. Total Ordering Planning. </title> <booktitle> In Proceedings of AAAI-93 . AAAI Press/MIT Press. </booktitle>
Reference: <author> Kambhampati, S. & Hendler, J. </author> <title> (1992 ). A Validation Structure Based Theory of Plan Modification and Reuse. </title> <booktitle> Artificial Intelligence, </booktitle> <pages> 55 , 193-258. </pages>
Reference-contexts: Related Work There are wide bodies of work on both least-commitment planning and case-based reasoning. The most relevant example of that work to this research is of course SPA, upon which MPA builds. Other similar plan reuse systems include PRIAR <ref> (Kambhampati & Hendler 1992) </ref> an SPA-like system based on NONLIN, and XII (Golden et al 1994), an SPA-like system that plans with incomplete information. Hanks and Weld (1995) discuss these and other plan reuse systems from the perspective of the SPA framework.
Reference: <author> Kolodner, J.L. </author> <year> (1993). </year> <title> Case-based Reasoning. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference: <author> McAllester, D., & Rosenblitt, D. </author> <year> (1991). </year> <title> Systematic Nonlinear Planning. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence , 634-639. </booktitle> <publisher> AAAI Press/MIT Press. </publisher>
Reference-contexts: Given an arbitrary sequence of decisions to add steps and bindings, there is no guarantee that the partial plan produced can be successfully refined into a correct solution. An analytical failure occurs when an incomplete partial plan cannot be further refined by adding new steps, links or constraints. SNLP <ref> (McAllester & Rosenblitt 1991) </ref> is a complete, consistent and systematic partial order planner that uses a STRIPS-like notation to represent steps in its partial plans.
Reference: <author> Minton, S., Bresina, J., Drummond, M. </author> <year> (1994). </year> <title> Total Order and Partial-Order Planning: A Comparative Analysis. </title> <journal> Journal of Artificial Intelligence Research 2 , p319-360. </journal>
Reference: <author> Redmond, M. </author> <year> (1992). </year> <title> Learning by Observing and Understanding Expert Problem Solving. </title> <institution> Georgia Institute of Technology, College of Computing Technical Report no. GIT-CC-92/43 . Atlanta, Georgia. </institution>
Reference: <author> Redmond, M. </author> <year> (1990). </year> <title> Distributed Cases for Case-Based Reasoning: Facilitating Use of Multiple Cases. </title> <booktitle> In Proceedings of AAAI-90 . AAAI Press/MIT Press. </booktitle>
Reference-contexts: Some CBR planning systems combine multiple cases during reasoning. However, they either gather all partial plans at retrieval prior to adaptation (e.g., PRODIGY/ANALOGY, Veloso 1994), or break plans into snippets at storage time so they can be retrieved individually <ref> (e.g., CELIA, Redmond 1990, 1992) </ref>. Neither of these approaches is entirely satisfactory, for various reasons. It is not entirely clear that all of the knowledge needed to solve a problem can be assembled at the beginning of problem solving. <p> The JULIA system (Hinrichs 1992) also has the ability to combine pieces of several past cases, but this is largely a domain-dependent algorithm for merging declarative structures, rather than a domain independent planning system. The CELIA system <ref> (Redmond 1990, 1992) </ref> stores cases as separate snippets, case subcomponents organized around a single goal or set of conjunctive goals. Snippets provide CELIA with the ability to retrieve and identify relevant subparts of a past case based on the systems current goals.
Reference: <author> Smyth, B. & Keane, M. </author> <year> (1995). </year> <title> Remembering to Forget: A Competence-Preserving Deletion Policy for CBR Systems. </title> <booktitle> In Proceedings of IJCAI-95 </booktitle> . 
Reference-contexts: On one end of the spectrum, Systematic MPA preserves SPAs property of systematicity by splicing all retrieved cases before adaptation begins. On the other, Extreme MPA never performs (generative) adaptation and instead uses a set of pivotal cases <ref> (Smyth & Keane 1995) </ref> to guarantee completeness. Both Systematic and Extreme MPA make extreme commitments: either integrate all knowledge before adaptation begins, or never adapt and rely solely on past experience. An alternative approach is to allow plan splicing at any point during adaptation.
Reference: <author> Weld, D. </author> <year> (1994). </year> <title> An Introduction to Least-Commitment Planning. </title> <journal> AI Magazine, </journal> <volume> (15). </volume> <pages> 4 , pages 27-61. </pages>
Reference-contexts: Least Commitment Planning and Systematic Plan Adaptation 2.1. Least Commitment Planning: SNLP Least-commitment planning departs from traditional planning systems by delaying decisions about step orderings and bindings as much as possible to prevent backtracking <ref> (Weld 1994) </ref>. Depending on the domain and search strategy, least-commitment planning can lead to substantial improvements over traditional totally ordered plans (Barret & Weld 1994; but for an alternative view see Minton et al 1994, Veloso & Blythe 1994, Veloso & Stone 1995). <p> As outlined above, SNLP operates by repeated refinement in which open conditions are resolved and threats are eliminated. 2.2. Systematic Plan Adaptation: SPA The Systematic Plan Adaptor algorithm <ref> (Hanks & Weld 1994) </ref> is an algorithm for case-based planning that incorporates SNLP into its adaptation mechanism.
Reference: <author> Veloso, M. </author> <year> (1995). </year> <note> Planning and Learning by Analogical Reasoning . Springer-Verlag. </note>
Reference: <author> Veloso, M. & Blythe, J. </author> <year> (1994). </year> <title> Linkability: Examining Causal Link Commitments in Partial-Order Planning. </title> <booktitle> In Proceedings of the Second International Conference on AI Planning Systems , p170-175. </booktitle>
Reference-contexts: Combining multiple plans in case-based reasoning is not a new idea. The PRODIGY/ANALOGY system <ref> (Veloso 1994) </ref> can retrieve and merge the results of an arbitrary number of totally ordered plans during the derivational analogy process. <p> The PRODIGY/ANALOGY system (Veloso 1994) can retrieve and merge the results of an arbitrary number of totally ordered plans during the derivational analogy process. However, because PRODIGY/ANALOGY manipulates and stores totally ordered plans, it runs into significant issues on deciding how to interleave steps <ref> (Veloso 1994, p124-127) </ref>, an issue MPA avoids because of its least-commitment heritage. Furthermore, PRODIGY/ANALOGY deliberately limits its capability to retrieve and combine cases on the fly in an attempt to reduce retrieval costs.
Reference: <author> Veloso, M. & Stone, P. </author> <year> (1995). </year> <title> FLECS: Planning with a flexible commitment strategy. </title> <journal> Journal of Artificial Intelligence Research 3, p25-52. </journal>
References-found: 20

