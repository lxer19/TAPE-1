URL: http://iamwww.unibe.ch/~rvswww/Publikationen/Grabowski/SDL95-TemaConVariazioni/SDL95-TemaConVar.ps.gz
Refering-URL: http://iamwww.unibe.ch/~rvswww/Publikationen/index.html
Root-URL: 
Title: Message Sequence Chart: Composition Techniques versus  
Author: OO-Techniques 'Tema con Variazioni' Ekkart Rudolph a Peter Graubmann a and Jens Grabowski b 
Address: SE, Otto-Hahn-Ring 6, 81739 Munchen, Germany  Neubruckstr. 10, 3012 Berne, Switzerland  
Affiliation: a Siemens AG, ZFE T  b University of Berne, Institut for Informatics  
Abstract: Structural concepts for Message Sequence Charts (MSCs), i.e., composition, types, inheritance, and virtuality, are applied to a telecom example provided by the public switching systems division of the Siemens AG. The example contains several variations of the peripheral parts of an initial MSC which may be combined independently. The independent combinations of the peripheral variations are described by means of several new composition operators and by using object-oriented techniques (OO-techniques), i.e. types, inheritance, and virtuality. A comparison of both techniques shows that composition operators may provide a compact, easy, but abstract description, whereas some OO-techniques allow a graphical, intuitive, but not compact specification. Typical OO-techniques like inheritance and virtuality seem to be less fruitful for the description of at least the provided example. A combination of composition operators and OO-techniques, e.g., a variant type concept employing the alternative composition operator, may combine the advantages of both techniques. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> V. Encontre. MSC Extensions/Restrictions. </author> <title> Reference Manual GEODE Simulator, </title> <type> Chapter 6, </type> <institution> Verilog SA, Toulouse (France), </institution> <year> 1993. </year>
Reference: 2. <author> V. Encontre, E. Delboulbe, P. Gavaud, and A. Boussalem. </author> <title> Combining Services, Message Sequence Charts and SDL: Formalism, Method and Tools. </title> <editor> In O. Faergemand and R. Reed, editors, </editor> <title> SDL'91 Evolving Methods. </title> <publisher> North-Holland, </publisher> <year> 1991. </year>
Reference: 3. <author> J. Grabowski, P. Graubmann, and E. Rudolph. </author> <title> Towards an SDL-Design-Methodology Using Sequence Chart Segments. </title> <editor> In O. Faergemand and R. Reed, editors, </editor> <title> SDL'91 Evolving Methods. </title> <publisher> North-Holland, </publisher> <year> 1991. </year>
Reference: 4. <author> O Haugen. </author> <title> MSC Type Concept. </title> <booktitle> ITU-T SG 10 Experts Meeting in Darmstadt (Germany), </booktitle> <month> March </month> <year> 1993. </year>
Reference: 5. <author> O Haugen. </author> <title> MSC Type Concept. </title> <booktitle> ITU-T SG 10 Meeting in Geneva (Switzerland), </booktitle> <month> October </month> <year> 1993. </year>
Reference: 6. <author> O Haugen. </author> <title> MSC Structural Concepts (& Discussion). </title> <booktitle> ITU-T SG 10 Rapporteurs Meeting in Turin (Italy), </booktitle> <month> April </month> <year> 1994. </year>
Reference-contexts: Only few structural concepts, i.e., coregion and submsc, have been included in the MSC recommendation Z.120 [12]. For the present study period, the development of structural concepts for MSCs has become a central goal. In particular, composition and OO- techniques are in the focus of the on-going standardization activities <ref> [6] </ref>. This is not surprising. Without such concepts the usage of the MSC language would remain limited to the specification of few scenarios. To develop a telecom service with MSCs means to handle a large number of MSCs. <p> For practical reasons sometimes it may be useful to define a new MSC type directly inside another one. For this purpose <ref> [6] </ref> introduces inline definitions. Figure 2 (b) provides an example. MSC3 includes the inline definition of the MSC type MSCvirt. An MSC may use behaviour which is specified in another MSC. This can be done by inheritance.
Reference: 7. <author> S. Mauw, M. van Wijk, and T. Winter. </author> <title> Syntax and Semantics of Synchronous Inter-workings. </title> <editor> In O. Faegemand and A. Sarma, editors, </editor> <title> SDL'93 Using Objects, </title> <month> October </month> <year> 1993. </year>
Reference-contexts: The set consists of the communication actions concerning every pair of entities which the MSCs have in common. Figure 1 (b) presents an example. The synchronisation merge is an adaptation of interworking merge <ref> [7] </ref> to asynchronous communication. Synchronisation condition merge (k sync ) means that the synchronisation is performed with respect to connectors, i.e., distinguished synchronisation points. Connectors are represented graphically by annotated circles. Figure 1 (c) presents an example. <p> Sections 2.1 and 3.2): Within synchronisation merge, all instances are included in one MSC which are necessary to describe the message flow without splitting messages into send- and reception events. Thus, the context remains constantly visible. Synchronisation merge has been used within Phillips/PKI to solve the horizontal paging problem <ref> [7] </ref>. One step towards a more user friendly representation would be the development of a graphical representation of composition operations instead of abstract textual formulas. Several proposals have been made into this direction.
Reference: 8. <author> E. Rudolph. </author> <title> Case Study on MSC Structural Concepts. </title> <booktitle> ITU-T SG 10 Meeting in Geneva (Switzerland), </booktitle> <month> October </month> <year> 1994. </year>
Reference-contexts: Connectors are represented graphically by annotated circles. Figure 1 (c) presents an example. This solution is closest to the original example presented in October 94 at the ITU-T SG 10 meeting <ref> [8] </ref> and also closest to conditions. It also has the greatest flexibility with respect to composition but probably is less transparent than, e.g., k syn . 2.2.
Reference: 9. <author> E. Rudolph. </author> <title> Generalized Causal Ordering. </title> <booktitle> ITU-T SG 10 Rapporteurs Meeting in Turin (Italy), </booktitle> <month> April </month> <year> 1994. </year>
Reference: 10. <author> Swiss PTT. </author> <title> Weakening the time ordering along MSC instances (Proposal for discussion). Delayed Contribution D.94-X/3, CCITT SG X (WP X/3) Interims Meeting in Geneva, </title> <month> November </month> <year> 1992. </year>
Reference: 11. <author> Z.100 I (1993). </author> <title> SDL Methodology Guidelines. Appendix I to Z.100. </title> <type> ITU-T, </type> <month> July </month> <year> 1993. </year>
Reference: 12. <author> Z.120 (1993). </author> <title> Message Sequence Chart (MSC). </title> <type> ITU-T, </type> <month> September </month> <year> 1994. </year>
Reference-contexts: 1. Introduction The standardization work on MSC during the study period 1989 - 1992 has concentrated on the elaboration and standardization of basic concepts. Only few structural concepts, i.e., coregion and submsc, have been included in the MSC recommendation Z.120 <ref> [12] </ref>. For the present study period, the development of structural concepts for MSCs has become a central goal. In particular, composition and OO- techniques are in the focus of the on-going standardization activities [6]. This is not surprising.
References-found: 12

