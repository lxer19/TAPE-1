URL: file://theory.lcs.mit.edu/pub/people/segala/PODC94.ps.Z
Refering-URL: http://theory.lcs.mit.edu/~segala/PODC94.html
Root-URL: 
Title: Proving Time Bounds for Randomized Distributed Algorithms  
Author: Nancy Lynch Isaac Saias Roberto Segala 
Keyword: auxiliary statements of the form U t p  
Note: U 0 which means  
Address: Cambridge, MA 02139  
Affiliation: Laboratory for Computer Science Massachusetts Institute of Technology  
Abstract: that whenever the algorithm begins in a state in set U , with probability p, it will reach a state in set U 0 within time t. The power of the method is illustrated by its use in proving a constant upper bound on the expected time for some process to reach its critical region, in Lehmann and Rabin's Dining Philosophers algorithm. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Aspnes and M.P. Herlihy. </author> <title> Fast randomized consensus using shared memory. </title> <journal> Journal of Algorithms, </journal> <volume> 15(1) </volume> <pages> 441-460, </pages> <month> September </month> <year> 1990. </year>
Reference-contexts: 1 Introduction Randomization has proved to be a useful tool in the design of distributed algorithms, sometimes yielding efficient solutions to problems that are inherently complex, or even unsolvable, in the setting of deterministic algorithms <ref> [1, 2, 8, 9] </ref>. But this powerful tool has a price: even simple randomized algorithms can be extremely hard to verify and analyze. Because of this, many randomized distributed algorithms appear in the literature with only informal proofs of correctness, and only informal derivation of complexity bounds. <p> Definition 2.1 A probability space is a triplet (; F ; P ) where is a set, F is a collection of subsets of that is closed under complement and countable union and such that 2 F , and P is a function from F to <ref> [0; 1] </ref> such that P [] = 1 and for any collection fC i g i of at most countably many pairwise disjoint elements of F , P [[ i C i ] = P A probability space (; F ; P ) is discrete 2 if F = 2 and
Reference: [2] <author> M. Ben-Or. </author> <title> Another advantage of free choice: completely asynchronous agreement protocols. </title> <booktitle> In Proceedings of the 2 nd Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <address> Montreal, Quebec, Canada, </address> <month> August </month> <year> 1983. </year>
Reference-contexts: 1 Introduction Randomization has proved to be a useful tool in the design of distributed algorithms, sometimes yielding efficient solutions to problems that are inherently complex, or even unsolvable, in the setting of deterministic algorithms <ref> [1, 2, 8, 9] </ref>. But this powerful tool has a price: even simple randomized algorithms can be extremely hard to verify and analyze. Because of this, many randomized distributed algorithms appear in the literature with only informal proofs of correctness, and only informal derivation of complexity bounds.
Reference: [3] <author> K.M. Chandi and J. Misra". </author> <title> Parallel Program Design: </title>
Reference-contexts: Some examples of work that has already been done on the development of such methods are [4, 6, 11, 12]. The work of [11] presents a technique, based on progress functions defined on states, for establishing liveness properties for randomized algorithms; the work of [12] extends UNITY <ref> [3] </ref> to handle probability, and provides a completeness result for some properties that hold with probability 1; the work of [4, 6] presents model checking techniques. In this paper, we present such a new method: a way of proving upper bounds on time for randomized algorithms.
References-found: 3

