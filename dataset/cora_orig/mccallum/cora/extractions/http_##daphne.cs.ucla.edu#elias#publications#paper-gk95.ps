URL: http://daphne.cs.ucla.edu/elias/publications/paper-gk95.ps
Refering-URL: http://daphne.cs.ucla.edu/elias/publications/index.html
Root-URL: http://www.cs.ucla.edu
Email: eli@cs.ucla.edu  elias@cs.ucla.edu  
Title: Three-Processor Tasks Are Undecidable  
Author: Eli Gafni Elias Koutsoupias 
Keyword: Key words: asynchronous distributed computation, task-solvability, wait-free computation, contractibility problem  
Note: AMS subject classification: 68Q05, 68Q22  
Abstract: We show that no algorithm exists for deciding whether a finite task for three or more processors is wait-free solvable in the asynchronous read-write shared-memory model. This impossibility result implies that there is no constructive (recursive) characterization of wait-free solvable tasks. It also applies to other shared-memory models of distributed computing, such as the comparison-based model. 
Abstract-found: 1
Intro-found: 1
Reference: [BG93] <author> Elizabeth Borowsky and Eli Gafni. </author> <title> Generalized FLP impossibility result for t-resilient asynchronous computations. </title> <booktitle> In Proceedings of the 25th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 91-100, </pages> <year> 1993. </year>
Reference-contexts: Subsequently, Biran, Moran, and Zaks [BMZ88] gave a complete characterization of the tasks solvable by two processors and of tasks that can be solved when only one processor can fail. Recently, three teams <ref> [BG93, HS93, SZ93] </ref> independently extended this result by providing powerful necessary conditions for task solvability which enabled them to fl Computer Science Department, UCLA 1 show that the k-set agreement task is not solvable for more than k processors.
Reference: [BMZ88] <author> Ofer Biran, Shlomo Moran, and Shmuel Zaks. </author> <title> A combinatorial characterization of the distributed tasks which are solvable in the presence of one faulty processor. </title> <booktitle> In Proceedings of the 7th ACM 19 Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 263--275, </pages> <year> 1988. </year>
Reference-contexts: A breakthrough was the demonstation by Fisher, Lynch, and Paterson [FLP85] that certain simple tasks, such as consensus, are not solvable. Subsequently, Biran, Moran, and Zaks <ref> [BMZ88] </ref> gave a complete characterization of the tasks solvable by two processors and of tasks that can be solved when only one processor can fail. <p> For less than three processors, it is known that there exists a simple characterization for finite tasks of two processors that reduces the task-solvability problem to the connectivity properties of the output complex <ref> [BMZ88] </ref>. Our proof uses the Herlihy-Shavit condition for task solvability. Roughly speaking, this condition entails that a subcomplex of the output complex is "similar to" the input complex. <p> Biran, Moran, and Zaks <ref> [BMZ88] </ref> define a slightly different model of distributed computation in which the processors must produce a valid output only if all of them complete their protocol. For this model, the input-output relation contains only n-dimensional simplices. <p> For this model, the input-output relation contains only n-dimensional simplices. For each task T I fi O, it is easy to construct an equivalent task T 0 in the model of <ref> [BMZ88] </ref>: The input for task T 0 to processor i may be a special value p i that indicates that the processor does not "participate" in T . In that case, the processor must output a special value q i . <p> It is easy to see that T is solvable iff T 0 is solvable in the model of <ref> [BMZ88] </ref>. This immediately implies the following. Corollary 1 The task-solvability problem for the model of Biran, Moran, and Zaks [BMZ88] is undecidable for three or more processors. <p> It is easy to see that T is solvable iff T 0 is solvable in the model of <ref> [BMZ88] </ref>. This immediately implies the following. Corollary 1 The task-solvability problem for the model of Biran, Moran, and Zaks [BMZ88] is undecidable for three or more processors. Another interesting variant of the shared read-write memory model is the comparison-based model where processors cannot access directly their IDs but can only compare them [HS96].
Reference: [Bor95] <author> Elizabeth Borowsky. </author> <title> Capturing the power of resiliency and set consensus in distributed systems. </title> <type> PhD thesis, </type> <institution> University of Cali-fornia, </institution> <address> Los Angeles, </address> <year> 1995. </year>
Reference-contexts: Finally, Herlihy and Shavit [HS94] gave a simple condition that is necessary and sufficient for a given task to admit a wait-free protocol. This condition was extended by Borowsky and Gafni <ref> [Bor95] </ref> to the more general model of asynchronous distributed computation of resiliency and set-consensus. Here, we put the quest for complete characterization of solvable tasks to an abrupt end by showing that there is no recursive characterization of wait-free tasks. <p> Using the fact that C is chromatic, it is easy to verify that B with the 0 -induced coloring has one monochromatic simplex less than A with the -induced coloring. 16 An alternative proof of the Lemma 3 can be obtained by employing the Convergence Algorithm of Borowsky and Gafni <ref> [Bor95] </ref>. We outline this proof here. By the Herlihy-Shavit condition, it suffices to show that the task T is solvable. The protocol consists of two phases. In the first phase, processors "converge" on a simplex of I 0 .
Reference: [Deh10] <author> Max Dehn. </author> <title> Uber die topologie des dreidimensional raumes. </title> <journal> Math. Ann., </journal> <volume> 69 </volume> <pages> 137-168, </pages> <year> 1910. </year> <title> English translation by John Stillwell in: Max Dehn, Papers on Group Theory and Topology, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1987. </year>
Reference-contexts: The contractibility problem asks whether a given loop of a simplicial complex is contractible, that is, whether it can be continuously transformed into a point. The history of the contractibility problem goes back to Poincare and Dehn at the beginning of the twentieth century (see [Sti93]). Dehn <ref> [Deh10] </ref> noticed that the contractibility problem is equivalent to the word problem of groups | given a word of a group as a product of its generators, decide whether it is equal to the identity. <p> In fact, something stronger holds: each group G is the fundamental group of a 4-dimensional simpli-cial manifold [Mas67, pages 143-144]. This means that the contractibility problem is undecidable for 4-dimensional manifolds. In contrast, for 2-dimensional manifolds (e.g., sphere, torus, projective plane), it is decidable <ref> [Deh10] </ref>. Some recent work on this special case has led to a linear-time algorithm for almost all 2-dimensional manifolds [DG95].
Reference: [DG95] <author> Tamal K. Dey and Sumanta Guha. </author> <title> Optimal algorithms for curves on surfaces. </title> <booktitle> In Proceedings of the 36th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 266-274, </pages> <address> Milwaukee, Wisconsin, </address> <month> 23-25 October </month> <year> 1995. </year>
Reference-contexts: Dehn gave an algorithm (Dehn's algorithm) for the contractibility problem when the complex is a surface; for some recent interesting results for this special case see <ref> [DG95] </ref>. Attempts to extend Dehn's algorithm to higher dimensional manifolds made no substantial progress, however, for the very good reason that, as Novikov [Nov55] showed in 1995, the word problem is undecidable. <p> This means that the contractibility problem is undecidable for 4-dimensional manifolds. In contrast, for 2-dimensional manifolds (e.g., sphere, torus, projective plane), it is decidable [Deh10]. Some recent work on this special case has led to a linear-time algorithm for almost all 2-dimensional manifolds <ref> [DG95] </ref>. The contractibility problem for 3-dimensional manifolds is, to our knowledge, still unresolved; however, it is known that not every group with finite representation can be the fundamental group of a 3-dimensional manifold. Notice also that Proposition 2 refers to 2-dimensional complexes.
Reference: [FLP85] <author> Michael Fischer, Nancy Lynch, and Michael Paterson. </author> <title> Impossibility of distributed consensus with one faulty process. </title> <journal> Journal of the ACM, </journal> <volume> 32(2) </volume> <pages> 374-382, </pages> <year> 1985. </year>
Reference-contexts: Characterizing the class of distributed tasks that can be solved, no matter how "inefficiently", is an important step towards a complexity theory for distributed computation. A breakthrough was the demonstation by Fisher, Lynch, and Paterson <ref> [FLP85] </ref> that certain simple tasks, such as consensus, are not solvable. Subsequently, Biran, Moran, and Zaks [BMZ88] gave a complete characterization of the tasks solvable by two processors and of tasks that can be solved when only one processor can fail.
Reference: [GK95] <author> Eli Gafni and Elias Koutsoupias. </author> <title> 3-processor tasks are undecidable. </title> <booktitle> In Proceedings of the 14th Annual Symposium on Principles of Distributed Computing, </booktitle> <pages> page 271, </pages> <month> August </month> <year> 1995. </year>
Reference: [HR] <author> Maurice Herlihy and Sergio Rajsbaum. </author> <title> The decidability of distributed decision tasks. </title> <type> Manuscript. </type>
Reference-contexts: It follows that T is solvable iff T 0 is solvable in the comparison-based model. Corollary 2 The task-solvability problem for three or more processors in the comparison-based model is undecidable. Recently, Herlihy and Rajsbaum <ref> [HR] </ref> proposed an interesting extension of Theorem 2 to the models of resiliency and set-consensus.
Reference: [HS93] <author> Maurice Herlihy and Nir Shavit. </author> <title> The asynchronous computability theorem for t-resilient tasks. </title> <booktitle> In Proceedings of the 25th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 111-120, </pages> <year> 1993. </year>
Reference-contexts: Subsequently, Biran, Moran, and Zaks [BMZ88] gave a complete characterization of the tasks solvable by two processors and of tasks that can be solved when only one processor can fail. Recently, three teams <ref> [BG93, HS93, SZ93] </ref> independently extended this result by providing powerful necessary conditions for task solvability which enabled them to fl Computer Science Department, UCLA 1 show that the k-set agreement task is not solvable for more than k processors.
Reference: [HS94] <author> Maurice Herlihy and Nir Shavit. </author> <title> A simple constructive computability theorem for wait-free computation. </title> <booktitle> In Proceedings of the 26th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 101-110, </pages> <year> 1994. </year>
Reference-contexts: Recently, three teams [BG93, HS93, SZ93] independently extended this result by providing powerful necessary conditions for task solvability which enabled them to fl Computer Science Department, UCLA 1 show that the k-set agreement task is not solvable for more than k processors. Finally, Herlihy and Shavit <ref> [HS94] </ref> gave a simple condition that is necessary and sufficient for a given task to admit a wait-free protocol. This condition was extended by Borowsky and Gafni [Bor95] to the more general model of asynchronous distributed computation of resiliency and set-consensus. <p> Of course, one could use the reductions given in this paper to produce such a task, but that task could not be considered natural. The Herlihy-Shavit condition (despite the title of <ref> [HS94] </ref>) is not constructive. Our results here cast some doubt on its applicability as a necessary and sufficient condition for task solvability. On one hand, the best way to show that a task is solvable is to provide a distributed algorithm that solves the given task.
Reference: [HS96] <author> Maurice Herlihy and Nir Shavit. </author> <title> The topological structure fo asynchronous computability. </title> <type> Technical Report CS-96-03, </type> <institution> Department of Computer Science, Brown University, </institution> <year> 1996. </year> <month> 20 </month>
Reference-contexts: Thus, the contractibility problem is undecidable even for 4-dimensional manifolds. Our main result is a reduction from the contractibility problem to the task-solvability problem. We outline the ideas behind this reduction here. The Herlihy-Shavit condition <ref> [HS96] </ref> for task solvability is that a task is solvable iff there is a chromatic subdivision of the input complex that maps simplicially to the output complex, is consistent with the input-output relation (carrier-preserving), and preserves colors. <p> This requirement is captured nicely by assuming that the inputs form a chromatic simplicial complex. The vertices of a simplex of this complex denote the inputs to a subset of processors, the participating processors <ref> [HS96] </ref>. Similarly, the possible outputs of a distributed task form a chromatic simplicial complex. <p> Proof. The proof here is an adaptation of the proof of a similar result in <ref> [HS96, Lemma 5.21] </ref>. The basic idea is that the colors of C induce a coloring of I 0 . A vertex u 2 I 0 is assigned the color of its image (u) 2 C. We call such a coloring of I 0 -induced. This coloring makes a color-preserving map. <p> Corollary 1 The task-solvability problem for the model of Biran, Moran, and Zaks [BMZ88] is undecidable for three or more processors. Another interesting variant of the shared read-write memory model is the comparison-based model where processors cannot access directly their IDs but can only compare them <ref> [HS96] </ref>. A typical task for this model is the renaming task: the input (name) to each processor is a distinct member of a set S of size m, and the output must be a distinct member of a smaller set of size k.
Reference: [JT92] <author> Prasad Jayanti and Sam Toueg. </author> <title> Some results on the impossibility, universality and decidability of consensus. </title> <booktitle> In Proceedings of the 6th Workshop on Distributed Algorithms, </booktitle> <pages> pages 68-84, </pages> <year> 1992. </year>
Reference-contexts: This problem has a trivial negative answer: whether a 1-processor task is solvable is equivalent to whether the task, that is, the input-output relation, is recursive (computable); a similar observation was made in <ref> [JT92] </ref>. However, this is an unsatisfactory answer because it sheds no light on the difficulties inherent in distributed computation. Furthermore, many interesting distributed tasks are straightforward 5 input-output relations. The interesting question, then, is whether a charac-terization of "simple" tasks exists.
Reference: [Mas67] <author> William S. Massey. </author> <title> Algebraic Topology: An Introduction. </title> <publisher> Har-court, Brace and World, </publisher> <address> New York, </address> <year> 1967. </year>
Reference-contexts: It is also known that every group with finite representation is the fundamental group of some 4-dimensional manifold <ref> [Mas67] </ref>. Thus, the contractibility problem is undecidable even for 4-dimensional manifolds. Our main result is a reduction from the contractibility problem to the task-solvability problem. We outline the ideas behind this reduction here. <p> This complex can be easily constructed from G (see, for example, [Sti93, page 129]). In fact, something stronger holds: each group G is the fundamental group of a 4-dimensional simpli-cial manifold <ref> [Mas67, pages 143-144] </ref>. This means that the contractibility problem is undecidable for 4-dimensional manifolds. In contrast, for 2-dimensional manifolds (e.g., sphere, torus, projective plane), it is decidable [Deh10]. Some recent work on this special case has led to a linear-time algorithm for almost all 2-dimensional manifolds [DG95].
Reference: [Mun84] <author> James R. Munkres. </author> <title> Elements of Algebraic Topology. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Reading, Massachusetts, </address> <year> 1984. </year>
Reference-contexts: The results from Section 3 and the Herlihy-Shavit condition are then used to prove that the reduction works. We conclude by discussing some of the implications of our results. 2 The task-solvability problem We will use standard terminology from algebraic topology (see <ref> [Mun84] </ref>). <p> To state the condition precisely, we need a few definitions: Consider a chromatic complex C and a subdivision C 0 of C (a subdivision of a complex is a refinement of it; see, for example, <ref> [Mun84, page 84] </ref>). For a simplex A 2 C 0 , its carrier, carrier (A), is the smallest simplex of C that contains A. <p> More precisely, L and L 0 are said to be homotopic if there exists a continuous map F : S fi [0; 1] 7! X , such that F (x; 0) = L (x) and F (x; 1) = L 0 (x) <ref> [Mun84, page 103] </ref>. A nonsingular loop is one without self-intersections (when the map is an injection). A loop L is null-homotopic, or contractible, when it is homotopic to a constant loop; the image of a constant loop is a point. <p> If Y is a deformation retract of X then Y and X have the same homotopy type <ref> [Mun84, page 108] </ref>. It is clear that jCj is a deformation retract of jC 0 j: f gradually collapses the annulus jAj to the loop jLj keeping jCj fixed. <p> We will show how to produce a chromatic complex C 0 and a loop L 0 C 0 of length 3. C bsd C 0 1 1 1 22 Producing a chromatic complex is easy. Let bsd C denote the barycentric subdivision of the simplicial complex C <ref> [Mun84, page 85] </ref>. We can color the 12 simplicial complex bsd C with three colors as shown in Figure 4. <p> The problem with this definition is that is a continuous map, not a simplicial one. 14 However, a fundamental result from algebraic topology, the Simplicial Ap--proximation Theorem <ref> [Mun84, page 89] </ref>, allows us to replace the continuous map with a simplicial one. By the Simplicial Approximation Theorem, there is a subdivision I 0 of the triangle I and a simplicial map : I 0 7! C that approximates . It suffices, therefore, to verify that is also carrier-preserving.
Reference: [Nov55] <author> P. S. Novikov. </author> <title> On the algorithmic unsolvability of the word problem in group theory (in Russian). </title> <type> Trudy Mat. </type> <institution> Inst. Steklov, 44:143, </institution> <year> 1955. </year>
Reference-contexts: Dehn gave an algorithm (Dehn's algorithm) for the contractibility problem when the complex is a surface; for some recent interesting results for this special case see [DG95]. Attempts to extend Dehn's algorithm to higher dimensional manifolds made no substantial progress, however, for the very good reason that, as Novikov <ref> [Nov55] </ref> showed in 1995, the word problem is undecidable. The equivalence between the contractibility problem and the word problem of groups is based on the fact that every group with a finite representation (with generators and relations) is the fundamental group of a finite sim-plicial complex. <p> Since every group can be the fundamental group of a complex, the contractibility problem is equivalent to the word problem of groups. The word problem asks whether a word of a group (as a product of its generators) is equal to the identity [Sti93, page 46]. Novikov <ref> [Nov55] </ref> showed that the word problem is undecidable: there exists a group G such that no algorithm can 9 decide whether a word of this group is equal to the identity (for a textbook proof see [Rot95, chapter 12]).
Reference: [Rot95] <author> Joseph J. Rotman. </author> <title> An Introduction to the Theory of Groups. Graduate texts in mathematics. </title> <publisher> Springer-Verlag, </publisher> <address> New York, 4th edition, </address> <year> 1995. </year>
Reference-contexts: Novikov [Nov55] showed that the word problem is undecidable: there exists a group G such that no algorithm can 9 decide whether a word of this group is equal to the identity (for a textbook proof see <ref> [Rot95, chapter 12] </ref>). Notice that the group G need not be part of the input, although for our purposes the weaker version of the result when the group is part of the input will suffice. We will make use of a stronger version of Proposition 2.
Reference: [ST80] <author> H. Seifert and W. Threlfall. </author> <title> A Textbook in Topology. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1980. </year>
Reference-contexts: A loop L is null-homotopic, or contractible, when it is homotopic to a constant loop; the image of a constant loop is a point. Equivalently, loop L is null-homotopic when it can be continuously deformed to a point <ref> [ST80, page 158] </ref>. For example, in Figure 2 the loop L 1 is null-homotopic, while the loop L 2 is not. L 1 Let C be a simplicial complex, that is, a collection of simplices in the Euclidean space R m .
Reference: [Sti93] <author> John Stillwell. </author> <title> Classical Topology and Combinatorial Group Theory. Graduate texts in mathematics. </title> <publisher> Springer-Verlag, </publisher> <address> New York, 2nd edition, </address> <year> 1993. </year>
Reference-contexts: The contractibility problem asks whether a given loop of a simplicial complex is contractible, that is, whether it can be continuously transformed into a point. The history of the contractibility problem goes back to Poincare and Dehn at the beginning of the twentieth century (see <ref> [Sti93] </ref>). Dehn [Deh10] noticed that the contractibility problem is equivalent to the word problem of groups | given a word of a group as a product of its generators, decide whether it is equal to the identity. <p> To show that task solvability is undecidable, we will use the standard 8 technique of reducing a known undecidable problem to it. In our case, this problem is the contractibility problem <ref> [Sti93] </ref>. Definition 2 The contractibility problem is defined as follows: given a sim-plicial complex C and a loop L of C, is L null-homotopic? For this definition to be complete, we need to fix the representation of C and L. <p> This folklore result is based on the fact that for every group G with a finite representation with generators and relations, there exists a finite simplicial complex with fundamental group G. This complex can be easily constructed from G (see, for example, <ref> [Sti93, page 129] </ref>). In fact, something stronger holds: each group G is the fundamental group of a 4-dimensional simpli-cial manifold [Mas67, pages 143-144]. This means that the contractibility problem is undecidable for 4-dimensional manifolds. In contrast, for 2-dimensional manifolds (e.g., sphere, torus, projective plane), it is decidable [Deh10]. <p> Since every group can be the fundamental group of a complex, the contractibility problem is equivalent to the word problem of groups. The word problem asks whether a word of a group (as a product of its generators) is equal to the identity <ref> [Sti93, page 46] </ref>. Novikov [Nov55] showed that the word problem is undecidable: there exists a group G such that no algorithm can 9 decide whether a word of this group is equal to the identity (for a textbook proof see [Rot95, chapter 12]).
Reference: [SZ93] <author> Michael Saks and Fotios Zaharoglou. </author> <title> Wait-free k-set agreement is impossible: The topology of public knowledge. </title> <booktitle> In Proceedings of the 26th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 101-110, </pages> <year> 1993. </year>
Reference-contexts: Subsequently, Biran, Moran, and Zaks [BMZ88] gave a complete characterization of the tasks solvable by two processors and of tasks that can be solved when only one processor can fail. Recently, three teams <ref> [BG93, HS93, SZ93] </ref> independently extended this result by providing powerful necessary conditions for task solvability which enabled them to fl Computer Science Department, UCLA 1 show that the k-set agreement task is not solvable for more than k processors.
References-found: 19

