URL: ftp://ftp.cs.umass.edu/pub/techrept/techreport/1997/UM-CS-1997-034.ps
Refering-URL: http://dis.cs.umass.edu/~xqzhang/resume.html
Root-URL: 
Email: Email: lesser@cs.umass.edu  
Title: Information Gathering as a Resource Bounded Interpretation Task  
Author: Victor Lesser Bryan Horling Frank Klassner Anita Raja Thomas Wagner Shelley XQ. Zhang 
Date: March 1, 1997  
Address: Amherst, MA 01003  
Affiliation: Computer Science Department University of Massachusetts  UMass Computer Science  
Pubnum: Technical Report 97-34  
Abstract: This paper describes the rationale, architecture, and preliminary implementation of a next generation information gathering system. The goal of this funded research is to exploit the vast amount of information sources available today on the NII including a growing number of digital libraries, independent news agencies, government agencies, as well as human experts providing a variety of services. The large number of information sources and their different levels of accessibility, reliability and associated costs present a complex information gathering coordination problem. We outline the structure and components of a next generation information gathering agent that plans to gather information to support a decision process, reasons about the resource trade-offs of different possible gathering approaches, extracts information from unstructured documents, and uses the extracted information to refine its search and processing activities.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Yaakov Bar-Shalom and Thomas Fortmann. </author> <title> Tracking and Data Association. </title> <publisher> Academic Press, </publisher> <year> 1988. </year>
Reference-contexts: Examples of this issue in the SI domain include simultaneous sounds and occluding sonar targets, while examples of this issue in the IG domain include documents that review several software packages, or image files that contain more than one automobile chassis. The SI problem includes the data assignment problem <ref> [1] </ref>, which refers to the issue of determining not only what types of signal-generators are in the environment, but also how many instances of these generators are present.
Reference: [2] <author> J. P. Callan, W. Bruce Croft, and S. M. Harding. </author> <title> The INQUERY retrieval system. </title> <booktitle> In Proceedings of the 3rd International Conference on Database and Expert Systems Applications, </booktitle> <pages> pages 7883, </pages> <year> 1992. </year>
Reference-contexts: A rapid expansion of these services is expected over the next 5-10 years. In addition, we anticipate that improved information retrieval (IR) and information extraction (IE) technologies will become available <ref> [2, 14, 11] </ref> and that structured data will become commonplace on the WWW. These advances will allow a system not only to locate, but also to extract and use, networked information.
Reference: [3] <author> N. Carver and V. Lesser. </author> <title> The DRESUN testbed for research in FA/C distributed situation assessment: Extensions to the model of external evidence. </title> <booktitle> In Proceedings of the International Conference on Multiagent Systems, </booktitle> <month> June, </month> <year> 1995. </year>
Reference-contexts: The complexity of our objective mandates a high level of sophistication in the design of our information gathering agent's components. Indeed, several are complex problem solvers in their own right. A domain problem solver, a RESUN <ref> [4, 3] </ref> planner, translates a client's information need into a set of goals and generates plans to achieve those goals. <p> TMS task structures are stored in a common repository and they serve as a domain independent medium of exchange for the rest of the system. RESUN Planner The RESUN <ref> [4, 3] </ref> (pronounced reason) blackboard based planner/problem solver directs information gathering activities. The planner receives an initial information gathering goal specification from an external decision maker, which can be a human or another sophisticated automated component, and then formulates a partial plan for gathering the necessary information. <p> For this reason, our system uses Carver's RESUN <ref> [4, 3] </ref> planner framework to control execution. This framework views interpretation as a process of gathering evidence to resolve hypotheses' SOUs. It incorporates a rich language for representing SOUs as entities which trigger the selection of appropriate interpretation strategies. <p> The following brief description of the control-plan framework concentrates on the RESUN features that are relevant to IPUS; interested readers can find more detailed treatments in the planning community's literature <ref> [4, 3] </ref> Problem-solving under RESUN is driven by information in a problem solving model, which is a data structure that maintains a list of the current highlevel blackboard interpretation hypotheses and the SOUs associated with each one's supporting hypotheses.
Reference: [4] <author> Norman Carver and Victor Lesser. </author> <title> A new framework for sensor interpretation: Planning to resolve sources of uncertainty. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence, </booktitle> <pages> pages 724731, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: The complexity of our objective mandates a high level of sophistication in the design of our information gathering agent's components. Indeed, several are complex problem solvers in their own right. A domain problem solver, a RESUN <ref> [4, 3] </ref> planner, translates a client's information need into a set of goals and generates plans to achieve those goals. <p> TMS task structures are stored in a common repository and they serve as a domain independent medium of exchange for the rest of the system. RESUN Planner The RESUN <ref> [4, 3] </ref> (pronounced reason) blackboard based planner/problem solver directs information gathering activities. The planner receives an initial information gathering goal specification from an external decision maker, which can be a human or another sophisticated automated component, and then formulates a partial plan for gathering the necessary information. <p> For this reason, our system uses Carver's RESUN <ref> [4, 3] </ref> planner framework to control execution. This framework views interpretation as a process of gathering evidence to resolve hypotheses' SOUs. It incorporates a rich language for representing SOUs as entities which trigger the selection of appropriate interpretation strategies. <p> The following brief description of the control-plan framework concentrates on the RESUN features that are relevant to IPUS; interested readers can find more detailed treatments in the planning community's literature <ref> [4, 3] </ref> Problem-solving under RESUN is driven by information in a problem solving model, which is a data structure that maintains a list of the current highlevel blackboard interpretation hypotheses and the SOUs associated with each one's supporting hypotheses.
Reference: [5] <author> T. Dean and M. Boddy. </author> <title> An analysis of time-dependent planning. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 4954, </pages> <address> St. Paul, Minnesota, </address> <month> August </month> <year> 1988. </year>
Reference-contexts: Task Assessor The task assessor uses meta-knowledge about the RESUN component's problem solving behavior and the state of the problem solving process to build task representations from RESUN's inherently opportunistic approach to problem solving. Design-to-Criteria Scheduler Design-to-Criteria is a domain independent real-time, flexible computation <ref> [12, 5, 15] </ref> approach to task scheduling. The Design-to-Criteria task scheduler reasons about quality, cost, duration and uncertainty trade-offs of different courses of action and constructs custom satisficing schedules for achieving the high-level goal (s).
Reference: [6] <author> K. Decker, A. Pannu, K. Sycara, and M. Williamson. </author> <title> Designing behaviors for information agents. </title> <booktitle> In Proceedings of the 1st Intl. Conf. on Autonomous Agents, </booktitle> <pages> pages 404413, </pages> <address> Marina del Rey, </address> <month> February </month> <year> 1997. </year>
Reference-contexts: The next generation of information systems must use the information to make decisions and thus provide a higher-level client interface to the enormous volume of on-line information. Our work is related to other agent approaches [20] that process and use gathered information, such as the WARREN <ref> [6] </ref> portfolio management system or the original BargainFider [13] agent or Shopbot [10], both of which work to find the best available price for a music CD.
Reference: [7] <author> K. Decker, M. Williamson, and K. Sycara. </author> <title> Matchmaking and brokering [poster]. </title> <booktitle> In Proceedings of the 2nd Intl. Conf. on Multi-Agent Systems, </booktitle> <year> 1996. </year>
Reference-contexts: Multi-Agent Coordination Module This component is not part of the single-agent information gathering system architecture. However, it is necessary for the multi-agent system currently planed for our next research stage. We have done extensive work in multi-agent coordination <ref> [7, 9] </ref> and the coordination research tools will be integrated into the system via the TMS domain independent framework much along the same lines as the Design-to-Criteria Scheduler. Currently, all of these components are implemented and undergoing testing.
Reference: [8] <author> Keith S. Decker. </author> <title> Task environment centered simulation. </title> <editor> In M. Prietula, K. Carley, and L. Gasser, editors, </editor> <title> Simulating Organizations: Computational Models of Institutions and Groups. </title> <publisher> AAAI Press/MIT Press, </publisher> <year> 1997. </year>
Reference-contexts: Our system automates this process. Figure 1 shows a simplified task structure for comparing two different automobiles according to a given client's criteria. The task structure is encoded in the TMS <ref> [8] </ref> domain independent task modeling language (the details of which are beyond the scope of this paper). The task structure describes a hierarchical plan for gathering information to support the auto purchase decision. <p> By combining components in a single agent, that have hereto been used individually, we gain new insight and discover new research directions for the components. The most important components, or component groups are: Modeling Framework The TMS <ref> [8] </ref> task modeling language is used to hierarchically model the information gathering process and enumerate alternative ways to accomplish the high-level gathering goals.
Reference: [9] <author> Keith S. Decker and Victor R. Lesser. </author> <title> Designing a family of coordination algorithms. </title> <booktitle> In Proceedings of the First International Conference on Multi-Agent Systems, </booktitle> <pages> pages 7380, </pages> <address> San Francisco, </address> <month> June </month> <year> 1995. </year> <note> AAAI Press. Longer version available as UMass CS-TR 9414. </note>
Reference-contexts: Multi-Agent Coordination Module This component is not part of the single-agent information gathering system architecture. However, it is necessary for the multi-agent system currently planed for our next research stage. We have done extensive work in multi-agent coordination <ref> [7, 9] </ref> and the coordination research tools will be integrated into the system via the TMS domain independent framework much along the same lines as the Design-to-Criteria Scheduler. Currently, all of these components are implemented and undergoing testing.
Reference: [10] <author> Robert Doorenbos, Oren Etzioni, and Daniel Weld. </author> <title> A scalable comparision-shopping agent for the world-wide-web. </title> <booktitle> In Proceedings of the First International Conference on Autonomous Agents, </booktitle> <pages> pages 3948, </pages> <institution> Marina del Rey, California, </institution> <month> February </month> <year> 1997. </year>
Reference-contexts: Our work is related to other agent approaches [20] that process and use gathered information, such as the WARREN [6] portfolio management system or the original BargainFider [13] agent or Shopbot <ref> [10] </ref>, both of which work to find the best available price for a music CD.
Reference: [11] <author> D. Fisher, S. Soderland, J. McCarthy, F. Feng, and W. Lehnert. </author> <title> Description of the UMass Systems as Used for MUC-6. </title> <booktitle> In Proceedings of the 6th Message Understanding Conference, </booktitle> <address> Columbia, MD, </address> <year> 1996. </year>
Reference-contexts: A rapid expansion of these services is expected over the next 5-10 years. In addition, we anticipate that improved information retrieval (IR) and information extraction (IE) technologies will become available <ref> [2, 14, 11] </ref> and that structured data will become commonplace on the WWW. These advances will allow a system not only to locate, but also to extract and use, networked information. <p> When documents are retrieved, yet another sophisticated problem solver, an IE system <ref> [11] </ref>, breaks the unstructured text documents down into information templates that can be used by the planner for decision making and refinement of other information gathering goals. <p> The Design-to-Criteria scheduler is what gives the IG agent the ability to reason about time/quality/cost trade-offs of alternative (potentially parallel) actions and the ability to meet deadlines, stay within cost ranges, and meet quality and certainty requirements. Information Extraction The system uses IE <ref> [11] </ref> technology to extract particular desired data from retrieved unstructured text documents. The extraction component uses a combination of learned domain-specific extraction rules, domain knowledge, and knowledge of sentence construction to identify and extract the desired information. <p> The front-end IE system analyzes unrestricted natural language and produces a representation of the information from the text which is relevant to the domain. That is, it fills in a template where the information need is described by the template. 7 The IE system <ref> [16, 11] </ref> automatically creates a dictionary of extraction rules offline, that is sufficient to identify relevant information from the training corpus. These rules are generalized as far as possible without producing errors, so that the minimum number of dictionary entries covers the positive instances.
Reference: [12] <author> Eric Horvitz, Gregory Cooper, and David Heckerman. </author> <title> Reflection and action under scarce resources: Theoretical principles and empirical study. </title> <booktitle> In Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <month> August </month> <year> 1989. </year>
Reference-contexts: Task Assessor The task assessor uses meta-knowledge about the RESUN component's problem solving behavior and the state of the problem solving process to build task representations from RESUN's inherently opportunistic approach to problem solving. Design-to-Criteria Scheduler Design-to-Criteria is a domain independent real-time, flexible computation <ref> [12, 5, 15] </ref> approach to task scheduling. The Design-to-Criteria task scheduler reasons about quality, cost, duration and uncertainty trade-offs of different courses of action and constructs custom satisficing schedules for achieving the high-level goal (s).
Reference: [13] <author> Bruce Krulwich. </author> <title> The BargainFinder Agent: Comparison price shopping on the Internet. </title> <editor> In Joseph Williams, editor, Bots and Other Internet Beasties. SAMS.NET, </editor> <year> 1996. </year> <note> http://bf.cstar.ac.com/bf/. </note>
Reference-contexts: Our work is related to other agent approaches [20] that process and use gathered information, such as the WARREN [6] portfolio management system or the original BargainFider <ref> [13] </ref> agent or Shopbot [10], both of which work to find the best available price for a music CD.
Reference: [14] <author> Leah Larkey and W. Bruce Croft. </author> <title> Combining classifiers in text categorization. </title> <booktitle> In Proceedings of the 19th International Conference on Research and Development in Information Retrieval (SIGIR '96), </booktitle> <pages> pages 289297, </pages> <address> Zurich, Switzerland, </address> <year> 1996. </year> <month> 10 </month>
Reference-contexts: A rapid expansion of these services is expected over the next 5-10 years. In addition, we anticipate that improved information retrieval (IR) and information extraction (IE) technologies will become available <ref> [2, 14, 11] </ref> and that structured data will become commonplace on the WWW. These advances will allow a system not only to locate, but also to extract and use, networked information.
Reference: [15] <author> Stuart J. Russell and Shlomo Zilberstein. </author> <title> Composing real-time systems. </title> <booktitle> In Proceedings of the Twelfth Interna--tional Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 212217, </pages> <address> Sydney, Australia, </address> <month> August </month> <year> 1991. </year>
Reference-contexts: Task Assessor The task assessor uses meta-knowledge about the RESUN component's problem solving behavior and the state of the problem solving process to build task representations from RESUN's inherently opportunistic approach to problem solving. Design-to-Criteria Scheduler Design-to-Criteria is a domain independent real-time, flexible computation <ref> [12, 5, 15] </ref> approach to task scheduling. The Design-to-Criteria task scheduler reasons about quality, cost, duration and uncertainty trade-offs of different courses of action and constructs custom satisficing schedules for achieving the high-level goal (s).
Reference: [16] <author> Stephen Soderland, David Fisher, Jon Aseltine, and Wendy Lenhert. </author> <title> CRYSTAL:Inducing a Conceptual Dictionary. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1314 1319, </pages> <year> 1995. </year>
Reference-contexts: The front-end IE system analyzes unrestricted natural language and produces a representation of the information from the text which is relevant to the domain. That is, it fills in a template where the information need is described by the template. 7 The IE system <ref> [16, 11] </ref> automatically creates a dictionary of extraction rules offline, that is sufficient to identify relevant information from the training corpus. These rules are generalized as far as possible without producing errors, so that the minimum number of dictionary entries covers the positive instances.
Reference: [17] <author> Thomas Wagner, Alan Garvey, and Victor Lesser. </author> <title> Complex Goal Criteria and Its Application in Design-to-Criteria Scheduling. </title> <booktitle> In Proceedings of the Fourteenth National Conference on Artificial Intelligence, </booktitle> <month> July </month> <year> 1997. </year> <note> Also available as UMASS Department of Computer Science Technical Report TR-1997-10. </note>
Reference-contexts: To support reasoning about time/quality/cost trade-offs, and thus a range of different resource/solution paths, the planner enumerates multiple different ways to go about achieving the goals and describes them statistically in three dimensions, duration, quality, and cost, via discrete probability distributions. Another sophisticated problem solving component, a Design-to-Criteria <ref> [17, 19, 18] </ref> scheduler, examines the possible solutions paths and determines a set of actions to carry out and schedules the actions coping with an exponential scheduling problem in real-time through the use of approximation and goal directed focusing.
Reference: [18] <author> Thomas Wagner, Alan Garvey, and Victor Lesser. </author> <title> Criteria-Directed Heuristic Task Scheduling. </title> <journal> International Journal of Approximate Reasoning, Special Issue on Scheduling, </journal> <note> To appear 1997. Also available as UMASS Department of Computer Science Technical Report TR-97-16. </note>
Reference-contexts: To support reasoning about time/quality/cost trade-offs, and thus a range of different resource/solution paths, the planner enumerates multiple different ways to go about achieving the goals and describes them statistically in three dimensions, duration, quality, and cost, via discrete probability distributions. Another sophisticated problem solving component, a Design-to-Criteria <ref> [17, 19, 18] </ref> scheduler, examines the possible solutions paths and determines a set of actions to carry out and schedules the actions coping with an exponential scheduling problem in real-time through the use of approximation and goal directed focusing.
Reference: [19] <author> Thomas Wagner, Alan Garvey, and Victor Lesser. </author> <title> Design-to-Criteria Scheduling: Managing Complexity through Goal-Directed Satisficing. </title> <booktitle> In In the Proceedings of the AAAI-97 Workshop on Building Resource-Bounded Reasoning Systems, </booktitle> <month> July </month> <year> 1997. </year> <note> Also available as UMASS Department of Computer Science Technical Report TR-97-16. </note>
Reference-contexts: To support reasoning about time/quality/cost trade-offs, and thus a range of different resource/solution paths, the planner enumerates multiple different ways to go about achieving the goals and describes them statistically in three dimensions, duration, quality, and cost, via discrete probability distributions. Another sophisticated problem solving component, a Design-to-Criteria <ref> [17, 19, 18] </ref> scheduler, examines the possible solutions paths and determines a set of actions to carry out and schedules the actions coping with an exponential scheduling problem in real-time through the use of approximation and goal directed focusing.
Reference: [20] <author> M.P. Wellmen, E.H. Durfee, </author> <title> and W.P. Birmingham. The digital library as community of information agents. </title> <journal> IEEE Expert, </journal> <month> June </month> <year> 1996. </year> <month> 11 </month>
Reference-contexts: The next generation of information systems must use the information to make decisions and thus provide a higher-level client interface to the enormous volume of on-line information. Our work is related to other agent approaches <ref> [20] </ref> that process and use gathered information, such as the WARREN [6] portfolio management system or the original BargainFider [13] agent or Shopbot [10], both of which work to find the best available price for a music CD.
References-found: 20

