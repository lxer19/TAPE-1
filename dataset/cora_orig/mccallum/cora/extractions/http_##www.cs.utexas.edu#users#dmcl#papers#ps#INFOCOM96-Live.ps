URL: http://www.cs.utexas.edu/users/dmcl/papers/ps/INFOCOM96-Live.ps
Refering-URL: http://www.cs.utexas.edu/users/dmcl/allpapers.html
Root-URL: 
Email: Email: fpawang,vin,shenoyg@cs.utexas.edu Email: shen@merl.com  
Title: A Reliable, Adaptive Network Protocol for Video Transport  
Author: Pawan Goyal, Harrick M. Vin, Chia Sheny and Prashant J. Shenoy 
Address: Taylor Hall 2.124, Austin, TX 78712 201 Broadway, Cambridge, MA 02139  
Affiliation: Distributed Multimedia Computing Laboratory Mitsubishi Electric Research Laboratory Department of Computer Sciences, UT Austin Cambridge Research Center  
Abstract: In this paper, we present an adaptive network layer protocol for VBR video transport. It: (1) minimizes buffer requirement in the network while guaranteeing that packets of VBR encoded video flows will not be lost, and (2) minimizes end-to-end delay and jitter of frames. To achieve the former objective, we utilize receiver-oriented adaptive credit-based flow control algorithm, and derive necessary and sufficient number of buffers that should be reserved for ensuring its reliability. To minimize the end-to-end delay and jitter for VBR encoded video streams, we: (1) present bandwidth estimation techniques which exploit the structure of the video traffic, and (2) define a new fairness criteria for buffer allocation and then present a fair buffer/bandwidth allocation algorithm. We experimentally evaluate this protocol for a wide range of parameters and many network configuration and demonstrate its adaptability. We also compare the performance of the protocol with numerous other schemes and demonstrate its suitability for video transport. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E.W. Biersack. </author> <title> Performance Evaluation of Forward Error Correction in ATM Networks. </title> <journal> In Proceedings of ACM SIGCOMM'92, Computer Communications Review, </journal> <volume> Vol. 22, No. 4, </volume> <pages> pages 248-257, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: For instance, at a receiver, the decoder may mitigate the effect of lost packets by approximating the missing data through temporal or spatial interpolation [12]. Similarly, the decoder could utilize forward error correction information to compensate for packet losses <ref> [1] </ref>.
Reference: [2] <author> D.D. Clark, S. Shenker, and L. Zhang. </author> <title> Supporting Real-Time Applications in an Integrated Services Packet Network. </title> <booktitle> In Proceedings of ACM SIGCOMM, </booktitle> <pages> pages 14-26, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: In architectures that support the former class of applications, the network provides QoS guarantees based on the traffic specification of a source <ref> [2] </ref>. The network guarantees that as long as a source traffic conforms to its specification, fl This research was supported in part by IBM Graduate Fellowship, Intel, Mitsubishi Electric Research Laboratories (MERL), the National Science Foundation (Research Initiation Award CCR-9409666), NASA, and Sun Microsystems Inc. it would receive guaranteed QoS. <p> The difficulty in capturing these variations severely limit the effectiveness and viability of architectures for providing guaranteed QoS. In architectures that support the latter class of applications (referred to as adaptive applications), the quality of service being provided to applications varies with the availability of resources <ref> [2] </ref>. To provide acceptable QoS, a network must manage the burstiness of video traffic at multiple time-scales. The long term bit rate variations lead to sustained overload on a network. Hence, a network must employ an admission control algorithm that limits the statistical multiplexing [4]. <p> However, to limit the occurrence of such an event, a network must employ admission control algorithm. Since the protocol guarantees that no packet loss occurs even during congestion, heuristic admission control algorithms based on measured traffic statistics will suffice <ref> [2] </ref>. Thus, our protocol not only effectively controls the short term burstiness, but also simplifies the network control for long term burstiness. 3 Experimental Evaluation We have experimentally evaluated various parameters and aspects of our video transmission protocol through extensive trace-driven simulations.
Reference: [3] <author> P. Goyal, H. M. Vin, C. Shen, and P.J. Shenoy. </author> <title> A Reliable, Adaptive Network Protocol for Video Transport. </title> <type> Technical Report TR-95-18, </type> <institution> The University of Texas at Austin, </institution> <month> July </month> <year> 1995. </year> <note> Available via URL http://www.cs.utexas.edu/users/dmcl. </note>
Reference-contexts: Furthermore, strong assumptions and additional support from senders is required to ensure the reliability of the algorithm <ref> [3] </ref>. We address these limitations by: (1) deriving a necessary and sufficient condition for ensuring the reliability of receiver-based adaptation, (2) developing a adaptive buffer allocation algorithm specifically for video transport, and (3) demonstrating the viability of employing it for video transport over high speed networks. <p> Hence, if B is the buffer space available at the receiver, then packet loss would not occur if P f2S B f (t) B at all time t. This is formally stated in Theorem 1, proof for which is presented in <ref> [3] </ref>. <p> We have shown that this holds for B f (t) as defined in Theorem 1 <ref> [3] </ref>. An important property of B f (t) is that all buffer require ment functions that can ensure that packet loss does not occur and are non increasing between two consecutive adaptation instants have values at least as large as B f (t) between consecutive adaptation instants. <p> Hence, any buffer alloca tion algorithm that reserves sufficient buffer space at adaptation instants (to prevent any buffer overflow within the adaptation interval) must necessarily reserve B f (t) buffer per flow. This is formally stated in Theorem 2, proof for which is presented in <ref> [3] </ref>. <p> For the most part of this section, we will present our simulation results for a baseline network topology consisting of 6 switches (see Figure 1) which stresses various aspects of the protocol and is similar to the topology used in [5]; results obtained from other topologies are summarized in <ref> [3] </ref>. In our topologies, all the links are assumed to be duplex, of capacity 40 Mb/s, and with a propagation delay of 3 ms. Finally, to simulate an ATM network environment, the packet size was chosen to be 53 bytes (5 bytes of header information and 48 bytes of payload).
Reference: [4] <author> M. Grossglauser, S. Keshav, and D. Tse. RCBR: </author> <title> A Simple and Efficient Service for Multiple Time-Scale Traffic. </title> <booktitle> In Proceedings of ACM SIGCOMM'95, </booktitle> <year> 1995. </year>
Reference-contexts: To provide acceptable QoS, a network must manage the burstiness of video traffic at multiple time-scales. The long term bit rate variations lead to sustained overload on a network. Hence, a network must employ an admission control algorithm that limits the statistical multiplexing <ref> [4] </ref>. The short term burstiness, on the other hand, leads to queue build up, and consequently to significant packet losses, at switches. Although uncompressed video streams, due to the inherent spatial and temporal redundancy, are highly resilient to packet losses, compressed video streams are not.
Reference: [5] <author> H. Kanakia, P. P. Mishra, and A. Reibman. </author> <title> An Adaptive Congestion Control Scheme for Real-Time Packet Video. </title> <journal> Proceedings of ACM SIGCOMM Computer Communications Review, </journal> <month> October </month> <year> 1993. </year>
Reference-contexts: Moreover, if the compression algorithm employs interframe compression techniques (e.g. MPEG), then the effect of packet loss in a single frame may propagate through multiple frames. Consequently, packet losses significantly degrade video quality and are highly undesirable <ref> [5] </ref>. Given that the hard timing constraints imposed by continuous video playback preclude any retransmission of lost packets, minimizing the impact of such packet losses on video quality will require the sender and the receiver to employ additional error recovery methods. <p> network supports multiple priority levels and if the source employs a multi-layer encoder, then the reconstructed image quality at the receiver can be improved by transmitting layers of the encoded video stream at different priority levels (e.g., transmitting the essential and the enhancement layers at high and low priorities, respectively) <ref> [5, 11] </ref>. Although conceptually elegant, these techniques are not without limitations. <p> Hence, flow control algorithms are attractive for video transport. Over the last decade, feedback-based flow control has been the focus of considerable research for datagram networks <ref> [5, 6] </ref>. However, it has been observed that, due to the end-to-end nature of most of the conventional flow control protocols, they do not react quickly to short-term congestion in high-speed networks. <p> For the most part of this section, we will present our simulation results for a baseline network topology consisting of 6 switches (see Figure 1) which stresses various aspects of the protocol and is similar to the topology used in <ref> [5] </ref>; results obtained from other topologies are summarized in [3]. In our topologies, all the links are assumed to be duplex, of capacity 40 Mb/s, and with a propagation delay of 3 ms.
Reference: [6] <author> H. T. Kung, T. Blackwell, and A. Chapman. </author> <title> Credit-based Flow Control for ATM Networks : Credit Update Protocol, Adaptive Credit Allocation, and Statistical Multiplexing. </title> <booktitle> In Proceedings of SIGCOMM'94, London, </booktitle> <pages> pages 101-114, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: Hence, flow control algorithms are attractive for video transport. Over the last decade, feedback-based flow control has been the focus of considerable research for datagram networks <ref> [5, 6] </ref>. However, it has been observed that, due to the end-to-end nature of most of the conventional flow control protocols, they do not react quickly to short-term congestion in high-speed networks. <p> However, it has been observed that, due to the end-to-end nature of most of the conventional flow control protocols, they do not react quickly to short-term congestion in high-speed networks. To address this limitation, several researchers have recently begun developing per link, hop-by-hop credit-based flow control algorithms <ref> [6, 8] </ref>. <p> The buffer reserved for a flow depends on the desired bandwidth of a flow and can be either static or dynamic (i.e., adaptive) <ref> [6, 8, 10] </ref>. In static allocation, a fixed number of packet buffers are allocated at the receiver for each flow. <p> This enables the switching nodes to minimize the total buffer space required to support the flows whose bandwidth requirements vary significantly over time (e.g. video flows). Adaptive credit allocation can be done either at the sender or at the receiver <ref> [6, 10] </ref>. In either case, the adaptive credit allocation algorithm must ensure that packets are never dropped due to congestion in the network. A sender based buffer adaptation algorithm was proposed and demonstrated to be reliable in [10]. <p> In either case, the adaptive credit allocation algorithm must ensure that packets are never dropped due to congestion in the network. A sender based buffer adaptation algorithm was proposed and demonstrated to be reliable in [10]. The concept of receiver-oriented adaptation, on the other hand, was introduced in <ref> [6] </ref> and a particular algorithm has been proposed in [7]. <p> A robust protocol (referred to as Credit Update Protocol ) for sending credit packets and updating the buffer availability information at the sender was proposed in <ref> [6] </ref>. <p> As described in <ref> [6] </ref>, at any instant, the buffer allocation for a flow at the receiver can be partitioned as a f = (n 2 + n 3 ). <p> Moreover, the average length of the discontinuity was less than 2.5 ms which is within human perceptual tolerance. 4 Comparison with Other Schemes 4.1 Receiver-Oriented Adaptation The concept of receiver-oriented adaptation was originally introduced in <ref> [6] </ref>, and a particular algorithm was proposed in [7]. The algorithm presented in [7] requires P j 2 f2S Q f (t f ) to hold after the j th allocation.
Reference: [7] <author> H. T. Kung and K. Chang. </author> <title> Reveiver-Oriented Adaptive Buffer Allocation in Credit-Based Flow Control for ATM Networks. </title> <booktitle> In Proceedings of INFOCOM'95, </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: A sender based buffer adaptation algorithm was proposed and demonstrated to be reliable in [10]. The concept of receiver-oriented adaptation, on the other hand, was introduced in [6] and a particular algorithm has been proposed in <ref> [7] </ref>. To ensure that packets are not discarded due to congestion in receiver-oriented adaptation, the algorithm in [7] uses a highly conservative buffer reservation policy, and hence leads to low link and buffer utilization as well as poor delay performance for video flows (see Section 4.1). <p> The concept of receiver-oriented adaptation, on the other hand, was introduced in [6] and a particular algorithm has been proposed in <ref> [7] </ref>. To ensure that packets are not discarded due to congestion in receiver-oriented adaptation, the algorithm in [7] uses a highly conservative buffer reservation policy, and hence leads to low link and buffer utilization as well as poor delay performance for video flows (see Section 4.1). <p> The algorithm has been designed and evaluated only for data traffic and is not suitable for video traffic (in fact, for video flows the static buffer allocation algorithm requires fewer buffers than the algorithm proposed in <ref> [7] </ref>). Furthermore, strong assumptions and additional support from senders is required to ensure the reliability of the algorithm [3]. <p> Moreover, the average length of the discontinuity was less than 2.5 ms which is within human perceptual tolerance. 4 Comparison with Other Schemes 4.1 Receiver-Oriented Adaptation The concept of receiver-oriented adaptation was originally introduced in [6], and a particular algorithm was proposed in <ref> [7] </ref>. The algorithm presented in [7] requires P j 2 f2S Q f (t f ) to hold after the j th allocation. It is easily observed that the condition for reliability presented in this paper is much weaker and consequently leads to much more efficient utilization of network resources. <p> Moreover, the average length of the discontinuity was less than 2.5 ms which is within human perceptual tolerance. 4 Comparison with Other Schemes 4.1 Receiver-Oriented Adaptation The concept of receiver-oriented adaptation was originally introduced in [6], and a particular algorithm was proposed in <ref> [7] </ref>. The algorithm presented in [7] requires P j 2 f2S Q f (t f ) to hold after the j th allocation. It is easily observed that the condition for reliability presented in this paper is much weaker and consequently leads to much more efficient utilization of network resources. <p> Our experiments have demonstrated that for configuration 2 and a buffer size of 1000 packets, the link utilization in our algorithm is 60-70% higher. Moreover, the end-to-end delay yielded by our algorithm is 20 times smaller (85 ms as compared to 1646 ms). Furthermore, the algorithm in <ref> [7] </ref> requires 100% more buffers (2000 packets) for a comparable delay performance. Since peak rate buffer allocation of the sources would have required 1650 packets, we believe this is an anomaly in the algorithm in [7]. Finally, when no flow control algorithm is employed the buffer requirement is 2320 packets. <p> Furthermore, the algorithm in <ref> [7] </ref> requires 100% more buffers (2000 packets) for a comparable delay performance. Since peak rate buffer allocation of the sources would have required 1650 packets, we believe this is an anomaly in the algorithm in [7]. Finally, when no flow control algorithm is employed the buffer requirement is 2320 packets. Hence, the algorithm in [7] increases the delay significantly while saving very small amount of buffer space for video flows. <p> Since peak rate buffer allocation of the sources would have required 1650 packets, we believe this is an anomaly in the algorithm in <ref> [7] </ref>. Finally, when no flow control algorithm is employed the buffer requirement is 2320 packets. Hence, the algorithm in [7] increases the delay significantly while saving very small amount of buffer space for video flows. This also illustrates that the adaptive credit-based protocol would not be feasible for video without Theorem 1. The algorithm presented in [7] presumes additional per link timers at each of the upstream nodes. <p> Hence, the algorithm in <ref> [7] </ref> increases the delay significantly while saving very small amount of buffer space for video flows. This also illustrates that the adaptive credit-based protocol would not be feasible for video without Theorem 1. The algorithm presented in [7] presumes additional per link timers at each of the upstream nodes. Moreover, these timers are assumed to be synchronized. We believe that to facilitate interoperability, adaptive buffer management should be an implementation choice of a switch and should not require any additional support from other switches. <p> This assumption is unnecessary and, as we have demonstrated, reliability can be achieved without additional support from the upstream switches. Furthermore, the algorithm in <ref> [7] </ref> permits buffer adaptation for the flows only at every adaptation interval, which makes the algorithm inflexible.
Reference: [8] <author> H.T. Kung. </author> <title> The FCVC(Flow-Controlled Virtual Channels) Proposal for ATM Networks: A Summary. </title> <booktitle> In Proceedings of the INFOCOM'93, </booktitle> <year> 1993. </year>
Reference-contexts: However, it has been observed that, due to the end-to-end nature of most of the conventional flow control protocols, they do not react quickly to short-term congestion in high-speed networks. To address this limitation, several researchers have recently begun developing per link, hop-by-hop credit-based flow control algorithms <ref> [6, 8] </ref>. <p> The buffer reserved for a flow depends on the desired bandwidth of a flow and can be either static or dynamic (i.e., adaptive) <ref> [6, 8, 10] </ref>. In static allocation, a fixed number of packet buffers are allocated at the receiver for each flow.
Reference: [9] <author> S.S. Lam, S. Chow, and D.K.Y. Yau. </author> <title> An Algorithm for Lossless Smoothing of MPEG Video. </title> <booktitle> In Proceedings of ACM SIGCOMM'94, </booktitle> <address> London, </address> <year> 1994. </year>
Reference-contexts: Source traffic shaping algorithms increase the end-to-end delay of the frames significantly (by approximately 200ms <ref> [9] </ref>) and hence may not be feasible for interactive video applications. On the other hand, predicting the buffer space required to absorb transient overloads for video sources is difficult. Furthermore, increasing fast expensive buffer at the switches in high speed networks may not be economically viable.
Reference: [10] <author> C. Ozveren, R. Simcoe, and G. Varghese. </author> <title> Reliable and Efficient Hop-by-Hop Flow Control. </title> <booktitle> In Proceedings of SIGCOMM'94, London, </booktitle> <pages> pages 89-100, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: The buffer reserved for a flow depends on the desired bandwidth of a flow and can be either static or dynamic (i.e., adaptive) <ref> [6, 8, 10] </ref>. In static allocation, a fixed number of packet buffers are allocated at the receiver for each flow. <p> This enables the switching nodes to minimize the total buffer space required to support the flows whose bandwidth requirements vary significantly over time (e.g. video flows). Adaptive credit allocation can be done either at the sender or at the receiver <ref> [6, 10] </ref>. In either case, the adaptive credit allocation algorithm must ensure that packets are never dropped due to congestion in the network. A sender based buffer adaptation algorithm was proposed and demonstrated to be reliable in [10]. <p> In either case, the adaptive credit allocation algorithm must ensure that packets are never dropped due to congestion in the network. A sender based buffer adaptation algorithm was proposed and demonstrated to be reliable in <ref> [10] </ref>. The concept of receiver-oriented adaptation, on the other hand, was introduced in [6] and a particular algorithm has been proposed in [7].
Reference: [11] <author> P. Pancha and M. E. Zarki. </author> <title> MPEG Coding for Variable Bit Rate Video Transmission. </title> <journal> IEEE Communications Magazine, </journal> <pages> pages 54-66, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: network supports multiple priority levels and if the source employs a multi-layer encoder, then the reconstructed image quality at the receiver can be improved by transmitting layers of the encoded video stream at different priority levels (e.g., transmitting the essential and the enhancement layers at high and low priorities, respectively) <ref> [5, 11] </ref>. Although conceptually elegant, these techniques are not without limitations.
Reference: [12] <author> C.J. Turner and L.L. Peterson. </author> <title> Image Transfer: An End to End Design. </title> <booktitle> In Proceedings of ACM SIG-COMM'92, Baltimore, </booktitle> <pages> pages 258-268, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: For instance, at a receiver, the decoder may mitigate the effect of lost packets by approximating the missing data through temporal or spatial interpolation <ref> [12] </ref>. Similarly, the decoder could utilize forward error correction information to compensate for packet losses [1].
Reference: [13] <author> G.A Veciana. </author> <title> Design Issues in ATM Networks: Traffic Shaping and Congestion Control. </title> <type> PhD thesis, </type> <institution> University of California at Berkeley, </institution> <year> 1993. </year>
Reference-contexts: any correlation between the time instants at which adaptation occurs for the flows. 4.2 Video Transmission Schemes We chose the following three schemes, which we believe are representative of the schemes proposed in the literature, for the purpose of comparison: * Periodic Averaging: This is a source traffic shaping mechanism <ref> [13] </ref> in which, assuming all the frame sizes are known in advance, all the frames that belong to an averaging interval are transmitted at the average rate for that interval. This generates a smooth traffic source with rate changes occurring only at averaging interval boundaries.
References-found: 13

