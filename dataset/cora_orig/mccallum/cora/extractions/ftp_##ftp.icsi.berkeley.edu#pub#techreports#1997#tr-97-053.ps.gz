URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1997/tr-97-053.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1997.html
Root-URL: http://www.icsi.berkeley.edu
Title: Constructing Fuzzy Graphs from Examples  
Author: Michael R. Berthold and Klaus-Peter Huber Klaus-Peter Huber 
Note: Michael Berthold is with ICSI and the  is with the  
Address: I 1947 Center St. Suite 600 Berkeley, California 94704-1198  Berkeley, CA 94720, USA.  IRF (Prof. D. Schmid), Am Zirkel 2, 76128 Karlsruhe, Germany.  
Affiliation: INTERNATIONAL COMPUTER SCIENCE INSTITUTE  University of California at Berkeley, Computer Science Division, Department of EECS,  University of Karlsruhe,  
Pubnum: TR-97-053  
Email: E-mail: berthold@cs.berkeley.edu  E-mail: KlausPeter.Huber@Informatik.Uni-Karlsruhe.DE  
Phone: (510) 643-9153 FAX (510) 643-7684  
Date: December 1997  
Abstract: Methods to build function approximators from example data have gained considerable interest in the past. Especially methodologies that build models that allow an interpretation have attracted attention. Most existing algorithms, however, are either complicated to use or infeasible for high-dimensional problems. This article presents an efficient and easy to use algorithm to construct fuzzy graphs from example data. The resulting fuzzy graphs are based on locally independent fuzzy rules that operate solely on selected, important attributes. This enables the application of these fuzzy graphs also to problems in high dimensional spaces. Using illustrative examples and a real world data set it is demonstrated how the resulting fuzzy graphs offer quick insights into the structure of the example data, that is, the underlying model. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Sebastian Thrun, </author> <title> "Extracting rules from artificial neural networks with distributed representations", </title> <booktitle> in Advances in 10 Neural Information Processing Systems, </booktitle> <editor> G. Tesauro, D. S. Touretzky, and T. K. Leen, Eds., </editor> <address> Cambridge MA, </address> <year> 1995, </year> <pages> 7, pp. 505-512, </pages> <publisher> MIT Press. </publisher>
Reference-contexts: This parameter controls the time each station has to send mes sages, values were set within [0:01; 0:4] * number of additional stations (stations) represents the background workload on the network. Many additional stations communicating over the network will increase the traffic on the net work: <ref> [1; 15] </ref> Since the construction of the metamodel only depends on the example data these examples have to be representative. For this the planning of simulation experiments must be done carefully.
Reference: [2] <author> G. Towell and J. W. Shavlik, </author> <title> "Interpretation of artificial neural networks: Mapping knowledge-based neural networks into rules", </title> <booktitle> in Advances in Neural Information Processing Systems, </booktitle> <editor> J. E. Moody, S. J. Hanson, and R. P. Lipp-mann, Eds. </editor> <year> 1992, </year> <pages> pp. 977-984, </pages> <publisher> Morgan Kaufmann. </publisher>
Reference: [3] <author> Clayton McMillan, Michael C. Mozer, and Paul Smolen-sky, </author> <title> "Rule induction through integrated symbolic and sub-symbolic processing", </title> <booktitle> in Advances in Neural Information Processing Systems, </booktitle> <editor> J. E. Moody, S. J. Hanson, and R. P. Lippmann, Eds. </editor> <year> 1992, </year> <pages> pp. 969-976, </pages> <publisher> Morgan Kaufmann. </publisher>
Reference: [4] <author> Volkmar Uebele, Shigeo Abe, and Ming-Shong Lan, </author> <title> "A neural-network-based fuzzy classifier", </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> vol. 25, no. 2, </volume> <month> Feb. </month> <year> 1995. </year>
Reference: [5] <author> S. Salzberg, </author> <title> "A nearest hyperrectangle learning method", </title> <booktitle> in Machine Learning, 1991, </booktitle> <volume> 6, </volume> <pages> pp. 251-276. </pages>
Reference: [6] <author> D. Wettschereck, </author> <title> "A hybrid nearest-neighbour and nearest-hyperrectangle learning algorithm", </title> <booktitle> in Proceedings of the European Conference on Machine Learning, </booktitle> <year> 1994, </year> <pages> pp. 323-335. </pages>
Reference: [7] <author> J. Ross Quinlan, </author> <title> "Induction of decision trees", </title> <booktitle> in Machine Learning, 1986, </booktitle> <volume> 1, </volume> <pages> pp. 81-106. </pages>
Reference: [8] <author> J. Ross Quinlan, C4.5: </author> <title> Programs for Machine Learning, </title> <publisher> Morgan Kaufmann Publishers, </publisher> <year> 1993. </year>
Reference: [9] <author> P. Clark and T. Niblett, </author> <title> "The CN2 induction algorithm", </title> <booktitle> in Machine Learning, 1989, </booktitle> <volume> 3, </volume> <pages> pp. 261-283. </pages>
Reference: [10] <author> Tomohiro Takagi and Michio Sugeno, </author> <title> "Fuzzy identification of systems and its application to modeling and control", </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> vol. SMC-15, no. 1, </volume> <month> Jan. </month> <year> 1985. </year>
Reference: [11] <author> Li-Xin Wang and Jerry M. Mendel, </author> <title> "Generating rules by learning from examples", </title> <booktitle> in International Symposium on Intelligent Control. IEEE, </booktitle> <year> 1991, </year> <pages> pp. 263-268. </pages>
Reference-contexts: Note how fuzzy points cover regions of different widths and are only introduced where necessary. On the right the resulting function approximated by the fuzzy graph is shown. For comparison we include results of two other algorithms <ref> [11] </ref> and [12]. The grid based approach with a fixed grid spacing [11] has problems finding a reasonable approximation as soon as the approx Fig. 9. A fuzzy graph approximates an artificial function. <p> Note how fuzzy points cover regions of different widths and are only introduced where necessary. On the right the resulting function approximated by the fuzzy graph is shown. For comparison we include results of two other algorithms <ref> [11] </ref> and [12]. The grid based approach with a fixed grid spacing [11] has problems finding a reasonable approximation as soon as the approx Fig. 9. A fuzzy graph approximates an artificial function. All core-regions but only the support-areas for the fuzzy points of region 5 =&lt; 4; 5; 6; 7 &gt; are shown (left). <p> All core-regions but only the support-areas for the fuzzy points of region 5 =&lt; 4; 5; 6; 7 &gt; are shown (left). The picture on the bottom shows the corresponding approximation. Fig. 10. An approximation of a fuzzy rule set generated by the algorithm of Wang&Mendel <ref> [11] </ref>. 10 classes were used for the input and output fuzzification. Fig. 11. An approximation of a fuzzy rule set generated by the algorithm of Hig-gins&Goodman [12].
Reference: [12] <author> Charles M. Higgins and Rodney M. Goodman, </author> <title> "Learning fuzzy rule-based neural networks for control", </title> <booktitle> in Advances in Neural Information Processing Systems, </booktitle> <address> California, </address> <year> 1993, </year> <pages> 5, pp. 350-357, </pages> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Note how fuzzy points cover regions of different widths and are only introduced where necessary. On the right the resulting function approximated by the fuzzy graph is shown. For comparison we include results of two other algorithms [11] and <ref> [12] </ref>. The grid based approach with a fixed grid spacing [11] has problems finding a reasonable approximation as soon as the approx Fig. 9. A fuzzy graph approximates an artificial function. <p> Fig. 10. An approximation of a fuzzy rule set generated by the algorithm of Wang&Mendel [11]. 10 classes were used for the input and output fuzzification. Fig. 11. An approximation of a fuzzy rule set generated by the algorithm of Hig-gins&Goodman <ref> [12] </ref>. The algorithm was run until a maximum of 10 classes was used for the input and output fuzzification. imated function shows extrema that do not fit onto that grid, as can be seen in figure 10. <p> Here some peaks of the function lie far from existing rule centers and as a result do not influence the resulting rule set. The other algorithm <ref> [12] </ref> uses a flexible partitioning, by introducing new membership functions at points of maximum error. Allowing a maximum of 10 membership functions for each variable results in an approximation as shown in figure 11.
Reference: [13] <author> Detlef Nauck and Rudolf Kruse, </author> <title> "Nefclass a neuro-fuzzy approach for the classification of data", </title> <booktitle> in Proceedings of the Symposium on Applied Computing, </booktitle> <year> 1995. </year>
Reference: [14] <author> Miguel Delgado and Antonio Gonzalez, </author> <title> "An inductive learning procedure to identify fuzzy systems", </title> <journal> Fuzzy Sets and Systems, </journal> <volume> vol. 55, </volume> <pages> pp. 121-132, </pages> <year> 1993. </year>
Reference: [15] <author> S. K. Halamuge and M. Glesner, </author> <title> "FuNe Deluxe: A group of fuzzy-neural methods for complex data analysis problems", </title> <booktitle> in Proceedings of the EUFIT'95, </booktitle> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: This parameter controls the time each station has to send mes sages, values were set within [0:01; 0:4] * number of additional stations (stations) represents the background workload on the network. Many additional stations communicating over the network will increase the traffic on the net work: <ref> [1; 15] </ref> Since the construction of the metamodel only depends on the example data these examples have to be representative. For this the planning of simulation experiments must be done carefully.
Reference: [16] <author> Lotfi A. </author> <title> Zadeh, </title> <journal> "Soft computing and fuzzy logic", IEEE Software, </journal> <pages> pp. 48-56, </pages> <month> Nov. </month> <year> 1994. </year>
Reference: [17] <author> Patrick K. Simpson, </author> <title> "Fuzzy min-max neural networks - part 1: Classification", </title> <journal> IEEE Transactions on Neural Networks, </journal> <volume> vol. 3, no. 5, </volume> <pages> pp. 776-786, </pages> <month> Sept. </month> <year> 1992. </year>
Reference: [18] <author> Patrick K. Simpson, </author> <title> "Fuzzy min-max neural networks - part 2: Clustering", </title> <journal> IEEE Transactions on Fuzzy Systems, </journal> <volume> vol. 1, no. 1, </volume> <pages> pp. 32-45, </pages> <month> Jan. </month> <year> 1993. </year>
Reference: [19] <author> Michael R. Berthold and Jay Diamond, </author> <title> "Constructive training of probabilistic neural networks", </title> <type> Neurocomputing, </type> <year> 1998. </year>
Reference: [20] <author> Lotfi A. Zadeh, </author> <title> "Fuzzy logic and the calculi of fuzzy rules and fuzzy graphs: A precis", Multi. Val. </title> <journal> Logic, </journal> <volume> vol. 1, </volume> <pages> pp. 1-38, </pages> <year> 1996. </year>
Reference: [21] <author> Klaus-Peter Huber and Michael R. Berthold, </author> <title> "Building precise classifiers with automatic rule extraction", </title> <booktitle> in IEEE International Conference on Neural Networks, 1995, </booktitle> <volume> 3, </volume> <pages> pp. 1263-1268. </pages>
Reference: [22] <author> Robert W. Blanning, </author> <booktitle> "The construction and implementation of metamodels", Simulation, </booktitle> <volume> vol. 24, </volume> <pages> pp. 177-184, </pages> <year> 1975. </year>
Reference-contexts: In the following section we will demonstrate how the proposed methodology can be used to build an auxiliary model (or meta-model, other approaches are discussed in <ref> [22] </ref>, [23], [24]) from data generated by simulation experiments with a real-world token bus model. The used token bus system belongs to the class of field bus systems, that is, a special type of communications systems, designed to connect machines and computers in a manufacturing environment.
Reference: [23] <author> J.P.C. Kleijnen, </author> <title> "Model behaviour: Regression metamodel summarization", </title> <journal> Encyclopedia of Systems and Control, </journal> <volume> vol. 5, </volume> <pages> pp. 3024-3030, </pages> <year> 1987. </year>
Reference-contexts: In the following section we will demonstrate how the proposed methodology can be used to build an auxiliary model (or meta-model, other approaches are discussed in [22], <ref> [23] </ref>, [24]) from data generated by simulation experiments with a real-world token bus model. The used token bus system belongs to the class of field bus systems, that is, a special type of communications systems, designed to connect machines and computers in a manufacturing environment.
Reference: [24] <author> Henri Pierreval, </author> <title> "Rule-based simulation metamodels", </title> <journal> Eu-ropean Journal of Operational Research, </journal> <volume> vol. 61, </volume> <pages> pp. 6-17, </pages> <year> 1992. </year>
Reference-contexts: In the following section we will demonstrate how the proposed methodology can be used to build an auxiliary model (or meta-model, other approaches are discussed in [22], [23], <ref> [24] </ref>) from data generated by simulation experiments with a real-world token bus model. The used token bus system belongs to the class of field bus systems, that is, a special type of communications systems, designed to connect machines and computers in a manufacturing environment.
References-found: 24

