URL: http://www.cs.caltech.edu/~eric/papers/permanent_fast.ps
Refering-URL: http://www.cs.caltech.edu/~eric/papers/papers.html
Root-URL: http://www.cs.caltech.edu
Title: A Permanent Formula With Many Zero-Valued Terms  
Author: Eric Bax and Joel Franklin 
Keyword: Key words algorithms, combinatorial problems, #P, permanent, finite difference, generating function.  
Address: ifornia, 91125  217-50, Pasadena, California, 91125  
Affiliation: Computer Science Department, California Institute of Technology 256-80, Pasadena, Cal  Department of Applied Mathematics, California Institute of Technology  
Note: AMS subject classifications 05,68  
Email: (eric@cs.caltech.edu).  (jnf@ama.caltech.edu).  
Date: June 19, 1997  
Abstract: Applying finite-differences to a generating function produces formulas for the permanent of a matrix. We present a setting of the finite-difference parameters for which the permanent formula has many zero-valued terms when applied to 0-1 matrices. We outline a method to reduce computation by eliminating sets of zero-valued terms and show that the method significantly increases the computation speed. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Bax. </author> <title> Tailoring the permanent formula to problem instances. </title> <publisher> CalTech-CS-TR-96-17 </publisher>
Reference-contexts: Also, note that the fraction of function calls avoided increases as the matrix size increases. 12 6 Discussion Some parameter settings may produce even more zero-valued terms. We have found that the number of zero-valued terms can be increased by tailoring the finite-difference parameters to problem instances <ref> [1] </ref>, and there is much more work to be done in this area. Furthermore, some settings may allow computational advantages by means other than producing zero-valued terms. Our procedure to collect sets of zero-valued terms is crude and simple.
Reference: [2] <author> E. Bax and J. Franklin. </author> <title> A finite-difference sieve to count paths and cycles by length. </title> <journal> Information Processing Letters. </journal> <month> 60 </month> <year> (1996) </year> <month> 171-176. </month>
Reference-contexts: For example, finite-difference formulas have been used to count paths and cycles in graphs <ref> [2] </ref>. For counting problems, all that is needed is a generating function with degree equal to the number of variables and with the multilinear term corresponding to the objects to be counted.
Reference: [3] <author> E. Bax and J. Franklin. </author> <title> A finite-difference sieve to compute the permanent. </title> <publisher> CalTech-CS-TR-96-04. </publisher>
Reference-contexts: Ryser [8] developed an inclusion and exclusion algorithm for the permanent. The algorithm has time complexity O (2 n poly n) and space complexity O (poly n). Finite-difference formulas <ref> [3] </ref> include Ryser's formula as a special case, and they have the same worst-case complexities. However, finite-difference formulas have some free parameters, and, in the average case, the computation can be significantly reduced by choosing appropriate parameter settings. For a parameter setting analyzed in [3], the expected fraction of zero-valued terms <p> Finite-difference formulas <ref> [3] </ref> include Ryser's formula as a special case, and they have the same worst-case complexities. However, finite-difference formulas have some free parameters, and, in the average case, the computation can be significantly reduced by choosing appropriate parameter settings. For a parameter setting analyzed in [3], the expected fraction of zero-valued terms goes to 100% as the matrix size increases. This paper introduces a superior parameter setting, with even more zero-valued terms. <p> A proof of this property is given in <ref> [3] </ref>. Intuitively, each D j acts as a derivative with respect to x j , so the composition D 1 D n finds the derivative with respect to every variable. Since the polynomial's terms have degree n or less, each term other than the multilinear term lacks some variable. <p> We will specify expression (9) for three finite-difference settings the inclusion and exclusion setting, a setting previously used to produce many zero-valued terms <ref> [3] </ref>, and the new setting that produces more zero-valued terms. Setting u = 1 and v = 0 produces the inclusion and exclusion formula [8, 3]. <p> We will specify expression (9) for three finite-difference settings the inclusion and exclusion setting, a setting previously used to produce many zero-valued terms [3], and the new setting that produces more zero-valued terms. Setting u = 1 and v = 0 produces the inclusion and exclusion formula <ref> [8, 3] </ref>.
Reference: [4] <author> E. Bax and J. Franklin. </author> <title> Expected fraction of zero-valued terms in a finite-difference formula for the permanent. </title> <publisher> CalTech-CS-TR-97-02. </publisher>
Reference: [5] <author> M. R. Jerrum and A. Sinclair. </author> <title> Approximating the permanent. </title> <journal> SIAM Journal on Computing. </journal> <volume> 18(6) </volume> <pages> 1149-1178. </pages> <month> December </month> <year> 1989. </year>
Reference-contexts: In the formula introduced in this paper, terms with many variables x j assigned zero and terms with about the same number of positive and negative assignments are likely to have small values. (For information on other approaches to estimating the permanent, see <ref> [5, 6, 7] </ref>.) Finally, finite-difference formulas can be developed for other problems. For example, finite-difference formulas have been used to count paths and cycles in graphs [2].
Reference: [6] <author> M. Jerrum and U. Vazirani. </author> <title> A mildly exponential approximation algorithm for the permanent. </title> <journal> Algorithmica. </journal> <volume> 16(1996) </volume> <pages> 392-401. </pages>
Reference-contexts: In the formula introduced in this paper, terms with many variables x j assigned zero and terms with about the same number of positive and negative assignments are likely to have small values. (For information on other approaches to estimating the permanent, see <ref> [5, 6, 7] </ref>.) Finally, finite-difference formulas can be developed for other problems. For example, finite-difference formulas have been used to count paths and cycles in graphs [2].
Reference: [7] <author> N. Karmarkar, R. Karp, R. Lipton, L. Lovasz, and M. Luby, </author> <title> A Monte Carlo algorithm for estimating the permanent. </title> <journal> SIAM Journal on Computing. </journal> <volume> 22(2) </volume> <pages> 284-293. </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: In the formula introduced in this paper, terms with many variables x j assigned zero and terms with about the same number of positive and negative assignments are likely to have small values. (For information on other approaches to estimating the permanent, see <ref> [5, 6, 7] </ref>.) Finally, finite-difference formulas can be developed for other problems. For example, finite-difference formulas have been used to count paths and cycles in graphs [2].
Reference: [8] <author> H. J. Ryser. </author> <title> Combinatorial Mathematics. </title> <booktitle> The Mathematical Association of America 1963, Ch. </booktitle> <pages> 2. </pages>
Reference-contexts: The problem of computing the 0-1 matrix permanent is #P-complete [9]. For example, #P problems include counting the Hamiltonian cycles in a graph, vertex colorings, and assignments that satisfy a CNF formula. Ryser <ref> [8] </ref> developed an inclusion and exclusion algorithm for the permanent. The algorithm has time complexity O (2 n poly n) and space complexity O (poly n). Finite-difference formulas [3] include Ryser's formula as a special case, and they have the same worst-case complexities. <p> We will specify expression (9) for three finite-difference settings the inclusion and exclusion setting, a setting previously used to produce many zero-valued terms [3], and the new setting that produces more zero-valued terms. Setting u = 1 and v = 0 produces the inclusion and exclusion formula <ref> [8, 3] </ref>.
Reference: [9] <author> L. G. Valiant. </author> <title> The complexity of computing the permanent. </title> <journal> Theoretical Computer Science. </journal> <volume> 8(1979) </volume> <pages> 189-201. </pages>
Reference-contexts: If the rows represent workers, the columns represent jobs, and one-valued entries indicate worker-job compatibility, then the permanent is the number of assignments in which each worker has a job and each job has a worker. The problem of computing the 0-1 matrix permanent is #P-complete <ref> [9] </ref>. For example, #P problems include counting the Hamiltonian cycles in a graph, vertex colorings, and assignments that satisfy a CNF formula. Ryser [8] developed an inclusion and exclusion algorithm for the permanent. The algorithm has time complexity O (2 n poly n) and space complexity O (poly n).
References-found: 9

