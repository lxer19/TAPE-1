URL: ftp://ams.sunysb.edu/pub/geometry/msi-workshop/95/teichman-full.ps.gz
Refering-URL: http://ams.sunysb.edu/~held/proc_usb_comp_geo-95.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Probabilistic algorithms for efficient grasping and fixturing Extended Abstract  
Author: Marek Teichmann 
Date: July 14, 1995  
Abstract: Given an object with n points on its boundary where fingers can be placed, we give algorithms to select a "strong" grasp with a minimal number c of fingers (up to a logarithmic factor) for several measures of goodness. Along similar lines, given an integer c, we find the "best" c log c finger grasp for a small constant . Depending on the measure, the algorithms run in expected time O(c 2 n 1+ffi ) or O((nc) 1+ffi + c 4 log 4 n). Here ffi is any positive constant. This setting generalizes to higher dimensions in the context of finding sets of fixtures, and we provide randomized approximation algorithms there too. These problems translate into a collection of convex set covering problems. We are given a convex set L, and a set of points U with L conv(U ) in dimension d. There are two basic variations: (1) what is the smallest subset C of U or cover with L conv(C) and (2) given an integer c, what is the largest with L conv(C) among all C U of c points. We present an algorithmic framework which handles all these problems in a uniform way and give algorithms for specific instances of L including convex polytopes and balls. It is derived from an algorithm for polytope covering and approximation by Clarkson [Cla93]. Let fl = 1=bd=2c. For both types of problems, when L is a polytope, we get the same expected time bounds, and for a ball, the expected running time is O(n 1+ffi + (nc) 1=(1+fl=(1+ffi)) + c log(n=c)(c log c) bd=2c ) for fixed d. We also give bounds when d is not constant.
Abstract-found: 1
Intro-found: 1
Reference: [AF92] <author> D. Avis and K. Fukuda. </author> <title> A pivoting algorithm for convex hulls and vertex enumeration of arrangements and polyhedra. </title> <journal> Discrete Comput. Geom., </journal> <volume> 8 </volume> <pages> 295-313, </pages> <year> 1992. </year> <month> 9 </month>
Reference-contexts: This takes time O (jRj bd=2c ) for fixed d 4 (or O (jRj log jRj) if d 3) [CS89, Cha93]. For variable d, we can use the algorithm in <ref> [AF92] </ref>, which finds f facets of the convex hull of n points in dimension d in time O (ndf ). As mentioned before, lemmas 3.1, 3.2, and 3.3 apply when we replace the polytope L by a ball B (r), and this guarantees correctness of the algorithm. <p> B (r) is: O (n 1+ffi + (nc) 1=(1+fl=(1+ffi)) + c log (n=c)(c log c) bd=2c ) for fixed d, or O (ncd log (n=c) + cd 2 2 d log (n=c)(4cd log c) bd=2c+1 ) for any d (and non-degenerate convex hull of the covers) using the result in <ref> [AF92] </ref> and crude bounds on the complexity of the convex hull. 7 [MinCover-P]: Clarkson's original algorithm solves this approximation problem. The geometric object to be covered is a fixed polytope P containing the origin. Let the positive side of a facet of a polytope be the side containing the polytope.
Reference: [BG94] <author> H. Bronnimann and M. T. Goodrich. </author> <title> Almost optimal set covers in finite vc-dimension. </title> <booktitle> In Proc. 10th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 293-302, </pages> <year> 1994. </year>
Reference-contexts: If we ask for the smallest possible number of facets, this problem is NP-complete [DJ90]. Several approximation algorithms for this problem have been presented, deterministic <ref> [DJ90, BG94] </ref>, and randomized [Cla93]. Consider U as the intersection of a set of half-planes. In the above-mentioned algorithms, S is found by eliminating facets (halfplanes) from U , while making sure that the new polytope is still contained in L. <p> This fact does not use the geometry of the situation at all, and one wonders whether the lower bound on s could be reduced in this specific instance where the points of U are in (non-strictly) convex position. In fact 6 the deterministic algorithm in <ref> [BG94] </ref> which uses "-nets reduces the approximation factor to O (1) for the three dimensional version of a closely related problem, see section 5. <p> A similar lemma also appears in <ref> [BG94] </ref>. This implies together with lemma 3.2 that the expected number of iterations of the loop in find cover is 1 + 8c lg (n=c). These lemmas hold for small values of c (c &gt; 4), which makes the algorithm useful for small size covers. <p> It runs in time O (n d+1 ). There is also a deterministic analogue of Clarkson's algorithm which solves this problem and which provides a O (d log c)-approximation <ref> [BG94] </ref> in time O It is easy to verify that these hitting set techniques also apply to our MinCover-B problem as well as the more general versions.
Reference: [BMK94] <author> D. Baraff, R. Mattikalli, and P. Khosla. </author> <title> Minimal fixturing of frictionless assemblies: Complexity and algorithms. </title> <type> Report CMU-RI-TR-94-08, </type> <institution> The Robotics Inst., Carnegie Mellon University, </institution> <address> Pittsburgh, PA, </address> <year> 1994. </year>
Reference-contexts: The previous framework generalizes to this case by essentially concatenating the force-torque vectors for each object and working in R 6k where k is the number of objects <ref> [BMK94] </ref>. Let m i be the center of mass of object i. In the following definitions 0 is the 6 dimensional zero vector. For each object K i and contact point p let i (p) = [n (p); (p m i ) fi n (p)]. <p> In this context force-torque closure is defined analogously to the previous one-object case: a set G of fixtures (i.e. of these generalized force-torque vectors) must have the property that o is in the interior of conv ( fl (G)). One problem addressed in <ref> [BMK94] </ref> is to select the smallest subset G of fixtures among a finite set S of possible fixtures that have this property. Again, there is a bound of 12k on the number of fixtures required to achieve force-torque closure. <p> The application at hand will determine which measure will be used. 2 Related results Exact algorithms for the problems mentioned in the previous section that run in polynomial time seem unlikely. In fact problems similar to these have been shown to be NP-hard <ref> [BMK94] </ref> or NP-complete [DJ90]. In [DJ90], it is shown that the problem of finding a minimal-facet separating polytope for arbitrary nested polyhedra is NP-hard. We therefore consider approximation algorithms for the MinCover-* and MaxScale-* problems.
Reference: [Cha93] <author> B. Chazelle. </author> <title> An optimal convex hull algorithm in any fixed dimension. </title> <journal> Discrete Comput. Geom., </journal> <volume> 10 </volume> <pages> 377-409, </pages> <year> 1993. </year>
Reference-contexts: This can be done by computing the convex hull of R and finding a facet that is at a distance of less than r to the origin. This takes time O (jRj bd=2c ) for fixed d 4 (or O (jRj log jRj) if d 3) <ref> [CS89, Cha93] </ref>. For variable d, we can use the algorithm in [AF92], which finds f facets of the convex hull of n points in dimension d in time O (ndf ).
Reference: [Cla93] <author> Kenneth L. Clarkson. </author> <title> Algorithms for polytope covering and approximation. </title> <booktitle> In Proc. 3rd Workshop Algorithms Data Struct., volume 709 of Lecture Notes in Computer Science, </booktitle> <pages> pages 246-252, </pages> <year> 1993. </year>
Reference-contexts: Let fl (c) be this maximum. In the approximation version, we ask for a d log c fl -approximation of the best cover C. In the sequel, we will replace L by various convex sets. In this paper we present an algorithmic framework derived from an algorithm by Clarkson <ref> [Cla93] </ref> for polytope covering that yields efficient randomized approximation algorithms for the above problems for various types of the set L in fact any set L that has a Strong Violation oracle [GLS88]. <p> In [DJ90], it is shown that the problem of finding a minimal-facet separating polytope for arbitrary nested polyhedra is NP-hard. We therefore consider approximation algorithms for the MinCover-* and MaxScale-* problems. The MinCover-P problem arises in a dual form in the context of separating two nested polyhedra <ref> [MS92b, Cla93] </ref>. In this problem, we are given two polyhedra L and U with U L, and we want to find a separating polytope S with U S L with small number of facets. If we ask for the smallest possible number of facets, this problem is NP-complete [DJ90]. <p> If we ask for the smallest possible number of facets, this problem is NP-complete [DJ90]. Several approximation algorithms for this problem have been presented, deterministic [DJ90, BG94], and randomized <ref> [Cla93] </ref>. Consider U as the intersection of a set of half-planes. In the above-mentioned algorithms, S is found by eliminating facets (halfplanes) from U , while making sure that the new polytope is still contained in L. <p> Finally the heart of the work is done in find bad facet whose variations are described in the next section. The correctness of the general algorithm follows from a series of lemmas. The following lemmas were shown in <ref> [Cla93] </ref> for L a convex polytope, but we actually apply to any convex set L. Lemma 3.1 (Clarkson) Let L be any convex set not contained in conv (R), with a point p on the negative side of some facet F of conv (R). <p> By trading off preprocessing time with query time, one can get an expected time of O (n 1+ffi + c` 1+ffi + c (`c) 1=(1+fl=(1+ffi)) + (nc) 1=(1+fl=(1+ffi)) ) <ref> [Cla93] </ref>. [MaxScale-B]: Let r fl (s) be the radius of the largest ball centered at the origin and contained in a cover of size s. In this problem we are given a cover size c, and we would like to find r fl (c).
Reference: [CM93] <author> B. Chazelle and J. Matousek. </author> <title> On linear-time deterministic algorithms for optimization problems in fixed dimension. </title> <booktitle> In Proc. 4th ACM-SIAM Sympos. Discrete Algorithms, </booktitle> <pages> pages 281-290, </pages> <year> 1993. </year>
Reference-contexts: The radius found is almost optimal for that cover size. Here LP (n; d) is the time required to solve a linear program of size n and dimension d. Currently the best deterministic algorithm runs in time O (d 7d+o (d) n) time <ref> [CM93] </ref> and the best randomized algorithm in time O (d 2 n + e O ( p d log d) ).
Reference: [CS89] <author> K. L. Clarkson and P. W. Shor. </author> <title> Applications of random sampling in computational geometry, II. </title> <journal> Discrete Comput. Geom., </journal> <volume> 4 </volume> <pages> 387-421, </pages> <year> 1989. </year>
Reference-contexts: Then given that an L-facet F is found, the probability that an iteration of find cover will be successful, (the set U F satisfies w (U F ) w (U )=j), is at least 1/2. In fact this probability can be improved to 1 1=n (1) <ref> [CS89] </ref>. This can be used to make the algorithm run in the same running time but with high probability instead of expected time. This lower bound on s determines the approximation factor for the cover. <p> This can be done by computing the convex hull of R and finding a facet that is at a distance of less than r to the origin. This takes time O (jRj bd=2c ) for fixed d 4 (or O (jRj log jRj) if d 3) <ref> [CS89, Cha93] </ref>. For variable d, we can use the algorithm in [AF92], which finds f facets of the convex hull of n points in dimension d in time O (ndf ).
Reference: [DJ90] <author> G. Das and D. Joseph. </author> <title> The complexity of minimum convex nested polyhedra. </title> <booktitle> In Proc. 2nd Canad. Conf. Comput. Geom., </booktitle> <pages> pages 296-301, </pages> <year> 1990. </year>
Reference-contexts: The application at hand will determine which measure will be used. 2 Related results Exact algorithms for the problems mentioned in the previous section that run in polynomial time seem unlikely. In fact problems similar to these have been shown to be NP-hard [BMK94] or NP-complete <ref> [DJ90] </ref>. In [DJ90], it is shown that the problem of finding a minimal-facet separating polytope for arbitrary nested polyhedra is NP-hard. We therefore consider approximation algorithms for the MinCover-* and MaxScale-* problems. The MinCover-P problem arises in a dual form in the context of separating two nested polyhedra [MS92b, Cla93]. <p> The application at hand will determine which measure will be used. 2 Related results Exact algorithms for the problems mentioned in the previous section that run in polynomial time seem unlikely. In fact problems similar to these have been shown to be NP-hard [BMK94] or NP-complete <ref> [DJ90] </ref>. In [DJ90], it is shown that the problem of finding a minimal-facet separating polytope for arbitrary nested polyhedra is NP-hard. We therefore consider approximation algorithms for the MinCover-* and MaxScale-* problems. The MinCover-P problem arises in a dual form in the context of separating two nested polyhedra [MS92b, Cla93]. <p> In this problem, we are given two polyhedra L and U with U L, and we want to find a separating polytope S with U S L with small number of facets. If we ask for the smallest possible number of facets, this problem is NP-complete <ref> [DJ90] </ref>. Several approximation algorithms for this problem have been presented, deterministic [DJ90, BG94], and randomized [Cla93]. Consider U as the intersection of a set of half-planes. <p> If we ask for the smallest possible number of facets, this problem is NP-complete [DJ90]. Several approximation algorithms for this problem have been presented, deterministic <ref> [DJ90, BG94] </ref>, and randomized [Cla93]. Consider U as the intersection of a set of half-planes. In the above-mentioned algorithms, S is found by eliminating facets (halfplanes) from U , while making sure that the new polytope is still contained in L.
Reference: [FC92] <author> C. Ferrari and J. Canny. </author> <title> Planning optimal grasps. </title> <booktitle> In 1992 International Conference on Robotics and Automation, </booktitle> <pages> pages 2290-2295. </pages> <publisher> IEEE, </publisher> <year> 1992. </year>
Reference-contexts: In the same time bound, we can solve the approximation version of MaxScale-P (here c is an input parameter). Further applications. Other efficiency measures closely related to the previous one have been proposed, see for example <ref> [FC92] </ref>. Yet another measure was proposed by W. Meyer and was described in [Mis95] see this paper for a survey of grasp measures. Imagine an adversarial external finger capable of applying a force of an arbitrary magnitude on the grasped object.
Reference: [GLS88] <author> M. Grotschel, L. Lovasz, and A. Schrijver. </author> <title> Geometric Algorithms and Combinatorial Optimization. Algorithms and Combinatorics. </title> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: In this paper we present an algorithmic framework derived from an algorithm by Clarkson [Cla93] for polytope covering that yields efficient randomized approximation algorithms for the above problems for various types of the set L in fact any set L that has a Strong Violation oracle <ref> [GLS88] </ref>. For example, the approximation versions of MaxScale-B and MinCover-B can be solved in expected time O ((n 1+ffi + (nc) 1=(1+fl=(1+ffi)) ) + c log (n=c)(c log c) bd=2c ) when d is fixed, using sophisticated data structures. Suppose c is the size of the optimal cover.
Reference: [Gol95] <author> M. Goldwasser. </author> <title> A survey of linear programming in randomized subexponential time. </title> <journal> SIGACT News, </journal> <volume> 26(2) </volume> <pages> 96-104, </pages> <year> 1995. </year>
Reference-contexts: Currently the best deterministic algorithm runs in time O (d 7d+o (d) n) time [CM93] and the best randomized algorithm in time O (d 2 n + e O ( p d log d) ). See <ref> [Gol95] </ref> for this bound and a recent survey. 3 The computational framework Consider a set U of n points in R d , and a convex set L with o 2 L conv (U ).
Reference: [Gru67] <author> B. Grunbaum. </author> <title> Convex Polytopes. </title> <publisher> Wiley, </publisher> <address> New York, NY, </address> <year> 1967. </year>
Reference-contexts: The definition of residual radius still applies, we use r 6k (). For the nasty finger measure, we simply take the direct sum of all the conv ((@K i )). This is a special case of taking Minkowski sums of polytopes, and the result is still convex <ref> [Gru67] </ref>. This measure is particularly useful when the fixturing is done for machining purposes. Here a "tool" is applied to the boundary and can apply potentially high forces on the object. Other force-torques due to acceleration and gravity are either non-existent or negligible.
Reference: [KMY92] <author> D. Kirkpatrick, B. Mishra, and C. Yap. </author> <title> Quantitative Steinitz's Theorem with Applications to Multifingered Grasping. </title> <journal> Discrete Comput. Geom., </journal> <volume> 7 </volume> <pages> 295-318, </pages> <year> 1992. </year>
Reference-contexts: For polyhedral objects they give an algorithm for find such a grasp in linear time. However there is no guarantee on the "quality" of the grasp. In <ref> [KMY92] </ref> such a measure or efficiency is proposed. It measures the amount of external force and torque that can be resisted by applying at most a unit force distributed among the grasp points. <p> Also denote by @K the boundary of the object K. The efficiency of a grasp G is then r ((G)). Note that it cannot be greater than r ((@K)). We would like to obtain grasps of high efficiency but with few fingers. These are two conflicting goals <ref> [KMY92] </ref>, so in this paper we provide algorithms for optimizing one quantity or the other. Optimization problems. At this point let us describe the setting for the optimization algorithms in full generality. Let () be some grasp efficiency measure, generalized to higher dimension (see below). <p> The above separation framework amounts to covering L by the convex hull of a subset of U and this is exactly what we need. For the MaxScale-B problem, <ref> [KMY92] </ref> give an algorithm that finds a cover C of size c containing 4 a ball of radius r (C) = 1 3d 2d 2 =c for n c 13 d d (d+3)=2) in time O (LP (n; d)c). The radius found is almost optimal for that cover size. <p> If no such facet exists it is easily seen that P conv (R). Each step above can be done in O (LP (jRj; d)) time via linear programming. The linear program is explicitly written in <ref> [KMY92] </ref>. The expected running time of find bad facet is then O (d 3 c log c+ e O ( d log d) ). <p> It would be interesting to find a faster method. One way might be to approximate the residual radius using the algorithm of <ref> [KMY92] </ref>. On a different note, the physical interpretation of the fixturing metrics do not seem to be as natural as the corresponding ones for a single object. It would be interesting to find a more natural definition.
Reference: [Mat92] <author> J. Matousek. </author> <title> Reporting points in halfspaces. </title> <journal> Comput. Geom. Theory Appl., </journal> <volume> 2(3) </volume> <pages> 169-186, </pages> <year> 1992. </year>
Reference-contexts: This is repeated O (c log n=c) times over the entire algorithm. For fixed d, the whole process can be done in expected time O (n 1+ffi + (nc) 1=(1+fl=(1+ffi)) ) using sophisticated data structures for half-plane range queries <ref> [Mat92] </ref>. Finally, note that the expected number of oracle calls (half-plane emptiness tests) is O (f c log (n=c)) where f is the number of facets of conv (R).
Reference: [Mis91] <author> Bud Mishra. </author> <title> Workholding Analysis, Design and Planning. </title> <booktitle> In IROS '91, </booktitle> <address> Osaka, Japan, </address> <month> November </month> <year> 1991. </year>
Reference-contexts: Fixture elements or fixtures are positioned in contact with the objects to achieve this. Often there is only a finite set of possible placements due to the construction of workholding table <ref> [Mis91] </ref>. In this setting, forces applied to an object are due both to contacts between objects, and the fixtures. As in grasping, it is desirable to use a small number of fixtures, and/or limit the forces they must apply on the objects.
Reference: [Mis95] <author> B. Mishra. </author> <title> Grasp metrics: Optimality and complexity. </title> <editor> In K. Goldberg, D. Halperin, J.C. Latombe, and R. Wilson, editors, </editor> <booktitle> Algorithmic Foundations of Robotics, </booktitle> <pages> pages 137-166. </pages> <publisher> A.K. Peters, </publisher> <year> 1995. </year>
Reference-contexts: In the same time bound, we can solve the approximation version of MaxScale-P (here c is an input parameter). Further applications. Other efficiency measures closely related to the previous one have been proposed, see for example [FC92]. Yet another measure was proposed by W. Meyer and was described in <ref> [Mis95] </ref> see this paper for a survey of grasp measures. Imagine an adversarial external finger capable of applying a force of an arbitrary magnitude on the grasped object.
Reference: [MNP90] <author> Xanthippi Markenscoff, Luqun Ni, and Christoph H. Papadimitriou. </author> <title> The Geometry of Grasping. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 9(1), </volume> <month> February </month> <year> 1990. </year>
Reference-contexts: See for example <ref> [MNP90, MSS87] </ref> for a more detailed description. The contacts being frictionless, a finger can only apply force f on the body in the direction of the inward pointing normal n (p) at the point p.
Reference: [MS92a] <author> J. Matousek and O. Schwarzkopf. </author> <title> Linear optimization queries. </title> <booktitle> In Proc. 8th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 16-25, </pages> <year> 1992. </year>
Reference-contexts: The entire optimal cover algorithm runs in expected time O (ncd log (n=c) + d 3 c 2 log c log (n=c) + c log (n=c)e O ( d log d) ): For fixed d, we can also use linear programming queries <ref> [MS92a] </ref>. For any arbitrary positive ffi, each query takes time O ((n log 2d+1 n)=t fl ) after a preprocessing step taking O (t 1+ffi ) time and space (n t n bd=2c ).
Reference: [MS92b] <author> J. S. B. Mitchell and S. Suri. </author> <title> Separation and approximation of polyhedral surfaces. </title> <booktitle> In Proc. 3rd ACM-SIAM Sympos. Discrete Algorithms, </booktitle> <pages> pages 296-306, </pages> <year> 1992. </year>
Reference-contexts: In [DJ90], it is shown that the problem of finding a minimal-facet separating polytope for arbitrary nested polyhedra is NP-hard. We therefore consider approximation algorithms for the MinCover-* and MaxScale-* problems. The MinCover-P problem arises in a dual form in the context of separating two nested polyhedra <ref> [MS92b, Cla93] </ref>. In this problem, we are given two polyhedra L and U with U L, and we want to find a separating polytope S with U S L with small number of facets. If we ask for the smallest possible number of facets, this problem is NP-complete [DJ90]. <p> This is done using the polarity duality transformation. This in turn can be cast as a Hitting Set problem <ref> [MS92b] </ref>. We refer the reader to this paper for the details of this transformation. The algorithm in [MS92b] can be used to provide an approximation algorithm for the MinCover-P problem (or its dual) using a greedy heuristic, with an approximation factor of d log n. <p> This is done using the polarity duality transformation. This in turn can be cast as a Hitting Set problem <ref> [MS92b] </ref>. We refer the reader to this paper for the details of this transformation. The algorithm in [MS92b] can be used to provide an approximation algorithm for the MinCover-P problem (or its dual) using a greedy heuristic, with an approximation factor of d log n. It runs in time O (n d+1 ).
Reference: [MSS87] <author> B. Mishra, J.T. Schwartz, and M. Sharir. </author> <title> On the Existence and Synthesis of Multifinger Positive Grips. </title> <journal> Algorithmica, </journal> <volume> 2 </volume> <pages> 541-558, </pages> <year> 1987. </year>
Reference-contexts: See for example <ref> [MNP90, MSS87] </ref> for a more detailed description. The contacts being frictionless, a finger can only apply force f on the body in the direction of the inward pointing normal n (p) at the point p. <p> Thus we obtain a set U = (S) in force-torque space of n points. For a set G S of c points, we call G a c-finger closure grasp if the interior of conv (f (p) : p 2 Gg) contains the origin o. It is shown in <ref> [MSS87] </ref> that for all but a certain class of objects having a boundary defined by an exceptional surface (a surface of revolution, for example) there is such a set of size c 12. For polyhedral objects they give an algorithm for find such a grasp in linear time.
Reference: [Tei95] <author> M. Teichmann. Grasping and Fixturing: </author> <title> Theory and Practice. </title> <type> Ph.D. thesis, </type> <note> in preparation, </note> <institution> New York Univ., </institution> <address> New York, NY, </address> <year> 1995. </year> <month> 10 </month>
Reference-contexts: In addition, if the object K is polyhedral, then (K) is a set of two-dimensional polygons in R 6 , hence conv ((@K)) is also polyhedral <ref> [Tei95] </ref>. The corresponding optimization problems are MinCover-P and MaxScale-P. We now consider the case of grasping several objects that are possibly in contact with each other, using a set of fingers, or fixture elements.
References-found: 21

