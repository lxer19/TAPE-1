URL: ftp://ftp.cs.pitt.edu/melhem/parcomp.ps
Refering-URL: http://www.cs.pitt.edu/~melhem/research/parallel/lb.html
Root-URL: 
Title: A Load Balancing Package on Distributed Memory Systems and its Application to Particle-Particle Particle-Mesh (P3M) Methods  
Author: X. Yuan C. Salisbury D. Balsara and R. Melhem 
Address: Urbana-Champain.  
Affiliation: 1 Department of Computer Science, The Univ. of Pittsburgh and 2 The Nat. Center for Supercomputing Applications, The Univ. of Illinois at  
Abstract: We present a tool, Bisect, for balanced decomposition of spatial domains. In addition to applying a nested bisection algorithm to determine the boundaries of each subdomain, Bisect replicates a user specified zone along the boundaries of the subdomain in order to minimize future interactions between subdomains. Results of running the tool on the Cray T3D system using both shared memory operations and MPI communications are reported and discussed. In addition, Bisect is used in a parallel implementation of a particle-particle/particle-mesh (P3M) simulation program on the Cray T3D system. The performance of the P3M program with different load-balancing criteria is evaluated and compared. The results show that the use of the Bisect package balances the load efficiently and minimizes communication on the T3D massively parallel system.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Balsara, D.S. and Brandt, A., </author> <title> "Multilevel Methods for Fast Solution of N-Body and Hybrid Systems", </title> <journal> Int. Ser. Num. Math, </journal> <volume> 98, 131. </volume> <year> 1991. </year>
Reference-contexts: This package can be used for a large class of scientific applications which exhibit spatially dependent fine-grained parallelism. Examples include Molecular Dynamics and N-body simulations [7, 8], Finite Elements and Finite Difference methods on irregular grids, Algebraic Multigrid computations, and particle-particle/particle-mesh (P 3 M ) methods <ref> [1, 4, 5, 7] </ref>. To demonstrate the load-balancing capability of Bisect, we apply it in a parallel implementation of the P3M method. The P3M method is an efficient N-body simulation method which splits the interparticle forces into a rapidly-varying short range part and a slowly-varying long range part. <p> There is a close similarity between this problem and problems in plasma physics. The program is based on the algorithm given in Hockney and Eastwood [7] though other algorithms like the one in Balsara and Brandt <ref> [1] </ref> would also benefit from the strategies developed here. Thus the utility of Bisect extends to almost all forms of plasma physics simulations. The P 3 M algorithm evaluates the gravitational force on a system of self-gravitating particles.
Reference: [2] <author> Bokhari, S.H., </author> <title> "Assignment problems in Parallel and Distributed Computing", </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1981. </year>
Reference-contexts: The Bisect package runs on a distributed memory system of p processors, where p is power of 2. It assumes that each processor initially stores n = N p objects distributed over the entire physical domain. When invoked, Bisect uses a nested bisection algorithm <ref> [2] </ref> to redistribute the objects among the processors such that: * each processor is assigned objects that fall in a rectangular 3-dimensional subdomain, and * the sum of the weights of the objects assigned to each processor is almost the same for all processors.
Reference: [3] <author> Cybenko G., </author> <title> "Dynamic Load Balancing for Distributed Memory Multiprocessors", </title> <journal> J. of Parallel and Distributed Computing, </journal> <volume> 7, </volume> <pages> 279-301, </pages> <year> 1989. </year>
Reference-contexts: Such a rebalancing redistributes the N 2 i objects in a processor group among the p 2 i processors in that group. A simple dimension exchange algorithm <ref> [3] </ref> is adequate for that purpose.
Reference: [4] <author> Ferrell, R. C. and Bertschinger E. </author> <title> "A Parallel Processing Algorithm for Computing Short-Range Particle Forces with Inhomogeneous Particle Distributions." </title> <booktitle> In proceeding of the 1995 Society for Computer Simulation Multiconference, </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: This package can be used for a large class of scientific applications which exhibit spatially dependent fine-grained parallelism. Examples include Molecular Dynamics and N-body simulations [7, 8], Finite Elements and Finite Difference methods on irregular grids, Algebraic Multigrid computations, and particle-particle/particle-mesh (P 3 M ) methods <ref> [1, 4, 5, 7] </ref>. To demonstrate the load-balancing capability of Bisect, we apply it in a parallel implementation of the P3M method. The P3M method is an efficient N-body simulation method which splits the interparticle forces into a rapidly-varying short range part and a slowly-varying long range part.
Reference: [5] <author> Ferrell, R. C. and Bertschinger E. </author> <title> "Particle-Mesh Methods on the Connection Machine." </title> <journal> In Int'l Journal of Modern Physics, </journal>
Reference-contexts: This package can be used for a large class of scientific applications which exhibit spatially dependent fine-grained parallelism. Examples include Molecular Dynamics and N-body simulations [7, 8], Finite Elements and Finite Difference methods on irregular grids, Algebraic Multigrid computations, and particle-particle/particle-mesh (P 3 M ) methods <ref> [1, 4, 5, 7] </ref>. To demonstrate the load-balancing capability of Bisect, we apply it in a parallel implementation of the P3M method. The P3M method is an efficient N-body simulation method which splits the interparticle forces into a rapidly-varying short range part and a slowly-varying long range part. <p> For this reason, it has long been recognized that it is much easier to vectorize this step compared to vectorizing the density assignment step <ref> [5] </ref>. When Bisect is used to distribute the particles uniformly among processors, the subdo-main assigned to each processor may be different from the part of the PM mesh assigned to that processor (compare Figures 3 and 2).
Reference: [6] <author> Fox, G., Johnson, M., Lyzenga, G., Otto, S., Salmon, J., and Walker, D. </author> <title> "Solving Problems on Concurrent Processors". </title> <publisher> Prentice-Hall, </publisher> <year> 1988. </year>
Reference-contexts: The package uses the nested bisection method to achieve dynamic load balancing for applications in which computations are non-uniformly distributed over some physical domain <ref> [6] </ref>. Specifically, given N objects, each associated with a position in a physical domain, Bisect decomposes the domain into disjoint sub-domains. Each subdomain, along with the objects it contains, is mapped to a different processor.
Reference: [7] <author> R.W.Hockney and J.W. Eastwood, </author> <title> "Computer Simulation Using Particles." </title> <address> New York: </address> <publisher> Mcgraw Hill International, </publisher> <year> 1981. </year> <month> 18 </month>
Reference-contexts: The nested bisection technique and the domain extension technique are combined seamlessly in the Bisect package to achieve good performance. This package can be used for a large class of scientific applications which exhibit spatially dependent fine-grained parallelism. Examples include Molecular Dynamics and N-body simulations <ref> [7, 8] </ref>, Finite Elements and Finite Difference methods on irregular grids, Algebraic Multigrid computations, and particle-particle/particle-mesh (P 3 M ) methods [1, 4, 5, 7]. To demonstrate the load-balancing capability of Bisect, we apply it in a parallel implementation of the P3M method. <p> This package can be used for a large class of scientific applications which exhibit spatially dependent fine-grained parallelism. Examples include Molecular Dynamics and N-body simulations [7, 8], Finite Elements and Finite Difference methods on irregular grids, Algebraic Multigrid computations, and particle-particle/particle-mesh (P 3 M ) methods <ref> [1, 4, 5, 7] </ref>. To demonstrate the load-balancing capability of Bisect, we apply it in a parallel implementation of the P3M method. The P3M method is an efficient N-body simulation method which splits the interparticle forces into a rapidly-varying short range part and a slowly-varying long range part. <p> There is a close similarity between this problem and problems in plasma physics. The program is based on the algorithm given in Hockney and Eastwood <ref> [7] </ref> though other algorithms like the one in Balsara and Brandt [1] would also benefit from the strategies developed here. Thus the utility of Bisect extends to almost all forms of plasma physics simulations. The P 3 M algorithm evaluates the gravitational force on a system of self-gravitating particles. <p> Furthermore, it also optimizes the inter-processor communication when the domain extension technique is used, as described next. Density Assignment This phase calculates the densities at the grid points of the PM mesh by interpolating particle masses. The second-order Triangular Shaped Cloud (TSC) scheme <ref> [7] </ref> is used for the interpolation. In this scheme, a particle's mass is spread over a cube in three dimensions with 27 grid points centered on the nearest grid point (NGP). The weight given to each of these points is the product of three weights, one for each dimension.
Reference: [8] <author> Warren, </author> <title> M.S. and Salmon, J.K "A Parallel Hashed Oct-tree N-body Algorithm". </title> <booktitle> In Supercomputing '93, </booktitle> <pages> PP. 12-21, </pages> <year> 1993. </year>
Reference-contexts: The nested bisection technique and the domain extension technique are combined seamlessly in the Bisect package to achieve good performance. This package can be used for a large class of scientific applications which exhibit spatially dependent fine-grained parallelism. Examples include Molecular Dynamics and N-body simulations <ref> [7, 8] </ref>, Finite Elements and Finite Difference methods on irregular grids, Algebraic Multigrid computations, and particle-particle/particle-mesh (P 3 M ) methods [1, 4, 5, 7]. To demonstrate the load-balancing capability of Bisect, we apply it in a parallel implementation of the P3M method.
Reference: [9] <author> X. Yuan, B. He, D. Balsara and R. Melhem, </author> <title> "A Load Balancing Package for Domain Decomposition in Distributed Memory System," </title> <booktitle> International conference and Exhibition on High-Performance Computing and Networking(HPCN), </booktitle> <volume> LNCS 1067, </volume> <pages> pages 547-554, </pages> <address> Brussel, Belgium, </address> <month> April </month> <year> 1996. </year> <month> 19 </month>
References-found: 9

