URL: ftp://ftp.isi.edu/pub/cengiz/publications/MaRS:DVvsLS.ps
Refering-URL: http://www.isi.edu/~cengiz/publications/
Root-URL: http://www.isi.edu
Title: Transient and Steady-State Performance of Routing Protocols: Distance-Vector versus Link-State  
Author: A. Udaya Shankar Cengiz Alaettinoglu, Klaudia Dussa-Zieger, Ibrahim Matta 
Keyword: Computer networks, routing protocols, performance evaluation, modeling, discrete event simulation.  
Note: Also with  
Date: July 22, 1993  
Address: College Park, Maryland 20742  College Park, MD 20742.  
Affiliation: Department of Computer Science University of Maryland  Institute for Advanced Computer Studies, University of Maryland,  
Abstract: We examine two approaches to adaptive routing protocols for wide-area store-and-forward networks, namely, distance-vector and link-state. Distance-vector algorithms have less storage requirements than link-state algorithms. The ARPANET started with a distance-vector algorithm (Distributed Bellman-Ford), but because of long-lived loops, changed to a link-state algorithm (SPF). We evaluate, using a recently developed network simulator, MaRS, the transient and steady-state performance of SPF and two newly proposed distance-vector algorithms (ExBF and MS). Overall, SPF and ExBF have comparable performance and MS is worse. fl This work is supported in part by RomeLabs and DARPA under contract F30602-90-C-0010 to UMIACS at the University of Maryland, and by National Science Foundation Grant No. NCR 89-04590. The views, opinions, and/or findings contained in this report are those of the author(s) and should not be interpreted as representing the official policies, either expressed or implied, of the Defense Advanced Research Projects Agency, RADC, or the U.S. Government. Computer facilities were provided in part by NSF grant CCR-8811954. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Alaettinoglu, K. Dussa, A. U. Shankar, and J. Bolot. </author> <title> Routing Testbed: Initial Design. </title> <type> Technical Report UMIACS-TR-90-71, </type> <institution> CS-TR-2475, Department of Computer Science, University of Maryland, College Park, </institution> <month> May </month> <year> 1990. </year>
Reference: [2] <author> C. Alaettinoglu, K. Dussa-Zieger, I. Matta, and A. U. Shankar. </author> <title> MaRS (Maryland Routing Simula tor) Version 1.0 User's Manual. </title> <type> Technical Report UMIACS-TR-91-80, </type> <institution> CS-TR-2687, Department of Computer Science, University of Maryland, College Park, </institution> <month> June </month> <year> 1991. </year>
Reference-contexts: We examine both these questions in this paper using simulation studies. Given the current understanding of next-hop routing algorithms, we feel that simulations are probably the only way to develop further insight into their performance. We use a recently developed simulator called MaRS (Maryland Routing Simulator) <ref> [2] </ref>. We consider the NSFNET-T1-backbone network with T1 hardware as well as a high-speed hardware, with varying uniform and hotspot-with-background workloads, and varying failure patterns. We examine both steady-state and transient behaviors. Our overall conclusion is as follows. Regarding steady-state performance, SPF performs well under hotspot-with-background workload and failures. <p> The scheduling of events can be done using random number generators, a trace file, or both. MaRS is implemented in C on a UNIX environment. It has an optional graphical (X Window System) interface. It is available publicly in the Internet by anonymous ftp from ftp.cs.umd.edu <ref> [2] </ref>. A network configuration consists of a physical network, a routing algorithm, and a workload. These are described in the following paragraphs. The physical network consists of nodes and links.
Reference: [3] <author> D. Bertsekas and R. </author> <title> Gallager. </title> <booktitle> Data Networks, </booktitle> <pages> pages 297-333. </pages> <publisher> Prentice-Hall, Inc., </publisher> <year> 1987. </year>
Reference-contexts: However it is well known that the straight-forward distributed implementation of the Bellman-Ford algorithm can have long-lived loops giving rise to large dissemination times, i.e. of the order of distances <ref> [3] </ref>. The ARPANET initially used this Distributed Bellman-Ford algorithm. Because of its long dissemination time, it was replaced in 1979 by a link state algorithm referred to as SPF (Shortest Path First) [27]. At that time, the link cost function was link delay. <p> For example, reference [11] considers a queueing system with two identical independent exponential servers and determines an optimal way to route incoming packets to one of the two servers based on their "instantaneous" queue sizes. Imposing more assumptions results in more tractable flow models <ref> [3, 12] </ref>. Here, each link is modeled by a capacity and propagation time, and the message traffic on the link is modeled by a continuous-valued flow, representing the average rate of the message traffic. The routing problem is then formulated as an optimization problem. <p> Typically, the solution procedure is iterative. Flow models have been used to study both link-state algorithms [4] and distance-vector algorithms [15]. A serious limitation of flow models is the assumption that flows are static (or quasi-static) <ref> [3] </ref>. 5 3 Overview of Routing Algorithms This section describes the routing algorithms examined in our simulations. All of them use next-hop routing. At a node, the next-hop for a destination can be nil (e.g. because the destination is not reachable from the node). <p> The above distance-vector algorithm is the classical Distributed Bellman-Ford algorithm <ref> [3, 13] </ref>. It is well known that this algorithm, in addition to short-lived next-hop loops, can have long-lived loops of duration proportional to link cost changes [32]. The new distance-vector algorithms have mechanisms to avoid long-lived loops. MS is a distance-vector algorithm which avoids both short-lived and long-lived loops.
Reference: [4] <author> D.P. Bertsekas. </author> <title> Dynamic Behavior of Shortest Path Routing Algorithms for Communication Networks. </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> 27(1) </volume> <pages> 60-74, </pages> <month> February </month> <year> 1982. </year>
Reference-contexts: Typically, the solution procedure is iterative. Flow models have been used to study both link-state algorithms <ref> [4] </ref> and distance-vector algorithms [15]. A serious limitation of flow models is the assumption that flows are static (or quasi-static) [3]. 5 3 Overview of Routing Algorithms This section describes the routing algorithms examined in our simulations. All of them use next-hop routing.
Reference: [5] <author> C. Cassandras, M.V. Abidi, and D. Towsley. </author> <title> Distributed Routing with On-line Marginal Delay Esti mation. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 38(3) </volume> <pages> 348-359, </pages> <month> March </month> <year> 1990. </year>
Reference-contexts: In general, some cost function D (f ik ) is optimized with respect to variables f ik , where f ik indicates the flow on link (i; k) and is subject to constraints such as conservation of flow and nonnegativity of flows <ref> [5] </ref>. Typically, the solution procedure is iterative. Flow models have been used to study both link-state algorithms [4] and distance-vector algorithms [15].
Reference: [6] <author> C. Cheng, R. Riley, S. P. R. Kumar, and J. J. Garcia-Luna-Aceves. </author> <title> A Loop-free Bellman-Ford Routing Protocol Without Bouncing Effect. </title> <booktitle> In Proc. ACM SIGCOMM '89, </booktitle> <pages> pages 224-237, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: Experience showed that this leads to unstable oscillations, and in 1987 it was replaced by a more slowly changing hop-normalized-delay function, which uses exponential averaging, movement limit, etc [22]. Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [28, 34, 20, 6, 16, 32] </ref> which achieve significantly reduced dissemination times by using node coordination mechanisms. The Merlin-Segall algorithm [28, 34] has a worst-case dissemination time of O (H 2 ) hop count, where H is the length of a maximum length shortest path between any two nodes. <p> The worst-case dissemination time is O (H ) for the Jaffe-Mosse algorithm [20] and the DUAL algorithm by Garcia-Luna-Aceves [16], and is O (N ) for the Extended Bellman-Ford algorithm by Cheng et al. <ref> [6] </ref>. However, in terms of real time they may have successively smaller dissemination times because they impose successively weaker coordination constraints.
Reference: [7] <author> W. Chou, A.W. Bragg, and A.A. Nilson. </author> <title> The Need for Adaptive Routing in the Chaotic and Unbalanced Traffic Environment. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 29 </volume> <pages> 481-490, </pages> <month> April </month> <year> 1981. </year>
Reference-contexts: SPF) [27] and its new link cost function (i.e. hop-normalized-delay function) [22]. The tests showed that the new algorithm and link cost function give better performance than the old ARPANET algorithm (i.e. Distributed Bellman-Ford) and the old delay function. Regarding simulation approaches, reference <ref> [7] </ref> concluded that an adaptive strategy is needed in a skewed workload environment. For SPF, it investigated the effects of the link cost function parameters and demonstrated optimal settings. In [39], the original and new ARPANET algorithms (i.e. <p> Such packets are temporarily buffered in a "produce window". 6 Simulation Parameters In this section, we describe the range of parameters exercised in our simulations. Assumptions and parameters were predetermined either consistently with those made in the literature, e.g. [27] [22] [17] <ref> [7] </ref>, or from statistics provided by Merit/NSFNET Information Services, or by simulations with MaRS. <p> The explanation we have is the following: in general we have observed that SPF recovers faster in response to step changes in the workload and link failure/repair. We think that this leads to oscillations in routes 10 which degrade performance under uniform workload <ref> [7] </ref>, while under skewed workload, these route changes would cause the use of under-utilized links. (A.2) Transient measures versus varying step changes in uniform workload. In response to a step change, SPF recovers faster than ExBF which recovers faster than MS.
Reference: [8] <author> R. Coltun. OSPF: </author> <title> An Internet Routing Protocol. </title> <journal> Connexions: The Interoperability Report, </journal> <volume> 3(8) </volume> <pages> 19-25, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: Many recently proposed routing protocols, including IDPR (inter-domain policy routing) [25] and OSPF (open SPF) <ref> [8] </ref>, use mechanisms similar to those used in SPF. Also, two recently proposed routing protocols, namely, IDRP (inter-domain routing protocol) [33] and BGP-4 (border 4 Usually a node broadcasts its minimum distance only if there is a change.
Reference: [9] <author> E. Dijkstra. </author> <title> A Note on Two Problems in Connection with Graphs. </title> <journal> Numer. Math., </journal> <volume> 1 </volume> <pages> 269-271, </pages> <year> 1959. </year>
Reference-contexts: SPF is a link-state algorithm where (1) each node calculates and broadcasts the costs of its outgoing links periodically or whenever a failure/repair occurs, and (2) Dijkstra's shortest path algorithm <ref> [9] </ref> is applied to the view of the network topology to determine next-hops. Distance-Vector Algorithms In the distance-vector approach, for each destination d, every node i maintains a set of distances fD i (j)g where j ranges over the neighbors of i.
Reference: [10] <author> E. Dijkstra and C. Scholten. </author> <title> Termination Detection for Diffusing Computations. </title> <journal> Information Processing Letters, </journal> <volume> 11(1) </volume> <pages> 1-4, </pages> <year> 1980. </year>
Reference-contexts: For each destination, MS guarantees that the next-hops on the nodes that can reach the destination form a tree rooted at the destination. MS attains loop-free paths by coordinating the next-hop updates for each destination as a diffusion computation <ref> [10] </ref> which is started by the destination. When a failure/repair occurs, a request message is sent to each destination. Periodically or upon receiving a request message, the destination starts a new diffusion computation. (The diffusion computation is as follows.
Reference: [11] <author> A. Ephremides, P. Varaiya, and J. Walrand. </author> <title> A Simple Dynamic Routing Problem. </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> 25(4) </volume> <pages> 690-693, </pages> <month> August </month> <year> 1980. </year>
Reference-contexts: The obvious analytical approach is to use a queueing network model where routing is based on delayed state information. Unfortunately, this is usually intractable. The usual approach is to ignore the delay (and averaging) in the feedback, leading to queueing control models formulated as Markovian decision process problems <ref> [11, 12] </ref>. Even then only simple topologies can be considered. For example, reference [11] considers a queueing system with two identical independent exponential servers and determines an optimal way to route incoming packets to one of the two servers based on their "instantaneous" queue sizes. <p> Unfortunately, this is usually intractable. The usual approach is to ignore the delay (and averaging) in the feedback, leading to queueing control models formulated as Markovian decision process problems [11, 12]. Even then only simple topologies can be considered. For example, reference <ref> [11] </ref> considers a queueing system with two identical independent exponential servers and determines an optimal way to route incoming packets to one of the two servers based on their "instantaneous" queue sizes. Imposing more assumptions results in more tractable flow models [3, 12].
Reference: [12] <author> A. Ephremides and S. Verdu. </author> <title> Control and Optimization Methods in Communication Network Problems. </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> 34(9) </volume> <pages> 930-942, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: The obvious analytical approach is to use a queueing network model where routing is based on delayed state information. Unfortunately, this is usually intractable. The usual approach is to ignore the delay (and averaging) in the feedback, leading to queueing control models formulated as Markovian decision process problems <ref> [11, 12] </ref>. Even then only simple topologies can be considered. For example, reference [11] considers a queueing system with two identical independent exponential servers and determines an optimal way to route incoming packets to one of the two servers based on their "instantaneous" queue sizes. <p> For example, reference [11] considers a queueing system with two identical independent exponential servers and determines an optimal way to route incoming packets to one of the two servers based on their "instantaneous" queue sizes. Imposing more assumptions results in more tractable flow models <ref> [3, 12] </ref>. Here, each link is modeled by a capacity and propagation time, and the message traffic on the link is modeled by a continuous-valued flow, representing the average rate of the message traffic. The routing problem is then formulated as an optimization problem.
Reference: [13] <author> L. Ford and D. Fulkerson. </author> <booktitle> Flows in Networks, </booktitle> <pages> pages 297-333. </pages> <publisher> Prentice-Hall, Inc., </publisher> <year> 1962. </year>
Reference-contexts: The dissemination time is small and proportional to D where D is the network diameter in hops. The distance-vector approach, which is based on the Bellman-Ford algorithm <ref> [13] </ref>, is more subtle: each node maintains for each destination a set of distances, one for each of its neighbors. 1 Oscillations are caused by the delayed feedback between route changes and link cost changes. For example, suppose the network has two similar paths between a source and a destination. <p> The above distance-vector algorithm is the classical Distributed Bellman-Ford algorithm <ref> [3, 13] </ref>. It is well known that this algorithm, in addition to short-lived next-hop loops, can have long-lived loops of duration proportional to link cost changes [32]. The new distance-vector algorithms have mechanisms to avoid long-lived loops. MS is a distance-vector algorithm which avoids both short-lived and long-lived loops.
Reference: [14] <author> R. Gallager. </author> <title> A Minimum Delay Routing Algorithm Using Distributed Computation. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-25:73-84, </volume> <month> January </month> <year> 1977. </year>
Reference-contexts: Reference [41] compared SPF, Distributed Bellman-Ford and DUAL algorithms with respect to measures such as number of paths with loops after a node/link change. However, it has no workload and assumes unit link delays and zero processing time at the nodes. Reference [29] compared SPF, Gallager's algorithm <ref> [14] </ref>, and the CODEX algorithm [18, 19]. It was shown that SPF with the old delay link cost function performs poorly compared to the other two algorithms in terms of packet delay under moderate to heavy traffic conditions. In [35], we compared SPF, MS, and ExBF.
Reference: [15] <author> R. Gallager. </author> <title> A Minimum Delay Routing Algorithm Using Distributed Computation. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-25(1):73-85, </volume> <month> January </month> <year> 1977. </year>
Reference-contexts: Typically, the solution procedure is iterative. Flow models have been used to study both link-state algorithms [4] and distance-vector algorithms <ref> [15] </ref>. A serious limitation of flow models is the assumption that flows are static (or quasi-static) [3]. 5 3 Overview of Routing Algorithms This section describes the routing algorithms examined in our simulations. All of them use next-hop routing.
Reference: [16] <author> J.J. Garcia-Luna-Aceves. </author> <title> A Unified Approach to Loop Free Routing Using Distance Vectors or Link States. </title> <booktitle> In Proc. ACM SIGCOMM '89, </booktitle> <pages> pages 212-223, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: Experience showed that this leads to unstable oscillations, and in 1987 it was replaced by a more slowly changing hop-normalized-delay function, which uses exponential averaging, movement limit, etc [22]. Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [28, 34, 20, 6, 16, 32] </ref> which achieve significantly reduced dissemination times by using node coordination mechanisms. The Merlin-Segall algorithm [28, 34] has a worst-case dissemination time of O (H 2 ) hop count, where H is the length of a maximum length shortest path between any two nodes. <p> The worst-case dissemination time is O (H ) for the Jaffe-Mosse algorithm [20] and the DUAL algorithm by Garcia-Luna-Aceves <ref> [16] </ref>, and is O (N ) for the Extended Bellman-Ford algorithm by Cheng et al. [6]. However, in terms of real time they may have successively smaller dissemination times because they impose successively weaker coordination constraints.
Reference: [17] <author> S. A. Heimlich. </author> <title> Traffic Characterization of the NSFNET National Backbone. </title> <booktitle> In Proc. Proc. USENIX `90, </booktitle> <pages> pages 207-227, </pages> <address> Washington, D.C., </address> <month> January </month> <year> 1990. </year>
Reference-contexts: Such packets are temporarily buffered in a "produce window". 6 Simulation Parameters In this section, we describe the range of parameters exercised in our simulations. Assumptions and parameters were predetermined either consistently with those made in the literature, e.g. [27] [22] <ref> [17] </ref> [7], or from statistics provided by Merit/NSFNET Information Services, or by simulations with MaRS.
Reference: [18] <author> P.A. Humblet and S.R. Soloway. </author> <title> Algorithms for Data Communication Networks-Part 1. </title> <type> Technical report, </type> <institution> Codex Corp., </institution> <year> 1986. </year>
Reference-contexts: However, it has no workload and assumes unit link delays and zero processing time at the nodes. Reference [29] compared SPF, Gallager's algorithm [14], and the CODEX algorithm <ref> [18, 19] </ref>. It was shown that SPF with the old delay link cost function performs poorly compared to the other two algorithms in terms of packet delay under moderate to heavy traffic conditions. In [35], we compared SPF, MS, and ExBF.
Reference: [19] <author> P.A. Humblet, S.R. Soloway, and B. Steinka. </author> <title> Algorithms for Data Communication Networks-Part 2. </title> <type> Technical report, </type> <institution> Codex Corp., </institution> <year> 1986. </year>
Reference-contexts: However, it has no workload and assumes unit link delays and zero processing time at the nodes. Reference [29] compared SPF, Gallager's algorithm [14], and the CODEX algorithm <ref> [18, 19] </ref>. It was shown that SPF with the old delay link cost function performs poorly compared to the other two algorithms in terms of packet delay under moderate to heavy traffic conditions. In [35], we compared SPF, MS, and ExBF.
Reference: [20] <author> J. M. Jaffe and F.H. Moss. </author> <title> A Responsive Distributed Routing Algorithm for Computer Networks. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-30(7):1758-1762, </volume> <month> July </month> <year> 1982. </year>
Reference-contexts: Experience showed that this leads to unstable oscillations, and in 1987 it was replaced by a more slowly changing hop-normalized-delay function, which uses exponential averaging, movement limit, etc [22]. Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [28, 34, 20, 6, 16, 32] </ref> which achieve significantly reduced dissemination times by using node coordination mechanisms. The Merlin-Segall algorithm [28, 34] has a worst-case dissemination time of O (H 2 ) hop count, where H is the length of a maximum length shortest path between any two nodes. <p> The Merlin-Segall algorithm [28, 34] has a worst-case dissemination time of O (H 2 ) hop count, where H is the length of a maximum length shortest path between any two nodes. The worst-case dissemination time is O (H ) for the Jaffe-Mosse algorithm <ref> [20] </ref> and the DUAL algorithm by Garcia-Luna-Aceves [16], and is O (N ) for the Extended Bellman-Ford algorithm by Cheng et al. [6]. However, in terms of real time they may have successively smaller dissemination times because they impose successively weaker coordination constraints.
Reference: [21] <author> D. Johnson. </author> <title> NSFnet Report. </title> <booktitle> In Proc. of the Nineteenth Internet Engineering Task Force, </booktitle> <pages> pages 377-382, </pages> <institution> University of Colorado, National Center for Atmospheric Research, </institution> <month> December </month> <year> 1990. </year>
Reference-contexts: The link-cost update period is uniformly distributed with mean 10 seconds and standard deviation 1 second. In some simulations, we vary the movement limit, slope, and the link-cost update period. Workload We use only FTP connections (file tranfers constitute a major NSFNET application <ref> [21] </ref>).
Reference: [22] <author> A. Khanna and J. Zinky. </author> <title> A Revised ARPANET Routing Metric. </title> <booktitle> In Proc. ACM SIGCOMM '89, </booktitle> <pages> pages 45-56, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: At that time, the link cost function was link delay. Experience showed that this leads to unstable oscillations, and in 1987 it was replaced by a more slowly changing hop-normalized-delay function, which uses exponential averaging, movement limit, etc <ref> [22] </ref>. Since 1979, many new kinds of distance-vector algorithms have been proposed [28, 34, 20, 6, 16, 32] which achieve significantly reduced dissemination times by using node coordination mechanisms. <p> There is work examining these algorithms individually, and we mention experimental, simulation, and analytic approaches. Regarding experimental approaches, a series of tests was performed on the ARPANET to evaluate its new routing algorithm (i.e. SPF) [27] and its new link cost function (i.e. hop-normalized-delay function) <ref> [22] </ref>. The tests showed that the new algorithm and link cost function give better performance than the old ARPANET algorithm (i.e. Distributed Bellman-Ford) and the old delay function. Regarding simulation approaches, reference [7] concluded that an adaptive strategy is needed in a skewed workload environment. <p> The difference between different link cost functions lies in how they compute the RawCost. In this paper, we use the hop-normalized-delay function of the ARPANET <ref> [22] </ref>. Here the transmitting node monitors the average packet delay (queueing and transmission) and average packet transmission time 6 The cost of a link is usually discrete-valued instead of real-valued because it can be encoded in fewer bits. 8 for the link during the last update period. <p> MaRS currently provides three routing algorithms, SPF, MS, ExBF (described in section 3), and four types of link cost functions based on hop count, utilization, delay, and hop-normalized-delay. The link cost function used in this paper is the hop-normalized-delay function of the ARPANET <ref> [27, 22] </ref> (described in section 4). The workload is defined in terms of connections. Each connection is associated with a source node and a sink node. The source produces packets destined for the sink. The packets are forwarded across the network and consumed by the sink. <p> Such packets are temporarily buffered in a "produce window". 6 Simulation Parameters In this section, we describe the range of parameters exercised in our simulations. Assumptions and parameters were predetermined either consistently with those made in the literature, e.g. [27] <ref> [22] </ref> [17] [7], or from statistics provided by Merit/NSFNET Information Services, or by simulations with MaRS.
Reference: [23] <author> L. Kleinrock. </author> <title> Queueing Systems, </title> <booktitle> Volume II: Computer Applications. </booktitle> <publisher> John Wiley and Sons, Inc., </publisher> <year> 1976. </year>
Reference-contexts: In every scenario examining steady-state performance, the number of packets in the network is upper bounded because each connection can have at most one send window's worth of packets in 13 the network. Therefore, as the workload increases, the network behaves more as a closed queueing network <ref> [23] </ref>. That is, the data load and throughput first increase linearly, and then level off as the system becomes saturated. The delay increases very slowly at first, and then very rapidly after the saturation point. <p> The poorer the performance, the longer the duration, resulting in more connections being active simultaneously. Thus, the number of connections varies with time, and the system behavior is similar to that of an open queueing network <ref> [23] </ref>. Our conclusions in [35] agree with those in this paper. The only difference is that the dynamic workload results in higher delay and earlier saturation, as expected.
Reference: [24] <author> Stephen S. Lavenberg. </author> <title> Computer Performance Modeling Handbook. </title> <publisher> Academic Press, </publisher> <year> 1983. </year> <month> 19 </month>
Reference: [25] <author> M. Lepp and M. Steenstrup. </author> <title> An Architecture for Inter-Domain Policy Routing. Internet Draft. Available from the authors., </title> <month> June </month> <year> 1992. </year>
Reference-contexts: Many recently proposed routing protocols, including IDPR (inter-domain policy routing) <ref> [25] </ref> and OSPF (open SPF) [8], use mechanisms similar to those used in SPF. Also, two recently proposed routing protocols, namely, IDRP (inter-domain routing protocol) [33] and BGP-4 (border 4 Usually a node broadcasts its minimum distance only if there is a change.
Reference: [26] <author> K. Lougheed and Y. Rekhter. </author> <title> Border Gateway Protocol (BGP). Request for Comment RFC-1105, </title> <institution> Network Information Center, </institution> <month> June </month> <year> 1989. </year>
Reference-contexts: However, if this broadcast is done periodically whether or not there is a change, this storage can be reduced to O (N ) at the expense of increasing dissemination time. 3 gateway protocol version 4) <ref> [26] </ref>, use mechanisms similar to those used in ExBF. We examine both these questions in this paper using simulation studies. Given the current understanding of next-hop routing algorithms, we feel that simulations are probably the only way to develop further insight into their performance.
Reference: [27] <author> J. M. McQuillan, I. Richer, and E. C. Rosen. </author> <title> The New Routing Algorithm for the ARPANET. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-28(5):711-719, </volume> <month> May </month> <year> 1980. </year>
Reference-contexts: The ARPANET initially used this Distributed Bellman-Ford algorithm. Because of its long dissemination time, it was replaced in 1979 by a link state algorithm referred to as SPF (Shortest Path First) <ref> [27] </ref>. At that time, the link cost function was link delay. Experience showed that this leads to unstable oscillations, and in 1987 it was replaced by a more slowly changing hop-normalized-delay function, which uses exponential averaging, movement limit, etc [22]. <p> There is work examining these algorithms individually, and we mention experimental, simulation, and analytic approaches. Regarding experimental approaches, a series of tests was performed on the ARPANET to evaluate its new routing algorithm (i.e. SPF) <ref> [27] </ref> and its new link cost function (i.e. hop-normalized-delay function) [22]. The tests showed that the new algorithm and link cost function give better performance than the old ARPANET algorithm (i.e. Distributed Bellman-Ford) and the old delay function. <p> MaRS currently provides three routing algorithms, SPF, MS, ExBF (described in section 3), and four types of link cost functions based on hop count, utilization, delay, and hop-normalized-delay. The link cost function used in this paper is the hop-normalized-delay function of the ARPANET <ref> [27, 22] </ref> (described in section 4). The workload is defined in terms of connections. Each connection is associated with a source node and a sink node. The source produces packets destined for the sink. The packets are forwarded across the network and consumed by the sink. <p> Such packets are temporarily buffered in a "produce window". 6 Simulation Parameters In this section, we describe the range of parameters exercised in our simulations. Assumptions and parameters were predetermined either consistently with those made in the literature, e.g. <ref> [27] </ref> [22] [17] [7], or from statistics provided by Merit/NSFNET Information Services, or by simulations with MaRS.
Reference: [28] <author> P. M. Merlin and A. Segall. </author> <title> A Failsafe Distributed Routing Protocol. </title> <journal> IEEE Transactions on Commu nications, </journal> <volume> COM-27(9):1280-1287, </volume> <month> September </month> <year> 1979. </year>
Reference-contexts: Experience showed that this leads to unstable oscillations, and in 1987 it was replaced by a more slowly changing hop-normalized-delay function, which uses exponential averaging, movement limit, etc [22]. Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [28, 34, 20, 6, 16, 32] </ref> which achieve significantly reduced dissemination times by using node coordination mechanisms. The Merlin-Segall algorithm [28, 34] has a worst-case dissemination time of O (H 2 ) hop count, where H is the length of a maximum length shortest path between any two nodes. <p> Since 1979, many new kinds of distance-vector algorithms have been proposed [28, 34, 20, 6, 16, 32] which achieve significantly reduced dissemination times by using node coordination mechanisms. The Merlin-Segall algorithm <ref> [28, 34] </ref> has a worst-case dissemination time of O (H 2 ) hop count, where H is the length of a maximum length shortest path between any two nodes.
Reference: [29] <author> B.P. Mohanty, C.G. Cassandras, and D. Towsley. </author> <title> Performance Comparison of Routing Algorithms in Packet Switched Networks. </title> <booktitle> In Proc. IEEE Globecom '90, </booktitle> <address> San Diego, California, </address> <year> 1990. </year>
Reference-contexts: Reference [41] compared SPF, Distributed Bellman-Ford and DUAL algorithms with respect to measures such as number of paths with loops after a node/link change. However, it has no workload and assumes unit link delays and zero processing time at the nodes. Reference <ref> [29] </ref> compared SPF, Gallager's algorithm [14], and the CODEX algorithm [18, 19]. It was shown that SPF with the old delay link cost function performs poorly compared to the other two algorithms in terms of packet delay under moderate to heavy traffic conditions.
Reference: [30] <author> D. J. Nelson, K. Sayood, and H. Chang. </author> <title> An Extended Least-Hop Distributed Routing Algorithm. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 38(4) </volume> <pages> 520-528, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: It was observed that a shorter link-cost update period should be used for higher data workload. In [40], an extension to SPF was proposed where alternate paths are used in case of congestion and failures. It was concluded that the proposed algorithm gives higher throughput than SPF. In <ref> [30] </ref>, multi-path extensions to SPF were shown to perform better. Here, each node finds the min hop and min plus 1 hop paths for every destination, estimates their delays and chooses between them accordingly.
Reference: [31] <author> J. Postel. </author> <title> Transmission Control Protocol: DARPA internet program protocol specification. Request for Comment RFC-793, Network Information Center, </title> <booktitle> SRI International, </booktitle> <year> 1981. </year>
Reference-contexts: With a more sophisticated flow control mechanism, such as slow-start in TCP <ref> [42, 31] </ref>, the interaction would be more complicated, and we believe it would be hard to draw conclusions about the performance of the routing algorithm itself. 9 Workload packets include data, acknowledgment and token packets. 10 packets have priority over workload packets in the nodes' outgoing packet queues.
Reference: [32] <author> B. Rajagopalan and M. Faiman. </author> <title> A New Responsive Distributed Shortest-Path Routing Algorithm. </title> <booktitle> In Proc. ACM SIGCOMM '89, </booktitle> <pages> pages 237-246, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: Experience showed that this leads to unstable oscillations, and in 1987 it was replaced by a more slowly changing hop-normalized-delay function, which uses exponential averaging, movement limit, etc [22]. Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [28, 34, 20, 6, 16, 32] </ref> which achieve significantly reduced dissemination times by using node coordination mechanisms. The Merlin-Segall algorithm [28, 34] has a worst-case dissemination time of O (H 2 ) hop count, where H is the length of a maximum length shortest path between any two nodes. <p> The above distance-vector algorithm is the classical Distributed Bellman-Ford algorithm [3, 13]. It is well known that this algorithm, in addition to short-lived next-hop loops, can have long-lived loops of duration proportional to link cost changes <ref> [32] </ref>. The new distance-vector algorithms have mechanisms to avoid long-lived loops. MS is a distance-vector algorithm which avoids both short-lived and long-lived loops. For each destination, MS guarantees that the next-hops on the nodes that can reach the destination form a tree rooted at the destination.
Reference: [33] <author> Y. Rekhter. </author> <title> Inter-Domain Routing Protocol (IDRP). Available from the author., 1992. </title> <type> T.J. </type> <institution> Watson Research Center, IBM Corp. </institution>
Reference-contexts: Many recently proposed routing protocols, including IDPR (inter-domain policy routing) [25] and OSPF (open SPF) [8], use mechanisms similar to those used in SPF. Also, two recently proposed routing protocols, namely, IDRP (inter-domain routing protocol) <ref> [33] </ref> and BGP-4 (border 4 Usually a node broadcasts its minimum distance only if there is a change.
Reference: [34] <author> A. Segall. </author> <title> Advances in Verifiable Fail-Safe Routing Procedures. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-29(4):491-497, </volume> <month> April </month> <year> 1981. </year>
Reference-contexts: Experience showed that this leads to unstable oscillations, and in 1987 it was replaced by a more slowly changing hop-normalized-delay function, which uses exponential averaging, movement limit, etc [22]. Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [28, 34, 20, 6, 16, 32] </ref> which achieve significantly reduced dissemination times by using node coordination mechanisms. The Merlin-Segall algorithm [28, 34] has a worst-case dissemination time of O (H 2 ) hop count, where H is the length of a maximum length shortest path between any two nodes. <p> Since 1979, many new kinds of distance-vector algorithms have been proposed [28, 34, 20, 6, 16, 32] which achieve significantly reduced dissemination times by using node coordination mechanisms. The Merlin-Segall algorithm <ref> [28, 34] </ref> has a worst-case dissemination time of O (H 2 ) hop count, where H is the length of a maximum length shortest path between any two nodes.
Reference: [35] <author> A. U. Shankar, C. Alaettinoglu, K. Dussa-Zieger, and I. Matta. </author> <title> Performance Comparison of Routing Protocols under Dynamic and Static File Transfer Connections. </title> <journal> ACM SIGCOMM Computer Communication Review, </journal> <volume> 22(5) </volume> <pages> 39-52, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: Reference [29] compared SPF, Gallager's algorithm [14], and the CODEX algorithm [18, 19]. It was shown that SPF with the old delay link cost function performs poorly compared to the other two algorithms in terms of packet delay under moderate to heavy traffic conditions. In <ref> [35] </ref>, we compared SPF, MS, and ExBF. We considered static and dynamic workload (i.e. constant and varying number of connections), low-speed network parameters, and only steady-state performance measures (i.e. average throughput and delay). <p> This implies that short-lived loops do not degrade performance. And the diffusion computation mechanism used by MS causes MS to adapt too slowly. (These conclusions held even in the high-speed network we studied.) The simulations in this paper typically considered a constant number of unending connections. Elsewhere <ref> [35] </ref>, we considered a more dynamic workload, where each source initiates a succession of finite file transfer connections to its sink. The duration of a connection, i.e. the time to deliver the data packets of a file, depends on the routing protocol performance. <p> The poorer the performance, the longer the duration, resulting in more connections being active simultaneously. Thus, the number of connections varies with time, and the system behavior is similar to that of an open queueing network [23]. Our conclusions in <ref> [35] </ref> agree with those in this paper. The only difference is that the dynamic workload results in higher delay and earlier saturation, as expected.
Reference: [36] <author> A. U. Shankar, C. Alaettinoglu, K. Dussa-Zieger, and I. Matta. </author> <title> Transient and Steady-State Performance of Routing Protocols: Distance-Vector versus Link-State. </title> <type> Technical Report UMIACS-TR-92-87, </type> <institution> CS-TR-2940, Department of Computer Science, University of Maryland, College Park, </institution> <month> August </month> <year> 1992. </year> <note> Submitted for publication in IEEE/ACM Transactions on Networking. </note>
Reference: [37] <author> A.U. Shankar, C. Alaettinoglu, I. Matta, and K. Dussa-Zieger. </author> <title> Performance Comparison of Routing Protocols using MaRS: Distance-Vector versus Link-State. </title> <booktitle> In Proc. ACM SIGMET-RICS/PERFORMANCE, </booktitle> <volume> volume 20, </volume> <pages> pages 181-192, </pages> <address> Newport, Rhode Island, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: In addition, SPF has the lowest delays during recovery, followed by ExBF, and then MS. 10 We have observed that SPF has higher oscillations in instantaneous delay compared to ExBF and MS under uniform workload around saturation <ref> [37] </ref>. We have not checked for oscillations in routes. 14 (B) Varying failures and uniform workload. The three algorithms are equivalent with respect to throughput. ExBF and SPF are equivalent with respect to data load, while MS has slightly higher data load (by less than 10%).
Reference: [38] <author> H. A. Taha. </author> <title> Operations Research : An Introduction. </title> <publisher> Macmillan publishing Co., </publisher> <address> second edition, </address> <year> 1976. </year>
Reference: [39] <author> W.T. Tsai, C. Ramamoorthy, W.K. Tsai, and O. Nishiguchi. </author> <title> An Adaptive Hierarchical Routing Protocol. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 38 </volume> <pages> 1059-1075, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: Distributed Bellman-Ford) and the old delay function. Regarding simulation approaches, reference [7] concluded that an adaptive strategy is needed in a skewed workload environment. For SPF, it investigated the effects of the link cost function parameters and demonstrated optimal settings. In <ref> [39] </ref>, the original and new ARPANET algorithms (i.e. Distributed Bellman-Ford and SPF) were evaluated in a comparison with two hierarchical 4 extensions to these algorithms. It was observed that a shorter link-cost update period should be used for higher data workload.
Reference: [40] <author> Z. Wang and J. Crowcroft. </author> <title> Shortest Path First with Emergency Exits. </title> <booktitle> In Proc. ACM SIGCOMM '90, </booktitle> <pages> pages 166-176, </pages> <month> September </month> <year> 1990. </year>
Reference-contexts: In [39], the original and new ARPANET algorithms (i.e. Distributed Bellman-Ford and SPF) were evaluated in a comparison with two hierarchical 4 extensions to these algorithms. It was observed that a shorter link-cost update period should be used for higher data workload. In <ref> [40] </ref>, an extension to SPF was proposed where alternate paths are used in case of congestion and failures. It was concluded that the proposed algorithm gives higher throughput than SPF. In [30], multi-path extensions to SPF were shown to perform better.
Reference: [41] <author> W. Zaumen and J.J. Garcia-Luna-Aceves. </author> <title> Dynamics of Distributed Shortest-path Routing Algorithms. </title> <booktitle> In Proc. ACM SIGCOMM '91, </booktitle> <month> September </month> <year> 1991. </year>
Reference-contexts: It was concluded that the proposed algorithm gives higher throughput than SPF. In [30], multi-path extensions to SPF were shown to perform better. Here, each node finds the min hop and min plus 1 hop paths for every destination, estimates their delays and chooses between them accordingly. Reference <ref> [41] </ref> compared SPF, Distributed Bellman-Ford and DUAL algorithms with respect to measures such as number of paths with loops after a node/link change. However, it has no workload and assumes unit link delays and zero processing time at the nodes.
Reference: [42] <author> L. Zhang and D. D. Clark. </author> <title> Oscillation Behaviour of Network Traffic : A Case Study Simulation. </title> <journal> Internetworking Research and Experience, </journal> <year> 1990. </year> <month> 20 </month>
Reference-contexts: With a more sophisticated flow control mechanism, such as slow-start in TCP <ref> [42, 31] </ref>, the interaction would be more complicated, and we believe it would be hard to draw conclusions about the performance of the routing algorithm itself. 9 Workload packets include data, acknowledgment and token packets. 10 packets have priority over workload packets in the nodes' outgoing packet queues.
References-found: 42

