URL: http://www.cc.gatech.edu/ai/robot-lab/publications/reflecs-ijcai97-draft.ps.Z
Refering-URL: http://www.cs.gatech.edu/aimosaic/robot-lab/mrl-online-publications.html
Root-URL: 
Title: Model-Based Reconfiguration of Schema-Based Reactive Control Architectures  
Author: Ashok K. Goel, Eleni Stroulia, Zhong Chen, Paul Rowland 
Date: (404)-894-4994  
Note: Contact: goel@cc.gatech.edu;  
Address: Atlanta, GA 30332, USA  
Affiliation: College of Computing, Georgia Institute of Technology,  
Abstract: Reactive methods of control get caught in local minima. Fortunately schema-based reactive control systems have built-in redundancy that enables multiple configurations with different modes. We describe a model-based method that exploits this redundancy, and, under certain conditions, reconfigures schema-based reactive control systems trapped in behavioral cycles due to the presence of local minima. The qualitative model specifies the functions and modes of the perceptual and motor schemas, and represents the reactive architecture as a structure-behavior-function model. The model-based method monitors the reactive processing, detects failures in the form of behavioral cycles, analyzes the processing trace, identifies potential modifications, and reconfig-ures the reactive architecture. We report on experiments with a simulated robot navigating a complex space.
Abstract-found: 1
Intro-found: 1
Reference: [ Arbib, 1992 ] <author> M. Arbib. </author> <title> Schema theory. </title> <editor> In S. Shapiro, editor, </editor> <booktitle> Encyclopedia of Artificial Intelligence, </booktitle> <pages> pages 1427-1443. </pages> <publisher> Wiley, </publisher> <address> 2nd edition, </address> <year> 1992. </year>
Reference-contexts: A major advantage of these methods is that they result in rapid response. A major problem is that they get caught in local minima [ Arkin, 1989 ] . Fortunately many reactive control designs contain redundancies. For example, schema-based designs <ref> [ Arbib, 1992 ] </ref> have built-in redundancy that allows multiple configurations with different modes. For schema-based reactive agents, we view failure recovery as redesign task.
Reference: [ Arkin, 1989 ] <author> Ronald Arkin. </author> <title> Motor schema-based mobile robot navigation. </title> <journal> International Journal of Robotics Research, </journal> <volume> 8(4) </volume> <pages> 92-112, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: 1 Introduction Reactive methods for control are characterized by a direct mapping of perceptions of the world to actions on it. A major advantage of these methods is that they result in rapid response. A major problem is that they get caught in local minima <ref> [ Arkin, 1989 ] </ref> . Fortunately many reactive control designs contain redundancies. For example, schema-based designs [ Arbib, 1992 ] have built-in redundancy that allows multiple configurations with different modes. For schema-based reactive agents, we view failure recovery as redesign task.
Reference: [ Arkin, 1990 ] <author> Ronald Arkin. </author> <title> Integrating behavioral, perceptual, and world knowledge in reactive navigation. </title> <booktitle> Robotics and Autonomous Systems, </booktitle> <volume> 6 </volume> <pages> 105-122, </pages> <year> 1990. </year>
Reference-contexts: We also report on experiments with a simulated robot navigating a complex navigation space. The main result is a model-based technique that enhances the autonomy of schema-based reactive agents. 2 Schema-Based Reactive Control AuRA <ref> [ Arkin, 1990 ] </ref> exemplifies schema-based reactive control for mobile robots. Its reactive control system consists of perceptual and motor schemas, and mappings from the former to the latter. Each perceptual schema is responsible for one sensory modality, and each motor schema is responsible for one type of action.
Reference: [ Goel and Stroulia, 1996 ] <author> Ashok Goel and Eleni Strou-lia. </author> <title> Functional device models and model-based diagnosis in adaptive design. </title> <booktitle> Artificial Intelligence for Engineering Design, Analysis and Manufacturing, </booktitle> <volume> 10 </volume> <pages> 355-370, </pages> <year> 1996. </year>
Reference-contexts: Reactive controllers aboard mobile robots are hardware-embedded software systems. Autognostic's theory of modeling hardware-embedded software systems arises from an earlier theory of model-based failure analysis and redesign of hardware systems <ref> [ Goel and Stroulia, 1996 ] </ref> . 8 Conclusions Local minima present a major problem for methods of reactive control. Since schema-based reactive systems contain built-in redundancy that enables multiple configurations with different modes, Reflecs casts recovery from failure due to local minima as a redesign problem.
Reference: [ Howe and Cohen, 1991 ] <author> Adele E. Howe and Paul R. Co-hen. </author> <title> Failure recovery: A model and experiments. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence, </booktitle> <pages> pages 801-808, </pages> <year> 1991. </year>
Reference-contexts: Here we will compare our work only with related research on reconfiguration of reactive control architectures, and, in particular, with model-based approaches to reactive architectural reconfiguration. In the context of reactive agents, Howe and Cohen <ref> [ Howe and Cohen, 1991 ] </ref> describe a method for recovery from failure. Their method not only monitors agent performance and detects failures, but also keeps statistics of failures. It uses heuristic knowledge to recover from recurrent failures and to modify the reactive controller.
Reference: [ Stroulia and Goel, 1996 ] <author> Eleni Stroulia and Ashok K. Goel. </author> <title> A model-based approach to blame assignment: Revising the reasoning steps of problem solvers. </title> <booktitle> In Proc. Thirteenth National Conference on Artificial Intelligence, </booktitle> <pages> pages 959-964, </pages> <year> 1996. </year>
Reference: [ Stroulia and Goel, 1994 ] <author> Eleni Stroulia and Ashok K. Goel. </author> <title> Learning problem-solving concepts by reflecting on problem solving. </title> <booktitle> In Proc. 1994 European Conference on Machine Learning, </booktitle> <pages> pages 287-306, </pages> <year> 1994. </year>
Reference-contexts: The deliberative reasoner in Reflecs uses a model-based method derived from a theory of self-redesign in adaptive agents described in <ref> [ Stroulia and Goel, 1994; 1996 ] </ref> . The general theory is instantiated in a "shell" called Autognostic.
Reference: [ Williams and Nayak, 1996 ] <author> Brian C. Williams and P. Pandurang Nayak. </author> <title> A model-based approach to reactive self-configuring systems. </title> <booktitle> In Proc. Thirteenth National Conference on Artificial Intelligence, </booktitle> <pages> pages 971-978, </pages> <year> 1996. </year>
Reference-contexts: In contrast, Re-flecs maintains a model of the reactive controller, and, when a failure occurs, it uses the model to analyze the failure and recover from it by reconfiguring the reactive architecture. Williams and Nayak <ref> [ Williams and Nayak, 1996 ] </ref> describe a different model-based technique for reconfigur-ing reactive systems and its implementation in a system called Livingstone. The goal of their work is the same as ours: model-based agent autonomy.
References-found: 8

