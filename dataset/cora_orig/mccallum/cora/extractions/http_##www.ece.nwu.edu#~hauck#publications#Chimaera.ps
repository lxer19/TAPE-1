URL: http://www.ece.nwu.edu/~hauck/publications/Chimaera.ps
Refering-URL: 
Root-URL: 
Email: hauck, zaphod, mhosler, theta@ece.nwu.edu  
Title: IEEE Symposium on Field-Programmable Custom Computing Machines, 1997. The Chimaera Reconfigurable Functional Unit  
Author: Scott Hauck, Thomas W. Fry, Matthew M. Hosler, Jeffrey P. Kao 
Address: Evanston, IL 60208-3118 USA  
Affiliation: Department of Electrical and Computer Engineering Northwestern University  
Abstract: By strictly separating reconfigurable logic from their host processor, current custom computing systems suffer from a significant communication bottleneck. In this paper we describe Chimaera, a system that overcomes this bottleneck by integrating reconfigurable logic into the host processor itself. With direct access to the host processors register file, the system enables the creation of multi-operand instruction and a speculative execution model key to high performance, general-purpose reconfigurable computing. It also supports multi-output functions, and utilizes partial runtime reconfiguration to reduce reconfiguration time. Combined, this system can provide speedups of a factor of two or more for general-purpose computing, and speedups of 160 or more are possible for hand-mapped applications.
Abstract-found: 1
Intro-found: 1
Reference: [Albaharna94] <author> O. T. Albaharna, P. Y. K. Cheung, T. J. Clarke, </author> <title> Area & Time Limitations of FPGA-based Virtual Hardware, </title> <booktitle> International Conference on Computer Design , pp. </booktitle> <pages> 184-189, </pages> <year> 1994. </year>
Reference-contexts: All of these factors keep reconfigurable computing from entering the mainstream, and drive up the cost and complexity of these systems. There has been initial work done on integrating processors and reconfigurable logic <ref> [French93, Albaharna94, DeHon94, Razdan94a, Razdan94b, Albaharna96, Rajamani96, Wirthlin95, Wittig96] </ref>. However, these systems in general use standard FPGA architectures, architectures that have not been designed to effectively support the needs of integrated FPGA-processor systems.
Reference: [Albaharna96] <author> O. T. Albaharna, P. Y. K. Cheung, T. J. Clarke, </author> <title> On the Viability of FPGA-based Integrated Coprocessors, </title> <booktitle> IEEE Symposium on FPGAs for Custom Computing Machines , 1996. </booktitle>
Reference-contexts: All of these factors keep reconfigurable computing from entering the mainstream, and drive up the cost and complexity of these systems. There has been initial work done on integrating processors and reconfigurable logic <ref> [French93, Albaharna94, DeHon94, Razdan94a, Razdan94b, Albaharna96, Rajamani96, Wirthlin95, Wittig96] </ref>. However, these systems in general use standard FPGA architectures, architectures that have not been designed to effectively support the needs of integrated FPGA-processor systems.
Reference: [Altera95] <institution> Data Book, </institution> <address> San Jose, CA: </address> <institution> Altera Corp., </institution> <year> 1995. </year>
Reference-contexts: R i Fast Carry Reg. Ports 4-LUT/ Reg. Ports 4-LUT/ I1 I2 I3 I4 I1 I2 I3 I4 Longline B Longline A routing structure. The Reconfigurable Array itself is shown in Figure 2 and Triptych FPGA [Hauck92, Borriello95, Ebeling95], the Altera FLEX 8000 series <ref> [Altera95] </ref>, and PRISC [Razdan94a, Razdan94b]. The routing structure is shown in Figure 2 . The reconfigurable logic is broken into rows of logic cells between routing channels.
Reference: [Borriello95] <author> G. Borriello, C. Ebeling, S. Hauck, S. Burns, </author> <title> The Triptych FPGA Architecture, </title> <journal> IEEE Transactions on VLSI Systems , Vol. </journal> <volume> 3, No. 4, </volume> <pages> pp. 491-501, </pages> <month> December, </month> <year> 1995. </year>
Reference-contexts: R i Fast Carry Reg. Ports 4-LUT/ Reg. Ports 4-LUT/ I1 I2 I3 I4 I1 I2 I3 I4 Longline B Longline A routing structure. The Reconfigurable Array itself is shown in Figure 2 and Triptych FPGA <ref> [Hauck92, Borriello95, Ebeling95] </ref>, the Altera FLEX 8000 series [Altera95], and PRISC [Razdan94a, Razdan94b]. The routing structure is shown in Figure 2 . The reconfigurable logic is broken into rows of logic cells between routing channels.
Reference: [DeHon94] <editor> A . D e H o n , D P G A Coupled Microprocessors: </editor> <booktitle> Commodity ICs for the Early 21st Century, IEEE Workshop on FPGAs for Custom Computing Machines, </booktitle> <pages> pp. 31-39, </pages> <year> 1994. </year>
Reference-contexts: All of these factors keep reconfigurable computing from entering the mainstream, and drive up the cost and complexity of these systems. There has been initial work done on integrating processors and reconfigurable logic <ref> [French93, Albaharna94, DeHon94, Razdan94a, Razdan94b, Albaharna96, Rajamani96, Wirthlin95, Wittig96] </ref>. However, these systems in general use standard FPGA architectures, architectures that have not been designed to effectively support the needs of integrated FPGA-processor systems.
Reference: [Ebeling95] <author> C. Ebeling, L. McMurchie, S. Hauck, S. Burns, </author> <title> Placement and Routing Tools for the Triptych FPGA, </title> <journal> IEEE Transactions on VLSI Systems , Vol. </journal> <volume> 3, No. 4, </volume> <pages> pp. 473-482, </pages> <month> December, </month> <year> 1995. </year>
Reference-contexts: R i Fast Carry Reg. Ports 4-LUT/ Reg. Ports 4-LUT/ I1 I2 I3 I4 I1 I2 I3 I4 Longline B Longline A routing structure. The Reconfigurable Array itself is shown in Figure 2 and Triptych FPGA <ref> [Hauck92, Borriello95, Ebeling95] </ref>, the Altera FLEX 8000 series [Altera95], and PRISC [Razdan94a, Razdan94b]. The routing structure is shown in Figure 2 . The reconfigurable logic is broken into rows of logic cells between routing channels.
Reference: [French93] <author> P. C. French, R. W. Taylor, </author> <title> A Self-Reconfiguring Processor, </title> <booktitle> IEEE Workshop on FPGAs for Custom Computing Machines, </booktitle> <pages> pp. 50-59, </pages> <year> 1993. </year>
Reference-contexts: All of these factors keep reconfigurable computing from entering the mainstream, and drive up the cost and complexity of these systems. There has been initial work done on integrating processors and reconfigurable logic <ref> [French93, Albaharna94, DeHon94, Razdan94a, Razdan94b, Albaharna96, Rajamani96, Wirthlin95, Wittig96] </ref>. However, these systems in general use standard FPGA architectures, architectures that have not been designed to effectively support the needs of integrated FPGA-processor systems.
Reference: [Gardner70] <author> M. Gardner, </author> <title> Mathematical Games: The Fantastic Combinations of John Conways New Solitaire Game Life, </title> <journal> Scientific American , pp. </journal> <pages> 120-123, </pages> <month> October, </month> <year> 1970. </year>
Reference-contexts: In order to test how algorithms can be altered to take advantage of the Chimaera RFU, we developed an implementation of Conways Game of Life <ref> [Gardner70] </ref>. This is a simple cellular automata with states Live and Dead, where a cell determines its next state based on its own state and that of its eight direct neighbors (including diagonals). If there are 3 live neighbors, the cell becomes alive.
Reference: [Hauck92] <author> S. Hauck, G. Borriello and C. Ebeling, TRIPTYCH: </author> <title> An FPGA Architecture with Integrated Logic and Routing, </title> <booktitle> Advanced Research in VLSI and Parallel Systems: Proceedings of the 1992 Brown/MIT Conference, </booktitle> <pages> pp. 26-43, </pages> <month> March, </month> <year> 1992. </year>
Reference-contexts: R i Fast Carry Reg. Ports 4-LUT/ Reg. Ports 4-LUT/ I1 I2 I3 I4 I1 I2 I3 I4 Longline B Longline A routing structure. The Reconfigurable Array itself is shown in Figure 2 and Triptych FPGA <ref> [Hauck92, Borriello95, Ebeling95] </ref>, the Altera FLEX 8000 series [Altera95], and PRISC [Razdan94a, Razdan94b]. The routing structure is shown in Figure 2 . The reconfigurable logic is broken into rows of logic cells between routing channels.
Reference: [Hauck95] <author> S. Hauck, </author> <title> Multi-FPGA Systems , Ph.D. </title> <type> Thesis, </type> <institution> University of Washington, Dept. of Computer Science & Engineering, </institution> <year> 1995. </year>
Reference-contexts: Most current mixed processor-FPGA systems suffer from a communication bottleneck between the processor and the reconfigurable logic <ref> [Hauck95] </ref>. By placing the reconfigurable logic in a separate chip from the processor, the limited off-chip bandwidth and added delay interfere in efficient FPGA-processor communication. The resulting overhead requires that large chunks of the application code must be mapped to the reconfigurable logic to achieve any performance benefits at all.
Reference: [Hauck97] <author> S. Hauck, M. Hosler, T. Fry, </author> <title> High-Performance Carry Chains for Reconfigurable Computing, </title> <note> submitted to IEEE Symposium on Custom Computing Machines , 1997. </note>
Reference-contexts: Note that logic block, but not the actual implementation. Specifically, Chimaeras carry chain is not a simple ripple-carry, but instead uses an innovative high-performance carry chain structure that can provide the same functionality with more than an order of magnitude less delay <ref> [Hauck97] </ref>. There are some unusual aspects of the Chimaera architecture designed to allow it to efficiently provide custom instructions for its host processor. First, there are no state-holding elements in the Reconfigurable Array. Most FPGAs have Flip Flops or Latches in their logic block in order to implement sequential logic.
Reference: [Rajamani96] <author> S. Rajamani, P. Viswanath, </author> <title> A Quantitative Analysis of Processor - Programmable Logic Interface, </title> <booktitle> IEEE Symposium on FPGAs for Custom Computing Machines , 1996. </booktitle>
Reference-contexts: All of these factors keep reconfigurable computing from entering the mainstream, and drive up the cost and complexity of these systems. There has been initial work done on integrating processors and reconfigurable logic <ref> [French93, Albaharna94, DeHon94, Razdan94a, Razdan94b, Albaharna96, Rajamani96, Wirthlin95, Wittig96] </ref>. However, these systems in general use standard FPGA architectures, architectures that have not been designed to effectively support the needs of integrated FPGA-processor systems.
Reference: [Razdan94a] <author> R. Razdan, PRISC: </author> <title> Programmable Reduced Instruction Set Computers, </title> <type> Ph.D. Thesis, </type> <institution> Harvard University, Division of Applied Sciences, </institution> <year> 1994. </year>
Reference-contexts: All of these factors keep reconfigurable computing from entering the mainstream, and drive up the cost and complexity of these systems. There has been initial work done on integrating processors and reconfigurable logic <ref> [French93, Albaharna94, DeHon94, Razdan94a, Razdan94b, Albaharna96, Rajamani96, Wirthlin95, Wittig96] </ref>. However, these systems in general use standard FPGA architectures, architectures that have not been designed to effectively support the needs of integrated FPGA-processor systems. <p> R i Fast Carry Reg. Ports 4-LUT/ Reg. Ports 4-LUT/ I1 I2 I3 I4 I1 I2 I3 I4 Longline B Longline A routing structure. The Reconfigurable Array itself is shown in Figure 2 and Triptych FPGA [Hauck92, Borriello95, Ebeling95], the Altera FLEX 8000 series [Altera95], and PRISC <ref> [Razdan94a, Razdan94b] </ref>. The routing structure is shown in Figure 2 . The reconfigurable logic is broken into rows of logic cells between routing channels. Within that row, there is one cell per bit in the processors memory word, so for a 32-bit processor there are 32 cells per row.
Reference: [Razdan94b] <author> R. Razdan, M. D. Smith, </author> <title> A High-Performance Microarchitecture with Hardware-Programmable Functional Units, </title> <booktitle> International Symposium on Microarchitecture , pp. </booktitle> <pages> 172-180, </pages> <year> 1994. </year>
Reference-contexts: All of these factors keep reconfigurable computing from entering the mainstream, and drive up the cost and complexity of these systems. There has been initial work done on integrating processors and reconfigurable logic <ref> [French93, Albaharna94, DeHon94, Razdan94a, Razdan94b, Albaharna96, Rajamani96, Wirthlin95, Wittig96] </ref>. However, these systems in general use standard FPGA architectures, architectures that have not been designed to effectively support the needs of integrated FPGA-processor systems. <p> R i Fast Carry Reg. Ports 4-LUT/ Reg. Ports 4-LUT/ I1 I2 I3 I4 I1 I2 I3 I4 Longline B Longline A routing structure. The Reconfigurable Array itself is shown in Figure 2 and Triptych FPGA [Hauck92, Borriello95, Ebeling95], the Altera FLEX 8000 series [Altera95], and PRISC <ref> [Razdan94a, Razdan94b] </ref>. The routing structure is shown in Figure 2 . The reconfigurable logic is broken into rows of logic cells between routing channels. Within that row, there is one cell per bit in the processors memory word, so for a 32-bit processor there are 32 cells per row.
Reference: [Wirthlin95] <author> M. J. Wirthlin, B. L. Hutchings, </author> <title> A Dynamic Instruction Set Computer, </title> <booktitle> IEEE Symposium on FPGAs for Custom Computing Machines, </booktitle> <year> 1995. </year>
Reference-contexts: All of these factors keep reconfigurable computing from entering the mainstream, and drive up the cost and complexity of these systems. There has been initial work done on integrating processors and reconfigurable logic <ref> [French93, Albaharna94, DeHon94, Razdan94a, Razdan94b, Albaharna96, Rajamani96, Wirthlin95, Wittig96] </ref>. However, these systems in general use standard FPGA architectures, architectures that have not been designed to effectively support the needs of integrated FPGA-processor systems.
Reference: [Wittig96] <author> R. Wittig, P. Chow, OneChip: </author> <title> An FPGA Processor with Reconfigurable Logic, </title> <booktitle> IEEE Symposium on FPGAs for Custom Computing Machines , 1996. </booktitle>
Reference-contexts: All of these factors keep reconfigurable computing from entering the mainstream, and drive up the cost and complexity of these systems. There has been initial work done on integrating processors and reconfigurable logic <ref> [French93, Albaharna94, DeHon94, Razdan94a, Razdan94b, Albaharna96, Rajamani96, Wirthlin95, Wittig96] </ref>. However, these systems in general use standard FPGA architectures, architectures that have not been designed to effectively support the needs of integrated FPGA-processor systems.
References-found: 16

