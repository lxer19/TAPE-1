URL: http://www.cs.purdue.edu/homes/pascucci/ps-definitivi/sm-95.ps.gz
Refering-URL: 
Root-URL: 
Title: Dimension-Independent Convex-Cell Based HPC: Representation Scheme and Implementation Issues  
Author: Valerio Pascucci Vincenzo Ferrucci Alberto Paoluzzi zx 
Note: This work was partially supported from Italian Research Council, with contract n. 91.03226.64, within the "PF Edilizia" Project.  
Address: Via Segre 2, 00146 Roma, Italy  Via Buonarroti 12, 00185 Roma, Italy  
Affiliation: Dip. di Disc. Scientifiche: Sez. Informatica, Terza Universita  Dip. di Informatica e Sistemistica, Universita "La Sapienza"  
Abstract: This paper is devoted to the discussion of some of the design issues which concern the representation scheme underlying the geometrical nucleus of the PLASM design language. A central choice in the representation of geometry within the language was to store the minimum possible amount of topology. E.g., the boundary of a polyhedron in &lt; 3 , which is a set of 3D polygons, is stored without adjacencies. Thus, each such boundary polygon is considered as an elementary polyhedron within its affine hull, and represented as a solid 2D decomposition in convex cells. This representation allows to easily perform some operations that are not usually available in a geometric modeler, as well as to represent both manifolds and non-manifolds in a uniform manner. In particular, each geometrical object is represented as a multilevel hierarchical structure (Hierarchical Polyhedral Complex, HPC) that collects a set of elementary polyhedra, affinely mapped from their local coordinate systems and grouped as a whole. Two representation are provided for the same geometry: a weak and a complete representation. In a weak representation the set of elementary polyhedra collected in a hierarchical structure constitutes a covering of the required pointset. Conversely, in a complete representation the elementary polyhedra are assumed to be pairwise disjoint. The validity check of weak geometrical data (polyhedral sequences) can therefore be performed at a syntactical level, whether the test over complete geometrical data (polyhedral complexes) is much harder. A conversion function is given that allows to transform a weak polyhedral sequence into a complete polyhedral complex, by removing the intersections between polyhedra. For each operator (defined both on sequences and complexes), the conversion function establishes a homomorfism between the spaces of weak and complete representations. Each operator can so be implemented within the domain that seems more appropriate, performing possible conversions only when really necessary. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bernardini, F., Ferrucci, V., Paoluzzi, A., and Pascucci, V. </author> <title> Product operator on cell complexes. In Solid Modeling '93, Second ACM/IEEE Symposium on Solid Modeling and Applications (a) (b) dimetric view, </title> <address> (b) dimetric cutaway view. (Montreal, CA, </address> <year> 1993), </year> <editor> J. Turner, J. Rossignac, and G. Allen, Eds., </editor> <publisher> ACM Press, </publisher> <pages> pp. 43-52. </pages>
Reference-contexts: The authors believe this choice has strong implications on the efficiency and coverage of the proposed scheme. Several basic operations, e.g. the extrusion of cells and the product of complexes (see <ref> [1] </ref>) become natural and efficient. A similar influence is expected on the usual Booleans, a point which is subject of on-going research. Last but not least, this approach can be also extended to curved cells described as the intersection of implicit nonlinear inequalities.
Reference: [2] <author> Cattani, C., and Paoluzzi, A. </author> <title> Boundary integration over linear polyhedra. </title> <booktitle> Computer Aided Design 22, </booktitle> <month> 2 (Mar. </month> <year> 1990), </year> <pages> 130-135. </pages>
Reference-contexts: We noted in fact that the (very simple) adjacency data structures used in our previous prototype modelers [7, 3] are quite unused when a solid model is rendered by some graphics server, and even when the model is used to compute the integral properties <ref> [2] </ref> of the object. Hence, following the old, good CSG approach [12], we decided to associate to any model an acyclic multigraph which stores the hierarchical object structure, i.e. both the operations and the sub-components which generate any object component. <p> A short review of the literature on design languages can be found in [8]. Some design choices peculiar to the representation described in the following are based on the solid modeling experience gained at "La Sapienza" in the development of the 3D polyhedral modeler Minerva <ref> [7, 2] </ref> and the multidimensional modeler Simple n X [5], currently extended with the HPC representation and used as the geometry engine of the PLASM language. The paper is structured as follows.
Reference: [3] <author> Ferrucci, V., and Paoluzzi, A. </author> <title> Extrusion and boundary evaluation for multidimensional polyhedra. </title> <booktitle> Computer Aided Design 23, </booktitle> <month> 1 (Feb. </month> <year> 1991), </year> <pages> 40-50. </pages>
Reference-contexts: 1 Introduction The main novelty that the representation discussed in this paper exhibits with respect to standard current solid modeling technology is the decision of storing as little topology as possible. We noted in fact that the (very simple) adjacency data structures used in our previous prototype modelers <ref> [7, 3] </ref> are quite unused when a solid model is rendered by some graphics server, and even when the model is used to compute the integral properties [2] of the object.
Reference: [4] <author> Howard, T., Hewitt, W., Hubbold, R., and Wyrwas, K. K. </author> <title> A Practical Introduction to PHIGS and PHIGS PLUS. </title> <publisher> Addison Wesley, </publisher> <address> Reading, MA, </address> <year> 1991. </year>
Reference-contexts: Terminal nodes are associated to elementary polyhedra (see Figure 1). Notice how different instances can refer to the same polyhedron (complex), to which different affine maps are applied, thereby avoiding unnecessary duplication of information, a technique commonly found in standard graphics systems <ref> [4] </ref>. The progressive enlargement of the domains of abstract mathematical models corresponds to a similar increase of the representational power.
Reference: [5] <author> Paoluzzi, A., Bernardini, F., Cattani, C., and Ferrucci, V. </author> <title> Dimension-independent modeling with simplicial complexes. </title> <journal> ACM Transactions on Graphics 12, </journal> <month> 1 (Jan. </month> <year> 1993), </year> <pages> 56-102. </pages>
Reference-contexts: Primitive shapes are here replaced by polyhedra of any dimension, defined in their minimal affine hull, and possibly mapped in a higher dimensional embedding space. Motivations for a dimension-independent approach to solid modeling are widely discussed in [13] and <ref> [5] </ref>. Motivations for a functional approach to geometric programming and modeling are given in [6]. A short review of the literature on design languages can be found in [8]. <p> Some design choices peculiar to the representation described in the following are based on the solid modeling experience gained at "La Sapienza" in the development of the 3D polyhedral modeler Minerva [7, 2] and the multidimensional modeler Simple n X <ref> [5] </ref>, currently extended with the HPC representation and used as the geometry engine of the PLASM language. The paper is structured as follows.
Reference: [6] <author> Paoluzzi, A., Pascucci, V., and Vicentino, M. </author> <title> Geometric programming: A programming approach to geometric design. </title> <journal> ACM Transactions on Graphics, </journal> <note> accepted for publication, </note> <year> 1995. </year>
Reference-contexts: In a few words, with respect to the representation of topology, geometry and structure, the representation scheme proposed here can be seen exactly half-way between solid modeling and contemporary standard graphics. This representation scheme is being extensively used within the geometry engine of the functional design language PLASM <ref> [8, 6] </ref>. Another choice, again inspired from CSG, consists in the use of implicit linear inequalities for the represen-tation of convex cells. The authors believe this choice has strong implications on the efficiency and coverage of the proposed scheme. <p> Motivations for a dimension-independent approach to solid modeling are widely discussed in [13] and [5]. Motivations for a functional approach to geometric programming and modeling are given in <ref> [6] </ref>. A short review of the literature on design languages can be found in [8].
Reference: [7] <author> Paoluzzi, A., Ramella, M., and Santarelli, A. </author> <title> Boolean algebra over linear polyhedra. </title> <booktitle> Computer Aided Design 21, </booktitle> <address> 8 (Oct. </address> <year> 1989), </year> <pages> 474-484. </pages>
Reference-contexts: 1 Introduction The main novelty that the representation discussed in this paper exhibits with respect to standard current solid modeling technology is the decision of storing as little topology as possible. We noted in fact that the (very simple) adjacency data structures used in our previous prototype modelers <ref> [7, 3] </ref> are quite unused when a solid model is rendered by some graphics server, and even when the model is used to compute the integral properties [2] of the object. <p> A short review of the literature on design languages can be found in [8]. Some design choices peculiar to the representation described in the following are based on the solid modeling experience gained at "La Sapienza" in the development of the 3D polyhedral modeler Minerva <ref> [7, 2] </ref> and the multidimensional modeler Simple n X [5], currently extended with the HPC representation and used as the geometry engine of the PLASM language. The paper is structured as follows.
Reference: [8] <author> Paoluzzi, A., and Sansoni, C. </author> <title> Programming language for solid variational geometry. </title> <booktitle> Computer Aided Design 24, 7 (1992), </booktitle> <pages> 349-366. </pages>
Reference-contexts: In a few words, with respect to the representation of topology, geometry and structure, the representation scheme proposed here can be seen exactly half-way between solid modeling and contemporary standard graphics. This representation scheme is being extensively used within the geometry engine of the functional design language PLASM <ref> [8, 6] </ref>. Another choice, again inspired from CSG, consists in the use of implicit linear inequalities for the represen-tation of convex cells. The authors believe this choice has strong implications on the efficiency and coverage of the proposed scheme. <p> Motivations for a dimension-independent approach to solid modeling are widely discussed in [13] and [5]. Motivations for a functional approach to geometric programming and modeling are given in [6]. A short review of the literature on design languages can be found in <ref> [8] </ref>. <p> Hence, every instance is subtracted from all instances which appear later in the sequence, according to the denotation of "progressive difference". An example of the application of the D function is shown in Figure 4 (see also <ref> [8] </ref>). Notice that the application of a progressive difference to two polyhedral sequences which differ only in the order of their instances may produce two different polyhedral complexes.
Reference: [9] <author> Pascucci, V., Ferrucci, V., and Paoluzzi, A. </author> <title> Dimension-independent convex-cell based HPC: Skeletons and product. </title> <note> To appear as Tech. Rep., </note> <institution> Dip. di Informatica e Sistemistica, Universita "La Sapienza", </institution> <year> 1995. </year>
Reference-contexts: Notice that a d-complex consists only of full-dimensional cells, and therefore differs from the notion of cell complex of algebraic topology, where a complex contains also lower-dimensional entities. The computation of lower dimensional cells of a d-complex can be accomplished, when explicitly required, through the k-skeleton extraction operator <ref> [9] </ref>. The support space of a d-complex is the set union of the pointsets corresponding to its cells. The definition of polyhedron follows: Definition 5 A d-polyhedron P E d is the support space of some d-complex K. <p> As stated in Section 3.2 the point (1) is encompassed by the current definition of the scheme, and supported in the implementation by the product of polyhedra and k-skeleton extraction operators (see Figure 5), described in details in <ref> [9] </ref>. Anyway, standard Booleans need more research and experimentation. Currently, we are able to compute only the intersection of polyhedral complexes. About extension (2), we are testing a simple but effective method.
Reference: [10] <author> Rappoport, A. </author> <title> A scheme for single instancing representation in hierarchical assembly graphs. </title> <booktitle> In Proceedings Modeling in Computer Graphics: Methods and Applications (Genova, </booktitle> <address> Italy, June 1993), </address> <publisher> Springer Verlag, </publisher> <pages> pp. 213-223. </pages>
Reference-contexts: in the present context present similarity with those proposed by Rossignac and Requicha in [14], where the Constructive Non-Regularized Geometry representation, a broad generalization of CSG schemata [12], is introduced and fundamental algorithms for a very large class of solid and non-solid objects are discussed (see also Takala [15] and <ref> [10] </ref>). This class includes decompositions of objects with dishomogeneous material properties, incomplete boundaries and mixed dimensionality. The CNRG scheme retains the CSG merits, and in particular the mapping of the model to a generating expression and the independence from both the specific set of primitive shapes used and their representation.
Reference: [11] <editor> Rees, E. G. </editor> <booktitle> Notes on Geometry. </booktitle> <publisher> Springer Verlag, </publisher> <address> Berlin, </address> <year> 1988. </year>
Reference-contexts: This asymmetry can be eliminated by using the representation of points in E d by means of homogeneous coordinates <ref> [11] </ref>. Hence, we assume to represent vertices as column vectors and facet covectors as row vectors.
Reference: [12] <author> Requicha, A. A. G. </author> <title> Representations for rigid solids: Theory, methods and systems. </title> <journal> ACM Computing Surveys 12, </journal> <month> 4 (Dec. </month> <year> 1980), </year> <pages> 437-464. </pages>
Reference-contexts: Hence, following the old, good CSG approach <ref> [12] </ref>, we decided to associate to any model an acyclic multigraph which stores the hierarchical object structure, i.e. both the operations and the sub-components which generate any object component. <p> Some ideas that we discuss in the present context present similarity with those proposed by Rossignac and Requicha in [14], where the Constructive Non-Regularized Geometry representation, a broad generalization of CSG schemata <ref> [12] </ref>, is introduced and fundamental algorithms for a very large class of solid and non-solid objects are discussed (see also Takala [15] and [10]). This class includes decompositions of objects with dishomogeneous material properties, incomplete boundaries and mixed dimensionality. <p> An element from the domain R is mapped to an element of the range M as follows, where parentheses are used for ordered sequences and curly brackets for non-ordered sets. According to Requicha's terminology <ref> [12] </ref>, the inverse function r 1 : M ! R is a representation scheme from the set of abstract mathematical models M to the set of representations R. hP i 7! rhP i = P ; hIi = (hT i; hP i) 7! r (hT i; hP i) = T (P
Reference: [13] <author> Requicha, A. A. G., and Rossignac, J. R. </author> <title> Solid modeling and beyond. </title> <journal> IEEE Computer Graphics and Applications 12, </journal> <month> 9 (Sept. </month> <year> 1992), </year> <pages> 31-44. </pages>
Reference-contexts: Primitive shapes are here replaced by polyhedra of any dimension, defined in their minimal affine hull, and possibly mapped in a higher dimensional embedding space. Motivations for a dimension-independent approach to solid modeling are widely discussed in <ref> [13] </ref> and [5]. Motivations for a functional approach to geometric programming and modeling are given in [6]. A short review of the literature on design languages can be found in [8].
Reference: [14] <author> Rossignac, J. R., and Requicha, A. A. G. </author> <title> Constructive non-regularized geometry. </title> <booktitle> Computer Aided Design 23, </booktitle> <month> 1 (Feb. </month> <year> 1991), </year> <pages> 21-32. </pages>
Reference-contexts: Last but not least, this approach can be also extended to curved cells described as the intersection of implicit nonlinear inequalities. Some ideas that we discuss in the present context present similarity with those proposed by Rossignac and Requicha in <ref> [14] </ref>, where the Constructive Non-Regularized Geometry representation, a broad generalization of CSG schemata [12], is introduced and fundamental algorithms for a very large class of solid and non-solid objects are discussed (see also Takala [15] and [10]). <p> We plan to devote further study to this point and remove the limitation within the future research effort, which will lead to the capability of describing more general object topology, according to the guidelines of <ref> [14] </ref>. 3.3 Weak Representation The "weak" representation scheme wr 1 is introduced in this Section. This scheme is based on an extension of the concept of polyhedral complex. At this purpose, we define the polyhedral sequence, which is derived by weakening the definition of polyhedral complex.
Reference: [15] <author> Takala, T. </author> <title> A taxonomy of geometric and topological models. </title> <booktitle> In Proceedings Eurographics Workshop on Mathematics and Computer Graphics (S. </booktitle> <address> Margherita, Genova, Italy, </address> <month> Oct. </month> <year> 1991). </year>
Reference-contexts: we discuss in the present context present similarity with those proposed by Rossignac and Requicha in [14], where the Constructive Non-Regularized Geometry representation, a broad generalization of CSG schemata [12], is introduced and fundamental algorithms for a very large class of solid and non-solid objects are discussed (see also Takala <ref> [15] </ref> and [10]). This class includes decompositions of objects with dishomogeneous material properties, incomplete boundaries and mixed dimensionality.
Reference: [16] <author> Tilove, R., and Requicha, A. A. G. </author> <title> Closure of Boolean operations on geometric entities. </title> <booktitle> Computer Aided Design 12, </booktitle> <address> 5 (Sept. </address> <year> 1980), </year> <pages> 219-220. </pages>
Reference-contexts: Hence, we define r fl = r in R, whether r fl (h ~ I i) = ~ I and r fl (hSi) = S. 3.3.2 Progressive Difference Let "" denote the regularized difference operator, defined as the closure of the interior of the set difference of the arguments <ref> [16] </ref>.
References-found: 16

