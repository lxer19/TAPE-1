URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr94/tr94-013.ps
Refering-URL: http://www.cis.ufl.edu/tech-reports/tech-reports/tr94-abstracts.html
Root-URL: http://www.cis.ufl.edu
Title: Minimum Area Joining of Compacted Cells  
Author: Seonghun Cho and Sartaj Sahni 
Keyword: and Phrases. Cell joining, cell stretching, compacted cells, multilayer river routing, symbolic sticks designs, VLSI design.  
Date: 94-013  
Address: Gainesville, FL 32611, USA  
Affiliation: Department of Computer and Information Science, University of Florida  
Pubnum: Technical Report  
Abstract: We consider the problem of joining a row of compacted cells so as to minimize the area occupied by the cells and the interconnects. The cell joining process includes cell stretching and river routing. Since we consider multilayer routing, we first develop necessary and sufficient conditions for feasible multilayer river routing. This is followed by a development of fast algorithms for the multilayer river routing problem. We then propose several heuristics to join a row of cells in such a way that area is minimized. The proposed heuristics are compared, experimentally with that proposed by Cheng and Despain [CHEN89]. 
Abstract-found: 1
Intro-found: 1
Reference: [BOYE88] <author> Boyer, D. G., </author> <title> Symbolic Layout Compaction Review, </title> <booktitle> 25th Design Automation Conference, </booktitle> <month> June </month> <year> 1988, </year> <pages> pp. 383-389. </pages>
Reference-contexts: This uses routing tracks in a channel between cells A and B but does not increase cell height. The pitch matching and river routing approaches to cell joining have been studied in <ref> [BOYE88] </ref> and [WEST81]. Algorithms for single-layer river routing can be found in 2 [LEIS83, MIRZ87, PINT82, PINT83]. Cell stretching (or pitch matching) increases the height of the layout while river routing increases its width. Both affect the layout area. The layout of Figure 1 (b) has area 150.
Reference: [CHEN89] <author> Cheng, G and A. Despain, Fang: </author> <title> A Joiner for Compacted Cells, </title> <booktitle> in VLSI 89, </booktitle> <year> 1989, </year> <pages> pp. 455-463. </pages>
Reference-contexts: Both affect the layout area. The layout of Figure 1 (b) has area 150. To compute the area of the layout of Figure 1 (c), we assume tracks have unit separation. So, the layout width is 14 and height is 11. The layout has area 154. Cheng and Despain <ref> [CHEN89] </ref> have proposed using a combination of cell stretching and river routing so as to obtain layouts with smaller area than possible when only one of these joining methods is used. Figure 1 (d) shows the result of joining cells A and B using both stretching and river routing. <p> Figure 1 (d) shows the result of joining cells A and B using both stretching and river routing. The area of this layout is 144. This is minimum for the instance of Figure 1 (a). Cheng and Despain <ref> [CHEN89] </ref> have proposed a heuristic for single layer joining of compacted cells. At each step of their heuristic either a row or column of compacted cells is joined. Following this, the row or column of joined cells is replaced by a composite cell that represents the result of joining. <p> Notice that when a row (column) of cells is joined, cells may be stretched vertically (horizontally) and river routing is done in a vertical (horizontal) channel. To join a row of cells, Cheng and Despain <ref> [CHEN89] </ref> bound the maximum height to which a cell may be stretched. This bound is h max + h 2 where h max is the height of the tallest compacted cell being joined and h avg is the average height of the cells being joined. <p> One may verify that since Heuristic 3 tries the maximum useful height (i.e., the height needed when no routing tracks are available), it generates optimal solutions when k = c. 5 Experimental Results We programmed our three heuristics as well as the heuristic Fang <ref> [CHEN89] </ref> in C and ran tests on a single KSR processor. Optimal solutions for instances with upto nine cells were obtained using the corrected version of the exhaustive search algorithm of [LIM92]. <p> Next, we considered the problem of joining a row of compacted cells and developed heuristics to stretch cells and river-route the nets so that the layout area is minimized. Our proposed heuristic was compared, experimentally, with Fang <ref> [CHEN89] </ref> and found to produce layouts with less area. However Fang is faster.
Reference: [HORO94] <author> Horowitz E. and S. Sahni, </author> <title> Fundatamentals of Data Structures in Pascal, 4th Edition, </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <year> 1994. </year>
Reference-contexts: The length of the longest path from the source vertex of the constraint graph to each of the remaining vertices can be computed in O (n) time by doing this in topological order <ref> [HORO94, Section 6.5] </ref>.
Reference: [LEIS83] <author> Leiserson, C. E. and R. Y. Pinter, </author> <title> Optimal Placement for River Routing, </title> <journal> SIAM Journal on Computing, </journal> <year> 1983, </year> <pages> pp. 447-462. </pages>
Reference-contexts: This uses routing tracks in a channel between cells A and B but does not increase cell height. The pitch matching and river routing approaches to cell joining have been studied in [BOYE88] and [WEST81]. Algorithms for single-layer river routing can be found in 2 <ref> [LEIS83, MIRZ87, PINT82, PINT83] </ref>. Cell stretching (or pitch matching) increases the height of the layout while river routing increases its width. Both affect the layout area. The layout of Figure 1 (b) has area 150. <p> We may assume an underlying grid with each terminal being at a grid position. In the case of a horizontal (vertical) channel the a i s and b i s are grid column (row) numbers. Leiserson and Pinter <ref> [LEIS83] </ref> have obtained the following necessary and sufficient condition for a river routing instance to be routable in a single layer using at most t 0 tracks. Theorem 1 [LEIS83] The river routing instance defined above is routable in a single layer using at most t 0 tracks if and only <p> Leiserson and Pinter <ref> [LEIS83] </ref> have obtained the following necessary and sufficient condition for a river routing instance to be routable in a single layer using at most t 0 tracks. Theorem 1 [LEIS83] The river routing instance defined above is routable in a single layer using at most t 0 tracks if and only if (a) a i+t b i t for every i m t. <p> a i &lt; t) then t := t + 1 for l := l + 1g else i := i + 1 ; end ; actual routing for all l layers can be done in O (mt) time using the computed layer assignment and the single layer routing algorithm of <ref> [LEIS83] </ref>. Using Theorem 2, we can develop a linear time algorithm to determine the minimum number of tracks needed to route an instance in l layers as well as to find the minimum number of layers needed for a t track routing.
Reference: [LIM92] <author> Lim, A., </author> <title> Efficient Algorithms for CAD in VLSI, </title> <type> PhD Dissertation, </type> <institution> Univ. of Min-nesota, </institution> <year> 1992. </year>
Reference-contexts: They develop fast polynomial time algorithms to obtain the minimum area join of two cells. In addition, they are able to obtain, in low order polynomial time, minimum area joins that minimize the length of the longest wire or the total wire length. Lim <ref> [LIM92] </ref> has proposed an O (n (n=c) c1 ) algorithm to find the minimum area join of c cells having a total of n terminals. This algorithm does an exhaustive search over all possible numbers of tracks in the c 1 routing channels between adjacent cells. <p> The time required per track assignment is O (n) and the worst case number of track 3 (a) 1-layer (b) 2-layer assignments is O ((n=c) c1 ). The algorithm of <ref> [LIM92] </ref> is flawed as it handles channels with zero routing tracks by joining the adjacent cells using minimum height cell stretching and then considers the joined cells as one. <p> If we wish to minimize the maximum wirelength while keeping area minimum, the asymptotic time complexity is still O (m 2 ). The total wire length can be minimized while keeping area minimum in O (m 2 log m) time. 3 Constraint Graph Representation Lim <ref> [LIM92] </ref> has proposed the use of a constraint graph to determine the terminal positions in a row of compacted cells. <p> These are represented by the broken edges of Figure 6 (b). Figure 6 (b) is for the two layer case. 9 m c f 2 1 1 sink 1 1 1 di source 2 1 1 1 1 Lim <ref> [LIM92] </ref> has shown that the constraint graph is acyclic provided the number of tracks in each routing channel is &gt; 0. <p> I.e., the two cells are replaced by their minimum area join. This strategy can be shown to result in non optimality of the algorithm proposed in <ref> [LIM92] </ref>. To preserve optimality, it is necessary to merge the vertices that represent terminals that are the endpoints of nets that are to be routed using no tracks as in Figure 7. The resultant constraint graph is also acyclic. <p> Furthermore, the graph can be constructed in O (n) time given the number of routing layers and the number of tracks in each channel. The constraint graph described by us is identical to that of <ref> [LIM92] </ref> except in the way channels with zero tracks are handled and in that our graph is defined for l 1 routing layers while 10 procedure Heuristic1 ; begin for i := 1 to c 1 do begin determine the minimum area join of each pair of adjacent cells ; select <p> 1 routing layers while 10 procedure Heuristic1 ; begin for i := 1 to c 1 do begin determine the minimum area join of each pair of adjacent cells ; select the pair that has minimum area and replace it with its minimum area join ; end ; that of <ref> [LIM92] </ref> is only for l = 1. The length of the longest path from the source vertex of the constraint graph to each of the remaining vertices can be computed in O (n) time by doing this in topological order [HORO94, Section 6.5]. <p> Furthermore, Lim <ref> [LIM92] </ref> has shown that such a positioning of terminals results in a stretched layout of minimum height for the given channel widths. As a result, when channel widths are known, cells can be stretched to minimize area in O (n) time. <p> The channel widths that result in minimum area can be determined in O (n (n=c) c1 ) time where c is the number of cells by trying out all possible channel widths <ref> [LIM92] </ref>. <p> Optimal solutions for instances with upto nine cells were obtained using the corrected version of the exhaustive search algorithm of <ref> [LIM92] </ref>. Our test set consisted of instances that had a number of cells, c, equal to one of the numbers in the set f3, : : :, 9, 10, 20, 50, 100g. For each value of c, there were twenty instances and the results were averaged over these instances. <p> As is evident, each of the heuristics proposed in this paper gave noticeably better solutions than did Fang. This table is only for the cases 3 c 9 as for c &gt; 9 the optimal algorithm of <ref> [LIM92] </ref> required too much time to complete. cells t Fang Heuristic Heuristic Heuristic3 1 2 k = 2 k = 3 k = 4 4 4 10.0 0.9 0.1 0 0 - 6 6 12.7 2.4 0.3 0.2 0.2 0.0 8 8 17.9 2.7 0.4 0.3 0.3 0.1 t = number

Reference: [MCCR85] <author> McCreight, E. M., </author> <title> Priority Search Trees, </title> <journal> SIAM J. Comput., </journal> <volume> Vol 14, No 2, </volume> <month> May </month> <year> 1985, </year> <pages> pp. 257-276. </pages>
Reference-contexts: This contradiction implies that procedure Greedy cannot fail unless conditions (a) and (b) are not satisfied. 2 Procedure RoundRobin is easily seen to have complexity of O (m). A straightforward implementation of procedure Greedy will have complexity of O (ml). However, by using priority search trees <ref> [MCCR85] </ref> the complexity can be reduced to O (m log l). In practice, since l is quite small, it is unlikely that the priority search tree implementation will run faster than the straightforward implementation in which the l layers are checked in sequence.
Reference: [MIRZ87] <author> Mirzaian, A., </author> <title> River Routing in VLSI, </title> <journal> Journal of Computer and System Sciences, </journal> <volume> Vol 34, </volume> <year> 1987, </year> <pages> pp. 43-54. </pages>
Reference-contexts: This uses routing tracks in a channel between cells A and B but does not increase cell height. The pitch matching and river routing approaches to cell joining have been studied in [BOYE88] and [WEST81]. Algorithms for single-layer river routing can be found in 2 <ref> [LEIS83, MIRZ87, PINT82, PINT83] </ref>. Cell stretching (or pitch matching) increases the height of the layout while river routing increases its width. Both affect the layout area. The layout of Figure 1 (b) has area 150.
Reference: [PINT82] <author> Pinter, R. Y., </author> <title> On routing two-point nets across a channel, </title> <booktitle> 19th Design Automation Conference, </booktitle> <month> June </month> <year> 1982, </year> <pages> pp. 894-902. </pages>
Reference-contexts: This uses routing tracks in a channel between cells A and B but does not increase cell height. The pitch matching and river routing approaches to cell joining have been studied in [BOYE88] and [WEST81]. Algorithms for single-layer river routing can be found in 2 <ref> [LEIS83, MIRZ87, PINT82, PINT83] </ref>. Cell stretching (or pitch matching) increases the height of the layout while river routing increases its width. Both affect the layout area. The layout of Figure 1 (b) has area 150.
Reference: [PINT83] <author> Pinter, R. Y., </author> <title> River Routing: Methodology and Analysis, </title> <booktitle> Third Caltech Conference on VLSI, </booktitle> <month> March </month> <year> 1983. </year>
Reference-contexts: This uses routing tracks in a channel between cells A and B but does not increase cell height. The pitch matching and river routing approaches to cell joining have been studied in [BOYE88] and [WEST81]. Algorithms for single-layer river routing can be found in 2 <ref> [LEIS83, MIRZ87, PINT82, PINT83] </ref>. Cell stretching (or pitch matching) increases the height of the layout while river routing increases its width. Both affect the layout area. The layout of Figure 1 (b) has area 150.

References-found: 9

