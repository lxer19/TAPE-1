URL: ftp://ftp.cse.ucsc.edu/pub/reinas/papers/vis_wdidv95-sv.ps.Z
Refering-URL: http://www.cse.ucsc.edu/research/slvg/rvis.html
Root-URL: http://www.cse.ucsc.edu
Title: Realtime Database Support for Environmental Visualization  
Author: Craig M. Wittenbrink, Eric Rosen, Alex Pang, Suresh K. Lodha, and Patrick Mantey 
Address: California, Santa Cruz Santa Cruz, CA 95064  
Affiliation: Baskin Center for Computer Engineering Information Sciences University of  
Abstract: Much research has been done on interfacing databases to visualization applications, and there are many varied approaches. We describe the lessons learned during the design and development of the REINAS software (Real-time Environmental Information Network and Analysis System). We have developed visualization applications that have been in public use for several years and that visualize data from relational database engines. Our most popular tools are World Wide Web access tools. Our most sophisticated tools have novel user interfaces-Spray and CSpray. In this paper we present the interface and API (application programming interface) issues, as well as the development of the required middleware. The REINAS system is a complete data management system whose requirements and construction were driven primarily by the visualization needs, and therefore presents a unique view of how to utilize commercial relational database technologies for environmental visualization.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Tracey Bernath. </author> <title> Distributed GIS visualization system. </title> <booktitle> In GIS/LIS Proceedings, </booktitle> <volume> Vol. 1, </volume> <pages> pages 51-58. </pages> <booktitle> American Society for Photogrammetry and Remote Sensing, </booktitle> <month> November </month> <year> 1992. </year>
Reference-contexts: The work most similar to ours, using a middleware and an API approach to create the interface, is in the GIS literature <ref> [1, 2] </ref>. In addition, see [8] for recent research articles in interfacing visualization to database. Our system is different than the mentioned literature, in that it does real-time to the second, provides middleware and apis for custom applications, works on a regional, not global, scale, and provides sophisticated 3D visualization. <p> Xmet API Opcodes typedef struct - long opcode; /* request opcode */ long iop1, /* integer operands (32-bit) */ iop2, TimeType dop1, /* time operands */ dop2; - XmetRequestType; Fig. 13. Xmet API Request Structure into object oriented API designs such as Bernath <ref> [1] </ref>, Berrill et al. [2], and Lee et al. [8]. In designing the RSObject API we considered numerous alternatives, and settled upon one which was best in terms of the metrics given. The RSObject API uses separate types, but passes objects around using pointers for efficiency and generic calls.
Reference: 2. <author> Arthur Berrill and George Moon. </author> <title> An object oriented approach to an integrated GIS system. </title> <booktitle> In Proceedings of GIS/LIS, </booktitle> <pages> pages 59-63, </pages> <address> San Jose, CA, </address> <month> November </month> <year> 1992. </year> <booktitle> American Society for Photogrammetry and Remote Sensing. </booktitle>
Reference-contexts: The work most similar to ours, using a middleware and an API approach to create the interface, is in the GIS literature <ref> [1, 2] </ref>. In addition, see [8] for recent research articles in interfacing visualization to database. Our system is different than the mentioned literature, in that it does real-time to the second, provides middleware and apis for custom applications, works on a regional, not global, scale, and provides sophisticated 3D visualization. <p> Xmet API Opcodes typedef struct - long opcode; /* request opcode */ long iop1, /* integer operands (32-bit) */ iop2, TimeType dop1, /* time operands */ dop2; - XmetRequestType; Fig. 13. Xmet API Request Structure into object oriented API designs such as Bernath [1], Berrill et al. <ref> [2] </ref>, and Lee et al. [8]. In designing the RSObject API we considered numerous alternatives, and settled upon one which was best in terms of the metrics given. The RSObject API uses separate types, but passes objects around using pointers for efficiency and generic calls.
Reference: 3. <author> Randall S. Cerveny et al. </author> <title> Development of a real-time interactive storm-monitoring program in Phonenix, Arizona. </title> <journal> Bulletin of the American Meteorological Society, </journal> <volume> 73(6) </volume> <pages> 773-779, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: Another Sequoia 2000 prototype effort, developed interfaces to existing visualization programs [7]. Gershon et al. [4] overview the fundamental problems in large data managment and visualization. There are real-time systems that use less sophisticated database systems <ref> [3, 6, 15] </ref>, and others that run at much less than the seconds timing of REINAS [5, 11]. The work most similar to ours, using a middleware and an API approach to create the interface, is in the GIS literature [1, 2].
Reference: 4. <author> Nahum D. Gershon and C. Grant Miller. </author> <title> Dealing with the data deluge. Special report: Environment, part 2. </title> <journal> IEEE Spectrum, </journal> <volume> 30(7) </volume> <pages> 28-32, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: A large multi-year development project, which focuses on global environmental science is the Sequoia 2000 project [16]. Stonebreaker et al. have also developed custom visualization tools, one which they call Tioga [17]. Another Sequoia 2000 prototype effort, developed interfaces to existing visualization programs [7]. Gershon et al. <ref> [4] </ref> overview the fundamental problems in large data managment and visualization. There are real-time systems that use less sophisticated database systems [3, 6, 15], and others that run at much less than the seconds timing of REINAS [5, 11].
Reference: 5. <author> S. Howes. </author> <title> Use of satellite and radar images in operational precipitation nowcasting. </title> <journal> Journal of the British Interplanetary Society, </journal> <volume> 41(10) </volume> <pages> 455-460, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: Gershon et al. [4] overview the fundamental problems in large data managment and visualization. There are real-time systems that use less sophisticated database systems [3, 6, 15], and others that run at much less than the seconds timing of REINAS <ref> [5, 11] </ref>. The work most similar to ours, using a middleware and an API approach to create the interface, is in the GIS literature [1, 2]. In addition, see [8] for recent research articles in interfacing visualization to database.
Reference: 6. <author> J.M. Intriery, C.G. Little, W.J. Shaw, </author> <title> R.M. Banta, P.A. </title> <journal> Durkee, and R.M. Hard-esty. The land/sea breeze experiment (LASBEX). Bulletin of the American Meteorological Society, </journal> <volume> 71(5):656, </volume> <month> May </month> <year> 1990. </year>
Reference-contexts: Another Sequoia 2000 prototype effort, developed interfaces to existing visualization programs [7]. Gershon et al. [4] overview the fundamental problems in large data managment and visualization. There are real-time systems that use less sophisticated database systems <ref> [3, 6, 15] </ref>, and others that run at much less than the seconds timing of REINAS [5, 11]. The work most similar to ours, using a middleware and an API approach to create the interface, is in the GIS literature [1, 2].
Reference: 7. <author> Peter Kochevar et al. </author> <title> Bridging the gap between visualization and data management: A simple visualization management system. </title> <booktitle> In Proceedings of Visualization 93, </booktitle> <pages> pages 94-101, </pages> <address> San Jose, CA, </address> <month> October </month> <year> 1993. </year> <note> IEEE. </note>
Reference-contexts: A large multi-year development project, which focuses on global environmental science is the Sequoia 2000 project [16]. Stonebreaker et al. have also developed custom visualization tools, one which they call Tioga [17]. Another Sequoia 2000 prototype effort, developed interfaces to existing visualization programs <ref> [7] </ref>. Gershon et al. [4] overview the fundamental problems in large data managment and visualization. There are real-time systems that use less sophisticated database systems [3, 6, 15], and others that run at much less than the seconds timing of REINAS [5, 11].
Reference: 8. <author> John P. Lee and Georges G. Grinstein, </author> <title> editors. Database Issues for Data Visualization, </title> <booktitle> IEEE Visualization '93 Workshop. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: The work most similar to ours, using a middleware and an API approach to create the interface, is in the GIS literature [1, 2]. In addition, see <ref> [8] </ref> for recent research articles in interfacing visualization to database. Our system is different than the mentioned literature, in that it does real-time to the second, provides middleware and apis for custom applications, works on a regional, not global, scale, and provides sophisticated 3D visualization. <p> Xmet API Request Structure into object oriented API designs such as Bernath [1], Berrill et al. [2], and Lee et al. <ref> [8] </ref>. In designing the RSObject API we considered numerous alternatives, and settled upon one which was best in terms of the metrics given. The RSObject API uses separate types, but passes objects around using pointers for efficiency and generic calls. We do dynamic type checking on the object type.
Reference: 9. <author> D.D.E. Long, P.E. Mantey, C. M. Wittenbrink, T.R. Haining, and B.R. Montague. </author> <title> REINAS the real-time environmental information network and analysis system. </title> <booktitle> In Proceedings of COMPCON, </booktitle> <pages> pages 482-487, </pages> <address> San Francisco, CA, </address> <month> March </month> <year> 1995. </year> <note> IEEE. </note>
Reference-contexts: As the most visible part of our project we have numerous applications that interface to relational database technology. Much of the behind the scenes work has been in developing the system middleware and database schema <ref> [9] </ref>, but the interface has also held numerous challenges. We have satisfied several of the challenges, and face in the near term some additional large challenges.
Reference: 10. <author> Bruce J. MacLennan. </author> <booktitle> Principles of Programming Languages: Design, Evaluation, and Implementation. </booktitle> <publisher> Holt, Rinehart, and Winston, </publisher> <address> New York, </address> <note> second edition, </note> <year> 1987. </year>
Reference-contexts: In the design of this API, there were goals in object oriented design of the entire API and to satisfy several goals fundamental to language design. The design issues are numerous and involve tradeoffs in 1) type checking, 2) security principle 3) efficiency 3) maintainability 4) readability 5) flexibility <ref> [10] </ref>.
Reference: 11. <author> M.D. Milnes. </author> <title> Interpretation of remotely sensed images using historic data. </title> <journal> Journal of the British Interplanetary Society, </journal> <volume> 41(10) </volume> <pages> 451-454, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: Gershon et al. [4] overview the fundamental problems in large data managment and visualization. There are real-time systems that use less sophisticated database systems [3, 6, 15], and others that run at much less than the seconds timing of REINAS <ref> [5, 11] </ref>. The work most similar to ours, using a middleware and an API approach to create the interface, is in the GIS literature [1, 2]. In addition, see [8] for recent research articles in interfacing visualization to database.
Reference: 12. <author> Guy W. Oliver. </author> <title> Visualizing the tracking and diving behavior of marine mammals. </title> <booktitle> In Proc. Visualization, </booktitle> <publisher> page in press, </publisher> <address> Atlanta, GA, </address> <month> October </month> <year> 1995. </year> <note> IEEE. </note>
Reference-contexts: The list of sensors currently supported include: fixed and portable meteorological stations, NOAA buoys, CODARS, wind profilers, seal tracks <ref> [12] </ref>, and ADCP. Currently, not all the data from these sensors are coming off the database. For example, some of them have to be retrieved from the sensor logs once every hour and stored in a local file.
Reference: 13. <author> Alex Pang. </author> <title> Spray rendering. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 14(5):57 - 63, </volume> <year> 1994. </year>
Reference-contexts: It allows users to explore large data sets interactively using different visualization techniques. It is also extensible and can easily grow with users' needs. The underlying mechanism that provides the visualization capability in analysis mode is based on spray rendering <ref> [13] </ref>. Spray rendering provides the users with the metaphor of spray painting their data sets as a means of visualizing them. In its simplest form, data are painted or rendered visible by Fig. 3.
Reference: 14. <author> Alex Pang, Craig M. Wittenbrink, and Tom Goodman. CSpray: </author> <title> A collaborative scientific visualization application. </title> <booktitle> In Proceedings SPIE IS &T's Conference Proceedings on Electronic Imaging: Multimedia Computing and Networking, </booktitle> <volume> volume 2417, </volume> <pages> pages 317-326, </pages> <month> February </month> <year> 1995. </year>
Reference-contexts: Sample visualization in analysis mode using spray rendering. 2.2 Collaborative Spray To facilitate the sharing of data and collaboration among science colleagues, we have also added a collaborative feature to the REINAS visualization system, enabling geographically distributed researchers to work within a shared virtual workspace and create visualization products <ref> [14] </ref>. There are several components that are needed to make this feasible: session manager, sharing data/cans, floor control, multiple window, audio/video support, and different collaboration/compression levels. Figure 5 shows some of these. Users can collaborate at different levels.
Reference: 15. <author> D.J. Schwab and K.W. </author> <title> Bedford. Initial implementation of the great lakes forecasting system: A real-time system for predicting lake circulation and thermal structure. Water Poll. </title> <journal> Res. J., </journal> 29(2/3):203-220, 1994. 
Reference-contexts: Another Sequoia 2000 prototype effort, developed interfaces to existing visualization programs [7]. Gershon et al. [4] overview the fundamental problems in large data managment and visualization. There are real-time systems that use less sophisticated database systems <ref> [3, 6, 15] </ref>, and others that run at much less than the seconds timing of REINAS [5, 11]. The work most similar to ours, using a middleware and an API approach to create the interface, is in the GIS literature [1, 2].
Reference: 16. <author> Michael Stonebraker. </author> <title> Sequoia 2000: A reflection on the first three years. </title> <journal> IEEE Computational Science and Engineering, </journal> <volume> 1(4) </volume> <pages> 63-72, </pages> <month> Winter </month> <year> 1994. </year>
Reference-contexts: Related Work. There are similar systems to REINAS, and there is similar work in combining visualization to databases. We briefly review some of the relevant related work. A large multi-year development project, which focuses on global environmental science is the Sequoia 2000 project <ref> [16] </ref>. Stonebreaker et al. have also developed custom visualization tools, one which they call Tioga [17]. Another Sequoia 2000 prototype effort, developed interfaces to existing visualization programs [7]. Gershon et al. [4] overview the fundamental problems in large data managment and visualization.
Reference: 17. <author> Michael Stonebraker et al. </author> <title> Tioga: A database-oriented visualization tool. </title> <booktitle> In Proceedings of Visualization 93, </booktitle> <pages> pages 86-93, </pages> <address> San Jose, CA, </address> <month> October </month> <year> 1993. </year> <title> IEEE. This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: We briefly review some of the relevant related work. A large multi-year development project, which focuses on global environmental science is the Sequoia 2000 project [16]. Stonebreaker et al. have also developed custom visualization tools, one which they call Tioga <ref> [17] </ref>. Another Sequoia 2000 prototype effort, developed interfaces to existing visualization programs [7]. Gershon et al. [4] overview the fundamental problems in large data managment and visualization.
References-found: 17

