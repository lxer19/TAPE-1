URL: http://www.cs.vt.edu/~irchen/ps/tkde95.ps
Refering-URL: http://www.cs.vt.edu/~irchen/
Root-URL: http://www.cs.vt.edu
Title: On the Reliability of AI Planning Software in Real-Time Applications  
Author: Ing-Ray Chen Farokh B. Bastani and Ta-Wei Tsao 
Keyword: Index Terms: Artificial intelligence (AI), heuristics, AI planning software, real-time, reliability analysis, overall hardware/software system reliability.  
Abstract: We define the reliability of a real-time system incorporating AI planning programs as the probability that, for each problem-solving request issued from the environment, the embedded system can successfully plan and execute a response within a specified real-time deadline. A methodology is developed for evaluating the reliability of such systems taking into consideration the fact that, other than program bugs, the intrinsic characteristics of AI planning programs may also cause the embedded system to fail even after all software bugs are removed from the program. The utility of the methodology is demonstrated by applying it to the reliability evaluation of two AI planning algorithms embedded in a real-time multicriteria route-finding system. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R.E. Barlow, F. Proschan, </author> <title> Statistical Theory of Reliability and Life Testing, </title> <publisher> Holt, Rinehart and Winston, Inc., </publisher> <address> New York, </address> <year> 1975. </year>
Reference: [2] <author> M. Boddy, </author> <title> "Anytime problem solving using dynamic programming," </title> <booktitle> 9th National Conf. Artificial Intelligence, </booktitle> <pages> pp. 738-743, </pages> <year> 1991. </year>
Reference: [3] <author> I.R. Chen and F.B. </author> <title> Bastani, </title> <journal> "Effect of Artificial Intelligence planning-procedures on system reliability," IEEE Trans. Reliability, </journal> <month> Aug. </month> <year> 1991 </year> <month> , pp.364-369. </month>
Reference: [4] <author> I.R. Chen and B. Poole, </author> <title> "Performance of rule grouping on a real-time expert system architecture," </title> <journal> to appear in IEEE Trans. Knowledge and Data Eng. </journal>
Reference-contexts: Our method, however, is universally applicable for evaluating the effect of different design alternatives on system reliability. A possible future extension of this work is to analyze the effect of parallel planning algorithms on the system reliability of production systems, e.g., distributed algorithms with rule partitioning <ref> [4] </ref>, parallel Rete or Treat matching algorithms [9, 16], and parallel rule firing algorithms [12].
Reference: [5] <author> I.R. Chen, F.B. Bastani and T.W. Tsao, </author> <title> "On the Intrinsic Faults of Real-Time AI Planning Programs," </title> <type> Technical Report UMCIS-1993-10, </type> <institution> Dept. of Computer Science, University of Mississippi, </institution> <year> 1993. </year>
Reference-contexts: Each system was tested with 10,000 missions and software and hardware failure data were collected during the testing and debugging phase. These failure data, one set for each system, are too large to be included in this paper and can be found in <ref> [5] </ref>. We note that even A fl may occasionally incur heuristic failures, although the frequency of this is not as high as RT A fl .
Reference: [6] <author> T. Dean, and M. Boddy, </author> <title> "An analysis of time-dependent planning," </title> <booktitle> 7th National Conf. Artificial Intelligence, </booktitle> <month> August, </month> <year> 1988, </year> <pages> pp. 49-54. </pages>
Reference-contexts: However, this approach is practical only for applications where a low quality solution is available initially which can be improved over time by using a class of planning algorithms called anytime algorithms <ref> [6] </ref>. For our vehicle routing system, since the vehicle system must follow existing routes on the ground, 17 there is no immediate solution to begin with.
Reference: [7] <author> A.C. Diaz, </author> <title> An Overview of Realtime Expert Systems, </title> <booktitle> National Research Council Canada, ERA-380, </booktitle> <volume> NRC No. 31759, </volume> <month> April </month> <year> 1990. </year>
Reference: [8] <author> J. J. Grimm, G.B. Lamont, and A.J. Terzuoli, </author> <title> "A parallelized search strategy for solving a multicriteria aircraft routing problem," </title> <booktitle> Proc. 1993 ACM/SIGAPP Symposium on Applied Computing, </booktitle> <address> Indianapolis, </address> <year> 1993, </year> <pages> pp. 570-577. </pages>
Reference-contexts: The objective is to demonstrate how the model can be used to evaluate the reliability of a real-time system incorporating AI planning algorithms. A. Description of the Case Study The real-time system used in our case-study is a version of the multicriteria aircraft routing system reported in <ref> [8] </ref> where an AI planning algorithm embedded in the system is used to plan and follow a path across radar-threating areas to reach a target location within a specified real-time deadline. Missions are assigned one at a time. <p> Two criteria for the cost function are the radar detection probability and the total distance traveled, the relative weight of which is determined by a design parameter called w radar . Adopting the cost function definition in <ref> [8] </ref>, the cost between any two points with a direct edge is given by cost = w radar fi p radar fi distance + (1 w radar ) fi distance (9) where w radar is the relative weight for the radar detection criterion, p radar is the radar detection probability of <p> Nevertheless, a potential problem with A fl is that the system may not be able to plan and execute a solution within the real-time deadline t R due to excessive planning. In <ref> [8] </ref>, A fl was selected as the planning algorithm for the aircraft routing system.
Reference: [9] <author> A. Gupta, </author> <title> Parallelism in Production Systems, </title> <publisher> Los Altos, Morgan Kaufman, </publisher> <year> 1987. </year>
Reference-contexts: A possible future extension of this work is to analyze the effect of parallel planning algorithms on the system reliability of production systems, e.g., distributed algorithms with rule partitioning [4], parallel Rete or Treat matching algorithms <ref> [9, 16] </ref>, and parallel rule firing algorithms [12].
Reference: [10] <author> B. Hamidzadeh, and S. Shekhar, "DYNORA: </author> <title> A real-time planning algorithm to meet response-time constraints in dynamic environments," </title> <booktitle> Proc. 3rd Int. Conf. Tools for AI, </booktitle> <address> San Jose, </address> <year> 1991, </year> <pages> pp. 228-235. </pages>
Reference-contexts: The cost of the distance between two connected routing points is in the interval of <ref> [10; 100] </ref> in unit of feet. Each radar is capable of detecting the vehicle with a circular detection intensity 14 inversely proportional to the distance between the vehicle and the location of the radar. <p> There are many such real-time planning algorithms reported in the literature over the past five years, such as RT A fl [14], T CA fl [23], and DY N ORA <ref> [10] </ref>. Without loss of generality, this paper considers RT A fl ; other real-time algorithms can be analyzed using our model in a similar way. As in A fl , RT A fl also expands the route with the minimum f = g +h value.
Reference: [11] <author> P.G. Hoel, S.C. Port, and C.J. Stone, </author> <title> Introduction to Probability Theory, </title> <publisher> Houghton Mi*in Co., </publisher> <address> Boston, </address> <year> 1971. </year>
Reference-contexts: The maximum likelihood estimate of 3 due to deadline-violation can be estimated in a similar way as q (6) where q is the total number of deadline-violation failures experienced during the testing and de bugging period. A reasonable model for G is the Beta (ff; fi) distribution 1 <ref> [11] </ref> with density g (x) = (ff+fi) 0 otherwise The maximum likelihood estimates of ff and fi can be obtained by numerically solving the following equations using the fuzzy level data set (f 1 ; f 2 ; :::; f r ) collected during the testing phase: r @ ^ff @(^ff)
Reference: [12] <author> T. Ishida, </author> <title> "Parallel rule firing in production systems," </title> <journal> IEEE Trans. Knowledge and Data Eng., </journal> <volume> Vol. 3, No. 1, </volume> <month> March, </month> <year> 1991, </year> <month> pp.11-17. </month>
Reference-contexts: A possible future extension of this work is to analyze the effect of parallel planning algorithms on the system reliability of production systems, e.g., distributed algorithms with rule partitioning [4], parallel Rete or Treat matching algorithms [9, 16], and parallel rule firing algorithms <ref> [12] </ref>.
Reference: [13] <author> B.W. Johnson, </author> <title> Design and Analysis of Fault Tolerant Digital Systems, </title> <publisher> Addison Wesley, </publisher> <year> 1989. </year>
Reference-contexts: any mission, the hardware system can be considered to have failed if the estimated hardware reliability of the mission is less than a specified hardware reliability requirement, e.g., 0:9 i where the notation 0:9 i represents a hardware reliability requirement having i 9's to the right of the decimal point <ref> [13] </ref>. Such hardware failure data can be collected during the testing phase on a mission by mission basis. <p> In hardware reliability theory, it is common to assume that a hardware component obeys this "exponential failure" law during its useful life period <ref> [13] </ref>. Of course, other distributions such as the Weibull distribution [22] can also be used to model the computer system if justified. <p> The hardware reliability of the execution phase of the j th mission, on the other hand, can be calculated based on the plan formulated by the embedded AI planning procedure in response to the j th mission, using standard hardware reliability assessment techniques <ref> [13, 22] </ref>.
Reference: [14] <author> R.E. Korf, </author> <title> "Real-time heuristic search," </title> <journal> Artificial Intelligence Journal, </journal> <volume> Vol. 42, </volume> <year> 1990, </year> <pages> pp. 189-211. </pages>
Reference-contexts: There are many such real-time planning algorithms reported in the literature over the past five years, such as RT A fl <ref> [14] </ref>, T CA fl [23], and DY N ORA [10]. Without loss of generality, this paper considers RT A fl ; other real-time algorithms can be analyzed using our model in a similar way. <p> h value of a neighbor is computed such that if the neighbor was visited before, the h value is looked-up from a hash table that updates the h values of all visited nodes; otherwise, a heuristic evaluation function, possibly augmented by lookahead search, is used to compute the h value <ref> [14] </ref>. The advantage of RT A fl is that the system may experience fewer real-time deadline-violation failures. However, more heuristic failures may occur because routes planned may have a higher radar detection probability when compared with those planned by A fl .
Reference: [15] <author> T.J. Laffey, P.A. Cox, J.L. Schmidt, S.M. Kao and J.Y. </author> <title> Read, "Real-time knowledge based systems", </title> <journal> AI Magazine, </journal> <month> Spring </month> <year> 1988, </year> <pages> pp. 27-45. </pages>
Reference: [16] <author> D.P Miranker, and B.J. Lofaso, </author> <title> "The organization and performance of a TREAT-based production system compiler," </title> <journal> IEEE Trans. Knowledge and Data Eng., </journal> <volume> Vol. 3, No. 1, </volume> <month> March </month> <year> 1991, </year> <pages> pp. 3-10. </pages>
Reference-contexts: A possible future extension of this work is to analyze the effect of parallel planning algorithms on the system reliability of production systems, e.g., distributed algorithms with rule partitioning [4], parallel Rete or Treat matching algorithms <ref> [9, 16] </ref>, and parallel rule firing algorithms [12].
Reference: [17] <author> J.D. Musa and K. Okumoto, </author> <title> "A logarithmic Poisson execution time model for software reliability measurement," </title> <booktitle> in Proc. 7th Int. Conf. Soft. </booktitle> <address> Eng., Orlando, FL., </address> <month> Mar. </month> <year> 1984, </year> <pages> pp. 230-237. </pages>
Reference-contexts: (j) j=1 N ci 2 X 0 Hence, pdf (i) e log 0 N ci +1 0 N ci + 1 ( 0 N c (i1) + 1) 1 From this, approximate values of the maximum likelihood estimates of 0 and can be obtained by numerically solving the following equations <ref> [17] </ref>: s ^ j=1 ^ 0 ^ N cj + 1 N cs = 0; s X N cj + ^ 2 ^ 0 N cs = 0: (4) The failure probability density of heuristic failures on a mission by mission basis is P DF fi (N ) = 2 e <p> cj + 1 N cs = 0; s X N cj + ^ 2 ^ 0 N cs = 0: (4) The failure probability density of heuristic failures on a mission by mission basis is P DF fi (N ) = 2 e 2 N Therefore, the maximum likelihood estimate <ref> [17] </ref> of 2 due to heuristic faults can be estimated as ^ 2 = N fr where r is the total number of heuristic failures experienced during the testing period, and N f r , defined as before, is the mission number for which the r th heuristic fault is experienced.
Reference: [18] <author> J.D. Musa, A. Iannino, and K. Okumoto, </author> <title> Software Reliability: Measurement, Prediction, Application, </title> <publisher> McGraw-Hill, </publisher> <year> 1987. </year>
Reference: [19] <author> J. Pearl, </author> <title> Heuristics. </title> <publisher> Addison-Wesley, </publisher> <year> 1984. </year>
Reference: [20] <author> C.V. Ramamoorthy, </author> <title> and F.B. Bastani, "Software reliability status and perspective," </title> <journal> IEEE Trans. Soft. Eng., </journal> <month> July </month> <year> 1982, </year> <pages> pp. 354-371. </pages>
Reference: [21] <editor> E. Rich, </editor> <booktitle> Artificial Intelligence, 2nd. </booktitle> <publisher> Ed., McGraw-Hill, </publisher> <year> 1991. </year>
Reference-contexts: Because the estimate of the remaining cost of a partially explored route can be underestimated, i.e., using the linear cost between the frontier point of a partially explored route and the target location with the radar detection probability set to 0, the final route planned is optimal <ref> [21, 24] </ref>, implying that the route planned should incur a smaller radar detection probability. Nevertheless, a potential problem with A fl is that the system may not be able to plan and execute a solution within the real-time deadline t R due to excessive planning.
Reference: [22] <author> S. M. Ross, </author> <title> Introduction to Probability Models, 4th Ed., </title> <publisher> Academic Press, </publisher> <year> 1989. </year>
Reference-contexts: In hardware reliability theory, it is common to assume that a hardware component obeys this "exponential failure" law during its useful life period [13]. Of course, other distributions such as the Weibull distribution <ref> [22] </ref> can also be used to model the computer system if justified. <p> The hardware reliability of the execution phase of the j th mission, on the other hand, can be calculated based on the plan formulated by the embedded AI planning procedure in response to the j th mission, using standard hardware reliability assessment techniques <ref> [13, 22] </ref>.
Reference: [23] <author> B.W. Wah, and L.C. Chu, </author> <title> "T CA fl A time constrained approximation A fl search algorithm," </title> <booktitle> Proc. 2nd Inter. Conf. Tools for AI, </booktitle> <address> Washington D.C., </address> <year> 1990, </year> <pages> pp. 314-320. </pages>
Reference-contexts: There are many such real-time planning algorithms reported in the literature over the past five years, such as RT A fl [14], T CA fl <ref> [23] </ref>, and DY N ORA [10]. Without loss of generality, this paper considers RT A fl ; other real-time algorithms can be analyzed using our model in a similar way. As in A fl , RT A fl also expands the route with the minimum f = g +h value.
Reference: [24] <author> P.H. Winston, </author> <booktitle> Artificial Intelligence, 2nd Edition, </booktitle> <publisher> Addison-Wesley, </publisher> <year> 1984. </year>
Reference-contexts: Some possible design options are given below. * Option 1 is to use an optimal search algorithm such as A fl with lower-bound estimates <ref> [24] </ref> as the underlying planning algorithm. <p> Because the estimate of the remaining cost of a partially explored route can be underestimated, i.e., using the linear cost between the frontier point of a partially explored route and the target location with the radar detection probability set to 0, the final route planned is optimal <ref> [21, 24] </ref>, implying that the route planned should incur a smaller radar detection probability. Nevertheless, a potential problem with A fl is that the system may not be able to plan and execute a solution within the real-time deadline t R due to excessive planning.
Reference: [25] <author> L.A. Zadeh, </author> <title> "Fuzzy sets and information granularity," Advances in Fuzzy Set Theory and Application (edited by M.M. </title> <editor> Gupta, R.D. Ragade, and R.R. Yager), </editor> <publisher> North-Holland, </publisher> <year> 1979. </year> <month> 23 </month>
References-found: 25

