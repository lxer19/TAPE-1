URL: http://www3.cm.deakin.edu.au/~psmith/Journal.ps.gz
Refering-URL: http://www3.cm.deakin.edu.au/~psmith/Publications.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Programming is a difficult skill to master and novices need to develop appropriate knowledge structures
Author: ANDERSON, J. R. REISER, B. J. BIRCH, M. R., BORONI, C. M., GOOSEY, F. W., PATTON, S. D., POOLE, D. K., PRATT, C. M. ROSS, R. J. (). DEW, R. A. NEWLANDS, D. A. (). DU BOULAY, B., OSHEA, T MONK, J. (). FREUND, S. N. ROBERTS, E. S. (). THETIS: JOHNSON, W. L. SOLOWAY, E. M. (). LESGOLD, A., RUBINSON, H., FELTOVICH, P., Glaser, R., Klopfer, D. Wang, Y. (). Chi, R. Glaser M. J. Farr MCCALLA, G. I. GREER, J. E. (). T. Chan J. A. MULHOLLAND, P. A. (). PETRE, M., BLACKWELL, A. F., GREEN, T. R. G Stasko, J., Domingue, J., Price, B., Brown, M. (eds) PRICE, B. A., SMALL, I. S. BAECKER, R. M. (). ROSS, R. J. SMITH, P. A. WEBB, G. I. (). SOLOWAY, E., ADELSON, B., EHRLICH, K. (). M. T. Chi, R. Glaser, M. J. Farr (Eds.). 
Address: Hillsdale, New Jersey: Erlbaum.  
Affiliation: CAL Research Group  29, The Open University.  Knowledge Media Institute, Open University.  
Date: April, 159-175.  
Note: Conclusions  References  (1985). The Lisp Tutor. Byte,  DYNALAB, A Dynamic Computer Science Laboratory Infrastructure Featuring Program Animation. Special Interest Group on Computer Science Education, 27(1), 29-33.  to Novices. International Journal of Man-Machine Studies, 14, 237-249. DU BOULAY, B. (1986). Some Difficulties of Learning to Program. Journal of Educational Computing Research, 2(1), 57-73. FLEURY, A. (1991).  the National Conference on Artificial Intelligence, 162-168. JONES, A. (1982). Mental Models of a first programming language.  Eds. The nature of expertise, pp 311-342.  Phd Thesis,  (1997). Cognitive Questions in Software Visualisation, To appear in  (1991). Experience with the DYNAMOD Program Animator. Special Interest Group on Computer Science Education, 23(1), 35-42.  The Nature of Expertise. Hillsdale, NJ: Erlbaum.  
Pubnum: Technical Report No.  
Abstract: coding and debugging. We wish to conduct experiments that explore the efficacy of a glass-box interpreter in the development of these skills. The experiment that we conducted provides evidence that low-level program visualisation tools, such as glass-box interpreters, can be beneficial in teaching novice programmers. It provided concrete empirical evidence that such a tool can provide assistance in learning new programming concepts. It also indicated that the use of such a tool could enable students to assimilate new information more effectively. This suggests that our tool presents a conceptual model that provides an appropriate framework onto which learners can assimilate new information. Bradman provides information in a dynamic manner while being very simple to use and makes visible different views of the program execution that are normally hidden. We believe that these features are important in enabling students to better visualise how a program works as it executes. We further believe that the benefits shown in comprehension will be mirrored in benefits to program development and program debugging and this will be the basis of further research. 
Abstract-found: 1
Intro-found: 1
Reference: <author> ANDERSON, J. R. & REISER, B. J. </author> <year> (1985). </year> <title> The Lisp Tutor. </title> <journal> Byte, </journal> <month> April, </month> <pages> 159-175. </pages>
Reference: <author> BIRCH, M. R., BORONI, C. M., GOOSEY, F. W., PATTON, S. D., POOLE, D. K., PRATT, C. M. & ROSS, R. J. </author> <year> (1995). </year> <title> DYNALAB, A Dynamic Computer Science Laboratory Infrastructure Featuring Program Animation. </title> <booktitle> Special Interest Group on Computer Science Education, </booktitle> <volume> 27(1), </volume> <pages> 29-33. </pages>
Reference: <author> DEW, R. A. & NEWLANDS, D. A. </author> <year> (1996). </year> <title> Basic Programming Concepts. Deakin University study guide. </title>
Reference: <author> DU BOULAY, B., OSHEA, T & MONK, J. </author> <year> (1981). </year> <title> The Black Box inside the Glass Box: Presenting Computing Concepts to Novices. </title> <journal> International Journal of Man-Machine Studies, </journal> <volume> 14, </volume> <pages> 237-249. </pages>
Reference: <author> DU BOULAY, B. </author> <year> (1986). </year> <title> Some Difficulties of Learning to Program. </title> <journal> Journal of Educational Computing Research, </journal> <volume> 2(1), </volume> <pages> 57-73. </pages>
Reference: <author> FLEURY, A. </author> <year> (1991). </year> <title> Parameter Passing: The Rules the Students Construct. </title> <journal> Communications of the ACM, </journal> <pages> 283-286. </pages>
Reference: <author> FREUND, S. N. & ROBERTS, E. S. </author> <year> (1996). </year> <title> THETIS: An ANSI C Programming Environment Designed for Introductory Use. </title> <booktitle> Special Interest Group on Computer Science Education, </booktitle> <volume> 28(1), </volume> <pages> 300-304. </pages>
Reference: <author> JOHNSON, W. L. & SOLOWAY, E. M. </author> <year> (1984). </year> <title> Intention-Based Diagnosis of Programming Errors. </title> <booktitle> Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> 162-168. </pages>
Reference: <author> JONES, A. </author> <year> (1982). </year> <title> Mental Models of a first programming language. CAL Research Group Technical Report No. </title> <type> 29, </type> <institution> The Open University. </institution>
Reference: <author> LESGOLD, A., RUBINSON, H., FELTOVICH, P., Glaser, R., Klopfer, D. & Wang, Y. </author> <year> (1988). </year> <title> Expertise in a complex skill: Diagnosing X-ray Pictures. </title> <editor> In M.T.H. Chi, R. Glaser & M. J. Farr Eds. </editor> <booktitle> The nature of expertise, </booktitle> <pages> pp 311-342. </pages> <address> Hillsdale, New Jersey: </address> <publisher> Erlbaum. </publisher>
Reference: <author> MCCALLA, G. I. & GREER, J. E. </author> <year> (1993). </year> <title> Learning About Programming. </title> <editor> In T. Chan & J. A. </editor> <booktitle> Self (Eds) Emerging Computer Technologies in Education, </booktitle> <publisher> AACE. </publisher>
Reference: <author> MULHOLLAND, P. A. </author> <year> (1995). </year> <title> A framework for describing and evaluating software visualisation systems: A case study in PROLOG. </title> <type> Phd Thesis, </type> <institution> Knowledge Media Institute, Open University. </institution>
Reference: <author> PETRE, M., BLACKWELL, A. F., & GREEN, T. R. </author> <title> G (1997). Cognitive Questions in Software Visualisation, </title> <note> To appear in Stasko, </note> <author> J., Domingue, J., Price, B., & Brown, M. </author> <title> (eds) Software Visualisation: Programming as a MultiMedia experience., </title> <publisher> MIT Press. </publisher>
Reference: <author> PRICE, B. A., SMALL, I. S. & BAECKER, R. M. </author> <year> (1993). </year> <title> A Principled Taxonomy of Software Visualisation. </title> <journal> Journal of Visual Languages and Computing, </journal> <volume> 4(3), </volume> <pages> 211-266. </pages>
Reference: <author> ROSS, R. J. </author> <year> (1991). </year> <title> Experience with the DYNAMOD Program Animator. </title> <booktitle> Special Interest Group on Computer Science Education, </booktitle> <volume> 23(1), </volume> <pages> 35-42. </pages>
Reference: <author> SMITH, P. A. & WEBB, G. I. </author> <year> (1995). </year> <title> Transparency Debugging With Explanations for Novice Programmers. </title> <booktitle> Proceedings of the 2nd Workshop on Automated and Algorithmic Debugging, </booktitle> <address> St.Malo, France. </address>

Reference: <institution> Authors Philip A. Smith School of Computing and Mathematics Geelong Campus Deakin University Geelong, 3217 Victoria Australia email - psmith@deakin.edu.au Geoffrey I. Webb School of Computing and Mathematics Geelong Campus Deakin University Geelong, </institution> <address> 3217 Victoria Australia email - webb@deakin.edu.au </address>
References-found: 17

