URL: ftp://coast.cs.purdue.edu/pub/doc/cryptography/mod-key-mgmt-aix.ps.Z
Refering-URL: http://www.cs.purdue.edu/coast/archive/data/categ12.html
Root-URL: http://www.cs.purdue.edu
Email: fpau,garay,amir,hugog@watson.ibm.com  
Title: Design and Implementation of Modular Key Management Protocol and IP Secure Tunnel on AIX  
Author: Pau-Chen Cheng Juan A. Garay Amir Herzberg Hugo Krawczyk 
Affiliation: IBM Thomas J. Watson Research Center  
Date: June 1995  June 21, 1995  
Address: Salt Lake City, Utah,  Yorktown Heights, NY 10598, U.S.A.  
Note: appeared in the 5th USENIX UNIX Security Conference,  
Abstract: This paper presents the design principles, architecture, implementation and performance of our modular key management protocol (MKMP) and an IP secure tunnel protocol (IPST) which protects the secrecy and integrity of IP datagrams using cryptographic functions. To use the existing IP infrastructure, MKMP is built on top of UDP and the IPST protocol is built by encapsulating IP datagrams. 
Abstract-found: 1
Intro-found: 1
Reference: [Ass86] <author> American Bankers Association. </author> <title> American National Standard for Financial Institution Message Authentication (Wholesale). ANSI X9.9, </title> <note> 1981, revised 1986. </note>
Reference-contexts: K: The shared master key. M AC K : A Message Authentication Code (or integrity check function) which is applied to a piece of information for authentication using a secret key K. (Examples include block ciphers, e.g. DES, in CBC-MAC mode <ref> [Ass86] </ref>, or key-ed cryptographic hash functions, e.g. keyed-MD5 with prefixed and/or suffixed key [Tsu92].) SK: The session key, outcome of the protocol. f K : a pseudorandom function with index K. (Roughly speaking, pseudorandom functions are characterized by the pseudorandomness of their output, namely, each bit in the output of the
Reference: [Atk95] <author> Randall Atkinson. </author> <title> IPv6 Security Architecture. </title> <institution> IETF draft-ietf-ipngwg-sec-00.txt, </institution> <month> February </month> <year> 1995. </year>
Reference-contexts: A basic property of SAID's is that they are freely chosen by the local implementation; no special structure or semantics are assumed. More on SAID can be found in <ref> [Atk95] </ref>. STPI : Secure Transformation Prepended Information. The content and length of this field depends on the particular cryptographic operations performed on the IPST packet. For example, if DES-CBC is used for encryption, then this field will contain the CBC initial vector.
Reference: [BCK95] <author> Mihir Bellare, Ran Canetti, and Hugo Krawczyk. </author> <title> Keying MD5 Message Authentication via Iterated Pseudorandom 12 ness. </title> <note> paper in preparation, </note> <month> February </month> <year> 1995. </year>
Reference-contexts: Our prototype uses DES-CBC for encryption and keyed-MD5 (key is pre-fixed and post-fixed) for message authentication. The combination of prepended and appended key for keyed-MD5 is chosen for added security of the authentication function (for security discussions of keyed-MD5 see <ref> [Tsu92, BCK95] </ref>). The message authentication computation is done prior to encrypting the payload.
Reference: [BGH + 93] <author> Ray Bird, Inder Gopal, Amir Herzberg, Philippe A. Jason, Shay Kutten, Refik Molva, and Moti Yung. </author> <title> Systematic Design of a Family of Attack-Resistant Authentication Protocols. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 11(5), </volume> <month> June </month> <year> 1993. </year>
Reference-contexts: This follows from properties of pseudorandom functions, and our particular application of these functions. Finally, simplicity and being amenable to analysis and proof are important features of any cryptographic protocol. The protocol presented here is structured, simple, and thus easier to analyze. Indeed, methods similar to those of <ref> [BGH + 93, BR93] </ref> can be used to establish the protocol's desired security properties. session key negotiation protocol, including only the relevant information. There are two parties, S (for sender) and R (the receiver). S is the party that initiates the protocol.
Reference: [BGH + 95] <author> Ray Bird, Inder Gopal, Amir Herzberg, Phil Jason, Shay Kutten, Refik Molva, and Moti Yung. </author> <title> The KryptoKnight Family of Light-Weight Protocols for Authentication and Key Distribution. </title> <journal> IEEE/ACM Transc. on Networking, </journal> <volume> 3(1), </volume> <month> February </month> <year> 1995. </year>
Reference-contexts: The master key engine may be a simple user-level command which implements manual distribution of master keys. Or, it may use a KDC 4 -based protocol, such as Kerberos or NetSP <ref> [BGH + 95] </ref>. Or, it may be a process which derives master keys from public keys. At present, the master key engine implements manual key distribution and parameter negotiation.
Reference: [BR93] <author> M. Bellare and P. Rogaway. </author> <title> Entity Authentication and Key Distribution. </title> <booktitle> In Advances in Cryptography, </booktitle> <month> August </month> <year> 1993. </year>
Reference-contexts: This follows from properties of pseudorandom functions, and our particular application of these functions. Finally, simplicity and being amenable to analysis and proof are important features of any cryptographic protocol. The protocol presented here is structured, simple, and thus easier to analyze. Indeed, methods similar to those of <ref> [BGH + 93, BR93] </ref> can be used to establish the protocol's desired security properties. session key negotiation protocol, including only the relevant information. There are two parties, S (for sender) and R (the receiver). S is the party that initiates the protocol.
Reference: [CB94] <author> William R. Cheswick and Steven M. Bellovin. </author> <title> Firewalls and Internet Security Repelling the Willy Hacker. </title> <publisher> Addison Wes-ley, </publisher> <year> 1994. </year>
Reference-contexts: The integrity of IP headers can be protected using cryptographic techniques and therefore packet filtering [DBC92] can be done based on authentic information. This property is very use ful for Internet firewalls <ref> [CB94] </ref>. There are many possible applications for encryption and authentication between two systems on the Internet.
Reference: [CGHK94] <author> P. Cheng, J.A. Garay, A. Herzberg, and H. Krawczyk. </author> <title> Modular Key Management Protocol. </title> <institution> IETF draft-cheng-modular-ikmp-00.txt, </institution> <month> November </month> <year> 1994. </year>
Reference-contexts: Section 2 describes the MKMP and the IPST protocols, sections 3 and 4 describe the architecture of our implementation and section 5 discusses its performance. 2 Protocols This section presents the design philosophy and high-level description of the Modular Key Management Protocol <ref> [CGHK94] </ref> and the IPST protocol implemented by us. 2.1 Modular Key Management Proto col A typical key management scheme will have two main phases.
Reference: [DBC92] <author> Great Circle Associates D. Brent Chap-man. </author> <title> Network (In)Security Through IP Packet Filtering. </title> <booktitle> In UNIX Security Symposium III Proceedings, </booktitle> <pages> pages 63-76, </pages> <year> 1992. </year>
Reference-contexts: The reasons include: 1. The secrecy and integrity of data can be protected in an internetwork environment without affecting higher-layer protocols and appli cations; 2. The integrity of IP headers can be protected using cryptographic techniques and therefore packet filtering <ref> [DBC92] </ref> can be done based on authentic information. This property is very use ful for Internet firewalls [CB94]. There are many possible applications for encryption and authentication between two systems on the Internet.
Reference: [DH76] <author> Whitfield Diffie and Martin E. Hell-man. </author> <title> New Directions in Cryptography. </title> <journal> IEEE Transc. on Information Theory, </journal> <volume> IT-22(6), </volume> <month> November </month> <year> 1976. </year>
Reference-contexts: Or, it may be a process which derives master keys from public keys. At present, the master key engine implements manual key distribution and parameter negotiation. We are currently implementing a master key engine based on Diffie-Hellman key exchange <ref> [DH76] </ref> to be described in a 4 Key Distribution Center forthcoming paper. More on MKMP engine is described in section 4. 3.2 Policy Engine/Cache/Interface The policy engine is implemented as a user-level command.
Reference: [IB94a] <author> John Ioannidis and Matt Blaze. </author> <title> The Architecture and Implementation of Network-Layer Security under UNIX. </title> <booktitle> In Winter USENIX Conference Proceedings, </booktitle> <year> 1994. </year>
Reference-contexts: In addition, we are proposing our key management approach to the IETF IPSEC Working Group for possible inclusion as part of the Internet standard. Our work differs from swIPe <ref> [IB94a, IB94b] </ref> in that : 1) a key management protocol is implemented and linked with IPST; and 2) the IPST function is placed inside the kernel IP module and not in a network device driver. The organization of this paper is as follows. <p> The IPST engine invokes the crypto engine to perform encryption/decryption and message authentication. The crypto engine gets the necessary keys from the tunnel cache. Unlike swIPe <ref> [IB94a, IB94b] </ref>, the IPST engine is an AIX kernel extension and not a pseudo network device driver. This design choice is based on the following reasons : * Making IPST engine a pseudo network device driver may impose a strong and undesirable coupling between network security policies/operations and routing policies/operations.
Reference: [IB94b] <author> John Ioannidis and Matt Blaze. </author> <title> The swIPe IP Security Protocol. </title> <institution> IETF draft-ipsec-swipe-01.txt, </institution> <month> June </month> <year> 1994. </year>
Reference-contexts: In addition, we are proposing our key management approach to the IETF IPSEC Working Group for possible inclusion as part of the Internet standard. Our work differs from swIPe <ref> [IB94a, IB94b] </ref> in that : 1) a key management protocol is implemented and linked with IPST; and 2) the IPST function is placed inside the kernel IP module and not in a network device driver. The organization of this paper is as follows. <p> The IPST engine invokes the crypto engine to perform encryption/decryption and message authentication. The crypto engine gets the necessary keys from the tunnel cache. Unlike swIPe <ref> [IB94a, IB94b] </ref>, the IPST engine is an AIX kernel extension and not a pseudo network device driver. This design choice is based on the following reasons : * Making IPST engine a pseudo network device driver may impose a strong and undesirable coupling between network security policies/operations and routing policies/operations.
Reference: [KN93] <author> John Kohl and B. Clifford Neuman. </author> <title> The Kerberos Network Authentication Service (V5). Internet RFC 1510, </title> <month> September </month> <year> 1993. </year>
Reference-contexts: For example, DES-CBC and keyed MD5 are each crypto systems. Crypto systems are implemented as loadable kernel extension modules which register with the crypto engine when they are loaded into the kernel. This design idea comes from Kerberos version 5 <ref> [KN93] </ref> code; it enables crypto algorithms to be implemented as replaceable plug-in modules. Crypto systems are passed chains of kernel memory buffers (mbuf 's [LJFK86]) containing payloads on which they operate, and return their results in new chains of kernel memory buffers.
Reference: [LJFK86] <author> Samuel J. Lef-fler, William N. Joy, Robert S. Farby, and 13 Michale J. Karel. </author> <title> Networking Implementation Notes, 4.3BSD Edition. In UNIX System Manager's Manual, 4.3 Berke-ley Software Distribution, Virtual VAX-11 Edition. </title> <booktitle> USENIX Association, </booktitle> <month> April </month> <year> 1986. </year>
Reference-contexts: This design idea comes from Kerberos version 5 [KN93] code; it enables crypto algorithms to be implemented as replaceable plug-in modules. Crypto systems are passed chains of kernel memory buffers (mbuf 's <ref> [LJFK86] </ref>) containing payloads on which they operate, and return their results in new chains of kernel memory buffers. <p> Starting with 60 minutes, the refreshment period is cut in half repeatedly. An observable performance difference happened when the period is down to 2 seconds. We believe improvement in the synchronization mechanism between the read and insertion operations into the tunnel cache 9 The mtu <ref> [LJFK86] </ref> is 1492 bytes on model 360. can improve the performance. Further experiments are being conducted. Availability For availability of more detailed design information and source/binary codes, please contact the authors by e-mail.
Reference: [Pos81] <author> J. Postel. </author> <title> Internet Protocol. Internet RFC 791, </title> <month> September </month> <year> 1981. </year>
Reference-contexts: A security association between two communicating systems represents the information shared by these systems in order to control the secure communication between them. This information includes secret keys, key lifetimes, nonces, crypto algorithms, parameters, etc.. We subscribe to the view that IP-layer <ref> [Pos81] </ref> is a good place to secure data. The reasons include: 1. The secrecy and integrity of data can be protected in an internetwork environment without affecting higher-layer protocols and appli cations; 2.
Reference: [Riv92] <author> R. Rivest. </author> <title> Internet RFC 1321, </title> <month> April </month> <year> 1992. </year>
Reference-contexts: We use optimized IBM DES-CBC code, modified by us to work with the mbuf data structure. The MD5 code is from RFC1321 <ref> [Riv92] </ref>. The raw performance figures of these codes running on our test systems are shown in Table 1.
Reference: [Tsu92] <author> G. Tsudik. </author> <title> Message authentication with one-way hash functions. </title> <booktitle> In Proceedings of Infocom 92, </booktitle> <year> 1992. </year> <month> 14 </month>
Reference-contexts: M AC K : A Message Authentication Code (or integrity check function) which is applied to a piece of information for authentication using a secret key K. (Examples include block ciphers, e.g. DES, in CBC-MAC mode [Ass86], or key-ed cryptographic hash functions, e.g. keyed-MD5 with prefixed and/or suffixed key <ref> [Tsu92] </ref>.) SK: The session key, outcome of the protocol. f K : a pseudorandom function with index K. (Roughly speaking, pseudorandom functions are characterized by the pseudorandomness of their output, namely, each bit in the output of the function is unpredictable if K is unknown.) The above examples of MAC functions <p> Our prototype uses DES-CBC for encryption and keyed-MD5 (key is pre-fixed and post-fixed) for message authentication. The combination of prepended and appended key for keyed-MD5 is chosen for added security of the authentication function (for security discussions of keyed-MD5 see <ref> [Tsu92, BCK95] </ref>). The message authentication computation is done prior to encrypting the payload.
References-found: 17

