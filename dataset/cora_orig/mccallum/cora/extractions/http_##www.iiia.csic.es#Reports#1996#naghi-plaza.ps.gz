URL: http://www.iiia.csic.es/Reports/1996/naghi-plaza.ps.gz
Refering-URL: http://www.iiia.csic.es/Projects/FedLearn/CoopCBR.html
Root-URL: 
Email: nagendra@cs.umass.edu  enric@iiia.csic.es  
Title: Corporate Memories as Distributed Case Libraries  
Author: M.V. Nagendra Prasad Enric Plaza 
Address: Amherst, MA 01003, USA  Campus UAB, 08193, Bellaterra Catalonia, Spain  
Affiliation: Dept. of Computer Science University of Massachusetts  IIIA Artificial Intelligence Research Institute CSIC Spanish Council for Scientific Research  
Abstract: Rising operating costs and structural transformations such as resizing and globaliza-tion of companies all over the world have brought into focus the emerging discipline of knowledge management that is concerned with making knowledge pay off. Corporate memories form an important part of such knowledge management initiatives in a company. In this paper, we discuss how viewing corporate memories as distributed case libraries can benefit from existing techniques for distributed case-based reasoning for resource discovery and exploitation of previous expertise. We present two techniques developed in the context of multi-agent case-based reasoning for accessing and exploiting past experience from corporate memory resources. The first approach, called Negotiated Retrieval, deals with retrieving and assembling "case pieces" from different resources in a corporate memory to form a good overall case. The second approach, based on Federated Peer Learning, deals with two modes of cooperation called DistCBR and ColCBR that let an agent exploit the experience and expertise of peer agents to achieve a local task. fl The first author would like to acknowledge the support by the National Science Foundation under Grant Nos. IRI-9523419 and EEC-9209623. The second author's research reported in this paper has been developed at the IIIA inside the ANALOG Project funded by Spanish CICYT grant 122/93. The content of this paper does not necessarily reflect the position or the policy of the US Government, the Kingdom of Spain Government, or the Catalonia Government, and no official endorsement should be inferred. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Aamodt, A., and Plaza, E. </author> <year> (1994). </year> <title> Case-based reasoning: Foundational issues, methodological variations, and system approaches. </title> <journal> Artificial Intelligence Communications 7(1) </journal> <pages> 39-59. </pages> <address> &lt;http://www.iiia.csic.es/People/enric/AICom ToC.html&gt;. </address>
Reference-contexts: In recent times, CBR techniques have enjoyed an immense popularity among researchers and practitioners of AI, building intelligent tools for a number of applications <ref> (Aamodt & Plaza 1994) </ref>. Techniques for distributed case-based reasoning are being developed with the aim of leveraging the insights gained from building and using such applications but at the same time coping with the distributed nature of the knowledge available in many applications. <p> In order to avoid confusion, in this paper, we use the acronym DistCBR for this specialized FPL cooperation mode and the terms cooperative CBR and distributed case-based reasoning are used interchangeably for the more general situation of agents doing case-based reasoning in a distributed manner. instance, a CBR method <ref> (Aamodt & Plaza 1994) </ref> is decomposed into retrieve, select and reuse subtasks and there are several possible methods to access stored cases, select one of them according to some criteria, and finally reuse the solution. Retrieval methods allow Noos to inspect and analyze previous specific situations in the episodic memory.
Reference: <author> At-Kaci, H., and Podelski, A. </author> <year> (1993). </year> <title> Towards a meaning of LIFE. </title> <editor> J. </editor> <booktitle> Logic Programming 16 </booktitle> <pages> 195-234. </pages>
Reference: <author> Arcos, J. L., and Plaza, E. </author> <year> (1994). </year> <title> Integration of learning into a knowledge modelling framework. </title> <editor> In Steels, L.; Schreiber, G.; and de Velde, W. V., eds., </editor> <title> A Future for Knowledge Acquisition, </title> <booktitle> number 867 in Lecture Notes in Artificial Intelligence. </booktitle> <publisher> Springer-Verlag. </publisher> <pages> 355-373. </pages>
Reference: <author> Arcos, J. L., and Plaza, E. </author> <year> (1996). </year> <title> Inference and reflection in the object-centered representation language Noos. </title> <journal> Journal of Future Generation Computer Systems. </journal> <note> To appear. </note>
Reference-contexts: The first approach, called Negotiated Retrieval (Nagendra Prasad, Lesser, & Lander 1995; 1996), deals with retrieving and assembling "case pieces" from different resources in a corporate memory to form a good overall case. The second approach, based on Federated Peer Learning <ref> (Plaza, Arcos, & Martn 1996) </ref>, deals with two modes of cooperation called DistCBR and ColCBR that let an agent exploit the experience and expertise of peer agents to achieve a local task. 2 Corporate Memory Corporate memory consists of the sum total of the information and knowledge resources within an organization. <p> Another aspect of CIG is the explicit recognition and exploitation (or avoidance) of redundancy, leading to increased robustness or decreased resource demands depending on the context and the structure of the domain. The second technique is the Federated Peer Learning-based cooperative Case-based Reasoning <ref> (Plaza, Arcos, & Martn 1996) </ref>. Two modes of cooperative case-based reasoning are discussed: DistCBR where an agent can delegate its authority to another peer agent to solve a problem and ColCBR where an agent maintains authority while exploiting the experience of a peer agent. <p> The agents iteratively perform further rounds of retrieval using the previous information and the new requirements from other agents to get better cases to be assembled into a design that does not produce the same conflict. 4.3 Federated Peer Learning Plaza, Arcos and Martin <ref> (Plaza, Arcos, & Martn 1996) </ref> discuss two modes of cooperation among case-based reasoning (CBR) agents where an agent can leverage the learning ca pabilities or past experience of peer agents 2 to achieve a task or solve a problem. <p> <ref> (Plaza, Arcos, & Martn 1996) </ref> discuss two modes of cooperation among case-based reasoning (CBR) agents where an agent can leverage the learning ca pabilities or past experience of peer agents 2 to achieve a task or solve a problem. These modes are developed within the Federated Peer Learning (FPL) framework (Plaza, Arcos, & Martn 1996) that aims to study cooperative problem solving among agents possessing either same or different capabilities and incorporating potentially different knowledge and problem solving behaviors based on their individual learning and experience. <p> Cooperative problem solving in such a system can result in bringing wide range of experience to bear on a task at hand in an agent. The approach taken here to achieve cooperation is through communication using the Noos representation language developed at IIIA for integrating learning and problem solving <ref> (Arcos & Plaza 1996) </ref>. Plural Noos is an extension of Noos that allows communication and mobile (or "migrating") tasks and methods (to achieve these tasks) among agents that use Noos as a representation language. <p> The name for this mode of cooperation was introduced in <ref> (Plaza, Arcos, & Martn 1996) </ref> where cooperative CBR was used for agents more generally doing case-based reasoning in a distributed manner. <p> Domain knowledge is represented in Noos by descriptions of the concepts in that domain. Descriptions have a correspondence to labeled graph representations as shown in Figure 1 that is a description of an experiment in the chromatography domain <ref> (Plaza, Arcos, & Martn 1996) </ref>. Methods are also represented as descriptions. The features of a method description represent the subtasks into which that method is decomposed. Methods are defined by refinement from a set of built-in methods.
Reference: <author> Arens, Y.; Chee, C. Y.; Hsu, C.; and Knoblock, C. A. </author> <year> (1993). </year> <title> Retrieving and integrating data from multiple information sources. </title> <journal> International Journal of Intelligent and Cooperative Information Systems 2 </journal> <pages> 127-158. </pages>
Reference: <author> Bowman, M. C.; Danzig, P. B.; Manber, U.; and Schwartz, M. F. </author> <year> (1994). </year> <title> Scalable internet resource discovery: Research problems and approaches. </title> <journal> Communications of the ACM. </journal>
Reference: <author> Genesereth, M. R.; ; and Ketchpel, S. P. </author> <year> (1994). </year> <title> Software agents. </title> <journal> Communications of the ACM 37(7). </journal>
Reference: <author> Huynh, M.; Popkin, L.; and Stecker, M. </author> <year> (1994). </year> <title> Constructing a corporate memory infrastructure from internet discovery technologies. White paper, </title> <publisher> Marble Associates, Inc. &lt;http://www.marble.com/cgi-bin/list-whitepapers&gt;. </publisher>
Reference-contexts: A corporate memory facility that promotes an organization to leverage its existing information and knowledge assets through effective reuse can be crucial to handling internal and external pressures in an information-driven economy <ref> (Huynh, Popkin, & Stecker 1994) </ref>. A number of benefits can arise out of a well thought out and implemented corporate memory infrastructure (CMI)(Huynh, Popkin, & Stecker 1994): * Competitive pressures require quick and effective reactions to the ever changing market situations. <p> Enablement of effective management of the know-how within a company mandates that a CMI incorporate characteristics like <ref> (Huynh, Popkin, & Stecker 1994) </ref>: * Semantically rich and flexible access mechanisms * Automated management of potentially large-scale resource sets * Efficient management of change and reuse given the dynamic nature of corporate information and knowledge resources * Adaptability entailing learning from past experiences by recording them along with their context
Reference: <author> Lander, S. E. </author> <year> (1994). </year> <title> Distributed Search in Heterogeneous and Reusable Multi-Agent Systems. </title> <type> Ph.D. Dissertation, </type> <institution> Dept. of Computer Sceince, University of Massachusetts, Amherst. </institution>
Reference-contexts: Some of the agents may have capabilities to analyze particular features of the solution space that lead them to recognize opportunities for more efficient customized search strategies. They can together decide to play out specific roles in this kind of customized search. Lander <ref> (Lander 1994) </ref> presents a good example of a customized search called linear compromise where agents, upon recognizing the linear nature of their solution space, decide to exchange end points and extrapolate between them to find the intersection point as a mutual compromise solution. Upon generating feedback, goto Phase I. <p> Note however, that our experience with negotiated retrieval is still rudimentary and we will be able to give further insights into its effectiveness in future. CBR-TEAM, whose core is derived from TEAM <ref> (Lander 1994) </ref>, is a parametric design system that uses a set of heterogeneous cooperative agents for designing steam condenser components. It consists of three agents - motor-agent, pump-agent and vbelt-agent - that are responsible for the design of the motor, pump and vbelt components of a steam condenser.
Reference: <author> Lehnert, W.; Cardie, C.; Fisher, D.; McCarthy, J.; Riloff, E.; and Soderland, S. </author> <year> (1992). </year> <title> University of massachusetts: Description of the circus system as used for muc-4. </title> <booktitle> In Proceedings of the Fourth Message Understanding Conference (MUC-4), </booktitle> <pages> 282-288. </pages>
Reference-contexts: Certain unstructured databases like text databases can also be converted to case bases by generating semantic descriptors characterizing each of its documents. Much of the work in information extraction and text summarization concentrates on generating such descriptors <ref> (Lehnert et al. 1992) </ref>. Given such descriptor generating capabilities, any set of databases with inter-related data can be treated as distributed case bases. Another promising alternative involves creation of metadata (Weibel 1995) that is an informative record attached to a document (structured or unstructured).
Reference: <author> Lesser, V. R. </author> <year> (1990). </year> <title> An Overview of DAI: Distributed AI as Distributed Search. </title> <journal> Journal of the Japanese Society for Artificial Intelligence 5(4) </journal> <pages> 392-400. </pages>
Reference: <author> Lesser, V. R. </author> <year> (1991). </year> <title> A retrospective view of FA/C distributed problem solving. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics 21(6) </journal> <pages> 1347-1362. </pages>
Reference-contexts: This method can be seen as an instantiation of aspects of the cooperative information gathering (CIG)(Oates, Nagendra Prasad, & Lesser 1994) approach to intelligent information gathering from networked information resources. This approach relies on the "FA/C" paradigm <ref> (Lesser 1991) </ref> previously developed as a framework for distributed problem solving. Oates, Nagendra Prasad and Lesser (Oates, Nagendra Prasad, & Lesser 1994) provide an extensive discussion as to why it is better to treat information gathering in a networked environment as distributed problem solving.
Reference: <author> Nagendra Prasad, M. V.; Lesser, V. R.; and Lander, S. E. </author> <year> (1995). </year> <title> On retrieval and reasoning in distributed case bases. </title> <booktitle> In 1995 IEEE International Conference on Systems Man and Cybernetics. </booktitle>
Reference: <author> Nagendra Prasad, M. V.; Lesser, V. R.; and Lander, S. E. </author> <year> (1996). </year> <title> Retrieval and reasoning in distributed case bases. Journal of Visual Communication and Image Representation, </title> <booktitle> Special Issue on Digital Libraries 7(1) </booktitle> <pages> 74-87. </pages>
Reference-contexts: Doing so lets us map techniques for distributed problem solving into tools for knowledge manipulation in corporate memories. The first technique is based on a method proposed by Nagendra Prasad, Lesser and Lander <ref> (Nagendra Prasad, Lesser, & Lander 1996) </ref> for retrieval from distributed case bases. This method can be seen as an instantiation of aspects of the cooperative information gathering (CIG)(Oates, Nagendra Prasad, & Lesser 1994) approach to intelligent information gathering from networked information resources. <p> Projection information alone is sufficient for Agent A 2 to check for the consistency of that partial case with respect to its constraints (more details can be found in <ref> (Nagendra Prasad, Lesser, & Lander 1996) </ref>). If constraints are not violated then the subcases are considered "merged" due to their mutual consistency. Those agents who could not retrieve subcases due to insufficient information in Phase I, try to extend these partial cases by adding their subcases. <p> The set of advice could range from domain independent strategies to highly domain specific ones <ref> (Nagendra Prasad, Lesser, & Lander 1996) </ref>: 1. Some of the agents may do their local retrieval using similarity measures based on "closeness" of the retrieval requirements to the cases in the archive. <p> These types of translation mechanisms are commonly called "wrappers"(Genesereth, , & Ketchpel 1994) and are used to enable a set of heterogeneous or stand alone systems to function as a multi-agent system. 4.2.3 CBR-TEAM: A multi-agent design system In this section, we present a brief summary of the CBR-TEAM system <ref> (Nagendra Prasad, Lesser, & Lander 1996) </ref> that uses negotiated retrieval to compose coherent design cases. Note however, that our experience with negotiated retrieval is still rudimentary and we will be able to give further insights into its effectiveness in future.
Reference: <author> Oates, T.; Nagendra Prasad, M. V.; and Lesser, V. R. </author> <year> (1994). </year> <title> Cooperative Information Gathering: A Distributed Problem Solving Approach. </title> <institution> Computer Science Technical Report 94-66, University of Massachusetts. </institution> <month> Partnet: </month> <title> The Distributed Component Information System. </title> <publisher> &lt;http://part.net&gt;. </publisher>
Reference-contexts: be seen as an instantiation of aspects of the cooperative information gathering (CIG)<ref> (Oates, Nagendra Prasad, & Lesser 1994) </ref> approach to intelligent information gathering from networked information resources. This approach relies on the "FA/C" paradigm (Lesser 1991) previously developed as a framework for distributed problem solving. Oates, Nagendra Prasad and Lesser (Oates, Nagendra Prasad, & Lesser 1994) provide an extensive discussion as to why it is better to treat information gathering in a networked environment as distributed problem solving. In a CIG task, potentially useful constraints may exist between different pieces of information.
Reference: <author> Pasahow, E. </author> <year> (1996). </year> <title> Insider's viewpoint. Computer Industry Daily. </title>
Reference: <author> Plaza, E.; Arcos, J. L.; and Martn, F. </author> <year> (1996). </year> <title> Cooperation Modes among Case-based Reasoning Agents. </title> <booktitle> In Proc. ECAI'96 Workshop on Learning in Distributed Artificial Intelligence Systems. </booktitle> <address> &lt;http://www.iiia.csic.es/Projects/FedLearn/CoopCBR.html&gt;. </address>
Reference-contexts: The first approach, called Negotiated Retrieval (Nagendra Prasad, Lesser, & Lander 1995; 1996), deals with retrieving and assembling "case pieces" from different resources in a corporate memory to form a good overall case. The second approach, based on Federated Peer Learning <ref> (Plaza, Arcos, & Martn 1996) </ref>, deals with two modes of cooperation called DistCBR and ColCBR that let an agent exploit the experience and expertise of peer agents to achieve a local task. 2 Corporate Memory Corporate memory consists of the sum total of the information and knowledge resources within an organization. <p> Another aspect of CIG is the explicit recognition and exploitation (or avoidance) of redundancy, leading to increased robustness or decreased resource demands depending on the context and the structure of the domain. The second technique is the Federated Peer Learning-based cooperative Case-based Reasoning <ref> (Plaza, Arcos, & Martn 1996) </ref>. Two modes of cooperative case-based reasoning are discussed: DistCBR where an agent can delegate its authority to another peer agent to solve a problem and ColCBR where an agent maintains authority while exploiting the experience of a peer agent. <p> The agents iteratively perform further rounds of retrieval using the previous information and the new requirements from other agents to get better cases to be assembled into a design that does not produce the same conflict. 4.3 Federated Peer Learning Plaza, Arcos and Martin <ref> (Plaza, Arcos, & Martn 1996) </ref> discuss two modes of cooperation among case-based reasoning (CBR) agents where an agent can leverage the learning ca pabilities or past experience of peer agents 2 to achieve a task or solve a problem. <p> <ref> (Plaza, Arcos, & Martn 1996) </ref> discuss two modes of cooperation among case-based reasoning (CBR) agents where an agent can leverage the learning ca pabilities or past experience of peer agents 2 to achieve a task or solve a problem. These modes are developed within the Federated Peer Learning (FPL) framework (Plaza, Arcos, & Martn 1996) that aims to study cooperative problem solving among agents possessing either same or different capabilities and incorporating potentially different knowledge and problem solving behaviors based on their individual learning and experience. <p> Cooperative problem solving in such a system can result in bringing wide range of experience to bear on a task at hand in an agent. The approach taken here to achieve cooperation is through communication using the Noos representation language developed at IIIA for integrating learning and problem solving <ref> (Arcos & Plaza 1996) </ref>. Plural Noos is an extension of Noos that allows communication and mobile (or "migrating") tasks and methods (to achieve these tasks) among agents that use Noos as a representation language. <p> The name for this mode of cooperation was introduced in <ref> (Plaza, Arcos, & Martn 1996) </ref> where cooperative CBR was used for agents more generally doing case-based reasoning in a distributed manner. <p> Domain knowledge is represented in Noos by descriptions of the concepts in that domain. Descriptions have a correspondence to labeled graph representations as shown in Figure 1 that is a description of an experiment in the chromatography domain <ref> (Plaza, Arcos, & Martn 1996) </ref>. Methods are also represented as descriptions. The features of a method description represent the subtasks into which that method is decomposed. Methods are defined by refinement from a set of built-in methods.
Reference: <author> Sharp, C., and Lewis, N. </author> <title> Information Systems and Corporate Memory: Design for Staff Turn-over. </title> <journal> Australian Journal of Information systems 1(1). </journal>
Reference: <author> Steels, L. </author> <year> (1990). </year> <title> Components of expertise. </title> <journal> AI Magazine 11(2) </journal> <pages> 28-49. </pages>
Reference-contexts: Noos is based on the task/method decomposition principle and an analysis of knowledge requirements for methods | and it is related to knowledge modeling frameworks like KADS (Wielinga et al. 1993) or components of expertise <ref> (Steels 1990) </ref>. A method models a way to solve a task. A method can be elementary or can be decomposed into subtasks. These new (sub)tasks can be achieved by their corresponding methods in the same way.
Reference: <author> Vanwelkenhuysen, J. </author> <year> (1996). </year> <title> Corporate Memory. </title> <publisher> &lt;http://www.inria.fr/ acacia/personnel/jvanwelk/projects/cm-project.html&gt;. </publisher>
Reference: <author> Weibel, S. </author> <year> (1995). </year> <title> Metadata: The Foundations of Resource Description. </title> <journal> D-lib Magazine: The Magazine of the Digital Library Forum. &lt;http://www. dlib.org/dlib/July95/07weibel.html&gt;. </journal>
Reference-contexts: Much of the work in information extraction and text summarization concentrates on generating such descriptors (Lehnert et al. 1992). Given such descriptor generating capabilities, any set of databases with inter-related data can be treated as distributed case bases. Another promising alternative involves creation of metadata <ref> (Weibel 1995) </ref> that is an informative record attached to a document (structured or unstructured). A typical metadata record could contain elements like subject, author, title, object type, relationship to other elements, coverage etc (Weibel 1995) 1 . <p> Another promising alternative involves creation of metadata <ref> (Weibel 1995) </ref> that is an informative record attached to a document (structured or unstructured). A typical metadata record could contain elements like subject, author, title, object type, relationship to other elements, coverage etc (Weibel 1995) 1 . Development of metadata becomes especially feasible if the authors of a resource or a document could be encouraged to create such a description. <p> that the agent is an active case-based reasoning entity that can reason about its local case knowledge. 1 Metadata Workshop held on March 1-3, 1995, in Dublin, Ohio addressed the issue of appropriate metadata elements for document-like objects and identified an initial set of thirteen elements called the Dublin Core <ref> (Weibel 1995) </ref>. 4.2 Negotiated Retrieval 4.2.1 Overview Most of the literature on information gathering deals with locating, gathering and selecting the best response to a query from among a multitude of responses from different data repositories (Arens et al. 1993; Bowman et al. 1994; Oates, Nagendra Prasad, & Lesser 1994).
Reference: <author> Wielinga, B.; van de Velde, W.; Schreiber, G.; and Akkermans, H. </author> <year> (1993). </year> <title> Towards a unification of knowledge modelling approaches. </title> <editor> In David, J. M.; Krivine, J. P.; and Simmons, R., eds., </editor> <booktitle> Second generation Expert Systems. </booktitle> <publisher> Springer Verlag. </publisher> <pages> 299-335. </pages>
Reference-contexts: Noos is a reflective object-centered representation language designed to support knowledge modeling of problem solving and learning (Arcos & Plaza 1994; 1996). Noos is based on the task/method decomposition principle and an analysis of knowledge requirements for methods | and it is related to knowledge modeling frameworks like KADS <ref> (Wielinga et al. 1993) </ref> or components of expertise (Steels 1990). A method models a way to solve a task. A method can be elementary or can be decomposed into subtasks. These new (sub)tasks can be achieved by their corresponding methods in the same way.
References-found: 22

