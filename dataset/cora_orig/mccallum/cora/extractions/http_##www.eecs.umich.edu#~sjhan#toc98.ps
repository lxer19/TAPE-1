URL: http://www.eecs.umich.edu/~sjhan/toc98.ps
Refering-URL: http://www.eecs.umich.edu/~sjhan/
Root-URL: http://www.eecs.umich.edu
Title: A Primary-Backup Channel Approach to Dependable Real-Time Communication in Multi-hop Networks  
Author: Seungjae Han, and Kang G. Shin, Fellow, IEEE 
Keyword: Index Terms Real-time communication, primary and backup channels, fast failure recovery, multi-hop networks  
Abstract: Many applications require communication services with guaranteed timeliness and fault-tolerance at an acceptable level of overhead. We present a scheme for restoring real-time channels, each with guaranteed timeliness, from component failures in multi-hop networks. To ensure fast/guaranteed recovery, backup channels are set up a priori in addition to each primary channel. That is, a dependable real-time connection consists of a primary channel and one or more backup channels. If a primary channel fails, one of its backup channels is activated to become a new primary channel. We propose a protocol which provides an integrated solution for dependable real-time communication in multi-hop networks. We also present a resource sharing method that significantly reduces the overhead of backup channels. Good coverage (in recovering from failures) is shown to be achievable with about 30% degradation in network utilization under a reasonable failure condition. Moreover, the fault-tolerance level of each dependable connection can be controlled, independently of other connections, to reflect its criticality. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. M. Aras, J. F. Kurose, D. S. Reeves, and H. Schulzrinne, </author> <title> "Real-time communication in packet-switched networks," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 82, </volume> <pages> pp. 122-139, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: In recent years, considerable efforts have been made to guarantee the timeliness QoS. The survey paper by Aras et al. <ref> [1] </ref> discusses many of existing real-time communication schemes. By contrast, the importance of guaranteeing fault-tolerance QoS has been far less recognized. While fault-tolerant real-time communication in multi-access networks has been relatively well studied, only a few research results are available for the fault-tolerance QoS guarantee in multi-hop networks.
Reference: [2] <author> S. McCanne, V. Jacobson, and M. Vetterli, </author> <title> "Receiver-driven layered multicast," </title> <booktitle> in Proc. ACM SIGCOMM, </booktitle> <pages> pp. 117-130, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Primary3 Primary2 Primary1 Backup3 Backup2 Backup1 D3 (a) Initial network N1 N2 N3 N8 N9 N7 S2 D1 S3 Failure D3 (b) After failure recovery time traffic can utilize the resources reserved for backups, if the underlying real-time channel scheme has a dynamic QoS-control capability like the layered transmission method <ref> [2] </ref>. However, backups degrade the network's capability of accommodating real-time channels, because they reserve resources which can be used to accommodate other real-time channels otherwise. If the application requires high-volume message streams (e.g., motion video), the degradation will become serious.
Reference: [3] <author> K. S. Trivedi, </author> <title> Probability and Statistic with Reliability, Queuing, </title> <booktitle> and Computer Science Applications. </booktitle> <publisher> Prentice-Hall, </publisher> <year> 1982. </year>
Reference-contexts: For example, if both the primary and backup channels of a D-connection are of 4 hops length and are routed disjointly, 1 is 9 and 3 is 2 considering two end nodes shared by both channels. Using the technique in <ref> [3] </ref>, one can calculate R (t) of this D-connection from the Markov model of Figure 3 (b); that is, R (t) = 1 P (the system is in the absorbing state at time t).
Reference: [4] <author> S. Han and K. G. Shin, </author> <title> "Efficient spare-resource allocation for fast restoration of real-time channels from network component failures," </title> <booktitle> in Proc. IEEE RTSS, </booktitle> <year> 1997. </year>
Reference-contexts: The routing of backup channels affects the resource overhead as well, because backup multiplexing is largely determined by route information. Here we use the shortest path routing method to select backup paths; the issue of backup route selection was treated in <ref> [4] </ref>. 8 3.3 Backup Multiplexing As far as actual resource consumption is concerned, a backup channel costs nothing, since it does not actually transport any information until it is activated. <p> This overhead level can be reduced substantially by employing a more efficient backup routing method (e.g., see <ref> [4] </ref>). 7.3 Per-Connection QoS Management The R fast data in Table 1 are average values, so they do not reflect the QoS level each connection actually receives. To examine if the required QoS is actually provided for each connection, we measure the QoS each connection experiences. <p> Furthermore, if the channel end-nodes are not evenly distributed or the required bandwidths of all channels are not identical, hot-spots (in term of the spare resource demands) occur, and the efficiency of the brute-force scheme degrades significantly unlike the proposed scheme. (Simulation results under inhomogeneous conditions are reported in <ref> [4] </ref>.) For the same reason, the proposed scheme outperforms the brute-force scheme in terms of per-connection fault-tolerance control. 8 Related Work The failure-handling techniques for datagram communication are inadequate for real-time communication, because real-time messages cannot be detoured around the failed component on the fly.
Reference: [5] <author> S. Han and K. G. Shin, </author> <title> "Experimental evaluation of failure-detection schemes in real-time communication networks," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <pages> pp. 122-131, </pages> <year> 1997. </year> <month> 31 </month>
Reference-contexts: For instance, real-time channels for certain applications may not be able to tolerate an error rate which is acceptable to other channels set up for different applications. We have developed techniques for detecting channel failures, evaluated their efficiency experimentally, and reported the results in <ref> [5] </ref>.
Reference: [6] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zappala, "RSVP: </author> <title> A new Resource ReSerVation Protocol," </title> <journal> IEEE Network, </journal> <month> September </month> <year> 1993. </year>
Reference-contexts: However, if failures disconnect a channel's path or disable the channel end-nodes, the resource-release process becomes complicated. To facilitate the reclaiming of the resources on failed channels, we borrow the concept of "soft-state connections" in RSVP <ref> [6] </ref>. When an intermediate node of a channel receives a failure report (or detects a failure), it sets a rejoin timer whose expiration automatically triggers the channel teardown at 16 Source rejoin msgrejoin-request msg channel-closure msg rejoin-timer timeout real-time channel Destination the node.
Reference: [7] <author> H. Kopetz and G. Grunsteidl, </author> <title> "TTP a protocol for fault-tolerant real-time systems," </title> <journal> IEEE Computer, </journal> <volume> vol. 27, </volume> <pages> pp. 14-23, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: Fault-tolerance techniques for real-time communication in multiaccess networks such as <ref> [7, 8] </ref> are not applicable to multi-hop point-to-point networks, either. There have been roughly two types of approaches to achieving fault-tolerance in real 29 time multi-hop networks.
Reference: [8] <author> B. Chen, S. Kamat, and W. Zhao, </author> <title> "Fault-tolerant real-time communication in FDDI-based networks," </title> <booktitle> in Proc. IEEE RTSS, </booktitle> <year> 1995. </year>
Reference-contexts: Fault-tolerance techniques for real-time communication in multiaccess networks such as <ref> [7, 8] </ref> are not applicable to multi-hop point-to-point networks, either. There have been roughly two types of approaches to achieving fault-tolerance in real 29 time multi-hop networks.
Reference: [9] <author> P. Ramanathan and K. G. Shin, </author> <title> "Delivery of time-critical messages using a multiple copy approach," </title> <journal> ACM Trans. Computer Systems, </journal> <volume> vol. 10, </volume> <pages> pp. 144-166, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Fault-tolerance techniques for real-time communication in multiaccess networks such as [7, 8] are not applicable to multi-hop point-to-point networks, either. There have been roughly two types of approaches to achieving fault-tolerance in real 29 time multi-hop networks. The first type is the forward-recovery approach as described in <ref> [9, 10] </ref>, where multiple copies of a message are sent simultaneously via disjoint paths to mask the effects of failures. A variation of this approach coupled with the error-correction coding scheme can be found in [11].
Reference: [10] <author> B. Kao, H. Garcia-Molina, and D. Barbara, </author> <title> "Aggressive transmissions of short messages over redundant paths," </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <volume> vol. 5, </volume> <pages> pp. 102-109, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: Fault-tolerance techniques for real-time communication in multiaccess networks such as [7, 8] are not applicable to multi-hop point-to-point networks, either. There have been roughly two types of approaches to achieving fault-tolerance in real 29 time multi-hop networks. The first type is the forward-recovery approach as described in <ref> [9, 10] </ref>, where multiple copies of a message are sent simultaneously via disjoint paths to mask the effects of failures. A variation of this approach coupled with the error-correction coding scheme can be found in [11].
Reference: [11] <author> A. Banerjea, </author> <title> "Simulation study of the capacity effects of dispersity routing for fault tolerant realtime channels," </title> <booktitle> in Proc. ACM SIGCOMM, </booktitle> <pages> pp. 194-205, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: The first type is the forward-recovery approach as described in [9, 10], where multiple copies of a message are sent simultaneously via disjoint paths to mask the effects of failures. A variation of this approach coupled with the error-correction coding scheme can be found in <ref> [11] </ref>. This approach has an advantage that failures are handled without service disruption, but it is too expensive for certain applications like multimedia networking. If infrequent packet losses due to transient failures are tolerable, the approach to detect and recover from persistent failures is a more attractive and cost-effective alternative.
Reference: [12] <author> A. Banerjea, C. Parris, and D. Ferrari, </author> <title> "Recovering guaranteed performance service connections from single and multiple faults," </title> <type> Tech. Rep. </type> <institution> TR-93-066, UC Berkeley, </institution> <year> 1993. </year>
Reference-contexts: The methods proposed in [12-19] belong to this second type of approach. The proposed scheme also falls into this type. The method proposed in <ref> [12] </ref> requires all failures to be broadcast to the entire network. When a source node is notified of the failure of its channel, it tries to establish a new channel from scratch.
Reference: [13] <author> Q. Zheng and K. G. Shin, </author> <title> "Fault-tolerant real-time communication in distributed computing systems," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <pages> pp. 86 - 93, </pages> <year> 1992. </year>
Reference-contexts: The channel re-establishment attempt can fail due to resource shortage at that time. Even when there are sufficient resources, the contention among simultaneous recovery attempts for different faulty connections may require several trials to succeed, thus delaying service resumption and increasing network traffic. In contrast, the method of <ref> [13] </ref> provides guaranteed failure recovery under a deterministic failure model (i.e., single failure). In this method, additional resources are reserved in the vicinity of each real-time channel, and the failed components are locally detoured using the reserved resources.
Reference: [14] <author> W. Grover, </author> <title> "The selfhealing network: A fast distributed restoration technique for networks using digital crossconnect machines," </title> <booktitle> in Proc. IEEE GLOBECOM, </booktitle> <pages> pp. 1090-1095, </pages> <year> 1987. </year>
Reference: [15] <author> C. Yang and S. Hasegawa, </author> <title> "FITNESS: Failure immunization technology for network service survivability," </title> <booktitle> in Proc. IEEE GLOBECOM, </booktitle> <pages> pp. 1549-1554, </pages> <year> 1988. </year>
Reference: [16] <author> J. Baker, </author> <title> "A distributed link restoration algorithm with robust preplanning," </title> <booktitle> in Proc. IEEE GLOBECOM, </booktitle> <pages> pp. 306-311, </pages> <year> 1991. </year>
Reference: [17] <author> R. Kawamura, K. Sato, and I. Tokizawa, </author> <title> "Self-healing ATM networks based on virtual path concept," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 12, </volume> <month> January </month> <year> 1994. </year>
Reference: [18] <author> J. Anderson, B. Doshi, S. Dravida, and P. Harshavadhana, </author> <title> "Fast restoration of ATM networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 12, </volume> <month> January </month> <year> 1994. </year>
Reference: [19] <author> K. Murakami and H. Kim, </author> <title> "Near-optimal virtual path routing for survivable ATM networks," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <pages> pp. 208-215, </pages> <year> 1994. </year> <month> 32 </month>
References-found: 19

