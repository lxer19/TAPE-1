URL: ftp://info.mcs.anl.gov/pub/Otter/www-misc/ortholattice-revised.ps.gz
Refering-URL: http://www.mcs.anl.gov/~mccune/papers/ortholattice/
Root-URL: http://www.mcs.anl.gov
Title: Automatic Proofs and Counterexamples for Some Ortholattice Identities  
Author: William McCune 
Keyword: Automatic theorem proving, ortholattice, quantum logic, theory of computation.  
Date: January 14, 1998  
Address: Argonne, Illinois, 60439, U.S.A.  
Affiliation: Mathematics and Computer Science Division Argonne National Laboratory  
Abstract: This note answers questions on whether three identities known to hold for orthomodular lattices are true also for ortholattices. One identity is shown to fail by MACE, a program that searches for counterexamples, an the other two are proved to hold by EQP, an equational theorem prover. The problems, from work in quantum logic, were given to us by Norman Megill. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Bachmair, H. Ganzinger, C. Lynch, and W. Snyder. </author> <title> Basic paramodulation and superposition. </title> <editor> In D. Kapur, editor, </editor> <booktitle> Proceedings of the 11th International Conference on Automated Deduction, Lecture Notes in Artificial Intelligence, </booktitle> <volume> Vol. 607, </volume> <pages> pages 462-476. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Through four iterations of the search loop, the shortest pair of equations was selected, then the oldest pair of equations was selected, and so on. In other words, the strategy was four parts shortest-first to one part breadth-first. * Basic paramodulation <ref> [1] </ref>. This restriction on application of the inference rule prevented substitution of terms that arise from instantiation alone. Such inferences are redundant. * Prime paramodulation. This restriction prevented application of the inference rule if any term in the substitution was reducible by the current set of equations.
Reference: [2] <author> R. Goldblatt. </author> <title> Orthomodularity is not elementary. </title> <journal> J. Symbolic Logic, </journal> <volume> 49(2) </volume> <pages> 401-404, </pages> <year> 1984. </year>
Reference-contexts: A. R. Marlow states [3]: Quantum theory is simply the replacement in standard probability theory of event-as-subset-of-a-set (abelian, distributive) by event-as subspace-of-a-Hilbert-space (non-abelian, non-distributive). 2 However, working with quantum logic has been difficult; for example, decidability of the word problem for orthomodular lattices is unknown. R. Goldblatt states <ref> [2] </ref>: ... further evidence of the intractability of quantum logic. It is perhaps the first example of a natural and significant logic that leaves the usual methods defeated. The work of Pavicic and Megill is on using various versions of the modus ponens rule with quantum logic.
Reference: [3] <author> A. R. Marlow. </author> <title> Orthomodular structures and physical theory. </title> <booktitle> In Mathematical Foundations of Quantum Theory, </booktitle> <pages> pages 59-70. </pages> <publisher> Academic Press, </publisher> <year> 1977. </year>
Reference-contexts: Quantum logic is meant to describe probability of events in quantum dynamics (cf. Boolean algebra describes probability in classical dynamics). A. R. Marlow states <ref> [3] </ref>: Quantum theory is simply the replacement in standard probability theory of event-as-subset-of-a-set (abelian, distributive) by event-as subspace-of-a-Hilbert-space (non-abelian, non-distributive). 2 However, working with quantum logic has been difficult; for example, decidability of the word problem for orthomodular lattices is unknown. R.
Reference: [4] <author> W. McCune. </author> <title> A Davis-Putnam program and its application to finite first-order model search: Quasigroup existence problems. </title> <type> Tech. Report ANL/MCS-TM-194, </type> <institution> Argonne National Laboratory, Argonne, IL, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: It has several strategies for applying equational reasoning and searching for proofs. One of its strengths is that associativity and commutativity of binary operations are built into the inference rules. This feature makes EQP perform well on many problems involving lattice-like structures. MACE <ref> [4] </ref> is a program that searches for finite models of first-order statements. In practice, it is limited to fairly simple statements without many variables, and it usually cannot find large models.
Reference: [5] <author> W. McCune. </author> <title> Otter 3.0 Reference Manual and Guide. </title> <type> Tech. Report ANL-94/6, </type> <institution> Argonne National Laboratory, Argonne, IL, </institution> <year> 1994. </year>
Reference-contexts: In practice, it is limited to fairly simple statements without many variables, and it usually cannot find large models. Even with these limitations, it is a valuable complement to our theorem provers. (Our more well-known theorem prover Otter <ref> [5, 8] </ref> does not seem as effective as EQP for lattice-like problems because Otter lacks associative-commutative unification and several valuable paramodulation strategies. See [7] for several examples of using Otter for this type of problem.) 2 Equation E1 I had no intuition about whether E1 could be proved for ortholattices.
Reference: [6] <author> W. McCune. </author> <title> 33 basic test problems: A practical evaluation of some paramodu-lation strategies. </title> <editor> In Robert Veroff, editor, </editor> <booktitle> Automated Reasoning and its Applications: Essays in Honor of Larry Wos, chapter 5, </booktitle> <pages> pages 71-114. </pages> <publisher> MIT Press, </publisher> <year> 1997. </year>
Reference-contexts: The work of Pavicic and Megill is on using various versions of the modus ponens rule with quantum logic. Such inference rules may affect computational efficiency of systems based on quantum logic. 1.1 The Programs EQP and MACE EQP <ref> [6] </ref> is an automated theorem-proving program for statements in first-order equational logic. It has several strategies for applying equational reasoning and searching for proofs. One of its strengths is that associativity and commutativity of binary operations are built into the inference rules. <p> See <ref> [6] </ref> further for details on these EQP features. * The pair algorithm. At each iteration of the search loop, a pair of equations was selected for application of the inference rule. * A selection ratio of four.
Reference: [7] <author> W. McCune and R. Padmanabhan. </author> <title> Automated Deduction in Equational Logic and Cubic Curves, </title> <booktitle> volume 1095 of Lecture Notes in Computer Science (AI subseries). </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1996. </year>
Reference-contexts: Even with these limitations, it is a valuable complement to our theorem provers. (Our more well-known theorem prover Otter [5, 8] does not seem as effective as EQP for lattice-like problems because Otter lacks associative-commutative unification and several valuable paramodulation strategies. See <ref> [7] </ref> for several examples of using Otter for this type of problem.) 2 Equation E1 I had no intuition about whether E1 could be proved for ortholattices. Hence, I put the programs to work in parallel, with EQP searching for a proof and MACE searching for a counterexample.
Reference: [8] <author> W. McCune and L. Wos. </author> <title> Otter: The CADE-13 Competition incarnations. </title> <journal> J. Automated Reasoning, </journal> <volume> 18(2) </volume> <pages> 211-220, </pages> <year> 1997. </year>
Reference-contexts: In practice, it is limited to fairly simple statements without many variables, and it usually cannot find large models. Even with these limitations, it is a valuable complement to our theorem provers. (Our more well-known theorem prover Otter <ref> [5, 8] </ref> does not seem as effective as EQP for lattice-like problems because Otter lacks associative-commutative unification and several valuable paramodulation strategies. See [7] for several examples of using Otter for this type of problem.) 2 Equation E1 I had no intuition about whether E1 could be proved for ortholattices.
Reference: [9] <author> N. Megill, </author> <month> Sept. </month> <year> 1997. </year> <title> Correspondence by electronic mail. </title>
Reference-contexts: _ b))) _ (a _ ((a 0 ^ ((a _ b 0 ) ^ (a _ b))) _ (a 0 ^ ((a 0 ^ b) _ (a 0 ^ b 0 ))))) = 1 (E2) These three equations arose in work on quantum logic by Mladen Pavicic and Nor-man Megill <ref> [9, 10] </ref>. Each equation was known to hold for orthomodular lattices, but it was unknown whether any of them holds for ortholattices. Megill asked whether any of Argonne's automated deduction programs could be used to solve the problems.
Reference: [10] <author> Mladen Pavicic and Norman Megill. </author> <title> Binary orthologic with modus ponens is either orthomodular or distributive. </title> <note> Submitted, </note> <month> November </month> <year> 1997. </year> <month> 9 </month>
Reference-contexts: _ b))) _ (a _ ((a 0 ^ ((a _ b 0 ) ^ (a _ b))) _ (a 0 ^ ((a 0 ^ b) _ (a 0 ^ b 0 ))))) = 1 (E2) These three equations arose in work on quantum logic by Mladen Pavicic and Nor-man Megill <ref> [9, 10] </ref>. Each equation was known to hold for orthomodular lattices, but it was unknown whether any of them holds for ortholattices. Megill asked whether any of Argonne's automated deduction programs could be used to solve the problems.
References-found: 10

