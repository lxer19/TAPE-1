URL: ftp://ftp.eecs.umich.edu/people/durfee/aij95.ps.Z
Refering-URL: http://ai.eecs.umich.edu/people/durfee/vita.html
Root-URL: http://www.cs.umich.edu
Email: musliner@umiacs.umd.edu  fdurfee,kgshing@eecs.umich.edu  
Title: A Framework for Analyzing Resource/Quality Tradeoffs in Real-Time AI  
Author: David J. Musliner Edmund H. Durfee and Kang G. Shin 
Keyword: Content Areas: Real-Time Systems, AI Architectures.  
Address: College Park, Maryland 20742  Ann Arbor, Michigan 48109-2122  
Affiliation: Institute for Advanced Computer Studies The University of Maryland  Dept. of EE Computer Science The University of Michigan  
Abstract: Many researchers currently seek to combine the predictability of real-time systems with the intelligence of AI planning systems. We develop a framework for describing various approaches to this problem, by distinguishing strategic and tactical methods for meeting real-time performance guarantees. We introduce the any-dimension algorithm concept to clarify the fundamental conflict between real-time and AI, showing that existing real-time systems techniques are incompatible with the goal of intelligent behavior. Using this framework, we examine several existing approaches to real-time AI, and motivate our hybrid approach| the Cooperative Intelligent Real-Time Control Architecture (CIRCA)| which combines aspects of strategic and tactical real-time methods to provide the flexible yet predictable performance required for real-time AI. The work reported in this paper was supported in part by the National Science Foundation under Grants IRI-9209031 and IRI-9158473, by a NSF Graduate Fellowship, and by the Arpa/Rome Laboratory Planning Initiative (F30602-93-C-0039). The opinions, findings, and recommendations expressed in this publication are those of the authors, and do not necessarily reflect the views of the funding agencies. David Musliner is also affiliated with the UM Institute for Systems Research (NSF Grant NSFD CDR-88003012). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Chapman, </author> <title> "Planning for Conjunctive Goals," </title> <journal> Artificial Intelligence, </journal> <volume> vol. 32, no. 3, </volume> <pages> pp. 333-374, </pages> <month> July </month> <year> 1987. </year>
Reference-contexts: This approach is well-suited to simple control algorithms and static domains, where resource needs and availability are predictable. Unfortunately, the search-based methods used in AI planning systems are problematic for strategic schedulers. The fundamental problem is that planning involves searching for the solution to a generally intractable problem <ref> [1] </ref>, and thus the planning process has extremely large worst-case resource requirements. This means that allocating resources to guarantee the worst-case response time of a planner will be very costly, and will lead to very low 2 utilization of a system's resources [13, 15]. <p> This means that allocating resources to guarantee the worst-case response time of a planner will be very costly, and will lead to very low 2 utilization of a system's resources [13, 15]. Furthermore, AI systems with powerful knowledge representations <ref> [1, 4] </ref> or learning abilities [3] may have unbounded worst-case response times. In these cases, it is impossible to allocate sufficient resources ahead of time, and thus real-time guarantees are not feasible.
Reference: [2] <author> T. Dean and M. Boddy, </author> <title> "An Analysis of Time-Dependent Planning," </title> <booktitle> in Proc. National Conf. on Artificial Intelligence, </booktitle> <pages> pp. 49-54, </pages> <year> 1988. </year>
Reference-contexts: We then discuss ways of combining strategic and tactical methods, including the deliberation scheduling <ref> [2] </ref> and imprecise computation [9] methods. This classification will show why current approaches do not address the entire real-time AI problem, and will motivate 1 our presentation of a more general approach, the Cooperative Intelligent Real-Time Control Architecture (CIRCA) [10]. <p> These tactical methods are exemplified by any-time algorithms <ref> [2, 8, 14] </ref>, which can be halted at any time to yield a result, possibly with reduced precision, confidence, or completeness. Any-time algorithms provide an on-line, dynamic method for guaranteeing the timeliness of a result, but the quality of the result may be sacrificed. <p> For example, if alternative methods are available for accomplishing a particular task, the design-to-time method [5] could be used to schedule lower-cost methods that will produce a lower-quality solution. However, the design-to-time approach does not include the tactical, incremental improvement methods found in imprecise computations. The "deliberation scheduling" approach <ref> [2] </ref> uses decision-theoretic methods to deal with over-constrained systems. Deliberation scheduling casts all tasks as any-time algorithms, and schedules their execution to optimize a measure of overall system utility (output quality).
Reference: [3] <author> E. H. Durfee, </author> <title> "A Cooperative Approach to Planning for Real-Time Control," </title> <booktitle> in Proc. Workshop on Innovative Approaches to Planning, Scheduling and Control, </booktitle> <pages> pp. 277-283, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: This means that allocating resources to guarantee the worst-case response time of a planner will be very costly, and will lead to very low 2 utilization of a system's resources [13, 15]. Furthermore, AI systems with powerful knowledge representations [1, 4] or learning abilities <ref> [3] </ref> may have unbounded worst-case response times. In these cases, it is impossible to allocate sufficient resources ahead of time, and thus real-time guarantees are not feasible.
Reference: [4] <author> K. Erol, D. Nau, and V. S. Subrahmanian, </author> <title> "When is Planning Decidable?," </title> <booktitle> in Proc. Int'l Conf. on Artificial Intelligence Planning Systems, </booktitle> <pages> pp. 222-227, </pages> <year> 1992. </year>
Reference-contexts: This means that allocating resources to guarantee the worst-case response time of a planner will be very costly, and will lead to very low 2 utilization of a system's resources [13, 15]. Furthermore, AI systems with powerful knowledge representations <ref> [1, 4] </ref> or learning abilities [3] may have unbounded worst-case response times. In these cases, it is impossible to allocate sufficient resources ahead of time, and thus real-time guarantees are not feasible.
Reference: [5] <author> A. Garvey and V. Lesser, </author> <title> "Design-to-time Real-Time Scheduling," </title> <journal> to appear in IEEE Trans. Systems, Man, and Cybernetics, </journal> <volume> vol. 23, no. 6, </volume> , <year> 1993. </year>
Reference-contexts: In this over-constrained situation, an intelligent system must make tradeoffs between the level of output quality it will guarantee and the resource usage it schedules. For example, if alternative methods are available for accomplishing a particular task, the design-to-time method <ref> [5] </ref> could be used to schedule lower-cost methods that will produce a lower-quality solution. However, the design-to-time approach does not include the tactical, incremental improvement methods found in imprecise computations. The "deliberation scheduling" approach [2] uses decision-theoretic methods to deal with over-constrained systems.
Reference: [6] <author> D. Haban and K. G. Shin, </author> <title> "Application of Real-Time Monitoring to Scheduling Tasks with Random Execution Times," </title> <journal> IEEE Trans. Software Engineering, </journal> <volume> vol. 16, no. 12, </volume> <pages> pp. 1374-1389, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: Since this profile is rarely available in realistic domains, we 2 This will often be the case, because mandatory tasks are scheduled based on their worst-case execution time, which may be much larger than the average execution time <ref> [6] </ref>. 12 propose an alternative approach, CIRCA. CIRCA combines strategic and tactical methods, provides principled methods for handling over-constrained domains, and does not require performance profiles. To realize these functions, CIRCA relies on a causal world model [11] to represent complex task dependencies and utilities.
Reference: [7] <author> T. J. Laffey, P. A. Cox, J. L. Schmidt, S. M. Kao, and J. Y. </author> <title> Read, "Real-Time Knowledge-Based Systems," </title> <journal> AI Magazine, </journal> <volume> vol. 9, no. 1, </volume> <pages> pp. 27-45, </pages> <year> 1988. </year>
Reference-contexts: Researchers have been investigating "real-time AI" (RTAI) for several years, yielding several diverse approaches but few general guidelines for understanding and designing such systems <ref> [7, 15] </ref>. Our goal in this paper is to provide a framework for understanding the fundamental difficulties involved in RTAI, which in turn allows us to classify the existing approaches and synthesize an improved approach.
Reference: [8] <author> K.-J. Lin, S. Natarajan, and J. W.-S. Liu, </author> <title> "Imprecise Results: Utilizing Partial Computations in Real-Time Systems," </title> <booktitle> in Proc. Real-Time Systems Symposium, </booktitle> <pages> pp. 210-217, </pages> <month> December </month> <year> 1987. </year>
Reference-contexts: These tactical methods are exemplified by any-time algorithms <ref> [2, 8, 14] </ref>, which can be halted at any time to yield a result, possibly with reduced precision, confidence, or completeness. Any-time algorithms provide an on-line, dynamic method for guaranteeing the timeliness of a result, but the quality of the result may be sacrificed.
Reference: [9] <author> J. W.-S. Liu, K.-J. Lin, and S. Natarajan, </author> <title> "Scheduling Real-Time, Periodic Jobs Using Imprecise Results," </title> <booktitle> in Proc. Real-Time Systems Symposium, </booktitle> <pages> pp. 252-260, </pages> <month> December </month> <year> 1987. </year>
Reference-contexts: We then discuss ways of combining strategic and tactical methods, including the deliberation scheduling [2] and imprecise computation <ref> [9] </ref> methods. This classification will show why current approaches do not address the entire real-time AI problem, and will motivate 1 our presentation of a more general approach, the Cooperative Intelligent Real-Time Control Architecture (CIRCA) [10]. <p> This is essentially the approach taken by Liu et al. <ref> [9] </ref> in the "imprecise computation" method. In this paradigm, an algorithm is divided into mandatory computations that are required to reach a minimal quality threshold, and optional computations that incrementally improve the result and can be interrupted at any time. <p> There are two problems with this assumption. First, such mappings may be difficult or impossible to derive, because the performance of most algorithms is highly dependent on the particular problem to which the algorithm is being applied. For example, Liu et al. <ref> [9] </ref> describe an any-time implementation of Newton's method for finding the roots of a function F .
Reference: [10] <author> D. J. Musliner, E. H. Durfee, and K. G. Shin, </author> <title> "CIRCA: A Cooperative Intelligent Real-Time Control Architecture," </title> <journal> to appear in IEEE Trans. Systems, Man, and Cybernetics, </journal> <volume> vol. 23, no. 6, </volume> <year> 1993. </year>
Reference-contexts: This classification will show why current approaches do not address the entire real-time AI problem, and will motivate 1 our presentation of a more general approach, the Cooperative Intelligent Real-Time Control Architecture (CIRCA) <ref> [10] </ref>. We will draw examples from the domain illustrated in Figure 1, in which a simulated Puma robot arm moves parts from a conveyor belt into a nearby box. <p> By executing previously-derived reactions while the AIS and Scheduler are developing a new schedule, the RTS keeps the system safe and allows the AIS to use traditional high-variance, search-based planning methods that do not need to meet deadlines <ref> [10] </ref>. 5.1 The AIS/Scheduler and Strategic Tradeoffs Together, the AIS and Scheduler act as a strategic controller for the RTS, building and scheduling reactive behaviors with known resource requirements.
Reference: [11] <author> D. J. Musliner, E. H. Durfee, and K. G. Shin, </author> <title> "World Modeling for the Dynamic Construction of Real-Time Control Plans," </title> <note> to appear in Artificial Intelligence, </note> <year> 1994. </year>
Reference-contexts: The AIS derives tasks by running a STRIPS-like [12] planning algorithm on a state-based temporal model that represents 9 the world and the actions that the system may take to affect the world <ref> [11] </ref>. Deliberation scheduling is able to analytically derive an optimal schedule given performance profiles; CIRCA requires less precise information and performs a search for a desirable task schedule that yields acceptable output quality within given resource bounds. <p> CIRCA combines strategic and tactical methods, provides principled methods for handling over-constrained domains, and does not require performance profiles. To realize these functions, CIRCA relies on a causal world model <ref> [11] </ref> to represent complex task dependencies and utilities. Using this world model to drive planning and scheduling, CIRCA searches for task schedules that maximize guaranteed output quality given limited resources.
Reference: [12] <author> N. J. Nilsson, </author> <booktitle> Principles of Artificial Intelligence, </booktitle> <publisher> Tioga Press, </publisher> <address> Palo Alto, CA., </address> <year> 1980. </year>
Reference-contexts: Unlike deliberation scheduling, CIRCA's AIS does not require performance profiles and iterative tasks, and is capable of building useful guaranteed task schedules even when tasks have very complex interactions and dependencies. The AIS derives tasks by running a STRIPS-like <ref> [12] </ref> planning algorithm on a state-based temporal model that represents 9 the world and the actions that the system may take to affect the world [11].
Reference: [13] <author> C. J. Paul, A. Acharya, B. Black, and J. K. Strosnider, </author> <title> "Reducing Problem-Solving Variance to Improve Predictability," </title> <journal> Communications of the ACM, </journal> <volume> vol. 34, no. 8, </volume> <pages> pp. 81-93, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: This means that allocating resources to guarantee the worst-case response time of a planner will be very costly, and will lead to very low 2 utilization of a system's resources <ref> [13, 15] </ref>. Furthermore, AI systems with powerful knowledge representations [1, 4] or learning abilities [3] may have unbounded worst-case response times. In these cases, it is impossible to allocate sufficient resources ahead of time, and thus real-time guarantees are not feasible.
Reference: [14] <author> S. J. Russell and S. Zilberstein, </author> <title> "Composing Real-Time Systems," </title> <booktitle> in Proc. Int'l Joint Conf. on Artificial Intelligence, </booktitle> <pages> pp. 212-217, </pages> <month> August </month> <year> 1991. </year> <month> 14 </month>
Reference-contexts: These tactical methods are exemplified by any-time algorithms <ref> [2, 8, 14] </ref>, which can be halted at any time to yield a result, possibly with reduced precision, confidence, or completeness. Any-time algorithms provide an on-line, dynamic method for guaranteeing the timeliness of a result, but the quality of the result may be sacrificed.
Reference: [15] <author> M. Schoppers, </author> <title> "Introduction to Special Edition on Real-Time Knowledge-Based Control Systems," </title> <journal> Communications of the ACM, </journal> <volume> vol. 34, no. 8, </volume> <pages> pp. 27-30, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: Researchers have been investigating "real-time AI" (RTAI) for several years, yielding several diverse approaches but few general guidelines for understanding and designing such systems <ref> [7, 15] </ref>. Our goal in this paper is to provide a framework for understanding the fundamental difficulties involved in RTAI, which in turn allows us to classify the existing approaches and synthesize an improved approach. <p> This means that allocating resources to guarantee the worst-case response time of a planner will be very costly, and will lead to very low 2 utilization of a system's resources <ref> [13, 15] </ref>. Furthermore, AI systems with powerful knowledge representations [1, 4] or learning abilities [3] may have unbounded worst-case response times. In these cases, it is impossible to allocate sufficient resources ahead of time, and thus real-time guarantees are not feasible.
Reference: [16] <author> J. A. Stankovic, </author> <title> "Misconceptions about Real-Time Computing: A Serious Problem for Next-Generation Systems," </title> <journal> IEEE Computer, </journal> <volume> vol. 21, no. 10, </volume> <pages> pp. 10-19, </pages> <month> October </month> <year> 1988. </year> <month> 15 </month>
Reference-contexts: However, as planning technology is applied to controlling agents in real-world domains, it becomes clear that timeliness is also essential. The correctness of a system's behavior depends not only on its logical justification, but also on the time at which the behavior is produced <ref> [16] </ref>.
References-found: 16

