URL: ftp://ftp.cse.unsw.edu.au/pub/users/mike/ilpkddpaper.ps.gz
Refering-URL: http://www.cse.unsw.edu.au/~mike/
Root-URL: 
Email: email: fmike,claude,arun,jasg@cse.unsw.edu.au  
Title: ReDuce: Automatic Structuring and Compression in Relational Databases  
Author: Michael Bain, Claude Sammut, Arun Sharma, John Shepherd 
Date: May 15, 1996  
Address: Sydney, Australia 2052  
Affiliation: School of Computer Science and Engineering University of New South Wales,  
Abstract: In this paper we report first results from an experimental system which learns clausal theories in propositional logic. The system is based on a re-implementation of Muggleton's Duce [5] and is called ReDuce. We argue that the propositional Inductive Logic Programming (ILP) framework has promise for Knowledge Discovery in Databases (KDD) applications since it is more tractable than first-order learning. ReDuce is described in terms of a search for sub-concepts in a theory and in this respect is related to conceptual clustering and database systems.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Carpineto and G. Romano. </author> <title> GALOIS: An order-theoretic approach to conceptual clustering. </title> <booktitle> In Proc. 10th Intl. Conf. on Machine Learning, </booktitle> <pages> pages 33-40, </pages> <address> Los Altos, CA, 1993. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: However, using the subset graph to define the search space, the maximum 6 number of clause subsets ReDuce has to consider for operator applications is N 2 . Secondly, the subset graph is closely related to the concept or Galois lattices <ref> [1] </ref> studied as representations for conceptual clustering which generalise the tree-based formalisms of the COBWEB family [3]. 3.2 Search In the current implementation of ReDuce a hill-climbing search of the subset graph is carried out.
Reference: [2] <author> W. W. Cohen. </author> <title> Recovering Software Specifications with Inductive Logic Programming. </title> <booktitle> In AAAI94: Proc. of the 12th Natl. Conf. on AI, </booktitle> <pages> pages 142-148, </pages> <address> Menlo Park, CA, 1994. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: So much so that a major research effort in recent times has been devoted to methods of constraining this space, e.g. the use of declarative biases in <ref> [2, 6] </ref>. However the overall picture is that in most cases applications of ILP have been with the smaller size of datasets common to Machine Learning rather than the very large datasets which are associated with KDD. We wish to scale-up to KDD.
Reference: [3] <author> D. Fisher. </author> <title> Iterative Optimization and Simplification of Hierarchical Clus-terings. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 4 </volume> <pages> 147-179, </pages> <year> 1996. </year>
Reference-contexts: Secondly, the subset graph is closely related to the concept or Galois lattices [1] studied as representations for conceptual clustering which generalise the tree-based formalisms of the COBWEB family <ref> [3] </ref>. 3.2 Search In the current implementation of ReDuce a hill-climbing search of the subset graph is carried out. The goal is to find the best operator application in terms of the symbol reduction equations discussed above. However, not every node in the subset graph contains valid operands.
Reference: [4] <author> D. Michie. </author> <title> The superarticulacy phenomenon in the context of software manufacture. </title> <journal> Proceedings of the Royal Society of London, </journal> <volume> A 405 </volume> <pages> 185-212, </pages> <year> 1986. </year>
Reference-contexts: From the perspective of Machine Learning the recent rapid growth of work in KDD is interesting, since the goal of discovery of useful knowledge from large datasets has been a been a long-standing motivation for some of those in Machine Learning, e.g. <ref> [4] </ref>. However, Machine Learning and KDD, although they have a significant amount in common, are not the same thing. A discussion of the precise definitions of these fields is beyond the scope of our paper. We can say the following about our present motivations for KDD, 2 nonetheless.
Reference: [5] <author> S. Muggleton. Duce, </author> <title> an oracle based approach to constructive induction. </title> <booktitle> In IJCAI-87, </booktitle> <pages> pages 287-292. </pages> <publisher> Kaufmann, </publisher> <year> 1987. </year>
Reference-contexts: ILP has grown since its inception to encompass a wide range of algorithms and methodologies. One significant area during this development has been inverse resolution, and versions of the operators for inverting resolution are common throughout ILP. An early system which included inverse resolution operators was Muggleton's Duce <ref> [5] </ref>. However Duce has been somewhat overshadowed since then by the advent of ILP systems using first-order formalisms. This is surprising because Duce contained many interesting aspects, such as predicate invention, the induction of structured clauses and compression-guided search. <p> The subset graph is of interest for two reasons. Firstly, it provides improved efficiency for ReDuce compared with Duce. The search space for Duce is of size 2 N , where N is the number of clauses in the theory <ref> [5] </ref>. However, using the subset graph to define the search space, the maximum 6 number of clause subsets ReDuce has to consider for operator applications is N 2 .
Reference: [6] <author> S. Muggleton. </author> <title> Inverse Entailment and Progol. </title> <journal> New Generation Computing, </journal> <volume> 13 </volume> <pages> 245-286, </pages> <year> 1995. </year>
Reference-contexts: So much so that a major research effort in recent times has been devoted to methods of constraining this space, e.g. the use of declarative biases in <ref> [2, 6] </ref>. However the overall picture is that in most cases applications of ILP have been with the smaller size of datasets common to Machine Learning rather than the very large datasets which are associated with KDD. We wish to scale-up to KDD.
Reference: [7] <author> S. Muggleton and W. Buntine. </author> <title> Machine invention of first-order predicates by inverting resolution. </title> <booktitle> In Proceedings of the Fifth International Conference on Machine Learning, </booktitle> <pages> pages 339-352. </pages> <publisher> Kaufmann, </publisher> <year> 1988. </year>
Reference-contexts: Duce also includes operators for predicate invention, which allow for structuring of sets of clauses. Thus the database is structured and compressed by repeated operator applications. Four of the operators are variants of "inverse resolution" for propositional logic. These are the well-known W and V operators <ref> [7] </ref>. All six operators are shown in Table 1. A key aspect of Duce is the use of an oracle, usually although not nec 3 Table 1: The six operators in Duce.
Reference: [8] <author> E. Perez and L. Rendell. </author> <title> Using Multi-dimensional Projections to Find Relations. </title> <booktitle> In ML-95: Proc. of the Twelfth Intl. Conference on Machine Learning, </booktitle> <pages> pages 447-455, </pages> <address> San Mateo, CA, 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Five datasets were used, four synthetic Boolean functions and one real-world application. The synthetic datasets are based on those described in <ref> [8] </ref>, although we have defined them in an eight-dimensional Boolean space rather than the twelve used by those authors. Two of these functions are the (odd) parity functions f p (2; 7) and f p (3; 6). The other two f mx4 and f mx4c (3; 6) are multiplexors.
Reference: [9] <author> J. D. Ullman. </author> <title> Principles of Database and Knowledge-Base Systems. </title> <publisher> Computer Science Press, </publisher> <address> Rockville, MD, </address> <year> 1989. </year> <month> 12 </month>
Reference-contexts: In database systems intersection can be viewed as one of the basic relational algebra operators since R " S is equivalent to R (R S), where R and S are relations <ref> [9] </ref>. Additionally, the actual transformations of clauses can be implemented using the set difference operator to extract the common pattern or intersection from clause bodies.
References-found: 9

