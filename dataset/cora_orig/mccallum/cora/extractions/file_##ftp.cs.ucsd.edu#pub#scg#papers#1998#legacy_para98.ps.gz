URL: file://ftp.cs.ucsd.edu/pub/scg/papers/1998/legacy_para98.ps.gz
Refering-URL: http://www.cs.ucsd.edu/groups/hpcl/scg/tr.html
Root-URL: http://www.cs.ucsd.edu
Email: fbaden, jhoweg@cs.ucsd.edu  ftgrimmet, knomurag@opal.ucsd.edu  
Phone: 2  
Title: Modernization of Legacy Application Software  
Author: Jeffrey Howe Scott B. Baden Tamara Grimmett and Keiko Nomura 
Web: http://www-cse.ucsd.edu/users/baden  
Address: 9500 Gilman Drive, La Jolla CA 92093-0114, USA  9500 Gilman Drive, La Jolla CA 92093-0411, USA  
Affiliation: 1 Department of Computer Science and Engineering, University of California, San Diego,  Department of Applied Mechanics and Engineering Sciences University of California, San Diego,  
Abstract: Legacy application software is typically written in a dialect of Fortran, and must be reprogrammed to run on today's microprocessor-based multicomputer architectures. We describe our experiences in modernizing a legacy direct numerical simulation (DNS) code with the KeLP software infrastructure. The resultant code runs on the IBM SP2 with higher numerical resolutions than possible with the legacy code running on a vector mainframe.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> T. Brandes and K. Krause. </author> <title> Porting to hpf: Experiences with dbetsy3d within pharos. </title> <booktitle> In Proc. 2nd Annual HPF User Group meeting, </booktitle> <month> June </month> <year> 1998. </year>
Reference-contexts: A major difficulty in modernizing this legacy application was in contending with sequence association. This now deprecated practice has been used historically to emulate dynamic memory and to improve vector lengths on vector architectures. This infamous problem is well known to the HPF and Fortran 90 community <ref> [9, 2, 1] </ref>, and it seriously impedes the process of modernizing of large 6 To appear in Proc. PARA98 legacy Fortran 77 codes in general.
Reference: 2. <author> M. Delves and H. Luzet. </author> <title> Semc3d code port to hpf. </title> <booktitle> In Proc. 2nd Annual HPF User Group meeting, </booktitle> <month> June </month> <year> 1998. </year>
Reference-contexts: A major difficulty in modernizing this legacy application was in contending with sequence association. This now deprecated practice has been used historically to emulate dynamic memory and to improve vector lengths on vector architectures. This infamous problem is well known to the HPF and Fortran 90 community <ref> [9, 2, 1] </ref>, and it seriously impedes the process of modernizing of large 6 To appear in Proc. PARA98 legacy Fortran 77 codes in general.
Reference: 3. <author> S. J. Fink and S. B. Baden. </author> <title> The kelp user's guide, </title> <type> v1.0. Technical report, </type> <institution> Dept. of Computer Science and Engineering, Univ. Calif., </institution> <address> San Diego, </address> <month> March </month> <year> 1996. </year>
Reference-contexts: We used a DSL called DOCK to facilitate the implementation of KDISTUF. DOCK is written in KeLP and is packaged with the public distribution. DOCK supports HPF style BLOCK decompositions [8] that were used to parallelize DISTUF. (The details may be found in the KeLP User's Guide <ref> [3] </ref>.) We may view the DOCK abstractions as specialized versions of the basic KeLP classes, which are 4 To appear in Proc. PARA98 constructed using the C ++ inheritance mechanism. The organization of a typical KeLP application is as follows. 1.
Reference: 4. <author> S. J. Fink, S. B. Baden, and S. R. Kohn. </author> <title> Run-time support for irregular block-structured applications. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <note> 1998. In press. </note>
Reference-contexts: It provides a middle-level layer sitting on top of MPI to simplify global to local mappings and communication optimizations. KeLP applications have been shown to deliver performance comparable with the equivalent MPI codes, including stencil based methods and the FFT, which are employed in DISTUF <ref> [4] </ref>. KeLP provides a simple machine independent model of execution. It runs on multicomputers such as the IBM SP2, Cray T3E, SGI-Cray Origin 2000; on workstation clusters; and on single and multiple-processor workstations. KeLP defines only 7 new data types plus a small number of primitives to manipulate them.
Reference: 5. <author> S. J. Fink, S. R. Kohn, and S. B. Baden. </author> <title> Flexible communication mechanisms for dynamic structured applications. In IRREGULAR '96, </title> <address> Santa Barbara, California, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: Diego Supercomputer Center has only about 2 Gigabytes of memory, but just 8 nodes of SDSC's 128-node IBM SP2 provide this same memory capacity. 1 We will discuss our experiences in modernizing a legacy application code, called DISTUF [13, 7], using the KeLP software infrastructure developed by Fink and Baden <ref> [5] </ref>. The resultant code, called KDISTUF, can run at a higher numerical resolution than the legacy code, by virtue of increased memory and computational capacity.
Reference: 6. <author> I. Foster, R. Olson, and S. Tuecke. </author> <title> Productive parallel programming: The pcn approach. </title> <journal> J. of Sci. Prog., </journal> <volume> 1 </volume> <pages> 51-66, </pages> <year> 1992. </year>
Reference-contexts: The changes to the Fortran 77 code would have been extensive, though the KeLP wrapper supports alternative partitionings. Code re-use is extremely important and has led to success in other conversion efforts, for example using PCN <ref> [6] </ref>. A major consideration in modernizing DISTUF is to increase the amount of available memory in order to improve resolution. The resultant improved code, called KDISTUF, will be employed by Grimmett and Nomura on high performance parallel computers.
Reference: 7. <author> T. Gerz, U. Schumann, and S. Elghobashi. </author> <title> Direct simulation of stably stratified homogeneous turbulent shear flows. </title> <journal> J. Fluid Mech., </journal> <volume> 200 </volume> <pages> 563-594, </pages> <year> 1989. </year>
Reference-contexts: For example, the Cray T94 at the San Diego Supercomputer Center has only about 2 Gigabytes of memory, but just 8 nodes of SDSC's 128-node IBM SP2 provide this same memory capacity. 1 We will discuss our experiences in modernizing a legacy application code, called DISTUF <ref> [13, 7] </ref>, using the KeLP software infrastructure developed by Fink and Baden [5]. The resultant code, called KDISTUF, can run at a higher numerical resolution than the legacy code, by virtue of increased memory and computational capacity.
Reference: 8. <institution> High Performance Fortran Forum, Rice University, Houston, Texas. High Performance Fortran Language Specification, </institution> <month> November </month> <year> 1994. </year>
Reference-contexts: MPI, and as previously noted, at a comparable performance. We used a DSL called DOCK to facilitate the implementation of KDISTUF. DOCK is written in KeLP and is packaged with the public distribution. DOCK supports HPF style BLOCK decompositions <ref> [8] </ref> that were used to parallelize DISTUF. (The details may be found in the KeLP User's Guide [3].) We may view the DOCK abstractions as specialized versions of the basic KeLP classes, which are 4 To appear in Proc. PARA98 constructed using the C ++ inheritance mechanism.
Reference: 9. <author> C. Koelbel. </author> <title> Making hpf work: Past success and future challenges. In Workshop on HPF for Real Applications, </title> <month> July </month> <year> 1996. </year>
Reference-contexts: A major difficulty in modernizing this legacy application was in contending with sequence association. This now deprecated practice has been used historically to emulate dynamic memory and to improve vector lengths on vector architectures. This infamous problem is well known to the HPF and Fortran 90 community <ref> [9, 2, 1] </ref>, and it seriously impedes the process of modernizing of large 6 To appear in Proc. PARA98 legacy Fortran 77 codes in general.
Reference: 10. <author> K. K. Nomura and S. E. Elghobashi. </author> <title> Mixing characteristics of an inhomogeneous scalar in isotropic and homogeneous sheared turbulence. </title> <journal> Phys. Fluids, </journal> <volume> 4 </volume> <pages> 606-625, </pages> <year> 1992. </year>
Reference: 11. <author> K. K. Nomura and G. K. Post. </author> <title> The structure and dynamics of vorticity and rate-of-strain in incompressible homogeneous turbulence. </title> <note> (Submitted to J. </note> <institution> Fluid Mech.), </institution> <year> 1997. </year>
Reference: 12. <author> K.K. Nomura, G.K. Post, and P. Diamessis. </author> <title> The interaction of vorticity and rate-of-strain in turbulent homogeneous shear flow. </title> <note> (In Preparation), </note> <year> 1998. </year>
Reference: 13. <author> U. Schumann. </author> <title> Dynamische datenblock-verwaltung in fortran. </title> <type> Technical report, </type> <institution> In-stitut fur Reaktorentwicklung, Gessellschaft fur Kernforschung M.B.H., Karlsruhe, Germany, </institution> <month> August </month> <year> 1974. </year>
Reference-contexts: For example, the Cray T94 at the San Diego Supercomputer Center has only about 2 Gigabytes of memory, but just 8 nodes of SDSC's 128-node IBM SP2 provide this same memory capacity. 1 We will discuss our experiences in modernizing a legacy application code, called DISTUF <ref> [13, 7] </ref>, using the KeLP software infrastructure developed by Fink and Baden [5]. The resultant code, called KDISTUF, can run at a higher numerical resolution than the legacy code, by virtue of increased memory and computational capacity.
Reference: 14. <author> U. Schumann. </author> <title> Algorithms for direct numerical simulations of shear-periodic turbulence. </title> <editor> In Soubbaramayer and J.P. Boujot, editors, </editor> <booktitle> Lecture Notes in Physics, </booktitle> <volume> volume 218, </volume> <pages> pages 492-496. </pages> <publisher> Springer, </publisher> <year> 1985. </year>
Reference-contexts: The equations are discretized in an Eulerian framework using a second-order finite-difference method on a staggered grid. The Adams-Bashforth scheme is used to integrate the equations in time. Pressure is treated implicitly; DISTUF employs a fast Poisson solver <ref> [14] </ref> which combines fast Fourier transforms and Gaussian elimination to solve for the pressure field. Boundary conditions are periodic. The data structure for DISTUF consists of a single logical 3-dimensional grid.
References-found: 14

