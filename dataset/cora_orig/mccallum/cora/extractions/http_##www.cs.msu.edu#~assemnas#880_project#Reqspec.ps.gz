URL: http://www.cs.msu.edu/~assemnas/880_project/Reqspec.ps.gz
Refering-URL: http://www.cs.msu.edu/~assemnas/880_project/
Root-URL: http://www.cs.msu.edu
Title: Requirements Specification CPS 880: WHOIS++ Project  
Author: Nasser Assem, Youngsun Chun, Lynn M. Kubinec April Lee, Maritza Ram irez, Rob Seward 
Date: October 17, 1996  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Nasser Assem, Youngsun Chun, Lynn M. Kubinec, April Lee, Maritza Ramirez, and Rob Seward. </author> <title> Preliminary Design. </title> <note> Submitted as course work: CPS880, Fall 94, </note> <month> October </month> <year> 1994. </year>
Reference-contexts: Before specifying these queries, we give below the tables built in index servers. For more detailed description, see <ref> [1] </ref>. <p> The query generated would be: SELECT TD.* FROM TemplateInfo TI, TemplateFieldDesc TFD, TemplateData TD WHERE TI.TemplateName = "User" TFD.Template_ID = TI.Template_ID TFD.Field_Description = "Name" TD.Template_ID = TFD.Template_ID TD.Field_Number = TFD.Field_Number TD.Field_Value = "Smith" The TemplateInfo, TemplateFieldDesc and TemplateData tables are described in <ref> [1] </ref>. As can be seen the SQL generated for each example is significantly different. For each system command, including template data searches, a separate function to generate SQL code must be written. Furthermore, the SQL needed on a base level server differs from that needed to query an index server.
Reference: [2] <author> John Bloomer. </author> <title> Power Programming with RPC. </title> <publisher> O'Reilly & Associates, Inc., </publisher> <year> 1992. </year> <note> ISBN 0-937175-77-3. </note>
Reference: [3] <author> Douglas Comer. </author> <title> Internetworking with TCP/IP, Vol III: Client-Server Programming and Applications. </title> <publisher> Prentice-Hall, Inc., </publisher> <year> 1988. </year> <note> ISBN 0-13-474222-2. </note>
Reference-contexts: The WHOIS++ servers and client we implement will use the TCP/IP network protocol suite to communicate. The server will be designed as a connection-oriented, concurrent server <ref> [3] </ref>. that accepts connections at a specified socket. The Master then spawns Slaves who do the actual work. In our servers, the Slaves will pass incoming client messages, queries, to the Message Interpreter Module.
Reference: [4] <author> P. Deutsch, A. Emtage, M. Koster, , and M. Stumpf. </author> <note> Publishing Information on the Internet with Anonymous FTP. Available by anonymous FTP from nic.merit.edu as draft-ietf-iiir-publishing-01.txt, September 1994. Internet Draft. </note>
Reference: [5] <author> Peter Deutsch, Rickard Schoultz, Patrik Faltstrom, and Chris Weider. </author> <title> Architecture of the WHOIS++ service. </title> <note> Available by anonymous FTP from nic.merit.edu as draft-ietf-wnils-whois-arch-01.txt, July 1994. Internet Draft. </note>
Reference-contexts: Clients may ask for system information or perform an actual query. The system commands a client may ask are given below <ref> [5] </ref>. COMMANDS Summary of valid WHOIS++ commands. DESCRIBE Description of the server. CONSTRAINTS List of constraints supported by server. 8 HELP Help using system commands. LIST List of templates supported by this server. POLLED-BY List of index level servers that contain centroids for this server. <p> The following is a sample query that a server must be prepared to answer: name=robert AND department=CPS 9 The ASCII messages sent by the client must conform to the command syntax specified by the WHOIS++ specifications. The BNF grammar that describes user queries is given in <ref> [5] </ref>. Because the rule productions for the grammar are rather complex it will be necessary to design the WHOIS++ query parser in Flex and Bison. <p> All successful queries will begin with a "% 220". Any queries which can not be processed will return "% " error number and description of the error. The body of the query response will be indented one space. For a more exact definition of formatting query responses refer to <ref> [5] </ref>. In general, WHOIS++ System Commands will be handled similarly by both the base level and index level servers.
Reference: [6] <author> P. Faltstrom, R. Schoultz, and C. Weider. </author> <title> How to interact with a Whois++ mesh. </title> <note> Available by anonymous FTP from nic.merit.edu as draft-ietf-wnils-whois-mesh-00.txt, July 1994. Internet Draft. </note>
Reference-contexts: After processing the query, the server will send a response back to the client, and the connection is terminated. 2.1.1 Client/Server Scenarios There are various modes of interaction between a client and a server <ref> [6] </ref>. The kind of interaction will be determined by the type of WHOIS++ server. In our design, we are making a distinction between a base level server and an index level server.
Reference: [7] <author> Joan Gargano and Ken Weiss. </author> <title> Whois and Network Information Lookup Service: </title> <journal> Whois++. </journal> <note> Available by anonymous FTP from nic.merit.edu as draft-ietf-wnils-whois-lookup-01.txt, June 1994. Internet Draft. </note>
Reference: [8] <author> K. Harrenstien, M. Stahl, and E. Feinler. NICNAME/WHOIS. </author> <note> Available by anonymous FTP from nic.merit.edu as rfc812.txt, October 1985. RFC 812. </note>
Reference: [9] <author> W. Richard Stevens. </author> <title> UNIX Network Programming. </title> <publisher> Prentice-Hall, Inc., </publisher> <year> 1990. </year> <note> ISBN 0-13-949876-1. </note>
Reference: [10] <author> Chris Weider and Jim Fullton. </author> <title> Architecture of the Whois++ Index Service. </title> <note> Available by anonymous FTP from nic.merit.edu as draft-ietf-wnils-whois-03.txt, </note> <month> July </month> <year> 1994. </year> <title> Internet Draft. </title> <type> 16 </type>
Reference-contexts: We conclude by discussing the reference documents we will be using for project implementation in Section 5. 2 Project Definition and Goals We will be implementing a subset of the WHOIS++ Internet Draft specifications <ref> [10] </ref>. In Section 2.1 we describe the client software that provides the user interface to our WHOIS++ servers. A discussion of the required elements of our base level and index level servers follows in Section 2.2.
References-found: 10

