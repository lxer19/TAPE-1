URL: ftp://ftp-pubs.lcs.mit.edu/pub/lcs-pubs/tm.outbox/MIT-LCS-TM-575.ps.gz
Refering-URL: ftp://ftp-pubs.lcs.mit.edu/pub/lcs-pubs/listings/catatm.html
Root-URL: 
Title: Signing with Partially Adversarial Hashing  
Author: Silvio Micali Leonid Reyzin 
Keyword: Keywors: cryptanalysis, cryptography, digital signature, hash function, random oracle  
Date: February 27, 1998  
Address: Cambridge MA 02139  
Affiliation: MIT Laboratory for Computer Science  
Pubnum: MIT-LCS-TM-575  
Abstract: Digital signatures usually utilize one-way hash functions designed by other parties. It is thus possible that such hash functions are adverserially designed so as to enable forging signatures in otherwise secure schemes. We initiate the study of signing with adversarial hashing by considering hash functions for which an adversary can fix arbitrarily the input-output values at polynomially many inputs. On the negative side, we show that many known signature schemes are vulnerable against such partially adversarial hashing attacks. On the positive side, we show that a surprisingly simple modification makes any scheme invulnerable against such attacks. The computational requirements of our modification are so mild that it could be easily integrated into any signature scheme. 
Abstract-found: 1
Intro-found: 1
Reference: [BR93] <author> Mihir Bellare and Phillip Rogaway. </author> <title> Random oracles are practical: A paradigm for designing efficient protocols. </title> <booktitle> In Proceedings of the 1st ACM Conference on Computer and Communication Security, </booktitle> <month> November </month> <year> 1993. </year> <note> Revised version appears in http://www-cse.ucsd.edu/users/mihir/papers/crypto-papers.html. 6 </note>
Reference-contexts: Some such schemes are proven secure (equivalent to problems deemed hard, such as factoring) assuming H is a random oracle (see, for example, <ref> [BR93] </ref>). The attack. To attack a deterministic hash-and-sign scheme, the adversary A designs the hash funciton as follows.
Reference: [BR96] <author> Mihir Bellare and Phillip Rogaway. </author> <title> The exact security of digital signatures: How to sign with RSA and Rabin. </title> <editor> In U. Maurer, editor, </editor> <booktitle> Advances in Cryptology|Eurocrypt 96, Lecture Notes in Computer Science Vol. </booktitle> <volume> 1070. </volume> <publisher> Springer-Verlag, </publisher> <year> 1996. </year> <note> Revised version appears in http://www-cse.ucsd.edu/users/mihir/papers/crypto-papers.html. </note>
Reference-contexts: We show that most schemes in the literature are insecure if implemented with partially-adversarial hash functions. This is to be expected, of course, for deterministic hash-and-sign schemes. However, we show that this insecurity extends to probabilistic schemes as well, such as the Bellare-Rogaway <ref> [BR96] </ref> scheme. Because this scheme is otherwise "perfect" (that is, provably secure if one hashes by means of a random oracle), this proves the point that adversarial hashing (even in our simple form) is a serious concern. <p> This is not the case. Consider the following scheme, known as PSS <ref> [BR96] </ref>. Below we present PSS with exponent-3 RSA (RSA with verification exponent 3 is often used in practice to expedite verification). The Bellare-Rogaway Probabilistic Signature Scheme (PSS). Since PSS is a complicated scheme, it may be helpful to refer to its description given in [BR96]. 4 * Setup: Before executing the <p> the following scheme, known as PSS <ref> [BR96] </ref>. Below we present PSS with exponent-3 RSA (RSA with verification exponent 3 is often used in practice to expedite verification). The Bellare-Rogaway Probabilistic Signature Scheme (PSS). Since PSS is a complicated scheme, it may be helpful to refer to its description given in [BR96]. 4 * Setup: Before executing the scheme, one needs to pick a hash function H : f0; 1g fl ! f0; 1g k , a key length b &gt; k, and a generator function G : f0; 1g k ! f0; 1g bk1 (in [BR96], both H and G are <p> to its description given in <ref> [BR96] </ref>. 4 * Setup: Before executing the scheme, one needs to pick a hash function H : f0; 1g fl ! f0; 1g k , a key length b &gt; k, and a generator function G : f0; 1g k ! f0; 1g bk1 (in [BR96], both H and G are assumed to be random oracles). <p> Let r 0 = r 0fl G 1 (w 0 ). Verify that f = 0, w 0 = H (M jjr 0 ) and that y = G 2 (w 0 ). If all of these are true, accept the signature; reject otherwise. In <ref> [BR96] </ref>, Bellare and Rogaway prove that existentially forging PSS signatures is equivalent to inverting RSA, assuming H and G are random oracles. The attack. To attack PSS, the adversary A can design H and G as follows. <p> The same attack can be mounted on PSS with a low exponent other than 3 and on PSS with Rabin instead of RSA (called PRab in <ref> [BR96] </ref>). (With PRab, where exponent 2 is used instead of 3, there are some techincal differences due to the fact that not every number in Z n fl has a square root, but they do not prevent A from mounting this attack.) In general, consider a randomized hash-and-sign scheme where to
Reference: [DBP96] <author> Hans Dobbertin, Antoon Bosselaers, and Bart Preneel. RIPEMD-160: </author> <note> A strengthened version of RIPEMD. </note> <editor> In D. Gollmann, editor, </editor> <title> Fast Software Encryption. </title> <booktitle> Third International Workshop Proceedings. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: Popular hash function used in conjunction with digital signature schemes include SHA-1 [NIS95], MD5 [Riv92], or RIPEMD <ref> [DBP96] </ref>.
Reference: [GMR88] <author> Shafi Goldwasser, Silvio Micali, and Ronald L. Rivest. </author> <title> A digital signature scheme secure against adaptive chosen-message attacks. </title> <journal> SIAM Journal on Computing, </journal> <volume> 17(2) </volume> <pages> 281-308, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: E-mail: reyzin@mit.edu. This material is based upon work supported in part under a National Science Foundation Graduate Fellowship. 1 Some digital signature schemes, most notably the Goldwasser, Micali and Rivest scheme <ref> [GMR88] </ref>, implicitly design their own hash functions, and are provably secure without the use of the random oracle assumption. Such schemes, however, are rare and not very efficient.
Reference: [IEE97] <editor> IEEE P1363/D1 (Draft Version 1): </editor> <title> Standard Specifications for Public Key Cryptography. </title> <institution> Institute of Electrical and Electronic Engineers, Inc., </institution> <month> December </month> <year> 1997. </year> <note> Available from http://stdsbbs.ieee.org/groups/1363/. </note>
Reference-contexts: In a typical hash-and-sign scheme, a signature s of a message M is computed as follows: s = SIG (P K; SK; H (M )). Examples of such schemes include many variants of RSA, such as <ref> [RSA93, IEE97] </ref>, Rabin and Williams [Rab79, Wil80, IEE97], DSA [NIS94] and Elliptic Curve DSA [IEE97], Schnorr [Sch91], Nyberg-Rueppel with a hash function [NR96, IEE97] and many others. <p> In a typical hash-and-sign scheme, a signature s of a message M is computed as follows: s = SIG (P K; SK; H (M )). Examples of such schemes include many variants of RSA, such as [RSA93, IEE97], Rabin and Williams <ref> [Rab79, Wil80, IEE97] </ref>, DSA [NIS94] and Elliptic Curve DSA [IEE97], Schnorr [Sch91], Nyberg-Rueppel with a hash function [NR96, IEE97] and many others. Some such schemes are proven secure (equivalent to problems deemed hard, such as factoring) assuming H is a random oracle (see, for example, [BR93]). The attack. <p> Examples of such schemes include many variants of RSA, such as [RSA93, IEE97], Rabin and Williams [Rab79, Wil80, IEE97], DSA [NIS94] and Elliptic Curve DSA <ref> [IEE97] </ref>, Schnorr [Sch91], Nyberg-Rueppel with a hash function [NR96, IEE97] and many others. Some such schemes are proven secure (equivalent to problems deemed hard, such as factoring) assuming H is a random oracle (see, for example, [BR93]). The attack. <p> Examples of such schemes include many variants of RSA, such as [RSA93, IEE97], Rabin and Williams [Rab79, Wil80, IEE97], DSA [NIS94] and Elliptic Curve DSA [IEE97], Schnorr [Sch91], Nyberg-Rueppel with a hash function <ref> [NR96, IEE97] </ref> and many others. Some such schemes are proven secure (equivalent to problems deemed hard, such as factoring) assuming H is a random oracle (see, for example, [BR93]). The attack. To attack a deterministic hash-and-sign scheme, the adversary A designs the hash funciton as follows.
Reference: [NIS94] <institution> FIPS Publication 186: Digital Signature Standard (DSS). National Institute of Standards and Technology (NIST), </institution> <month> May </month> <year> 1994. </year> <note> Available from http://csrc.nist.gov/fips/. </note>
Reference-contexts: In a typical hash-and-sign scheme, a signature s of a message M is computed as follows: s = SIG (P K; SK; H (M )). Examples of such schemes include many variants of RSA, such as [RSA93, IEE97], Rabin and Williams [Rab79, Wil80, IEE97], DSA <ref> [NIS94] </ref> and Elliptic Curve DSA [IEE97], Schnorr [Sch91], Nyberg-Rueppel with a hash function [NR96, IEE97] and many others. Some such schemes are proven secure (equivalent to problems deemed hard, such as factoring) assuming H is a random oracle (see, for example, [BR93]). The attack.
Reference: [NIS95] <institution> FIPS Publication 180-1: Secure Hash Standard. National Institute of Standards and Technology (NIST), </institution> <month> April </month> <year> 1995. </year> <note> Available from http://csrc.nist.gov/fips/. </note>
Reference-contexts: Popular hash function used in conjunction with digital signature schemes include SHA-1 <ref> [NIS95] </ref>, MD5 [Riv92], or RIPEMD [DBP96].
Reference: [NR96] <author> K. Nyberg and R.A. Rueppel. </author> <title> Message recovery for signature schemes based on the discrete logarithm problem. Designs, Codes and Cryptography, </title> <address> 7(1-2):61-81, </address> <month> January </month> <year> 1996. </year>
Reference-contexts: Examples of such schemes include many variants of RSA, such as [RSA93, IEE97], Rabin and Williams [Rab79, Wil80, IEE97], DSA [NIS94] and Elliptic Curve DSA [IEE97], Schnorr [Sch91], Nyberg-Rueppel with a hash function <ref> [NR96, IEE97] </ref> and many others. Some such schemes are proven secure (equivalent to problems deemed hard, such as factoring) assuming H is a random oracle (see, for example, [BR93]). The attack. To attack a deterministic hash-and-sign scheme, the adversary A designs the hash funciton as follows.
Reference: [Rab79] <author> Michael O. Rabin. </author> <title> Digitalized signatures and public-key functions as intractable as factorization. </title> <type> Technical Report MIT/LCS/TR-212, </type> <institution> Massachusetts Institute of Technology, </institution> <address> Cambridge, MA, </address> <month> January </month> <year> 1979. </year>
Reference-contexts: In a typical hash-and-sign scheme, a signature s of a message M is computed as follows: s = SIG (P K; SK; H (M )). Examples of such schemes include many variants of RSA, such as [RSA93, IEE97], Rabin and Williams <ref> [Rab79, Wil80, IEE97] </ref>, DSA [NIS94] and Elliptic Curve DSA [IEE97], Schnorr [Sch91], Nyberg-Rueppel with a hash function [NR96, IEE97] and many others. Some such schemes are proven secure (equivalent to problems deemed hard, such as factoring) assuming H is a random oracle (see, for example, [BR93]). The attack.
Reference: [Riv92] <author> Ronald L. Rivest. </author> <title> IETF RFC 1321: The MD5 Message-Digest Algorithm. </title> <institution> Internet Activities Board, </institution> <month> April </month> <year> 1992. </year> <note> Available from http://ds.internic.net/rfc/rfc1321.txt. </note>
Reference-contexts: Popular hash function used in conjunction with digital signature schemes include SHA-1 [NIS95], MD5 <ref> [Riv92] </ref>, or RIPEMD [DBP96].
Reference: [RSA93] <author> PKCS #1: </author> <title> RSA Encryption Standard. </title> <type> Version 1.5. </type> <institution> RSA Laboratories, </institution> <month> November </month> <year> 1993. </year> <note> Available from http://www.rsa.com/rsalabs/pubs/PKCS/. </note>
Reference-contexts: In a typical hash-and-sign scheme, a signature s of a message M is computed as follows: s = SIG (P K; SK; H (M )). Examples of such schemes include many variants of RSA, such as <ref> [RSA93, IEE97] </ref>, Rabin and Williams [Rab79, Wil80, IEE97], DSA [NIS94] and Elliptic Curve DSA [IEE97], Schnorr [Sch91], Nyberg-Rueppel with a hash function [NR96, IEE97] and many others.
Reference: [Sch91] <author> Claus-Peter Schnorr. </author> <title> Efficient signature generation by smart cards. </title> <journal> Journal of Cryptology, </journal> <volume> 4(3) </volume> <pages> 161-174, </pages> <year> 1991. </year>
Reference-contexts: Examples of such schemes include many variants of RSA, such as [RSA93, IEE97], Rabin and Williams [Rab79, Wil80, IEE97], DSA [NIS94] and Elliptic Curve DSA [IEE97], Schnorr <ref> [Sch91] </ref>, Nyberg-Rueppel with a hash function [NR96, IEE97] and many others. Some such schemes are proven secure (equivalent to problems deemed hard, such as factoring) assuming H is a random oracle (see, for example, [BR93]). The attack.
Reference: [Wil80] <author> Hugh C. Williams. </author> <title> A modification of the RSA public-key encryption procedure. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-26(6):726-729, </volume> <month> November </month> <year> 1980. </year> <month> 7 </month>
Reference-contexts: In a typical hash-and-sign scheme, a signature s of a message M is computed as follows: s = SIG (P K; SK; H (M )). Examples of such schemes include many variants of RSA, such as [RSA93, IEE97], Rabin and Williams <ref> [Rab79, Wil80, IEE97] </ref>, DSA [NIS94] and Elliptic Curve DSA [IEE97], Schnorr [Sch91], Nyberg-Rueppel with a hash function [NR96, IEE97] and many others. Some such schemes are proven secure (equivalent to problems deemed hard, such as factoring) assuming H is a random oracle (see, for example, [BR93]). The attack.
References-found: 13

