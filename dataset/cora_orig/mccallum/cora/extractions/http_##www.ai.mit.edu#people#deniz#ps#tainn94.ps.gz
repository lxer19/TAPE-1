URL: http://www.ai.mit.edu/people/deniz/ps/tainn94.ps.gz
Refering-URL: http://www.ai.mit.edu/people/deniz/papers.html
Root-URL: 
Email: email: deniz@mit.edu  
Title: THE PRINCIPLE OF PRESSURE IN CHESS  
Author: Deniz Yuret 
Address: 545 Technology Square, Rm:825 Cambridge, MA 02139, USA  
Affiliation: MIT Artificial Intelligence Laboratory  
Abstract: This paper presents a new algorithm, "Pressure Search," for growing min-max game trees. The algorithm is based on the idea of best-first search. The goal of the search is to find a strategy which will change the estimated value of the current position. The amount of pressure, defined as inversely proportional to the number of options available to the opponent, is used as a heuristic measure of the remaining distance to the goal. Pressure Search has the potential to selectively extend parts of the search tree and thus discover deep combinations faster than standard alpha-beta search.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. D. De Groot. </author> <title> Thought and choice in chess. Mouton, the Hauge, 1965 (English translation of the original Dutch edition of 1946). </title>
Reference-contexts: Bebe special 40K 12. Innovation Macintosh Quadra 700 2K Table 1: The competitors of the 23rd ACM International Computer Chess Championship that type A programs would be slow and weak players due to the exponential growth of the search tree. He quotes De Groot's experimental work on chess masters <ref> [1] </ref> to argue for the type B strategy, which corresponds to selective search. In spite of Shannon's great insight, the work on competitive chess machines has been dominated by programs closer to type A. During the period since Shannon's paper, the speed of computers has doubled approximately every two years.
Reference: [2] <author> P. W. Frey, </author> <title> editor. Chess skill in man and machine. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1983. </year>
Reference-contexts: 1 INTRODUCTION The game of chess has often been called the "drosophila" of the artificial intelligence research. The history of computer chess dates back to the dawn of artificial intelligence in the 1950's and it has been an active research area since then <ref> [5, 4, 2] </ref>. The interest in computer chess has been partly due to the popularity of the game, and partly due to its fame as a representative of intelligent activity at least until computers started to beat the grandmasters.
Reference: [3] <author> D. </author> <title> Kopec. </title> <journal> The 23rd acm international computer chess championship. International Computer Chess Association Journal, </journal> <volume> 16 </volume> <pages> 38-53, </pages> <month> March </month> <year> 1993. </year>
Reference: [4] <author> D. Levy, </author> <title> editor. Computer chess compendium. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1988. </year>
Reference-contexts: 1 INTRODUCTION The game of chess has often been called the "drosophila" of the artificial intelligence research. The history of computer chess dates back to the dawn of artificial intelligence in the 1950's and it has been an active research area since then <ref> [5, 4, 2] </ref>. The interest in computer chess has been partly due to the popularity of the game, and partly due to its fame as a representative of intelligent activity at least until computers started to beat the grandmasters. <p> This paper presents one such fruitful combination of ideas. Claude E. Shannon, considered the father of the field of computer chess, provided the basis for much of the future research in his seminal paper, "Programming a Computer for Playing Chess", dated back to 1949 <ref> [10, 4] </ref>. In spite of 45 years of work, most of his ideas are still valid today. Most significant is his definition of two basic strategies for the development of chess programs. The type A strategy uses what we call brute force search.
Reference: [5] <author> Marsland and Schaeffer, </author> <title> editors. Computers chess and cognition. </title> <address> Spriger-Verlag, New York, </address> <year> 1990. </year>
Reference-contexts: 1 INTRODUCTION The game of chess has often been called the "drosophila" of the artificial intelligence research. The history of computer chess dates back to the dawn of artificial intelligence in the 1950's and it has been an active research area since then <ref> [5, 4, 2] </ref>. The interest in computer chess has been partly due to the popularity of the game, and partly due to its fame as a representative of intelligent activity at least until computers started to beat the grandmasters.
Reference: [6] <author> D. A. McAllester. </author> <title> Conspiracy numbers for min-max search. </title> <journal> Artificial Intelligence, </journal> <volume> 35 </volume> <pages> 287-310, </pages> <year> 1988. </year>
Reference-contexts: Thus at this stage it could be used as a "combination detector" supplement to a general chess program. For a more general application, a better evaluation function and an improved memory management strategy is required. 4.2 Conspiracy Numbers Conspiracy numbers for game search were introduced by McAllester <ref> [6, 9] </ref>. The procedure he suggests is based on a measure of the "accuracy" of the root value. The min-max value of the root of a game tree is a function of the static evaluations of the leaf nodes.
Reference: [7] <author> B. Pandolfini. </author> <title> Bobby Fischer's outrageous chess moves. </title> <publisher> Simon & Schuster, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: The evaluation function consisted of the material values of pieces. The program had surprisingly successful results on some test problems <ref> [7, 8, 11] </ref>. In most cases it had no problem extending beyond 10 ply down some variations within the first minute of its search. <p> In most cases it had no problem extending beyond 10 ply down some variations within the first minute of its search. The example given in [Figure 4] show a particular case taken from a game of Bobby Fischer <ref> [7, game 14] </ref>, where some lines extend to 15 ply. Although the program is at an early stage and is inefficient, it takes approximately one minute to search 50000 nodes and uncover this combination. This naive implementation was not able to outperform alpha-beta consistently.
Reference: [8] <author> F. Reinfeld. </author> <title> Win at chess. </title> <publisher> Dover, </publisher> <address> New York, </address> <note> 1958 (originally published in 1945 under the title 'Chess Quiz'). </note>
Reference-contexts: The evaluation function consisted of the material values of pieces. The program had surprisingly successful results on some test problems <ref> [7, 8, 11] </ref>. In most cases it had no problem extending beyond 10 ply down some variations within the first minute of its search.
Reference: [9] <author> J. Schaeffer. </author> <title> Conspiracy numbers. </title> <journal> Artificial Intelligence, </journal> <volume> 43 </volume> <pages> 67-84, </pages> <year> 1990. </year>
Reference-contexts: Thus at this stage it could be used as a "combination detector" supplement to a general chess program. For a more general application, a better evaluation function and an improved memory management strategy is required. 4.2 Conspiracy Numbers Conspiracy numbers for game search were introduced by McAllester <ref> [6, 9] </ref>. The procedure he suggests is based on a measure of the "accuracy" of the root value. The min-max value of the root of a game tree is a function of the static evaluations of the leaf nodes.
Reference: [10] <author> C. E. Shannon. </author> <title> Programming a computer for playing chess. </title> <journal> Philosophical Magazine, </journal> <volume> 41 </volume> <pages> 256-275, </pages> <year> 1950. </year>
Reference-contexts: This paper presents one such fruitful combination of ideas. Claude E. Shannon, considered the father of the field of computer chess, provided the basis for much of the future research in his seminal paper, "Programming a Computer for Playing Chess", dated back to 1949 <ref> [10, 4] </ref>. In spite of 45 years of work, most of his ideas are still valid today. Most significant is his definition of two basic strategies for the development of chess programs. The type A strategy uses what we call brute force search.
Reference: [11] <author> S. Tarrasch. </author> <title> The game of chess. </title> <publisher> Dover, </publisher> <address> New York, </address> <note> 1987 (originally published in 1935). </note>
Reference-contexts: The evaluation function consisted of the material values of pieces. The program had surprisingly successful results on some test problems <ref> [7, 8, 11] </ref>. In most cases it had no problem extending beyond 10 ply down some variations within the first minute of its search.
Reference: [12] <author> P. H. Winston. </author> <booktitle> Artificial intelligence, </booktitle> <publisher> 3rd ed. Addison-Wesley, </publisher> <address> Massachusetts, </address> <year> 1992. </year>
Reference-contexts: The results of an experimental program based on these ideas will follow. 2 THE DISTANCE TO GOAL HEURISTIC In classical AI search literature, a very well known technique to improve performance is to use some heuristic measure of the remaining distance to the goal <ref> [12] </ref>. If such a measure is available, one can order potential continuations accordingly, and proceed with the best one. It is not obvious however, how to apply this technique to game search.
References-found: 12

