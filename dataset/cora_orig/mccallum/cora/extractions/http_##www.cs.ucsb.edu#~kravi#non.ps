URL: http://www.cs.ucsb.edu/~kravi/non.ps
Refering-URL: http://www.cs.ucsb.edu/~kravi/dis.html
Root-URL: http://www.cs.ucsb.edu
Title: Indexing Non-uniform Spatial Data  
Author: K. V. Ravi Kanth Divyakant Agrawal Amr El Abbadi Ambuj K. Singh 
Address: Santa Barbara, CA 93106  
Affiliation: Department of Computer Science University of California at Santa Barbara  
Abstract: Non-uniformity in data extents is a general characteristic of spatial data. Indexing such non-uniform data using conventional spatial index structures such as R fl -trees is inefficient for two reasons: (1) The non-uniformity increases the likelihood of overlapping index entries, and, (2) clustering of non-uniform data is likely to index more dead space than clustering of uniform data. To reduce the impact of these anomalies, we propose a new scheme that promotes data objects to higher levels in tree-based index structures. We examine two criteria for promotion of data objects and evaluate their relative merits using an R fl -tree. In experiments on cartographic data, we observe that our promotion criteria yield upto 45% improvement in query performance for an R fl -tree. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Beckmann, H. Kriegel, R. Schneider, and B. Seeger. </author> <title> The R* tree: An efficient and robust access method for points and rectangles. </title> <booktitle> Proc. of the ACM SIGMOD Intl. Conf. on Management of Data, </booktitle> <pages> pages 322331, </pages> <month> May 23-25 </month> <year> 1990. </year>
Reference-contexts: Unfortunately, most of fl Work supported in part by a research grant from NSF/ARPA/NASA IRI9411330 and NSF instrumentation grant CDA-9421978. these structures are suitable for point data alone. Only a few of them such as the R-tree variants <ref> [1, 8, 16] </ref> perform well with rectangular data. Even these structures lose their efficiency when it comes to indexing data rectangles with nonuniformity in their areas (extents), which is a common characteristic of geographic data. Indexing such non-uniform data is inefficient for two reasons. <p> To appreciate why such an organization can be more efficient than the conventional index organizations, let us consider the example data of Figure 1 (a) and examine how it is organized by popular index structures such as the R fl -tree <ref> [1] </ref>. In this figure, object A contains B and overlaps with C; D and E. This pattern of data occurs frequently in geographical databases. Assuming a node capacity of 3, an R fl - tree organizes the data as shown in Figure 1 (b). <p> In this paper, we propose a new promotion scheme that incorporates Pagel's observations and extends Gunther's promotion-schemes to other popular index structures like the R-trees [8], R fl -trees <ref> [1] </ref>, X-trees [2] which may have overlapping index regions. In addition, we adapt to data distribution by not only promoting but also demoting data objects as and when needed. The SR-tree [9] is also designed to index non-uniform data. <p> Consequently, the effects of promotion on the height of the index tree are equally applicable to most spatial data index structures like the R-trees [8], R + -trees [16], and R fl -trees <ref> [1] </ref>. Since we are concerned with the worst case increase in height due to promotion of entries, we assume every node has exactly m children. At any level, we assume that at most a fraction f of the total entries from that level are promoted to the next higher level. <p> We now propose a promotion scheme that incorporates these observations. In what follows, we describe the scheme using an underlying spatial index structure the R fl -tree <ref> [1] </ref>. We have chosen the R fl -tree because it is one of the best and most versatile spatial structures incorporating a set of optimizations to aggregate data into good clusters.
Reference: [2] <author> S. Berchtold, D. A. Keim, and H. P. Kreigel. </author> <title> The x-tree: An index structure for high dimensional data. </title> <booktitle> Proceedings of the Int. Conf. on Very Large Data Bases, </booktitle> <year> 1996. </year>
Reference-contexts: Berchtold et al. addressed the problem of achieving minimal overlapping entries in their X-tree <ref> [2] </ref>. However, for extended data objects, which are usually of small dimensions, the X-tree achieves little or no reduction in overlap and consequently behaves similar to conventional R fl -tree. <p> In this paper, we propose a new promotion scheme that incorporates Pagel's observations and extends Gunther's promotion-schemes to other popular index structures like the R-trees [8], R fl -trees [1], X-trees <ref> [2] </ref> which may have overlapping index regions. In addition, we adapt to data distribution by not only promoting but also demoting data objects as and when needed. The SR-tree [9] is also designed to index non-uniform data. <p> Although we use an R fl -tree, the scheme is equally applicable to other spatial index structures like the R-trees [8], X-trees <ref> [2] </ref>. 3.1 Promotion Strategy Data objects may be promoted only at the time of new insertions. Insertion of a new data object A proceeds in the usual way from the root to the leaves as in an R fl -tree.
Reference: [3] <author> M. W. Freeston. </author> <title> The bang file: a new kind of grid file. </title> <booktitle> Proc. of the ACM SIGMOD Intl. Conf. on Management of Data, </booktitle> <pages> pages 260269, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: In this paper, we consider the performance of current index structures on geographic and spatial data and present a new approach to indexing them to adapt to data characteristics. Many indexing schemes <ref> [3, 4, 8, 10, 11, 15, 18] </ref> have been designed to provide efficient storage and retrieval support for multidimensional data. Unfortunately, most of fl Work supported in part by a research grant from NSF/ARPA/NASA IRI9411330 and NSF instrumentation grant CDA-9421978. these structures are suitable for point data alone. <p> We found that the extent-based criteria is more robust than the nesting-based criterion. In future, we plan to extend these optimizations to other spatial index structures such as the Bang files <ref> [3] </ref> and the BV-trees [4].
Reference: [4] <author> M. W. Freeston. </author> <title> A general solution of the n-dimensional b-tree problem. </title> <booktitle> Proc. of the ACM SIGMOD Intl. Conf. on Management of Data, </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: In this paper, we consider the performance of current index structures on geographic and spatial data and present a new approach to indexing them to adapt to data characteristics. Many indexing schemes <ref> [3, 4, 8, 10, 11, 15, 18] </ref> have been designed to provide efficient storage and retrieval support for multidimensional data. Unfortunately, most of fl Work supported in part by a research grant from NSF/ARPA/NASA IRI9411330 and NSF instrumentation grant CDA-9421978. these structures are suitable for point data alone. <p> Since all this extra information for each object is maintained in the same tree, the height of the tree may also increase. In contrast, our proposed scheme only uses linear space and is designed to improve index performance without increasing the height of the original tree. The BV-tree <ref> [4] </ref> also employs promotion of index regions to disambiguate them. However, the motivation for the promotion in the BV-trees is to ensure logarithmic access for exact match queries, which are much less common than containment and intersection type of queries. <p> We found that the extent-based criteria is more robust than the nesting-based criterion. In future, we plan to extend these optimizations to other spatial index structures such as the Bang files [3] and the BV-trees <ref> [4] </ref>.
Reference: [5] <author> O. Gunther. </author> <title> The design of the cell tree: An object-oriented index structure for geometric databases. </title> <booktitle> Proc. Int. Conf. on Data Engineering, </booktitle> <pages> pages 598605, </pages> <year> 1989. </year>
Reference-contexts: However, this scheme and its analysis heavily rely on data objects being partitioned to create non-overlapping index regions. Hence, they are suitable only for the cell trees <ref> [5] </ref> and the R + -trees [16]. In addition, the oversize shelves also do not adapt to data distribution because promoted objects are never demoted. The analysis also assumes that all nodes at the same level have the same probability of being accessed by a query.
Reference: [6] <author> O. Gunther. </author> <title> Evaluation of spatial access methods with oversize shelves. </title> <booktitle> Workshop on Geographic database management systems, </booktitle> <pages> pages 17793, </pages> <year> 1992. </year>
Reference-contexts: Since the performance of a tree structure depends on the extents of the index regions as observed in [12], the promotion-based organization yields better results than the conventional R fl -tree. tree In this context, we note that the oversize shelves of Gun-ther <ref> [6, 7] </ref> is the first promotion-based scheme in the literature. However, this scheme and its analysis heavily rely on data objects being partitioned to create non-overlapping index regions. Hence, they are suitable only for the cell trees [5] and the R + -trees [16].
Reference: [7] <author> O. Gunther and H. Noltemeier. </author> <title> Spatial database indices for large extended objects. </title> <booktitle> Proc. Int. Conf. on Data Engineering, </booktitle> <pages> pages 520526, </pages> <year> 1991. </year>
Reference-contexts: Since the performance of a tree structure depends on the extents of the index regions as observed in [12], the promotion-based organization yields better results than the conventional R fl -tree. tree In this context, we note that the oversize shelves of Gun-ther <ref> [6, 7] </ref> is the first promotion-based scheme in the literature. However, this scheme and its analysis heavily rely on data objects being partitioned to create non-overlapping index regions. Hence, they are suitable only for the cell trees [5] and the R + -trees [16].
Reference: [8] <author> A. Guttman. R-trees: </author> <title> A dynamic index structure for spatial searching. </title> <booktitle> Proc. ACM SIGMOD Int. Conf. on Management of Data, </booktitle> <pages> pages 4757, </pages> <year> 1984. </year>
Reference-contexts: In this paper, we consider the performance of current index structures on geographic and spatial data and present a new approach to indexing them to adapt to data characteristics. Many indexing schemes <ref> [3, 4, 8, 10, 11, 15, 18] </ref> have been designed to provide efficient storage and retrieval support for multidimensional data. Unfortunately, most of fl Work supported in part by a research grant from NSF/ARPA/NASA IRI9411330 and NSF instrumentation grant CDA-9421978. these structures are suitable for point data alone. <p> Unfortunately, most of fl Work supported in part by a research grant from NSF/ARPA/NASA IRI9411330 and NSF instrumentation grant CDA-9421978. these structures are suitable for point data alone. Only a few of them such as the R-tree variants <ref> [1, 8, 16] </ref> perform well with rectangular data. Even these structures lose their efficiency when it comes to indexing data rectangles with nonuniformity in their areas (extents), which is a common characteristic of geographic data. Indexing such non-uniform data is inefficient for two reasons. <p> In contrast, for a uniform query distribution, Pagel et al. [12] showed that the access probability depends on the area covered by the nodes. In this paper, we propose a new promotion scheme that incorporates Pagel's observations and extends Gunther's promotion-schemes to other popular index structures like the R-trees <ref> [8] </ref>, R fl -trees [1], X-trees [2] which may have overlapping index regions. In addition, we adapt to data distribution by not only promoting but also demoting data objects as and when needed. The SR-tree [9] is also designed to index non-uniform data. <p> The exact representation depends on the index structure and is of little interest to us at this point. Consequently, the effects of promotion on the height of the index tree are equally applicable to most spatial data index structures like the R-trees <ref> [8] </ref>, R + -trees [16], and R fl -trees [1]. Since we are concerned with the worst case increase in height due to promotion of entries, we assume every node has exactly m children. <p> Although we use an R fl -tree, the scheme is equally applicable to other spatial index structures like the R-trees <ref> [8] </ref>, X-trees [2]. 3.1 Promotion Strategy Data objects may be promoted only at the time of new insertions. Insertion of a new data object A proceeds in the usual way from the root to the leaves as in an R fl -tree.
Reference: [9] <author> C. Kolovson and M. Stonebraker. </author> <title> Segment indexes: Dynamic indexing techniques for multi-dimensional interval data. </title> <booktitle> Proc. ACM SIGMOD Int. Conf. on Management of Data, </booktitle> <pages> pages 138147, </pages> <year> 1991. </year>
Reference-contexts: In addition, we adapt to data distribution by not only promoting but also demoting data objects as and when needed. The SR-tree <ref> [9] </ref> is also designed to index non-uniform data. It attempts to smooth out the non-uniformity by cutting every object into several parts those that enclose or span an index region in the tree (in any dimension), called the spanning regions, and those that do not, called remnant regions.
Reference: [10] <author> D. B. Lomet and B. Salzberg. </author> <title> The hb-tree: A multi-attribute indexing method with good guaranteed performance. </title> <booktitle> Proc. ACM Symp. on Transactions of Database Systems, </booktitle> <address> 15(4):625658, </address> <month> December </month> <year> 1990. </year>
Reference-contexts: In this paper, we consider the performance of current index structures on geographic and spatial data and present a new approach to indexing them to adapt to data characteristics. Many indexing schemes <ref> [3, 4, 8, 10, 11, 15, 18] </ref> have been designed to provide efficient storage and retrieval support for multidimensional data. Unfortunately, most of fl Work supported in part by a research grant from NSF/ARPA/NASA IRI9411330 and NSF instrumentation grant CDA-9421978. these structures are suitable for point data alone.
Reference: [11] <author> J. Nievergelt, H. Hinterberger, and K. C. Sevcik. </author> <title> The grid file: An adaptbale, symmetric multikey file structure. </title> <journal> Proc. ACM Symp. on Transactions of Database Systems, </journal> <volume> 9(1):38 71, </volume> <month> March </month> <year> 1984. </year>
Reference-contexts: In this paper, we consider the performance of current index structures on geographic and spatial data and present a new approach to indexing them to adapt to data characteristics. Many indexing schemes <ref> [3, 4, 8, 10, 11, 15, 18] </ref> have been designed to provide efficient storage and retrieval support for multidimensional data. Unfortunately, most of fl Work supported in part by a research grant from NSF/ARPA/NASA IRI9411330 and NSF instrumentation grant CDA-9421978. these structures are suitable for point data alone.
Reference: [12] <author> B. U. Pagel, H. W. Siz, H. Toben, and P. Widmayer. </author> <title> Towards an analysis of range query performance. </title> <booktitle> Proc. ACM Symp. on Principles of Database Systems, </booktitle> <pages> pages 214221, </pages> <year> 1993. </year>
Reference-contexts: Both these factors contribute to a decrease in the extents for index regions in the tree. Since the performance of a tree structure depends on the extents of the index regions as observed in <ref> [12] </ref>, the promotion-based organization yields better results than the conventional R fl -tree. tree In this context, we note that the oversize shelves of Gun-ther [6, 7] is the first promotion-based scheme in the literature. <p> In addition, the oversize shelves also do not adapt to data distribution because promoted objects are never demoted. The analysis also assumes that all nodes at the same level have the same probability of being accessed by a query. In contrast, for a uniform query distribution, Pagel et al. <ref> [12] </ref> showed that the access probability depends on the area covered by the nodes. <p> We consider containment and intersection queries, which are the most common query types for spatial databases. We assume that these queries access all tree nodes whose footprints intersect the query box. The number of such node accesses characterizes the query performance of the index. Pagel et al. <ref> [12] </ref> give a performance measure for estimating the number of accesses to the children of a node in terms of the probabilities of a query window intersecting their footprints. They consider different query models based on whether or not the query distribution is dependent on the data distribution.
Reference: [13] <author> K. V. Ravi Kanth, D. Agrawal, A. El Abbadi, Ambuj K. Singh, and T. Smith. </author> <title> Indexing hierarchical data. </title> <type> Technical Report CS-TR-9514, </type> <institution> Univ. of California at Santa Barbara, </institution> <year> 1995. </year>
Reference-contexts: Thus, the performance of the index structure degrades. One solution to the above problems is to separate data based on their extents into several levels and index them separately. This approach is similar to that of a Level-based Index (LIB) structure <ref> [13] </ref>, that was designed for indexing nested data. The LIB structure decomposes data into several levels based on their nesting and indexes the data at each level separately. Since the data is scattered over several indices, it works well only for a small number of them.
Reference: [14] <author> K. V. Ravi Kanth and Ambuj K. Singh. </author> <title> Optimal dynamic range searching in non-replicating index structures. </title> <type> Manuscript, </type> <year> 1997. </year>
Reference-contexts: Besides, it could be combined with BV-trees to achieve worst-case logarithmic performance for exact match queries. Note that the worst-case performance for containment queries on n multidimensional objects in most current structures is O (n) <ref> [14] </ref>. In this paper, we first examine the effect of promoting data objects on the query performance of an index tree. We observe that query performance depends on two factors the height of the tree, and, the area covered by the index entries of the tree.
Reference: [15] <author> H. Samet. </author> <title> The design and analysis of spatial data structures. </title> <publisher> Addison-Wesley Publishing Co., </publisher> <year> 1989. </year>
Reference-contexts: In this paper, we consider the performance of current index structures on geographic and spatial data and present a new approach to indexing them to adapt to data characteristics. Many indexing schemes <ref> [3, 4, 8, 10, 11, 15, 18] </ref> have been designed to provide efficient storage and retrieval support for multidimensional data. Unfortunately, most of fl Work supported in part by a research grant from NSF/ARPA/NASA IRI9411330 and NSF instrumentation grant CDA-9421978. these structures are suitable for point data alone.
Reference: [16] <author> T. Sellis, N. Roussopoulos, and C. Faloutsos. </author> <title> The r + -tree: A dynamic index for multi-dimensional objects. </title> <booktitle> Proceedings of the Int. Conf. on Very Large Data Bases, </booktitle> <address> (13):507518, </address> <year> 1988. </year>
Reference-contexts: Unfortunately, most of fl Work supported in part by a research grant from NSF/ARPA/NASA IRI9411330 and NSF instrumentation grant CDA-9421978. these structures are suitable for point data alone. Only a few of them such as the R-tree variants <ref> [1, 8, 16] </ref> perform well with rectangular data. Even these structures lose their efficiency when it comes to indexing data rectangles with nonuniformity in their areas (extents), which is a common characteristic of geographic data. Indexing such non-uniform data is inefficient for two reasons. <p> However, this scheme and its analysis heavily rely on data objects being partitioned to create non-overlapping index regions. Hence, they are suitable only for the cell trees [5] and the R + -trees <ref> [16] </ref>. In addition, the oversize shelves also do not adapt to data distribution because promoted objects are never demoted. The analysis also assumes that all nodes at the same level have the same probability of being accessed by a query. <p> The exact representation depends on the index structure and is of little interest to us at this point. Consequently, the effects of promotion on the height of the index tree are equally applicable to most spatial data index structures like the R-trees [8], R + -trees <ref> [16] </ref>, and R fl -trees [1]. Since we are concerned with the worst case increase in height due to promotion of entries, we assume every node has exactly m children.
Reference: [17] <author> T. R. Smith and J. Frew. </author> <title> Alexandria Digital Library. </title> <journal> Communications of the ACM, </journal> <volume> 38(4):6162, </volume> <month> April </month> <year> 1995. </year>
Reference-contexts: We ex-periment with these criteria using R fl -trees using real cartographic datasets from the Alexandria Digital Library (ADL) <ref> [17] </ref>. The ADL has several sources of spatial data (e.g. the Catalog of all its holdings, the Gazetteer etc.) Each such data collection has a number of objects with varying spatial footprints (the footprint of an object is the minimum bounding rectangle for that object).
Reference: [18] <author> D. White and R. Jain. </author> <title> Similarity indexing with the SS-tree. </title> <booktitle> Proc. Int. Conf. on Data Engineering, </booktitle> <pages> pages 516523, </pages> <year> 1996. </year>
Reference-contexts: In this paper, we consider the performance of current index structures on geographic and spatial data and present a new approach to indexing them to adapt to data characteristics. Many indexing schemes <ref> [3, 4, 8, 10, 11, 15, 18] </ref> have been designed to provide efficient storage and retrieval support for multidimensional data. Unfortunately, most of fl Work supported in part by a research grant from NSF/ARPA/NASA IRI9411330 and NSF instrumentation grant CDA-9421978. these structures are suitable for point data alone.
References-found: 18

