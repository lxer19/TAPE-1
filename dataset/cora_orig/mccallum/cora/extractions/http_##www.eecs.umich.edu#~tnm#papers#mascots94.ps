URL: http://www.eecs.umich.edu/~tnm/papers/mascots94.ps
Refering-URL: http://www.eecs.umich.edu/~tnm/papers.html
Root-URL: http://www.cs.umich.edu
Title: Abstract  
Abstract: This paper describes IDtrace, a binary instrumentation tool which produces execution traces for the ix86 instruction set architecture. Long execution traces can be generated quickly and easily for input to a wide variety of performance evaluation tools. Issues involved in the construction of such a tool are listed along with illustrations of the uses of different generated traces. One example observes the behavior of a branch prediction technique and another compares the cache behavior of the i486 with that of the MIPS R3000. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Pierce, IDtrace: </author> <title> A Trace Generation Tool for the ix86 Instruction Set, </title> <type> Technical report, </type> <institution> Intel Corp., Hillsboro, </institution> <address> OR, </address> <month> Sept. </month> <year> 1992. </year>
Reference-contexts: 1 Description of IDtrace Trace driven simulation plays an important role in the design and tuning of computer architectures. Thus tools which can produce long traces quickly and easily are valued by system designers. This paper discusses IDtrace <ref> [1] </ref>, a software tracing tool for the i486 which produces input data for a wide variety of performance evaluation tools including code profilers and branch prediction and cache simulators. IDtrace instruments program code so that traces are generated during the programs execution.
Reference: [2] <author> J. Quinlan, and K. Lai, Tynero: </author> <title> A Multiple Cache Simulator, </title> <type> Technical Report, </type> <institution> Intel Corp., </institution> <address> Hills boro, OR, </address> <month> May </month> <year> 1991. </year>
Reference-contexts: The R3000 traces are generated by Pixie [3] on a DEC-station 5000 and the cache simulator used is a modified version of the multicache simulation tool, Tynero <ref> [2] </ref>. Table 2 shows some preliminary observations in that the R3000 has roughly two to four times the miss ratio of the i486 on most benchmarks. On smaller caches the number of misses is about the same, however the i486 makes about twice as many references.

References-found: 2

