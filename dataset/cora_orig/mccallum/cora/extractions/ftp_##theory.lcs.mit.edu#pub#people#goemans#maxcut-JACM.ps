URL: ftp://theory.lcs.mit.edu/pub/people/goemans/maxcut-JACM.ps
Refering-URL: http://theory.lcs.mit.edu/~goemans/
Root-URL: 
Title: Improved Approximation Algorithms for Maximum Cut and Satisfiability Problems Using Semidefinite Programming  
Author: Michel X. Goemans David P. Williamson 
Date: 3  
Affiliation: M.I.T.  IBM Watson  
Note: To appear in J. ACM.  4 and  first use of semidefinite programming in the design of approximation algorithms.  
Abstract: We present randomized approximation algorithms for the maximum cut (MAX CUT) and maximum 2-satisfiability (MAX 2SAT) problems that always deliver solutions of expected value at least .87856 times the optimal value. These algorithms use a simple and elegant technique that randomly rounds the solution to a nonlinear programming relaxation. This relaxation can be interpreted both as a semidefinite program and as an eigenvalue minimization problem. The best previously known approximation algorithms for these problems had performance guarantees of 1 2 for MAX CUT and 3 4 for MAX 2SAT. Slight extensions of our analysis lead to a .79607-approximation algorithm for the maximum directed cut problem (MAX DICUT) and a .758-approximation algorithm for MAX SAT, where the best previously known approximation algorithms had performance guarantees of 1 4 respectively. Our algorithm gives the first substantial progress in approximating MAX CUT in nearly twenty years, and represents the 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. Alizadeh. </author> <title> Interior point methods in semidefinite programming with applications to combinatorial optimization. </title> <journal> SIAM Journal on Optimization, </journal> <volume> 5 </volume> <pages> 13-51, </pages> <year> 1995. </year>
Reference-contexts: Semidefinite programming is a special case of convex programming and also of the so-called linear programming over cones or cone-LP since the set of positive semidefinite matrices constitutes a convex cone. To some extent, semidefinite programming is very similar to linear programming; see Alizadeh <ref> [1] </ref> for a comparison. It inherits the very elegant duality theory of cone-LP (see Wolkowicz [70] and the exposition by Alizadeh [1]). The simplex method can be generalized to semidefinite programs (Pataki [57]). <p> To some extent, semidefinite programming is very similar to linear programming; see Alizadeh <ref> [1] </ref> for a comparison. It inherits the very elegant duality theory of cone-LP (see Wolkowicz [70] and the exposition by Alizadeh [1]). The simplex method can be generalized to semidefinite programs (Pataki [57]). <p> This can be done through the ellipsoid algorithm (Grotschel et al. [26]) and other polynomial-time algorithms for convex programming (Vaidya [67]) as well as interior-point methods (Nesterov and Nemirovskii [50, 51] and Alizadeh <ref> [1] </ref>). To terminate in polynomial 2 time, these algorithms implicitly assume some requirement on the feasible space or on the size of the optimum solution; for details see Grotschel et al. [26] and Section 3.3 of Alizadeh [1]. <p> [67]) as well as interior-point methods (Nesterov and Nemirovskii [50, 51] and Alizadeh <ref> [1] </ref>). To terminate in polynomial 2 time, these algorithms implicitly assume some requirement on the feasible space or on the size of the optimum solution; for details see Grotschel et al. [26] and Section 3.3 of Alizadeh [1]. Since the work of Nesterov and Nemirovskii, and Alizadeh, there has been much development in the design and analysis of interior-point methods for semidefinite programming; for several references available at the time of writing of this paper, see the survey paper by Vandenberghe and Boyd [68]. <p> Semidefinite programming has many interesting applications in a variety of areas including control theory, nonlinear programming, geometry and combinatorial optimization; see <ref> [51, 9, 68, 1] </ref>, the references therein and the references below. In combinatorial optimization, the importance of semidefinite programming is that it leads to tighter relaxations than the classical linear programming relaxations for many graph and combinatorial problems. <p> In conjunction with the polynomial-time solvability of semidefinite programs, this leads to the only known polynomial-time algorithm for finding the largest stable set in a perfect graph (Grotschel et al. [25]). More recently, there has been increased interest in semidefinite programming from a combinatorial point-of-view <ref> [46, 47, 1, 58, 17, 45] </ref>. This started with the work of Lovasz and Schri-jver [46, 47], who developed a machinery to define tighter and tighter relaxations of any integer program based on quadratic and semidefinite programming. <p> Their papers demonstrated the wide applicability and the power of semidefinite programming for combinatorial optimization problems. Our use of semidefinite programming relaxations was inspired by these papers, and by the paper of Alizadeh <ref> [1] </ref>. For MAX CUT, the semidefinite programming relaxation we consider is equivalent to an eigenvalue minimization problem proposed by Delorme and Poljak [13, 12]. <p> The equivalence of the semidefinite program we consider and the eigenvalue bound of Delorme and Poljak was established by Poljak and Rendl [58]. Building on work by Overton and Womersley [54, 53], Alizadeh <ref> [1] </ref> has shown that eigenvalue minimization problems can in general be formulated as semidefinite programs. This is potentially quite useful, since there is an abundant literature on eigenvalue bounds for combinatorial optimization problems; see the survey paper by Mohar and Poljak [49]. <p> However, using an algorithm for semidefinite programming, one can obtain, for any * &gt; 0, a solution of value greater than Z fl P * in time polynomial in the input size and log 1 * . For example, Alizadeh's adaptation of Ye's interior-point algorithm to semidefinite programming <ref> [1] </ref> performs O ( p * )) iterations. By exploiting the simple structure of the problem (SD) as is indicated in [64] (see also [68, Section 7.4]), each iteration can be implemented in O (n 3 ) time. <p> These, however, are pathological cases. Our programs (SD) and (D) behave nicely; both programs attain their optimum values, and these values are equal (i.e. Z fl P = Z fl D ). This can be shown in a variety of ways (see <ref> [58, 1, 5] </ref>). Given that strong duality holds in our case, the argument showing weak duality implies that, for the optimum primal solution Y fl and the optimum dual solution fl fl , we have T r ((diag (fl fl ) + W )Y fl ) = 0. <p> Since both diag (fl fl ) + W and Y fl are positive semidefinite, we derive that (diag (fl fl ) + W )Y fl = 0 (see [39, p. 218, ex. 14]). This is the strong form of complementary slackness for semidefinite programs (see Alizadeh <ref> [1] </ref>); the component-wise product expressed by the trace is replaced by matrix multiplication. <p> Finally, in the Type D random graphs, an edge (i; j) is included with probability .1 if i &lt;= n=2 and j &gt; n=2 and probability .05 otherwise, leading to a large cut between the vertices in <ref> [1; : : : ; n=2] </ref> and those in [n=2 + 1; : : : ; n]. We summarize the results of our experiments in Table 1 below. CPU Times are given in CPU seconds on a Sun SPARCstation 1.
Reference: [2] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, and M. Szegedy. </author> <title> Proof verification and hardness of approximation problems. </title> <booktitle> In Proceedings of the 33rd Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 14-23, </pages> <year> 1992. </year>
Reference-contexts: Furthermore, MAX CUT, MAX 2SAT, and MAX DICUT are MAX SNP-hard [55], and so it is known that there exists a constant c &lt; 1 such that a c-approximation algorithm for any of these problems would imply that P = N P <ref> [2] </ref>. Bellare, Goldreich, and Sudan [6] have shown that c is as small as 83/84 for MAX CUT and 95/96 for MAX 2SAT. Since bidirected instances of MAX DICUT are equivalent to instances of MAX CUT, the bound for MAX CUT also applies to MAX DICUT. <p> As with the MAX CUT problem, MAX 2SAT is known to be MAX SNP-hard [55]; thus there exists some constant c &lt; 1 such that the existence of a c-approximation algorithm implies that P = N P 15 <ref> [2] </ref>. Bellare, Goldreich, and Sudan [6] have shown that a 95/96-approximation algorithm for MAX 2SAT would imply P = N P .
Reference: [3] <author> R. Bar-Yehuda and S. </author> <title> Even. A linear time approximation algorithm for the weighted vertex cover problem. </title> <journal> Journal of Algorithms, </journal> <volume> 2 </volume> <pages> 198-203, </pages> <year> 1981. </year> <month> 22 </month>
Reference-contexts: The first question is whether a .878-approximation algorithm for MAX CUT can be obtained without explicitly solving the semidefinite program. For example, the first 2-approximation algorithms for weighted vertex cover involved solving a linear program [32], but later Bar-Yehuda and Even <ref> [3] </ref> devised a primal-dual algorithm in which linear programming was used only in the analysis of the algorithm. Perhaps a semidefinite analog is possible for MAX CUT. The second question is whether adding additional constraints to the semidefinite program leads to a better worst-case bound.
Reference: [4] <author> F. Barahona, M. Grotschel, M. Junger, and G. Reinelt. </author> <title> An application of combinatorial optimization to statistical physics and circuit layout design. </title> <journal> Operations Research, </journal> <volume> 36 </volume> <pages> 493-513, </pages> <year> 1988. </year>
Reference-contexts: The MAX CUT problem is solvable in polynomial time for some special classes of graphs (e.g. if the graph is planar [52, 27]). Besides its theoretical importance, the MAX CUT problem has applications in circuit layout design and statistical physics (Barahona et al. <ref> [4] </ref>). For a comprehensive survey of the MAX CUT problem, the reader is referred to Poljak and Tuza [62]. <p> This shows that E [W ] W tot h (A) = A i&lt;j 1 v i v j ; proving the result. 2.2 Analysis for negative edge weights So far, we have assumed that the weights are non-negative. In several practical problems, some edge weights are negative <ref> [4] </ref>. In this case the definition of the performance guarantee has to be modified since the optimum value could be positive or negative. We now give a corresponding generalization of Theorem 2.3 to arbitrary weights. Theorem 2.7 Let W = P ij , where x = min (0; x).
Reference: [5] <author> A. I. Barvinok. </author> <title> Problems of distance geometry and convex properties of quadratic maps. </title> <journal> Discrete and Computational Geometry, </journal> <volume> 13 </volume> <pages> 189-202, </pages> <year> 1995. </year>
Reference-contexts: This result also follows from a more general statement about semidefinite programs due to Barvinok <ref> [5] </ref> and implicit in Pataki [56]: any extreme solution of a semidefinite program with k linear equalities has rank at most l where l (l+1) 3.2 The Semidefinite Dual As mentioned in the introduction, there is an elegant duality theory for semidefinite programming. <p> These, however, are pathological cases. Our programs (SD) and (D) behave nicely; both programs attain their optimum values, and these values are equal (i.e. Z fl P = Z fl D ). This can be shown in a variety of ways (see <ref> [58, 1, 5] </ref>). Given that strong duality holds in our case, the argument showing weak duality implies that, for the optimum primal solution Y fl and the optimum dual solution fl fl , we have T r ((diag (fl fl ) + W )Y fl ) = 0.
Reference: [6] <author> M. Bellare, O. Goldreich, and M. Sudan. </author> <title> Free bits, PCP and non-approximability | Towards tight results. </title> <type> Unpublished manuscript, </type> <year> 1995. </year>
Reference-contexts: Furthermore, MAX CUT, MAX 2SAT, and MAX DICUT are MAX SNP-hard [55], and so it is known that there exists a constant c &lt; 1 such that a c-approximation algorithm for any of these problems would imply that P = N P [2]. Bellare, Goldreich, and Sudan <ref> [6] </ref> have shown that c is as small as 83/84 for MAX CUT and 95/96 for MAX 2SAT. Since bidirected instances of MAX DICUT are equivalent to instances of MAX CUT, the bound for MAX CUT also applies to MAX DICUT. <p> As with the MAX CUT problem, MAX 2SAT is known to be MAX SNP-hard [55]; thus there exists some constant c &lt; 1 such that the existence of a c-approximation algorithm implies that P = N P 15 [2]. Bellare, Goldreich, and Sudan <ref> [6] </ref> have shown that a 95/96-approximation algorithm for MAX 2SAT would imply P = N P . Haglin [28, 29] has shown that any -approximation algorithm for MAX RES CUT can be translated into a -approximation algorithm for MAX 2SAT, but we will show a direct algorithm here.
Reference: [7] <author> M. Berger. </author> <title> Geometry II. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1987. </year>
Reference-contexts: From the theory of spherical triangles, it follows that the possible values for (a; b; c) over all possible vectors v i , v j and v k define the set (see <ref> [7, Corollary 18.6.12.3] </ref>). The claim can thus be restated as 1 1 2 (a + b + c) fi cos (b) + cos (c)) for all (a; b; c) 2 S.
Reference: [8] <author> J. A. Bondy and U. S. R. Murty. </author> <title> Graph Theory with Applications. </title> <publisher> American Elsevier Publishing, </publisher> <address> New York, NY, </address> <year> 1976. </year>
Reference-contexts: Leslie Hall [31] has observed that E [W ]=Z fl P :8787 for the Petersen graph <ref> [8, p. 55] </ref>. In Figure 2, we give an unweighted instance for which the ratio is less than .8796 in which the vectors have a nice three-dimensional representation. We have also constructed a weighted instance on 103 vertices for which the ratio is less than .8786.
Reference: [9] <author> S. Boyd, L. El Ghaoui, E. Feron, and V. Balakrishnan. </author> <title> Linear Matrix Inequalities in System and Control Theory. </title> <publisher> SIAM, </publisher> <address> Philadelphia, PA, </address> <year> 1994. </year>
Reference-contexts: Semidefinite programming has many interesting applications in a variety of areas including control theory, nonlinear programming, geometry and combinatorial optimization; see <ref> [51, 9, 68, 1] </ref>, the references therein and the references below. In combinatorial optimization, the importance of semidefinite programming is that it leads to tighter relaxations than the classical linear programming relaxations for many graph and combinatorial problems.
Reference: [10] <author> B. Chor and M. Sudan. </author> <title> A geometric approach to betweenness. </title> <booktitle> In Proceedings of the European Symposium on Algorithms, </booktitle> <year> 1995. </year>
Reference-contexts: Frieze and Jerrum [18] have used the technique to devise approxima-tion algorithms for the maximum k-way cut problem that improve on the previously best known 1 1=k performance guarantee. Chor and Sudan <ref> [10] </ref> apply ideas from this paper to the "betwee-ness" problem. Thus it seems likely that the techniques in this paper will continue to prove useful in designing approximation algorithms. We expect that in practice the performance of our algorithms will be much better than the worst-case bounds.
Reference: [11] <author> J. Christensen and J. Vesterstrtm. </author> <title> A note on extreme positive definite matrices. </title> <journal> Mathema-tische Annalen, </journal> <volume> 244 </volume> <pages> 65-68, </pages> <year> 1979. </year>
Reference-contexts: Grone, Pierce and Watkins [24] show that any extreme solution of (SD) (i.e. which cannot be expressed as the strict convex combination of other feasible solutions) has rank at most l where l (l+1) p 2 &lt; 2n. For related results, see <ref> [41, 11, 42, 40] </ref>. This means that there exists a primal optimum solution Y fl to (SD) of rank less than p 2n, and that the optimum vectors v i of (P ) can be embedded in R m with m &lt; p 2n.
Reference: [12] <author> C. Delorme and S. Poljak. </author> <title> Combinatorial properties and the complexity of a max-cut approximation. </title> <journal> European Journal of Combinatorics, </journal> <volume> 14 </volume> <pages> 313-333, </pages> <year> 1993. </year>
Reference-contexts: Our use of semidefinite programming relaxations was inspired by these papers, and by the paper of Alizadeh [1]. For MAX CUT, the semidefinite programming relaxation we consider is equivalent to an eigenvalue minimization problem proposed by Delorme and Poljak <ref> [13, 12] </ref>. An eigenvalue minimization problem consists of minimizing a decreasing sum of the eigenvalues i of a matrix subject to equality constraints on the matrix; that is, minimizing P i m i i , where 1 2 n and m 1 m 2 m n 0. <p> As shown by Poljak and Rendl [60, 59] and Delorme and Poljak [14], the eigenvalue bound provides a very good bound on the maximum cut in practice. Delorme and Poljak <ref> [13, 12] </ref> study the worst-case ratio between the maximum cut and their eigenvalue bound. <p> We do so by showing that (P ) is equivalent to a semidefinite program. We then explore the dual of this semidefinite program and relate it to the eigenvalue minimization bound of Delorme and Poljak <ref> [13, 12] </ref>. 3.1 Solving the Relaxation We begin by defining some terms and notation. All matrices under consideration are defined over the reals. An n fi n matrix A is said to be positive semidefinite if for every vector x 2 R n , x T Ax 0. <p> fl ) + rank (diag (fl fl ) + W ) n. 3.3 The Eigenvalue Bound of Delorme and Poljak The relaxation (D) (and thus (P )) is also equivalent to an eigenvalue upper bound on the value of the maximum cut Z fl MC introduced by Delorme and Poljak <ref> [13, 12] </ref>. To describe the bound, we first introduce some notation. The Laplacian matrix L = (l ij ) is defined by l ij = w ij for i 6= j and l ii = k=1 w ik .
Reference: [13] <author> C. Delorme and S. Poljak. </author> <title> Laplacian eigenvalues and the maximum cut problem. </title> <journal> Mathematical Programming, </journal> <volume> 62 </volume> <pages> 557-574, </pages> <year> 1993. </year>
Reference-contexts: Our use of semidefinite programming relaxations was inspired by these papers, and by the paper of Alizadeh [1]. For MAX CUT, the semidefinite programming relaxation we consider is equivalent to an eigenvalue minimization problem proposed by Delorme and Poljak <ref> [13, 12] </ref>. An eigenvalue minimization problem consists of minimizing a decreasing sum of the eigenvalues i of a matrix subject to equality constraints on the matrix; that is, minimizing P i m i i , where 1 2 n and m 1 m 2 m n 0. <p> As shown by Poljak and Rendl [60, 59] and Delorme and Poljak [14], the eigenvalue bound provides a very good bound on the maximum cut in practice. Delorme and Poljak <ref> [13, 12] </ref> study the worst-case ratio between the maximum cut and their eigenvalue bound. <p> We do so by showing that (P ) is equivalent to a semidefinite program. We then explore the dual of this semidefinite program and relate it to the eigenvalue minimization bound of Delorme and Poljak <ref> [13, 12] </ref>. 3.1 Solving the Relaxation We begin by defining some terms and notation. All matrices under consideration are defined over the reals. An n fi n matrix A is said to be positive semidefinite if for every vector x 2 R n , x T Ax 0. <p> fl ) + rank (diag (fl fl ) + W ) n. 3.3 The Eigenvalue Bound of Delorme and Poljak The relaxation (D) (and thus (P )) is also equivalent to an eigenvalue upper bound on the value of the maximum cut Z fl MC introduced by Delorme and Poljak <ref> [13, 12] </ref>. To describe the bound, we first introduce some notation. The Laplacian matrix L = (l ij ) is defined by l ij = w ij for i 6= j and l ii = k=1 w ik . <p> The Laplacian matrix L = (l ij ) is defined by l ij = w ij for i 6= j and l ii = k=1 w ik . The maximum eigenvalue of a matrix A is denoted by max (A). Lemma 3.1 [Delorme and Poljak <ref> [13] </ref>] Let u 2 R n satisfy u 1 + : : : + u n = 0. Then n max (L + diag (u)) is an upper bound on Z fl MC . The proof is simple. Let y be an optimal solution to the integer quadratic program (Q). <p> A vector u satisfying P n i=1 u i = 0 is called a correcting vector. Let g (u) = n 4 max (L + diag (u)): The bound proposed by Delorme and Poljak <ref> [13] </ref> is to optimize g (u) over all correcting vectors: Z fl (EIG) subject to: n X u i = 0: As mentioned in the introduction, eigenvalue minimization problems can be formulated as semidefinite programs. <p> Observe that Theorem 2.3 implies the following corollary: Corollary 4.1 For any instance of MAX CUT, Z fl Z fl ff: For the 5-cycle, Delorme and Poljak <ref> [13] </ref> have shown that Z fl MC =Z fl 25+5 5 implying that our worst-case analysis is almost tight.
Reference: [14] <author> C. Delorme and S. Poljak. </author> <title> The performance of an eigenvalue bound on the max-cut problem in some classes of graphs. </title> <journal> Discrete Mathematics, </journal> <volume> 111 </volume> <pages> 145-156, </pages> <year> 1993. </year>
Reference-contexts: This is potentially quite useful, since there is an abundant literature on eigenvalue bounds for combinatorial optimization problems; see the survey paper by Mohar and Poljak [49]. As shown by Poljak and Rendl [60, 59] and Delorme and Poljak <ref> [14] </ref>, the eigenvalue bound provides a very good bound on the maximum cut in practice. Delorme and Poljak [13, 12] study the worst-case ratio between the maximum cut and their eigenvalue bound. <p> Poljak and Rendl [60, 59] (see also Delorme and Poljak <ref> [14] </ref>) report computational results showing that the bound Z fl EIG is typically less than 2-5% and, in the instances they tried, never worse than 8% away from Z fl MC .
Reference: [15] <author> L. Euler. De mensura angulorum solidorum. </author> <title> Petersburg, </title> <type> 1781. </type>
Reference-contexts: We also present a proof of the lemma from first principles. In fact, our proof parallels Euler's proof (1781 <ref> [15] </ref>, see [65]) of Girard's formula.
Reference: [16] <author> U. Feige and M. X. Goemans. </author> <title> Approximating the value of two prover proof systems, with applications to MAX 2SAT and MAX DICUT. </title> <booktitle> In Proc. of the Third Israel Symposium on Theory of Computing and Systems, </booktitle> <pages> pages 182-189, </pages> <year> 1995. </year>
Reference-contexts: Since bidirected instances of MAX DICUT are equivalent to instances of MAX CUT, the bound for MAX CUT also applies to MAX DICUT. Since the appearance of an abstract of this paper, Feige and Goemans <ref> [16] </ref> have extended our technique to yield a .931-approximation algorithm for MAX 2SAT and a .859-approximation algo rithm for MAX DICUT.
Reference: [17] <author> U. Feige and L. Lovasz. </author> <title> Two-prover one-round proof systems: Their power and their problems. </title> <booktitle> In Proceedings of the 24th Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 733-744, </pages> <year> 1992. </year>
Reference-contexts: In conjunction with the polynomial-time solvability of semidefinite programs, this leads to the only known polynomial-time algorithm for finding the largest stable set in a perfect graph (Grotschel et al. [25]). More recently, there has been increased interest in semidefinite programming from a combinatorial point-of-view <ref> [46, 47, 1, 58, 17, 45] </ref>. This started with the work of Lovasz and Schri-jver [46, 47], who developed a machinery to define tighter and tighter relaxations of any integer program based on quadratic and semidefinite programming.
Reference: [18] <author> A. Frieze and M. Jerrum. </author> <title> Improved approximation algorithms for MAX k-CUT and MAX BISECTION. </title> <booktitle> In Proceedings of the Fourth MPS Conference on Integer Programming and Combinatorial Optimization. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995. </year> <note> To appear in Algorithmica. </note>
Reference-contexts: By using semidefinite programming and similar rounding ideas, Karger, Motwani, and Sudan [36] have been able to show how to color a k-colorable graph with ~ O (n 1 3 k+1 ) colors in polynomial time. Frieze and Jerrum <ref> [18] </ref> have used the technique to devise approxima-tion algorithms for the maximum k-way cut problem that improve on the previously best known 1 1=k performance guarantee. Chor and Sudan [10] apply ideas from this paper to the "betwee-ness" problem.
Reference: [19] <author> M. Garey, D. Johnson, and L. Stockmeyer. </author> <title> Some simplified NP-complete graph problems. </title> <journal> Theoretical Computer Science, </journal> <volume> 1 </volume> <pages> 237-267, </pages> <year> 1976. </year>
Reference-contexts: The MAX CUT problem is one of the Karp's original NP-complete problems [37], and has long been known to be NP-complete even if the problem is unweighted; that is, if w ij = 1 for all (i; j) 2 E <ref> [19] </ref>. The MAX CUT problem is solvable in polynomial time for some special classes of graphs (e.g. if the graph is planar [52, 27]). Besides its theoretical importance, the MAX CUT problem has applications in circuit layout design and statistical physics (Barahona et al. [4]). <p> MAX 2SAT consists of MAX SAT instances in which each clause has length at most two. MAX 2SAT is NP-complete <ref> [19] </ref>; the best approximation algorithm known previously has a performance guarantee of 3 4 and is due to Yannakakis [71] (see also Goemans and Williamson [22]).
Reference: [20] <author> A. Girard. De la mesure de la superficie des triangles et polygones spheriques. </author> <title> Appendix to "Invention nouvelle en l'algebre", </title> <booktitle> Amsterdam, </booktitle> <volume> 1629. </volume> <pages> 23 </pages>
Reference-contexts: The desired probability can be seen to be equal to twice the area of the spherical triangle polar to the spherical triangle defined by v i , v j and v k . Stated this way, the result is a corollary to Girard's formula (1629 <ref> [20] </ref>, see [65]) expressing the area of a spherical triangle with angles 1 , 2 and 3 as its excess 1 + 2 + 3 . We also present a proof of the lemma from first principles.
Reference: [21] <author> M. X. Goemans and D. P. Williamson. </author> <title> .878-approximation algorithms for MAX CUT and MAX 2SAT. </title> <booktitle> In Proceedings of the 26th Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 422-431, </pages> <year> 1994. </year>
Reference-contexts: We have performed some preliminary computational experiments with the MAX CUT algorithm which show that on a number of different types of random graphs the algorithm is usually within .96 of the optimal solution. A preliminary version of this paper <ref> [21] </ref> presented a method to obtain deterministic versions of our approximation algorithm with the same performance guarantees. However, the method given had a subtle error, as was pointed out to us by several researchers. Mahajan and Ramesh [48] document the error and propose their own derandomization scheme for our algorithms.
Reference: [22] <author> M. X. Goemans and D. P. Williamson. </author> <title> New 3/4-approximation algorithms for the maximum satisfiability problem. </title> <journal> SIAM Journal on Discrete Mathematics, </journal> <volume> 7 </volume> <pages> 656-666, </pages> <year> 1994. </year>
Reference-contexts: The best previously known algorithm for this problem has a performance guarantee of 3 4 and is due to Yannakakis [71]. A somewhat simpler 3 4 -approximation algorithm was given in Goemans and Williamson <ref> [22] </ref>. The improved 2SAT algorithm leads to .7584-approximation algorithm for the overall MAX SAT problem, fractionally better than Yannakakis' 3 4 -approximation algorithm for MAX SAT. <p> MAX 2SAT consists of MAX SAT instances in which each clause has length at most two. MAX 2SAT is NP-complete [19]; the best approximation algorithm known previously has a performance guarantee of 3 4 and is due to Yannakakis [71] (see also Goemans and Williamson <ref> [22] </ref>). As with the MAX CUT problem, MAX 2SAT is known to be MAX SNP-hard [55]; thus there exists some constant c &lt; 1 such that the existence of a c-approximation algorithm implies that P = N P 15 [2]. <p> Theorem 6.1 E [V ] ff i&lt;j 6.2.2 MAX SAT The improved MAX 2SAT algorithm leads to a slightly improved approximation algorithm for MAX SAT. In <ref> [22] </ref>, we developed several randomized 3 4 -approximation algorithms for MAX SAT. <p> ) z j 8C j 2 C; l (C j ) = 2 0 z j 1 8C j 2 C: Thus if we set x i to be true with probability u (x i ) for the optimal solution to the corresponding semidefinite program, then by the arguments of <ref> [22] </ref>, we satisfy a clause C j of length k with probability at least (1 (1 1 k ) k )z j . <p> (Q 00 ) and for the MAX DICUT problem. 7 Concluding Remarks Our motivation for studying semidefinite programming relaxations came from a realization that the standard tool of using linear programming relaxations for approximation algorithms had limits which might not be easily surpassed (see the conclusion of Goemans and Williamson <ref> [22] </ref>). In fact, a classical linear programming relaxation for the maximum cut problem can be shown to be 21 arbitrarily close to twice the value of the maximum cut in the worst case.
Reference: [23] <author> G. H. Golub and C. F. Van Loan. </author> <title> Matrix Computations. </title> <publisher> The Johns Hopkins University Press, </publisher> <address> Baltimore, MD, </address> <year> 1983. </year>
Reference-contexts: Given a symmetric positive semidefinite matrix A, an m fi n matrix B of full row-rank satisfying (iii) can be obtained in O (n 3 ) time using an incomplete Cholesky decomposition <ref> [23, p. 90, P5.2-3] </ref>.
Reference: [24] <author> R. Grone, S. Pierce, and W. Watkins. </author> <title> Extremal correlation matrices. </title> <journal> Linear Algebra and its Applications, </journal> <volume> 134 </volume> <pages> 63-70, </pages> <year> 1990. </year>
Reference-contexts: The feasible solutions to (SD) are often referred to as correlation matrices <ref> [24] </ref>. Strictly speaking, we cannot solve (SD) to optimality in polynomial time; the optimal value Z fl P might in fact be irrational. <p> Among all optimum solutions to (SD), one can show the existence of a solution of low rank. Grone, Pierce and Watkins <ref> [24] </ref> show that any extreme solution of (SD) (i.e. which cannot be expressed as the strict convex combination of other feasible solutions) has rank at most l where l (l+1) p 2 &lt; 2n. For related results, see [41, 11, 42, 40].
Reference: [25] <author> M. Grotschel, L. Lovasz, and A. Schrijver. </author> <title> The ellipsoid method and its consequences in combinatorial optimization. </title> <journal> Combinatorica, </journal> <volume> 1 </volume> <pages> 169-197, </pages> <year> 1981. </year>
Reference-contexts: A beautiful application of semidefinite programming is the work of Lovasz [43] on the Shannon capacity of a graph. In conjunction with the polynomial-time solvability of semidefinite programs, this leads to the only known polynomial-time algorithm for finding the largest stable set in a perfect graph (Grotschel et al. <ref> [25] </ref>). More recently, there has been increased interest in semidefinite programming from a combinatorial point-of-view [46, 47, 1, 58, 17, 45].
Reference: [26] <author> M. Grotschel, L. Lovasz, and A. Schrijver. </author> <title> Geometric Algorithms and Combinatorial Optimization. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1988. </year>
Reference-contexts: This can be done through the ellipsoid algorithm (Grotschel et al. <ref> [26] </ref>) and other polynomial-time algorithms for convex programming (Vaidya [67]) as well as interior-point methods (Nesterov and Nemirovskii [50, 51] and Alizadeh [1]). <p> To terminate in polynomial 2 time, these algorithms implicitly assume some requirement on the feasible space or on the size of the optimum solution; for details see Grotschel et al. <ref> [26] </ref> and Section 3.3 of Alizadeh [1].
Reference: [27] <author> F. Hadlock. </author> <title> Finding a maximum cut of a planar graph in polynomial time. </title> <journal> SIAM Journal on Computing, </journal> <volume> 4 </volume> <pages> 221-225, </pages> <year> 1975. </year>
Reference-contexts: The MAX CUT problem is solvable in polynomial time for some special classes of graphs (e.g. if the graph is planar <ref> [52, 27] </ref>). Besides its theoretical importance, the MAX CUT problem has applications in circuit layout design and statistical physics (Barahona et al. [4]). For a comprehensive survey of the MAX CUT problem, the reader is referred to Poljak and Tuza [62].
Reference: [28] <author> D. J. Haglin. </author> <title> Approximating maximum 2-CNF satisfiability. </title> <journal> Parallel Processing Letters, </journal> <volume> 2 </volume> <pages> 181-187, </pages> <year> 1992. </year>
Reference-contexts: Bellare, Goldreich, and Sudan [6] have shown that a 95/96-approximation algorithm for MAX 2SAT would imply P = N P . Haglin <ref> [28, 29] </ref> has shown that any -approximation algorithm for MAX RES CUT can be translated into a -approximation algorithm for MAX 2SAT, but we will show a direct algorithm here.
Reference: [29] <author> D. J. Haglin. </author> <type> Personal communication, </type> <year> 1994. </year>
Reference-contexts: Bellare, Goldreich, and Sudan [6] have shown that a 95/96-approximation algorithm for MAX 2SAT would imply P = N P . Haglin <ref> [28, 29] </ref> has shown that any -approximation algorithm for MAX RES CUT can be translated into a -approximation algorithm for MAX 2SAT, but we will show a direct algorithm here.
Reference: [30] <author> D. J. Haglin and S. M. Venkatesan. </author> <title> Approximation and intractability results for the maximum cut problem and its variants. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 40 </volume> <pages> 110-113, </pages> <year> 1991. </year>
Reference-contexts: Since 1976, a number of researchers have presented approximation algorithms for the unweighted MAX CUT problem with performance guarantees of 1 2 + 1 1 4m [61], 1 2n <ref> [30] </ref>, and 1 2 [33] (where n = jV j, m = jEj and denotes the maximum degree), but no progress was made in improving the constant in the performance guarantee beyond that of Sahni and Gonzales's straightforward algorithm.
Reference: [31] <author> L. Hall. </author> <type> Personal communication, </type> <year> 1994. </year>
Reference-contexts: Although the worst-case value of Z fl MC =Z fl P is not completely settled, there exist instances for which E [W ]=Z fl P is very close to ff, showing that the analysis of our algorithm is practically tight. Leslie Hall <ref> [31] </ref> has observed that E [W ]=Z fl P :8787 for the Petersen graph [8, p. 55]. In Figure 2, we give an unweighted instance for which the ratio is less than .8796 in which the vectors have a nice three-dimensional representation.
Reference: [32] <author> D. S. Hochbaum. </author> <title> Approximation algorithms for the set covering and vertex cover problems. </title> <journal> SIAM Journal on Computing, </journal> <volume> 11 </volume> <pages> 555-556, </pages> <year> 1982. </year>
Reference-contexts: The first question is whether a .878-approximation algorithm for MAX CUT can be obtained without explicitly solving the semidefinite program. For example, the first 2-approximation algorithms for weighted vertex cover involved solving a linear program <ref> [32] </ref>, but later Bar-Yehuda and Even [3] devised a primal-dual algorithm in which linear programming was used only in the analysis of the algorithm. Perhaps a semidefinite analog is possible for MAX CUT.
Reference: [33] <author> T. Hofmeister and H. Lefmann. </author> <title> A combinatorial design approach to MAXCUT. </title> <type> Unpublished manuscript, </type> <year> 1995. </year>
Reference-contexts: Since 1976, a number of researchers have presented approximation algorithms for the unweighted MAX CUT problem with performance guarantees of 1 2 + 1 1 4m [61], 1 2n [30], and 1 2 <ref> [33] </ref> (where n = jV j, m = jEj and denotes the maximum degree), but no progress was made in improving the constant in the performance guarantee beyond that of Sahni and Gonzales's straightforward algorithm.
Reference: [34] <author> S. Homer and M. Peinado. </author> <title> A highly parallel implementation of the Goemans/Williamson algorithm to approximate MaxCut. </title> <type> Manuscript, </type> <year> 1994. </year>
Reference-contexts: However, the instance defined by a unit length equilateral triangle has a maximum cut value of 2, but Z fl 4 , for a ratio of 8 9 = 0:8889. Homer and Peinado <ref> [34] </ref> have implemented our algorithm on a CM-5, and have shown that it produces optimal or very nearly optimal solutions to a number of MAX CUT instances derived from via minimization problems.
Reference: [35] <author> M. Junger. </author> <type> Personal communication, </type> <year> 1994. </year>
Reference-contexts: Homer and Peinado [34] have implemented our algorithm on a CM-5, and have shown that it produces optimal or very nearly optimal solutions to a number of MAX CUT instances derived from via minimization problems. These instances were provided by Michael Junger <ref> [35] </ref> and have between 828 and 1366 vertices. 6 Generalizations We can use the same technique as in Section 1 to approximate several other problems. In the next section we describe a variation of MAX CUT and give an (ff *)-approximation algorithm for it.
Reference: [36] <author> D. Karger, R. Motwani, and M. Sudan. </author> <title> Approximate graph coloring by semidefinite programming. </title> <booktitle> In Proceedings of the 35th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 2-13, </pages> <year> 1994. </year>
Reference-contexts: Since the appearance of an abstract of this paper, Feige and Goemans [16] have extended our technique to yield a .931-approximation algorithm for MAX 2SAT and a .859-approximation algo rithm for MAX DICUT. By using semidefinite programming and similar rounding ideas, Karger, Motwani, and Sudan <ref> [36] </ref> have been able to show how to color a k-colorable graph with ~ O (n 1 3 k+1 ) colors in polynomial time.
Reference: [37] <author> R. M. Karp. </author> <title> Reducibility among combinatorial problems. </title> <editor> In R. Miller and J. Thatcher, editors, </editor> <booktitle> Complexity of Computer Computations, </booktitle> <pages> pages 85-103. </pages> <publisher> Plenum Press, </publisher> <address> New York, NY, </address> <year> 1972. </year>
Reference-contexts: For simplicity, we usually set w ij = 0 for (i; j) =2 E and denote the weight of a cut (S; S) by w (S; S) = i2S;j =2S w ij . The MAX CUT problem is one of the Karp's original NP-complete problems <ref> [37] </ref>, and has long been known to be NP-complete even if the problem is unweighted; that is, if w ij = 1 for all (i; j) 2 E [19].
Reference: [38] <author> D. E. Knuth. </author> <title> Seminumerical Algorithms, </title> <booktitle> volume 2 of The Art of Computer Programming. </booktitle> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <note> second edition, </note> <year> 1981. </year>
Reference-contexts: The point on the unit sphere S n can be generated by drawing n values x 1 ; x 2 ; : : : ; x n independently from the standard normal distribution, and normalizing the vector obtained (see Knuth <ref> [38, p. 130] </ref>); for our purposes, there is no need to normalize the resulting vector x. The standard normal distribution can be simulated using the uniform distribution between 0 and 1 (see Knuth [38, p. 117]). <p> The standard normal distribution can be simulated using the uniform distribution between 0 and 1 (see Knuth <ref> [38, p. 117] </ref>). The algorithm is thus a randomized (ff *)-approximation algorithm for MAX CUT. 2 Analysis of the Algorithm In this section, we analyze the performance of the algorithm. <p> Kleinberg for bringing reference [44] to our attention, Bob Vanderbei for kindly giving us his semidefinite code, Francisco Barahona and Michael Junger for providing problem instances, Joel Spencer for motivating Theorem 2.6, Farid Alizadeh, Gabor Pataki and Rob Freund for results on semidefinite programming, and Shang-Hua Teng for bringing reference <ref> [38] </ref> to our attention. We received other useful comments from Farid Alizadeh, Joseph Cheriyan, Jon Kleinberg, Monique Laurent, Colin McDiarmid, Giovanni Rinaldi, David Shmoys, Eva Tardos, and the two anonymous referees.
Reference: [39] <author> P. Lancaster and M. Tismenetsky. </author> <title> The Theory of Matrices. </title> <publisher> Academic Press, </publisher> <address> Orlando, FL, </address> <year> 1985. </year>
Reference-contexts: All matrices under consideration are defined over the reals. An n fi n matrix A is said to be positive semidefinite if for every vector x 2 R n , x T Ax 0. The following statements are equivalent for a symmetric matrix A (see e.g. <ref> [39] </ref>): (i) A is positive semidefinite, (ii) all eigenvalues of A are non-negative, and (iii) there exists a matrix B such that A = B T B. In (iii), B can either be a (possibly singular) n fi n matrix, or an m fi n matrix for some m n. <p> Then y ij = v i v j . The matrix Y is known as the Gram matrix of fv 1 ; : : : ; v n g <ref> [39, p. 110] </ref>. Using this equivalence, we can reformulate (P ) as a semidefinite program: Z fl 1 X w ij (1 y ij ) (SD) subject to: y ii = 1 8i 2 V Y symmetric positive semidefinite 9 where Y = (y ij ). <p> Consider any primal feasible solution Y and any dual vector fl. Since both Y and W + diag (fl) are positive semidefinite, we derive that T r ((diag (fl) + W )Y ) 0 (see <ref> [39, p. 218, ex. 14] </ref>). <p> Since both diag (fl fl ) + W and Y fl are positive semidefinite, we derive that (diag (fl fl ) + W )Y fl = 0 (see <ref> [39, p. 218, ex. 14] </ref>). This is the strong form of complementary slackness for semidefinite programs (see Alizadeh [1]); the component-wise product expressed by the trace is replaced by matrix multiplication.
Reference: [40] <author> M. Laurent and S. Poljak. </author> <title> On the facial structure of the set of correlation matrices. </title> <type> Unpub--lished manuscript, </type> <year> 1995. </year>
Reference-contexts: Grone, Pierce and Watkins [24] show that any extreme solution of (SD) (i.e. which cannot be expressed as the strict convex combination of other feasible solutions) has rank at most l where l (l+1) p 2 &lt; 2n. For related results, see <ref> [41, 11, 42, 40] </ref>. This means that there exists a primal optimum solution Y fl to (SD) of rank less than p 2n, and that the optimum vectors v i of (P ) can be embedded in R m with m &lt; p 2n.
Reference: [41] <author> C.-K. Li and B.-S. Tam. </author> <title> A note on extreme correlation matrices. </title> <journal> SIAM Journal on Matrix Analysis and Applications, </journal> <volume> 15 </volume> <pages> 903-908, </pages> <year> 1994. </year>
Reference-contexts: Grone, Pierce and Watkins [24] show that any extreme solution of (SD) (i.e. which cannot be expressed as the strict convex combination of other feasible solutions) has rank at most l where l (l+1) p 2 &lt; 2n. For related results, see <ref> [41, 11, 42, 40] </ref>. This means that there exists a primal optimum solution Y fl to (SD) of rank less than p 2n, and that the optimum vectors v i of (P ) can be embedded in R m with m &lt; p 2n.
Reference: [42] <author> R. Loewy. </author> <title> Extreme points of a convex subset of the cone of positive definite matrices. </title> <journal> Math-ematische Annalen, </journal> <volume> 253 </volume> <pages> 227-232, </pages> <year> 1980. </year>
Reference-contexts: Grone, Pierce and Watkins [24] show that any extreme solution of (SD) (i.e. which cannot be expressed as the strict convex combination of other feasible solutions) has rank at most l where l (l+1) p 2 &lt; 2n. For related results, see <ref> [41, 11, 42, 40] </ref>. This means that there exists a primal optimum solution Y fl to (SD) of rank less than p 2n, and that the optimum vectors v i of (P ) can be embedded in R m with m &lt; p 2n.
Reference: [43] <author> L. Lovasz. </author> <title> On the Shannon capacity of a graph. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-25:1-7, </volume> <year> 1979. </year>
Reference-contexts: In combinatorial optimization, the importance of semidefinite programming is that it leads to tighter relaxations than the classical linear programming relaxations for many graph and combinatorial problems. A beautiful application of semidefinite programming is the work of Lovasz <ref> [43] </ref> on the Shannon capacity of a graph. In conjunction with the polynomial-time solvability of semidefinite programs, this leads to the only known polynomial-time algorithm for finding the largest stable set in a perfect graph (Grotschel et al. [25]).
Reference: [44] <author> L. Lovasz. </author> <title> Self-dual polytopes and the chromatic number of distance graphs on the sphere. </title> <journal> Acta Scientiarum Mathematicarum, </journal> <volume> 45 </volume> <pages> 317-323, </pages> <year> 1983. </year>
Reference-contexts: We have also constructed a weighted instance on 103 vertices for which the ratio is less than .8786. These two instances are based on strongly self-dual polytopes due to Lovasz <ref> [44] </ref>. A polytope P in R n is said to be strongly self-dual [44] if (i) P is inscribed in the unit sphere, (ii) P is circumscribed around the sphere with origin as center and with radius r for some 0 &lt; r &lt; 1, and (iii) there is a bijection <p> We have also constructed a weighted instance on 103 vertices for which the ratio is less than .8786. These two instances are based on strongly self-dual polytopes due to Lovasz <ref> [44] </ref>. A polytope P in R n is said to be strongly self-dual [44] if (i) P is inscribed in the unit sphere, (ii) P is circumscribed around the sphere with origin as center and with radius r for some 0 &lt; r &lt; 1, and (iii) there is a bijection between vertices and facets of P such that, for every vertex v of <p> Because of conditions (ii) and (iii), the inner product v w for any pair of adjacent vertices is equal to r. As a result, a strongly self-dual polytope leads to a feasible solution of (P ) of value 1+r 2 W tot . Lovasz <ref> [44] </ref> gives a recursive construction of a class of strongly self-dual polytopes. One can show that, by choosing the dimension n large enough, his construction leads to strongly self-dual polytopes for which r is arbitrarily close to the critical value giving a bound of ff. <p> In particular, we would like to thank Don Coppersmith and David Shmoys for pointing out to us that our MAX 2SAT algorithm could lead to an improved MAX SAT algorithm, Jon Kleinberg for bringing reference <ref> [44] </ref> to our attention, Bob Vanderbei for kindly giving us his semidefinite code, Francisco Barahona and Michael Junger for providing problem instances, Joel Spencer for motivating Theorem 2.6, Farid Alizadeh, Gabor Pataki and Rob Freund for results on semidefinite programming, and Shang-Hua Teng for bringing reference [38] to our attention.
Reference: [45] <author> L. Lovasz. </author> <title> Combinatorial optimization: Some problems and trends. </title> <type> DIMACS Technical Report 92-53, </type> <year> 1992. </year>
Reference-contexts: In conjunction with the polynomial-time solvability of semidefinite programs, this leads to the only known polynomial-time algorithm for finding the largest stable set in a perfect graph (Grotschel et al. [25]). More recently, there has been increased interest in semidefinite programming from a combinatorial point-of-view <ref> [46, 47, 1, 58, 17, 45] </ref>. This started with the work of Lovasz and Schri-jver [46, 47], who developed a machinery to define tighter and tighter relaxations of any integer program based on quadratic and semidefinite programming.
Reference: [46] <author> L. Lovasz and A. Schrijver. </author> <title> Matrix cones, projection representations, and stable set polyhedra. In Polyhedral Combinatorics, </title> <booktitle> volume 1 of DIMACS series in Discrete Mathematics and Theoretical Computer Science, </booktitle> <pages> pages 1-17. </pages> <publisher> American Mathematical Society, </publisher> <year> 1989. </year>
Reference-contexts: In conjunction with the polynomial-time solvability of semidefinite programs, this leads to the only known polynomial-time algorithm for finding the largest stable set in a perfect graph (Grotschel et al. [25]). More recently, there has been increased interest in semidefinite programming from a combinatorial point-of-view <ref> [46, 47, 1, 58, 17, 45] </ref>. This started with the work of Lovasz and Schri-jver [46, 47], who developed a machinery to define tighter and tighter relaxations of any integer program based on quadratic and semidefinite programming. <p> More recently, there has been increased interest in semidefinite programming from a combinatorial point-of-view [46, 47, 1, 58, 17, 45]. This started with the work of Lovasz and Schri-jver <ref> [46, 47] </ref>, who developed a machinery to define tighter and tighter relaxations of any integer program based on quadratic and semidefinite programming. Their papers demonstrated the wide applicability and the power of semidefinite programming for combinatorial optimization problems. <p> In fact, a classical linear programming relaxation for the maximum cut problem can be shown to be 21 arbitrarily close to twice the value of the maximum cut in the worst case. Given the work of Lovasz and Schrijver <ref> [46, 47] </ref>, which showed that tighter and tighter relaxations could be obtained through semidefinite programming, it seemed worthwhile to investigate the power of such relaxations from a worst-case perspective. The results of this paper constitute a first step in this direction.
Reference: [47] <author> L. Lovasz and A. Schrijver. </author> <title> Cones of matrices and setfunctions, </title> <journal> and 0-1 optimization. SIAM Journal on Optimization, </journal> <volume> 1 </volume> <pages> 166-190, </pages> <year> 1990. </year>
Reference-contexts: In conjunction with the polynomial-time solvability of semidefinite programs, this leads to the only known polynomial-time algorithm for finding the largest stable set in a perfect graph (Grotschel et al. [25]). More recently, there has been increased interest in semidefinite programming from a combinatorial point-of-view <ref> [46, 47, 1, 58, 17, 45] </ref>. This started with the work of Lovasz and Schri-jver [46, 47], who developed a machinery to define tighter and tighter relaxations of any integer program based on quadratic and semidefinite programming. <p> More recently, there has been increased interest in semidefinite programming from a combinatorial point-of-view [46, 47, 1, 58, 17, 45]. This started with the work of Lovasz and Schri-jver <ref> [46, 47] </ref>, who developed a machinery to define tighter and tighter relaxations of any integer program based on quadratic and semidefinite programming. Their papers demonstrated the wide applicability and the power of semidefinite programming for combinatorial optimization problems. <p> In fact, a classical linear programming relaxation for the maximum cut problem can be shown to be 21 arbitrarily close to twice the value of the maximum cut in the worst case. Given the work of Lovasz and Schrijver <ref> [46, 47] </ref>, which showed that tighter and tighter relaxations could be obtained through semidefinite programming, it seemed worthwhile to investigate the power of such relaxations from a worst-case perspective. The results of this paper constitute a first step in this direction.
Reference: [48] <author> S. Mahajan and H. Ramesh. </author> <title> Correctly derandomizing Goemans and Williamson's Max CUT algorithm. </title> <type> Unpublished manuscript, </type> <year> 1995. </year>
Reference-contexts: A preliminary version of this paper [21] presented a method to obtain deterministic versions of our approximation algorithm with the same performance guarantees. However, the method given had a subtle error, as was pointed out to us by several researchers. Mahajan and Ramesh <ref> [48] </ref> document the error and propose their own derandomization scheme for our algorithms. The paper is structured as follows. We present the randomized algorithm for MAX CUT in Section 1, and its analysis in Section 2.
Reference: [49] <author> B. Mohar and S. Poljak. </author> <title> Eigenvalue methods in combinatorial optimization. </title> <editor> In R. Brualdi, S. Friedland, and V. Klee, editors, </editor> <title> Combinatorial and Graph-Theoretic Problems in Linear Algebra, </title> <booktitle> volume 50 of The IMA Volumes in Mathematics and its Applications, </booktitle> <pages> pages 107-151. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: This is potentially quite useful, since there is an abundant literature on eigenvalue bounds for combinatorial optimization problems; see the survey paper by Mohar and Poljak <ref> [49] </ref>. As shown by Poljak and Rendl [60, 59] and Delorme and Poljak [14], the eigenvalue bound provides a very good bound on the maximum cut in practice. Delorme and Poljak [13, 12] study the worst-case ratio between the maximum cut and their eigenvalue bound.
Reference: [50] <author> Y. Nesterov and A. Nemirovskii. </author> <title> Self-Concordant Functions and Polynomial Time Methods in Convex Programming. </title> <institution> Central Economic and Mathematical Institute, USSR Academy of Science, Moscow, </institution> <year> 1989. </year>
Reference-contexts: This can be done through the ellipsoid algorithm (Grotschel et al. [26]) and other polynomial-time algorithms for convex programming (Vaidya [67]) as well as interior-point methods (Nesterov and Nemirovskii <ref> [50, 51] </ref> and Alizadeh [1]). To terminate in polynomial 2 time, these algorithms implicitly assume some requirement on the feasible space or on the size of the optimum solution; for details see Grotschel et al. [26] and Section 3.3 of Alizadeh [1].
Reference: [51] <author> Y. Nesterov and A. Nemirovskii. </author> <title> Interior Point Polynomial Methods in Convex Programming. </title> <institution> Society for Industrial and Applied Mathematics, </institution> <address> Philadelphia, PA, </address> <year> 1994. </year>
Reference-contexts: This can be done through the ellipsoid algorithm (Grotschel et al. [26]) and other polynomial-time algorithms for convex programming (Vaidya [67]) as well as interior-point methods (Nesterov and Nemirovskii <ref> [50, 51] </ref> and Alizadeh [1]). To terminate in polynomial 2 time, these algorithms implicitly assume some requirement on the feasible space or on the size of the optimum solution; for details see Grotschel et al. [26] and Section 3.3 of Alizadeh [1]. <p> Semidefinite programming has many interesting applications in a variety of areas including control theory, nonlinear programming, geometry and combinatorial optimization; see <ref> [51, 9, 68, 1] </ref>, the references therein and the references below. In combinatorial optimization, the importance of semidefinite programming is that it leads to tighter relaxations than the classical linear programming relaxations for many graph and combinatorial problems.
Reference: [52] <author> G. I. Orlova and Y. G. Dorfman. </author> <title> Finding the maximal cut in a graph. </title> <journal> Engineering Cybernetics, </journal> <pages> pages 502-506, </pages> <year> 1972. </year>
Reference-contexts: The MAX CUT problem is solvable in polynomial time for some special classes of graphs (e.g. if the graph is planar <ref> [52, 27] </ref>). Besides its theoretical importance, the MAX CUT problem has applications in circuit layout design and statistical physics (Barahona et al. [4]). For a comprehensive survey of the MAX CUT problem, the reader is referred to Poljak and Tuza [62].
Reference: [53] <author> M. L. Overton and R. S. Womersley. </author> <title> On the sum of the largest eigenvalues of a symmetric matrix. </title> <journal> SIAM Journal on Matrix Analysis and Applications, </journal> <volume> 13 </volume> <pages> 41-45, </pages> <year> 1992. </year>
Reference-contexts: The equivalence of the semidefinite program we consider and the eigenvalue bound of Delorme and Poljak was established by Poljak and Rendl [58]. Building on work by Overton and Womersley <ref> [54, 53] </ref>, Alizadeh [1] has shown that eigenvalue minimization problems can in general be formulated as semidefinite programs. This is potentially quite useful, since there is an abundant literature on eigenvalue bounds for combinatorial optimization problems; see the survey paper by Mohar and Poljak [49].
Reference: [54] <author> M. L. Overton and R. S. Womersley. </author> <title> Optimality conditions and duality theory for minimizing sums of the largest eigenvalues of symmetric matrices. </title> <journal> Mathematical Programming, </journal> <volume> 62 </volume> <pages> 321-357, </pages> <year> 1993. </year>
Reference-contexts: The equivalence of the semidefinite program we consider and the eigenvalue bound of Delorme and Poljak was established by Poljak and Rendl [58]. Building on work by Overton and Womersley <ref> [54, 53] </ref>, Alizadeh [1] has shown that eigenvalue minimization problems can in general be formulated as semidefinite programs. This is potentially quite useful, since there is an abundant literature on eigenvalue bounds for combinatorial optimization problems; see the survey paper by Mohar and Poljak [49].
Reference: [55] <author> C. H. Papadimitriou and M. Yannakakis. </author> <title> Optimization, approximation, and complexity classes. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 43 </volume> <pages> 425-440, </pages> <year> 1991. </year> <month> 25 </month>
Reference-contexts: Finally, a slight extension of our analysis yields a (fi *)-approximation algorithm for the maximum directed cut problem (MAX DICUT), where fi = min 0&lt;arccos (1=3) 2 2 3 &gt; 0:79607: The best previously known algorithm for MAX DICUT has a performance guarantee of 1 4 <ref> [55] </ref>. Our algorithm depends on a means of randomly rounding a solution to a nonlinear relaxation of the MAX CUT problem. This relaxation can either be seen as a semidefinite program or as an eigenvalue minimization problem. <p> The above discussion on the worst-case behavior indicates that straightforward modifications of our technique will not lead to significant improvements in the MAX CUT result. Furthermore, MAX CUT, MAX 2SAT, and MAX DICUT are MAX SNP-hard <ref> [55] </ref>, and so it is known that there exists a constant c &lt; 1 such that a c-approximation algorithm for any of these problems would imply that P = N P [2]. <p> MAX 2SAT is NP-complete [19]; the best approximation algorithm known previously has a performance guarantee of 3 4 and is due to Yannakakis [71] (see also Goemans and Williamson [22]). As with the MAX CUT problem, MAX 2SAT is known to be MAX SNP-hard <ref> [55] </ref>; thus there exists some constant c &lt; 1 such that the existence of a c-approximation algorithm implies that P = N P 15 [2]. Bellare, Goldreich, and Sudan [6] have shown that a 95/96-approximation algorithm for MAX 2SAT would imply P = N P .
Reference: [56] <author> G. Pataki. </author> <title> On the multiplicity of optimal eigenvalues. </title> <institution> Management Science Research Report MSRR-604, GSIA, Carnegie Mellon University, </institution> <year> 1994. </year>
Reference-contexts: This result also follows from a more general statement about semidefinite programs due to Barvinok [5] and implicit in Pataki <ref> [56] </ref>: any extreme solution of a semidefinite program with k linear equalities has rank at most l where l (l+1) 3.2 The Semidefinite Dual As mentioned in the introduction, there is an elegant duality theory for semidefinite programming. We now turn to discussing the dual of the program (SD).
Reference: [57] <author> G. Pataki. </author> <title> On cone-LP's and semi-definite programs: Facial structure, basic solutions, and the simplex method. </title> <note> GSIA Working Paper WP 1995-03, </note> <institution> Carnegie-Mellon University, </institution> <year> 1995. </year>
Reference-contexts: To some extent, semidefinite programming is very similar to linear programming; see Alizadeh [1] for a comparison. It inherits the very elegant duality theory of cone-LP (see Wolkowicz [70] and the exposition by Alizadeh [1]). The simplex method can be generalized to semidefinite programs (Pataki <ref> [57] </ref>). Given any * &gt; 0, semidefinite programs can be solved within an additive error of * in polynomial time (* is part of the input, so the running time dependence on * is polynomial in log 1 * ).
Reference: [58] <author> S. Poljak and F. Rendl. </author> <title> Nonpolyhedral relaxations of graph-bisection problems. </title> <type> DIMACS Technical Report 92-55, </type> <year> 1992. </year> <note> To appear in SIAM Journal on Optimization. </note>
Reference-contexts: In conjunction with the polynomial-time solvability of semidefinite programs, this leads to the only known polynomial-time algorithm for finding the largest stable set in a perfect graph (Grotschel et al. [25]). More recently, there has been increased interest in semidefinite programming from a combinatorial point-of-view <ref> [46, 47, 1, 58, 17, 45] </ref>. This started with the work of Lovasz and Schri-jver [46, 47], who developed a machinery to define tighter and tighter relaxations of any integer program based on quadratic and semidefinite programming. <p> The equivalence of the semidefinite program we consider and the eigenvalue bound of Delorme and Poljak was established by Poljak and Rendl <ref> [58] </ref>. Building on work by Overton and Womersley [54, 53], Alizadeh [1] has shown that eigenvalue minimization problems can in general be formulated as semidefinite programs. <p> These, however, are pathological cases. Our programs (SD) and (D) behave nicely; both programs attain their optimum values, and these values are equal (i.e. Z fl P = Z fl D ). This can be shown in a variety of ways (see <ref> [58, 1, 5] </ref>). Given that strong duality holds in our case, the argument showing weak duality implies that, for the optimum primal solution Y fl and the optimum dual solution fl fl , we have T r ((diag (fl fl ) + W )Y fl ) = 0. <p> For MAX CUT, the equivalence between (SD) and (EIG) was established by Poljak and Rendl <ref> [58] </ref>. 11 For completeness, we derive the equivalence between (EIG) and the dual (D).
Reference: [59] <author> S. Poljak and F. Rendl. </author> <title> Node and edge relaxations of the max-cut problem. </title> <journal> Computing, </journal> <volume> 52 </volume> <pages> 123-137, </pages> <year> 1994. </year> <note> Also appears as Report 266, </note> <institution> Technische Universitat Graz. </institution>
Reference-contexts: This is potentially quite useful, since there is an abundant literature on eigenvalue bounds for combinatorial optimization problems; see the survey paper by Mohar and Poljak [49]. As shown by Poljak and Rendl <ref> [60, 59] </ref> and Delorme and Poljak [14], the eigenvalue bound provides a very good bound on the maximum cut in practice. Delorme and Poljak [13, 12] study the worst-case ratio between the maximum cut and their eigenvalue bound. <p> The convex hull of the optimum vectors is depicted on the right; the circle represents the center of the sphere. 5 Computational Results In practice, we expect that the algorithm will perform much better than the worst-case bound of ff. Poljak and Rendl <ref> [60, 59] </ref> (see also Delorme and Poljak [14]) report computational results showing that the bound Z fl EIG is typically less than 2-5% and, in the instances they tried, never worse than 8% away from Z fl MC .
Reference: [60] <author> S. Poljak and F. Rendl. </author> <title> Solving the max-cut problem using eigenvalues. </title> <editor> In M. Lucertini, G. Rinaldi, A. Sassano, and B. Simeone, editors, </editor> <title> Partitioning and Decomposition in Combinatorial Optimization, </title> <note> Discrete Applied Mathematics. 1995. To appear. </note>
Reference-contexts: This is potentially quite useful, since there is an abundant literature on eigenvalue bounds for combinatorial optimization problems; see the survey paper by Mohar and Poljak [49]. As shown by Poljak and Rendl <ref> [60, 59] </ref> and Delorme and Poljak [14], the eigenvalue bound provides a very good bound on the maximum cut in practice. Delorme and Poljak [13, 12] study the worst-case ratio between the maximum cut and their eigenvalue bound. <p> The convex hull of the optimum vectors is depicted on the right; the circle represents the center of the sphere. 5 Computational Results In practice, we expect that the algorithm will perform much better than the worst-case bound of ff. Poljak and Rendl <ref> [60, 59] </ref> (see also Delorme and Poljak [14]) report computational results showing that the bound Z fl EIG is typically less than 2-5% and, in the instances they tried, never worse than 8% away from Z fl MC . <p> We use Vanderbei's code to solve the semidefinite program, then we generate 50 random vectors r. We output the best of the 50 cuts induced. We applied our code to a small subset of the instances considered by Poljak and Rendl <ref> [60] </ref>. In particular, we considered several different types of random graphs, as well as complete geometric graphs defined by Traveling Salesman Problem (TSP) instances from the TSPLIB (see Reinelt [63]). <p> compute the optimal solution; for 5 instances, the value of the cut produced is equal to Z fl P , and for the others, we have been able to exploit additional information from the dual semidefinite program to prove optimality (for the problem dantzig42, gr48 and hk48, Poljak and Rendl <ref> [60] </ref> also show that our solution is optimal). For all TSPLIB instances, the maximum cut value is within .995 of the semidefinite bound. Given these computational results, it is tempting to speculate that a much stronger bound can be proven for these Euclidean instances. <p> The analysis of the expected value of the cut is unchanged and, therefore, the resulting algorithm is a randomized (ff *)-approximation algorithm. Another approach to the problem is to use a standard reduction of MAX RES CUT to MAX CUT based on contracting edges and "switching" cuts (see e.g. <ref> [60] </ref>). This reduction introduces negative edge weights and so we do not discuss it here, although Theorem 2.7 can be used to show that our MAX CUT algorithm applied to a reduced instance has a performance guarantee of (ff *) for the original MAX RES CUT instance.
Reference: [61] <author> S. Poljak and D. Turzk. </author> <title> A polynomial algorithm for constructing a large bipartite subgraph, with an application to a satisfiability problem. </title> <journal> Canadian Journal of Mathematics, </journal> <volume> 34 </volume> <pages> 519-524, </pages> <year> 1982. </year>
Reference-contexts: Since 1976, a number of researchers have presented approximation algorithms for the unweighted MAX CUT problem with performance guarantees of 1 2 + 1 1 4m <ref> [61] </ref>, 1 2n [30], and 1 2 [33] (where n = jV j, m = jEj and denotes the maximum degree), but no progress was made in improving the constant in the performance guarantee beyond that of Sahni and Gonzales's straightforward algorithm.
Reference: [62] <author> S. Poljak and Z. Tuza. </author> <title> The max-cut problem | a survey. </title> <editor> In W. Cook, L. Lovasz, and P. Seymour, editors, </editor> <booktitle> Special Year on Combinatorial Optimization, DIMACS series in Discrete Mathematics and Theoretical Computer Science. </booktitle> <publisher> American Mathematical Society, </publisher> <year> 1995. </year> <note> To be published. </note>
Reference-contexts: Besides its theoretical importance, the MAX CUT problem has applications in circuit layout design and statistical physics (Barahona et al. [4]). For a comprehensive survey of the MAX CUT problem, the reader is referred to Poljak and Tuza <ref> [62] </ref>.
Reference: [63] <author> G. Reinelt. </author> <title> TSPLIB A traveling salesman problem library. </title> <journal> ORSA Journal on Computing, </journal> <volume> 3 </volume> <pages> 376-384, </pages> <year> 1991. </year>
Reference-contexts: We applied our code to a small subset of the instances considered by Poljak and Rendl [60]. In particular, we considered several different types of random graphs, as well as complete geometric graphs defined by Traveling Salesman Problem (TSP) instances from the TSPLIB (see Reinelt <ref> [63] </ref>). For four different types of random graphs, we ran 50 instances on graphs of 50 vertices, 20 on graphs of size 100, and 5 on graphs of size 200. In the Type A random graph, each edge (i; j) is included with probability 1/2.
Reference: [64] <author> F. Rendl, R. Vanderbei, and H. Wolkowicz. </author> <title> Interior point methods for max-min eigenvalue problems. </title> <type> Report 264, </type> <institution> Technische Universitat Graz, </institution> <year> 1993. </year>
Reference-contexts: For example, Alizadeh's adaptation of Ye's interior-point algorithm to semidefinite programming [1] performs O ( p * )) iterations. By exploiting the simple structure of the problem (SD) as is indicated in <ref> [64] </ref> (see also [68, Section 7.4]), each iteration can be implemented in O (n 3 ) time. <p> We also performed our own computational experiments, in which the cuts computed by the algorithm were usually within 4% of the semidefinite bound Z fl P , and never less than 9% from the bound. To implement the algorithm, we used code supplied by R. Vanderbei <ref> [64] </ref> for a special class of semidefinite programs. We use Vanderbei's code to solve the semidefinite program, then we generate 50 random vectors r. We output the best of the 50 cuts induced. We applied our code to a small subset of the instances considered by Poljak and Rendl [60].
Reference: [65] <author> B. Rosenfeld. </author> <title> A history of non-Euclidean geometry. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1988. </year>
Reference-contexts: The desired probability can be seen to be equal to twice the area of the spherical triangle polar to the spherical triangle defined by v i , v j and v k . Stated this way, the result is a corollary to Girard's formula (1629 [20], see <ref> [65] </ref>) expressing the area of a spherical triangle with angles 1 , 2 and 3 as its excess 1 + 2 + 3 . We also present a proof of the lemma from first principles. In fact, our proof parallels Euler's proof (1781 [15], see [65]) of Girard's formula. <p> Girard's formula (1629 [20], see <ref> [65] </ref>) expressing the area of a spherical triangle with angles 1 , 2 and 3 as its excess 1 + 2 + 3 . We also present a proof of the lemma from first principles. In fact, our proof parallels Euler's proof (1781 [15], see [65]) of Girard's formula.
Reference: [66] <author> S. Sahni and T. Gonzalez. </author> <title> P-complete approximation problems. </title> <journal> Journal of the ACM, </journal> <volume> 23 </volume> <pages> 555-565, </pages> <year> 1976. </year>
Reference-contexts: We will also use the term "-approximation algorithm" for randomized polynomial-time algorithms that deliver solutions whose expected value is at least times the optimal. In 1976, Sahni and Gonzales <ref> [66] </ref> presented a 1 2 -approximation algorithm for the MAX CUT problem. Their algorithm iterates through the vertices and decides whether or not to assign vertex i to S based on which placement maximizes the weight of the cut of vertices 1 to i.
Reference: [67] <author> P. M. Vaidya. </author> <title> A new algorithm for minimizing convex functions over convex sets. </title> <booktitle> In Proceedings of the 30th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 338-343, </pages> <year> 1989. </year>
Reference-contexts: This can be done through the ellipsoid algorithm (Grotschel et al. [26]) and other polynomial-time algorithms for convex programming (Vaidya <ref> [67] </ref>) as well as interior-point methods (Nesterov and Nemirovskii [50, 51] and Alizadeh [1]).
Reference: [68] <author> L. Vandenberghe and S. Boyd. </author> <note> Semidefinite programming. Submitted to SIAM Review, </note> <year> 1994. </year>
Reference-contexts: Since the work of Nesterov and Nemirovskii, and Alizadeh, there has been much development in the design and analysis of interior-point methods for semidefinite programming; for several references available at the time of writing of this paper, see the survey paper by Vandenberghe and Boyd <ref> [68] </ref>. Semidefinite programming has many interesting applications in a variety of areas including control theory, nonlinear programming, geometry and combinatorial optimization; see [51, 9, 68, 1], the references therein and the references below. <p> Semidefinite programming has many interesting applications in a variety of areas including control theory, nonlinear programming, geometry and combinatorial optimization; see <ref> [51, 9, 68, 1] </ref>, the references therein and the references below. In combinatorial optimization, the importance of semidefinite programming is that it leads to tighter relaxations than the classical linear programming relaxations for many graph and combinatorial problems. <p> For example, Alizadeh's adaptation of Ye's interior-point algorithm to semidefinite programming [1] performs O ( p * )) iterations. By exploiting the simple structure of the problem (SD) as is indicated in [64] (see also <ref> [68, Section 7.4] </ref>), each iteration can be implemented in O (n 3 ) time.
Reference: [69] <author> P. M. Vitanyi. </author> <title> How well can a graph be n-colored? Discrete Mathematics, </title> <booktitle> 34 </booktitle> <pages> 69-80, </pages> <year> 1981. </year>
Reference: [70] <author> H. Wolkowicz. </author> <title> Some applications of optimization in matrix theory. </title> <journal> Linear Algebra and Its Applications, </journal> <volume> 40 </volume> <pages> 101-118, </pages> <year> 1981. </year>
Reference-contexts: To some extent, semidefinite programming is very similar to linear programming; see Alizadeh [1] for a comparison. It inherits the very elegant duality theory of cone-LP (see Wolkowicz <ref> [70] </ref> and the exposition by Alizadeh [1]). The simplex method can be generalized to semidefinite programs (Pataki [57]).
Reference: [71] <author> M. Yannakakis. </author> <title> On the approximation of maximum satisfiability. </title> <journal> Journal of Algorithms, </journal> <volume> 17 </volume> <pages> 475-502, </pages> <year> 1994. </year>
Reference-contexts: The algorithm for MAX CUT also leads directly to a randomized (ff *)-approximation algorithm for the maximum 2-satisfiability problem (MAX 2SAT). The best previously known algorithm for this problem has a performance guarantee of 3 4 and is due to Yannakakis <ref> [71] </ref>. A somewhat simpler 3 4 -approximation algorithm was given in Goemans and Williamson [22]. The improved 2SAT algorithm leads to .7584-approximation algorithm for the overall MAX SAT problem, fractionally better than Yannakakis' 3 4 -approximation algorithm for MAX SAT. <p> MAX 2SAT consists of MAX SAT instances in which each clause has length at most two. MAX 2SAT is NP-complete [19]; the best approximation algorithm known previously has a performance guarantee of 3 4 and is due to Yannakakis <ref> [71] </ref> (see also Goemans and Williamson [22]). As with the MAX CUT problem, MAX 2SAT is known to be MAX SNP-hard [55]; thus there exists some constant c &lt; 1 such that the existence of a c-approximation algorithm implies that P = N P 15 [2].
References-found: 71

