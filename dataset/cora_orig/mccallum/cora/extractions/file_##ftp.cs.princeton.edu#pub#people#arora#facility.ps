URL: file://ftp.cs.princeton.edu/pub/people/arora/facility.ps
Refering-URL: http://www.cs.princeton.edu/~arora/publist.html
Root-URL: http://www.cs.princeton.edu
Title: Approximation schemes for Euclidean k-medians and related problems  
Author: Sanjeev Arora Prabhakar Raghavan Satish Rao 
Affiliation: Princeton University  IBM Research  NEC Research  
Abstract: In the k-median problem we are given a set S of n points in a metric space and a positive integer k. We desire to locate k medians in space, such that the sum of the distances from each of the points of S to the nearest median is minimized. This paper gives an approximation scheme for the plane that for any c &gt; 0 produces a solution of cost at most 1 + 1=c times the optimum and runs in time O(n O(c+1) ): The approximation scheme also generalizes to some problems related to k-median. Our methodology is to extend Arora's [1, 2] techniques for the TSP, which hitherto seemed inapplicable to problems such as the k-median problem. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Arora. </author> <title> Polynomial-time approximation schemes for Euclidean TSP and other geometric problems. </title> <booktitle> Proceedings of 37th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 2-12, </pages> <year> 1996. </year>
Reference-contexts: Email: arora@cs.princeton.edu y IBM Almaden Research Center, 650 Harry Road, San Jose CA 95120. z NEC Research Institute, Princeton, NJ. erences therein). In fact it is a prototypical clustering problem for &lt; 2 . Building on methods due to Arora <ref> [1, 2] </ref> for the traveling salesman problem, we give in this paper the first constant-factor approximation algorithm for the k-median problem in the plane; in fact, we give a polynomial-time approximation scheme. <p> It is easy to restate these results as guaranteeing a (1+1=c)-approximate solution in expected time n O (c+1) . The algorithm hinges on a charging algorithm that generalizes the techniques of Arora <ref> [1, 2] </ref>, and should be of independent interest for other geometric optimization problems; this argument is developed in Section 2.1. <p> Formally, an instance of the problem is specified by the following inputs. * A nonempty square in the shifted quadtree. * An integer f 2 [0; k] * If f 6= 0, an assignment inside of numbers <ref> [1; :::4m] </ref> to the portals of the box, such that jinside (p) inside (p 0 )j 1 if portal p and p 0 are successive portals along the bounding box. * If f &lt; k, an assignment closest of numbers [1; :::4m] to the portals of the box, such that jclosest <p> * If f 6= 0, an assignment inside of numbers <ref> [1; :::4m] </ref> to the portals of the box, such that jinside (p) inside (p 0 )j 1 if portal p and p 0 are successive portals along the bounding box. * If f &lt; k, an assignment closest of numbers [1; :::4m] to the portals of the box, such that jclosest (p) closest (p 0 )j 1 if portal p and p 0 are successive portals along the bounding box, and closest (p) &lt; inside (p): When f 6= 0; the goal of the subproblem for a box of side length <p> square where m is O (log n=*): This leads to an N O (log n=*) 2 time algorithm for finding an (1 + *)-approximate solution for this problem. 4 Further work One of our contributions here has been the de-coupling of the charging scheme from the Patching lemma of Arora <ref> [1] </ref>. This raises the prospect of applying these methods to other difficult geometric optimization problems such as the Minimum-weight Steiner triangulation problem: given n points in the plane, form a triangulation of minimum total length whose vertices include the n given points and possibly additional "Steiner" points.
Reference: [2] <author> S. Arora. </author> <title> Nearly linear time approximation schemes for Euclidean TSP and other geometric problems. </title> <booktitle> Proceedings of 38th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 554-563, </pages> <year> 1997. </year>
Reference-contexts: Email: arora@cs.princeton.edu y IBM Almaden Research Center, 650 Harry Road, San Jose CA 95120. z NEC Research Institute, Princeton, NJ. erences therein). In fact it is a prototypical clustering problem for &lt; 2 . Building on methods due to Arora <ref> [1, 2] </ref> for the traveling salesman problem, we give in this paper the first constant-factor approximation algorithm for the k-median problem in the plane; in fact, we give a polynomial-time approximation scheme. <p> We note that this application of Arora's techniques is quite surprising, since he mentions <ref> [2] </ref> that his techniques seem to apply only to problems in which (a) the objective function is a sum of edge lengths (b) the patching lemma holds (i.e., there is a solution of cost c that crosses a certain length l line segment more than twice, then there is a solution <p> It is easy to restate these results as guaranteeing a (1+1=c)-approximate solution in expected time n O (c+1) . The algorithm hinges on a charging algorithm that generalizes the techniques of Arora <ref> [1, 2] </ref>, and should be of independent interest for other geometric optimization problems; this argument is developed in Section 2.1. <p> Also in section 3.3 we describe quasi-polynomial time algorithms for d-dimensional geometric instances and for a capacitated versions of the problems. 1.2 Our Techniques A quadtree is a geometric division of the plane into a hierarchy of square regions (see Section 2). Arora <ref> [2] </ref> uses a randomized variant of the quadtree. <p> The dissection is the same as in <ref> [2] </ref>, and the charging argument is a general statement of some of the calculations in [2]. Let the bounding box of a set of points be the smallest square containing it. Let L denote its length. A dissection of the bounding box is a recursive partitioning into smaller squares. <p> The dissection is the same as in <ref> [2] </ref>, and the charging argument is a general statement of some of the calculations in [2]. Let the bounding box of a set of points be the smallest square containing it. Let L denote its length. A dissection of the bounding box is a recursive partitioning into smaller squares. We view it as a 4-ary tree whose root is the bounding box. <p> for minmax clustering [4] to find a facility assignment that minimizes the maximum distance to a facility to within a factor of two, say this distance is D: We know that the optimal facility location value is at least D=2 and at most Dn: Using arguments similar to those in <ref> [2] </ref>, it is easy to see how to decompose the problem into problems that can be enclosed in disjoint squares of size 2Dn 2 . Then we round each coordinate of each point to the nearest multiple of D=n 2 .
Reference: [3] <author> Y. Bartal. </author> <title> Probabilistic approximation of metric spaces and its algorithmic applications. </title> <booktitle> Prof. 37th IEEE FOCS, </booktitle> <year> 1996. </year>
Reference-contexts: Indeed, the only approximation algorithm we know of for the k-median problem stems from a combination of techniques of Bartal <ref> [3] </ref> together with an (exact) algorithm for the k-median problem on trees due to Hochbaum [7], yielding an approximation ratio that is somewhat bigger than log n for general metrics.
Reference: [4] <author> M. Bern and D. Eppstein. </author> <title> Approximation algorithms for geometric problems. </title> <booktitle> In [8]. </booktitle>
Reference-contexts: This and related minmax clustering problems are relatively well-understood. They can be approximated (typically using simple greedy heuristics) within factors close to 2, and achieving a substantially better factor is NP-hard. (See <ref> [4] </ref> for a survey.) The facility-location problem is somewhat similar to the k-median problem: we are given a set S = fx 1 ; : : : ; x n g of n points again, together with a cost c i for opening a facility at x i . <p> We can ensure this as follows. First we use the algorithm for minmax clustering <ref> [4] </ref> to find a facility assignment that minimizes the maximum distance to a facility to within a factor of two, say this distance is D: We know that the optimal facility location value is at least D=2 and at most Dn: Using arguments similar to those in [2], it is easy
Reference: [5] <author> F. Chudak. </author> <title> Improved approximation algorithms for uncapacitated facility location. </title> <note> Submitted for publication. </note>
Reference-contexts: Shmoys, Tardos and Aardal [13] give a 3.16 approximation algorithm for arbitrary metric spaces; this factor has since been improved to 2.41 by Guha and Khuller [6], and more recently to 1.74 by Chudak <ref> [5] </ref>. Whereas the facility-location problem (where the number of facilities is variable) has succumbed to approximation, the k-median problem on the other hand has defied the development of good approximation algorithms, apparently because we are only allowed to use k facilities (and no more).
Reference: [6] <author> S. Guha and S. Khuller. </author> <title> Greedy Strikes Back: Improved Facility Location Algorithms. </title> <booktitle> Proceedings of the Ninth ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1998. </year>
Reference-contexts: Hochbaum [7] showed that the greedy algorithm is an O (log n)-approximation algorithm for this problem for the uncapaci-tated problem. Shmoys, Tardos and Aardal [13] give a 3.16 approximation algorithm for arbitrary metric spaces; this factor has since been improved to 2.41 by Guha and Khuller <ref> [6] </ref>, and more recently to 1.74 by Chudak [5].
Reference: [7] <author> D.S. Hochbaum. </author> <title> Heuristics for the fixed cost median problem. </title> <journal> Math. Programming, </journal> <volume> 22, </volume> <pages> 148-162, </pages> <year> 1982. </year>
Reference-contexts: We are to find a set F of facilities so as to minimize the sum of the distances from each of the points of S to the nearest facility, plus the cost of opening the facilities. Hochbaum <ref> [7] </ref> showed that the greedy algorithm is an O (log n)-approximation algorithm for this problem for the uncapaci-tated problem. <p> Indeed, the only approximation algorithm we know of for the k-median problem stems from a combination of techniques of Bartal [3] together with an (exact) algorithm for the k-median problem on trees due to Hochbaum <ref> [7] </ref>, yielding an approximation ratio that is somewhat bigger than log n for general metrics. Lin and Vitter [10] use an elegant technique called filtering for rounding fractional solutions of linear programming relaxations to the k-median problem.
Reference: [8] <author> D. Hochbaum, ed. </author> <title> Approximation Algorithms for NP-hard problems. </title> <publisher> PWS Publishing, </publisher> <address> Boston, </address> <year> 1996. </year>
Reference: [9] <author> A. K. Jain, R. C. Dubes, </author> <title> Algorithms for Clustering Data, </title> <publisher> Prentice-Hall, </publisher> <year> 1981. </year>
Reference-contexts: Besides its intrinsic appeal as a cleanly-stated, basic unsolved problem in combinatorial optimization, the k-median problem has applications to pattern classification and data mining (see for instance <ref> [9, 12] </ref> and ref fl Supported by NSF CAREER award NSF CCR-9502747, an Alfred Sloan Fellowship, and a Packard Fellowship. Email: arora@cs.princeton.edu y IBM Almaden Research Center, 650 Harry Road, San Jose CA 95120. z NEC Research Institute, Princeton, NJ. erences therein).
Reference: [10] <author> J-H. Lin and J. S. Vitter. </author> <title> *-approximations with minimum packing constraint violation. </title> <booktitle> Proc. 24th ACM STOC, </booktitle> <pages> 771-782, </pages> <year> 1992. </year>
Reference-contexts: Lin and Vitter <ref> [10] </ref> use an elegant technique called filtering for rounding fractional solutions of linear programming relaxations to the k-median problem. This results in an algorithm for the k-median problem achieving a cost within a factor of (1 + *) of optimal, but using (1 + 1=*)(ln n + 1)k median locations.
Reference: [11] <author> J.-H. Lin and J.S. Vitter. </author> <title> Approximation algorithms for the geometric median problems. </title> <journal> Information Proc. Letters 44, </journal> <pages> 148-162, </pages> <year> 1992. </year>
Reference-contexts: This results in an algorithm for the k-median problem achieving a cost within a factor of (1 + *) of optimal, but using (1 + 1=*)(ln n + 1)k median locations. Lin and Vitter <ref> [11] </ref> also gave an algorithm achieving a solution that is 2 (1 + *) times the optimum, but using at most (1+1=*)k median locations.
Reference: [12] <author> O. L. Mangasarian. </author> <title> Mathematical programming in data mining. Data mining and knowledge discovery, </title> <type> 1(2), </type> <year> 1997. </year>
Reference-contexts: Besides its intrinsic appeal as a cleanly-stated, basic unsolved problem in combinatorial optimization, the k-median problem has applications to pattern classification and data mining (see for instance <ref> [9, 12] </ref> and ref fl Supported by NSF CAREER award NSF CCR-9502747, an Alfred Sloan Fellowship, and a Packard Fellowship. Email: arora@cs.princeton.edu y IBM Almaden Research Center, 650 Harry Road, San Jose CA 95120. z NEC Research Institute, Princeton, NJ. erences therein).
Reference: [13] <author> D. B. Shmoys, E. Tardos and K. Aardal. </author> <title> Approximation algorithms for facility location problems (extended abstract). </title> <booktitle> Proc. 29th ACM STOC, </booktitle> <pages> 265-274, </pages> <year> 1997. </year>
Reference-contexts: Hochbaum [7] showed that the greedy algorithm is an O (log n)-approximation algorithm for this problem for the uncapaci-tated problem. Shmoys, Tardos and Aardal <ref> [13] </ref> give a 3.16 approximation algorithm for arbitrary metric spaces; this factor has since been improved to 2.41 by Guha and Khuller [6], and more recently to 1.74 by Chudak [5].
References-found: 13

