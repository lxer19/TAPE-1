URL: http://www.cs.utexas.edu/users/hudson/sat6.ps
Refering-URL: http://www.cs.utexas.edu/users/hudson/papers.html
Root-URL: http://www.cs.utexas.edu
Email: fmccain,hudsong@cs.utexas.edu  
Title: Satisfiability Planning with Causal Theories  
Author: Norman McCain and Hudson Turner 
Date: April 21, 1997  
Address: Austin  
Affiliation: Department of Computer Sciences University of Texas at  
Abstract-found: 0
Intro-found: 1
Reference: [ Clark, 1978 ] <author> Keith Clark. </author> <title> Negation as failure. </title> <editor> In Herve Gallaire and Jack Minker, editors, </editor> <booktitle> Logic and Data Bases, </booktitle> <pages> pages 293-322. </pages> <publisher> Plenum Press, </publisher> <address> New York, </address> <year> 1978. </year>
Reference-contexts: Let D be a definite causal theory. By the literal completion of D, denoted by lcomp (D), we mean the classical propositional theory obtained by an elaboration of the Clark completion method <ref> [ Clark, 1978 ] </ref> , as follows. For each literal L in the language of D, include in lcomp (D) the formula L ( 1 _ _ n ) where 1 ; : : :; n are the antecedents of the causal laws in D with consequent L.
Reference: [ Crawford and Auton, 1993 ] <author> J.M. Crawford and L.D. Auton. </author> <title> Experimental results on the cross-over point in satisfiability problems. </title> <booktitle> In Proc. AAAI-93, </booktitle> <pages> pages 21-27, </pages> <year> 1993. </year>
Reference-contexts: It then calls the satisfiability checker ntab <ref> [ Crawford and Auton, 1993 ] </ref> to determine whether lcomp (D) [ [ f:Qg: (23) is satisfiable. If ntab determines that (23) is unsatisfiable, query/0 answers "yes." Otherwise, it answers "no." In the latter case, an interpretation that satisfies (23) is given as a counterexample.
Reference: [ Hanks and McDermott, 1987 ] <author> Steve Hanks and Drew McDermott. </author> <title> Non-monotonic logic and temporal projection. </title> <journal> Artificial Intelligence, </journal> <volume> 33(3) </volume> <pages> 379-412, </pages> <year> 1987. </year>
Reference-contexts: To illustrate our approach, we will represent a slight elaboration of the Yale Shooting domain <ref> [ Hanks and McDermott, 1987 ] </ref> as an L (F; A; T) domain description. We will use the action names Load; Shoot 5 and the fluent names Loaded; Alive; Walking: We will identify time with the natural numbers.
Reference: [ Kautz and Selman, 1992 ] <author> Henry Kautz and Bart Selman. </author> <title> Planning as sat-isfiability. </title> <booktitle> In Proceedings of the 10th European Conference on Artificial Intelligence, </booktitle> <year> 1992. </year>
Reference: [ Kautz and Selman, 1996 ] <author> Henry Kautz and Bart Selman. </author> <title> Pushing the envelope: planning, propositional logic, and stochastic search. </title> <booktitle> In Proceedings of AAAI-96, </booktitle> <year> 1996. </year>
Reference: [ Lin, 1995 ] <author> Fangzhen Lin. </author> <title> Embracing causality in specifying the indirect effects of actions. </title> <booktitle> In Proc. of IJCAI-95, </booktitle> <pages> pages 1985-1991, </pages> <year> 1995. </year>
Reference-contexts: If ntab fails to find a satisfying interpretation for (24), plan/0 answers "no." In this case, the goal G cannot be achieved. 7 Additional Examples 7.1 Suitcase Domain Now we consider a more complex example, based on an action domain adapted from <ref> [ Lin, 1995 ] </ref> , in which there is a suitcase with two latches, each of which may be in either of two positions, up or down. The suitcase is spring-loaded so that whenever both latches are in the up position the suitcase is caused to be open.
Reference: [ McCain and Turner, 1997 ] <author> Norman McCain and Hudson Turner. </author> <title> Causal theories of action and change. </title> <booktitle> In Proc. of AAAI-97, </booktitle> <year> 1997. </year> <note> To appear. 21 </note>
Reference-contexts: 1 Introduction In <ref> [ McCain and Turner, 1997 ] </ref> , a nonmonotonic formalism|called the language of causal theories|is defined, together with a general method of formalizing action domains. In the current paper, we describe an implemented approach to query evaluation and planning with respect to action domains formalized as causal theories. <p> In applying satisfiability to planning, we follow Kautz and Selman [1992,1996]. Our proposal is noteworthy because it is based on action formalizations that can represent indirect effects of actions (ramifications), implied action preconditions (qualifications), concurrent actions, and other features of action domains (cf. <ref> [ McCain and Turner, 1997 ] </ref> ). Because the language of causal theories is more expressive than traditional planning languages, we must consider the preliminary question of what makes a sequence of actions a "valid" plan for achieving a goal G in an initial situation S 0 . <p> Since D I 4 contains no other formulas, we have shown that I = D I 4 . Therefore, I is causally explained according to D 4 . The Yale Shooting domain is very simple and does not illustrate the expressive potential of the language of causal theories (cf. <ref> [ McCain and Turner, 1997 ] </ref> ). More interesting examples appear in Sections 4, 5 and 7. 4 Planning with L (F; A; T) Domain Descriptions Let D be an L (F; A; T) domain description. <p> We model the opening of the suitcase as a static effect (as Lin does); that is, we do not model a state of the domain in which both latches are up but the suitcase is not (yet) open. (See <ref> [ McCain and Turner, 1997 ] </ref> for a fuller account.) %File: suitcase :- declare_types type (latch,[l1,l2]), type (action,[toggle (latch),close]), type (fluent,[up (latch),open]), type (time,[0..2]), type (atom,[o (action,time),h (fluent,time)]). 18 :- declare_variables var (L,latch), var (A,action), var (F,fluent), var (T,time). o (toggle (L),T) & h (up (L),T) =&gt; -h (up (L),T+1). o
References-found: 7

