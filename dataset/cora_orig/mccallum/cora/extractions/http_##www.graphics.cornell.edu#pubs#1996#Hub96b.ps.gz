URL: http://www.graphics.cornell.edu/pubs/1996/Hub96b.ps.gz
Refering-URL: http://www.graphics.cornell.edu/pubs/1996/Hub96b.html
Root-URL: 
Title: Improving Accuracy in a Robust Algorithm for Three-Dimensional Voronoi Diagrams  
Author: Philip M. Hubbard 
Affiliation: Program of Computer Graphics Cornell University  
Note: The Journal of Graphics Tools, 1(1), 1996, pp. 33-47  
Abstract: This paper describes extensions to a previous algorithm that robustly builds three-dimensional Voronoi diagrams in the presence of inexact numerical computations. The extensions improve the algorithm's accuracy, making its results more nearly represent the proximity properties of an ideal Voronoi diagram. In empirical tests, these extensions have improved accuracy by more than eight orders of magnitude. Complete pseudocode for the algorithm appears in an appendix of this paper. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Adrian Bowyer. </author> <title> Computing Dirichlet tessellations. </title> <journal> The Computer Journal, </journal> <volume> 24(2) </volume> <pages> 162-166, </pages> <year> 1981. </year>
Reference-contexts: in accuracy over the Inagaki et al. algorithm; in one case, for example, the new approach improves accuracy by more than eight orders of magnitude. 2 A Robust Algorithm The algorithm of Inagaki et al. extends previous algorithms that build Voronoi diagrams incrementally, an example being the work of Bowyer <ref> [1] </ref>. Each increment adds a point, p 2 P , to the diagram for the points already added. Adding p creates one new cell in the diagram, the region of space closer to p than to the already-added points.
Reference: [2] <author> Tamal K. Dey, Kokichi Sugihara, and Chandrajit L. Bajaj. </author> <title> Delaunay triangulations in three dimensions with finite precision arithmetic. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <volume> 9 </volume> <pages> 457-470, </pages> <year> 1992. </year>
Reference-contexts: Building three-dimensional Voronoi diagrams efficiently is a popular topic in the literature, as exemplified by the recent work of Fang and Piegl [4], but to our knowledge, the only algorithms that guarantee robustness are the work of Dey et al. <ref> [2] </ref> and of Inagaki et al. [10]. We prefer the latter algorithm because its implementation seems more straightforward. This algorithm has the advantage that it uses only combinatorial computations, avoiding inexact numerical computations that compromise robustness.
Reference: [3] <author> Herbert Edelsbrunner and Ernst Peter Mucke. </author> <title> Simulation of simplicity: A technique to cope with degenerate cases in geometric algorithms. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 9(1) </volume> <pages> 66-104, </pages> <month> January </month> <year> 1990. </year>
Reference-contexts: Hoffmann [7] explores the factors that make robustness and accuracy elusive. A basic difficulty is that in theory, geometric problems deal with objects from a continuous domain, but in practice, geometric algorithms use discrete computation. The literature describes techniques, such as the work of Edelsbrunner and Mucke <ref> [3] </ref>, that address this difficulty in a general manner; applying these techniques to specific problems introduces complications, however, as discussed by Schorn [15].
Reference: [4] <author> Tsung-Pao Fang and Les A. Piegl. </author> <title> Delaunay triangulation in three dimensions. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 15(5) </volume> <pages> 62-69, </pages> <month> September </month> <year> 1995. </year>
Reference-contexts: Building three-dimensional Voronoi diagrams efficiently is a popular topic in the literature, as exemplified by the recent work of Fang and Piegl <ref> [4] </ref>, but to our knowledge, the only algorithms that guarantee robustness are the work of Dey et al. [2] and of Inagaki et al. [10]. We prefer the latter algorithm because its implementation seems more straightforward.
Reference: [5] <author> John A. Goldak, Xinhua Yu, Alan Knight, and Lingxian Dong. </author> <title> Constructing discrete medial axis of 3-D objects. </title> <journal> International Journal of Computational Geometry and Applications, </journal> <volume> 1(3) </volume> <pages> 327-339, </pages> <year> 1991. </year>
Reference-contexts: These capabilities make Voronoi diagrams useful in more specific graphics problems: Joseph [11] uses them for direct volume rendering of irregularly sampled data; and Goldak et al. <ref> [5] </ref> use them to approximate the medial-axis surfaces or "skeletons" of polyhedral models, a construction useful in the approximation of the models' shapes for time-critical collision detection [9]. To be useful in real applications, an algorithm that constructs a Voronoi diagram must meet two requirements.
Reference: [6] <author> Ronald Goldman. </author> <title> Intersection of three planes. </title> <editor> In Andrew S. Glassner, editor, </editor> <title> Graphics Gems, page 305. </title> <publisher> Academic Press, </publisher> <address> Boston, Massachusetts, </address> <year> 1990. </year>
Reference: [7] <author> Christoph M. Hoffmann. </author> <title> The problems of accuracy and robustness in geometric computation. </title> <journal> IEEE Computer, </journal> <volume> 22(3) </volume> <pages> 31-41, </pages> <month> March </month> <year> 1989. </year>
Reference-contexts: Email address: pmh@graphics.cornell.edu. URL: http://www.graphics.cornell.edu/~pmh. by (b) the creation of new vertices v 4 through v 9 . Note that in this two-dimensional example, cells are convex polygons instead of polyhedra. Robustness and accuracy are challenging goals, however, not just for Voronoi diagrams but for many geometric problems. Hoffmann <ref> [7] </ref> explores the factors that make robustness and accuracy elusive. A basic difficulty is that in theory, geometric problems deal with objects from a continuous domain, but in practice, geometric algorithms use discrete computation.
Reference: [8] <author> Philip M. Hubbard. </author> <title> Collision Detection for Interactive Graphics Applications. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Brown University, </institution> <year> 1994. </year> <note> Available at ftp://ftp.cs.brown.edu/pub/techreports/95/cs95-08.ps.Z. </note>
Reference-contexts: Even small errors can cause the algorithm to delete too many or too few vertices, producing topological inconsistencies from which the algorithm cannot recover. Since specific examples of how these inconsistencies can occur are lengthy and tedious, we do not repeat examples that appear elsewhere <ref> [8] </ref>. To eliminate these threats to robustness, Inagaki et al. modify the basic incremental algorithm so that its deletion of vertices 1 explicitly avoids topological inconsistencies. The modifications involve properties of the Voronoi diagram interpreted as a three-dimensional graph.
Reference: [9] <author> Philip M. Hubbard. </author> <title> Approximating polyhedra with spheres for time-critical collision detection. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 15(3), </volume> <month> July </month> <year> 1996. </year>
Reference-contexts: diagrams useful in more specific graphics problems: Joseph [11] uses them for direct volume rendering of irregularly sampled data; and Goldak et al. [5] use them to approximate the medial-axis surfaces or "skeletons" of polyhedral models, a construction useful in the approximation of the models' shapes for time-critical collision detection <ref> [9] </ref>. To be useful in real applications, an algorithm that constructs a Voronoi diagram must meet two requirements. It must be robust in that it must produce a topologically consistent diagram for any input P . Of particular importance is avoiding inconsistencies that cause the algorithm to terminate prematurely. <p> The data comes from a real application mentioned in Section 1: using the Voronoi diagram for points sprinkled on the surface of a model to approximate the model's medial-axis surface, as a step in approximating the model's shape for time-critical collision detection <ref> [9] </ref>. Figures 3 and 4 show the two data sets.
Reference: [10] <author> Hiroshi Inagaki, Kokichi Sugihara, and Noboru Sugie. </author> <title> Numerically robust incremental algorithm for constructing three-dimensional Voronoi diagrams. </title> <booktitle> In Proceedings of the Fourth Canadian Conference on Computational Geometry, </booktitle> <pages> pages 334-339, </pages> <year> 1992. </year>
Reference-contexts: Building three-dimensional Voronoi diagrams efficiently is a popular topic in the literature, as exemplified by the recent work of Fang and Piegl [4], but to our knowledge, the only algorithms that guarantee robustness are the work of Dey et al. [2] and of Inagaki et al. <ref> [10] </ref>. We prefer the latter algorithm because its implementation seems more straightforward. This algorithm has the advantage that it uses only combinatorial computations, avoiding inexact numerical computations that compromise robustness.
Reference: [11] <author> Jonathan Joseph. </author> <title> Direct volume rendering of irregularly sampled data using Voronoi decomposition. </title> <type> Master's thesis, </type> <institution> Program of Computer Graphics, Cornell University, </institution> <year> 1996. </year>
Reference-contexts: These capabilities make Voronoi diagrams useful in more specific graphics problems: Joseph <ref> [11] </ref> uses them for direct volume rendering of irregularly sampled data; and Goldak et al. [5] use them to approximate the medial-axis surfaces or "skeletons" of polyhedral models, a construction useful in the approximation of the models' shapes for time-critical collision detection [9].
Reference: [12] <author> Michael Karasick, Derek Lieber, and Lee R. Nackman. </author> <title> Efficient Delaunay triangulation using rational arithmetic. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 10(1) </volume> <pages> 71-91, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: A more direct approach is to develop solutions tailored to specific problems, such as the work by Karasick, Lieber and Nackman <ref> [12] </ref> and by Sugihara and Iri [17] on robust algorithms for two-dimensional Voronoi diagrams.
Reference: [13] <author> Joseph B. Kruskal, Jr. </author> <title> On the shortest spanning subtree of a graph and the traveling salesman problem. </title> <journal> Proceedings of the American Mathematical Society, </journal> <volume> 7(1) </volume> <pages> 48-50, </pages> <month> February </month> <year> 1956. </year>
Reference-contexts: The algorithm then repeats its main loop. The loop terminates when the algorithm finds no legally deletable vertex on the queue. Note that this approach is reminiscent of Kruskal's algorithm for finding the minimum spanning tree of a graph <ref> [13, 16] </ref>. Another accuracy issue concerns the position assigned to a new vertex. Using the circumcenter of the four forming points can fail in practice, because imprecise choices of the deletable vertices can lead to forming points that are coplanar.
Reference: [14] <author> Franco P. Preparata and Michael I. Shamos. </author> <title> Computational Geometry: An Introduction. </title> <publisher> Springer-Verlag, </publisher> <address> New York, New York, </address> <year> 1985. </year>
Reference-contexts: Given a finite set of points, P , a Voronoi diagram associates with each point, p 2 P , the region of space closer to p than to any of the other points, p 0 2 P . Preparata and Shamos <ref> [14] </ref> discuss several general problems solvable with Voronoi diagrams: finding the nearest neighbor of each point in P ; finding the point in P closest to an arbitrary query point, q; building the convex hull of P ; and building the Delaunay triangulation of P , in which all the triangles
Reference: [15] <author> Peter Schorn. </author> <title> Degeneracy in geometric computation and the perturbation approach. </title> <journal> The Computer Journal, </journal> <volume> 37(1) </volume> <pages> 35-42, </pages> <year> 1994. </year>
Reference-contexts: The literature describes techniques, such as the work of Edelsbrunner and Mucke [3], that address this difficulty in a general manner; applying these techniques to specific problems introduces complications, however, as discussed by Schorn <ref> [15] </ref>. A more direct approach is to develop solutions tailored to specific problems, such as the work by Karasick, Lieber and Nackman [12] and by Sugihara and Iri [17] on robust algorithms for two-dimensional Voronoi diagrams.
Reference: [16] <author> Robert Sedgewick. </author> <title> Algorithms. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, 2nd edition, </address> <year> 1988. </year>
Reference-contexts: The algorithm then repeats its main loop. The loop terminates when the algorithm finds no legally deletable vertex on the queue. Note that this approach is reminiscent of Kruskal's algorithm for finding the minimum spanning tree of a graph <ref> [13, 16] </ref>. Another accuracy issue concerns the position assigned to a new vertex. Using the circumcenter of the four forming points can fail in practice, because imprecise choices of the deletable vertices can lead to forming points that are coplanar.
Reference: [17] <author> Kokichi Sugihara and Masao Iri. </author> <title> Constructing the Voronoi diagram for "one million" generators in single-precision arithmetic. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 80(9) </volume> <pages> 1471-1484, </pages> <month> September </month> <year> 1992. </year> <month> 7 </month>
Reference-contexts: A more direct approach is to develop solutions tailored to specific problems, such as the work by Karasick, Lieber and Nackman [12] and by Sugihara and Iri <ref> [17] </ref> on robust algorithms for two-dimensional Voronoi diagrams.
References-found: 17

