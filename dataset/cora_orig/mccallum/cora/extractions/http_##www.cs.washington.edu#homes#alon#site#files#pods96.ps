URL: http://www.cs.washington.edu/homes/alon/site/files/pods96.ps
Refering-URL: http://www.cs.washington.edu/homes/alon/site/PaperAbstractPresentation_bib20.html
Root-URL: 
Email: levy@research.att.com  anand@cs.stanford.edu  ullman@cs.stanford.edu  
Title: Answering Queries Using Limited External Query Processors (Extended Abstract)  
Author: Alon Y. Levy Anand Rajaraman Jeffrey D. Ullman 
Note: The work of the second and third authors was supported by NSF grant IRI-92-23405, ARO grant DAAH04-95-1-0192, and USAF contract F33615-93-1-1339.  
Affiliation: AT&T Research  Stanford University  Stanford University  
Abstract: When answering queries using external information sources, their contents can be described by views. To answer a query, we must rewrite it using the set of views presented by the sources. When the external information sources also have the ability to answer some (perhaps limited) sets of queries that require performing operations on their data, the set of views presented by the source may be infinite (albeit encoded in some finite fasion). Previous work on answering queries using views has only considered the case where the set of views is finite. In order to exploit the ability of information sources to answer more complex queries, we consider the problem of answering conjunctive queries using infinite sets of views. Our first result is that an infinite set of views can be partitioned into a finite number of equivalence classes, such that picking one view from every nonempty class is sufficient to determine whether the query can be answered using the views. Second, we show how to compute the set of equivalence classes for sets of views encoded by a datalog program. Furthermore, we extend our results to the case when the query and the views use the built-in predicates &lt;, , =, and 6=, and they are interpreted over a dense domain. Finally, we extend our results to conjunctive queries and views with the built-in predicates &lt;, , and = interpreted over the integers. In doing so we present a result of independent interest, namely, an algorithm to minimize such queries. 
Abstract-found: 1
Intro-found: 1
Reference: [ACHK94] <author> Yigal Arens, Chin Y. Chee, Chun-Nan Hsu, and Craig A. Knoblock. </author> <title> Retrieving and integrating data from multiple information sources. </title> <journal> International Journal on Intelligent and Cooperative Information Systems, </journal> <year> 1994. </year>
Reference-contexts: The problem arises naturally in systems that provide access to multiple heterogeneous information sources using mediators (e.g., TSIMMIS [CGMH + 94, PGGMU95], HERMES [SAB + 95], Information Manifold [LSK95, LRO96], SIMS <ref> [ACHK94] </ref>, Internet Softbot [EW94]). In such systems, information sources are treated as limited external query processors that can answer some but not all possible queries over their data. The query capabilities of each information source are represented by a set V of views over some set of base relations.
Reference: [BI94] <author> Daniel Barbara and Tomasz Imielinski. Sleepers and workaholics: </author> <title> Caching strategies in mobile environments. </title> <booktitle> In Proceedings of SIGMOD-94, </booktitle> <pages> pages 1-12, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction The problem of answering queries using views has recently received considerable attention because of its applications in Global Information Systems [LSK95, RSU95, LRO96], Mobile Computing <ref> [BI94, HSW94] </ref>, view adaptation [GMR95], maintaining physical data independence [TSI94] and speeding up query processing [YL87, CKPS95].
Reference: [CGMH + 94] <author> Sudarshan Chawathe, Hector Garcia-Molina, Joachim Hammer, Kelly Ireland, Yannis Pa-pakonstantinou, Jeffrey Ullman, and Jennifer Widom. </author> <title> The TSIMMIS project: Integration of heterogeneous information sources. </title> <booktitle> In proceedings of IPSJ, </booktitle> <address> Tokyo, Japan, </address> <month> October </month> <year> 1994. </year> <month> 10 </month>
Reference-contexts: The problem arises naturally in systems that provide access to multiple heterogeneous information sources using mediators (e.g., TSIMMIS <ref> [CGMH + 94, PGGMU95] </ref>, HERMES [SAB + 95], Information Manifold [LSK95, LRO96], SIMS [ACHK94], Internet Softbot [EW94]). In such systems, information sources are treated as limited external query processors that can answer some but not all possible queries over their data.
Reference: [CKPS95] <author> Surajit Chaudhuri, Ravi Krishnamurthy, Spy--ros Potamianos, and Kyuseok Shim. </author> <title> Optimizing queries with materialized views. </title> <booktitle> In Proceedings of International Conference on Data Engineering, </booktitle> <year> 1995. </year>
Reference-contexts: 1 Introduction The problem of answering queries using views has recently received considerable attention because of its applications in Global Information Systems [LSK95, RSU95, LRO96], Mobile Computing [BI94, HSW94], view adaptation [GMR95], maintaining physical data independence [TSI94] and speeding up query processing <ref> [YL87, CKPS95] </ref>. The problem arises naturally in systems that provide access to multiple heterogeneous information sources using mediators (e.g., TSIMMIS [CGMH + 94, PGGMU95], HERMES [SAB + 95], Information Manifold [LSK95, LRO96], SIMS [ACHK94], Internet Softbot [EW94]). <p> For the solution to be correct, it must produce the same answer as the query for any set of tuples in the base relations. Most previous work on answering queries using views (e.g., <ref> [YL87, LMSS95, RSU95, CKPS95] </ref>) assumes the set V of views to be finite. Papakonstantinou et al. [PGGMU95] considers the possibility of an infinite set of views supported by one source and shows that infinite sets of views naturally model sources with the ability to answer complex queries about their contents.
Reference: [CM77] <author> A.K. Chandra and P.M. Merlin. </author> <title> Optimal implementation of conjunctive queries in relational databases. </title> <booktitle> In Proceedings of the Ninth Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 77-90, </pages> <year> 1977. </year>
Reference-contexts: 1 is a rewriting of Q 1 we consider its expansion: Q 00 1 : q 1 (A; B) : blue (A; B) & red (B; Z 1 ) & red (B; Z 2 ) & red (Z 2 ; B) and we show that there is a containment mapping <ref> [CM77] </ref> from Q 1 to Q 00 1 and from Q 00 1 to Q 1 .
Reference: [EW94] <author> Oren Etzioni and Dan Weld. </author> <title> A softbot-based interface to the internet. </title> <journal> CACM, </journal> <volume> 37(7) </volume> <pages> 72-76, </pages> <year> 1994. </year>
Reference-contexts: The problem arises naturally in systems that provide access to multiple heterogeneous information sources using mediators (e.g., TSIMMIS [CGMH + 94, PGGMU95], HERMES [SAB + 95], Information Manifold [LSK95, LRO96], SIMS [ACHK94], Internet Softbot <ref> [EW94] </ref>). In such systems, information sources are treated as limited external query processors that can answer some but not all possible queries over their data. The query capabilities of each information source are represented by a set V of views over some set of base relations.
Reference: [GMR95] <author> Ashish Gupta, Inderpal Singh Mumick, and Kenneth A. Ross. </author> <title> Adapting materialized views after redefinitions. </title> <booktitle> In Proceedings of SIGMOD-95, </booktitle> <year> 1995. </year>
Reference-contexts: 1 Introduction The problem of answering queries using views has recently received considerable attention because of its applications in Global Information Systems [LSK95, RSU95, LRO96], Mobile Computing [BI94, HSW94], view adaptation <ref> [GMR95] </ref>, maintaining physical data independence [TSI94] and speeding up query processing [YL87, CKPS95]. The problem arises naturally in systems that provide access to multiple heterogeneous information sources using mediators (e.g., TSIMMIS [CGMH + 94, PGGMU95], HERMES [SAB + 95], Information Manifold [LSK95, LRO96], SIMS [ACHK94], Internet Softbot [EW94]).
Reference: [GSUW94] <author> Ashish Gupta, Yehoshua Sagiv, Jeffrey D. Ull-man, and Jennifer Widom. </author> <title> Constraint checking with partial information. </title> <booktitle> In Proceedings of the Thirteenth Symposium on Principles of Database Systems (PODS), </booktitle> <pages> pages 45-55, </pages> <year> 1994. </year>
Reference-contexts: We assume that the built-in predicates are interpreted over a dense domain. Algorithms for containment and equivalence of conjunctive queries with built-in predicates were first considered by Klug [Klu88] and then in <ref> [LS93, GSUW94] </ref>. Klug showed that the containment problem for such queries is in p 2 . Van der Meyden [vdM92] later showed the containment and equivalence problems to be complete for p 2 .
Reference: [HSW94] <author> Yixiu Huang, Prasad Sistla, and Ouri Wolfson. </author> <title> Data replication for mobile computers. </title> <booktitle> In Proceedings of SIGMOD-94, </booktitle> <pages> pages 13-24, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction The problem of answering queries using views has recently received considerable attention because of its applications in Global Information Systems [LSK95, RSU95, LRO96], Mobile Computing <ref> [BI94, HSW94] </ref>, view adaptation [GMR95], maintaining physical data independence [TSI94] and speeding up query processing [YL87, CKPS95].
Reference: [Klu88] <author> A. Klug. </author> <title> On conjunctive queries containing inequalities. </title> <journal> Journal of the ACM, </journal> <pages> pages 35(1): 146-160, </pages> <year> 1988. </year>
Reference-contexts: Finally, we extend our results to queries and views with the built-in predicates &lt;, , and = interpreted over the integers. In doing so we present a result of independent interest, namely, an algorithm to minimize such conjunctive queries. The previously known minimization algorithm <ref> [Klu88] </ref> requires that the built-in predicates be interpreted over a dense domain. Our algorithm for rewriting queries using an infinite set of views assumes that the arity of the views is bounded. <p> We assume that the built-in predicates are interpreted over a dense domain. Algorithms for containment and equivalence of conjunctive queries with built-in predicates were first considered by Klug <ref> [Klu88] </ref> and then in [LS93, GSUW94]. Klug showed that the containment problem for such queries is in p 2 . Van der Meyden [vdM92] later showed the containment and equivalence problems to be complete for p 2 . <p> When the built-in predicates are interpreted over a dense domain, Klug showed that any pair of equivalent queries Q 1 and Q 2 use same set of essential constants. The theorem we state below follows from <ref> [Klu88] </ref>. 1 1 Klug considers only queries that use the built-in predicates &lt;, , and =. However, his results can be extended to queries that also use the predicate 6= for dense domains. <p> The minimization problem we address is the following: given a conjunctive query with built-in subgoals Q, find a query Q 0 that has as few subgoals of ordinary (non-built-in) predicates as possible and no redundant built-in subgoals. Klug <ref> [Klu88] </ref> gave a minimization algorithm that is in p 3 for the case of dense domains.
Reference: [LMSS95] <author> Alon Y. Levy, Alberto O. Mendelzon, Yehoshua Sagiv, and Divesh Srivastava. </author> <title> Answering queries using views. </title> <booktitle> In Proceedings of the 14th ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, </booktitle> <address> San Jose, CA, </address> <year> 1995. </year>
Reference-contexts: For the solution to be correct, it must produce the same answer as the query for any set of tuples in the base relations. Most previous work on answering queries using views (e.g., <ref> [YL87, LMSS95, RSU95, CKPS95] </ref>) assumes the set V of views to be finite. Papakonstantinou et al. [PGGMU95] considers the possibility of an infinite set of views supported by one source and shows that infinite sets of views naturally model sources with the ability to answer complex queries about their contents. <p> If we can pick one representative view from each nonempty equivalence class (preferably, the shortest), we can then use known techniques (such as those in <ref> [LMSS95] </ref>) to find a rewriting. Several useful families of views can be encoded by using a Datalog program. We show that for such sets of views it is possible to compute which equivalence classes they have and pick one from every nonempty class. <p> It can also be shown that there is no rewriting of Q 2 using the views U 1 and V 1 . 2 Levy et al. <ref> [LMSS95] </ref> show that the problem of finding a rewriting of a query using a finite set of views is NP-complete when neither the query nor the views contain built-in subgoals. In some applications we are faced with the view-rewriting problem where the set of views V may be infinite. <p> containment mappings 0 1 and 0 2 show that Q and Q 0 2 are equivalent queries. 2 The following corollary follows from Theorem 3.1 and from the fact that if a query Q with n subgoals has a rewriting, then it has one with at most n view literals <ref> [LMSS95] </ref>. 5 Corollary 3.2 Let V be a set of conjunctive views, and Q be a conjunctive query.
Reference: [LRO95] <author> Alon Y. Levy, Anand Rajaraman, and Joann J. Ordille. </author> <title> Querying heterogeneous information sources using source descriptions. </title> <institution> AT&T Bell Labs technical report. </institution> <note> Submitted for publication, </note> <year> 1995. </year>
Reference-contexts: For example, suppose we are answering queries using only external sources of information. If the external sources have, in addition to data, the ability to answer complex queries about their data, then their capabilities are described by a set of views they can compute (e.g., <ref> [PGGMU95, LRO95] </ref>), which is typically an infinite set.
Reference: [LRO96] <author> Alon Y. Levy, Anand Rajaraman, and Joann J. Ordille. </author> <title> Query answering algorithms for information agents. </title> <booktitle> In Proceedings of the Thirteenth National Conference on Artificial Intelligence, AAAI-96, </booktitle> <year> 1996. </year>
Reference-contexts: 1 Introduction The problem of answering queries using views has recently received considerable attention because of its applications in Global Information Systems <ref> [LSK95, RSU95, LRO96] </ref>, Mobile Computing [BI94, HSW94], view adaptation [GMR95], maintaining physical data independence [TSI94] and speeding up query processing [YL87, CKPS95]. <p> The problem arises naturally in systems that provide access to multiple heterogeneous information sources using mediators (e.g., TSIMMIS [CGMH + 94, PGGMU95], HERMES [SAB + 95], Information Manifold <ref> [LSK95, LRO96] </ref>, SIMS [ACHK94], Internet Softbot [EW94]). In such systems, information sources are treated as limited external query processors that can answer some but not all possible queries over their data.
Reference: [LS92] <author> Alon Y. Levy and Yehoshua Sagiv. </author> <title> Constraints and redundancy in Datalog. </title> <booktitle> In The Proceedings of the Eleventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, </booktitle> <address> San Diego, CA., </address> <pages> pages 67-80, </pages> <year> 1992. </year>
Reference-contexts: We later consider programs with built-in predicates, where all these restrictions will be removed. Note that these assumptions entail that all unifications (when creating expansions) are trivial. Furthermore, by preprocessing the program P with the query-tree <ref> [LS92] </ref> we can ensure that the program also encodes all conjunctive views resulting from equating variables in the heads of views encoded by P .
Reference: [LS93] <author> Alon Y. Levy and Yehoshua Sagiv. </author> <title> Queries independent of updates. </title> <booktitle> In Proceedings of the 19th VLDB Conference, Dublin, Ireland, </booktitle> <pages> pages 171-181, </pages> <year> 1993. </year>
Reference-contexts: We assume that the built-in predicates are interpreted over a dense domain. Algorithms for containment and equivalence of conjunctive queries with built-in predicates were first considered by Klug [Klu88] and then in <ref> [LS93, GSUW94] </ref>. Klug showed that the containment problem for such queries is in p 2 . Van der Meyden [vdM92] later showed the containment and equivalence problems to be complete for p 2 .
Reference: [LSK95] <author> Alon Y. Levy, Divesh Srivastava, and Thomas Kirk. </author> <title> Data model and query evaluation in global information systems. </title> <journal> Journal of Intelligent Information Systems, </journal> <note> Special Issue on Networked Information Discovery and Retrieval, 5 (2), </note> <month> September </month> <year> 1995. </year>
Reference-contexts: 1 Introduction The problem of answering queries using views has recently received considerable attention because of its applications in Global Information Systems <ref> [LSK95, RSU95, LRO96] </ref>, Mobile Computing [BI94, HSW94], view adaptation [GMR95], maintaining physical data independence [TSI94] and speeding up query processing [YL87, CKPS95]. <p> The problem arises naturally in systems that provide access to multiple heterogeneous information sources using mediators (e.g., TSIMMIS [CGMH + 94, PGGMU95], HERMES [SAB + 95], Information Manifold <ref> [LSK95, LRO96] </ref>, SIMS [ACHK94], Internet Softbot [EW94]). In such systems, information sources are treated as limited external query processors that can answer some but not all possible queries over their data.
Reference: [PGGMU95] <author> Yannis Papakonstantinou, Ashish Gupta, Hector Garcia-Molina, and Jeffrey Ullman. </author> <title> A query translation scheme for rapid implementation of wrappers. </title> <booktitle> In In proceedings of the Conference on Deductive and Object Oriented Databases, </booktitle> <address> DOOD-95, </address> <note> To appear, </note> <year> 1995. </year>
Reference-contexts: The problem arises naturally in systems that provide access to multiple heterogeneous information sources using mediators (e.g., TSIMMIS <ref> [CGMH + 94, PGGMU95] </ref>, HERMES [SAB + 95], Information Manifold [LSK95, LRO96], SIMS [ACHK94], Internet Softbot [EW94]). In such systems, information sources are treated as limited external query processors that can answer some but not all possible queries over their data. <p> For the solution to be correct, it must produce the same answer as the query for any set of tuples in the base relations. Most previous work on answering queries using views (e.g., [YL87, LMSS95, RSU95, CKPS95]) assumes the set V of views to be finite. Papakonstantinou et al. <ref> [PGGMU95] </ref> considers the possibility of an infinite set of views supported by one source and shows that infinite sets of views naturally model sources with the ability to answer complex queries about their contents. <p> The case in which the set of views is encoded by a datalog program was considered in <ref> [PGGMU95] </ref>. Our work generalizes [PGGMU95] in two ways. First, we allow the rewriting of the query using the views to contain multiple views from the infinite set V, whereas [PGGMU95] try to find a single view from V to which additional post-processing can be applied to make it as "close" to <p> The case in which the set of views is encoded by a datalog program was considered in <ref> [PGGMU95] </ref>. Our work generalizes [PGGMU95] in two ways. First, we allow the rewriting of the query using the views to contain multiple views from the infinite set V, whereas [PGGMU95] try to find a single view from V to which additional post-processing can be applied to make it as "close" to the original query as <p> The case in which the set of views is encoded by a datalog program was considered in <ref> [PGGMU95] </ref>. Our work generalizes [PGGMU95] in two ways. First, we allow the rewriting of the query using the views to contain multiple views from the infinite set V, whereas [PGGMU95] try to find a single view from V to which additional post-processing can be applied to make it as "close" to the original query as possible. Second, we consider the case in which the rewriting is required to be equivalent to the query, whereas [PGGMU95] requires only that the solution <p> the infinite set V, whereas <ref> [PGGMU95] </ref> try to find a single view from V to which additional post-processing can be applied to make it as "close" to the original query as possible. Second, we consider the case in which the rewriting is required to be equivalent to the query, whereas [PGGMU95] requires only that the solution contain the query. 2 Preliminaries In our discussion we refer to the relations used in the query as the database relations. We consider conjunctive queries, which may in addition contain the built-in comparison predicates =, 6=, &lt; and . <p> For example, suppose we are answering queries using only external sources of information. If the external sources have, in addition to data, the ability to answer complex queries about their data, then their capabilities are described by a set of views they can compute (e.g., <ref> [PGGMU95, LRO95] </ref>), which is typically an infinite set. <p> In <ref> [PGGMU95] </ref> it is shown that several interesting sets of views can be encoded using datalog programs. In this section we show how an infinite set of views is encoded using a datalog program. <p> rewriting of Q using views in V P is decidable in nondeterministic doubly exponential time in the size of Q and V P . 5 Parameterized View Definitions In some applications the grammar describing the set of views computable by an external source actually describes a set of parameterized views <ref> [PGGMU95] </ref>. A parameterized view is a conjunctive query that contains placeholders in argument positions in the body of the view, in addition to variables and constants. The parameterized view V represents the set of all view definitions obtained by assigning a constant to each place holder.
Reference: [RSU95] <author> Anand Rajaraman, Yehoshua Sagiv, and Jef-frey D. Ullman. </author> <title> Answering queries using templates with binding patterns. </title> <booktitle> In Proceedings of the 14th ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, </booktitle> <address> San Jose, CA, </address> <year> 1995. </year>
Reference-contexts: 1 Introduction The problem of answering queries using views has recently received considerable attention because of its applications in Global Information Systems <ref> [LSK95, RSU95, LRO96] </ref>, Mobile Computing [BI94, HSW94], view adaptation [GMR95], maintaining physical data independence [TSI94] and speeding up query processing [YL87, CKPS95]. <p> For the solution to be correct, it must produce the same answer as the query for any set of tuples in the base relations. Most previous work on answering queries using views (e.g., <ref> [YL87, LMSS95, RSU95, CKPS95] </ref>) assumes the set V of views to be finite. Papakonstantinou et al. [PGGMU95] considers the possibility of an infinite set of views supported by one source and shows that infinite sets of views naturally model sources with the ability to answer complex queries about their contents. <p> Our results extend also to views and queries with built-in comparison predicates. We are currently extending our work in several directions. First, we are considering the case in which the views can only be used with specific binding patterns <ref> [RSU95] </ref>. Second, we are considering the case in which we need a rewritten query that is contained in the original query, and not necessarily equivalent to it. Finally, we are extending the results of Section 7 to queries that include the predicate 6=.
Reference: [SAB + 95] <author> V.S. Subrahmanian, S. Adali, A. Brink, R. Emery, J. Lu, A. Rajput, T. Rogers, R. Ross, and C. Ward. </author> <title> HERMES: A heterogeneous reasoning and mediator system. </title> <type> Technical report, </type> <institution> University of Maryland, </institution> <year> 1995. </year>
Reference-contexts: The problem arises naturally in systems that provide access to multiple heterogeneous information sources using mediators (e.g., TSIMMIS [CGMH + 94, PGGMU95], HERMES <ref> [SAB + 95] </ref>, Information Manifold [LSK95, LRO96], SIMS [ACHK94], Internet Softbot [EW94]). In such systems, information sources are treated as limited external query processors that can answer some but not all possible queries over their data.
Reference: [TSI94] <author> Odysseas G. Tsatalos, Marvin H. Solomon, and Yannis E. Ioannidis. </author> <title> The GMAP: A versatile tool for physical data independence. </title> <booktitle> In Proceedings of the 20th International VLDB Conference, Santiago, Chile, </booktitle> <pages> pages 367-378, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction The problem of answering queries using views has recently received considerable attention because of its applications in Global Information Systems [LSK95, RSU95, LRO96], Mobile Computing [BI94, HSW94], view adaptation [GMR95], maintaining physical data independence <ref> [TSI94] </ref> and speeding up query processing [YL87, CKPS95]. The problem arises naturally in systems that provide access to multiple heterogeneous information sources using mediators (e.g., TSIMMIS [CGMH + 94, PGGMU95], HERMES [SAB + 95], Information Manifold [LSK95, LRO96], SIMS [ACHK94], Internet Softbot [EW94]).
Reference: [vdM92] <author> Ron van der Meyden. </author> <title> The complexity of querying indefinite data about linearly ordered domains. </title> <booktitle> In The Proceedings of the Eleventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, </booktitle> <address> San Diego, CA., </address> <pages> pages 331-345, </pages> <year> 1992. </year>
Reference-contexts: Algorithms for containment and equivalence of conjunctive queries with built-in predicates were first considered by Klug [Klu88] and then in [LS93, GSUW94]. Klug showed that the containment problem for such queries is in p 2 . Van der Meyden <ref> [vdM92] </ref> later showed the containment and equivalence problems to be complete for p 2 . Given a conjunctive query Q with built-in predicates, its core is the subset of its subgoals whose predicate is not a built-in predicate.
Reference: [YL87] <author> H. Z. Yang and P. A. Larson. </author> <title> Query transformation for PSJ-queries. </title> <booktitle> In Proceedings of the 13th International VLDB Conference, </booktitle> <pages> pages 245-254, </pages> <year> 1987. </year>
Reference-contexts: 1 Introduction The problem of answering queries using views has recently received considerable attention because of its applications in Global Information Systems [LSK95, RSU95, LRO96], Mobile Computing [BI94, HSW94], view adaptation [GMR95], maintaining physical data independence [TSI94] and speeding up query processing <ref> [YL87, CKPS95] </ref>. The problem arises naturally in systems that provide access to multiple heterogeneous information sources using mediators (e.g., TSIMMIS [CGMH + 94, PGGMU95], HERMES [SAB + 95], Information Manifold [LSK95, LRO96], SIMS [ACHK94], Internet Softbot [EW94]). <p> For the solution to be correct, it must produce the same answer as the query for any set of tuples in the base relations. Most previous work on answering queries using views (e.g., <ref> [YL87, LMSS95, RSU95, CKPS95] </ref>) assumes the set V of views to be finite. Papakonstantinou et al. [PGGMU95] considers the possibility of an infinite set of views supported by one source and shows that infinite sets of views naturally model sources with the ability to answer complex queries about their contents.
References-found: 22

