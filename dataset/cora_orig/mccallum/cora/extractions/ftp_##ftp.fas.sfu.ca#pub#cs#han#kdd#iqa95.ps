URL: ftp://ftp.fas.sfu.ca/pub/cs/han/kdd/iqa95.ps
Refering-URL: http://fas.sfu.ca/cs/research/groups/DB/sections/publication/kdd/kdd.html
Root-URL: 
Title: Intelligent Query Answering by Knowledge Discovery Techniques  
Author: Jiawei Han Yue Huang Nick Cercone yz Yongjian Fu 
Keyword: Index Terms Database and knowledge-base systems, knowledge discovery in databases, knowledge-rich data model, intelligent query answering, multiple layered databases, query analysis and query processing.  
Address: Canada V5A 1S6.  Regina, Regina, Saskatchewan, Canada S4S 0A2.  
Affiliation: School of Computing Science, Simon Fraser University, Burnaby, British Columbia,  Department of Computer Science, University of  
Abstract: Knowledge discovery facilitates querying database knowledge and intelligent query answering in database systems. In this paper, we investigate the application of discovered knowledge, concept hierarchies, and knowledge discovery tools for intelligent query answering in database systems. A knowledge-rich data model is constructed to incorporate discovered knowledge and knowledge discovery tools. Queries are classified into data queries and knowledge queries. Both types of queries can be answered directly by simple retrieval or intelligently by analyzing the intent of query and providing generalized, neighborhood or associated information using stored or discovered knowledge. Techniques have been developed for intelligent query answering using discovered knowledge and/or knowledge discovery tools, which includes generalization, data summarization, concept clustering, rule discovery, query rewriting, deduction, lazy evaluation, application of multiple-layered databases, etc. Our study shows that knowledge discovery substantially broadens the spectrum of intelligent query answering and may have deep implications on query answering in data- and knowledge-base systems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Agrawal, T. Imielinski, and A. Swami. </author> <title> Mining association rules between sets of items in large databases. </title> <booktitle> In Proc. 1993 ACM-SIGMOD Int. Conf. Management of Data, </booktitle> <pages> pages 207-216, </pages> <address> Washington, D.C., </address> <month> May </month> <year> 1993. </year>
Reference-contexts: The study is based on the premise that efficient, relatively sophisticated knowledge discovery tools will soon become available for large database systems. Such a view has been reinforced by some preliminary studies and experimental results <ref> [8, 23, 9, 1, 3, 18, 11] </ref>. For example, in our previous studies [4, 9, 11], an attribute-oriented induction method has been developed for knowledge discovery in databases. <p> A knowledge discovery system prototype, DBLearn [11], has been constructed based on this methodology and has been experimented on several large relational databases with satisfactory performance. Other studies, such as [8, 16, 23], have also developed interesting knowledge discovery techniques and systems/prototypes, such as INLEN [18], KDW+ [24], Quest <ref> [1] </ref>, IMACS [3], Datalogic/R [31], 49er [32], etc., which demonstrates the promising future of knowledge discovery. <p> intelligent answering of data queries and leave the in-depth discussion of the mechanisms for knowledge queries to future studies. 6 4 Knowledge Discovery Methods and Tools for Intelligent Query Answering Many knowledge discovery methods have been developed in recent studies for mining knowledge from data [8], ranging from database search <ref> [1] </ref>, generalization [9, 18], knowledge representation [2], to mathematical or statistical modeling [22, 31], etc. Based on the kinds of knowledge to be discovered from data, knowledge discovery tools can be classified into two major classes: (1) generalization-based discovery, and (2) discovering knowledge without generalization, as shown in Fig. 6.
Reference: [2] <author> A. Borgida and R. J. Brachman. </author> <title> Loading data into description reasoners. </title> <booktitle> In Proc. 1993 ACM-SIGMOD Int. Conf. Management of Data, </booktitle> <pages> pages 217-226, </pages> <address> Washington, D.C., </address> <month> May </month> <year> 1993. </year>
Reference-contexts: leave the in-depth discussion of the mechanisms for knowledge queries to future studies. 6 4 Knowledge Discovery Methods and Tools for Intelligent Query Answering Many knowledge discovery methods have been developed in recent studies for mining knowledge from data [8], ranging from database search [1], generalization [9, 18], knowledge representation <ref> [2] </ref>, to mathematical or statistical modeling [22, 31], etc. Based on the kinds of knowledge to be discovered from data, knowledge discovery tools can be classified into two major classes: (1) generalization-based discovery, and (2) discovering knowledge without generalization, as shown in Fig. 6.
Reference: [3] <author> R. J. Brachman. </author> <title> Viewing data from a knowledge representation lens. </title> <booktitle> In Proc. Int. Conf. Building and Sharing of Very Large-Scale Knowledge Bases'93, </booktitle> <pages> pages 117-120, </pages> <address> Tokyo, Japan, </address> <month> December </month> <year> 1993. </year>
Reference-contexts: The study is based on the premise that efficient, relatively sophisticated knowledge discovery tools will soon become available for large database systems. Such a view has been reinforced by some preliminary studies and experimental results <ref> [8, 23, 9, 1, 3, 18, 11] </ref>. For example, in our previous studies [4, 9, 11], an attribute-oriented induction method has been developed for knowledge discovery in databases. <p> Other studies, such as [8, 16, 23], have also developed interesting knowledge discovery techniques and systems/prototypes, such as INLEN [18], KDW+ [24], Quest [1], IMACS <ref> [3] </ref>, Datalogic/R [31], 49er [32], etc., which demonstrates the promising future of knowledge discovery.
Reference: [4] <author> Y. Cai, N. Cercone, and J. Han. </author> <title> Attribute-oriented induction in relational databases. </title> <editor> In G. Piatetsky-Shapiro and W. J. Frawley, editors, </editor> <booktitle> Knowledge Discovery in Databases, </booktitle> <pages> pages 213-228. </pages> <publisher> AAAI/MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: The study is based on the premise that efficient, relatively sophisticated knowledge discovery tools will soon become available for large database systems. Such a view has been reinforced by some preliminary studies and experimental results [8, 23, 9, 1, 3, 18, 11]. For example, in our previous studies <ref> [4, 9, 11] </ref>, an attribute-oriented induction method has been developed for knowledge discovery in databases. The method integrates a machine learning paradigm, especially learning-from-examples techniques, with database operations and provides an efficient way for extraction of generalized data from actual data in databases. <p> Obviously, the frequently referenced attributes should be preserved in higher layers, and the frequently referenced concept levels should be considered as the candidate concept levels in the construction of higher layers. Steps 2 and 3 are performed in a way similar to the attribute-oriented induction, studied previously <ref> [9, 4] </ref>. <p> Therefore, more study should be performed on ensuring database security in intelligent query answering in databases augmented with deduction and knowledge discovery components. Based upon our previous study on knowledge discovery in databases <ref> [4, 9] </ref>, a prototyped experimental database learning system, DBLearn, has been constructed [11]. Based on the principles of attribute-oriented induction, experimentation has been performed for knowledge discovery in large databases, such as the NSERC (Natural Sciences and Engineering Research Council of Canada) Grant Information System.
Reference: [5] <author> P. Chen. </author> <title> The entity-relationship model : Toward a unified view of data. </title> <journal> ACM Trans. Database Syst., </journal> <volume> 1 </volume> <pages> 9-36, </pages> <year> 1976. </year>
Reference-contexts: KDT, a set of knowledge discovery tools, performs knowledge discovery efficiently in databases, when necessary. 2 2 The first component, Schema, follows from a deductive entity-relationship model [13] which extends an entity-relationship model <ref> [5, 28] </ref> to incorporate rules, integrity constraints and complex data objects for deductive databases.
Reference: [6] <author> W. W. Chu and Q. Chen. </author> <title> Neighborhood and associative query answering. </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 1 </volume> <pages> 355-382, </pages> <year> 1992. </year>
Reference-contexts: Different from most of the previous studies on cooperative query answering <ref> [26, 25, 15, 7, 6, 30] </ref> and querying database knowledge [20] which emphasize on the application or inquiry of deduction rules and integrity constraints in relational or deductive databases, this study extends the domain of study from a deductive database to a knowledge-rich database assisted with generalized knowledge and knowledge discovery <p> rules discovered without going through generalization processes represent data regularities at the primitive concept level, their roles in intelligent query answering are similar to that of deduction rules and/or integrity constraints defined at the primitive concept level, which have been discussed in intelligent query answering in relational or deductive databases <ref> [26, 25, 15, 7, 6] </ref>. Therefore, this study will emphasize more on the impact of generalization-based discovery to intelligent query answering.
Reference: [7] <author> F. Cuppens and R. Demolombe. </author> <title> Cooperative answering: A methodology to provide intelligent access to databases. </title> <booktitle> In Proc. 2nd Int. Conf. Expert Database Systems, </booktitle> <pages> pages 621-643, </pages> <address> Fairfax, VA, </address> <month> April </month> <year> 1988. </year>
Reference-contexts: Different from most of the previous studies on cooperative query answering <ref> [26, 25, 15, 7, 6, 30] </ref> and querying database knowledge [20] which emphasize on the application or inquiry of deduction rules and integrity constraints in relational or deductive databases, this study extends the domain of study from a deductive database to a knowledge-rich database assisted with generalized knowledge and knowledge discovery <p> Direct query answering is a direct, simple retrieval of data or knowledge from the knowledge-rich database; whereas intelligent query answering consists of analyzing the intent of query and providing generalized, neighborhood or associated information relevant to the query <ref> [7] </ref>. <p> Query rewriting using associated or neighborhood information. For example, instead of printing only the names of the students satisfying the query condition, one may print other information as well, such as age, major, advisor, etc. associated with each student name. Such a technique is referred to as "width extension" <ref> [7] </ref>. 2. Generalization and summarization of the answers to a query. For example, one may also print the summa-tive information for the students satisfying the query condition, such as 45% of those students major in "computing science" and 20% major in "physics", etc. 3. <p> rules discovered without going through generalization processes represent data regularities at the primitive concept level, their roles in intelligent query answering are similar to that of deduction rules and/or integrity constraints defined at the primitive concept level, which have been discussed in intelligent query answering in relational or deductive databases <ref> [26, 25, 15, 7, 6] </ref>. Therefore, this study will emphasize more on the impact of generalization-based discovery to intelligent query answering. <p> Therefore, they interact closely with the major components of the KRDB. 5.1 Analysis of the intent of a query Several interesting methods for query intent analysis have been developed in the studies of intelligent query answering <ref> [14, 15, 19, 7, 26] </ref>. Such analyses are based on the notions of generalization, association, aggregation, concept clustering, etc. Semantic data modeling, classification of topics of interests, and plan analysis and formation are powerful techniques for query intent analysis [15, 19, 7, 26]. <p> Such analyses are based on the notions of generalization, association, aggregation, concept clustering, etc. Semantic data modeling, classification of topics of interests, and plan analysis and formation are powerful techniques for query intent analysis <ref> [15, 19, 7, 26] </ref>. When posing a query, different users often have different intentions. For example, when asking the highest monthly balance of an account, a customer and a bank manager are likely to have different intentions. <p> by query intent analysis, associated query answering can be performed by (1) presenting the information about some additional attributes which are not directly inquired but are relevant to the query; (2) relaxation of certain query conditions; and (3) adding an alternative query which is closely related to the original one <ref> [7] </ref>. Let the answer set be viewed as a relation table. The above three mechanisms can find their corresponding relational transformations: width-extension, height-extension, and table-extension. 1.
Reference: [8] <author> W. J. Frawley, G. Piatetsky-Shapiro, and C. J. Matheus. </author> <title> Knowledge discovery in databases: An overview. </title> <editor> In G. Piatetsky-Shapiro and W. J. Frawley, editors, </editor> <booktitle> Knowledge Discovery in Databases, </booktitle> <pages> pages 1-27. </pages> <publisher> AAAI/MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: the research grants from the Natural Sciences and Engineering Research Council of Canada, IRIS-2 Grant HMI-5 from IRIS/PRECARN (Networks of Centres of Excellence Program of the Government of Canada), and a research grant from the Centre for Systems Science of Simon Fraser University. mation from the data stored in databases <ref> [8] </ref>, has become an active area in both database and machine learning researches [27, 23]. <p> The study is based on the premise that efficient, relatively sophisticated knowledge discovery tools will soon become available for large database systems. Such a view has been reinforced by some preliminary studies and experimental results <ref> [8, 23, 9, 1, 3, 18, 11] </ref>. For example, in our previous studies [4, 9, 11], an attribute-oriented induction method has been developed for knowledge discovery in databases. <p> A knowledge discovery system prototype, DBLearn [11], has been constructed based on this methodology and has been experimented on several large relational databases with satisfactory performance. Other studies, such as <ref> [8, 16, 23] </ref>, have also developed interesting knowledge discovery techniques and systems/prototypes, such as INLEN [18], KDW+ [24], Quest [1], IMACS [3], Datalogic/R [31], 49er [32], etc., which demonstrates the promising future of knowledge discovery. <p> Notice that a stored generalized rule should be updated incrementally in response to the updates of the relevant set of data to preserve its correctness. This can be performed by an incremental learning algorithm provided in knowledge discovery tools <ref> [8, 9] </ref>. The last component, KDT, consists of a set of knowledge discovery tools, which could be a set of knowledge discovery algorithms or a database-oriented knowledge discovery subsystem, such as INLEN [16], KDW++ [8], DBLearn [9], etc. <p> This can be performed by an incremental learning algorithm provided in knowledge discovery tools [8, 9]. The last component, KDT, consists of a set of knowledge discovery tools, which could be a set of knowledge discovery algorithms or a database-oriented knowledge discovery subsystem, such as INLEN [16], KDW++ <ref> [8] </ref>, DBLearn [9], etc. Since a knowledge-rich database stores only a small portion of all of the possible generalized knowledge, it is often necessary to evoke a knowledge discovery process dynamically and extract general regularity from a specific set of data relevant to the query. <p> on the efficient methods for intelligent answering of data queries and leave the in-depth discussion of the mechanisms for knowledge queries to future studies. 6 4 Knowledge Discovery Methods and Tools for Intelligent Query Answering Many knowledge discovery methods have been developed in recent studies for mining knowledge from data <ref> [8] </ref>, ranging from database search [1], generalization [9, 18], knowledge representation [2], to mathematical or statistical modeling [22, 31], etc.
Reference: [9] <author> J. Han, Y. Cai, and N. Cercone. </author> <title> Data-driven discovery of quantitative rules in relational databases. </title> <journal> IEEE Trans. Knowledge and Data Engineering, </journal> <volume> 5 </volume> <pages> 29-40, </pages> <year> 1993. </year>
Reference-contexts: The study is based on the premise that efficient, relatively sophisticated knowledge discovery tools will soon become available for large database systems. Such a view has been reinforced by some preliminary studies and experimental results <ref> [8, 23, 9, 1, 3, 18, 11] </ref>. For example, in our previous studies [4, 9, 11], an attribute-oriented induction method has been developed for knowledge discovery in databases. <p> The study is based on the premise that efficient, relatively sophisticated knowledge discovery tools will soon become available for large database systems. Such a view has been reinforced by some preliminary studies and experimental results [8, 23, 9, 1, 3, 18, 11]. For example, in our previous studies <ref> [4, 9, 11] </ref>, an attribute-oriented induction method has been developed for knowledge discovery in databases. The method integrates a machine learning paradigm, especially learning-from-examples techniques, with database operations and provides an efficient way for extraction of generalized data from actual data in databases. <p> Notice that a stored generalized rule should be updated incrementally in response to the updates of the relevant set of data to preserve its correctness. This can be performed by an incremental learning algorithm provided in knowledge discovery tools <ref> [8, 9] </ref>. The last component, KDT, consists of a set of knowledge discovery tools, which could be a set of knowledge discovery algorithms or a database-oriented knowledge discovery subsystem, such as INLEN [16], KDW++ [8], DBLearn [9], etc. <p> The last component, KDT, consists of a set of knowledge discovery tools, which could be a set of knowledge discovery algorithms or a database-oriented knowledge discovery subsystem, such as INLEN [16], KDW++ [8], DBLearn <ref> [9] </ref>, etc. Since a knowledge-rich database stores only a small portion of all of the possible generalized knowledge, it is often necessary to evoke a knowledge discovery process dynamically and extract general regularity from a specific set of data relevant to the query. <p> The query can be answered by directly retrieving the discovered rule, if available, or by performing induction on the relevant data set <ref> [9] </ref>. 2 Example 3.5 To distinguish the characteristics of the graduate students from undergraduate students in computing science, born in Canada with excellent GPA, the query can be formulated as below. describe generalized rule for Student which distinguishes Status = "graduate" from Status = "undergraduate" where Major = "cs" and Birth <p> The rule can be discovered dynamically by a knowledge discovery process from the primitive data <ref> [9] </ref> or from an intermediate generalized relation [12]. 2 3.4 Intelligent answering of knowledge queries Intelligent answering of knowledge queries means that a knowledge query is answered in an intelligent way by analyzing the intent of the query and providing generalized, neighborhood or associated information. <p> of data queries and leave the in-depth discussion of the mechanisms for knowledge queries to future studies. 6 4 Knowledge Discovery Methods and Tools for Intelligent Query Answering Many knowledge discovery methods have been developed in recent studies for mining knowledge from data [8], ranging from database search [1], generalization <ref> [9, 18] </ref>, knowledge representation [2], to mathematical or statistical modeling [22, 31], etc. Based on the kinds of knowledge to be discovered from data, knowledge discovery tools can be classified into two major classes: (1) generalization-based discovery, and (2) discovering knowledge without generalization, as shown in Fig. 6. <p> Therefore, this study will emphasize more on the impact of generalization-based discovery to intelligent query answering. The techniques studied here are based on one generalization method: attribute-oriented induction developed in our previous studies <ref> [9, 11] </ref>, with an emphasis on the derivation of prime relations, extraction of generalized feature tables, and construction of multiple layered databases. <p> The second category refers to the generalization of a relatively large data relation, which is usually a query-relevant portion of a database, resulted from query processing. The generalization can be performed efficiently by an attribute-oriented induction method <ref> [9, 11] </ref>. Here we present a similar process which extracts a special intermediate generalized relation, prime relation, to facilitate the extraction of different feature tables and the generation of various generalized rules for different purposes of intelligent query answering. <p> The attribute-oriented induction technique avoids inefficient search in tuple-oriented generalization, explores the integration of well-implemented relational operations with the learning-from-examples algorithm, and leads to an easily implementable and highly efficient algorithm for induction in large databases <ref> [9] </ref>. Example 4.1 Suppose a frequently inquired data set in the University database collects the information about computing science students and their associated teaching assistant information. <p> Obviously, the frequently referenced attributes should be preserved in higher layers, and the frequently referenced concept levels should be considered as the candidate concept levels in the construction of higher layers. Steps 2 and 3 are performed in a way similar to the attribute-oriented induction, studied previously <ref> [9, 4] </ref>. <p> The second step involves learning characteristic and discriminant rules using knowledge discovery tools <ref> [9] </ref> or MLDBs [12]. Example 5.6 In answering the query, "find all of the graduate students with excellent GPAs", it is interesting to find the undergraduate students with similar characteristics or the graduate students with weaker GPAs and compare the general characteristics and statistics between these answers. <p> The availability of generalized rules, concept hierarchies and knowledge discovery tools greatly enhance the power of intelligent query answering. First, it expands the spectrum of knowledge queries from inquiring deduction rules to inquiring general regularity of data, such as characteristic rules, discriminant rules, data evolution regularities, etc. <ref> [9] </ref>. Second, it facilitates the query intent analysis since the notions of generalization, aggregation, neighborhood, similarity, etc. can be studied systematically using the generalized knowledge and concept hierarchies. <p> Therefore, more study should be performed on ensuring database security in intelligent query answering in databases augmented with deduction and knowledge discovery components. Based upon our previous study on knowledge discovery in databases <ref> [4, 9] </ref>, a prototyped experimental database learning system, DBLearn, has been constructed [11]. Based on the principles of attribute-oriented induction, experimentation has been performed for knowledge discovery in large databases, such as the NSERC (Natural Sciences and Engineering Research Council of Canada) Grant Information System.
Reference: [10] <author> J. Han and Y. Fu. </author> <title> Dynamic generation and refinement of concept hierarchies for knowledge discovery in databases. </title> <booktitle> In Proc. AAAI'94 Workshop on Knowledge Discovery in Databases (KDD'94), </booktitle> <pages> pages 157-168, </pages> <address> Seattle, WA, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: The information about concept hierarchies can be provided by knowledge engineers or domain experts or be discovered automatically or semi-automatically using knowledge discovery tools based on the statistics of data distribution in databases and the relationships among different attributes <ref> [10] </ref>. Many concept hierarchies are implicitly stored in the database. For example, the hierarchical relationship among "city ", "province" and "country" attributes are usually stored in the database and can be made explicit at the schema level by indicating a part-of-hierarchy: "city province country". <p> For other hierarchies found in the KRDB, modification can be performed dynamically based on the statistics of current relevant data sets and user preference in order to extract interesting rules <ref> [10] </ref>. For example, to extract the interesting relationships between GP A and Birth place, a given hierarchy can be modified dynamically to allow more detailed distributions of Birth places in nearby provinces or countries than remote ones.
Reference: [11] <author> J. Han and Y. Fu. </author> <title> Exploration of the power of attribute-oriented induction in data mining. In U.M. </title> <editor> Fayyad, G. Piatetsky-Shapiro, P. Smyth, and R. Uthurusamy, editors, </editor> <booktitle> Advances in Knowledge Discovery and Data Mining, </booktitle> <pages> pages 399-421. </pages> <publisher> AAAI/MIT Press, </publisher> <year> 1996. </year>
Reference-contexts: The study is based on the premise that efficient, relatively sophisticated knowledge discovery tools will soon become available for large database systems. Such a view has been reinforced by some preliminary studies and experimental results <ref> [8, 23, 9, 1, 3, 18, 11] </ref>. For example, in our previous studies [4, 9, 11], an attribute-oriented induction method has been developed for knowledge discovery in databases. <p> The study is based on the premise that efficient, relatively sophisticated knowledge discovery tools will soon become available for large database systems. Such a view has been reinforced by some preliminary studies and experimental results [8, 23, 9, 1, 3, 18, 11]. For example, in our previous studies <ref> [4, 9, 11] </ref>, an attribute-oriented induction method has been developed for knowledge discovery in databases. The method integrates a machine learning paradigm, especially learning-from-examples techniques, with database operations and provides an efficient way for extraction of generalized data from actual data in databases. <p> The method integrates a machine learning paradigm, especially learning-from-examples techniques, with database operations and provides an efficient way for extraction of generalized data from actual data in databases. A knowledge discovery system prototype, DBLearn <ref> [11] </ref>, has been constructed based on this methodology and has been experimented on several large relational databases with satisfactory performance. <p> Therefore, this study will emphasize more on the impact of generalization-based discovery to intelligent query answering. The techniques studied here are based on one generalization method: attribute-oriented induction developed in our previous studies <ref> [9, 11] </ref>, with an emphasis on the derivation of prime relations, extraction of generalized feature tables, and construction of multiple layered databases. <p> The second category refers to the generalization of a relatively large data relation, which is usually a query-relevant portion of a database, resulted from query processing. The generalization can be performed efficiently by an attribute-oriented induction method <ref> [9, 11] </ref>. Here we present a similar process which extracts a special intermediate generalized relation, prime relation, to facilitate the extraction of different feature tables and the generation of various generalized rules for different purposes of intelligent query answering. <p> Therefore, more study should be performed on ensuring database security in intelligent query answering in databases augmented with deduction and knowledge discovery components. Based upon our previous study on knowledge discovery in databases [4, 9], a prototyped experimental database learning system, DBLearn, has been constructed <ref> [11] </ref>. Based on the principles of attribute-oriented induction, experimentation has been performed for knowledge discovery in large databases, such as the NSERC (Natural Sciences and Engineering Research Council of Canada) Grant Information System. Our experimental results on direct answering of data and knowledge queries are successful with satisfactory performance.
Reference: [12] <author> J. Han, Y. Fu, and R. Ng. </author> <title> Cooperative query answering using multiple-layered databases. </title> <booktitle> In Proc. 2nd Int. Conf. Cooperative Information Systems, </booktitle> <pages> pages 47-58, </pages> <address> Toronto, Canada, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: The rule can be discovered dynamically by a knowledge discovery process from the primitive data [9] or from an intermediate generalized relation <ref> [12] </ref>. 2 3.4 Intelligent answering of knowledge queries Intelligent answering of knowledge queries means that a knowledge query is answered in an intelligent way by analyzing the intent of the query and providing generalized, neighborhood or associated information. <p> those of neighborhood queries, etc. can be realized by extraction of different rules from the corresponding generalized feature table. 4.3 Construction of multiple-layered databases Besides the extraction of characteristic rules, discriminant rules and prime (generalized) relations, an important technique to facilitate intelligent query answering is the construction of multiple-layered databases <ref> [12] </ref>. Although the extraction of the rules or prime relations provides a flexible means for intelligent query answering, it has two drawbacks: (1) the discovered knowledge is often too task-relevant to be readily applied to other situations, and (2) it is often too costly to extract such knowledge dynamically. <p> The second step involves learning characteristic and discriminant rules using knowledge discovery tools [9] or MLDBs <ref> [12] </ref>. Example 5.6 In answering the query, "find all of the graduate students with excellent GPAs", it is interesting to find the undergraduate students with similar characteristics or the graduate students with weaker GPAs and compare the general characteristics and statistics between these answers. <p> Notice that if a join needs to be performed on more than one generalized relation, each of the joining relations must be a key-preserving relation for the join attributes <ref> [12] </ref>. Otherwise, the join has to be performed on its corresponding highest key-preserving layer. 3. Perform corresponding query answering mechanism based on the user's requirement and the query intent analysis. <p> Some information in the layer could be lower than that in the query. Thus generalization should be performed to make each attribute reside at the same concept level as those provided in the query. Moreover, joining on non-key-preserving attributes may lead to information loss <ref> [12] </ref>. Thus, lossless join should be performed. Step 3 performs appropriate query answering based on our discussion in the previous subsections. 2 Example 5.7 Suppose a student is interested in the grade distribution of senior-level science courses.
Reference: [13] <author> J. Han and Z. N. Li. Deductive-ER: </author> <title> Deductive entity-relationship model and its data language. </title> <journal> Information and Software Technology, </journal> <volume> 34 </volume> <pages> 192-204, </pages> <year> 1992. </year>
Reference-contexts: It is defined as follows. 1. Schema, a knowledge-rich database schema, describes the general structure and organization of KRDB including (i) physical and virtual entities, attributes and relationships, and (ii) the organization of rules, integrity constraints and concept hierarchies, based on a deductive entity-relationship data model <ref> [13] </ref>. 2. EDB, an extensional database, consists of a set of extensional data relations. 3. IDB, an intensional database, consists of a set of deduction rules and integrity constraints (ICs). 4. <p> KDT, a set of knowledge discovery tools, performs knowledge discovery efficiently in databases, when necessary. 2 2 The first component, Schema, follows from a deductive entity-relationship model <ref> [13] </ref> which extends an entity-relationship model [5, 28] to incorporate rules, integrity constraints and complex data objects for deductive databases. <p> The details of such a model are described in <ref> [13] </ref>. The second and third components, EDB and IDB, are the same as in deductive databases [29] except that IDB rules can be defined by some nonprimitive data as well.
Reference: [14] <author> R. Hull and R. King. </author> <title> Semantic database modeling: Survey, applications, and research issues. </title> <journal> ACM Comput. Surv., </journal> <volume> 19 </volume> <pages> 201-260, </pages> <year> 1987. </year>
Reference-contexts: Therefore, they interact closely with the major components of the KRDB. 5.1 Analysis of the intent of a query Several interesting methods for query intent analysis have been developed in the studies of intelligent query answering <ref> [14, 15, 19, 7, 26] </ref>. Such analyses are based on the notions of generalization, association, aggregation, concept clustering, etc. Semantic data modeling, classification of topics of interests, and plan analysis and formation are powerful techniques for query intent analysis [15, 19, 7, 26].
Reference: [15] <author> T. Imielinski. </author> <title> Intelligent query answering in rule based systems. </title> <journal> J. Logic Programming, </journal> <volume> 4 </volume> <pages> 229-257, </pages> <year> 1987. </year>
Reference-contexts: Different from most of the previous studies on cooperative query answering <ref> [26, 25, 15, 7, 6, 30] </ref> and querying database knowledge [20] which emphasize on the application or inquiry of deduction rules and integrity constraints in relational or deductive databases, this study extends the domain of study from a deductive database to a knowledge-rich database assisted with generalized knowledge and knowledge discovery <p> rules discovered without going through generalization processes represent data regularities at the primitive concept level, their roles in intelligent query answering are similar to that of deduction rules and/or integrity constraints defined at the primitive concept level, which have been discussed in intelligent query answering in relational or deductive databases <ref> [26, 25, 15, 7, 6] </ref>. Therefore, this study will emphasize more on the impact of generalization-based discovery to intelligent query answering. <p> Therefore, they interact closely with the major components of the KRDB. 5.1 Analysis of the intent of a query Several interesting methods for query intent analysis have been developed in the studies of intelligent query answering <ref> [14, 15, 19, 7, 26] </ref>. Such analyses are based on the notions of generalization, association, aggregation, concept clustering, etc. Semantic data modeling, classification of topics of interests, and plan analysis and formation are powerful techniques for query intent analysis [15, 19, 7, 26]. <p> Such analyses are based on the notions of generalization, association, aggregation, concept clustering, etc. Semantic data modeling, classification of topics of interests, and plan analysis and formation are powerful techniques for query intent analysis <ref> [15, 19, 7, 26] </ref>. When posing a query, different users often have different intentions. For example, when asking the highest monthly balance of an account, a customer and a bank manager are likely to have different intentions. <p> The detailed and concrete answers are provided only by further requests. Lazy evaluation by deduction rules has been studied in deductive database research <ref> [15, 20, 26, 25] </ref>. With the availability of multiple layered databases or stored generalized rules, it is interesting to examine how to perform lazy evaluation using generalized rules and multiple layered database.
Reference: [16] <author> K. A. Kaufman, R. S. Michalski, and L. Kerschberg. </author> <title> Mining for knowledge in databases: Goals and general description of the INLEN system. </title> <editor> In G. Piatetsky-Shapiro and W. J. Frawley, editors, </editor> <booktitle> Knowledge Discovery in Databases, </booktitle> <pages> pages 449-462. </pages> <publisher> AAAI/MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: A knowledge discovery system prototype, DBLearn [11], has been constructed based on this methodology and has been experimented on several large relational databases with satisfactory performance. Other studies, such as <ref> [8, 16, 23] </ref>, have also developed interesting knowledge discovery techniques and systems/prototypes, such as INLEN [18], KDW+ [24], Quest [1], IMACS [3], Datalogic/R [31], 49er [32], etc., which demonstrates the promising future of knowledge discovery. <p> This can be performed by an incremental learning algorithm provided in knowledge discovery tools [8, 9]. The last component, KDT, consists of a set of knowledge discovery tools, which could be a set of knowledge discovery algorithms or a database-oriented knowledge discovery subsystem, such as INLEN <ref> [16] </ref>, KDW++ [8], DBLearn [9], etc. Since a knowledge-rich database stores only a small portion of all of the possible generalized knowledge, it is often necessary to evoke a knowledge discovery process dynamically and extract general regularity from a specific set of data relevant to the query.
Reference: [17] <author> R. S. Michalski. </author> <title> A theory and methodology of inductive learning. </title> <editor> In Michalski et al., editor, </editor> <booktitle> Machine Learning: An Artificial Intelligence Approach, </booktitle> <volume> Vol. 1, </volume> <pages> pages 83-134. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1983. </year>
Reference-contexts: Derive the prime relation, R p , by merging identical tuples in R 0 (with the number of identical tuples registered in count). 2 The generalization is essentially based on the generalization rules, dropping conditions and climbing generalization trees, in learning-from-examples <ref> [17] </ref>.
Reference: [18] <author> R. S. Michalski, L. Kerschberg, K. A. Kaufman, and J.S. Ribeiro. </author> <title> Mining for knowledge in databases: The INLEN architecture, initial implementation and first results. </title> <journal> J. Int. Info. Systems, </journal> <volume> 1 </volume> <pages> 85-114, </pages> <year> 1992. </year>
Reference-contexts: The study is based on the premise that efficient, relatively sophisticated knowledge discovery tools will soon become available for large database systems. Such a view has been reinforced by some preliminary studies and experimental results <ref> [8, 23, 9, 1, 3, 18, 11] </ref>. For example, in our previous studies [4, 9, 11], an attribute-oriented induction method has been developed for knowledge discovery in databases. <p> A knowledge discovery system prototype, DBLearn [11], has been constructed based on this methodology and has been experimented on several large relational databases with satisfactory performance. Other studies, such as [8, 16, 23], have also developed interesting knowledge discovery techniques and systems/prototypes, such as INLEN <ref> [18] </ref>, KDW+ [24], Quest [1], IMACS [3], Datalogic/R [31], 49er [32], etc., which demonstrates the promising future of knowledge discovery. <p> of data queries and leave the in-depth discussion of the mechanisms for knowledge queries to future studies. 6 4 Knowledge Discovery Methods and Tools for Intelligent Query Answering Many knowledge discovery methods have been developed in recent studies for mining knowledge from data [8], ranging from database search [1], generalization <ref> [9, 18] </ref>, knowledge representation [2], to mathematical or statistical modeling [22, 31], etc. Based on the kinds of knowledge to be discovered from data, knowledge discovery tools can be classified into two major classes: (1) generalization-based discovery, and (2) discovering knowledge without generalization, as shown in Fig. 6.
Reference: [19] <author> A. Motro. </author> <title> Using integrity constraints to provide intensional responses to relational queries. </title> <booktitle> In Proc. 15th Int. Conf. Very Large Data Bases, </booktitle> <pages> pages 237-246, </pages> <address> Amsterdam, Netherlands, </address> <month> Aug. </month> <year> 1989. </year>
Reference-contexts: Therefore, they interact closely with the major components of the KRDB. 5.1 Analysis of the intent of a query Several interesting methods for query intent analysis have been developed in the studies of intelligent query answering <ref> [14, 15, 19, 7, 26] </ref>. Such analyses are based on the notions of generalization, association, aggregation, concept clustering, etc. Semantic data modeling, classification of topics of interests, and plan analysis and formation are powerful techniques for query intent analysis [15, 19, 7, 26]. <p> Such analyses are based on the notions of generalization, association, aggregation, concept clustering, etc. Semantic data modeling, classification of topics of interests, and plan analysis and formation are powerful techniques for query intent analysis <ref> [15, 19, 7, 26] </ref>. When posing a query, different users often have different intentions. For example, when asking the highest monthly balance of an account, a customer and a bank manager are likely to have different intentions.
Reference: [20] <author> A. Motro and Q. Yuan. </author> <title> Querying database knowledge. </title> <booktitle> In Proc. 1990 ACM-SIGMOD Int. Conf. Management of Data, </booktitle> <pages> pages 173-183, </pages> <address> Atlantic City, NJ, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: Different from most of the previous studies on cooperative query answering [26, 25, 15, 7, 6, 30] and querying database knowledge <ref> [20] </ref> which emphasize on the application or inquiry of deduction rules and integrity constraints in relational or deductive databases, this study extends the domain of study from a deductive database to a knowledge-rich database assisted with generalized knowledge and knowledge discovery tools. <p> query answering Intelligent query answering a data query is to find concrete data stored in a database, which corresponds to a basic retrieval statement in a database system; whereas a knowledge query is to find rules and other kinds of knowledge in the database, which corresponds to querying database knowledge <ref> [20] </ref> including deduction rules, integrity constraints, generalized rules and other regularities. For example, "retrieving all of the students who took the course CMPT-454 in 1994 " is a data query; whereas "describing the general characteristics of those students" is a knowledge query. <p> Different syntactic specifications can be adopted to distinguish knowledge queries from data queries. A data query is to retrieve the data elements that satisfy a condition ; whereas a knowledge query is to describe the data elements that satisfy . Following the notion proposed by Motro and Yuan <ref> [20] </ref>, data queries and knowledge queries are distinguished in syntax by starting the former with retrieve but the latter with describe. Further, to distinguish different types of knowledge being inquired, concrete keywords such as generalized rule, deduction rule, concept hierarchy, integrity constraint, etc. can be used after the keyword describe. <p> The detailed and concrete answers are provided only by further requests. Lazy evaluation by deduction rules has been studied in deductive database research <ref> [15, 20, 26, 25] </ref>. With the availability of multiple layered databases or stored generalized rules, it is interesting to examine how to perform lazy evaluation using generalized rules and multiple layered database.
Reference: [21] <author> D. E. O'Leary. </author> <title> Knowledge discovery as a threat to database security. </title> <editor> In G. Piatetsky-Shapiro and W. J. Frawley, editors, </editor> <booktitle> Knowledge Discovery in Databases, </booktitle> <pages> pages 507-516. </pages> <publisher> AAAI/MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: These questions indicate what kind of intelligent answers are expected. Then the corresponding intelligent query-answering mechanisms can be evoked. The second problem indicates that with the extended power of intelligent query answering, some sensitive or confidential information could be disclosed inappropriately to someone who should not know it <ref> [21] </ref>. One technique which may enhance the database security is to associate with a user model certain kinds of constraints on accessing rights.
Reference: [22] <author> G. Piatetsky-Shapiro. </author> <title> Discovery, analysis, and presentation of strong rules. </title> <editor> In G. Piatetsky-Shapiro and W. J. Frawley, editors, </editor> <booktitle> Knowledge Discovery in Databases, </booktitle> <pages> pages 229-238. </pages> <publisher> AAAI/MIT Press, </publisher> <year> 1991. </year> <month> 19 </month>
Reference-contexts: mechanisms for knowledge queries to future studies. 6 4 Knowledge Discovery Methods and Tools for Intelligent Query Answering Many knowledge discovery methods have been developed in recent studies for mining knowledge from data [8], ranging from database search [1], generalization [9, 18], knowledge representation [2], to mathematical or statistical modeling <ref> [22, 31] </ref>, etc. Based on the kinds of knowledge to be discovered from data, knowledge discovery tools can be classified into two major classes: (1) generalization-based discovery, and (2) discovering knowledge without generalization, as shown in Fig. 6.
Reference: [23] <author> G. Piatetsky-Shapiro and W. J. Frawley. </author> <title> Knowledge Dis--covery in Databases. </title> <publisher> AAAI/MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: IRIS-2 Grant HMI-5 from IRIS/PRECARN (Networks of Centres of Excellence Program of the Government of Canada), and a research grant from the Centre for Systems Science of Simon Fraser University. mation from the data stored in databases [8], has become an active area in both database and machine learning researches <ref> [27, 23] </ref>. With the rapid development of knowledge discovery techniques, it is natural to study the applications of the knowledge discovery technology in querying database knowledge and the impact of the technology to the development of intelligent query answering mechanisms in database systems. <p> The study is based on the premise that efficient, relatively sophisticated knowledge discovery tools will soon become available for large database systems. Such a view has been reinforced by some preliminary studies and experimental results <ref> [8, 23, 9, 1, 3, 18, 11] </ref>. For example, in our previous studies [4, 9, 11], an attribute-oriented induction method has been developed for knowledge discovery in databases. <p> A knowledge discovery system prototype, DBLearn [11], has been constructed based on this methodology and has been experimented on several large relational databases with satisfactory performance. Other studies, such as <ref> [8, 16, 23] </ref>, have also developed interesting knowledge discovery techniques and systems/prototypes, such as INLEN [18], KDW+ [24], Quest [1], IMACS [3], Datalogic/R [31], 49er [32], etc., which demonstrates the promising future of knowledge discovery.
Reference: [24] <author> G. Piatetsky-Shapiro and C.J. Matheus. </author> <title> Knowledge discovery workbench for exploring business databases. </title> <journal> Int. J. Intell. Syst., </journal> <volume> 7 </volume> <pages> 675-686, </pages> <year> 1992. </year>
Reference-contexts: A knowledge discovery system prototype, DBLearn [11], has been constructed based on this methodology and has been experimented on several large relational databases with satisfactory performance. Other studies, such as [8, 16, 23], have also developed interesting knowledge discovery techniques and systems/prototypes, such as INLEN [18], KDW+ <ref> [24] </ref>, Quest [1], IMACS [3], Datalogic/R [31], 49er [32], etc., which demonstrates the promising future of knowledge discovery.
Reference: [25] <author> A. Pirotte and D. Roelants. </author> <title> Constraints for improving the generation of intensional answers in a deductive database. </title> <booktitle> In Proc. 5th Int. Conf. Data Engineering, </booktitle> <pages> pages 652-659, </pages> <address> Los Angeles, CA, </address> <month> Feb. </month> <year> 1989. </year>
Reference-contexts: Different from most of the previous studies on cooperative query answering <ref> [26, 25, 15, 7, 6, 30] </ref> and querying database knowledge [20] which emphasize on the application or inquiry of deduction rules and integrity constraints in relational or deductive databases, this study extends the domain of study from a deductive database to a knowledge-rich database assisted with generalized knowledge and knowledge discovery <p> rules discovered without going through generalization processes represent data regularities at the primitive concept level, their roles in intelligent query answering are similar to that of deduction rules and/or integrity constraints defined at the primitive concept level, which have been discussed in intelligent query answering in relational or deductive databases <ref> [26, 25, 15, 7, 6] </ref>. Therefore, this study will emphasize more on the impact of generalization-based discovery to intelligent query answering. <p> The detailed and concrete answers are provided only by further requests. Lazy evaluation by deduction rules has been studied in deductive database research <ref> [15, 20, 26, 25] </ref>. With the availability of multiple layered databases or stored generalized rules, it is interesting to examine how to perform lazy evaluation using generalized rules and multiple layered database.
Reference: [26] <author> C-D. Shum and R. Muntz. </author> <title> Implicit representation for extensional answers. </title> <booktitle> In Proc. 2nd Int. Conf. Expert Database Systems, </booktitle> <pages> pages 497-522, </pages> <address> Vienna, VA, </address> <month> April </month> <year> 1988. </year>
Reference-contexts: Different from most of the previous studies on cooperative query answering <ref> [26, 25, 15, 7, 6, 30] </ref> and querying database knowledge [20] which emphasize on the application or inquiry of deduction rules and integrity constraints in relational or deductive databases, this study extends the domain of study from a deductive database to a knowledge-rich database assisted with generalized knowledge and knowledge discovery <p> rules discovered without going through generalization processes represent data regularities at the primitive concept level, their roles in intelligent query answering are similar to that of deduction rules and/or integrity constraints defined at the primitive concept level, which have been discussed in intelligent query answering in relational or deductive databases <ref> [26, 25, 15, 7, 6] </ref>. Therefore, this study will emphasize more on the impact of generalization-based discovery to intelligent query answering. <p> Therefore, they interact closely with the major components of the KRDB. 5.1 Analysis of the intent of a query Several interesting methods for query intent analysis have been developed in the studies of intelligent query answering <ref> [14, 15, 19, 7, 26] </ref>. Such analyses are based on the notions of generalization, association, aggregation, concept clustering, etc. Semantic data modeling, classification of topics of interests, and plan analysis and formation are powerful techniques for query intent analysis [15, 19, 7, 26]. <p> Such analyses are based on the notions of generalization, association, aggregation, concept clustering, etc. Semantic data modeling, classification of topics of interests, and plan analysis and formation are powerful techniques for query intent analysis <ref> [15, 19, 7, 26] </ref>. When posing a query, different users often have different intentions. For example, when asking the highest monthly balance of an account, a customer and a bank manager are likely to have different intentions. <p> The detailed and concrete answers are provided only by further requests. Lazy evaluation by deduction rules has been studied in deductive database research <ref> [15, 20, 26, 25] </ref>. With the availability of multiple layered databases or stored generalized rules, it is interesting to examine how to perform lazy evaluation using generalized rules and multiple layered database.
Reference: [27] <author> A. Silberschatz, M. Stonebraker, and J. D. Ullman. </author> <title> Database systems: Achievements and opportunities. </title> <journal> Comm. ACM, </journal> <volume> 34 </volume> <pages> 94-109, </pages> <year> 1991. </year>
Reference-contexts: IRIS-2 Grant HMI-5 from IRIS/PRECARN (Networks of Centres of Excellence Program of the Government of Canada), and a research grant from the Centre for Systems Science of Simon Fraser University. mation from the data stored in databases [8], has become an active area in both database and machine learning researches <ref> [27, 23] </ref>. With the rapid development of knowledge discovery techniques, it is natural to study the applications of the knowledge discovery technology in querying database knowledge and the impact of the technology to the development of intelligent query answering mechanisms in database systems.
Reference: [28] <author> T. J. Teorey, D. Yang, and J. P. Fry. </author> <title> A logical design methodology for relational databases using the extended entity-relationship model. </title> <journal> ACM Comput. Surv., </journal> <volume> 18 </volume> <pages> 197-222, </pages> <year> 1986. </year>
Reference-contexts: KDT, a set of knowledge discovery tools, performs knowledge discovery efficiently in databases, when necessary. 2 2 The first component, Schema, follows from a deductive entity-relationship model [13] which extends an entity-relationship model <ref> [5, 28] </ref> to incorporate rules, integrity constraints and complex data objects for deductive databases.
Reference: [29] <author> J. D. Ullman. </author> <title> Principles of Database and Knowledge-Base Systems, </title> <journal> Vols. </journal> <volume> 1 & 2. </volume> <publisher> Computer Science Press, </publisher> <year> 1989. </year>
Reference-contexts: However, the same rule, if stated as a deduction rule or an integrity constraint, will reject the possibility of allowing an undergraduate student to serve as a teaching assistant in a consistent database. As an extension to the logic data model proposed in deductive database research <ref> [29] </ref>, a knowledge-rich data model is constructed for databases with both deduction and knowledge discovery capabilities. <p> The details of such a model are described in [13]. The second and third components, EDB and IDB, are the same as in deductive databases <ref> [29] </ref> except that IDB rules can be defined by some nonprimitive data as well. Notice that a rule (or an integrity constraint) in the IDB can be first discovered by a knowledge discovery process and then be recognized and stored in the IDB as a regular rule or integrity constraint.
Reference: [30] <author> C. T. Yu and W. Sun. </author> <title> Automatic knowledge acquisition and maintenance for semantic query optimization. </title> <journal> IEEE Trans. Knowledge and Data Engineering, </journal> <volume> 1 </volume> <pages> 362-375, </pages> <year> 1989. </year>
Reference-contexts: Different from most of the previous studies on cooperative query answering <ref> [26, 25, 15, 7, 6, 30] </ref> and querying database knowledge [20] which emphasize on the application or inquiry of deduction rules and integrity constraints in relational or deductive databases, this study extends the domain of study from a deductive database to a knowledge-rich database assisted with generalized knowledge and knowledge discovery
Reference: [31] <author> W. Ziarko, R. Golan, and D. Edwards. </author> <title> An application of Datalogic/R knowledge discovery tool to identify strong predictive rules in stock market data. </title> <booktitle> In Proc. AAAI-93 Workshop on Knowledge Discovery in Databases, </booktitle> <pages> pages 93-101, </pages> <address> Washington DC, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: Other studies, such as [8, 16, 23], have also developed interesting knowledge discovery techniques and systems/prototypes, such as INLEN [18], KDW+ [24], Quest [1], IMACS [3], Datalogic/R <ref> [31] </ref>, 49er [32], etc., which demonstrates the promising future of knowledge discovery. <p> mechanisms for knowledge queries to future studies. 6 4 Knowledge Discovery Methods and Tools for Intelligent Query Answering Many knowledge discovery methods have been developed in recent studies for mining knowledge from data [8], ranging from database search [1], generalization [9, 18], knowledge representation [2], to mathematical or statistical modeling <ref> [22, 31] </ref>, etc. Based on the kinds of knowledge to be discovered from data, knowledge discovery tools can be classified into two major classes: (1) generalization-based discovery, and (2) discovering knowledge without generalization, as shown in Fig. 6.
Reference: [32] <author> J. Zytkow and J. Baker. </author> <title> Interactive mining of regularities in databases. </title> <editor> In G. Piatetsky-Shapiro and W. J. Frawley, editors, </editor> <booktitle> Knowledge Discovery in Databases, </booktitle> <pages> pages 31-54. </pages> <publisher> AAAI/MIT Press, </publisher> <year> 1991. </year> <month> 20 </month>
Reference-contexts: Other studies, such as [8, 16, 23], have also developed interesting knowledge discovery techniques and systems/prototypes, such as INLEN [18], KDW+ [24], Quest [1], IMACS [3], Datalogic/R [31], 49er <ref> [32] </ref>, etc., which demonstrates the promising future of knowledge discovery.
References-found: 32

