URL: ftp://olympos.cs.umd.edu/pub/TechReports/ndquadtrees.ps.Z
Refering-URL: http://www.cs.umd.edu/~christos/jpub.html
Root-URL: 
Title: Analysis of the n-dimensional quadtree decomposition for arbitrary hyper-rectangles  
Author: Christos Faloutsos H.V. Jagadish Yannis Manolopoulos 
Keyword: Categories and Subject Descriptors: E.2 [Data Structures]: Trees; H.2.2 [Database Management]: Physical Design access methods; I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling Hierarchy and geometric transformations; General Terms: Computational Geometry, Performance, Theory. Additional Keywords: regular decomposition, geometric data, quadtrees, oct-trees, GIS, robotics.  
Note: His work was partially supported by the National Science Foundation (IRI-8958546, IRI-9205273), with matching funds from EMPRESS Software  
Address: College Park, MD 20742  Murray Hill, NJ 07974  Thessaloniki, Greece 54006  College Park, MD  
Affiliation: Dept. of Computer Science and Inst. for Systems Research (ISR) University of Maryland,  AT&T Bell Laboratories  Department of Informatics, Aristotle University,  Inc. and Thinking Machines Inc. Research performed with the Dept. of Computer Science and the Inst. for Systems Research (ISR) at the University of Maryland,  
Abstract: We give a closed-form expression for the average number of n-dimensional quadtree nodes (`pieces' or `blocks') required by an n-dimensional hyper-rectangle aligned with the axes. Our formula includes as special cases the formulae of previous efforts for 2-dimensional spaces [8]. It also agrees with theoretical and empirical results that the number of blocks depends on the hyper-surface of the hyper-rectangle and not on its hyper-volume. The practical use of the derived formula is that it allows the estimation of the space requirements of the n-dimensional quadtree decomposition. Quadtrees are used extensively in 2-dimensional spaces (geographic information systems and spatial databases in general), as well in higher dimensionality spaces (as oct-trees for 3-dimensional spaces, e.g. in graphics, robotics and 3-dimensional medical images [2]). Our formula permits the estimation of the space requirements for data hyper-rectangles when stored in an index structure like a (n-dimensional) quadtree, as well as the estimation of the search time for query hyper-rectangles. A theoretical contribution of the paper is the observation that the number of blocks is a piece-wise linear function of the sides of the hyper-rectangle.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Walid G. Aref and Hanan Samet. </author> <title> Optimization strategies for spatial query processing. </title> <booktitle> Proc. of VLDB (Very Large Data Bases), </booktitle> <pages> pages 81-90, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: In all these cases, the number of pieces that a hyper-rectangle decomposes into clearly affects the space overhead and the search time. Therefore, it is essential for query optimization in spatial/temporal databases <ref> [1] </ref>. The proposed methodology is as follows: 1. Find the formulae when the sides of the hyper-rectangles are of the form 2 m i 1, for every dimension i = 1; 2; :::; n. Let's call these hyper-rectangles magic.
Reference: [2] <author> Manish Arya, William Cody, Christos Faloutsos, Joel Richardson, and Arthur Toga. Qbism: </author> <title> Extending a dbms to support 3d medical images. </title> <booktitle> Tenth Int. Conf. on Data Engineering (ICDE), </booktitle> <pages> pages 314-325, </pages> <month> February </month> <year> 1994. </year>
Reference-contexts: Many methods have been suggested to store such a collection of data, utilizing the hierar chical decomposition approach (e.g. k-d trees [4], quadtrees and their variations [11]). 2 * In spatio-temporal and scientific databases, where time introduces one more axis [16]. * In image databases, e.g., <ref> [2] </ref>, where 3-dimensional brain scans have to be stored. Regions in these brain scans can be encoded using oct-trees, to save space and to achieve faster response on range queries. * In Grand-Challenge databases [5] (e.g., with meteorological, environmental, sensor data e.t.c.).
Reference: [3] <author> D. Ballard and C. Brown. </author> <title> Computer Vision. </title> <publisher> Prentice Hall, </publisher> <year> 1982. </year>
Reference-contexts: For example, in this figure the square [0,2]fi [2,4] is a block, while the square [1,3]fi [2,4] is not. Such a hierarchical decomposition approach has been used in several areas, including: * In graphics and robotics (3-dimensional space) <ref> [3, ?] </ref>. * In geographic information systems and spatial databases. The TIGER project at the U.S. Bureau of Census uses a linear quadtree representation to store all the points of interest in the map of U.S.A. [22].
Reference: [4] <author> J.L. Bentley. </author> <title> Multidimensional binary search trees used for associative searching. </title> <journal> CACM, </journal> <volume> 18(9) </volume> <pages> 509-517, </pages> <month> September </month> <year> 1975. </year>
Reference-contexts: Many methods have been suggested to store such a collection of data, utilizing the hierar chical decomposition approach (e.g. k-d trees <ref> [4] </ref>, quadtrees and their variations [11]). 2 * In spatio-temporal and scientific databases, where time introduces one more axis [16]. * In image databases, e.g., [2], where 3-dimensional brain scans have to be stored.
Reference: [5] <institution> Mathematical Committee on Physical and NSF Engineering Sciences. Grand Challenges: High Performance Computing and Communications. National Science Foundation, </institution> <year> 1992. </year> <booktitle> The FY 1992 U.S. Research and Development Program. </booktitle> <pages> 18 </pages>
Reference-contexts: Regions in these brain scans can be encoded using oct-trees, to save space and to achieve faster response on range queries. * In Grand-Challenge databases <ref> [5] </ref> (e.g., with meteorological, environmental, sensor data e.t.c.).
Reference: [6] <author> C.R. Dyer. </author> <title> The space efficiency of quadtrees. </title> <booktitle> Computer Graphics and Image Processing, </booktitle> <address> 19(4):335--348, </address> <month> August </month> <year> 1982. </year>
Reference-contexts: The problem we examine here is the following: Given a hyper-rectangle of size s 1 fi s 2 fi :::s n , Find the number of blocks that it will span on the average. Previous attempts have been restricted to 2-dimensional rectangles: Dyer in <ref> [6] </ref> presented an analysis for the best, worst and average case of a square of size 2 n fi 2 n , giving an approximate formula for the average case. <p> In other words: s i K for i = 1; :::; n. * The hyper-rectangle wraps around the edges. This assumption has been used in all the previous analyses of quadtrees <ref> [6, 8] </ref>. Some important observations, that allow recursive decomposition of the problem: Observation 1 - `Slicing'. If a hyper-rectangle starts at an odd number, then we can `slice off ' the 4 left hyper-plane. <p> There are two interesting observations: * Our approach (Theorem 2 and Eq. 8) generalizes all the older approaches on 2-dimensional rect angles <ref> [6, 8, 20] </ref>. * It generalizes the observation of Hunter and Steiglitz [13] that the number of quadtree blocks is proportional to the perimeter of the polygon.
Reference: [7] <author> C. Faloutsos. </author> <title> Gray codes for partial match and range queries. </title> <journal> IEEE Trans. on Software Engineering, </journal> <volume> 14(10) </volume> <pages> 1381-1393, </pages> <month> October </month> <year> 1988. </year> <note> early version available as UMIACS-TR-87-4, also CS-TR-1796. </note>
Reference-contexts: From the theoretical point of view, it proposes a methodology which we believe will be useful in the analysis of other quadtree-related methods (e.g., methods using space-filling curves, such as the z-ordering [17], Gray codes <ref> [7] </ref>, or the Hilbert curve [10]). The methodology consists of two steps: Step 1 solve the problem for the `magic' rectangles (which is easy) Step 2 show that the formula for an arbitrary rectangle can be derived by linear interpolation from suitable `magic' rectangles.
Reference: [8] <author> C. Faloutsos. </author> <title> Analytical results on the quadtree decomposition of arbitrary rectangles. </title> <journal> Pattern Recognition Letters, </journal> <volume> 13(1) </volume> <pages> 31-40, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: In a previous paper <ref> [8] </ref>, we generalized some of these formulae for arbitrary (2-dimensional) rectangles. Analysis of the closely-related Peano and Hilbert space filling curves for 2-dimensional spaces was presented in [15] and [19]. In this paper, we generalize the formulae for n-dimensional rectangles. <p> In other words: s i K for i = 1; :::; n. * The hyper-rectangle wraps around the edges. This assumption has been used in all the previous analyses of quadtrees <ref> [6, 8] </ref>. Some important observations, that allow recursive decomposition of the problem: Observation 1 - `Slicing'. If a hyper-rectangle starts at an odd number, then we can `slice off ' the 4 left hyper-plane. <p> Following the steps of the previous section, we first calculate the number of blocks for any magic rectangular object, and then we give exact formulae for any (non-magic) rectangular object. 5.1 2-dimensional rectangles This case has been analyzed in <ref> [8] </ref>. Here, we show how those results can be derived as special cases of the Theorems and Lemmas of the previous section. Lemma 8. <p> There are two interesting observations: * Our approach (Theorem 2 and Eq. 8) generalizes all the older approaches on 2-dimensional rect angles <ref> [6, 8, 20] </ref>. * It generalizes the observation of Hunter and Steiglitz [13] that the number of quadtree blocks is proportional to the perimeter of the polygon.
Reference: [9] <author> C. Faloutsos and Y. Rong. </author> <title> Dot: a spatial access method using fractals. </title> <booktitle> In IEEE Data Engineering Conference, </booktitle> <pages> pages 152-159, </pages> <address> Kobe, Japan, </address> <month> April </month> <year> 1991. </year> <note> early version available as UMIACS-TR-89-31, CS-TR-2214. </note>
Reference-contexts: In general, these databases contain large multi-dimensional arrays, (e.g., tuples of the form (x; y; z; t; temperature)) which can be stored in some multi-resolution, hierarchical fashion, clustering re lated (i.e., nearby) points together. * Whenever a transformation is used (e.g., a 2-dimensional rectangle corresponds to a 4-dimensional point <ref> [9, 12] </ref>; a polyhedron is mapped to a high-dimensionality point [14]). The problem we examine here is the following: Given a hyper-rectangle of size s 1 fi s 2 fi :::s n , Find the number of blocks that it will span on the average.
Reference: [10] <author> C. Faloutsos and S. Roseman. </author> <title> Fractals for secondary key retrieval. </title> <booktitle> Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems (PODS), </booktitle> <pages> pages 247-252, </pages> <month> March </month> <year> 1989. </year> <note> also available as UMIACS-TR-89-47 and CS-TR-2242. </note>
Reference-contexts: From the theoretical point of view, it proposes a methodology which we believe will be useful in the analysis of other quadtree-related methods (e.g., methods using space-filling curves, such as the z-ordering [17], Gray codes [7], or the Hilbert curve <ref> [10] </ref>). The methodology consists of two steps: Step 1 solve the problem for the `magic' rectangles (which is easy) Step 2 show that the formula for an arbitrary rectangle can be derived by linear interpolation from suitable `magic' rectangles.
Reference: [11] <author> R.A. Finkel and J.L. Bentley. </author> <title> Quadtrees: a data structure for retrieval on composite keys. </title> <journal> ACTA Informatica, </journal> <volume> 4(1) </volume> <pages> 1-9, </pages> <year> 1974. </year>
Reference-contexts: Many methods have been suggested to store such a collection of data, utilizing the hierar chical decomposition approach (e.g. k-d trees [4], quadtrees and their variations <ref> [11] </ref>). 2 * In spatio-temporal and scientific databases, where time introduces one more axis [16]. * In image databases, e.g., [2], where 3-dimensional brain scans have to be stored.
Reference: [12] <author> K. Hinrichs and J. Nievergelt. </author> <title> The grid file: a data structure to support proximity queries on spatial objects. </title> <booktitle> Proc. of the WG'83 (Intern. Workshop on Graph Theoretic Concepts in Computer Science), </booktitle> <pages> pages 100-113, </pages> <year> 1983. </year>
Reference-contexts: In general, these databases contain large multi-dimensional arrays, (e.g., tuples of the form (x; y; z; t; temperature)) which can be stored in some multi-resolution, hierarchical fashion, clustering re lated (i.e., nearby) points together. * Whenever a transformation is used (e.g., a 2-dimensional rectangle corresponds to a 4-dimensional point <ref> [9, 12] </ref>; a polyhedron is mapped to a high-dimensionality point [14]). The problem we examine here is the following: Given a hyper-rectangle of size s 1 fi s 2 fi :::s n , Find the number of blocks that it will span on the average.
Reference: [13] <author> G.M. Hunter and K. Steiglitz. </author> <title> Operations on images using quad trees. </title> <journal> IEEE Trans. on PAMI, </journal> <volume> PAMI-1(2):145-153, </volume> <month> April </month> <year> 1979. </year>
Reference-contexts: For 2-d space, which is of much interest, we obtain, from Eq. 5 with n = 2: b (2 m 1; 2 m 1) 2 fi 2 fi (2 m 1) = S which agrees with the result of Hunter and Steiglitz <ref> [13] </ref>, stating that the number of quadtree nodes for a polygon is proportional to its perimeter. 3.2 Extension to any magic hyper-rectangle For a magic hyper-rectangle, without loss of generality, let s 1 = 2 m 1 be its smallest side. <p> There are two interesting observations: * Our approach (Theorem 2 and Eq. 8) generalizes all the older approaches on 2-dimensional rect angles [6, 8, 20]. * It generalizes the observation of Hunter and Steiglitz <ref> [13] </ref> that the number of quadtree blocks is proportional to the perimeter of the polygon. Our formula shows that, for 2-dimensional rectangles, the number of quadtree blocks is approximately the perimeter of the rectangle, while for higher dimensionalities n 1, it is roughly half of the hyper-surface.
Reference: [14] <author> H. V. Jagadish. </author> <title> Spatial search with polyhedra. </title> <booktitle> Proc. Sixth IEEE Int'l Conf. on Data Engineering, </booktitle> <month> February </month> <year> 1990. </year>
Reference-contexts: tuples of the form (x; y; z; t; temperature)) which can be stored in some multi-resolution, hierarchical fashion, clustering re lated (i.e., nearby) points together. * Whenever a transformation is used (e.g., a 2-dimensional rectangle corresponds to a 4-dimensional point [9, 12]; a polyhedron is mapped to a high-dimensionality point <ref> [14] </ref>). The problem we examine here is the following: Given a hyper-rectangle of size s 1 fi s 2 fi :::s n , Find the number of blocks that it will span on the average.
Reference: [15] <author> H.V. Jagadish. </author> <title> Linear clustering of objects with multiple attributes. </title> <booktitle> ACM SIGMOD Conf., </booktitle> <pages> pages 332-342, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: In a previous paper [8], we generalized some of these formulae for arbitrary (2-dimensional) rectangles. Analysis of the closely-related Peano and Hilbert space filling curves for 2-dimensional spaces was presented in <ref> [15] </ref> and [19]. In this paper, we generalize the formulae for n-dimensional rectangles. The derived formulae are useful whenever a hierarchical decomposition is used for higher-dimensionality spaces, either for data hyper-rectangles, or for query hyper-rectangles.
Reference: [16] <author> Curtis P. Kolovson and Michael Stonebraker. </author> <title> Segment indexes: Dynamic indexing techniques for multi-dimensional interval data. </title> <booktitle> Proc. ACM SIGMOD, </booktitle> <pages> pages 138-147, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: Many methods have been suggested to store such a collection of data, utilizing the hierar chical decomposition approach (e.g. k-d trees [4], quadtrees and their variations [11]). 2 * In spatio-temporal and scientific databases, where time introduces one more axis <ref> [16] </ref>. * In image databases, e.g., [2], where 3-dimensional brain scans have to be stored. Regions in these brain scans can be encoded using oct-trees, to save space and to achieve faster response on range queries. * In Grand-Challenge databases [5] (e.g., with meteorological, environmental, sensor data e.t.c.).
Reference: [17] <author> J. Orenstein. </author> <title> Spatial query processing in an object-oriented database system. </title> <booktitle> Proc. ACM SIGMOD, </booktitle> <pages> pages 326-336, </pages> <month> May </month> <year> 1986. </year>
Reference-contexts: From the theoretical point of view, it proposes a methodology which we believe will be useful in the analysis of other quadtree-related methods (e.g., methods using space-filling curves, such as the z-ordering <ref> [17] </ref>, Gray codes [7], or the Hilbert curve [10]). The methodology consists of two steps: Step 1 solve the problem for the `magic' rectangles (which is easy) Step 2 show that the formula for an arbitrary rectangle can be derived by linear interpolation from suitable `magic' rectangles.
Reference: [18] <author> J.A. Orenstein and F.A. Manola. </author> <title> Probe spatial data modeling and query processing in an image database application. </title> <journal> IEEE Trans. on Software Engineering, </journal> <volume> 14(5) </volume> <pages> 611-629, </pages> <month> May </month> <year> 1988. </year> <month> 19 </month>
Reference-contexts: A similar approach has also been used by Shaffer in the QUILT system for geographic and spatial databases [21], as well as by Orenstein in the extensible data base management system PROBE <ref> [18] </ref>. * In traditional databases, where records with n attributes correspond to points in an n-dimensional space.
Reference: [19] <author> Yi Rong and Christos Faloutsos. </author> <title> Analysis of the clustering property of peano curves. </title> <type> Techn. Report CS-TR-2792, </type> <institution> UMIACS-TR-91-151, Univ. of Maryland, </institution> <month> December </month> <year> 1991. </year>
Reference-contexts: In a previous paper [8], we generalized some of these formulae for arbitrary (2-dimensional) rectangles. Analysis of the closely-related Peano and Hilbert space filling curves for 2-dimensional spaces was presented in [15] and <ref> [19] </ref>. In this paper, we generalize the formulae for n-dimensional rectangles. The derived formulae are useful whenever a hierarchical decomposition is used for higher-dimensionality spaces, either for data hyper-rectangles, or for query hyper-rectangles.
Reference: [20] <author> C.A. Shaffer. </author> <title> A formula for computing the number of quadtree node fragments created by a shift. </title> <journal> Pattern Recognition Letters, </journal> <volume> 7(1) </volume> <pages> 45-49, </pages> <month> January </month> <year> 1988. </year>
Reference-contexts: Previous attempts have been restricted to 2-dimensional rectangles: Dyer in [6] presented an analysis for the best, worst and average case of a square of size 2 n fi 2 n , giving an approximate formula for the average case. Shaffer in <ref> [20] </ref> gives a closed formula for the exact number of blocks that such a square requires when anchored at a given position (x; y); he also gives the formula for the average number of blocks for such squares (averaged over all the possible positions). <p> There are two interesting observations: * Our approach (Theorem 2 and Eq. 8) generalizes all the older approaches on 2-dimensional rect angles <ref> [6, 8, 20] </ref>. * It generalizes the observation of Hunter and Steiglitz [13] that the number of quadtree blocks is proportional to the perimeter of the polygon.
Reference: [21] <author> C.A. Shaffer, H. Samet, and R.C. Nelson. Quilt: </author> <title> a geographic information system based on quadtrees. </title> <type> Technical Report CS-TR-1885.1, </type> <institution> Univ. of Maryland, Dept. of Computer Science, </institution> <month> July </month> <year> 1987. </year> <note> to appear in the International Journal of Geographic Information Systems. </note>
Reference-contexts: The TIGER project at the U.S. Bureau of Census uses a linear quadtree representation to store all the points of interest in the map of U.S.A. [22]. A similar approach has also been used by Shaffer in the QUILT system for geographic and spatial databases <ref> [21] </ref>, as well as by Orenstein in the extensible data base management system PROBE [18]. * In traditional databases, where records with n attributes correspond to points in an n-dimensional space.
Reference: [22] <author> M. White. N-Trees: </author> <title> Large Ordered Indexes for Multi-Dimensional Space. Application Mathematics Research Staff, Statistical Research Division, </title> <type> U.S. </type> <institution> Bureau of the Census, </institution> <month> December </month> <year> 1981. </year> <month> 20 </month>
Reference-contexts: The TIGER project at the U.S. Bureau of Census uses a linear quadtree representation to store all the points of interest in the map of U.S.A. <ref> [22] </ref>. A similar approach has also been used by Shaffer in the QUILT system for geographic and spatial databases [21], as well as by Orenstein in the extensible data base management system PROBE [18]. * In traditional databases, where records with n attributes correspond to points in an n-dimensional space.
References-found: 22

