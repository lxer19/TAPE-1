URL: file://ftp.cs.utexas.edu/pub/qsim/papers/Clancy-PhD-97.ps.Z
Refering-URL: http://www.cs.utexas.edu/users/qr/abstracts.html
Root-URL: http://www.cs.utexas.edu
Title: by  
Author: Daniel Joseph Clancy 
Date: 1997  
Note: Copyright  
Abstract-found: 0
Intro-found: 1
Reference: <editor> Allen, J., Hendler, J., & Tate, A. (Eds.). </editor> <year> (1990). </year> <title> Readings in Planning. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo,CA. </address>
Reference-contexts: Machine learning developed algorithms for learning a compact, structured representation for the information contained in a large data set (Shavlik & Dietterich, 1990), planning and scheduling developed efficient algorithms for identifying an optimal sequence of actions to achieve a specified goal <ref> (Allen, Hendler, & Tate, 1990) </ref>, and qualitative reasoning developed techniques for deriving an abstract behavioral description for an imprecise structural model of a dynamical system (Weld & de Kleer, 1990). These are just a few of the advances that were made over this period.
Reference: <author> Allen, J. F. </author> <year> (1984). </year> <title> Towards a general theory of action and time. </title> <journal> Artificial Intelligence, </journal> <volume> 23, </volume> <pages> 123-154. </pages>
Reference-contexts: Our language is strictly more expressive than both Allen's interval algebra <ref> (Allen, 1984) </ref> and Dechter, Meiri and Pearl's temporal constraint networks (Dechter, Meiri, & Pearl, 1991) due to its ability to arbitrarily compose path formul using temporal operators. All of the relations defined by Allen can be expressed using the composition of temporal operators in addition to more complex relations.
Reference: <author> Alur, R., & Henzinger, T. </author> <year> (1993). </year> <title> Real-time logics: complexity and expressiveness. </title> <journal> Information and Computation, </journal> <volume> 104 (1), </volume> <pages> 35-77. </pages>
Reference-contexts: Deriving a definite answer for formulae such as (eventually p) is not always possible when potentially infinite behaviors are involved since it is always possible for p to occur in the future. Metric temporal logic <ref> (Alur & Henzinger, 1993) </ref> allows a horizon for a temporal logic expression to be defined, allowing statements like "within 50 seconds, the tank level reaches 70 inches." These statements are only expressible within our logic using an externally defined event.
Reference: <author> Bacchus, F., & Kabanza, F. </author> <year> (1996). </year> <title> Planning for temporally extended goals. </title> <editor> In Clancey, B., & Weld, D. (Eds.), </editor> <booktitle> Proc. of the Thirteenth National Conference on Artificial Intelligence. </booktitle> <publisher> AAAI Press. </publisher>
Reference-contexts: TL-Guide, on the other hand, is embedded in the QSIM architecture which drives the model checking activity. 174 Bacchus and Kabanza utilize temporal logic within the domains of forward chaining planning (Baccus & Kabanza, 1995) and reactive planning <ref> (Bacchus & Kabanza, 1996) </ref>. They use temporal logic to constrain the path selected to reach a goal state and to express search control information.
Reference: <author> Baccus, F., & Kabanza, F. </author> <year> (1995). </year> <title> Using temporal logic to control search in a forward channing planner. </title> <booktitle> In Proc. of the Third European Workshop on Planning. </booktitle> <publisher> AAAI Press. </publisher>
Reference-contexts: TL-Guide, on the other hand, is embedded in the QSIM architecture which drives the model checking activity. 174 Bacchus and Kabanza utilize temporal logic within the domains of forward chaining planning <ref> (Baccus & Kabanza, 1995) </ref> and reactive planning (Bacchus & Kabanza, 1996). They use temporal logic to constrain the path selected to reach a goal state and to express search control information.
Reference: <author> Berleant, D., & Kuipers, B. </author> <year> (1988). </year> <title> Using incomplete quantitative knowledge in qualitative reasoning. </title> <booktitle> In Proc. of the Sixth National Conference on Artificial Intelligence, </booktitle> <pages> pp. 324-329. </pages>
Reference-contexts: This would extend the range of addressable feed-forward control problems. Functional envelopes | The semi-quantitative reasoning <ref> (Berleant & Kuipers, 1988) </ref> part of TeQSIM uses interval bounds and static functional envelopes for monotonic functions to derive quantitative information about a behavior. NSIM (Kay & Kuipers, 1993) derives dynamic envelopes describing a variable's behavior with respect to time.
Reference: <author> Bhat, G., Cleaveland, R., & Grumberg, O. </author> <year> (1995). </year> <title> Efficient on-the-fly model checking for CTL*. </title> <booktitle> In Proc. of Conference on Logic in Computer Science (LICS-95). </booktitle>
Reference: <author> Brajnik, G. </author> <year> (1995). </year> <title> Introducing boundary conditions in semi-quantitative simulation. </title> <booktitle> In Ninth International Workshop on Qualitative Reasoning, </booktitle> <pages> pp. </pages> <address> 22-31 Amsterdam. </address>
Reference-contexts: If a variable that is contained within another component changes discontinuously, then this change must be propagated to the other components. Determining the effect of 61 a discontinuous change could be computed using a variation on Brajnik's continuity relaxation algorithm <ref> (Brajnik, 1995) </ref>. 3.6.5 Landmark Introduction DecSIM fully supports QSIM's ability to introduce landmarks during a simulation. For each variable, landmarks are initially introduced in the component tree that contains the variable as a within partition variable. <p> Qualitative reasoning uses continuity constraints to restrict the possible changes that can occur within a system. In order to predict the effects of discontinuous changes, however, continuity constraints must be relaxed, which leads to a combinatorial explosion of possible outcomes. TeQSIM uses Brajnik's continuity relaxation algorithm <ref> (Brajnik, 1995) </ref> to propagate the effects of a discontinuous change through the model by identifying variables that are necessarily continuous and variables that are potentially discontinuous. If only one variable in a non-differential constraint is not known to be continuous, then it is inferred to be necessarily continuous.
Reference: <author> Brajnik, G. </author> <year> (1997). </year> <title> Statistical properties of qualitative behaviors. </title> <booktitle> In Proc. of the Eleventh International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pp. 233-240. </pages> <address> Cortona, Italy. </address> <note> 211 Brajnik, </note> <author> G., & Clancy, D. J. </author> <year> (1996a). </year> <title> Guiding and refining simulation using tempo-ral logic. </title> <booktitle> In Proc. of the Third International Workshop on Temporal Representation and Reasoning (TIME'96) Key West, </booktitle> <address> Florida. </address> <publisher> IEEE Computer Society Press. To appear. </publisher>
Reference-contexts: ViewedBy v ab corresponds to the mapping function P v ab defined by the projection operator. The variable view algorithm <ref> (Clancy, Brajnik, & Kay, 1997) </ref>, described in figure 3.1, generates the view/guide tree and defines the function ViewedBy v ab . 3.4.2 Generating guide links Guide links are generated as either the view/guide tree or the downstream component tree is extended. <p> QSIMs incompleteness means that the resulting behavior may be spurious. To address this, TeQSIM adds a relative guarantee that if a solution exists, it satisfies the predicted quantitative bounds. Other methods like Monte Carlo simulations <ref> (Brajnik, 1997) </ref> can be applied to ensure that a solution exists. This example demonstrates how trajectory constraints can be used to simulate non-autonomous systems and perform parameter identification. TeQSIM can also help meet other design goals for the controlled tank system. <p> When using a semi-quantitative model, quantitative bounds and func tional envelopes could be augmented with probability distributions. Alternatively, probability information could be inferred using an auxiliary technique such as Monte Carlo simulation to determine the likelihood of a given behavior <ref> (Brajnik, 1997) </ref>. These ideas are very preliminary. One of the drawbacks of these ideas is that the probability information is incorporated directly into the qualitative sim 186 ulation process. This is similar to how semi-quantitative simulation handles quantitative information.
Reference: <author> Brajnik, G., & Clancy, D. J. </author> <year> (1996b). </year> <title> Temporal constraints on trajectoriesin qualitative simulation. </title> <booktitle> In Proc. of the Tenth International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pp. 22-31. </pages> <address> Fallen Leaf Lake, CA. </address>
Reference: <author> Brajnik, G., & Clancy, D. J. </author> <year> (1997). </year> <title> Focusing qualitative simulation using temporal logic: </title> <journal> theoretical foundations. Annals of Mathematics and Artificial Intelligence. </journal> <note> To appear. </note>
Reference-contexts: ViewedBy v ab corresponds to the mapping function P v ab defined by the projection operator. The variable view algorithm <ref> (Clancy, Brajnik, & Kay, 1997) </ref>, described in figure 3.1, generates the view/guide tree and defines the function ViewedBy v ab . 3.4.2 Generating guide links Guide links are generated as either the view/guide tree or the downstream component tree is extended. <p> QSIMs incompleteness means that the resulting behavior may be spurious. To address this, TeQSIM adds a relative guarantee that if a solution exists, it satisfies the predicted quantitative bounds. Other methods like Monte Carlo simulations <ref> (Brajnik, 1997) </ref> can be applied to ensure that a solution exists. This example demonstrates how trajectory constraints can be used to simulate non-autonomous systems and perform parameter identification. TeQSIM can also help meet other design goals for the controlled tank system. <p> When using a semi-quantitative model, quantitative bounds and func tional envelopes could be augmented with probability distributions. Alternatively, probability information could be inferred using an auxiliary technique such as Monte Carlo simulation to determine the likelihood of a given behavior <ref> (Brajnik, 1997) </ref>. These ideas are very preliminary. One of the drawbacks of these ideas is that the probability information is incorporated directly into the qualitative sim 186 ulation process. This is similar to how semi-quantitative simulation handles quantitative information.
Reference: <author> Bredeweg, B. </author> <year> (1992). </year> <title> Expertise in Qualitative Prediction of Behavior. </title> <type> Ph.D. thesis, </type> <institution> Department of Social Science and Informatics University of Amsterdam, Amster-dam, The Netherlands. </institution>
Reference: <author> Clancy, D., & Kuipers, B. </author> <year> (1993). </year> <title> Behavior abstraction for tractable simulation. </title> <booktitle> In Proc. of the Seventh International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pp. 57-64. </pages>
Reference-contexts: Both of these techniques abstract chattering regions of the state space into a single qualitative state within the behavioral description. The techniques differ in the manner in which the boundaries of the chattering region are identified and how the successors of the abstracted state are computed. Chatter box abstraction <ref> (Clancy & Kuipers, 1993) </ref> uses static information contained within the model to identify potentially chattering variables over an open time interval.
Reference: <author> Clancy, D. J., Brajnik, G., & Kay, H. </author> <year> (1997). </year> <title> Model revision: Techniques and tools for analyzing simulation results and revising qualitative models. </title> <booktitle> In Proc. of the Eleventh International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pp. 53-66. </pages> <address> Cortona, Italy. </address>
Reference-contexts: ViewedBy v ab corresponds to the mapping function P v ab defined by the projection operator. The variable view algorithm <ref> (Clancy, Brajnik, & Kay, 1997) </ref>, described in figure 3.1, generates the view/guide tree and defines the function ViewedBy v ab . 3.4.2 Generating guide links Guide links are generated as either the view/guide tree or the downstream component tree is extended. <p> The following extensions would simplify the model building process: * More sophisticated explanation facilities are required to explain the results of the simulation and answer questions about why a given behavior may or may not be included. Clancy, Brajnik and Kay <ref> (Clancy et al., 1997) </ref> provides some preliminary explanation facilities for QSIM; however, additional research is still required. * An equation-based modeling language that allows an engineer to specify relationships in a more intuitive manner is required. * An automated model refinement procedure is required to analyze the results of the simulation
Reference: <author> Clancy, D. J., & Kuipers, B. J. </author> <year> (1997a). </year> <title> Dynamic chatter abstraction: A scalable technique for avoiding irrelevant distinctions during qualitative simulation. </title> <booktitle> In Proc. of the Eleventh International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pp. 67-76. </pages> <address> Cortona, Italy. </address>
Reference-contexts: The algorithms presented here not only provide such a technique, but they also handle more complex forms of chatter not addressed by existing 8 techniques. Two separate abstraction techniques <ref> (Clancy & Kuipers, 1997a, 1997c) </ref> have been developed to eliminate chatter: chatter box abstraction and dynamic chatter abstraction. Both of these techniques abstract chattering regions of the state space into a single qualitative state within the behavioral description.
Reference: <author> Clancy, D. J., & Kuipers, B. J. </author> <year> (1997b). </year> <title> Model decomposition and simulation: a component based qualitative simulation algorithm. </title> <editor> In Kuipers, B. J., & Webber, B. (Eds.), </editor> <booktitle> Proc. of the Fourteenth National Conference on Artificial Intelligence. </booktitle> <publisher> AAAI Press. </publisher>
Reference-contexts: Four of the behaviors are displayed (c). 7 a tractable simulation, certain event branches must be eliminated 1.1.1 Model Decomposition and Simulation (DecSIM) A divide and conquer approach is used to address the problem of combinatoric event branching via the model decomposition and simulation (DecSIM) algorithm <ref> (Clancy & Kuipers, 1997b) </ref>. The variables within the model are partitioned into components so that closely related variables are contained within the same component. Each component is simulated independently to eliminate event branching between variables in separate components. A separate behavioral description is generated for each component.
Reference: <author> Clancy, D. J., & Kuipers, B. J. </author> <year> (1997c). </year> <title> Static and dynamic abstraction solves the problem of chatter in qualitative simulation. </title> <editor> In Kuipers, B. J., & Webber, B. (Eds.), </editor> <booktitle> Proc. of the Fourteenth National Conference on Artificial Intelligence. </booktitle> <publisher> AAAI Press. 212 Coiera, </publisher> <editor> E. W. </editor> <year> (1992). </year> <title> Qualitative superposition. </title> <journal> Artificial Intelligence, </journal> <volume> 56, </volume> <month> 171--196. </month>
Reference: <author> Davis, E. </author> <year> (1990). </year> <title> Representations of Commonsense Knowledge. </title> <publisher> Morgan Kaufmann Publishers, Inc. </publisher> <editor> de Kleer, J., & Brown, J. S. </editor> <year> (1985). </year> <title> A qualitative physics based on confluences. </title> <editor> In Hobbs, J. R., & Moore, R. C. (Eds.), </editor> <title> Formal Theories of the Commonsense World, </title> <journal> chap. </journal> <volume> 4, </volume> <pages> pp. 109-183. </pages> <publisher> Ablex, </publisher> <address> Norwood, New Jersey. </address>
Reference-contexts: Traditionally, common-sense reasoning uses a logic or frame-based representation to describe the entities and relationships within the domain of interest along with both general and special purpose inference techniques <ref> (Davis, 1990) </ref>. Using a general purpose inference engine to reasoning about autonomous change, however, can be difficult due to the myriad of influences that may affect a dynamical system. Qualitative simulation provides a powerful, special-purpose inference engine for reasoning about dynamic change within the world.
Reference: <author> Dechter, R., Meiri, I., & Pearl, J. </author> <year> (1991). </year> <title> Temporal constraint networks. </title> <journal> Artificial Intelligence, </journal> <volume> 49, </volume> <pages> 61-95. </pages>
Reference-contexts: Our language is strictly more expressive than both Allen's interval algebra (Allen, 1984) and Dechter, Meiri and Pearl's temporal constraint networks <ref> (Dechter, Meiri, & Pearl, 1991) </ref> due to its ability to arbitrarily compose path formul using temporal operators. All of the relations defined by Allen can be expressed using the composition of temporal operators in addition to more complex relations.
Reference: <author> Dechter, R., & Pearl, J. </author> <year> (1988a). </year> <title> Network-based heurisitcs for constriant-satisfaction problems. </title> <journal> Artificial Intelligence, </journal> <volume> 34, </volume> <pages> 1-38. </pages>
Reference-contexts: Freuder (1982) demonstrates that a backtrack-free algorithm can be used to solve a tree structured CSP that is node and arc consistent. 10 In DecSIM, this is equivalent to saying that all component states are locally consistent. 79 Dechter and Pearl <ref> (Dechter & Pearl, 1988a) </ref> observe that node and arc consistency are actually a stronger conditions than what is required for a backtrack-free search algorithm. They introduce the slightly weaker concept of directed arc consistency.
Reference: <author> Dechter, R., & Pearl, J. </author> <year> (1988b). </year> <title> Tree-clustering schemes for constraint processing. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence Los Altos, </booktitle> <address> CA. </address> <publisher> Morgan Kaufman. </publisher>
Reference-contexts: The constraints within this CSP are defined by the view/guide links while the components correspond to variables and component behaviors to variable values. A tree-clustering algorithm <ref> (Dechter & Pearl, 1988b, 1989) </ref> is used to exploit structure and causality within the component graph to reduce the complexity of the CSP when determining if a component behavior is globally consistent. A tree-clustering algorithm converts a CSP into a tree-based representation by identifying clusters within the component graph. <p> Thus, to determine whether a state s is globally consistent, we are only required to find a solution to the subgraph that is causally upstream. DecSIM converts the component graph into a tree-structured representation by identifying clusters. This is conceptually equivalent to the tree-clustering method <ref> (Dechter & Pearl, 1988b, 1989) </ref> for converting a CSP. Partitioning the component graph into clusters limits backtracking to the regions of the constraint graph contained within a cluster. 3.10 Future Work DecSIM introduces an entirely new paradigm for qualitative simulation that requires many existing techniques to be rethought.
Reference: <author> Dechter, R., & Pearl, J. </author> <year> (1989). </year> <title> Tree-clustering for constraint networks. </title> <journal> Artificial Intelligence, </journal> <volume> 38, </volume> <pages> 353-366. </pages>
Reference: <author> DeCoste, D. </author> <year> (1994). </year> <title> Goal-directed qualitative reasoning with partial states. </title> <type> Tech. rep. 57, </type> <institution> The Institute for the Learning Sciences, University of Illinois at Urbana-Champaign. </institution>
Reference-contexts: Ignore-qdirs calls the QSIM state-completion algorithm to identify these completions. This process can become expensive as the number of chattering variables increases. Section 4.5 demonstrates that ignore-qdirs can require an exponential amount of time. The problem of intractable branching due to chatter was also addressed by DeCoste <ref> (DeCoste, 1994) </ref> in the context of Qualitative Process Theory models (For-bus, 1984). DeCoste suggests that distinctions in the direction of change can simply be ignored when a unique value cannot be identified. Conceptually, this approach is similar to the one taken here.
Reference: <author> Doyle, J., & Sacks, E. </author> <year> (1992). </year> <title> Proglemena to any future qualitative physics. </title> <journal> Computational Intelligence, </journal> <volume> 8, </volume> <pages> 187-209. </pages>
Reference-contexts: Recently the efficacy of these techniques for solving real-world problems has been questioned due to the complexity of the simulation process and the ambiguity of the behavioral description <ref> (Doyle & Sacks, 1992) </ref>. Simulation of larger, more complex models often results in an intractable simulation that may or may not contain the discriminatory information required to address the task at hand.
Reference: <author> Emerson, E. </author> <year> (1990). </year> <title> Temporal and modal logic. </title> <editor> In van Leeuwen, J. (Ed.), </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <pages> pp. 995-1072. </pages> <publisher> Elsevier Science Publishers/MIT Press. Chap. </publisher> <pages> 16. </pages>
Reference-contexts: method in TeQSIM to specify trajectory constraints and provide a unifying framework for filtering behaviors since discontinuous change expressions can be translated into an equivalent temporal logic expression. 5.1.1 Temporal logic constraint language Temporal logic constraints are specified in TeQSIM using a variation of a propositional linear-time temporal logic (PLTL) <ref> (Emerson, 1990) </ref> called the temporal logic constraint language (TLCL). TLCL combines state formul, that express information about an individual state, with temporal operators such as until, always, and eventually. These operators extend the state formul across time. <p> The following subsection gives a formal description of the syntax and semantics of TLCL. The syntax and semantics are derived from work done by Emerson <ref> (Emerson, 1990) </ref> and Kuipers and Shults (Kuipers & Shults, 1994). 5.3.2 Syntax The propositional part of the language includes the following set SF of state formul (where v denotes a QSIM variable, R [v; s] the range of potential values for v in state s, v s the unknown value of <p> truth values to propositions and states (? denotes the "ambiguous" truth value). * is a set of refinement conditions. is closed with respect to the standard boolean operators f^; :g and contains the distinguished item C true ; a refine 2 These structures are extended form their standard definition (e.g. <ref> (Emerson, 1990) </ref>) to accom modate the refinement process. 152 ment condition is an entity that specifies how a state has to be refined (see below). * C: SF fi S ! is a function (condition generator) that maps state formul and states into refinement conditions that determine how the state should
Reference: <author> Even, S. </author> <year> (1979). </year> <title> Graph Algorithms. </title> <publisher> Computer Science Press, </publisher> <address> Rockville, Maryland. </address>
Reference-contexts: Automating this process, however, will simplify the model building process and be beneficial when used in conjunction with automated model building systems (Rickel & Porter, 1997). The problem of partitioning a graph into closely related components has already been studied extensively in fields such as graph theory <ref> (Even, 1979) </ref> and constraint satisfaction (Tsang, 1993). Developing a partitioning algorithm for DecSIM primarily requires a characterization of the task so that existing research within these fields can be applied.
Reference: <author> Falkenhainer, B., & Forbus, K. </author> <year> (1991). </year> <title> Compositional modeling: finding the right model for the job. </title> <journal> Artificial Intelligence, </journal> <volume> 51, </volume> <pages> 95-143. </pages>
Reference: <author> Farquhar, A., Iwasaki, Y., Fikes, R., & Bobrow, D. </author> <year> (1996). </year> <title> A compositional modeling language. </title> <booktitle> In Proc. of the Tenth International Workshop on Qualitative Reasoning about Physical Systems. </booktitle> <address> Fallen Leaf Lake, CA. </address> <note> 213 Farquhar, </note> <author> A. </author> <year> (1993). </year> <title> Automated Modeling of Physical Systems in the Presence of Incomplete Knowledge. </title> <type> Ph.D. thesis, </type> <institution> Department of Computer Sciences, the University of Texas at Austin. </institution> <note> Available as technical report UT-AI-93-207. </note>
Reference: <author> Fayyad, U. M., Piatetsky-Shapiro, G., Smyth, P., & Uthurusamy, R. </author> <year> (1996). </year> <title> Advances in Knowledge Discovery and Data Mining. </title> <publisher> AAAI Press / MIT Press, </publisher> <address> Cam-bridge, Massachusetts. </address>
Reference-contexts: KDD systems have proved useful for identifying consumer shopping patterns, detecting credit card fraud, and processing credit card applications <ref> (Fayyad, Piatetsky-Shapiro, Smyth, & Uthurusamy, 1996) </ref>. * I2 Technologies, Red Pepper software, and Magnugistics are just a few of the companies offering advanced planning and scheduling products within the burgeoning field of enterprise resource planning (ERP).
Reference: <author> Forbus, K. </author> <year> (1984). </year> <title> Qualitative process theory. </title> <journal> Artificial Intelligence, </journal> <volume> 24, </volume> <pages> 85-168. </pages>
Reference-contexts: Feedback loops are quite common in the devices that are analyzed using qualitative simulation techniques and thus this restriction significantly limits the impact that these techniques can have when simulating larger models. DeCoste (1994) addresses the problem of intractable branching within qualitative simulation using the Qualitative Process Theory <ref> (Forbus, 1984) </ref> framework 78 and the Qualitative Process Engine (QPE) simulation algorithm. As opposed to computing the entire set of potential system behaviors, DeCoste uses a goal-directed simulation method that focuses on distinctions relevant to the current task.
Reference: <author> Forbus, K. </author> <year> (1989). </year> <title> Introducing actions into qualitative simulation. </title> <booktitle> In IJCAI-89, </booktitle> <pages> pp. 1273-1278. </pages>
Reference: <author> Forbus, K. D. </author> <year> (1996). </year> <title> Self-explanatory simulators for middle-school science education: A progress report. </title> <booktitle> In Proc. of the Tenth International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pp. 52-56. </pages> <address> Fallen Leaf Lake, CA. </address>
Reference: <author> Fouche, P., & Kuipers, B. </author> <year> (1990). </year> <title> An assessment of currrent qualitative simulation techniques. </title> <booktitle> In Proc. of Fourth International Worskhop on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pp. 195-205. </pages>
Reference-contexts: While the HOD constraint can be quite useful, there are many instances in which it is unable to eliminate chatter. The three tank W-tube described in figure 4.2 provides a simple example in which HOD constraints are inadequate. 4.2.2 Ignore Qdirs Ignore qdirs <ref> (Fouche & Kuipers, 1990) </ref> eliminates chatter by ignoring distinctions in a variable's direction of change throughout the simulation, thus eliminating the source of the ambiguity by providing a more-abstract description. This abstraction technique is applied to variables identified by the modeler prior to the simulation.
Reference: <author> Franke, D., & Dvorak, D. </author> <year> (1990). </year> <title> CC: Component-connection models for qualitative simulation a user's guide. </title> <type> Tech. rep. </type> <institution> AI90-126, Artificial Intelligence Laboratory, Department of Computer Sciences, University of Texas at Austin. </institution>
Reference-contexts: Specifying a model in this manner could be quite cumbersome. Alternatively, the modeler could specify the model using an extension of the component-connection modeling paradigm provided by QSIM <ref> (Franke & Dvorak, 1990) </ref>. This extension would allow the modeler to specify model transitions on a component basis. Additional capabilities would be required to allow him to specify the new qualitative values for each transition state and the conditions under which a transition would occur.
Reference: <author> Freuder, E. C. </author> <year> (1982). </year> <title> A sufficient condition for backtrack-free search. </title> <journal> Communications of the ACM, </journal> <volume> 32, </volume> <pages> 755-761. </pages>
Reference: <author> Hayes, P. J. </author> <year> (1985). </year> <title> The second naive physics manifesto. </title> <editor> In Hobbs, J., & Moore, B. (Eds.), </editor> <title> Formal Theories of the Commonsense World. </title> <publisher> Ablex Publishing Corp. </publisher>
Reference-contexts: Often, these distinctions are irrelevant to the current task and tend to obscure other relevant distinctions in the behavioral representation. Combinatoric branching due to unrelated events is an inherent limitation of a state-based representation. An alternative representation first proposed by Hayes <ref> (Hayes, 1985) </ref> and later used by Williams (Williams, 1986) describes the behavior of each variable as a set of independent variable histories. Relevant temporal relations between variables are described separately.
Reference: <author> Ironi, L. (Ed.). </author> <year> (1997). </year> <booktitle> Proceedings of the Eleventh International Workshop on Qualitative Reasoning about Physical Systems. </booktitle> <address> Cortona, Italy. </address>
Reference: <author> Ironi, L., </author> & <title> Stefanelli (1994). QCMF: a tool for generating qualitative models for compartmental structures. </title> <booktitle> In 8th International Workshop on Qualitative Reasoning about Physical Systems Nara, </booktitle> <address> Japan. </address>
Reference: <author> Iwasaki, Y. </author> <year> (1988). </year> <title> Causal ordering in a mixed strcuture. </title> <booktitle> In Proc. of the Seventh National Conference on Artificial Intelligence, </booktitle> <pages> pp. 313-318. </pages> <publisher> AAAI Press / The MIT Press. 214 Iwasaki, </publisher> <editor> Y., & Farquhar, A. (Eds.). </editor> <booktitle> (1996). Proceedings of the Tenth International Workshop on Qualitative Reasoning about Physical Systems. </booktitle> <publisher> AAAI Press. </publisher> <address> Fallen Leaf Lake, CA. </address>
Reference: <author> Iwasaki, Y., Farquhar, A., Saraswat, V., Bobrow, D., & Gupta, V. </author> <year> (1995). </year> <title> Modeling time in hybrid systems: how fast is "instantaneous"?. </title> <booktitle> In IJCAI-95, </booktitle> <pages> pp. </pages> <address> 1773-1780 Montreal, Canada. </address> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference: <author> Kay, H., & Kuipers, B. </author> <year> (1993). </year> <title> Numerical behavior envelopes for qualitative models. </title> <booktitle> In Proc. of the Eleventh National Conference on Artificial Intelligence. </booktitle> <publisher> AAAI Press/MIT Press. </publisher>
Reference-contexts: This would extend the range of addressable feed-forward control problems. Functional envelopes | The semi-quantitative reasoning (Berleant & Kuipers, 1988) part of TeQSIM uses interval bounds and static functional envelopes for monotonic functions to derive quantitative information about a behavior. NSIM <ref> (Kay & Kuipers, 1993) </ref> derives dynamic envelopes describing a variable's behavior with respect to time. Currently, only interval information can be specified by TeQSIM trajectory constraints. <p> of description so that all of the available information can be specified (e.g. at a minimum, the language should support structural, qualitative, semi-quantitative, and ordinary differential equations. 7 ), * the language should support structural as well as behavioral information about individual components, and 4 Recent advances such as NSIM <ref> (Kay & Kuipers, 1993) </ref> can operate as a stand alone system; however, additional research is still required. 5 An appropriate analogy would be an integrated software package such as Microsoft Office which provides a set of independent software applications that are able to interact with the other applications as needed. 6
Reference: <author> Kay, H. </author> <year> (1991). </year> <title> Monitoring and diagnosis of multi-tank flows using qualitative reasoning. </title> <type> Master's thesis, </type> <institution> Artificial Intelligence Laboratory, The University of Texas at Austin. </institution>
Reference: <author> Kay, H. </author> <year> (1992). </year> <title> A qualitative model of the space shuttle reaction control system. </title> <type> Tech. rep. TR AI92-188, </type> <institution> Artificial Intelligence Laboratory, Department of Computer Sciences, University of Texas at Austin. </institution>
Reference-contexts: After further inspection, it became clear that this was due to the limitations of the available simulation techniques. To obtain a working model, the modeler often had to make simplifying assumptions with respect to the representation of various components within the model <ref> (Kay, 1992) </ref>.
Reference: <author> Kuipers, B. </author> <year> (1994). </year> <title> Qualitative Reasoning: modeling and simulation with incomplete knowledge. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Massachusetts. </address>
Reference-contexts: This extension provides the modeler with a declarative language for specifying assumptions, controlling the simulation and incorporating additional information. All of the techniques described here have been developed as extensions to the QSIM qualitative simulation algorithm <ref> (Kuipers, 1994) </ref>. <p> The analytic function filter assumes that if a variable is constant over an interval, then it must always be constant <ref> (Kuipers, 1994) </ref>. 2 The behavioral description is infinite due to the introduction of landmarks during the simulation. If landmarks are not introduced, then the number of behaviors within the chattering region is exponential in the number of chattering variables. <p> Furthermore, it 1 An abstract qualitative state is conceptually equivalent to the idea of a partial qualitative state as used by Kuipers <ref> (Kuipers, 1994) </ref>. 2 The representation is not strictly a tree since cycles are represented via links from leaf states to preceding states within a behavior. <p> The semantics for these constraints are specified using a qualitative sign algebra (Williams, 1991). A brief presentation of some of the commonly used constraints is provided below. Please refer to Kuipers <ref> (Kuipers, 1994) </ref> for a more thorough discussion. The expression [x] x 0 corresponds to the sign of x with respect to some landmark value x 0 and [ _x] = sign (dx=dt). [x] is used as an abbreviation for [x] 0 . <p> Viewing each behavior as a separate solution to the CSP requires a sightly non-standard characterization of the CSP since the solution being computed is potentially infinite. A straight-forward characterization of qualitative simulation as a CSP simply maps the variables and constraints within the model directly to the CSP <ref> (Kuipers, 1994) </ref>. In this characterization, however, a solution is simply a qualitative state. Alternatively, the CSP can be characterized such that each behavior corresponds to a solution by viewing continuity as a constraint in the CSP. <p> This example demonstrates how chatter can reflect actual behaviors of a physical system. a This example is taken from <ref> (Kuipers, 1994) </ref> page 256. 92 comparison of the two techniques is provided. 4.2 Previous Solutions Two previous methods have been developed for eliminating chatter. <p> The following subsection gives a formal description of the syntax and semantics of TLCL. The syntax and semantics are derived from work done by Emerson (Emerson, 1990) and Kuipers and Shults <ref> (Kuipers & Shults, 1994) </ref>. 5.3.2 Syntax The propositional part of the language includes the following set SF of state formul (where v denotes a QSIM variable, R [v; s] the range of potential values for v in state s, v s the unknown value of v in s, and n, n <p> Non-atomic propositions are defined using standard boolean operators (and, not); standard propositional abbreviations (true, false, or, implies, iff) are also allowed. As in <ref> (Kuipers & Shults, 1994) </ref>, other proposition schema are defined that allow TeQSIM to reference attributes of states computed by QSIM (like whether a state is quiescent, is stable or occurs at infinite time). Path formul are constructed from state formul by combining them using temporal operators. <p> In neither case TL-Guide applies any additional conditions. 2 208 Appendix D QSIM References This appendix contains relevant information extracted from Kuipers <ref> (Kuipers, 1994) </ref> to assist the reader. D.0.1 QSIM Transition Tables The following table lists the valid transitions for a variable from either a time-point state or a time-interval state.
Reference: <author> Kuipers, B., & Berleant, D. </author> <year> (1992). </year> <title> Combined qualitative and numerical simulation with Q3. </title> <editor> In Faltings, B., & Struss, P. (Eds.), </editor> <booktitle> Recent advances in qualitative physics, </booktitle> <pages> pp. 3-16. </pages> <publisher> MIT Press. </publisher>
Reference: <author> Kuipers, B., Chiu, C., Molle, D. D., & Throop, D. </author> <year> (1991). </year> <title> Higher-order derivative constraint in qualitative simulation. </title> <journal> Artificial Intelligence, </journal> <volume> 51, </volume> <pages> 343-379. </pages>
Reference-contexts: This distinction helps to answer the question: "Is chatter an actual behavior of the modeled system?" While in certain instances, chatter may be the result of spurious behaviors 3 , in general chatter reflects potential behaviors of the modeled system <ref> (Kuipers, Chiu, Molle, & Throop, 1991) </ref>. <p> This example demonstrates how chatter can reflect actual behaviors of a physical system. a This example is taken from (Kuipers, 1994) page 256. 92 comparison of the two techniques is provided. 4.2 Previous Solutions Two previous methods have been developed for eliminating chatter. The higher-order derivative (HOD) <ref> (Kuipers et al., 1991) </ref> technique uses the second and third-order derivatives of the chattering variables to determine the direction of change; the ignore qdirs approach simply ignores distinctions in the derivative of variables identified by the modeler as chattering. <p> To handle chatter around landmarks, the algorithm expands the potentially chattering region to include QSIM introduced landmarks and landmarks identified as chatter landmarks within the QDE. Analysis of the QDE Kuipers et al. <ref> (Kuipers et al., 1991) </ref> present an algorithm for identifying potentially chattering variables based strictly upon the constraints within the model. This technique is used in the automatic derivation of HOD constraints.
Reference: <author> Kuipers, B., & Shults, B. </author> <year> (1994). </year> <title> Reasoning in logic about continuous change. </title> <booktitle> In Principles of Knowledge Representation and Reasoning (KR-94). </booktitle> <publisher> Morgan Kauf-mann Publishers, Inc. </publisher>
Reference-contexts: This extension provides the modeler with a declarative language for specifying assumptions, controlling the simulation and incorporating additional information. All of the techniques described here have been developed as extensions to the QSIM qualitative simulation algorithm <ref> (Kuipers, 1994) </ref>. <p> The analytic function filter assumes that if a variable is constant over an interval, then it must always be constant <ref> (Kuipers, 1994) </ref>. 2 The behavioral description is infinite due to the introduction of landmarks during the simulation. If landmarks are not introduced, then the number of behaviors within the chattering region is exponential in the number of chattering variables. <p> Furthermore, it 1 An abstract qualitative state is conceptually equivalent to the idea of a partial qualitative state as used by Kuipers <ref> (Kuipers, 1994) </ref>. 2 The representation is not strictly a tree since cycles are represented via links from leaf states to preceding states within a behavior. <p> The semantics for these constraints are specified using a qualitative sign algebra (Williams, 1991). A brief presentation of some of the commonly used constraints is provided below. Please refer to Kuipers <ref> (Kuipers, 1994) </ref> for a more thorough discussion. The expression [x] x 0 corresponds to the sign of x with respect to some landmark value x 0 and [ _x] = sign (dx=dt). [x] is used as an abbreviation for [x] 0 . <p> Viewing each behavior as a separate solution to the CSP requires a sightly non-standard characterization of the CSP since the solution being computed is potentially infinite. A straight-forward characterization of qualitative simulation as a CSP simply maps the variables and constraints within the model directly to the CSP <ref> (Kuipers, 1994) </ref>. In this characterization, however, a solution is simply a qualitative state. Alternatively, the CSP can be characterized such that each behavior corresponds to a solution by viewing continuity as a constraint in the CSP. <p> This example demonstrates how chatter can reflect actual behaviors of a physical system. a This example is taken from <ref> (Kuipers, 1994) </ref> page 256. 92 comparison of the two techniques is provided. 4.2 Previous Solutions Two previous methods have been developed for eliminating chatter. <p> The following subsection gives a formal description of the syntax and semantics of TLCL. The syntax and semantics are derived from work done by Emerson (Emerson, 1990) and Kuipers and Shults <ref> (Kuipers & Shults, 1994) </ref>. 5.3.2 Syntax The propositional part of the language includes the following set SF of state formul (where v denotes a QSIM variable, R [v; s] the range of potential values for v in state s, v s the unknown value of v in s, and n, n <p> Non-atomic propositions are defined using standard boolean operators (and, not); standard propositional abbreviations (true, false, or, implies, iff) are also allowed. As in <ref> (Kuipers & Shults, 1994) </ref>, other proposition schema are defined that allow TeQSIM to reference attributes of states computed by QSIM (like whether a state is quiescent, is stable or occurs at infinite time). Path formul are constructed from state formul by combining them using temporal operators. <p> In neither case TL-Guide applies any additional conditions. 2 208 Appendix D QSIM References This appendix contains relevant information extracted from Kuipers <ref> (Kuipers, 1994) </ref> to assist the reader. D.0.1 QSIM Transition Tables The following table lists the valid transitions for a variable from either a time-point state or a time-interval state.
Reference: <author> Nayak, P. </author> <year> (1994). </year> <title> Causal approximations. </title> <journal> Artificial Intelligence, </journal> <volume> 70. </volume>
Reference: <author> Nayak, P. </author> <year> (1992). </year> <title> Automated Modeling of Physical Systems. </title> <type> Ph.D. thesis, </type> <institution> Department of Computer Science, Stanford University. </institution>
Reference: <author> Nishida, T., & Doshita, S. </author> <year> (1987). </year> <title> Reasoning about discontinuous change. </title> <booktitle> In AAAI-87, </booktitle> <pages> pp. 643-648. </pages> <note> 215 Pell, </note> <author> B., Bernard, D., Chien, S., Gat, E., Muscettola, N., Nayak, P., Wagner, M., & Williams, B. </author> <year> (1997). </year> <title> An autonomous spacecraft agent prototype. </title> <booktitle> In Proceedings of the First International Conference on Autonomous Agents. </booktitle> <publisher> ACM Press. </publisher>
Reference: <author> Porter, B., Lester, J., Murray, K., Pittman, K., Souther, A., Acker, L., & Jones, T. </author> <year> (1988). </year> <title> Ai research in the context of a multifunctional knowledge base: The botany knowledge base project. </title> <type> Technical report AI88-88, </type> <institution> Artificial Intelligence Laboratory, The University of Texas at Austin. </institution>
Reference-contexts: Rickel and Porter (Rickel & Porter, 1997) use qualitative simulation to answer prediction questions within the domain of plant physiology. The TRIPEL algorithm automatically generates a qualitative model from a large-scale botany knowledge base <ref> (Porter, Lester, Murray, Pittman, Souther, Acker, & Jones, 1988) </ref> in response to a user query. Answers are generated based upon the results of the simulation. Many of the models produced, however, exhibit a great deal of chatter.
Reference: <author> Rickel, J., & Porter, B. </author> <year> (1994). </year> <title> Automated modeling for answering prediction questions: selecting the time scale and system boundary. </title> <booktitle> In Proc. of the 12th National Conference on Artificial Intelligence. </booktitle> <publisher> AAAI Press / The MIT Press. </publisher>
Reference-contexts: We retain the QSIM soundness guarentee.) In addition, we show that the abstraction and 11 Model Description Plant Physiology Various models and scenarios generated via automated modeling from a large-scale botany knowledge-base <ref> (Rickel & Porter, 1994) </ref>. Reaction Control System Navigation system used on the NASA Space Shuttle Glucose-Insulin Interaction Variety of models describing various physiological scenarios with respect to the relationship between glucose and insulin in the human body.
Reference: <author> Rickel, J., & Porter, B. </author> <year> (1997). </year> <title> Automated modeling of complex systems to answer prediction questions. </title> <journal> Artificial Intelligence, </journal> <volume> 93, </volume> <pages> 201-260. </pages>
Reference-contexts: Currently, DecSIM requires the modeler to identify a partitioning of the variables. Providing such a partitioning can simply be viewed as part of the model building task. Automating this process, however, will simplify the model building process and be beneficial when used in conjunction with automated model building systems <ref> (Rickel & Porter, 1997) </ref>. The problem of partitioning a graph into closely related components has already been studied extensively in fields such as graph theory (Even, 1979) and constraint satisfaction (Tsang, 1993). <p> A chattering region of the state space describes the behaviors in which the dominant influence alternates back and forth. 85 (a) Behavior tree. (b) Behavior plots. Rickel and Porter <ref> (Rickel & Porter, 1997) </ref> use qualitative simulation to answer prediction questions within the domain of plant physiology. The TRIPEL algorithm automatically generates a qualitative model from a large-scale botany knowledge base (Porter, Lester, Murray, Pittman, Souther, Acker, & Jones, 1988) in response to a user query. <p> Qualitative simulation provides a powerful, special-purpose inference engine for reasoning about dynamic change within the world. In the TRIPEL system, Rickel and Porter <ref> (Rickel & Porter, 1997) </ref> demonstrate how qualitative simulation can be integrated with a large-scale knowledge-base to answer queries within the domain of plant physiology. TRIPEL uses automated model building techniques to generate a model at the appropriate level of detail for the given query from model fragments within the knowledge-base.
Reference: <author> Say, A. C. C. </author> <year> (1997). </year> <title> Limitations imposed by the sign-equality assumption in qualitative simulation. </title> <booktitle> In Proceedings of the Eleventh International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pp. 165-174. </pages> <address> Cortona, Italy. </address>
Reference-contexts: If two variables, x and y, are related by a monotonically increasing function, the sign equality assumption assumes that [y 00 (t)] = [x 00 (t)]: Recent results <ref> (Say, 1997) </ref> suggest that this restriction could significantly re strict the class of dynamical systems modeled by the QDE. While the HOD constraint can be quite useful, there are many instances in which it is unable to eliminate chatter.
Reference: <author> Shafer, G., & Pearl, J. (Eds.). </author> <year> (1990). </year> <title> Readings in Uncertain Reasoning. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA. </address>
Reference-contexts: This is similar to how semi-quantitative simulation handles quantitative information. A more challenging, but potentially more promising approach would allow a qualitative simulation algorithm to communicate asynchronously with Bayesian network inference algorithm <ref> (Shafer & Pearl, 1990) </ref> such that each algorithm could run independent of the other. The two algorithms would exchange information, task each other as needed and refine their descriptions independently.
Reference: <author> Shavlik, J. W., & Dietterich, T. G. </author> <title> (Eds.). </title> <booktitle> (1990). Readings in Machine Learning. </booktitle> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo,CA. </address>
Reference-contexts: In the 1970's and 1980's, a number of advances were made in various disciplines within AI in the development of general techniques for solving computation-ally hard problems. Machine learning developed algorithms for learning a compact, structured representation for the information contained in a large data set <ref> (Shavlik & Dietterich, 1990) </ref>, planning and scheduling developed efficient algorithms for identifying an optimal sequence of actions to achieve a specified goal (Allen, Hendler, & Tate, 1990), and qualitative reasoning developed techniques for deriving an abstract behavioral description for an imprecise structural model of a dynamical system (Weld & de Kleer,
Reference: <author> Shimomura, Y., Ogawa, K., Tanigawa, S., Umeda, Y., & Tomiyama, T. </author> <year> (1996). </year> <booktitle> Development of self|maintenance photocopiers. In Proc. of the Tenth International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pp. 225-234. </pages> <address> Fallen Leaf Lake, CA. </address>
Reference: <author> Shults, B., & Kuipers, B. J. </author> <year> (1997). </year> <title> Proving properties of continuous systems: qualitative simulation and temporal logic. </title> <journal> Artificial Intelligence, </journal> <volume> 92, </volume> <pages> 91-129. </pages>
Reference-contexts: An ambiguous behavioral description describing both desired and undesired behaviors results when there is insufficient information within the model to suf 1 Temporal-logic <ref> (Shults & Kuipers, 1997) </ref> can be used to query the results of a simulation to extract information while post-processing abstraction techniques (Clancy & Kuipers, 1993; Clancy et al., 1997) can reduce the complexity of the behavioral description by focusing on specific distinctions. 2 Since qualitative simulation is inherently intractable, simulation complexity <p> As the size of the system grows, however, it becomes more difficult to understand and extract information from this description simply through a manual analysis. Instead, automated techniques are required for extracting information and answering questions. Shults and Kuipers <ref> (Shults & Kuipers, 1997) </ref> use temporal logic to query the results of the simulation; however, the expressiveness of the language is limited to propositional expressions.
Reference: <author> Tsang, E. </author> <year> (1993). </year> <title> Foundations of Constraint Satisfaction. </title> <publisher> Academic Press, </publisher> <address> San Diego, CA. </address>
Reference-contexts: For the chain topology, the depth of the search prior to backtrack is usually only two or three components. This distinction highlights the importance of the connectivity of the components within each cluster. A number of existing constraint satisfaction optimization techniques <ref> (Tsang, 1993) </ref> exist such as dependency-directed backtracking could be used to address this problem, but none of them would completely eliminate the need to backtrack. <p> The problem of partitioning a graph into closely related components has already been studied extensively in fields such as graph theory (Even, 1979) and constraint satisfaction <ref> (Tsang, 1993) </ref>. Developing a partitioning algorithm for DecSIM primarily requires a characterization of the task so that existing research within these fields can be applied. <p> In particular, the current constraint satisfaction algorithm used to find solutions to the component graph uses a straight-forward backtracking algorithm. For certain topological configurations of the component graph, this algorithm could be significantly improved using existing techniques from the constraint satisfaction field <ref> (Tsang, 1993) </ref>. 3.10.2 Integrating DecSIM with other techniques Component-based modeling One reason that we have not focused on developing an automated partitioning algorithm is that we feel that DecSIM challenges the manner in which models are currently developed. <p> The efficiency of the algorithm could be significantly improved in one of two ways: * Dynamic chatter abstraction uses a sound and complete constraint satisfaction algorithm to determine if a variable chatters. The worst-case complexity of this algorithm, however, is exponential. Alternatively, constraint propagation <ref> (Tsang, 1993) </ref> provides a polynomial-time algorithm that is potentially incomplete (i.e. it may identify a non-chattering variable as chattering). A propagation algorithm detects chattering using the following steps: (a) Identify variables that are restricted from chattering due to a single constraint independent of the other variables in the model. (e.g.
Reference: <author> Washio, T., & Kitamura, M. </author> <year> (1995). </year> <title> A fast history-oriented envisioning method introducing temporal logic. </title> <booktitle> In Ninth International Workshop on Qualitative Reasoning (QR-95), </booktitle> <pages> pp. </pages> <address> 279-288 Amsterdam, NL. </address>
Reference: <author> Weld, D. S. </author> <year> (1986). </year> <title> The use of aggregation in causal simulation. </title> <journal> Artificial Intelligence, </journal> <volume> 30, </volume> <pages> 1-17. </pages> <note> 216 Weld, </note> <editor> D. S., & de Kleer, J. (Eds.). </editor> <year> (1990). </year> <title> Readings in Qualitative Reasoning About Physical Systems. </title> <publisher> William Kaufman. </publisher>
Reference-contexts: However, the introduction of landmarks can also results in an infinite behavioral description. Ideally, QSIM would generate a closed-form behavioral description representing the asymptotic behavior of the system. Weld <ref> (Weld, 1986) </ref> uses aggregation to generate such a description for a single behavior.
Reference: <author> Wilkins, D. E., Meyers, K., desJardins, M., & Berry, P. </author> <year> (1997). </year> <title> Summary of multiagent planning architecture.. Working Document. SRI Project 7150. </title> <address> http://www.ai.sri.com/ wilkins/mpa/mpa.ps. </address>
Reference-contexts: MPA integrates planning, scheduling and temporal reasoning agents into a flexible 180 agent architecture <ref> (Wilkins, Meyers, desJardins, & Berry, 1997) </ref>. * The new field of knowledge discovery in databases (KDD) uses machine learning along with various statistical and data warehousing techniques to identify patterns and "discover knowledge" within large sets of unstructured data.
Reference: <author> Williams, B. C., & Nayak, P. P. </author> <year> (1996). </year> <title> A model-based approach to reactive self-configuring systems. </title> <booktitle> In Proc. of the Tenth International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pp. 274-282. </pages> <address> Fallen Leaf Lake, CA. </address>
Reference: <author> Williams, B. </author> <year> (1991). </year> <title> A theory of interactions: Unifying qualitative and quantitative algebraic reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 51, </volume> <pages> 39-94. </pages>
Reference-contexts: A qualitative constraint, an abstraction of a mathematical relation, specifies valid combinations of simultaneous values for a set of variables. The semantics for these constraints are specified using a qualitative sign algebra <ref> (Williams, 1991) </ref>. A brief presentation of some of the commonly used constraints is provided below. Please refer to Kuipers (Kuipers, 1994) for a more thorough discussion.
Reference: <author> Williams, B. C. </author> <year> (1986). </year> <title> Doing time: Putting qualitative reasoning on firmer ground. </title> <booktitle> In Proc. of the Fourth National Conference on Artificial Intelligence, </booktitle> <pages> pp. 105-113. 217 </pages>
Reference-contexts: Often, these distinctions are irrelevant to the current task and tend to obscure other relevant distinctions in the behavioral representation. Combinatoric branching due to unrelated events is an inherent limitation of a state-based representation. An alternative representation first proposed by Hayes (Hayes, 1985) and later used by Williams <ref> (Williams, 1986) </ref> describes the behavior of each variable as a set of independent variable histories. Relevant temporal relations between variables are described separately.
References-found: 65

