URL: ftp://ftp.cs.ucsb.edu/pub/faculty/su/pods94.ps
Refering-URL: ftp://ftp.cs.ucsb.edu/pub/faculty/su/pods94.html
Root-URL: http://www.cs.ucsb.edu
Email: stephane.grumbach@inria.fr  su@cs.ucsb.edu  
Title: Finitely Representable Databases (Extended Abstract)  
Author: Stephane Grumbach Jianwen Su flfl 
Address: Rocquencourt BP 105 78153 Le Chesnay, France  Santa Barbara, California 93106, USA  
Affiliation: I.N.R.I.A.  Computer Science Department University of California  
Abstract: We study classes of infinite but finitely representable databases based on constraints, motivated by new database applications such as geographical databases. The mathematical framework is based on classical decidable first-order theories. We investigate the theory of finitely representable models and prove that it differs strongly from both classical model theory and finite model theory. In particular, we show that most of the well known theorems of either one fail (compactness, completeness, locality, 0/1 laws, etc.). An immediate consequence is the lack of tools to consider the definability of queries in the relational calculus over finitely representable databases. We illustrate this very challenging problem through some classical examples. 
Abstract-found: 1
Intro-found: 1
Reference: [Ajt83] <author> M. Ajtai. </author> <title> 1 1 formulae on finite structures. </title> <journal> Ann. of Pure and Applied Logic, </journal> <volume> 24 </volume> <pages> 1-48, </pages> <year> 1983. </year>
Reference-contexts: We now present the complexity theoretic proof of the non definability of the region connectivity query in the case k = 3. Essentially, it is a reduction from the parity query that is known to be outside of AC 0 <ref> [FSS84, Ajt83] </ref>. The reduction is first-order [Imm87], and so in AC 0 . Let fa 1 ; :::; a n g be the set of elements. For technical convenience and without loss of generality, we assume that for each i 2 [2::n], a i1 &lt; a i .
Reference: [AHV92] <author> S. Abiteboul, R. Hull, and V. Vianu. </author> <title> Database Theory. </title> <type> Draft, </type> <year> 1992. </year>
Reference-contexts: It was claimed that if a query in L = f; +; fi; 0; 1g is L-invariant, then it is definable using only equality. Unfortunately, this result doesn't hold [Via93, Kup93a]. A simple counterexample can be found in <ref> [AHV92] </ref>. Therefore, the definability of the transitive closure of a graph, or of the parity of the cardinality of a relation in L = f; +; fi; 0; 1g, is still an open question unlike stated in [Kup90].
Reference: [AU79] <author> A. V. Aho and J. D. Ullman. </author> <title> Universality of data retrieval languages. </title> <booktitle> In Proc. Symp. on Princ. of Programming Languages, </booktitle> <year> 1979. </year>
Reference-contexts: The concepts defined above carry over, and corresponds to well known concepts of (finite) database theory. First note that any automorphism on N is L-preserving in the case of finite databases. The notion of L-invariance corresponds to the usual notion of genericity <ref> [AU79, CH80] </ref>, and if C is a set of constant symbols, (L C)-invariance coincides with the notion of C-genericity [Hul86]. Example 2.2 Consider databases with one finite relation R in the context of the integers with an order relation (N ; ).
Reference: [CH80] <author> A. Chandra and D. Harel. </author> <title> Computable Queries for Relational Data Bases. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 21(2) </volume> <pages> 156-178, </pages> <month> Oct. </month> <year> 1980. </year>
Reference-contexts: query languages for infinite recursive databases were reported by Hirst and Harel in [HH93], where two classes of recursive databases are considered, and it is shown that: (i) quantifier free first-order logic is complete on the class of all recursive databases, and (ii) a version of Chandra and Harel's QL <ref> [CH80] </ref> is complete on highly symmetric databases. In this paper, we consider classes of databases 1 which lie between these two extreme examples. In their seminal paper, Kanellakis, Kuper and Revesz [KKR90], introduced constraint query languages. <p> L fi = f; +; fi; 0; 1g and A = R, the real field (it satisfies the theory of real closed fields). 2.2 Queries The notion of a database query was introduced by Chandra and Harel <ref> [CH80] </ref> as a mapping Q from structures over a given signature to relations of a fixed arity n, which is partial recursive and satisfies the following consistency criterion: If two structures over , A and B are isomorphic by an isomorphism , then Q (A) and Q (B) are isomorphic by <p> We use the following definition of queries which extends naturally the definition of <ref> [CH80] </ref> for finite databases. Definition 2.2 Let L 0 L. A boolean L 0 -query K over A and is a partial recursive collection of L 0 - representable (A; )-instances weakly closed under automorphisms of A. The weak closure under automorphisms may seem to be a complicated condition. <p> The concepts defined above carry over, and corresponds to well known concepts of (finite) database theory. First note that any automorphism on N is L-preserving in the case of finite databases. The notion of L-invariance corresponds to the usual notion of genericity <ref> [AU79, CH80] </ref>, and if C is a set of constant symbols, (L C)-invariance coincides with the notion of C-genericity [Hul86]. Example 2.2 Consider databases with one finite relation R in the context of the integers with an order relation (N ; ).
Reference: [CK73] <author> C.C. Chang and H.J. Keisler. </author> <title> Model Theory, </title> <booktitle> volume 73 of Studies in Logic. </booktitle> <publisher> North-Holland, </publisher> <year> 1973. </year>
Reference-contexts: Then the result follows from the decidability of the theory of A. 2 The theory of dense order without endpoints and the theory of real closed fields mentioned above are decidable <ref> [CK73] </ref>. Therefore, validity over finitely representable databases over (Q; ) or (R; ; +; fi; 0; 1) for instance, is co-r.e. We will see below that it is not r.e. We next prove that in general the set of first-order sentences satisfiable over finitely representable models is not recursive. <p> R is a model of the theory of dense order without endpoints, and R is a model of the theory of real closed fields. These theories are decidable and admit quantifier elimination procedures <ref> [CK73] </ref>. Therefore, every formula in L [ (resp. L fi [ ) expresses a query over L -representable (R ; )-instances (resp. L fi -representable (R; )- instances). The data complexity of queries over (R ; )- instances and (R; )-instances has been studied in [KKR90, KG94].
Reference: [Cod70] <author> E.F. Codd. </author> <title> A relational model of data for large shared data banks. </title> <journal> Communications of ACM, </journal> <volume> 13:6:377-387, </volume> <year> 1970. </year>
Reference-contexts: In this paper, we consider classes of databases 1 which lie between these two extreme examples. In their seminal paper, Kanellakis, Kuper and Revesz [KKR90], introduced constraint query languages. The basic idea is to generalize the relations of the relational model <ref> [Cod70] </ref> by defining generalized tuples as conjunctions of constraints. For instance, x 2 + y 2 = 1 ^ x 0 defines a binary generalized tuple. A generalized, or finitely representable, relation is then a finite set of such tuples. <p> For instance, (xfix+y fiy = 1^x 0) is a binary generalized tuple representing a half circle. A k-ary finitely representable relation (or generalized relation in [KKR90]) is then a finite set of k-ary generalized tuples. In this framework, a tuple (a; b) in the classical relational database <ref> [Cod70] </ref> is an abbreviation for the formula (x = a ^ y = b) represented using only the equality symbol "=" and constants. A triangle (x y ^ x 0 ^ y 10) is also a generalized tuple represented using only "" and constants.
Reference: [Com88] <author> K. Compton. </author> <title> 0-1 laws in logic and combinatorics. </title> <editor> In I. Rival, editor, </editor> <booktitle> Proc. NATO Advanced Study Institute on Algorithms and Order, </booktitle> <pages> pages 353-383. </pages> <publisher> Reidel, </publisher> <address> Dordrecht, </address> <year> 1988. </year>
Reference-contexts: This fails in presence of an order relation. Indeed, every neighborhood based on Gaifman's distance contains the whole domain. Techniques based on asymptotic probabilities of the truth of sentences also fail in the presence of order or arithmetic. Some results were obtained for very specific languages (see <ref> [Com88] </ref>). They do not carry over in the general case. Finally, we consider some consequences of the previous theoretical results on database queries. Let ' and be sentences in L [ and A be an L-structure.
Reference: [Ehr61] <author> A. Ehrenfeucht. </author> <title> An application of games to the completeness problem for formalized theories. </title> <journal> Fund. Math, </journal> <volume> 49, </volume> <year> 1961. </year>
Reference-contexts: None of these tools is known to work in the presence of some regular mathematical structure such as an order relation for instance. The problem of the definability of a query over finitely representable databases is therefore a very challenging issue. The Ehrenfeucht-Frasse games <ref> [Fra54, Ehr61] </ref> are among the few tools which carry over on finitely representable structures. Complexity theoretic arguments can be used also to prove non-definability. Indeed, some rather low upper-bounds (in terms of boolean circuits) are known for the relational calculus over finitely representable databases [KG94]. <p> The k-dimensional region connectivity query over L -representable (R ; )-instances is not definable in L . Theorem 4.1 can be proved using two different arguments, namely Ehrenfeucht-Frasse games, and a complexity theoretic argument. We illustrate both proof techniques below. The first proof uses Ehrenfeucht-Frasse games <ref> [Fra54, Ehr61] </ref>. Let A and B be two L-structures with universes A and B. Let r be a positive integer. The game of length r associated with A and B is played by two players, I (the spoiler), and II (the duplicator), making r moves each.
Reference: [Fag76] <author> R. Fagin. </author> <title> Probabilities on finite models. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 41(1) </volume> <pages> 50-58, </pages> <year> 1976. </year>
Reference-contexts: The failure of most of the known theorems of classical model theory, shows the need to develop new tools meaningful for finitely representable structures. Powerful tools have been developed, such as the locality by Gaifman [Gai81], or the 0/1 laws by Fagin <ref> [Fag76] </ref> in the case of finite model theory. The model theory of finitely representable structures differs also from finite model theory. None of these tools is known to work in the presence of some regular mathematical structure such as an order relation for instance.
Reference: [Fag93] <author> R. Fagin. </author> <title> Finite model theory a personal perspective. </title> <journal> Theoretical Computer Science, </journal> <volume> 116 </volume> <pages> 3-31, </pages> <year> 1993. </year>
Reference-contexts: We prove that the model theory of finitely representable structures, differs strongly from the classical model theory of all structures. In particular, we prove that, like for finite model theory (see the survey by Fagin <ref> [Fag93] </ref>), most of the classical theorems of logic, such as the compactness and the completeness theorems, fail for finitely representable structures. The failure of most of the known theorems of classical model theory, shows the need to develop new tools meaningful for finitely representable structures.
Reference: [FSS84] <author> M. Furst, J. B. Saxe, and M. Sipser. </author> <title> Parity, circuits, and the polynomial-time hierarchy. </title> <journal> Math. Syst. Theory, </journal> <volume> 17 </volume> <pages> 13-27, </pages> <year> 1984. </year>
Reference-contexts: We now present the complexity theoretic proof of the non definability of the region connectivity query in the case k = 3. Essentially, it is a reduction from the parity query that is known to be outside of AC 0 <ref> [FSS84, Ajt83] </ref>. The reduction is first-order [Imm87], and so in AC 0 . Let fa 1 ; :::; a n g be the set of elements. For technical convenience and without loss of generality, we assume that for each i 2 [2::n], a i1 &lt; a i .
Reference: [Fra54] <author> R. Fraisse. </author> <title> Sur les classifications des systemes de relations. </title> <type> Publ. </type> <institution> Sci. Univ Alger, I:1, </institution> <year> 1954. </year>
Reference-contexts: None of these tools is known to work in the presence of some regular mathematical structure such as an order relation for instance. The problem of the definability of a query over finitely representable databases is therefore a very challenging issue. The Ehrenfeucht-Frasse games <ref> [Fra54, Ehr61] </ref> are among the few tools which carry over on finitely representable structures. Complexity theoretic arguments can be used also to prove non-definability. Indeed, some rather low upper-bounds (in terms of boolean circuits) are known for the relational calculus over finitely representable databases [KG94]. <p> The k-dimensional region connectivity query over L -representable (R ; )-instances is not definable in L . Theorem 4.1 can be proved using two different arguments, namely Ehrenfeucht-Frasse games, and a complexity theoretic argument. We illustrate both proof techniques below. The first proof uses Ehrenfeucht-Frasse games <ref> [Fra54, Ehr61] </ref>. Let A and B be two L-structures with universes A and B. Let r be a positive integer. The game of length r associated with A and B is played by two players, I (the spoiler), and II (the duplicator), making r moves each.
Reference: [Gai81] <author> H. Gaifman. </author> <title> On local and non local properties. </title> <editor> In J. Stern, editor, </editor> <booktitle> Proc. Herbrand Symposium Logic Colloquium, </booktitle> <pages> pages 105-135. </pages> <publisher> North Holland, </publisher> <year> 1981. </year>
Reference-contexts: The failure of most of the known theorems of classical model theory, shows the need to develop new tools meaningful for finitely representable structures. Powerful tools have been developed, such as the locality by Gaifman <ref> [Gai81] </ref>, or the 0/1 laws by Fagin [Fag76] in the case of finite model theory. The model theory of finitely representable structures differs also from finite model theory. <p> There exists a sentence B in L [ such that for each L-representable (A; )- expansion B 0 , B 0 is isomorphic to B iff B 0 j= B . On the other hand, the theory of finitely representable models differs from finite model theory. Gaifman <ref> [Gai81] </ref> proved that first-order logic was 7 local in a topological sense. This fails in presence of an order relation. Indeed, every neighborhood based on Gaifman's distance contains the whole domain. Techniques based on asymptotic probabilities of the truth of sentences also fail in the presence of order or arithmetic.
Reference: [HH93] <author> T. Hirst and D. Harel. </author> <title> Completeness results of recursive data bases. </title> <booktitle> In Proc. 12th ACM Symp. on Principles of Database Systems, </booktitle> <pages> pages 244-252, </pages> <year> 1993. </year>
Reference-contexts: A part of work was done while visiting I.N.R.I.A. pleteness of query languages for infinite recursive databases were reported by Hirst and Harel in <ref> [HH93] </ref>, where two classes of recursive databases are considered, and it is shown that: (i) quantifier free first-order logic is complete on the class of all recursive databases, and (ii) a version of Chandra and Harel's QL [CH80] is complete on highly symmetric databases.
Reference: [Hul86] <author> R. Hull. </author> <title> Relative information capacity of simple relational schemata. </title> <journal> SIAM J. of Computing, </journal> <volume> 15:3, </volume> <year> 1986. </year>
Reference-contexts: First note that any automorphism on N is L-preserving in the case of finite databases. The notion of L-invariance corresponds to the usual notion of genericity [AU79, CH80], and if C is a set of constant symbols, (L C)-invariance coincides with the notion of C-genericity <ref> [Hul86] </ref>. Example 2.2 Consider databases with one finite relation R in the context of the integers with an order relation (N ; ).
Reference: [Imm87] <author> N. Immerman. </author> <title> Languages that capture complexity classes. </title> <journal> SIAM Journal on Computing, </journal> <volume> 16(4) </volume> <pages> 760-778, </pages> <year> 1987. </year>
Reference-contexts: We now present the complexity theoretic proof of the non definability of the region connectivity query in the case k = 3. Essentially, it is a reduction from the parity query that is known to be outside of AC 0 [FSS84, Ajt83]. The reduction is first-order <ref> [Imm87] </ref>, and so in AC 0 . Let fa 1 ; :::; a n g be the set of elements. For technical convenience and without loss of generality, we assume that for each i 2 [2::n], a i1 &lt; a i .
Reference: [KG94] <author> P. C. Kanellakis and D. Q. Goldin. </author> <title> Constraint programming and database query languages. </title> <booktitle> In Proc. 2nd Conference on Theoretical Aspects of Computer Software (TACS), </booktitle> <month> April </month> <year> 1994. </year> <note> (To appear in LNCS Spring-Verlag volume). </note>
Reference-contexts: In the real plane, it results in an infinite set of points, or tuples, over R 2 . The relational calculus over finitely representable relations constitutes a constraint query language which admits an efficient bottom-up and declarative semantics. An equivalent algebra was proposed by Kanellakis and Goldin <ref> [KG94] </ref>. It is well suited to express geometric queries. Practical issues, such as the indexing of such databases have been considered by Kanellakis, Ramaswamy, Vengroff, and Vitter [KRVV93]. In [KKR90], the data complexity of both the relational calculus and inflationary Datalog with negation over constraint databases is studied. <p> It is proved that, although the decision problem of the underlying theories may be high, the data complexity of the query languages is tractable. This shows the practical interest of this approach, which has been pursued in <ref> [Rev90, Kup93, KG94] </ref>. The goal of this paper is to understand the underlying logic of constraint query languages. In other words, we study first-order logic when the semantics is restricted to finitely representable models. Our motivation is to investigate the expressive power of query languages over finitely representable databases. <p> The Ehrenfeucht-Frasse games [Fra54, Ehr61] are among the few tools which carry over on finitely representable structures. Complexity theoretic arguments can be used also to prove non-definability. Indeed, some rather low upper-bounds (in terms of boolean circuits) are known for the relational calculus over finitely representable databases <ref> [KG94] </ref>. We also investigate other criteria such as the invariance of the properties, their closed form, etc. We illustrate these techniques on queries from computational geometry [Yao90], graph theory, and geographical databases. We investigate their definability in first-order logic over finitely representable databases. <p> Therefore, every formula in L [ (resp. L fi [ ) expresses a query over L -representable (R ; )-instances (resp. L fi -representable (R; )- instances). The data complexity of queries over (R ; )- instances and (R; )-instances has been studied in <ref> [KKR90, KG94] </ref>. Queries in L [ over L - representable (R ; )-instances are computable in AC 0 data complexity, and queries in L fi [ over L fi -representable (R; )-instances are computable in NC data complexity. <p> We now consider the data complexity approach. Non definability is proven by comparing the complexity upperbound of the language and the lower-bound of the problem being considered. The following lemma improves a result of [KKR90]. Lemma 4.3 <ref> [KG94] </ref> Each query in L over L - representable (R ; )-instances has data complexity AC 0 , i.e., can be evaluated in AC 0 with respect to the size of the database.
Reference: [KKR90] <author> P. Kanellakis, G Kuper, and P. Revesz. </author> <title> Constraint query languages. </title> <booktitle> In Proc. 9th ACM Symp. on Principles of Database Systems, </booktitle> <pages> pages 299-313, </pages> <address> Nashville, </address> <year> 1990. </year>
Reference-contexts: In this paper, we consider classes of databases 1 which lie between these two extreme examples. In their seminal paper, Kanellakis, Kuper and Revesz <ref> [KKR90] </ref>, introduced constraint query languages. The basic idea is to generalize the relations of the relational model [Cod70] by defining generalized tuples as conjunctions of constraints. For instance, x 2 + y 2 = 1 ^ x 0 defines a binary generalized tuple. <p> An equivalent algebra was proposed by Kanellakis and Goldin [KG94]. It is well suited to express geometric queries. Practical issues, such as the indexing of such databases have been considered by Kanellakis, Ramaswamy, Vengroff, and Vitter [KRVV93]. In <ref> [KKR90] </ref>, the data complexity of both the relational calculus and inflationary Datalog with negation over constraint databases is studied. Different types of constraints are considered, such 1 The finitely representable databases are not necessarily stricto sensu recursive. Their domain can indeed be the set of real numbers. <p> We distinguish between logical predicates (e.g., =; ) in L and relations in . Consider, for instance, the language f; +; fi; 0; 1g of the real field R. Kanellakis, Kuper, and Revesz <ref> [KKR90] </ref> introduced the concept of a k-ary generalized tuple, which is a constraint expressed as a conjunction of atomic formulas over k-variables. For instance, (xfix+y fiy = 1^x 0) is a binary generalized tuple representing a half circle. A k-ary finitely representable relation (or generalized relation in [KKR90]) is then a <p> Kuper, and Revesz <ref> [KKR90] </ref> introduced the concept of a k-ary generalized tuple, which is a constraint expressed as a conjunction of atomic formulas over k-variables. For instance, (xfix+y fiy = 1^x 0) is a binary generalized tuple representing a half circle. A k-ary finitely representable relation (or generalized relation in [KKR90]) is then a finite set of k-ary generalized tuples. In this framework, a tuple (a; b) in the classical relational database [Cod70] is an abbreviation for the formula (x = a ^ y = b) represented using only the equality symbol "=" and constants. <p> Then, the following conditions are equivalent. 1. T admits a quantifier elimination procedure. 2. Every formula ' in L [ with k free variables defines a query ! t over L-representable (A; )-instances. The direction (1 ) 2) was used in <ref> [KKR90] </ref> to see that the query languages were well-defined for finitely representable databases. The previous proposition shows that this is a necessary condition, and therefore finitely representable databases can only be defined over models of theories admitting a quantifier elimination procedure. <p> Theorem 3.8 Under the same assumptions as in Theorem 3.4, the following problems are undecidable: the satisfiability, the equivalence, the con tainment, and the fg-invariance of queries. In particular, Theorem 3.8 indicates that the above problems are undecidable in the first-order constraint query language of <ref> [KKR90] </ref> over the real field. 4 Expressive power In this section, we consider two kinds of database instances (i) over a dense order R = (R; ) and (ii) over the ordered real closed field R = (R; , +; fi; 0; 1). <p> Therefore, every formula in L [ (resp. L fi [ ) expresses a query over L -representable (R ; )-instances (resp. L fi -representable (R; )- instances). The data complexity of queries over (R ; )- instances and (R; )-instances has been studied in <ref> [KKR90, KG94] </ref>. Queries in L [ over L - representable (R ; )-instances are computable in AC 0 data complexity, and queries in L fi [ over L fi -representable (R; )-instances are computable in NC data complexity. <p> On the other hand, the expressive power of these languages has not been seriously investigated. In <ref> [KKR90] </ref>, an exact characterization of PTIME was obtained with inflationary Datalog with negation over dense order. To the best of our knowledge there are no other exact characterization of complexity classes. Moreover, it is open if numerous well known queries are definable over finitely repre sentable databases. <p> We now consider the data complexity approach. Non definability is proven by comparing the complexity upperbound of the language and the lower-bound of the problem being considered. The following lemma improves a result of <ref> [KKR90] </ref>. Lemma 4.3 [KG94] Each query in L over L - representable (R ; )-instances has data complexity AC 0 , i.e., can be evaluated in AC 0 with respect to the size of the database.
Reference: [KRVV93] <author> P. Kanellakis, S. Ramaswamy, D. Vengroff, and J. Vitter. </author> <title> Indexing for data models with constraints and classes. </title> <booktitle> In Proc. 12th ACM Symp. on Principles of Database Systems, </booktitle> <pages> pages 233-243, </pages> <year> 1993. </year>
Reference-contexts: An equivalent algebra was proposed by Kanellakis and Goldin [KG94]. It is well suited to express geometric queries. Practical issues, such as the indexing of such databases have been considered by Kanellakis, Ramaswamy, Vengroff, and Vitter <ref> [KRVV93] </ref>. In [KKR90], the data complexity of both the relational calculus and inflationary Datalog with negation over constraint databases is studied. Different types of constraints are considered, such 1 The finitely representable databases are not necessarily stricto sensu recursive. Their domain can indeed be the set of real numbers.
Reference: [Kup90] <author> G.M. Kuper. </author> <title> On the expressive power of the relational calculus with arithmetic constraints. </title> <booktitle> In Proc. Int. Conf. on Database Theory, </booktitle> <pages> pages 202-211, </pages> <year> 1990. </year>
Reference-contexts: The parity query, true if the parity of the cardinality of the finite relation R is even, commutes with ;-automorphisms of (N ; ) which are automorphisms of N , and so is fg invariant. 2 In <ref> [Kup90] </ref>, finite databases over the real closed field were considered. It was claimed that if a query in L = f; +; fi; 0; 1g is L-invariant, then it is definable using only equality. Unfortunately, this result doesn't hold [Via93, Kup93a]. A simple counterexample can be found in [AHV92]. <p> A simple counterexample can be found in [AHV92]. Therefore, the definability of the transitive closure of a graph, or of the parity of the cardinality of a relation in L = f; +; fi; 0; 1g, is still an open question unlike stated in <ref> [Kup90] </ref>. We give partial answers in Section 4. 3 Finite Models, Finitely Representable Models, and all Models In this section, we analyze the differences between finite model theory, finitely representable model theory, and classical model theory.
Reference: [Kup93] <author> G.M. Kuper. </author> <title> Aggregation in constraint databases. </title> <booktitle> In Proc. First Workshop on Principles and Practice of Constraint Programming, </booktitle> <year> 1993. </year>
Reference-contexts: It is proved that, although the decision problem of the underlying theories may be high, the data complexity of the query languages is tractable. This shows the practical interest of this approach, which has been pursued in <ref> [Rev90, Kup93, KG94] </ref>. The goal of this paper is to understand the underlying logic of constraint query languages. In other words, we study first-order logic when the semantics is restricted to finitely representable models. Our motivation is to investigate the expressive power of query languages over finitely representable databases.
Reference: [Kup93a] <author> G.M. Kuper. </author> <type> Personal communications, </type> <year> 1993. </year>
Reference-contexts: It was claimed that if a query in L = f; +; fi; 0; 1g is L-invariant, then it is definable using only equality. Unfortunately, this result doesn't hold <ref> [Via93, Kup93a] </ref>. A simple counterexample can be found in [AHV92]. Therefore, the definability of the transitive closure of a graph, or of the parity of the cardinality of a relation in L = f; +; fi; 0; 1g, is still an open question unlike stated in [Kup90].
Reference: [Rev90] <author> P. Revesz. </author> <title> A closed form for datalog queries with integer order. </title> <booktitle> In Proc. Int. Conf. on Database Theory, </booktitle> <pages> pages 187-201, </pages> <year> 1990. </year>
Reference-contexts: It is proved that, although the decision problem of the underlying theories may be high, the data complexity of the query languages is tractable. This shows the practical interest of this approach, which has been pursued in <ref> [Rev90, Kup93, KG94] </ref>. The goal of this paper is to understand the underlying logic of constraint query languages. In other words, we study first-order logic when the semantics is restricted to finitely representable models. Our motivation is to investigate the expressive power of query languages over finitely representable databases.
Reference: [Tar51] <author> A. Tarski. </author> <title> A Decision method for elementary algebra and geometry. </title> <publisher> Univ. of Cali-fornia Press, </publisher> <address> Berkeley, California, </address> <year> 1951. </year>
Reference-contexts: A theory admitting a quantifier elimination procedure, that is of great use in the context of finitely representable databases, is the theory of real closed fields over the language f=; ; +; fi; 0; 1g <ref> [Tar51] </ref>. It should be noted that the functions allowed in the language play a fundamental role in the quantifier elimination procedure. <p> Define = ft i j i 0g. Obviously each finite subset of has a model with respect to R and which is L-representable. On the other hand, does not admit any L-representable model. It follows indeed from Tarski's result <ref> [Tar51] </ref> that any monadic first-order formula over the reals define a finite set of segments of R. 2 In classical model theory, the completeness theorem implies that the set of valid first-order sentences is r.e. <p> By assumption, the theory of A admits a quantifier elimination procedure. Therefore, R i = fx j i j R (x)g is also L-representable. Let R i (x) be the quantifier-free monadic formula defining R i . By <ref> [Tar51] </ref>, R i (x) defines a finite set of segments over A.
Reference: [Tra50] <author> B. A. Trakhtenbrot. </author> <title> Impossibility of an algorithm for the decision problem in finite classes. </title> <journal> Doklady Akademii Nauk SSSR, </journal> <volume> 70 </volume> <pages> 569-572, </pages> <year> 1950. </year>
Reference-contexts: The contrary holds for finite model theory. Indeed, the set of first-order sentences valid over finite structures is co-r.e. and Trakhtenbrot proved <ref> [Tra50] </ref> that it is not r.e. A similar phenomenon holds for finitely representable models. Proposition 3.2 Let A be an L-structure such that the theory of A is decidable. Then the set of sentences in L [ valid over L-representable expansions with respect to A and is co-r.e.
Reference: [Vau60] <author> R. L. Vaught. </author> <title> Sentences true in all constructive models. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 25(1) </volume> <pages> 39-53, </pages> <month> March </month> <year> 1960. </year>
Reference-contexts: Then the set of sentences in L [ valid over f=g-representable models with respect to N and is not r.e. 6 Proof: The proof is based on Vaught's result <ref> [Vau60] </ref>. Let V r:e: (resp. V fin ) be the set of sentences true in all recursively enumerable (resp. finite) models. Vaught showed that for each set of sentences V , if V r:e: V V fin , then V is not r.e.
Reference: [vdD82] <author> L. van den Dries. </author> <title> Remarks on Tarski's problem concerning (R; +; fi; exp). </title> <booktitle> In Logic Colloquium. </booktitle> <publisher> Elsevier, North-Holland, </publisher> <year> 1982. </year>
Reference-contexts: In particular, van den Dries showed that the extension of the previous theory to a language with an exponential function, f=; ; +; fi; e x ; 0; 1g doesn't admit a quantifier elimination procedure <ref> [vdD82] </ref>. The theory of dense order without endpoints is another example of a theory admitting a quantifier elimination procedure that is of great use here. We next define the notion of invariance of queries. Let L 0 L and A be an L-structure with universe A.
Reference: [Via93] <author> V. Vianu. </author> <type> Personal communications, </type> <year> 1993. </year>
Reference-contexts: It was claimed that if a query in L = f; +; fi; 0; 1g is L-invariant, then it is definable using only equality. Unfortunately, this result doesn't hold <ref> [Via93, Kup93a] </ref>. A simple counterexample can be found in [AHV92]. Therefore, the definability of the transitive closure of a graph, or of the parity of the cardinality of a relation in L = f; +; fi; 0; 1g, is still an open question unlike stated in [Kup90].
Reference: [Yao90] <editor> F.F. Yao. </editor> <booktitle> Handbook of Theorical Computer Science, volume A, chapter 7 Computational Geometry, </booktitle> <pages> pages 343-389. </pages> <editor> J. van Leeuwen, </editor> <publisher> North Holland, </publisher> <year> 1990. </year> <month> 12 </month>
Reference-contexts: Indeed, some rather low upper-bounds (in terms of boolean circuits) are known for the relational calculus over finitely representable databases [KG94]. We also investigate other criteria such as the invariance of the properties, their closed form, etc. We illustrate these techniques on queries from computational geometry <ref> [Yao90] </ref>, graph theory, and geographical databases. We investigate their definability in first-order logic over finitely representable databases. We show in particular the non first-order definability of the connectivity of an area in the context of a dense order. <p> Now consider the Euclidian travel salesman query. It was shown to be NP-complete <ref> [Yao90] </ref>. Since each query in L fi can be evaluated in NC, it follows that it is not expressible in L fi unless NC=NP. Acknowledgments The authors wish to thanks Richard Lassaigne, Victor Vianu and the referees for useful comments.
References-found: 29

