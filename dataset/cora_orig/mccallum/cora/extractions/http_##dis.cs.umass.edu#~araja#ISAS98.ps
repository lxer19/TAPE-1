URL: http://dis.cs.umass.edu/~araja/ISAS98.ps
Refering-URL: http://dis.cs.umass.edu/~araja/pubs.html
Root-URL: 
Email: Email: lesser@cs.umass.edu  
Title: A Next Generation Information Gathering Agent  
Author: Victor Lesser Bryan Horling Frank Klassner Anita Raja Thomas Wagner Shelley XQ. Zhang 
Keyword: Information Gathering, Information Agents, Information Systems, Planning, Scheduling, Text Processing.  
Web: http://dis.cs.umass.edu  
Address: Amherst, MA 01003  
Affiliation: Multi-Agent Systems Laboratory Computer Science Department University of Massachusetts  
Abstract: The World Wide Web has become an invaluable information resource but the explosion of information available via the web has made web search a time consuming and complex process. Index-based search engines, such as AltaVista or Infoseek help, but they are not enough. This paper describes the rationale, architecture, and implementation of a next generation information gathering system a system that integrates several areas of Artificial Intelligence (AI) research under a single umbrella. Our solution to the information explosion is an information gathering agent, BIG, that plans to gather information to support a decision process, reasons about the resource trade-offs of different possible gathering approaches, extracts information from both unstructured and structured documents, and uses the extracted information to refine its search and processing activities. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Autonomy agentware technology white paper. </institution> <note> http://www.agentware.com/main/tech/whitepaper.htm. </note>
Reference-contexts: This often results in wider internet coverage, but, the output is simply a list of URLs for the human client to process, thus it also suffers from the same problem as the search engines themselves too much data. A closely related class of work is the personal information agent <ref> [1, 25] </ref>. Rather than simply making single queries to a large number of sites, these agents will actively pursue links to find other relevant information. They are concept-driven, obtaining their area of interest either through hard-coded rules, explicit questionnaires or simple learning techniques.
Reference: [2] <author> J. P. Callan, W. Bruce Croft, and S. M. Harding. </author> <title> The INQUERY retrieval system. </title> <booktitle> In Proceedings of the 3rd International Conference on Database and Expert Systems Applications, </booktitle> <pages> pages 7883, </pages> <year> 1992. </year>
Reference-contexts: However, the same tremendous growth of the web has outstripped the technology available to assist in the navigation, processing, and interpretation of the information available on the web. Advances in information retrieval (IR) <ref> [2, 22] </ref> technologies have lead to the realization of such tools as AltaVista and Infoseek, providing information seekers with a starting point for their searches. However, in many cases, manual browsing through even a limited portion of the relevant information is no longer effective. <p> Our work pushes these ideas to the next level. Our solution to the information explosion is to integrate different Artificial Intelligence (AI) technologies, namely scheduling, planning, text processing, information extraction (IE) <ref> [2, 22, 5, 23] </ref> and interpretation problem solving, into a single information gathering agent, BIG (resource-Bounded Information Gathering), that can take the role of the human information gatherer. BIG locates, retrieves, and processes information to support a human decision process implementationally, BIG helps clients pick software packages.
Reference: [3] <author> Norman Carver and Victor Lesser. </author> <title> A new framework for sensor interpretation: Planning to resolve sources of uncertainty. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence, </booktitle> <pages> pages 724731, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: The scheduler receives the TMS models generated by the task assessor as input and the generated schedule is returned to the RESUN planner for execution. RESUN Planner The RESUN <ref> [3, 4] </ref> (pronounced reason) blackboard based planner/problem solver directs information gathering activities. The planner receives an initial action schedule from the scheduler and then handles information gathering and processing activities.
Reference: [4] <author> Norman Carver and Victor Lesser. </author> <title> The DRESUN testbed for research in FA/C distributed situation assessment: Extensions to the model of external evi dence. </title> <booktitle> In Proceedings of the First International Con--ference on Multiagent Systems, </booktitle> <month> June, </month> <year> 1995. </year>
Reference-contexts: The scheduler receives the TMS models generated by the task assessor as input and the generated schedule is returned to the RESUN planner for execution. RESUN Planner The RESUN <ref> [3, 4] </ref> (pronounced reason) blackboard based planner/problem solver directs information gathering activities. The planner receives an initial action schedule from the scheduler and then handles information gathering and processing activities. <p> A better integration will enable the system to respond more opportunistically to new information and new sources of uncertainty. Another future direction involves moving BIG into a multi-agent system. Our group [18] has a long history of developing distributed problem solving and multi-agent systems <ref> [10, 11, 21, 27, 4] </ref> and we are interested in exploring multi-agent coordination and context via a group of agents descended from the current BIG agent.
Reference: [5] <author> J. Cowie and W.G. Lehnert. </author> <title> Information extraction. </title> <journal> Communications of the ACM, </journal> <volume> 39(1):8091, </volume> <year> 1996. </year>
Reference-contexts: Our work pushes these ideas to the next level. Our solution to the information explosion is to integrate different Artificial Intelligence (AI) technologies, namely scheduling, planning, text processing, information extraction (IE) <ref> [2, 22, 5, 23] </ref> and interpretation problem solving, into a single information gathering agent, BIG (resource-Bounded Information Gathering), that can take the role of the human information gatherer. BIG locates, retrieves, and processes information to support a human decision process implementationally, BIG helps clients pick software packages.
Reference: [6] <editor> Naive bayes document classifier. </editor> <title> Supplement to Machine Learning by Tom Mitchell, 1997, </title> <publisher> McGraw Hill. </publisher> <address> http://www.cs.cmu.edu/afs/cs/project/theo-11/www/naive-bayes.html. </address>
Reference-contexts: text extraction is not performed on them thus no new distracting information objects are added to BIG's blackboard. run in three different modes: 1) BIG alone, 2) BIG with the use of a simple grep-like pattern-matching filter to classify documents, 3) BIG with the use of Naive Bayes document classifier <ref> [6] </ref> and the simple grep filter. The grep-like filter simply examines the document for instances of terms that describe the software genre in question, e.g., word processor. These terms are hand produced for each query genre in essence, hardwired into the system.
Reference: [7] <author> T. Dean and M. Boddy. </author> <title> An analysis of time-dependent planning. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 4954, </pages> <address> St. Paul, Minnesota, </address> <month> August </month> <year> 1988. </year>
Reference-contexts: Design-to-Criteria Scheduler Design-to-Criteria [29, 30] is a domain independent real-time, flexible computation <ref> [15, 7, 26] </ref> approach to task scheduling. The Design-to-Criteria task scheduler reasons about quality, cost, du ration and uncertainty trade-offs of different courses of action and constructs custom satisficing schedules for achieving the high-level goal (s).
Reference: [8] <author> K. Decker, A. Pannu, K. Sycara, and M. Williamson. </author> <title> Designing behaviors for information agents. </title> <booktitle> In Proceedings of the 1st Intl. Conf. on Autonomous Agents, </booktitle> <pages> pages 404413, </pages> <address> Marina del Rey, </address> <month> February </month> <year> 1997. </year>
Reference-contexts: Conceptually, BIG reads free-format text, identifies product features like prices, disk requirements, support policies, etc., extracts these features from the documents and then reasons about them. BIG is related to the WARREN <ref> [8] </ref> multi-agent portfolio management system, which also retrieves and process information, however, BIG differs in its reasoning about the trade-offs of alternative ways to gather information, its ambitious use of gathered information to drive further gathering activities, its bottom-up and top-down directed processing, and its explicit representation of sources-of-uncertainty associated with
Reference: [9] <author> Keith S. Decker. </author> <title> Task environment centered simulation. </title> <editor> In M. Prietula, K. Carley, and L. Gasser, editors, </editor> <title> Simulating Organizations: Computational Models of Institutions and Groups. </title> <publisher> AAAI Press/MIT Press, </publisher> <year> 1996. </year> <month> Forthcoming. </month>
Reference-contexts: The server database is supplemented by an off-line indexing web spider and is also updated with information gained during an on-line search. TMS Modeling Framework The TMS <ref> [9] </ref> task modeling language is used to hierarchically model the information gathering process and enumerate alternative ways to accomplish the high-level gathering goals.
Reference: [10] <author> Keith S. Decker and Victor R. Lesser. </author> <title> Designing a family of coordination algorithms. </title> <booktitle> In Proceedings of the First International Conference on Multi-Agent Systems, </booktitle> <pages> pages 7380, </pages> <address> San Francisco, </address> <month> June </month> <year> 1995. </year> <note> AAAI Press. Longer version available as UMass CS-TR 94 14. </note>
Reference-contexts: A better integration will enable the system to respond more opportunistically to new information and new sources of uncertainty. Another future direction involves moving BIG into a multi-agent system. Our group [18] has a long history of developing distributed problem solving and multi-agent systems <ref> [10, 11, 21, 27, 4] </ref> and we are interested in exploring multi-agent coordination and context via a group of agents descended from the current BIG agent.
Reference: [11] <author> K.S. Decker, V.R. Lesser, M.V. Nagendra Prasad, and T. Wagner. MACRON: </author> <title> an architecture for multi-agent cooperative information gathering. </title> <booktitle> In Proccedings of the CIKM-95 Workshop on Intelligent Information Agents, </booktitle> <address> Baltimore, MD, </address> <year> 1995. </year>
Reference-contexts: A better integration will enable the system to respond more opportunistically to new information and new sources of uncertainty. Another future direction involves moving BIG into a multi-agent system. Our group [18] has a long history of developing distributed problem solving and multi-agent systems <ref> [10, 11, 21, 27, 4] </ref> and we are interested in exploring multi-agent coordination and context via a group of agents descended from the current BIG agent.
Reference: [12] <author> Robert Doorenbos, Oren Etzioni, and Daniel Weld. </author> <title> A scalable comparision-shopping agent for the worldwide-web. </title> <booktitle> In Proceedings of the First International Conference on Autonomous Agents, </booktitle> <pages> pages 3948, </pages> <institution> Marina del Rey, California, </institution> <month> February </month> <year> 1997. </year>
Reference-contexts: Shopping agents typically locate and retrieve documents containing prices for specified products, extract the prices, and then report the gathered price information to the client. For example, the original BargainFinder [20] and the more recent Shopbot <ref> [12] </ref> both work to find the best available prices for music CDs.
Reference: [13] <author> Oren Etzioni. </author> <title> Moving up the information food chain: Employing softbots on the world wide web. </title> <booktitle> In Proceedings of the Thirteenth National Conference on Artificial Intelligence, </booktitle> <pages> pages 13221326, </pages> <address> Portland, OR, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: For any given query, there are simply often too many relevant documents about the requested topic for the human client to efficiently search through and process the information. The solution, as one researcher so aptly put it <ref> [13] </ref>, is to move up the information food chain, in other words, to build higher-level information processing engines. One class of work toward this end is the meta search engine. <p> Meta search engines typically issue queries to multiple search engines like AltaVista and Infoseek in parallel, customizing the human client's query for each search engine and using advanced features of the search engines where available. Examples of this include SavvySearch [16] and MetaCrawler <ref> [13] </ref>; commercial meta search products are also available [17, 31].
Reference: [14] <author> Oren Etzioni, Steve Hanks, Tao Jiang, Richard Karp, Omid Madani, and Orli Waarts. </author> <title> Optimal information gathering on the internet with time and cost constraints. </title> <booktitle> In Proceedings of the Thirty-seventh IEEE Symposium on Foundations of Computer Science (FOCS), </booktitle> <address> Burlington, VT, </address> <month> October </month> <year> 1996. </year>
Reference-contexts: The time/quality/cost trade-off aspect of our work is similar to formal methods <ref> [14] </ref> for reasoning about gathering information, except that our tradeoff analysis focuses on problem solving actions (including text processing) and other agent activities rather than simply focusing on the trade-offs of different information resources, i.e., our work addresses both agent control level and information value.
Reference: [15] <author> Eric Horvitz, Gregory Cooper, and David Heckerman. </author> <title> Reflection and action under scarce resources: Theoretical principles and empirical study. </title> <booktitle> In Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <month> August </month> <year> 1989. </year>
Reference-contexts: Design-to-Criteria Scheduler Design-to-Criteria [29, 30] is a domain independent real-time, flexible computation <ref> [15, 7, 26] </ref> approach to task scheduling. The Design-to-Criteria task scheduler reasons about quality, cost, du ration and uncertainty trade-offs of different courses of action and constructs custom satisficing schedules for achieving the high-level goal (s).
Reference: [16] <author> Adele Howe and Daniel Dreilinger. </author> <title> A Meta-Search Engine that Learns Which Engines to Query. </title> <journal> AI Magazine, </journal> <volume> 18(2), </volume> <year> 1997. </year>
Reference-contexts: Meta search engines typically issue queries to multiple search engines like AltaVista and Infoseek in parallel, customizing the human client's query for each search engine and using advanced features of the search engines where available. Examples of this include SavvySearch <ref> [16] </ref> and MetaCrawler [13]; commercial meta search products are also available [17, 31].
Reference: [17] <author> Inforia quest. </author> <note> http://www.inforia.com/quest/iq.htm. </note>
Reference-contexts: Examples of this include SavvySearch [16] and MetaCrawler [13]; commercial meta search products are also available <ref> [17, 31] </ref>.
Reference: [18] <institution> The multi-agent systems laboratory at the university of massachusetts amherst. dis.cs.umass.edu. </institution>
Reference-contexts: A better integration will enable the system to respond more opportunistically to new information and new sources of uncertainty. Another future direction involves moving BIG into a multi-agent system. Our group <ref> [18] </ref> has a long history of developing distributed problem solving and multi-agent systems [10, 11, 21, 27, 4] and we are interested in exploring multi-agent coordination and context via a group of agents descended from the current BIG agent.
Reference: [19] <author> Jango. </author> <note> http://www.jango.com/. </note>
Reference-contexts: Some shopping agents also integrate some of the of the functionality offered by the personal information agents. For example, the commercial Jango <ref> [19] </ref> shopping agent locates reviews as well as extracting price and very specific product features from vendor web sites.
Reference: [20] <author> Bruce Krulwich. </author> <title> The BargainFinder Agent: Comparison price shopping on the Internet. </title> <editor> In Joseph Williams, editor, Bots and Other Internet Beasties. SAMS.NET, </editor> <year> 1996. </year> <note> http://bf.cstar.ac.com/bf/. </note>
Reference-contexts: Another class of work targeted at moving up the food chain is the shopping agent class. Shopping agents typically locate and retrieve documents containing prices for specified products, extract the prices, and then report the gathered price information to the client. For example, the original BargainFinder <ref> [20] </ref> and the more recent Shopbot [12] both work to find the best available prices for music CDs.
Reference: [21] <author> S. Lander and V.R. Lesser. </author> <title> Negotiated search: Organizing cooperative search among heterogeneous expert agents. </title> <booktitle> In Proceedings of the Fifth International Symposium on Artificial Intelligence Applications in Manufacturing and Robotics, </booktitle> <month> December </month> <year> 1992. </year>
Reference-contexts: A better integration will enable the system to respond more opportunistically to new information and new sources of uncertainty. Another future direction involves moving BIG into a multi-agent system. Our group [18] has a long history of developing distributed problem solving and multi-agent systems <ref> [10, 11, 21, 27, 4] </ref> and we are interested in exploring multi-agent coordination and context via a group of agents descended from the current BIG agent.
Reference: [22] <author> Leah Larkey and W. Bruce Croft. </author> <title> Combining classifiers in text categorization. </title> <booktitle> In Proceedings of the 19th International Conference on Research and Development in Information Retrieval (SIGIR '96), </booktitle> <pages> pages 289297, </pages> <address> Zurich, Switzerland, </address> <year> 1996. </year>
Reference-contexts: However, the same tremendous growth of the web has outstripped the technology available to assist in the navigation, processing, and interpretation of the information available on the web. Advances in information retrieval (IR) <ref> [2, 22] </ref> technologies have lead to the realization of such tools as AltaVista and Infoseek, providing information seekers with a starting point for their searches. However, in many cases, manual browsing through even a limited portion of the relevant information is no longer effective. <p> Our work pushes these ideas to the next level. Our solution to the information explosion is to integrate different Artificial Intelligence (AI) technologies, namely scheduling, planning, text processing, information extraction (IE) <ref> [2, 22, 5, 23] </ref> and interpretation problem solving, into a single information gathering agent, BIG (resource-Bounded Information Gathering), that can take the role of the human information gatherer. BIG locates, retrieves, and processes information to support a human decision process implementationally, BIG helps clients pick software packages.
Reference: [23] <author> W.G. Lehnert and B. Sundheim. </author> <title> A performance evaluation of text analysis technologies. </title> <journal> AI Magazine, </journal> <volume> 12(3):8194, </volume> <year> 1991. </year>
Reference-contexts: Our work pushes these ideas to the next level. Our solution to the information explosion is to integrate different Artificial Intelligence (AI) technologies, namely scheduling, planning, text processing, information extraction (IE) <ref> [2, 22, 5, 23] </ref> and interpretation problem solving, into a single information gathering agent, BIG (resource-Bounded Information Gathering), that can take the role of the human information gatherer. BIG locates, retrieves, and processes information to support a human decision process implementationally, BIG helps clients pick software packages.
Reference: [24] <author> Victor Lesser, Bryan Horling, Frank Klassner, Anita Raja, Thomas Wagner, and Shelley XQ. Zhang. </author> <title> BIG: A resource-bounded information gathering agent. </title> <booktitle> In Proceedings of the Fifteenth National Conference on Artificial Intelligence (AAAI-98), </booktitle> <month> July </month> <year> 1998. </year> <note> To appear. See also UMass CS Technical Reports 98-03 and 97-34. </note>
Reference-contexts: In <ref> [24] </ref> we describe the issues stemming from this complex integration. Despite the integration issues, the combination of the different AI components in BIG and the view of information gathering as an interpretation task has given BIG some very strong abilities.
Reference: [25] <author> Robo surfer. </author> <note> http://www.robosurfer.com/. </note>
Reference-contexts: This often results in wider internet coverage, but, the output is simply a list of URLs for the human client to process, thus it also suffers from the same problem as the search engines themselves too much data. A closely related class of work is the personal information agent <ref> [1, 25] </ref>. Rather than simply making single queries to a large number of sites, these agents will actively pursue links to find other relevant information. They are concept-driven, obtaining their area of interest either through hard-coded rules, explicit questionnaires or simple learning techniques.
Reference: [26] <author> Stuart J. Russell and Shlomo Zilberstein. </author> <title> Composing real-time systems. </title> <booktitle> In Proceedings of the Twelfth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 212217, </pages> <address> Sydney, Australia, </address> <month> August </month> <year> 1991. </year>
Reference-contexts: Design-to-Criteria Scheduler Design-to-Criteria [29, 30] is a domain independent real-time, flexible computation <ref> [15, 7, 26] </ref> approach to task scheduling. The Design-to-Criteria task scheduler reasons about quality, cost, du ration and uncertainty trade-offs of different courses of action and constructs custom satisficing schedules for achieving the high-level goal (s).
Reference: [27] <author> Tuomas Sandholm. </author> <title> An implementation of the contract net protocol based on marginal cost calculations. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 256262, </pages> <address> Washington, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: A better integration will enable the system to respond more opportunistically to new information and new sources of uncertainty. Another future direction involves moving BIG into a multi-agent system. Our group [18] has a long history of developing distributed problem solving and multi-agent systems <ref> [10, 11, 21, 27, 4] </ref> and we are interested in exploring multi-agent coordination and context via a group of agents descended from the current BIG agent.
Reference: [28] <author> S. Soderland, D. Fisher, J Aseltine, and W.G. Lehnert. </author> <title> Crystal: Inducing a conceptual dictionary. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 13141321, </pages> <year> 1995. </year>
Reference-contexts: The information extractors are: textext-ks This knowledge source processes unstruc 1 The advent of XML and other structuring specifications for web documents will help to simplify the problem of processing web-based information. tured text documents using the BADGER <ref> [28] </ref> infor-mation extraction system to extract particular desired data. The extraction component uses a combination of learned domain-specific extraction rules, domain knowledge, and knowledge of sentence construction to identify and extract the desired information.
Reference: [29] <author> Thomas Wagner, Alan Garvey, and Victor Lesser. </author> <title> Complex Goal Criteria and Its Application in Design-to-Criteria Scheduling. </title> <booktitle> In Proceedings of the Fourteenth National Conference on Artificial Intelligence, </booktitle> <pages> pages 294301, </pages> <month> July </month> <year> 1997. </year> <note> Also available as UMASS CS TR-1997-10. </note>
Reference-contexts: Design-to-Criteria Scheduler Design-to-Criteria <ref> [29, 30] </ref> is a domain independent real-time, flexible computation [15, 7, 26] approach to task scheduling. The Design-to-Criteria task scheduler reasons about quality, cost, du ration and uncertainty trade-offs of different courses of action and constructs custom satisficing schedules for achieving the high-level goal (s).
Reference: [30] <author> Thomas Wagner, Alan Garvey, and Victor Lesser. </author> <title> Criteria-Directed Heuristic Task Scheduling. </title> <journal> International Journal of Approximate Reasoning, Special Issue on Scheduling, </journal> <note> 1998. To appear. Also available as UMASS CS TR-97-59. </note>
Reference-contexts: Design-to-Criteria Scheduler Design-to-Criteria <ref> [29, 30] </ref> is a domain independent real-time, flexible computation [15, 7, 26] approach to task scheduling. The Design-to-Criteria task scheduler reasons about quality, cost, du ration and uncertainty trade-offs of different courses of action and constructs custom satisficing schedules for achieving the high-level goal (s).
Reference: [31] <author> Zurfrider. </author> <note> http://www.zurf.com/. </note>
Reference-contexts: Examples of this include SavvySearch [16] and MetaCrawler [13]; commercial meta search products are also available <ref> [17, 31] </ref>.
References-found: 31

