URL: http://www.cs.umd.edu/~rich/courses/cmsc818G-s98/papers/vic_rtas.ps
Refering-URL: http://www.cs.umd.edu/~rich/courses/cmsc818G-s98/schedule.html
Root-URL: 
Email: lastname@cs.uri.edu  prichard@cs.ecu.edu  
Title: The Design of an Open System with Distributed Real-Time Requirements  
Author: Roman Ginis and Victor Fay Wolfe J. J. Prichard 
Address: Rhode Island Kingston, RI 02881  Greenville, NC 27858  
Affiliation: Department of Computer Science University of  Department of Mathematics East Carolina University  
Abstract: This paper describes some of the US Navy's New Attack Submarine C3I system an open system with distributed real-time requirements. It also presents our research design and prototyping efforts that address these requirements. It concludes by discussing several areas where further research is needed to allow open systems to better support real-time applications. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Melton, ed., ANSI X3.135-1992, </author> <title> American national Standard, Database Language SQL. </title> <institution> American National Standards Institute, </institution> <year> 1992. </year>
Reference-contexts: SQL is widely-accepted as the primary relational database standard interface; most commercial vendors provide support for it in their products. The standard was first established in 1986 by the American National Standards Institute (ANSI). The latest revision, which constitutes the current standard, was approved in 1992 <ref> [1] </ref>. The SQL standard consists of three subparts: a data definition part, a data manipulation part and a data control part. The data definition language is used to define the structure and constraints of the database schema.
Reference: [2] <author> P. Fortier, J. Prichard, and V. F. Wolfe, "SQL/RT: </author> <title> Real-time database extensions to the SQL standard." </title> <note> To appear in Standards and Interface Journal, </note> <year> 1994. </year>
Reference-contexts: Real-time extensions to SQL (RTSQL) were proposed to ANSI and ISO by the Navy's Next Generation Computer Resources (NGCR) Database Standards Interface Working Group (DISWG) in 1995 <ref> [2] </ref>. This proposal has resulted in a working group in these standards organizations to address incorporation of the proposed real-time features into the official SQL standard.
Reference: [3] <author> O. M. </author> <title> Group, The Common Request Broker Architecture. </title> <address> X/Open, </address> <year> 1992. </year>
Reference-contexts: Distributed Computing Environment. To integrate the legacy subsystems, the NSSN specification calls for a distributed computing environment that adheres to the Object Management Group's (OMG) CORBA (Common Object Request Broker Architecture) standard <ref> [3] </ref>. The OMG is a consortium of over 500 software providers and users, including most of the major software vendors. They originally came together in the late 1980's to establish a standard way for heterogeneous client and server components to interoperate in a distributed system using the object-oriented paradigm.
Reference: [4] <author> P. Krupp, A. Schafer, B. Thuraisingham, and V. F. Wolfe, </author> <title> "On real-time extensions to the common object request broker architecure," in Proceedings of the Object Oriented Programming, Systems, Languages, and Applications (OOPSLA) '94 Workshop on Experiences with the Common Object Request Broker Architecture (CORBA), </title> <month> Sept. </month> <year> 1994. </year>
Reference-contexts: Currently, there is no support for real-time requirements in CORBA. Our research group, in collaboration 3 |||||||||||||||||||||- with researchers at MITRE Corporation, have presented white papers outlining real-time extensions to CORBA <ref> [4, 5] </ref>. These extensions include the ability for a client to time constrain its method calls, for the server to specify its worst case timing behavior to clients, and for the ORB to perform end-to-end real-time scheduling across the distributed environment.
Reference: [5] <author> V. F. Wolfe, J. Black, B. Thuraisingham, and P. Krupp, </author> <title> "Towards distributed real-time method invocations," </title> <booktitle> in Proceedings of the International High Performance Computing Conference, </booktitle> <month> Dec. </month> <year> 1995. </year>
Reference-contexts: Currently, there is no support for real-time requirements in CORBA. Our research group, in collaboration 3 |||||||||||||||||||||- with researchers at MITRE Corporation, have presented white papers outlining real-time extensions to CORBA <ref> [4, 5] </ref>. These extensions include the ability for a client to time constrain its method calls, for the server to specify its worst case timing behavior to clients, and for the ORB to perform end-to-end real-time scheduling across the distributed environment.
Reference: [6] <author> J. Prichard, </author> <title> "Real-time extensions to the SQL query language." </title> <type> PhD Dissertation, </type> <institution> Department of Computer Science, the University of Rhode Island, </institution> <year> 1995. </year>
Reference-contexts: Though the original system was designed to support SQL, it was relatively easy to move to RTSQL. The CORBA Standard Interface remains virtually the same, i.e. to send queries we simply pass RTSQL instead of SQL. A RTSQL interface to the Zip RTDBMS system was developed in <ref> [6] </ref>. <p> If it does, then values such as CURRENT TIMESTAMP will be evaluated and the timer set immediately before any calls to the Zip RTDBMS are executed. A more complete RTSQL interface to Zip RTDBMS was developed in <ref> [6] </ref>. The interface was implemented by creating an object wrapper to the Zip RTDBMS (similar to DB object), and an RTSQL parser which produced calls to a specific database object.
Reference: [7] <author> IEEE, </author> <title> Portable Operating System Interface (POSIX); Part 1: System API; Ammendment 1: Real-time Extension. </title> <publisher> IEEE, </publisher> <year> 1994. </year> <month> 17 </month>
Reference-contexts: Of course, the client must have the rights and priority to make these changes to the server, since it may impact other objects in the distributed system. 5 Wrapper Architecture application running on any real-time POSIX-compliant operating system <ref> [7] </ref> with CORBA extensions. The Server Node is another application, on a (possibly remote) node that is also running a real-time POSIX-compliant operating system with CORBA extensions.
References-found: 7

