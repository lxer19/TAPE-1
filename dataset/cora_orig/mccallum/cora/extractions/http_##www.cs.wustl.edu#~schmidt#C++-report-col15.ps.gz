URL: http://www.cs.wustl.edu/~schmidt/C++-report-col15.ps.gz
Refering-URL: http://www.cs.wustl.edu/~schmidt/resume.html
Root-URL: http://www.cs.wustl.edu
Email: schmidt@cs.wustl.edu vinoski@iona.com  
Title: Object Interconnections An Introduction to CORBA Messaging (Column 15)  
Author: Douglas C. Schmidt Steve Vinoski 
Note: This column will appear in the November/December 1998 issue of the SIGS C++ Report magazine.  
Address: I nc. Washington University, St. Louis, MO 63130 60 Aberd een Ave., Cambridge, MA 02138  
Affiliation: Department of Computer Science IONA Technologies,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <institution> Object Management Group, Messaging Service Specification, OMG Document orbos/98-05-05 ed., </institution> <month> May </month> <year> 1998. </year>
Reference-contexts: 1 Introduction In this column we begin our coverage of asynchronous messaging and the new CORBA Messaging specification <ref> [1] </ref>. This specification introduces a number of long-awaited features into CORBA, including asynchronous method invocation (AMI), time-independent invocation (TII), and general messaging quality of service (QoS) policies. These new features greatly enhance the standard set of request/response communication models that CORBA provides. <p> Thus, moving from ORB to ORB you can never be sure of what semantics you'll get. Until recently, the CORBA communication model didn't provide a standard solution to the limitations described above. Fortunately, the situation is now much improved with the new CORBA Messaging specification <ref> [1] </ref>. In our next column, we'll show how this specification fixes the limitations with the tedium of programming with deferred synchronous operations via the DII and the weak semantics of oneway operations.
Reference: [2] <author> D. C. Schmidt, A. Gokhale, T. Harrison, and G. </author> <month> Parulkar, </month>
Reference-contexts: While it is waiting, the client thread that invoked the request is blocked and can't perform any other processing. Thus, a single-threaded client can be completely blocked while waiting for a response, which may be unsatisfactory for certain types of performance-constrainted applications <ref> [2] </ref>. Oneway: A oneway invocation is composed of only a request, with no response. The creators of the first version of CORBA intended ORBs to deliver oneways over unreliable transports and protocols such as the User Datagram Protocol (UDP).
References-found: 2

