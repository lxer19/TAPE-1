URL: http://www.eecs.umich.edu/~tnm/papers/micro27.ps
Refering-URL: http://www.eecs.umich.edu/~tnm/papers.html
Root-URL: http://www.cs.umich.edu
Keyword: cache memory, interlocks, memory system, pipelines, RISC  
Abstract: We examine two pipeline structures which are employed in commercial microprocessors. The first is the load-use interlock (LUI) pipeline, which employs an interlock to ensure correct operation during load-use hazards. The second is the address-generation interlock (AGI) pipeline. It eliminates the load-use hazard, but has an address-generation hazard which requires an address-generation interlock for correct operation. We compare the performance of these two pipelines on existing binaries and on applications which have been recompiled with a local code scheduler that understands the difference in the pipeline structures. When branch prediction is more than 80% accurate and the data cache access time is greater than two cycles, the AGI pipeline performs significantly better than the LUI pipeline on existing binaries. Recompiling the benchmarks with a new local code scheduler provides little additional performance improvement. 
Abstract-found: 1
Intro-found: 1
Reference: [2] <author> D. Dobberpuhl, R. Witek, R. Alimon, R. Anglin, S. Brit-ton, L. Chao, R. Conrad, D. Dever, B. Gleseke, G. Hoep-pner, J. Kowaleski, K. Kuchler, M. Ladd, M. Leary, L. Madden, E. McLellan, D. Meyer, J. Montanero, D. Priors, V. Rajagopalan, S. Samudraia, and S. Santhanam, </author> <title> A 200 MHz 64b dual-issue CMOS microprocessor, </title> <booktitle> in Proc. 92 IEEE Intl Solid-State Circuits Conf. </booktitle> <volume> 107, </volume> <month> February </month> <year> 1992. </year>
Reference-contexts: In real systems it is unlikely that there would be significant difference in the access time of the instruction and data caches. For example, the DEC 21064 implementation of the Alpha architecture has a two-cycle access time for both caches <ref> [2] </ref> [16]. For each additional cycle of instruction cache access time, an IF stage must be added to the pipeline The scope of branches is increased by one instruction per additional IF stage.
Reference: [3] <author> M. Golden and T. Mudge, </author> <title> Hardware support for hiding cache latency, </title> <type> Technical Report CSE-TR-152-93, </type> <institution> The University of Michigan, Department of Electrical Engineering and Computer Science, </institution> <address> Ann Arbor, MI, 48109-2122, </address> <year> 1993. </year>
Reference-contexts: The use of load-use-interlock stalls avoids the code expansion of NOPs, but it too reduces efficiency. Finally, loads are much more difficult to predict and thus the last method is rarely be used <ref> [3] </ref>. Again these approaches are not mutually exclusive. Address-generation hazards occur when a value is computed for a register that is used to form the address of the data retrieved by a load instruction. For the purposes of this discussion we consider only the base-register-plus-offset address mode for load instructions.
Reference: [4] <author> L. Gwennap, </author> <title> TFP designed for tremendous oating point, Microprocessor Report , vol. </title> <journal> 7, </journal> <volume> no. 11, </volume> <pages> pp. 913, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: It is subject to branch hazards and load hazards, but not address-generation hazards. The second, which we shall refer to as the address-generation interlock (AGI) pipeline, was introduced in the TFP processor announced by Silicon Graphics Inc. The TFP also implements the MIPS ISA <ref> [4] </ref> [7]. It rearranges the LUI pipeline, moving the execute stage later in the pipeline, so that load hazards are eliminated. However, this change introduces address-generation hazards and increases the penalty for branch hazards.
Reference: [5] <author> L. Gwennap, </author> <title> Cyrix describes pentium competitor, Microprocessor Report , vol. </title> <journal> 7, </journal> <volume> no. 14, </volume> <pages> pp. </pages> <address> 1,610, </address> <month> Octo-ber </month> <year> 1993. </year>
Reference: [6] <author> L. Gwennap, </author> <title> Intel reveals Pentium implementation details, Microprocessor Report , vol. </title> <journal> 7, </journal> <volume> no. 4, </volume> <pages> pp. 917, </pages> <month> March </month> <year> 1993. </year>
Reference-contexts: Instead, NOPs are inserted after loads and branches, as required, to ensure correct operation. Load interlocks were added in the R6000 and subsequently in the R4000, R4200, and R4400 [11]. The AGI pipeline is used in the Intel Pentium and the Cyrix M1 as well as the TFP [1][5] <ref> [6] </ref>. All three processors with AGI pipe lines are also designed to preserve binary compatibility with earlier LUI microprocessors.
Reference: [7] <author> P. Y. T. Hsu, </author> <title> Designing the TFP microprocessor, </title> <journal> Micro , vol. </journal> <volume> 14, no. 2, </volume> <pages> pp. 2333, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: It is subject to branch hazards and load hazards, but not address-generation hazards. The second, which we shall refer to as the address-generation interlock (AGI) pipeline, was introduced in the TFP processor announced by Silicon Graphics Inc. The TFP also implements the MIPS ISA [4] <ref> [7] </ref>. It rearranges the LUI pipeline, moving the execute stage later in the pipeline, so that load hazards are eliminated. However, this change introduces address-generation hazards and increases the penalty for branch hazards.
Reference: [8] <author> W. W. Hwu, S. A. Mahlke, W. Y. Chen, P. P. Chang, N. J. Warter, R. A. Birmingham, R. G. Oullette, R. E. Hank, T. Kiyohara, G. E. Haab, J. G. Holm, and D. M. Lavery, </author> <title> The superblock: An effective technique for VLIW and superscalar compilation, </title> <journal> The Journal of Supercomputing , vol. </journal> <volume> 7, no. 1/2, </volume> <pages> pp. 229248, </pages> <year> 1993. </year>
Reference: [9] <author> M. Johnson, </author> <title> Superscalar Microprocessor Design , Pren-tice Hall, </title> <address> Englewood Cliffs, N.J., </address> <year> 1991. </year>
Reference-contexts: Of course, their individual execution pipes are likely to be of the LUI or AGI type, and future studies might investigate their relative merits in this setting where the matter of instruction dependency becomes much more complex. For two excellent discussions on this, the reader is re ferred to <ref> [9] </ref> and [15]. 3 Two pipeline organizations 3.1 The load-use interlock pipeline The LUI pipeline is shown in Figure 1. This has been referred to as the classic five stage RISC pipeline [18].
Reference: [10] <author> N. P. Jouppi, </author> <title> Cache write policies and performance, </title> <type> Technical report, </type> <institution> Digital Equipment Corporation Western Research Laboratory, 250 University Ave., </institution> <address> Palo Alto, CA, 94301, </address> <month> December </month> <year> 1991. </year>
Reference-contexts: A hazard can occur if, before the store completes, a load instruction is issued that retrieves data from the memory location that is the target of the store. Microarchi-tectural features such as write buffers or write caches with hazard detection logic have been used to solve this problem <ref> [10] </ref>. In this paper, the effects of store hazards are ignored.
Reference: [11] <author> G. Kane and J. Heinrich, </author> <title> MIPS RISC Architecture , Pren-tice-Hall, </title> <address> Englewood Cliffs, NJ, </address> <year> 1992. </year>
Reference-contexts: It does not employ hardware interlocks for loads or branches. Instead, NOPs are inserted after loads and branches, as required, to ensure correct operation. Load interlocks were added in the R6000 and subsequently in the R4000, R4200, and R4400 <ref> [11] </ref>. The AGI pipeline is used in the Intel Pentium and the Cyrix M1 as well as the TFP [1][5] [6]. All three processors with AGI pipe lines are also designed to preserve binary compatibility with earlier LUI microprocessors. <p> If the first dependent instruction in the load scope is instructions after the load, then the interlock will stall the pipeline for (N )+1 cycles. instruction in the load-delay slot <ref> [11] </ref>. In high clock rate microprocessors, even the on-chip primary cache can take more than one cycle to access. This paper will also consider a generalization of the LUI pipeline to systems with multiple-cycle data cache access times. These pipelines will contain additional MEM stages.
Reference: [12] <author> S. M. Krishnamurthy, </author> <title> A brief survey of papers on scheduling for pipelined processors , SIGPLAN Notices, </title> <journal> vol. </journal> <volume> 25, no. 7, </volume> <pages> pp. 97-106, </pages> <month> July </month> <year> 1990. </year>
Reference-contexts: Once the instructions are prioritized, GCC attempts to schedule each instruction so that the pipeline will never interlock. For a discussion of scheduling techniques for pipelined processors, see <ref> [12] </ref>. To provide a binary which optimizes for load-use hazards, one version of each benchmark is produced in which GCC is told that two instructions are required between a load and its use for interlock-free execution.
Reference: [13] <editor> MIPS chip set implements full ECL CPU, </editor> <volume> Microprocessor Report , vol. 3, no. 12, </volume> <pages> pp. </pages> <address> 1,1419, </address> <month> December </month> <year> 1989. </year>
Reference-contexts: as the load-use interlock (LUI) pipeline, was introduced in the A Comparison of Two Pipeline Organizations Michael Golden and Trevor Mudge Electrical Engineering and Computer Science Department University of Michigan 1301 Beal Avenue Ann Arbor, Michigan, 48109-2122 email: -mgolden,tnm-@eecs.umich.edu MIPS R6000a short-lived ECL implementation of the MIPS instruction-set architecture (ISA) <ref> [13] </ref>. It is subject to branch hazards and load hazards, but not address-generation hazards. The second, which we shall refer to as the address-generation interlock (AGI) pipeline, was introduced in the TFP processor announced by Silicon Graphics Inc. The TFP also implements the MIPS ISA [4] [7].
Reference: [14] <author> K. Olukotun, T. Mudge, and R. Brown, </author> <title> Performance optimization of pipelined memory caches, </title> <booktitle> in Proc. 19th Ann. Intl Symp. Computer Architecture Gold Coast, </booktitle> <address> Australia, May 1992, </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: 1 Introduction Although pipelining is a widely used technique for speeding up instruction execution, the existence of dependences between instructions means that pipelines cannot run at 100% efficiency. Nevertheless, the improvement in speed through pipelining usually offsets any loss in performance <ref> [14] </ref>. This paper will examine three types of hazards that can reduce the efficiency of a pipeline: branch, load, and address-generation hazards. In particular we will compare two pipeline organizations employed in several commercial machines that make different trade-offs between these three hazards.
Reference: [15] <author> B. R. Rau and J. A. Fisher, </author> <title> Instruction-level parallel processing: history, overview, and perspective, </title> <journal> The Journal of Supercomputing , vol. </journal> <volume> 7, no. 1/2, </volume> <pages> pp. 950, </pages> <year> 1993. </year>
Reference-contexts: For two excellent discussions on this, the reader is re ferred to [9] and <ref> [15] </ref>. 3 Two pipeline organizations 3.1 The load-use interlock pipeline The LUI pipeline is shown in Figure 1. This has been referred to as the classic five stage RISC pipeline [18]. Each box represents a single machine cycle and a list of the functions that are performed during that cycle.
Reference: [16] <author> J. Shortt. </author> <title> Alpha AXP Architecture DECUS Presentation 1992. </title>
Reference-contexts: In real systems it is unlikely that there would be significant difference in the access time of the instruction and data caches. For example, the DEC 21064 implementation of the Alpha architecture has a two-cycle access time for both caches [2] <ref> [16] </ref>. For each additional cycle of instruction cache access time, an IF stage must be added to the pipeline The scope of branches is increased by one instruction per additional IF stage.
Reference: [17] <author> R. L. </author> <title> Sites, Alpha Architecture Reference Manual , Digital press, </title> <address> Maynard, MA, </address> <year> 1992. </year>
Reference-contexts: All memory references hit in the instruction and data caches. Instruction fetch requires a single cycle. Load-delay slots have been eliminated in newer RISC architectures, such as the Alpha, because, as cache access times get longer, code expansion caused by NOPs in unfilled delay slots becomes a problem <ref> [17] </ref>.
Reference: [18] <author> J. E. Smith and S. Weiss, </author> <title> PowerPC 601 and Alpha 21064: a tale of two RISCs, </title> <journal> Computer , vol. </journal> <volume> 27, no. 6, </volume> <pages> pp. 4658, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: For two excellent discussions on this, the reader is re ferred to [9] and [15]. 3 Two pipeline organizations 3.1 The load-use interlock pipeline The LUI pipeline is shown in Figure 1. This has been referred to as the classic five stage RISC pipeline <ref> [18] </ref>. Each box represents a single machine cycle and a list of the functions that are performed during that cycle.
Reference: [19] <author> M. D. Smith, </author> <title> Tracing with pixie, </title> <institution> Center for integrated systems, Stanford University, </institution> <address> Stanford CA, 94305-4070, 1.1 edition, </address> <month> April </month> <year> 1991. </year> <note> Available by anonymous ftp from velox.stanford.edu. </note>
Reference-contexts: Each version of the program is then instrumented to produce an instruction and data trace by pixie . A simulator based on the xsim tool developed by M. Smith consumes the trace <ref> [19] </ref>. The simulator models a machine with the following characteristics: There are no load-delay slots. Other delay slots, mainly those required by the MIPS architecture for integer multiply and divide instructions, are present in the machine model.
Reference: [20] <author> R. M. Stallman, </author> <title> Using and Porting GNU CC , Boston, MA: Free Software Foundation, </title> <publisher> Inc., </publisher> <address> 2.4.5 edition, </address> <year> 1993. </year>
Reference-contexts: This architecture was chosen for several reasons: The MIPS architecture has been implemented with a LUI pipeline and with an AGI pipeline. The R series machines all have LUI pipelines and the TFP has an AGI pipeline. The Gnu C Compiler (GCC) is available for the MIPS architecture <ref> [20] </ref>. GCC is in the public domain and the source codes are easily available, so the compiler may be modified. The MIPS is a load/store architecture, so all memory operations are contained in explicit load and store instructions.
References-found: 19

