URL: http://www-sal.cs.uiuc.edu/~nachum/papers/open-final.ps.gz
Refering-URL: http://sal.cs.uiuc.edu/~nachum/papers/
Root-URL: http://www.cs.uiuc.edu
Email: nachum@cs.uiuc.edu  jouannau@lri.lri.fr  jwk@cwi.nl  
Title: Open Problems in Rewriting  
Author: Nachum Dershowitz Jean-Pierre Jouannaud Jan Willem Klop 
Address: 1304 West Springfield Avenue, Urbana, IL 61801, U.S.A.  91405 Orsay, France  Kruislaan 413, 1098 SJ Amsterdam, The Netherlands  Boelelaan 1081, 1081 HV Amsterdam, The Netherlands  
Affiliation: Department of Computer Science, University of Illinois  Laboratoire de Recherche en Informatique, Bat. 490 Universite de Paris Sud,  CWI,  Department of Mathematics and Computer Science, Free University de  
Abstract-found: 0
Intro-found: 1
Reference: [1] <editor> H. Ait-Kaci and M. Nivat, eds. </editor> <title> Resolution of Equations in Algebraic Structures. Vol. 2: Rewriting Techniques, </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1989. </year>
Reference-contexts: rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers <ref> [1] </ref>; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84].
Reference: [2] <author> J. Avenhaus and K. Madlener. </author> <title> Term rewriting and equational reasoning. </title> <editor> In R. B. Banerji, editor, </editor> <booktitle> Formal Techniques in Artificial Intelligence: A Sourcebook, </booktitle> <pages> pp. 1-41, </pages> <publisher> Elsevier, </publisher> <address> Am-sterdam, </address> <year> 1990. </year>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys <ref> [2, 7, 27, 28, 44, 56, 57, 76, 82, 81] </ref>; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84].
Reference: [3] <author> L. Bachmair. </author> <title> Canonical Equational Proofs. </title> <publisher> Birkhauser, </publisher> <address> Boston, </address> <year> 1991. </year> <note> To appear. </note>
Reference-contexts: in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs <ref> [3, 12, 55, 65] </ref>; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84].
Reference: [4] <author> L. Bachmair and N. Dershowitz. </author> <title> Inference rules for rewrite-based first-order theorem proving. </title> <booktitle> In Proceedings of the Second IEEE Symposium on Logic in Computer Science, </booktitle> <pages> pp. 331-337, </pages> <address> Ithaca, NY, </address> <month> June </month> <year> 1987. </year>
Reference-contexts: Also, it is not known if unifications of maximal atoms (under a given term ordering) suffice. (The same problem for Hsiang's method was solved positively in [73, 94].) In other respects, too, the set of inference rules in <ref> [4, 48] </ref> may be larger than necessary and the simplification weaker than possible. Problem 37 (U. Reddy, F. Bronsard). In [17] a rewriting-like mechanism for clausal reasoning called "contextual deduction" was proposed.
Reference: [5] <author> L. Bachmair and J. Hsiang, eds. </author> <title> Rewrite Techniques in Theorem Proving (Special Issue). </title> <booktitle> Vol. 11 (1) of J. Symbolic Computation, </booktitle> <publisher> Academic Press, </publisher> <year> 1991. </year> <note> To appear. </note>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues <ref> [5, 88, 24, 40, 67] </ref>; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84].
Reference: [6] <author> T. Baird, G. Peterson, and R. Wilkerson. </author> <title> Complete sets of reductions modulo Associativity, Commutativity and Identity. </title> <editor> In N. Dershowitz, editor, </editor> <booktitle> Proceedings of the Third International Conference on Rewriting Techniques and Applications, </booktitle> <pages> pp. 29-44, </pages> <address> Chapel Hill, NC, </address> <month> Apr. </month> <year> 1989. </year> <title> Vol. </title> <booktitle> 355 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference-contexts: Completion modulo associativity and commutativity (AC) [79] is probably the most important case of "extended completion"; the general case of finite congruence classes is treated in [43]. Adding an axiom (Z) for an identity element, however, gives rise to infinite classes. This case was viewed as conditional completion in <ref> [6] </ref>, and solved completely in [45]. The techniques, however, do not carry over to completion with idempotence (I) added; how to handle ACZI-completion effectively is open. Problem 34.
Reference: [7] <author> H. P. Barendregt. </author> <title> Lambda calculi with types. </title> <editor> In S. Abramsky, D. M. Gabbay, and T. S. E. Maibaum, eds., </editor> <booktitle> Handbook of Logic in Computer Science, </booktitle> <publisher> Oxford University Press, Oxford, </publisher> <year> 1991. </year> <note> To appear. </note>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys <ref> [2, 7, 27, 28, 44, 56, 57, 76, 82, 81] </ref>; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84]. <p> What is the complexity of this test? Problem 4. One of the outstanding open problems in typed lambda calculi is the following: Given a term in ordinary untyped lambda calculus, is it decidable whether it can be typed in the second-order 2 calculus? See <ref> [7] </ref>. Problem 5 (A. Meyer, R. de Vrijer).
Reference: [8] <author> H. P. Barendregt. </author> <title> The Lambda Calculus, its Syntax and Semantics. </title> <publisher> North-Holland, </publisher> <address> Ams-terdam, </address> <note> second edition, </note> <year> 1984. </year>
Reference-contexts: three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) <ref> [8, 9, 35, 54, 60, 75, 84] </ref>. To encourage and stimulate continued progress in this area, we have collected (with the help of colleagues) a number of problems that appear to us to be of interest and regarding which we do not know the answer.
Reference: [9] <author> H. P. Barendregt. </author> <title> The Typed Lambda Calculus, its Syntax and Semantics. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1991. </year>
Reference-contexts: three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) <ref> [8, 9, 35, 54, 60, 75, 84] </ref>. To encourage and stimulate continued progress in this area, we have collected (with the help of colleagues) a number of problems that appear to us to be of interest and regarding which we do not know the answer.
Reference: [10] <author> G. Bauer. </author> <title> n-level rewriting systems. </title> <journal> Theoretical Computer Science, </journal> <volume> 40 </volume> <pages> 85-99, </pages> <year> 1985. </year>
Reference-contexts: the other hand, any theory with decidable word problem can be solved by ordered-rewriting with some ordered system for some conservative extension of the theory (that is, with new symbols) [30], or with a two-phased version of rewriting, wherein normal forms of the first system are inputs to the second <ref> [10] </ref>. Problem 32. Is there a finite term-rewriting system of some kind for free lattices? Problem 33. Completion modulo associativity and commutativity (AC) [79] is probably the most important case of "extended completion"; the general case of finite congruence classes is treated in [43].
Reference: [11] <author> A. Ben Cherifa and P. Lescanne. </author> <title> Termination of rewriting systems by polynomial interpretations and its implementation. </title> <booktitle> Science of Computer Programming, </booktitle> <volume> 9(2) </volume> <pages> 137-159, </pages> <month> Oct. </month> <year> 1987. </year>
Reference-contexts: Can those ideas be extended to form the basis for some new kind of "recursive path ordering"? Problem 28 (P. Lescanne). Polynomial and exponential interpretations have been used to prove termination. For the former there are some reasonable methods <ref> [11, 63] </ref> that can help determine if a particular interpretation decreases with each application of a rule. Are there other implementable methods suitable for exponential interpretations? Problem 29.
Reference: [12] <author> B. Benninghofen, S. Kemmerich, and M. M. Richter. </author> <title> Systems of Reductions. </title> <booktitle> Vol. 277 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1987. </year>
Reference-contexts: in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs <ref> [3, 12, 55, 65] </ref>; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84].
Reference: [13] <author> J. A. Bergstra and J. W. Klop. </author> <title> Conditional rewrite rules: Confluency and termination. </title> <journal> J. of Computer and System Sciences, </journal> <volume> 32 </volume> <pages> 323-362, </pages> <year> 1986. </year>
Reference-contexts: Under which interesting syntactic restrictions do conditional rewrite systems enjoy the same property? It is known that orthogonal "normal" conditional rewriting systems (with conditions u ! ! v, where v is a ground normal form) are confluent, while "standard" (join) ones are not <ref> [13] </ref>. Problem 15 (Y. Toyama).
Reference: [14] <author> G. Berry and J. Levy. </author> <title> Mimimal and optimal computations of recursive programs. </title> <journal> J. of the Association for Computing Machinery, </journal> <volume> 26 </volume> <pages> 148-175, </pages> <year> 1979. </year>
Reference-contexts: Levy (see <ref> [14, 55, 57] </ref>). Problem 3. A term t is "ground reducible" with respect to a rewrite system R if all its ground (variable-free) instances contain a redex. Ground reducibility is decidable for ordinary rewriting (and finite R) [20, 49, 80]. What is the complexity of this test? Problem 4.
Reference: [15] <editor> R. Book, ed. </editor> <booktitle> Proceedings of the Fourth International Conference on Rewriting Techniques and Applications (Como, </booktitle> <address> Italy), </address> <publisher> Springer, </publisher> <address> Berlin, </address> <month> Apr. </month> <year> 1991. </year>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) <ref> [15, 26, 41, 66] </ref>; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them
Reference: [16] <author> A. Boudet, E. Contejean, and H. Devie. </author> <title> A new ac unification algorithm with an algorithm for solving diophantine equations. </title> <booktitle> In Proceedings of the Fifth Annual IEEE Symposium on Logic in Computer Science, </booktitle> <pages> pp. 289-299, </pages> <address> Philadelphia, PA, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: Fages [32] proved that associative-commutative unification terminates when "variable replacement" is made after each step. Boudet, et al. <ref> [16] </ref> have proven that it terminates when variable replacement is postponed to the end. Does the same (or similar) set of transformation rules terminate with more flexible control? Problem 41. The complexity of the theory of finite trees when there are finitely many symbols is known to be PSPACE-hard [69].
Reference: [17] <author> F. Bronsard and U. S. Reddy. </author> <title> Conditional rewriting in Focus. </title> <editor> In M. Okada, editor, </editor> <booktitle> Proceedings of the Second International Workshop on Conditional and Typed Rewriting Systems, </booktitle> <publisher> Springer, </publisher> <address> Montreal, Canada, </address> <year> 1991. </year> <note> To appear. </note>
Reference-contexts: Problem 37 (U. Reddy, F. Bronsard). In <ref> [17] </ref> a rewriting-like mechanism for clausal reasoning called "contextual deduction" was proposed. It specializes "ordered resolution" by using pattern matching in place of unification, only instantiating clauses to match existing clauses. Does contextual deduction always terminate? (In [17] it was taken to be obvious, but that is not clear; see also <p> Problem 37 (U. Reddy, F. Bronsard). In <ref> [17] </ref> a rewriting-like mechanism for clausal reasoning called "contextual deduction" was proposed. It specializes "ordered resolution" by using pattern matching in place of unification, only instantiating clauses to match existing clauses. Does contextual deduction always terminate? (In [17] it was taken to be obvious, but that is not clear; see also [74].) It was shown in [17] that the mechanism is complete for refuting ground clauses using a theory that contains all its "strong-ordered" resolvents. <p> It specializes "ordered resolution" by using pattern matching in place of unification, only instantiating clauses to match existing clauses. Does contextual deduction always terminate? (In <ref> [17] </ref> it was taken to be obvious, but that is not clear; see also [74].) It was shown in [17] that the mechanism is complete for refuting ground clauses using a theory that contains all its "strong-ordered" resolvents.
Reference: [18] <author> E. A. Cichon. </author> <title> Bounds on Derivation Lengths from Termination Proofs. </title> <type> Technical Report CSD-TR-622, </type> <institution> Department of Computer Science, University of London, Surrey, Eng-land, </institution> <month> June </month> <year> 1990. </year>
Reference-contexts: Is termination of one linear (left and right) rule decidable? Left linearity alone is not enough for decidability [21]. Problem 22. Devise practical methods for proving termination of (standard) conditional rewriting systems. Part of the difficulty stems from the interdependence of normalization and termination. Problem 23 (E. A. Cochin <ref> [18] </ref>). <p> Must any termination ordering have the Howard ordinal as its order type, as conjectured in <ref> [18] </ref>? Problem 24. The existential fragment of the first-order theory of the "recursive path ordering" (with multiset and lexicographic "status") is decidable when the precedence on function symbols is total [19, 46], but is undecidable for arbitrary formulas.
Reference: [19] <author> H. Comon. </author> <title> Solving inequations in term algebras (Preliminary version). </title> <booktitle> In Proceedings of the Fifth Annual IEEE Symposium on Logic in Computer Science, </booktitle> <pages> pp. 62-69, </pages> <address> Philadelphia, PA, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: Must any termination ordering have the Howard ordinal as its order type, as conjectured in [18]? Problem 24. The existential fragment of the first-order theory of the "recursive path ordering" (with multiset and lexicographic "status") is decidable when the precedence on function symbols is total <ref> [19, 46] </ref>, but is undecidable for arbitrary formulas. Is the existential fragment decidable for partial precedences? 2.5 Validity Problem 25 (R. Treinen).
Reference: [20] <author> H. Comon. </author> <title> Unification et Disunification: Theorie et Applications. </title> <type> PhD thesis, </type> <institution> l'Institut National Polytechnique de Grenoble, </institution> <year> 1988. </year>
Reference-contexts: Levy (see [14, 55, 57]). Problem 3. A term t is "ground reducible" with respect to a rewrite system R if all its ground (variable-free) instances contain a redex. Ground reducibility is decidable for ordinary rewriting (and finite R) <ref> [20, 49, 80] </ref>. What is the complexity of this test? Problem 4. One of the outstanding open problems in typed lambda calculi is the following: Given a term in ordinary untyped lambda calculus, is it decidable whether it can be typed in the second-order 2 calculus? See [7]. <p> Problem 42 (H. Comon). Given a first-order formula with equality as the only predicate symbol, can negation be effectively eliminated from an arbitrary formula when is equivalent to a positive formula? Equivalently, if has a finite complete set of unifiers, can they be computed? Special cases were solved in <ref> [20, 64] </ref>. Problem 43. Design a framework for combining constraint solving algorithms. Problem 44 (H. Comon). "Syntactic" theories enjoy the property that a (semi-) unification algorithm can be derived from the axioms [42, 53].
Reference: [21] <author> M. Dauchet. </author> <title> Simulation of Turing machines by a left-linear rewrite rule. </title> <editor> In N. Dershowitz, editor, </editor> <booktitle> Proceedings of the Third International Conference on Rewriting Techniques and Applications, </booktitle> <pages> pp. 109-120, </pages> <address> Chapel Hill, NC, </address> <month> Apr. </month> <year> 1989. </year> <title> Vol. </title> <booktitle> 355 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference-contexts: Problem 21 (M. Dauchet). Is termination of one linear (left and right) rule decidable? Left linearity alone is not enough for decidability <ref> [21] </ref>. Problem 22. Devise practical methods for proving termination of (standard) conditional rewriting systems. Part of the difficulty stems from the interdependence of normalization and termination. Problem 23 (E. A. Cochin [18]).
Reference: [22] <author> M. Dauchet, T. Heuillard, P. Lescanne, and S. Tison. </author> <title> Decidability of the confluence of finite ground term rewriting systems and of other related term rewriting systems. </title> <journal> Information and Computation, </journal> <volume> 88(2) </volume> <pages> 187-201, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: Is unicity of normal forms (UN) a modular property of standard conditional systems? 2.3 Confluence Problem 12. What is the complexity of the decision problem for the confluence of ground (variable-free) term-rewriting systems? Decidability was shown in <ref> [22, 78] </ref>; see also [23]. Problem 13 (J.-J. Levy). By a lemma of G.
Reference: [23] <author> M. Dauchet and S. Tison. </author> <title> The theory of ground rewrite systems is decidable. </title> <booktitle> In Proceedings of the Fifth IEEE Symposium on Logic in Computer Science, </booktitle> <pages> pp. 242-248, </pages> <address> Philadelphia, PA, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: Is unicity of normal forms (UN) a modular property of standard conditional systems? 2.3 Confluence Problem 12. What is the complexity of the decision problem for the confluence of ground (variable-free) term-rewriting systems? Decidability was shown in [22, 78]; see also <ref> [23] </ref>. Problem 13 (J.-J. Levy). By a lemma of G.
Reference: [24] <editor> N. Dershowitz, ed. </editor> <booktitle> Rewriting Techniques and Applications III (Special Issue). J. of Symbolic Computation, </booktitle> <publisher> Academic Press, </publisher> <year> 1992. </year> <note> To appear. </note>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues <ref> [5, 88, 24, 40, 67] </ref>; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84].
Reference: [25] <author> N. Dershowitz. </author> <title> Termination of rewriting. </title> <journal> J. of Symbolic Computation, </journal> 3(1&2):69-115, February/April 1987. Corrigendum: <volume> 4, </volume> 3 (December 1987), <pages> 409-410. </pages>
Reference-contexts: Is subterm the maximal relation with these properties? Is "encompassment" ("containment", the combination of subterm and subsumption) the maximal relation which preserves termination (without full invariance)? Problem 30 (W. Snyder). What are the complexities of the various term ordering decision problems in the literature (see <ref> [25] </ref>)? Determining if a precedence exists that makes two ground terms comparable in the recursive path ordering is NP-complete [61], but an inequality can be decided in O (n 2 ), using a dynamic programming algorithm.
Reference: [26] <editor> N. Dershowitz, ed. </editor> <booktitle> Third International Conference on Rewriting Techniques and Applications, </booktitle> <address> Chapel Hill, NC, </address> <month> April </month> <year> 1989. </year> <title> Vol. </title> <booktitle> 355 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) <ref> [15, 26, 41, 66] </ref>; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them
Reference: [27] <author> N. Dershowitz and J. Jouannaud. </author> <title> Rewrite systems. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science B: Formal Methods and Semantics, chapter 6, </booktitle> <pages> pp. 243-320, </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys <ref> [2, 7, 27, 28, 44, 56, 57, 76, 82, 81] </ref>; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84]. <p> We use primarily terminology and notation of <ref> [27] </ref>. fl Research supported in part by the National Science Foundation under Grant CCR-9007195. y Research partially supported by ESPRIT BRA projects 3020: Integration and 3074: Semagraph. 2 Problems 2.1 Rewriting Problem 1. <p> Problem 22. Devise practical methods for proving termination of (standard) conditional rewriting systems. Part of the difficulty stems from the interdependence of normalization and termination. Problem 23 (E. A. Cochin [18]). The following system <ref> [27] </ref>, based on the "Battle of Hydra and Hercules" in [52], is terminating, but not provably so in Peano Arithmetic: h (z; e (x)) ! h (c (z); d (z; x)) d (z; g (x; y)) ! g (e (x); d (z; y)) g (e (x); e (y)) ! e (g
Reference: [28] <author> N. Dershowitz and J.-P. Jouannaud. </author> <title> Rewrite systems. </title> <editor> In S. Shapiro, editor, </editor> <booktitle> Encyclopedia of Artificial Intelligence, </booktitle> <publisher> Wiley, </publisher> <year> 1991. </year> <note> In preparation. </note>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys <ref> [2, 7, 27, 28, 44, 56, 57, 76, 82, 81] </ref>; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84].
Reference: [29] <author> N. Dershowitz, S. Kaplan, and D. A. Plaisted. </author> <title> Rewrite, Rewrite, Rewrite, Rewrite, Rewrite,: </title> : : . <booktitle> Theoretical Computer Science, </booktitle> <year> 1991. </year> <note> In press. </note>
Reference-contexts: Now the notion of infinite reduction in [51] is based upon "strong convergence" of infinite sequences of terms in order to define (possibly infinite) limit terms. In related work, Dershowitz, et al. <ref> [29] </ref> use a more "liberal" notion of convergent sequences (which is referred to in [51] as "Cauchy convergence"). What is unknown (among other questions in this new area) is if this "almost-confluent" result is also valid for the more liberal convergent infinite reduction sequences? 2.4 Termination Problem 19 (J.-J. Levy).
Reference: [30] <author> N. Dershowitz, L. Marcus, and A. Tarlecki. </author> <title> Existence, Uniqueness, and Construction of Rewrite Systems. </title> <type> Technical Report ATR-85(8354)-7, </type> <institution> Computer Science Laboratory, The Aerospace Corporation, El Segundo, </institution> <address> CA, </address> <month> December </month> <year> 1985. </year>
Reference-contexts: symbols to the vocabulary? There are decidable theories that cannot be decided with ordinary rewriting (see, for example, [86]); on the other hand, any theory with decidable word problem can be solved by ordered-rewriting with some ordered system for some conservative extension of the theory (that is, with new symbols) <ref> [30] </ref>, or with a two-phased version of rewriting, wherein normal forms of the first system are inputs to the second [10]. Problem 32. Is there a finite term-rewriting system of some kind for free lattices? Problem 33.
Reference: [31] <author> N. Dershowitz and M. Okada. </author> <title> A rationale for conditional equational programming. </title> <journal> Theoretical Computer Science, </journal> <volume> 75 </volume> <pages> 111-138, </pages> <year> 1990. </year>
Reference-contexts: Problem 15 (Y. Toyama). Consider the following extension of Combinatory Logic (CL) with constants T (true), F (false), C (conditional): Ix ! x Sxyz ! (xz)(yz) CT xy ! x x $ fl y ) Czxy ! x Is this (non-terminating) "semi-equational" (or "natural", as such are called in <ref> [31] </ref>) conditional rewrite system confluent? Note that if we take the above system plus the rule x $ fl y ) Czxy ! y, the resulting conditional rewrite system is confluent (cf. [57, 93]). Problem 16 (Y. Toyama).
Reference: [32] <author> F. Fages. </author> <title> Associative-commutative unification. </title> <journal> J. Symbolic Computation, </journal> <volume> 3(3) </volume> <pages> 257-275, </pages> <month> June </month> <year> 1987. </year>
Reference-contexts: Can this condition be improved by replacing it with the condition that the rule Check* does not apply? (In other words, is Check* complete for finding cycles when Merge is modified as above?) Problem 40. Fages <ref> [32] </ref> proved that associative-commutative unification terminates when "variable replacement" is made after each step. Boudet, et al. [16] have proven that it terminates when variable replacement is postponed to the end. Does the same (or similar) set of transformation rules terminate with more flexible control? Problem 41.
Reference: [33] <institution> Proceedings of an NSF Workshop on the Rewrite Rule Laboratory, Schenectady, </institution> <address> NY, </address> <month> Sep. </month> <year> 1983. </year> <title> Report 84GEN008, General Electric Research and Development (April 1984). </title>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings <ref> [33, 47, 77] </ref>; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54,
Reference: [34] <author> R. Gilleron. </author> <title> Decision problems for term rewriting systems and recognizable tree languages. </title> <note> In Proceddings of STACS, 1991. To appear. </note>
Reference-contexts: The question remains: Is U N ! a modular property of left-linear term-rewriting systems? Problem 7 (H. Comon, M. Dauchet). Is it possible to decide whether the set of ground normal forms with respect to a given (finite) term-rewriting system is a regular tree language? See <ref> [34, 62] </ref>. Problem 8 (A. Middeldorp). Is the decidability of strong sequentiality for orthogonal term rewriting systems NP-complete? See [39, 58]. Problem 9 (A. Middeldorp). Thatte [87] showed that an orthogonal constructor-based rewrite system is left-sequential if and only if it is strongly sequential.
Reference: [35] <author> J. R. Hindley and J. P. Seldin. </author> <title> Introduction to Combinators and -Calculus. </title> <publisher> Cambridge University Press, </publisher> <year> 1986. </year>
Reference-contexts: three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) <ref> [8, 9, 35, 54, 60, 75, 84] </ref>. To encourage and stimulate continued progress in this area, we have collected (with the help of colleagues) a number of problems that appear to us to be of interest and regarding which we do not know the answer.
Reference: [36] <author> J. Hsiang. </author> <title> Refutational theorem proving using term-rewriting systems. </title> <journal> Artificial Intelligence, </journal> <volume> 25 </volume> <pages> 255-300, </pages> <month> March </month> <year> 1985. </year>
Reference-contexts: Is there an example showing that completion is then incomplete (the persisting rules are not confluent)? Problem 36 (H. Zhang). Since the work of Hsiang <ref> [36] </ref>, several Boolean-ring based methods have been proposed for resolution-like first-order theorem proving. In [48], superposition rules were defined using multiple overlaps (requiring unifications of products of atoms). It is unknown whether single overlaps (requiring only unifications of atoms) are sufficient in these inference rules.
Reference: [37] <author> G. Huet. </author> <title> A complete proof of correctness of the Knuth-Bendix completion algorithm. </title> <journal> J. Computer and System Sciences, </journal> <volume> 23(1) </volume> <pages> 11-21, </pages> <year> 1981. </year>
Reference-contexts: Unfortunately, this is not always possible, even if &gt; is derivability (! + R ) in R. Is there a set of inference rules that will always succeed in computing R whenever R exists for &gt;? 2.6 Theorem Proving Problem 35. Huet's proof <ref> [37] </ref> of the "completeness" of completion is predicated on the assumption that the ordering supplied to completion does not change during the process.
Reference: [38] <author> G. Huet. </author> <title> Confluent reductions: Abstract properties and applications to term rewriting systems. </title> <journal> J. of the Association for Computing Machinery, </journal> <volume> 27(4) </volume> <pages> 797-821, </pages> <month> Oct. </month> <year> 1980. </year>
Reference-contexts: What is the complexity of the decision problem for the confluence of ground (variable-free) term-rewriting systems? Decidability was shown in [22, 78]; see also [23]. Problem 13 (J.-J. Levy). By a lemma of G. Huet <ref> [38] </ref>, left-linear term-rewriting systems are confluent if, for every critical pair t s (where t = u [r] u [l] = gt ! dt = s, for some rules l ! r and g ! d), we have t ! k s (t reduces in one parallel step to s). (The
Reference: [39] <author> G. Huet and J.-J. Levy. </author> <title> Computations in orthogonal term rewriting systems. </title> <editor> In J.- L. Lassez and G. Plotkin, eds., </editor> <booktitle> Computational Logic: Essays in Honour of Alan Robinson, </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <note> to appear. </note>
Reference-contexts: Comon, M. Dauchet). Is it possible to decide whether the set of ground normal forms with respect to a given (finite) term-rewriting system is a regular tree language? See [34, 62]. Problem 8 (A. Middeldorp). Is the decidability of strong sequentiality for orthogonal term rewriting systems NP-complete? See <ref> [39, 58] </ref>. Problem 9 (A. Middeldorp). Thatte [87] showed that an orthogonal constructor-based rewrite system is left-sequential if and only if it is strongly sequential. Does this equivalence extend to the whole class of orthogonal term-rewriting systems? If not, is left-sequentiality a decidable property of orthogonal systems? See also [58].
Reference: [40] <editor> J.-P. Jouannaud, ed. </editor> <title> Rewriting Techniques and Applications. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1987. </year>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues <ref> [5, 88, 24, 40, 67] </ref>; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84].
Reference: [41] <editor> J.-P. Jouannaud, ed. </editor> <booktitle> Rewriting Techniques and Applications (Proceedings, </booktitle> <address> Dijon, France), </address> <publisher> Springer, </publisher> <address> Berlin, </address> <month> May </month> <year> 1985. </year> <note> Vol. 202 of Lecture Notes in Computer Science. </note>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) <ref> [15, 26, 41, 66] </ref>; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them
Reference: [42] <author> J.-P. Jouannaud and C. Kirchner. </author> <title> Solving equations in abstract algebras: A rule-based survey of unification. </title> <editor> In J.-L. Lassez and G. Plotkin, eds., </editor> <booktitle> Computational Logic: Essays in Honor of Alan Robinson, </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1991. </year> <note> To appear. </note>
Reference-contexts: Siekmann [83]). Is satisfiability of equations in the theory of distributivity (unification modulo a distributivity axiom) decidable? Problem 39. Rules are given in <ref> [42] </ref> for computing dag-solved forms of unification problems in equational theories. The Merge rule x s; x t ) x s; s t given there assumes that s is not a variable and its size is less than or equal to that of t. <p> Problem 43. Design a framework for combining constraint solving algorithms. Problem 44 (H. Comon). "Syntactic" theories enjoy the property that a (semi-) unification algorithm can be derived from the axioms <ref> [42, 53] </ref>. This algorithm terminates for some particular cases (for instance, if all variable occurrences in the axioms are at depth at most one, and cycles have no solution) but does not in general. <p> For the case of associativity and commutativity (AC), with a seven-axiom syntactic presentation, the derivation tree obtained by the non-deterministic application of the syntactic unification rules (Decompose, Mutate, Merge, Coalesce, Check*, Delete) in <ref> [42] </ref> can be pruned so as to become finite in most cases. The basic idea is that one unification problem (up to renaming) must appear infinitely times on every infinite branch of the tree (since there are finitely many axioms in the syntactic presentation).
Reference: [43] <author> J.-P. Jouannaud and H. Kirchner. </author> <title> Completion of a set of rules modulo a set of equations. </title> <journal> SIAM J. on Computing, </journal> <volume> 15 </volume> <pages> 1155-1194, </pages> <month> Nov. </month> <year> 1986. </year>
Reference-contexts: Problem 32. Is there a finite term-rewriting system of some kind for free lattices? Problem 33. Completion modulo associativity and commutativity (AC) [79] is probably the most important case of "extended completion"; the general case of finite congruence classes is treated in <ref> [43] </ref>. Adding an axiom (Z) for an identity element, however, gives rise to infinite classes. This case was viewed as conditional completion in [6], and solved completely in [45]. The techniques, however, do not carry over to completion with idempotence (I) added; how to handle ACZI-completion effectively is open.
Reference: [44] <author> J.-P. Jouannaud and P. Lescanne. </author> <title> Rewriting systems. </title> <journal> Technology and Science of In-formatics, </journal> <volume> 6(3) </volume> <pages> 181-199, </pages> <year> 1987. </year> <title> French version: </title> <journal> "La reecriture", Technique et Science de l'Informatique (1986), </journal> <volume> vol. 5, no. 6, </volume> <pages> pp. 433-452. </pages>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys <ref> [2, 7, 27, 28, 44, 56, 57, 76, 82, 81] </ref>; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84].
Reference: [45] <author> J.-P. Jouannaud and C. Marche. </author> <title> Completion modulo associativity, commutativity and identity. </title> <editor> In A. Miola, editor, </editor> <booktitle> Proceedings of DISCO, </booktitle> <address> Capri, Italy, </address> <month> Apr. </month> <year> 1990. </year> <title> Vol. </title> <booktitle> 429 in Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference-contexts: Adding an axiom (Z) for an identity element, however, gives rise to infinite classes. This case was viewed as conditional completion in [6], and solved completely in <ref> [45] </ref>. The techniques, however, do not carry over to completion with idempotence (I) added; how to handle ACZI-completion effectively is open. Problem 34.
Reference: [46] <author> J.-P. Jouannaud and M. Okada. </author> <title> Satisfiability of systems of ordinal notations enjoying the subterm property is decidable. </title> <note> 1991. Submitted. </note>
Reference-contexts: Must any termination ordering have the Howard ordinal as its order type, as conjectured in [18]? Problem 24. The existential fragment of the first-order theory of the "recursive path ordering" (with multiset and lexicographic "status") is decidable when the precedence on function symbols is total <ref> [19, 46] </ref>, but is undecidable for arbitrary formulas. Is the existential fragment decidable for partial precedences? 2.5 Validity Problem 25 (R. Treinen).
Reference: [47] <editor> S. Kaplan and J.-P. Jouannaud, eds. </editor> <booktitle> Conditional Term Rewriting Systems (Proceedings, </booktitle> <address> Orsay, France, July 1987), </address> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1988. </year> <note> Vol. 308 of Lecture Notes in Computer Science. </note>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings <ref> [33, 47, 77] </ref>; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54,
Reference: [48] <author> D. Kapur and P. Narendran. </author> <title> An equational approach to theorem proving in first-order predicate calculus. </title> <booktitle> In Proceedings of the Ninth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pp. 1146-1153, </pages> <address> Los Angeles, CA, </address> <month> Aug. </month> <year> 1985. </year>
Reference-contexts: Is there an example showing that completion is then incomplete (the persisting rules are not confluent)? Problem 36 (H. Zhang). Since the work of Hsiang [36], several Boolean-ring based methods have been proposed for resolution-like first-order theorem proving. In <ref> [48] </ref>, superposition rules were defined using multiple overlaps (requiring unifications of products of atoms). It is unknown whether single overlaps (requiring only unifications of atoms) are sufficient in these inference rules. <p> Also, it is not known if unifications of maximal atoms (under a given term ordering) suffice. (The same problem for Hsiang's method was solved positively in [73, 94].) In other respects, too, the set of inference rules in <ref> [4, 48] </ref> may be larger than necessary and the simplification weaker than possible. Problem 37 (U. Reddy, F. Bronsard). In [17] a rewriting-like mechanism for clausal reasoning called "contextual deduction" was proposed.
Reference: [49] <author> D. Kapur, P. Narendran, and H. Zhang. </author> <title> On sufficient completeness and related properties of term rewriting systems. </title> <journal> Acta Informatica, </journal> <volume> 24(4) </volume> <pages> 395-415, </pages> <month> Aug. </month> <year> 1987. </year>
Reference-contexts: Levy (see [14, 55, 57]). Problem 3. A term t is "ground reducible" with respect to a rewrite system R if all its ground (variable-free) instances contain a redex. Ground reducibility is decidable for ordinary rewriting (and finite R) <ref> [20, 49, 80] </ref>. What is the complexity of this test? Problem 4. One of the outstanding open problems in typed lambda calculi is the following: Given a term in ordinary untyped lambda calculus, is it decidable whether it can be typed in the second-order 2 calculus? See [7].
Reference: [50] <author> J. R. Kennaway. </author> <title> Sequential evaluation strategies for parallel-or and related reduction systems. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 43 </volume> <pages> 31-56, </pages> <year> 1989. </year>
Reference-contexts: Does it follow that it has a recursive, one-step, normalizing reduction strategy? (There are counterexamples if any of the three conditions is dropped.) Kennaway <ref> [50] </ref> showed that for "weakly" orthogonal systems the answer is yes. So, any counterexample must come from the murky world of non-orthogonal systems. Problem 11 (A. Middeldorp [72]).
Reference: [51] <author> J. R. Kennaway, J. W. Klop, M. R. Sleep, and F. J. de Vries. </author> <title> Transfinite reductions in orthogonal term rewriting systems (Extended abstract). </title> <editor> In R. Book, editor, </editor> <booktitle> Proceedings of the Fourth International Conference on Rewriting Techniques and Applications, </booktitle> <address> Como, Italy, </address> <month> Apr. </month> <year> 1991. </year> <booktitle> In Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference-contexts: Problem 18 (J. R. Kennaway, J. W. Klop, M. R. Sleep, F.-J. de Vries). If one wants to consider reductions of transfinite length in the theory of orthogonal term-rewriting systems, one has to be careful. In <ref> [51] </ref> it is shown that the confluence property "almost" holds for infinite rewriting with orthogonal term-rewriting systems. <p> Now the notion of infinite reduction in <ref> [51] </ref> is based upon "strong convergence" of infinite sequences of terms in order to define (possibly infinite) limit terms. In related work, Dershowitz, et al. [29] use a more "liberal" notion of convergent sequences (which is referred to in [51] as "Cauchy convergence"). <p> Now the notion of infinite reduction in <ref> [51] </ref> is based upon "strong convergence" of infinite sequences of terms in order to define (possibly infinite) limit terms. In related work, Dershowitz, et al. [29] use a more "liberal" notion of convergent sequences (which is referred to in [51] as "Cauchy convergence"). What is unknown (among other questions in this new area) is if this "almost-confluent" result is also valid for the more liberal convergent infinite reduction sequences? 2.4 Termination Problem 19 (J.-J. Levy).
Reference: [52] <author> L. Kirby and J. Paris. </author> <title> Accessible independence results for Peano arithmetic. </title> <journal> Bulletin London Mathematical Society, </journal> <volume> 14 </volume> <pages> 285-293, </pages> <year> 1982. </year>
Reference-contexts: Problem 22. Devise practical methods for proving termination of (standard) conditional rewriting systems. Part of the difficulty stems from the interdependence of normalization and termination. Problem 23 (E. A. Cochin [18]). The following system [27], based on the "Battle of Hydra and Hercules" in <ref> [52] </ref>, is terminating, but not provably so in Peano Arithmetic: h (z; e (x)) ! h (c (z); d (z; x)) d (z; g (x; y)) ! g (e (x); d (z; y)) g (e (x); e (y)) ! e (g (x; y)) Transfinite (* 0 -) induction is required for
Reference: [53] <editor> C. Kirchner. </editor> <booktitle> Computing unification algorithms. In Proceedings of the First IEEE Symposium on Logic in Computer Science, </booktitle> <pages> pp. 206-216, </pages> <address> Cambridge, Massachussets, </address> <month> June </month> <year> 1986. </year>
Reference-contexts: Problem 43. Design a framework for combining constraint solving algorithms. Problem 44 (H. Comon). "Syntactic" theories enjoy the property that a (semi-) unification algorithm can be derived from the axioms <ref> [42, 53] </ref>. This algorithm terminates for some particular cases (for instance, if all variable occurrences in the axioms are at depth at most one, and cycles have no solution) but does not in general.
Reference: [54] <author> C. Kirchner and H. Kirchner. </author> <title> Rewriting: Theory and Applications. </title> <publisher> North-Holland, </publisher> <year> 1991. </year> <note> In preparation. </note>
Reference-contexts: three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) <ref> [8, 9, 35, 54, 60, 75, 84] </ref>. To encourage and stimulate continued progress in this area, we have collected (with the help of colleagues) a number of problems that appear to us to be of interest and regarding which we do not know the answer.
Reference: [55] <author> J. W. Klop. </author> <title> Combinatory reduction systems. </title> <type> Vol. </type> <institution> 127 of Mathematical Centre Tracts, Mathematisch Centrum, </institution> <year> 1980. </year>
Reference-contexts: in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs <ref> [3, 12, 55, 65] </ref>; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84]. <p> Levy (see <ref> [14, 55, 57] </ref>). Problem 3. A term t is "ground reducible" with respect to a rewrite system R if all its ground (variable-free) instances contain a redex. Ground reducibility is decidable for ordinary rewriting (and finite R) [20, 49, 80]. What is the complexity of this test? Problem 4. <p> Calling #r the "degree" of redex r, created redexes have a degree strictly less than the degree of the creator redex, while the degree of descendant redexes is not increased. The typical example is reduction in simply typed lambda calculus. In <ref> [55] </ref> it is proved that for orthogonal term-rewriting systems and combinatory reduction systems, decreasing redexes implies termination (strong normalization). Does this implication also hold for non-orthogonal systems? If not, can some decent subclasses be delineated for which the implication does hold? Problem 27 (P. Lescanne).
Reference: [56] <author> J. W. Klop. </author> <title> Term rewriting systems: A tutorial. </title> <journal> Bulletin of the European Association for Theoretical Computer Science, </journal> <volume> 32 </volume> <pages> 143-183, </pages> <month> June </month> <year> 1987. </year>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys <ref> [2, 7, 27, 28, 44, 56, 57, 76, 82, 81] </ref>; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84].
Reference: [57] <author> J. W. Klop. </author> <title> Term rewriting systems. </title> <editor> In S. Abramsky, D. M. Gabbay, and T. S. E. Maibaum, eds., </editor> <booktitle> Handbook of Logic in Computer Science, </booktitle> <publisher> Oxford University Press, Oxford, </publisher> <year> 1991. </year> <note> To appear. </note>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys <ref> [2, 7, 27, 28, 44, 56, 57, 76, 82, 81] </ref>; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84]. <p> Levy (see <ref> [14, 55, 57] </ref>). Problem 3. A term t is "ground reducible" with respect to a rewrite system R if all its ground (variable-free) instances contain a redex. Ground reducibility is decidable for ordinary rewriting (and finite R) [20, 49, 80]. What is the complexity of this test? Problem 4. <p> Does this equivalence extend to the whole class of orthogonal term-rewriting systems? If not, is left-sequentiality a decidable property of orthogonal systems? See also [58]. Problem 10 (J. R. Kennaway). Let a term-rewriting system (or more generally, a system with bound variables <ref> [57] </ref>) have the following properties: it is "finitely generated" (has finitely many function symbols and rules), it is "full" (its terms are all that can be formed from the function symbols), and it is Church-Rosser. <p> If these conditions are insufficient, the counterexamples will have to be (besides left-linear) non-right-linear, non-terminating, and non-orthogonal (have critical pairs). See <ref> [57] </ref>. Problem 14. Parallel rewriting with orthogonal term-rewriting systems is "subcommutative" (a "strong" form of confluence). <p> $ fl y ) Czxy ! x Is this (non-terminating) "semi-equational" (or "natural", as such are called in [31]) conditional rewrite system confluent? Note that if we take the above system plus the rule x $ fl y ) Czxy ! y, the resulting conditional rewrite system is confluent (cf. <ref> [57, 93] </ref>). Problem 16 (Y. Toyama).
Reference: [58] <author> J. W. Klop and A. Middeldorp. </author> <title> Sequentiality in Orthogonal Term Rewriting Systems. </title> <type> Report CS-R8932, </type> <institution> Centre for Mathematics and Computer Science, </institution> <address> Amsterdam, </address> <year> 1989. </year>
Reference-contexts: Comon, M. Dauchet). Is it possible to decide whether the set of ground normal forms with respect to a given (finite) term-rewriting system is a regular tree language? See [34, 62]. Problem 8 (A. Middeldorp). Is the decidability of strong sequentiality for orthogonal term rewriting systems NP-complete? See <ref> [39, 58] </ref>. Problem 9 (A. Middeldorp). Thatte [87] showed that an orthogonal constructor-based rewrite system is left-sequential if and only if it is strongly sequential. Does this equivalence extend to the whole class of orthogonal term-rewriting systems? If not, is left-sequentiality a decidable property of orthogonal systems? See also [58]. <p> Problem 9 (A. Middeldorp). Thatte [87] showed that an orthogonal constructor-based rewrite system is left-sequential if and only if it is strongly sequential. Does this equivalence extend to the whole class of orthogonal term-rewriting systems? If not, is left-sequentiality a decidable property of orthogonal systems? See also <ref> [58] </ref>. Problem 10 (J. R. Kennaway).
Reference: [59] <author> J. W. Klop and R. C. de Vrijer. </author> <title> Unique normal forms for lambda calculus with surjective pairing. </title> <journal> Information and Computation, </journal> <volume> 80 </volume> <pages> 97-113, </pages> <year> 1989. </year>
Reference-contexts: conditional term rewriting system (a linearization of Combinatory Logic extended with surjective pairing) confluent: Ix ! x Sxyz ! (xz)(yz) D 1 (Dxy) ! x x $ fl y ) D (D 1 x)(D 2 y) ! x If yes, does an effective normal form strategy exist for it? See <ref> [59, 92] </ref>. Problem 18 (J. R. Kennaway, J. W. Klop, M. R. Sleep, F.-J. de Vries). If one wants to consider reductions of transfinite length in the theory of orthogonal term-rewriting systems, one has to be careful.
Reference: [60] <author> J. W. Klop and R. C. de Vrijer. </author> <title> Term Rewriting Systems. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1991. </year> <note> In preparation. </note>
Reference-contexts: three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) <ref> [8, 9, 35, 54, 60, 75, 84] </ref>. To encourage and stimulate continued progress in this area, we have collected (with the help of colleagues) a number of problems that appear to us to be of interest and regarding which we do not know the answer.
Reference: [61] <author> M. S. Krishnamoorthy and P. Narendran. </author> <title> On recursive path ordering. </title> <journal> Theoretical Computer Science, </journal> <volume> 40 </volume> <pages> 323-328, </pages> <year> 1985. </year>
Reference-contexts: Snyder). What are the complexities of the various term ordering decision problems in the literature (see [25])? Determining if a precedence exists that makes two ground terms comparable in the recursive path ordering is NP-complete <ref> [61] </ref>, but an inequality can be decided in O (n 2 ), using a dynamic programming algorithm.
Reference: [62] <author> G. Kucherov. </author> <title> On relationship between term rewriting systems and regular tree languages. </title> <editor> In R. Book, editor, </editor> <booktitle> Proceedings of the Fourth International Conference on Rewriting Techniques and Applications, </booktitle> <address> Como, Italy, </address> <month> Apr. </month> <year> 1991. </year> <booktitle> In Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference-contexts: The question remains: Is U N ! a modular property of left-linear term-rewriting systems? Problem 7 (H. Comon, M. Dauchet). Is it possible to decide whether the set of ground normal forms with respect to a given (finite) term-rewriting system is a regular tree language? See <ref> [34, 62] </ref>. Problem 8 (A. Middeldorp). Is the decidability of strong sequentiality for orthogonal term rewriting systems NP-complete? See [39, 58]. Problem 9 (A. Middeldorp). Thatte [87] showed that an orthogonal constructor-based rewrite system is left-sequential if and only if it is strongly sequential.
Reference: [63] <author> D. S. Lankford. </author> <title> On Proving Term Rewriting Systems are Noetherian. </title> <institution> Memo MTP-3, Mathematics Department, Louisiana Tech. University, Ruston, LA, </institution> <month> May </month> <year> 1979. </year> <note> Revised October 1979. </note>
Reference-contexts: Can those ideas be extended to form the basis for some new kind of "recursive path ordering"? Problem 28 (P. Lescanne). Polynomial and exponential interpretations have been used to prove termination. For the former there are some reasonable methods <ref> [11, 63] </ref> that can help determine if a particular interpretation decreases with each application of a rule. Are there other implementable methods suitable for exponential interpretations? Problem 29.
Reference: [64] <author> J. Lassez and K. G. Marriott. </author> <title> Explicit representation of terms defined by counter examples. </title> <journal> J. Automated Reasoning, </journal> <volume> 3(3) </volume> <pages> 1-17, </pages> <month> Sep. </month> <year> 1987. </year>
Reference-contexts: Problem 42 (H. Comon). Given a first-order formula with equality as the only predicate symbol, can negation be effectively eliminated from an arbitrary formula when is equivalent to a positive formula? Equivalently, if has a finite complete set of unifiers, can they be computed? Special cases were solved in <ref> [20, 64] </ref>. Problem 43. Design a framework for combining constraint solving algorithms. Problem 44 (H. Comon). "Syntactic" theories enjoy the property that a (semi-) unification algorithm can be derived from the axioms [42, 53].
Reference: [65] <author> P. Le Chenadec. </author> <title> Canonical Forms in Finitely Presented Algebras. </title> <address> Pitman-Wiley, London, </address> <year> 1985. </year>
Reference-contexts: in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs <ref> [3, 12, 55, 65] </ref>; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84].
Reference: [66] <editor> P. Lescanne, ed. </editor> <booktitle> Rewriting Techniques and Applications (Proceedings, </booktitle> <address> Bordeaux, France), </address> <publisher> Springer, </publisher> <address> Berlin, </address> <month> May </month> <year> 1987. </year> <note> Vol. 256 of Lecture Notes in Computer Science. </note>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) <ref> [15, 26, 41, 66] </ref>; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them
Reference: [67] <author> P. Lescanne, ed. </author> <title> Rewriting Techniques and Applications II (Special Issue). </title> <booktitle> Vol. 67 (2&3) of Theoretical Computer Science, </booktitle> <publisher> North-Holland, </publisher> <year> 1989. </year>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues <ref> [5, 88, 24, 40, 67] </ref>; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84].
Reference: [68] <author> P. Lescanne. </author> <title> Well rewrite orderings. </title> <editor> In J. Mitchell, editor, </editor> <booktitle> Proceedings of the Fifth IEEE Symposium on Logic in Computer Science, </booktitle> <pages> pp. 239-256, </pages> <address> Philadelphia, PA, </address> <year> 1990. </year>
Reference-contexts: In [55] it is proved that for orthogonal term-rewriting systems and combinatory reduction systems, decreasing redexes implies termination (strong normalization). Does this implication also hold for non-orthogonal systems? If not, can some decent subclasses be delineated for which the implication does hold? Problem 27 (P. Lescanne). In <ref> [68] </ref> an extension of term embedding, called "well-rewrite or-derings", was introduced, leading to an extension of the concept of simplification ordering. Can those ideas be extended to form the basis for some new kind of "recursive path ordering"? Problem 28 (P. Lescanne).
Reference: [69] <author> M. J. Maher. </author> <title> Complete axiomatizations of the algebras of the finite, rational and infinite trees. </title> <booktitle> In Proceedings of the Third IEEE Symposium on Logic in Computer Science, </booktitle> <pages> pp. 348-357, </pages> <publisher> Computer Society Press, Edinburgh, </publisher> <address> UK, </address> <month> July </month> <year> 1988. </year>
Reference-contexts: Does the same (or similar) set of transformation rules terminate with more flexible control? Problem 41. The complexity of the theory of finite trees when there are finitely many symbols is known to be PSPACE-hard <ref> [69] </ref>. Is it in PSPACE? The same question applies to infinite trees. Problem 42 (H. Comon).
Reference: [70] <author> Y. </author> <type> Metivier. </type> <institution> Calcul de longueurs de cha^nes de reecriture dans le monode libre. Theoretical Computer Science, </institution> <month> 35(1) </month> <pages> 71-87, </pages> <month> Jan. </month> <year> 1985. </year>
Reference-contexts: Levy). Can strong normalization (termination) of the typed lambda calculus be proved by a reasonably straightforward mapping from typed terms to a well-founded ordering? Note that the type structure can remain unchanged by fi-reduction. The same question arises with polymorphic (second-order) lambda calculus. Problem 20 (Y. Metivier <ref> [70] </ref>). What is the best bound on the length of a derivation for a one-rule length-preserving string-rewriting (semi-Thue) system? Is it O (n 2 ) (n is the size of the initial term) as conjectured in [70], or O (n k ) (k is the size of the rule) as proved <p> The same question arises with polymorphic (second-order) lambda calculus. Problem 20 (Y. Metivier <ref> [70] </ref>). What is the best bound on the length of a derivation for a one-rule length-preserving string-rewriting (semi-Thue) system? Is it O (n 2 ) (n is the size of the initial term) as conjectured in [70], or O (n k ) (k is the size of the rule) as proved there. Problem 21 (M. Dauchet). Is termination of one linear (left and right) rule decidable? Left linearity alone is not enough for decidability [21]. Problem 22.
Reference: [71] <author> A. Middeldorp. </author> <title> Modular aspects of properties of term rewriting systems related to normal forms. </title> <editor> In N. Dershowitz, editor, </editor> <booktitle> Proceedings of the Third International Conference on Rewriting Techniques and Applications, </booktitle> <pages> pp. 263-277, </pages> <address> Chapel Hill, NC, </address> <month> Apr. </month> <year> 1989. </year> <title> Vol. </title> <booktitle> 355 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference-contexts: Of course, there are lots of other fi, indeed fi, theories where conservative extension holds, simply because the theory consists of the valid equations in some model in which surjective pairing functions exist, e.g., D 1 .) 2.2 Normalization Problem 6 (A. Middeldorp <ref> [71] </ref>). If R and S are two term-rewriting systems with disjoint vocabularies, such that for each of R and S any two convertible normal forms must be identical, then their union R [ S also enjoys this property [71]. <p> Middeldorp <ref> [71] </ref>). If R and S are two term-rewriting systems with disjoint vocabularies, such that for each of R and S any two convertible normal forms must be identical, then their union R [ S also enjoys this property [71]. Accordingly, we say that unicity of normal forms (UN) is a "modular" property of term-rewriting systems. "Unicity of normal forms with respect to reduction" (UN ! ) is the weaker property that any two normal forms of the same term must be identical.
Reference: [72] <author> A. Middeldorp. </author> <title> Modular Properties of Term Rewriting Systems. </title> <type> PhD thesis, </type> <institution> Vrije Univer-siteit, </institution> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: So, any counterexample must come from the murky world of non-orthogonal systems. Problem 11 (A. Middeldorp <ref> [72] </ref>). A conditional term-rewriting system has rules of the form p ) l ! r, which are only applied to instances of l for which the condition p holds.
Reference: [73] <author> J. Muller and R. Socher-Ambrosius. </author> <title> Topics in completion theorem proving. </title> <institution> SEKI-Report SR-88-13, Fachbereich Informatik, Universitat Kaiserslautern, Kaiserslautern, West Germany, </institution> <year> 1988. </year> <note> To appear in J. of Symbolic Computation. </note>
Reference-contexts: It is unknown whether single overlaps (requiring only unifications of atoms) are sufficient in these inference rules. Also, it is not known if unifications of maximal atoms (under a given term ordering) suffice. (The same problem for Hsiang's method was solved positively in <ref> [73, 94] </ref>.) In other respects, too, the set of inference rules in [4, 48] may be larger than necessary and the simplification weaker than possible. Problem 37 (U. Reddy, F. Bronsard). In [17] a rewriting-like mechanism for clausal reasoning called "contextual deduction" was proposed.
Reference: [74] <author> R. Nieuwenhuis and F. Orejas. </author> <title> Clausal rewriting. </title> <editor> In S. Kaplan and M. Okada, eds., </editor> <booktitle> Ex--tended Abstracts of the Second International Workshop on Conditional and Typed Rewriting Systems, </booktitle> <pages> pp. 81-88, </pages> <institution> Concordia University, Montreal, Canada, </institution> <month> June </month> <year> 1990. </year> <note> Revised version to appear in Lecture Notes in Computer Science, Springer, Berlin. </note>
Reference-contexts: It specializes "ordered resolution" by using pattern matching in place of unification, only instantiating clauses to match existing clauses. Does contextual deduction always terminate? (In [17] it was taken to be obvious, but that is not clear; see also <ref> [74] </ref>.) It was shown in [17] that the mechanism is complete for refuting ground clauses using a theory that contains all its "strong-ordered" resolvents.
Reference: [75] <author> M. J. O'Donnell. </author> <title> Equational Logic as a Programming Language. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1985. </year>
Reference-contexts: three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) <ref> [8, 9, 35, 54, 60, 75, 84] </ref>. To encourage and stimulate continued progress in this area, we have collected (with the help of colleagues) a number of problems that appear to us to be of interest and regarding which we do not know the answer. <p> For example, Combinatory Logic is directly lambda definable. On the other hand, not every orthogonal rewrite system can be directly defined in lambda calculus. Are there universal rewrite systems, with respect to direct definability? (For alternative notions of definability, see <ref> [75] </ref>.) Problem 2 (M. Venturini-Zilli [91]). The reduction graph of a term is the set of its reducts structured by the reduction relation. These may be very complicated.
Reference: [76] <author> M. J. O'Donnell. </author> <title> Programming with equations. </title> <editor> In D. M. Gabbay, C. J. Hogger, and J. A. Robinson, eds., </editor> <booktitle> Handbook of Logic in Artificial Intelligence and Logic Programming, </booktitle> <publisher> Oxford University Press, Oxford, </publisher> <year> 1991. </year> <note> To appear. </note>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys <ref> [2, 7, 27, 28, 44, 56, 57, 76, 82, 81] </ref>; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84].
Reference: [77] <editor> M. Okada, ed. </editor> <booktitle> Proceedings of the Second International Workshop on Conditional and Typed Rewriting Systems (Montreal, Canada), 1991. Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings <ref> [33, 47, 77] </ref>; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54,
Reference: [78] <author> M. Oyamaguchi. </author> <title> The Church-Rosser property for ground term rewriting systems is decidable. </title> <journal> Theoretical Computer Science, </journal> <volume> 49(1), </volume> <year> 1987. </year>
Reference-contexts: Is unicity of normal forms (UN) a modular property of standard conditional systems? 2.3 Confluence Problem 12. What is the complexity of the decision problem for the confluence of ground (variable-free) term-rewriting systems? Decidability was shown in <ref> [22, 78] </ref>; see also [23]. Problem 13 (J.-J. Levy). By a lemma of G.
Reference: [79] <author> G. E. Peterson and M. E. Stickel. </author> <title> Complete sets of reductions for some equational theories. </title> <journal> J. of the Association for Computing Machinery, </journal> <volume> 28(2) </volume> <pages> 233-264, </pages> <month> Apr. </month> <year> 1981. </year>
Reference-contexts: Problem 32. Is there a finite term-rewriting system of some kind for free lattices? Problem 33. Completion modulo associativity and commutativity (AC) <ref> [79] </ref> is probably the most important case of "extended completion"; the general case of finite congruence classes is treated in [43]. Adding an axiom (Z) for an identity element, however, gives rise to infinite classes. This case was viewed as conditional completion in [6], and solved completely in [45].
Reference: [80] <author> D. A. Plaisted. </author> <title> Semantic confluence tests and completion methods. </title> <journal> Information and Control, </journal> 65(2/3):182-215, May/June 1985. 
Reference-contexts: Levy (see [14, 55, 57]). Problem 3. A term t is "ground reducible" with respect to a rewrite system R if all its ground (variable-free) instances contain a redex. Ground reducibility is decidable for ordinary rewriting (and finite R) <ref> [20, 49, 80] </ref>. What is the complexity of this test? Problem 4. One of the outstanding open problems in typed lambda calculi is the following: Given a term in ordinary untyped lambda calculus, is it decidable whether it can be typed in the second-order 2 calculus? See [7].
Reference: [81] <author> D. A. Plaisted. </author> <title> Term rewriting systems. </title> <editor> In D. M. Gabbay, C. J. Hogger, and J. A. Robin-son, eds., </editor> <booktitle> Handbook of Logic in Artificial Intelligence and Logic Programming, </booktitle> <publisher> Oxford University Press, Oxford, </publisher> <year> 1991. </year> <note> To appear. </note>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys <ref> [2, 7, 27, 28, 44, 56, 57, 76, 82, 81] </ref>; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84].
Reference: [82] <author> D. A. Plaisted. </author> <title> Equational reasoning and term rewriting systems. </title> <editor> In D. M. Gabbay, C. J. Hogger, and J. A. Robinson, eds., </editor> <booktitle> Handbook of Logic in Artificial Intelligence and Logic Programming, </booktitle> <publisher> Oxford University Press, Oxford, </publisher> <year> 1991. </year> <note> To appear. </note>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys <ref> [2, 7, 27, 28, 44, 56, 57, 76, 82, 81] </ref>; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84].
Reference: [83] <author> J. Siekmann. </author> <title> Universal unification. </title> <editor> In R. E. Shostak, editor, </editor> <booktitle> Proceedings of the Seventh International Conference on Automated Deduction, </booktitle> <pages> pp. 1-42, </pages> <address> Napa, CA, </address> <month> May </month> <year> 1984. </year> <title> Vol. </title> <booktitle> 170 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference-contexts: Is there a notion of "complete theory" (like containing all strong-ordered resolvents not provable by contextual refutation) for which contextual deduction is complete for refutation of ground clauses? 2.7 Satisfiability Problem 38 (J. Siekmann <ref> [83] </ref>). Is satisfiability of equations in the theory of distributivity (unification modulo a distributivity axiom) decidable? Problem 39. Rules are given in [42] for computing dag-solved forms of unification problems in equational theories.
Reference: [84] <author> M. R. Sleep. </author> <title> An Introduction to Rewriting. </title> <publisher> John Wiley, </publisher> <address> Chichester, England, </address> <year> 1992. </year> <note> In preparation. </note>
Reference-contexts: three workshop proceedings [33, 47, 77]; five special journal issues [5, 88, 24, 40, 67]; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) <ref> [8, 9, 35, 54, 60, 75, 84] </ref>. To encourage and stimulate continued progress in this area, we have collected (with the help of colleagues) a number of problems that appear to us to be of interest and regarding which we do not know the answer.
Reference: [85] <author> W. Snyder. </author> <title> (Computing the Lexicographic Path Ordering). </title> <type> Technical Report, </type> <institution> Boston University, </institution> <address> Boston, MA, </address> <year> 1990. </year>
Reference-contexts: Snyder <ref> [85] </ref> has shown that the lexicographic path ordering can be done in O (n log n) in the ground case with a total precedence, but the technique doesn't extend to non-total precedences or to terms with variables. Problem 31.
Reference: [86] <author> C. Squier. </author> <title> Word problems and a homological finiteness condition for monoids. </title> <journal> J. of Pure and Applied Algebra, </journal> <note> 1991. To appear. </note>
Reference-contexts: word problem for which there is no variant on the rewriting theme (for example, rewriting modulo a congruence with a decidable matching problem, or ordered rewriting) that can decide it|without adding new symbols to the vocabulary? There are decidable theories that cannot be decided with ordinary rewriting (see, for example, <ref> [86] </ref>); on the other hand, any theory with decidable word problem can be solved by ordered-rewriting with some ordered system for some conservative extension of the theory (that is, with new symbols) [30], or with a two-phased version of rewriting, wherein normal forms of the first system are inputs to the
Reference: [87] <author> S. Thatte. </author> <title> A refinement of strong sequentiality for term rewriting with constructors. </title> <journal> Information and Computation, </journal> <volume> 72 </volume> <pages> 46-65, </pages> <year> 1987. </year>
Reference-contexts: Problem 8 (A. Middeldorp). Is the decidability of strong sequentiality for orthogonal term rewriting systems NP-complete? See [39, 58]. Problem 9 (A. Middeldorp). Thatte <ref> [87] </ref> showed that an orthogonal constructor-based rewrite system is left-sequential if and only if it is strongly sequential. Does this equivalence extend to the whole class of orthogonal term-rewriting systems? If not, is left-sequentiality a decidable property of orthogonal systems? See also [58]. Problem 10 (J. R. Kennaway).
Reference: [88] <author> M. Thomas, ed. </author> <note> Term Rewriting (Special Issue). Vol. 34 (1) of Computer J., </note> <month> Feb. </month> <year> 1991. </year>
Reference-contexts: 1 Introduction Interest in the theory and applications of rewriting has been growing rapidly, as evidenced in part by four conference proceedings (including this one) [15, 26, 41, 66]; three workshop proceedings [33, 47, 77]; five special journal issues <ref> [5, 88, 24, 40, 67] </ref>; more than ten surveys [2, 7, 27, 28, 44, 56, 57, 76, 82, 81]; one edited collection of papers [1]; four monographs [3, 12, 55, 65]; and seven books (four of them still in progress) [8, 9, 35, 54, 60, 75, 84].
Reference: [89] <author> Y. Toyama. </author> <title> Commutativity of term rewriting systems. </title> <editor> In K. Fuchi and L. Kott, eds., </editor> <booktitle> Programming of Future Generation Computers II, </booktitle> <pages> pp. 393-407, </pages> <publisher> North-Holland, </publisher> <year> 1988. </year>
Reference-contexts: g ! d), we have t ! k s (t reduces in one parallel step to s). (The condition t ! k s can be relaxed to t ! k r k s for some r when the critical pair is generated from two rules overlapping at the roots; see <ref> [89] </ref>.) What if s ! k t for every critical pair t s? What if for every t s we have s ! = t? (Here ! = is the reflexive closure of !.) What if for every critical pair t s, either s ! = t or t ! =
Reference: [90] <author> R. Treinen. </author> <title> A new method for undecidability proofs of first order theories. </title> <publisher> LNCS 472, </publisher> <pages> 48-62. </pages>
Reference-contexts: algebra T (F )=AC (F )? It is known that the 3 fragment is undecidable when there are at least one unary function symbol (besides the AC one) and one constant; the 1 fragment is decidable; the full theory is decidable even when there are no other symbols (besides constants) <ref> [90] </ref>. Problem 26. Let R be a term-rewriting or combinatory reduction system.
Reference: [91] <author> M. Venturini-Zilli. </author> <title> Reduction graphs in the Lambda Calculus. </title> <journal> Theoretical Computer Science, </journal> <volume> 29 </volume> <pages> 251-275, </pages> <year> 1984. </year>
Reference-contexts: For example, Combinatory Logic is directly lambda definable. On the other hand, not every orthogonal rewrite system can be directly defined in lambda calculus. Are there universal rewrite systems, with respect to direct definability? (For alternative notions of definability, see [75].) Problem 2 (M. Venturini-Zilli <ref> [91] </ref>). The reduction graph of a term is the set of its reducts structured by the reduction relation. These may be very complicated.
Reference: [92] <author> R. C. de Vrijer. </author> <title> Extending the lambda calculus with surjective pairing is conservative. </title> <booktitle> In Proceedings of the Fourth IEEE Symposium on Logic in Computer Science, </booktitle> <pages> pp. 204-215, </pages> <year> 1989. </year>
Reference-contexts: 2 x) = x conservatively extend fi-conversion on pure untyped lambda terms? More generally, is surjec-tive pairing always conservative, or do there exist lambda theories, or extensions of Combinatory Logic for that matter, for which conservative extension by surjective pairing fails? (Surjective pairing is conservative over the pure fi-calculus (see <ref> [92] </ref>). Of course, there are lots of other fi, indeed fi, theories where conservative extension holds, simply because the theory consists of the valid equations in some model in which surjective pairing functions exist, e.g., D 1 .) 2.2 Normalization Problem 6 (A. Middeldorp [71]). <p> conditional term rewriting system (a linearization of Combinatory Logic extended with surjective pairing) confluent: Ix ! x Sxyz ! (xz)(yz) D 1 (Dxy) ! x x $ fl y ) D (D 1 x)(D 2 y) ! x If yes, does an effective normal form strategy exist for it? See <ref> [59, 92] </ref>. Problem 18 (J. R. Kennaway, J. W. Klop, M. R. Sleep, F.-J. de Vries). If one wants to consider reductions of transfinite length in the theory of orthogonal term-rewriting systems, one has to be careful.
Reference: [93] <author> R. C. de Vrijer. </author> <title> Unique normal forms for Combinatory Logic with Parallel Conditional, a case study in conditional rewriting. </title> <type> Technical Report, </type> <institution> Free University, </institution> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: $ fl y ) Czxy ! x Is this (non-terminating) "semi-equational" (or "natural", as such are called in [31]) conditional rewrite system confluent? Note that if we take the above system plus the rule x $ fl y ) Czxy ! y, the resulting conditional rewrite system is confluent (cf. <ref> [57, 93] </ref>). Problem 16 (Y. Toyama).
Reference: [94] <author> H. Zhang. </author> <title> A New Strategy for the Boolean Ring Based Approach to First Order Theorem Proving. </title> <type> Technical Report, </type> <institution> Department of Computer Science, The University of Iowa, </institution> <year> 1991. </year>
Reference-contexts: It is unknown whether single overlaps (requiring only unifications of atoms) are sufficient in these inference rules. Also, it is not known if unifications of maximal atoms (under a given term ordering) suffice. (The same problem for Hsiang's method was solved positively in <ref> [73, 94] </ref>.) In other respects, too, the set of inference rules in [4, 48] may be larger than necessary and the simplification weaker than possible. Problem 37 (U. Reddy, F. Bronsard). In [17] a rewriting-like mechanism for clausal reasoning called "contextual deduction" was proposed.
References-found: 94

