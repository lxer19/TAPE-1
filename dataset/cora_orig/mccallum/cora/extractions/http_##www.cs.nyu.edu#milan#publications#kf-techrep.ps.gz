URL: http://www.cs.nyu.edu/milan/publications/kf-techrep.ps.gz
Refering-URL: http://www.cs.nyu.edu/phd_students/karaul/index.html
Root-URL: http://www.cs.nyu.edu
Title: KnittingFactory: An Infrastructure for Distributed Web Applications  
Author: TR A. Baratloo, M. Karaul, H. Karl, and Z. M. Kedem 
Date: November 13, 1997  
Address: New York University  
Affiliation: Department of Computer Science Courant Institute of Mathematical Sciences  
Abstract: While Java and applets have created a new perspective for Web applications, some problems are still unsolved. Among these are the question of how Java applets can find other members of the collaboration session, how to deal with the restrictions imposed by the Java security model, and how to overcome the inability of applets to communicate directly, even if they belong to the same distributed application. KnittingFactory addresses the problem of finding other members of a collaboration session by providing a distributed registry system where the search is performed within a Web browser without violating its security model; the problem of arbitrary placement of applications by providing the core functionality for downloading applets from an arbitrary node; and finally the problem of direct applet-applet communication by using the Java Remote Method Invocation mechanisms to give applets information on how their fellow applets can be reached. Two example applications validate this concept and demonstrate the ease of use of KnittingFactory. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. E. Baldeschwieler, R. D. Blumofe, and E. A. Brewer. </author> <title> ATLAS: An Infrastructure for Global Computing. </title> <booktitle> In Proc. of the 7th ACM SIGOPS European Workshop: Systems support for Worldwide Applications, </booktitle> <address> Connemara, Ireland, </address> <month> Septem-ber </month> <year> 1996. </year> <month> 24 </month>
Reference-contexts: categorized based on their emphasis: those that focus on providing a parallel programming environment, or a metacomputer, on the Web; and those that focus on providing the infrastructure for collaborative applications on the Web. 5.1 Metacomputing on the Web The projects that focus on a Java-based parallel computing include ATLAS <ref> [1] </ref>, Charlotte [2], Java-MPI [21], JavaParty, [17], Javelin [6], JPVM [10], ParaWeb [5], and WebFlow [4].
Reference: [2] <author> A. Baratloo, M. Karaul, Z. Kedem, and P. Wyckoff. </author> <title> Charlotte: Metacomputing on the Web. </title> <booktitle> In Proc. of the 9th International Conference on Parallel and Distributed Computing Systems, </booktitle> <address> Dijon, France, </address> <month> September </month> <year> 1996. </year>
Reference-contexts: on their emphasis: those that focus on providing a parallel programming environment, or a metacomputer, on the Web; and those that focus on providing the infrastructure for collaborative applications on the Web. 5.1 Metacomputing on the Web The projects that focus on a Java-based parallel computing include ATLAS [1], Charlotte <ref> [2] </ref>, Java-MPI [21], JavaParty, [17], Javelin [6], JPVM [10], ParaWeb [5], and WebFlow [4].
Reference: [3] <author> L. Beca, G. Cheng, G. C. Fox, T. Jurga, K. Olszewski, M. Podgorny, P. Sokol-wski, and K. Walczak. </author> <title> Web Technologies for Collaborative Visualization and Simulation. </title> <type> Technical Report SCCS-786, </type> <institution> Northeast Parallel Architectures Center, </institution> <month> January </month> <year> 1997. </year>
Reference-contexts: Software systems that support collaborative applications include the E programming language [9], Cal-tech Infosphere project [7], HORB [18], iBus [16], Jada/PageSpace [8], Java Collaborator Toolset [15], Java Remote Method Invocation (RMI) [19], JavaSpaces [13], and TANGO <ref> [3] </ref>. The E programming language and HORB extends Java in several ways. The E language adds message passing through channels and richer security through cryptographic and authentication. HORB is a Object Request Broker (ORB) for Java and adds a well understood programming model, RPC, and persistent objects. <p> As a proof of concept, we have ported Charlotte to use KnittingFactory as the underlying infrastructure. It required less than 12 lines of code. 6.2 Collaborative applications on the Web As examples for projects geared towards collaborative work, we focus on TANGO <ref> [3] </ref> and the Java Collaborator Toolset [15]. 6.2.1 TANGO TANGO is a system built to support web-based collaboration applications. Main goals of TANGO are system flexibility and the capability of integrating existing applications. TANGO provides functionalities such as session management, user authentication, event logging, and communication between collaborating applications. <p> Since the local daemon is implemented as a 22 plug-in for Netscape, it is free to communicate with other daemons, but it is no longer trusted code and requires local installation. On the other hand, <ref> [3] </ref> states explicitly (in Section 2.5) that Using pure Java model we would have to create a client-server model in which all communication and data distribution are located in one host. This idea had to be rejected because of its inflexibility.
Reference: [4] <author> D. Bhatia, V. Camuseva, M. Camuseva, G. Fox, W. Furmanski, and G. Prem-chandran. </author> <title> Web-Flow a Visual Programming Paradigm for Web/Java Based on Coarse Grain Distributed Computing. </title> <journal> Concurrency: Practice and Experience, </journal> <month> March </month> <year> 1997. </year>
Reference-contexts: a metacomputer, on the Web; and those that focus on providing the infrastructure for collaborative applications on the Web. 5.1 Metacomputing on the Web The projects that focus on a Java-based parallel computing include ATLAS [1], Charlotte [2], Java-MPI [21], JavaParty, [17], Javelin [6], JPVM [10], ParaWeb [5], and WebFlow <ref> [4] </ref>. Similarly, Web-enabled concurrent virtual machines have been proposed [12] as a High Performance Computing and Communications (HPCC) platform, as a basis for SPMD programming model [14]; and it has been proposed [11] to extend Java with global pointers and remote service request mechanisms from the Nexus communication library.
Reference: [5] <author> T. Brecht, H. Sandhu, M. Shan, and J. Talbot. ParaWeb: </author> <title> Towards World-Wide Supercomputing. </title> <booktitle> In 7th ACM SIGOPS European Workshop, </booktitle> <pages> pages 181188, </pages> <address> Con-nemara, Ireland, </address> <month> September </month> <year> 1996. </year>
Reference-contexts: programming environment, or a metacomputer, on the Web; and those that focus on providing the infrastructure for collaborative applications on the Web. 5.1 Metacomputing on the Web The projects that focus on a Java-based parallel computing include ATLAS [1], Charlotte [2], Java-MPI [21], JavaParty, [17], Javelin [6], JPVM [10], ParaWeb <ref> [5] </ref>, and WebFlow [4].
Reference: [6] <author> P. Cappello, B. Christiansen, M. F. Ionescu, M. O. Neary, K. E. Schauser, and D. Wu. Javelin: </author> <title> Internet-Based Parallel Computing Using Java. </title> <booktitle> In ACM Workshop on Java for Science and Engineering Computation, </booktitle> <year> 1997. </year> <note> http://www.cs.ucsb.edu/schauser/papers/. </note>
Reference-contexts: on providing a parallel programming environment, or a metacomputer, on the Web; and those that focus on providing the infrastructure for collaborative applications on the Web. 5.1 Metacomputing on the Web The projects that focus on a Java-based parallel computing include ATLAS [1], Charlotte [2], Java-MPI [21], JavaParty, [17], Javelin <ref> [6] </ref>, JPVM [10], ParaWeb [5], and WebFlow [4]. <p> Hosts are Web browsers (generally running on idle machines) that repeatedly contact the broker for tasks to perform, download the applet code, execute it to completion, and return the results to the broker. The communication between any two applets is routed through the broker as stated in <ref> [6] </ref> (Section 2.4) In general, messages between applet must be routed through the bro ker, because an applet cannot open a network connection to any site other then the one from which it was loaded.
Reference: [7] <author> K. M. Chandy, A. Rifkin, P. A. G. Sivilotti, J. Mandelson, M. Richard-son, W. Tanaka, and L. Weisman. </author> <title> A World-Wide Distributed System Using Java and the Internet. </title> <booktitle> In IEEE International Symposium on High Performance Distributed Computing, </booktitle> <address> Syracuse, NY, </address> <month> August </month> <year> 1996. </year> <note> http://www. infos-pheres.caltech.edu/papers/index.html. </note>
Reference-contexts: Examples of such applications are distributed white boards, calendars, and editors where multiple users collaborate towards one goal. Software systems that support collaborative applications include the E programming language [9], Cal-tech Infosphere project <ref> [7] </ref>, HORB [18], iBus [16], Jada/PageSpace [8], Java Collaborator Toolset [15], Java Remote Method Invocation (RMI) [19], JavaSpaces [13], and TANGO [3]. The E programming language and HORB extends Java in several ways. The E language adds message passing through channels and richer security through cryptographic and authentication.
Reference: [8] <author> P. Ciancarini, R. Tolksdorf, F. Vitali, D. Rossi, and A. Knoche. </author> <title> Redesigning the Web: From Passive Pages to Coordinated Agents in PageSpaces. </title> <booktitle> In Third International Symposium on Autonomous Decentralized Systems, </booktitle> <address> Berlin, Germany, </address> <month> April </month> <year> 1997. </year> <note> http://www.fokus.gmd.de/ws/isads97/. </note>
Reference-contexts: Examples of such applications are distributed white boards, calendars, and editors where multiple users collaborate towards one goal. Software systems that support collaborative applications include the E programming language [9], Cal-tech Infosphere project [7], HORB [18], iBus [16], Jada/PageSpace <ref> [8] </ref>, Java Collaborator Toolset [15], Java Remote Method Invocation (RMI) [19], JavaSpaces [13], and TANGO [3]. The E programming language and HORB extends Java in several ways. The E language adds message passing through channels and richer security through cryptographic and authentication.
Reference: [9] <editor> Electric Communities. </editor> <booktitle> The E Programming Language. </booktitle> <address> http://www.communities/ e/epl.html. </address>
Reference-contexts: Examples of such applications are distributed white boards, calendars, and editors where multiple users collaborate towards one goal. Software systems that support collaborative applications include the E programming language <ref> [9] </ref>, Cal-tech Infosphere project [7], HORB [18], iBus [16], Jada/PageSpace [8], Java Collaborator Toolset [15], Java Remote Method Invocation (RMI) [19], JavaSpaces [13], and TANGO [3]. The E programming language and HORB extends Java in several ways.
Reference: [10] <author> A. Ferrari. </author> <title> JPVM The Java Parallel Virtual Machine. </title> <address> http://www.cs.virginia. edu/ajf2j/jpvm.html. </address>
Reference-contexts: a parallel programming environment, or a metacomputer, on the Web; and those that focus on providing the infrastructure for collaborative applications on the Web. 5.1 Metacomputing on the Web The projects that focus on a Java-based parallel computing include ATLAS [1], Charlotte [2], Java-MPI [21], JavaParty, [17], Javelin [6], JPVM <ref> [10] </ref>, ParaWeb [5], and WebFlow [4].
Reference: [11] <author> I. Foster and S. Tuecke. </author> <title> Enabling Technologies for Web-Based Ubiquitous Supercomputing. </title> <booktitle> In Proc. 5th IEEE Symp. on High Performance Distributed Computing, </booktitle> <pages> pages 112110, </pages> <year> 1996. </year>
Reference-contexts: Similarly, Web-enabled concurrent virtual machines have been proposed [12] as a High Performance Computing and Communications (HPCC) platform, as a basis for SPMD programming model [14]; and it has been proposed <ref> [11] </ref> to extend Java with global pointers and remote service request mechanisms from the Nexus communication library. JPVM and Java-MPI provide message passing interfaces, based on the PVM and MPI programming models respectively, to applications. Java is utilized only for heterogeneity.
Reference: [12] <author> G. Fox and W. Furmanski. </author> <title> Towards Web/Java Based High Perfomance Distributed Computing an Evolving Virtual Machine. </title> <booktitle> In Proc. of the Symposium on High Performance Distributed Computing, </booktitle> <year> 1996. </year> <month> 25 </month>
Reference-contexts: Similarly, Web-enabled concurrent virtual machines have been proposed <ref> [12] </ref> as a High Performance Computing and Communications (HPCC) platform, as a basis for SPMD programming model [14]; and it has been proposed [11] to extend Java with global pointers and remote service request mechanisms from the Nexus communication library.
Reference: [13] <author> R. Guth. </author> <title> Sun's JavaSpaces is Foundation for Future Distributed Systems. IDG News Services, </title> <note> http://www.javaworld.com/javaworld/jw-09-1997/jw-09-idgns.javaspaces.html, September 1997. </note>
Reference-contexts: Software systems that support collaborative applications include the E programming language [9], Cal-tech Infosphere project [7], HORB [18], iBus [16], Jada/PageSpace [8], Java Collaborator Toolset [15], Java Remote Method Invocation (RMI) [19], JavaSpaces <ref> [13] </ref>, and TANGO [3]. The E programming language and HORB extends Java in several ways. The E language adds message passing through channels and richer security through cryptographic and authentication. HORB is a Object Request Broker (ORB) for Java and adds a well understood programming model, RPC, and persistent objects.
Reference: [14] <author> S. Hummel, T. Ngo, and H. Srinivasan. </author> <title> SPMD Programming in Java. </title> <journal> Concur-rency: Practice and Experience, </journal> <month> March </month> <year> 1997. </year>
Reference-contexts: Similarly, Web-enabled concurrent virtual machines have been proposed [12] as a High Performance Computing and Communications (HPCC) platform, as a basis for SPMD programming model <ref> [14] </ref>; and it has been proposed [11] to extend Java with global pointers and remote service request mechanisms from the Nexus communication library. JPVM and Java-MPI provide message passing interfaces, based on the PVM and MPI programming models respectively, to applications. Java is utilized only for heterogeneity.
Reference: [15] <author> B. Kvande. </author> <title> The Java Collaborator Toolset, a Collaborator Platform for the Java(tm) Environment. </title> <type> Master's thesis, </type> <institution> Department of Computer Science, Old Dominion University, </institution> <month> August </month> <year> 1996. </year>
Reference-contexts: Examples of such applications are distributed white boards, calendars, and editors where multiple users collaborate towards one goal. Software systems that support collaborative applications include the E programming language [9], Cal-tech Infosphere project [7], HORB [18], iBus [16], Jada/PageSpace [8], Java Collaborator Toolset <ref> [15] </ref>, Java Remote Method Invocation (RMI) [19], JavaSpaces [13], and TANGO [3]. The E programming language and HORB extends Java in several ways. The E language adds message passing through channels and richer security through cryptographic and authentication. <p> As a proof of concept, we have ported Charlotte to use KnittingFactory as the underlying infrastructure. It required less than 12 lines of code. 6.2 Collaborative applications on the Web As examples for projects geared towards collaborative work, we focus on TANGO [3] and the Java Collaborator Toolset <ref> [15] </ref>. 6.2.1 TANGO TANGO is a system built to support web-based collaboration applications. Main goals of TANGO are system flexibility and the capability of integrating existing applications. TANGO provides functionalities such as session management, user authentication, event logging, and communication between collaborating applications.
Reference: [16] <author> S. Maffeis. </author> <title> iBusThe Java Intranet Software Bus. </title> <address> http://www.olsen.ch/export/ proj/ibus/. </address>
Reference-contexts: Examples of such applications are distributed white boards, calendars, and editors where multiple users collaborate towards one goal. Software systems that support collaborative applications include the E programming language [9], Cal-tech Infosphere project [7], HORB [18], iBus <ref> [16] </ref>, Jada/PageSpace [8], Java Collaborator Toolset [15], Java Remote Method Invocation (RMI) [19], JavaSpaces [13], and TANGO [3]. The E programming language and HORB extends Java in several ways. The E language adds message passing through channels and richer security through cryptographic and authentication.
Reference: [17] <author> M. Philippsen and M. Zenger. </author> <title> JavaPartyTransparent Remote Objects in Java. </title> <booktitle> In ACM 1997 PPoPP Workshop on Java for Science and Engineering Computation, </booktitle> <address> Las Vegas, NV, </address> <month> June </month> <year> 1997. </year>
Reference-contexts: that focus on providing a parallel programming environment, or a metacomputer, on the Web; and those that focus on providing the infrastructure for collaborative applications on the Web. 5.1 Metacomputing on the Web The projects that focus on a Java-based parallel computing include ATLAS [1], Charlotte [2], Java-MPI [21], JavaParty, <ref> [17] </ref>, Javelin [6], JPVM [10], ParaWeb [5], and WebFlow [4].
Reference: [18] <author> Hirano Satoshi. </author> <title> Preliminary Performance Evalutaion of a Distributed Java: </title> <booktitle> HORB. In France-Japan Workshop on Object-Based Parallel and Distributed Computation, </booktitle> <address> Toulouse, France, </address> <year> 1997. </year> <note> http://ring.etl.go.jp/openlab/horb/. </note>
Reference-contexts: Examples of such applications are distributed white boards, calendars, and editors where multiple users collaborate towards one goal. Software systems that support collaborative applications include the E programming language [9], Cal-tech Infosphere project [7], HORB <ref> [18] </ref>, iBus [16], Jada/PageSpace [8], Java Collaborator Toolset [15], Java Remote Method Invocation (RMI) [19], JavaSpaces [13], and TANGO [3]. The E programming language and HORB extends Java in several ways. The E language adds message passing through channels and richer security through cryptographic and authentication.
Reference: [19] <institution> Sun microsystems, Mountain View, CA. </institution> <note> RMIRemote Method Invocation (JDK 1.1.3). </note>
Reference-contexts: Examples of such applications are distributed white boards, calendars, and editors where multiple users collaborate towards one goal. Software systems that support collaborative applications include the E programming language [9], Cal-tech Infosphere project [7], HORB [18], iBus [16], Jada/PageSpace [8], Java Collaborator Toolset [15], Java Remote Method Invocation (RMI) <ref> [19] </ref>, JavaSpaces [13], and TANGO [3]. The E programming language and HORB extends Java in several ways. The E language adds message passing through channels and richer security through cryptographic and authentication.
Reference: [20] <author> V. S. Sunderam, A. Geist, J. Dongarra, and R. Mancheck. </author> <title> The PVM Concurrent Computing System: Evolution, Experiences, </title> <booktitle> and Trends. Parallel Computing, </booktitle> <address> 20:531546, </address> <month> April </month> <year> 1994. </year>
Reference-contexts: 1 Introduction The advent of the World Wide Web along with the pervasive availability of cheap networking resources has permitted the idea of distributed parallel computation or collaborative work on a large scale. But while parallel computing on a local network of workstations is common practice (with systems like PVM <ref> [20] </ref> as examples), this is not the case for distributed computing over the World Wide Web. Similarly, collaborative work over the Internet is faced with a number of practical problems.
Reference: [21] <author> S. Taylor. </author> <title> Prototype Java-MPI Package. http://cisr.anu.edu.au/sam/java/ java mpi prototype.html. </title> <type> 26 </type>
Reference-contexts: emphasis: those that focus on providing a parallel programming environment, or a metacomputer, on the Web; and those that focus on providing the infrastructure for collaborative applications on the Web. 5.1 Metacomputing on the Web The projects that focus on a Java-based parallel computing include ATLAS [1], Charlotte [2], Java-MPI <ref> [21] </ref>, JavaParty, [17], Javelin [6], JPVM [10], ParaWeb [5], and WebFlow [4].
References-found: 21

