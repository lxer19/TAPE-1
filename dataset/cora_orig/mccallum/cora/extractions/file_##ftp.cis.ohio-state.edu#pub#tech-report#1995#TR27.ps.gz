URL: file://ftp.cis.ohio-state.edu/pub/tech-report/1995/TR27.ps.gz
Refering-URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/TRList.html
Root-URL: 
Email: ,fujimurag@cis.ohio-state.edu  Email: fujimura@cis.ohio-state.edu  
Phone: Phone: (614) 292-6730 FAX: (614) 292-2911  
Title: Shape Transformation in Space-Time  
Author: Jinghuan Lu and Kikuo Fujimura Kikuo Fujimura 
Keyword: shape transformation, deformation, animation.  
Note: Corresponding author:  
Address: 2015 Neil Avenue, Columbus, OH 43210-1277  395 Dreese Lab, 2015 Neil Avenue Columbus, OH 43210-1277  
Affiliation: Department of Computer and Information Science The Ohio State University  Dept. of Computer and Information Science The Ohio State University  
Abstract: A method is presented for shape transformation in the plane. The primary strength of the proposed method over previous approaches for shape transformation is that our method can achieve shape transformation in a domain that can contain obstacles which are possibly in motion. A smooth transformation between two given polygonal shapes is to be attained while ensuring that any part of the shape is free of collision with the obstacles in the domain during the transformation process. The problem is formulated as minimization of a cost function associated with each transformation path that controls length, smoothness, and collision-freedom of the path. The problem is solved in three steps. First, a population of tentative transformation paths is generated by combining path planning for an anchor point in the shape and a randomization process. Second, collision detection and shape deformation techniques are applied to keyframes along the paths to minimize the occurrence of collision. Lastly, a genetic algorithm is used to refine the population of transformation paths. Experimental results are presented to demonstrate the feasibility of our approach. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Barraquand and J. Latombe. </author> <title> Robot motion planning: A distributed representation approach. </title> <journal> International Journal of Robotics Research, </journal> <volume> 10 </volume> <pages> 628-649, </pages> <year> 1991. </year>
Reference-contexts: The presence of moving obstacles adds another dimension of complexity. For a static environment without moving obstacles, a number of attempts have been made including an approach using numerical potential fields with randomized search <ref> [1] </ref>, a sequential method [10], and a method making use of a hierarchical nature of the structure modeled [3]. Genetic algorithms are also used for controlling the motion of human-like figures in animation.
Reference: [2] <author> T. Beier and S. Neely. </author> <title> Feature-based image metamorphosis. </title> <booktitle> Computer Graphics (Proc. of SIGGRAPH), </booktitle> <volume> 26 </volume> <pages> 35-42, </pages> <year> 1992. </year>
Reference-contexts: The problem can be stated as that of transforming a given shape into another in a continuous, smooth, and visually graceful manner. This process is sometimes referred to as shape blending [20], morphing [13], image warping [19], image metamorphosis <ref> [2] </ref>, deformation [21], etc., depending on the domain in which the method is used.
Reference: [3] <author> W. Ching and N. Badler. </author> <title> Fast motion planning for anthropometric figures with many degrees of freedom. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 2340-2345, </pages> <address> Nice, France, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: For a static environment without moving obstacles, a number of attempts have been made including an approach using numerical potential fields with randomized search [1], a sequential method [10], and a method making use of a hierarchical nature of the structure modeled <ref> [3] </ref>. Genetic algorithms are also used for controlling the motion of human-like figures in animation.
Reference: [4] <author> L. Davis. </author> <title> Handbooks of Genetic Algorithms. </title> <publisher> Van Nostrand Reinhold, </publisher> <address> New York, N.Y., </address> <year> 1991. </year>
Reference-contexts: we describe the evolutionary programming techniques that can further improve the quality of the shape transformation. 3.4 Phase 3: Genetic Algorithm Over the past six years, tremendous progress has been made in applying genetic algorithms as a practical and powerful optimization method to a variety of large complex search spaces <ref> [4, 9, 12, 24, 27] </ref>. Based on the mechanisms of evolution and natural genetics, genetic algorithms can produce good solutions in a relatively quick fashion. All the genetic algorithms assume the existence of some optimality criterion.
Reference: [5] <author> A. Ekoule. </author> <title> A triangulation algorithm form arbitrary shaped multiple planar contours. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 10 </volume> <pages> 182-199, </pages> <year> 1991. </year>
Reference-contexts: Finding tubular objects with given top and bottom faces is a subject of much investigation in geometric modeling <ref> [5, 7, 15] </ref>, which finds use in object reconstruction from a sequence of 2-dimensional cross sections. <p> Similar problems also arise in lofting used in geometric modeling, where a solid is to be constructed from a series of cross sections. Solutions using shortest path search in graphs [7], local shape similarity <ref> [5] </ref>, and a homotopy model [23] have been proposed. Deformation of shapes has also been studied by using physically-based modeling [25] and by using a differential modeling [22]. In our problem, a collision-free trajectory is to be generated for each vertex in the polygonal shape.
Reference: [6] <author> T. W. Sederberg et al. </author> <title> 2d shape blending: An intrinsic solution to the vertex path problem. </title> <booktitle> Computer Graphics (Proc. of SIGGRAPH), </booktitle> <volume> 27 </volume> <pages> 15-18, </pages> <year> 1993. </year>
Reference-contexts: In the first step, we introduce an `anchor point' in the shape and generate a trajectory for the anchor point. In the second step, we consider deformation of the shape along the trajectory of the anchor point. For this part, we use modified edge-angle interpolation method <ref> [6] </ref>. In the third step, techniques from genetic algorithms are used to control the transformation process. A cost function is defined over a transformation process, taking into consideration the total path length, smoothness of the path, and collision-freedom of the path. <p> Sometimes, this approach produces undesirable effects such as self-intersecting intermediate polygons. An improved approach, edge-angle interpolation, was proposed in which 2 edge lengths and angles between the initial and final shapes are interpolated <ref> [6] </ref>. A modification of the edge-angle interpolation is used in the first part of our shape transformation. Similar problems also arise in lofting used in geometric modeling, where a solid is to be constructed from a series of cross sections. <p> Collision detection and shape deformation. In step 1, the trajectory is parameterized between two fixed endpoints S and G. This parametric description of the trajectory comprises the intermediate shapes for the motion and is used in step 2. The edge-angle interpolation method <ref> [6] </ref> is used to generate intermediate shapes based on interpolating the intrinsic definitions of the initial and final shapes. Rigid body translations are used to position them along the trajectory. In an environment where moving obstacles may be present, the generated shapes along the trajectory are usually not collision free. <p> The parametric representation enables us to do this by incrementing u from 0 to 1 uniformly. The u parameter represents time and is used to interpolate the intrinsic definitions of the initial and final shapes. 3.3.2 Interpolation of the Initial and Final Shapes In <ref> [6] </ref>, an edge-angle interpolation method was proposed to generate the positions of the vertices for an intermediate polygon parameterized by u, where 0 u 1. In this approach, edge lengths between successive vertices and directed angles between successive edges are computed for the initial and final shapes. <p> From now on, we will focus on collision detection and deformation aspects of the shape transformation and shall not discuss the operations of this well-known shape blending algorithm in detail; interested readers are referred to <ref> [6] </ref> 7 Rigid body translation is used to position the anchor point of the keyframe on the appropriate location along the trajectory. The position of the anchor point along the trajectory is also parameterized by the u parameter.
Reference: [7] <author> H. Fuchs, Z.M. Kedem, and S.P. Uselton. </author> <title> Optimal surface reconstruction from planar contours. </title> <journal> Communications of the ACM, </journal> 20(10) 693-702, 1977. 
Reference-contexts: Finding tubular objects with given top and bottom faces is a subject of much investigation in geometric modeling <ref> [5, 7, 15] </ref>, which finds use in object reconstruction from a sequence of 2-dimensional cross sections. <p> A modification of the edge-angle interpolation is used in the first part of our shape transformation. Similar problems also arise in lofting used in geometric modeling, where a solid is to be constructed from a series of cross sections. Solutions using shortest path search in graphs <ref> [7] </ref>, local shape similarity [5], and a homotopy model [23] have been proposed. Deformation of shapes has also been studied by using physically-based modeling [25] and by using a differential modeling [22]. In our problem, a collision-free trajectory is to be generated for each vertex in the polygonal shape.
Reference: [8] <author> K. Fujimura and H. Samet. </author> <title> Planning a time-minimal motion among moving obstacles. </title> <journal> Algo-rithmica, </journal> <volume> 10 </volume> <pages> 41-63, </pages> <year> 1993. </year> <month> 19 </month>
Reference-contexts: It 5 can be shown that the above algorithm always find a path as long as the speed v is greater than the maximum speed of the obstacles and that the path found is time-minimal. See <ref> [8] </ref> for more details. The path generated as above is a sequence of vertices in the original polygon plus the start and the destination point. The path is perturbed so as to create some space for finite-sized shape to move through.
Reference: [9] <author> D. Goldberg. </author> <title> Genetic algorithms in search, optimization, and machine learning. </title> <publisher> Addison--Wesley, </publisher> <year> 1989. </year>
Reference-contexts: we describe the evolutionary programming techniques that can further improve the quality of the shape transformation. 3.4 Phase 3: Genetic Algorithm Over the past six years, tremendous progress has been made in applying genetic algorithms as a practical and powerful optimization method to a variety of large complex search spaces <ref> [4, 9, 12, 24, 27] </ref>. Based on the mechanisms of evolution and natural genetics, genetic algorithms can produce good solutions in a relatively quick fashion. All the genetic algorithms assume the existence of some optimality criterion.
Reference: [10] <author> K. Gupta. </author> <title> Fast collision avoidance for manipulator arms, a sequential search strategy. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 1724-1729, </pages> <address> Cincinnati, Ohio, </address> <month> May </month> <year> 1990. </year>
Reference-contexts: The presence of moving obstacles adds another dimension of complexity. For a static environment without moving obstacles, a number of attempts have been made including an approach using numerical potential fields with randomized search [1], a sequential method <ref> [10] </ref>, and a method making use of a hierarchical nature of the structure modeled [3]. Genetic algorithms are also used for controlling the motion of human-like figures in animation.
Reference: [11] <author> P. Heckbert. </author> <title> Survey of texture mapping. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 6 </volume> <pages> 56-67, </pages> <year> 1986. </year>
Reference-contexts: The terms `image morphing' and `warping' are often used for shape transformation in image space in the context of volume manipulation and texture mapping <ref> [11] </ref>, while shape blending usually means the operation in object space as typically done in computer animation.
Reference: [12] <author> J. H. Holland. </author> <title> Adaptation in Natural and Artificial Systems. </title> <publisher> Univ. of Michigan Press, </publisher> <address> Ann Arbor, Mich., </address> <year> 1975. </year>
Reference-contexts: we describe the evolutionary programming techniques that can further improve the quality of the shape transformation. 3.4 Phase 3: Genetic Algorithm Over the past six years, tremendous progress has been made in applying genetic algorithms as a practical and powerful optimization method to a variety of large complex search spaces <ref> [4, 9, 12, 24, 27] </ref>. Based on the mechanisms of evolution and natural genetics, genetic algorithms can produce good solutions in a relatively quick fashion. All the genetic algorithms assume the existence of some optimality criterion.
Reference: [13] <author> J.F. Hughes. </author> <title> Scheduled fourier volume morphing. </title> <booktitle> Computer Graphics (Proc. of SIGGRAPH), </booktitle> <volume> 26 </volume> <pages> 43-46, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction Shape transformation is a basic operation in computer graphics [26]. The problem can be stated as that of transforming a given shape into another in a continuous, smooth, and visually graceful manner. This process is sometimes referred to as shape blending [20], morphing <ref> [13] </ref>, image warping [19], image metamorphosis [2], deformation [21], etc., depending on the domain in which the method is used.
Reference: [14] <author> J.C. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Press, </publisher> <year> 1990. </year>
Reference-contexts: Although efficient solutions are known to exist for a system of low degrees of freedom (e.g., n = 2 or 3), the problem becomes increasingly hard for a large n <ref> [14] </ref>. The presence of moving obstacles adds another dimension of complexity.
Reference: [15] <author> X. Meyers. </author> <title> Surfaces from contours. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 3 </volume> <pages> 228-258, </pages> <year> 1992. </year>
Reference-contexts: For example, a concave vertex may be mapped to a concave vertex of the final polygon. Finding suitable correspondence between shapes is itself a subject of study in some work in shape blending and lofting algorithms <ref> [15, 18] </ref>. In our problem, correspondence is to be provided by the user. Although it requires the user to specify some additional input, it is sometimes preferable than an automated algorithm from an animation point of view as it gives the user more control over the shape blending process. <p> Finding tubular objects with given top and bottom faces is a subject of much investigation in geometric modeling <ref> [5, 7, 15] </ref>, which finds use in object reconstruction from a sequence of 2-dimensional cross sections.
Reference: [16] <author> D. Miller and R. Parent. </author> <title> An articulated limb motion planner for optimized movement. </title> <journal> Journal of Visualization and Computer Animation, </journal> <volume> 5 </volume> <pages> 85-123, </pages> <year> 1994. </year>
Reference-contexts: Genetic algorithms are also used for controlling the motion of human-like figures in animation. Ngo and Marks [17] have generated physically plausible walking and rolling motions for a human-like stick figures in a 2-dimensional obstacle-free space, while Miller and Parent <ref> [16] </ref> have animated an arm with seven degrees of freedom in an obstacle cluttered stationary 3-dimensional environment.
Reference: [17] <author> J. Ngo and J. Marks. </author> <title> Spacetime constraints revisited. </title> <journal> Computer Graphics (Proc. of SIG-GRAPH), </journal> <volume> 21 </volume> <pages> 343-350, </pages> <year> 1993. </year>
Reference-contexts: Genetic algorithms are also used for controlling the motion of human-like figures in animation. Ngo and Marks <ref> [17] </ref> have generated physically plausible walking and rolling motions for a human-like stick figures in a 2-dimensional obstacle-free space, while Miller and Parent [16] have animated an arm with seven degrees of freedom in an obstacle cluttered stationary 3-dimensional environment.
Reference: [18] <author> R. Parent. </author> <title> Shape transformation by boundary representation: a recursive approach to establishing face correspondences. </title> <journal> Journal of Visualization and Computer Animation, </journal> <volume> 3 </volume> <pages> 219-239, </pages> <year> 1992. </year>
Reference-contexts: For example, a concave vertex may be mapped to a concave vertex of the final polygon. Finding suitable correspondence between shapes is itself a subject of study in some work in shape blending and lofting algorithms <ref> [15, 18] </ref>. In our problem, correspondence is to be provided by the user. Although it requires the user to specify some additional input, it is sometimes preferable than an automated algorithm from an animation point of view as it gives the user more control over the shape blending process.
Reference: [19] <author> D. Ruprecht and H. Muller. </author> <title> Image warping with scattered data interpolation. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 15(2) </volume> <pages> 37-43, </pages> <year> 1995. </year>
Reference-contexts: 1 Introduction Shape transformation is a basic operation in computer graphics [26]. The problem can be stated as that of transforming a given shape into another in a continuous, smooth, and visually graceful manner. This process is sometimes referred to as shape blending [20], morphing [13], image warping <ref> [19] </ref>, image metamorphosis [2], deformation [21], etc., depending on the domain in which the method is used.
Reference: [20] <author> T. W. Sederberg and E. Greenwood. </author> <title> A physically based approach to 2d shape blending. </title> <booktitle> Computer Graphics (Proc. of SIGGRAPH), </booktitle> <volume> 26(2) </volume> <pages> 25-34, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction Shape transformation is a basic operation in computer graphics [26]. The problem can be stated as that of transforming a given shape into another in a continuous, smooth, and visually graceful manner. This process is sometimes referred to as shape blending <ref> [20] </ref>, morphing [13], image warping [19], image metamorphosis [2], deformation [21], etc., depending on the domain in which the method is used.
Reference: [21] <author> T. W. Sederberg and S. Perry. </author> <title> Free form deformations of solid geometric models. </title> <booktitle> Computer Graphics (Proc. of SIGGRAPH), </booktitle> <volume> 20(4) </volume> <pages> 151-160, </pages> <year> 1986. </year>
Reference-contexts: The problem can be stated as that of transforming a given shape into another in a continuous, smooth, and visually graceful manner. This process is sometimes referred to as shape blending [20], morphing [13], image warping [19], image metamorphosis [2], deformation <ref> [21] </ref>, etc., depending on the domain in which the method is used.
Reference: [22] <author> Y. </author> <title> Shinagawa and T.L. Kunii. The differential model: A model for animating transformation of objects using differential information. In T.L. </title> <editor> Kunii, editor, </editor> <booktitle> Modeling in Computer Graphics, </booktitle> <pages> pages 5-15. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: Solutions using shortest path search in graphs [7], local shape similarity [5], and a homotopy model [23] have been proposed. Deformation of shapes has also been studied by using physically-based modeling [25] and by using a differential modeling <ref> [22] </ref>. In our problem, a collision-free trajectory is to be generated for each vertex in the polygonal shape. Since a total of n trajectories are to be generated and each vertex has two degrees of freedom, shape blending can be characterized by 2n degrees of freedom.
Reference: [23] <author> Y. </author> <title> Shinagawa and T.L. Kunii. The homotopy model: a generalized model for smooth surface generation from cross sectional data. </title> <journal> Visual Computer, </journal> <volume> 7 </volume> <pages> 72-86, </pages> <year> 1991. </year>
Reference-contexts: Similar problems also arise in lofting used in geometric modeling, where a solid is to be constructed from a series of cross sections. Solutions using shortest path search in graphs [7], local shape similarity [5], and a homotopy model <ref> [23] </ref> have been proposed. Deformation of shapes has also been studied by using physically-based modeling [25] and by using a differential modeling [22]. In our problem, a collision-free trajectory is to be generated for each vertex in the polygonal shape.
Reference: [24] <author> M. Srinivas and Lalit M. Patnaik. </author> <title> Genetic algorithms: A survey. </title> <journal> IEEE Computer, </journal> <volume> 27 </volume> <pages> 17-26, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: we describe the evolutionary programming techniques that can further improve the quality of the shape transformation. 3.4 Phase 3: Genetic Algorithm Over the past six years, tremendous progress has been made in applying genetic algorithms as a practical and powerful optimization method to a variety of large complex search spaces <ref> [4, 9, 12, 24, 27] </ref>. Based on the mechanisms of evolution and natural genetics, genetic algorithms can produce good solutions in a relatively quick fashion. All the genetic algorithms assume the existence of some optimality criterion.
Reference: [25] <author> D. Terzopoulos and K. Fleischer. </author> <title> Modeling inelastic deformation: viscoelasticity, plasticity, fracture. </title> <booktitle> Computer Graphics (Proc. of SIGGRAPH), </booktitle> <volume> 22 </volume> <pages> 269-278, </pages> <year> 1988. </year> <month> 20 </month>
Reference-contexts: Solutions using shortest path search in graphs [7], local shape similarity [5], and a homotopy model [23] have been proposed. Deformation of shapes has also been studied by using physically-based modeling <ref> [25] </ref> and by using a differential modeling [22]. In our problem, a collision-free trajectory is to be generated for each vertex in the polygonal shape.
Reference: [26] <author> A. Watt and M. Watt. </author> <title> Advanced Animation and Rendering Techniques. </title> <publisher> ACM Press, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: 1 Introduction Shape transformation is a basic operation in computer graphics <ref> [26] </ref>. The problem can be stated as that of transforming a given shape into another in a continuous, smooth, and visually graceful manner.
Reference: [27] <author> D. Whitley and T. Starkweather. Genitor-ii: </author> <title> A distributed genetic algorithm. </title> <journal> J. Experimental Theoretical Artificial Intelligence, </journal> <volume> 2 </volume> <pages> 189-214, </pages> <year> 1990. </year> <month> 21 </month>
Reference-contexts: we describe the evolutionary programming techniques that can further improve the quality of the shape transformation. 3.4 Phase 3: Genetic Algorithm Over the past six years, tremendous progress has been made in applying genetic algorithms as a practical and powerful optimization method to a variety of large complex search spaces <ref> [4, 9, 12, 24, 27] </ref>. Based on the mechanisms of evolution and natural genetics, genetic algorithms can produce good solutions in a relatively quick fashion. All the genetic algorithms assume the existence of some optimality criterion.
References-found: 27

