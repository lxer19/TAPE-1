URL: http://euler.mcs.utulsa.edu/~corcoran/ps/ipl.ps
Refering-URL: http://euler.mcs.utulsa.edu/~corcoran/pubs.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Heuristic for Improved Genetic Bin Packing  
Author: Arthur L. CORCORAN and Roger L. WAINWRIGHT 
Keyword: Combinatorial problems, genetic algorithms, bin packing.  
Address: 600 South College Avenue, Tulsa, OK 74104-3189, USA  
Affiliation: Department of Mathematical and Computer Sciences, The University of Tulsa,  
Note: A  
Abstract: University of Tulsa Technical Report UTULSA-MCS-93-8, May, 1993. Submitted to Information Processing Letters, May, 1993. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. G. Coffman, M. R. Garey, D. S. Johnson, and R. E. Tarjan. </author> <title> Performance bounds for level-oriented two-dimensional packing algorithms. </title> <journal> SIAM Journal of Computing, </journal> <volume> 9(4) </volume> <pages> 808-826, </pages> <month> November </month> <year> 1980. </year>
Reference-contexts: The advantage of these methods is that they have guaranteed packing performance bounds. A survey of approximation algorithms for bin packing and their respective performance bounds are reported by Garey and Johnson [5] in the one dimensional case, Coffman et al. <ref> [1] </ref> in the two dimensional case, and Li and Cheng [8] in the three dimensional case. In many practical applications of bin packing, a small improvement in packing efficiency can result in great cost savings. <p> Coffman et al. <ref> [1] </ref> reports the best deterministic algorithm in this case is split-fit (SF), which guarantees performance bounds of 1.5 times optimal. Other algorithms include first fit decreasing 3 height (FFDH) with bound of 1.7 times optimal and next fit decreasing height (NFDH) with bound of 2.0 times optimal.
Reference: [2] <author> A. L. Corcoran and R. L. Wainwright. </author> <title> A genetic algorithm for packing in three dimensions. </title> <booktitle> In Proceedings of the ACM/SIGAPP Symposium on Applied Computing, </booktitle> <pages> pages 1021-1030, </pages> <address> Kansas City, Missouri, </address> <month> March </month> <year> 1992. </year>
Reference-contexts: For example, when a bin represents a truck, ship or airplane, a large sum of money can be saved by using one less bin. Genetic algorithms have been used on the bin packing problem with great success <ref> [2, 3, 9] </ref>. A genetic algorithm [6, 7] is an iterative procedure which borrows the ideas of natural selection and `survival of the fittest' from natural evolution. By simulating natural evolution in this way, a genetic algorithm can easily solve complex problems.
Reference: [3] <author> A. L. Corcoran and R. L. Wainwright. LibGA: </author> <title> A user-friendly workbench for order-based genetic algorithm research. </title> <booktitle> In Proceedings of the ACM/SIGAPP Symposium on Applied Computing, </booktitle> <pages> pages 111-118, </pages> <address> Indianapolis, Indiana, </address> <month> February </month> <year> 1993. </year>
Reference-contexts: For example, when a bin represents a truck, ship or airplane, a large sum of money can be saved by using one less bin. Genetic algorithms have been used on the bin packing problem with great success <ref> [2, 3, 9] </ref>. A genetic algorithm [6, 7] is an iterative procedure which borrows the ideas of natural selection and `survival of the fittest' from natural evolution. By simulating natural evolution in this way, a genetic algorithm can easily solve complex problems. <p> Even when premature convergence cannot be avoided, reduction should at least improve the bounds over the deterministic strategies, such as next fit, first fit, etc. 4 Experimental Results We used the genetic algorithm package, LibGA <ref> [3] </ref>, to implement our heuristic on a two dimensional bin packing problem. Coffman et al. [1] reports the best deterministic algorithm in this case is split-fit (SF), which guarantees performance bounds of 1.5 times optimal.
Reference: [4] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> San Francisco, </address> <year> 1979. </year>
Reference-contexts: The bin packing problem has many important applications. These include multiprocessor scheduling, resource allocation, and real-world planning, packing, routing, and scheduling optimization problems. The bin packing problem is NP-complete <ref> [4] </ref>. Since there is therefore little hope in finding an efficient deterministic solution to the bin packing problem, approximation methods have been developed. The advantage of these methods is that they have guaranteed packing performance bounds.
Reference: [5] <author> M. R. Garey and D. S. Johnson. </author> <title> Approximation algorithms for bin packing problems: A survey. </title> <editor> In G. Ausiello and M. Lucertini, editors, </editor> <booktitle> Analysis and Design of Algorithms in Combinatorial Optimization, </booktitle> <pages> pages 147-172. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1981. </year>
Reference-contexts: The advantage of these methods is that they have guaranteed packing performance bounds. A survey of approximation algorithms for bin packing and their respective performance bounds are reported by Garey and Johnson <ref> [5] </ref> in the one dimensional case, Coffman et al. [1] in the two dimensional case, and Li and Cheng [8] in the three dimensional case. In many practical applications of bin packing, a small improvement in packing efficiency can result in great cost savings.
Reference: [6] <author> D. E. Goldberg. </author> <title> Genetic Algorithms in Search, Optimization, and Machine Learning. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1989. </year>
Reference-contexts: For example, when a bin represents a truck, ship or airplane, a large sum of money can be saved by using one less bin. Genetic algorithms have been used on the bin packing problem with great success [2, 3, 9]. A genetic algorithm <ref> [6, 7] </ref> is an iterative procedure which borrows the ideas of natural selection and `survival of the fittest' from natural evolution. By simulating natural evolution in this way, a genetic algorithm can easily solve complex problems. <p> Reproduction ensures the fittest chromosome will survive. Crossover and mutation alter the chromosomes so that new points in the solution space are explored. 2 The Schema Theorem The schema theorem <ref> [6] </ref> forms the basis for a better understanding of how the genetic algorithm works. A schema [7] is a similarity template in which different genetic strings can be compared. Schemata allow similarities to be expressed in a concise and powerful way.
Reference: [7] <author> John H. Holland. </author> <title> Adaptation in Natural and Artificial Systems. </title> <publisher> The University of Michigan Press, </publisher> <address> Ann Arbor, Michigan, </address> <year> 1975. </year>
Reference-contexts: For example, when a bin represents a truck, ship or airplane, a large sum of money can be saved by using one less bin. Genetic algorithms have been used on the bin packing problem with great success [2, 3, 9]. A genetic algorithm <ref> [6, 7] </ref> is an iterative procedure which borrows the ideas of natural selection and `survival of the fittest' from natural evolution. By simulating natural evolution in this way, a genetic algorithm can easily solve complex problems. <p> Reproduction ensures the fittest chromosome will survive. Crossover and mutation alter the chromosomes so that new points in the solution space are explored. 2 The Schema Theorem The schema theorem [6] forms the basis for a better understanding of how the genetic algorithm works. A schema <ref> [7] </ref> is a similarity template in which different genetic strings can be compared. Schemata allow similarities to be expressed in a concise and powerful way. Suppose there are m copies of schema H in the population at time t. This is denoted by m (H; t).
Reference: [8] <author> K. Li and K. H. Cheng. </author> <title> On three-dimensional packing. </title> <journal> SIAM Journal of Computing, </journal> <volume> 19(5) </volume> <pages> 847-867, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: A survey of approximation algorithms for bin packing and their respective performance bounds are reported by Garey and Johnson [5] in the one dimensional case, Coffman et al. [1] in the two dimensional case, and Li and Cheng <ref> [8] </ref> in the three dimensional case. In many practical applications of bin packing, a small improvement in packing efficiency can result in great cost savings. For example, when a bin represents a truck, ship or airplane, a large sum of money can be saved by using one less bin.
Reference: [9] <author> D. Smith. </author> <title> Bin packing with adaptive search. </title> <booktitle> In Proceedings of the First International Conference on Genetic Algorithms, </booktitle> <pages> pages 202-207, </pages> <address> Pittsburg, Pennsylvania, </address> <month> July </month> <year> 1988. </year>
Reference-contexts: For example, when a bin represents a truck, ship or airplane, a large sum of money can be saved by using one less bin. Genetic algorithms have been used on the bin packing problem with great success <ref> [2, 3, 9] </ref>. A genetic algorithm [6, 7] is an iterative procedure which borrows the ideas of natural selection and `survival of the fittest' from natural evolution. By simulating natural evolution in this way, a genetic algorithm can easily solve complex problems.

References-found: 9

