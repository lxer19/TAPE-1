URL: ftp://ftp.cs.monash.edu.au/pub/annn/pricai96.ps
Refering-URL: http://www.cs.monash.edu.au/~annn/cv/pub.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: annn@cs.monash.edu.au.  
Title: Fall Diagnosis using Dynamic Belief Networks  
Author: A. E. Nicholson 
Address: 3168, Australia,  
Affiliation: Department of Computer Science, Monash University, Clayton, VIC  
Abstract: The task is to monitor walking patterns and give early warning of falls using foot switch and mercury trigger sensors. We describe a dynamic belief network model for fall diagnosis which, given evidence from sensor observations, outputs beliefs about the current walking status and makes predictions regarding future falls. The model represents possible sensor error and is parametrised to allow customisation to the individual being monitored.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> P. Dagum and A. Galper. </author> <title> Forecasting sleep apnea with dynamic network models. </title> <booktitle> In Proceedings of the Ninth Conference on Uncertainty in AI, </booktitle> <pages> pages 64-71, </pages> <year> 1993. </year>
Reference-contexts: Such dynamic applications include robot navigation and map learning based on temporal belief networks [4], monitoring robot vehicles [7], oil forecasting [2], [12], forecasting sleep apnea <ref> [1] </ref>, automated vehicle control [5] and traffic plan recognition [13]. For such applications the network grows over time, as the state of each domain variable at different times is represented by a series of nodes.
Reference: 2. <author> P. Dagum, A. Galper, and E. Horvitz. </author> <title> Dynamic network models for forecasting. </title> <booktitle> In Proceedings of the 8th Conference on Uncertainty in Artificial Intelligence, </booktitle> <pages> pages 41-48, </pages> <year> 1992. </year>
Reference-contexts: Such dynamic applications include robot navigation and map learning based on temporal belief networks [4], monitoring robot vehicles [7], oil forecasting <ref> [2] </ref>, [12], forecasting sleep apnea [1], automated vehicle control [5] and traffic plan recognition [13]. For such applications the network grows over time, as the state of each domain variable at different times is represented by a series of nodes.
Reference: 3. <author> James Davies. </author> <title> Fall diagnosis with a mobile data network. </title> <note> Unpublished BCSE Honours Report, </note> <institution> Dept. of Electrical Engineering, Monash University, </institution> <year> 1995. </year>
Reference-contexts: Timing data for the observations is also given. Previous work in this domain performed fall diagnosis with a simple state machine <ref> [3] </ref>, however this does not allow representation of either degrees of belief as to the person's ambulatory status, or of the uncertainty in the sensor readings. <p> Sect. 3 gives an introduction to dynamic belief networks. In Sect. 4 we develop a complete belief network model for the fall diagnosis problem, with results given in Sect. 5. Extensions to the basic network are described in Sect. 6. 2 The Fall Diagnosis Problem Davies <ref> [3] </ref> describes a project with Prof. Ian Brown at Monash University, Dept. of Electrical Engineering, for monitoring the stepping pattern of elderly people Fig. 1. Davies' State Machine for the fall diagnosis problem [3] and patients. <p> Extensions to the basic network are described in Sect. 6. 2 The Fall Diagnosis Problem Davies <ref> [3] </ref> describes a project with Prof. Ian Brown at Monash University, Dept. of Electrical Engineering, for monitoring the stepping pattern of elderly people Fig. 1. Davies' State Machine for the fall diagnosis problem [3] and patients. Step data is obtained using foot-switches and sent via a mobile data network to a remote monitoring station, which attempts to detect falls and near falls by using a state transition diagram, shown in Fig. 1.
Reference: 4. <author> Thomas Dean and Michael P. Wellman. </author> <title> Planning and control. </title> <publisher> Morgan Kaufman Publishers, </publisher> <address> San Mateo, Ca., </address> <year> 1991. </year>
Reference-contexts: More recently researchers have used belief networks in dynamic domains such as the fall diagnosis problem, where the world changes and the focus is reasoning over time <ref> [4, 6, 9] </ref>. Such dynamic applications include robot navigation and map learning based on temporal belief networks [4], monitoring robot vehicles [7], oil forecasting [2], [12], forecasting sleep apnea [1], automated vehicle control [5] and traffic plan recognition [13]. <p> More recently researchers have used belief networks in dynamic domains such as the fall diagnosis problem, where the world changes and the focus is reasoning over time [4, 6, 9]. Such dynamic applications include robot navigation and map learning based on temporal belief networks <ref> [4] </ref>, monitoring robot vehicles [7], oil forecasting [2], [12], forecasting sleep apnea [1], automated vehicle control [5] and traffic plan recognition [13]. For such applications the network grows over time, as the state of each domain variable at different times is represented by a series of nodes.
Reference: 5. <author> Jeff Forbes, Tim Huang, Keiji Kanazawa, and Stuart Russell. </author> <title> The BATMobile: Towards a bayesian automated taxi. </title> <booktitle> In Proceedings of the 14th Int. Joint Conf. on Artificial Intelligence (IJCAI'95), </booktitle> <pages> pages 1878-1885, </pages> <year> 1995. </year>
Reference-contexts: Such dynamic applications include robot navigation and map learning based on temporal belief networks [4], monitoring robot vehicles [7], oil forecasting [2], [12], forecasting sleep apnea [1], automated vehicle control <ref> [5] </ref> and traffic plan recognition [13]. For such applications the network grows over time, as the state of each domain variable at different times is represented by a series of nodes.
Reference: 6. <author> U. Kjrulff. </author> <title> A computational scheme for reasoning in dynamic probabilistic networks. </title> <booktitle> In Proceedings of the 8th Conference on Uncertainty in Artificial Intelligence, </booktitle> <pages> pages 121-129, </pages> <year> 1992. </year>
Reference-contexts: More recently researchers have used belief networks in dynamic domains such as the fall diagnosis problem, where the world changes and the focus is reasoning over time <ref> [4, 6, 9] </ref>. Such dynamic applications include robot navigation and map learning based on temporal belief networks [4], monitoring robot vehicles [7], oil forecasting [2], [12], forecasting sleep apnea [1], automated vehicle control [5] and traffic plan recognition [13].
Reference: 7. <author> A. E. Nicholson and J. M. Brady. </author> <title> The data association problem when monitoring robot vehicles using dynamic belief networks. </title> <booktitle> In Proc. of the 10th European Conf. on Artificial Intelligence (ECAI-92), </booktitle> <pages> pages 689-693, </pages> <year> 1992. </year>
Reference-contexts: More recently researchers have used belief networks in dynamic domains such as the fall diagnosis problem, where the world changes and the focus is reasoning over time [4, 6, 9]. Such dynamic applications include robot navigation and map learning based on temporal belief networks [4], monitoring robot vehicles <ref> [7] </ref>, oil forecasting [2], [12], forecasting sleep apnea [1], automated vehicle control [5] and traffic plan recognition [13]. For such applications the network grows over time, as the state of each domain variable at different times is represented by a series of nodes.
Reference: 8. <author> A. E. Nicholson and J. M. Brady. </author> <title> Sensor validation using dynamic belief networks. </title> <booktitle> In Proceedings of the 8th Conference on Uncertainty in Artificial Intelligence, </booktitle> <pages> pages 207-214, </pages> <year> 1992. </year>
Reference-contexts: Second there is no distinction between actual states of the world and observations of that state, for example, the fall state is really a fall-alarm state. That is, there is no explicit representation of the uncertainty in the sensor observation <ref> [8] </ref>. <p> It represents adequately the underlying assumptions about the data uncertainty, however it does not provide an explanation of why the observed sensor data might be incorrect. We can represent the most usual source of incorrect data, namely a defective sensor, by the addition of a sensor status node SS <ref> [8] </ref> for each sensor. Each sensor status node becomes a predecessor of the corresponding observation node, and there is a connection between sensor status nodes across time slices.
Reference: 9. <author> A. E. Nicholson and J. M. Brady. </author> <title> Dynamic belief networks for discrete monitoring. </title> <journal> IEEE Systems, Man and Cybernetics, </journal> <volume> 24(11), </volume> <year> 1994. </year>
Reference-contexts: More recently researchers have used belief networks in dynamic domains such as the fall diagnosis problem, where the world changes and the focus is reasoning over time <ref> [4, 6, 9] </ref>. Such dynamic applications include robot navigation and map learning based on temporal belief networks [4], monitoring robot vehicles [7], oil forecasting [2], [12], forecasting sleep apnea [1], automated vehicle control [5] and traffic plan recognition [13]. <p> These dynamic networks are Markovian, which constrains the state space to some extent, however it is also crucial to limit the history being maintained in the network. A generic dynamic belief network structure for monitoring application is shown in Fig. 2 <ref> [9] </ref>. The types of nodes are: World nodes, which describe the central domain variables (for example, position, heading, velocity) variables; Event nodes, which represent a change in the state of a world node; Observation nodes, which represent direct observations of world nodes, or the observable effects of an event. <p> This is represented in a DBN by the use of a history node <ref> [9] </ref>, which maintains a count of how long the agent has been exhibiting one type of behaviour. For our domain, this would be a status history node, H i , for each time slice; its predecessors are the previous and current walking status nodes, S i1 and S i .
Reference: 10. <author> A.E. Nicholson. </author> <title> A case study in dynamic belief networks: monitoring walking, fall prediction and detection. </title> <type> Technical Report Technical Report 96/251, </type> <institution> Department of Computer Science, Monash University, </institution> <year> 1996. </year>
Reference-contexts: The DBN presented is one possible model for the fall diagnosis problem; many other variations are possible. For example, the DBN does not handle the case where both foot switches provide data at the same time. See <ref> [10] </ref> for a comparison of the use of action nodes in this model with other monitoring and planning applications. 5 Results The results described in this section were obtained using the Lisp-based IDEAL belief network development environment [15] on a GNU Common Lisp platform. <p> Each sensor status node becomes a predecessor of the corresponding observation node, and there is a connection between sensor status nodes across time slices. See <ref> [10] </ref> for details of the extensions described in this section. 7 Conclusions We have shown the development of a dynamic belief network model for fall diagnosis which overcomes the limitations of early work.
Reference: 11. <author> Judea Pearl. </author> <title> Probabilistic Reasoning in Intelligent Systems. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, Ca., </address> <year> 1988. </year>
Reference-contexts: This evidence is propagated through the network affecting the overall joint distribution (as represented by the conditional probabilities). There are a number of exact and approximate inference algorithms available for performing belief updating <ref> [11] </ref>; in this paper we are not concerned with the particular algorithm. Belief networks have been been used in various applications, such as medical diagnosis and model-based vision which initially were more static, i.e. essentially the nodes and links do not change over time.
Reference: 12. <author> Gregory M. Provan. </author> <title> Tradeoffs in constructing and evaluating temporal influence diagrams. </title> <booktitle> In Proceedings of the 9th Conference on Uncertainty in Artificial Intelligence, </booktitle> <pages> pages 40-47, </pages> <year> 1993. </year>
Reference-contexts: Such dynamic applications include robot navigation and map learning based on temporal belief networks [4], monitoring robot vehicles [7], oil forecasting [2], <ref> [12] </ref>, forecasting sleep apnea [1], automated vehicle control [5] and traffic plan recognition [13]. For such applications the network grows over time, as the state of each domain variable at different times is represented by a series of nodes.
Reference: 13. <author> David Pynadeth and Michael P. Wellman. </author> <title> Accounting for context in plan recogni-ition, with application too traffic monitoring. </title> <booktitle> In Proceedings of the 11th Conference on Uncertainty in Artificial Intelligence, </booktitle> <pages> pages 472-481, </pages> <year> 1995. </year>
Reference-contexts: Such dynamic applications include robot navigation and map learning based on temporal belief networks [4], monitoring robot vehicles [7], oil forecasting [2], [12], forecasting sleep apnea [1], automated vehicle control [5] and traffic plan recognition <ref> [13] </ref>. For such applications the network grows over time, as the state of each domain variable at different times is represented by a series of nodes.
Reference: 14. <author> Stuart Russell and Peter Norvig. </author> <title> Artificial Intelligence: A Modern Approach. </title> <publisher> Prentice-Hall, </publisher> <year> 1994. </year>
Reference-contexts: The mercury sensor trigger is represented by the node M, which represents a boolean variable. The time between sensor observations is given by the node T. Given the problems with combining continuous and discrete variables <ref> [14, p.465] </ref> and the limitations of the sensor, node T has discrete values representing tenths of seconds.
Reference: 15. <author> Sampath Srinivas and Jack Breese. </author> <title> Ideal: Influence diagram evaluation and analysis in lisp. </title> <type> Technical Report Technical Memorandum No. 23, </type> <institution> Rockwell International Science Center, </institution> <year> 1989. </year> <title> This article was processed using the L A T E X macro package with LLNCS style </title>
Reference-contexts: See [10] for a comparison of the use of action nodes in this model with other monitoring and planning applications. 5 Results The results described in this section were obtained using the Lisp-based IDEAL belief network development environment <ref> [15] </ref> on a GNU Common Lisp platform.
References-found: 15

