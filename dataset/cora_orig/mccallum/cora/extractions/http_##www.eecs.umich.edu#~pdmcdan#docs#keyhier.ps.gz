URL: http://www.eecs.umich.edu/~pdmcdan/docs/keyhier.ps.gz
Refering-URL: http://www.eecs.umich.edu/~pdmcdan/papers.html
Root-URL: http://www.cs.umich.edu
Email: fpdmcdan,jaming@eecs.umich.edu  
Title: A Scalable Key Distribution Hierarchy  
Author: Patrick McDaniel Sugih Jamin 
Date: March 21, 1998  
Address: Ann Arbor, MI 48109-2122  
Affiliation: Electrical Engineering and Computer Science Department University of Michigan  
Abstract: As the use of the Internet for electronic commerce, audio and video conferencing, and other applications with sensitive content grows, the need for secure services becomes critical. Central to the success of these services is the support for secure public key distribution. Although there are several existing services available for this purpose, they are not very scalable, either because they depend on a centralized server or rely on ad hoc trust relationships. In this paper, we present and examine a flexible approach to certificate distribution scalable to arbitrarily large networks. We propose a two level hierarchy where certificates can be independently authenticated by one or more peer authorities, called keyservers. Certificates for end-user and host entities are managed within local domains, called enterprises. By administrating certificates close to the source, we reduce the load on the key servers and the effects of network topology changes. We describe the design of our system and present a preliminary performance analysis based on traces of present-day DNS requests. 
Abstract-found: 1
Intro-found: 1
Reference: [BAN90] <author> M. Burrows, M. Abadi, and R.M. Needham. </author> <title> A Logic of Authentication. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 8, </volume> <month> February </month> <year> 1990. </year>
Reference: [DH76] <author> W. Diffie and M.E. Hellman. </author> <title> New Directions in Cryptography. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-22(6):644654, </volume> <month> November </month> <year> 1976. </year>
Reference-contexts: After appropriate mutual validation of credentials, the keyserver signs and caches the enterprise certificate and the enterprise root signs and caches the keyserver certificate. A thorough description of the use of digital signatures can be found in <ref> [DH76] </ref>. Each enterprise encompasses some organization of end users. The enterprise is intended to represent a group of geographically close local area networks under control of a single administrative authority.
Reference: [DOK92] <author> Peter B. Danzig, Katia Obraczka, and Anant Kumar. </author> <title> An Analysis of Wide-Area Name Server Traffic. </title> <booktitle> In SIGCOMM 92', </booktitle> <year> 1992. </year>
Reference-contexts: We argue that DNS (Domain Name Service) [Moc87a, Moc87b] likely has the usage characteristics that our system will encounter. Similar to certificate requests, DNS requests are most often used as a precursor to a session <ref> [DOK92] </ref>. From an analysis of DNS traffic we can determine when, how often, and to whom connections are made. Assuming that the secure communication supported by our key distribution hierarchy follows the same traffic pattern as DNS, we propose to estimate the performance of our system based on DNS traffic. <p> From this, we attribute this surge to lunch hour Internet surfing. Due to errors in some DNS implementations, the DNS resolver may send several requests for the same address to the server rapidly <ref> [DOK92] </ref>. We consider a request for a single address within a single second from the same source as a suspect request. We cannot state that a suspect request is invalid, as a host that does not cache DNS data will correctly generate them.
Reference: [EK99] <author> D. Eastlake and C. Kaufman. </author> <title> RFC 2065, Domain Name System Security Extensions. RFC 2065, </title> <institution> Internet Network Working Group, </institution> <month> Jan-uary </month> <year> 1999. </year>
Reference-contexts: End users indirectly subscribe only to those keyservers in which they have some level of trust. Verification of certificates may be performed by polling a subset of the subscribed keyservers, from which a majority result is used. The DNSSEC <ref> [EK99] </ref> specification outlines a key distribution hierarchy that uses the existing DNS infrastructure to support authenticated retrieval of DNS data. When retrieving a DNS record an application will traverse the DNS hierarchy, recursively authenticating each zone.
Reference: [Flo95] <author> S. Floyd. </author> <title> A Reliable Multicast Framework for Light-Weight Sessions and Application Level Framing. </title> <booktitle> In Proceedings of SIGCOMM '95, </booktitle> <pages> pages 342356, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: If the parent node timer expires before a response is seen in the group, it multicasts the request to the next higher group in the tree. This random wait response scheme at each level is similar to those used in the SRM <ref> [Flo95] </ref> reliable multicast protocol. This process is repeated until a response is received or the request timer expires at the root node in the tree. In the latter case, the enterprise root retrieves the certificate via the enterprise external protocol and returns the response certificate.
Reference: [FLYV93] <author> V. Fuller, T. Li, J.I. Yu, and K. Varadhan. </author> <title> Classless Inter-Domain Routing (CIDR): An Address Assignment and Aggregation Strategy. </title> <type> RFC 1519, </type> <institution> Internet Network Working Group, </institution> <month> September </month> <year> 1993. </year>
Reference-contexts: Certificate hold times over 5 minutes at each enterprise reduce the load on the keyserver by as much as 60%. Using the us domain trace, we simulate a keyserver and the associated requesting enterprises. Because the CIDR blocks <ref> [FLYV93] </ref> of the requesters in our trace were unavailable, we execute two simulations. In the first simulation, we treat all addresses as Class-C addresses, using the first 24 bits of their address. If two addresses have the same first 24 bits, they are deemed to be in the same enterprise.
Reference: [GS91] <author> Jim Grey and Daniel P. </author> <type> Siewiorek. </type> <institution> High-Availability Computer Systems. IEEE Computer, 24(9):3948, </institution> <month> September </month> <year> 1991. </year>
Reference-contexts: By making these channels independent, an enterprise root can validate received certificates. Users may also opt to validate certificates through several independent channels, resulting in increased confidence in their authenticity. This approach is similar to mechanisms for high-availability proposed in <ref> [GS91] </ref>. The architecture must be flexible. The topology of the Internet is constantly changing, so the architecture and underlying protocols must not be dependent on the physical connectivity or location of any singular authority. Mobility of users is of equal importance.
Reference: [Ken93] <author> S. Kent. </author> <title> RFC 1422, Privacy Enhancement for Internet Electronic Mail: Part II: Certificate-Based Key Management. </title> <type> RFC 1422, </type> <institution> Internet Network Working Group, </institution> <month> February </month> <year> 1993. </year>
Reference-contexts: While we also identify several important issues related to the security of the proposed architecture itself, a rigorous analysis of the security provided by the architecture is outside the scope of this paper. In the Privacy Enhance Mail system (PEM) <ref> [Ken93] </ref>, the authors define a certification authority whose require 1 ments are similar to that defined in this paper. They de-scribe a rooted tree, where the security of all certificates are ultimately guaranteed by the root authority. In a global network, finding one authority which all users trust is problematic. <p> Later, during authentication, multiple keyservers may be consulted. Keyservers are intended to be administered independently by regional, national, or global organizations. In terms of hardware and administrative practices, these servers should have many of the same characteristics of those defined for the PCA services of RFC 1422 <ref> [Ken93] </ref>. These practices define procedures used for mutual authentication before the exchange of signatures. For example, a keyserver may choose not to exchange signatures with some enterprise unless the administrators can provide sufficient proof of the security of their own internal signing practices. <p> The keyservers are also trusted in this way, but alternate channels for validating 4 certificates are available. Keyservers are logically the en-tities furthest removed from the end-points, and are likely to be least trusted. As with the single rooted hierarchy described in the PEM specification <ref> [Ken93] </ref>, the quality of retrieved certificates is only as good as the local administration of both end points. In fact, when both enterprises share a keyserver, the trust model is very similar. With respect to trust, our proposed system has two distinct advantages over PEM. <p> The Privacy Enhanced Mail (PEM) Certificate Hierarchy defines a design for certificate (public key) distribution to be used by all entities on the Internet. As described in RFC 1422 <ref> [Ken93] </ref>, the authors propose a hierarchy which contains a tree of certification authorities rooted at the Internet Policy Registration Authority (IPRA). Each node (Certification Authority) in the tree is classified by policies implemented by the administrators.
Reference: [KPS95] <author> Charlie Kaufman, Radia Perlman, and Mike Speciner. </author> <title> Network Security, Private Communication in a Public World. </title> <publisher> Prentice Hall, </publisher> <address> En-glewood Cliffs, New Jersey, </address> <year> 1995. </year>
Reference: [Moc87a] <author> P. Mockapetris. </author> <title> Domain Names Concepts and Facilities. </title> <type> RFC 1034, </type> <institution> Internet Network Working Group, </institution> <month> November </month> <year> 1987. </year>
Reference-contexts: Primarily, we seek to find the best choices for caching policies and certificate hold times. Unfortunately, there are limited existing systems of this type from which we can collect data. We argue that DNS (Domain Name Service) <ref> [Moc87a, Moc87b] </ref> likely has the usage characteristics that our system will encounter. Similar to certificate requests, DNS requests are most often used as a precursor to a session [DOK92]. From an analysis of DNS traffic we can determine when, how often, and to whom connections are made. <p> It is worth noting that we do not specify a mechanism for locating the enterprise root node of an external enterprise. There are several existing designs for scalable network directory services, such as DNS <ref> [Moc87a, Moc87b] </ref>. The investigation of these services is beyond the scope of this paper. We illustrate this protocol through an example. We return to our example hierarchy description in Figure 2. Assume all hosts initially have empty caches, save the permanent entries.
Reference: [Moc87b] <author> P. Mockapetris. </author> <title> Domain Names Implementation and Specification. </title> <type> RFC 1035, </type> <institution> Internet Network Working Group, </institution> <month> November </month> <year> 1987. </year>
Reference-contexts: Primarily, we seek to find the best choices for caching policies and certificate hold times. Unfortunately, there are limited existing systems of this type from which we can collect data. We argue that DNS (Domain Name Service) <ref> [Moc87a, Moc87b] </ref> likely has the usage characteristics that our system will encounter. Similar to certificate requests, DNS requests are most often used as a precursor to a session [DOK92]. From an analysis of DNS traffic we can determine when, how often, and to whom connections are made. <p> It is worth noting that we do not specify a mechanism for locating the enterprise root node of an external enterprise. There are several existing designs for scalable network directory services, such as DNS <ref> [Moc87a, Moc87b] </ref>. The investigation of these services is beyond the scope of this paper. We illustrate this protocol through an example. We return to our example hierarchy description in Figure 2. Assume all hosts initially have empty caches, save the permanent entries.
Reference: [NS78] <author> R.M. Needham and M.D. Schroeder. </author> <title> Using Encryption for Authentication in Large Networks of Computers. </title> <journal> Communications of the ACM, </journal> <volume> 21(12):993999, </volume> <month> December </month> <year> 1978. </year>
Reference-contexts: In this way, the attacker could induce a user into using a revoked key. We stipulate that all requests are retrieved using a protocol that ensures freshness, but cite no specific method. There are several approaches for achieving freshness described in <ref> [NS78] </ref> and [Sch96]. Our approach to certificate revocation that relies on certificate hold time offers several advantages over the use of CRLs. First, the control over the window of vulnerability 6 is left to the user.
Reference: [NT94] <author> B. C. Neuman and T. Ts'o. </author> <title> Kerberos: An authentication service for computer networks. </title> <journal> IEEE Communications, </journal> <pages> pages 3338, </pages> <month> Septem-ber </month> <year> 1994. </year>
Reference-contexts: Certificate hold times longer than 5 minutes do little to improve this performance, consistent with the enterprise root cache performance as a function of certificate hold times presented in Figure 9. 4 Related Work The trusted third party based Kerberos system <ref> [NT94, SNS88] </ref> is a symmetric (private key) system used to provide authentication in a network environment. Before accessing network services, a user provides a password known only to the user and the Kerberos system.
Reference: [PF95] <author> V. Paxson and S. Floyd. </author> <title> Wide-Area Traffic: The Failure of Poisson Modeling. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 3(3):226244, </volume> <month> June </month> <year> 1995. </year>
Reference-contexts: The overall peak rate is seen during the normal 8am to 5pm periods, while the remaining periods see less traffic. We found DNS request arrival rates to be Poisson distributed. Since DNS requests usually precede TCP session arrivals, this observation is in agreement with the finding reported in <ref> [PF95] </ref> that TCP session arrivals are Poisson. In Figure 4, we show the number of request per minute, as seen over the entire anon.edu trace. Enterprise local request arrivals vary between .5 and 4 of the average, measured over one minute periods.
Reference: [Rec93] <author> Recommendation X.509. </author> <title> The Directory: Authentication framework. Information technology Open Systems Interconnection, </title> <month> November </month> <year> 1993. </year>
Reference-contexts: A certificate contains the public key of some entity and a series of other fields that indicate the identity, contact information, expiration time, and other features of the certificate. The X.509 <ref> [Rec93] </ref> specification describes a popular format for public key certificates. In this paper, we assume all certificates contain a public key generated using the RSA [RSA92, RSA78] cryptographic algorithm. We do not limit the type of entity that can own a certificate. <p> These requirements define the administrative practices and hardware environment in which the authority operates. The signers for the certificates are defined by their position in the tree, whose path within the tree is required to be unique. The X.509 <ref> [Rec93] </ref> specification describes both the format of public key certificates and Certificate Revocation Lists (CRL). The certificate revocation scheme used in X.509 describes the periodic publication of CRLs. <p> End users bound the time in which they are vulnerable to compromised certificates by setting the hold time for received certificates. Our architecture can accommodate much shorter bounds on the window of vulnerability than systems described in the X.509 specification <ref> [Rec93] </ref>, which use certificate revocation lists to advertise explicitly that keys have been revoked. We evaluate the scalability and performance of our proposed key distribution hierarchy by using traces of Domain Name Service traffic. We argue that characteristics of DNS traffic mirror those of future certificate hierarchies.
Reference: [RSA78] <author> R.L. Rivest, A. Shamir, and L.M. Adleman. </author> <title> A Method for Obtaining Digital Signatures and Public Key Cryptosystems. </title> <journal> Communications of the ACM, </journal> <volume> 21(2):120126, </volume> <month> February </month> <year> 1978. </year>
Reference-contexts: The X.509 [Rec93] specification describes a popular format for public key certificates. In this paper, we assume all certificates contain a public key generated using the RSA <ref> [RSA92, RSA78] </ref> cryptographic algorithm. We do not limit the type of entity that can own a certificate. End-users, applications and hosts are examples of potential certificate owners. Throughout this paper and without loss of generality, we assume that certificates are owned by hosts.
Reference: [RSA92] <author> RSA Laboratories. RSAREF(TM): </author> <title> A Cryptographic Toolkit for Privacy-Enhanced Mail. </title> <institution> RSA Laboratories, </institution> <address> Redwood City, CA, </address> <year> 1992. </year>
Reference-contexts: The X.509 [Rec93] specification describes a popular format for public key certificates. In this paper, we assume all certificates contain a public key generated using the RSA <ref> [RSA92, RSA78] </ref> cryptographic algorithm. We do not limit the type of entity that can own a certificate. End-users, applications and hosts are examples of potential certificate owners. Throughout this paper and without loss of generality, we assume that certificates are owned by hosts.
Reference: [Sch96] <author> Bruce Schneier. </author> <title> Applied Cryptography. </title> <publisher> John Wiley & Sons, Inc., </publisher> <address> New York, Chichester, Brisbane, Toronto, Singapore, </address> <note> second edition, </note> <year> 1996. </year>
Reference-contexts: In this way, the attacker could induce a user into using a revoked key. We stipulate that all requests are retrieved using a protocol that ensures freshness, but cite no specific method. There are several approaches for achieving freshness described in [NS78] and <ref> [Sch96] </ref>. Our approach to certificate revocation that relies on certificate hold time offers several advantages over the use of CRLs. First, the control over the window of vulnerability 6 is left to the user.
Reference: [SNS88] <author> J. G. Steiner, B. C. Neuman, and J. J. Schiller. </author> <title> Kerberos: An authentication service for open network systems. </title> <booktitle> In Proceedings of the Usenix Conference, </booktitle> <pages> pages 191202, </pages> <year> 1988. </year>
Reference-contexts: Certificate hold times longer than 5 minutes do little to improve this performance, consistent with the enterprise root cache performance as a function of certificate hold times presented in Figure 9. 4 Related Work The trusted third party based Kerberos system <ref> [NT94, SNS88] </ref> is a symmetric (private key) system used to provide authentication in a network environment. Before accessing network services, a user provides a password known only to the user and the Kerberos system.
Reference: [Zim94] <author> P. Zimmermann. </author> <title> PGP user's guide. </title> <institution> Distributed by the Massachusetts Institute of Technology, </institution> <month> May </month> <year> 1994. </year> <month> 12 </month>
Reference-contexts: The effect of relaxing this requirement would be the introduction of additional intermediate keyservers into the authentication process, which may lower confidence in the process. In the degenerate case, the retrieval process would become similar to authentication in the PGP <ref> [Zim94] </ref> system (see Section 2.3). 3 rect certificates. However, this trust need not be absolute. Later, during authentication, multiple keyservers may be consulted. Keyservers are intended to be administered independently by regional, national, or global organizations. <p> Kerberos is an example of a trusted third party system, where the Ker-beros services act as a third party in which both end-points trust. The public key certificate based Pretty Good Privacy <ref> [Zim94] </ref> (PGP) system defines a key signing scheme based on webs of trust. In PGP, public key certificates are distributed insecurely. Certificates are digitally signed serially resulting in an ordered list of signatures attached to the original certificate.
References-found: 20

