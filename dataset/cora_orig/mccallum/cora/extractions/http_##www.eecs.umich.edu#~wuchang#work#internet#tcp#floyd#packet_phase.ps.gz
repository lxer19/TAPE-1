URL: http://www.eecs.umich.edu/~wuchang/work/internet/tcp/floyd/packet_phase.ps.gz
Refering-URL: http://www.eecs.umich.edu/~wuchang/work/internet/
Root-URL: http://www.cs.umich.edu
Email: floyd@ee.lbl.gov, van@ee.lbl.gov  
Title: On Traffic Phase Effects in Packet-Switched Gateways (particularly poorly behaved) algorithm in almost universal use:
Author: Sally Floyd and Van Jacobson 
Note: 1991. This work was supported by the Director, Office of Energy Research, Scientific Computing Staff, of the U.S. Department of Energy under Contract No. DE-AC03-76SF00098.  Tail" and examine its (mis-)behavior in some detail.  
Address: 1 Cyclotron Road Berkeley, CA 94720  
Affiliation: Lawrence Berkeley Laboratory  
Abstract: SUMMARY Much of the traffic in existing packet networks is highly periodic, either because of periodic sources (e.g., real time speech or video, rate control) or because window flow control protocols have a periodic cycle equal to the connection roundtrip time (e.g., a network-bandwidth limited TCP bulk data transfer). Control theory suggests that this periodicity can resonate (i.e., have a strong, non-linear interaction) with deterministic control algorithms in network gateways. 1 In this paper we define the notion of traffic phase in a packet-switched network and describe how phase differences between competing traffic streams can be the dominant factor in relative throughput. Drop Tail gateways in a TCP/IP network with strongly periodic traffic can result in systematic discrimination against some connections. We demonstrate this fl An earlier version of this paper appeared in Computer Communication Review, V.21 N.2, April it deterministically drops a newly arriving packet. In this paper, we refer to this algorithm as "Drop 
Abstract-found: 1
Intro-found: 1
Reference: <author> Bacon, D,. Dupuy, A., Schwartz, J., and Yemimi, Y., </author> <title> "Nest: a Network Simulation and Prototyping Tool", </title> <booktitle> Proceedings of Winter 1988 Usenix Conference, </booktitle> <year> 1988, </year> <pages> pp. 17-78. </pages>
Reference-contexts: is also absent in simulations with Random Drop instead of Drop Tail gateways. 3 4 SINK bandwidth 8000 kbps bandwidth 800 kbps GATEWAY FTP SOURCEFTP SOURCE d = 5 ms d 1,3 2,3 Our simulator is a version of the REAL simulator (Keshav, 1988) built on Columbia's Nest simulation package <ref> (Bacon et al., 1988) </ref>, with extensive modifications and bug fixes made by Steven McCanne at LBL. The gateways use FIFO queueing, and this section's simulations use Drop Tail on queue overflow.
Reference: <author> Chiu, D.-M., and Jain, R., </author> <title> "Analysis of the Increase and Decrease Algorithms for Congestion Avoidance in Computer Networks", Computer Networks and ISDN Systems, </title> <editor> V. </editor> <volume> 17, </volume> <pages> pp. 1-14, </pages> <year> 1989. </year>
Reference-contexts: Node 1 and node 2 each receive roughly half of the total throughput, regardless of roundtrip time. This result is analyzed in more detail elsewhere (Floyd, 1991). These simulation results are in accord with previous analytical results <ref> (Chiu and Jain, 1989) </ref>. Chiu and Jain consider linear algorithms for increasing and decreasing the load, where the load could be considered either as a rate or as a window. They show that a purely additive increase in the load gives the quickest convergence to fairness.
Reference: <author> Demers, A., Keshav, S., and Shenker, S., </author> <title> "Analysis and Simulation of a Fair Queueing Algorithm", Internetworking: </title> <journal> Research and Experience, </journal> <volume> Vol. 1, </volume> <year> 1990, </year> <pages> pp. 3-26. </pages>
Reference-contexts: Random Drop gateways are not the only possible gateway mechanism for cor-recting the bias caused by traffic phase effects. This pattern of discrimination could be controlled with Fair Queueing gateways <ref> (Demers et al., 1990) </ref>, for example, where the gateway maintains separate queues for each connection. <p> This behavior is affected by small changes in the network parameters, and this behavior can also change drastically from one simulation to the next, for a fixed set of parameters. The simulation showing two telnet connections shut out by six FTP connections <ref> (Demers et al., 1990) </ref>, for example, should be interpreted with this sensitivity to the exact network parameters in mind. The throughput for the telnet node is consistently high in all of the simulations with Random Drop gateways. <p> Demers et al. briefly compare Fair Queueing gateways with Random Drop gateways <ref> (Demers et al., 1990) </ref>. They report that Random Drop gateways "greatly alleviate" the problem of segregation with Drop Tail gateways, but that Random Drop gateways do not provide fair bandwidth allocation, do not control ill-behaved sources, and do not provide reduced delay to low-bandwidth conversations.
Reference: <author> Floyd, S., and Jacobson, V., </author> <title> Traffic Phase Effects in Packet-Switched Gateways, </title> <journal> Computer Communications Review, V.21 N.2, </journal> <month> April </month> <year> 1991, </year> <pages> pp. 26-42. </pages>
Reference-contexts: These simulations use Fast Recovery TCP, Selective Acknowledgement sinks, and Random Early Detection gateways that do not discriminate against bursty traffic. Node 1 and node 2 each receive roughly half of the total throughput, regardless of roundtrip time. This result is analyzed in more detail elsewhere <ref> (Floyd, 1991) </ref>. These simulation results are in accord with previous analytical results (Chiu and Jain, 1989). Chiu and Jain consider linear algorithms for increasing and decreasing the load, where the load could be considered either as a rate or as a window. <p> With a window increase of c fl r i packets each roundtrip time, for example, each connection increases its window by c packets in one second, and increases its throughput by c=r i pkts/sec each second. Fairness goals for connections with multiple congested gateways are discussed further elsewhere <ref> (Floyd, 1991) </ref>. There are many open questions concerning alternatives to the TCP window modification algorithms. <p> This includes a bias against connections with longer roundtrip times, a bias against bursty traffic, a bias against traffic with multiple gateways, and an inability to control misbehaving users. We have discussed several of these biases either in this paper or in another paper <ref> (Floyd, 1991) </ref>. We are aware of no significant disadvantages to Random Drop gateways in comparison to Drop Tail gateways. This is in contrast to some earlier reports in the literature (Mankin and Ramakrishnan, 1991). <p> We suggest in Section 3.3 that the bias against connections with longer roundtrip times and large windows results from the TCP window increase algorithm. We have investigated the implications of the bias against traffic with multiple congested gateways <ref> (Floyd, 1991) </ref>. Additional research is necessary to explore possible modifications of the Random Early Detection gateway to identify misbehaving users. We believe that Random Early Detection gateways in general are a promising area for further research. There are still many open questions.
Reference: <author> Floyd, S., </author> <title> Connections with Multiple Congested Gateways in Packet-Switched Networks Part 1: One-way Traffic, </title> <journal> Computer Communication Review, V.21 N.5, </journal> <month> October </month> <year> 1991, </year> <pages> pp. 30-47. </pages>
Reference-contexts: These simulations use Fast Recovery TCP, Selective Acknowledgement sinks, and Random Early Detection gateways that do not discriminate against bursty traffic. Node 1 and node 2 each receive roughly half of the total throughput, regardless of roundtrip time. This result is analyzed in more detail elsewhere <ref> (Floyd, 1991) </ref>. These simulation results are in accord with previous analytical results (Chiu and Jain, 1989). Chiu and Jain consider linear algorithms for increasing and decreasing the load, where the load could be considered either as a rate or as a window. <p> With a window increase of c fl r i packets each roundtrip time, for example, each connection increases its window by c packets in one second, and increases its throughput by c=r i pkts/sec each second. Fairness goals for connections with multiple congested gateways are discussed further elsewhere <ref> (Floyd, 1991) </ref>. There are many open questions concerning alternatives to the TCP window modification algorithms. <p> This includes a bias against connections with longer roundtrip times, a bias against bursty traffic, a bias against traffic with multiple gateways, and an inability to control misbehaving users. We have discussed several of these biases either in this paper or in another paper <ref> (Floyd, 1991) </ref>. We are aware of no significant disadvantages to Random Drop gateways in comparison to Drop Tail gateways. This is in contrast to some earlier reports in the literature (Mankin and Ramakrishnan, 1991). <p> We suggest in Section 3.3 that the bias against connections with longer roundtrip times and large windows results from the TCP window increase algorithm. We have investigated the implications of the bias against traffic with multiple congested gateways <ref> (Floyd, 1991) </ref>. Additional research is necessary to explore possible modifications of the Random Early Detection gateway to identify misbehaving users. We believe that Random Early Detection gateways in general are a promising area for further research. There are still many open questions.
Reference: <author> Hashem, E., </author> <title> "Analysis of random drop for gateway congestion control", </title> <type> Report LCS TR-465, </type> <institution> Laboratory for Computer Science, MIT, </institution> <address> Cambridge, MA, </address> <year> 1989. </year>
Reference-contexts: The bias against connections with longer roundtrip times can be eliminated by a modified TCP window-increase algorithm where each connection increases its throughput rate (in pkts/sec) by a constant amount each second. 3.1 Previous research on Random Drop gateways The reported benefits of Random Drop gateways over Drop Tail gateways <ref> (Hashem, 1989) </ref> include fairness to late-starting connections and slightly improved throughput for connections with longer roundtrip times. <p> Nevertheless, in both cases, the local connection receives higher throughput than the long-distance connection. The reported shortcomings of the Random Drop algorithm <ref> (Hashem, 1989) </ref> include the preferential treatment reported above for connections with shorter roundtrip times, a higher throughput for connections with larger packet sizes, and a failure to limit the throughput for connections with aggressive TCP implementations. These shortcomings are shared by networks with Drop Tail gateways. <p> These shortcomings are shared by networks with Drop Tail gateways. Early Random Drop gateways have been investigated as a mechanism for congestion avoidance as well as for congestion control <ref> (Hashem, 1989) </ref>. In that implementation of Early Random Drop gateways, the gateway drops each packet with a fixed probability when the queue length exceeds a certain level. <p> Hashem recommends additional work on Early Random Drop gateways. The conclusions on Random Drop gateways are that "In general, ... Random Drop has not performed much better than the earlier No Gateway Policy (Drop Tail) approach. It is still vulnerable to the performance biases of TCP/IP networks <ref> (Hashem, 1989, p.103) </ref>." We examine these performance biases in more detail in the next two sections. Zhang uses simulations to evaluate Random Drop gateways (Zhang 1989).
Reference: <author> Jacobson, V., </author> <title> Congestion Avoidance and Control, </title> <booktitle> Proceedings of SIGCOMM '88, </booktitle> <month> August </month> <year> 1988, </year> <pages> pp. 314-329. </pages>
Reference-contexts: When a deterministic gateway congestion management mechanism is driven by backlog, phase effects can cause a significant bias. In this paper, we concentrate on traffic phase effects in networks with Drop Tail gateways and TCP congestion management, where each source executes the 4.3BSD TCP congestion control algorithm <ref> (Jacobson, 1988) </ref>. Section 2.3 demonstrates phase effects in an ISO-IP/TP4 network using DECbit congestion management (Ramakrishnan and Jain, 1990). Another type of periodic traffic, rate controlled or real-time sources, exhibits phase effects similar to those described in this paper. <p> A sink immediately sends an ACK packet when it receives a data packet. Source and sink nodes implement a congestion control algorithm similar to that in 4.3-tahoe BSD TCP <ref> (Jacobson, 1988) </ref>. 3 Briefly, there are two phases to the window-adjustment algorithm. A threshold is set initially to half the receiver's advertised window. The connection begins in slow-start phase, and the current window is doubled each roundtrip time until the window reaches the threshold.
Reference: <author> Jacobson, V., </author> <title> "Berkeley TCP Evolution from 4.3-Tahoe to 4.3-Reno", </title> <institution> Proceedings of the British Columbia Internet Engineering Task Force, </institution> <month> July </month> <year> 1990. </year>
Reference-contexts: Recovery algorithm in (solid = node 1, dashed = node 2) round trip time ratio Throughput (%) 2 4 6 8 20 60 100 (solid, '+' = node 1, dashed, 'x' = node 2) round trip time ratio Throughput (%) 2 4 6 8 20 60 100 4.3-reno BSD TCP <ref> (Jacobson, 1990) </ref>, designed for improved performance over long high-speed links. With the Fast Recovery algorithm, when a packet is dropped the current window is effectively cut in half rather than reduced to one. The simulations in Figure 34 also use Selective Acknowledgement sinks.
Reference: <author> Keshav, S., </author> <title> "REAL: a Network Simulator", </title> <type> Report 88/472, </type> <institution> Computer Science Department, University of California at Berkeley, Berkeley, California, </institution> <year> 1988. </year> <title> LaTouche, Guy, "A Study of Deterministic Cycles in Packet Queues Subject to Periodic Traffic", </title> <type> Bellcore Technical Memorandum, </type> <year> 1989. </year>
Reference-contexts: This preferential behavior is also absent in simulations with Random Drop instead of Drop Tail gateways. 3 4 SINK bandwidth 8000 kbps bandwidth 800 kbps GATEWAY FTP SOURCEFTP SOURCE d = 5 ms d 1,3 2,3 Our simulator is a version of the REAL simulator <ref> (Keshav, 1988) </ref> built on Columbia's Nest simulation package (Bacon et al., 1988), with extensive modifications and bug fixes made by Steven McCanne at LBL. The gateways use FIFO queueing, and this section's simulations use Drop Tail on queue overflow. <p> round trip time ratio Node 1 throughput (%) 1.0 1.1 1.2 1.3 1.4 1.5 20 60 100 roundtrip time is varied by varying d 2;3 . (The roundtrip time for node 1 packets is still 221.44 ms.) These simulations use the implementation of the DECbit scheme in the REAL simulator <ref> (Keshav, 1988) </ref>. Each simulation was run for 200 seconds. by a dot showing node 1's throughput for that interval. The line shows node 1's average throughput.
Reference: <author> LaTouche, Guy, </author> <title> "Sample Path Analysis of Packet Queues Subject to Periodic Traffic", Computer Networks and ISDN Systems, </title> <editor> V. </editor> <volume> 20, </volume> <pages> pp. 409-413, </pages> <year> 1990. </year>
Reference-contexts: Because packets arriving at a full buffer are dropped, this results in successive packet losses for a single voice spurt. In fact, with this model any position-based strategy of dropping packets results in successive packet losses for one voice spurt (LaTouche, 1989) <ref> (LaTouche, 1990) </ref>. Even though the beginning and endings of talk spurts break up the periodic pattern of packet drops, the periodic pattern is quickly reestablished. However, a "random drop" strategy works well in distributing the packet losses across the active conversations (Ramaswami and Willinger, 1990).
Reference: <author> Mankin, A., </author> <title> Random Drop Congestion Control, </title> <booktitle> Proceedings of SIGCOMM 90, </booktitle> <month> Sept. </month> <year> 1990, </year> <month> pp.1-7. </month>
Reference-contexts: The Random Drop and the Drop Tail gateway algorithms are compared in a measurement study of a network with local and long distance traffic, with several congested gateways <ref> (Mankin, 1990) </ref>. Three topologies are explored, with one, two, and three congested gateways, respectively. For each topology, there was one longer connection, and many shorter connections, each with a maximum window of eight packets. <p> As Section 3.2 explains, these results should be interpreted keeping traffic phase effects in mind. Mankin reports that "Random Drop Congestion Recovery improves the fairness of homogeneous connections that have the same bottleneck, but beyond that, it has limited value <ref> (Mankin, 1990, p.6) </ref>." The Gateway Congestion Control Survey by the IETF Performance and Congestion Control Working Group (Mankin and Ramakrishnan, 1991) discusses the research results on Random Drop gateways. <p> Thus, the results in this section are not inconsistent with the earlier results which show that for a particular network with one congested gateway, the throughput for the longer connection was higher with Drop Tail gateways than with Random Drop gateways <ref> (Mankin, 1990) </ref>. In summary, for some set of parameters Drop Tail gateways give better throughput for node 5, and for other sets of parameters Random Drop gateways give better throughput for node 5.
Reference: <author> Mankin, A. and Ramakrishnan, K. K., </author> <title> editors for the IETF Performance and Congestion Control Working Group, "Gateway congestion control survey", </title> <type> RFC 1254, </type> <month> August </month> <year> 1991. </year>
Reference-contexts: Mankin reports that "Random Drop Congestion Recovery improves the fairness of homogeneous connections that have the same bottleneck, but beyond that, it has limited value (Mankin, 1990, p.6)." The Gateway Congestion Control Survey by the IETF Performance and Congestion Control Working Group <ref> (Mankin and Ramakrishnan, 1991) </ref> discusses the research results on Random Drop gateways. <p> The suggestion is that "Random Drop Congestion Recovery should be avoided unless it is used within a scheme that groups traffic more or less by roundtrip time <ref> (Mankin and Ramakrishnan, 1991, p.8) </ref>." In this paper, we suggest that, in comparison to Drop Tail gateways, Random Drop gateways offer significant advantages and no significant disadvantages. Demers et al. briefly compare Fair Queueing gateways with Random Drop gateways (Demers et al., 1990). <p> We have discussed several of these biases either in this paper or in another paper (Floyd, 1991). We are aware of no significant disadvantages to Random Drop gateways in comparison to Drop Tail gateways. This is in contrast to some earlier reports in the literature <ref> (Mankin and Ramakrishnan, 1991) </ref>. We show in Section 3.2 that the bias against connections with bursty traffic is slightly different for Random Drop and for Drop Tail gateways. With Drop Tail gateways, the performance is sensitive to small changes in traffic phase or in the level of congestion.
Reference: <author> Ramakrishnan, K.K., and Jain, R., </author> <title> "A Binary Feedback Scheme for Congestion Avoidance in Computer Networks", </title> <journal> ACM Transactions on Computer Systems, V.8 N.2, </journal> <month> May </month> <year> 1990, </year> <pages> pp. 158-181. </pages>
Reference-contexts: In this paper, we concentrate on traffic phase effects in networks with Drop Tail gateways and TCP congestion management, where each source executes the 4.3BSD TCP congestion control algorithm (Jacobson, 1988). Section 2.3 demonstrates phase effects in an ISO-IP/TP4 network using DECbit congestion management <ref> (Ramakrishnan and Jain, 1990) </ref>. Another type of periodic traffic, rate controlled or real-time sources, exhibits phase effects similar to those described in this paper. These effects have been described in the digital teletraffic literature and, more recently, in a general packet-switching context. <p> Traffic phase effects can still be observed in simulations with a "delayed-ACK" sink where the delay is not an integer multiple of b. 2.3 Phase effects with DECbit congestion avoidance In this section we demonstrate phase effects in an ISO TP4 network using DECbit congestion avoidance <ref> (Ramakrishnan and Jain, 1990) </ref>. In the DECbit congestion avoidance scheme, the gateway uses a congestion-indication bit in packet headers to provide feedback about congestion in the network.
Reference: <author> Ramaswami, W., and Willinger, W., </author> <title> "Efficient Traffic Performance Strategies for Packet Multiplexors", Computer Networks and ISDN Systems, </title> <editor> V. </editor> <volume> 20, </volume> <pages> pp. 401-412, </pages> <year> 1990. </year>
Reference-contexts: These effects have been described in the digital teletraffic literature and, more recently, in a general packet-switching context. One example concerns the periodicity of packetized voice traffic where each voice source alternates between talk spurts and silences <ref> (Ramaswami and Willinger, 1990) </ref>. A small random number of packets (mean 22) is transmitted for each talk spurt and these packets arrive at the multiplexer separated by a fixed time interval. The packet stream from many conversations is multiplexed on a slotted channel with a finite buffer. <p> Even though the beginning and endings of talk spurts break up the periodic pattern of packet drops, the periodic pattern is quickly reestablished. However, a "random drop" strategy works well in distributing the packet losses across the active conversations <ref> (Ramaswami and Willinger, 1990) </ref>. The first half of the paper contains simulations showing a bias due to traffic phase in networks with Drop Tail gateways, and analyzes this bias.
Reference: <author> Shenker, S., Zhang, L., and Clark, D., </author> <title> "Some Observations on the Dynamics of a Congestion Control Algorithm", </title> <journal> Computer Communication Review, V.20 N.5, </journal> <month> October </month> <year> 1990, </year> <pages> pp. 30-39. </pages>
Reference-contexts: The drop period is similar to the congestion epoch defined elsewhere <ref> (Shenker et al., 1990) </ref>. If the maximum windows have not all been reached, then after the queue first reaches size max, it takes at most one roundtrip time until some node increases its window and some packet is dropped. <p> In simulations with two connections with the same roundtrip time and with maximum windows less than the pipe size, the gateway always transmits a window of node 1 packets followed by a window of node 2 packets <ref> (Shenker et al., 1990) </ref>. In this case there is no mechanism to break up clumps of packets, and the contents of the gateway queue at overflow are seldom representative of the average contents.
Reference: <author> Wilder, R., Ramakrishnan, K.K., and Mankin, A., </author> <title> "Dynamics of Congestion Control and Avoidance in Two-Way Traffic in an OSI Testbed", </title> <journal> Computer Communication Review, V.21 N.2, </journal> <month> April </month> <year> 1991. </year> <month> pp.43-48. </month>
Reference-contexts: The phase effects in this section are similar to the unfairness observed in a testbed running the DECbit congestion scheme with two competing connections <ref> (Wilder et al., 1991) </ref>. The behavior with the DECbit congestion scheme in Figure 11 differs from the behavior with TCP and Drop Tail gateways in Figure 4 in part because the two schemes use different methods to detect congestion in the network.
Reference: <author> Zhang, L., </author> <title> "A New Architecture for Packet Switching Network Protocols", </title> <institution> MIT LCS TR-455, Laboratory for Computer Science, Massachusetts Institute of Technology, </institution> <month> August </month> <year> 1989. </year>
Reference-contexts: It is still vulnerable to the performance biases of TCP/IP networks (Hashem, 1989, p.103)." We examine these performance biases in more detail in the next two sections. Zhang uses simulations to evaluate Random Drop gateways <ref> (Zhang 1989) </ref>. Zhang concludes that Random Drop does not correct Drop Tail's problem of uneven throughput given uneven path lengths, and that neither Random Drop nor a version of Early Random Drop is successful at controlling misbehaving users. <p> Zhang remarks that in the simulations, the bias against traffic with longer roundtrip times results because "after a period of congestion, connections with a shorter path can reopen the control window more quickly than those with a longer path <ref> (Zhang 1989, p.99) </ref>." We examine this problem in Section 3.3. The Random Drop and the Drop Tail gateway algorithms are compared in a measurement study of a network with local and long distance traffic, with several congested gateways (Mankin, 1990).
References-found: 17

