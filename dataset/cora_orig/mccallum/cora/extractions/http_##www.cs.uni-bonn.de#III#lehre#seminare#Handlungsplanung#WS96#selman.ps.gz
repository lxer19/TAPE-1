URL: http://www.cs.uni-bonn.de/III/lehre/seminare/Handlungsplanung/WS96/selman.ps.gz
Refering-URL: http://www.cs.uni-bonn.de/III/lehre/seminare/Handlungsplanung/WS96/
Root-URL: http://cs.uni-bonn.de
Email: selman@research.att.com  
Title: Near-Optimal Plans, Tractability, and Reactivity  
Author: Bart Selman 
Address: Murray Hill, NJ 07974  
Affiliation: AT&T Bell Laboratories  
Abstract: Many planning problems have recently been shown to be inherently intractable. For example, finding the shortest plan in the blocks-world domain is NP-hard, and so is planning in even some of the most limited STRIPS-style planning formalisms. We explore the question as to what extent these negative results can be attributed to the insistence on finding plans of minimal length. Using recent results form the theory of combinatorial optimization, we show that for domain-independent planning, one cannot efficiently generate any reasonable approximation of the optimal plan. Our result holds for a very restricted form of STRIPS. So, the negative complexity results for domain-independent planning are not just a consequence of searching for the optimal plans, because even finding reasonable approximations is hard. Next we consider domain-dependent planning. For blocks-world planning one can generate in polynomial time good approximations of the minimal plan | within a factor of two of optimal. We show, however, that one cannot efficiently generate arbitrarily good approximations. This result places a limit on the usefulness of certain anytime approximation algorithms for generating better and better plans in the basic blocks-world domain. Finally, we consider further several examples of tractable domain-dependent planning. We show how they can be solved using reactive style plans. Our analysis reveals a surprisingly close connection between tractable domain-dependent planning (optimal and near-optimal) and reactive style planning. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Agre, P. and Chapman, D. </author> <year> (1987). </year> <title> Pengi: An implementation of a theory of activity. </title> <booktitle> Proc. AAAI87, Seattle, </booktitle> <pages> 268-272. </pages>
Reference-contexts: Our aim in the final part of this paper is to show that in a domain-dependent setting there are still many interesting tractable planning problems. We also show that there is a close connection between such tractable domain-dependent planning and reactive planning <ref> (Agre and Chapman 1987) </ref>. For example, the algorithm that can generate a factor of two approximation of the minimal blocks-world plan can be cast in terms of a set of reactive planning rules.
Reference: <author> Agre, P. and Horswill, I. </author> <year> (1992). </year> <title> Cultural support for improvisation. </title> <booktitle> Proc. AAAI92, </booktitle> <address> San Jose, </address> <pages> 363-368. </pages>
Reference: <author> Arora, S., Lund, C., Motwani, R., Sudan, M., and Szegedy, M. </author> <year> (1992). </year> <title> Proof verification and intractability of approximation problems. </title> <booktitle> Proc. STOC92. </booktitle>
Reference: <author> Backstrom, C. </author> <year> (1992). </year> <title> Computational complexity of reasoning about plans. </title> <type> Ph.D. thesis, </type> <institution> Linkoping University, Linkoping, Sweden. </institution>
Reference: <author> Backstrom, C. and Klein, I. </author> <year> (1991). </year> <title> Parallel nonbinary planning in polynomial time. </title> <booktitle> Proc. </booktitle> <address> IJ-CAI91, Sidney, Australia, </address> <pages> 268-273. </pages>
Reference: <author> Backstrom, C. and Nebel, B. </author> <year> (1993). </year> <title> Complexity re sults for SAS + planning. </title> <booktitle> Proc. IJCAI-93, Cham-bery, France, </booktitle> <pages> 1430-1435. </pages>
Reference: <author> Boppana, R.B. and Sipser, M. </author> <year> (1990). </year> <title> The complexity of finite functions. </title> <booktitle> In Handbook of Theoretical Computer Science, </booktitle> <volume> Vol. </volume> <editor> A, J. van Leeuwen (Ed.), </editor> <publisher> The MIT Press/Elsevier. </publisher>
Reference-contexts: can still formally show that there does exist a blocks-world planning task for which there is no compact universal plan that leads us to the goal in a minimal number of steps (unless NP non-uniform P, i.e., the polynomial-time hierarchy collapses to the second level, which is considered very unlikely <ref> (Boppana and Sipser 1990) </ref>). Theorem 5 Unless NP non-uniform P, there exists a blocks-world planning goal for which there is no polynomial size universal plan for generating the minimal sequence of moves leading to the goal. See the appendix for the proof.
Reference: <author> Brooks, R.A. </author> <year> (1990). </year> <title> Elephants don't play chess. In Designing Autonomous Agents: Theory and Practice, </title> <editor> P. Maes (Ed.), </editor> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference: <author> Bylander, </author> <title> T (1991). Complexity results for planning. </title> <booktitle> Proceedings of IJCAI91, Sidney, Australia, </booktitle> <pages> 274-279. </pages>
Reference: <author> Bylander, </author> <title> T (1992). The computational complexity of propositional STRIPS planning. </title> <note> Submitted for publication. </note>
Reference: <author> Chapman, D. </author> <year> (1987). </year> <title> Planning for conjunctive goals. </title> <journal> Artificial Intelligence, </journal> <volume> 32(3), </volume> <pages> 333-377. </pages>
Reference-contexts: Our aim in the final part of this paper is to show that in a domain-dependent setting there are still many interesting tractable planning problems. We also show that there is a close connection between such tractable domain-dependent planning and reactive planning <ref> (Agre and Chapman 1987) </ref>. For example, the algorithm that can generate a factor of two approximation of the minimal blocks-world plan can be cast in terms of a set of reactive planning rules.
Reference: <author> Chapman, D. </author> <year> (1989). </year> <title> Penguins can make cake. </title> <journal> AI Magazine, </journal> <month> Winter </month> <year> 1989, </year> <pages> 45-50. </pages>
Reference: <editor> Chenoweth, </editor> <publisher> S.V. </publisher> <year> (1991). </year> <title> On the NP-hardness of the blocks world. </title> <booktitle> Proceedings AAAI91, </booktitle> <address> Anaheim, CA, </address> <pages> 623-628. </pages>
Reference-contexts: In the basic blocks-world domain, one assumes that each block has a unique name. In a somewhat more general setting, one allows for several different blocks to have the same name ("type" or "color"). Clearly, finding the minimal length plan is also NP-hard in this setting <ref> (Chenoweth 1991) </ref>. <p> Finally, let us now consider the slightly more general setting in which several blocks can have the same name. Finding the optimal plan is again NP-hard <ref> (Chenoweth 1991) </ref>, but we have the following surprising result. Theorem 4 For blocks-world planning problems where several blocks can have the same name, there does not exist a constant c such that one can generate in polynomial time plans that are within a factor c of optimal (provided P6=NP).
Reference: <author> Erol, K., Nau, D.S., and Subrahmanian, </author> <title> V.S. (1991). On the complexity of domain-independent planning. </title> <booktitle> Proceedings AAAI92, </booktitle> <pages> 381-386. </pages>
Reference: <author> Fikes, R.E. and Nilsson, N.J. </author> <year> (1971). </year> <title> STRIPS: A new approach to the application of theorem proving to problem solving. </title> <journal> Artificial Intelligence, </journal> <volume> 2(3/4), </volume> <pages> 189-208. </pages>
Reference-contexts: To appear in Proc. of the Fourth International Conference on Knowledge Representation and Reasoning (KR-94), Bonn, Germany, 1994. We first examine the complexity of domain-independent planning. Bylander (1991) studied a series of syntactic restrictions on the planning operators in STRIPS <ref> (Fikes and Nilsson 1971) </ref>. Erol et al. (1992) discuss how one can encode the blocks-world problem using a slight extension of one of Bylander's most restricted classes. <p> In fact, we will see that tractable, classical planning implies the existence of reasonable size universal plans. 2 DOMAIN-INDEPENDENT PLANNING Domain-independent planning formalisms provide the user with a general framework for encoding planning problems. STRIPS is the canonical example of such a formalism <ref> (Fikes and Nilsson 1971) </ref>. In STRIPS, states are represented as a set of ground atomic facts, and actions by operators that map states into states. A STRIPS planner takes as input an initial state, a goal state, and a set of operators.
Reference: <author> Garey, M.R. and Johnson, D.S. </author> <year> (1979). </year> <title> Computers and Intractability, A Guide to the Theory of NP-Completeness. </title> <address> New York, NY: </address> <publisher> W.H. Freeman, </publisher> <year> 1979. </year>
Reference-contexts: So, although we can get a reasonably good approximation (within a factor of two) efficiently, there will be no way to generate efficiently arbitrarily good approximations. Note that such algorithms do exist for other optimization problems, such as the knapsack problem <ref> (Garey and Johnson 1979) </ref>. In the basic blocks-world domain, one assumes that each block has a unique name. In a somewhat more general setting, one allows for several different blocks to have the same name ("type" or "color").
Reference: <author> Georgeff, M. and Lansky, A. </author> <year> (1987). </year> <title> Reactive reasoning and planning. </title> <booktitle> Proceedings AAAI87, </booktitle> <pages> 677-682. </pages>
Reference: <author> Ginsberg, </author> <title> M.L. (1989). Universal planning: An (al most) universally bad idea. </title> <journal> AI Magazine, </journal> <month> Winter </month> <year> 1989, </year> <pages> 40-44. </pages>
Reference: <author> Gupta and Nau (1991). </author> <title> Complexity results for blocks-world planning. </title> <booktitle> Proceedings AAAI91, </booktitle> <address> Anaheim, CA, </address> <pages> 629-633. </pages>
Reference-contexts: Theorem 2 <ref> (Gupta and Nau 1991) </ref> Given a blocks-world planning problem (I; G), finding a minimal length sequence of moves that leads from I to G is NP-hard. Can we relax the requirement that the plans should be optimal and obtain tractability? The answer is yes.
Reference: <author> Gupta and Nau (1992). </author> <title> On the complexity of blocks-world planning. </title> <journal> Artificial Intelligence, </journal> <volume> 56, </volume> <pages> 139-403. </pages>
Reference: <author> Johnson, D.S. </author> <year> (1992). </year> <title> The NP-Completeness Column: An Ongoing Guide. 23rd column. </title> <editor> J. </editor> <booktitle> of Algorithms. </booktitle>
Reference: <author> Kolata, G. </author> <year> (1992). </year> <title> New short cut found for mathematical proofs, </title> <address> New York Times, </address> <institution> Science Section, </institution> <month> April 7, </month> <year> 1992. </year>
Reference: <author> Lund, C., and Yannakakis, M. </author> <year> (1993). </year> <title> On the hardness of approximating minimization problems. </title> <booktitle> Proc. STOC93, </booktitle> <month> May </month> <year> 1993. </year>
Reference: <author> Nilsson, N.J. </author> <title> (1989) Action networks. </title> <type> Technical Report, </type> <institution> Dept. of Computer Science, Stanford University. </institution>
Reference: <author> Papadimitriou, C.H. and Yannakakis, M. </author> <year> (1991). </year> <title> Optimization, Approximation, and Complexity Classes. </title> <journal> J. of Computer and System Sciences, </journal> <volume> Vol. 43, no. 3, </volume> <pages> 425-440. </pages>
Reference-contexts: these properties is tedious but fairly 5 Note that there are optimization problems, such as the knapsack problem, where for each c &gt; 1 there is a polytime algorithm, which generates a solution within a factor c of optimal. straightforward.) Since MAXIMUM SUBDAG is a MAX SNP [] complete problem <ref> (Yannakakis and Papadimitriou 1991) </ref>, and our reduction is an Lreduction, it follows that blocks-world planning problem is a MAX SNP [] hard problem.
Reference: <author> Pippenger, N. and Fischer, M.J. </author> <year> (1979). </year> <title> Relations among complexity measures, </title> <journal> JACM, </journal> <volume> 26, </volume> <pages> 361-381. </pages>
Reference: <author> Rosenschein, S.J., and Kaebling, </author> <title> L.P. (1986). The synthesis of machines with provable epistemic properties. </title> <booktitle> Proceedings of the 1986 Conference on Theoretical Aspects of Reasoning about Knowledge, </booktitle> <pages> 83-98. </pages>
Reference: <author> Schoppers, M.J. </author> <year> (1987). </year> <title> Universal plans for reactive robots in unpredictable domains. </title> <booktitle> Proceedings IJ-CAI87, Italy, </booktitle> <pages> 1039-1046. </pages>
Reference-contexts: We study this issue by considering the notion of universal plans, which are one way of formalizing some of the main intuitions behind reactive planning <ref> (Schoppers 1987) </ref>. There has been a lively debate on the pros and cons of universal plans (Ginsberg 1989; Chapman 1989; and Schoppers 1989). Ginsberg argues against such plans, by suggesting that they will generally be much too large to be feasible in practice. <p> One impediment to a rigorous analysis is that there does not exist a formal definition of what constitutes reactive planning. We therefore restrict our attention to the well-defined notion of universal plans, which formally captures some of the main intuitions behind reactive planning <ref> (Schoppers 1987) </ref>. Ginsberg (1989) gives the following definition. Definition: A universal plan is an arbitrary function from the set of possible situations S into the set of primitive actions A. <p> Representing the univer-sal plan explicitly in a lookup table generally leads to infeasibly large tables because of the large number of possible states. More efficient representations can be obtained by using decision trees <ref> (Schoppers 1987) </ref> or Boolean circuits (Nilsson 1989; Rosenschein and Kae-bling 1986). To keep our analysis as general as possible, we will assume the latter.
Reference: <author> Schoppers, M.J. </author> <year> (1989). </year> <title> In defense of reaction plans as caches. </title> <journal> AI Magazine, </journal> <month> Winter </month> <year> 1989, </year> <pages> 51-60. </pages>
References-found: 29

