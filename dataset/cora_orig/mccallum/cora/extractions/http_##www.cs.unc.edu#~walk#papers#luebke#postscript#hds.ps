URL: http://www.cs.unc.edu/~walk/papers/luebke/postscript/hds.ps
Refering-URL: http://www.cs.unc.edu/~walk/papers/
Root-URL: http://www.cs.unc.edu
Title: Hierarchical Structures For Dynamic Polygonal Simplification  
Author: TR - David Luebke 
Affiliation: Department of Computer Science University of North Carolina at Chapel Hill Chapel Hill, North Carolina  
Abstract-found: 0
Intro-found: 1
Reference: [Chamberlain 95] <author> Bradford Chamberlain, Tony DeRose, Dani Lischinski, David Salcsin, John Snyder. </author> <title> Fast Rendering of Complex Environments Using a Spatial Hierarchy. </title> <institution> University of Washington Tech Report # UW-CSE-95-05-02. </institution>
Reference: [Clark 76] <author> Clark, James H. </author> <title> Hierarchical Geometric Models for Visible Surface Algorithms, </title> <journal> Communications of the ACM , Vol 19, </journal> <volume> No 10, </volume> <pages> pp 547-554. </pages>
Reference-contexts: As early as 1976 James Clark described the benefits of representing objects within a scene at several resolutions, and flight simulators have long used hand-crafted multi-resolution models of airplanes to guarantee a constant frame rate <ref> [Clark 76, Cosman & Schumacker 81] </ref>. Recent years have seen a flurry of research into generating such multi-resolution representations of objects automatically by simplifying the polygonal geometry of the object.
Reference: [Cosman & Schumacker 81] <author> Cosman, M, and R. Schumacker. </author> <title> System Strategies to Optimize CIG Image Content. </title> <booktitle> Proceedings Image II Conference (Scotsdale, </booktitle> <address> Arizona), </address> <year> 1981. </year>
Reference-contexts: As early as 1976 James Clark described the benefits of representing objects within a scene at several resolutions, and flight simulators have long used hand-crafted multi-resolution models of airplanes to guarantee a constant frame rate <ref> [Clark 76, Cosman & Schumacker 81] </ref>. Recent years have seen a flurry of research into generating such multi-resolution representations of objects automatically by simplifying the polygonal geometry of the object.
Reference: [Kaufman 95] <author> Taosong He, L. Hong, A. Kaufman, A. Varshney, and S. Wang. </author> <title> Voxel-Based Object Simplification. </title> <booktitle> Proceedings Visualization 95 , IEEE Computer Society Press (Atlanta, </booktitle> <address> GA), </address> <year> 1995, </year> <pages> pp. 296-303. </pages>
Reference-contexts: Very few topology-discarding schemes have been proposed to date. Voxel-based object simplification converts the surface into a volumetric representation and low-pass filters the volume dataset, possibly simplifying the topology by discarding small holes in the model. The resulting lower-resolution volume is then reconverted into polygons <ref> [Kaufman 95] </ref>. Rossignac & Borrel apply a uniform grid to the surface and cluster all vertices within each grid cell together, filtering out degenerate polygons. Applying multiple grids provides multiple static snapshots of the object at varying resolutions. 3. Motivation In practice, choosing a polygonal simplification algorithm involves tradeoffs.
Reference: [Maciel 95] <author> Maciel, Paulo, and Shirley, Peter. </author> <title> Visual Navigation of Large Environments Using Textured Clusters, </title> <booktitle> Proceedings 1995 SIGGRAPH Symposium on Interactive 3D Graphics (Monterey, </booktitle> <address> CA), </address> <year> 1995, </year> <pages> pp. 95-102. </pages>
Reference-contexts: Few existing algorithms, and none of those described above, deal elegantly with such models. The approach described and by DeRose et al [Chamberlain et al 95], and elements of the approach described by Shirley and Maciel <ref> [Maciel 95] </ref>, show promise for polygonsoup databases: the first replaces distant geometry with colored cubes and the second with textured cubes. However, neither method actually provides a simplified polygonal description of the geometry. Such a description is often crucial: dynamic lighting of the scene, for instance, absolutely requires underlying geometry.
Reference: [Rossignac 92] <author> Rossignac, Jarek, and Paul Borrel. </author> <title> Multi-Resolution 3D Approximations for Rendering Complex Scenes, pp. 455-465 in Geometric Modeling in Computer Graphics, </title> <publisher> Springer-Verlag, </publisher> <editor> Eds. B. Falcidieno and T.L. Kunii, </editor> <address> Genova, Italy, 6/28/93-7/2/93. </address> <note> Also published as IBM Research Report RC17697 (77951) 2/19/92. </note>
Reference-contexts: Indeed, so numerous and varied are the sources of such models that a perfect all-encompassing simplification algorithm seems unlikely. For example, Turk notes that the re-tiling approach is best suited for smoothly curved organic objects [Turk 92], while Rossignac and Borrel target industrial CAD models <ref> [Rossignac 92] </ref>. Many algorithms are designed to preserve the topology of the input mesh, which limits the amount of simplification they can accomplish. Topology-preserving algorithms also require that their input meshes must possess a well-defined topology to preserve. <p> RepVert : the coordinates of the most important vertex in the node. The importance rating assigned to vertices follows that described in <ref> [Rossignac 92] </ref>. Status : The active status of the node. A node may be labeled either Active, Inactive, or Leaf. Active nodes must be descendants of other active nodes; children of inactive nodes must themselves be inactive.
Reference: [Schroeder et al 92] <author> Schroeder, William, Jonathan Zarge and William Lorenson, </author> <title> Decimation of Triangle Meshes, </title> <booktitle> Computer Graphics , Vol 26 (SIGGRAPH 92). </booktitle>
Reference: [Teller 91] <author> Teller, Seth, and Carlo Sequin. </author> <title> Visibility Preprocessing for Interactive Walkthroughs, </title> <booktitle> Computer Graphics , Vol 25 (SIGGRAPH 91). </booktitle>
Reference-contexts: Features such as gouraud shading and texture mapping fall into this category. Using information about the model to cull away large portions of the model which are occluded from the current viewpoint. The visibility processing approach described by Seth Teller and Carlo Sequin falls into this category <ref> [Teller 91] </ref>. Simplifying the polygonal geometry of small or distant objects to reduce the rendering cost without a significant loss in the visual content of the scene. This is the category which concerns this paper.
Reference: [Turk 92] <author> Turk, Greg. </author> <title> Retiling Polygonal Surfaces, </title> <journal> Computer Graphics, </journal> <volume> Vol 26 (SIGGRAPH 92). </volume>
Reference-contexts: Topology-preserving techniques are more common. In the re-tiling approach described by Turk, a new set of vertices are distributed across the objects surface by mutual repulsion and connected in a manner that matches the connectivity of the initial mesh <ref> [Turk 92] </ref>. Triangle mesh decimation, presented by Schroeder et al, identifies and removes unimportant vertices from the model, then locally 4 retriangulates the resulting holes in the mesh [Schroeder 92]. <p> Indeed, so numerous and varied are the sources of such models that a perfect all-encompassing simplification algorithm seems unlikely. For example, Turk notes that the re-tiling approach is best suited for smoothly curved organic objects <ref> [Turk 92] </ref>, while Rossignac and Borrel target industrial CAD models [Rossignac 92]. Many algorithms are designed to preserve the topology of the input mesh, which limits the amount of simplification they can accomplish. Topology-preserving algorithms also require that their input meshes must possess a well-defined topology to preserve.
Reference: [Varshney 94] <author> Varshney, Amitabh. </author> <title> Hierarchical Geometry Approximations, </title> <type> Ph.D. Thesis, </type> <institution> University of North Carolina Department of Computer Science Tech Report TR-050 </institution>
Reference-contexts: Varshney calculates inner and outer offset surfaces at a userspecified distance from the model, then greedily retriangulates the original mesh with triangles that do not intersect the offset surfaces <ref> [Varshney 94] </ref>. Eck and colleagues partition the surface into Voronoi tiles which capture the shape and topology of the original model. From this they generate a base mesh of triangles, each of which can be recursively subdivided to approximate the initial surface as closely as necessary.
References-found: 10

