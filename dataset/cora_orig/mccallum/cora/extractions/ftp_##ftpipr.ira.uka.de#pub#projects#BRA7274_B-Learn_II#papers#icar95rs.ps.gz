URL: ftp://ftpipr.ira.uka.de/pub/projects/BRA7274_B-Learn_II/papers/icar95rs.ps.gz
Refering-URL: http://wwwipr.ira.uka.de/projects/blearn/blearnpub.html
Root-URL: 
Email: (e-mail: suarez@ic.upc.es).  (e-mail: nuttin@mech.kuleuven.ac.be).  
Title: LEARNING VERSUS ANALYTICAL APPROACH TO CONTACT ESTIMATION IN ASSEMBLY TASKS WITH ROBOTS  
Author: R. Suarezy, L. Basa~nezy, M. Nuttinz, H. Van Brusselz and J. Roselly. 
Keyword: Key Words Robotic Assembly, Fine-motion Planning, Contact Estimation, Learning, Neural Nets.  
Address: (UPC-CSIC), Diagonal 647, 08028 Barcelona, SPAIN  K.U.Leuven-PMA, Celestijnenlaan 300 B, B-3001 Heverlee, BELGIUM  
Affiliation: Instituto de Cibernetica  
Abstract: In order to automatically execute assembly tasks with robots following a fine-motion plan, it is usually necessary to estimate the current contact situation to select the corresponding robot command. This contact estimation is generally based on configuration and force sensory data. Two methods for this purpose are presented here: a) an analytical method which explicitly takes into account all the uncertainty sources that may affect the task, and which computes the sets of configuration and forces compatible with each possible contact situation; and b) an inductive learning approach based on a backpropagation neural net that uses simulated contact-situation examples for the training phase. The methods are illustrated by the simple assembly task of positioning a block into a corner considering three degrees of freedom. The advantages and disadvantages of each approach are also discussed. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Baroglio, A. Giordana, M. Kaiser, M. Nuttin, R. Piola, </author> <title> Learning Controllers for Industrial Robots, </title> <type> Technical Report UTO, </type> <institution> K.U.Leuven, UKA, </institution> <year> 1994. </year>
Reference-contexts: These states can be defined in different ways (although sometimes it is not explicitly done), such as: using fuzzy set theory [14] <ref> [1] </ref>, performing partitions of the configuration space [13] [5], or classifying the possible contact situation between the objects to be assembled [6] [18].
Reference: [2] <author> L. Basa~nez and R. </author> <title> Suarez, Uncertainty Mod-elling in Configuration Space for Robotic Motion Planning, </title> <booktitle> Proc. of the SYROCO'91, Vi-enna, Austria, </booktitle> <pages> pp. 675-680, </pages> <year> 1991. </year>
Reference-contexts: The effect of these sources of geometric uncertainty on the contact configurations has been modeled in <ref> [2] </ref>, and their effect on the possible reaction forces in [17]. Making use of these uncertainty models, a simulator capable of dealing with random deviations of the parameters has been implemented. <p> Off-line computation Configuration Observation Domains Configuration domains are built by merging the different geometric uncertainties in the configuration space <ref> [2] </ref>. First, the uncertainty regions in the physical space where the vertices and edges of the objects can lie are determined. Figure 3a shows these regions for the block and the corner vertices and edges.
Reference: [3] <author> L. Basa~nez, R. Suarez and J. Rosell, </author> <title> Contact Situations from Observed Reaction Forces in Assembly with Uncertainty. </title> <type> Technical Report IC-DT 9412, </type> <year> 1994. </year>
Reference-contexts: The classification procedure (detailed in <ref> [3] </ref>) requires, as in the configuration case, only simple geometric operations in the plane, thus being compatible with on-line time requirements. 3. LEARNING APPROACH 3.1. Methodology This section presents an inductive learning approach to contact estimation.
Reference: [4] <author> R. C. Brost and M. Mason, </author> <title> Graphical Analysis of Planar Rigid-Body Dynamics with Multiple Frictional Contacts, </title> <booktitle> Robotics Research: The Fifth Int. Symp., </booktitle> <year> 1989. </year>
Reference-contexts: Fig. 3. Physical space and configuration and force observation domains for the block-in-the-corner assembly task. Force Observation Domains The algorithm to determine the generalized force realization domains DGr and the classification procedure make use of the dual representation of forces <ref> [4] </ref>. This representation maps a generalized force [f x ; f y ; t ] into a point [ f y t ] representing the force direction and a sign representing the force sense.
Reference: [5] <author> S.J. Buckley, </author> <title> Planning and Teaching Compliant Motion Strategies, MIT Artificial Intelligence Lab., </title> <type> report AI-TR-936 (Ph.D Thesis), </type> <year> 1987. </year>
Reference-contexts: These states can be defined in different ways (although sometimes it is not explicitly done), such as: using fuzzy set theory [14] [1], performing partitions of the configuration space [13] <ref> [5] </ref>, or classifying the possible contact situation between the objects to be assembled [6] [18]. <p> Different solutions have been proposed in order to solve these problems, giving rise to planners that explicitly identify the task state to decide which command must be applied [13] <ref> [5] </ref> [6] [8] [12] [18] on one hand and, on the other, to reactive systems that directly map sensor information into a robot command [16] [10] [9] [14].
Reference: [6] <author> G. Dakin, </author> <title> Fine-motion planning for robotic assembly in local contact space. </title> <type> Ph.D. Thesis, </type> <institution> Univerity of Massachusetts, </institution> <address> Amherst, MA, </address> <year> 1994. </year>
Reference-contexts: These states can be defined in different ways (although sometimes it is not explicitly done), such as: using fuzzy set theory [14] [1], performing partitions of the configuration space [13] [5], or classifying the possible contact situation between the objects to be assembled <ref> [6] </ref> [18]. In any case, two main problems arise when uncertainty is considered: a) the identification of the current task state, and b) the automatic determination of the proper movement (i.e. the robot command for the controller) for each task state. <p> Different solutions have been proposed in order to solve these problems, giving rise to planners that explicitly identify the task state to decide which command must be applied [13] [5] <ref> [6] </ref> [8] [12] [18] on one hand and, on the other, to reactive systems that directly map sensor information into a robot command [16] [10] [9] [14].
Reference: [7] <author> H. Demuth and M. Beale. </author> <title> Neural Network Toolbox. The Math Works Inc., Cochituate Place, 24 Prime Park Way, </title> <address> Natick, Massachusetts 01760, </address> <year> 1994. </year>
Reference-contexts: An appropriate number of hidden neurons is very important, since too small networks cannot make complex classifications, and too large ones will overfit the training data, which results in poor performance on independent test data. MATLAB's neural toolbox <ref> [7] </ref> has been used for this part of the experiment. The best results were obtained by using 15 hidden neurons, hyperbolic tangent activation functions in the hidden layer, and linear output neurons. In this case, the misclassification rate on an independent test set accounts for 8%.
Reference: [8] <author> S.N. </author> <title> Gottschlich S.N. and A.C. Kak, Motion Planning for Assembly Matting Operations. </title> <booktitle> Proceedings of the 1991 IEEE International Conference on Robotics and Automation, </booktitle> <address> pp.1959-1963. </address>
Reference-contexts: Different solutions have been proposed in order to solve these problems, giving rise to planners that explicitly identify the task state to decide which command must be applied [13] [5] [6] <ref> [8] </ref> [12] [18] on one hand and, on the other, to reactive systems that directly map sensor information into a robot command [16] [10] [9] [14].
Reference: [9] <author> V. Gullapalli, A. G. Barto and R. A. Grupen, </author> <title> Learning Admittance Mappings for Force-guided Assembly.. </title> <booktitle> Proceedings of the 1994 IEEE International Conference on Robotics and Automation, </booktitle> <address> pp.2633-2638. </address>
Reference-contexts: in order to solve these problems, giving rise to planners that explicitly identify the task state to decide which command must be applied [13] [5] [6] [8] [12] [18] on one hand and, on the other, to reactive systems that directly map sensor information into a robot command [16] [10] <ref> [9] </ref> [14].
Reference: [10] <author> S. Hirai and K. Iwata, </author> <title> Derivation of Damping Control Parameters Based on Geometric Model. </title> <booktitle> Proceedings of the 1993 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pp. 87-92. </pages>
Reference-contexts: proposed in order to solve these problems, giving rise to planners that explicitly identify the task state to decide which command must be applied [13] [5] [6] [8] [12] [18] on one hand and, on the other, to reactive systems that directly map sensor information into a robot command [16] <ref> [10] </ref> [9] [14].
Reference: [11] <author> K. Hornik, M. Stinchcombe and H. White, </author> <title> Multilayer feedforward networks are universal approximators, Neural Net., </title> <type> Vol.2, </type> <institution> pp.359-366, </institution> <year> 1989. </year>
Reference-contexts: Then, the estimator can be trained to predict the contact state. In this work a backpropagation neural net is used as an estimator. One of the relevant properties of this type of networks is the universal approximation <ref> [11] </ref>, which states that with enough but finite number of hidden neurons, there exists always a set of weights such that the network can approximate any nonlinear function to the desired accuracy.
Reference: [12] <author> C. Laugier, </author> <title> Planning Fine Motion Strategies by Reasoning in Contact Space. </title> <booktitle> Proceedings of the 1989 IEEE International Conference on Robotics and Automation. </booktitle>
Reference-contexts: Different solutions have been proposed in order to solve these problems, giving rise to planners that explicitly identify the task state to decide which command must be applied [13] [5] [6] [8] <ref> [12] </ref> [18] on one hand and, on the other, to reactive systems that directly map sensor information into a robot command [16] [10] [9] [14].
Reference: [13] <author> T. Lozano Perez, M. Mason and R. Taylor, </author> <title> Automatic Synthesis of Fine-Motion Strategies for Robots, </title> <journal> The Int. Journal of Robotics Research, </journal> <volume> 3 (1), </volume> <pages> pp. 3-24, </pages> <year> 1984. </year>
Reference-contexts: These states can be defined in different ways (although sometimes it is not explicitly done), such as: using fuzzy set theory [14] [1], performing partitions of the configuration space <ref> [13] </ref> [5], or classifying the possible contact situation between the objects to be assembled [6] [18]. <p> Different solutions have been proposed in order to solve these problems, giving rise to planners that explicitly identify the task state to decide which command must be applied <ref> [13] </ref> [5] [6] [8] [12] [18] on one hand and, on the other, to reactive systems that directly map sensor information into a robot command [16] [10] [9] [14].
Reference: [14] <author> M. Nuttin, H. Van Brussel, C. Baroglio and R. Piola, </author> <title> Fuzzy Controller Synthesis in robotic assembly: Procedure and experiments. </title> <booktitle> FUZZ-IEEE94: Third International Conference on Fuzzy Systems, World Congress on Computational Intelligence, </booktitle> <year> 1994. </year>
Reference-contexts: These states can be defined in different ways (although sometimes it is not explicitly done), such as: using fuzzy set theory <ref> [14] </ref> [1], performing partitions of the configuration space [13] [5], or classifying the possible contact situation between the objects to be assembled [6] [18]. <p> order to solve these problems, giving rise to planners that explicitly identify the task state to decide which command must be applied [13] [5] [6] [8] [12] [18] on one hand and, on the other, to reactive systems that directly map sensor information into a robot command [16] [10] [9] <ref> [14] </ref>.
Reference: [15] <author> D. Nguyen and B. Widrow, </author> <title> Improving the learning speed of 2-layer neural networks by choosing initial values of the adaptive weights, </title> <booktitle> International Joint Conference of Neural Networks, </booktitle> <volume> volume 3, </volume> <pages> pages 21-26, </pages> <month> July </month> <year> 1990. </year>
Reference-contexts: Network selection and training procedure The neural network has 6 inputs (configuration and force components) and 9 outputs (one for each state). The classical backpropagation algorithm, modified with momentum and a variable learning rate [20], was used. The networks were initialized with the Nguyen-Widrow initialization method <ref> [15] </ref>. Various network topologies were trained in order to find a network with the best generalization capability.
Reference: [16] <author> J. M. Schimmels and M. A. </author> <title> Peshkin, Synthesis and Validation of Non-Diagonal Accommodation Matrices for Error-Corrective Assembly. </title> <booktitle> Proceedings of the IEEE 1990 International Conference on Robotics and Automation, </booktitle> <address> pp.714-719. </address>
Reference-contexts: been proposed in order to solve these problems, giving rise to planners that explicitly identify the task state to decide which command must be applied [13] [5] [6] [8] [12] [18] on one hand and, on the other, to reactive systems that directly map sensor information into a robot command <ref> [16] </ref> [10] [9] [14].
Reference: [17] <author> R. Suarez, L. Basa~nez and J. Rosell, </author> <title> Assembly Contact Force Domains in the Presence of Uncertainty, </title> <booktitle> Proc. of the SYROCO'94, </booktitle> <address> Capri, Italy, </address> <year> 1994. </year>
Reference-contexts: The effect of these sources of geometric uncertainty on the contact configurations has been modeled in [2], and their effect on the possible reaction forces in <ref> [17] </ref>. Making use of these uncertainty models, a simulator capable of dealing with random deviations of the parameters has been implemented. <p> This can be performed by using geometric operations in the dual plane. A detailed description of the generation of the domains DGr can be found in <ref> [17] </ref>. As an example, figure 3e shows the domains DGr for two states for a block orientation, both with only one basic contact (states 3 and 5 in figure 2), and figure 3f shows the domain DGr for a state involving both basic contacts simultaneously (state 4 in figure 2).
Reference: [18] <author> R. Suarez and L. Basa~nez, </author> <title> Assembly With Robots in Presence of Uncertainty, </title> <booktitle> Proc. of the 22nd ISIR, </booktitle> <address> Detroit, USA, </address> <pages> pp. 19/1-19/15, </pages> <year> 1991. </year>
Reference-contexts: These states can be defined in different ways (although sometimes it is not explicitly done), such as: using fuzzy set theory [14] [1], performing partitions of the configuration space [13] [5], or classifying the possible contact situation between the objects to be assembled [6] <ref> [18] </ref>. In any case, two main problems arise when uncertainty is considered: a) the identification of the current task state, and b) the automatic determination of the proper movement (i.e. the robot command for the controller) for each task state. <p> Different solutions have been proposed in order to solve these problems, giving rise to planners that explicitly identify the task state to decide which command must be applied [13] [5] [6] [8] [12] <ref> [18] </ref> on one hand and, on the other, to reactive systems that directly map sensor information into a robot command [16] [10] [9] [14]. <p> J. Rosell has a grant from the Catalan Government. It is assumed here that task states are defined by the basic contacts between the objects to be assembled, i.e. each task state represents a different contact situation between the objects <ref> [18] </ref>. Information from two types of sensors is used for on-line estimation: configuration (the relative position and orientation between objects) obtained from knowledge of the environment and the robot configuration, and generalized reaction force (reaction force and torque) obtained from a force/torque sensor in the robot wrist.
Reference: [19] <author> R. Suarez and L. Basa~nez, </author> <title> Fine Motion Planning in Presence of Uncertainty, </title> <booktitle> II European Workshop on Learning Robots, </booktitle> <address> Torino, Italy, pp.143-164 ,1993. </address>
Reference-contexts: APPROACHES COMPARISON analytical and the learning approaches and the parallelism between them. The following is a summary of the advantages and disadvantages of each approach. 1 Two states are contiguous when it is possible to pass from one to the other without the ocurrence of any other state <ref> [19] </ref>. Fig. 5. A neural net is used to estimate the contact state. The competitive layer selects the neuron with the highest output. Each output neuron represents a contact state. 4.1.
Reference: [20] <author> T.P. Vogl, J.K. Mangis, A.K. Rigler, W.T. Zink and D.L. Alkon, </author> <title> Accelerating the convergence of the backpropagation method, </title> <journal> Biological Cybernetics Vol. </journal> <volume> 59, </volume> <pages> pp. 257-263, </pages> <year> 1988. </year>
Reference-contexts: Using fewer than 300 examples produced poor results. Network selection and training procedure The neural network has 6 inputs (configuration and force components) and 9 outputs (one for each state). The classical backpropagation algorithm, modified with momentum and a variable learning rate <ref> [20] </ref>, was used. The networks were initialized with the Nguyen-Widrow initialization method [15]. Various network topologies were trained in order to find a network with the best generalization capability.
References-found: 20

