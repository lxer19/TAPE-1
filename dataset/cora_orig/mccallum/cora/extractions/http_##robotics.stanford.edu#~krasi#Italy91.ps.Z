URL: http://robotics.stanford.edu/~krasi/Italy91.ps.Z
Refering-URL: http://robotics.stanford.edu/~krasi/
Root-URL: http://www.cs.stanford.edu
Email: E-mail: K.KRASI@Macbeth.Stanford.EDU  
Title: of links and placement of telescoping manipulators in an environment with obstacles  
Author: Krasimir Kolarov, Bernard Roth 
Address: Palo Alto, CA 94305  
Affiliation: Mechanical Engineering Dept., Design Div., Stanford University,  
Note: On the number  1.Introduction  
Abstract: Copyright 1991 IEEE, Published in the Proceedings of the International Conference on Advanced Robotics, ICAR91, Pisa, Italy, 1991 Personal use of this material is permitted. However, permission to reprint/republish this material for advertising or promotional purposes or for creating new collective works for resale or redistribution to servers or lists, or to reuse any copyrighted component of this work in other works, must be obtained from the IEEE. Contact: Manager, Copyrights and Permissions / IEEE Service Center / 445 Hoes Lane / P.O. Box 1331 / Piscataway, NJ 08855-1331, USA. Telephone: + Intl. 908-562-3966. Abstract--In this paper we consider the following problem: Given an environment with obstacles, what are the minimum number of telescoping links that will allow a manipulator operating in this environment to reach every point in the environment. A geometrical algorithm is presented for solving this problem in a two-dimensional planar case when the obstacles are polygonal. Solutions to some generalizations of this problem are outlined, including simultaneous design of a manipulator and its environment, design of a moving robot and/or obstacles, and design for a three-dimensional workspace. Some theorems on the bounding limits for the number of links of the manipulator are formulated . The problem we are interested in is the following: given an environment containing obstacles, what are the minimum number of links and the placement of a manipulator operating in this environment that will allow it to reach any point in the environment? The primary joint type we employ in this study is a one degree of freedom (dof) prismatic joint which folds into itself like a telescope to some minimal length. The manipulator is formed by connecting each telescopically jointed link to a revolute joint at its other end. The revolute axes are perpendicular to the prismatic axes, (see fig.1). This design is fully realizable in practice and parts of it exist in different forms in different robots. Strictly speaking, each telescoping joints connects two links. So in fig.1, we have 7 links (a,b,c,d,e,f,g) - including the ground link but not the end-effector. For the sake of the discussion, it will be more convenient to think of a link in a different way. Since the only function of the prismatic joint is to change the link's length, we consider the telescoping joint to be part of a link's internal structure. Hence, we have in Fig.1 only 3 moving links (1,2,3). This design gives more flexibility than a 
Abstract-found: 1
Intro-found: 0
Reference: [1] <author> J.O'Rourke, </author> <title> Art gallery theorems and algorithms, </title> <publisher> Oxford Press, </publisher> <year> 1987. </year>
Reference-contexts: In deriving those results we use the approach used for guard placement in an art gallery, discussed extensively by Copyright 1991 IEEE, Published in the Proceedings of the International Conference on Advanced Robotics, ICAR91, Pisa, Italy, 1991 9 O'Rourke <ref> [1] </ref>. In an art gallery (i.e. a simple polygon with or without holes) the question arises how many guards are needed and where they should be placed so that they can see the whole inside (in some generalizations also the outside) of the gallery. The basic approach taken in [1] is <p> O'Rourke <ref> [1] </ref>. In an art gallery (i.e. a simple polygon with or without holes) the question arises how many guards are needed and where they should be placed so that they can see the whole inside (in some generalizations also the outside) of the gallery. The basic approach taken in [1] is first to triangulate E, i.e., to connect all vertices of E with straight edges so that they form triangles that cover E. <p> Here it turns out that each color appears at 6 vertices and we can therefore choose any of the three sets. We arbitrarily choose the red vertices. The main results for polygons with holes (the term used in <ref> [1] </ref> for environments with obstacles) are [(n+2*h)/3] vertex guards are sufficient to cover the whole environment E; [(n+h)/3] vertex guards are sometimes necessary (established through examples) to cover E; [(n+1)/3] vertex guards are sufficient for one hole; [(n+h)/3] vertex guards may be sufficient for the general case. where h is the <p> Our visibility reflects the optimal solution for this environment while the number of guards is just a solution for the art gallery problem. The problem of minimal guard cover is discussed in <ref> [1] </ref>. The results there show that this problem is NP-hard. We will outline here an approach for reducing the number of guards for this environment to ideally the optimal number.
Reference: [2] <author> S.Suri, J.O'Rourke, </author> <title> Worst-case optimal algorithms for constructing visibility polygons with holes, </title> <booktitle> Proc. 2nd annual ACM Symposium on computational geometry, </booktitle> <year> 1986. </year>
Reference-contexts: In our problem we are not concerned with the complexity of the algorithm (which is generally the main issue in computational geometry) because we will be building these regions only once, off-line for design purposes. By comparison, the algorithm of Suri and O'Rourke <ref> [2] </ref> has a complexity that can be as high as (n 4 ) since on each level it builds the vertex and edge visibility regions using a triangulation approach.
Reference: [3] <author> J.Mitchell, G.Rote and G.Woeginger, </author> <title> Minimal link paths among obstacles in the plane, </title> <booktitle> Proc. 6th annual ACM Symposium on computational geometry, </booktitle> <year> 1990. </year>
Reference-contexts: By comparison, the algorithm of Suri and O'Rourke [2] has a complexity that can be as high as (n 4 ) since on each level it builds the vertex and edge visibility regions using a triangulation approach. Mitchell, Rote and Woeginger have used similar techniques in <ref> [3] </ref> and they have recently reported an algorithm with complexity O (Elogn) for building the region illuminated from all the edges, where E is the number of visible pairs among the obstacle vertices.
Reference: [4] <author> W.Lenhart, R.Pollack, J.Sack, R.Seidel, M.Sharir , S.Suri, G.Toussiant, S.Whitesides and C.Yap, </author> <title> Computing the link center of a simple polygon, </title> <booktitle> Proc. 3rd annual ACM Symposium on computational geometry 1987 </booktitle>
Reference-contexts: These points form the "link center" of the environment. Using the notion of link distance defined in Section 2 we can introduce, as in <ref> [4] </ref>, the link diameter and the link radius of the environment as respectively the maximal and the minimal link distances between any two points in E. <p> In this context the link center will consist of all points that are at a link distance equal to the link radius from all other points in the environment <ref> [4] </ref>. Theorem 4 (in [4]) states that the link center is formed by all convex vertices in the environment for the case of a simple polygon. In our problem the environment is a simple polygon with holes (the obstacles). <p> In this context the link center will consist of all points that are at a link distance equal to the link radius from all other points in the environment <ref> [4] </ref>. Theorem 4 (in [4]) states that the link center is formed by all convex vertices in the environment for the case of a simple polygon. In our problem the environment is a simple polygon with holes (the obstacles).
Reference: [5] <author> S.Suri, </author> <title> A linear time algorithm for minimum link paths inside a simple polygon ; Computer vision, </title> <journal> graphics and image processing, </journal> <volume> 35, </volume> <year> 1986. </year>
Reference: [6] <author> T.Toussaint, </author> <title> Solving geometric problems with the 'rotating calipers', </title> <booktitle> Proc. IEEE MELECON'83, </booktitle> <address> Greece </address>
Reference-contexts: If we denote with A (OB i ) the smallest area rectangle enclosing the obstacle OB i then Toussaint <ref> [6] </ref> has an algorithm that finds A (OB i ) in linear time.
Reference: [7] <author> A.Aggarwal, </author> <title> The art gallery theorem : Its variations, applications and algorithmic aspects, </title> <type> Phd thesis, </type> <institution> Johns Hopkins University, </institution> <year> 1984. </year>
References-found: 7

