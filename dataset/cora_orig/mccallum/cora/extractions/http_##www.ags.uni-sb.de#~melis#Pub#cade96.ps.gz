URL: http://www.ags.uni-sb.de/~melis/Pub/cade96.ps.gz
Refering-URL: http://jswww.cs.uni-sb.de/~melis/
Root-URL: 
Email: melis@cs.uni-sb.de.  jonathw@aisb.ed.ac.uk.  
Phone: 2  
Title: Internal Analogy in Theorem Proving  
Author: Erica Melis and Jon Whittle ? 
Address: D-66041 Saarbrucken, Germany.  80 South Bridge, Edinburgh EH1 1HN, UK.  
Affiliation: 1 Universitat des Saarlandes, FB Informatik  Dept. of Artificial Intelligence, University of Edinburgh  
Abstract: Internal analogy tries to reuse solutions of subproblems within the same problem solving process. In mathematical theorem proving several patterns are known where internal analogy suggests itself. Hence, we propose the use of internal analogy in automated theorem proving. This paper investigates the possibility of incorporating internal analogy into the inductive proof planner CL A M . It introduces internal analogy as a control strategy of CL A M that can reduce search. We concentrate on using internal analogy to avoid the repeated application of the induction revision critic. The implementation has been tested and it was found that internal analogy can reduce the time taken to construct proof plans for some theorems.
Abstract-found: 1
Intro-found: 1
Reference: [Bundy et al 91] <author> A. Bundy, F. van Harmelen, J. Hesketh, and A. Smaill. </author> <title> Experiments with proof plans for induction. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 7 </volume> <pages> 303-324, </pages> <year> 1991. </year>
Reference-contexts: This paper addresses the possibility of incorporating internal analogy for a particular subtask into the inductive proof planner CL A M producing proof plans <ref> [Bundy et al 91] </ref>. A proof plan is an abstract representation of a proof that consists of a tree of methods that are (partial) specifications of object-level tactics [Gordon et al 79]. Proof plans for inductive proofs tend to be well-structured.
Reference: [Bundy et al 93] <author> A. Bundy, Stevens A, F. Van Harmelen, A. Ireland, and A. Smaill. </author> <title> A heuristic for guiding inductive proofs. </title> <journal> Artificial Intelligence, </journal> <volume> 63 </volume> <pages> 185-253, </pages> <year> 1993. </year>
Reference-contexts: To that end, CL A M employs domain-specific search heuristics restricting the search for methods, most notably rippling <ref> [Hutter 90, Bundy et al 93] </ref>. Rippling involves annotating the induction conclusion with wave fronts and wave holes. Wave fronts mark the differences between induction hypothesis and conclusion. Wave holes represent the parts of waves that also appear in the induction hypothesis.
Reference: [Carbonell 86] <author> J.G. Carbonell. </author> <title> Derivational analogy: A theory of recon-structive problem solving and expertise acquisition. In R.S. </title> <editor> Michalsky, J.G. Carbonell, and T.M. Mitchell, editors, </editor> <booktitle> Machine Learning: An Artificial Intelligence Approach, </booktitle> <pages> pages 371-392. </pages> <publisher> Morgan Kaufmann Publ, </publisher> <address> Los Altos, </address> <year> 1986. </year>
Reference-contexts: If maps to (T erm; M axList) = Map then map scheme (Scheme; M ap) = N ewScheme and return N ewScheme else FAIL Fig. 1. Procedure for Planning with Critics and Internal Analogy Justifications Our internal analogy employs ideas from derivational analogy <ref> [Carbonell 86] </ref> that transfers a decision made in the source planning only if its justifications hold in the target. This means we have to store justifications of decisions which we are going to replay, in a justification slot of the plan nodes shown in Figure 2.
Reference: [Gordon et al 79] <author> M. Gordon, R. Milner, </author> <title> and C.P. </title> <publisher> Wadsworth. Edinburgh LCF: </publisher>
Reference-contexts: A proof plan is an abstract representation of a proof that consists of a tree of methods that are (partial) specifications of object-level tactics <ref> [Gordon et al 79] </ref>. Proof plans for inductive proofs tend to be well-structured. In addition, inductive proofs often involve a number of syntactically similar subgoals. Hence, a proof planning system is a well-suited environment for the integration of internal analogy.
References-found: 4

