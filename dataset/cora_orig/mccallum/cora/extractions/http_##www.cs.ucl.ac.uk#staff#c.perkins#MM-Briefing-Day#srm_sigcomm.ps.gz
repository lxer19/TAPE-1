URL: http://www.cs.ucl.ac.uk/staff/c.perkins/MM-Briefing-Day/srm_sigcomm.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/staff/c.perkins/MM-Briefing-Day/
Root-URL: http://www.cs.ucl.ac.uk
Email: mccanne@ee.lbl.gov  charley@carlsbad.usc.edu  lixia@parc.xerox.com  
Title: A Reliable Multicast Framework for Light-weight Sessions and Application Level Framing  
Author: Sally Floyd, Van Jacobson, Steven McCanne floyd, van, Ching-Gung Liu Lixia Zhang 
Date: August 7, 1995  
Address: Berkeley, CA 94720  Los Angeles, CA 90089  3333 Coyote Hill Road, Palo Alto, CA 94304  
Affiliation: Lawrence Berkeley Laboratory, University of California,  University of Southern California,  Xerox PARC,  
Abstract: This paper 1 describes SRM (Scalable Reliable Multicast), a reliable multicast framework for application level framing and light-weight sessions. The algorithms of this framework are efficient, robust, and scale well to both very large networks and very large sessions. The framework has been prototyped in wb, a distributed whiteboard application, and has been extensively tested on a global scale with sessions ranging from a few to more than 1000 participants. The paper describes the principles that have guided our design, including the IP multicast group delivery model, an end-to-end, receiver-based model of reliability, and the application level framing protocol model. As with unicast communications, the performance of a reliable multicast delivery algorithm depends on the underlying topology and operational environment. We investigate that dependence via analysis and simulation, and demonstrate an adaptive algorithm that uses the results of previous loss recovery events to adapt the control parameters used for future loss recovery. With the adaptive algorithm, our reliable multicast delivery algorithm provides good performance over a wide range of underlying topologies. 
Abstract-found: 1
Intro-found: 1
Reference: [AFM92] <author> Armstrong, S., Freier, A., and Marzullo, K., </author> <title> "Mul-ticast Transport Protocol", Request for Comments (RFC) 1301, </title> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: To avoid keeping all the data forever, the sequencer keeps track of the receiving state of all the members to determine the highest sequence number that has been correctly received by all the members. MTP (Multicasting Transport Protocol) <ref> [AFM92] </ref> is again a centralized scheme for totally ordered multicast delivery. A master site is responsible for granting membership and tokens for data transmission; each host must obtain a token from the master first before multicasting data to the group, thus the total order of data packets is maintained.
Reference: [B93] <author> Birman, K., </author> <title> "The Process Group Approach to Reliable Distributed Computing", </title> <journal> Communications of the ACM, </journal> <month> Dec. </month> <year> 1993. </year>
Reference-contexts: The reliable multicast delivery in existing ISIS implementations is achieved by multiple unicast connections using a windowed acknowledgment protocol similar to TCP <ref> [B93] </ref>. A new implementation has been announced recently that can optionally run on top of IP multicast. 9 Future work on congestion control SRM assumes that the multicast session has a maximum bandwidth allocation for the session.
Reference: [BSS91] <author> Birman, K., Schiper, A., and Stephenson, P., </author> <title> "Lightweight Casual and Atomic Group Multicast", </title> <journal> ACM Transactions on Computer Systems, Vol.9, </journal> <volume> No. 3, </volume> <pages> pp. 272-314, </pages> <month> Aug. </month> <year> 1991. </year>
Reference-contexts: the single LAN limits data transmissions from all hosts to one packet at a time, partial and total ordering of data delivery can be readily derived from data and acknowledgment sequences. 13 Perhaps the most well-known work on reliable multicast is the ISIS distributed programming system developed at Cor-nell University <ref> [BSS91] </ref>. It provides causal ordering and, if desired, total ordering of messages on top of a reliable mul-ticast delivery protocol.
Reference: [BCS94] <author> B. Braden, D. Clark, and S. Shenker, </author> <title> "Integrated Services in the Internet Architecture: an Overview", Request for Comments (RFC) 1633, </title> <type> IETF, </type> <month> June </month> <year> 1994. </year>
Reference-contexts: For realtime traffic (i.e., traffic such as audio and video that is constrained by a fixed or adaptive playback time), some researchers have proposed that the network provide real-time services with an explicit reservation setup protocol, admission control procedures, and appropriate scheduling algorithms, to provide for guaranteed and predictive service <ref> [BCS94] </ref>. If members of a reliable multicast application were to take advantage of such services, and make reservations for a fixed target bandwidth, then each member simply requires a procedure for determining whether the session is over or under its bandwidth allocation.
Reference: [CM84] <author> Chang, J., and Maxemchuk, N., </author> <title> "Reliable Broadcast Protocols", </title> <journal> ACM Transactions on Computer Systems, Vol.2, </journal> <volume> No. 3, </volume> <pages> pp. 251-275, </pages> <month> Aug. </month> <year> 1984. </year>
Reference-contexts: Instead, we focus on the different goals and definitions of reliability in the various architectures, and the implications of these differences for the scalability, robustness, handling of dynamic group membership, and overhead of the algorithms. The Chang and Maxemchuk protocol <ref> [CM84] </ref> is one of the pioneer works in reliable multicast protocols. It is basically a centralized scheme that provides totally ordered delivery of data to all group members. All the members are ordered in a logical ring, with one of them being the master, called the token site.
Reference: [CT90] <author> Clark, D., and Tennenhouse, D., </author> <title> "Architectural Considerations for a New Generation of Protocols", </title> <booktitle> Proceedings of ACM SIGCOMM '90, </booktitle> <month> Sept. </month> <year> 1990, </year> <pages> pp. 201-208. </pages>
Reference-contexts: The weakness of "one size fits all" protocols has long been recognized. In 1990 Clark and Tennenhouse proposed a new protocol model called Application Level Framing (ALF) which explicitly includes an application's semantics in the design of that application's protocol <ref> [CT90] </ref>. ALF was later elaborated with a light-weight rendezvous mechanism based on the IP multicast distribution model, and with a notion of receiver-based adaptation for unreliable, real-time applications such as audio and video conferencing. <p> Thus the "naming in application data units (ADUs)" model works far better for multicast. Use of this model also has two beneficial side effects. As <ref> [CT90] </ref> points out, a separate protocol namespace can impose delays and inefficiencies on an application, e.g., TCP will only deliver data in sequence even though a file transfer application might be perfectly happy to receive sectors in any order.
Reference: [CLZ87] <author> Clark, D., Lambert, M., and Zhang, L., </author> <month> "NETBLT: </month>
Reference-contexts: Because of the "fate-sharing" implicit in unicast communication, i.e., the data transmission fails if either of the two ends fails, either the sender or receiver can take on this role. In TCP, the sender times transmissions and keeps retransmitting until an acknowledgment is received. NETBLT <ref> [CLZ87] </ref> uses the opposite model and makes the receiver responsible for all loss detection and recovery. Both approaches have been shown to work well for unicast. However, if a TCP-style, sender-based approach is applied to multicast distribution, a number of problems occur.
References-found: 7

