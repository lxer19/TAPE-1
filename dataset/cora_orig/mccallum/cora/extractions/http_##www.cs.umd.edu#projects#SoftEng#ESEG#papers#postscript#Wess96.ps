URL: http://www.cs.umd.edu/projects/SoftEng/ESEG/papers/postscript/Wess96.ps
Refering-URL: http://www.cs.umd.edu/~lanubile/public.html
Root-URL: 
Email: fshull-@cs.umd.edu  
Title: Investigating Focused Techniques for Understanding Frameworks  
Author: Victor Basili, Gianluigi Caldiera, Filippo Lanubile, and Forrest Shull basili gcaldiera lanubile 
Affiliation: Department of Computer Science, University of Maryland  
Abstract-found: 0
Intro-found: 1
Reference: [Bas96] <author> V. R. Basili, S. Green , O. Laitenberger, F. Lanubile, F. Shull, S. Sorumgard, and M. Zelkowitz, </author> <title> "The empirical investigation of perspective-based reading", </title> <journal> Empirical Software Engineering - An International Journal, </journal> <volume> vol. 1, no. 2, </volume> <year> 1996. </year>
Reference-contexts: We have experimented before with focused reading techniques aimed at uncovering defects in software requirements documents <ref> [ Bas96] </ref>. We are currently in the process of developing focused techniques that are aimed at providing programmers with a level of knowledge of a framework that would enable the use of the framework in developing a given application.
Reference: [Cam63] <author> D. T. Campbell, and J. C. Stanley, </author> <title> Experimental and Quasi-Experimental Designs for Research, </title> <publisher> Houghton Mifflin Co., </publisher> <year> 1963. </year>
Reference-contexts: The controlled experiment contains two nested experimental designs. The first design can be synthesized as a randomized two-group design [Judd91] having the team as a unit of analysis . Using the notation for experiment design in <ref> [Cam63] </ref>, the design takes the following form: R X O R X O where each row represents a treatment group, R indicates random assignment, X represents the exposure of a group to a treatment (system wide or task-oriented) , and O refers to observing and measuring the team performance in terms <p> This design can be seen as a variation of the Posttest-Only Control Group Design <ref> [Cam63] </ref> where the comparison is made between a group given a treatment and a control group. The second experimental design is a before-after two-group design [Judd91], having the individual as a unit of analysis. <p> This design can be seen as a variation of the Pretest-Posttest Control Group Design <ref> [Cam63] </ref> where the comparison is made between a group given a treatment and a control group. By comparing comprehension on the midterm exam (pretest) and final exam (posttest), we can test whether each technique has a significant short and long-term impact on program comprehension.
Reference: [Gam95] <author> E. Gamma, R. Helm, R. Johnson, and J. Vlissides, </author> <title> Design Patterns: Elements of Reusable ObjectOriented Software, </title> <publisher> Addison-Wesley Publishing Co., </publisher> <year> 1995. </year>
Reference-contexts: The main difference between maintenance and framework-based development is that traditional maintenance is often performed on legacy systems with a decayed design, while frameworks are the result of many iterations and much effort aimed at improving the design. Most existing design patterns <ref> [Gam95] </ref> have been derived from experience in developing frameworks. It is assumed that the effort to learn the framework and develop code within the system is less than the effort required to develop a similar system from scratch. <p> They mainly read the framework documentation to learn about the abstract classes that form the basis of the framework, and the collaborative model that drives the behavior of the framework. Since many design patterns come from experience in designing frameworks <ref> [Gam95] </ref>, they can be used as abstractions of the design characteristics of the framework. Example applications are used to better understand how the collaborative model works and how the design patterns are implemented. Programmers develop new applications mainly by specializing the abstract classes of the framework. <p> The ET++ source code, the tools, and the sample applications are available for free via anonymous ftp. Furthermore, the design of ET++ has been thoroughly tested and improved from the initial version and incorporates seventeen of the design patterns in <ref> [Gam95] </ref>. ET++ is a sophisticated white-box framework that poses learning problems which can be major inhibitors against its use. We already have provided the students with a general set of requirements of the application to be developed using the framework.
Reference: [Judd91] <author> C. M. Judd, E. R. Smith, and L. H. Kidder, </author> <title> Research Methods in Social Relations, </title> <booktitle> 6th edition. </booktitle> <address> Orlando: </address> <publisher> Holt Rinehart and Winston, Inc., </publisher> <year> 1991. </year>
Reference-contexts: The prototypes developed give us a good confidence that developers will deliver at least a part of the required functionality. The controlled experiment contains two nested experimental designs. The first design can be synthesized as a randomized two-group design <ref> [Judd91] </ref> having the team as a unit of analysis . <p> This design can be seen as a variation of the Posttest-Only Control Group Design [Cam63] where the comparison is made between a group given a treatment and a control group. The second experimental design is a before-after two-group design <ref> [Judd91] </ref>, having the individual as a unit of analysis.
Reference: [Lew95] <author> T. Lewis et al., </author> <title> ObjectOriented Application Frameworks, </title> <publisher> Manning Publications Co., </publisher> <year> 1995. </year>
Reference-contexts: A framework is tailored to solve a particular problem by customizing its abstract and concrete classes. The framework architecture is reused by all specific solutions in that problem domain. By providing both design and infrastructure for developing applications, the framework approach promises to develop applications faster <ref> [Lew95] </ref>. The most popular frameworks are in the GUI application domain (e.g., MacApp, ET++, CommonPoint) and in the drawing domain (e.g., HotDraw, UniDraw), but frameworks have also been developed in other domains such as multimedia, manufacturing, financial trade, and data access. <p> We will also use the midterm and final exams to directly test the degree of framework comprehension which students have elicited after having been lectured on (midterm exam) and having applied (final exam) the different techniques. We have chosen the GUI application framework ET++ <ref> [Lew95, Wei89] </ref> for the experiment. ET++ allows programmers to develop applications with consistent and highly interactive user interfaces that adhere to the desktop metaphor. ET++ has been implemented in C++ and runs on common UNIX platforms in different window environments such as X11.
Reference: [Pree95] <author> W. </author> <title> Pree, </title> <publisher> Design Patterns for ObjectOriented Software Development , ACM Press & Addison-Wesley Publishing Co., </publisher> <year> 1995. </year>
Reference-contexts: Although it is recognized that the effort required to learn enough about the framework to begin coding is high, especially for novices <ref> [Tal95, Pree95] </ref>, little work has been done in the way of minimizing this learning curve.
Reference: [ Sch96 ] <author> H. A. Schmid, </author> <title> "Creating applications from components: a manufacturing framework design", </title> <journal> IEEE Software, </journal> <volume> vol. 13, no. 6, </volume> <month> November </month> <year> 1996. </year>
Reference-contexts: Each technique within the family is: tailored to the specific framework available detailed in that it provides specific steps to be performed focused on a particular coverage of the framework design and implementation As a first step, we are considering two reading techniques for using a white-box framework <ref> [ Sch96 ] </ref> to build new applications: a systemwide reading technique and a task-oriented technique. The main difference is the focus of the learning process: the systemwide technique focuses more on the big picture than on the detailed task to be accomplished (which is the focus of the task-oriented technique).
Reference: [Tal95] <author> Taligent Inc., </author> <title> The Power of Frameworks, </title> <publisher> Addison-Wesley Publishing Co., </publisher> <year> 1995 </year>
Reference-contexts: Although it is recognized that the effort required to learn enough about the framework to begin coding is high, especially for novices <ref> [Tal95, Pree95] </ref>, little work has been done in the way of minimizing this learning curve.
Reference: [Wei89] <author> A. Weinand, E.Gamma, R. Marty, </author> <title> "Design and implementation of ET++, a seamless objectoriented application framework", Structured Programming, </title> <journal> vol.10, no.2, </journal> <year> 1989. </year>
Reference-contexts: We will also use the midterm and final exams to directly test the degree of framework comprehension which students have elicited after having been lectured on (midterm exam) and having applied (final exam) the different techniques. We have chosen the GUI application framework ET++ <ref> [Lew95, Wei89] </ref> for the experiment. ET++ allows programmers to develop applications with consistent and highly interactive user interfaces that adhere to the desktop metaphor. ET++ has been implemented in C++ and runs on common UNIX platforms in different window environments such as X11.
References-found: 9

