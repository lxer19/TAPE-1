URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/93-34.ps.Z
Refering-URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/README.html
Root-URL: 
Email: avnaik@cs.buffalo.edu  regan@cs.buffalo.edu  sivak-d@cs.buffalo.edu  
Title: Quasilinear Time Complexity Theory  
Author: Ashish V. Naik Kenneth W. Regan D. Sivakumar 
Keyword: Topics. Computational complexity.  
Date: August 20, 1993  
Address: Buffalo  Buffalo  Buffalo  
Affiliation: SUNY  SUNY  SUNY  
Abstract: This paper furthers the study of quasi-linear time complexity initiated by Schnorr [Sch76] and Gurevich and Shelah [GS89]. We show that the fundamental properties of the polynomial-time hierarchy carry over to the quasilinear-time hierarchy. Whereas all previously known versions of the Valiant-Vazirani reduction from NP to parity run in quadratic time, we give a new construction using error-correcting codes that runs in quasilinear time. We show, however, that the important equivalence between search problems and decision problems in polynomial time is unlikely to carry over: if search reduces to decision for SAT in quasi-linear time, then all of NP is contained in quasi-polynomial time. Other connections to work by Stearns and Hunt [SH86, SH90, HS90] on "power indices" of NP languages are made. 
Abstract-found: 1
Intro-found: 1
Reference: [ABN + 92] <author> N. Alon, J. Bruck, J. Naor, M. Naor, and R. Roth. </author> <title> Construction of asymptotically good low-rate error-correcting codes through pseudo-random graphs. </title> <journal> IEEE Trans. Info. Thy., </journal> <volume> 38(2) </volume> <pages> 509-512, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: The idea of using error-correcting codes is mentioned by Naor and Naor [NN93] and ascribed to Bruck, referring the reader to <ref> [ABN + 92] </ref> for details. However, the construction in [ABN + 92] uses a code of Justesen (see [Jus72, MS77] whose implementation in our setting seems to require exponentiation of field elements of length polynomial in n, which is not known to be computable in (randomized) quasilinear time (cf. [AMV88, Sti90]). <p> The idea of using error-correcting codes is mentioned by Naor and Naor [NN93] and ascribed to Bruck, referring the reader to <ref> [ABN + 92] </ref> for details. However, the construction in [ABN + 92] uses a code of Justesen (see [Jus72, MS77] whose implementation in our setting seems to require exponentiation of field elements of length polynomial in n, which is not known to be computable in (randomized) quasilinear time (cf. [AMV88, Sti90]). <p> Our point is that by scaling down the size of the field used for basic arithmetic, and using multi-variable polynomials, one can achieve quasi-linear runtime. Our code is similar to those used in recent improvements of "holographic proof systems" [BFLS91, Sud92], and is only inferior to that of <ref> [ABN + 92] </ref> in the number of random bits. Let be an alphabet of size 2 l . We can give the structure of the field F = GF (2 l ); then n becomes an n-dimensional vector space over F . <p> Families of codes are known for which R (as well as ffi) stays bounded below by a constant; such (families of) codes are called good . Good codes require only q +O (1) random bits in the above construction. The codes in <ref> [Jus72, TV91, ABN + 92, JLJH92, She93] </ref> are good. However, we do not know of any good codes which give quasi-linear runtime in the above construction. 4.
Reference: [AHU74] <author> A. Aho, J. Hopcroft, and J. Ullman. </author> <title> The Design and Analysis of Computer Algorithms. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1974. </year>
Reference-contexts: Step 10 dominates the running time. To multiply two polynomials of degree k 1 over GF (2) and reduce them modulo ff in the field GF (2 k ) takes time t 1 = O (k log k loglog k) on standard Turing machine models (see <ref> [AHU74] </ref> and [Rab80]). The time to compute a i in GF (2 k ) where i n is t 2 = O (log n 2k log k loglog k) via repeated squaring.
Reference: [AMV88] <author> G. Agnew, R. Mullin, and S. Vanstone. </author> <title> Fast exponentialtion in GF (2 n ). In Proceedings, </title> <booktitle> Advances in Cryptology: Eurocrypt '88, volume 330 of LNCS, </booktitle> <pages> pages 251-255, </pages> <year> 1988. </year>
Reference-contexts: However, the construction in [ABN + 92] uses a code of Justesen (see [Jus72, MS77] whose implementation in our setting seems to require exponentiation of field elements of length polynomial in n, which is not known to be computable in (randomized) quasilinear time (cf. <ref> [AMV88, Sti90] </ref>). Our point is that by scaling down the size of the field used for basic arithmetic, and using multi-variable polynomials, one can achieve quasi-linear runtime.
Reference: [Bar92] <author> D. </author> <title> Mix Barrington. Quasipolynomial size circuit classes. </title> <booktitle> In Proc. 7th Structures, </booktitle> <pages> pages 86-93, </pages> <year> 1992. </year>
Reference-contexts: Let polylog n abbreviate (log n) O (1) as before. Then DTIME [2 polylogn ] is often referred to as quasi-polynomial time (cf. <ref> [Bar92] </ref>). Theorem 4.2. Let L 2 NP. If search reduces to decision for L in quasilinear time, then L 2 DTIME [2 polylogn ]. 9 Proof.
Reference: [BBFG91] <author> R. Beigel, M. Bellare, J. Feigenbaum, and S. Goldwasser. </author> <title> Languages that are easier than their proofs. </title> <booktitle> In Proc. 32nd FOCS, </booktitle> <pages> pages 19-28, </pages> <year> 1991. </year>
Reference-contexts: The following is a straightforward extension of the standard notion of search reducing to decision in polynomial time <ref> [BD76, BBFG91, NOS93, HNOS93] </ref> to other time bounds t (n). Definition 4.1. Let L 2 NP and a time bound t (n) be given. <p> Let EE stand for DTIME [2 2 O (n) ], and NEE for its nondeterministic counterpart. The classes EE and NEE were recently considered by Beigel, Bellare, Feigenbaum, and Goldwasser <ref> [BBFG91] </ref>, and there are reasons for believing it unlikely that NEE = EE. Theorem 4.6. Suppose NEE 6= EE. <p> Theorem 4.6. Suppose NEE 6= EE. Then for all k &gt; 0 there is a tally language in NP whose power index is at most 1=k, but for which search does not reduce to decision in polynomial time. Proof Sketch. We use the techniques developed by <ref> [BBFG91] </ref>. Let T be the tally set constructed in [BBFG91] such that search does not reduce to decision for T in polynomial time, unless NEE = EE. <p> Then for all k &gt; 0 there is a tally language in NP whose power index is at most 1=k, but for which search does not reduce to decision in polynomial time. Proof Sketch. We use the techniques developed by <ref> [BBFG91] </ref>. Let T be the tally set constructed in [BBFG91] such that search does not reduce to decision for T in polynomial time, unless NEE = EE. There exists a polynomial p such that for all x 2 T " n , some witness for x is of length p (n).
Reference: [BCGL89] <author> S. Ben-David, B. Chor, O. Goldreich, and M. Luby. </author> <title> On the theory of average-case complexity. </title> <booktitle> In Proc. 21st STOC, </booktitle> <pages> pages 204-216, </pages> <year> 1989. </year>
Reference-contexts: It was well known that by using small families H = f H k g of 5 universal 2 hash functions <ref> [CW79, BCGL89] </ref> h k : f 0; 1 g q ! f 0; 1 g k (1 k q + 1) cuts the number r (n) of random bits used to 2q (n).
Reference: [BD76] <author> A. Borodin and A. Demers. </author> <title> Some comments on functional self-reducibility and the NP hierarchy. </title> <type> Technical Report TR 76-284, </type> <institution> Cornell Univ. Comp. Sci. Dept., </institution> <year> 1976. </year>
Reference-contexts: The following is a straightforward extension of the standard notion of search reducing to decision in polynomial time <ref> [BD76, BBFG91, NOS93, HNOS93] </ref> to other time bounds t (n). Definition 4.1. Let L 2 NP and a time bound t (n) be given.
Reference: [BFLS91] <author> L. Babai, L. Fortnow, L. Levin, and M. Szegedy. </author> <title> Checking computations in polyloga-rithmic time. </title> <booktitle> In Proc. 23rd STOC, </booktitle> <pages> pages 21-31, </pages> <year> 1991. </year>
Reference-contexts: Our point is that by scaling down the size of the field used for basic arithmetic, and using multi-variable polynomials, one can achieve quasi-linear runtime. Our code is similar to those used in recent improvements of "holographic proof systems" <ref> [BFLS91, Sud92] </ref>, and is only inferior to that of [ABN + 92] in the number of random bits. Let be an alphabet of size 2 l . <p> Since r q 1 these monomials are all distinct, and they are all linearly independent, so the dimension is K = ( m+r r ). By the so-called Schwartz inequality [Sch80] (cf. <ref> [BFLS91, Sud92] </ref>), for every two distinct polynomials f and g over F of degree at most r, and for every I F , jf ~a 2 I m : f (~a ) = g (~a ) gj rjIj m1 : (1) With I = F , it follows that every two
Reference: [BG93] <author> J. Buss and J. Goldsmith. </author> <title> Nondeterminism within P. </title> <journal> SIAM J. Comp., </journal> <volume> 22 </volume> <pages> 560-572, </pages> <year> 1993. </year>
Reference-contexts: Related classes within P are studied by Buss and Goldsmith <ref> [BG93] </ref>. One theoretical difficulty with the concept of quasilinear time is that it appears not to share the degree of independence on particular machine models that makes polynomial time such a robust concept. <p> The case k = 1 of (d) is Schnorr's seminal result, and the higher cases follow quickly from this and (a). It is worth sketching Schnorr's construction (see also <ref> [BG93] </ref>): Take a time-t (n) DTM M which decides a witness predicate B (x; y) for the given language A 2 NQL.
Reference: [CR73] <author> S. Cook and R. Reckhow. </author> <title> Time bounded random access machines. </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 7 </volume> <pages> 354-375, </pages> <year> 1973. </year>
Reference-contexts: Gurevich and Shelah [GS89] showed that a wide variety of models related to the RAM under log-cost criterion <ref> [CR73] </ref> accept the same class of languages in quasilinear time|we call this class DNLT. They also showed that nondeterministic qlin 1 time for these machines, namely NNLT, equals NQL.
Reference: [CRS93] <author> S. Chari, P. Rohatgi, and A. Srinivasan. </author> <title> Randomness-optimal unique element isolation, with applications to perfect matching and related problems. </title> <booktitle> In Proc. 25th STOC, </booktitle> <pages> pages 458-467, </pages> <year> 1993. </year>
Reference-contexts: Section 3 shows that the randomized reduction from NP to parity given by Valiant and Vazirani [VV86] and used by Toda [Tod91], previously proved by constructions which run in quadratic time (see <ref> [VV86, Tod89, CRS93, Gup93] </ref>), can be made to run in time qlin . Our construction also markedly improves the number of random bits needed and the success probability, and uses error-correcting codes in an interesting manner first noted in [NN90]. <p> A related construction of <ref> [CRS93] </ref> achieves the same effect, still with quadratic runtime when q (n) = n. Gupta [Gup93] gives a randomized reduction to parity which achieves constant success probability 3/16 with only -(n) = q (n) nondeterministic moves, but still using q 2 -many random bits and quadratic time.
Reference: [CW79] <author> J. Carter and M. Wegman. </author> <title> Universal classes of hash functions. </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 18 </volume> <pages> 143-154, </pages> <year> 1979. </year>
Reference-contexts: It was well known that by using small families H = f H k g of 5 universal 2 hash functions <ref> [CW79, BCGL89] </ref> h k : f 0; 1 g q ! f 0; 1 g k (1 k q + 1) cuts the number r (n) of random bits used to 2q (n).
Reference: [GS89] <author> Y. Gurevich and S. Shelah. </author> <title> Nearly-linear time. </title> <booktitle> In Proceedings, Logic at Botik '89, volume 363 of LNCS, </booktitle> <pages> pages 108-118. </pages> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference-contexts: Related classes within P are studied by Buss and Goldsmith [BG93]. One theoretical difficulty with the concept of quasilinear time is that it appears not to share the degree of independence on particular machine models that makes polynomial time such a robust concept. Gurevich and Shelah <ref> [GS89] </ref> showed that a wide variety of models related to the RAM under log-cost criterion [CR73] accept the same class of languages in quasilinear time|we call this class DNLT. They also showed that nondeterministic qlin 1 time for these machines, namely NNLT, equals NQL. <p> Definition 2.3. The quasilinear time hierarchy is defined by: ql ql ql and for k 1, ql ql ql ql ql k1 : Also QLH := [ 1 k=0 k , and QLSPACE := DSPACE [qlin]. By the results of <ref> [GS89] </ref>, all these classes from NQL upward are the same for Turing machines and log-cost RAMs.
Reference: [Gup93] <author> S. Gupta. </author> <title> On isolating an odd number of elements and its applications to complexity theory. </title> <type> Technical Report OSU-CISRC-6/93-TR24, </type> <institution> Dept. of Comp. Sci., Ohio State University, </institution> <year> 1993. </year>
Reference-contexts: Section 3 shows that the randomized reduction from NP to parity given by Valiant and Vazirani [VV86] and used by Toda [Tod91], previously proved by constructions which run in quadratic time (see <ref> [VV86, Tod89, CRS93, Gup93] </ref>), can be made to run in time qlin . Our construction also markedly improves the number of random bits needed and the success probability, and uses error-correcting codes in an interesting manner first noted in [NN90]. <p> A related construction of [CRS93] achieves the same effect, still with quadratic runtime when q (n) = n. Gupta <ref> [Gup93] </ref> gives a randomized reduction to parity which achieves constant success probability 3/16 with only -(n) = q (n) nondeterministic moves, but still using q 2 -many random bits and quadratic time.
Reference: [HNOS93] <author> E. Hemaspaandra, A. Naik, M. Ogiwara, and A. Selman. </author> <title> P-selective sets, and reducing search to decision versus self-reducibility. </title> <type> Technical Report 93-21, </type> <institution> Computer Science Dept., SUNY at Buffalo, Buffalo, </institution> <address> NY 14260, </address> <year> 1993. </year>
Reference-contexts: The following is a straightforward extension of the standard notion of search reducing to decision in polynomial time <ref> [BD76, BBFG91, NOS93, HNOS93] </ref> to other time bounds t (n). Definition 4.1. Let L 2 NP and a time bound t (n) be given.
Reference: [HS90] <author> H. Hunt III and R. Stearns. </author> <title> The complexity of very simple Boolean formulas, with applications. </title> <journal> SIAM J. Comp., </journal> <volume> 19 </volume> <pages> 44-70, </pages> <year> 1990. </year>
Reference: [HU79] <author> J. Hopcroft and J. Ullman. </author> <title> Introduction to Automata Theory, Languages, and Computation. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1979. </year>
Reference-contexts: Let QBF stand for [ k B k . While QBF is in alternating qlin space, it is not known to be in deterministic qlin space. Moreover, the standard reduction from a language A 2 PSPACE to QBF in <ref> [HU79] </ref> has a quadratic blowup in size (if A is in linear space). These apparent differences from PSPACE are connected to the issue of whether 4 Savitch's simulation of nondeterministic space s (n) = (log n) by deterministic space O (s (n) 2 ) must have quadratic blowup. <p> The proof of (a) uses Schnorr's construction and Lemma 2.1, and in fact gives NQL QBF = DQL [QBF ]. Statement (b) holds for the standard oracle B separating NP B from P B in <ref> [HU79] </ref>. The result of [PZ83] that P P = P also carries over because of the quasilinear bound on the total length of all queries in an oracle computation: QL QL = QL.
Reference: [HW89] <author> S. Homer and J. Wang. </author> <title> Absolute results concerning one-way functions and their applications. </title> <journal> Math. Sys. Thy., </journal> <volume> 22 </volume> <pages> 21-35, </pages> <year> 1989. </year>
Reference-contexts: Finally, it is interesting to ask whether there are length-preserving 1-1 functions f which are computable in qlin time but not invertible in qlin time. Homer and Wang <ref> [HW89] </ref> construct, for any k 1, functions computable in quadratic time which are not invertible in time O (n k ), but their methods seem not to apply for qlin time or f length-preserving.
Reference: [JLJH92] <author> J. Justesen, K. Larsen, H.E. Jensen, and T. Hoholdt. </author> <title> Fast decoding of codes from algebraic plane curves. </title> <journal> IEEE Trans. Info. Thy., </journal> <volume> 38(1) </volume> <pages> 111-119, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: Families of codes are known for which R (as well as ffi) stays bounded below by a constant; such (families of) codes are called good . Good codes require only q +O (1) random bits in the above construction. The codes in <ref> [Jus72, TV91, ABN + 92, JLJH92, She93] </ref> are good. However, we do not know of any good codes which give quasi-linear runtime in the above construction. 4.
Reference: [Jus72] <author> J. Justesen. </author> <title> A class of constructive asymptotically good algebraic codes. </title> <journal> IEEE Trans. Info. Thy., </journal> <volume> IT-18:652-656, </volume> <month> September </month> <year> 1972. </year>
Reference-contexts: The idea of using error-correcting codes is mentioned by Naor and Naor [NN93] and ascribed to Bruck, referring the reader to [ABN + 92] for details. However, the construction in [ABN + 92] uses a code of Justesen (see <ref> [Jus72, MS77] </ref> whose implementation in our setting seems to require exponentiation of field elements of length polynomial in n, which is not known to be computable in (randomized) quasilinear time (cf. [AMV88, Sti90]). <p> Families of codes are known for which R (as well as ffi) stays bounded below by a constant; such (families of) codes are called good . Good codes require only q +O (1) random bits in the above construction. The codes in <ref> [Jus72, TV91, ABN + 92, JLJH92, She93] </ref> are good. However, we do not know of any good codes which give quasi-linear runtime in the above construction. 4.
Reference: [JY90] <author> D. Joseph and P. Young. </author> <title> Self-reducibility: the effects of internal structure on computational complexity. </title> <editor> In A. Selman, editor, </editor> <booktitle> Complexity Theory Retrospective, </booktitle> <pages> pages 82-107. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: Next, we study the property of reducing search to decision for NP sets. While it is well-known that search reduces to decision for SAT in quadratic time (cf. <ref> [Sel88, JY90] </ref>), we show that search does not reduce to decision for SAT in quasilinear time, unless all of NP is contained in DTIME [2 polylogn ].
Reference: [Ko82] <author> K. Ko. </author> <title> Some observations on the probabilistic algorithms and NP-hard problems. </title> <journal> Inf. Proc. Lett., </journal> <volume> 14 </volume> <pages> 39-43, </pages> <year> 1982. </year>
Reference-contexts: The result of [PZ83] that P P = P also carries over because of the quasilinear bound on the total length of all queries in an oracle computation: QL QL = QL. However, it is unclear whether the theorem BPP BPP = BPP <ref> [Ko82] </ref> carries over, because the amplification of success probability to 12 polylog obtainable for BQL seems insufficient.
Reference: [LL76] <author> R. Ladner and N. Lynch. </author> <title> Relativization of questions about log-space computability. </title> <journal> Math. Sys. Thy., </journal> <volume> 10 </volume> <pages> 19-32, </pages> <year> 1976. </year>
Reference-contexts: We use the same terms in the context of NQL and DQL. We note the following provision about oracle Turing machines M made standard in [WW86] (see also <ref> [LL76, Wra77, Wra78] </ref>): Whenever M enters its query state q ? with the 2 query string z on its query tape, z is erased when the oracle gives its answer.
Reference: [LV90] <author> M. Li and P. Vitanyi. </author> <title> Applications of Kolmogorov complexity in the theory of computation. </title> <editor> In A. Selman, editor, </editor> <booktitle> Complexity Theory Retrospective, </booktitle> <pages> pages 147-203. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990). </year> <month> 12 </month>
Reference-contexts: Then the following is a description of f on f 0; 1 g n : * The finite control of M , plus finite descriptions of the function g (n) and "this discus sion" (see <ref> [LV90] </ref>).
Reference: [MS77] <author> F. MacWilliams and N. Sloane. </author> <title> The Theory of Error-Correcting Codes. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1977. </year>
Reference-contexts: The idea of using error-correcting codes is mentioned by Naor and Naor [NN93] and ascribed to Bruck, referring the reader to [ABN + 92] for details. However, the construction in [ABN + 92] uses a code of Justesen (see <ref> [Jus72, MS77] </ref> whose implementation in our setting seems to require exponentiation of field elements of length polynomial in n, which is not known to be computable in (randomized) quasilinear time (cf. [AMV88, Sti90]).
Reference: [NN90] <author> J. Naor and M. Naor. </author> <title> Small-bias probability spaces. </title> <booktitle> In Proc. 22nd STOC, </booktitle> <pages> pages 213-223, </pages> <year> 1990. </year>
Reference-contexts: Our construction also markedly improves the number of random bits needed and the success probability, and uses error-correcting codes in an interesting manner first noted in <ref> [NN90] </ref>. Section 4 studies what may be the major difference between polynomial and quasilinear time: the equivalence between functions and sets seems no longer to hold. It has long been known that any function can be computed in polynomial time using some set as an oracle. <p> Gupta [Gup93] gives a randomized reduction to parity which achieves constant success probability 3/16 with only -(n) = q (n) nondeterministic moves, but still using q 2 -many random bits and quadratic time. The first construction of Naor and Naor <ref> [NN90, NN93] </ref> boils down to the following idea in this setting: N flips 2q + 2 coins to determine functions h k 2 H k for all k, and then flips q + 1 more coins to form u 2 f 0; 1 g q+1 .
Reference: [NN93] <author> J. Naor and M. Naor. </author> <title> Small-bias probability spaces: efficient constructions and applications. </title> <journal> SIAM J. Comp., </journal> <volume> 22 </volume> <pages> 838-856, </pages> <year> 1993. </year>
Reference-contexts: Gupta [Gup93] gives a randomized reduction to parity which achieves constant success probability 3/16 with only -(n) = q (n) nondeterministic moves, but still using q 2 -many random bits and quadratic time. The first construction of Naor and Naor <ref> [NN90, NN93] </ref> boils down to the following idea in this setting: N flips 2q + 2 coins to determine functions h k 2 H k for all k, and then flips q + 1 more coins to form u 2 f 0; 1 g q+1 . <p> Our construction achieves better constants than this, and is better by an order of magnitude in (randomness or number of nondeterministic moves) and running time than all of the previous ones. The idea of using error-correcting codes is mentioned by Naor and Naor <ref> [NN93] </ref> and ascribed to Bruck, referring the reader to [ABN + 92] for details.
Reference: [NOS93] <author> A. Naik, M. Ogiwara, and A. Selman. </author> <title> P-selective sets, and reducing search to decision vs. self-reducibility. </title> <booktitle> In Proc. 8th Structures, </booktitle> <pages> pages 52-64, </pages> <year> 1993. </year>
Reference-contexts: The following is a straightforward extension of the standard notion of search reducing to decision in polynomial time <ref> [BD76, BBFG91, NOS93, HNOS93] </ref> to other time bounds t (n). Definition 4.1. Let L 2 NP and a time bound t (n) be given.
Reference: [PZ83] <author> C. H. Papadimitriou and S. Zachos. </author> <title> Two remarks on the power of counting. </title> <booktitle> In The 6th GI Conference on Theoretical Computer Science, Lecture Notes in Computer Science No. </booktitle> <volume> 145, </volume> <pages> pages 269-276. </pages> <publisher> Springer-Verlag, </publisher> <year> 1983. </year>
Reference-contexts: The proof of (a) uses Schnorr's construction and Lemma 2.1, and in fact gives NQL QBF = DQL [QBF ]. Statement (b) holds for the standard oracle B separating NP B from P B in [HU79]. The result of <ref> [PZ83] </ref> that P P = P also carries over because of the quasilinear bound on the total length of all queries in an oracle computation: QL QL = QL.
Reference: [Rab80] <author> M. Rabin. </author> <title> Probabilistic algorithms in finite fields. </title> <journal> SIAM J. Comp., </journal> <pages> pages 273-280, </pages> <year> 1980. </year>
Reference-contexts: Step 10 dominates the running time. To multiply two polynomials of degree k 1 over GF (2) and reduce them modulo ff in the field GF (2 k ) takes time t 1 = O (k log k loglog k) on standard Turing machine models (see [AHU74] and <ref> [Rab80] </ref>). The time to compute a i in GF (2 k ) where i n is t 2 = O (log n 2k log k loglog k) via repeated squaring.
Reference: [Sch76] <author> C. Schnorr. </author> <title> The network complexity and the Turing machine complexity of finite functions. </title> <journal> Acta Informatica, </journal> <volume> 7 </volume> <pages> 95-107, </pages> <year> 1976. </year>
Reference-contexts: Quasi-linear time, namely time qlin := n (log n) O (1) , largely avoids this objection to the size of the exponent of n. Let DQL and NQL stand for time qlin on deterministic and nondeterministic Turing machines. Schnorr <ref> [Sch76, Sch78] </ref> showed that SAT is complete for NQL under DQL many-one reductions ( ql m ).
Reference: [Sch78] <author> C. Schnorr. </author> <title> Satisfiability is quasilinear complete in NQL. </title> <journal> J. ACM, </journal> <volume> 25 </volume> <pages> 136-145, </pages> <year> 1978. </year>
Reference-contexts: Quasi-linear time, namely time qlin := n (log n) O (1) , largely avoids this objection to the size of the exponent of n. Let DQL and NQL stand for time qlin on deterministic and nondeterministic Turing machines. Schnorr <ref> [Sch76, Sch78] </ref> showed that SAT is complete for NQL under DQL many-one reductions ( ql m ).
Reference: [Sch80] <author> J.T. Schwartz. </author> <title> Fast probabilistic algorithms for polynomial identities. </title> <journal> J. ACM, </journal> <volume> 27 </volume> <pages> 701-717, </pages> <year> 1980. </year>
Reference-contexts: Since r q 1 these monomials are all distinct, and they are all linearly independent, so the dimension is K = ( m+r r ). By the so-called Schwartz inequality <ref> [Sch80] </ref> (cf. [BFLS91, Sud92]), for every two distinct polynomials f and g over F of degree at most r, and for every I F , jf ~a 2 I m : f (~a ) = g (~a ) gj rjIj m1 : (1) With I = F , it follows that
Reference: [Sel88] <author> A. Selman. </author> <title> Natural self-reducible sets. </title> <journal> SIAM J. Comp., </journal> <volume> 17 </volume> <pages> 989-996, </pages> <year> 1988. </year>
Reference-contexts: Next, we study the property of reducing search to decision for NP sets. While it is well-known that search reduces to decision for SAT in quadratic time (cf. <ref> [Sel88, JY90] </ref>), we show that search does not reduce to decision for SAT in quasilinear time, unless all of NP is contained in DTIME [2 polylogn ]. <p> However, we do not know of any good codes which give quasi-linear runtime in the above construction. 4. Search Versus Decision in Quasilinear Time The classical method of computing partial, multivalued functions using sets as oracles is the prefix-set method (cf. <ref> [Sel88] </ref> ). To illustrate, let f be an arbitrary length-preserving, partial function from fl to fl . Define: L f = fx#w j w is a prefix of some value of f (x)g: Clearly f is computable in quadratic time using L f as an oracle.
Reference: [SH86] <author> R. Stearns and H. Hunt III. </author> <title> On the complexity of the satisfiability problem and the structure of NP. </title> <type> Technical Report 86-21, </type> <institution> Dept. of Comp. Sci., SUNY at Albany, </institution> <year> 1986. </year>
Reference-contexts: Let DQL and NQL stand for time qlin on deterministic and nondeterministic Turing machines. Schnorr [Sch76, Sch78] showed that SAT is complete for NQL under DQL many-one reductions ( ql m ). Together with Stearns and Hunt <ref> [SH86, SH90] </ref>, it was shown that many known NP complete problems also belong to NQL and are complete for NQL under ql m , so that the question NQL ? = DQL takes on much the same shape as NP ? = P.
Reference: [SH90] <author> R. Stearns and H. Hunt III. </author> <title> Power indices and easier hard problems. </title> <journal> Math. Sys. Thy., </journal> <volume> 23 </volume> <pages> 209-225, </pages> <year> 1990. </year>
Reference-contexts: Let DQL and NQL stand for time qlin on deterministic and nondeterministic Turing machines. Schnorr [Sch76, Sch78] showed that SAT is complete for NQL under DQL many-one reductions ( ql m ). Together with Stearns and Hunt <ref> [SH86, SH90] </ref>, it was shown that many known NP complete problems also belong to NQL and are complete for NQL under ql m , so that the question NQL ? = DQL takes on much the same shape as NP ? = P. <p> We extend our techniques to show that the quadratic bound on reducing search to decision for SAT is optimal, unless SAT can be recognized in subexponential time. Finally, we establish an interesting connection between the time taken for reducing search to decision and the power index <ref> [SH90] </ref> of a language. 2. Notation and Basic Results Let := f 0; 1 g. <p> Corollary 4.4. If there exists an * &gt; 0 such that search reduces to decision for SAT in DTIME [n 1+* ], then SAT 2 DTIME [2 n * ], and also NP DTIME [2 n * ]. Stearns and Hunt <ref> [SH90] </ref> define a language L 2 NP to have power index * if * is the infimum of all ffi such that L 2 DTIME [2 n ffi ]. They classify familiar NP-complete problems according to known bounds on their power indices, and conjecture that SAT has power index 1.
Reference: [She93] <author> B.-Z. Shen. </author> <title> A Justesen construction of binary concatenated codes than asymptotically meet the Zyablov bound for low rate. </title> <journal> IEEE Trans. Info. Thy., </journal> <volume> 39(1) </volume> <pages> 239-242, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Families of codes are known for which R (as well as ffi) stays bounded below by a constant; such (families of) codes are called good . Good codes require only q +O (1) random bits in the above construction. The codes in <ref> [Jus72, TV91, ABN + 92, JLJH92, She93] </ref> are good. However, we do not know of any good codes which give quasi-linear runtime in the above construction. 4.
Reference: [Sti90] <author> D. Stinson. </author> <title> Some observations on parallel algorithms for fast exponentiation in GF(2 n ). SIAM J. </title> <journal> Comp., </journal> <volume> 19 </volume> <pages> 711-717, </pages> <year> 1990. </year>
Reference-contexts: However, the construction in [ABN + 92] uses a code of Justesen (see [Jus72, MS77] whose implementation in our setting seems to require exponentiation of field elements of length polynomial in n, which is not known to be computable in (randomized) quasilinear time (cf. <ref> [AMV88, Sti90] </ref>). Our point is that by scaling down the size of the field used for basic arithmetic, and using multi-variable polynomials, one can achieve quasi-linear runtime.
Reference: [Sto77] <author> L. Stockmeyer. </author> <title> The polynomial time hierarchy. </title> <journal> Theor. Comp. Sci., </journal> <volume> 3 </volume> <pages> 1-22, </pages> <year> 1977. </year>
Reference-contexts: With this in hand it is straightforward to show that the most fundamental properties of the polynomial hierarchy (from <ref> [Sto77, Wra77] </ref>) carry over to QLH.
Reference: [Sud92] <author> M. Sudan. </author> <title> Efficient checking of polynomials and proofs and the hardness of approximation problems. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <year> 1992. </year>
Reference-contexts: Our point is that by scaling down the size of the field used for basic arithmetic, and using multi-variable polynomials, one can achieve quasi-linear runtime. Our code is similar to those used in recent improvements of "holographic proof systems" <ref> [BFLS91, Sud92] </ref>, and is only inferior to that of [ABN + 92] in the number of random bits. Let be an alphabet of size 2 l . <p> Since r q 1 these monomials are all distinct, and they are all linearly independent, so the dimension is K = ( m+r r ). By the so-called Schwartz inequality [Sch80] (cf. <ref> [BFLS91, Sud92] </ref>), for every two distinct polynomials f and g over F of degree at most r, and for every I F , jf ~a 2 I m : f (~a ) = g (~a ) gj rjIj m1 : (1) With I = F , it follows that every two
Reference: [Tod89] <author> S. </author> <title> Toda. </title> <booktitle> On the computational power of PP and P. In Proc. 30th FOCS, </booktitle> <pages> pages 514-519, </pages> <year> 1989. </year>
Reference-contexts: Section 3 shows that the randomized reduction from NP to parity given by Valiant and Vazirani [VV86] and used by Toda [Tod91], previously proved by constructions which run in quadratic time (see <ref> [VV86, Tod89, CRS93, Gup93] </ref>), can be made to run in time qlin . Our construction also markedly improves the number of random bits needed and the success probability, and uses error-correcting codes in an interesting manner first noted in [NN90].
Reference: [Tod91] <author> S. </author> <title> Toda. PP is as hard as the polynomial-time hierarchy. </title> <journal> SIAM J. Comp., </journal> <volume> 20 </volume> <pages> 865-877, </pages> <year> 1991. </year>
Reference-contexts: Section 3 shows that the randomized reduction from NP to parity given by Valiant and Vazirani [VV86] and used by Toda <ref> [Tod91] </ref>, previously proved by constructions which run in quadratic time (see [VV86, Tod89, CRS93, Gup93]), can be made to run in time qlin . <p> For similar reasons we do not know whether Toda's lemma P [BP [C]] BP [ P [C]] (for C closed under polynomial-time majority truth-table reductions), which was instrumental in proving PH BP [ P] <ref> [Tod91] </ref>, carries over in the form QL [BQL [C]] BQL [ QL [C]]. <p> which flips coins to form just w, guesses strings y 0 ; : : : ; y q , and achieves for all x, x 2 A =) Pr [#acc (N 0 x =2 A =) Pr [#acc (N 0 In symbols, this implies that NP RP [ P] (cf. <ref> [Tod91] </ref>). However, in the case A = SAT addressed by [VV86], with q (n) = n, N 0 runs in quadratic time|in fact, N 0 flips quadratically many coins and makes quadratically many nondeterministic moves.
Reference: [TV91] <author> M. Tsfasman and S. Vladut. </author> <title> Algebraic-Geometric Codes, volume 58 of Mathematics and Its Applications (Soviet Series). </title> <publisher> Kluwer Academic, </publisher> <address> Dordrecht, </address> <year> 1991. </year>
Reference-contexts: Families of codes are known for which R (as well as ffi) stays bounded below by a constant; such (families of) codes are called good . Good codes require only q +O (1) random bits in the above construction. The codes in <ref> [Jus72, TV91, ABN + 92, JLJH92, She93] </ref> are good. However, we do not know of any good codes which give quasi-linear runtime in the above construction. 4.
Reference: [VV86] <author> L. Valiant and V. Vazirani. </author> <title> NP is as easy as detecting unique solutions. </title> <journal> Theor. Comp. Sci., </journal> <volume> 47 </volume> <pages> 85-93, </pages> <year> 1986. </year>
Reference-contexts: Section 3 shows that the randomized reduction from NP to parity given by Valiant and Vazirani <ref> [VV86] </ref> and used by Toda [Tod91], previously proved by constructions which run in quadratic time (see [VV86, Tod89, CRS93, Gup93]), can be made to run in time qlin . <p> Section 3 shows that the randomized reduction from NP to parity given by Valiant and Vazirani [VV86] and used by Toda [Tod91], previously proved by constructions which run in quadratic time (see <ref> [VV86, Tod89, CRS93, Gup93] </ref>), can be made to run in time qlin . Our construction also markedly improves the number of random bits needed and the success probability, and uses error-correcting codes in an interesting manner first noted in [NN90]. <p> However we are able to show, in the next section, that the other instrumental lemma, namely NP BP [ P] <ref> [VV86] </ref>, does carry over by a new construction, where all previous known constructions were quadratic or worse. 3. <p> Valiant and Vazirani <ref> [VV86] </ref> constructed a probabilistic NTM N which on any input x of length n first flips q 2 -many coins to form q-many vectors w 1 ; : : : ; w q each of length q. N also flips coins to form a number j, 0 j q. <p> Clearly whenever x =2 A, for all w and i, the number #acc (N w;j ; x) of accepting computations of N w;j on input x is zero. The basic lemma of <ref> [VV86] </ref> states that whenever x 2 A, Pr w [(9j)#acc (N w;j ; x) = 1] 1=4. In particular, Pr w;j [#acc (N w;j ; x) is odd] 1=4 (q + 1). <p> However, in the case A = SAT addressed by <ref> [VV86] </ref>, with q (n) = n, N 0 runs in quadratic time|in fact, N 0 flips quadratically many coins and makes quadratically many nondeterministic moves.
Reference: [Wra77] <author> C. Wrathall. </author> <title> Complete sets and the polynomial-time hierarchy. </title> <journal> Theor. Comp. Sci., </journal> <volume> 3 </volume> <pages> 23-33, </pages> <year> 1977. </year>
Reference-contexts: We use the same terms in the context of NQL and DQL. We note the following provision about oracle Turing machines M made standard in [WW86] (see also <ref> [LL76, Wra77, Wra78] </ref>): Whenever M enters its query state q ? with the 2 query string z on its query tape, z is erased when the oracle gives its answer. <p> With this in hand it is straightforward to show that the most fundamental properties of the polynomial hierarchy (from <ref> [Sto77, Wra77] </ref>) carry over to QLH.
Reference: [Wra78] <author> C. Wrathall. </author> <title> Rudimentary predicates and relative computation. </title> <journal> SIAM J. Comp., </journal> <volume> 7 </volume> <pages> 194-209, </pages> <year> 1978. </year>
Reference-contexts: We use the same terms in the context of NQL and DQL. We note the following provision about oracle Turing machines M made standard in [WW86] (see also <ref> [LL76, Wra77, Wra78] </ref>): Whenever M enters its query state q ? with the 2 query string z on its query tape, z is erased when the oracle gives its answer.
Reference: [WW86] <author> K. Wagner and G. Wechsung. </author> <title> Computational Complexity. </title> <address> D. </address> <publisher> Reidel, </publisher> <year> 1986. </year> <month> 13 </month>
Reference-contexts: However, currently it appears that DNLT is larger than DQL, and that for all d &gt; 1, Turing machines with d-dimensional tapes accept more languages in time qlin than do TMs with (d 1)-dimensional tapes (cf. <ref> [WW86] </ref>). Our constructions all work for DQL as well as DNLT. <p> We use the same terms in the context of NQL and DQL. We note the following provision about oracle Turing machines M made standard in <ref> [WW86] </ref> (see also [LL76, Wra77, Wra78]): Whenever M enters its query state q ? with the 2 query string z on its query tape, z is erased when the oracle gives its answer.
References-found: 47

