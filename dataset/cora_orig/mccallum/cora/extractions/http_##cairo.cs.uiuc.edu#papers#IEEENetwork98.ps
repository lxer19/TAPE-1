URL: http://cairo.cs.uiuc.edu/papers/IEEENetwork98.ps
Refering-URL: http://cairo.cs.uiuc.edu/papers.html
Root-URL: http://www.cs.uiuc.edu
Email: klarag@cs.uiuc.edu  
Phone: phone: (217) 244-6624, fax: (217) 244-6869.  
Title: An Overview of Quality-of-Service Routing for the Next Generation High-Speed Networks: Problems and Solutions  
Author: Shigang Chen, Klara Nahrstedt 
Note: This work was supported by the Airforce grant under contract number F30602-97-2-0121 and the National Science Foundation Career grant under contract number NSF CCR 96-23867. Please address all correspondences to Klara Nahrstedt  
Address: fs-chen5,  Urbana, IL 61801,  
Affiliation: Department of Computer Science University of Illinois at Urbana-Champaign  at Department of Computer Science, University of Illinois at Urbana-Champaign,  
Abstract: The up-coming Gbps high-speed networks are expected to support a wide range of communication-intensive, real-time multimedia applications. The quality-of-service (QoS) requirements for the timely delivery of digitized audio-visual information raise new challenges for the development of integrated-service broadband networks. One of the key issues is QoS routing, which allows selecting network routes with sufficient resources for requested QoS parameters. The goal of QoS routing solutions is two-folded: satisfying the QoS requirements for every admitted connection and achieving global efficiency in resource utilization. In this paper we give an overview of the QoS routing problem as well as existing solutions. Many unicast/multicast QoS routing algorithms were published recently, and they work with a variety of QoS requirements and resource constraints. Overall they can be partitioned into three broad classes: (1) source routing, (2) distributed routing and (3) hierarchical routing algorithms, based on different network state models. We present the strengths and weaknesses of different routing strategies, outline the challenges, discuss basic algorithms in each routing class, classify and compare them, and point out possible future directions in the QoS routing area. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Awerbuch, Y. Azar, S. Plotkin, and O. Waarts. </author> <title> Throughput-competitive on-line routing. </title> <booktitle> Proceedings of 34th Annual Symposium on Foundations of Computer Science, </booktitle> <address> Palo Alto, California, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Let C be the cost requirement and x be a small integer. The algorithm first maps the cost of every link to an integer bounded by x + 1. Real numbers in [0; C] are mapped into integers in [0::x], real numbers in <ref> [C; 1] </ref> are mapped to x + 1, and the cost bound C is mapped to x. See Figure 7 for an example. <p> The performance of the algorithm is tunable since choosing a larger x results in a larger probability of finding a feasible path and a larger overhead. Awerbuch et al algorithm <ref> [1] </ref>: Awerbuch et al proposed a throughput-competitive routing algorithm for bandwidth-constrained connections. The algorithm tries to maximize the amortized (average) throughput of the network over time. It combines the functions of admission control and routing. Every link is associated with a cost function that is exponential to the bandwidth utilization.
Reference: [2] <author> B. Awerbuch, Y. Azar, S. Plotkin, and O. Waarts. </author> <title> Competitive routing of virtual circuits with unknown duration. </title> <booktitle> the 5th ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <month> January </month> <year> 1994. </year>
Reference-contexts: Competitive routing for connections with unknown duration was studied in <ref> [2] </ref>. A survey for competitive routing algorithms was done by Plotkin [40]. Summary: All the above algorithms require a global state to be maintained at every node. Most algorithms transform the routing problem to a shortest path problem and then solve it by Dijkstra's or Bellman-Ford algorithm.
Reference: [3] <author> B. Awerbuch, Y. Du, B. Khan, and Y. Shavitt. </author> <title> Routing through teranode networks with topology aggregation. </title> <address> ISCC'98, Athens, Greece, </address> <month> June </month> <year> 1998. </year>
Reference-contexts: An ancestor of a node is either its parent or an ancestor's parent. We have used the simplest topology aggregation, which abstracts a group by a single logical node. There are other types of aggregation using different simple topologies to replace a group, and their performance was studied in <ref> [3] </ref>. 3 4 Each physical node maintains an aggregated network im-age, which stores different portions of the network in different details. More specifically, the image is derived by starting from the highest hierarchy level and recursively replacing the ancestor of the node with the corresponding lower-level group. <p> However, loops generally make the routing fail because the distance vectors do not provide sufficient information for an alternative path. 5.3 Strength and weaknesses of hierarchical routing The hierarchical routing has long been used to cope with the scalability problem of source routing in large internetworks <ref> [3, 4] </ref>. The PNNI (Private Network-Network Interface) [16] standard for routing in ATM networks is also hierarchical. The hierarchical routing scales well because each node only maintains a partial global state where groups of nodes are aggregated into logical nodes.
Reference: [4] <author> J. Behrens and J. J. Garcia-Luna-Aceves. </author> <title> Hierarchical routing using link vectors. </title> <journal> IEEE INFOCOM'98, </journal> <month> March 29 - April 2 </month> <year> 1998. </year> <month> 22 </month>
Reference-contexts: However, loops generally make the routing fail because the distance vectors do not provide sufficient information for an alternative path. 5.3 Strength and weaknesses of hierarchical routing The hierarchical routing has long been used to cope with the scalability problem of source routing in large internetworks <ref> [3, 4] </ref>. The PNNI (Private Network-Network Interface) [16] standard for routing in ATM networks is also hierarchical. The hierarchical routing scales well because each node only maintains a partial global state where groups of nodes are aggregated into logical nodes.
Reference: [5] <author> R. E. Bellman. </author> <title> Dynamic Programming. </title> <publisher> Princeton Uni--versity Press, </publisher> <address> Princeton, N.J., </address> <year> 1957. </year>
Reference-contexts: Such a path is called the widest path. The other problem is called link-constrained routing, e.g., bandwidth-constrained routing, which is to find a path whose bottleneck bandwidth is above a required value. The link-optimization routing problem can be solved by a slightly modified Dijkstra's (or Bellman-Ford <ref> [5] </ref>) algorithm [14]. The link-constrained routing problem can be easily reduced to the link-optimization problem. For other QoS metrics such as delay, delay jitter and cost, the state of a path is determined by the combined state over all links of the path.
Reference: [6] <author> J. Bennett and H. Zhang. </author> <title> Hierarchical packet fair queueing algorithms. </title> <booktitle> ACM SIGCOMM'96, </booktitle> <year> 1996. </year>
Reference-contexts: Then, the shortest path in terms of delay is found. The path is feasible if and only if it satisfies the delay constraint. Ma-Steenkiste algorithm [32]: Ma and Steenkiste showed that when a class of WFQ-like (Weighted Fair Queueing) scheduling algorithms <ref> [6, 13, 19, 54] </ref> are used, the end-to-end delay, delay-jitter, and buffer space bounds are not independent but are functions of the reserved bandwidth, the selected path and the traffic characteristics.
Reference: [7] <author> J.-Y. Le Boudec and T. Przygienda. </author> <title> A route pre-computation algorithm for integrated services networks. </title> <journal> Journal of Network and Systems Management, </journal> <volume> 3(4) </volume> <pages> 427-449, </pages> <year> 1995. </year>
Reference-contexts: All the 13 above algorithms is executed at connection arrival on a per-connection basis, which may cause the overall compuational overhead excessively high. Path precomputation and caching were studied to make a tradeoff between processing overhead and the routing performance <ref> [7, 24, 39, 46] </ref>. 6.2 Distributed routing algorithms Wang-Crowcroft algorithm [52]: Wang and Crowcroft proposed a hop-by-hop distributed routing scheme, in which every node pre-computes a forwarding entry for every possible destination. The forwarding entry, which is updated periodically, stores the next hop on the routing path to the destination.
Reference: [8] <author> S. Chen and K. Nahrstedt. </author> <title> Distributed qos routing. </title> <type> Tech. Report UIUCDCS-R-97-2017, </type> <institution> Department of Computer Science, University of Illinois at Urbana-Champaign, </institution> <month> July </month> <year> 1997. </year>
Reference-contexts: As networks grow large, the communication, storage and computation overhead grow accordingly. Reducing the updating frequency does not solve the problem because the precision of the global state will decrease. Distributed and hierarchical algorithms offer solutions for the scalability problem. In particular, the distributed algorithm based on selective probing <ref> [8] </ref> uses only local states, and no shortest-path computation is conducted at a single node. The ticket-based probing algorithm [8] works with imprecise state information, which allows relative infrequent state updates. The hierarchical routing provides a clean solution to the scalability problem. <p> Distributed and hierarchical algorithms offer solutions for the scalability problem. In particular, the distributed algorithm based on selective probing <ref> [8] </ref> uses only local states, and no shortest-path computation is conducted at a single node. The ticket-based probing algorithm [8] works with imprecise state information, which allows relative infrequent state updates. The hierarchical routing provides a clean solution to the scalability problem. It maintains an aggregate global state whose size is logarithmic to the network size if the (logical) nodes are clustered into groups with roughly uniform sizes.
Reference: [9] <author> S. Chen and K. Nahrstedt. </author> <title> Distributed quality-of-service routing in high-speed networks based on selective probing. </title> <type> Technical Report, </type> <institution> University of Illinois at Urbana-Champaign, Department of Computer Science, </institution> <year> 1998. </year>
Reference-contexts: Some flooding-based algorithms do not require any global state to be maintained. The routing decision and optimization is done entirely based on the local states <ref> [9, 47] </ref>. The distributed routing algorithms which depend on the global state share more or less the same problems of the source routing algorithms. The distributed algorithms which do not need any global state tend to send more messages. <p> least-cost r. distributed O (v 3 ) global O (v 3 ) (6) Sun-Landgendorfer [50] delay-constrained least-cost r. distributed O (v) global O (v) Cidon et al [11] generic r. (3) distributed O (e) global O (e) (7) Shin-Chou algorithm [47] delay-constrained r. distributed O (e) local O (e) Chen-Nahrstedt <ref> [9] </ref> generic r. (3) distributed O (e) local O (e) PNNI [16] generic r. (3) hierarchical polynomial (5) aggregated O (v) (*) v is the number of nodes and e is the number of edges. (**) After a source routing algorithm selects a path, a control message needs to be sent <p> source exponential (2) global Zero Zhu et al [56] delay-constrained least-cost r. source O (kv 3 logv) global Zero Rouskas-Baldine [42] delay-constrained least-cost r. source O (klgv 4 ) (3) global Zero Kompella et al [26] delay-constrained least-cost r. distributed O (gv 3 ) global O (v 3 ) Chen-Nahrstedt <ref> [9] </ref> generic r. distributed O (ge) local O (e) (*) v is the number of nodes, e is the number of edges, and g is the number of destinations. (**) After a source routing algorithm constructs a multicast tree, a control message needs to be sent down the tree to establish <p> Another flooding-based routing algorithm was proposed by Hou [22] to route virtual circuits with delay requirements in ATM networks. Chen-Nahrstedt algorithm <ref> [9] </ref>: 1) selective probing Chen and Nahrstedt proposed a distributed routing framework based on selective probing. After a connection request arrives, probes are flooded selectively along those 15 paths which satisfy QoS and optimization requirements. <p> In the third phase, an ADD message is sent to add l to the tree. This procedure continues until every destination is included in the tree. The above algorithm requires intensive multi-pass message exchange, which results in a worst-case message complexity of O (v 3 ). Chen-Nahrstedt algorithm <ref> [9] </ref>: Chen and Nahrstedt extended their distributed unicast routing algorithms [9] (Section 6.2) for multicast routing. Probes (routing messages) are flooded from the source toward the destinations of a multicast group. <p> This procedure continues until every destination is included in the tree. The above algorithm requires intensive multi-pass message exchange, which results in a worst-case message complexity of O (v 3 ). Chen-Nahrstedt algorithm <ref> [9] </ref>: Chen and Nahrstedt extended their distributed unicast routing algorithms [9] (Section 6.2) for multicast routing. Probes (routing messages) are flooded from the source toward the destinations of a multicast group. A probe proceeds along a path only if the path leads to at least one destination and has sufficient resources to guarantee the end-to-end QoS. <p> However, the state information is inher-itly imprecise in a distributed network environment. The imprecision directly affects the routing performance. Therefore, the design of routing algorithms for large networks should take the information imprecision into consideration <ref> [9, 20, 30] </ref>. Distributed and Hierarchical Routing: Source routing based on complete global state is generally not scalable because of the following reasons. The communication overhead to maintain the global state is proportional to the size of the network and the frequency of broadcasting local states. <p> The generic algorithm captures the common messaging and computational structure, from which various concrete algorithms are derived by specifying the QoS-dependent open components <ref> [9] </ref>. Extensibility: As the network infrastructure evolves and the capacity increases, new applications are made possible, which require the routing algorithms to adapt in order to accommodate new service types.
Reference: [10] <author> S. Chen and K. Nahrstedt. </author> <title> On finding multi-constrained paths. </title> <booktitle> IEEE International Conference on Communications, </booktitle> <month> June </month> <year> 1998. </year>
Reference-contexts: If all metrics except one take bounded integer values, then the problems are solvable in polynomial time by running an extended Dijkstra's (or Bellman-Ford) algorithm <ref> [10] </ref>. 2 If all metrics are dependent on a common metric, e.g., the worst-case delay and delay jitter are functions of bandwidth in networks using the WFQ scheduling, then the problems may also be solvable in polynomial time [32]. 4.2 Multicast routing The hierarchy of multicast routing problems are defined similarly <p> r. source O (vlogv + e) global Zero Ma-Steenkiste [32] bandwidth-constrained r. source O (vlogv + e) global Zero multi-constrained r. (1) source O (kve) (1) global Zero Guerin-Orda [20] (2:1) bandwidth-constrained r. source O (vlogv + e) imprecise global Zero delay-constrained r. source polynomial (2:2) imprecise global Zero Chen-Nahrstedt <ref> [10] </ref> bandwidth-cost-constrained r. source O (xve) global Zero Wang-Crowcroft [52] bandwidth-optimization r. distributed O (ve) global O (v) Salama et al [43] delay-constrained least-cost r. distributed O (v 3 ) global O (v 3 ) (6) Sun-Landgendorfer [50] delay-constrained least-cost r. distributed O (v) global O (v) Cidon et al [11] <p> One of the above heuristic algorithms was extended by the authors to make routing based on the aggregated network state of the hierarchical model (Section 3). A further study of QoS routing with imprecise state based on the probability model was done by Lorenz and Orda [30]. Chen-Nahrstedt algorithm <ref> [10] </ref>: Chen and Nahrstedt proposed a heuristic algorithm for the NP-complete multi-path-constrained routing problem. We have already known in Section 4.1 that if all metrics except one take bounded integer values, then multi-path-constrained routing is solvable in polynomial time. Consider the delay-cost-constrained routing. <p> See Figure 7 for an example. The new problem with link costs bounded by x + 1 can be solved in polynomial time by an extended Dijkstra's algorithm (EDSP) or an extended Bellman-Ford algorithm (EBF) <ref> [10] </ref>. It was proved that a feasible path of the new problem must also be a feasible path of the original problem. The performance of the algorithm is tunable since choosing a larger x results in a larger probability of finding a feasible path and a larger overhead.
Reference: [11] <author> I. Cidon, R. Rom, and Y. Shavitt. </author> <title> Multi-path routing combined with resource reservation. </title> <booktitle> Infocom'97, Japan, </booktitle> <pages> pages 92-100, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: While routing is decoupled from resource reservation in most existing schemes, some resent proposals combine routing and resource reservation in a single multi-path message pass from the source to the destination <ref> [11] </ref>. QoS routing and admission control: The task of admission control is to determine whether a connection request 7 8 should be accepted or rejected. Once a request is accepted, the required resources must be guaranteed. <p> [10] bandwidth-cost-constrained r. source O (xve) global Zero Wang-Crowcroft [52] bandwidth-optimization r. distributed O (ve) global O (v) Salama et al [43] delay-constrained least-cost r. distributed O (v 3 ) global O (v 3 ) (6) Sun-Landgendorfer [50] delay-constrained least-cost r. distributed O (v) global O (v) Cidon et al <ref> [11] </ref> generic r. (3) distributed O (e) global O (e) (7) Shin-Chou algorithm [47] delay-constrained r. distributed O (e) local O (e) Chen-Nahrstedt [9] generic r. (3) distributed O (e) local O (e) PNNI [16] generic r. (3) hierarchical polynomial (5) aggregated O (v) (*) v is the number of nodes <p> In a dynamic network, when different nodes have inconsistent information, the least-cost (least-delay) path computed based on contradicting information may contain a loop, which makes the control message not able to reach the destination. Cidon et al. algorithm <ref> [11] </ref>: The distributed multi-path routing algorithms proposed by Cidon et al combine the process of routing and resource reservation. Every node maintains the topology of the network and the cost of every link.
Reference: [12] <author> S. Deering and D. Cheriton. </author> <title> Multicast routing in data-gram internetworks and extended lans. </title> <journal> ACM Transactions on Computer Systems, </journal> <pages> pages 85-111, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: We describe the algorithms in this section. A summarizing comparison can be found in Table 2. 7.1 Source routing algorithms MOSPF [33]: MOSPF is a multicast extension of the link-state unicast protocol OSFP [34]. It was based on Deer-ing's work <ref> [12] </ref>. At every node, the protocol maintains, in addition to a global state, the membership information for every multicast group in the routing domain. Changes of group membership on a subnetwork are detected by a local router, and that router broadcasts the information to all other nodes.
Reference: [13] <author> A. Demers, S. Keshav, and S. Shenker. </author> <title> Analysis and simulation of a fair queueing algorithm. </title> <booktitle> ACM SIG-COMM'89, </booktitle> <pages> pages 3-12, </pages> <year> 1989. </year>
Reference-contexts: Then, the shortest path in terms of delay is found. The path is feasible if and only if it satisfies the delay constraint. Ma-Steenkiste algorithm [32]: Ma and Steenkiste showed that when a class of WFQ-like (Weighted Fair Queueing) scheduling algorithms <ref> [6, 13, 19, 54] </ref> are used, the end-to-end delay, delay-jitter, and buffer space bounds are not independent but are functions of the reserved bandwidth, the selected path and the traffic characteristics.
Reference: [14] <author> E. Dijkstra. </author> <title> A note on two problems in connexion with graphs. </title> <journal> Numerische Mathematik, </journal> <volume> 1 </volume> <pages> 269-271, </pages> <year> 1959. </year>
Reference-contexts: Such a path is called the widest path. The other problem is called link-constrained routing, e.g., bandwidth-constrained routing, which is to find a path whose bottleneck bandwidth is above a required value. The link-optimization routing problem can be solved by a slightly modified Dijkstra's (or Bellman-Ford [5]) algorithm <ref> [14] </ref>. The link-constrained routing problem can be easily reduced to the link-optimization problem. For other QoS metrics such as delay, delay jitter and cost, the state of a path is determined by the combined state over all links of the path.
Reference: [15] <author> D. Ferrari and D. C. Verma. </author> <title> A scheme for real-time channel establishment in wide-area networks. </title> <journal> IEEE JSAC, </journal> <volume> 8(3) </volume> <pages> 368-379, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: Meeting the QoS requirement of each individual connection and reducing the call-blocking rate are important for the QoS routing, while the fairness, overall throughput and average response time are the essential issues for the traditional routing. QoS routing and resource reservation: The QoS routing and the resource reservation <ref> [15, 55] </ref> are two important, closely related network components.
Reference: [16] <author> ATM Forum. </author> <title> Private network network interface (pnni) v1.0 specifications. </title> <month> June </month> <year> 1996. </year>
Reference-contexts: As the network size grows, the imprecision increases. Aggregated (partial) global state: A common approach of achieving scalability is to reduce the size of the global state by aggregating information according to the hierarchical structure of large networks. Figure 3 shows the hierarchical model used by <ref> [16, 20] </ref>. In Figure 3 (a), nodes are clustered into the first-level groups. The nodes with at least one link crossing two groups are called border nodes. In Figure 3 (b), each group is represented by a logical node. <p> As the network topology is aggregated, the state information is aggregated as well. The state of each logical link is the combination of the states of many lower-level links. The link-state algorithm can be extended to collect the aggregated state information for every node <ref> [16] </ref>. As the state is aggregated, the imprecision is also aggregated. 4 Routing Problems The routing problems can be divided into two major classes: unicast routing and multicast routing. <p> The PNNI (Private Network-Network Interface) <ref> [16] </ref> standard for routing in ATM networks is also hierarchical. The hierarchical routing scales well because each node only maintains a partial global state where groups of nodes are aggregated into logical nodes. The size of such an aggregated state is logarithmic in the size of the complete global state. <p> ) (6) Sun-Landgendorfer [50] delay-constrained least-cost r. distributed O (v) global O (v) Cidon et al [11] generic r. (3) distributed O (e) global O (e) (7) Shin-Chou algorithm [47] delay-constrained r. distributed O (e) local O (e) Chen-Nahrstedt [9] generic r. (3) distributed O (e) local O (e) PNNI <ref> [16] </ref> generic r. (3) hierarchical polynomial (5) aggregated O (v) (*) v is the number of nodes and e is the number of edges. (**) After a source routing algorithm selects a path, a control message needs to be sent along the path to establish the connection, which has a worst-case <p> Multipath routing can be used to increase the probability of accepting a connection under resource contention. There are two interpretations for multipath routing. One interpretation is to search multiple paths for a feasible one. PNNI <ref> [16] </ref> uses crankback to search multiple paths sequentially. When the selected path does not meet the requirement, the routing process is cranked back and resumes with an alternative path. This approach works well with network dynamics. The disadvantage is longer routing time.
Reference: [17] <author> ATM Forum. </author> <title> Private network network interface (pnni) v1.0 specifications. </title> <month> May </month> <year> 1996. </year>
Reference-contexts: et al algorithm combines routing with resource reservation. (4) Shi-Chou algorithm and Chen-Nahrstedt's selective probing algorithm require only local state to be maintained at each node. (5) Chen-Nahrstedt's iterative probing substantially reduces the routing overhead at the cost of longer routing time. 6.3 Hierarchical routing algorithms PNNI (Private Network-Network Interface) <ref> [17] </ref>: PNNI is a hierarchical link-state routing protocol. Its hi-erarchial model has been discussed in Section 3. We uses an example to illustrates the routing process. The network in Figure 9 (a) has a two-level hierarchy with three groups.
Reference: [18] <author> M. Garey and D. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <address> New York: </address> <publisher> W.H. Freeman and Co., </publisher> <year> 1979. </year>
Reference-contexts: Multiple constraints often make the routing problem intractable. In particular, finding the least-cost path with one path constraint or finding a feasible path with two independent path constraints is NP-complete <ref> [18] </ref>. Second, any future integrated-service network is likely to carry both QoS traffic and best-effort traffic, which makes the issue of performance optimization complicated. It is hard to determine the best operating point for both types of traffic if their distributions are independent. <p> Therefore, the problem of finding a path satisfying bandwidth, delay, delay-jitter and buffer space constraints, which is NP-complete in general <ref> [18, 52] </ref>, can be simplified by taking these functional relationships into consideration and thus can be solved by a modified version of Bellman-Ford algorithm in polynomial time. A much further study of QoS routing on rate-based scheduling networks was done recently by Orda [35].
Reference: [19] <author> S. Golestani. </author> <title> A self-clocked fair queueing scheme for broadband applications. </title> <booktitle> Proceedings of IEEE INFO-COM'94, </booktitle> <pages> pages 636-646, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Then, the shortest path in terms of delay is found. The path is feasible if and only if it satisfies the delay constraint. Ma-Steenkiste algorithm [32]: Ma and Steenkiste showed that when a class of WFQ-like (Weighted Fair Queueing) scheduling algorithms <ref> [6, 13, 19, 54] </ref> are used, the end-to-end delay, delay-jitter, and buffer space bounds are not independent but are functions of the reserved bandwidth, the selected path and the traffic characteristics.
Reference: [20] <author> R. Guerin and A. Orda. </author> <title> Qos-based routing in networks with inaccurate information: Theory and algorithms. </title> <address> Infocom'97, Japan, </address> <month> April </month> <year> 1997. </year>
Reference-contexts: As the network size grows, the imprecision increases. Aggregated (partial) global state: A common approach of achieving scalability is to reduce the size of the global state by aggregating information according to the hierarchical structure of large networks. Figure 3 shows the hierarchical model used by <ref> [16, 20] </ref>. In Figure 3 (a), nodes are clustered into the first-level groups. The nodes with at least one link crossing two groups are called border nodes. In Figure 3 (b), each group is represented by a logical node. <p> In summary, the source routing has the scalability problem. It is impractical for any single node to have access to detailed state information about all nodes and all links in large networks <ref> [20] </ref>. 5.2 Strengths and weaknesses of dis tributed routing In distributed routing, the path computation is distributed among the intermediate nodes between the source and the destination. Hence, the routing response time can be made shorter and the algorithm is more scalable. <p> Hence, the hierarchical routing retains many advantages of source routing. It has also some advantages of the distributed routing because the routing computation is shared by many nodes. However, As the network state is aggregated, additional imprecision is introduced, which has a significant negative impact on the QoS routing <ref> [20] </ref>. Recall that a logical node in an aggregated network image may represent a large sub-net with complex internal structure and a logical link may be the abstraction of multiple physical links. Consider the aggregated network image in Figure 3 (e). <p> A much further study of QoS routing on rate-based scheduling networks was done recently by Orda [35]. Guerin-Orda algorithm <ref> [20] </ref> 3 : Guerin and Orda studied the bandwidth-constrained and delay-constrained source routing with imprecise network states. The model of imprecision is based on the probability distribution functions. <p> paper. 11 Table 1: Unicast algorithms alorithm solving problem routing strategy time complexity Comm. complexity maintaining state routing Wang-Crowcroft [52] bandwidth-delay-constrained r. source O (vlogv + e) global Zero Ma-Steenkiste [32] bandwidth-constrained r. source O (vlogv + e) global Zero multi-constrained r. (1) source O (kve) (1) global Zero Guerin-Orda <ref> [20] </ref> (2:1) bandwidth-constrained r. source O (vlogv + e) imprecise global Zero delay-constrained r. source polynomial (2:2) imprecise global Zero Chen-Nahrstedt [10] bandwidth-cost-constrained r. source O (xve) global Zero Wang-Crowcroft [52] bandwidth-optimization r. distributed O (ve) global O (v) Salama et al [43] delay-constrained least-cost r. distributed O (v 3 ) <p> However, the state information is inher-itly imprecise in a distributed network environment. The imprecision directly affects the routing performance. Therefore, the design of routing algorithms for large networks should take the information imprecision into consideration <ref> [9, 20, 30] </ref>. Distributed and Hierarchical Routing: Source routing based on complete global state is generally not scalable because of the following reasons. The communication overhead to maintain the global state is proportional to the size of the network and the frequency of broadcasting local states.
Reference: [21] <author> C. Hedrick. </author> <title> Routing information protocol. </title> <type> RFC 1058, </type> <institution> Network Information Center, SRI Internation, </institution> <address> Menlo Park, CA, </address> <month> June </month> <year> 1988. </year>
Reference-contexts: Global state: The combination of the local states of all nodes is called a global state. Every node is able to maintain the global state by either a link-state protocol [36, 34, 48] or a distance-vector protocol <ref> [21, 37, 31] </ref>, which exchanges the local states among the nodes periodically. The link-state protocols broadcast the local state of every node to every other node so that each node knows the topology of the network and the state of every link (Figure 1).
Reference: [22] <author> C. Hou. </author> <title> Routing virtual circuits with timing requirements in virtual path based atm networks. </title> <address> INFO-COM'96, </address> <year> 1996. </year>
Reference-contexts: It was shown that, when certain scheduling policies [25] are used and the routing messages are set to appropriate priority, there will be at most one message sent along every link. Another flooding-based routing algorithm was proposed by Hou <ref> [22] </ref> to route virtual circuits with delay requirements in ATM networks. Chen-Nahrstedt algorithm [9]: 1) selective probing Chen and Nahrstedt proposed a distributed routing framework based on selective probing. After a connection request arrives, probes are flooded selectively along those 15 paths which satisfy QoS and optimization requirements.
Reference: [23] <author> F. K. Hwang and D. S. Richards. </author> <title> Steiner tree problems. </title> <journal> Networks, </journal> <volume> 22 </volume> <pages> 55-89, </pages> <year> 1992. </year>
Reference-contexts: Strictly speaking, finding a Steiner tree is not a QoS routing problem. However, the heuristics for constructing Steiner trees have direct impact on constructing the Constrained Steiner tree. In the following, we briefly discuss two algorithms. A nice survey on the Steiner problem can be found in <ref> [23] </ref>. 1) Kou et al algorithm [28]: In Kou et al algorithm, a network is abstracted to a complete graph, where the nodes represent the source and the destinations, and the edges represent the shortest paths between these nodes.
Reference: [24] <author> A. Iwata, R. Izmailov, H. Suzuki, and B. Sengupta. </author> <title> Pnni routing algorithms for multimedia atm internet. </title> <journal> NEC Research and Development, </journal> <volume> 38, </volume> <year> 1997. </year>
Reference-contexts: All the 13 above algorithms is executed at connection arrival on a per-connection basis, which may cause the overall compuational overhead excessively high. Path precomputation and caching were studied to make a tradeoff between processing overhead and the routing performance <ref> [7, 24, 39, 46] </ref>. 6.2 Distributed routing algorithms Wang-Crowcroft algorithm [52]: Wang and Crowcroft proposed a hop-by-hop distributed routing scheme, in which every node pre-computes a forwarding entry for every possible destination. The forwarding entry, which is updated periodically, stores the next hop on the routing path to the destination.
Reference: [25] <author> D. D. Kandlur, K. G. Shin, and D. Ferrari. </author> <title> Real-time communication in multi-hop networks. </title> <booktitle> Eleventh Int'l Conf. on Distributed Computing Systems, </booktitle> <pages> pages 300-307, </pages> <year> 1991. </year>
Reference-contexts: Once a message reaches the destination, it finds a delay-constrained path, which is the one it has traversed. It was shown that, when certain scheduling policies <ref> [25] </ref> are used and the routing messages are set to appropriate priority, there will be at most one message sent along every link. Another flooding-based routing algorithm was proposed by Hou [22] to route virtual circuits with delay requirements in ATM networks.
Reference: [26] <author> V. P. Kompella, J. C. Pasquale, and G. C. Poly-zos. </author> <title> Multicast routing for multimedia communication. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <month> June </month> <year> 1993. </year>
Reference-contexts: Multicast algorithms alorithm solving problem routing strategy time complexity Comm. complexity maintaining state routing MOSPF [33] least-delay r. source O (vlogv) global Zero Kou et al [28] least-cost r. source O (gv 2 ) global Zero Takahashi-Matsuyama [51] least-cost r. source O (gv 2 ) global Zero Kompella et al <ref> [26] </ref> delay-constrained least-cost r. source O (v 3 ) (1) global Zero Sun-Landgendorfer [49] delay-constrained least-cost r. source O (vlogv + e) global Zero Widyono [53] delay-constrained least-cost r. source exponential (2) global Zero Zhu et al [56] delay-constrained least-cost r. source O (kv 3 logv) global Zero Rouskas-Baldine [42] delay-constrained <p> delay-constrained least-cost r. source O (vlogv + e) global Zero Widyono [53] delay-constrained least-cost r. source exponential (2) global Zero Zhu et al [56] delay-constrained least-cost r. source O (kv 3 logv) global Zero Rouskas-Baldine [42] delay-constrained least-cost r. source O (klgv 4 ) (3) global Zero Kompella et al <ref> [26] </ref> delay-constrained least-cost r. distributed O (gv 3 ) global O (v 3 ) Chen-Nahrstedt [9] generic r. distributed O (ge) local O (e) (*) v is the number of nodes, e is the number of edges, and g is the number of destinations. (**) After a source routing algorithm constructs <p> This process is repeated until all destinations are in cluded in the tree. 17 Constrained Steiner tree problem The problem of finding a delay-bounded least-cost multicast tree, called a constrained Steiner tree, is NP-complete <ref> [26] </ref>. Heuristic source routing algorithms were proposed for this problem [26, 49, 53, 56]. A performance evaluation of the algorithms was done by Salama et al through extensive simulation [44]. 1) Kompella et al algorithm [26]: A source routing heuristic was proposed by Kompella et al to construct a constrained Steiner <p> This process is repeated until all destinations are in cluded in the tree. 17 Constrained Steiner tree problem The problem of finding a delay-bounded least-cost multicast tree, called a constrained Steiner tree, is NP-complete [26]. Heuristic source routing algorithms were proposed for this problem <ref> [26, 49, 53, 56] </ref>. A performance evaluation of the algorithms was done by Salama et al through extensive simulation [44]. 1) Kompella et al algorithm [26]: A source routing heuristic was proposed by Kompella et al to construct a constrained Steiner tree. <p> problem of finding a delay-bounded least-cost multicast tree, called a constrained Steiner tree, is NP-complete <ref> [26] </ref>. Heuristic source routing algorithms were proposed for this problem [26, 49, 53, 56]. A performance evaluation of the algorithms was done by Salama et al through extensive simulation [44]. 1) Kompella et al algorithm [26]: A source routing heuristic was proposed by Kompella et al to construct a constrained Steiner tree. The algorithm first creates a complete graph, where the nodes represent the source and the destinations, and the edges represent the delay-constrained least-cost paths between these nodes.
Reference: [27] <author> V. P. Kompella, J. C. Pasquale, and G. C. Polyzos. </author> <title> Two distributed algorithms for multicasting multimedia information. </title> <booktitle> Proceedings of the 2nd International Conference on Computer Communications and Networks (IC-CCN), </booktitle> <address> San Diego, CA, </address> <pages> pages 343-349, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Among the four algorithms for the constrained Steiner tree problem, Salama's simulation [44] showed that (1) Zhu et al algorithm achieves the best average performance in minimizing the cost of the tree, and (2) Sun-Langendoerfer algorithm has the least execution time . 7.2 Distributed routing algorithms Kompella et al algorithm <ref> [27] </ref>: Kompella et al proposed a distributed heuristic algorithm for constructing the constrained Steiner tree. The algorithm requires every node to maintain a distance vector storing the minimum delay to every other node.
Reference: [28] <author> L. Kou, G. Markowsky, and L. Berman. </author> <title> A fast algorithm for steiner tree. </title> <journal> Acta Informatica 15, </journal> <pages> pages 141-145, </pages> <year> 1981. </year>
Reference-contexts: Table 2: Multicast algorithms alorithm solving problem routing strategy time complexity Comm. complexity maintaining state routing MOSPF [33] least-delay r. source O (vlogv) global Zero Kou et al <ref> [28] </ref> least-cost r. source O (gv 2 ) global Zero Takahashi-Matsuyama [51] least-cost r. source O (gv 2 ) global Zero Kompella et al [26] delay-constrained least-cost r. source O (v 3 ) (1) global Zero Sun-Landgendorfer [49] delay-constrained least-cost r. source O (vlogv + e) global Zero Widyono [53] delay-constrained <p> However, the heuristics for constructing Steiner trees have direct impact on constructing the Constrained Steiner tree. In the following, we briefly discuss two algorithms. A nice survey on the Steiner problem can be found in [23]. 1) Kou et al algorithm <ref> [28] </ref>: In Kou et al algorithm, a network is abstracted to a complete graph, where the nodes represent the source and the destinations, and the edges represent the shortest paths between these nodes.
Reference: [29] <author> W. C. Lee, M. G. Hluchyi, and P. A. Humblet. </author> <title> Routing subject to quality of service constraints in integrated communication networks. </title> <journal> IEEE Network, </journal> <month> July/August </month> <year> 1995. </year>
Reference-contexts: The QoS requirement of a connection is given as a set of constraints, which can be either link constraints or path (tree) constraints <ref> [29] </ref>. A link constraint specifies the restriction on the use of links. For instance, a bandwidth constraint of a unicast connection requires that the links composing the path must have certain amount of free bandwidth available.
Reference: [30] <author> D. H. Lorenz and A. Orda. </author> <title> Qos routing in networks with uncertain parameters. </title> <address> Infocom'98, </address> <month> March </month> <year> 1998. </year>
Reference-contexts: One of the above heuristic algorithms was extended by the authors to make routing based on the aggregated network state of the hierarchical model (Section 3). A further study of QoS routing with imprecise state based on the probability model was done by Lorenz and Orda <ref> [30] </ref>. Chen-Nahrstedt algorithm [10]: Chen and Nahrstedt proposed a heuristic algorithm for the NP-complete multi-path-constrained routing problem. We have already known in Section 4.1 that if all metrics except one take bounded integer values, then multi-path-constrained routing is solvable in polynomial time. Consider the delay-cost-constrained routing. <p> However, the state information is inher-itly imprecise in a distributed network environment. The imprecision directly affects the routing performance. Therefore, the design of routing algorithms for large networks should take the information imprecision into consideration <ref> [9, 20, 30] </ref>. Distributed and Hierarchical Routing: Source routing based on complete global state is generally not scalable because of the following reasons. The communication overhead to maintain the global state is proportional to the size of the network and the frequency of broadcasting local states.
Reference: [31] <author> K. Lougheed and Y. Rekhter. </author> <title> Border gateway protocol 3 (bgp-3). </title> <type> RFC 1267, </type> <institution> SRI International, </institution> <address> Menlo Park, CA, </address> <month> October </month> <year> 1991. </year>
Reference-contexts: Global state: The combination of the local states of all nodes is called a global state. Every node is able to maintain the global state by either a link-state protocol [36, 34, 48] or a distance-vector protocol <ref> [21, 37, 31] </ref>, which exchanges the local states among the nodes periodically. The link-state protocols broadcast the local state of every node to every other node so that each node knows the topology of the network and the state of every link (Figure 1).
Reference: [32] <author> Q. Ma and P. Steenkiste. </author> <title> Quality-of-service routing with performance guarantees. </title> <booktitle> Proceedings of the 4th International IFIP Workshop on Quality of Service, </booktitle> <month> May </month> <year> 1997. </year>
Reference-contexts: solvable in polynomial time by running an extended Dijkstra's (or Bellman-Ford) algorithm [10]. 2 If all metrics are dependent on a common metric, e.g., the worst-case delay and delay jitter are functions of bandwidth in networks using the WFQ scheduling, then the problems may also be solvable in polynomial time <ref> [32] </ref>. 4.2 Multicast routing The hierarchy of multicast routing problems are defined similarly in Figure 4. The difference is that an optimization or a constraint must be applied to the entire tree instead of a single path. <p> Then, the shortest path in terms of delay is found. The path is feasible if and only if it satisfies the delay constraint. Ma-Steenkiste algorithm <ref> [32] </ref>: Ma and Steenkiste showed that when a class of WFQ-like (Weighted Fair Queueing) scheduling algorithms [6, 13, 19, 54] are used, the end-to-end delay, delay-jitter, and buffer space bounds are not independent but are functions of the reserved bandwidth, the selected path and the traffic characteristics. <p> designed to be used in hierarchical routing, though we present it as an independent source routing algo rithm in this paper. 11 Table 1: Unicast algorithms alorithm solving problem routing strategy time complexity Comm. complexity maintaining state routing Wang-Crowcroft [52] bandwidth-delay-constrained r. source O (vlogv + e) global Zero Ma-Steenkiste <ref> [32] </ref> bandwidth-constrained r. source O (vlogv + e) global Zero multi-constrained r. (1) source O (kve) (1) global Zero Guerin-Orda [20] (2:1) bandwidth-constrained r. source O (vlogv + e) imprecise global Zero delay-constrained r. source polynomial (2:2) imprecise global Zero Chen-Nahrstedt [10] bandwidth-cost-constrained r. source O (xve) global Zero Wang-Crowcroft [52] <p> The design of routing algorithms must consider how the global state is maintained, how resources are reserved and how data packets are scheduled. Different scheduling policies make different requirements on routing algorithms, and often provide special properties to simplify the routing problems <ref> [32] </ref>. For example, when the rate-based scheduling policies are used, the end-to-end delay constraint can be transformed into a bandwidth constraint. In an integrated network system, the following properties are desired for the routing component.
Reference: [33] <author> J. Moy. </author> <title> Multicast extension to ospf. </title> <type> Internet Draft, </type> <month> September </month> <year> 1992. </year>
Reference-contexts: Table 2: Multicast algorithms alorithm solving problem routing strategy time complexity Comm. complexity maintaining state routing MOSPF <ref> [33] </ref> least-delay r. source O (vlogv) global Zero Kou et al [28] least-cost r. source O (gv 2 ) global Zero Takahashi-Matsuyama [51] least-cost r. source O (gv 2 ) global Zero Kompella et al [26] delay-constrained least-cost r. source O (v 3 ) (1) global Zero Sun-Landgendorfer [49] delay-constrained least-cost <p> We describe the algorithms in this section. A summarizing comparison can be found in Table 2. 7.1 Source routing algorithms MOSPF <ref> [33] </ref>: MOSPF is a multicast extension of the link-state unicast protocol OSFP [34]. It was based on Deer-ing's work [12]. At every node, the protocol maintains, in addition to a global state, the membership information for every multicast group in the routing domain.
Reference: [34] <author> J. Moy. </author> <note> Ospf version 2. </note> <institution> Network Working Group Internet Draft, </institution> <month> November </month> <year> 1992. </year>
Reference-contexts: Global state: The combination of the local states of all nodes is called a global state. Every node is able to maintain the global state by either a link-state protocol <ref> [36, 34, 48] </ref> or a distance-vector protocol [21, 37, 31], which exchanges the local states among the nodes periodically. <p> We describe the algorithms in this section. A summarizing comparison can be found in Table 2. 7.1 Source routing algorithms MOSPF [33]: MOSPF is a multicast extension of the link-state unicast protocol OSFP <ref> [34] </ref>. It was based on Deer-ing's work [12]. At every node, the protocol maintains, in addition to a global state, the membership information for every multicast group in the routing domain.
Reference: [35] <author> A. Orda. </author> <title> Routing with end to end qos guarantees in broadband networks. </title> <address> INFOCOM'98, </address> <month> March </month> <year> 1998. </year>
Reference-contexts: A much further study of QoS routing on rate-based scheduling networks was done recently by Orda <ref> [35] </ref>. Guerin-Orda algorithm [20] 3 : Guerin and Orda studied the bandwidth-constrained and delay-constrained source routing with imprecise network states. The model of imprecision is based on the probability distribution functions.
Reference: [36] <institution> International Standard Organization. Intra-domain is-is routing protocol. ISO/IEC/JTC1/SC6 WG2 N323, </institution> <month> September </month> <year> 1989. </year> <month> 23 </month>
Reference-contexts: Global state: The combination of the local states of all nodes is called a global state. Every node is able to maintain the global state by either a link-state protocol <ref> [36, 34, 48] </ref> or a distance-vector protocol [21, 37, 31], which exchanges the local states among the nodes periodically.
Reference: [37] <author> International Standards Organization. </author> <title> Protocol for ex-change of inter-domain routing information among intermediate systems to support forwarding of iso 8473 pdus. </title> <publisher> ISO/IEC/JTC1/SC6 CD10747. </publisher>
Reference-contexts: Global state: The combination of the local states of all nodes is called a global state. Every node is able to maintain the global state by either a link-state protocol [36, 34, 48] or a distance-vector protocol <ref> [21, 37, 31] </ref>, which exchanges the local states among the nodes periodically. The link-state protocols broadcast the local state of every node to every other node so that each node knows the topology of the network and the state of every link (Figure 1).
Reference: [38] <author> C. Parris, H. Zhang, and D. Ferrari. </author> <title> A mechanism for dynamic re-routing of real-time channels. </title> <type> Technical Report TR-92-053, </type> <institution> International Computer Science Institute, Berkeley, </institution> <address> CA, </address> <month> April </month> <year> 1992. </year>
Reference-contexts: Long paths are often assigned when resource contention occurs. However, as new connections are established and existing connections are torn down upon completion, the network state changes locally and globally, which makes the routes of the remaining connections less optimal <ref> [38] </ref>. Routes with light (heavy) traffic at the beginning may become congested (lightly loaded) later. Shorter paths for some connections may become available. Re-routing helps to balance the network traffic on the fly and improves the resource efficiency.
Reference: [39] <author> M. Peyravian and A. D. Kshemkalyani. </author> <title> Network path cashing: Issues, algorithms and a simulation study. </title> <journal> Computer Communications, </journal> <volume> 20 </volume> <pages> 605-614, </pages> <year> 1997. </year>
Reference-contexts: All the 13 above algorithms is executed at connection arrival on a per-connection basis, which may cause the overall compuational overhead excessively high. Path precomputation and caching were studied to make a tradeoff between processing overhead and the routing performance <ref> [7, 24, 39, 46] </ref>. 6.2 Distributed routing algorithms Wang-Crowcroft algorithm [52]: Wang and Crowcroft proposed a hop-by-hop distributed routing scheme, in which every node pre-computes a forwarding entry for every possible destination. The forwarding entry, which is updated periodically, stores the next hop on the routing path to the destination.
Reference: [40] <author> S. Plotkin. </author> <title> Competitive routing of virtual circuits in atm networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 13 </volume> <pages> 1128-1136, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: Competitive routing for connections with unknown duration was studied in [2]. A survey for competitive routing algorithms was done by Plotkin <ref> [40] </ref>. Summary: All the above algorithms require a global state to be maintained at every node. Most algorithms transform the routing problem to a shortest path problem and then solve it by Dijkstra's or Bellman-Ford algorithm.
Reference: [41] <author> R. Prim. </author> <title> Shortest connection networks and some generalizations. </title> <journal> Bell Systems Tech. J., </journal> <volume> 36 </volume> <pages> 1389-1401, </pages> <year> 1957. </year>
Reference-contexts: The Prim's algorithm <ref> [41] </ref> is used to construct a minimum spanning tree in the complete graph, and the Steiner tree of the original network is obtained by replacing the edges in the minimum spanning tree by the shortest paths and removing the loops. 2) Takahashi-Matsuyama algorithm [51]: Takahashi-Matsuyama algorithm finds a Steiner tree by
Reference: [42] <author> G. N. Rouskas and I. Baldine. </author> <title> Multicast routing with end-to-end delay and delay variation constraints. </title> <journal> IEEE JSAC, </journal> <volume> 15(3) </volume> <pages> 346-356, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: The multi-tree-constrained routing, e.g., delay-delay-jitter-constrained multicast rout 2 If all metrics (e.g., delay) except one take unbounded integer values but the maximum constraints (e.g., delay bound requirement) are bounded, then the problems are also solvable in polynomial time. ing, is also NP-complete <ref> [42] </ref>, with the assumptions that (1) the metrics under constraints take real numbers (or unbounded interger numbers) and (2) they are independent. However, the problem is solvable in polynomial time if all metrics except one take bounded integer values. <p> al [26] delay-constrained least-cost r. source O (v 3 ) (1) global Zero Sun-Landgendorfer [49] delay-constrained least-cost r. source O (vlogv + e) global Zero Widyono [53] delay-constrained least-cost r. source exponential (2) global Zero Zhu et al [56] delay-constrained least-cost r. source O (kv 3 logv) global Zero Rouskas-Baldine <ref> [42] </ref> delay-constrained least-cost r. source O (klgv 4 ) (3) global Zero Kompella et al [26] delay-constrained least-cost r. distributed O (gv 3 ) global O (v 3 ) Chen-Nahrstedt [9] generic r. distributed O (ge) local O (e) (*) v is the number of nodes, e is the number of <p> Figure 10 gives an example of replacement. Heuristics were proposed for finding such a replacement. The algorithm always finds a delay-constrained tree (probably not least-cost), if one exists, because it starts with a shortest path tree. 18 Rouskas-Baldine algorithm <ref> [42] </ref>: Rouskas and Bal--dine proposed a heuristic for constructing a delay-delay-jitter-constrained multicast tree. The tree must have (1) bounded delay along the paths from the source to the destinations and (2) bounded variation among the delays along these paths.
Reference: [43] <author> H. F. Salama, D. S. Reeves, and Y. Viniotis. </author> <title> A distributed algorithm for delay-constrained unicast routing. </title> <address> INFOCOM'97, Japan, </address> <month> April </month> <year> 1997. </year>
Reference-contexts: Hence, the routing response time can be made shorter and the algorithm is more scalable. Searching multiple paths in parallel for a feasible one is made possible, which increases the chance of success. Most existing distributed routing algorithms <ref> [43, 50, 52] </ref> require each node to maintain a global network state (distance vectors), based on which the routing decision is made on a hop-by-hop basis. Some flooding-based algorithms do not require any global state to be maintained. <p> (1) source O (kve) (1) global Zero Guerin-Orda [20] (2:1) bandwidth-constrained r. source O (vlogv + e) imprecise global Zero delay-constrained r. source polynomial (2:2) imprecise global Zero Chen-Nahrstedt [10] bandwidth-cost-constrained r. source O (xve) global Zero Wang-Crowcroft [52] bandwidth-optimization r. distributed O (ve) global O (v) Salama et al <ref> [43] </ref> delay-constrained least-cost r. distributed O (v 3 ) global O (v 3 ) (6) Sun-Landgendorfer [50] delay-constrained least-cost r. distributed O (v) global O (v) Cidon et al [11] generic r. (3) distributed O (e) global O (e) (7) Shin-Chou algorithm [47] delay-constrained r. distributed O (e) local O (e) <p> The path is loop-free if the state information at all nodes is consistent. However, in a dynamic network, the path may have a loop due to contradicting state information at different nodes. Salama et al algorithm <ref> [43] </ref>: Salama et al proposed a distributed heuristic algorithm for the NP-complete delay-constrained least-cost routing problem. A cost vector and a delay vector are maintained at every node by a distance-vector protocol. The cost (delay) vector contains for ev ery destination the next node on the least-cost (least-delay) path.
Reference: [44] <author> Hussein F. Salama, Douglas S. Reeves, and Yannis Viniotis. </author> <title> Evaluation of multicast routing algorithms for real-time communication on high-speed networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 15(3) </volume> <pages> 332-345, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: The constrained Steiner tree problem is to find the least-cost tree with the bounded delay. It is also called the delay-constrained least-cost routing problem, belonging to the tree-constrained tree-optimization routing problem class. Finding either Steiner tree or constrained Steiner tree is NP-complete <ref> [44] </ref>. <p> Widyno pointed out that there are cases where the running time of CBF grows exponentially. However, simulation shows that its average performance is comparable to other algorithms that construct constrained Steiner trees <ref> [44] </ref>. (3) k and l are constants in the algorithm. A larger k (or l) results in a higher probability of finding a feasible tree and a higher overhead. 12 delay requirement. <p> Heuristic source routing algorithms were proposed for this problem [26, 49, 53, 56]. A performance evaluation of the algorithms was done by Salama et al through extensive simulation <ref> [44] </ref>. 1) Kompella et al algorithm [26]: A source routing heuristic was proposed by Kompella et al to construct a constrained Steiner tree. The algorithm first creates a complete graph, where the nodes represent the source and the destinations, and the edges represent the delay-constrained least-cost paths between these nodes. <p> Rouskas-Baldine algorithm constructs a multi-cast tree with both bounded delay and bounded delay-jitter, which is very useful in interactive audio-visual communication such as teleconference. Among the four algorithms for the constrained Steiner tree problem, Salama's simulation <ref> [44] </ref> showed that (1) Zhu et al algorithm achieves the best average performance in minimizing the cost of the tree, and (2) Sun-Langendoerfer algorithm has the least execution time . 7.2 Distributed routing algorithms Kompella et al algorithm [27]: Kompella et al proposed a distributed heuristic algorithm for constructing the constrained <p> That is especially true in the case of multicast routing. New efficient algorithms are required to make a good balance between computation time and connection-success ratio, so that the time complexity can be reduced to the shortest-path computation range while the success ratio is still acceptable <ref> [44] </ref>. Routing with imprecise state information: Most existing routing algorithms assume the availability of precise state information. However, the state information is inher-itly imprecise in a distributed network environment. The imprecision directly affects the routing performance.
Reference: [45] <author> A. Shaikh, J. Rexford, and K. Shin. </author> <title> Dynamics of quality-of-service routing with inaccurate link-state information. </title> <type> U. </type> <institution> of Michigan Tech. Report CSE-TR-350-97, </institution> <month> Nov. </month> <year> 1997. </year>
Reference-contexts: Second, the link-state algorithm can only provide approximate global state due to the overhead concern and non-negligible propagation delay of state messages. As a consequence, the imprecision in the global state can cause the QoS routing fail <ref> [45] </ref>. Third, the computation overhead at the source is excessively high, especially in the case of multicast routing or when multiple constraints are involved, considering that the QoS routing is typically done on a per connection basis. In summary, the source routing has the scalability problem.
Reference: [46] <author> A. Shaikh, J. Rexford, and K. Shin. </author> <title> Efficient precom-putation of quality-of-service routes. Workshop on Network and Operating Systems Support for Digital Audio and Video,, </title> <month> July </month> <year> 1998. </year>
Reference-contexts: All the 13 above algorithms is executed at connection arrival on a per-connection basis, which may cause the overall compuational overhead excessively high. Path precomputation and caching were studied to make a tradeoff between processing overhead and the routing performance <ref> [7, 24, 39, 46] </ref>. 6.2 Distributed routing algorithms Wang-Crowcroft algorithm [52]: Wang and Crowcroft proposed a hop-by-hop distributed routing scheme, in which every node pre-computes a forwarding entry for every possible destination. The forwarding entry, which is updated periodically, stores the next hop on the routing path to the destination.
Reference: [47] <author> K. G. Shin and C.-C. Chou. </author> <title> A distributed route-selection scheme for establishing real-time channel. </title> <booktitle> Sixth IFIP Int'l Conf. on High Performance Networking Conf. (HPN'95), </booktitle> <pages> pages 319-329, </pages> <month> Sep. </month> <year> 1995. </year>
Reference-contexts: Some flooding-based algorithms do not require any global state to be maintained. The routing decision and optimization is done entirely based on the local states <ref> [9, 47] </ref>. The distributed routing algorithms which depend on the global state share more or less the same problems of the source routing algorithms. The distributed algorithms which do not need any global state tend to send more messages. <p> O (ve) global O (v) Salama et al [43] delay-constrained least-cost r. distributed O (v 3 ) global O (v 3 ) (6) Sun-Landgendorfer [50] delay-constrained least-cost r. distributed O (v) global O (v) Cidon et al [11] generic r. (3) distributed O (e) global O (e) (7) Shin-Chou algorithm <ref> [47] </ref> delay-constrained r. distributed O (e) local O (e) Chen-Nahrstedt [9] generic r. (3) distributed O (e) local O (e) PNNI [16] generic r. (3) hierarchical polynomial (5) aggregated O (v) (*) v is the number of nodes and e is the number of edges. (**) After a source routing algorithm <p> Variants of the above algorithm were proposed to make tradeoff between routing time and path optimality. Reserving resources on multiple paths makes the routing faster and more resilient. However, it also increases the level of resource contention. Shin-Chou algorithm <ref> [47] </ref>: Shin and Chou proposed a distributed route-selection scheme for establishing delay-constrained connections. No global state is required to be maintained at any node. The algorithms flood routing messages from the source toward the destination. Each message accumulates the total delay of the path it has traversed so far.
Reference: [48] <author> M. Steenstrup. </author> <title> Inter-domain policy routing protocol specification: </title> <type> Version 1. Internet Draft, </type> <month> May </month> <year> 1992. </year>
Reference-contexts: Global state: The combination of the local states of all nodes is called a global state. Every node is able to maintain the global state by either a link-state protocol <ref> [36, 34, 48] </ref> or a distance-vector protocol [21, 37, 31], which exchanges the local states among the nodes periodically.
Reference: [49] <author> Q. Sun and H. Langendorfer. </author> <title> A new distributed routing algorithm with end-to-end delay guarantee. </title> <booktitle> Second Workshop Protocols Multimedia Systems (PROMS'95), </booktitle> <pages> pages 452-458, </pages> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: routing MOSPF [33] least-delay r. source O (vlogv) global Zero Kou et al [28] least-cost r. source O (gv 2 ) global Zero Takahashi-Matsuyama [51] least-cost r. source O (gv 2 ) global Zero Kompella et al [26] delay-constrained least-cost r. source O (v 3 ) (1) global Zero Sun-Landgendorfer <ref> [49] </ref> delay-constrained least-cost r. source O (vlogv + e) global Zero Widyono [53] delay-constrained least-cost r. source exponential (2) global Zero Zhu et al [56] delay-constrained least-cost r. source O (kv 3 logv) global Zero Rouskas-Baldine [42] delay-constrained least-cost r. source O (klgv 4 ) (3) global Zero Kompella et al <p> This process is repeated until all destinations are in cluded in the tree. 17 Constrained Steiner tree problem The problem of finding a delay-bounded least-cost multicast tree, called a constrained Steiner tree, is NP-complete [26]. Heuristic source routing algorithms were proposed for this problem <ref> [26, 49, 53, 56] </ref>. A performance evaluation of the algorithms was done by Salama et al through extensive simulation [44]. 1) Kompella et al algorithm [26]: A source routing heuristic was proposed by Kompella et al to construct a constrained Steiner tree. <p> The third step is to expend the edges of the constrained spanning tree into the delay-constrained least-cost paths they represent. Any loops caused by this expansion are removed. 2) Sun-Langendoerfer algorithm <ref> [49] </ref>: Sun and Lan-gendoerfer proposed an algorithm which constructs approximated constrained Steiner trees by Dijkstra's algorithm. It first computes the shortest path tree in terms of cost, i.e., the cost of every path in the tree from the source to a destination is minimized.
Reference: [50] <author> Q. Sun and H. Langendorfer. </author> <title> A new distributed routing algorithm with end-to-end delay guarantee. </title> <type> Unpublished paper, </type> <year> 1997. </year>
Reference-contexts: Hence, the routing response time can be made shorter and the algorithm is more scalable. Searching multiple paths in parallel for a feasible one is made possible, which increases the chance of success. Most existing distributed routing algorithms <ref> [43, 50, 52] </ref> require each node to maintain a global network state (distance vectors), based on which the routing decision is made on a hop-by-hop basis. Some flooding-based algorithms do not require any global state to be maintained. <p> e) imprecise global Zero delay-constrained r. source polynomial (2:2) imprecise global Zero Chen-Nahrstedt [10] bandwidth-cost-constrained r. source O (xve) global Zero Wang-Crowcroft [52] bandwidth-optimization r. distributed O (ve) global O (v) Salama et al [43] delay-constrained least-cost r. distributed O (v 3 ) global O (v 3 ) (6) Sun-Landgendorfer <ref> [50] </ref> delay-constrained least-cost r. distributed O (v) global O (v) Cidon et al [11] generic r. (3) distributed O (e) global O (e) (7) Shin-Chou algorithm [47] delay-constrained r. distributed O (e) local O (e) Chen-Nahrstedt [9] generic r. (3) distributed O (e) local O (e) PNNI [16] generic r. (3) <p> It was proved that such a mechanism removes all the loops, provided that delay and cost vectors at all nodes are up-to-date (or at least consistent), a condition that does not hold sometimes in a dynamic network. Sun-Landgendorfer algorithm <ref> [50] </ref>: Sun and Langen-dorfer [50] improved the worst-case performance of Salama et al algorithm by avoiding loops instead of detecting and removing loops. A control message is sent to construct the routing path. <p> It was proved that such a mechanism removes all the loops, provided that delay and cost vectors at all nodes are up-to-date (or at least consistent), a condition that does not hold sometimes in a dynamic network. Sun-Landgendorfer algorithm <ref> [50] </ref>: Sun and Langen-dorfer [50] improved the worst-case performance of Salama et al algorithm by avoiding loops instead of detecting and removing loops. A control message is sent to construct the routing path.
Reference: [51] <author> H. Takahashi and A. </author> <title> Matsuyama. An approximate solution for the steiner tree problem in graphs. Mathematica Japonica, </title> <year> 1980. </year>
Reference-contexts: Table 2: Multicast algorithms alorithm solving problem routing strategy time complexity Comm. complexity maintaining state routing MOSPF [33] least-delay r. source O (vlogv) global Zero Kou et al [28] least-cost r. source O (gv 2 ) global Zero Takahashi-Matsuyama <ref> [51] </ref> least-cost r. source O (gv 2 ) global Zero Kompella et al [26] delay-constrained least-cost r. source O (v 3 ) (1) global Zero Sun-Landgendorfer [49] delay-constrained least-cost r. source O (vlogv + e) global Zero Widyono [53] delay-constrained least-cost r. source exponential (2) global Zero Zhu et al [56] <p> The Prim's algorithm [41] is used to construct a minimum spanning tree in the complete graph, and the Steiner tree of the original network is obtained by replacing the edges in the minimum spanning tree by the shortest paths and removing the loops. 2) Takahashi-Matsuyama algorithm <ref> [51] </ref>: Takahashi-Matsuyama algorithm finds a Steiner tree by an incremental approach called nearest destination first (NDF). Initially, the nearest destination (in terms of cost) to the source is founded and the least-cost path between them is selected.
Reference: [52] <author> Z. Wang and J. Crowcroft. </author> <title> Qos routing for supporting resource reservation. </title> <address> JSAC, </address> <month> September </month> <year> 1996. </year>
Reference-contexts: Hence, the routing response time can be made shorter and the algorithm is more scalable. Searching multiple paths in parallel for a feasible one is made possible, which increases the chance of success. Most existing distributed routing algorithms <ref> [43, 50, 52] </ref> require each node to maintain a global network state (distance vectors), based on which the routing decision is made on a hop-by-hop basis. Some flooding-based algorithms do not require any global state to be maintained. <p> We discuss the problems and solutions, basic ideas, compare them and discuss their pros and cons. See Table 1 for a summarizing comparison. Algorithms are referred by the authors' names and a reference to their paper. 6.1 Source routing algorithms Wang-Crowcroft algorithm <ref> [52] </ref>: Wang-Crowcroft algorithm finds a bandwidth-delay-constrained path by the Dijk-stra's shortest-path algorithm. First, all links with a bandwidth less than the requirement are eliminated so that any paths in the resulting graph will satisfy the bandwidth constraint. Then, the shortest path in terms of delay is found. <p> Therefore, the problem of finding a path satisfying bandwidth, delay, delay-jitter and buffer space constraints, which is NP-complete in general <ref> [18, 52] </ref>, can be simplified by taking these functional relationships into consideration and thus can be solved by a modified version of Bellman-Ford algorithm in polynomial time. A much further study of QoS routing on rate-based scheduling networks was done recently by Orda [35]. <p> highest probability to satisfy a given end-to-end 3 Guerin-Orda algorithm was designed to be used in hierarchical routing, though we present it as an independent source routing algo rithm in this paper. 11 Table 1: Unicast algorithms alorithm solving problem routing strategy time complexity Comm. complexity maintaining state routing Wang-Crowcroft <ref> [52] </ref> bandwidth-delay-constrained r. source O (vlogv + e) global Zero Ma-Steenkiste [32] bandwidth-constrained r. source O (vlogv + e) global Zero multi-constrained r. (1) source O (kve) (1) global Zero Guerin-Orda [20] (2:1) bandwidth-constrained r. source O (vlogv + e) imprecise global Zero delay-constrained r. source polynomial (2:2) imprecise global Zero <p> [32] bandwidth-constrained r. source O (vlogv + e) global Zero multi-constrained r. (1) source O (kve) (1) global Zero Guerin-Orda [20] (2:1) bandwidth-constrained r. source O (vlogv + e) imprecise global Zero delay-constrained r. source polynomial (2:2) imprecise global Zero Chen-Nahrstedt [10] bandwidth-cost-constrained r. source O (xve) global Zero Wang-Crowcroft <ref> [52] </ref> bandwidth-optimization r. distributed O (ve) global O (v) Salama et al [43] delay-constrained least-cost r. distributed O (v 3 ) global O (v 3 ) (6) Sun-Landgendorfer [50] delay-constrained least-cost r. distributed O (v) global O (v) Cidon et al [11] generic r. (3) distributed O (e) global O (e) <p> Path precomputation and caching were studied to make a tradeoff between processing overhead and the routing performance [7, 24, 39, 46]. 6.2 Distributed routing algorithms Wang-Crowcroft algorithm <ref> [52] </ref>: Wang and Crowcroft proposed a hop-by-hop distributed routing scheme, in which every node pre-computes a forwarding entry for every possible destination. The forwarding entry, which is updated periodically, stores the next hop on the routing path to the destination. <p> A link-state protocol is used to maintain at every node a complete global state, based on which the forwarding entries for the shortest-widest path is computed by a modified Bellman-Ford (or Dijkstra's) algorithm <ref> [52] </ref>. A routing path is the combination of the forwarding entries indexed by the same destination at all intermediate nodes. The path is loop-free if the state information at all nodes is consistent.
Reference: [53] <author> R. Widyono. </author> <title> The design and evaluation of routing algorithms for real-time channels. </title> <type> Technical Report, </type> <institution> ICSI TR-94-024, University of California at Berkeley International Computer Science Institute, </institution> <month> June </month> <year> 1994. </year>
Reference-contexts: al [28] least-cost r. source O (gv 2 ) global Zero Takahashi-Matsuyama [51] least-cost r. source O (gv 2 ) global Zero Kompella et al [26] delay-constrained least-cost r. source O (v 3 ) (1) global Zero Sun-Landgendorfer [49] delay-constrained least-cost r. source O (vlogv + e) global Zero Widyono <ref> [53] </ref> delay-constrained least-cost r. source exponential (2) global Zero Zhu et al [56] delay-constrained least-cost r. source O (kv 3 logv) global Zero Rouskas-Baldine [42] delay-constrained least-cost r. source O (klgv 4 ) (3) global Zero Kompella et al [26] delay-constrained least-cost r. distributed O (gv 3 ) global O (v <p> This process is repeated until all destinations are in cluded in the tree. 17 Constrained Steiner tree problem The problem of finding a delay-bounded least-cost multicast tree, called a constrained Steiner tree, is NP-complete [26]. Heuristic source routing algorithms were proposed for this problem <ref> [26, 49, 53, 56] </ref>. A performance evaluation of the algorithms was done by Salama et al through extensive simulation [44]. 1) Kompella et al algorithm [26]: A source routing heuristic was proposed by Kompella et al to construct a constrained Steiner tree. <p> Path k ! m ! n in (a) is replaced by path k ! n in (b). The cost is reduced by 1. 3) Widyono algorithm <ref> [53] </ref>: Widyono proposed several heuristic algorithms for the constrained Steiner tree problem. The one with the best performance is called constrained adaptive ordering heuristic.
Reference: [54] <author> L. Zhang. </author> <title> Virtual clock: A new traffic control algorithm for packet switching networks. </title> <booktitle> ACM SIGCOMM'90, </booktitle> <pages> pages 19-29, </pages> <month> September </month> <year> 1990. </year>
Reference-contexts: Then, the shortest path in terms of delay is found. The path is feasible if and only if it satisfies the delay constraint. Ma-Steenkiste algorithm [32]: Ma and Steenkiste showed that when a class of WFQ-like (Weighted Fair Queueing) scheduling algorithms <ref> [6, 13, 19, 54] </ref> are used, the end-to-end delay, delay-jitter, and buffer space bounds are not independent but are functions of the reserved bandwidth, the selected path and the traffic characteristics.
Reference: [55] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zap-pala. Rsvp: </author> <title> A new resource reservation protocol. </title> <journal> IEEE Network, </journal> <month> September </month> <year> 1993. </year>
Reference-contexts: Meeting the QoS requirement of each individual connection and reducing the call-blocking rate are important for the QoS routing, while the fairness, overall throughput and average response time are the essential issues for the traditional routing. QoS routing and resource reservation: The QoS routing and the resource reservation <ref> [15, 55] </ref> are two important, closely related network components.
Reference: [56] <author> Q. Zhu, M. Parsa, and J.J. Garcia-Luna-Aceves. </author> <title> A source-based algorithm for delay-constrained minimum-cost multicasting. </title> <booktitle> Proc. IEEE INFOCOM 95, </booktitle> <address> Boston, MA, </address> <month> April </month> <year> 1995. </year> <month> 24 </month>
Reference-contexts: [51] least-cost r. source O (gv 2 ) global Zero Kompella et al [26] delay-constrained least-cost r. source O (v 3 ) (1) global Zero Sun-Landgendorfer [49] delay-constrained least-cost r. source O (vlogv + e) global Zero Widyono [53] delay-constrained least-cost r. source exponential (2) global Zero Zhu et al <ref> [56] </ref> delay-constrained least-cost r. source O (kv 3 logv) global Zero Rouskas-Baldine [42] delay-constrained least-cost r. source O (klgv 4 ) (3) global Zero Kompella et al [26] delay-constrained least-cost r. distributed O (gv 3 ) global O (v 3 ) Chen-Nahrstedt [9] generic r. distributed O (ge) local O (e) <p> This process is repeated until all destinations are in cluded in the tree. 17 Constrained Steiner tree problem The problem of finding a delay-bounded least-cost multicast tree, called a constrained Steiner tree, is NP-complete [26]. Heuristic source routing algorithms were proposed for this problem <ref> [26, 49, 53, 56] </ref>. A performance evaluation of the algorithms was done by Salama et al through extensive simulation [44]. 1) Kompella et al algorithm [26]: A source routing heuristic was proposed by Kompella et al to construct a constrained Steiner tree. <p> The found path as well as the destination is then inserted into the tree. The cost of links in the tree is set to zero. The above process repeats until the tree covers all destinations. 4) Zhu et al algorithm <ref> [56] </ref>: Zhu et al proposed a source routing heuristic to construct constrained Steiner trees. The algorithm allows variable delay bounds on destinations. A shortest-path tree in terms of delay is first constructed by Dijkstra's algorithm. If the delay constraint cannot be satisfied for any destination, it must be re-negotiated.
References-found: 56

