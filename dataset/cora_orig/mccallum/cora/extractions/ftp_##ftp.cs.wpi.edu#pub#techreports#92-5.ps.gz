URL: ftp://ftp.cs.wpi.edu/pub/techreports/92-5.ps.gz
Refering-URL: http://cs.wpi.edu/Resources/techreports/index.html
Root-URL: 
Title: Relativizations of the P-Printable Sets and the Sets with Small Generalized Kolmogorov Complexity (Revised)  
Author: by Roy S. Rubinstein 
Address: 100 Institute Road, Worcester, Massachusetts 01609-2280  
Affiliation: WORCESTER POLYTECHNIC INSTITUTE Computer Science Department  
Date: August 1992  
Pubnum: WPI-CS-TR-92-5  
Abstract: Computer Science Technical Report Series 
Abstract-found: 1
Intro-found: 1
Reference: [All91] <author> E. Allender. </author> <title> Limitations of the upward separation technique. </title> <journal> Math. Systems Theory, </journal> <volume> 24(1) </volume> <pages> 53-67, </pages> <year> 1991. </year>
Reference-contexts: P implies the existence of a sparse set in P that is not P-printable ([AR88]), we could easily prove "There exists a sparse set in FewP P if and only if there exists a tally set in FewP P." Unfortunately, the techniques usually used for such results (see [HIS85] and <ref> [All91] </ref>) do not appear to work in this setting, and the veracity of these statements is unknown. The techniques of [HIS85] can, however, be extended to yield the following result. Theorem 3.7 Every sparse set in FewP is P-printable relative to some tally set in NP.
Reference: [AR88] <author> E. Allender and R. Rubinstein. </author> <title> P-printable sets. </title> <journal> SIAM J. Comput., </journal> <volume> 17(6) </volume> <pages> 1193-1202, </pages> <year> 1988. </year>
Reference-contexts: P-printability relativizes (as in a set being P A -printable) by allowing the printing machine to use an oracle. A set is self-P-printable if it is P-printable relative to itself. P-printability was introduced in [HY84] and was further explored in [HIS85], <ref> [AR88] </ref>, and [Rub91]. Definition 2.5 For any set A, enum A is the function that, for each n, on input 0 n produces a straightforward encoding of the set of strings in A of length less than or equal to n. <p> One other result is needed first. It was shown in <ref> [HH88, BB86, Rub86, AR88] </ref> that a set is P-printable if and only if it has small generalized Kolmogorov complexity and is in P. This result and its proof relativize to give the following proposition. <p> S is P 2 -printable. Corollary 4.3 (1) ) (2) ) (3): 1. S is a sparse set in P k . 2. S is P-printable relative to some sparse set in P k+1 . k+2 -printable. The following theorem is essentially a relativization of a result in <ref> [AR88] </ref>. The proof is slightly different, but the original proof relativizes as well. Theorem 4.4 For every class C, there are no sparse sets in FewP C P C if and only if every sparse set in P C is P C -printable.
Reference: [BB86] <author> J. Balcazar and R. </author> <title> Book. Sets with small generalized Kolmogorov complexity. </title> <journal> Acta Informatica, </journal> <volume> 23 </volume> <pages> 679-688, </pages> <year> 1986. </year>
Reference-contexts: For any class of sets C, SGK C is the union over all A in C of SGK A . 2 <ref> [BB86] </ref> refers to this class as K [log, poly]. 4 Definition 2.4 A set S is polynomial-time printable (P-printable) if there exists a poly-nomial p such that all the elements of S of length less than or equal to n can be printed by a deterministic machine in time p (n). <p> One other result is needed first. It was shown in <ref> [HH88, BB86, Rub86, AR88] </ref> that a set is P-printable if and only if it has small generalized Kolmogorov complexity and is in P. This result and its proof relativize to give the following proposition. <p> By Proposition 3.3, S is then in SGK SPARSE = SGK TALLY . 2 Corollary 3.5 SGK the class of self-P-printable sets SGK TALLY . 7 Proof These proper inclusions are already known and may be found in <ref> [BB86, Rub91] </ref>. 2 While every sparse set is P SPARSE -printable, not every sparse set is self-P-printable. A sparse set may need a more powerful sparse set to enumerate itself in polynomial time. As the following theorem shows, all that is needed is a tally set.
Reference: [BBS86] <author> J. Balcazar, R. Book, and U. Schoning. </author> <title> The polynomial-time hierarchy and sparse oracles. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 33(3) </volume> <pages> 603-617, </pages> <year> 1986. </year>
Reference: [BGS75] <author> T. Baker, J. Gill, and R. Solovay. </author> <title> Relativizations of the P =? NP question. </title> <journal> SIAM J. Comput., </journal> <volume> 4(4) </volume> <pages> 431-441, </pages> <month> Dec. </month> <year> 1975. </year>
Reference-contexts: Specifically, relativizations of the classes of P-printable sets and sets with small Generalized Kolmogorov complexity (SGK) are studied. Definitions of these and other classes are presented in Section 2. Although much work has been done studying relativizations of the computational complexity classes, including P and NP (starting with <ref> [BGS75] </ref>), relativizations of the structural complexity classes (see [Rub88]) have been neglected. This paper begins the study of relativizations of the structural complexity classes. Any set that is P C -printable or in SGK C , for any class C, must be sparse.
Reference: [Cha66] <author> G. Chaitin. </author> <title> On the length of programs for computing finite binary sequences. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 13 </volume> <pages> 547-569, </pages> <year> 1966. </year>
Reference: [Har83] <author> J. Hartmanis. </author> <title> Generalized Kolmogorov complexity and the structure of feasible computations. </title> <booktitle> In Proc. 24th IEEE Symp. on Foundations of Computer Science, </booktitle> <address> Tucson, Arizona, </address> <pages> pages 439-445, </pages> <year> 1983. </year>
Reference-contexts: Definition 2.2 For a (deterministic) Turing machine M and functions g and G mapping natural numbers to natural numbers, let K M [g (n); G (n)] = fx j (9y)[jyj g (jxj) and M (y) = x in G (jxj) or fewer steps]g: It was shown in <ref> [Har83] </ref> that there exists a universal Turing machine M u such that for any other Turing machine M there exists a constant c such that K M [g (n); G (n)] K M u [g (n) + c; cG (n) log G (n) + c].
Reference: [Hem87] <author> L. Hemachandra. </author> <title> Counting in Structural Complexity Theory. </title> <type> PhD thesis, </type> <institution> Cor-nell University, </institution> <year> 1987. </year>
Reference-contexts: There appears to be no obvious solution to this. We do have a similar result for NEXPTIME, though by a different technique. Theorem 4.10 Every sparse set in P NEXPTIME is P NEXPTIME -printable. 14 Proof It was shown by Hemachandra <ref> [Hem87] </ref> that the strong exponential hierarchy collapses to the P NEXPTIME level, i.e. P NEXPTIME = NP NEXPTIME , so P NEXPTIME = FewP NEXPTIME .
Reference: [HH88] <author> J. Hartmanis and L. Hemachandra. </author> <title> On sparse oracles separating feasible computation classes. </title> <journal> Info. Proc. Letters, </journal> <volume> 28 </volume> <pages> 291-296, </pages> <year> 1988. </year>
Reference-contexts: One other result is needed first. It was shown in <ref> [HH88, BB86, Rub86, AR88] </ref> that a set is P-printable if and only if it has small generalized Kolmogorov complexity and is in P. This result and its proof relativize to give the following proposition.
Reference: [HIS85] <author> J. Hartmanis, N. Immerman, and V. Sewelson. </author> <title> Sparse sets in NP P: EXP-TIME versus NEXPTIME. </title> <journal> Information and Control, </journal> <volume> 65 </volume> <pages> 158-181, </pages> <year> 1985. </year>
Reference-contexts: P-printability relativizes (as in a set being P A -printable) by allowing the printing machine to use an oracle. A set is self-P-printable if it is P-printable relative to itself. P-printability was introduced in [HY84] and was further explored in <ref> [HIS85] </ref>, [AR88], and [Rub91]. Definition 2.5 For any set A, enum A is the function that, for each n, on input 0 n produces a straightforward encoding of the set of strings in A of length less than or equal to n. <p> in FewP P implies the existence of a sparse set in P that is not P-printable ([AR88]), we could easily prove "There exists a sparse set in FewP P if and only if there exists a tally set in FewP P." Unfortunately, the techniques usually used for such results (see <ref> [HIS85] </ref> and [All91]) do not appear to work in this setting, and the veracity of these statements is unknown. The techniques of [HIS85] can, however, be extended to yield the following result. Theorem 3.7 Every sparse set in FewP is P-printable relative to some tally set in NP. <p> exists a sparse set in FewP P if and only if there exists a tally set in FewP P." Unfortunately, the techniques usually used for such results (see <ref> [HIS85] </ref> and [All91]) do not appear to work in this setting, and the veracity of these statements is unknown. The techniques of [HIS85] can, however, be extended to yield the following result. Theorem 3.7 Every sparse set in FewP is P-printable relative to some tally set in NP.
Reference: [HR92] <author> L. Hemachandra and R. Rubinstein. </author> <title> Separating complexity classes with tally oracles. </title> <journal> Theoretical Computer Science, </journal> <volume> 92 </volume> <pages> 309-318, </pages> <year> 1992. </year> <month> 21 </month>
Reference: [HY84] <author> J. Hartmanis and Y. Yesha. </author> <title> Computation times of NP sets of different densities. </title> <journal> Theoretical Computer Science, </journal> <volume> 34 </volume> <pages> 17-32, </pages> <year> 1984. </year>
Reference-contexts: P-printability relativizes (as in a set being P A -printable) by allowing the printing machine to use an oracle. A set is self-P-printable if it is P-printable relative to itself. P-printability was introduced in <ref> [HY84] </ref> and was further explored in [HIS85], [AR88], and [Rub91]. Definition 2.5 For any set A, enum A is the function that, for each n, on input 0 n produces a straightforward encoding of the set of strings in A of length less than or equal to n.
Reference: [Kol65] <author> A. </author> <title> Kolmogorov. Three approaches to the quantitative definition of information. </title> <journal> Prob. Inform. Trans., </journal> <volume> 1 </volume> <pages> 1-7, </pages> <year> 1965. </year>
Reference: [Lon85] <author> T. </author> <title> Long. On restricting the size of oracles compared with restricting access to oracles. </title> <journal> SIAM J. Comput., </journal> <volume> 14(3) </volume> <pages> 585-597, </pages> <year> 1985. </year>
Reference-contexts: This class relativizes (such as FewP A ) in a straightforward manner. In <ref> [Lon85] </ref> and [LS86] it is shown that for every sparse set S, enum S 2 PSV prefix (S)S , where prefix (S) = fhy; 0 n i j 9z [yz 2 S and jyzj n]g. ( denotes disjoint union, such as A B = f0x j x 2 Ag [ f1y
Reference: [LS86] <author> T. Long and A. Selman. </author> <title> Relativizing complexity classes with sparse oracles. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 33(3) </volume> <pages> 618-627, </pages> <year> 1986. </year>
Reference-contexts: This class relativizes (such as FewP A ) in a straightforward manner. In [Lon85] and <ref> [LS86] </ref> it is shown that for every sparse set S, enum S 2 PSV prefix (S)S , where prefix (S) = fhy; 0 n i j 9z [yz 2 S and jyzj n]g. ( denotes disjoint union, such as A B = f0x j x 2 Ag [ f1y j y
Reference: [Rub86] <author> R. Rubinstein. </author> <title> A note on sets with small generalized Kolmogorov complexity. </title> <type> Technical Report TR #86-4, </type> <institution> Iowa State University, Ames, IA, </institution> <month> March </month> <year> 1986. </year>
Reference-contexts: One other result is needed first. It was shown in <ref> [HH88, BB86, Rub86, AR88] </ref> that a set is P-printable if and only if it has small generalized Kolmogorov complexity and is in P. This result and its proof relativize to give the following proposition.
Reference: [Rub88] <author> R. Rubinstein. </author> <title> Structural complexity classes of sparse sets: intractability, data compression and printability. </title> <type> PhD thesis, </type> <institution> College of Computer Science, Northeastern University, </institution> <address> Boston, MA, </address> <year> 1988. </year>
Reference-contexts: Definitions of these and other classes are presented in Section 2. Although much work has been done studying relativizations of the computational complexity classes, including P and NP (starting with [BGS75]), relativizations of the structural complexity classes (see <ref> [Rub88] </ref>) have been neglected. This paper begins the study of relativizations of the structural complexity classes. Any set that is P C -printable or in SGK C , for any class C, must be sparse.
Reference: [Rub91] <author> R. Rubinstein. </author> <title> Self-P-printability and polynomial time Turing equivalence to a tally set. </title> <journal> SIAM J. Comput., </journal> <volume> 20(6) </volume> <pages> 1021-1033, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: P-printability relativizes (as in a set being P A -printable) by allowing the printing machine to use an oracle. A set is self-P-printable if it is P-printable relative to itself. P-printability was introduced in [HY84] and was further explored in [HIS85], [AR88], and <ref> [Rub91] </ref>. Definition 2.5 For any set A, enum A is the function that, for each n, on input 0 n produces a straightforward encoding of the set of strings in A of length less than or equal to n. <p> By Proposition 3.3, S is then in SGK SPARSE = SGK TALLY . 2 Corollary 3.5 SGK the class of self-P-printable sets SGK TALLY . 7 Proof These proper inclusions are already known and may be found in <ref> [BB86, Rub91] </ref>. 2 While every sparse set is P SPARSE -printable, not every sparse set is self-P-printable. A sparse set may need a more powerful sparse set to enumerate itself in polynomial time. As the following theorem shows, all that is needed is a tally set.
Reference: [Sch86] <author> U. Schoning. </author> <title> Complexity and Structure. </title> <booktitle> Lecture Notes in Computer Science Vol. </booktitle> <volume> 211. </volume> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1986. </year>
Reference-contexts: When structural complexity classes are used as oracles, however, not much power is needed to capture all the sparse sets. In particular, it is shown that every sparse set is in SGK TALLY and is P TALLY -printable. This improves a result in <ref> [Sch86] </ref> that every sparse set is in P TALLY (as a corollary of his result that P TALLY = P=poly). If the number of oracle calls is restricted, however, the sparse sets may not all be captured.
Reference: [Sol64] <author> R. Solomonoff. </author> <title> A formal theory of inductive inference, Part 1 and Part 2. </title> <journal> Info. and Control, </journal> <volume> 7 </volume> <pages> 1-22, 224-254, </pages> <year> 1964. </year> <month> 22 </month>
References-found: 20

