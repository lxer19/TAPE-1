URL: ftp://ftpipr.ira.uka.de/pub/papers/1995/smi95au.ps.gz
Refering-URL: ftp://ftpipr.ira.uka.de/.public_html/papersna.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Robot motion specification: a vision-based approach Keywords: Robot programming; Robot path planning; Teaching by showing;
Author: Ales Ude and Rudiger Dillmann, 
Affiliation: Karlsruhe  
Date: 109-131, 1995  
Note: In: Surveys on Mathematics for Industry, vol. 5, pp.  AMS Subject Classification: 62G07, 68T35  
Abstract: Summary: This paper presents an easy-to-use method for the specification of complex robot motions. The user demonstrates a desired motion by moving an object to be manipulated with his own hand. His performance is measured by a stereo vision system. The optimal motion is reconstructed with the help of a non-parametric regression technique which is based on smoothing vector splines and cross-validation. Uncertainties contained in the measurements are considered explicitly in the process of reconstruction. The proposed method can account for different kinds of restrictions imposed on the robot's motion. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Archibald and E. Petriu. </author> <title> Computational paradigm for creating and executing sensor-based robot skills. </title> <booktitle> In Proc. 24th Int. Symp. Industrial Robots, </booktitle> <pages> pages 401-406, </pages> <address> Tokyo, Japan, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Teaching by showing, which is also referred to as programming by demonstration, and iconic programming <ref> [1, 23] </ref> seems to be the most promising among them. Instead of a fully autonomous planning, such systems keep the user in the loop. However, they offer him a substantial programming support which makes the programming comfortable and efficient.
Reference: [2] <author> N. Ayache. </author> <title> Artificial Vision for Mobile Robots: Stereo Vision and Multisensory Perception. </title> <publisher> MIT Press, </publisher> <address> Cambridge, </address> <year> 1991. </year>
Reference-contexts: However, since kr 1 r 2 k = 2, these two representations are always well separated and it is possible to find a differentiable atlas of four charts <ref> [2] </ref> which map SO (3) into the subsets of B. This is an important advantage in comparison with Euler angles which do not allow the construction of the differentiable atlas on SO (3). <p> x r z g ()r y h ()r y r z + g ()r x h ()r 2 3 5 ; (19) sin () ; g () = 2 ; h () = 2 : It can be shown that matrix H (r) is nonsingular for every krk &lt; 2 <ref> [2] </ref>. Consider Eq. (18); the same time derivative of the rotation vector gives rise to different angular velocities at different configurations.
Reference: [3] <author> Y. Bar-Shalom and T. E. Fortmann. </author> <title> Tracking and Data Association. </title> <publisher> Academic Press, </publisher> <address> Orlando, </address> <year> 1988. </year>
Reference-contexts: Details about the localization system can be found in [31]. The complexity of scenes which can be processed by the described system is illustrated in Fig. 2. Using the object poses calculated at first few measurement instants, a random acceleration kinematic model <ref> [3] </ref> for the object's motion is initialized. The running phase uses a classical procedure based on Kalman filtering (see Sect. 3) in order to facilitate the determination of object poses at next measurement instants. It consists of prediction, verification and adjustment. <p> A kinematic model for the object motion is needed for this purpose. We have utilized the so-called random acceleration kinematic model which is given by the following equation <ref> [3] </ref> p (t) = ~ v (t); (6) " 0 3 ffI 3 ; (7) where ffi (t t ) denotes the Dirac delta function. This means that we expect the acceleration to be equal to zero. In practice, the velocity undergoes at least slight changes. <p> However, measurement equation (9) is nonlinear. One approach to this situation is to compute 8 the adjusted state x (k) as a maximum a posteriori estimate, i. e., as the vector minimizing the following criterion <ref> [3] </ref> (x (kjk 1) x) T (kjk 1) 1 (x (kjk 1) x) + over x. Alternatively, one could use the iterated extended Kalman filter to compute x (k).
Reference: [4] <author> P. Craven and G. Wahba. </author> <title> Smoothing noisy data with spline functions. </title> <journal> Numer. Math., </journal> <volume> 31 </volume> <pages> 377-403, </pages> <year> 1979. </year>
Reference-contexts: This result is a generalization of the so called leaving-out-one lemma, which was first proved for the case D = 1 in <ref> [4] </ref>. Using the leaving-out-one lemma and the equation (32) one can see that (j) (t j ) = fj; (j) (t j )g (t j ) = i=1 H (ji) ()p i + H (jj) () (j) (t j ) + b; (50) where b is independent of p.
Reference: [5] <author> C. de Boor. </author> <title> A Practical Guide to Splines. </title> <publisher> Springer, </publisher> <address> New York, </address> <year> 1978. </year>
Reference-contexts: Furthermore, if the constraints are ordered as assumed above, then the solution can be written as (t) = j=1 where each B j belongs to the space of B-splines (see <ref> [5] </ref> for the details about the theory of B-splines) of the order 2m defined on the non-descending knot sequence S = fs 1 ; : : : ; s n g, in which s 1 and s n appear 2m times and the other s j appear k j + 1 <p> We formulate the following one dimensional optimization problems for all D components of the solution trajectory minimize Z b ( (m) (t)) 2 dt; subject to (i) (s j ) = (i) Such problems are known as complete spline interpolation. It can be shown (see <ref> [5] </ref>, Theorem XIII.5) that a solution to the complete spline interpolation is a polynomial spline, which we denote here by -k and which can be written as -k (t) = i=1 The B-splines B i (t) are defined on the knot sequence S.
Reference: [6] <author> F. R. de Hoog and M. F. Hutchinson. </author> <title> An efficient method for calculating smoothing splines using orthogonal transformations. </title> <journal> Numer. Math., </journal> <volume> 50 </volume> <pages> 311-319, </pages> <year> 1987. </year>
Reference-contexts: Employing the method proposed by Hutchinson and de Hoog <ref> [6, 15] </ref>, the diagonal blocks of the matrix H () 1 and consequently the cross-validation score can be calculated with O ((mD) 2 M ) arithmetic operations, once the solution trajectory is determined.
Reference: [7] <author> R. Deriche and O. Faugeras. </author> <title> Tracking line segments. </title> <editor> In O. Faugeras, editor, </editor> <booktitle> Computer Vision | ECCV '90; First European Conf. Computer Vision, Antibes, France, </booktitle> <pages> pages 259-268. </pages> <publisher> Springer, </publisher> <address> Berlin, Heidelberg, </address> <year> 1990. </year>
Reference-contexts: Since straight line segments are the smallest primitives that are directly used, the uncertainties must be modelled at this level. It has been shown <ref> [7] </ref> that the mid-point representation for 2-D line segments, which consists of their midpoints, lengths and angles, is appropriate for this purpose. <p> The ratio ~ k =~ ? must be determined experimentally. We assume that the uncertainties in both directions as well as the uncertainties in both end-points 6 are uncorrelated. The covariance matrix of the parameter vector [x m ; y m ; ; l] &gt; is given by <ref> [7] </ref> ~ = 2 ; = 6 6 6 2 ? sin 2 () ( 2 ? ) sin () cos () ( 2 ? ) sin () cos () 2 ? cos 2 () 0 0 ? 0 0 0 2 2 3 7 7 5 The object pose is
Reference: [8] <author> R. Dillmann, M. Kaiser, J. Kreuziger, S. M"unch, and A. Ude. </author> <title> Acquiring robot skills and knowledge by human demonstration. </title> <type> Unpublished paper., </type> <year> 1995. </year>
Reference-contexts: Instead of a fully autonomous planning, such systems keep the user in the loop. However, they offer him a substantial programming support which makes the programming comfortable and efficient. Dillman et al. <ref> [8] </ref> propose an integrated system which utilizes the programming by demonstration paradigm on all levels of robot programming. The addition of an iconic programming language to such a system would result in an extremely user-friendly programming environment.
Reference: [9] <author> H. I. El-Zorkany, R. Liscano, B. Tondu, and G. Sawatzky. </author> <title> Sensor-based location and trajectory specification and correction in robot programming. </title> <booktitle> In Proc. 16th Int. Symp. Industrial Robots, </booktitle> <pages> pages 643-655, </pages> <address> Brussels, Belgium, </address> <month> October </month> <year> 1986. </year>
Reference-contexts: This enables the generation of a symbolic description of the task that can be converted into an executable robot program. However, both systems can analyze only extremely simple tasks. Methods for the specification of robot motions based on the previously described general method were considered in <ref> [9, 29] </ref>. The desired motion was demonstrated by moving a specially designed teaching tool with attached LEDs. A dense set of poses on the path was measured in order to estimate the overall path. Various heuristics were developed to improve the accuracy of the reconstruction.
Reference: [10] <author> R. L. Eubank. </author> <title> Spline Smoothing and Nonparametric Regression. </title> <publisher> Marcel Dekker, </publisher> <address> New York, </address> <year> 1988. </year>
Reference-contexts: We would like to minimize the criteria f ()= 2 and g k () simultaneously, but these are conflicting goals in general. A standard non-parametric solution is to minimize the following combined criterion <ref> [10, 34] </ref> = arg min f () + k=1 This criterion function is minimized over the space of vector functions W m D [a; b] which is defined as a Cartesian product of D Sobolev spaces W m [a; b], i. e., W m D [a; b] = W m [a; <p> However, this minimization is in practice impossible because the true trajectory is unknown. In the scalar case, several methods for choosing have been 14 suggested. The minimization of the cross-validation score <ref> [10, 34] </ref> is one of the most popular choices.
Reference: [11] <author> J. A. Fessler. </author> <title> Nonparametric fixed-interval smoothing with vector splines. </title> <journal> IEEE Trans. Signal Processing, </journal> <volume> 39(4) </volume> <pages> 852-859, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: Since the problem (45) has a unique solution, must be equal to -, i.e. is a polynomial vector spline of the form (26). Proof of Theorem 2: This proof is obtained by the generalization of results from <ref> [11] </ref> and [34]. Let fj; zg denotes the solution to the minimization problem minimize 1 k j (z (t i ))k 2 + M i=1 k i (p i (t i ))k 2 + i=1 subject to 2 C (48) By the definition = fj; p j g.
Reference: [12] <author> D. B. Gennery. </author> <title> Visual tracking of known three-dimensional objects. </title> <journal> Intern. J. Comput. Vis., </journal> <volume> 7(3) </volume> <pages> 243-270, </pages> <year> 1992. </year> <month> 20 </month>
Reference-contexts: If the stereo image sequence is dense, the random acceleration model locally approximates the actual object's motion well enough. More sophisticated models for the rigid body motion have been proposed in the literature <ref> [12, 21, 35, 37] </ref>.
Reference: [13] <author> A. Giordana, M. Kaiser, and M. Nuttin. </author> <title> On the reduction of costs for robot controller synthesis. </title> <booktitle> In Proc. Int. Symp. Intelligent Robotic Systems '94, </booktitle> <pages> pages 187-197, </pages> <address> Grenoble, France, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: They are used when the robot must maintain a certain relationship with other objects, e. g., when inserting a peg into a hole. This kind of motions can be specified by use of the teaching by showing paradigm, too, but this is not the topic of this article. See <ref> [13] </ref> for some comparative results concerning the specification of fine motions. Gross motions are carried out in the free space larger than the space occupied by the objects plus the robot's positional error. On-line sensing is normally not needed during gross motions.
Reference: [14] <author> C. L. Hu and L. L. Schumaker. </author> <title> Complete spline smoothing. </title> <journal> Numer. Math., </journal> <volume> 49 </volume> <pages> 1-10, </pages> <year> 1986. </year>
Reference-contexts: Hence we can approximate the hat matrix corresponding to the problem (41) with the one corresponding to the problem (43). A numerically more stable procedure might be obtained by generalizing the results from <ref> [14] </ref>, but we have not explored this possibility. The computation of the constrained cross-validation score can be accomplished as follows: 1.
Reference: [15] <author> M. F. Hutchinson and F. R. de Hoog. </author> <title> Smoothing noisy data with spline functions. </title> <journal> Numer. Math., </journal> <volume> 47 </volume> <pages> 99-106, </pages> <year> 1985. </year>
Reference-contexts: Employing the method proposed by Hutchinson and de Hoog <ref> [6, 15] </ref>, the diagonal blocks of the matrix H () 1 and consequently the cross-validation score can be calculated with O ((mD) 2 M ) arithmetic operations, once the solution trajectory is determined.
Reference: [16] <author> Y. K. Hwang and N. Ahuja. </author> <title> Gross motion planning | A survey. </title> <journal> ACM Comp. Surv., </journal> <volume> 24(3) </volume> <pages> 219-291, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: In this paper we utilize a teaching by showing paradigm [18] as an efficient approach to achieve this goal. Robot motions can be classified as fine and gross motions <ref> [16] </ref>. Fine motions combine motion commands and on-line sensing. They are used when the robot must maintain a certain relationship with other objects, e. g., when inserting a peg into a hole. <p> There exist many extensions to this basic problem. Surveys on the methods utilized to solve these problems can be found in <ref> [16, 20] </ref>. Classical motion planning algorithms suffer from computational complexity and dependency on the model of the robot's workspace. The generation of geometric models is usually carried out with the help of CAD modellers and is a tedious task.
Reference: [17] <author> K. Ikeuchi, M. Kawade, and T. Suehiro. </author> <title> Assembly task recognition with planar, curved and mechanical contacts. </title> <booktitle> In Proc. IEEE Int. Conf. Robotics and Automation, </booktitle> <volume> Vol. II, </volume> <pages> pages 688-694, </pages> <address> Atlanta, Georgia, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: We refer to this method as teaching by showing. Vision-based robot programming has received some attention in the past. Ikeuchi et al. <ref> [17] </ref> and Kuniyoshi et al. [18, 19] used this paradigm for the task specification. Both systems are based on a visual recognition of human action sequences. This enables the generation of a symbolic description of the task that can be converted into an executable robot program.
Reference: [18] <author> Y. Kuniyoshi, M. Inaba, and H. Inoue. </author> <title> Teaching by showing: Generating robot programs by visual observation of human performance. </title> <booktitle> In Proc. 20th Int. Symp. Industrial Robots, </booktitle> <pages> pages 119-126, </pages> <address> Tokyo, Japan, </address> <year> 1989. </year>
Reference-contexts: This fact gives rise to an idea to directly transfer the user's implicit knowledge about the desired trajectory to the robot. In this paper we utilize a teaching by showing paradigm <ref> [18] </ref> as an efficient approach to achieve this goal. Robot motions can be classified as fine and gross motions [16]. Fine motions combine motion commands and on-line sensing. <p> We refer to this method as teaching by showing. Vision-based robot programming has received some attention in the past. Ikeuchi et al. [17] and Kuniyoshi et al. <ref> [18, 19] </ref> used this paradigm for the task specification. Both systems are based on a visual recognition of human action sequences. This enables the generation of a symbolic description of the task that can be converted into an executable robot program. However, both systems can analyze only extremely simple tasks.
Reference: [19] <author> Y. Kuniyoshi, M. Inaba, and H. Inoue. </author> <title> Seeing, understanding and doing human task. </title> <booktitle> In Proc. IEEE Int. Conf. Robotics and Automation, </booktitle> <pages> pages 2-9, </pages> <address> Nice, France, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: We refer to this method as teaching by showing. Vision-based robot programming has received some attention in the past. Ikeuchi et al. [17] and Kuniyoshi et al. <ref> [18, 19] </ref> used this paradigm for the task specification. Both systems are based on a visual recognition of human action sequences. This enables the generation of a symbolic description of the task that can be converted into an executable robot program. However, both systems can analyze only extremely simple tasks.
Reference: [20] <author> J.-C. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer, </publisher> <address> Boston, </address> <year> 1991. </year>
Reference-contexts: Since humans deal with motion planning for their own with no apparent difficulty, one would expect motion planning to be a relatively simple problem. However, it turns out that it is extremely difficult to duplicate this elementary operative intelligence, which is used by humans unconsciously, in a computer-controlled robot <ref> [20] </ref>. This fact gives rise to an idea to directly transfer the user's implicit knowledge about the desired trajectory to the robot. In this paper we utilize a teaching by showing paradigm [18] as an efficient approach to achieve this goal. <p> There exist many extensions to this basic problem. Surveys on the methods utilized to solve these problems can be found in <ref> [16, 20] </ref>. Classical motion planning algorithms suffer from computational complexity and dependency on the model of the robot's workspace. The generation of geometric models is usually carried out with the help of CAD modellers and is a tedious task. <p> It can be shown that SO (3) is a three dimensional differentiable manifold. This means that its local topological and differential structures are identical to those of R 3 <ref> [20] </ref>. Unfortunately, SO (3) cannot be globally embedded in the three dimensional Euclidean space [27]. Moreover, SO (3) is not a vector space. As a consequence, if we represent SO (3) by three real parameters, the Euclidean metric topology in R 3 does not induce the topology in SO (3). <p> The angular velocity ! does specify the direction of motion independently of the current configuration, but there exists no minimal representation of the orientation whose time 11 derivative would be equal to the angular velocity vector <ref> [20] </ref>. In Eq. (18) the angular velocity ! is nonlinearly dependent on the current configuration r and linearly on the time derivative of the rotation vector. A similar relation can be found for any minimal parameterization of the orientation.
Reference: [21] <author> S. Lee and Y. Kay. </author> <title> A Kalman filter approach for accurate 3-D motion estimation from a sequence of stereo images. CVGIP: </title> <booktitle> Image Understanding, </booktitle> <volume> 54(2) </volume> <pages> 244-258, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: If the stereo image sequence is dense, the random acceleration model locally approximates the actual object's motion well enough. More sophisticated models for the rigid body motion have been proposed in the literature <ref> [12, 21, 35, 37] </ref>.
Reference: [22] <author> T. Lozano-Perez. </author> <title> Robot programming. </title> <journal> Proc. IEEE, </journal> <volume> 71(7) </volume> <pages> 821-841, </pages> <month> July </month> <year> 1983. </year>
Reference-contexts: Task-level programming systems have been identified as an ultimate goal in the field of robot programming. They should be able to produce a robot program solely from a description of a desired final state without specifying the actions needed to achieve it <ref> [22] </ref>. Ideally, the user would be able to describe the desired final state in a natural language. Unfortunately, it has turned out that the development of such a system is an extremely difficult task.
Reference: [23] <author> R. Maglica and N. M-artenson. </author> <title> Visual off-line programming of industrial robots. </title> <booktitle> In Proc. 24th Int. Symp. Industrial Robots, </booktitle> <pages> pages 369-375, </pages> <address> Tokyo, Japan, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Teaching by showing, which is also referred to as programming by demonstration, and iconic programming <ref> [1, 23] </ref> seems to be the most promising among them. Instead of a fully autonomous planning, such systems keep the user in the loop. However, they offer him a substantial programming support which makes the programming comfortable and efficient.
Reference: [24] <author> L. Matthies and S. A. Shafer. </author> <title> Error modeling in stereo navigation. </title> <journal> IEEE J. Robotics Automat., </journal> <volume> RA-3(3):239-248, </volume> <month> June </month> <year> 1987. </year>
Reference-contexts: This parameter controls the tradeoff between goodness-of-fit and smoothness. It is necessary to allow for different smoothing parameters with respect to each component of the trajectory because the amount of noise contained in each component can be quite different <ref> [24] </ref>. If the components of run from zero to infinity, the components of run from interpolants to the data, to the polynomials of degree m 1 best fitting the data in a least squares sense.
Reference: [25] <author> L. E. </author> <title> Scales. Introduction to Non-Linear Optimization. </title> <publisher> Macmillan, </publisher> <address> London, </address> <year> 1985. </year>
Reference-contexts: Only the components corresponding to ffi l i and ffi r i equal to 1 are included in h. The minimization of criterion (4) is an unconstrained nonlinear least squares problem. We use the Levenberg-Marquardt method <ref> [25] </ref> to solve it. Let ~ p be the minimizer of (4). Its covariance matrix can be estimated by 2 , where = @h ( ~ p) T @p : (5) @p denotes the Jacobian matrix of the mapping h. The Levenberg-Marquardt method is iterative and requires an initial estimate.
Reference: [26] <author> K. G. Shin and N. D. McKay. </author> <title> Minimum-time control of robotic manipulators with geometric path constraints. </title> <journal> IEEE Trans. Automat. Contr., </journal> <volume> 30(6) </volume> <pages> 531-541, </pages> <month> June </month> <year> 1985. </year>
Reference-contexts: Alternatively, one could first reconstruct the shown trajectory without considering the robot's physical limitations and then scale the trajectory to comply with the robot's dynamics <ref> [26, 28] </ref>. Unfortunately, the temporal course of robot motion is changed in this case, which is not always a desired effect. It is also possible that the application itself gives rise to inequality constraints. In this case, the constraints are normally given in Cartesian coordinates.
Reference: [27] <author> J. Stuelpnagel. </author> <title> On the parametrization of the three-dimensional rotation group. </title> <journal> SIAM Review, </journal> <volume> 6(4) </volume> <pages> 422-430, </pages> <month> October </month> <year> 1964. </year>
Reference-contexts: It can be shown that SO (3) is a three dimensional differentiable manifold. This means that its local topological and differential structures are identical to those of R 3 [20]. Unfortunately, SO (3) cannot be globally embedded in the three dimensional Euclidean space <ref> [27] </ref>. Moreover, SO (3) is not a vector space. As a consequence, if we represent SO (3) by three real parameters, the Euclidean metric topology in R 3 does not induce the topology in SO (3). Let us assume that the orientation is parameterized by Euler angels.
Reference: [28] <author> S. E. Thompson and R. V. Patel. </author> <title> Formulation of joint trajectories for industrial robots using B-splines. </title> <journal> IEEE Trans. Industrial Electronics, </journal> <volume> 34(2) </volume> <pages> 192-199, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: Alternatively, one could first reconstruct the shown trajectory without considering the robot's physical limitations and then scale the trajectory to comply with the robot's dynamics <ref> [26, 28] </ref>. Unfortunately, the temporal course of robot motion is changed in this case, which is not always a desired effect. It is also possible that the application itself gives rise to inequality constraints. In this case, the constraints are normally given in Cartesian coordinates. <p> Proof: See the appendix. We are of course not the first to employ B-splines for the construction of robot trajectories <ref> [28] </ref>. The solution trajectory , which is given by (26), is 2m k j 2 continuous at each knot point s j . Since k j &lt; m by our assumptions, the solution trajectory is at least m1 continuous at 13 each knot point.
Reference: [29] <author> S. K. Tso and K. P. Liu. </author> <title> Computer-aided refinement of planned path in visual programming schemes for robots. </title> <booktitle> In Proc. 10th ISPE/IFAC Int. Conf. CAD/CAM, Robotics and Factories of the Future, </booktitle> <pages> pages 173-178, </pages> <address> Ottawa, Canada, </address> <month> August </month> <year> 1994. </year>
Reference-contexts: This enables the generation of a symbolic description of the task that can be converted into an executable robot program. However, both systems can analyze only extremely simple tasks. Methods for the specification of robot motions based on the previously described general method were considered in <ref> [9, 29] </ref>. The desired motion was demonstrated by moving a specially designed teaching tool with attached LEDs. A dense set of poses on the path was measured in order to estimate the overall path. Various heuristics were developed to improve the accuracy of the reconstruction.
Reference: [30] <author> A. Ude. </author> <title> Trajectory generation from noisy positions of object features for teaching robot paths. </title> <booktitle> Robotics and Autonomous Systems, </booktitle> <volume> 11(2) </volume> <pages> 113-127, </pages> <month> September </month> <year> 1993. </year> <month> 21 </month>
Reference-contexts: The main goal of this article is to describe a solution to the second phase of the proposed robot programming system, i. e. we concentrate on the problem of specification of robot poses and trajectories. Based on our previous work <ref> [30, 32] </ref>, we describe a theoretically well supported approach to programming of robot trajectories based on teaching by showing. The proposed methodology employs a non-parametric regression technique based on smoothing vector splines to reconstruct the shown trajectory.
Reference: [31] <author> A. Ude, H. Brode, and R. Dillmann. </author> <title> Object localization using perceptual organization and structural stereopsis. </title> <booktitle> In Proc. Third Int. Conf. Automation, Robotics and Computer Vision, </booktitle> <pages> pages 197-201, </pages> <address> Singapore, </address> <month> November </month> <year> 1994. </year>
Reference-contexts: Details about the localization system can be found in <ref> [31] </ref>. The complexity of scenes which can be processed by the described system is illustrated in Fig. 2. Using the object poses calculated at first few measurement instants, a random acceleration kinematic model [3] for the object's motion is initialized.
Reference: [32] <author> A. Ude and R. Dillmann. </author> <title> Trajectory reconstruction from stereo image sequences for teaching robot paths. </title> <booktitle> In Proc. 24th Int. Symp. Industrial Robots, </booktitle> <pages> pages 407-414, </pages> <address> Tokyo, Japan, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: The main goal of this article is to describe a solution to the second phase of the proposed robot programming system, i. e. we concentrate on the problem of specification of robot poses and trajectories. Based on our previous work <ref> [30, 32] </ref>, we describe a theoretically well supported approach to programming of robot trajectories based on teaching by showing. The proposed methodology employs a non-parametric regression technique based on smoothing vector splines to reconstruct the shown trajectory.
Reference: [33] <author> G. Wahba. </author> <title> Constrained regularization for ill posed linear operator equations, with applications in meteorology and medicine. </title> <editor> In S. Gupta and J. Berger, editors, </editor> <booktitle> Statistical Decision Theory and Related Topics III, </booktitle> <volume> Vol. 2, </volume> <pages> pages 383-418. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1982. </year>
Reference-contexts: In general, of course, the CV score and the CCV score differ in inequality constrained problems. However, in 1-D case Wahba <ref> [33] </ref> has shown that the CCV score can be used as an approximation to the CV score. We have adopted this approach in a more dimensional case. <p> We have adopted this approach in a more dimensional case. A disadvantage of the constrained cross-validation is that if the change in causes the change in the active set of constraints, the CCV score will has a jump whereas the CV score remains continuous <ref> [33] </ref>. However, once the set of active constraints becomes stable, a good convergence is normally achieved. The direct use of the hat matrix as given by equation (40) for the calculation of the central bands of H () 1 is computationally expensive.
Reference: [34] <author> G. Wahba. </author> <title> Spline Models for Observational Data. </title> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1990. </year>
Reference-contexts: The reason for this is that poses obtained by minimizing criterion (11) are correlated. However, the employed trajectory reconstruction procedure, which is based on smoothing splines, is quite likely to produce unsatisfactory results if the measurements are correlated <ref> [34] </ref>. 4 Formulation of the trajectory reconstruction problem After the tracking procedure is successfully accomplished, we obtain a sequence of pose measurements p j ; j = 1; : : : ; M; at the time instants t j , together with their covariance matrices 2 j . <p> We would like to minimize the criteria f ()= 2 and g k () simultaneously, but these are conflicting goals in general. A standard non-parametric solution is to minimize the following combined criterion <ref> [10, 34] </ref> = arg min f () + k=1 This criterion function is minimized over the space of vector functions W m D [a; b] which is defined as a Cartesian product of D Sobolev spaces W m [a; b], i. e., W m D [a; b] = W m [a; <p> However, this minimization is in practice impossible because the true trajectory is unknown. In the scalar case, several methods for choosing have been 14 suggested. The minimization of the cross-validation score <ref> [10, 34] </ref> is one of the most popular choices. <p> A. Ude is on leave from the Jozef Stefan Institute, Ljubljana, Slovenia. 17 tory tory Appendix: Proofs of the theorems Proof of Theorem 1: It can be shown that for M m; W m D [a; b] is a Hilbert space with a scalar product (see <ref> [34] </ref> for the case D = 1) &lt; ; - &gt;= M j=1 j -(t j ) + k=1 Z b k (t)- k (t) dt: (44) Hence the minimization problem (25) can be written as minimize &lt; ; &gt; + h (); subject to 2 C; (45) where h is <p> Since the problem (45) has a unique solution, must be equal to -, i.e. is a polynomial vector spline of the form (26). Proof of Theorem 2: This proof is obtained by the generalization of results from [11] and <ref> [34] </ref>. Let fj; zg denotes the solution to the minimization problem minimize 1 k j (z (t i ))k 2 + M i=1 k i (p i (t i ))k 2 + i=1 subject to 2 C (48) By the definition = fj; p j g.
Reference: [35] <author> J. Weng, P. Cohen, and N. Rebibo. </author> <title> Motion and structure estimation from stereo image sequences. </title> <journal> IEEE Trans. Robotics Automat., </journal> <volume> 8(3) </volume> <pages> 362-382, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: If the stereo image sequence is dense, the random acceleration model locally approximates the actual object's motion well enough. More sophisticated models for the rigid body motion have been proposed in the literature <ref> [12, 21, 35, 37] </ref>.
Reference: [36] <author> G. Werling and H. Wild. </author> <title> HOM | A hybrid object model for automatic assembly planning. </title> <journal> J. Intell. Manufacturing, </journal> <volume> 5 </volume> <pages> 153-163, </pages> <year> 1994. </year>
Reference-contexts: The underlying CAD system is a CSG type object modeller, which produces a description of a solid by combining predefined primitive solids with the basic operations: intersection, union and difference. A data retrieval system has been developed at our institute <ref> [36] </ref> to enable the access to the CAD system's internal data. The generated model is further processed in order to extract the visibility information and the perceptually significant groupings of model features as well as to delete insignificant model features.
Reference: [37] <author> G.-S. J. Young and R. Chellappa. </author> <title> 3-D motion estimation using a sequence of noisy stereo images: Models, estimation, and uniqueness results. </title> <journal> IEEE Trans Pattern Anal. Machine Intell., </journal> <volume> 12(8) </volume> <pages> 735-759, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: If the stereo image sequence is dense, the random acceleration model locally approximates the actual object's motion well enough. More sophisticated models for the rigid body motion have been proposed in the literature <ref> [12, 21, 35, 37] </ref>.
Reference: [38] <author> Z. Zhang and O. Faugeras. </author> <title> Determining motion from 3D line segment matches: a comparative study. </title> <journal> Image and Vision Computing, </journal> <volume> 9(1) </volume> <pages> 10-19, </pages> <month> February </month> <year> 1991. </year> <title> Authors' address: </title> <editor> Dipl.-Ing. A. Ude and Prof. Dr.-Ing. R. </editor> <address> Dillmann, </address> <institution> Institute for Real-Time Computer Systems and Robotics, University of Karlsruhe, </institution> <address> Kaiserstrae 12, 76128 Karlsruhe, Germany 22 </address>
Reference-contexts: The Levenberg-Marquardt method is iterative and requires an initial estimate. Such an estimate is always available in our system. It is provided either as a prediction by the tracking procedure or by use of stereo correspondences. 7 In this case, the non-iterative method described in <ref> [38] </ref> can be used to calculate it. Criterion (4) must be minimized afterwards in order to refine the initial pose estimate. <p> This is an important advantage in comparison with Euler angles which do not allow the construction of the differentiable atlas on SO (3). If non-iterative methods like the one proposed in <ref> [38] </ref> are used to determine the object's orientation, then one of the four previously mentioned charts must be used to convert the selected representation of the orientation (the quaternion representation is used in [38]) into the rotation vector at each measurement instant. <p> If non-iterative methods like the one proposed in <ref> [38] </ref> are used to determine the object's orientation, then one of the four previously mentioned charts must be used to convert the selected representation of the orientation (the quaternion representation is used in [38]) into the rotation vector at each measurement instant. This would introduce a discontinuity in the sequence of rotation vectors at the moment when the chart used to calculate them would change.
References-found: 38

