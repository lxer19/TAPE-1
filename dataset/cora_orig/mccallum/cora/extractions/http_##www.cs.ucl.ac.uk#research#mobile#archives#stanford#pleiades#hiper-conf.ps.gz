URL: http://www.cs.ucl.ac.uk/research/mobile/archives/stanford/pleiades/hiper-conf.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/research/mobile/archives/stanford/pleiades/
Root-URL: http://www.cs.ucl.ac.uk
Email: fjan, shiva, widomg@db.stanford.edu, fdlam, dcoxg@wireless.stanford.edu  
Title: Efficient and Flexible Location Management Techniques for Wireless Communication Systems  
Author: Jan Jannink, Derek Lam, Narayanan Shivakumar, Jennifer Widom, Donald C. Cox 
Address: Stanford, CA 94305  
Affiliation: Departments of Computer Science Electrical Engineering Stanford University,  
Abstract: We consider the problem of managing the information required to locate users in a wireless communication system, with a focus on designing and evaluating location management techniques that are efficient, scalable, and flexible. The three key contributions of this paper are: (1) A family of location management techniques, HiPER (for Hierarchical ProfilE Replication), that efficiently provide lifelong (non-geographic) numbering with fast location lookup; (2) Pleiades, a scalable event-driven wireless system simulator with realistic calling and mobility patterns derived from several months of real traffic traces; and (3) multi-day simulations comparing our proposed location management techniques with current and previously proposed techniques on a realistic geographical and network topology. 
Abstract-found: 1
Intro-found: 1
Reference: [AP91] <author> B. Awerbuch and D. Peleg. </author> <title> Concurrent online tracking of mobile users. </title> <journal> SIG-COM, </journal> <volume> 21(4) </volume> <pages> 221-233, </pages> <month> September </month> <year> 1991. </year> <institution> Zurich Switzerland. </institution>
Reference-contexts: The primary contributions in this paper are: 1. HiPER (Hierarchical ProfilE Replication), a new family of location management techniques (LMTs) that efficiently provide lifelong numbering. We use a hierarchical database architecture as in <ref> [AP91, KVP94, Wan93] </ref> to achieve life-long numbering. We then exploit locality in user calling and mobility patterns [JL95, SJW95] to selectively replicate user profiles at various databases in the hierarchy to reduce lookup latency and communication costs, at the expense of increased storage and update costs. 2.
Reference: [ECM95] <author> ECMT. </author> <title> European Transport Trends and Infrastructural Needs. </title> <publisher> OECD publications, </publisher> <address> 2, Rue Andre-Pascal, 75775 Paris CEDEX 16, France, </address> <year> 1995. </year>
Reference-contexts: Our modeling of user movement is based on a transportation survey, the NPTS [HY93, Kit95], conducted in 1990. This data is similar to vehicle traffic statistics obtained from roadside measurements in Europe <ref> [ECM95] </ref>. In addition, we have obtained actual movement statistics [MTC90] from around the San Francisco Bay area collected over an eight month period in 1989-1990 to correlate with survey data.
Reference: [EIA91] <editor> EIA/TIA IS-41.3 (Revision B). </editor> <booktitle> Cellular Radiotelecommunications Intersys-tem Operations, </booktitle> <month> July </month> <year> 1991. </year>
Reference-contexts: In current cellular standards such as GSM and IS-41 <ref> [EIA91] </ref>, each user has a home database termed the Home Location Register (HLR) which maintains the current location of the user as part of the user's profile. When user A calls user B, the wireless infrastructure initiates a potentially remote query to the HLR of B.
Reference: [GR93] <author> J. Gray and A. Reuter. </author> <title> Transaction Processing: Concepts and Techniques. </title> <publisher> Mor-gan Kauffman, </publisher> <year> 1993. </year>
Reference-contexts: As expected, the number of global updates in HiPER 5;2 is higher than in HLR/VLR and Simple Hierarchy but much lower than in Full Replication. Of course in absolute terms these update are all easily supportable in modern database systems <ref> [GR93] </ref>. 0 100 200 24 26 28 30 32 34 36 38 40 42 44 46 48 DB Lookups [ops./sec.] Clock Time [hr.] HiPER 5,2 HLR/VLR Full Repl. Centralized Simple Hier. 0.1 10 1000 DB Updates [ops./sec.] Clock Time [hr.] HiPER 5,2 HLR/VLR Full Repl.
Reference: [HJM94] <author> H. Harjono, R. Jain, and S. Mohan. </author> <title> Analysis and simulation of a cache-based auxiliary location strategy for PCS. </title> <booktitle> In IEEE Conference on Networks and Personal Communications, </booktitle> <month> March </month> <year> 1994. </year> <title> Long Branch, NJ. Feature Simple Hierarchy HiPER 5;2 HLR/VLR Life-Long Numbering YES YES NO Remote Lookups 1.0 0.16 0.73 Message bandwidth 1.0 0.86 0.74 Storage 1.0 2.65 1.41 Update cost 1.0 1.44 0.72 Table 3: Peak Performance and Features Summary </title>
Reference-contexts: In [SW95, SJW95], we showed how to augment the HLR/VLR scheme with selective off-line replication using network-flow algorithms. Jain et al. <ref> [HJM94, JLLM94] </ref> propose per-user caching where zones cache the last known location of certain users for faster lookup. The latter two schemes are based on the HLR/VLR scheme, while in this paper we consider how to perform selective replication on database hierarchies so we can offer life-long numbering efficiently. <p> We can then decide to replicate user i's profile at database j only if the LCM R i;j exceeds some minimum threshold, R min . For instance, <ref> [HJM94] </ref> proposes R min = 5 for o*ine-caching, and [SW95, SJW95] propose R min = 0:25 for o*ine-replication in HLR/VLR.
Reference: [HY93] <author> P. S. Hu and J. Young. </author> <year> 1990 </year> <month> NPTS Data-book: </month> <type> Nationwide Personal Transportation Survey. </type> <institution> Federal Highway Administration, </institution> <month> November </month> <year> 1993. </year>
Reference-contexts: were derived from over six months of calling activity from the Stanford University Campus; similarly our mobility models were derived from vehicular traffic activity data collected over a period of 8 months in the San Francisco Bay Area, and corroborated with published traffic studies from Europe and the United States <ref> [HY93] </ref>. 3. Simulations that compare our proposed fa mily of LMTs against traditional LMTs, such as HLR/VLR, and centralized database architectures. <p> For instance, the HLR/VLR scheme assumes the user returns home often, while replication assumes repetitive movements. Hence, to be fair while comparing the different techniques, we require a realistic instantiation of our movement model. Our modeling of user movement is based on a transportation survey, the NPTS <ref> [HY93, Kit95] </ref>, conducted in 1990. This data is similar to vehicle traffic statistics obtained from roadside measurements in Europe [ECM95]. In addition, we have obtained actual movement statistics [MTC90] from around the San Francisco Bay area collected over an eight month period in 1989-1990 to correlate with survey data. <p> In our simulation, we populated registration areas with users based on 1990 census information from [UpC94]. We assumed that 50% of the population would subscribe to wireless services. We divided our user population into 41% commuters and 59% non-commuters. This proportion is derived from the national average in <ref> [HY93] </ref> and the peak-to-total traffic figure for the Bay Area. We specified connectivities between transportation routes such as highways and bridges. Using traffic volume statistics from [MTC90], we estimated movement between area codes and fine-tuned our simulation parameters to produce similar large scale movement behavior. See [LJCW96] for more details.
Reference: [IB92] <author> T. Imielinski and B. R. Badrinath. </author> <title> Querying in highly mobile distributed environments. </title> <booktitle> In Proc. 18th International Conference on Very Large Databases '92, </booktitle> <pages> pages 41-52, </pages> <month> August </month> <year> 1992. </year> <institution> Vancouver B.C. </institution>
Reference-contexts: The latter two schemes are based on the HLR/VLR scheme, while in this paper we consider how to perform selective replication on database hierarchies so we can offer life-long numbering efficiently. Several previous studies <ref> [IB92, KVP94, PMG95] </ref> have published simulation results for a variety of conventional and proposed LMTs. Our simulations differ in that: 1. We simulate multi-day user calling and mobility activity of several millions of users over large geographical areas, a simulation scale we have not seen in previous work.
Reference: [JL95] <author> R. Jain and Y. Lin. </author> <title> An auxiliary user location strategy employing forwarding pointers to reduce network impacts of PCS. </title> <booktitle> In International Conference on Communications, ICC '95. IEEE, </booktitle> <year> 1995. </year>
Reference-contexts: HiPER (Hierarchical ProfilE Replication), a new family of location management techniques (LMTs) that efficiently provide lifelong numbering. We use a hierarchical database architecture as in [AP91, KVP94, Wan93] to achieve life-long numbering. We then exploit locality in user calling and mobility patterns <ref> [JL95, SJW95] </ref> to selectively replicate user profiles at various databases in the hierarchy to reduce lookup latency and communication costs, at the expense of increased storage and update costs. 2. <p> In [SW95] we showed how to use network flow algorithms to augment HLR/VLR with profile replicas based on estimated user local call to mobility ratio or LCMR information <ref> [JL95] </ref>, and capacity limitations on databases. Essentially, a user's profile is replicated at a set of databases such that the benefit of local lookups at these databases outweighs the update cost due to the user's mobility. <p> While there are many ways of making such decisions based on different cost models, one common cost model is to minimize network communication costs. For this, we compute the local call-to-mobility ratio <ref> [JL95] </ref>, LCM R i;j , where LCM R i;j = C i;j =M i if C i;j is the number of calls to user i from zone j and M i is the number of moves of user i in a given time period.
Reference: [JLLM94] <author> R. Jain, Y.-B. Lin, C. Lo, and S. Mohan. </author> <title> A caching strategy to reduce network impacts of PCS. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 12(8) </volume> <pages> 1434-44, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: In [SW95, SJW95], we showed how to augment the HLR/VLR scheme with selective off-line replication using network-flow algorithms. Jain et al. <ref> [HJM94, JLLM94] </ref> propose per-user caching where zones cache the last known location of certain users for faster lookup. The latter two schemes are based on the HLR/VLR scheme, while in this paper we consider how to perform selective replication on database hierarchies so we can offer life-long numbering efficiently.
Reference: [Kit95] <author> R. Kitamura. </author> <title> Time-of-Day Characteristics of Travel: An Analysis of 1990 NPTS Data, </title> <type> chapter 4. </type> <institution> Federal Highway Administration, </institution> <month> February </month> <year> 1995. </year>
Reference-contexts: For instance, the HLR/VLR scheme assumes the user returns home often, while replication assumes repetitive movements. Hence, to be fair while comparing the different techniques, we require a realistic instantiation of our movement model. Our modeling of user movement is based on a transportation survey, the NPTS <ref> [HY93, Kit95] </ref>, conducted in 1990. This data is similar to vehicle traffic statistics obtained from roadside measurements in Europe [ECM95]. In addition, we have obtained actual movement statistics [MTC90] from around the San Francisco Bay area collected over an eight month period in 1989-1990 to correlate with survey data.
Reference: [KVP94] <author> P. Krishna, N. H. Vaidya, and D. K. Pradhan. </author> <title> Location management in distributed mobile environments. </title> <booktitle> In Third International Conference on Parallel and Distributed Information Systems, </booktitle> <pages> pages 81-88, </pages> <month> September </month> <year> 1994. </year> <institution> Austin, TX. </institution>
Reference-contexts: The primary contributions in this paper are: 1. HiPER (Hierarchical ProfilE Replication), a new family of location management techniques (LMTs) that efficiently provide lifelong numbering. We use a hierarchical database architecture as in <ref> [AP91, KVP94, Wan93] </ref> to achieve life-long numbering. We then exploit locality in user calling and mobility patterns [JL95, SJW95] to selectively replicate user profiles at various databases in the hierarchy to reduce lookup latency and communication costs, at the expense of increased storage and update costs. 2. <p> The latter two schemes are based on the HLR/VLR scheme, while in this paper we consider how to perform selective replication on database hierarchies so we can offer life-long numbering efficiently. Several previous studies <ref> [IB92, KVP94, PMG95] </ref> have published simulation results for a variety of conventional and proposed LMTs. Our simulations differ in that: 1. We simulate multi-day user calling and mobility activity of several millions of users over large geographical areas, a simulation scale we have not seen in previous work. <p> We then introduce HiPER in terms of its database lookup and update algorithms. We then describe the parametrization of HiPER, its replication placement algorithm, and a few additional issues. 2.1 Hierarchical Profile Management In a basic hierarchical model <ref> [KVP94, Wan93] </ref>, each leaf-level database services a zone and stores profiles of users located in that zone. <p> However, notice that even in the latter cases, the lookup latency will always be reduced. Some parameter settings for HiPER allow us to model a variety of techniques, including the Simple Hierarchy of <ref> [KVP94, Wan93] </ref> and different degrees of replication. Let n be the number of databases and k the number of levels in the network hierarchy. <p> Let n be the number of databases and k the number of levels in the network hierarchy. Then: * HiPER (1, 0, 0, 0) yields the unreplicated hierarchical scheme of <ref> [Wan93, KVP94] </ref>. protocol module handler event generator event priority queue earliest time first output file event input script Simulator simulation parameters simulation statistics ... * HiPER (n, 0, 0, 1) yields a scheme with full replication at leaf databases. * HiPER (n, 0, 0, k) yields a scheme with full replication <p> For our simulations, we studied the following LMTs: 1. HLR/VLR, 2. Centralized database architecture in which all user profiles are stored in one centralized database, 3. Full Replication in which all user profiles are replicated in all databases, 4. Simple Hierarchy of <ref> [KVP94, Wan93] </ref> as de scribed in Section 2.1, and 5.
Reference: [LJCW96] <author> D. Lam, J. Jannink, D. C. Cox, and J. Widom. </author> <title> Modeling location management for Personal Communication Services. </title> <booktitle> To appear in IEEE International Conference on Universal Personal Communications ICUPC '96, </booktitle> <address> Cambridge, MA, </address> <month> September </month> <year> 1996. </year> <title> ftp://www-db.stanford.edu/pub/jannink/1996/icupc/. [MTC90] 1990 commute summary. Metropolitan Transportation Commission, Lotus 123 format spreadsheet, </title> <month> August </month> <year> 1990. </year> <title> S.F. Bay area transportation measurements. </title>
Reference-contexts: We simulate multi-day user calling and mobility activity of several millions of users over large geographical areas, a simulation scale we have not seen in previous work. Also, most previous work is based on simplistic models that incompletely characterize human calling and mobility patterns. In <ref> [LJCW96] </ref>, we empirically showed that using realistic calling and mobility models is important, since peak system performance measures differ by more than 30% from those based on inaccurate models. 2. Our simulations report time-varying data base and network requirements of several LMTs on a realistic geographical area. <p> Using this data we instantiated our movement model for a typical San Francisco Bay area commuter and non-commuter, basing our movement distances on the values quoted in the surveys. For further details see <ref> [LJCW96] </ref>. 3.4 User Calling Model The key aspects of our calling model are: 1. We represent a variety of call types, such as simple calls, and retry calls when calls are reattempted if busy. <p> When a call is generated, the callee is selected either randomly from the set of all users, or from the user's callee list according to its probability distribution. In <ref> [LJCW96] </ref>, we showed that the above components can be treated independently, since we observed very low correlation between calling rates and callee probabilities. <p> We calculated empirical callee distributions by ranking callees according to the frequency with which they are called during reference time periods of one day, one week, and one month (four weeks). For more details refer to <ref> [LJCW96] </ref>. 4 Simulation Results In this section we first describe the geography and network topologies we used in our simulations. We then present simulation results for several LMTs. 4.1 San Francisco Bay Area Simulation We performed our simulations on a geography that accurately models the San Francisco Bay Area. <p> We specified connectivities between transportation routes such as highways and bridges. Using traffic volume statistics from [MTC90], we estimated movement between area codes and fine-tuned our simulation parameters to produce similar large scale movement behavior. See <ref> [LJCW96] </ref> for more details. We performed simulations corresponding to a 5 day period, and report results corresponding to the second 24-hour period (which we found were comparable to the results from the 3rd through 5th days) to avoid simulation transients.
Reference: [OV91] <author> M. T. Oszu and P. Valduriez. </author> <title> Principles of Distributed Database Systems. </title> <publisher> Pren-tice Hall, </publisher> <year> 1991. </year>
Reference-contexts: The idea behind profile replication is to reduce the latency of profile lookup at the expense of increased update and storage cost. In contrast with replication schemes in databases <ref> [OV91] </ref>, our notion of replication simply requires updates to be propagated to each profile replica, rather than performing expensive distributed locking [OV91]. <p> In contrast with replication schemes in databases <ref> [OV91] </ref>, our notion of replication simply requires updates to be propagated to each profile replica, rather than performing expensive distributed locking [OV91]. In [SW95] we showed how to use network flow algorithms to augment HLR/VLR with profile replicas based on estimated user local call to mobility ratio or LCMR information [JL95], and capacity limitations on databases.
Reference: [PMG95] <author> G. P. Pollini, S. Meier-Hellstern, and D. J. Goodman. </author> <title> Signaling traffic volume generated by mobile and personal communications. </title> <journal> IEEE Communication Magazine, </journal> <pages> pages 60-65, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: The latter two schemes are based on the HLR/VLR scheme, while in this paper we consider how to perform selective replication on database hierarchies so we can offer life-long numbering efficiently. Several previous studies <ref> [IB92, KVP94, PMG95] </ref> have published simulation results for a variety of conventional and proposed LMTs. Our simulations differ in that: 1. We simulate multi-day user calling and mobility activity of several millions of users over large geographical areas, a simulation scale we have not seen in previous work.
Reference: [SJW95] <author> N. Shivakumar, J. Jannink, and J. Widom. </author> <title> Per-user profile replication in mobile environments: Algorithms, analysis, and simulation results. </title> <type> Technical report, </type> <institution> Stanford University, Computer Science Dept., </institution> <month> December </month> <year> 1995. </year> <note> ftp://www-db.stanford.edu/pub/shivakumar/1995/profile-journ.ps, Submitted for journal publication. </note>
Reference-contexts: HiPER (Hierarchical ProfilE Replication), a new family of location management techniques (LMTs) that efficiently provide lifelong numbering. We use a hierarchical database architecture as in [AP91, KVP94, Wan93] to achieve life-long numbering. We then exploit locality in user calling and mobility patterns <ref> [JL95, SJW95] </ref> to selectively replicate user profiles at various databases in the hierarchy to reduce lookup latency and communication costs, at the expense of increased storage and update costs. 2. <p> While this algorithm converges to the optimal replication plan when traffic traces are regular, unlike our schemes theirs does not exploit the relative stability of calling and mobility patterns of users for fast convergence. In <ref> [SW95, SJW95] </ref>, we showed how to augment the HLR/VLR scheme with selective off-line replication using network-flow algorithms. Jain et al. [HJM94, JLLM94] propose per-user caching where zones cache the last known location of certain users for faster lookup. <p> We can then decide to replicate user i's profile at database j only if the LCM R i;j exceeds some minimum threshold, R min . For instance, [HJM94] proposes R min = 5 for o*ine-caching, and <ref> [SW95, SJW95] </ref> propose R min = 0:25 for o*ine-replication in HLR/VLR. <p> We chose N = 5 since five replicas are sufficient to satisfy most lookups (over 90%) locally <ref> [SJW95] </ref> due to calling locality, and L = 2 since the maximum number of levels in our hierarchy is three. We set b l =b u = 1, assuming that the cost of an update message and a lookup message are equal.
Reference: [SW95] <author> N. Shivakumar and J. Widom. </author> <title> User profile replication for faster lookup in mobile environments. </title> <booktitle> In 1st ACM International Conference on Mobile Computing and Networking (MOBICOM'95), </booktitle> <pages> pages 161-169, </pages> <address> Berkeley, CA, </address> <month> October </month> <year> 1995. </year>
Reference-contexts: While this algorithm converges to the optimal replication plan when traffic traces are regular, unlike our schemes theirs does not exploit the relative stability of calling and mobility patterns of users for fast convergence. In <ref> [SW95, SJW95] </ref>, we showed how to augment the HLR/VLR scheme with selective off-line replication using network-flow algorithms. Jain et al. [HJM94, JLLM94] propose per-user caching where zones cache the last known location of certain users for faster lookup. <p> In contrast with replication schemes in databases [OV91], our notion of replication simply requires updates to be propagated to each profile replica, rather than performing expensive distributed locking [OV91]. In <ref> [SW95] </ref> we showed how to use network flow algorithms to augment HLR/VLR with profile replicas based on estimated user local call to mobility ratio or LCMR information [JL95], and capacity limitations on databases. <p> We can then decide to replicate user i's profile at database j only if the LCM R i;j exceeds some minimum threshold, R min . For instance, [HJM94] proposes R min = 5 for o*ine-caching, and <ref> [SW95, SJW95] </ref> propose R min = 0:25 for o*ine-replication in HLR/VLR.
Reference: [Tel95] <institution> Telephone call traffic data set, </institution> <note> 3/95-9/95. </note> <author> S. Phillips, </author> <type> personal communication, </type> <month> October </month> <year> 1995. </year> <title> Encrypted ID numbers. [UpC94] 1990 U.S. census demographic summaries. UpClose Publishing, http://www.upclose.com/upclose/, 1994. Population of nine S.F. Bay area counties. [USG95] 1990 urban land use in central California. U.S. Geological Survey, </title> <note> http://geo.arc.nasa.gov/usgs/images/urban2.gif, 1995. Urbanization in S.F. Bay area. </note>
Reference-contexts: In [LJCW96], we showed that the above components can be treated independently, since we observed very low correlation between calling rates and callee probabilities. Again, to be fair in comparing various LMTs, we instantiated our call models with accurate parameters we derived from call traffic data <ref> [Tel95] </ref> for a six-month period from our university telephone exchange. This exchange serves the entire campus, including university offices, student housing, and residential households. The data was preprocessed at the source to protect the anonymity of the callers and callees.
Reference: [Wan93] <author> J. Z. Wang. </author> <title> A fully distributed location registration strategy for universal personal communication systems. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 11(6) </volume> <pages> 850-860, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: The primary contributions in this paper are: 1. HiPER (Hierarchical ProfilE Replication), a new family of location management techniques (LMTs) that efficiently provide lifelong numbering. We use a hierarchical database architecture as in <ref> [AP91, KVP94, Wan93] </ref> to achieve life-long numbering. We then exploit locality in user calling and mobility patterns [JL95, SJW95] to selectively replicate user profiles at various databases in the hierarchy to reduce lookup latency and communication costs, at the expense of increased storage and update costs. 2. <p> We then introduce HiPER in terms of its database lookup and update algorithms. We then describe the parametrization of HiPER, its replication placement algorithm, and a few additional issues. 2.1 Hierarchical Profile Management In a basic hierarchical model <ref> [KVP94, Wan93] </ref>, each leaf-level database services a zone and stores profiles of users located in that zone. <p> However, notice that even in the latter cases, the lookup latency will always be reduced. Some parameter settings for HiPER allow us to model a variety of techniques, including the Simple Hierarchy of <ref> [KVP94, Wan93] </ref> and different degrees of replication. Let n be the number of databases and k the number of levels in the network hierarchy. <p> Let n be the number of databases and k the number of levels in the network hierarchy. Then: * HiPER (1, 0, 0, 0) yields the unreplicated hierarchical scheme of <ref> [Wan93, KVP94] </ref>. protocol module handler event generator event priority queue earliest time first output file event input script Simulator simulation parameters simulation statistics ... * HiPER (n, 0, 0, 1) yields a scheme with full replication at leaf databases. * HiPER (n, 0, 0, k) yields a scheme with full replication <p> For our simulations, we studied the following LMTs: 1. HLR/VLR, 2. Centralized database architecture in which all user profiles are stored in one centralized database, 3. Full Replication in which all user profiles are replicated in all databases, 4. Simple Hierarchy of <ref> [KVP94, Wan93] </ref> as de scribed in Section 2.1, and 5.
Reference: [WJ92] <author> O. Wolfson and S. Jajodia. </author> <title> Distributed algorithms for dynamic replication of data. </title> <booktitle> In Proceedings of the Symposium on Principles of Database Systems, </booktitle> <pages> pages 149-163, </pages> <address> San Diego, CA, </address> <year> 1992. </year>
Reference-contexts: Replication is different from caching in that replication always keeps all copies up-to-date, and there is no invalidation problem. Wolfson and Jajodia have proposed an on-line algorithm for dynamic data replication in distributed databases using a "no-knowledge" approach <ref> [WJ92] </ref>. While this algorithm converges to the optimal replication plan when traffic traces are regular, unlike our schemes theirs does not exploit the relative stability of calling and mobility patterns of users for fast convergence.
References-found: 19

