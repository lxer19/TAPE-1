URL: http://www.cs.ucl.ac.uk/staff/S.Bhatti/papers/1996/jnsm-security/saleem-jnsm-96.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/staff/S.Bhatti/publications.html
Root-URL: http://www.cs.ucl.ac.uk
Email: S.Bhatti@cs.ucl.ac.uk  G.Knight@cs.ucl.ac.uk G.Pavlou@cs.ucl.ac.uk  E-mail: S.Bhatti@cs.ucl.ac.uk  
Phone: Tel: +44 171 419 3249  
Title: Secure management information exchange exchange of signed credentials. Stream integrity for management information packets (protocol
Author: Saleem N. Bhatti Kevin M. T. McCarthy Graham Knight George Pavlou 
Degree: Designated author: Name: Saleem N. Bhatti  
Keyword: Mutual authentication of communicating parties.  Keywords: network security, network management, distributed systems security  
Address: Gower Street, London WC1E 6BT, UK  
Affiliation: Department of Computer Science, University College London  
Note: Both parties can prove to each other that they are who they claim to be by the  Running head:  Address:  
Abstract: This paper describes the design and implementation of a secure management protocol for the management of distributed applications. The protocol is a modified use of the ISO CMIP protocol, with additional mechanisms and behaviour to provide the following security services: In previous work we have implemented a public-key based system. Here, we present an experiment based on the use of a secret-key mechanism, for a faster, lightweight approach. The authentication mechanism makes use of the MD5 algorithm and the DES encryption standard. The PDU integrity mechanisms make use of a pseudo random number sequence for PDU numbering and the MD5 algorithm for generating unforgeable signatures for the PDUs. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> ISO/IEC 9596, </author> <title> Information technology Open Systems Interconnection Common management information protocol specification, </title> <month> May </month> <year> 1990. </year>
Reference-contexts: Further, we describe the services used and mechanisms employed within our implementation of the ISO CMIP protocol <ref> [1] </ref>. As CMIP is a connection oriented protocol, we identify the initiator of the connection request (or association in OSI parlance) and the responder to the connection request. In section 2 we take a look at the goals for this particular work.
Reference: [2] <author> CCITT Recommendation X.800, </author> <title> Security Architecture for Open Systems Interconnection for CCITT Applications, </title> <address> Geneva, </address> <year> 1991 </year>
Reference-contexts: Section 5 describes our implementations. After a brief discussion of issues in section 6, we round off with a summary in section 7. 2 Security requirements for management applications A general description of the threats, services and mechanisms is given in the X.800 document <ref> [2] </ref>. OMNIPoint016 [3] has similar descriptions, but tailored to the context of network management using the ISO management model. Previously, we have investigated the use of public-key systems as the basis of our security system [4, 5, 6]. Such systems offer strong assurances of authenticity and confidential exchange of information.
Reference: [3] <institution> Network Management Forum, Application Services: Security of Management, OM-NIPoint Network Management Forum 016, Bernardsville, NJ, </institution> <month> August </month> <year> 1992. </year> <month> 21 </month>
Reference-contexts: Section 5 describes our implementations. After a brief discussion of issues in section 6, we round off with a summary in section 7. 2 Security requirements for management applications A general description of the threats, services and mechanisms is given in the X.800 document [2]. OMNIPoint016 <ref> [3] </ref> has similar descriptions, but tailored to the context of network management using the ISO management model. Previously, we have investigated the use of public-key systems as the basis of our security system [4, 5, 6]. Such systems offer strong assurances of authenticity and confidential exchange of information.
Reference: [4] <author> G. Knight, S. N. Bhatti, L. Deri, </author> <title> Secure Remote Management in the ESPRIT MIDAS Project, </title> <booktitle> Proc. IFIP TC6/WG6.5 International Working Conference on Upper Layer Protocols, Architectures and Applications, </booktitle> <address> Barcelona, Spain, 1 - 3 June 1994, </address> <publisher> [Elsevier Science B.V., </publisher> <address> Amsterdam, </address> <note> July 1994] pp 77-86 http://www.cs.ucl.ac.uk/staff/S.Bhatti/papers/1994/ifip-ulpaa/paper.ps </note>
Reference-contexts: OMNIPoint016 [3] has similar descriptions, but tailored to the context of network management using the ISO management model. Previously, we have investigated the use of public-key systems as the basis of our security system <ref> [4, 5, 6] </ref>. Such systems offer strong assurances of authenticity and confidential exchange of information. There are several authentication frameworks that are based on public-key approaches, the most commonly known of which are X.509 [7] and PGP [8]. Another system that makes use of the X.500 directory is DASS [9]. <p> 15 5.3 Integrity While the signatures for the PDU mechanism use the same HASH function as that used for the signatures for the tokens, the API is slightly different: /* MD5 interface */ typedef struct MD5Value_s - /* 128 bits */ union - unsigned char bytes [16]; unsigned long words <ref> [4] </ref>; /* 32 bit long */ - union_MD5Value; - MD5Value; int makeMd5Value (const int fd, PE pdu, MD5Value *check); This takes account of the fact that the file descriptor, fd, is now available and can be used to access any security information related to a connection, e.g. the session-key. <p> However, in our case, the performance bottleneck is the DES implementation; its maximum throughput is approximately 190KB/s and the MD5 implementation achieves this rate at buffer sizes of 32 bytes. In the X.509 public-key based approaches with which we have experimented previously <ref> [4, 5] </ref>, similar integrity check and confidentiality mechanisms were employed so the overhead is comparable in those respects. However, the connection set-up takes much longer, depending on the number of Directory operations required and number of certification authorities involved.
Reference: [5] <author> S. N. Bhatti, G. Knight, D. Gurle, P. Rodier, </author> <title> Secure Remote Management, </title> <booktitle> Proc. Fourth International Symposium on Integrated Network Management 1995, </booktitle> <address> 1 - 5 May 1995, Santa Barbara, California, </address> <publisher> USA, </publisher> <editor> editors A. S. Sethi, Y. Raynaud, F. </editor> <address> Faure-Vincent, </address> <note> pp 156-169 [Chapman & Hall] http://www.cs.ucl.ac.uk/staff/S.Bhatti/papers/1995/isinm4/security/paper.ps </note>
Reference-contexts: OMNIPoint016 [3] has similar descriptions, but tailored to the context of network management using the ISO management model. Previously, we have investigated the use of public-key systems as the basis of our security system <ref> [4, 5, 6] </ref>. Such systems offer strong assurances of authenticity and confidential exchange of information. There are several authentication frameworks that are based on public-key approaches, the most commonly known of which are X.509 [7] and PGP [8]. Another system that makes use of the X.500 directory is DASS [9]. <p> However, in our case, the performance bottleneck is the DES implementation; its maximum throughput is approximately 190KB/s and the MD5 implementation achieves this rate at buffer sizes of 32 bytes. In the X.509 public-key based approaches with which we have experimented previously <ref> [4, 5] </ref>, similar integrity check and confidentiality mechanisms were employed so the overhead is comparable in those respects. However, the connection set-up takes much longer, depending on the number of Directory operations required and number of certification authorities involved.
Reference: [6] <author> G. Knight, S. N. Bhatti, </author> <title> Some experiences with secure management, </title> <booktitle> Proc. JENC6 6th Joint European Networking Conference, </booktitle> <month> 15 - 18 May </month> <year> 1995, </year> <title> Tel Aviv, </title> <editor> Isreal, editors J. Barbera & J. </editor> <booktitle> Kiers, </booktitle> <pages> pp 322/1-9. </pages> <address> http://www.cs.ucl.ac.uk/staff/S.Bhatti/papers/1995/jenc6/paper.ps </address>
Reference-contexts: OMNIPoint016 [3] has similar descriptions, but tailored to the context of network management using the ISO management model. Previously, we have investigated the use of public-key systems as the basis of our security system <ref> [4, 5, 6] </ref>. Such systems offer strong assurances of authenticity and confidential exchange of information. There are several authentication frameworks that are based on public-key approaches, the most commonly known of which are X.509 [7] and PGP [8]. Another system that makes use of the X.500 directory is DASS [9].
Reference: [7] <author> CCITT Recommendation X.509, </author> <title> The Directory Authentication Framework, </title> <address> Geneva, </address> <month> March </month> <year> 1988. </year>
Reference-contexts: Such systems offer strong assurances of authenticity and confidential exchange of information. There are several authentication frameworks that are based on public-key approaches, the most commonly known of which are X.509 <ref> [7] </ref> and PGP [8]. Another system that makes use of the X.500 directory is DASS [9]. Here we consider the use of a shared-key system, based on the use of a secret-key value that is shared between each responder/initiator pair. <p> the public-key part of the key can be exchanged out-of-band, current large public-key systems rely on the public-key part being stored as part of credentials in a `well known' place (e.g. a directory service) and signed by trusted third party (the certification authority (CA)), for example, the ITU X.509 system <ref> [7] </ref>. This is particularly useful for communicating with parties with which you have not communicated before, but in a small well-defined management domain, communication will be between known entities, i.e. due to the normal operations of the management applications. <p> These documents are now in the final stages of becoming full standards. More mature and stable work is available in the form of the authentication framework that forms part of the ITU/ISO Directory service, documented in X.509 <ref> [7] </ref> and X.511 [28]. This provides a public-key based approach to authentication and uses the ITU/ISO Directory service as the repository for various security related information including credentials for users and certification authorities (CAs), as well as revocation lists for credentials that are no longer valid.
Reference: [8] <author> P. R. Zimmermann, </author> <title> The Official PGP User's Guide, pp 216, </title> <publisher> [MIT Press 1995] </publisher>
Reference-contexts: Such systems offer strong assurances of authenticity and confidential exchange of information. There are several authentication frameworks that are based on public-key approaches, the most commonly known of which are X.509 [7] and PGP <ref> [8] </ref>. Another system that makes use of the X.500 directory is DASS [9]. Here we consider the use of a shared-key system, based on the use of a secret-key value that is shared between each responder/initiator pair. <p> authentication mechanisms is as follows: The initiator token T I is represented by the C structure: typedef struct MLSInitiatorInfo_s - char *name; /* string DN of user/application */ char *peer; /* string DN of peer user/application */ unsigned int services; /* bitfield created by use #define values */ char sessionKey <ref> [8] </ref>; /* MD5 key zeros if no key for this assoc */ - MLSInitiatorInfo; int makeMLSInitiatorAcseInfo (MLSInitiatorInfo *info, External **external); int getMLSInitiatorAcseInfo (External *external, MLSInitiatorInfo **info); 13 The additional feature here that is not described in secion 4.2 is the services field; although this field was not mentioned previously it can <p> The HASH function for signatures is realised by the MD5 implementation and is used as described in [34]. The signatures for the tokens are created using the following API: int mlsSignature (PE pe, const char key <ref> [8] </ref>, char signature [16]); The PE is a presentation element abstraction used by ISODE.
Reference: [9] <author> C. Kaufman, </author> <title> DASS Distributed Authentication Security Service, Internet RFC 1507, </title> <month> 10 September </month> <year> 1993. </year>
Reference-contexts: Such systems offer strong assurances of authenticity and confidential exchange of information. There are several authentication frameworks that are based on public-key approaches, the most commonly known of which are X.509 [7] and PGP [8]. Another system that makes use of the X.500 directory is DASS <ref> [9] </ref>. Here we consider the use of a shared-key system, based on the use of a secret-key value that is shared between each responder/initiator pair.
Reference: [10] <author> D. Maughan, B. Patrick, M. Schertler, </author> <title> Internet Security Association and Key Management Protocol, work in progress, </title> <institution> IPSEC Working Group, draft-nsa-isakmp-01.ps, </institution> <month> 6 July </month> <year> 1995. </year>
Reference-contexts: In the rest of this paper, we do not discuss the countering of denial of service attacks. The Internet community has also been looking at the security problem, and from the IPSEC Working Group <ref> [10] </ref> and the Network Working Group [11] we find the following threats identified: T6 Examination of previous traffic: an attacker is able to capture and store PDUs and then read them at a later date, when the security of future network traffic is compromised. <p> This provides service S4. The threats T6 and T7 listed above can also be countered by careful selection of the implementation of the mechanisms listed above. T6 we require a facility for back traffic protection and for T7 a facility providing perfect forward secrecy <ref> [10] </ref>. Both these facilities can be implemented if we ensure that a new encryption key a session-key is used for M4 every time a new connection is set up. <p> bodies such as the ITU and ISO concerning the formulation of security recommendations for network and distributed systems security. 4.1.1 The Internet community As well as the work for securing IPv6 [15, 16, 17], the IETF IPSEC working Group have produced an Internet Draft describing the management of security information <ref> [10] </ref>. The IETF work also 5 addresses similar threats to the ones listed as T1 to T7. Of great relevance here is the consider-able effort being directed towards providing a security infrastructure for SNMP. <p> At the time of writing, the activities in the Internet community centre around the provision of the following security mechanisms for IPv6 and SNMP: * Management of security related information for IP <ref> [10] </ref>. * Security architecture for IP [15]. * Authentication of IP packet headers [17]. * Encryption of IP packet payloads [16, 18]. * (`Official', i.e. produced by an IETF Working Group) authentication and encryption for SNMP [13, 14]. * (`Unofficial') authentication only [19], and authentication and encryption [20, 21] for SNMP.
Reference: [11] <author> P. Karn, W. A. Simpson, </author> <title> The Photuris Session Key Management Protocol, work in progress, </title> <type> Internet Draft, </type> <institution> Network Working Group, draft-ietf-ipsec-photuris-02.txt, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: In the rest of this paper, we do not discuss the countering of denial of service attacks. The Internet community has also been looking at the security problem, and from the IPSEC Working Group [10] and the Network Working Group <ref> [11] </ref> we find the following threats identified: T6 Examination of previous traffic: an attacker is able to capture and store PDUs and then read them at a later date, when the security of future network traffic is compromised.
Reference: [12] <author> J. Galvin, K. McCloghrie, </author> <title> Security Protocols for version 2 of the Simple Network Management Protocol (SNMPv2), </title> <address> RFC1446, </address> <month> 3 May </month> <year> 1993. </year>
Reference-contexts: The IETF work also 5 addresses similar threats to the ones listed as T1 to T7. Of great relevance here is the consider-able effort being directed towards providing a security infrastructure for SNMP. SNMPv1 had no security features, and the original SNMPv2 security recommendations <ref> [12] </ref> have not been widely accepted by the Internet community. Currently, there is activity not only to revise the SNMPv2 security infrastructure [13, 14], but also to provide security facilities that could be retro-fitted to existing SNMPv1 technology [19].
Reference: [13] <author> J. D. Case, J. Galvin, K. McCloghrie, M. T. Rose, S. Waldbusser, </author> <title> Security Protocols for Version 2 of the Simple Network Management Protocol (SNMPv2), work in progress, Internet Draft, </title> <address> draft-ietf-snmpv2-sec-ds-02.txt, </address> <month> 31 May </month> <year> 1995. </year>
Reference-contexts: SNMPv1 had no security features, and the original SNMPv2 security recommendations [12] have not been widely accepted by the Internet community. Currently, there is activity not only to revise the SNMPv2 security infrastructure <ref> [13, 14] </ref>, but also to provide security facilities that could be retro-fitted to existing SNMPv1 technology [19]. <p> security mechanisms for IPv6 and SNMP: * Management of security related information for IP [10]. * Security architecture for IP [15]. * Authentication of IP packet headers [17]. * Encryption of IP packet payloads [16, 18]. * (`Official', i.e. produced by an IETF Working Group) authentication and encryption for SNMP <ref> [13, 14] </ref>. * (`Unofficial') authentication only [19], and authentication and encryption [20, 21] for SNMP. (Additionally, there is access control work for SNMPv2.) Although the IP and SNMP work does not explicitly state that the use of any particular algorithm is mandatory, the (very strong) implication is that the mechanisms are
Reference: [14] <author> K. McCloghrie, M. T. Rose, G. W. Waters, J. M. Galvin, </author> <title> User-based Security Model for Version 2 of the Simple Network Management Protocol (SNMPv2), work in progress, Internet Draft, </title> <address> draft-kzm-snmpv2-sec-alt-00.txt, </address> <month> 30 June </month> <year> 1995. </year>
Reference-contexts: SNMPv1 had no security features, and the original SNMPv2 security recommendations [12] have not been widely accepted by the Internet community. Currently, there is activity not only to revise the SNMPv2 security infrastructure <ref> [13, 14] </ref>, but also to provide security facilities that could be retro-fitted to existing SNMPv1 technology [19]. <p> security mechanisms for IPv6 and SNMP: * Management of security related information for IP [10]. * Security architecture for IP [15]. * Authentication of IP packet headers [17]. * Encryption of IP packet payloads [16, 18]. * (`Official', i.e. produced by an IETF Working Group) authentication and encryption for SNMP <ref> [13, 14] </ref>. * (`Unofficial') authentication only [19], and authentication and encryption [20, 21] for SNMP. (Additionally, there is access control work for SNMPv2.) Although the IP and SNMP work does not explicitly state that the use of any particular algorithm is mandatory, the (very strong) implication is that the mechanisms are
Reference: [15] <author> R. Atkinson, </author> <title> Security Architecture for the Internet Protocol, Internet RFC 1825, </title> <month> 9 August </month> <year> 1995. </year>
Reference-contexts: chosen. 4.1 State of the art There is currently a lot of activity within the Internet community and standards bodies such as the ITU and ISO concerning the formulation of security recommendations for network and distributed systems security. 4.1.1 The Internet community As well as the work for securing IPv6 <ref> [15, 16, 17] </ref>, the IETF IPSEC working Group have produced an Internet Draft describing the management of security information [10]. The IETF work also 5 addresses similar threats to the ones listed as T1 to T7. <p> At the time of writing, the activities in the Internet community centre around the provision of the following security mechanisms for IPv6 and SNMP: * Management of security related information for IP [10]. * Security architecture for IP <ref> [15] </ref>. * Authentication of IP packet headers [17]. * Encryption of IP packet payloads [16, 18]. * (`Official', i.e. produced by an IETF Working Group) authentication and encryption for SNMP [13, 14]. * (`Unofficial') authentication only [19], and authentication and encryption [20, 21] for SNMP. (Additionally, there is access control work
Reference: [16] <author> R. Atkinson, </author> <title> IP Encapsulating Security Payload (ESP), Internet RFC 1827, </title> <month> 9 August </month> <year> 1995. </year>
Reference-contexts: chosen. 4.1 State of the art There is currently a lot of activity within the Internet community and standards bodies such as the ITU and ISO concerning the formulation of security recommendations for network and distributed systems security. 4.1.1 The Internet community As well as the work for securing IPv6 <ref> [15, 16, 17] </ref>, the IETF IPSEC working Group have produced an Internet Draft describing the management of security information [10]. The IETF work also 5 addresses similar threats to the ones listed as T1 to T7. <p> time of writing, the activities in the Internet community centre around the provision of the following security mechanisms for IPv6 and SNMP: * Management of security related information for IP [10]. * Security architecture for IP [15]. * Authentication of IP packet headers [17]. * Encryption of IP packet payloads <ref> [16, 18] </ref>. * (`Official', i.e. produced by an IETF Working Group) authentication and encryption for SNMP [13, 14]. * (`Unofficial') authentication only [19], and authentication and encryption [20, 21] for SNMP. (Additionally, there is access control work for SNMPv2.) Although the IP and SNMP work does not explicitly state that the <p> The HASH function for signatures is realised by the MD5 implementation and is used as described in [34]. The signatures for the tokens are created using the following API: int mlsSignature (PE pe, const char key [8], char signature <ref> [16] </ref>); The PE is a presentation element abstraction used by ISODE. <p> management API mentioned earlier. 15 5.3 Integrity While the signatures for the PDU mechanism use the same HASH function as that used for the signatures for the tokens, the API is slightly different: /* MD5 interface */ typedef struct MD5Value_s - /* 128 bits */ union - unsigned char bytes <ref> [16] </ref>; unsigned long words [4]; /* 32 bit long */ - union_MD5Value; - MD5Value; int makeMd5Value (const int fd, PE pdu, MD5Value *check); This takes account of the fact that the file descriptor, fd, is now available and can be used to access any security information related to a connection, e.g.
Reference: [17] <author> R. Atkinson, </author> <title> IP Authentication Header, Internet RFC 1826, </title> <month> 9 August </month> <year> 1995. </year>
Reference-contexts: chosen. 4.1 State of the art There is currently a lot of activity within the Internet community and standards bodies such as the ITU and ISO concerning the formulation of security recommendations for network and distributed systems security. 4.1.1 The Internet community As well as the work for securing IPv6 <ref> [15, 16, 17] </ref>, the IETF IPSEC working Group have produced an Internet Draft describing the management of security information [10]. The IETF work also 5 addresses similar threats to the ones listed as T1 to T7. <p> At the time of writing, the activities in the Internet community centre around the provision of the following security mechanisms for IPv6 and SNMP: * Management of security related information for IP [10]. * Security architecture for IP [15]. * Authentication of IP packet headers <ref> [17] </ref>. * Encryption of IP packet payloads [16, 18]. * (`Official', i.e. produced by an IETF Working Group) authentication and encryption for SNMP [13, 14]. * (`Unofficial') authentication only [19], and authentication and encryption [20, 21] for SNMP. (Additionally, there is access control work for SNMPv2.) Although the IP and SNMP
Reference: [18] <author> P. Metzger, P. Karn, W. A. Simpson, </author> <title> The ESP DES-CBC Transform, Internet RFC 1829, </title> <month> 9 August </month> <year> 1995. </year>
Reference-contexts: time of writing, the activities in the Internet community centre around the provision of the following security mechanisms for IPv6 and SNMP: * Management of security related information for IP [10]. * Security architecture for IP [15]. * Authentication of IP packet headers [17]. * Encryption of IP packet payloads <ref> [16, 18] </ref>. * (`Official', i.e. produced by an IETF Working Group) authentication and encryption for SNMP [13, 14]. * (`Unofficial') authentication only [19], and authentication and encryption [20, 21] for SNMP. (Additionally, there is access control work for SNMPv2.) Although the IP and SNMP work does not explicitly state that the
Reference: [19] <author> A. Ramanov, </author> <title> Simple Authentication Mechanism for SNMP, </title> <booktitle> work in progress, </booktitle> <address> draft-ramov-simple-snmp-00.txt, </address> <month> 27 June </month> <year> 1995. </year>
Reference-contexts: SNMPv1 had no security features, and the original SNMPv2 security recommendations [12] have not been widely accepted by the Internet community. Currently, there is activity not only to revise the SNMPv2 security infrastructure [13, 14], but also to provide security facilities that could be retro-fitted to existing SNMPv1 technology <ref> [19] </ref>. <p> * Management of security related information for IP [10]. * Security architecture for IP [15]. * Authentication of IP packet headers [17]. * Encryption of IP packet payloads [16, 18]. * (`Official', i.e. produced by an IETF Working Group) authentication and encryption for SNMP [13, 14]. * (`Unofficial') authentication only <ref> [19] </ref>, and authentication and encryption [20, 21] for SNMP. (Additionally, there is access control work for SNMPv2.) Although the IP and SNMP work does not explicitly state that the use of any particular algorithm is mandatory, the (very strong) implication is that the mechanisms are implemented using the MD5 algorithm [22]
Reference: [20] <author> G. W. Waters, </author> <title> Security Mechanisms for Version 1 of the Simple Network Management Protocol (SNMPv1), work in progress, Internet Draft, </title> <address> draft-waters-snmpv1-sec-mech-00.txt, </address> <month> 7 June </month> <year> 1995. </year>
Reference-contexts: information for IP [10]. * Security architecture for IP [15]. * Authentication of IP packet headers [17]. * Encryption of IP packet payloads [16, 18]. * (`Official', i.e. produced by an IETF Working Group) authentication and encryption for SNMP [13, 14]. * (`Unofficial') authentication only [19], and authentication and encryption <ref> [20, 21] </ref> for SNMP. (Additionally, there is access control work for SNMPv2.) Although the IP and SNMP work does not explicitly state that the use of any particular algorithm is mandatory, the (very strong) implication is that the mechanisms are implemented using the MD5 algorithm [22] to produce electronic signatures (SHA
Reference: [21] <author> A. I. Walten, </author> <title> Security Encapsulation of SNMP, work in progress, Internet Draft, </title> <address> draft-alten-snmp-sec-encap-00.txt, </address> <month> 30 July </month> <year> 1995. </year> <month> 22 </month>
Reference-contexts: information for IP [10]. * Security architecture for IP [15]. * Authentication of IP packet headers [17]. * Encryption of IP packet payloads [16, 18]. * (`Official', i.e. produced by an IETF Working Group) authentication and encryption for SNMP [13, 14]. * (`Unofficial') authentication only [19], and authentication and encryption <ref> [20, 21] </ref> for SNMP. (Additionally, there is access control work for SNMPv2.) Although the IP and SNMP work does not explicitly state that the use of any particular algorithm is mandatory, the (very strong) implication is that the mechanisms are implemented using the MD5 algorithm [22] to produce electronic signatures (SHA
Reference: [22] <author> R. Rivest, </author> <title> The MD5 Message-Digest Algorithm, Internet RFC 1321, </title> <month> 16 March </month> <year> 1992. </year>
Reference-contexts: [19], and authentication and encryption [20, 21] for SNMP. (Additionally, there is access control work for SNMPv2.) Although the IP and SNMP work does not explicitly state that the use of any particular algorithm is mandatory, the (very strong) implication is that the mechanisms are implemented using the MD5 algorithm <ref> [22] </ref> to produce electronic signatures (SHA [23] is also mentioned) and the DES [24] algorithm (i.e. a secret-key algorithm) to encrypt PDUs. <p> We use the following pieces of software: 12 * The OSIMIS package [32] to provide the ISO management infrastructure and CMIP protocol implementation. * The ISODE package [33] to provide the upper layer ISO communications stack. * The MD5 implementation in RFC1321 <ref> [22] </ref>. * An implementation of DES written at UCL. The value of K S is used as the parameter for the confidentiality and integrity mechanisms.
Reference: [23] <author> NIST FIPS Publication 180, </author> <title> Secure Hash Standard, </title> <institution> National Institute of Standards and Technology, Federal Information Processing Standards Publication, U.S. Department of Commerce, </institution> <month> 11 May </month> <year> 1993. </year>
Reference-contexts: 21] for SNMP. (Additionally, there is access control work for SNMPv2.) Although the IP and SNMP work does not explicitly state that the use of any particular algorithm is mandatory, the (very strong) implication is that the mechanisms are implemented using the MD5 algorithm [22] to produce electronic signatures (SHA <ref> [23] </ref> is also mentioned) and the DES [24] algorithm (i.e. a secret-key algorithm) to encrypt PDUs.
Reference: [24] <institution> NBS FIPS Publication 46-1, Data Encryption Standard, National Bureau of Standards, U.S. Department of Commerce, </institution> <month> January </month> <year> 1988 </year>
Reference-contexts: control work for SNMPv2.) Although the IP and SNMP work does not explicitly state that the use of any particular algorithm is mandatory, the (very strong) implication is that the mechanisms are implemented using the MD5 algorithm [22] to produce electronic signatures (SHA [23] is also mentioned) and the DES <ref> [24] </ref> algorithm (i.e. a secret-key algorithm) to encrypt PDUs. Although SNMP security is also shared-key/secret-key based, there are two main problems with most of the approaches: * In general, the stream integrity is achieved by use of `loosely synchronised' clocks between manager and agent.
Reference: [25] <author> P. Rogaway, </author> <title> Problems with Proposed IP Cryptography, work in progress, Internet Draft, </title> <address> draft-rogaway-ipsec-comments-00.txt, </address> <month> 3 April </month> <year> 1995. </year>
Reference-contexts: At the time of writing, other major problems appear to exist with the IP security proposals, and there is great discussion within the Internet community <ref> [25] </ref>. 6 4.1.2 The ITU and ISO The international standards bodies have also been making efforts to define security features for use in data communications applications.
Reference: [26] <author> ISO/IEC CD 11586, </author> <title> Information Technology Open Systems Interconnection Generic Upper Layers Security, </title> <month> December </month> <year> 1992. </year>
Reference-contexts: not been addressed, there is relevant work which could be applied. (This is in keeping with the generality of the service element (SE) approach to building application level protocols in the ITU/ISO philosophy.) The current work in this area from the ITU/ISO is the Generic Upper Layer Security (GULS) document <ref> [26] </ref>. This draft standard provides a service definition and protocol for a new application level service element that can provide security services such as authentication and confidentiality for any ISO application level protocol. There are also proposals for a general security framework for open systems [27].
Reference: [27] <editor> ISO/IEC CD 10181-1, </editor> <title> Information Technology Open Systems Interconnection Security Frameworks in Open Systems Part 1: Security Frameworks Overview, </title> <month> 13 October </month> <year> 1992. </year>
Reference-contexts: This draft standard provides a service definition and protocol for a new application level service element that can provide security services such as authentication and confidentiality for any ISO application level protocol. There are also proposals for a general security framework for open systems <ref> [27] </ref>. These documents are now in the final stages of becoming full standards. More mature and stable work is available in the form of the authentication framework that forms part of the ITU/ISO Directory service, documented in X.509 [7] and X.511 [28].
Reference: [28] <author> CCITT Recommendation X.511, </author> <title> The Directory Abstract Service Definition, </title> <address> Geneva, </address> <month> March </month> <year> 1988. </year>
Reference-contexts: These documents are now in the final stages of becoming full standards. More mature and stable work is available in the form of the authentication framework that forms part of the ITU/ISO Directory service, documented in X.509 [7] and X.511 <ref> [28] </ref>. This provides a public-key based approach to authentication and uses the ITU/ISO Directory service as the repository for various security related information including credentials for users and certification authorities (CAs), as well as revocation lists for credentials that are no longer valid.
Reference: [29] <author> CCITT Recommendation X.227, </author> <title> Connection Oriented Protocol Specification for the Association Control Service Element, </title> <month> September </month> <year> 1992. </year>
Reference-contexts: In X.511, syntaxes for credentials are defined that can bear a signature from a CA. This syntax can be used not just by the directory but by any application that uses the ITU/ISO association control service element (ACSE <ref> [29] </ref>). The authenticated information is a globally unique identity a distinguished name (DN). An example of a DN is: c=GB@o=University College London@ou=Computer Science@cn=Saleem Bhatti The identity can refer to a real person or an application (in fact it can be anything).
Reference: [30] <author> D. Eastlake 3rd, S. Crocker, J. Schiller, </author> <title> Randomness Recommendations for Security, Internet RFC 1750, </title> <month> 29 December </month> <year> 1994. </year>
Reference-contexts: This can be achieved by, for example, using the current time as part of the function that produces the seed for the random number generator used. Recommendations for randomness properties for use in security systems is presented in <ref> [30] </ref>. If any of the checks on T I fail, then the connection set-up is aborted. Once the credentials have been checked, R has authenticated I and we can say that R trusts that it has set up a connection with I.
Reference: [31] <author> ISO/IEC 9072, </author> <title> Information processing systems Text Communication Remote Operations, </title> <year> 1989. </year>
Reference-contexts: The CMISE makes use of two other service elements; the association control service element (ACSE) and the remote operations service element (ROSE) <ref> [31] </ref>. The interactions between the service elements and an application are depicted in Figure 2. The CMISE uses the ACSE to establish and close connections. Once an association is established, CMIP PDUs are passed from the CMISE to ROSE and are carried as the payload of ROS PDUs.
Reference: [32] <author> G. Pavlou, G. Knight, K. McCarthy, S. N. Bhatti, </author> <title> The OSIMIS Platform: Making OSI Management Simple, </title> <booktitle> Proc. Fourth International Symposium on Integrated Network Management 1995, </booktitle> <address> 1 - 5 May 1995, Santa Barbara, California, </address> <publisher> USA, </publisher> <editor> editors A. S. Sethi, Y. Raynaud, F. </editor> <address> Faure-Vincent, </address> <note> pp 480-493 [Chapman & Hall] http://www.cs.ucl.ac.uk/staff/S.Bhatti/papers/1995/isinm4/osimis/paper.ps </note>
Reference-contexts: MSAP (management service access point) is our implementation of the CMISE. The implementation of the mechanisms is in C and C++ on UNIX based systems. We use the following pieces of software: 12 * The OSIMIS package <ref> [32] </ref> to provide the ISO management infrastructure and CMIP protocol implementation. * The ISODE package [33] to provide the upper layer ISO communications stack. * The MD5 implementation in RFC1321 [22]. * An implementation of DES written at UCL.
Reference: [33] <institution> UCL Department of Computer Science, </institution> <note> The ISODE User's Manual, Version 8.0, </note> <month> July </month> <year> 1991. </year> <month> ftp://bells.cs.ucl.ac.uk/src/isode-8.ps.Z </month>
Reference-contexts: The implementation of the mechanisms is in C and C++ on UNIX based systems. We use the following pieces of software: 12 * The OSIMIS package [32] to provide the ISO management infrastructure and CMIP protocol implementation. * The ISODE package <ref> [33] </ref> to provide the upper layer ISO communications stack. * The MD5 implementation in RFC1321 [22]. * An implementation of DES written at UCL. The value of K S is used as the parameter for the confidentiality and integrity mechanisms.
Reference: [34] <author> H. Krawczyk, </author> <title> Keyed-MD5 for Message Authentication, work in progress, Internet Draft, </title> <address> draft-krawczyk-keyed-md5-00.txt, </address> <month> 22 June </month> <year> 1995. </year>
Reference-contexts: The HASH function for signatures is realised by the MD5 implementation and is used as described in <ref> [34] </ref>. The signatures for the tokens are created using the following API: int mlsSignature (PE pe, const char key [8], char signature [16]); The PE is a presentation element abstraction used by ISODE.
Reference: [35] <author> C. Neuman, B. Tung, J. Wray, </author> <title> Public Key Cryptography for Initial Authentication in Ker-beros, work in progress, Internet Draft, </title> <address> draft-ietf-cat-kerberos-pk-init-00.txt, </address> <month> 6 March </month> <year> 1995. </year>
Reference-contexts: However, this problem can also affect public-key systems where the secret part of the key must be sent to the user. There is now a proposal for Kerberos, a shared-key based system, to use public-keys for the initial authentication exchange <ref> [35] </ref>. Such systems could be used to distribute shared-keys in-band, given a suitable key distribution framework. * Secure storage of keys: the shared-keys must be stored securely so that only the applications/users that require them can read them. This problem is, again, also true of public-key based systems.
Reference: [36] <author> ITU M.3010, </author> <title> Principles for a Telecommunication Management Network, Working Party IV, </title> <type> Report 28, </type> <month> December </month> <year> 1991. </year> <title> 23 24 25 26 (times in s) Authentication none mutual overhead [%] connect 0.26 0.38 46 disconnect 0.04 0.07 75 Table 1: Management application connect and disconnect times 27 </title>
Reference-contexts: We may look at the security requirements in terms of inter-domain communication and intra-domain communication, for example, in the general telecommunications management network (TMN) <ref> [36] </ref>. The information architecture for the TMN is depicted in Figure 3 showing interfaces between different functional blocks. In this model we may consider that the X-interface is an inter-domain interface.
References-found: 36

