URL: http://www.cs.umn.edu/Users/dept/users/kencham/SteadyState.ps.gz
Refering-URL: http://www.cs.umn.edu/Users/dept/users/kencham/
Root-URL: http://www.cs.umn.edu
Email: fkencham,srivastag@cs.umn.edu  
Title: I/O Scheduling for Digital Continuous Media Part I Steady State Operation  
Author: Deepak R. Kenchammana-Hosekote Jaideep Srivastava 
Keyword: Continuous Media, I/O Scheduling, Frame oriented Streams, Compressed Data, Performance Evaluation  
Note: This work was supported in part by Honeywell Inc. under grant F30602-93-C-0172 from Rome Air Force  
Address: MN 55455  Rome, NY.  
Affiliation: Department of Computer Science, University of Minnesota,  Labs,  
Abstract: A growing set of applications in domains ranging from distance education, entertainment, medical services, office automation to national defence require audio and video data. The basic characteristic of such data is its continuous and real-time requirements during playback. To provide access to continuous media (CM) data scheduling strategies at CM data servers (CMS) is neccessary. In this paper we develop an analytic model for scheduling concurrent accesses for CM data in the CMS. We derive an optimal Batched-SCAN (BSCAN) algorithm that requires minimum buffer space to schedule concurrent accesses. The analytical model is then extended by incorporating two key constraints. The first of the extensions involves constraining data fetches from the storage system to proceed in integral number of blocks. This is a fundamental constraint in all storage devices currently available. We derive the optimal BSCAN algorithm given this added constraint. The second extension involves allowing the BSCAN algorithm to handle clients' playback to proceed in frames rendered in discrete time instances. This extension allows smooth playback of CM data like video streams whose playback is typically expressed in frames per second. We derive the optimal BSCAN algorithm for frame oriented CM streams. We also show how the BSCAN algorithm may be adapted to handle compressed data like JPEG and MPEG, both characterized by a variable data rate during playback. Our observations from the analytical model are confirmed by simulation studies. 
Abstract-found: 1
Intro-found: 1
Reference: [AGM90] <author> R.K. Abbott and H. Garcia-Molina. </author> <title> Scheduling I/O Requests with Deadlines:A Performance Evaluation. </title> <booktitle> In IEEE Real Time Systems Symposium, </booktitle> <pages> pages 113-124. </pages> <publisher> IEEE, </publisher> <month> Dec </month> <year> 1990. </year>
Reference-contexts: Simulation studies confirm all observations from the analytical model presented here. 1.2 Relation to Previous Work The problem of scheduling accesses to I/O systems has been studied extensively as early as [Fra69], and [TP72], [Ful75]. More recently <ref> [AGM90] </ref> and [ea91] have addressed the problem in the context of real-time systems (RTS). With the growing interest in continuous media server design recent work by [Gem93], [RW93], [CKY93], [AOG92], [RV93a], [GC92], [LS92], [RVG + 93], [CCP + 94], [DS94] [CL93] has been very significant.
Reference: [AHPR94] <author> M. Agrawal, J. Huang, S. Prabhakar, and J. Richardson. </author> <title> Integrated System Support for Continuous Multimedia Applications. </title> <booktitle> In Proceedings of International Conference on Distributed Multimedia Systems and Applications, </booktitle> <month> August </month> <year> 1994. </year>
Reference-contexts: bandwidth allocation while scheduling variable data rate streams leads to poor storage system utilization. 8 Future Work The strategy described here is being implemented on a Sun SparcStation 20 with a Parallax Video Card, 168M main memory, and 8G secondary storage running Solaris 2.3 as part of the Presto project <ref> [AHPR94] </ref>. The I/O scheduler is being implemented as a single thread sharing address space with the clients using the real-time and multi-thread support in Solaris 2.3 [KSZ92].
Reference: [AOG92] <author> D. Anderson, Y. Osawa, and R. Govindan. </author> <title> A file system for continuous media. </title> <journal> ACM Transaction on Computer Systems, </journal> <volume> 10(4), </volume> <month> November </month> <year> 1992. </year>
Reference-contexts: More recently [AGM90] and [ea91] have addressed the problem in the context of real-time systems (RTS). With the growing interest in continuous media server design recent work by [Gem93], [RW93], [CKY93], <ref> [AOG92] </ref>, [RV93a], [GC92], [LS92], [RVG + 93], [CCP + 94], [DS94] [CL93] has been very significant. While [GC92] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem at the CMS. <p> However, their scheduling approaches do not address issues typical of CM data like handling frame-oriented streams. In the second approach, like those in [Gem93], [CKY93], <ref> [AOG92] </ref>, [LS92], [RV93a], [CL93], the effort has been to derive new scheduling strategies that are aware of the continuous and real-time requirements of a CMS. Our work draws heavily on work from the second approach. [RV93a] proposes a fixed order cyclical scheduling strategy. <p> Their analysis has inspired some of the modelling presented in this paper. Their observation regarding the implementation constraint of integral block fetches inspired the detailed modelling of this constraint in this work. However, they do not address the problem of handling frame-oriented CM data. <ref> [AOG92] </ref> develops a similar scheduling strategy as that in [RV93a]. However, [AOG92] derives the scheduling strategy by constraining their search of the solution space to integer points. <p> Their observation regarding the implementation constraint of integral block fetches inspired the detailed modelling of this constraint in this work. However, they do not address the problem of handling frame-oriented CM data. <ref> [AOG92] </ref> develops a similar scheduling strategy as that in [RV93a]. However, [AOG92] derives the scheduling strategy by constraining their search of the solution space to integer points. <p> Their minimal feasible WAS algorithm has been made more efficient as well as has been extended to handle client consumption in discrete chunks called frames. [Gem93] and [CKY93] consider a modification to the scheduling strategy first proposed by [RV93a] and <ref> [AOG92] </ref>. In their work they consider a mix of a fixed order scheduling with SCAN order servicing of different CM data streams. <p> This is a contradition. PSTAR is a search algorithm in the subspace of R s . However, unlike other search algorithms, e.g. <ref> [AOG92] </ref>, PSTAR starts searching from dn fl e since the solution of P2 is guaranteed to be greater than (or equal to) n fl . The algorithm initially starts with p set to 0.
Reference: [app94a] <author> C4I: </author> <title> The Advanced Warrior Program. </title> <note> USAF Publication, </note> <year> 1994. </year>
Reference-contexts: Amongst the various types of data that comprise multi-media, video and audio data requires continuous real-time data flow during playback and recording. The growing set of application domains range from distance education [SMRD94], entertainment [app94b], medical services [app94c], office automation [ONWC87] to national defence <ref> [app94a] </ref>. Many of these applications require audio and video data which is collectively described by the term continuous media (CM). Due to the large size and the high data bandwidth needed to transmit CM data providing economically feasible access by these applications is the challenge [app95].
Reference: [app94b] <author> Demanding Task:Video on Demand. </author> <title> Article in New York Times, </title> <note> Sunday 23 rd , January 1994. </note>
Reference-contexts: Amongst the various types of data that comprise multi-media, video and audio data requires continuous real-time data flow during playback and recording. The growing set of application domains range from distance education [SMRD94], entertainment <ref> [app94b] </ref>, medical services [app94c], office automation [ONWC87] to national defence [app94a]. Many of these applications require audio and video data which is collectively described by the term continuous media (CM).
Reference: [app94c] <editor> Multi-media in Medicine. </editor> <title> Article in New York Times, </title> <note> Sunday 23 rd , January 1994. </note>
Reference-contexts: Amongst the various types of data that comprise multi-media, video and audio data requires continuous real-time data flow during playback and recording. The growing set of application domains range from distance education [SMRD94], entertainment [app94b], medical services <ref> [app94c] </ref>, office automation [ONWC87] to national defence [app94a]. Many of these applications require audio and video data which is collectively described by the term continuous media (CM).
Reference: [app95] <institution> Perspectives on Video-on-Demand. </institution> <note> IEEE Spectrum Special Issue, </note> <month> April </month> <year> 1995. </year>
Reference-contexts: Many of these applications require audio and video data which is collectively described by the term continuous media (CM). Due to the large size and the high data bandwidth needed to transmit CM data providing economically feasible access by these applications is the challenge <ref> [app95] </ref>. In order to provide such a service an emerging service model is one in which many clients (applications) connect across high speed interconnection networks to specialized data servers that store and retrieve CM data.
Reference: [BFS87] <author> P. Bratley, B.L. Fox, and L.E Schrage. </author> <title> A Guide to Simulation. </title> <publisher> Springer-Verlag, </publisher> <address> New York, NY, 2 edition, </address> <year> 1987. </year> <month> 33 </month>
Reference-contexts: This is to prevent any effect due to cross-corelation that could arise by picking random numbers from a single generator. MAGELLAN achieves this by seeding, and storing the state of each random number generator separately. Seed selection for the random generators were guided by suggestions in <ref> [BFS87] </ref>. 6.1.3 Metrics Measured and Summarization Rules We supply a summary of definitions for the metrics that were measured and reported in the experiments.
Reference: [BG88] <author> D. Bitton and J. Gray. </author> <title> Disk shadowing. </title> <booktitle> In 14th International Conference on Very Large Data Bases, </booktitle> <pages> pages 331-338, </pages> <year> 1988. </year>
Reference-contexts: We denote each pass of the head assembly in the storage system as a cycle. Thus, in BSCAN accesses are scheduled in cycles of SCAN order (or reverse-SCAN depending on 2 In <ref> [BG88] </ref> the seek time for t tracks in a disk with non-linear actuator is o (t) = ff 0 + ff 1 p t; ff 0 ; ff 1 &gt; 0, when t &gt; 0, o (0) = 0. the scan direction) for different streams while block accesses of a single
Reference: [CCP + 94] <author> Y.-H. Chang, D. Coggins, D. Pitt, D. Skellern, M. Thapar, and C. Venkatraman. </author> <title> An Open-Systems Approach to Video on Demand. </title> <journal> IEEE Communications Magazine, </journal> <pages> pages 68-80, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: More recently [AGM90] and [ea91] have addressed the problem in the context of real-time systems (RTS). With the growing interest in continuous media server design recent work by [Gem93], [RW93], [CKY93], [AOG92], [RV93a], [GC92], [LS92], [RVG + 93], <ref> [CCP + 94] </ref>, [DS94] [CL93] has been very significant. While [GC92] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem at the CMS.
Reference: [CKY93] <author> M. Chen, D. Kandlur, and P.S. Yu. </author> <title> Optimization of the Group Sweep Scheduling with Heterogeneous Multimedia Streams. </title> <booktitle> In Proceedings of the ACM Multimedia, </booktitle> <pages> pages 235-242, </pages> <address> Anaheim, CA, </address> <month> August </month> <year> 1993. </year>
Reference-contexts: More recently [AGM90] and [ea91] have addressed the problem in the context of real-time systems (RTS). With the growing interest in continuous media server design recent work by [Gem93], [RW93], <ref> [CKY93] </ref>, [AOG92], [RV93a], [GC92], [LS92], [RVG + 93], [CCP + 94], [DS94] [CL93] has been very significant. While [GC92] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem at the CMS. <p> However, their scheduling approaches do not address issues typical of CM data like handling frame-oriented streams. In the second approach, like those in [Gem93], <ref> [CKY93] </ref>, [AOG92], [LS92], [RV93a], [CL93], the effort has been to derive new scheduling strategies that are aware of the continuous and real-time requirements of a CMS. Our work draws heavily on work from the second approach. [RV93a] proposes a fixed order cyclical scheduling strategy. <p> However, [AOG92] derives the scheduling strategy by constraining their search of the solution space to integer points. Their minimal feasible WAS algorithm has been made more efficient as well as has been extended to handle client consumption in discrete chunks called frames. [Gem93] and <ref> [CKY93] </ref> consider a modification to the scheduling strategy first proposed by [RV93a] and [AOG92]. In their work they consider a mix of a fixed order scheduling with SCAN order servicing of different CM data streams.
Reference: [CL93] <author> H.-J. Chen and T.D.C Little. </author> <title> Physical storage organization for time dependent multimedia data. </title> <booktitle> In 4 th Intl. Conference on Foundation of Data Organization and Algorithms, </booktitle> <year> 1993. </year>
Reference-contexts: More recently [AGM90] and [ea91] have addressed the problem in the context of real-time systems (RTS). With the growing interest in continuous media server design recent work by [Gem93], [RW93], [CKY93], [AOG92], [RV93a], [GC92], [LS92], [RVG + 93], [CCP + 94], [DS94] <ref> [CL93] </ref> has been very significant. While [GC92] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem at the CMS. <p> However, their scheduling approaches do not address issues typical of CM data like handling frame-oriented streams. In the second approach, like those in [Gem93], [CKY93], [AOG92], [LS92], [RV93a], <ref> [CL93] </ref>, the effort has been to derive new scheduling strategies that are aware of the continuous and real-time requirements of a CMS. Our work draws heavily on work from the second approach. [RV93a] proposes a fixed order cyclical scheduling strategy. <p> Their conclusion that performance gains in terms of buffer space from a mix of fixed order and SCAN discipline has influenced the formulation of BSCAN. Many of the works cited above discuss deterministic services, i.e. playback guarantees are maintained during retrieval. <ref> [CL93] </ref> and [VGGG94] modify round robin scheduling strategies to provide statistical guarantees to clients. In order to better utilize the storage system, they provide a probabilistic analysis of their scheduling models such that at most times the clients' playback is smooth. <p> However, as will be seen shortly, it becomes advantageous to store groups of disk blocks of a single stream as close to each other as possible. Issues related to constraining placement are further discussed in <ref> [CL93] </ref> and [RV93b]. Data blocks of different streams, however, may not neccessarily be stored close to each other. <p> For example, stream. When playback of streams have data rate variability, in order to maintain steady playback rate we must take a conservative approach of allocating of resources (here the I/O bandwidth) based on the largest frame sizes. Approaches like <ref> [CL93] </ref> have considered the use of statistical averages to admit and schedule such streams. During periods of overload the scheduler has no choice but to drop the additional data requests and this leads to playback jitter.
Reference: [DS94] <author> A. Daigle and J.K Strosnider. </author> <title> Disk Scheduling for Multimedia Data Streams. </title> <booktitle> In Proceedings of the High-Speed Networking and Multimedia Computing Conference. </booktitle> <address> IS&T/SPIE, </address> <month> February </month> <year> 1994. </year>
Reference-contexts: More recently [AGM90] and [ea91] have addressed the problem in the context of real-time systems (RTS). With the growing interest in continuous media server design recent work by [Gem93], [RW93], [CKY93], [AOG92], [RV93a], [GC92], [LS92], [RVG + 93], [CCP + 94], <ref> [DS94] </ref> [CL93] has been very significant. While [GC92] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem at the CMS. First, approaches like [RW93], [RVG + 93], [KB93], [DS94] adapt scheduling algorithms used in RTS to continuous media access. [RW93], [DS94] <p> [RW93], [CKY93], [AOG92], [RV93a], [GC92], [LS92], [RVG + 93], [CCP + 94], <ref> [DS94] </ref> [CL93] has been very significant. While [GC92] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem at the CMS. First, approaches like [RW93], [RVG + 93], [KB93], [DS94] adapt scheduling algorithms used in RTS to continuous media access. [RW93], [DS94] give thorough evaluation of these algorithms. Their conclusions that larger request sizes along with deferred deadlines were the key to performance improvement greatly influenced our choice of incorporating batching and SCAN features into our scheduling strategy. <p> <ref> [DS94] </ref> [CL93] has been very significant. While [GC92] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem at the CMS. First, approaches like [RW93], [RVG + 93], [KB93], [DS94] adapt scheduling algorithms used in RTS to continuous media access. [RW93], [DS94] give thorough evaluation of these algorithms. Their conclusions that larger request sizes along with deferred deadlines were the key to performance improvement greatly influenced our choice of incorporating batching and SCAN features into our scheduling strategy.
Reference: [DSS94] <author> A. Dan, D. Sitaram, and P. Shahabuddin. </author> <title> Scheduling Policies for an On-Demand Video Server with Batching. </title> <booktitle> In ACM Multimedia, </booktitle> <pages> pages 15-23. </pages> <publisher> ACM, </publisher> <month> October </month> <year> 1994. </year>
Reference-contexts: In order to better utilize the storage system, they provide a probabilistic analysis of their scheduling models such that at most times the clients' playback is smooth. Their strategies are useful in domains wherein playback guarantees are not neccessary. Finally, work by <ref> [DSS94] </ref> has considered the problem of batching application requests to benefit from the fact that once a stream (or a portion thereof ) has been brought into the server's buffer, techniques such as multi-casting may be used to service a larger number of applications desiring the same CM stream. 1.3 Organization
Reference: [ea91] <author> S. Shen et al. </author> <title> Performance Evaluation of Two New Disk Scheduling Algorithms. Real Time Systems, </title> <month> September </month> <year> 1991. </year>
Reference-contexts: Simulation studies confirm all observations from the analytical model presented here. 1.2 Relation to Previous Work The problem of scheduling accesses to I/O systems has been studied extensively as early as [Fra69], and [TP72], [Ful75]. More recently [AGM90] and <ref> [ea91] </ref> have addressed the problem in the context of real-time systems (RTS). With the growing interest in continuous media server design recent work by [Gem93], [RW93], [CKY93], [AOG92], [RV93a], [GC92], [LS92], [RVG + 93], [CCP + 94], [DS94] [CL93] has been very significant. <p> Many schemes for multiplexing time critical accesses to I/O devices like Round-Robin (RR), SCAN, Earliest deadline first, etc. have been previously studied ([AGM90], <ref> [ea91] </ref>). The high retrieval latency and the non preemptible nature of storage system makes strategies like RR and SCAN attractive for real-time, high volume I/O accesses as those found in a CMS.
Reference: [Fra69] <author> H. Frank. </author> <title> Analysis and optimization of disk storage for time-sharing systems. </title> <journal> Journal of the ACM, </journal> <volume> 16(4) </volume> <pages> 602-620, </pages> <month> October </month> <year> 1969. </year>
Reference-contexts: Simulation studies confirm all observations from the analytical model presented here. 1.2 Relation to Previous Work The problem of scheduling accesses to I/O systems has been studied extensively as early as <ref> [Fra69] </ref>, and [TP72], [Ful75]. More recently [AGM90] and [ea91] have addressed the problem in the context of real-time systems (RTS).
Reference: [Ful75] <author> Samuel F. Fuller. </author> <title> Analysis of disk and storage units, </title> <booktitle> volume 31 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer Verlag, </publisher> <year> 1975. </year>
Reference-contexts: Simulation studies confirm all observations from the analytical model presented here. 1.2 Relation to Previous Work The problem of scheduling accesses to I/O systems has been studied extensively as early as [Fra69], and [TP72], <ref> [Ful75] </ref>. More recently [AGM90] and [ea91] have addressed the problem in the context of real-time systems (RTS). With the growing interest in continuous media server design recent work by [Gem93], [RW93], [CKY93], [AOG92], [RV93a], [GC92], [LS92], [RVG + 93], [CCP + 94], [DS94] [CL93] has been very significant.
Reference: [GC92] <author> J. Gemmell and S. Christodoulakis. </author> <title> Principles of Delay-sensitive Multimedia Storage and Retrieval. </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 10(1) </volume> <pages> 51-90, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: More recently [AGM90] and [ea91] have addressed the problem in the context of real-time systems (RTS). With the growing interest in continuous media server design recent work by [Gem93], [RW93], [CKY93], [AOG92], [RV93a], <ref> [GC92] </ref>, [LS92], [RVG + 93], [CCP + 94], [DS94] [CL93] has been very significant. While [GC92] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem at the CMS. <p> More recently [AGM90] and [ea91] have addressed the problem in the context of real-time systems (RTS). With the growing interest in continuous media server design recent work by [Gem93], [RW93], [CKY93], [AOG92], [RV93a], <ref> [GC92] </ref>, [LS92], [RVG + 93], [CCP + 94], [DS94] [CL93] has been very significant. While [GC92] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem at the CMS. First, approaches like [RW93], [RVG + 93], [KB93], [DS94] adapt scheduling algorithms used in RTS to continuous media access. [RW93], [DS94] give thorough evaluation of these algorithms.
Reference: [Gem93] <author> J. </author> <title> Gemmell. Multimedia Network File Servers: Multi-channel Delay Sensitive Data Retrieval. </title> <booktitle> In Proceedings of 1 st ACM Multimedia Conference. ACM, </booktitle> <month> October </month> <year> 1993. </year>
Reference-contexts: More recently [AGM90] and [ea91] have addressed the problem in the context of real-time systems (RTS). With the growing interest in continuous media server design recent work by <ref> [Gem93] </ref>, [RW93], [CKY93], [AOG92], [RV93a], [GC92], [LS92], [RVG + 93], [CCP + 94], [DS94] [CL93] has been very significant. While [GC92] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem at the CMS. <p> However, their scheduling approaches do not address issues typical of CM data like handling frame-oriented streams. In the second approach, like those in <ref> [Gem93] </ref>, [CKY93], [AOG92], [LS92], [RV93a], [CL93], the effort has been to derive new scheduling strategies that are aware of the continuous and real-time requirements of a CMS. Our work draws heavily on work from the second approach. [RV93a] proposes a fixed order cyclical scheduling strategy. <p> However, [AOG92] derives the scheduling strategy by constraining their search of the solution space to integer points. Their minimal feasible WAS algorithm has been made more efficient as well as has been extended to handle client consumption in discrete chunks called frames. <ref> [Gem93] </ref> and [CKY93] consider a modification to the scheduling strategy first proposed by [RV93a] and [AOG92]. In their work they consider a mix of a fixed order scheduling with SCAN order servicing of different CM data streams.
Reference: [Gre71] <author> H. Greenberg. </author> <title> Integer Programming. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1971. </year>
Reference-contexts: Problem 2 (P2) min B = 2b i=1 such that Mn O (s)r n i 0 and is an integer for all 1 i s. Various techniques to solve ILPs have been proposed in [Lue84], <ref> [Gre71] </ref>. Again, the special structure of P2 allows us to derive its solution from that of P1. Henceforth in this paper we shall denote the solution of P2 as n + .
Reference: [Jai91] <author> R. Jain. </author> <title> The Art of Computer Systems Performance Analysis. </title> <publisher> John Wiley & Sons, </publisher> <year> 1991. </year>
Reference-contexts: Thus for Experiments 1 and 2 each stream was a constant 7 The choice of picking the larger or smaller value depended on the type of metric. If the metric was a higher the better (HTB) metric <ref> [Jai91] </ref> then the smaller value was chosen and if lower the better (LTB), then the larger value. Buffer utilization is a LTB metric and hence the choice of the larger value. 27 frame size (18.000KB) played back at a constant frame rate of 12 frames per second.
Reference: [KB93] <author> Tindell K. and A. Burns. </author> <title> Scheduling hard real-time multimedia disk traffic. </title> <type> manuscript, </type> <year> 1993. </year> <journal> Personal Communications. </journal> <volume> 34 </volume>
Reference-contexts: While [GC92] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem at the CMS. First, approaches like [RW93], [RVG + 93], <ref> [KB93] </ref>, [DS94] adapt scheduling algorithms used in RTS to continuous media access. [RW93], [DS94] give thorough evaluation of these algorithms. Their conclusions that larger request sizes along with deferred deadlines were the key to performance improvement greatly influenced our choice of incorporating batching and SCAN features into our scheduling strategy.
Reference: [KH] <author> D.R. Kenchammana-Hosekote. </author> <title> The magellan Continuous Media Server Simulator. </title> <note> Document in preparation. </note>
Reference-contexts: In Section 6.2 we discuss the capacity analysis of the simulated configuration. Finally, in Section 6.3 we present the experimental design and results. 6.1 Experiment Set Up 6.1.1 The Simulator The experiments presented here were conducted using MAGELLAN <ref> [KH] </ref>. MAGELLAN is a process oriented similator written in C++/CSIM [Sch90] and MATLAB. A schematic of MAGELLAN is illustrated in Figure 5. Further description of MAGELLAN can be found in [KH]. For results presented in this paper, MAGELLAN simulated a CMS with parameters described in Table 1. <p> the experimental design and results. 6.1 Experiment Set Up 6.1.1 The Simulator The experiments presented here were conducted using MAGELLAN <ref> [KH] </ref>. MAGELLAN is a process oriented similator written in C++/CSIM [Sch90] and MATLAB. A schematic of MAGELLAN is illustrated in Figure 5. Further description of MAGELLAN can be found in [KH]. For results presented in this paper, MAGELLAN simulated a CMS with parameters described in Table 1. This configuration corresponds to a Sun Sparcstation 20 with a Seagate Barracuda 2GB disk with Parallax video card playing back motion-JPEG compressed video streams.
Reference: [KHS94a] <author> D.R. Kenchammana-Hosekote and J. Srivastava. </author> <title> Designing an I/O Scheduler for Continuous Media. </title> <type> Technical Report 94-31, </type> <institution> Department of Computer Science, University of Minnesota, 200, Union Street S.E., Minneapolis, MN, </institution> <month> May </month> <year> 1994. </year> <note> Submitted for Publication. </note>
Reference-contexts: Two significant extensions to the basic BSCAN model is 32 proposed. Both these extensions ensure feasible implementation of the model. By presenting an analytic model for BSCAN we have been able to derive several design equations that may be used to configure a CMS. These equations are summarized in <ref> [KHS94a] </ref>. Performance evaluation via simulations shows the actual performace of BSCAN to follow the analytic model.
Reference: [KHS94b] <author> D.R. Kenchammana-Hosekote and J. Srivastava. </author> <title> Handling Stream Operations in a Continuous Media Server. </title> <type> Technical Report 94-16, </type> <institution> Department of Computer Science, University Of Minnesota, </institution> <address> 200, Union Street, Minneapolis, MN 55455, </address> <month> March </month> <year> 1994. </year>
Reference-contexts: For all the runs presented in this paper MAGELLAN was run in the driver mode. This was to ensure that no transient effects due to client VCR-like operations <ref> [KHS94b] </ref> occur during the operation of the server. 6.1.2 Data Collection While collecting data for each run a warm-up time was allocated where in no data was collected. This was to avoid transient effects due to start up.
Reference: [KHS94c] <author> D.R. Kenchammana-Hosekote and J. Srivastava. </author> <title> Scheduling Continuous Media on a Video-On-Demand Server. </title> <booktitle> In International Conference on Multi-media Computing Systems, </booktitle> <address> Boston, MA, </address> <month> May </month> <year> 1994. </year> <note> IEEE. </note>
Reference-contexts: In such a case the schedule due to Lemma 1 will neither guarantee feasibility nor optimality for P2. Previous attempts at deriving schedules whose entries are integral multiples can be found in [RV93a]. It proposes the use of ceilings and floors. In <ref> [KHS94c] </ref> a detailed analysis of using dn fl e and bn fl c is carried out. The significant result from that was that simple use of ceiling and floor functions to derive schedules with integer entries can result in jitter or rate variation during retrieval an undesirable effect during playback.
Reference: [KHS95] <author> D. Kenchammana-Hosekote and J. Srivastava. </author> <title> A QoS Based Schuleding Algorithm for Compressed Video. </title> <type> Technical Report 95-28, </type> <institution> Department of Computer Science, University of Minnesota, 200, Union Street S.E., </institution> <address> Minneapolis, MN 55455, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: The low storage system utilization under BSSCAN while scheduling variable data rate streams (Experiment 3) is motivating our recent work which primarily is directed towards extending BSCAN to provide QoS-oriented servicing for variable data rate streams <ref> [KHS95] </ref>.
Reference: [KSZ92] <author> S. Khanna, M. Sebree, and J. Zolnowsky. </author> <title> Real-time Scheduling in SunOS 5.0. </title> <booktitle> In Proceedings of Winter USENIX. USENIX, </booktitle> <year> 1992. </year>
Reference-contexts: The I/O scheduler is being implemented as a single thread sharing address space with the clients using the real-time and multi-thread support in Solaris 2.3 <ref> [KSZ92] </ref>. The low storage system utilization under BSSCAN while scheduling variable data rate streams (Experiment 3) is motivating our recent work which primarily is directed towards extending BSCAN to provide QoS-oriented servicing for variable data rate streams [KHS95].
Reference: [L'E88] <author> P. L'Ecuyer. </author> <title> Efficient and Portable Combined Random Number Generators. </title> <journal> Communications of the ACM, </journal> <volume> 31(6) </volume> <pages> 742-749, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: Each run of MAGELLAN was executed by seeding the random number generators with different seeds. MAGELLAN uses the portable variant of MLCG (multiple linear congruent generators implemented in libg++ [Lea92]) <ref> [L'E88] </ref>. MLCG has a period of about 2:30584 fi 10 18 . All our experiments were verified to be no longer than this period and thus, were safe from any effects of recycling. MAGELLAN maintains multiple random number generators for each random variable in the simulation model.
Reference: [Lea92] <author> D. Lea. </author> <title> User's Guide to the GNU C++ Library. Free Software Foundation, </title> <address> 2.0 edition, </address> <year> 1992. </year>
Reference-contexts: Each run of MAGELLAN was executed by seeding the random number generators with different seeds. MAGELLAN uses the portable variant of MLCG (multiple linear congruent generators implemented in libg++ <ref> [Lea92] </ref>) [L'E88]. MLCG has a period of about 2:30584 fi 10 18 . All our experiments were verified to be no longer than this period and thus, were safe from any effects of recycling. MAGELLAN maintains multiple random number generators for each random variable in the simulation model.
Reference: [LRL94] <author> B.D. Lynch, H.R. Rao, and W.T. Lin. </author> <title> Comments on the Economic Analysis of Microcomputer Hardware. </title> <journal> Technical Correspondance in Comm. of ACM, </journal> <month> December </month> <year> 1994. </year>
Reference-contexts: Such an approach would require twice as much buffer as the former but is justifiable given the rapidly falling prices of main memory <ref> [LRL94] </ref> and the fact that the bottleneck is the I/O bandwidth. The use of a double buffer organization allows out-of-sequence retrieval of data blocks, increases I/O throughput from the storage system, and adds no complexity to the disk scheduling algorithms currently implemented in disks.
Reference: [LS92] <author> P. Lougher and D. Shepherd. </author> <title> Design and implementation of a continuous media storage server. </title> <booktitle> In Proc. of 3 rd Intl. Workshop on Network and Operating Systems, </booktitle> <year> 1992. </year>
Reference-contexts: More recently [AGM90] and [ea91] have addressed the problem in the context of real-time systems (RTS). With the growing interest in continuous media server design recent work by [Gem93], [RW93], [CKY93], [AOG92], [RV93a], [GC92], <ref> [LS92] </ref>, [RVG + 93], [CCP + 94], [DS94] [CL93] has been very significant. While [GC92] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem at the CMS. <p> However, their scheduling approaches do not address issues typical of CM data like handling frame-oriented streams. In the second approach, like those in [Gem93], [CKY93], [AOG92], <ref> [LS92] </ref>, [RV93a], [CL93], the effort has been to derive new scheduling strategies that are aware of the continuous and real-time requirements of a CMS. Our work draws heavily on work from the second approach. [RV93a] proposes a fixed order cyclical scheduling strategy.
Reference: [Lue84] <author> D.G. Luenberger. </author> <title> Linear and Nonlinear Programming. </title> <publisher> Addison-Wesley, 2nd ed. </publisher> <address> edition, </address> <year> 1984. </year>
Reference-contexts: The objective of the LP is to minimize the buffer required by the CMS while the linear constraints ensure that the clients never starve for data. Approaches to solve LPs have been described in <ref> [Lue84] </ref>. However, the special structure of P1 allows for a closed form solution. The solution of P1 is given in Theorem 2. <p> Problem 2 (P2) min B = 2b i=1 such that Mn O (s)r n i 0 and is an integer for all 1 i s. Various techniques to solve ILPs have been proposed in <ref> [Lue84] </ref>, [Gre71]. Again, the special structure of P2 allows us to derive its solution from that of P1. Henceforth in this paper we shall denote the solution of P2 as n + .
Reference: [ONWC87] <author> B.C. Ooi, A.N. Narasimalu, K.Y. Wang, and I.F. Chang. </author> <title> Design of a multi-media files server using optical disks for office automation. </title> <booktitle> In IEEE Computer Society Office Automation Symposium, </booktitle> <pages> pages 157-163, </pages> <year> 1987. </year>
Reference-contexts: Amongst the various types of data that comprise multi-media, video and audio data requires continuous real-time data flow during playback and recording. The growing set of application domains range from distance education [SMRD94], entertainment [app94b], medical services [app94c], office automation <ref> [ONWC87] </ref> to national defence [app94a]. Many of these applications require audio and video data which is collectively described by the term continuous media (CM). Due to the large size and the high data bandwidth needed to transmit CM data providing economically feasible access by these applications is the challenge [app95].
Reference: [oSI90] <author> ISO/MPEG Committee on Standard ISO11172. </author> <title> Coding of moving picture and associated audio. </title> <booktitle> Decemeber 1990. </booktitle> <pages> 35 </pages>
Reference-contexts: Fragmented frames need to be re-arranged into contiguous memory and require movement of data of atmost half of a frame. 22 the MPEG stream has B and P frames then a set of frames that can be independently decoded, a group in MPEG <ref> [oSI90] </ref>, is assumed as the frame size. Thus, in our example the sequence IBBPBB comprises a group and this entire set of frames are assumed to be a single unit for generating schedules.
Reference: [Poh95] <author> K.C. Pohlmann. </author> <title> Principles of Digital Audio. </title> <publisher> Knowledge Industry Publications Inc., </publisher> <year> 1995. </year>
Reference: [pro94] <editor> Product Review in SunEXPERT, </editor> <month> June </month> <year> 1994. </year> <month> Confirm. </month>
Reference: [RV93a] <author> V.P. Rangan and H.M. Vin. </author> <title> Designing a multi-user HDTV storage server. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 11(1), </volume> <month> January </month> <year> 1993. </year>
Reference-contexts: More recently [AGM90] and [ea91] have addressed the problem in the context of real-time systems (RTS). With the growing interest in continuous media server design recent work by [Gem93], [RW93], [CKY93], [AOG92], <ref> [RV93a] </ref>, [GC92], [LS92], [RVG + 93], [CCP + 94], [DS94] [CL93] has been very significant. While [GC92] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem at the CMS. <p> However, their scheduling approaches do not address issues typical of CM data like handling frame-oriented streams. In the second approach, like those in [Gem93], [CKY93], [AOG92], [LS92], <ref> [RV93a] </ref>, [CL93], the effort has been to derive new scheduling strategies that are aware of the continuous and real-time requirements of a CMS. Our work draws heavily on work from the second approach. [RV93a] proposes a fixed order cyclical scheduling strategy. <p> In the second approach, like those in [Gem93], [CKY93], [AOG92], [LS92], <ref> [RV93a] </ref>, [CL93], the effort has been to derive new scheduling strategies that are aware of the continuous and real-time requirements of a CMS. Our work draws heavily on work from the second approach. [RV93a] proposes a fixed order cyclical scheduling strategy. Their analysis has inspired some of the modelling presented in this paper. Their observation regarding the implementation constraint of integral block fetches inspired the detailed modelling of this constraint in this work. <p> Their observation regarding the implementation constraint of integral block fetches inspired the detailed modelling of this constraint in this work. However, they do not address the problem of handling frame-oriented CM data. [AOG92] develops a similar scheduling strategy as that in <ref> [RV93a] </ref>. However, [AOG92] derives the scheduling strategy by constraining their search of the solution space to integer points. <p> Their minimal feasible WAS algorithm has been made more efficient as well as has been extended to handle client consumption in discrete chunks called frames. [Gem93] and [CKY93] consider a modification to the scheduling strategy first proposed by <ref> [RV93a] </ref> and [AOG92]. In their work they consider a mix of a fixed order scheduling with SCAN order servicing of different CM data streams. <p> In such a case the schedule due to Lemma 1 will neither guarantee feasibility nor optimality for P2. Previous attempts at deriving schedules whose entries are integral multiples can be found in <ref> [RV93a] </ref>. It proposes the use of ceilings and floors. In [KHS94c] a detailed analysis of using dn fl e and bn fl c is carried out.
Reference: [RV93b] <author> V.P. Rangan and H.M. Vin. </author> <title> Efficient storage techniques for digital continuous multimedia. </title> <journal> IEEE Trans. on Knowledge and Data Engg., </journal> <volume> 5(4) </volume> <pages> 564-573, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: However, as will be seen shortly, it becomes advantageous to store groups of disk blocks of a single stream as close to each other as possible. Issues related to constraining placement are further discussed in [CL93] and <ref> [RV93b] </ref>. Data blocks of different streams, however, may not neccessarily be stored close to each other.
Reference: [RVG + 93] <author> K.K. Ramakrishnan, L. Vaitzblit, C. Gray, U. Vahalia, D. Ting, P. Tzelnic, S. Glasner, and W. Duso. </author> <title> Operating system support for a Video-On-Demand service. </title> <booktitle> In Proc. of 4 rd Intl. Workshop on Network and Operating Systems, </booktitle> <year> 1993. </year>
Reference-contexts: More recently [AGM90] and [ea91] have addressed the problem in the context of real-time systems (RTS). With the growing interest in continuous media server design recent work by [Gem93], [RW93], [CKY93], [AOG92], [RV93a], [GC92], [LS92], <ref> [RVG + 93] </ref>, [CCP + 94], [DS94] [CL93] has been very significant. While [GC92] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem at the CMS. First, approaches like [RW93], [RVG + 93], [KB93], [DS94] adapt scheduling algorithms used in RTS <p> recent work by [Gem93], [RW93], [CKY93], [AOG92], [RV93a], [GC92], [LS92], <ref> [RVG + 93] </ref>, [CCP + 94], [DS94] [CL93] has been very significant. While [GC92] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem at the CMS. First, approaches like [RW93], [RVG + 93], [KB93], [DS94] adapt scheduling algorithms used in RTS to continuous media access. [RW93], [DS94] give thorough evaluation of these algorithms.
Reference: [RW93] <author> A.L.N. Reddy and J. Wyllie. </author> <title> Disk Scheduling in a Multimedia Server. </title> <booktitle> In Proceedings of the ACM Multimedia, </booktitle> <pages> pages 225-234, </pages> <address> Anaheim, CA, </address> <month> August </month> <year> 1993. </year>
Reference-contexts: More recently [AGM90] and [ea91] have addressed the problem in the context of real-time systems (RTS). With the growing interest in continuous media server design recent work by [Gem93], <ref> [RW93] </ref>, [CKY93], [AOG92], [RV93a], [GC92], [LS92], [RVG + 93], [CCP + 94], [DS94] [CL93] has been very significant. While [GC92] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem at the CMS. First, approaches like [RW93], [RVG + 93], [KB93], [DS94] <p> design recent work by [Gem93], <ref> [RW93] </ref>, [CKY93], [AOG92], [RV93a], [GC92], [LS92], [RVG + 93], [CCP + 94], [DS94] [CL93] has been very significant. While [GC92] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem at the CMS. First, approaches like [RW93], [RVG + 93], [KB93], [DS94] adapt scheduling algorithms used in RTS to continuous media access. [RW93], [DS94] give thorough evaluation of these algorithms. <p> While [GC92] presents a general theory of retrieval for continuous media there have been two distinct approaches to the retrieval problem at the CMS. First, approaches like <ref> [RW93] </ref>, [RVG + 93], [KB93], [DS94] adapt scheduling algorithms used in RTS to continuous media access. [RW93], [DS94] give thorough evaluation of these algorithms. Their conclusions that larger request sizes along with deferred deadlines were the key to performance improvement greatly influenced our choice of incorporating batching and SCAN features into our scheduling strategy.
Reference: [Sch90] <author> H.D. Schwetman. </author> <title> CSIM Reference Manual (Revision 15). </title> <type> Technical Report ACA-ST-257-87, </type> <institution> Microelectronics and Computer Technology Corporation, Austin Texas, </institution> <year> 1990. </year>
Reference-contexts: In Section 6.2 we discuss the capacity analysis of the simulated configuration. Finally, in Section 6.3 we present the experimental design and results. 6.1 Experiment Set Up 6.1.1 The Simulator The experiments presented here were conducted using MAGELLAN [KH]. MAGELLAN is a process oriented similator written in C++/CSIM <ref> [Sch90] </ref> and MATLAB. A schematic of MAGELLAN is illustrated in Figure 5. Further description of MAGELLAN can be found in [KH]. For results presented in this paper, MAGELLAN simulated a CMS with parameters described in Table 1.
Reference: [Smi88] <author> J. E. Smith. </author> <title> Characterizing Computer Performance with a Single Number. </title> <journal> Communications of ACM, </journal> <volume> 31(10) </volume> <pages> 1202-1206, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: If the statistic was a scheduler metric (utilization and slack) then an arithmetic mean and a 95% two sided confidence interval for the statistic was computed from all runs. Since the cycle duration for all runs is constant, the use of arithmetic mean is justified <ref> [Smi88] </ref>. When the statistic was a stream metric then the statistic with the most number of samples was chosen. We chose this scheme because there is greater confidence in a statistic computed from a larger sample.
Reference: [SMRD94] <author> J. Schnepf, V. Mashayekhi, J. Riedl, and D.H.-C. Du. </author> <title> Closing the Gap in Distance Learning Education: Computer-Supported, </title> <journal> Participative, Media-Rich Education. ED-TECH Review, </journal> <year> 1994. </year> <month> Fall/Winter. </month>
Reference-contexts: Amongst the various types of data that comprise multi-media, video and audio data requires continuous real-time data flow during playback and recording. The growing set of application domains range from distance education <ref> [SMRD94] </ref>, entertainment [app94b], medical services [app94c], office automation [ONWC87] to national defence [app94a]. Many of these applications require audio and video data which is collectively described by the term continuous media (CM).
Reference: [TP72] <author> T.J. </author> <title> Teorey and T.B. Pinkerton. A Comparitive Analysis of Disk Scheduling Policy. </title> <journal> Communications of the ACM, </journal> <volume> 15(3) </volume> <pages> 177-184, </pages> <month> March </month> <year> 1972. </year>
Reference-contexts: Simulation studies confirm all observations from the analytical model presented here. 1.2 Relation to Previous Work The problem of scheduling accesses to I/O systems has been studied extensively as early as [Fra69], and <ref> [TP72] </ref>, [Ful75]. More recently [AGM90] and [ea91] have addressed the problem in the context of real-time systems (RTS). With the growing interest in continuous media server design recent work by [Gem93], [RW93], [CKY93], [AOG92], [RV93a], [GC92], [LS92], [RVG + 93], [CCP + 94], [DS94] [CL93] has been very significant.
Reference: [TPBG93] <author> F. Tobagi, J. Pang, R. Baird, and M. Gang. </author> <title> Streaming RAID A disk array management system for video files. </title> <booktitle> In 1 st Conference on Multimedia, </booktitle> <pages> pages 393-400. </pages> <publisher> ACM, </publisher> <year> 1993. </year>
Reference: [VGGG94] <author> H.M. Vin, P. Goyal, A. Goyal, and A. Goyal. </author> <title> A Statistical Admission Control Algorithm for Multimedia Servers. </title> <booktitle> In ACM Multimedia, </booktitle> <pages> pages 33-40. </pages> <publisher> ACM, </publisher> <month> October </month> <year> 1994. </year>
Reference-contexts: Their conclusion that performance gains in terms of buffer space from a mix of fixed order and SCAN discipline has influenced the formulation of BSCAN. Many of the works cited above discuss deterministic services, i.e. playback guarantees are maintained during retrieval. [CL93] and <ref> [VGGG94] </ref> modify round robin scheduling strategies to provide statistical guarantees to clients. In order to better utilize the storage system, they provide a probabilistic analysis of their scheduling models such that at most times the clients' playback is smooth.
Reference: [Wal91] <author> G. K. Wallace. </author> <title> The JPEG still picture compression standard. </title> <journal> Communications of the ACM, </journal> <volume> 34(4) </volume> <pages> 30-44, </pages> <month> April </month> <year> 1991. </year>
References-found: 48

