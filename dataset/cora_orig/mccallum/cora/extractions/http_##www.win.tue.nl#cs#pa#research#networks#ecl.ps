URL: http://www.win.tue.nl/cs/pa/research/networks/ecl.ps
Refering-URL: http://www.win.tue.nl/cs/pa/johanl/
Root-URL: http://www.win.tue.nl
Title: The Eindhoven Communication Library  
Author: Johan J. Lukkien 
Date: June 12, 1995  
Address: P.O. Box 513 5600 MB Eindhoven, The Netherlands  
Affiliation: Eindhoven, University of Technology Dept. of Mathematics and Computing Science  
Abstract: In this paper we discribe a small library of routines used for writing portable and efficient parallel programs. The library supports the Single Program Multiple Data model of computation and it uses a distributed memory. The underlying machine is modeled as a set of processors each capable of executing a number of processes. The local memory between these processes is shared. The library comprises functions for process creation, for communication and synchronization and for simple graphics operations. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> Hempel, R., et. al. (eds.), </editor> <booktitle> Parallal Computing, Special issue on message passing, </booktitle> <month> 20 </month> <year> (1994). </year>
Reference-contexts: Communication between processes is either by explicit message passing along channels. Processes executed by the same processor may use the shared memory for communication as well. The last few years communication libraries have become widely in use (for an overview, see <ref> [1] </ref>). Most commonly available of these is PVM (Parallel Virtual Machine, [5]); more recently MPI (Message Passing Interface, [3]) has become important. The focus of PVM is on heterogeneous networks of workstations, communicating through some sort of local area network. Processes in PVM usually run under the UNIX operating system.
Reference: [2] <author> Lukkien, J.J., </author> <title> The Construction of a Small Communication Library, </title> <type> Technical report no.95-01, </type> <institution> Computing Science, Eindhoven University of Technology. </institution>
Reference-contexts: We have chosen the definition of ECL such that a low latency can be achieved by using minimal buffering and as little copying of information as possible. Such an implementation is described in <ref> [2] </ref>. Furthermore, ECL supports techniques of latency hiding through supplying multiple processing. In particular it is possible to perform communication in parallel with the computation. ECL is available as a library for the language C. The complete definition is summarized in figures 1 and 2.
Reference: [3] <author> MPI: </author> <title> a message passing interface standard, </title> <institution> University of Tennessee, Knoxville, </institution> <year> 1994. </year>
Reference-contexts: Processes executed by the same processor may use the shared memory for communication as well. The last few years communication libraries have become widely in use (for an overview, see [1]). Most commonly available of these is PVM (Parallel Virtual Machine, [5]); more recently MPI (Message Passing Interface, <ref> [3] </ref>) has become important. The focus of PVM is on heterogeneous networks of workstations, communicating through some sort of local area network. Processes in PVM usually run under the UNIX operating system. As a result, most PVM implementations exhibit high communication latencies.
Reference: [4] <author> Nye, A., </author> <title> Xlib Programming Manual for version 11, The Definitive Guides to the X Window System, Volume One, </title> <publisher> O'Reily & Associates, Inc., </publisher> <address> Sebastapol (CA), </address> <year> 1990. </year>
Reference-contexts: f; This function draws an arc just like the function XDrawarc () (<ref> [4] </ref>). Parameter f may be one out of ECL ARC EDGE, ECL ARC CHORD, ECL ARC PIESLICE. In the first case the arc is not filled. In the last two cases the arc is filled as described in [4], page 149. void ECL Drawcircle (x, y, r, f) int x, y, r, f; This function uses ECL Drawarc () to draw a circle with radius r and center (x; y).
Reference: [5] <author> Geist, A., et al., </author> <title> PVM 3 user's guide and reference manual, </title> <institution> Oak Ridge National Laboratory, </institution> <year> 1994. </year>
Reference-contexts: Processes executed by the same processor may use the shared memory for communication as well. The last few years communication libraries have become widely in use (for an overview, see [1]). Most commonly available of these is PVM (Parallel Virtual Machine, <ref> [5] </ref>); more recently MPI (Message Passing Interface, [3]) has become important. The focus of PVM is on heterogeneous networks of workstations, communicating through some sort of local area network. Processes in PVM usually run under the UNIX operating system. As a result, most PVM implementations exhibit high communication latencies.
References-found: 5

