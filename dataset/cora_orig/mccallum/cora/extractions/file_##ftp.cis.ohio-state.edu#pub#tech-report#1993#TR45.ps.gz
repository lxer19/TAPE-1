URL: file://ftp.cis.ohio-state.edu/pub/tech-report/1993/TR45.ps.gz
Refering-URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/TRList.html
Root-URL: 
Email: Email: jayasim@cis.ohio-state.edu  
Title: Fault Tolerance in a Multisensor Environment  
Author: D. N. Jayasimha 
Note: 1 On leave at NASA Lewis Research  
Date: Revised: May 1994  
Address: 2036, Neil Ave. Columbus, OH 43210, USA  OH 44142.  
Affiliation: Department of Computer and Information Science 1 The Ohio State University  Center Ohio Aerospace Institute Cleveland,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> P. Chew and K. Marzullo. </author> <title> Masking failures of multidimensional sensors. </title> <booktitle> In Proc. of the Tenth Symposium on Reliable Distributes Systems, </booktitle> <pages> pages 32-41, </pages> <year> 1991. </year>
Reference-contexts: The arbitrary failure model is the weakest, i.e., the most general, and includes all other failure models [3]. Chew and Marzullo <ref> [1] </ref> point out the advantage of applying such weak failure models to sensor information integration as opposed to the more traditional approach which models the value of a sensor as a random variable. <p> By this naive approach, we would expect the multidimensional fault tolerant algorithms to be too conservative and the upper bounds to be not tight. Chew and Marzullo <ref> [1] </ref> have extended the latter's algorithm to d-dimensional abstract sensors which have rectangular and circular "shapes". The analogs of our fault tolerant algorithm, Theorems 1 and 2 for multidimensional sensors merit further investigation.
Reference: [2] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> The MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: We show in Theorem 1 that the maximum size of I is (2f + 1). The search (Step 5) and locate (Step 8) operations can be done efficiently in O (log n) and O (log f ) times respectively by maintaining U and I as balanced binary trees <ref> [2] </ref>. Further, by Theorem 1 (Section 3.3), the loop in Steps 13-15 is executed at most a total of (2f + 1) times. So the complexity of the main loop is O (f log n).
Reference: [3] <author> F. Cristian. </author> <title> Understanding fault tolerant distributed systems. </title> <journal> Communications of the ACM, </journal> <volume> 34(2) </volume> <pages> 56-78, </pages> <month> February </month> <year> 1991. </year>
Reference-contexts: The arbitrary failure model is the weakest, i.e., the most general, and includes all other failure models <ref> [3] </ref>. Chew and Marzullo [1] point out the advantage of applying such weak failure models to sensor information integration as opposed to the more traditional approach which models the value of a sensor as a random variable.
Reference: [4] <author> H. F. Durrant-Whyte. </author> <title> Sensor models and multisensor integration. </title> <journal> International Journal of Robotics Research, </journal> <volume> 7(6) </volume> <pages> 97-113, </pages> <year> 1988. </year>
Reference-contexts: We use the term multisensor network to denote both these architectural configurations. When sensors are replicated, we need a method to combine information from the various sensor outputs. Information integration is the term used in literature to denote any method of combining information <ref> [4] </ref>. Information integration could be competitive or complementary. With the former, each sensor ideally provides identical information though this is not the case in practice, thereby necessitating replication of sensors. <p> The results we present hold for this model only though it may be applicable to other situations also. We are aware, however, that sensor modeling is itself a detailed area of study and that very sophisticated methods exist for information integration <ref> [4] </ref>. In Section 2, we present the necessary background leading to this study, a description of the sensor model, and a precise formulation of the problem. An efficient fault tolerant algorithm and the main results of the paper are presented in Section 3.
Reference: [5] <author> M. C. Golumbic. </author> <title> Algorithmic Graph Theory and Perfect Graphs. </title> <publisher> Academic Press, </publisher> <year> 1980. </year>
Reference-contexts: Section 4 contains a list of the improvements that this paper makes over the results of Marzullo. Marzullo uses the formalism of interval graphs <ref> [5] </ref> to find a fault tolerant algorithm for a set of n intervals with at most f faults. An interval graph for a set of intervals is constructed by associating each interval with a vertex and joining two vertices iff the corresponding intervals intersect.
Reference: [6] <author> S. S. Iyengar, D. N. Jayasimha, and D. Nadig. </author> <title> A versatile architecture for the distributed sensor integration problem. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 43(2) </volume> <pages> 175-185, </pages> <month> February </month> <year> 1994. </year>
Reference-contexts: The communication and synchronization issues become important only when the multisensor network is large in size or is spatially distributed over a wide geographical area <ref> [8, 7, 6] </ref>. The focus of this paper is on fault tolerance in the presence of arbitrary failures and, to a lesser extent, on fault detection in an environment which supports both the architectural configurations mentioned above. <p> can be exploited so that both fault toler-ance and fault detection can be efficiently performed? In a DSN which typically requires multiple levels of information integration, the reliable abstract estimate that is produced by the proposed fault tolerant algorithm could itself be used at the next level for further integration <ref> [7, 6] </ref>. Modeling a sensor as an interval of real numbers which could contain the physical value of interest (this model is presented in [9]), we answer the questions posed above in the context of n continuous valued sensors of which at most f could be faulty. <p> Clearly N 4 This part of the theorem has been proved for the special case of f = 1 in <ref> [6] </ref>. We have intentionally chosen to give the proofs of Theorem 1 and Theorem 2 (given in Section 4) by following the steps of the algorithm. The lengths of these proofs could be reduced by not following this approach. 12 completely overlaps each C j (2 j p 1).
Reference: [7] <author> D. N. Jayasimha, S. S. Iyengar, and R. L. Kashyap. </author> <title> Information integration and synchronization in distributed sensor networks. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 21(5) </volume> <pages> 1032-1043, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: The communication and synchronization issues become important only when the multisensor network is large in size or is spatially distributed over a wide geographical area <ref> [8, 7, 6] </ref>. The focus of this paper is on fault tolerance in the presence of arbitrary failures and, to a lesser extent, on fault detection in an environment which supports both the architectural configurations mentioned above. <p> can be exploited so that both fault toler-ance and fault detection can be efficiently performed? In a DSN which typically requires multiple levels of information integration, the reliable abstract estimate that is produced by the proposed fault tolerant algorithm could itself be used at the next level for further integration <ref> [7, 6] </ref>. Modeling a sensor as an interval of real numbers which could contain the physical value of interest (this model is presented in [9]), we answer the questions posed above in the context of n continuous valued sensors of which at most f could be faulty. <p> This assumption may not hold for spatially distributed sensor networks used for time critical applications. For a solution to the synchronization problem in such networks see <ref> [7] </ref>. 4 fault, it will remain faulty. Notice that we talk about an abstract sensor, rather than a physical sensor, being faulty.
Reference: [8] <author> R. C. Luo and M. G. Kay. </author> <title> Multisensor integration and fusion in intelligent systems. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 19(5) </volume> <pages> 901-927, </pages> <month> Septem-ber </month> <year> 1989. </year>
Reference-contexts: The communication and synchronization issues become important only when the multisensor network is large in size or is spatially distributed over a wide geographical area <ref> [8, 7, 6] </ref>. The focus of this paper is on fault tolerance in the presence of arbitrary failures and, to a lesser extent, on fault detection in an environment which supports both the architectural configurations mentioned above. <p> Let the abstract sensors A and C be incorrect in Figure 3- this implies that the correct value lies in the interval [l E ; u B ], i.e., <ref> [8, 9] </ref>. Also, observe from Figure 3 that R, the reliable abstract estimate, is more accurate than any of the correct sensors. The width of R does not change even if the upper bounds of D and E are made arbitrarily large.
Reference: [9] <author> K. Marzullo. </author> <title> Tolerating failures of continuous-valued sensors. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 8(4) </volume> <pages> 284-304, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: The usual technique to overcome this problem is to replicate sensors. Replication is desirable not only to tolerate sensor failures but also to increase the expected accuracy of an ensemble of replicated sensors beyond that obtainable with a single one <ref> [9] </ref>. Such replication is used in a multisensor system or in a distributed sensor network. A multisensor system consists of a number of sensors which are controlled by one processor (or sometimes by a small number of processors). <p> Modeling a sensor as an interval of real numbers which could contain the physical value of interest (this model is presented in <ref> [9] </ref>), we answer the questions posed above in the context of n continuous valued sensors of which at most f could be faulty. The results we present hold for this model only though it may be applicable to other situations also. <p> Section 4 contains a discussion of the significance of our results and the contributions made. The paper concludes with a brief discussion of some problems that merit further investigation. 2 Background and Problem Statement Following Marzullo <ref> [9] </ref>, we distinguish between a concrete sensor, an abstract sensor, and a reliable abstract sensor. A concrete sensor is a device that samples the physical state variable of interest. <p> The abstract sensor is faulty either if the value produced by the physical sensor is not correct or if the width of the abstract sensor is greater than . We assume that failures are arbitrary with bounded inaccuracy <ref> [9] </ref>, i.e., the width of each abstract sensor is at most . <p> The single correct interval of 1) is referred to as the spanning interval. Definition 7 The width of a reliable abstract sensor is the width of its spanning interval. Our work is heavily influenced by the work of Marzullo <ref> [9] </ref> who provides a fault tolerant sensor averaging algorithm, an algorithm to detect faulty sensors, and bounds on the width of the reliable abstract sensor when f , the number of faulty sensors is bounded. <p> Marzullo's algorithm finds all cliques of size (n f ) in the interval graph. Note that each (n f ) clique represents an (n f )-interval intersection. The cover of all the (n f ) cliques, which includes all cliques of size (n f ) or more <ref> [9] </ref>, 6 then contains the correct value by Observation 1. Note, however, that the 3-cliques ABD and ACD in Figure 3 are recognized even though they yield the same 3-interval- note also that they are subsumed by the 4-clique ABCD. <p> We derive a bound on the number of possibly faulty sensors pointed to by the algorithm using Theorem 1. We also list the improvements made over some of the results presented by Marzullo <ref> [9] </ref>. The fault tolerant algorithm presented not only provides a single interval as Marzullo's algorithm does but all the (n i)-intersecting intervals (0 i f ) without sacrificing efficiency. Both algorithms have a run time complexity of O (n log n) and the run time constants are comparable. <p> Let the abstract sensors A and C be incorrect in Figure 3- this implies that the correct value lies in the interval [l E ; u B ], i.e., <ref> [8, 9] </ref>. Also, observe from Figure 3 that R, the reliable abstract estimate, is more accurate than any of the correct sensors. The width of R does not change even if the upper bounds of D and E are made arbitrarily large.
Reference: [10] <author> F. P. Preparata and M. I. Shamos. </author> <title> Computational Geometry: An Introduction. </title> <publisher> Springer-Verlag, </publisher> <year> 1985. </year> <month> 19 </month>
Reference-contexts: NUMBER- an array whose i th element ((n f ) i n) finally contains the total number of i intersections. Note 1: An algorithm based on a vertical line "sweep" used in computational geometry to find line segment intersections <ref> [10] </ref> can also be used to generate all the (n i) intersections. Our algorithm follows a slightly different and more enhanced approach from which it is easy to derive the main results of the paper- bounds on the number of (n i) intersections and the number of potentially faulty sensors.
References-found: 10

