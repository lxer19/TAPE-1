URL: http://www.eecs.umich.edu/~jlbell/patmos.ps.gz
Refering-URL: http://www.eecs.umich.edu/~jlbell/
Root-URL: http://www.eecs.umich.edu
Title: False Path Analysis in Sequential Circuits  
Abstract: We propose a formulation of the sensitization constraints that must be satisfied by all true paths in a sequential circuit and suggest a number of approximations to these constraints aimed at simplifying their computation while capturing their essential dependencies. Using one of these approximations we show how an existing combinational timing analysis tool, can be easily augmented to identify false paths in sequential circuits. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Ashar, P., Dey, S, and Malik, S., </author> <title> Exploiting Multicycle False Paths in the Performance Optimization of Sequential Circuits, </title> <booktitle> Proc. Int. Conf. Computer-Aided Design, </booktitle> <year> 1992. </year> <pages> pp. 510-517. </pages>
Reference-contexts: Lam [16] also looked at timing across latch and flip-flop boundaries, formulating the problem as a set of nonlinear inequalities. Ashar, delay circuit ( ) D D 3 Dey, and Malik <ref> [1] </ref> looked at paths over adjacent cycles, for what were otherwise combinational false paths. In recent years the formal functional verification community has developed techniques for examining sequential behavior.
Reference: [2] <author> Benkoski, J. et al., </author> <title> Timing Verification Using Statically Sensitizable Paths, </title> <journal> IEEE Trans. on CAD, </journal> <volume> 9:10, </volume> <month> October, </month> <year> 1990, </year> <pages> pp. 1073-1084. </pages>
Reference-contexts: These then reduce until a pattern is found that sensitizes a path of that length. The problem of detecting combinational false paths has been well studied. Ben-koski <ref> [2] </ref> proposed the use of static sensitization to search for false paths, and this work was revised and extended by that of Chen and Du [7], Devadas [12], and others. McGeer [17] looked at how to perform a robust timing verification that exhibits the monotonic speedup property.
Reference: [3] <author> Brand, D. </author> <year> 1993. </year> <title> Verification of Large Synthesized Designs. </title> <booktitle> Proc. of the Int. Conf. on Computer-Aided Design, </booktitle> <year> 1993, </year> <pages> pp. </pages> <month> p534-537. </month>
Reference-contexts: Q0 Original Circuit (a) Construction of a timing miter for a sequential circuit (b) Timing miter for example circuit of Figure 1 7 The basic idea is to use a structure called a reachability timing miter, so named because of its similarity to the verification miters used by Brand in <ref> [3] </ref>. As shown in Figure 2, the reachability timing miter is constructed by augmenting the combinational portion of the sequential circuit with another combinational structure that enforces the reachability constraints.
Reference: [4] <author> Brglez, F, Bryan, D., and Kozminski, K. </author> <title> Combinational Profiles of Sequential Benchmark Circuits, </title> <booktitle> Proc. Int. Symp. on Circuits and Systems. </booktitle> <pages> pp. 1929-1934. </pages>
Reference-contexts: translation that converts the BDD of this function into a circuit whose inputs are the state variables and whose single output represents the reachability of the specified state. 5 Preliminary Results We have applied the above approach to the benchmarks in the ISCAS89 sequential benchmark suite including the 1993 addenda <ref> [4] </ref>. We performed reachability analysis using the VIS system [20], modified to produce the characteristic function of the reachable set, which was translated and appended to the original circuit to produce the timing miter.
Reference: [5] <author> Burch, J. R., Clarke, E.M., McMillan, K.L., and Dill, D. L., </author> <title> Sequential Circuit Verification Using Symbolic Model Checking, </title> <booktitle> Design Automation Conf., </booktitle> <year> 1990, </year> <pages> pp. 46-51 </pages>
Reference-contexts: The reachability circuit is constructed by a twostep process. In the first step, the set of reachable states for the sequential circuit is computed implicitly through the use of BDDs or similar structures <ref> [5] </ref>. The result is a Boolean function mapping the circuits state variables to a TRUE or FALSE value indicating the reachability of the specified state.
Reference: [6] <author> Cabodi, G., P. Camurati, and S. Quer. </author> <year> 1996. </year> <title> Improved Reachability Analysis of Large Finite State Machines. </title> <booktitle> Proc. of the Int. Conf. on Computer-Aided Design, </booktitle> <year> 1996, </year> <pages> pp. 354-359. </pages>
Reference-contexts: An early application of these techniques was developed by [18] for the purpose of symbolic model checking, manipulating sets of states rather than individual states. This work has been extended by Cho [8], and by Cabodi <ref> [6] </ref> to handle larger designs. To date, the work on state reachability has been targeted towards the needs of the formal verification community. <p> As the experimental results clearly show, sequential sensitization is limited by the inability to generate the reachable state set. We would like to alleviate this problem by using other techniques for state reachability such as <ref> [6] </ref>. We would also like to examine approaches that compute approximations to the reachable set [8]. Many of these techniques perform reachability analysis on subsets of the state bits.
Reference: [7] <author> Chen, H.-C., and D. H.-C. Du. </author> <year> 1993. </year> <title> Path Sensitization in Critical Path Problem. </title> <journal> IEEE Trans. Computer Aided Design 12:2:196-207. </journal>
Reference-contexts: The problem of detecting combinational false paths has been well studied. Ben-koski [2] proposed the use of static sensitization to search for false paths, and this work was revised and extended by that of Chen and Du <ref> [7] </ref>, Devadas [12], and others. McGeer [17] looked at how to perform a robust timing verification that exhibits the monotonic speedup property. Yalcin [22] described the relationship between these approaches and added hierarchical abstraction techniques. Yalcin also described how path sensitization questions depend on the choice of waveform model. <p> This sensitization model can be viewed as a single-vector criterion because the restriction on has been removed. This approximation is useful because it is a natural extension of combinational floating mode sensitization <ref> [7] </ref>. In general, this single-vector constraint will produce delays that are more conservative (larger) than the earlier approximation. For our example circuit, however, it yields the same maximum delay along the same path.
Reference: [8] <author> Cho, H., G. D. Hachtel, E. Macii, B. Plessier, and F. Somenzi. </author> <year> 1993. </year> <title> Algorithms for Approximate FSM Traversal. </title> <booktitle> Design Automation Conf, </booktitle> <year> 1993, </year> <pages> pp. 25-30. </pages>
Reference-contexts: This has made it feasible to represent the set of reachable states for many reasonable sized circuits. An early application of these techniques was developed by [18] for the purpose of symbolic model checking, manipulating sets of states rather than individual states. This work has been extended by Cho <ref> [8] </ref>, and by Cabodi [6] to handle larger designs. To date, the work on state reachability has been targeted towards the needs of the formal verification community. <p> We would like to alleviate this problem by using other techniques for state reachability such as [6]. We would also like to examine approaches that compute approximations to the reachable set <ref> [8] </ref>. Many of these techniques perform reachability analysis on subsets of the state bits.
Reference: [9] <author> Coudert, O.,Madre, </author> <title> J.C., Symbolic Computation of the Valid States of a Sequential Machine: Algorithms and Discussion, </title> <booktitle> Proc. of Int. Workshop on Formal Methods in VLSI Design, </booktitle> <address> Miami FL, USA, </address> <month> January </month> <year> 1991. </year>
Reference-contexts: Most formal verification techniques require an examination of the state space of a sequential design, including the determination of the potentially large subset of states which are reachable. An implicit enumeration of the state space, proposed by Coudert <ref> [9] </ref> and extended by Touati [21], makes it possible to represent the set of reachable states in a compact form by building a characteristic function that when given an assignment of state variables, evaluates the membership of that assignment.
Reference: [10] <author> Daga, A. J., and W. P. Birmingham. </author> <year> 1997. </year> <title> Interface Finite State Machines: Definition, Minimization, and Decomposition. </title> <journal> Trans. CAD 16:5:497-505. </journal>
Reference-contexts: The sequential false path problem has received less attention to date. Much of the existing work has been on the subject of multicycle timing, such as Guptas MTV [13] which looked back through state devices to find false paths that span cycles. Daga <ref> [10] </ref> investigated sequential timing constraints on interfaces between portions of a design, looking at methods for merging the analysis of transactions that have equivalent timing. Lam [16] also looked at timing across latch and flip-flop boundaries, formulating the problem as a set of nonlinear inequalities.
Reference: [11] <author> Devadas, S., K. Keutzer, S. Malik, and A. Wang. </author> <year> 1992. </year> <title> Certified Timing Verification and the Transition Delay of a Logic Circuit. </title> <booktitle> DAC, </booktitle> <year> 1992, </year> <pages> pp. 549-555. </pages>
Reference-contexts: This example shows that, fundamentally, sequential sensitization constraints are a consequence of the restrictions on allowable state-vector pairs imposed by the next-state function of the FSM. Intrinsically, therefore, sequential sensitization is a 2-vector criterion <ref> [11] </ref> that imposes a set of constraints on the current and next states and of the machine.
Reference: [12] <author> Devadas, S., et. al, </author> <title> Computation of Floating Mode Delay in Combinational Circuits: Theory and Algorithms. </title> <journal> IEEE Trans. CAD, </journal> <volume> 12:12, </volume> <month> December </month> <year> 1993, </year> <pages> pp. 1913-1923. </pages>
Reference-contexts: The problem of detecting combinational false paths has been well studied. Ben-koski [2] proposed the use of static sensitization to search for false paths, and this work was revised and extended by that of Chen and Du [7], Devadas <ref> [12] </ref>, and others. McGeer [17] looked at how to perform a robust timing verification that exhibits the monotonic speedup property. Yalcin [22] described the relationship between these approaches and added hierarchical abstraction techniques. Yalcin also described how path sensitization questions depend on the choice of waveform model.
Reference: [13] <author> Gupta, A. P., and D. P. Siewiorek. </author> <year> 1994. </year> <title> Automated Multi-Cycle Symbolic Timing Verification on Microprocessor-based Designs. </title> <booktitle> Design Automation Conf., </booktitle> <year> 1994, </year> <pages> pp. 113-119. </pages>
Reference-contexts: Yalcin also described how path sensitization questions depend on the choice of waveform model. The sequential false path problem has received less attention to date. Much of the existing work has been on the subject of multicycle timing, such as Guptas MTV <ref> [13] </ref> which looked back through state devices to find false paths that span cycles. Daga [10] investigated sequential timing constraints on interfaces between portions of a design, looking at methods for merging the analysis of transactions that have equivalent timing.
Reference: [14] <author> Hitchcock, R. B. Sr., et. al., </author> <title> Timing Analysis of Computer Hardware, </title> <institution> IBM J, Res. Develop. 26:1, </institution> <month> Jan. </month> <year> 1982, </year> <month> pp.100-105. </month>
Reference-contexts: Bell Karem A. Sakallah Jesse P. Whittemore -jlbell, karem, jwhitte-@eecs.umich.edu Department of Electrical Engineering and Computer Science The University of Michigan 1301 Beal Ave Ann Arbor, MI, 48109 USA 2 delays of the individual components and look for the longest path through them <ref> [14] </ref>, which assumes that changes in the signal values can propagate along every path. It was first noted by Hrapcenko [15] that some circuits have false paths for which the delay is less than the maximum topological length, due to the interaction of reconverging paths which block signal propagation.
Reference: [15] <author> Hrapcenko, V. H., </author> <title> Depth and Delay in a Network, </title> <journal> Soviet Math. Dokl., </journal> <volume> vol. 19, </volume> <year> 1978, </year> <month> pp.1006-1009. </month>
Reference-contexts: It was first noted by Hrapcenko <ref> [15] </ref> that some circuits have false paths for which the delay is less than the maximum topological length, due to the interaction of reconverging paths which block signal propagation. To determine the true maximum delay, CAD tools must find ways of automatically eliminating these paths from consideration.
Reference: [16] <author> Lam, W. K. C., and R. K. Brayton. </author> <year> 1994. </year> <title> Timed Boolean Functions: A Unified Formalism for Exact Timing Analysis: </title> <publisher> Kluwer. </publisher>
Reference-contexts: Daga [10] investigated sequential timing constraints on interfaces between portions of a design, looking at methods for merging the analysis of transactions that have equivalent timing. Lam <ref> [16] </ref> also looked at timing across latch and flip-flop boundaries, formulating the problem as a set of nonlinear inequalities. Ashar, delay circuit ( ) D D 3 Dey, and Malik [1] looked at paths over adjacent cycles, for what were otherwise combinational false paths.
Reference: [17] <author> McGeer, Patrick C., </author> <title> Integrating functional and temporal domains in logic design: the false path problem and its implications, </title> <address> Boston: </address> <publisher> Kluwer Academic, </publisher> <year> 1991. </year>
Reference-contexts: The problem of detecting combinational false paths has been well studied. Ben-koski [2] proposed the use of static sensitization to search for false paths, and this work was revised and extended by that of Chen and Du [7], Devadas [12], and others. McGeer <ref> [17] </ref> looked at how to perform a robust timing verification that exhibits the monotonic speedup property. Yalcin [22] described the relationship between these approaches and added hierarchical abstraction techniques. Yalcin also described how path sensitization questions depend on the choice of waveform model.
Reference: [18] <author> McMillan, K.L., </author> <title> Symbolic Model Checking, </title> <publisher> Kluwer, </publisher> <year> 1993. </year>
Reference-contexts: This has made it feasible to represent the set of reachable states for many reasonable sized circuits. An early application of these techniques was developed by <ref> [18] </ref> for the purpose of symbolic model checking, manipulating sets of states rather than individual states. This work has been extended by Cho [8], and by Cabodi [6] to handle larger designs. To date, the work on state reachability has been targeted towards the needs of the formal verification community.
Reference: [19] <author> Silva, J.P. M., Sakallah, K. A., </author> <title> Efficient and Robust Test Generation-Based Timing Analysis, </title> <booktitle> Proc. Int. Symp. on Circuits and Systems, </booktitle> <year> 1994, </year> <month> pp.303-306. </month>
Reference-contexts: We performed reachability analysis using the VIS system [20], modified to produce the characteristic function of the reachable set, which was translated and appended to the original circuit to produce the timing miter. This circuit was then passed to the TALEAP floating-mode timing analyzer <ref> [19] </ref> which determined the longest sensitizable path through the miter. The results of this experiment are summarized in Table 2.
Reference: [20] <author> The VIS Group, </author> <title> Vis: A system for Verification and Synthesis, </title> <booktitle> in Proc. Conf. on Computer-Aided Verification, </booktitle> <year> 1996. </year>
Reference-contexts: We performed reachability analysis using the VIS system <ref> [20] </ref>, modified to produce the characteristic function of the reachable set, which was translated and appended to the original circuit to produce the timing miter. This circuit was then passed to the TALEAP floating-mode timing analyzer [19] which determined the longest sensitizable path through the miter.
Reference: [21] <author> Touati, H. J., H. Savoj, and B. Lin. </author> <year> 1990. </year> <title> Implicit State Enumeration of Finite State Machines using BDDs. </title> <booktitle> Int. Conf. Computer Aided Design, </booktitle> <year> 1990, </year> <pages> pp. 130-133. </pages>
Reference-contexts: Most formal verification techniques require an examination of the state space of a sequential design, including the determination of the potentially large subset of states which are reachable. An implicit enumeration of the state space, proposed by Coudert [9] and extended by Touati <ref> [21] </ref>, makes it possible to represent the set of reachable states in a compact form by building a characteristic function that when given an assignment of state variables, evaluates the membership of that assignment.
Reference: [22] <author> Yalcin, H. </author> <year> 1997. </year> <title> Event Propagation Conditions in Circuit Delay Computation. </title> <journal> ACM Transactions on Design Automation of Electronic Systems. </journal> <volume> 2:3, </volume> <pages> pp. 249-280. </pages>
Reference-contexts: Ben-koski [2] proposed the use of static sensitization to search for false paths, and this work was revised and extended by that of Chen and Du [7], Devadas [12], and others. McGeer [17] looked at how to perform a robust timing verification that exhibits the monotonic speedup property. Yalcin <ref> [22] </ref> described the relationship between these approaches and added hierarchical abstraction techniques. Yalcin also described how path sensitization questions depend on the choice of waveform model. The sequential false path problem has received less attention to date.
References-found: 22

