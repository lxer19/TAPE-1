URL: http://www.cs.nyu.edu/phd_students/changm/proposal.ps
Refering-URL: http://www.cs.nyu.edu/phd_students/changm/index.html
Root-URL: http://www.cs.nyu.edu
Title: Toward the Automation of the Card-Playing Component of Bridge  
Author: Ming-Sheng Chang 
Address: New York University  
Affiliation: Department of Computer Science Courant Institute of Mathematical Sciences  
Abstract: In comparision with other games, particularly chess, the research in computer bridge is immature, and the best bridge-playing programs are mediocre. We propose to study the automation of the card-playing segment of bridge (omitting bidding), using a number of different techniques. In this paper we first give an introduction to the state of computer bridge. Next, we propose two possible architectures for solving double-dummy bridge (i.e., a simplified bridge game with perfect information): The first is based on the combination of And-OR search and heuristic evaluation. The second forms a global plan by merging subplans for each individual suit. Next, to deal with uncertain information in real bridge, we present a new mechanism that combines the concepts of both minimax search and possible worlds. Finally we give a brief description of further work toward automating card-playing in real bridge. 
Abstract-found: 1
Intro-found: 1
Reference: [Althofer 88] <author> Althofer, Ingo, </author> <title> Root Evaluation Errors: How They Arise and Propagate , ICCA Journal, </title> <address> Jun./Sep., p 55-63, </address> <year> 1988. </year>
Reference-contexts: For finite game trees with only two node values WIN and LOSS, there have been some results of theoretical analysis (e.g. error propagation from leaf to root node <ref> [Althofer 88] </ref>). These previous results might be adapted and provide us with a theoretical analysis tool for our system. Therefore, our first proposed architecture for double-dummy bridge is basically the combination of an And-Or tree search and a heuristic evaluation function.
Reference: [Bratko 90] <author> Bratko, Ivan, </author> <title> Prolog Programming for Artificial Intelligence Addison Wesley. </title>
Reference-contexts: Message PLAN is of the following form: &lt;LeafGoal, HoldingGoal&gt;. The idea of message PLAN comes from the concepts of Advice Language , which is developed by Bratko <ref> [Bratko 90] </ref>. It is mainly used by coordinator C to ask each analyzer for a line of play (with the property that we will mention later) on its own suit.
Reference: [Eick 93] <author> Eick, C. and Mehta, N. </author> <title> Decision Making Involving Imperfect Knowledge , IEEE Trans. on System, </title> <journal> Man, and Cybernetics, V. </journal> <volume> 23, 3 </volume> <pages> 840-51, </pages> <year> 1993. </year>
Reference-contexts: After all the rules have been processed in this way, the evidence associated with the individual decisions is combined using an interval calculus, and the best decision is then selected <ref> [Eick 93] </ref>. For the card-playing component of computer bridge programs, Ginsberg proposed a mechanism similar to Levys. Suppose we have a fast double-dummy hand analyzer.
Reference: [Frank 91] <author> Frank, Ian Finesse: </author> <title> An Adaptation of Proof-Planning Techniques to Declarer Play in the Game of Bridge, </title> <type> Masters thesis, </type> <institution> Depart. of AI, Edinburgh, </institution> <year> 1991. </year>
Reference-contexts: In the domain of declarer planning for a single suit in no trump contracts, FINESSE can identify the proper lines of play for many example hands found in bridge texts, and support its decisions with probabilistic and qualitative information <ref> [Frank 91, 92] </ref>. The computer bridge presented by Gamback, Rayner and Pell [Gamback 93] addresses both bidding and card-playing.
Reference: [Frank 92] <author> Frank, Ian., Basin, D. and Bundy, A. </author> <title> An Adaptation of Proof-Planning to Declarer Play in bridge, </title> <booktitle> Proc. of the European Conf. on AI, </booktitle> <year> 1992. </year>
Reference-contexts: Although there have been lots of people discussing the reasons why computers cant play decent bridge [rec.games.bridge newsgroup] [Gamback 93] [Ginsberg 95] <ref> [Frank 92] </ref>, no agreement is reached yet. We summarize some of the arguments as follows: 3 Computer bridge has been much less studied than computer chess. Bridge is a game of playing with imperfect information in both bidding and card playing stages. <p> Although there have been two [Gamback 93] <ref> [ Frank 92] </ref> research groups claiming to start writing a bridge card-playing program using this idea, up to now, no results are published yet.
Reference: [Gamback 93] <author> Gamback, B., Rayner, M. & Pell, B. </author> <title> Pragmatic Reasoning in Bridge , Tech. </title> <type> Rep. </type> <institution> No. 299 in Univ. of Cambridge, Comp. Lab., </institution> <month> Apr. </month> <year> 1993. </year>
Reference-contexts: Although there have been lots of people discussing the reasons why computers cant play decent bridge [rec.games.bridge newsgroup] <ref> [Gamback 93] </ref> [Ginsberg 95] [Frank 92], no agreement is reached yet. We summarize some of the arguments as follows: 3 Computer bridge has been much less studied than computer chess. Bridge is a game of playing with imperfect information in both bidding and card playing stages. <p> The computer bridge presented by Gamback, Rayner and Pell <ref> [Gamback 93] </ref> addresses both bidding and card-playing. <p> As declarer, this is why plays based on bluff may be helpful sometimes. For defensive play, it accounts for why two different plays can convey different messages to partner, even though they might be considered as equivalent by double-dummy search <ref> [Gamback 93] </ref>. Double-dummy bridge is not real bridge, and the approach to producing a competent plan by averaging over or selecting from the plans for a certain number of double dummy hands is ambiguous, questionable, or at least not yet justified. <p> proposed architecture for solving double-dummy bridge is based on the idea that experienced human bridge players, in planing their best line of play for the whole hand, often first consider play in each individual suit on its own, and only then proceed to form a plan for the whole hand <ref> [Gamback 93] </ref>. Although there have been two [Gamback 93] [ Frank 92] research groups claiming to start writing a bridge card-playing program using this idea, up to now, no results are published yet. <p> based on the idea that experienced human bridge players, in planing their best line of play for the whole hand, often first consider play in each individual suit on its own, and only then proceed to form a plan for the whole hand <ref> [Gamback 93] </ref>. Although there have been two [Gamback 93] [ Frank 92] research groups claiming to start writing a bridge card-playing program using this idea, up to now, no results are published yet.
Reference: [Ginsberg 95] <author> Ginsberg, Matt. </author> <title> How Computers Will Play Bridge , Feb. 1995. Sent to The bridge World and newsgroup rec.games.bridge for comment by the author. </title>
Reference-contexts: Although there have been lots of people discussing the reasons why computers cant play decent bridge [rec.games.bridge newsgroup] [Gamback 93] <ref> [Ginsberg 95] </ref> [Frank 92], no agreement is reached yet. We summarize some of the arguments as follows: 3 Computer bridge has been much less studied than computer chess. Bridge is a game of playing with imperfect information in both bidding and card playing stages. <p> Suppose we have a fast double-dummy hand analyzer. Given a single-dummy problem, we can construct a reasonable line of play by selecting 5 the plan that works best on average over 100 possible hands that we generate in accordance with the bidding and opening leads <ref> [Ginsberg 95] </ref>. By adapting the techniques of automated mathematical theorem proving to declarative card-playing in bridge, Frank developed a system called FINESSE. In this system the basic elements that make up plans are methods instead of cards. <p> of play that can make the maximal number of tricks for our team under the assumptions of perfect information ( or double-dummy) and optimal play (the declarer and defender play in a minimax way). 7 A simple analysis of doubledummy alphabeta search The arguments from Levy [Levy 89] and Ginsberg <ref> [Ginsberg 95] </ref> suggest that a competent card-playing program can be built up by choosing the best line of play from the results of a set of double-dummy bridge hands.
Reference: [Laskey 89] <author> Laskey, </author> <title> K.B. and Lehner, P.E. Assumption, </title> <journal> Beliefs and Probabilities , Artificial Intelligence, </journal> <volume> 41 </volume> <pages> 65-77, </pages> <year> 1989. </year>
Reference: [Levy 88] <author> Levy, </author> <title> N.L. </title> <editor> (Ed.), </editor> <booktitle> "Computer Games", </booktitle> <volume> Vol. II, </volume> <publisher> Springer Verlag, </publisher> <address> Berlin, </address> <year> 1988. </year> <month> 29 </month>
Reference: [Levy 89] <author> Levy, </author> <title> N.L. </title> <editor> and Beal, D.F. (Eds.), </editor> " <booktitle> Heuristic Programming in Artificial Intelligence-The First Computer Olympiad ", Ellis Horwood Ltd, </booktitle> <address> Chichester, </address> <year> 1989. </year> <note> (Published in the U.S. by Halsted Press/John Wiley.) </note>
Reference-contexts: Their system is impressive because squeezing is an advanced card playing technique for human bridge players [Sterling 90]. Due to these successful results, Levy speculated that an expert-level bridge program can be built by combining a COBRA-like rule-base bidding component and a fast doubledummy hand analyzer <ref> [Levy 89] </ref>. By treating rule-based decision making as a problem of evidence combination, Eick applied his approach to the bidding component of computer bridge. <p> out the best lines of play that can make the maximal number of tricks for our team under the assumptions of perfect information ( or double-dummy) and optimal play (the declarer and defender play in a minimax way). 7 A simple analysis of doubledummy alphabeta search The arguments from Levy <ref> [Levy 89] </ref> and Ginsberg [Ginsberg 95] suggest that a competent card-playing program can be built up by choosing the best line of play from the results of a set of double-dummy bridge hands.
Reference: [Lindelof 83] <author> Lindelof, E.T. " COBRA: </author> <title> The Computer-Designed Bidding System ", London, </title> <address> England: Victor Gollancz., </address> <year> 1983 </year>
Reference-contexts: Lindelofs COBRA system appears to be a world-class bidder when it is allowed to bid in an incompetitive auction, but it did not bid well in a competitive situation. <ref> [Lindelof 83] </ref>. 3. Sterling and Nygates PYTHON system is capable of identifying double dummy squeeze situations with a small number of missing cards. Squeezing is a particular type of card-playing technique to force an opponent to do a unfavorable discard for himself.
Reference: [Quinlan 79] <author> Quinlan, J.R. </author> <title> A Knowledge-based system for locating missing High cards in bridge, </title> <booktitle> the 6th IJCAI, </booktitle> <address> Tokyo, Japan, </address> <year> 1979, </year> <month> p705-7079, </month>
Reference-contexts: Some of the previous important systems for bridge follow: 4 Projects that fall into the category of rule-based systems include - 1. Quinlans system is capable of locating missing high cards based on information gathered from the bidding and the opening leads <ref> [Quinlan 79] </ref>. 2. Lindelofs COBRA system appears to be a world-class bidder when it is allowed to bid in an incompetitive auction, but it did not bid well in a competitive situation. [Lindelof 83]. 3.
Reference: [Roth 92] <author> Roth, D. </author> <title> The Expert Improver, </title> <type> Collins Willow, </type> <year> 1992. </year>
Reference-contexts: To see how this approach might work, let us now look at an illustrative example of a bridge hand. Example 1 . <ref> [Roth 92] </ref> S K 7 D A J 9 7 4 S Q 8 2 S J 10 9 5 D 6 5 3 D K 8 S A 6 4 3 D Q 10 2 (Hand No. 1; contract: 3NT, opening lead: H6) The correct line of play follows.
Reference: [Russel 89] <author> Russel, S. and Wefald, E. </author> <booktitle> Principles of Metareasoning , the 1st Int. Conf. on Principles of K.R. and Reasoning, </booktitle> <year> 1989, </year> <month> p400-411 </month>
Reference: [Sterling 90] <author> Sterling, L. and Nygate, Y., </author> <title> PYTHON: </title> <journal> An expert squeezer , Journal of Logic Programming 8 </journal> <pages> 21-40, </pages> <year> 1990 </year>
Reference-contexts: Squeezing is a particular type of card-playing technique to force an opponent to do a unfavorable discard for himself. Their system is impressive because squeezing is an advanced card playing technique for human bridge players <ref> [Sterling 90] </ref>. Due to these successful results, Levy speculated that an expert-level bridge program can be built by combining a COBRA-like rule-base bidding component and a fast doubledummy hand analyzer [Levy 89].
Reference: [Tzeng 88] <author> Tzeng, C.H. </author> <title> A theory of Heuristic Information in Game-Tree Search . Berlin, </title> <publisher> Germany: Springer-Verlag., </publisher> <year> 1988 </year>
References-found: 16

