URL: http://www.media.mit.edu/~vmb/papers/cheops.ps
Refering-URL: http://www.media.mit.edu/~vmb/
Root-URL: http://www.media.mit.edu
Title: Cheops: A Reconfigurable Data-Flow System for Video Processing  
Author: V. Michael Bove, Jr. and John A. Watlington 
Address: Room E15-322, 20 Ames Street, Cambridge MA 02139 USA  
Affiliation: Media Laboratory, Massachusetts Institute of Technology  
Note: IEEE Transactions on Circuits and Systems for Video Technology,  pp. 140-149.  
Email: fvmb, wadg@media.mit.edu  
Phone: Phone: (617) 253-0334, Fax: (617) 258-6264  
Date: 5, April 1995,  
Abstract: The Cheops Imaging System is a compact, modular platform for acquisition, processing, and display of digital video sequences and model-based representations of moving scenes, and is intended as both a laboratory tool and a prototype architecture for future programmable video decoders. Rather than using a large number of general-purpose processors and dividing up image processing tasks spatially, Cheops abstracts out a set of basic, computationally intensive stream operations that may be performed in parallel and embodies them in specialized hardware. We review the Cheops architecture, describe the software system that has been developed to perform resource management, and present the results of some performance tests. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> V. M. Bove, Jr., </author> <title> "Hardware and Software Implications of Representing Scenes as Data," </title> <booktitle> Proc. ICASSP-93, </booktitle> <pages> pp. </pages> <address> I-121-I-124, </address> <year> 1993. </year>
Reference: [2] <author> Arvind and D. E. Culler, </author> <title> "Managing Resources in a Parallel Machine," </title> <booktitle> in Fifth Generation Computer Architectures, </booktitle> <editor> J. V. Woods, editor, </editor> <publisher> Elsevier Science Publishers, </publisher> <address> New York, </address> <year> 1986, </year> <pages> pp. 103-121. </pages>
Reference: [3] <author> J. B. Dennis, </author> <title> "Dataflow Supercomputers," </title> <journal> Computer, </journal> <volume> 13, no. 11, </volume> <pages> pp. 48-56, </pages> <month> November </month> <year> 1980. </year>
Reference: [4] <author> E. A. Lee, </author> <title> "Static Scheduling of Data-flow Programs for DSP," </title> <booktitle> in Advanced Topics in Data-Flow Computing, </booktitle> <editor> J.-L. Gaudiot and L. Bic, editors, </editor> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs NJ, </address> <year> 1991, </year> <pages> pp. 501-526. </pages>
Reference: [5] <author> E. Hogenauer, et al., </author> <title> "DDSP A Data Flow Computer for Signal Processing," </title> <booktitle> Proc. 1982 Intl. Conf. on Parallel Processing, </booktitle> <pages> pp. 126-133, </pages> <year> 1982. </year>
Reference: [6] <author> R. M. Lougheed and D. L. McCubbrey, </author> <title> "The Cytocomputer: A Practical Pipelined Image Processor," </title> <booktitle> Proc. 7th Ann. Symp. on Computer Arch., </booktitle> <pages> pp. 271-277, </pages> <year> 1980. </year>
Reference: [7] <author> T. Temma, et al., </author> <title> "Dataflow Procesor for Image Processing," </title> <booktitle> Proc. Intl. Symp. on Mini and Microcomputers, </booktitle> <volume> 5, no. 3, </volume> <pages> pp. 52-56, </pages> <year> 1980. </year>
Reference-contexts: The more flexible TIP <ref> [7] </ref> was based on differing sorts of processors connected around a ring bus; here the performance-limiting factor may be the bus bandwidth rather than the processors themselves.
Reference: [8] <author> P. Gemmar, et al., </author> <title> "FLIP: A Multiprocessor System for Image Processing," in Languages and Architectures for Image Processing, </title> <editor> M. J. B. Duff and S. Levaldi, editors, </editor> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1981, </year> <pages> pp. 245-256. </pages>
Reference-contexts: The more flexible TIP [7] was based on differing sorts of processors connected around a ring bus; here the performance-limiting factor may be the bus bandwidth rather than the processors themselves. FLIP <ref> [8] </ref> instead used identical processors which could be microcode-configured into specific functionalities and connected together in a variety of ways through sixteen selectable buses. The Princeton Engine [9] is a large linear array of identical processors tightly coupled to a communication network as well as to analog-to-digital and digital-to-analog converters.
Reference: [9] <author> D. Chin, et al., </author> <title> "The Princeton Engine: A Real-Time Video System Simulator," </title> <journal> IEEE Trans. Consumer Electronics, </journal> <volume> 34, no. 2, </volume> <pages> pp. 285-297, </pages> <year> 1988. </year>
Reference-contexts: FLIP [8] instead used identical processors which could be microcode-configured into specific functionalities and connected together in a variety of ways through sixteen selectable buses. The Princeton Engine <ref> [9] </ref> is a large linear array of identical processors tightly coupled to a communication network as well as to analog-to-digital and digital-to-analog converters. The Datacube MaxVideo 20 and 200 [10][11] use a full crosspoint switch to connect an ALU, a convolution and statistics processor, memory, and analog-to-digital and digital-to-analog converters.
Reference: [10] <author> Datacube, Inc., </author> <title> "Max Video 20," document DS599-1.0, </title> <address> Danvers MA, </address> <year> 1991. </year>
Reference: [11] <author> Datacube, Inc., </author> <title> "Max Video 200 Technical Specification," document DS600-1.0, </title> <address> Danvers MA, </address> <year> 1992. </year>
Reference: [12] <author> A. M. Aull, et al., </author> <title> "Real-Time Radar Image Understanding: A Machine-Intelligence Approach," Lincoln Lab. </title> <journal> J., </journal> <volume> 5, no. 2, </volume> <pages> pp. 195-222, </pages> <year> 1992. </year>
Reference-contexts: The latter five systems are notable for the designers' explicit use of the data-flow model for programming. MX-1, a parallel image and signal processing system using identical processors communicating through a crosspoint, is described in <ref> [12] </ref>; here a combination of parallel LISP and C was used for programming, with no apparent application of data-flow techniques. In recent years a number of single-chip video processors have emerged.
Reference: [13] <author> M. Maruyama, et al., </author> <title> "A 200 MIPS Image Signal Multiprocessor on a Single Chip," </title> <booktitle> 1990 Digest of Technical Papers of the International Solid State Circuits Conference, </booktitle> <pages> pp. 122-123, </pages> <year> 1990. </year>
Reference-contexts: In recent years a number of single-chip video processors have emerged. While software tools may enable programmers to use a data-flow abstraction, at the hardware level many of these chips like Matsushita's ISMP <ref> [13] </ref> and Texas Instruments' MVP [14] are based on a standard multiple-instruction multiple-data (MIMD) parallel architecture. PADDI [15] and Philips' VSP [16] enable the construction of various synchronous processing pipelines by connecting their sets of arithmetic logic units through reconfigurable communication networks.
Reference: [14] <institution> Texas Instruments, Inc., "TMS320C80 Technical Brief: Multimedia Video Processor (MVP)," Houston TX, </institution> <year> 1994. </year>
Reference-contexts: In recent years a number of single-chip video processors have emerged. While software tools may enable programmers to use a data-flow abstraction, at the hardware level many of these chips like Matsushita's ISMP [13] and Texas Instruments' MVP <ref> [14] </ref> are based on a standard multiple-instruction multiple-data (MIMD) parallel architecture. PADDI [15] and Philips' VSP [16] enable the construction of various synchronous processing pipelines by connecting their sets of arithmetic logic units through reconfigurable communication networks.
Reference: [15] <author> D. C. Chen and J. M. Rabaey, </author> <title> "A Reconfigurable Multiprocessor IC for Rapid Pro-totyping of Algorithmic-Specific High-Speed DSP Data Paths," </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> 27, no. 12, </volume> <pages> pp. 1895-1904, </pages> <month> December </month> <year> 1992. </year>
Reference-contexts: While software tools may enable programmers to use a data-flow abstraction, at the hardware level many of these chips like Matsushita's ISMP [13] and Texas Instruments' MVP [14] are based on a standard multiple-instruction multiple-data (MIMD) parallel architecture. PADDI <ref> [15] </ref> and Philips' VSP [16] enable the construction of various synchronous processing pipelines by connecting their sets of arithmetic logic units through reconfigurable communication networks.
Reference: [16] <author> A. H. M. van Roermund, et al., </author> <title> "A General-Purpose Programmable Video Signal Processor," </title> <journal> IEEE Trans. Consumer Electronics, </journal> <volume> 35, no. 3, </volume> <pages> pp. 249-258, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: While software tools may enable programmers to use a data-flow abstraction, at the hardware level many of these chips like Matsushita's ISMP [13] and Texas Instruments' MVP [14] are based on a standard multiple-instruction multiple-data (MIMD) parallel architecture. PADDI [15] and Philips' VSP <ref> [16] </ref> enable the construction of various synchronous processing pipelines by connecting their sets of arithmetic logic units through reconfigurable communication networks.
Reference: [17] <author> S. Sasaki, et al., "IDATEN: </author> <title> Reconfigurable Video-Rate Image Processing System," </title> <journal> Fujitsu Sci. Tech. J., </journal> <volume> 23, no. 4, </volume> <pages> pp. 391-400, </pages> <month> December </month> <year> 1987. </year>
Reference: [18] <author> D. Skillicorn, </author> <title> "Stream Languages and Data-Flow," </title> <booktitle> in Advanced Topics in Data-Flow Computing, </booktitle> <editor> J.-L. Gaudiot and L. Bic, editors, </editor> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs NJ, </address> <year> 1991, </year> <pages> pp. 439-454. </pages>
Reference-contexts: Some authors make a distinction between such a stream-oriented data-flow model and one in which an individual datum is considered elemental. See for instance <ref> [18] </ref>. 2 A corollary property is the ability to perform portions of an algorithm at faster-than-real-time rates within the limits improsed by the buffer space available. 3 allow the general-purpose controlling CPU to gain access to intermediate results in the data--flow graph, enabling conditional data redirection or performance of portions of
Reference: [19] <author> W. F. Schreiber et al., </author> <title> "Channel-Compatible 6-MHz HDTV Distribution Systems," </title> <journal> SMPTE J., </journal> <volume> 98, no. 1, </volume> <pages> pp. 5-13, </pages> <month> January </month> <year> 1989. </year> <month> 14 </month>
Reference: [20] <author> E. A. Ashcroft, </author> <title> "Proving Assertions about Parallel Programs," </title> <journal> Journal of Computer and Systems Science, </journal> <volume> 10, no. 1, </volume> <pages> pp. 110-135, </pages> <month> January </month> <year> 1975. </year>
Reference: [21] <author> E. A. Lee, </author> <title> "Representing and Exploiting Data Parallelism using Multidimensional Dataflow Diagrams," </title> <booktitle> Proc. ICASSP-93, </booktitle> <pages> pp. </pages> <address> I-453-I-456, </address> <year> 1993. </year>
Reference-contexts: Hence fractional sampling-rate conversion can be performed in a single transfer through a filter stream processor. The functionality of a flood controller, especially in conjunction with the transpose stream processors discussed below, is thus similar to the multidimensional stream functions of the data-flow language Lucid;[20] see also <ref> [21] </ref>. The Nile Bus interface on non-processor modules is effectively a flood controller also, and Nile transfers are handled in a similar fashion to transfers within a processor module. The processor module interfaces to the Nile Buses via the crosspoint switch.
Reference: [22] <author> I. J. Shen, </author> <title> "Resource Manager for a Video Processing System," </title> <type> SM thesis, </type> <institution> MIT, </institution> <year> 1992. </year>
Reference: [23] <author> K. L. Evanco, </author> <title> "A Compiler for an Object Oriented Parallel Stream Processing Language," </title> <type> SB thesis, </type> <institution> MIT, </institution> <year> 1993. </year>
Reference: [24] <author> V. M. Bove, Jr., et al., </author> <title> "Real-Time Decoding and Display of Structured Video," </title> <booktitle> Proc. IEEE ICMCS '94, </booktitle> <pages> pp. 456-462, </pages> <year> 1994. </year>
Reference-contexts: APPLICATIONS AND PERFORMANCE EVALUATION We have written a number of user applications for Cheops, including real-time interactive signal processing utilities for image sequences, image compression and decompression utilities, and renderers for moving computer-graphics particle databases. Reference <ref> [24] </ref> describes a script-driven, flexible decoding pipeline for producing images from 2-D and 3-D model-based coders, while [25] discusses the use of the superposition processor in computation of holograms. 11 We have measured the system's performance on a variety of simple tasks. 6 In order to evaluate the performance of NORMAN,

References-found: 24

