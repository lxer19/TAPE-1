URL: http://www.gewis.win.tue.nl/gewis/commissies/ausco/formeel.ps.gz
Refering-URL: http://www.gewis.win.tue.nl/gewis/commissies/ausco/
Root-URL: http://www.win.tue.nl
Email: E-Mail: gewis@win.tue.nl  
Phone: Telephone: +31-40-2472815  
Title: Organizing Committee  
Author: Marcel van Kervinck Jeremy Visschers Jeroen Buskens Heike Gramberg Marco van Oosterhout Sandra Smolders Rob Receveur 
Address: P.O. Box 513 5600 MB Eindhoven The Netherlands  
Affiliation: Eindhoven University of Technology Department of Mathematics and Computing Science Study Society GEWIS  
Note: Copyright 1996 by Study Society GEWIS  Published by  
Abstract: Individual readers of this report and non-profit libraries acting for them are permitted to make fair use of the material inside this Final Report only when mentioning the source. Reproduction beyond these guidelines without permission of the study society GEWIS is prohibited. 
Abstract-found: 1
Intro-found: 1
Reference: [Baeten et.al. 95b] <author> J.C.M. Baeten and J.A. </author> <title> Bergstra Discrete Time Process Algebra Computing Science Reports 95-09, </title> <institution> Dep. of Computing Science, </institution> <month> EUT April </month> <year> 1995. </year>
Reference-contexts: The idea for the topic of this case study came from Prof. J. Baeten who works at the section of Formal Methods of the department of Mathematics and Computing Science at Eindhoven University of Technology. After a publication of Process Algebra (ACP) with discrete timing <ref> [Baeten et.al. 95b] </ref>, he received a letter from Prof. G. Milne in which the latter stated that the process algebra Circal [Milne 83] had the same functionality related to discrete timing.
Reference: [Milne 83] <author> G.J. Milne CIRCAL: </author> <title> a Calculus for Circuit Description Integration The VLSI Journal, </title> <note> Vol 1 1983. </note>
Reference-contexts: After a publication of Process Algebra (ACP) with discrete timing [Baeten et.al. 95b], he received a letter from Prof. G. Milne in which the latter stated that the process algebra Circal <ref> [Milne 83] </ref> had the same functionality related to discrete timing. Formal Methods being one of the subjects of the study tour was the perfect opportunity to compare both process algebras. The goal of the study is stated as: 19.6. CIRCAL VS. ACP DRT 177 178 CHAPTER 19.
Reference: [Baeten 86] <author> J.C.M. </author> <title> Baeten Process Algebra Kluwer Programmatuurkunde, </title> <booktitle> 1986 (2nd printing 1988). </booktitle>
Reference-contexts: The inclusion of discrete timing in BPA is too complex for this lecture and the necessary parts are explained in the examples. More about BPA can be found in <ref> [Baeten 86] </ref>. 19.6.3.1 Example 1 Synchronization Circal has one high level rule for synchronization ACP has a set of low level rules: Parallelism through left merge and communication merge Synchronization through communication function fl Selection through encapsulation operation @ H () Unwanted paths removed through ffi + x = x The

References-found: 3

