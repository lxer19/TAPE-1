URL: http://www.cs.utexas.edu/users/plaxton/ps/1995/stoc_sort.ps
Refering-URL: http://www.cs.utexas.edu/users/plaxton/html/abc.html
Root-URL: 
Title: Lower Bounds for Sorting Networks  
Author: Nabil Kahale ; Tom Leighton Yuan Ma ; C. Greg Plaxton ; Torsten Suel ; Endre Szemeredi 
Abstract: We establish a lower bound of (1:12 o(1)) n log n on the size of any n-input sorting network; this is the first lower bound that improves upon the trivial information-theoretic bound by more than a lower order term. We then extend the lower bound to comparator networks that approximately sort a certain fraction of all input permutations. We also prove a lower bound of (c o(1)) log n, where c 3:27, on the depth of any sorting network; the best previous result of approximately (2:41 o(1)) log n was established by Yao in 1980. Our result for size is based on a new technique that lower bounds the number of "0-1 collisions" in the network; we provide strong evidence that the technique will lead to even better lower bounds. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Ajtai, J. Komlos, and E. Szemeredi. </author> <title> Sorting in c log n parallel steps. </title> <journal> Combinatorica, </journal> <volume> 3 </volume> <pages> 1-19, </pages> <year> 1983. </year>
Reference-contexts: In fact, Knuth conjectured that sorting networks of size O (n log n) do not exist (see Exercise 51 on page 243 of [10]). This conjecture was finally disproved in 1983 by Aj-tai, Komlos, and Szemeredi <ref> [1] </ref>, who described a sorting network with size O (n log n) and depth O (log n), commonly referred to as the "AKS network". However, even after several improvements in the construction of the network [2, 18], the constants hidden by the big-Oh notation remain impractically large. <p> Our lower bound argument requires that the potential function be "good", as defined below: Definition 3.1 Let (p) be a continuous real-valued function defined over the interval <ref> [0; 1] </ref>. <p> Then, we prove that g 2 is a good potential function. Finally, we use g 2 to prove the correctness of Theorem 1. We first inductively define an infinite sequence of real functions f d (d 1) over the interval <ref> [0; 1] </ref>: f d (p) = p p 2 if d = 1 2 + p p 2 if d &gt; 1. <p> Thus, the expected number of collisions per input in the entire butterfly is p p 2 + 2 The proof of Theorem 3, together with the above interpretation of f d (p), shows that f d (p) is uniformly bounded in d for all p 2 <ref> [0; 1] </ref>. For fixed p 2 [0; 1], the sequence f d (p) is increasing and bounded, and so it converges to a real number f (p). (It is possible to define the function g in a similar fashion, but it turns out that g (p) = f (p) for all <p> expected number of collisions per input in the entire butterfly is p p 2 + 2 The proof of Theorem 3, together with the above interpretation of f d (p), shows that f d (p) is uniformly bounded in d for all p 2 <ref> [0; 1] </ref>. For fixed p 2 [0; 1], the sequence f d (p) is increasing and bounded, and so it converges to a real number f (p). (It is possible to define the function g in a similar fashion, but it turns out that g (p) = f (p) for all p 2 [0; 1].) It can <p> fixed p 2 <ref> [0; 1] </ref>, the sequence f d (p) is increasing and bounded, and so it converges to a real number f (p). (It is possible to define the function g in a similar fashion, but it turns out that g (p) = f (p) for all p 2 [0; 1].) It can be shown that f is a continuous function of p. Note that f is the limit, as n goes to infinity, of the expected number of collisions per input in an n-input butterfly. <p> recursive definition of f d that f satisfies the functional equation f (p) = p p 2 + 2 We have written a computer program based on this functional equation that evaluates f (p) to a high degree of precision for a large number of evenly-spaced values of p in <ref> [0; 1] </ref>. We have also written a program to evaluate f d for any given d. The function values generated by our programs lead us to the following conjecture. Conjecture 1 The functions g d , for d &gt; 2, and f are good potential functions.
Reference: [2] <author> M. Ajtai, J. Komlos, and E. Szemeredi. Halvers and expanders. </author> <booktitle> In Proceedings of the 33rd Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 686-689, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: This conjecture was finally disproved in 1983 by Aj-tai, Komlos, and Szemeredi [1], who described a sorting network with size O (n log n) and depth O (log n), commonly referred to as the "AKS network". However, even after several improvements in the construction of the network <ref> [2, 18] </ref>, the constants hidden by the big-Oh notation remain impractically large. Overall, the construction of sorting networks with small size and/or depth seems to be fundamentally more difficult than the design of fast non-oblivious sorting algorithms.
Reference: [3] <author> V. E. Alekseyev. </author> <title> Sorting algorithms with minimum memory. </title> <journal> Kibernetika, </journal> <volume> 5 </volume> <pages> 99-103, </pages> <year> 1969. </year>
Reference-contexts: While this is the best result known so far, it gives only a lower order improvement over the trivial information-theoretic bound of n log n n log e. In related work, a number of bounds have been established for the size of comparator networks for merging and selection (see <ref> [3, 8, 9, 11, 16, 20, 21, 24, 25] </ref>, and see Theorem F on page 230 of [10] for a result due to Floyd). For the depth of sorting networks, Yao [24] has shown a lower bound of approximately (2:41 o (1)) log n.
Reference: [4] <author> N. Alon and J. H. Spencer. </author> <title> The Probabilistic Method. </title> <publisher> Wiley-Interscience, </publisher> <address> New York, NY, </address> <year> 1991. </year>
Reference-contexts: The definition of a decreasing function from f0; 1g n to f0; 1g is analogous. We state without proof the following classical result (see, e.g., <ref> [4, Chapter 6] </ref> for a proof). Lemma 3.2 (The FKG inequality) Let X 0 ; : : : ; X n1 be i.i.d. unbiased 0-1 random variables. <p> We now bound the contribution of each group of outputs to the sum defining out (N ). By a standard Chernoff bound argument <ref> [4, Theorem A.1 on page 233] </ref>, each of the outputs in group (i) has an associated probability of receiving a 0 that is greater than or equal to 1exp (2 ln n) = 11=n 2 = 1o (1). (An output in group (i) can receive a 1 only if the total
Reference: [5] <author> K. E. Batcher. </author> <title> Sorting networks and their applica tions. </title> <booktitle> In Proceedings of the AFIPS Spring Joint Computer Conference, </booktitle> <volume> volume 32, </volume> <pages> pages 307-314, </pages> <year> 1968. </year>
Reference-contexts: However, the situation is quite different in the case of sorting networks. Two elegant sorting networks of size O (n log 2 n) and depth O (log 2 n) were described by Batcher <ref> [5] </ref> in 1968. Following the work of Batcher, no improvements in the upper bounds were obtained for a number of years, and it remained uncertain whether a size of O (n log n) or a depth of O (log n) could be achieved by any sorting network. <p> Moreover, the triviality of such a lower bound is not due to any underestimate of the number of such comparators, since there do exist sorting networks (e.g., Batcher's bitonic sorting network <ref> [5] </ref>) that have exactly n=2 comparators connecting the upper and lower halves. Hence, Floyd's type of argument may not seem helpful at all in the context of proving nontrivial lower bounds for sorting networks.
Reference: [6] <author> W. D. Hillis. </author> <title> Co-evolving parasites improve simulated evolution as an optimization procedure. </title> <journal> Physica D, </journal> <volume> 42 </volume> <pages> 228-234, </pages> <year> 1990. </year>
Reference-contexts: For small values of n, some computer-aided approaches for finding upper and lower bounds have been developed <ref> [6, 17] </ref>. Finally, significantly better upper bounds are known for comparator networks that sort all but a small fraction of the n! input permutations.
Reference: [7] <author> T. Ikeda. </author> <title> A probabilistic selection network with but terfly networks. </title> <booktitle> In ISAAC '93, Lecture Notes in Computer Science, </booktitle> <volume> volume 762, </volume> <pages> pages 267-276, </pages> <year> 1993. </year>
Reference-contexts: Selection and merging networks that work for most input permutations have been studied in <ref> [7, 14] </ref>. 1.2 Contributions of this paper The main contributions of this paper are as follows: 1. We prove a lower bound of (1:12o (1)) n log n for the size of any n-input sorting network.
Reference: [8] <author> M. Jimbo and A. Maruoka. </author> <title> Selection networks with 8n log n size and O(log n) depth. </title> <booktitle> In ISAAC '92, Lecture Notes in Computer Science, </booktitle> <volume> volume 650, </volume> <pages> pages 165-174, </pages> <year> 1992. </year>
Reference-contexts: While this is the best result known so far, it gives only a lower order improvement over the trivial information-theoretic bound of n log n n log e. In related work, a number of bounds have been established for the size of comparator networks for merging and selection (see <ref> [3, 8, 9, 11, 16, 20, 21, 24, 25] </ref>, and see Theorem F on page 230 of [10] for a result due to Floyd). For the depth of sorting networks, Yao [24] has shown a lower bound of approximately (2:41 o (1)) log n.
Reference: [9] <author> N. Kahale. </author> <title> Eigenvalues and expansion of regular graphs. </title> <type> Technical Report 93-70R, </type> <institution> DIMACS, Rutgers University, </institution> <year> 1993. </year>
Reference-contexts: While this is the best result known so far, it gives only a lower order improvement over the trivial information-theoretic bound of n log n n log e. In related work, a number of bounds have been established for the size of comparator networks for merging and selection (see <ref> [3, 8, 9, 11, 16, 20, 21, 24, 25] </ref>, and see Theorem F on page 230 of [10] for a result due to Floyd). For the depth of sorting networks, Yao [24] has shown a lower bound of approximately (2:41 o (1)) log n.
Reference: [10] <author> D. E. Knuth. </author> <title> The Art of Computer Programming, Volume 3: Sorting and Searching. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1973. </year>
Reference-contexts: In addition to providing a simple and elegant framework for many parallel and sequential sorting algorithms, sorting networks have also proved to be useful in several other applications, such as circuit switching and packet routing <ref> [10, 12, 19] </ref>. A comparator network is commonly defined as a leveled acyclic circuit of comparators, each having two input wires and two output wires. <p> A fundamental problem in the study of sorting networks is the construction of networks that achieve a small size and/or depth. We refer the readers to <ref> [10, 19] </ref> for excellent surveys of the history of this problem. 1.1 Previous results There is a trivial information-theoretic lower bound of log (n!) n log n n log e on the number of comparisons required by any comparison-based sorting algorithm. (We use "log" for the base 2 logarithm, and "ln" <p> In fact, Knuth conjectured that sorting networks of size O (n log n) do not exist (see Exercise 51 on page 243 of <ref> [10] </ref>). This conjecture was finally disproved in 1983 by Aj-tai, Komlos, and Szemeredi [1], who described a sorting network with size O (n log n) and depth O (log n), commonly referred to as the "AKS network". <p> In related work, a number of bounds have been established for the size of comparator networks for merging and selection (see [3, 8, 9, 11, 16, 20, 21, 24, 25], and see Theorem F on page 230 of <ref> [10] </ref> for a result due to Floyd). For the depth of sorting networks, Yao [24] has shown a lower bound of approximately (2:41 o (1)) log n. <p> The main result of this section is Corollary 2.1, which will be used in the next section to establish a lower bound on S (n). In a certain sense, the technique in this section can be viewed as a highly nontrivial variant of an old technique introduced by Floyd <ref> [10, Theorem F on page 230] </ref> to lower bound the size of merging networks. (See [13] for another more sophisticated application of this technique.) Floyd's technique roughly proceeds as follows. Let M (n) denote the minimum size of any n-input comparator network for merging two sorted lists of length n=2. <p> Let M (n) denote the minimum size of any n-input comparator network for merging two sorted lists of length n=2. Consider an arbitrary n-input merging network M of size M (n). As argued in <ref> [10, Theorem F on page 230] </ref>, we may assume without loss of generality that M is given in such a form that an input sequence to M may have up to n=4 items to be moved from M 0 (the upper half of M) to M 1 (the lower half of <p> We are not aware of any previous results for this case. Throughout this section, we assume that all comparator networks are given in Knuth's standard form <ref> [10] </ref>, where the network consists of n horizontal lines numbered from 0 to n 1, and a set of comparators, such that every comparator outputs the larger of its two input values to the higher-numbered line. <p> This is also why we have an extra factor of 2 on the left-hand side of Equation (9), compared with Equation (16) of [24]. The next lemma is given as Exercise 25 on page 239 of Knuth's book <ref> [10] </ref> (see page 639 for a solution). Lemma 5.2 Let w be any wire of a comparator network.
Reference: [11] <author> E. A. Lamagna. </author> <title> The complexity of monotone net works for certain bilinear forms, routing problems, sorting, and merging. </title> <journal> IEEE Trans. Comput., </journal> <volume> 28 </volume> <pages> 773-782, </pages> <year> 1979. </year>
Reference-contexts: While this is the best result known so far, it gives only a lower order improvement over the trivial information-theoretic bound of n log n n log e. In related work, a number of bounds have been established for the size of comparator networks for merging and selection (see <ref> [3, 8, 9, 11, 16, 20, 21, 24, 25] </ref>, and see Theorem F on page 230 of [10] for a result due to Floyd). For the depth of sorting networks, Yao [24] has shown a lower bound of approximately (2:41 o (1)) log n.
Reference: [12] <author> T. Leighton. </author> <title> Introduction to Parallel Algorithms and Architectures: Arrays, Trees, and Hypercubes. </title> <publisher> Morgan-Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1992. </year>
Reference-contexts: In addition to providing a simple and elegant framework for many parallel and sequential sorting algorithms, sorting networks have also proved to be useful in several other applications, such as circuit switching and packet routing <ref> [10, 12, 19] </ref>. A comparator network is commonly defined as a leveled acyclic circuit of comparators, each having two input wires and two output wires.
Reference: [13] <author> T. Leighton and Y. Ma. </author> <title> Tight bounds on the size of fault-tolerant merging and sorting networks with destructive faults. </title> <booktitle> In Proceedings of the 5th Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 30-41, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: In a certain sense, the technique in this section can be viewed as a highly nontrivial variant of an old technique introduced by Floyd [10, Theorem F on page 230] to lower bound the size of merging networks. (See <ref> [13] </ref> for another more sophisticated application of this technique.) Floyd's technique roughly proceeds as follows. Let M (n) denote the minimum size of any n-input comparator network for merging two sorted lists of length n=2. Consider an arbitrary n-input merging network M of size M (n).
Reference: [14] <author> T. Leighton, Y. Ma, and T. Suel. </author> <title> On probabilistic net works for selection, merging, and sorting. </title> <type> Manuscript, </type> <year> 1994. </year>
Reference-contexts: Selection and merging networks that work for most input permutations have been studied in <ref> [7, 14] </ref>. 1.2 Contributions of this paper The main contributions of this paper are as follows: 1. We prove a lower bound of (1:12o (1)) n log n for the size of any n-input sorting network.
Reference: [15] <author> T. Leighton and C. G. Plaxton. </author> <title> A (fairly) simple cir cuit that (usually) sorts. </title> <booktitle> In Proceedings of the 31st Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 458-469, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: For small values of n, some computer-aided approaches for finding upper and lower bounds have been developed [6, 17]. Finally, significantly better upper bounds are known for comparator networks that sort all but a small fraction of the n! input permutations. In particular, Leighton and Plaxton <ref> [15] </ref> have described a comparator network of size c 1 n lg n and depth c 2 log n that sort all but a superpolynomially small fraction of the n! input permutations, where c 1 3:22 and c 2 7:44. <p> Lemma 3.6 The expected number of collisions in an n-input comparator network that n ffi -approximately sorts all but a polynomially small fraction of the n! input permutations (where ffi is a constant less than 1) is at least (1:12 o (1))n. The following result is proved in <ref> [15] </ref>.
Reference: [16] <author> P. B. Miltersen, M. S. Paterson, and J. Tarui. </author> <title> The asymptotic complexity of merging networks. </title> <booktitle> In Proceedings of the 33rd Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 236-246, </pages> <month> Oc-tober </month> <year> 1992. </year>
Reference-contexts: While this is the best result known so far, it gives only a lower order improvement over the trivial information-theoretic bound of n log n n log e. In related work, a number of bounds have been established for the size of comparator networks for merging and selection (see <ref> [3, 8, 9, 11, 16, 20, 21, 24, 25] </ref>, and see Theorem F on page 230 of [10] for a result due to Floyd). For the depth of sorting networks, Yao [24] has shown a lower bound of approximately (2:41 o (1)) log n.
Reference: [17] <author> I. Parberry. </author> <title> A computer-assisted optimal depth lower bound for nine-input sorting networks. </title> <journal> Mathematical Systems Theory, </journal> <volume> 24 </volume> <pages> 101-116, </pages> <year> 1991. </year>
Reference-contexts: For small values of n, some computer-aided approaches for finding upper and lower bounds have been developed <ref> [6, 17] </ref>. Finally, significantly better upper bounds are known for comparator networks that sort all but a small fraction of the n! input permutations.
Reference: [18] <author> M. S. Paterson. </author> <title> Improved sorting networks with O(log N ) depth. </title> <journal> Algorithmica, </journal> <volume> 5 </volume> <pages> 75-92, </pages> <year> 1990. </year>
Reference-contexts: This conjecture was finally disproved in 1983 by Aj-tai, Komlos, and Szemeredi [1], who described a sorting network with size O (n log n) and depth O (log n), commonly referred to as the "AKS network". However, even after several improvements in the construction of the network <ref> [2, 18] </ref>, the constants hidden by the big-Oh notation remain impractically large. Overall, the construction of sorting networks with small size and/or depth seems to be fundamentally more difficult than the design of fast non-oblivious sorting algorithms.
Reference: [19] <author> N. Pippenger. </author> <title> Communication networks. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, Volume A: Algorithms and Complexity, </booktitle> <pages> pages 805-833. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: In addition to providing a simple and elegant framework for many parallel and sequential sorting algorithms, sorting networks have also proved to be useful in several other applications, such as circuit switching and packet routing <ref> [10, 12, 19] </ref>. A comparator network is commonly defined as a leveled acyclic circuit of comparators, each having two input wires and two output wires. <p> A fundamental problem in the study of sorting networks is the construction of networks that achieve a small size and/or depth. We refer the readers to <ref> [10, 19] </ref> for excellent surveys of the history of this problem. 1.1 Previous results There is a trivial information-theoretic lower bound of log (n!) n log n n log e on the number of comparisons required by any comparison-based sorting algorithm. (We use "log" for the base 2 logarithm, and "ln"
Reference: [20] <author> N. Pippenger. </author> <title> Selection networks. </title> <journal> SIAM J. Comput., </journal> <volume> 20 </volume> <pages> 878-887, </pages> <year> 1991. </year>
Reference-contexts: While this is the best result known so far, it gives only a lower order improvement over the trivial information-theoretic bound of n log n n log e. In related work, a number of bounds have been established for the size of comparator networks for merging and selection (see <ref> [3, 8, 9, 11, 16, 20, 21, 24, 25] </ref>, and see Theorem F on page 230 of [10] for a result due to Floyd). For the depth of sorting networks, Yao [24] has shown a lower bound of approximately (2:41 o (1)) log n.
Reference: [21] <author> N. Pippenger and L. G. Valiant. </author> <title> Shifting graphs and their applications. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 23 </volume> <pages> 423-432, </pages> <year> 1976. </year>
Reference-contexts: While this is the best result known so far, it gives only a lower order improvement over the trivial information-theoretic bound of n log n n log e. In related work, a number of bounds have been established for the size of comparator networks for merging and selection (see <ref> [3, 8, 9, 11, 16, 20, 21, 24, 25] </ref>, and see Theorem F on page 230 of [10] for a result due to Floyd). For the depth of sorting networks, Yao [24] has shown a lower bound of approximately (2:41 o (1)) log n.
Reference: [22] <author> D. C. Van Voorhis. </author> <title> An improved lower bound for sorting networks. </title> <journal> IEEE Trans. Comput., </journal> <volume> 21 </volume> <pages> 612-613, </pages> <year> 1972. </year>
Reference-contexts: However, despite a number of attempts, not much progress has been made on this question so far. In particular, Van Voorhis showed a simple lower bound of n log n in <ref> [22] </ref>, and a more difficult lower bound of n log n + (n=2) log log n + (n) in [23]. While this is the best result known so far, it gives only a lower order improvement over the trivial information-theoretic bound of n log n n log e.
Reference: [23] <author> D. C. Van Voorhis. </author> <title> Toward a lower bound for sort ing networks. </title> <editor> In R. E. Miller and J. W. Thatcher, editors, </editor> <booktitle> The Complexity of Computer Computations, </booktitle> <pages> pages 119-129. </pages> <publisher> Plenum Press, </publisher> <address> New York, NY, </address> <year> 1972. </year>
Reference-contexts: In particular, Van Voorhis showed a simple lower bound of n log n in [22], and a more difficult lower bound of n log n + (n=2) log log n + (n) in <ref> [23] </ref>. While this is the best result known so far, it gives only a lower order improvement over the trivial information-theoretic bound of n log n n log e.
Reference: [24] <author> A. C. Yao. </author> <title> Bounds on selection networks. </title> <journal> SIAM J. Comput., </journal> <volume> 9 </volume> <pages> 566-582, </pages> <year> 1980. </year>
Reference-contexts: While this is the best result known so far, it gives only a lower order improvement over the trivial information-theoretic bound of n log n n log e. In related work, a number of bounds have been established for the size of comparator networks for merging and selection (see <ref> [3, 8, 9, 11, 16, 20, 21, 24, 25] </ref>, and see Theorem F on page 230 of [10] for a result due to Floyd). For the depth of sorting networks, Yao [24] has shown a lower bound of approximately (2:41 o (1)) log n. <p> For the depth of sorting networks, Yao <ref> [24] </ref> has shown a lower bound of approximately (2:41 o (1)) log n. <p> We prove a lower bound of (c o (1)) log n for the depth of any sorting network, where c 3:27. This improves upon a lower bound of approximately (2:41 o (1)) log n established by Yao <ref> [24] </ref> in 1980. Our results for size are based on a new lower bound technique described in Corollary 2.1. <p> Our lower bound argument is an extension of the approach employed by Yao in <ref> [24] </ref>. More precisely, Yao established a lower bound of (1=(2 log 3) o (1)) log n for the depth of certain selection networks; as a direct corollary, this also implies an identical lower bound for the depth of any sorting network. <p> The next lemma is essentially due to Yao <ref> [24] </ref>, who established a similar result for the case of (n; t)-selection, whereas our lemma is for (n; t; t)-approximate-selection. For ease of notation, we use T (n; t; t) to denote the smallest depth of any (n; t; t)-approximate-selection network. <p> Lemma 5.1 For any t n, 2 t dlog (t + 1)e (9) 2 T (n;t;t) blog tc X i=0 (dlog (t + 1)e i) i : Proof Sketch: The proof is almost identical to that of Theorem 4.1 in <ref> [24] </ref>. To prove Theorem 4.1 of [24], Yao assigned a weight to each segment of a wire in the network and argued that at most t output segments in an (n; t)-selection network could have weight less than or equal to blog tc. (A wire of a comparator network is viewed <p> Lemma 5.1 For any t n, 2 t dlog (t + 1)e (9) 2 T (n;t;t) blog tc X i=0 (dlog (t + 1)e i) i : Proof Sketch: The proof is almost identical to that of Theorem 4.1 in <ref> [24] </ref>. To prove Theorem 4.1 of [24], Yao assigned a weight to each segment of a wire in the network and argued that at most t output segments in an (n; t)-selection network could have weight less than or equal to blog tc. (A wire of a comparator network is viewed as being partitioned into d+1 segments, <p> This is also why we have an extra factor of 2 on the left-hand side of Equation (9), compared with Equation (16) of <ref> [24] </ref>. The next lemma is given as Exercise 25 on page 239 of Knuth's book [10] (see page 639 for a solution). Lemma 5.2 Let w be any wire of a comparator network. <p> Then, by Lemma 5.3, we obtain a depth lower bound of (A ff ff+ffo (1)) log n for any sorting network. Finally, we choose a particular ff to maximize the value of A ff ff + ff. For ff = 1=(3 (2 log 3)) 0:80, as computed by Yao <ref> [24] </ref>, Lemma 5.1 implies a lower bound of (3ff o (1)) log n (2:41 o (1)) log n on the depth of any (n; n ff ; n ff )-approximate-selection network. <p> For sorting networks, however, we need to choose a different ff so that the lower bound of the form ((A ff + 1)ff o (1)) log n is maximized. The calculations are similar to those of Yao <ref> [24] </ref>, and will be included in the full paper. 6 Concluding Remarks We have established new lower bounds for the size and depth of sorting networks. <p> Acknowledgements We thank Andrew Yao for stimulating discussions on this research and helpful conversations on his work in <ref> [24] </ref>, and we thank Friedhelm Meyer auf der Heide and Ran Raz for helpful comments.
Reference: [25] <author> A. C. Yao and F. F. Yao. </author> <title> Lower bounds on merg ing networks. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 23 </volume> <pages> 423-432, </pages> <year> 1976. </year>
Reference-contexts: While this is the best result known so far, it gives only a lower order improvement over the trivial information-theoretic bound of n log n n log e. In related work, a number of bounds have been established for the size of comparator networks for merging and selection (see <ref> [3, 8, 9, 11, 16, 20, 21, 24, 25] </ref>, and see Theorem F on page 230 of [10] for a result due to Floyd). For the depth of sorting networks, Yao [24] has shown a lower bound of approximately (2:41 o (1)) log n.
References-found: 25

