URL: ftp://ftp.comlab.ox.ac.uk/pub/Documents/techpapers/Jonathan.Bowen/safecomp92.ps.Z
Refering-URL: http://www.comlab.ox.ac.uk/archive/safety.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: Email: &lt;Jonathan.Bowen@comlab.ox.ac.uk&gt;  Email: &lt;victoria@cs.rhbnc.ac.uk&gt;  
Title: FORMAL METHODS AND SOFTWARE SAFETY  
Author: J. P. Bowen V. Stavridou 
Keyword: Safety; reliability; system integrity; standards; education; digital systems; computer software; formal languages; industrial control; software engineering.  
Address: 11 Keble Road, Oxford OX1 3QD, UK  London, Egham Hill, Egham, Surrey TW20 0EX, UK  
Affiliation: Oxford University Computing Laboratory, Programming Research Group,  Department of Computer Science, Royal Holloway and Bedford New College, University of  
Abstract: The safety of software is becoming increasingly important as computers pervade control systems on which human life depends. Whilst hardware has become significantly more reliable over the years, the same cannot be said of software. This has become more complex and methods to ensure its correctness have been slow in development. One approach is to mathematically verify software in such systems. This paper investigates the industrial use of these techniques, their advantages and disadvantages, and the introduction of standards and their recommendations concerning formal methods in this area. The cost of safety is also considered. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Bear, S. </author> <year> (1991). </year> <title> An overview of HP-SL. </title> <editor> In Prehn, S., and Toetenel, W.J. (Eds.), </editor> <title> VDM '91, Formal Software Development Methods, Springer-Verlag, </title> <booktitle> Lecture Notes in Computer Science 551, </booktitle> <pages> pp. 571-587. </pages>
Reference-contexts: Medical systems A number of medical instruments have life critical functionality and require a high degree of dependability. Two Hewlett-Packard divisions have used formal specification in order to enhance the quality of a range of cardiac care products. In both cases the formal notation used was HP-SL <ref> (Bear, 1991) </ref>. Deaths due to software in medical equipment have been documented elsewhere (e.g., the Therac 25 radiotherapy machine, where the dosage editor was poorly designed) and as a result others are also resorting to TABLE 2 Summary of software-related standards.
Reference: <author> Bowen, J.P., and Stavridou, V. </author> <year> (1992). </year> <title> Safety-critical systems, formal methods and standards. </title> <type> Technical Report PRG-TR-5-92, </type> <institution> Oxford University Computing Laboratory, UK. </institution> <note> Submitted to Software Engineering Journal. </note>
Reference: <author> Butler, R.W., and Finelli, G.B. </author> <year> (1991). </year> <title> The infeasibility of experimental quantification of life-critical software reliability. </title> <booktitle> Proc. ACM SIGSOFT '91 Conference on Software for Critical Systems, Software Engineering Notes, </booktitle> <publisher> ACM Press, </publisher> <pages> 16(5), pp. 66-76. </pages>
Reference-contexts: Some pilots have consistently criticized the ergonomics of the cockpit instrument layout which they have identified as a possible contributing factor to the pilot errors which have caused several crashes so far. fruitful and preferable to experimental quantification of software reliability <ref> (Butler and Finelli, 1991) </ref>. Railway systems The SACEM system controls the speed of all trains on the RER Line A in Paris.
Reference: <author> Guiho, G., and Hennebert, C. </author> <year> (1990). </year> <title> SACEM software validation. </title> <booktitle> Proc. 12th International Conference on Software Engineering, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <pages> pp. 186-191. </pages>
Reference-contexts: Railway systems The SACEM system controls the speed of all trains on the RER Line A in Paris. The SACEM software consists of 21,000 lines of Modula-2 code. 63% of the code is deemed as safety-critical and has been subjected to formal specification and verification <ref> (Guiho and Hennebert, 1990) </ref>. The specification was done using Abrial's B language and the proofs were done manually using verification conditions for the code.
Reference: <author> Halang, W.A., and Kramer, B. </author> <year> (1992). </year> <title> Achieving high integrity of process control software by graphical design and formal verification. </title> <journal> Software Engineering Journal, </journal> <volume> 7(1), </volume> <pages> pp. 53-64. </pages>
Reference: <author> Harrison, M.D. </author> <year> (1992). </year> <title> Engineering human error tolerant software. </title> <editor> In Nicholls, J.E. (Ed.), </editor> <booktitle> Z User Workshop, </booktitle> <address> York 1991, </address> <note> Springer-Verlag, Workshops in Computing. To appear. </note>
Reference-contexts: Investigation of human errors and how computers can help to avoid them is now being undertaken in a formal context <ref> (Harrison, 1992) </ref>. EXAMPLES OF USE Safety-critical systems make up a minority of industrial applications using formal methods. Despite the fact that such systems have the most to gain potentially, industry is wisely cautious in adopting new untried techniques in this area.
Reference: <author> Hill, J.V. </author> <year> (1991). </year> <title> Software development methods in practice. </title> <booktitle> Proc. 6th Annual Conference on Computer Assurance, (COMPASS). </booktitle>
Reference-contexts: Nuclear energy Rolls-Royce and Associates have been applying formal methods (mainly VDM) to the development of software for safety-critical systems, and nuclear power stations in particular, for a number of years <ref> (Hill, 1991) </ref>.
Reference: <author> Hoare, C.A.R., He Jifeng, Bowen, J.P., and Pandya, P.K. </author> <year> (1990). </year> <title> An algebraic approach to verifiable compiling specification and prototyping of the ProCoS level 0 programming language. </title> <booktitle> In Directorate-General of the Commission of the European Communities (Ed.), ESPRIT '90 Conference Proceedings,, </booktitle> <publisher> Kluwer Academic Publishers B.V., </publisher> <pages> pp. 804-818. </pages>
Reference: <author> Jacky, J. </author> <year> (1991). </year> <title> Verification, analysis and synthesis of safety interlocks. </title> <type> Technical Report 91-04-01, </type> <institution> Department of Radiation Oncology RC-08, University of Washington, </institution> <address> Seattle, WA 98195, USA. </address>
Reference: <author> Page, I., and Luk, W. </author> <year> (1991). </year> <title> Compiling Occam into field-programmable gate arrays. </title> <editor> In Moore, W., and Luk, W. (Eds.), FPGAs, </editor> <booktitle> Oxford Workshop on Field Programmable Logic and Applications. </booktitle> <publisher> Abingdon EE&CS Books, </publisher> <address> 15 Harcourt Way, Abingdon OX14 1NV, UK, </address> <pages> pp. 271-283. </pages>
Reference-contexts: Another relatively new digital hardware technology, which may be of interest to safety-critical engineers who currently use embedded computer systems, is the Field Programmable Gate Array (FPGA). Hardware compilers from high-level programming languages down to a `netlist ' of components are now being produced <ref> (Page and Luk, 1991) </ref>, and it seems a realistic goal that such compilers could be formally proved correct. This is a promising research area for the 1990s and it is foreseen that programmable hardware will be used increasingly during the coming years.
Reference: <author> Ravn, A.P., and Stavridou, V. </author> <year> (1991). </year> <title> Project organisa-tion. In Ravn, A.P. (Ed.), Embedded, Real-time Computing Systems, Vol. I, ESPRIT BRA 3104, Provably Correct Systems, </title> <journal> ProCoS, </journal> <note> Draft Final Deliverable. Chap. 8. To appear, Springer-Verlag, Lecture Notes in Computer Science, </note> <year> 1992. </year>
Reference: <author> Reinertsen, D.G. </author> <year> (1983). </year> <title> Whodunit? The search for the new product killers. Electronic Business, </title> <month> July </month> <year> 1983. </year>
Reference: <author> Ward, W.T. </author> <year> (1991). </year> <title> Calculating the real cost of software defects. </title> <journal> Hewlett-Packard Journal, </journal> <month> October </month> <year> 1991, </year> <pages> pp. 55-58. </pages>
Reference: <author> Wright, C.L., and Zawilski, A.J. </author> <year> (1991). </year> <title> Existing and emerging standards for software safety. The MITRE Corporation, Center for Advanced Aviation System Development, </title> <address> 7525 Colshire Drive, McLean, VA 22102-3481, USA. </address>
Reference: <author> Zhou ChaoChen, Hoare, </author> <title> C.A.R., and Ravn, A.P. (1991). A calculus of durations. </title> <journal> Information Processing Letters, </journal> <volume> 40(5), </volume> <pages> pp. 269-276. </pages>
References-found: 15

