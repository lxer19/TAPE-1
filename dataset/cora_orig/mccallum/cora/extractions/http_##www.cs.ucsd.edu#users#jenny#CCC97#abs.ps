URL: http://www.cs.ucsd.edu/users/jenny/CCC97/abs.ps
Refering-URL: http://www.cs.ucsd.edu/users/jenny/CCC97/abs.html
Root-URL: http://www.cs.ucsd.edu
Email: Email: jenny@cs.ucsd.edu  
Title: Structural Prediction Models for High-Performance Distributed Applications  
Author: Jennifer Schopf 
Keyword: Context  
Address: San Diego  
Affiliation: Department of Computer Science and Engineering University of California  
Note: Accepted for submission by CCC '97  
Abstract: We present a structural performance model that uses application profiles and component models to predict an application's performance on a set of distributed resources. We decompose application performance in accordance with the structure of the application: that is, into interacting component models that correspond to component tasks. Then, using the application profile and available information as guides, we select models for each component appropriately. As a proof of concept, we have implemented this approach for two distributed applications, a master-slave genetic algorithm code and a red-black stencil successive over-relaxation code. Our Clusters of distributed machines have become a common platform for high performance applications, but remain a challenging environment in which to achieve good performance. One reason for this is the difficulty of predicting an application's execution time in this variable setting, where only minimal information may be available. In particular, as a part of the AppLeS scheduling project [BW96, BWF+96], we are interested in estimating the performance of applications for use in dynamic scheduling. Towards this end, we build structural models, where a model can be thought of as a black box that takes as inputs a problem size and a resource set and predicts execution time. Because this environment combines varying non-dedicated resources and possibly dissimilar implementation paradigms, many established modeling techniques do not satisfy the needs of our scheduler. Our approach builds models that mirror the structure of the application by breaking the overall prediction model into coarse-grain components; individual models are then chosen to fit the characteristics of these components. This allows for the variability of this environment, where different application components may need different models of performance. This approach also provides a method by which different structural components can be modeled to differing levels of detail as needed. From conversations with application developers working with distributed parallel applications [ASW+95], we know that users can easily supply information about code structure and profile. We have tried to allow for a variety of different sources of application data of varying qualities and use. As in any setting, more (and better) data will lead to better predictions, so our approach also allows the upgrading of information if initial data leads to flawed predictions. Examples of the possible data to be supplied would be a time per element estimate for the computation components (in our experience, these are achieved most often through operation counts or benchmarks), message sizes and bandwidth or latency information for communication components, and size of data and predictions are within 10% of actual time.
Abstract-found: 1
Intro-found: 0
Reference: <author> ASW+95 Anglano, C., Schopf, J., Wolski, R. and Berman, F., Zoom: </author> <title> A Hierarchical Representation for Heterogeneous Applications, </title> <type> UCSD CS Tech Report #CS95-451, </type> <year> 1995. </year>
Reference: <author> Bhatia96 Bhatia, Karan. </author> <type> Personal communication. </type> <year> 1996. </year>
Reference: <author> BW96 Berman, F., and Wolski, R., </author> <title> Scheduling from the Perspective of the Application. </title> <booktitle> In Proceedings of the Fifth IEEE International Symposium on High Performance Distributed Computing, </booktitle> <year> 1996. </year>
Reference: <author> BWF+96 Berman, F., Wolski, R., Figueira, S., Schopf, J., and Shao, G.. </author> <title> Application-Level Scheduling on Distributed Heterogeneous Networks. </title> <booktitle> In Proceedings of Supercomputing '96, </booktitle> <year> 1996. </year>
Reference: <author> DTM+96 Deaven, D., Tit, N., Morris, J., and Ho, K. </author> <title> Structural Optimization of Lennard-Jones Clusters by a Genetic Algorithm. </title> <journal> Chemical Physical Letters 256, </journal> <pages> pp. 195, </pages> <year> 1996. </year>
Reference: <author> GKM82 Graham, S., Kessler, P., McKusick, M., </author> <title> gprof: A Call Graph Execution Profiler, </title> <booktitle> Proceedings of the SIGPLAN '82 Symposium on Compiler Construction, SIGPLAN Notices, </booktitle> <volume> Vol. 17, No. 6, </volume> <pages> pp. 120-126, </pages> <month> June </month> <year> 1982. </year>
Reference: <author> PM94 Pedersen, Jan and Moult, John. </author> <title> Determination of the Structure of Small Protein Fragments using Torsion Space Monte Carlo and Genetic Algorithm Methods. In Proceedings of Meeting on Critical Assessment of Techniques for Protein Structure Prediction, </title> <booktitle> Asilomar Conference Center, </booktitle> <month> December </month> <year> 1994. </year>
Reference: <editor> Schulze96 Schulze-Kremer, S. </editor> <address> http://www.techfak.uni-bielefeld.de/bcd/Curric/ProtEn/ proten.html, </address> <year> 1996. </year>
References-found: 8

