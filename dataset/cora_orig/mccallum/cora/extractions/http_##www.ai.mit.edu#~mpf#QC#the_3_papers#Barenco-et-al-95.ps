URL: http://www.ai.mit.edu/~mpf/QC/the_3_papers/Barenco-et-al-95.ps
Refering-URL: 
Root-URL: 
Email: a.barenco@mildred.physics.ox.ac.uk.  bennetc/divince@watson.ibm.com.  cleve@cpsc.ucalgary.ca.  nhm@im.lcs.mit.edu.  shor@research.att.com.  tycho@sleator.physics.nyu.edu.  smolin@vesta.physics.ucla.edu.  harald.weinfurter@uibk.ac.at.  
Title: Elementary gates for quantum computation  
Author: Adriano Barenco Charles H. Bennett Richard Cleve David P. DiVincenzo Norman Margolus Peter Shor John Smolin Harald Weinfurter k 
Address: New York Univ. k  Innsbruck yy  Oxford OX1 3PU, UK;  Yorktown Heights, New York, NY 10598, USA;  Calgary, Alberta, Canada T2N 1N4;  Cambridge MA 02139 USA;  Murray Hill, NJ 07974 USA;  New York, NY 10003 USA;  Los Angeles, CA 90024;  A-6020 Innsbruck, Austria;  
Affiliation: Oxford University  IBM Research  University of Calgary  IBM Research  MIT  AT&T Bell Labs -Tycho Sleator  UCLA flfl  Univ. of  Laboratory,  Department of Computer Science,  Laboratory for Computer Science,  Physics Dept.,  flfl Physics Dept.,  yy Inst. for Exptl. Physics,  
Date: 23 Mar 95  March 22, 1995 (AC5710)  
Note: quant-ph/9503016  submitted to Physical Review A,  Clarendon  (and IBM Research.)  
Abstract: We show that a set of gates that consists of all one-bit quantum gates (U(2)) and the two-bit exclusive-or gate (that maps Boolean values (x; y) to (x; x y)) is universal in the sense that all unitary operations on arbitrarily many bits n (U(2 n )) can be expressed as compositions of these gates. We investigate the number of the above gates required to implement other gates, such as generalized Deutsch-Toffoli gates, that apply a specific U(2) transformation to one input bit if and only if the logical AND of all remaining input bits is satisfied. These gates play a central role in many proposed constructions of quantum computational networks. We derive upper and lower bounds on the exact number of elementary gates required to build up a variety of two- and three-bit quantum gates, the asymptotic number required for n-bit Deutsch-Toffoli gates, and make some observations about the number required for arbitrary n-bit unitary operations. PACS numbers: 03.65.Ca, 07.05.Bx, 02.70.Rw, 89.80.+h 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. A. M. </author> <title> Dirac, </title> <booktitle> The Principles of Quantum Mechanics, </booktitle> <address> (Oxford, </address> <year> 1958), </year> <title> Chap. 5; for a modern treatment, see A. Peres, Quantum Theory: Concepts and Methods, </title> <publisher> (Kluwer, </publisher> <year> 1993), </year> <note> Chap. 8.6. </note>
Reference-contexts: This unitary evolution on a normalized state vector is known to be the correct physical description of an isolated system evolving in time according to the laws of quantum mechanics <ref> [1] </ref>. Historically, the idea that the quantum mechanics of isolated systems should be studied as a new formal system for computation arose from the recognition twenty years ago that computation could be made reversible within the paradigm of classical physics.
Reference: [2] <author> R. Landauer, </author> <title> "Irreversibility and heat generation in the computing process", </title> <institution> IBM J. Res. Dev. </institution> <note> 5, 183 (1961); C. </note> <author> H. Bennett, </author> <title> "Logical reversibility of computation", </title> <journal> IBM Journal of Research and Development, </journal> <volume> 17, </volume> <month> 525 </month> <year> (1973); </year> <month> Yves Lecerf, </month> <title> "Machines de Turing reversibles. Recursive insolubilite en n"N de l'equation u = n ou est un "isomorphism de codes". </title> <note> Comptes Rendus 257, 2597-2600 (1963); C. </note> <author> H. Bennett, </author> <title> "Time/space trade-offs for reversible computation", </title> <journal> SIAM J. Comput. </journal> <volume> 18, </volume> <month> 766 </month> <year> (1989). </year> <note> For a review, see C. </note> <author> H. Bennett and R. Landauer, </author> <title> "Physical limits of computation", </title> <publisher> Scientific American, </publisher> <month> July, </month> <year> 1985, </year> <note> p. 48. </note>
Reference-contexts: It is possible to perform any computation in a way that is reversible both logically|i.e., the computation is a sequence of bijective transformations|and thermodynamically|the computation could in principle be performed by a physical apparatus dissipating arbitrarily little energy <ref> [2] </ref>. A formalism for constructing reversible Turing machines and reversible gate arrays (i.e., reversible combinational logic) was developed.
Reference: [3] <author> E. Fredkin and T. Toffoli, </author> <title> "Conservative Logic", </title> <journal> Internat. J. Theoret. Phys. </journal> <volume> 21, </volume> <month> 219 </month> <year> (1982). </year>
Reference-contexts: A formalism for constructing reversible Turing machines and reversible gate arrays (i.e., reversible combinational logic) was developed. Fredkin and Toffoli <ref> [3] </ref> showed that there exists a 3-bit "univer-sal gate" for reversible computation, that is, a gate which, when applied in succession to different triplets of bits in a gate array, could be used to simulate any arbitrary reversible computation. (Two-bit gates like NAND which are universal for ordinary computation are not
Reference: [4] <author> T. </author> <title> Toffoli "Reversible Computing", in Automata, Languages and Programming, </title> <editor> eds. J. W. de Bakker and J. van Leeuwen (Springer, </editor> <address> New York, </address> <year> 1980), </year> <note> p. 632; Technical Memo MIT/LCS/TM-151, </note> <institution> MIT Lab. for Comp. Sci. </institution> <note> (unpublished). </note>
Reference-contexts: exists a 3-bit "univer-sal gate" for reversible computation, that is, a gate which, when applied in succession to different triplets of bits in a gate array, could be used to simulate any arbitrary reversible computation. (Two-bit gates like NAND which are universal for ordinary computation are not reversible.) Toffoli's version <ref> [4] </ref> of the universal reversible gate will figure prominently in the body of this paper. 2 Quantum physics is also reversible, because the reverse-time evolution specified by the unitary operator U 1 = U y always exists; as a consequence, several workers recognized that reversible computation could be executed within a <p> When U = 0 1 ! ^ m (U ) is the so-called Toffoli gate <ref> [4] </ref> with m+1 input bits, which maps jx 1 ; : : : ; x m ; yi to jx 1 ; : : : ; x m ; ( k=1 x k ) yi. <p> We will also exhibit a number of explicit constructions of ^ m (U ) using ^ 1 (U ), which can all be made polynomial in m. It is well known <ref> [4] </ref> that the analogous family of constructions in classical reversible logic which involve building ^ m 1 0 from the three-bit Toffoli gate ^ 2 1 0 , is also polynomial in m. We will exhibit one important difference between the classical and the quantum constructions, however; Toffoli showed [4] that <p> known <ref> [4] </ref> that the analogous family of constructions in classical reversible logic which involve building ^ m 1 0 from the three-bit Toffoli gate ^ 2 1 0 , is also polynomial in m. We will exhibit one important difference between the classical and the quantum constructions, however; Toffoli showed [4] that the classical ^ m 's could not be built without the presence of some "work bits" to store intermediate results of the calculation. By contrast, we show that the quantum logic gates can always be constructed with the use of no workspace whatsoever. <p> A noteworthy case is when U = x , where we obtain a simulation of the 3-bit Toffoli gate ^ 2 ( x ), which is the primitive gate for classical reversible logic <ref> [4] </ref>.
Reference: [5] <author> P. Benioff, </author> <title> "Quantum mechanical Hamiltonian models of Turing machines", </title> <journal> J. Stat. Phys. </journal> <volume> 29, </volume> <month> 515 </month> <year> (1982). </year>
Reference-contexts: Quantum-mechanical Turing machines <ref> [5, 6] </ref>, gate arrays [7], and cellular automata [8] have been discussed, and physical realizations of Toffoli's [9, 10, 11] and Fredkin's [12, 13, 14] universal three-bit gates within various quantum-mechanical physical systems have been proposed.
Reference: [6] <author> A. Peres, </author> <title> "Reversible logic and quantum computers", </title> <journal> Phys. </journal> <note> Rev. A 32, 3266 (1985). </note>
Reference-contexts: Quantum-mechanical Turing machines <ref> [5, 6] </ref>, gate arrays [7], and cellular automata [8] have been discussed, and physical realizations of Toffoli's [9, 10, 11] and Fredkin's [12, 13, 14] universal three-bit gates within various quantum-mechanical physical systems have been proposed.
Reference: [7] <author> R. P. </author> <title> Feynman, "Quantum mechanical computers", </title> <journal> Optics News, </journal> <month> February </month> <year> 1985, </year> <note> 11, p. 11. </note>
Reference-contexts: Quantum-mechanical Turing machines [5, 6], gate arrays <ref> [7] </ref>, and cellular automata [8] have been discussed, and physical realizations of Toffoli's [9, 10, 11] and Fredkin's [12, 13, 14] universal three-bit gates within various quantum-mechanical physical systems have been proposed. <p> quantum gate constructions | we find that to implement a family of ^ m gates exactly, the time required for our implementation can be reduced from fi (m 2 ) to fi (m) merely by the introduction of one bit for workspace. 3 Notation We adopt a version of Feynman's <ref> [7] </ref> notation to denote ^ m (U ) gates and Toffoli gates in quantum networks as follows. 7 v U v v In all the gate-array diagrams shown in this paper, time proceeds from left to right The first network contains a ^ 2 (U ) gate and the second one
Reference: [8] <author> N. Margolus, </author> <title> "Parallel Quantum Computation", in Complexity, Entropy, </title> <journal> and the Physics of Information, Santa Fe Institute studies in the Sciences of Complexity, </journal> <volume> vol. </volume> <editor> VIII, ed. W. H. Zurek, </editor> <publisher> (Addison-Wesley, </publisher> <year> 1990), </year> <note> p. 273. </note>
Reference-contexts: Quantum-mechanical Turing machines [5, 6], gate arrays [7], and cellular automata <ref> [8] </ref> have been discussed, and physical realizations of Toffoli's [9, 10, 11] and Fredkin's [12, 13, 14] universal three-bit gates within various quantum-mechanical physical systems have been proposed.
Reference: [9] <editor> Tycho Sleator and Harald Weinfurter, </editor> <booktitle> "Realizable universal quantum logic gates", preprint (1994). </booktitle> <pages> 29 </pages>
Reference-contexts: Quantum-mechanical Turing machines [5, 6], gate arrays [7], and cellular automata [8] have been discussed, and physical realizations of Toffoli's <ref> [9, 10, 11] </ref> and Fredkin's [12, 13, 14] universal three-bit gates within various quantum-mechanical physical systems have been proposed. <p> In the present work we in part build upon the strategy introduced by Sleator and Weinfurter <ref> [9] </ref>, who exhibited a scheme for obtaining the Toffoli gate with a sequence of exactly five two-bit gates. We find that their approach can be generalized and extended in a number of ways to obtain more general efficient gate constructions.
Reference: [10] <author> A. Barenco, D. Deutsch, A. Ekert, and R. Jozsa, </author> <title> "Logic gates for quantum circuits", </title> <note> preprint (1994). </note>
Reference-contexts: Quantum-mechanical Turing machines [5, 6], gate arrays [7], and cellular automata [8] have been discussed, and physical realizations of Toffoli's <ref> [9, 10, 11] </ref> and Fredkin's [12, 13, 14] universal three-bit gates within various quantum-mechanical physical systems have been proposed.
Reference: [11] <author> J. I. Cirac and P. Zoller, </author> <title> "Quantum computations with cold trapped ions", </title> <note> preprint (November 1994). </note>
Reference-contexts: Quantum-mechanical Turing machines [5, 6], gate arrays [7], and cellular automata [8] have been discussed, and physical realizations of Toffoli's <ref> [9, 10, 11] </ref> and Fredkin's [12, 13, 14] universal three-bit gates within various quantum-mechanical physical systems have been proposed.
Reference: [12] <author> I. Chuang and Y. Yamamoto, </author> <title> "A simple quantum computer", </title> <note> submitted to Phys. Rev. A (November 1994). </note>
Reference-contexts: Quantum-mechanical Turing machines [5, 6], gate arrays [7], and cellular automata [8] have been discussed, and physical realizations of Toffoli's [9, 10, 11] and Fredkin's <ref> [12, 13, 14] </ref> universal three-bit gates within various quantum-mechanical physical systems have been proposed.
Reference: [13] <author> Y. Yamamoto, M. Kitegawa, and K. Igeta, </author> <booktitle> in Proc. 3rd Asia-Pacific Phys. Conf. </booktitle> <publisher> (World Scientific, Singapore, </publisher> <editor> 1988); G. J. </editor> <title> Milburn, </title> <journal> Phys. Rev. Lett. </journal> <volume> 62, </volume> <month> 2124 </month> <year> (1989). </year>
Reference-contexts: Quantum-mechanical Turing machines [5, 6], gate arrays [7], and cellular automata [8] have been discussed, and physical realizations of Toffoli's [9, 10, 11] and Fredkin's <ref> [12, 13, 14] </ref> universal three-bit gates within various quantum-mechanical physical systems have been proposed.
Reference: [14] <author> S. Lloyd, </author> <title> "A potentially realizable quantum computer", </title> <booktitle> Science, 261, 1569 (1993); "Envisioning a quantum supercomputer", Science, </booktitle> <volume> 263, </volume> <month> 695 </month> <year> (1994). </year>
Reference-contexts: Quantum-mechanical Turing machines [5, 6], gate arrays [7], and cellular automata [8] have been discussed, and physical realizations of Toffoli's [9, 10, 11] and Fredkin's <ref> [12, 13, 14] </ref> universal three-bit gates within various quantum-mechanical physical systems have been proposed.
Reference: [15] <author> M. Reck, A. Zeilinger, H. J. Bernstein, and P. Bertani, </author> <title> "Experimental realization of any discrete unitary operator", </title> <journal> Phys. Rev. Lett. </journal> <volume> 73, </volume> <month> 58 </month> <year> (1994). </year>
Reference: [16] <author> D. Deutsch, </author> <title> "Quantum theory, the Church-Turing principle and the universal quantum computer", </title> <journal> Proc. R. Soc. Lond. </journal> <note> A 400, 97 (1985). </note>
Reference-contexts: By contrast a quantum computer with m physical bits (see definition of the state above) can perform unitary operations in a space of 2 m dimensions, exponentially larger than its physical size. Deutsch <ref> [16] </ref> introduced a quantum Turing machine intended to generate and operate on arbitrary superpositions of states, and proposed that, aside from simulating the evolution of quantum systems more economically than known classical methods, it might also be able to solve certain classical problems|i.e., problems with a classical input and output|faster than
Reference: [17] <author> Deutsch, D. and Jozsa, R., </author> <title> "Rapid solution of problems by quantum computation", </title> <journal> Proceedings of the Royal Society, London, </journal> <volume> vol. A439, </volume> <year> 1992, </year> <pages> pp. 553 - 558. </pages>
Reference-contexts: In a series of artificial settings, with appropriately chosen oracles, quantum computers were shown to be qualitatively stronger than classical ones <ref> [17, 18, 19, 20] </ref>, culminating in Shor's [21, 22] discovery of quantum polynomial time algorithms for two important natural problems, viz. factoring and discrete logarithm, for which no polynomial-time classical algorithm was known.
Reference: [18] <editor> Berthiaume, A. and Brassard, G., </editor> <booktitle> "Oracle quantum computing", Proceedings of the Workshop on Physics and Computation | PhysComp '92, </booktitle> <month> October </month> <year> 1992, </year> <note> IEEE Press, pp. 195 - 199. </note>
Reference-contexts: In a series of artificial settings, with appropriately chosen oracles, quantum computers were shown to be qualitatively stronger than classical ones <ref> [17, 18, 19, 20] </ref>, culminating in Shor's [21, 22] discovery of quantum polynomial time algorithms for two important natural problems, viz. factoring and discrete logarithm, for which no polynomial-time classical algorithm was known.
Reference: [19] <editor> Simon, D., </editor> <booktitle> "On the power of quantum computation", Proceedings of the 35th Annual Symposium on the Foundations of Computer Science (IEEE Computer Society Press, </booktitle> <address> Los Alamitos, CA, </address> <year> 1994), </year> <note> p. 116. </note>
Reference-contexts: In a series of artificial settings, with appropriately chosen oracles, quantum computers were shown to be qualitatively stronger than classical ones <ref> [17, 18, 19, 20] </ref>, culminating in Shor's [21, 22] discovery of quantum polynomial time algorithms for two important natural problems, viz. factoring and discrete logarithm, for which no polynomial-time classical algorithm was known.
Reference: [20] <author> Bernstein, E. and Vazirani, U., </author> <title> "Quantum complexity theory", </title> <booktitle> Proceedings of the 25th Annual ACM Symposium on Theory of Computing, </booktitle> <publisher> (ACM Press, </publisher> <address> New York, </address> <year> 1993), </year> <pages> pp. 11 - 20. </pages>
Reference-contexts: In a series of artificial settings, with appropriately chosen oracles, quantum computers were shown to be qualitatively stronger than classical ones <ref> [17, 18, 19, 20] </ref>, culminating in Shor's [21, 22] discovery of quantum polynomial time algorithms for two important natural problems, viz. factoring and discrete logarithm, for which no polynomial-time classical algorithm was known. <p> Just as classical bit strings can represent the discrete states of arbitrary finite dimensionality, so a string of n qubits can be used to represent quantum states in any Hilbert space of dimensionality up to 2 n . The analysis of quantum Turing machines <ref> [20] </ref> is complicated by the fact that not only the data but also the control variables, e.g., head position, can exist in a superposition of classical states. Fortunately, Yao has shown [27] that acyclic quantum gate arrays can simulate quantum Turing machines.
Reference: [21] <author> P. W. Shor, </author> <title> "Algorithms for quantum computation: discrete log and factoring", </title> <booktitle> Pro ceedings of the 35th Annual Symposium on the Foundations of Computer Science (IEEE Computer Society Press, </booktitle> <address> Los Alamitos, CA, </address> <year> 1994), </year> <note> p. 124. </note>
Reference-contexts: In a series of artificial settings, with appropriately chosen oracles, quantum computers were shown to be qualitatively stronger than classical ones [17, 18, 19, 20], culminating in Shor's <ref> [21, 22] </ref> discovery of quantum polynomial time algorithms for two important natural problems, viz. factoring and discrete logarithm, for which no polynomial-time classical algorithm was known.
Reference: [22] <author> For a review see A. Ekert and R. Jozsa, </author> <title> "Shor's quantum algorithm for factorising numbers", in preparation for Reviews of Modern Physics (1995); see also J. Brown, </title> <journal> New Scientist 133, </journal> <volume> No. </volume> <year> 1944, </year> <editor> p. </editor> <month> 21 </month> <year> (1994). </year>
Reference-contexts: In a series of artificial settings, with appropriately chosen oracles, quantum computers were shown to be qualitatively stronger than classical ones [17, 18, 19, 20], culminating in Shor's <ref> [21, 22] </ref> discovery of quantum polynomial time algorithms for two important natural problems, viz. factoring and discrete logarithm, for which no polynomial-time classical algorithm was known.
Reference: [23] <editor> For an interesting recent prespective, see G. Brassard, </editor> <title> "Cryptography Column | Quantum Computing: The End of Classical Cryptography?" SIGACT News 25 (4), </title> <month> 15 </month> <year> (1994). </year>
Reference-contexts: The search for other such problems, and the physical question of the feasibility of building a quantum computer, are major topics of 3 investigation today <ref> [23] </ref>.
Reference: [24] <author> D. Deutsch, </author> <title> "Quantum computational networks", </title> <journal> Proc. Roy. Soc. Lond. </journal> <note> A 425, 73 (1989). </note>
Reference-contexts: The search for other such problems, and the physical question of the feasibility of building a quantum computer, are major topics of 3 investigation today [23]. The formalism we use for quantum computation, which we call a quantum "gate array" was introduced by Deutsch <ref> [24] </ref>, who showed that a simple generalization of the Toffoli gate (the three-bit gate ^ 2 (R x ), in the language introduced later in this paper) suffices as a universal gate for quantum computing. <p> Here we derive a series of results which provide new tools for the building-up of unitary transformations from simple gates. We build on other recent results which simplify and extend Deutsch's original discovery <ref> [24] </ref> of a three-bit universal quantum logic gate. As a consequence of the greater power of quantum computing as a formal system, there are many more choices for the universal gate than in classical reversible 4 computing. <p> The third and fourth networks contain a ^ 0 (U ) and a 2-bit reversible exclusive-or (simply called XOR henceforth) gate, respectively. The XOR gate is introduced as the "measurement gate" in <ref> [24] </ref>, and will play a very prominent role in many of the constructions we describe below. Throughout this paper, when we refer to a basic operation, we mean either a ^ 0 (U ) gate or this 2-bit XOR gate.
Reference: [25] <author> B. Schumacher, </author> <title> "On Quantum Coding," </title> <journal> Phys. </journal> <note> Rev. A (in press to appear 1995). </note>
Reference-contexts: The gates have the same number of inputs as outputs, and a gate of n inputs carries a unitary operation of the group U (2 n ), i.e., a generalized rotation in a Hilbert space of dimension 2 n . Each wire represents a quantum bit, or qubit <ref> [25, 26] </ref>, i.e., a quantum system with a 2-dimensional Hilbert space, capable of existing in a superposition of Boolean states and of being entangled with the states of other qubits. Where there is no danger of confusion, we will use the term "bit" in either the classical or quantum sense.
Reference: [26] <author> R. Jozsa and B. Schumacher, </author> <title> "A New Proof of the Quantum Noiseless Coding Theo rem,"J. </title> <journal> Modern Optics 41, </journal> <pages> 2343-2349, </pages> <year> (1994). </year>
Reference-contexts: The gates have the same number of inputs as outputs, and a gate of n inputs carries a unitary operation of the group U (2 n ), i.e., a generalized rotation in a Hilbert space of dimension 2 n . Each wire represents a quantum bit, or qubit <ref> [25, 26] </ref>, i.e., a quantum system with a 2-dimensional Hilbert space, capable of existing in a superposition of Boolean states and of being entangled with the states of other qubits. Where there is no danger of confusion, we will use the term "bit" in either the classical or quantum sense.
Reference: [27] <author> A. C.-C. Yao, </author> <title> "Quantum Circuit Complexity", </title> <booktitle> Proceedings of the 34th Annual Sym posium on the Foundations of Computer Science (IEEE Computer Society Press, </booktitle> <address> Los Alamitos, CA, </address> <year> 1993), </year> <note> p. 352. </note>
Reference-contexts: The analysis of quantum Turing machines [20] is complicated by the fact that not only the data but also the control variables, e.g., head position, can exist in a superposition of classical states. Fortunately, Yao has shown <ref> [27] </ref> that acyclic quantum gate arrays can simulate quantum Turing machines.
Reference: [28] <author> D. P. DiVincenzo, </author> <title> "Two-bit gates are universal for quantum computation", </title> <journal> Phys. </journal> <note> Rev. A 50, 1015 (1995). (cond-mat/9407022) </note>
Reference-contexts: As a consequence of the greater power of quantum computing as a formal system, there are many more choices for the universal gate than in classical reversible 4 computing. In particular, DiVincenzo <ref> [28] </ref> showed that two-bit universal quantum gates are also possible; Barenco [29] extended this to show than almost any two-bit gate (within a certain restricted class) is universal, and Lloyd [30] and Deutsch et al.[31] have shown that in fact almost any two-bit or n-bit (n 2) gate is also universal.
Reference: [29] <author> A. Barenco, </author> <title> "A universal two-bit gate for quantum computation", </title> <note> preprint (1994). 30 </note>
Reference-contexts: As a consequence of the greater power of quantum computing as a formal system, there are many more choices for the universal gate than in classical reversible 4 computing. In particular, DiVincenzo [28] showed that two-bit universal quantum gates are also possible; Barenco <ref> [29] </ref> extended this to show than almost any two-bit gate (within a certain restricted class) is universal, and Lloyd [30] and Deutsch et al.[31] have shown that in fact almost any two-bit or n-bit (n 2) gate is also universal. <p> As shown by one of us <ref> [31, 29] </ref>, "almost any" single ^ 1 (U ) gate is universal in the sense that: by successive application of this gate to pairs of bits in an n-bit network, any unitary transformation may be approximated with arbitrary accuracy. (It suffices for U to be specified by Euler angles which are
Reference: [30] <author> S. Lloyd, </author> <title> "Almost any quantum logic gate is universal", </title> <note> preprint (1994). </note>
Reference-contexts: In particular, DiVincenzo [28] showed that two-bit universal quantum gates are also possible; Barenco [29] extended this to show than almost any two-bit gate (within a certain restricted class) is universal, and Lloyd <ref> [30] </ref> and Deutsch et al.[31] have shown that in fact almost any two-bit or n-bit (n 2) gate is also universal. A closely related construction for the Fredkin gate has been given [32].
Reference: [31] <author> D. Deutsch, A. Barenco, and A. Ekert, </author> <title> "Universality in quantum computation", sub mitted to Proc. </title> <journal> R. Soc. Lond. </journal> <year> (1995). </year>
Reference-contexts: As shown by one of us <ref> [31, 29] </ref>, "almost any" single ^ 1 (U ) gate is universal in the sense that: by successive application of this gate to pairs of bits in an n-bit network, any unitary transformation may be approximated with arbitrary accuracy. (It suffices for U to be specified by Euler angles which are
Reference: [32] <author> H. F. Chau and F. Wilczek, </author> <title> "Realization of the Fredkin gate using a series of one- and two-body operators", </title> <type> Report IASSNS-HEP-95/15, </type> <year> (1995). </year> <month> (quant-ph/9503005) </month>
Reference-contexts: A closely related construction for the Fredkin gate has been given <ref> [32] </ref>. In the present paper we take a somewhat different tack, showing that a non-universal, classical two-bit gate, in conjunction with quantum one-bit gates, is also universal; we believe that the present work along with the preceding ones cover the full range of possible repertoires for quantum gate array construction.
Reference: [33] <author> D. Coppersmith, </author> <title> "An approximate Fourier transform useful in quantum factoring", IBM Research Report RC19642 (1994); R. Cleve, "A note on computing Fourier transforms by quantum programs", </title> <note> unpublished note (1994). </note>
Reference-contexts: A variety of strategies for constructing gate arrays efficiently will surely be very important for understanding the full power of quantum mechanics for computation; construction of such efficient schemes have already proved very useful for understanding the scaling of Shor's prime factorization <ref> [33] </ref>. In the present work we in part build upon the strategy introduced by Sleator and Weinfurter [9], who exhibited a scheme for obtaining the Toffoli gate with a sequence of exactly five two-bit gates. <p> This notion of approximation in the context of reducing the complexity of quantum computations was introduced by Coppersmith <ref> [33] </ref>, and is useful for the following reason. Suppose that two networks that are approximately the same (in the above sense) are executed with identical inputs and their outputs are observed.
Reference: [34] <author> A. Berthiaume, D. Deutsch, and R. Jozsa, </author> <booktitle> "The stabilisation of quantum computa tions", Proceedings of the Workshop on Physics and Computation, </booktitle> <address> PhysComp '94 (Los Alamitos: </address> <publisher> IEEE Comp. Soc. Press, </publisher> <year> 1994), </year> <note> p. 60. </note>
Reference-contexts: Some of the results presented here have no obvious connection with previous gate-assembly schemes. We will not touch at all on the great difficulties attendant on the actual physical realization of a quantum computer | the problems of error correction <ref> [34] </ref> and quantum coherence [35, 36] are very serious ones. We refer the reader to [37] for a comprehensive discussion of these difficulties. 5 2 Introduction We begin by introducing some basic ideas and notation.
Reference: [35] <author> W. G. Unruh, </author> <title> "Maintaining coherence in quantum computers", </title> <journal> Phys. </journal> <note> Rev. A 51, 992 (1995). (hep-th/9406058) </note>
Reference-contexts: Some of the results presented here have no obvious connection with previous gate-assembly schemes. We will not touch at all on the great difficulties attendant on the actual physical realization of a quantum computer | the problems of error correction [34] and quantum coherence <ref> [35, 36] </ref> are very serious ones. We refer the reader to [37] for a comprehensive discussion of these difficulties. 5 2 Introduction We begin by introducing some basic ideas and notation.
Reference: [36] <author> I. L. Chuang, R. Laflamme, P. Shor, and W. H. Zurek, </author> <title> "Quantum Computers, Factor ing and Decoherence", </title> <note> Report LA-UR-95-241 (1995). (quant-ph/9503007) </note>
Reference-contexts: Some of the results presented here have no obvious connection with previous gate-assembly schemes. We will not touch at all on the great difficulties attendant on the actual physical realization of a quantum computer | the problems of error correction [34] and quantum coherence <ref> [35, 36] </ref> are very serious ones. We refer the reader to [37] for a comprehensive discussion of these difficulties. 5 2 Introduction We begin by introducing some basic ideas and notation.
Reference: [37] <author> R. Landauer, </author> <title> "Is quantum mechanics useful?", </title> <journal> Proc. Roy. Soc. Lond., </journal> <note> (to be pub lished). </note>
Reference-contexts: We will not touch at all on the great difficulties attendant on the actual physical realization of a quantum computer | the problems of error correction [34] and quantum coherence [35, 36] are very serious ones. We refer the reader to <ref> [37] </ref> for a comprehensive discussion of these difficulties. 5 2 Introduction We begin by introducing some basic ideas and notation.
Reference: [38] <institution> The only non-trivial one-bit classical invertible operation is 1 0 </institution> . 
Reference-contexts: This is a remarkable result from the perspective of classical reversible computation because it is well known that the classical analogue of this assertion|which is that all invertible boolean functions can be implemented with ^ 1 1 0 and ^ 0 0 1 gates <ref> [38] </ref> | is false. In fact, it is well known that only a tiny fraction of Boolean functions (those which are linear with respect to modulo 2 arithmetic) can be generated with these gates [39].
Reference: [39] <author> D. Coppersmith and E. Grossman, </author> <title> "Generators for Certain Alternating Groups with Applications to Cryptography", </title> <journal> SIAM J. Applied Math. </journal> <volume> 29, No. 4, </volume> <pages> pp. </pages> <month> 624-627 </month> <year> (1975). </year>
Reference-contexts: In fact, it is well known that only a tiny fraction of Boolean functions (those which are linear with respect to modulo 2 arithmetic) can be generated with these gates <ref> [39] </ref>. We will also exhibit a number of explicit constructions of ^ m (U ) using ^ 1 (U ), which can all be made polynomial in m.
Reference: [40] <author> Richard Cleve, </author> <title> "Reversible Programs and Simple Product Ciphers" in Methodologies for Designing Block Ciphers and Cryptographic Protocols, </title> <type> PhD Thesis, </type> <institution> University of Toronto, </institution> <note> pp. </note> <month> 2-56 </month> <year> (1989). </year>
Reference-contexts: By contrast, we show that the quantum logic gates can always be constructed with the use of no workspace whatsoever. Similar computations in the classical setting (that use very few or no work bits) appeared in the work of Cleve <ref> [40] </ref> and Ben-Or and Cleve [41]. <p> operated upon, the gate operation is performed correctly independent of the initial state of the bits (i.e., they do not have to be "cleared" to 0 first), and they are reset to their initial values after the operations of the gate (as in the computations which occur in [41] and <ref> [40] </ref>). This fact makes constructions like the following possible.
Reference: [41] <author> Michael Ben-Or and Richard Cleve, </author> <title> "Computing algebraic formulas using a constant number of registers", </title> <journal> SIAM J. Comput. </journal> <volume> 21, </volume> <month> 54 </month> <year> (1992). </year>
Reference-contexts: By contrast, we show that the quantum logic gates can always be constructed with the use of no workspace whatsoever. Similar computations in the classical setting (that use very few or no work bits) appeared in the work of Cleve [40] and Ben-Or and Cleve <ref> [41] </ref>. <p> gate are operated upon, the gate operation is performed correctly independent of the initial state of the bits (i.e., they do not have to be "cleared" to 0 first), and they are reset to their initial values after the operations of the gate (as in the computations which occur in <ref> [41] </ref> and [40]). This fact makes constructions like the following possible.
Reference: [42] <editor> Corresponding with the definition in the previous section, </editor> <title> the top two wires contain the input bits x 1 and x 2 , and the third wire contains the input y. </title>
Reference-contexts: (U ) gates and Toffoli gates in quantum networks as follows. 7 v U v v In all the gate-array diagrams shown in this paper, time proceeds from left to right The first network contains a ^ 2 (U ) gate and the second one contains a 3-bit Toffoli gate <ref> [42] </ref>. The third and fourth networks contain a ^ 0 (U ) and a 2-bit reversible exclusive-or (simply called XOR henceforth) gate, respectively. The XOR gate is introduced as the "measurement gate" in [24], and will play a very prominent role in many of the constructions we describe below.
Reference: [43] <institution> The angle-halving of this definition conforms to the usual relation between operations in SO(3) and SU(2). </institution> <note> See J. </note> <author> Mathews and R. L. Walker, </author> <title> Mathematical Methods of Physics, (2nd edition, </title> <editor> W. A. </editor> <publisher> Benjamin, </publisher> <address> Menlo Park, CA, </address> <year> 1970), </year> <title> p. 464, for the use of SO(3) language (rigid body rotations) to describe SU(2) operations. </title>
Reference-contexts: matrix must be 1, which implies e iffi = 1, so the first matrix in the product can be absorbed into the second one.2 Definition: In view of the above lemma, we define the following. * R y () = cos =2 sin =2 ! (a rotation by around ^y <ref> [43] </ref>). * R z (ff) = e iff=2 0 ! (a rotation by ff around ^z). * Ph (ffi) = e iffi 0 0 e iffi ! (a phase-shift with respect to ffi). * x = 0 1 ! (a "negation", or Pauli matrix). * I = 1 0 ! (the <p> Clearly, Lemma 5.1 immediately yields a more efficient simulation for all special unitary matrices. For example, the "x-axis rotation matrix" (to use the language suggested by the mapping between SU (2) and SO (3), the group of rigid-body rotations <ref> [43] </ref>) R x () = cos =2 i sin =2 ! 2 ) R y () R z ( is special unitary. (R x is of special interest because ^ 2 (iR x ) is the "Deutsch gate"[24], which was shown to be universal for quantum logic.) For other specific SU
Reference: [44] <author> D. P. DiVincenzo and J. Smolin, </author> <title> "Results on two-bit gate design for quantum comput ers", </title> <booktitle> Proceedings of the Workshop on Physics and Computation, </booktitle> <address> PhysComp '94 (Los Alamitos: </address> <publisher> IEEE Comp. Soc. Press, </publisher> <year> 1994), </year> <note> p. 14. (cond-mat/9409111) 31 </note>
Reference-contexts: Gates congruent to ^ 2 ( x ) modulo phase shifts have been previously investigated in <ref> [44] </ref>. The following is a more efficient simulation of a gate congruent to ^ 2 ( x ) modulo phase shifts: l v l l l v A A A y A y where A = R y ( 4 ). <p> In no case do we have a proof that this is the most economical method for producing each of these functions; however, for most of these examples we have compelling evidence from numerical study that these are in fact minimal <ref> [44] </ref>. In the course of doing these numerical investigations we discovered a number of interesting additional facts about two-bit gate constructions.
References-found: 44

