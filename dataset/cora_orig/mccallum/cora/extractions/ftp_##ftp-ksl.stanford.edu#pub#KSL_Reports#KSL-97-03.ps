URL: ftp://ftp-ksl.stanford.edu/pub/KSL_Reports/KSL-97-03.ps
Refering-URL: http://www-ksl-svc.stanford.edu:5915/doc/project-papers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: -axf, fikes, rice-@ksl.stanford.edu  
Title: Tools For Assembling Modular Ontologies in Ontolingua  
Author: Adam Farquhar, Richard Fikes, James Rice 
Address: Stanford, CA 94305  
Affiliation: Knowlededge Systems Laboratory Stanford University  
Abstract: The Ontolingua ontology development environment provides a suite of ontology authoring tools and a library of modular reusable ontologies. The environment is available as a World Wide Web service and has a substantial user community. The tools in Ontolingua are oriented toward authoring of ontologies by assembling and extending ontologies obtained from the library. In this paper, we describe Ontolingua's formalism for combining the axioms, definitions, and nonlogical symbols of multiple ontologies. We also describe Ontolingua's facilities that enable renaming of nonlogical symbols from multiple component ontologies and that disambiguate symbol references during input and output. These features of Ontolingua support cyclic inclusion graphs and enable users to extend ontologies in multiple ways such as adding simplifying assumptions and extending the domains of polymorphic operators. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Farquhar, A., Fikes, R., & Rice, J. </author> <title> The Ontolingua Server: a Tool for Collaborative Ontology Construction. </title> <booktitle> Proceedings of the Tenth Knowledge Acquisition for Knowledge-Based Systems Workshop. </booktitle> <address> Banff, Canada. </address> <month> November 9 14, </month> <year> 1996. </year>
Reference-contexts: We have developed an ontology development environment called Ontolingua (Gruber 1992) <ref> (Farquhar et al. 1996) </ref> that provides a suite of ontology authoring tools and a library of modular reusable ontologies.
Reference: <author> Genesereth, M. R. </author> <year> (1990). </year> <title> The Epikit Manual. </title> <publisher> Epistemics, Inc. </publisher> <address> Palo Alto, CA. </address>
Reference-contexts: In Example 3, the axioms in the vectors ontology are about the same + operator as the axioms in KIF-Numbers. A fairly common extension is to allow a directed acyclic graph (DAG) of inclusion relations between theories such as provided by Genesereths Epikit <ref> (Genesereth 1990) </ref>. That mechanism supports modularity, restrictions, and incompatible augmentations. It has two drawbacks: First, no cycles are allowed among theories.
Reference: <author> Genesereth, M. R. and R. E. Fikes. </author> <year> (1992). </year> <title> Knowledge Interchange Format, Version 3.0 Reference Manual. </title> <institution> Logic-92-1. Computer Science Department, Stanford University. </institution>
Reference-contexts: The Ontolingua Representation Language The original Ontolingua language, as described in (Gruber 1993), was designed to support the design and specification of ontologies with a clear logical semantics. To accomplish this, Gruber extended the Knowledge Interchange Format (KIF) <ref> (Genesereth and Fikes 1992) </ref>. KIF is a monotonic first order logic with set theory that has a linear ASCII syntax; includes a sublanguage for defining named functions, relations, and object constants; and supports reasoning about relations, functions, and expressions by including them in the domain of discourse.
Reference: <author> Gruber, T. R. </author> <year> (1992). </year> <title> Ontolingua: A mechanism to Support Portable Ontologies. </title> <type> KSL 91-66. </type> <institution> Stanford University, Knowledge Systems Laboratory. </institution>
Reference-contexts: We have developed an ontology development environment called Ontolingua <ref> (Gruber 1992) </ref> (Farquhar et al. 1996) that provides a suite of ontology authoring tools and a library of modular reusable ontologies.
Reference: <author> MacGregor, R. </author> <year> (1990). </year> <note> LOOM Users Manual. </note> <institution> ISI/WP-22. USC/Information Sciences Institute. </institution>
Reference-contexts: For instance, an ontology for scientific course work might include ontologies for chemistry and academics, both of which define tests, but in different ways. There must be a way of discriminating between tests in chemistry and tests in academics. The LOOM system <ref> (MacGregor 1990) </ref> provides a DAG of inclusion relationships, but extends the simple approach by allowing references to nonlogical symbols in ontologies that have not been included. Referencing a symbol in an unincluded ontology, however, does not include all of the axioms from that ontology, but only minimal type information.
Reference: <author> Mitchell, T. M., J. Allen, P. Chalasani, J. Cheng, O. Etzioni, M. Ringuette, and J. C. Schlimmer. </author> <year> (1989). </year> <title> Theo: A Framework for Self-Improving Systems: </title> <institution> National Science Foundation, Digital Equipment Corporation. </institution>
Reference-contexts: The easiest and simplest approach is to provide no explicit support for modularizing represented knowledge let the author beware. For instance, the THEO system <ref> (Mitchell et al. 1989) </ref> uses a single knowledge base and a single set of axioms.

References-found: 6

