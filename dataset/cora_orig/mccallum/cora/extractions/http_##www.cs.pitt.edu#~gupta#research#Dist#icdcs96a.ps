URL: http://www.cs.pitt.edu/~gupta/research/Dist/icdcs96a.ps
Refering-URL: http://www.cs.pitt.edu/~gupta/research/dist.html
Root-URL: 
Title: On-line Avoidance of the Intrusive Effects of Monitoring on Runtime Scheduling Decisions  
Author: Wanqing Wu Madalene Spezialetti Rajiv Gupta 
Address: Pittsburgh Pittsburgh, PA 15260 Hartford, CT 06106 Pittsburgh, PA 15260  
Affiliation: Dept. of Comp. Science Math., Comp. and Eng. Center Dept. of Comp. Science University of Pittsburgh Trinity College University of  
Abstract: Distributed programs are often instrumented for collecting information to assist in analyzing the behavior of an application. However, the act of monitoring a process introduces intrusive overhead that delays the times at which actions occur in a monitored execution in comparison to the times at which they occur in an unmonitored execution. These delays can alter the actions of individual processes and the behavior of the system as a whole. The overall behavior of process scheduling is determined by the choices a sched-uler makes in terms of when particular processes will be given access to the processor. Monitoring introduced delays can result in different scheduling choices being made which can in turn lead to changes in the behavior of processes throughout the distributed system. This paper presents intrusion removal techniques which are designed to accommodate monitoring delays in an attempt to minimize the intrusion on the scheduling and execution behavior of the monitored computation. Keywords monitoring actions, intrusion, distributed programs, message passing, local schedulers. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. Cristain and C. </author> <title> Fetzer, "Probabilistic Internal Clock Synchronization," </title> <booktitle> 13th IEEE SRDS, </booktitle> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: In order to maintain intrusion time a processor requires knowledge of the intrusion times at remote processors. In the absence of a global clock, there will be a variance between the perceptions of the actual time at various processors. Clock synchronization algorithms are used to reduce this variance <ref> [1] </ref>. Process Scheduling Module. This module handles the maintenance of the process queue and the scheduling and preemption of processes. It consists of three components: the Process Queue, the Round Robin Scheduler and the Interrupt Timer.
Reference: [2] <author> J.A. Gannon, K.J. Williams, M.S. Andersland, T.L. Casavant, and J.E. Lummp, </author> <title> "Trace Recovery in MultiProcessing Systems: Architectural Considerations," </title> <booktitle> Int'l Conf. on Par. Proc., </booktitle> <volume> Vol. II, pp.99-102, </volume> <year> 1994. </year>
Reference-contexts: An approach for minimizing the intrusive effects of monitoring is to use software techniques for estimating the true execution timing of a computation by compensating for intrusion-induced effects. The compensation can be performed off-line by postprocessing execution traces collected by running the instrumented program <ref> [5, 2] </ref>. A drawback of off-line compensation is that the activity captured by the trace reflects behavior which may have been altered due to monitoring intrusion.
Reference: [3] <author> L. Lamport, </author> <title> "Time, clocks and the ordering of events in distributed systems," </title> <journal> CACM, </journal> <volume> 21(7) </volume> <pages> 558-565, </pages> <year> 1978. </year>
Reference: [4] <author> R. Gupta and M. Spezialetti, </author> <title> "Dynamic Techniques for Minimizing the Intrusive Affects of Monitoring Actions," </title> <booktitle> IEEE-CS 15th ICDCS, </booktitle> <address> pp.368-376, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: Previously we have considered two approaches for addressing the limitations of the off-line compensation approach: static analysis techniques were developed to identify program points at which monitoring actions can be carried out non-intrusively [6] and an on-line compensation approach was developed to reduce the impact of monitoring <ref> [4] </ref>. The on-line approach in [4] is limited to the situation in which no processes can be created dynamically and at most one process is mapped to each processing site. <p> have considered two approaches for addressing the limitations of the off-line compensation approach: static analysis techniques were developed to identify program points at which monitoring actions can be carried out non-intrusively [6] and an on-line compensation approach was developed to reduce the impact of monitoring <ref> [4] </ref>. The on-line approach in [4] is limited to the situation in which no processes can be created dynamically and at most one process is mapped to each processing site.
Reference: [5] <author> A. Malony and D. Reed, </author> <title> "Models for Performance Perturbation Analysis," </title> <booktitle> ACM/ONR Workshop on Parallel and Distributed Debugging, </booktitle> <address> pp.15-25, </address> <year> 1991. </year>
Reference-contexts: An approach for minimizing the intrusive effects of monitoring is to use software techniques for estimating the true execution timing of a computation by compensating for intrusion-induced effects. The compensation can be performed off-line by postprocessing execution traces collected by running the instrumented program <ref> [5, 2] </ref>. A drawback of off-line compensation is that the activity captured by the trace reflects behavior which may have been altered due to monitoring intrusion.
Reference: [6] <author> M. Spezialetti and R. Gupta, </author> <title> "Perturbation Analysis: </title>
Reference-contexts: Fairness of a scheduling algorithm is an example of such a characteristic. Previously we have considered two approaches for addressing the limitations of the off-line compensation approach: static analysis techniques were developed to identify program points at which monitoring actions can be carried out non-intrusively <ref> [6] </ref> and an on-line compensation approach was developed to reduce the impact of monitoring [4]. The on-line approach in [4] is limited to the situation in which no processes can be created dynamically and at most one process is mapped to each processing site.
References-found: 6

