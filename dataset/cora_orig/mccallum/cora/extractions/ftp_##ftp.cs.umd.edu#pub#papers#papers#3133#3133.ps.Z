URL: ftp://ftp.cs.umd.edu/pub/papers/papers/3133/3133.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Title: Data Structures for Dynamic Queries: An Analytical and Experimental Evaluation  
Author: Vinit Jain and Ben Shneiderman 
Keyword: Index Terms Dynamic queries, data structures, main memory database, search overhead quantification, storage overhead quantification.  
Address: College Park, MD 20742  
Affiliation: Human-Computer Interaction Laboratory Department of Computer Science Institute for Systems Research University of Maryland  
Abstract: Dynamic Queries is a querying technique for doing range search on multi-key data sets. It is a direct manipulation mechanism where the query is formulated using graphical widgets and the results are displayed graphically in real time. This paper evaluates four data structures, the multilist, the grid file, k-d tree and the quad tree used to organize data in high speed storage for dynamic queries. The effect of factors like size, distribution and dimensionality of data on the storage overhead and the speed of search is explored. A way of estimating the storage and the search overheads using analytical models is presented. These models are verified to be correct by empirical data. Results indicate that multilists are suitable for small (few thousand points) data sets irrespective of the data distribution. For large data sets the grid files are excellent for uniformly distributed data, and trees are good for skewed data distributions. There was no significant difference in performance between the tree structures.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Ahlberg, C. Williamson, and B. Shneiderman, </author> <title> "Dynamic Queries for Information Exploration: An Implementation and Evaluation", </title> <booktitle> Proc. CHI'92, ACM, </booktitle> <address> New York, </address> <year> 1992, </year> <pages> pp. 619-626. </pages>
Reference-contexts: 1 Introduction Most users of database systems must learn a querying language which they use to select and retrieve information. A query language is a special purpose language for constructing queries to retrieve information from a database of information stored in the computer [21]. 1.1 Dynamic Queries Dynamic queries <ref> [1] </ref> is a novel way to explore information. This mechanism is well suited for multi-key data sets where the results of the search fit completely on a single screen. Figure 1 shows an application of dynamic queries in searching a real estate database.
Reference: [2] <author> N. Beckmann, H. P. Kriegel, R. Schneider and B. Seeger, </author> <title> "The R*-Tree: an Efficient and Robust Access Method for Points and Rectangles", </title> <booktitle> ACM SIGMOD, </booktitle> <address> Atlantic City NJ, </address> <year> 1990, </year> <pages> pp. 322-331. </pages>
Reference: [3] <author> D.A. Beckley, M.W. Evans and V.K. Raman, </author> <title> "Multikey Retrieval from K-d Trees and Quad-Trees", </title> <booktitle> Proc. ACM SIGMOD International Conference on the Management of Data, </booktitle> <address> Austin, </address> <year> 1985, </year> <pages> pp. 291-301. </pages>
Reference: [4] <author> J. L. Bentley, </author> <title> "Multidimensional Binary Search Trees Used for Associative Searching", </title> <journal> Communications of the ACM, </journal> <volume> Vol. 18, No. 9, </volume> <year> 1975, </year> <pages> pp. 509-517. </pages>
Reference: [5] <author> J. L. Bentley and D. F. Stanat, </author> <title> "Analysis of Range Searches in Quad Trees", </title> <journal> Information Processing Letters, </journal> <volume> Vol. 3, No. 6, </volume> <year> 1975, </year> <pages> pp. 170-173. </pages>
Reference: [6] <author> J. L. Bentley, D. F. Stanat and E. H. Williams Jr., </author> <title> "The Complexity of Fixed-Radius Near Neighbor Searching", </title> <journal> Information Processing Letters, </journal> <volume> Vol. 6, No. 6, </volume> <month> December </month> <year> 1977, </year> <pages> pp. 209-212. </pages>
Reference: [7] <author> J. L. Bentley, </author> <title> "Decomposable Searching Problems", </title> <journal> Information Processing Letters, </journal> <volume> Vol. 8, No. 5, </volume> <year> 1979, </year> <pages> pp. 133-136. </pages>
Reference: [8] <author> J. Bentley and J. Friedman, </author> <title> "Data Structures for Range Searching", </title> <journal> Computing Surveys, </journal> <volume> Vol. 11, No. 4, </volume> <month> December </month> <year> 1979, </year> <pages> pp. 397-409. </pages>
Reference: [9] <author> J. Bentley and H. Maurer, </author> <title> "Efficient Worst-Case Data Structures for Range Searching", </title> <journal> Acta Informatica, </journal> <volume> Vol. 13, No. 2, </volume> <year> 1980, </year> <pages> pp. 155-168. 22 </pages>
Reference: [10] <author> S. Dandamudi and P. Sorenson, </author> <title> "Algorithms for BD Trees", </title> <journal> Software-Practice and Experience, </journal> <volume> Vol. 16, No. 12, </volume> <month> December </month> <year> 1986, </year> <pages> pp. 1077-1096. </pages>
Reference: [11] <author> C. Faloutsos and P. Bhagwat, </author> <title> "Declustering Using Fractals", </title> <booktitle> 2nd International Conference on Parallel and Distributed Information Sysems, </booktitle> <address> San Diego CA, </address> <year> 1993, </year> <pages> pp. 18-25. </pages>
Reference: [12] <author> R. A. Finkel and J. L. Bentley, </author> <title> "Quad Trees , A Data Structure for Retrieval on Composite Keys", </title> <journal> Acta Informatica, </journal> <volume> Vol. 4, </volume> <year> 1974, </year> <pages> pp. 1-9. </pages>
Reference: [13] <author> H. Garcia-Molina and K. Salem, </author> <title> "Main Memory Database Systems: An Overview", </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> Vol. 4, No. 6, </volume> <year> 1992, </year> <pages> pp. 509-516. </pages>
Reference: [14] <author> A. Guttman, "R-Trees: </author> <title> A Dynamic Index Structure for Spatial Searching", </title> <booktitle> Proc. ACM SIGMOD Conference, </booktitle> <address> Boston, </address> <year> 1984, </year> <pages> pp. 47-57. </pages>
Reference: [15] <author> D. E. Knuth, </author> <booktitle> "The Art of Computer Programming, </booktitle> <volume> Vol. </volume> <month> 3: </month> <title> Sorting and Searching", </title> <publisher> Addison-Wesley, </publisher> <year> 1973. </year>
Reference: [16] <author> D. T. Lee and C. K. Wong, </author> <title> "Worst-Case Analysis for Region and Partial Region Searches in Multidimensional Binary Search Trees and Balanced Quad Trees", </title> <journal> Acta Informatica, </journal> <volume> Vol. 9, </volume> <year> 1977, </year> <pages> pp. 23-29. </pages>
Reference: [17] <author> D. Lomet, </author> <title> "A Review of Recent Work on Multi-attribute Access Methods", </title> <booktitle> SIGMOD RECORD, </booktitle> <volume> Vol. 21, No. 3, </volume> <month> September </month> <year> 1992, </year> <pages> pp. 56-63. </pages>
Reference: [18] <author> V. Y. Lum, </author> <title> "Multi-attribute Retrieval with Combined Indexes", </title> <journal> Communications of the ACM, </journal> <volume> Vol. 13, No. 11, </volume> <year> 1970, </year> <pages> pp. 660-665. </pages>
Reference: [19] <author> J. Nievergelt and H. Hinterberger, </author> <title> "The Grid File: An Adaptable, Symmetric Multikey File Structure", </title> <journal> ACM Transactions on Database Systems, </journal> <volume> Vol. 9, No. 1, </volume> <month> March </month> <year> 1984, </year> <pages> pp. 38-71. </pages>
Reference: [20] <author> M. Regnier, </author> <title> "Analysis of Grid File Algorithms", </title> <journal> BIT, </journal> <volume> Vol. 25, </volume> <year> 1985, </year> <pages> pp. 335-357. </pages>
Reference: [21] <author> P. Reisner, </author> <title> "Human Factors Studies of Database Query Languages: A Survey and Assessment", </title> <journal> Computing Surveys, </journal> <volume> Vol. 13, No. 1, </volume> <year> 1981, </year> <pages> pp. 13-31. </pages>
Reference-contexts: 1 Introduction Most users of database systems must learn a querying language which they use to select and retrieve information. A query language is a special purpose language for constructing queries to retrieve information from a database of information stored in the computer <ref> [21] </ref>. 1.1 Dynamic Queries Dynamic queries [1] is a novel way to explore information. This mechanism is well suited for multi-key data sets where the results of the search fit completely on a single screen. Figure 1 shows an application of dynamic queries in searching a real estate database.
Reference: [22] <author> H. Samet, </author> <title> "The Design and Analysis of Spatial Data Structures", Chapter 2, </title> <publisher> Addison Wesley 1989. </publisher>
Reference: [23] <author> P. Scheuermann and M. Ouksel, </author> <title> "Multidimensional B-Trees for Associative Searching in Database Systems", </title> <journal> Information Systems, </journal> <volume> Vol. 7, No. 2, </volume> <year> 1982, </year> <pages> pp. 123-137. </pages>
Reference: [24] <author> B. Shneiderman, </author> <title> "Direct Manipulation: A Step Beyond Programming Languages", </title> <journal> IEEE Computer, </journal> <volume> Vol. 16, No. 8, </volume> <month> August </month> <year> 1983, </year> <pages> pp. 57-69. </pages>
Reference: [25] <author> B. Shneiderman, </author> <title> "Designing the User Interface: Strategies for effective Human-Computer Interaction", </title> <note> Second Edition, Chapter 5, Addison-Wesley 1992. 23 </note>
Reference: [26] <author> C. Williamson and B. Shneiderman, </author> <title> "The Dynamic Homefinder: Evaluating Dynamic Queries in a Real-Estate Information Exploration System", </title> <booktitle> Proc. ACM SIGIR Conference on Information Retrieval, </booktitle> <address> Copenhagen Denmark, </address> <year> 1992. </year> <month> 24 </month>
Reference-contexts: Figure 1 shows an application of dynamic queries in searching a real estate database. The query is 1 formulated using widgets such as buttons and sliders, one widget being used for every key. A study <ref> [26] </ref> was conducted which compared dynamic queries (DQ) to a natural language system known as "Q & A" and a traditional paper listing sorted by several fields. There was statistically significant difference in the performance of the DQ interface compared to the other two interfaces.
References-found: 26

