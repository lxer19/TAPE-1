URL: ftp://ftp.cs.wpi.edu/pub/techreports/97-4.ps.gz
Refering-URL: http://cs.wpi.edu/Resources/techreports/index.html
Root-URL: 
Title: The EVE Framework: View Synchronization In Evolving Environments  
Author: by Anisoara Nica Elke A. Rundensteiner 
Date: Spring 1997 (Revised Dec. 1997)  
Pubnum: WPI-CS-TR-97-4  
Abstract: Computer Science Technical Report Series WORCESTER POLYTECHNIC INSTITUTE Computer Science Department 100 Institute Road, Worcester, Massachusetts 01609-2280 
Abstract-found: 1
Intro-found: 1
Reference: [AKS96] <author> Y. Arens, C. A. Knoblock, and W.-M. Shen. </author> <title> Query Reformulation for Dynamic Information Integration. </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 6 (2/3):99-130, 1996. 36 </volume>
Reference-contexts: EVE system can be seen as an information integration system using view technology to gather and customize data across heterogeneous ISs. On this venue, related work that addresses the problem of information integration are among others the SIMS <ref> [AKS96] </ref> and SoftBot [EW94] projects. In the SIMS project, a unified schema is apriori defined and the user interaction with the system is via queries posed against the unified schema.
Reference: [BCL89] <author> J. A. Blakeley, N. Coburn, and P-A Larson. </author> <title> Updating derived relations: Detecting irrelevant and au-tonomously computable updates. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 14(3) </volume> <pages> 369-400, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: Once the underlying ISs change their capabilities, the views derived from them may become undefined. It is this problem of view evolution caused by external environment changes (at the schema level rather than at the data level as done by practically all previous work on view maintenance <ref> [BCL89, Wid95, ZGMHW95] </ref>) that we tackle in this paper. We call this the view synchronization problem [RLN97]. There are two exceptions to this previous view maintenance work for data changes, namely by Gupta et al. [GJM96] and Mohania et al. [MD96].
Reference: [CHA + 95] <author> M. J. Carey, L. M. Haas, P. M. Schwarz M. Arya, W. F. Cody, R. Fagin, Myron Flickner, A. W. Luniewski, Wayne Niblack, Dragutin Petkovic, J. H. Williams J. Thomas, and Edward L. Wimmers. </author> <title> Towards Heterogeneous Multimedia Information Systems: The Garlic Approach. </title> <booktitle> In Proceedings of the Fifth International Workshop on Research Issues in Data Engineering(RIDE): Distributed Object Management, </booktitle> <year> 1995. </year>
Reference-contexts: Similar to the University of Michigan Digital Library system [NR97] and the Garlic project <ref> [CHA + 95] </ref>, each IS registers its description expressed by this model in a Meta Knowledge Base (MKB) when joining the system.
Reference: [EW94] <author> O. Etzioni and D. Weld. </author> <title> A Softbot-Based Interface to the Internet. </title> <journal> Communication of ACM, </journal> <year> 1994. </year>
Reference-contexts: EVE system can be seen as an information integration system using view technology to gather and customize data across heterogeneous ISs. On this venue, related work that addresses the problem of information integration are among others the SIMS [AKS96] and SoftBot <ref> [EW94] </ref> projects. In the SIMS project, a unified schema is apriori defined and the user interaction with the system is via queries posed against the unified schema.
Reference: [GJM96] <author> A. Gupta, H.V. Jagadish, </author> <title> and I.S. Mumick. Data Integration using Self-Maintainable Views. </title> <booktitle> In Proceedings of International Conference on Extending Database Technology (EDBT), </booktitle> <year> 1996. </year>
Reference-contexts: We call this the view synchronization problem [RLN97]. There are two exceptions to this previous view maintenance work for data changes, namely by Gupta et al. <ref> [GJM96] </ref> and Mohania et al. [MD96]. While we assume that the evolution of the affected view definitions is triggered by capability changes of ISs, Gupta and Mohania assumed that view redefinition was explicitly requested by the user at the view site. <p> Instead they dealt with efficiently managing changes at the data level to now comply with the modified view definition. Our problem and solution thus is complimentary to work by others as once we have determined an acceptable view redefinition then algorithms proposed by others <ref> [GJM96, MD96] </ref> on how most efficiently to maintain the view, if materialized, could be applied to our system. <p> While no one has addressed the view synchronization problem as such, there are several issues we address for EVE that relate to work done before in other contexts as outlined below. Gupta et al. <ref> [GJM96] </ref> and Mohania et al. [MD96] address the problem of how most efficiently to maintain a materialized view after a view redefinition explicitly initiated by the user takes place. They study under which conditions this view maintenance can take place without requiring access to base relations, i.e., the self-maintainability issue.
Reference: [GL94] <author> C. </author> <title> Galindo-Legaria. </title> <booktitle> Outerjoins as disjunctions . Proceedings of SIGMOD, </booktitle> <year> 1994. </year>
Reference-contexts: The DIIM query language allows loosely specified queries that the DIIM system refines into executable, well-defined queries based on the capability descriptions each IS exports when joining the DIIM system. For this, the notion of connected relations is introduced as a natural extension of the concept of full disjunction <ref> [GL94] </ref>. In the default case when only natural joins are defined in the IS descriptions in the MKB it then can be shown that the semantics of these two concepts (connected rules and full disjunction) are equivalent [NR97]. AI planning techniques are used in DIIM for query refinement.
Reference: [LNR97] <author> A. J. Lee, A. Nica, and E. A. Rundensteiner. </author> <title> Keeping Virtual Information Resources Up and Running. In Proceedings of IBM Centre for Advanced Studies Conference CASCON97, </title> <type> Best Paper Award, </type> <pages> pages 1-14, </pages> <month> November </month> <year> 1997. </year>
Reference-contexts: One important and as of now not yet addressed problem for these applications is that current view technology only supports static apriori-specified view definitions meaning that views are assumed to be specified on top of a fixed environment <ref> [LNR97, RLN97] </ref>. Once the underlying ISs change their capabilities, the views derived from them may become undefined. <p> Our goal is to "preserve as much as possible" of the original view extent of the affected view definitions instead of completely disabling them with each IS change <ref> [LNR97, RLN97] </ref>. To the best of our knowledge, our work is the first to study this view synchronization problem, and no alternate framework designed to solve this problem has been put forth thus far. <p> We have designed a model for information source descriptions (MISD) <ref> [LNR97, RLN97] </ref> that is capable of describing the content and capabilities of heterogeneous ISs. <p> In [RLN97], we establish a taxonomy of view adaptation problems that identifies alternate dimensions of the problem space, and hence serves as a framework for characterizing and hence distinguishing our view synchronization problem from other (previously studied) view adaptation problems. In <ref> [LNR97] </ref>, we then lay the basis for the solutions presented in this current paper by introducing the overall EVE solution framework, in particular the idea of associating evolution preferences with view specifications. <p> The communication between EVE and the information space is via JDBC. The set of view synchronization algorithms presented in Section 7 are all fully implemented in this current prototype. The EVE system has been demonstrated at the CASCON'97 Technology Showcase in Toronto, Canada <ref> [LNR97] </ref>. 35 9.2 Conclusion Our effort is the first work to study the new problem of view adaptation in dynamic environments. This problem, which we call view synchronization, corresponds to the process of adapting view definitions triggered by capability changes of ISs.
Reference: [LSK95] <author> A. Y. Levy, D. Srivastava, and T. Kirk. </author> <title> Data Model and Query Evaluation in Global Information Systems. </title> <journal> Journal of Intelligent Information Systems. </journal> <note> Special Issue on Networked Information Discovery and Retrieval, </note> <year> 1995. </year>
Reference-contexts: Their algorithms could potentially be applied in the context of our overall framework, once EVE has determined an acceptable view redefinition. Their results are thus complimentary to our work. In the work of Levy et al. <ref> [LSK95] </ref>, a global information system is designed using the world-view approach where the external ISs are described relative to the unified world-view relations. <p> The problem of view evolution as posed by our work, i.e., that the world view itself may evolve, is not discussed in <ref> [LSK95] </ref>. Papakonstantinou et al. [PGMW95, PGMU96] are pursuing the goal of information gathering across multiple 34 sources. Their proposed language OEM assumes queries that explicitly list the source identifiers of the database from which the data is to be taken.
Reference: [MD96] <author> M. Mohania and G. Dong. </author> <title> Algorithms for Adapting Materialized Views in Data Warehouses. </title> <booktitle> International Symposium on Cooperative Database Systems for Advanced Applications, </booktitle> <month> December </month> <year> 1996. </year>
Reference-contexts: We call this the view synchronization problem [RLN97]. There are two exceptions to this previous view maintenance work for data changes, namely by Gupta et al. [GJM96] and Mohania et al. <ref> [MD96] </ref>. While we assume that the evolution of the affected view definitions is triggered by capability changes of ISs, Gupta and Mohania assumed that view redefinition was explicitly requested by the user at the view site. <p> Instead they dealt with efficiently managing changes at the data level to now comply with the modified view definition. Our problem and solution thus is complimentary to work by others as once we have determined an acceptable view redefinition then algorithms proposed by others <ref> [GJM96, MD96] </ref> on how most efficiently to maintain the view, if materialized, could be applied to our system. <p> While no one has addressed the view synchronization problem as such, there are several issues we address for EVE that relate to work done before in other contexts as outlined below. Gupta et al. [GJM96] and Mohania et al. <ref> [MD96] </ref> address the problem of how most efficiently to maintain a materialized view after a view redefinition explicitly initiated by the user takes place. They study under which conditions this view maintenance can take place without requiring access to base relations, i.e., the self-maintainability issue.
Reference: [NLR97] <author> A. Nica, A.J . Lee, and E. A. Rundensteiner. </author> <title> View Synchronization with Complex Substitution Algorithms. </title> <type> Technical Report WPI-CS-TR-97-8, </type> <institution> Worcester Polytechnic Institute, Dept. of Computer Science, </institution> <year> 1997. </year>
Reference-contexts: In our framework, each IS will via the wrapper interface notify the MKB of any such capability changes so that they can be properly registered in the MKB. The MKB Evolver module will then take appropriate actions to update the MKB <ref> [NLR97] </ref>. For example, deleting an attribute A from a relation S may cause the MKB evolver to modify a subset constraint between two relations S and R, e.g., "S R", into the constraint "S (project all attributes of R besides A from R)".
Reference: [NLR98] <author> A. Nica, A. J. Lee, and E. A. Rundensteiner. </author> <title> View Preservation in Evolveable Large-Scale Information Systems. </title> <booktitle> To appear in Proceedings of International Conference on Extending Database Technology (EDBT'98), </booktitle> <address> Valencia, Spain, </address> <month> March </month> <year> 1998. </year>
Reference: [NR97] <author> A. Nica and E. A. Rundensteiner. </author> <title> On Translating Loosely-Specified Queries into Executable Plans in Large-Scale Information Systems. </title> <booktitle> In Proceedings of Second IFCIS International Conference on Cooperative Information Systems CoopIS'97, </booktitle> <pages> pages 213-222, </pages> <month> June </month> <year> 1997. </year>
Reference-contexts: Similar to the University of Michigan Digital Library system <ref> [NR97] </ref> and the Garlic project [CHA + 95], each IS registers its description expressed by this model in a Meta Knowledge Base (MKB) when joining the system. <p> The IS descriptions collected in the MKB form an information pool that is critical in finding appropriate replacements for view components when view definitions become undefined (See Section 5) and for translating loosely-specified user requests into precise query plans <ref> [NR97] </ref>. MKB Evolution. When an underlying IS makes a change to its capabilities (e.g., adds a new relation), the MKB no longer reveals the IS correctly in the sense that the meta knowledge describing the IS and the actual capabilities of the IS are distinct. <p> * A relation R appears in the FROM clause only once. * At least one attribute of R is referenced in the SELECT and/or WHERE clause, i.e., no redundant relations are listed in the FROM clause. * We consider precisely-defined view queries only and not loosely-specified ones as studied in <ref> [NR97] </ref>. We believe our solution approach could be easily adapted for a more general case when the assumptions are relaxed. <p> Thus the view evolution problem of EVE is not an issue in TSE. In the University of Michigan Digital Library project <ref> [NR98, NR97] </ref>, we have proposed the Dynamic Information Integration Model (DIIM) to allow ISs to dynamically participate in an information integration system. <p> In the default case when only natural joins are defined in the IS descriptions in the MKB it then can be shown that the semantics of these two concepts (connected rules and full disjunction) are equivalent <ref> [NR97] </ref>. AI planning techniques are used in DIIM for query refinement.
Reference: [NR98] <author> A. Nica and E. A. Rundensteiner. </author> <title> Loosely-Specified Query Processing in Large-Scale Information Systems. </title> <journal> International Journal of Cooperative Information Systems, </journal> <year> 1998. </year>
Reference-contexts: Further, we introduce the concept of a join constraint in our model that allows expressing default conditions among external relations that should be used by the system to attempt to integrate information instead of evaluating (blindly) all possible Cartesian combinations based on value matches (full disjunction) <ref> [NR98] </ref>. The problem of view evolution as posed by our work, i.e., that the world view itself may evolve, is not discussed in [LSK95]. Papakonstantinou et al. [PGMW95, PGMU96] are pursuing the goal of information gathering across multiple 34 sources. <p> Thus the view evolution problem of EVE is not an issue in TSE. In the University of Michigan Digital Library project <ref> [NR98, NR97] </ref>, we have proposed the Dynamic Information Integration Model (DIIM) to allow ISs to dynamically participate in an information integration system.
Reference: [PGMU96] <author> Y. Papakonstantinou, H. Garcia-Molina, and J. Ullman. Medmaker: </author> <title> A Mediation System Based on Declarative Specifications. </title> <booktitle> In Proceedings of IEEE International Conference on Data Engineering, </booktitle> <year> 1996. </year>
Reference-contexts: The problem of view evolution as posed by our work, i.e., that the world view itself may evolve, is not discussed in [LSK95]. Papakonstantinou et al. <ref> [PGMW95, PGMU96] </ref> are pursuing the goal of information gathering across multiple 34 sources. Their proposed language OEM assumes queries that explicitly list the source identifiers of the database from which the data is to be taken.
Reference: [PGMW95] <author> Y. Papakonstantinou, H. Garcia-Molina, and J. Widom. </author> <title> Object Exchange Across Heterogeneous Information Sources. </title> <booktitle> In Proceedings of IEEE International Conference on Data Engineering, </booktitle> <pages> pages 251-260, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: The problem of view evolution as posed by our work, i.e., that the world view itself may evolve, is not discussed in [LSK95]. Papakonstantinou et al. <ref> [PGMW95, PGMU96] </ref> are pursuing the goal of information gathering across multiple 34 sources. Their proposed language OEM assumes queries that explicitly list the source identifiers of the database from which the data is to be taken.
Reference: [RLN97] <author> E. A. Rundensteiner, A. J. Lee, and A. </author> <title> Nica. On Preserving Views in Evolving Environments. </title> <booktitle> In Proceedings of 4th Int. Workshop on Knowledge Representation Meets Databases (KRDB'97): Intelligent Access to Heterogeneous Information, pages 13.1-13.11, </booktitle> <address> Athens, Greece, </address> <month> August </month> <year> 1997. </year>
Reference-contexts: One important and as of now not yet addressed problem for these applications is that current view technology only supports static apriori-specified view definitions meaning that views are assumed to be specified on top of a fixed environment <ref> [LNR97, RLN97] </ref>. Once the underlying ISs change their capabilities, the views derived from them may become undefined. <p> It is this problem of view evolution caused by external environment changes (at the schema level rather than at the data level as done by practically all previous work on view maintenance [BCL89, Wid95, ZGMHW95]) that we tackle in this paper. We call this the view synchronization problem <ref> [RLN97] </ref>. There are two exceptions to this previous view maintenance work for data changes, namely by Gupta et al. [GJM96] and Mohania et al. [MD96]. <p> Our goal is to "preserve as much as possible" of the original view extent of the affected view definitions instead of completely disabling them with each IS change <ref> [LNR97, RLN97] </ref>. To the best of our knowledge, our work is the first to study this view synchronization problem, and no alternate framework designed to solve this problem has been put forth thus far. <p> We have designed a model for information source descriptions (MISD) <ref> [LNR97, RLN97] </ref> that is capable of describing the content and capabilities of heterogeneous ISs. <p> In <ref> [RLN97] </ref>, we establish a taxonomy of view adaptation problems that identifies alternate dimensions of the problem space, and hence serves as a framework for characterizing and hence distinguishing our view synchronization problem from other (previously studied) view adaptation problems.
Reference: [RR95] <author> Y. G. Ra and E. A. Rundensteiner. </author> <title> A Transparent Object-Oriented Schema Change Approach Using View Schema Evolution. </title> <booktitle> In IEEE International Conference on Data Engineering, </booktitle> <pages> pages 165-172, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: None of the two projects address the particular problem of evolution under capability changes of participating external ISs. We give a solution for a related problem in our transparent schema evolution (TSE) project <ref> [RR95, RR97] </ref>, namely, to use view technology to handle schema changes transparently. However, this TSE work is all done in a centralized environment, assuming one single global database that is cooperating, i.e., that is maintaining all information possibly still used by any views defined on top of it.
Reference: [RR97] <author> Y. G. Ra and E. A. Rundensteiner. </author> <title> A transparent schema-evolution system based on object-oriented view technology. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <month> September </month> <year> 1997. </year>
Reference-contexts: None of the two projects address the particular problem of evolution under capability changes of participating external ISs. We give a solution for a related problem in our transparent schema evolution (TSE) project <ref> [RR95, RR97] </ref>, namely, to use view technology to handle schema changes transparently. However, this TSE work is all done in a centralized environment, assuming one single global database that is cooperating, i.e., that is maintaining all information possibly still used by any views defined on top of it.
Reference: [Ull89] <author> J.D. Ullman. </author> <title> Principle of Database and Knowledge-Base Systems. </title> <publisher> Computer Science Press, </publisher> <year> 1989. </year>
Reference-contexts: Then, we have that V V 00 V 0 for any database instance. The proof of this statement follows immediately from the theorem of containment for conjunctive queries with built-in predicate given by Ullman in <ref> [Ull89] </ref>.
Reference: [Wid95] <author> J. Widom. </author> <title> Research Problems in Data Warehousing. </title> <booktitle> In Proceedings of International Conference on Information and Knowledge Management, </booktitle> <pages> pages 25-30, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: We would also like to thank our industrial sponsors, in particular, IBM and Informix. 1 internetworked information sources (ISs) <ref> [Wid95] </ref>, such as the World Wide Web. There is generally a large variety and number of ISs in these modern environments, each modeled by diverse data models and each supporting different query interfaces and query processing capabilities. <p> In order to provide efficient information access in such environments, relevant data is often retrieved from several sources, integrated as necessary, and then materialized into what is called a view in database terminology <ref> [Wid95] </ref>. In fact, businesses are beginning to boom that focus exactly on this type of "middle layer" service by offering to collect related information (about products or services) from multiple sources and integrating it into an on-line resource (view) easily accessible by potential information seekers. <p> However, views in such evolving environments introduce new challenges to the database community <ref> [Wid95] </ref>. One important and as of now not yet addressed problem for these applications is that current view technology only supports static apriori-specified view definitions meaning that views are assumed to be specified on top of a fixed environment [LNR97, RLN97]. <p> Once the underlying ISs change their capabilities, the views derived from them may become undefined. It is this problem of view evolution caused by external environment changes (at the schema level rather than at the data level as done by practically all previous work on view maintenance <ref> [BCL89, Wid95, ZGMHW95] </ref>) that we tackle in this paper. We call this the view synchronization problem [RLN97]. There are two exceptions to this previous view maintenance work for data changes, namely by Gupta et al. [GJM96] and Mohania et al. [MD96].
Reference: [ZGMHW95] <author> Y. Zhuge, H. Garcia-Molina, J. Hammer, and J. Widom. </author> <title> View Maintenance in a Warehousing Environment. </title> <booktitle> In Proceedings of SIGMOD, </booktitle> <pages> pages 316-327, </pages> <month> May </month> <year> 1995. </year> <month> 37 </month>
Reference-contexts: Once the underlying ISs change their capabilities, the views derived from them may become undefined. It is this problem of view evolution caused by external environment changes (at the schema level rather than at the data level as done by practically all previous work on view maintenance <ref> [BCL89, Wid95, ZGMHW95] </ref>) that we tackle in this paper. We call this the view synchronization problem [RLN97]. There are two exceptions to this previous view maintenance work for data changes, namely by Gupta et al. [GJM96] and Mohania et al. [MD96].
References-found: 21

