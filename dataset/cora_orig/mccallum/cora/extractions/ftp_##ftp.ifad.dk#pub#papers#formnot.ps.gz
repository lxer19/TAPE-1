URL: ftp://ftp.ifad.dk/pub/papers/formnot.ps.gz
Refering-URL: http://www.ifad.dk/publications/publications.html
Root-URL: 
Email: E-mail: peter@ifad.dk  
Title: An Event Structuring Approach to Real-Time Design  
Author: Peter Gorm Larsen 
Address: Munkebjergvnget 17, DK-5230 Odense M, Denmark  
Affiliation: IFAD Institute of Applied Computer Science  
Abstract: In the development of real-time systems it is very important to be able to write down the design decisions. Such design decisions are often written in a natural language. In general this results in a voluminous and ambiguous description of the system. We believe that such informal descriptions with advantage can be formalized. The basic idea is to have a number of formal notations in which the designer stepwise can refine the given specification. For each of the formal notations more and more design decisions are made and noted down for a limited aspect of the problem. The other design decisions will then be postponed to a later stage of development where that aspect is taken into account. In this paper we will show an example of how such formal notations could be defined for the design of real-time systems. The idea behind these notations is based on an event-action model and it will therefore be most appropriate for the development of reactive systems. 
Abstract-found: 1
Intro-found: 1
Reference: [BSIVDM90] <institution> VDM Specification Language - Proto-Standard. </institution> <type> Technical Report, </type> <institution> British Standards Institution, </institution> <month> February </month> <year> 1990. </year> <note> BSI IST/5/50. </note>
Reference-contexts: The data part in standard LOTOS is described in an algebraic specification language called ACT-ONE (cf. [Ehrig&85]). Since algebraic specifications also are hard to understand for practitioners this part has been replaced with a subset of a model-oriented specification language called BSI/VDM SL 8 (cf. [Larsen&89] and <ref> [BSIVDM90] </ref>). Finally standard LOTOS has a notion of action prefix which in our opinion decreases the readability (at least for our purpose) 9 . Therefore we have not adopted this restriction. Our syntax also has restrictions compared to standard LOTOS.
Reference: [Ehrig&85] <author> H. Ehrig and B. Mahr. </author> <title> Fundamentals of Algebraic Specifications 1. </title> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference-contexts: Recursion has been replaced with iteration because of more common usage in industrial applications. In addition recursion is in general badly understood by practitioners. The data part in standard LOTOS is described in an algebraic specification language called ACT-ONE (cf. <ref> [Ehrig&85] </ref>). Since algebraic specifications also are hard to understand for practitioners this part has been replaced with a subset of a model-oriented specification language called BSI/VDM SL 8 (cf. [Larsen&89] and [BSIVDM90]).
Reference: [Elmstrtm90] <author> Rene Elmstrtm. </author> <title> Design of Programs for Embedded Systems using CEDER. </title> <booktitle> In 2nd Nordic Workshop on Program Correctness, Octo-ber 1990. </booktitle> <pages> 8 pages. </pages> <note> An earlier version of this article was published at the Euromicro Real-Time Workshop 1990. 8 BSI/VDM SL is currently being standardized. 9 If the action prefix was kept an expression like `(a | b) ; c' would have to be written as `a ; c | b ; c. </note>
Reference-contexts: We will illustrate this stepwise development idea by a part of the CEDER 1 method (cf. [Ravn&88], <ref> [Elmstrtm90] </ref> and [Ltvengreen&90]). This method has been chosen because it is specially dedicated to fl Partially supported by the Danish Ministry of Trade 1 CEDER is an acronym for `Construction of Embedded DEdicated Real-time systems.' deal with real-time embedded systems.
Reference: [Hoare85] <author> C. A. R. Hoare. </author> <title> Communication Sequential processes. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey 07632, </address> <year> 1985. </year> <pages> 256 pages. </pages> . <note> This is a masterpiece which can be used as reference manual on parallel programming. </note>
Reference-contexts: However we will rely on the above given rewrite rule to explain the semantics of it (cf. [ISO8807] and <ref> [Hoare85] </ref>). Finally a few words should be given about the use of inter-process communication even though that it is not illustrated by the example.
Reference: [ISO8807] <author> E. Brinksma. </author> <title> LOTOS A Formal Description Technique Based on the Temporal Ordering of Observational Behaviour. International Organization for Standardization, </title> <year> 1988. </year>
Reference-contexts: Finally at the last step it is concluded how the complete system is composed. The different notations used in these steps are all inspired from the synchronous specification language LOTOS (cf. <ref> [ISO8807] </ref>). However, since it is the intention to make these notations accepted in the industry as many operators as possible has been removed from 2 Events are atomic transactions between the program and the environment carrying data across the interface. 1 standard LOTOS. <p> However we will rely on the above given rewrite rule to explain the semantics of it (cf. <ref> [ISO8807] </ref> and [Hoare85]). Finally a few words should be given about the use of inter-process communication even though that it is not illustrated by the example.
Reference: [Larsen&89] <author> P.G. Larsen, M.M. Arentoft, B.Q. Mon-ahan and S. Bear. </author> <title> Towards a Formal Semantics of The BSI/VDM Specification Language. </title> <booktitle> In Information processing 89, </booktitle> <publisher> North-Holland, </publisher> <month> August </month> <year> 1989. </year>
Reference-contexts: The data part in standard LOTOS is described in an algebraic specification language called ACT-ONE (cf. [Ehrig&85]). Since algebraic specifications also are hard to understand for practitioners this part has been replaced with a subset of a model-oriented specification language called BSI/VDM SL 8 (cf. <ref> [Larsen&89] </ref> and [BSIVDM90]). Finally standard LOTOS has a notion of action prefix which in our opinion decreases the readability (at least for our purpose) 9 . Therefore we have not adopted this restriction. Our syntax also has restrictions compared to standard LOTOS.
Reference: [Ltvengreen&90] <author> H.H. Ltvengreen, A.P. Ravn and H. Rischel. </author> <title> Design of embedded, real-time systems: Developing a method for practical software engineering. </title> <booktitle> In COMP EURO 90, </booktitle> <month> May </month> <year> 1990. </year>
Reference-contexts: We will illustrate this stepwise development idea by a part of the CEDER 1 method (cf. [Ravn&88], [Elmstrtm90] and <ref> [Ltvengreen&90] </ref>). This method has been chosen because it is specially dedicated to fl Partially supported by the Danish Ministry of Trade 1 CEDER is an acronym for `Construction of Embedded DEdicated Real-time systems.' deal with real-time embedded systems.
Reference: [Milner89] <author> R. Milner. </author> <title> Communication and Concur-rency. </title> <publisher> Prentice-Hall, </publisher> <year> 1989. </year>
Reference-contexts: Abbreviations are used and explained when used. 4 The semantics is compositional and it is given by means of transition graphs as introduced in e.g. <ref> [Milner89] </ref>. 2.1 Syntax ees = id `:=' ee `.' [ ees ] ee `;' ee j inev j id inev = name id = name Here the following abbreviations has been used to fit the two column style: ees = event-expressions ee = event-expression inev = input event id = identifier <p> The graph for `I' alone looks like: 5 j Start End t while the graph for an expression like `a [] I' looks like: j j a t Start End 1 where t indicates an internal transaction in the usual CCS sense (ref. <ref> [Milner89] </ref>). Guards are used to indicate an internal choice depending upon the state of the process. In this case there will be a `G' on both sides of the alternative operator `[]' (possible `Gfopg' and `GfNOT opg').
Reference: [MoD0055] <institution> Defence Standard for military safety-critical software - 00-55. The UK Ministry of Defence, </institution> <year> 1989. </year> <note> Draft. </note>
Reference-contexts: Our syntax also has restrictions compared to standard LOTOS. We have for example deliberately restricted the syntax so that dynamic creation of processes is not allowed (this is also abandoned by the UK Ministry of Defence in their draft standard about safety critical software <ref> [MoD0055] </ref>). Future work needs to be done in order to investigate how this scheme can be used in an iterative design process. Some kind of help must be provided to the designer to keep all four notations consistent with each other.
Reference: [Ravn&88] <author> A.P. Ravn, H. Rischel & H.H. </author> <month> Ltvengreen. </month>
Reference-contexts: The designer must then add more and more design decisions at each level, and will be forced to postpone design decisions for other aspects of the problem to a later stage of development. We will illustrate this stepwise development idea by a part of the CEDER 1 method (cf. <ref> [Ravn&88] </ref>, [Elmstrtm90] and [Ltvengreen&90]). This method has been chosen because it is specially dedicated to fl Partially supported by the Danish Ministry of Trade 1 CEDER is an acronym for `Construction of Embedded DEdicated Real-time systems.' deal with real-time embedded systems.
References-found: 10

