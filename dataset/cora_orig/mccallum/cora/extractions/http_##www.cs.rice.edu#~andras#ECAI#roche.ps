URL: http://www.cs.rice.edu/~andras/ECAI/roche.ps
Refering-URL: http://www.cs.rice.edu/~andras/ECAI/roche.html
Root-URL: 
Email: roche@merl.com  
Title: Finite-State Transducers: Parsing Free and Frozen Sentences evil that bring simplicity and efficiency at the
Author: Emmanuel Roche 
Note: In language processing, finite-state models are not a lesser  
Address: 201 Broadway Cambridge, MA 02139  
Affiliation: Mitsubishi Electric Research Laboratories  
Abstract: Accurately parsing natural language sentences requires very large scale lexical grammars. Rules of such grammars can roughly be classified as "free" or "frozen" according to the variability of the arguments, e.g. complements. For instance, a rule describing a sentence like John eats potatoes would be called free whereas a rule describing a sentence like John kicks the bucket would be called frozen. Usually, grammar representations describe frozen rules as a particular case of free ones and assume that they can be treated as exceptions. Finite-state transducers not only give simple and efficient parsing strategies for very large scale grammars but that they also provide a natural and unified way of handling sentences in which free and frozen components are mixed in a complex manner. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Jean Berstel, </author> <title> Transductions and Context-Free Languages, </title> <publisher> Teubner, Stuttgart, </publisher> <year> 1979. </year>
Reference-contexts: Roche Proceedings of the ECAI 96 Workshop Extended Finite State Models of Language Edited by A. Kornai. 2 Background Finite-state transducers (FST) are informally (see <ref> [1, 16] </ref> for formal definitions) finite-state automata for which each transition is labeled by a pair of labels. The left label is called the input label and the right one is called the output label. FSTs are represented by oriented graph such as the ones of Table 2 1 .
Reference: [2] <author> Alain Guillet Boons, Jean-Paul and Christian Leclere, </author> <title> La structure des phrases simples en fran~cais, Constructions In-transitives, </title> <address> Librairie Droz, Geneve-Paris, </address> <year> 1976. </year>
Reference-contexts: This might not seem to be a difficult problem at first but recall that grammars have to be lexicalized (see <ref> [5, 2] </ref> for instance), that is, each rule should contain an explicit word, and therefore this type of duplication, which is only one duplication among many others, has to be repeated throughout the whole lexicon.
Reference: [3] <author> David Clemenceau and Emmanuel Roche, </author> <title> `Enhancing a large scale dictionary with a two-level system', </title> <booktitle> in EACL-93, proceedings of the conference, </booktitle> <year> (1993). </year>
Reference-contexts: 1 Introduction Finite-State methods have recently improved computational efficiency dramatically for a wide variety of natural language processing tasks; ranging from morphological analysis <ref> [10, 19, 3] </ref> to phonetic and speech processing [15, 11]. However, finite-state modeling is usually thought as a necessary evil in the sense that more powerful formalisms such as context-free grammars are more accurate but of intractable size for reasonable efficiency.
Reference: [4] <author> Jacqueline Giry-Schneider, </author> <title> Les predicats nominaux en fran~cais, les phrases simples a verbe support., </title> <type> Droz, </type> <institution> Geneve, Paris, </institution> <year> 1978. </year>
Reference-contexts: Furthermore, (8) is clearly present in sentence (11). In fact, the noun phrase construction N's N to N is not general and (14) * John's turn to his friend. is clearly forbidden too. These two observations, among others (see <ref> [4] </ref>), lead to analyze sentences such as (8) with the noun (called predicative noun) as the real head and the verb, called support verb (or light verb), as support for the tense. (8) will therefore be described by the structure (15) N 0 (V sup make V sup ) (N pred <p> The parsing trace of the sentence is then the following: 6 This transformation, first described by Z.S. Harris [8], is very common an is even on the criterion to identify a support verb construction (see also <ref> [4, 12] </ref>). FST: Parsing Free and Frozen Sentences 56 E.
Reference: [5] <author> Maurice Gross, Methodes en syntaxe,regime des constructions completives, Hermann, </author> <year> 1975. </year>
Reference-contexts: This might not seem to be a difficult problem at first but recall that grammars have to be lexicalized (see <ref> [5, 2] </ref> for instance), that is, each rule should contain an explicit word, and therefore this type of duplication, which is only one duplication among many others, has to be repeated throughout the whole lexicon.
Reference: [6] <author> Maurice Gross, </author> <title> `Les limites de la phrase figee', </title> <journal> Langages, </journal> <volume> (90), </volume> <pages> 7-22, </pages> <month> (June </month> <year> 1988). </year>
Reference-contexts: Transducers associated to each structure which is also the analysis of the input. The parsing is described here as the application of a transducer on a string however, in practice, the input strings are represented by FSAs and the transducers therefore apply on these FSAs directly. 4 Transformation Grammars <ref> [6] </ref> demonstrates that three categories of sentences have to be considered to build complete grammars. The first category consists of free sentences like John eats potatoes, the second one consists of sentences like John makes concessions, with complements with a smaller degree of variability. They are called support verb constructions.
Reference: [7] <author> Maurice Gross, </author> <title> `The construction of local grammars', in Finite-State Devices for Natural Language Processing, </title> <editor> eds., Emmanuel Roche and Yves Schabes, </editor> <publisher> MIT Press, </publisher> <year> (1996). </year> <month> Forthcoming. </month>
Reference-contexts: For the problem of parsing natural language sentences, in many respects, finite-state models are not an efficient but somewhat inaccurate tool but rather one of the best formalism at hand to represent accurately complex linguistic phenomena. We take here a complementary approach to <ref> [7] </ref> which shows that FSA is a very natural framework for the task of designing large coverage and lexicalized grammars. Here we focus on sentence parsing, therefore assuming that a very precise grammar is already available.
Reference: [8] <author> Zellig Harris, Notes du cours de syntaxe, Seuil, Paris, </author> <year> 1976. </year>
Reference-contexts: The parsing trace of the sentence is then the following: 6 This transformation, first described by Z.S. Harris <ref> [8] </ref>, is very common an is even on the criterion to identify a support verb construction (see also [4, 12]). FST: Parsing Free and Frozen Sentences 56 E.
Reference: [9] <author> Zellig Harris, </author> <title> Theory of Language and Information, </title> <publisher> Oxford University Press, </publisher> <year> 1991. </year>
Reference-contexts: One of the main drawback in using context-free grammars for modeling language is the inability or the difficulty of handling various types of deletion. Consider the sentence (1) He expected John to buy a new book. In the transformational grammar of Z. S. Harris (see <ref> [9] </ref> for instance), this sentence is analyzed as the verb expected (an operator) taking three arguments: (1) the subject he, (2) the first complement John and (3) the sentence John buys a new book; the application of the verb operator deletes the subject of the last argument to transform the sentence
Reference: [10] <author> Lauri Karttunen, Ronald M. Kaplan, and Annie Zaenen, </author> <title> `Two-level morphology with composition', </title> <booktitle> in Proceedings of the 14 th International Conference on Computational Linguistics (COLING'92), </booktitle> <year> (1992). </year>
Reference-contexts: 1 Introduction Finite-State methods have recently improved computational efficiency dramatically for a wide variety of natural language processing tasks; ranging from morphological analysis <ref> [10, 19, 3] </ref> to phonetic and speech processing [15, 11]. However, finite-state modeling is usually thought as a necessary evil in the sense that more powerful formalisms such as context-free grammars are more accurate but of intractable size for reasonable efficiency.
Reference: [11] <author> Eric Laporte, `Phonetique et transducteurs', </author> <type> Technical report, </type> <institution> Universite Paris 7, </institution> <year> (1993). </year>
Reference-contexts: 1 Introduction Finite-State methods have recently improved computational efficiency dramatically for a wide variety of natural language processing tasks; ranging from morphological analysis [10, 19, 3] to phonetic and speech processing <ref> [15, 11] </ref>. However, finite-state modeling is usually thought as a necessary evil in the sense that more powerful formalisms such as context-free grammars are more accurate but of intractable size for reasonable efficiency.
Reference: [12] <author> Annie Meunier, </author> <title> Nominalisations d'adjectifs par verbs supports, </title> <type> Ph.D. dissertation, </type> <institution> Universite Paris 7, </institution> <year> 1981. </year>
Reference-contexts: The parsing trace of the sentence is then the following: 6 This transformation, first described by Z.S. Harris [8], is very common an is even on the criterion to identify a support verb construction (see also <ref> [4, 12] </ref>). FST: Parsing Free and Frozen Sentences 56 E.
Reference: [13] <author> Mehryar Mohri, </author> <title> Analyse et Representation par Automates de Structures Syntaxiques Composees, </title> <type> Ph.D. dissertation, </type> <address> Uni-versite Paris 7, </address> <month> January </month> <year> 1993. </year>
Reference-contexts: (38) They asked Peter for their belongings The linguistic explanation is that sentences (31) and (36) are analyzed as transformations of (39) They asked Peter to make (a/his) decision imme diately whereas (37) and (38) are analyzed as transformations of (40) They asked Peter to give them (his/their) belong ings <ref> [13] </ref> shows that, in French, complex verbs such as to ask, should be described in conjunction with a list of support verbs. The support verbs such as take and give are then deleted by the constraints they impose remain. The situation is almost identical in English.
Reference: [14] <author> Fernando Pereira and Rebecca N. Wright, </author> <title> `Finite state ap-proximatnion of phrase structure grammars', in Finite-State Devices for Natural Language Processing, </title> <editor> eds., Emmanuel Roche and Yves Schabes, </editor> <publisher> MIT Press, </publisher> <year> (1996). </year> <month> Forthcoming. </month>
Reference-contexts: Complex grammars are therefore approximated by finite-state models <ref> [14] </ref>, these approximations lead to more efficient and simpler parsing strategies at the cost of a lost of accuracy.
Reference: [15] <author> Fernando C. N. Pereira, Michael Riley, and Richard W. Sproat, </author> <title> `Weighted rational transductions and their application to human language processing', </title> <booktitle> in ARPA Workshop on Human Language Technology. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> (1994). </year>
Reference-contexts: 1 Introduction Finite-State methods have recently improved computational efficiency dramatically for a wide variety of natural language processing tasks; ranging from morphological analysis [10, 19, 3] to phonetic and speech processing <ref> [15, 11] </ref>. However, finite-state modeling is usually thought as a necessary evil in the sense that more powerful formalisms such as context-free grammars are more accurate but of intractable size for reasonable efficiency.
Reference: [16] <author> Dominique Perrin, </author> <title> `Finite automata', </title> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <pages> 2-56, </pages> <year> (1990). </year>
Reference-contexts: Roche Proceedings of the ECAI 96 Workshop Extended Finite State Models of Language Edited by A. Kornai. 2 Background Finite-state transducers (FST) are informally (see <ref> [1, 16] </ref> for formal definitions) finite-state automata for which each transition is labeled by a pair of labels. The left label is called the input label and the right one is called the output label. FSTs are represented by oriented graph such as the ones of Table 2 1 .
Reference: [17] <author> Emmanuel Roche, </author> <title> Analyse Syntaxique Transformationelle du Fran~cais par Transducteurs et Lexique-Grammaire, </title> <type> Ph.D. dissertation, </type> <institution> Universite Paris 7, </institution> <month> January </month> <year> 1993. </year>
Reference-contexts: can be used to generate more efficient parsers, * the grammar compilation, input sentences and the parsing use homogeneous representations, * parsing and building the grammar are the same operation, i.e. a rational transduction, * transforming a CFG into a transducer is yet another trans duction, have been described elsewhere <ref> [17, 18] </ref>, we show how transducers can be used to parse sentences such as (1) while respecting the transformational analysis. <p> Here, to simplify the exposition, we make the hypotheses that the morphological information are available when necessary. The details on how morphological analysis and parsing with transducers are combined is described in <ref> [17] </ref>. The first step of building a parser consists of transforming each entry of this syntactic dictionary into a finite-state transducer. The finite-state transducer related to an entry will be the machine responsible for analyzing a sentence with this structure. <p> The problems described here appeared at each step of the design of large scale grammar of French (9,000 free verbs, 6,500 support verb constructions, 5,000 frozen expressions <ref> [17] </ref>) as well as a medium size English grammar (roughly half of the size of the French grammar). A natural treatment of such sentences was absolutely necessary to the coherence of the whole description.
Reference: [18] <author> Emmanuel Roche, </author> <title> `Parsing with finite-state transducers', in Finite-State Devices for Natural Language Processing, </title> <editor> eds., Emmanuel Roche and Yves Schabes, </editor> <publisher> MIT Press, </publisher> <year> (1996). </year> <month> Forthcoming. </month>
Reference-contexts: can be used to generate more efficient parsers, * the grammar compilation, input sentences and the parsing use homogeneous representations, * parsing and building the grammar are the same operation, i.e. a rational transduction, * transforming a CFG into a transducer is yet another trans duction, have been described elsewhere <ref> [17, 18] </ref>, we show how transducers can be used to parse sentences such as (1) while respecting the transformational analysis.
Reference: [19] <editor> Max Silberztein, Dictionnaires Electroniques et Analyse Lex-icale du Fran~cais| Le Systeme INTEX, </editor> <publisher> Masson, </publisher> <year> 1993. </year> <title> FST: Parsing Free and Frozen Sentences 57 E. </title> <type> Roche </type>
Reference-contexts: 1 Introduction Finite-State methods have recently improved computational efficiency dramatically for a wide variety of natural language processing tasks; ranging from morphological analysis <ref> [10, 19, 3] </ref> to phonetic and speech processing [15, 11]. However, finite-state modeling is usually thought as a necessary evil in the sense that more powerful formalisms such as context-free grammars are more accurate but of intractable size for reasonable efficiency.
References-found: 19

