URL: ftp://synapse.cs.byu.edu/pub/papers/martinez_87a.ps
Refering-URL: ftp://synapse.cs.byu.edu/pub/papers/details.html
Root-URL: 
Title: Models of Parallel Adaptive Logic  
Author: Tony Martinez 
Affiliation: Brigham Young University  
Note: In Proceedings of the 1987 Systems Man and Cybernetics Conference, pp. 290-296, 1987.  
Abstract: This paper overviews a proposed architecture for adaptive parallel logic referred to as ASOCS (Adaptive Self-Organizing Concurrent System). The ASOCS approach is based on an adaptive network composed of many simple computing elements which operate in a parallel asynchronous fashion. Problem specification is given to the system by presenting if-then rules in the form of boolean conjunctions. Rules are added incrementally and the system adapts to the changing rule-base. Adaptation and data processing form two separate phases of operation. During processing the system acts as a parallel hardware circuit. The adaptation process is distributed amongst the computing elements and efficiently exploits parallelism. Adaptation is done in a self-organizing fashion and takes place in time linear with the depth of the network. This paper summarizes the overall ASOCS concept and overviews three specific architectures. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Chang, J. and J.J. Vidal, </author> <title> "Inferencing in Hardware," </title> <booktitle> Proceedings of the MCC-University Research Symposium, </booktitle> <address> Austin, TX, </address> <month> (July </month> <year> 1987). </year>
Reference-contexts: The ASOCS notion seeks to support adaptive networks whose function can change over time, and where control of adaptation is distributed amongst active network nodes in a self-organizing fashion. VLSI implementation and subsequent testing of ASOCS chips is ongoing <ref> [1] </ref>. This paper first discusses the method of knowledge input, followed by a presentation of the basic architecture. The three adaptive algorithms are then overviewed and compared.
Reference: 2. <author> Helly, J.J, W.V. Bates, M. Culter, and S. Kelem, </author> <title> "A Representational Basis for the Development of a Distributed Expert System for Space Shuttle Flight Control," </title> <type> NASA Technical Memorandum 58258, </type> <month> (May </month> <year> 1984). </year>
Reference-contexts: The rule base need not be stored as in normal applications, but can be implicitly distributed throughout the actual network. Real-world applications using rule based propositional logic have been forthcoming, including a detailed system for in-flight fault maintenance for the Space Shuttle <ref> [2] </ref>. During adaptation, the network structure and the node functions can change so the overall network function matches the incrementally evolving rule base. As new rules are added to the rule base, the network reconfigures itself to a logic circuit that remains both minimal and consistent with the rule base.
Reference: 3. <author> Martinez, T. R., </author> <title> "Adaptive Self-Organizing Logic Networks," </title> <type> Ph.D. Dissertation, </type> <institution> Computer Science Department, University of California, </institution> <address> Los Angeles, CA (May 1986). </address>
Reference-contexts: These methods define differing architectures and algorithms which fulfill the basic ASOCS functionality, each having unique features. Three specific ASOCS models (adaptive algorithms) have been formally defined and are informally overviewed in this paper. Detailed and formal presentations of the algorithms are presented in <ref> [3] </ref> and [4]. Although each model is implemented in a different way, the fundamental goal of adaptive parallel logic inference is accomplished by all three. These three are by no means meant to represent an exhaustive class of ASOCS architectures. <p> There are 15 ways in which a node can match a NI, and 8 basic actions nodes can take depending on how they match <ref> [3] </ref>. Adaptive Algorithm 3: Most of the constructs defined in the previous section, carry over to AA3 and are not reviewed. AA3 is similar, although simpler than AA2.
Reference: 4. <author> Martinez, T. R. and J. J. Vidal, </author> <title> "Adaptive Parallel Logic Networks," </title> <note> To appear in the Journal of Parallel and Distributed Computing. </note>
Reference-contexts: These methods define differing architectures and algorithms which fulfill the basic ASOCS functionality, each having unique features. Three specific ASOCS models (adaptive algorithms) have been formally defined and are informally overviewed in this paper. Detailed and formal presentations of the algorithms are presented in [3] and <ref> [4] </ref>. Although each model is implemented in a different way, the fundamental goal of adaptive parallel logic inference is accomplished by all three. These three are by no means meant to represent an exhaustive class of ASOCS architectures. <p> After the network has reconfigured to fulfill the NI, which takes time linear with the depth of the network, the whole process can iterate and more instances be input to the AU. A detailed presentation of AA1 is given in <ref> [4] </ref>. Adaptive Algorithm 2: AA2 uses a method much different than that of AA1. Instead of having a single top node for an output variable, there can be a number of top nodes for an output. These are divided into positive and negative nodes.
Reference: 5. <author> Rosenblatt, F., </author> <title> Principles of Neurodynamics, </title> <publisher> Spartan Books, </publisher> <address> Washington, D.C. </address> <year> (1962). </year>
Reference-contexts: Finally, nodes which are no longer necessary for correct functioning of the network self-delete, thus allowing the network to remain relatively minimal. ASOCS research was inspired by a revisitation of the seminal work of Rosenblatt <ref> [5] </ref> on perceptron systems. Verstraete [6] extended perceptron-like techniques into boolean logic devices, in contrast to the threshold unit. His and other [7] research sought centralized methods of programming boolean functions into passive fixed networks.
Reference: 6. <author> Verstraete, R.A., </author> <title> "Assignment of Functional Responsibility in Perceptrons," </title> <type> Ph.D. Dissertation, </type> <institution> Computer Science Department, University of California, </institution> <address> Los Angeles, CA, </address> <month> (June </month> <year> 1986). </year>
Reference-contexts: Finally, nodes which are no longer necessary for correct functioning of the network self-delete, thus allowing the network to remain relatively minimal. ASOCS research was inspired by a revisitation of the seminal work of Rosenblatt [5] on perceptron systems. Verstraete <ref> [6] </ref> extended perceptron-like techniques into boolean logic devices, in contrast to the threshold unit. His and other [7] research sought centralized methods of programming boolean functions into passive fixed networks.
Reference: 7. <author> Yau, S. S. and C. K. Tang, </author> <title> "Universal Logic Circuits and their Modular Realizations," </title> <booktitle> AFIPS Conference Proceedings, vol.. </booktitle> <volume> 32, </volume> <pages> pp. 297-305, </pages> <year> (1968). </year>
Reference-contexts: ASOCS research was inspired by a revisitation of the seminal work of Rosenblatt [5] on perceptron systems. Verstraete [6] extended perceptron-like techniques into boolean logic devices, in contrast to the threshold unit. His and other <ref> [7] </ref> research sought centralized methods of programming boolean functions into passive fixed networks. The ASOCS notion seeks to support adaptive networks whose function can change over time, and where control of adaptation is distributed amongst active network nodes in a self-organizing fashion.
References-found: 7

