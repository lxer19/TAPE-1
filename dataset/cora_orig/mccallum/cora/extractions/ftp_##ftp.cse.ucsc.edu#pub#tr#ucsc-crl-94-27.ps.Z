URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-94-27.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Title: Computer Sculpting of Polygonal Models using Virtual Tools  
Author: James R. Bill Suresh K. Lodha 
Keyword: Computer graphics, interactive modeling, computer sculpting, virtual tools, polygon meshes, smoothing, subdivision, shadows  
Address: Santa Cruz, CA 95064 USA  
Affiliation: Baskin Center for Computer Engineering Information Sciences University of California, Santa Cruz  
Date: 22 July 1994  
Pubnum: UCSC-CRL-94-27  
Abstract: This report describes a system for interactive manipulation of polygon meshes using virtual sculpting tools and mesh refinement operations. The virtual tools are geometric objects with shapes described by superquadric equations. The user controls a virtual tool to sculpt a free-form polygonal mesh model. The vertices of the mesh respond to the tool in a semi-realistic manner, allowing the user to push, pull, and deform the mesh in a variety of ways. Mesh refinement operations allow the user to control refinement levels and create smooth objects. Interactive shadows and a virtual trackball considerably enhance the intuitive manipulation and sculpting of models. The strength of the system has been demonstrated by sculpting free-form surfaces such as a dog, flower, television set, and dinosaur, all with widely varying levels of detail. 
Abstract-found: 1
Intro-found: 1
Reference: <institution> References </institution>
Reference: [AWW89] <author> Jeff Allan, Brian Wyvill, and Ian H. Witten. </author> <title> A methodology for direct manipulation of polygon meshes. </title> <editor> In R.A. Earnshaw and B. Wyvill, editors, </editor> <booktitle> New Advances in Computer Graphics, </booktitle> <pages> pages 451-469, </pages> <address> Tokyo, Japan, </address> <month> June </month> <year> 1989. </year> <title> CG International, </title> <publisher> Springer-Verlag. </publisher>
Reference-contexts: This has been achieved by a novel unification of known techniques, some of which have been adapted to our purposes from use in different contexts. Our work builds upon the techniques of interactive polygon manipulation using decay functions initially proposed by Parent [Par77] and extended by Allan et al <ref> [AWW89] </ref>. We further enhance these capabilities by incorporating adaptive subdivision and smoothing techniques. More importantly, we have used virtual tools to identify regions of interest, which can then be pushed or pulled by the user in an intuitive way. <p> Polygon meshes are well suited to sculpting applications, provided that a platform is available which allows storage and speedy rendering of large numbers of polygons. The four most significant polygon mesh based sculpting system are those of Parent, Allan et al, Leblanc et al, and Elson and Malone <ref> [Par77, AWW89, LPMTT91, Els90b, Els90a] </ref>. Parent initiated use of the basic vertex-movement + decay function technique used in all of these systems. His is the only polygon mesh system that uses virtual tools. <p> The models created using Elson and Malone's S-Geometry system suggest that they have used the Doo-Sabin algorithm, though this is not explicitly stated in their publications [Els90b, Els90a]. Allan et al also use a "smoothing" decay function which appears to do a sort of averaging with no subdivision step <ref> [AWW89] </ref>, although no concrete details are provided. SAM-IAM offers users the option of choosing whether or not to subdivide before applying the smoothing technique. Should the user decide on smoothing with subdivision, subdivision without propagation as described in the previous section is executed, and all selected vertices are then smoothed. <p> Again, some possibilities for improvement in this area are described in the next section. Another inherent limitation of our system is its inability to detect and respond to collisions of the mesh with itself. This problem was also described by Allan et al as a shortcoming of their system <ref> [AWW89] </ref>. While allowing the mesh to intersect itself can sometimes be useful, care is usually needed to prevent the creation of meshes with unattractive crinkles and discontinuous shading due to unwelcome self-intersections.
Reference: [BA77] <author> J. A. Brewer and D. C. Anderson. </author> <title> Visual interaction with overhauser curves and surfaces. </title> <booktitle> Computer Graphics (ACM SIGGRAPH Proceedings), </booktitle> <volume> 11 </volume> <pages> 132-1377, </pages> <month> July </month> <year> 1977. </year>
Reference-contexts: Mingxian uses CSG-based virtual modeling tools in a non-free-form CAD system. Pushing and pulling points as we propose to do has been done to some extent by Brewer (1977), Hsu (1992), and Szeliski (1992) <ref> [BA77, HHK92, ST92] </ref>. Brewer pushed parametric surfaces' control points with a planar tool. Szeliski used tools to apply and cancel forces in a particle-based modeler. Hsu used pushing and pulling tools to impart free-form deformation (FFD).
Reference: [Bar81] <author> Alan H. Barr. </author> <title> Superquadrics and angle-preserving transformations. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 1(1) </volume> <pages> 11-23, </pages> <month> January </month> <year> 1981. </year>
Reference: [Bau74] <author> Bruce G. Baumgart. </author> <title> Geometric modeling for computer vision. </title> <type> Technical Report CS-463, </type> <institution> Dept of Computer Science, Stanford University, </institution> <year> 1974. </year>
Reference-contexts: Winged-edge polyhedra were originally developed by Baumgart <ref> [Bau74] </ref> to represent solid geometric models. A solid geometric model is generally defined to be a representation of a physically realizable 3D object. As such, solid models have a well defined inside, outside, and surface (or boundary).
Reference: [Bil94] <author> James R. Bill. </author> <title> Computer sculpting of polygonal models using virtual tools. </title> <type> Master's thesis, </type> <institution> Department of Computer and information Science, University of California - Santa Cruz, </institution> <address> Santa Cruz, CA 95064, </address> <year> 1994. </year>
Reference-contexts: Chapter 5 describes some models created using SAM-IAM. Chapter 6 concludes with a discussion of the advantages and disadvantages of the system. Readers interested in a more thorough description of any of these topics should see the original thesis <ref> [Bil94] </ref>. 1 Pronounced Sam-I-Am. Inspired by Seuss [Seu60]. 2 2. Related Work 2. Related Work While there has been a great deal of interactive modeling research that is marginally related to sculpting, in this chapter we concentrate on research in polygon mesh sculpting and virtual tools. <p> The winged-edge data structure has been chosen to optimize rendering time and ease of object deformation. The implementation we use is essentially identical to that recommended by Hanrahan and Glassner and is described in detail in the original thesis <ref> [Han82, Gla91, Bil94] </ref>. 4.2 Mesh Refinement Operations The mesh refinement operations supported by our system include adaptive subdivision, adaptive smoothing, hole-filling, and deletion of subparts of a mesh. We make a clear distinction between smoothing and subdivision and support them independently. 8 4.
Reference: [CC78] <author> E. Catmull and J. Clark. </author> <title> Recursively generated b-spline surfaces on arbitrary topological meshes. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 10(6) </volume> <pages> 350-355, </pages> <month> November </month> <year> 1978. </year>
Reference-contexts: The best-known smoothing algorithm is perhaps Chaikin's corner cutting algorithm for biquadratic tensor-product B-spline surfaces and its generalization to bicubic tensor-product B-spline surfaces [Cha74]. Unfortunately, Chaikin's algorithm only works for rectangular meshes. The two other best-known smoothing techniques, those of Doo and Sabin [Doo78] and Catmull and Clark <ref> [CC78] </ref> are generalizations of Chaikin's algorithm to arbitrary meshes but still work best for rectangular and nearly rectangular meshes.
Reference: [Cha74] <author> G. M. Chaikin. </author> <title> An algorithm for high-speed curve generation. </title> <journal> Computer Graphics and Image Processing, </journal> <volume> 3 </volume> <pages> 346-349, </pages> <year> 1974. </year>
Reference-contexts: The best-known smoothing algorithm is perhaps Chaikin's corner cutting algorithm for biquadratic tensor-product B-spline surfaces and its generalization to bicubic tensor-product B-spline surfaces <ref> [Cha74] </ref>. Unfortunately, Chaikin's algorithm only works for rectangular meshes. The two other best-known smoothing techniques, those of Doo and Sabin [Doo78] and Catmull and Clark [CC78] are generalizations of Chaikin's algorithm to arbitrary meshes but still work best for rectangular and nearly rectangular meshes.
Reference: [CMS88] <author> Michael Chen, S. Joy Mountford, and Abigail Sellen. </author> <title> A study of interactive 3-d rotation using 2-d control devices. </title> <booktitle> Computer Graphics (ACM SIGGRAPH Proceedings), </booktitle> <volume> 22(4) </volume> <pages> 121-129, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: Implementation Highlights around some axis is described; the direction of the cursor movement determines the rotation axis, and the initial position of the mouse and the length of the movement vector determine the angle of rotation. Implementation specifics are given by Chen <ref> [CMS88] </ref>. Modifying the Center of Rotation The center of rotation (COR) of an object is the point around which it may be rotated. A local COR follows an object as it is moved about; a global COR is unaffected by the transformations applied to an object.
Reference: [CP76] <author> B. Chandrasekaran and Richard Parent. </author> <title> Moulding computer clay-steps toward a computer graphics sculptors' studio. </title> <editor> In C.H. Chen, editor, </editor> <booktitle> Pattern recognition and artificial intelligence : proceedings of the Joint Workshop on Pattern Recognition and Artificial Intelligence, </booktitle> <pages> pages 86-107, </pages> <address> New York, 1976. </address> <publisher> IEEE, Academic Press. </publisher>
Reference-contexts: Interactive, real time performance 4. Manipulation and deformation of model using virtual tools In this report, sculpting will be used to mean computer sculpting. Its central goal is to create complex models suitable for use in rendering or animation programs <ref> [CP76, PMTT91] </ref>. There is currently an active consumer market for such models [Lew93]. In the past, difficulty in rendering and modeling of irregular free-form shapes has commonly resulted in computer generated images populated with unrealistically simple objects.
Reference: [Cro77] <author> Frank C. Crow. </author> <title> Shadow algorithms for computer graphics. </title> <booktitle> Computer Graphics (ACM SIGGRAPH Proceedings), </booktitle> <volume> 11 </volume> <pages> 242-247, </pages> <month> July </month> <year> 1977. </year>
Reference-contexts: The algorithm used is based on the shadow volume technique initially proposed by Crow <ref> [Cro77] </ref> and updated by Hudson [Hud92]. Our algorithm improves upon these methods through use of the stencil bitplanes available on modern higher-end Silicon Graphics 4.5. User Interface 15 workstations.
Reference: [Doo78] <author> E. Doo. </author> <title> A subdivision algorithm for smoothing down irregular shaped polyhedrons. </title> <booktitle> In Proceedings of the International Conference on Interactive Techniques in Computer Aided Design, </booktitle> <pages> pages 157-165, </pages> <address> New York, 1978. </address> <publisher> IEEE. </publisher>
Reference-contexts: The best-known smoothing algorithm is perhaps Chaikin's corner cutting algorithm for biquadratic tensor-product B-spline surfaces and its generalization to bicubic tensor-product B-spline surfaces [Cha74]. Unfortunately, Chaikin's algorithm only works for rectangular meshes. The two other best-known smoothing techniques, those of Doo and Sabin <ref> [Doo78] </ref> and Catmull and Clark [CC78] are generalizations of Chaikin's algorithm to arbitrary meshes but still work best for rectangular and nearly rectangular meshes.
Reference: [Els90a] <author> Matt Elson. </author> <title> Displacement animation: Development and application. In Character Animation by Computer: </title> <booktitle> SIGGRAPH 1990 Course Notes #10, </booktitle> <pages> pages 14-36. </pages> <booktitle> 17th International Conference on Computer Graphics and Interactive Techniques, </booktitle> <address> Dallas Convention Center, </address> <month> August 6th-10th </month> <year> 1990. </year>
Reference-contexts: Polygon meshes are well suited to sculpting applications, provided that a platform is available which allows storage and speedy rendering of large numbers of polygons. The four most significant polygon mesh based sculpting system are those of Parent, Allan et al, Leblanc et al, and Elson and Malone <ref> [Par77, AWW89, LPMTT91, Els90b, Els90a] </ref>. Parent initiated use of the basic vertex-movement + decay function technique used in all of these systems. His is the only polygon mesh system that uses virtual tools. <p> The models created using Elson and Malone's S-Geometry system suggest that they have used the Doo-Sabin algorithm, though this is not explicitly stated in their publications <ref> [Els90b, Els90a] </ref>. Allan et al also use a "smoothing" decay function which appears to do a sort of averaging with no subdivision step [AWW89], although no concrete details are provided. SAM-IAM offers users the option of choosing whether or not to subdivide before applying the smoothing technique.
Reference: [Els90b] <author> Matt Elson. </author> <title> Winged edge polyhedral models: Their use in the construction of characters, speech, emotion, and body language. In State of the Art in Facial Animation: </title> <booktitle> SIGGRAPH 1990 Course Notes #26, </booktitle> <pages> pages 21-42. </pages> <booktitle> 17th International Conference on Computer Graphics and Interactive Techniques, </booktitle> <address> Dallas Convention Center, </address> <month> August 6th-10th </month> <year> 1990. </year>
Reference-contexts: Polygon meshes are well suited to sculpting applications, provided that a platform is available which allows storage and speedy rendering of large numbers of polygons. The four most significant polygon mesh based sculpting system are those of Parent, Allan et al, Leblanc et al, and Elson and Malone <ref> [Par77, AWW89, LPMTT91, Els90b, Els90a] </ref>. Parent initiated use of the basic vertex-movement + decay function technique used in all of these systems. His is the only polygon mesh system that uses virtual tools. <p> The models created using Elson and Malone's S-Geometry system suggest that they have used the Doo-Sabin algorithm, though this is not explicitly stated in their publications <ref> [Els90b, Els90a] </ref>. Allan et al also use a "smoothing" decay function which appears to do a sort of averaging with no subdivision step [AWW89], although no concrete details are provided. SAM-IAM offers users the option of choosing whether or not to subdivide before applying the smoothing technique.
Reference: [FB81] <author> W. Randolph Franklin and Alan H. Barr. </author> <title> Faster calculation of superquadric shapes. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 1(3) </volume> <pages> 41-47, </pages> <month> January </month> <year> 1981. </year>
Reference: [GH91] <author> Tinsley A. Galyean and John F. Hughes. </author> <title> Sculpting: An interactive volumetric modeling technique. </title> <booktitle> Computer Graphics (ACM SIGGRAPH Proceedings), </booktitle> <volume> 25(4) </volume> <pages> 267-274, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: They are used in this way by Parent (whose polygonal models described solids), Naylor (1990), and Mingxian et al (1993), and in a related way by Galyean <ref> [Par77, Nay90, GH91, MFD93] </ref>. Mingxian uses CSG-based virtual modeling tools in a non-free-form CAD system. Pushing and pulling points as we propose to do has been done to some extent by Brewer (1977), Hsu (1992), and Szeliski (1992) [BA77, HHK92, ST92].
Reference: [Gla91] <author> Andrew Glassner. </author> <title> Maintaining winged-edge models. </title> <editor> In James Arvo, editor, </editor> <title> Graphics Gems II. </title> <publisher> Academic Press, </publisher> <address> Boston, MA, </address> <year> 1991. </year>
Reference-contexts: The winged-edge data structure has been chosen to optimize rendering time and ease of object deformation. The implementation we use is essentially identical to that recommended by Hanrahan and Glassner and is described in detail in the original thesis <ref> [Han82, Gla91, Bil94] </ref>. 4.2 Mesh Refinement Operations The mesh refinement operations supported by our system include adaptive subdivision, adaptive smoothing, hole-filling, and deletion of subparts of a mesh. We make a clear distinction between smoothing and subdivision and support them independently. 8 4.
Reference: [Han82] <author> Patrick M. Hanrahan. </author> <title> Creating volume models from edge-vertex graphs. </title> <booktitle> Computer Graphics (ACM SIGGRAPH Proceedings), </booktitle> <volume> 16(3) </volume> <pages> 77-84, </pages> <month> July </month> <year> 1982. </year>
Reference-contexts: The winged-edge data structure has been chosen to optimize rendering time and ease of object deformation. The implementation we use is essentially identical to that recommended by Hanrahan and Glassner and is described in detail in the original thesis <ref> [Han82, Gla91, Bil94] </ref>. 4.2 Mesh Refinement Operations The mesh refinement operations supported by our system include adaptive subdivision, adaptive smoothing, hole-filling, and deletion of subparts of a mesh. We make a clear distinction between smoothing and subdivision and support them independently. 8 4.
Reference: [HHK92] <author> William M. Hsu, John F. Hughes, and Henry Kaufman. </author> <title> Direct manipulation of free-form deformations. </title> <booktitle> Computer Graphics (ACM SIGGRAPH Proceedings), </booktitle> <volume> 26(2) </volume> <pages> 177-184, </pages> <month> July </month> <year> 1992. </year> <note> References 25 </note>
Reference-contexts: Mingxian uses CSG-based virtual modeling tools in a non-free-form CAD system. Pushing and pulling points as we propose to do has been done to some extent by Brewer (1977), Hsu (1992), and Szeliski (1992) <ref> [BA77, HHK92, ST92] </ref>. Brewer pushed parametric surfaces' control points with a planar tool. Szeliski used tools to apply and cancel forces in a particle-based modeler. Hsu used pushing and pulling tools to impart free-form deformation (FFD).
Reference: [Hud92] <author> S.E. Hudson. </author> <title> Adding shadows to a 3d cursor. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 11(2) </volume> <pages> 193-199, </pages> <month> April </month> <year> 1992. </year>
Reference-contexts: The algorithm used is based on the shadow volume technique initially proposed by Crow [Cro77] and updated by Hudson <ref> [Hud92] </ref>. Our algorithm improves upon these methods through use of the stencil bitplanes available on modern higher-end Silicon Graphics 4.5. User Interface 15 workstations.
Reference: [Lew93] <author> Renee Lewinter. </author> <title> The objects of your desire. (ready-to-use and custom 3d models for incorporation into computer renderings and animations). </title> <journal> Computer Graphics World, </journal> <volume> 16(8) </volume> <pages> 54-60, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: Manipulation and deformation of model using virtual tools In this report, sculpting will be used to mean computer sculpting. Its central goal is to create complex models suitable for use in rendering or animation programs [CP76, PMTT91]. There is currently an active consumer market for such models <ref> [Lew93] </ref>. In the past, difficulty in rendering and modeling of irregular free-form shapes has commonly resulted in computer generated images populated with unrealistically simple objects.
Reference: [Loo87] <author> Charles T. </author> <title> Loop. Smooth subdivision surfaces based on triangles. </title> <type> Master's thesis, </type> <institution> University of Utah, </institution> <year> 1987. </year>
Reference-contexts: This smoothing algorithm, originally proposed and analyzed by Loop <ref> [Loo87] </ref>, consists of a subdivision step in which each facet of a triangular mesh is subdivided into four faces as in SAM-IAM, and an averaging step in which the mask above (!(n)) is used to calculate the new position of a vertex.
Reference: [LPMTT91] <author> A. LeBlanc, P.Kalra, Nadia Magnenat-Thalmann, and Daniel Thalmann. </author> <title> Sculpting with the 'ball and mouse' metaphor. </title> <booktitle> Proceedings of Graphics Interface 1991, </booktitle> <pages> pages 152-159, </pages> <month> June, </month> <year> 1991. </year>
Reference-contexts: Polygon meshes are well suited to sculpting applications, provided that a platform is available which allows storage and speedy rendering of large numbers of polygons. The four most significant polygon mesh based sculpting system are those of Parent, Allan et al, Leblanc et al, and Elson and Malone <ref> [Par77, AWW89, LPMTT91, Els90b, Els90a] </ref>. Parent initiated use of the basic vertex-movement + decay function technique used in all of these systems. His is the only polygon mesh system that uses virtual tools.
Reference: [MFD93] <author> Fa Mingxian, T. Fernando, </author> <title> and P.M. Dew. Direct 3d manipulation techniques for interactive constraint-based solid modelling. </title> <journal> Computer Graphics Forum, </journal> <volume> 12(3):C237-C248, </volume> <year> 1993. </year>
Reference-contexts: They are used in this way by Parent (whose polygonal models described solids), Naylor (1990), and Mingxian et al (1993), and in a related way by Galyean <ref> [Par77, Nay90, GH91, MFD93] </ref>. Mingxian uses CSG-based virtual modeling tools in a non-free-form CAD system. Pushing and pulling points as we propose to do has been done to some extent by Brewer (1977), Hsu (1992), and Szeliski (1992) [BA77, HHK92, ST92].
Reference: [Nay90] <author> B. Naylor. Sculpt: </author> <title> an interactive solid modeling tool. </title> <booktitle> Proceedings of Graphics Interface 1990, </booktitle> <pages> pages 138-148, </pages> <month> May, </month> <year> 1990. </year>
Reference-contexts: They are used in this way by Parent (whose polygonal models described solids), Naylor (1990), and Mingxian et al (1993), and in a related way by Galyean <ref> [Par77, Nay90, GH91, MFD93] </ref>. Mingxian uses CSG-based virtual modeling tools in a non-free-form CAD system. Pushing and pulling points as we propose to do has been done to some extent by Brewer (1977), Hsu (1992), and Szeliski (1992) [BA77, HHK92, ST92].
Reference: [Par77] <author> Richard Parent. </author> <title> A system for sculpting 3d data. </title> <booktitle> Computer Graphics (ACM SIGGRAPH Proceedings), </booktitle> <volume> 11 </volume> <pages> 138-147, </pages> <month> July </month> <year> 1977. </year>
Reference-contexts: This has been achieved by a novel unification of known techniques, some of which have been adapted to our purposes from use in different contexts. Our work builds upon the techniques of interactive polygon manipulation using decay functions initially proposed by Parent <ref> [Par77] </ref> and extended by Allan et al [AWW89]. We further enhance these capabilities by incorporating adaptive subdivision and smoothing techniques. More importantly, we have used virtual tools to identify regions of interest, which can then be pushed or pulled by the user in an intuitive way. <p> Polygon meshes are well suited to sculpting applications, provided that a platform is available which allows storage and speedy rendering of large numbers of polygons. The four most significant polygon mesh based sculpting system are those of Parent, Allan et al, Leblanc et al, and Elson and Malone <ref> [Par77, AWW89, LPMTT91, Els90b, Els90a] </ref>. Parent initiated use of the basic vertex-movement + decay function technique used in all of these systems. His is the only polygon mesh system that uses virtual tools. <p> They are used in this way by Parent (whose polygonal models described solids), Naylor (1990), and Mingxian et al (1993), and in a related way by Galyean <ref> [Par77, Nay90, GH91, MFD93] </ref>. Mingxian uses CSG-based virtual modeling tools in a non-free-form CAD system. Pushing and pulling points as we propose to do has been done to some extent by Brewer (1977), Hsu (1992), and Szeliski (1992) [BA77, HHK92, ST92].
Reference: [PEF + 90] <author> A. Pentland, I. Essa, M. Friedmann, B. Horowitz, and S. Sclaroff. </author> <title> The thingworld modeling system: Virtual sculpting by modal forces. </title> <journal> Computer Graphics (Special Issue on 1990 Symposium on Interactive 3D Graphics, </journal> <volume> 24(2) </volume> <pages> 143-144, </pages> <month> March </month> <year> 1990. </year>
Reference-contexts: This touches on the very interesting question, explored by many researchers, of whether object interactions with a high degree of physical realism can be generated using only simple geometry, without differential equations <ref> [PW89, PEF + 90, PEF + 91, WGW90, TPBF87, TF88] </ref>. A wide variety of fairly low-level extensions could be made to the system that would make it even more useful.
Reference: [PEF + 91] <author> A. Pentland, I. Essa, M. Friedmann, B. Horowitz, S. Sclaroff, and T. Starner. </author> <title> The thing-world modeling system. </title> <editor> In F. Deprettere and A. J. Van Der Veen, editors, </editor> <booktitle> Algorithms and Parallel VLSI Architectures. Lectures and Tutorials Presented at the International Workshop., </booktitle> <pages> pages 425-434. </pages> <publisher> Elsevier, </publisher> <address> Amsterdam, Netherlands, </address> <year> 1991. </year>
Reference-contexts: This touches on the very interesting question, explored by many researchers, of whether object interactions with a high degree of physical realism can be generated using only simple geometry, without differential equations <ref> [PW89, PEF + 90, PEF + 91, WGW90, TPBF87, TF88] </ref>. A wide variety of fairly low-level extensions could be made to the system that would make it even more useful.
Reference: [PMTT91] <author> Arghyro Paouri, Nadia Magnenat-Thalmann, and Daniel Thalmann. </author> <title> Creating realistic three-dimensional human shape characters for computer-generated films. </title> <editor> In Nadia Magnenat-Thalmann and Daniel Thalmann, editors, </editor> <booktitle> New Trends in Animation and Visualization, </booktitle> <pages> pages 89-99. </pages> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: Interactive, real time performance 4. Manipulation and deformation of model using virtual tools In this report, sculpting will be used to mean computer sculpting. Its central goal is to create complex models suitable for use in rendering or animation programs <ref> [CP76, PMTT91] </ref>. There is currently an active consumer market for such models [Lew93]. In the past, difficulty in rendering and modeling of irregular free-form shapes has commonly resulted in computer generated images populated with unrealistically simple objects. <p> the properties of the surface, over which the user may have less intuition. 2.1 Polygonal Mesh Sculpting The polygon mesh is a simple and powerful means of representing the geometry of an object; in fact, it is termed the most popular type of geometric modeling representation by Paouri et al <ref> [PMTT91] </ref>. Polygon meshes are well suited to sculpting applications, provided that a platform is available which allows storage and speedy rendering of large numbers of polygons.
Reference: [PW89] <author> A. Pentland and J. Williams. </author> <title> Good vibrations: modal dynamics for graphics and animation. </title> <booktitle> Computer Graphics (ACM SIGGRAPH Proceedings), </booktitle> <volume> 23(3) </volume> <pages> 215-222, </pages> <month> July </month> <year> 1989. </year> <title> See also art. </title> <booktitle> in NSF Engineering Design Research Conference. </booktitle>
Reference-contexts: This touches on the very interesting question, explored by many researchers, of whether object interactions with a high degree of physical realism can be generated using only simple geometry, without differential equations <ref> [PW89, PEF + 90, PEF + 91, WGW90, TPBF87, TF88] </ref>. A wide variety of fairly low-level extensions could be made to the system that would make it even more useful.
Reference: [Sam90] <author> Hanan Samet. </author> <title> Applications of spatial data structures : computer graphics, image processing, and GIS. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, USA, </address> <year> 1990. </year>
Reference-contexts: The two distinct methods of subdividing individual faces are illustrated in Figure 4.3 and described separately below. Subdividing Triangular Faces SAM-IAM subdivides single triangular faces using the quaternary method described by Samet <ref> [Sam90] </ref>. In this method, a single triangle is replaced with four triangles by connecting the midpoints of each edge of the triangle to form a new central face and three new faces adjacent to the central triangle and incident to the original triangle's corners (see fig. 4.3).
Reference: [Seu60] <editor> Dr. Seuss. Green Eggs and Ham. </editor> <publisher> Beginner Books, </publisher> <address> New York, </address> <year> 1960. </year>
Reference-contexts: Chapter 5 describes some models created using SAM-IAM. Chapter 6 concludes with a discussion of the advantages and disadvantages of the system. Readers interested in a more thorough description of any of these topics should see the original thesis [Bil94]. 1 Pronounced Sam-I-Am. Inspired by Seuss <ref> [Seu60] </ref>. 2 2. Related Work 2. Related Work While there has been a great deal of interactive modeling research that is marginally related to sculpting, in this chapter we concentrate on research in polygon mesh sculpting and virtual tools.
Reference: [Sil90] <institution> Silicon Graphics, Incorporated, Mountain View, California, USA. </institution> <note> Graphics Library Programming Guide, version 2.0, </note> <year> 1990. </year>
Reference-contexts: User Interface 15 workstations. Stencils are bitplanes which are modified by drawing routines according to various pixel-by-pixel stencil functions involving current values of the stencil, the zbuffer, and the color bit-planes <ref> [Sil90] </ref>. The shadows are drawn after the mesh, and before the tool. The process is illustrated in Figure 4.7. An overview of the algorithm is as follows: 1. Calculate the vector to the light source in the tool's coordinate system 2. Calculate the contour polygon of the tool 3.
Reference: [ST92] <author> Richard Szelski and David Tonnesen. </author> <title> Surface modeling with oriented particle systems. </title> <booktitle> Computer Graphics (ACM SIGGRAPH Proceedings), </booktitle> <volume> 26(2) </volume> <pages> 185-194, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Mingxian uses CSG-based virtual modeling tools in a non-free-form CAD system. Pushing and pulling points as we propose to do has been done to some extent by Brewer (1977), Hsu (1992), and Szeliski (1992) <ref> [BA77, HHK92, ST92] </ref>. Brewer pushed parametric surfaces' control points with a planar tool. Szeliski used tools to apply and cancel forces in a particle-based modeler. Hsu used pushing and pulling tools to impart free-form deformation (FFD).
Reference: [TF88] <author> Demetri Terzopoulos and Kurt Fleischer. </author> <title> Modeling inelastic deformation: Viscoelastic-ity, plasticity, fracture. </title> <booktitle> SIGGRAPH '88 Conference Proceedings, </booktitle> <volume> 22(4) </volume> <pages> 269-278, </pages> <month> August, </month> <year> 1988. </year>
Reference-contexts: This touches on the very interesting question, explored by many researchers, of whether object interactions with a high degree of physical realism can be generated using only simple geometry, without differential equations <ref> [PW89, PEF + 90, PEF + 91, WGW90, TPBF87, TF88] </ref>. A wide variety of fairly low-level extensions could be made to the system that would make it even more useful.
Reference: [TPBF87] <author> Demetri Terzopoulos, John Platt, Alan H. Barr, and Kurt Fleischer. </author> <title> Elastically de-formable models. </title> <booktitle> SIGGRAPH '87 Conference Proceedings, </booktitle> <month> July, </month> <year> 1987. </year>
Reference-contexts: This touches on the very interesting question, explored by many researchers, of whether object interactions with a high degree of physical realism can be generated using only simple geometry, without differential equations <ref> [PW89, PEF + 90, PEF + 91, WGW90, TPBF87, TF88] </ref>. A wide variety of fairly low-level extensions could be made to the system that would make it even more useful.
Reference: [WGW90] <author> A. Witkin, M. Gleicher, and W. Welch. </author> <title> Interactive dynamics. </title> <journal> Computer Graphics (Special Issue on 1990 Symposium on Interactive 3D Graphics, </journal> <volume> 24(2) </volume> <pages> 11-21, </pages> <month> March </month> <year> 1990. </year>
Reference-contexts: This touches on the very interesting question, explored by many researchers, of whether object interactions with a high degree of physical realism can be generated using only simple geometry, without differential equations <ref> [PW89, PEF + 90, PEF + 91, WGW90, TPBF87, TF88] </ref>. A wide variety of fairly low-level extensions could be made to the system that would make it even more useful.
References-found: 37

