URL: http://www.cs.berkeley.edu/~alanm/CP/khalidi.tr-95-38.95.ps
Refering-URL: http://www.cs.berkeley.edu/~alanm/CP/bib.html
Root-URL: 
Email: yousef.khalidi@eng.sun.com madhusudhan.talluri@eng.sun.com  
Title: Improving the Address Translation Performance of Widely Shared Pages  
Author: Yousef A. Khalidi Madhusudhan Talluri 
Address: M/S 29-01 2550 Garcia Avenue Mountain View, CA 94043  
Note: email address:  
Date: February 1995  
Pubnum: SMLI TR-95-38  
Abstract: Operating systems allow multiple processes to share physical objects, e.g., shared libraries, System V shared memory. Many UNIX implementations allow processes to use different virtual addresses known as aliases to map a shared physical page. Each alias traditionally requires separate page table and translation lookaside buffer (TLB) entries that contain identical translation information. In systems with many aliases, this results in significant memory demand for storing page tables and unnecessary TLB misses on context switches. This paper first describes a common-mask scheme that allows translations from many different virtual address spaces to the same physical address to share a single translation entry. It extends the process context id with a bit vector that identifies a set of common regions that a process shares with other processes. It requires aliases to use the same virtual address, but aliases with different virtual addresses are still supported in the conventional manner. We then study in detail the implementation and performance effects of applying the common-mask scheme to each level of the translation hierarchy: hardware fully-asociative and set-associative TLBs, memory-based set-associative software level-two TLBs, and finally hashed page tables. TLB performance improves as processes incur fewer TLB misses on context switches by sharing TLB entries for shared pages. On a set of multi-user benchmarks, we show that the common-mask scheme reduces the number of user TLB misses by up to 50% in a 256-entry fully-associative TLB and a 4096-entry level-two TLB. The memory used to store hashed page tables is dramatically reduced by requiring a single page table entry instead of separate page table entries for hundreds of aliases to a physical page. Common-mask hashed page tables use 97% less memory for an Oracle Financials database server workload. The scheme we propose is quite general and applicable in domains other than address translation where multiple keys map to the same data, e.g., virtually-tagged caches, associative processors, and relational databases. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Baer and W. Wang, </author> <title> On the Inclusion Properties of Multilevel Cache Hierarchies, </title> <booktitle> 15th Annual International Symposium on Computer Architecture, </booktitle> <month> June </month> <year> 1988, </year> <pages> pp. 73-80. </pages>
Reference-contexts: Percent Reduction in user TLB misses with common-mask TLB (LRU replacement) 16 Table 4 shows the percent reduction in number of user TLB misses in a level-two 4096-entry TLB (dir ect-mapped and 2-way set-associative). The level one TLB is a conventional 64-entry fully-associative TLB with LRU replacement. Multilevel inclusion <ref> [1] </ref> is not maintained. The common-mask scheme is very effective in level two TLBs with 30-60% r eduction in the number of TLB misses. The TLB miss penalty for a level two TLB miss can be quite signif icanta page faultwhich makes the reduction in number of TLB misses important.
Reference: [2] <author> D. Black et al., </author> <title> Translation Look-Aside Buffer Consistency: </title>
Reference-contexts: Third, alias management in the operating system simplifies considerably resulting in a significant reduction in the number of minor page faults 2 and TLB shootdowns <ref> [2] </ref>. In Section 3, we develop the general appr oach of how a single translation entry may be used to stor e the mapping information for multiple aliases to a physical page. <p> There are two additional, per haps nonobvious, advantages to using shared translation entries in any page table structure: The common-mask scheme reduces the number of TLB consistency operationse.g., TLB shootdowns <ref> [2] </ref>. Consider the following example: the operating system normally maintains a reference bit per page that is used when making page r eplacement decisions.
References-found: 2

