URL: http://ftp.cs.umn.edu/mirrors01/sunsite.unc.edu/pub/Linux/utils/file/managers/mc/devel/docs/ihstyle.ps
Refering-URL: http://ftp.cs.umn.edu/mirrors01/sunsite.unc.edu/pub/Linux/utils/file/managers/mc/devel/docs/
Root-URL: http://www.cs.umn.edu
Title: Indian Hill C Style and Coding Standards as amended for U of T Zoology UNIX  
Author: L.W. Cannon R.A. Elliott L.W. Kirchhoff J.H. Miller J.M. Milner R.W. Mitze E.P. Schan Henry Spencer 
Note: April 21, 1990 UNIX is a trademark of Bell Laboratories.  
Address: Toronto  
Affiliation: Bell Labs  Zoology Computer Systems University of  
Pubnum: N.O. Whittington  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B.A. Tague, </author> <title> "C Language Portability", </title> <address> Sept 22, </address> <year> 1977. </year> <note> This document issued by department 8234 contains three memos by R.C. </note> <author> Haight, A.L. Glasser, </author> <title> and T.L. Lyon dealing with style and portability. </title>
Reference-contexts: Short comments may appear on a single line indented over to the tab setting of the code that fol lows. if (argc &gt; 1) - /* Get input file from command line. */ if (freopen (argv <ref> [1] </ref>, "r", stdin) == NULL) error ("can't open %s"n", argv [1]); - Very short comments may appear on the same line as the code they describe, but should be tabbed over far enough to separate them from the statements. <p> Short comments may appear on a single line indented over to the tab setting of the code that fol lows. if (argc &gt; 1) - /* Get input file from command line. */ if (freopen (argv <ref> [1] </ref>, "r", stdin) == NULL) error ("can't open %s"n", argv [1]); - Very short comments may appear on the same line as the code they describe, but should be tabbed over far enough to separate them from the statements. <p> The header files will contain defines and typedefs that may vary from machine to machine. Reference <ref> [1] </ref> contains useful information on both style and portability. Many of the recommendations in this document originated in [1]. The following is a list of pitfalls to be avoided and recommendations to be considered when designing portable code: g First, one must recognize that some things are inherently non-portable. <p> The header files will contain defines and typedefs that may vary from machine to machine. Reference <ref> [1] </ref> contains useful information on both style and portability. Many of the recommendations in this document originated in [1]. The following is a list of pitfalls to be avoided and recommendations to be considered when designing portable code: g First, one must recognize that some things are inherently non-portable.
Reference: [2] <author> S.C. Johnson, </author> <title> "Lint, a C Program Checker", </title> <type> Technical Memorandum, </type> <institution> 77-1273-14, </institution> <month> September 16, </month> <year> 1977. </year>
Reference-contexts: It is a valuable tool for finding machine-dependent constructs as well as other inconsisten cies or program bugs that pass the compiler 46 10. Lint Lint is a C program checker <ref> [2] </ref> that examines C source files to detect and report type incompatibilities, inconsistencies between function definitions and calls, potential program bugs, etc. It is expected that projects will require programs to use lint as part of the official acceptance procedure 47 . <p> should be established for reviewing lint complaints? A tolerance level needs to be established in concert with the lint options to prevent unimportant complaints from hiding complaints about real bugs or inconsistencies. g If a project establishes its own archive libraries, it should plan on supplying a lint library file <ref> [2] </ref> to the system administrators. This will allow lint to check for compatible use of library functions. 13. Conclusion A set of standards has been presented for C programming style.
Reference: [3] <author> R.W. Mitze, </author> <title> "The 3B/PDP-11 Swabbing Problem", Memorandum for File, </title> <journal> 1273-770907.01MF, </journal> <volume> Sep-tember 14, </volume> <year> 1977. </year>
Reference: [4] <author> R.A. Elliott and D.C. Pfeffer, </author> <title> "3B Processor Common Diagnostic Standards- Version 1", Memorandum for File, </title> <address> 5514-780330.01MF, March 30, </address> <year> 1978. </year>
Reference: [5] <author> R.W. Mitze, </author> <title> "An Overview of C Compilation of UNIX User Processes on the 3B", Memorandum for File, </title> <address> 5521-780329.02MF, March 29, </address> <year> 1978. </year>
Reference-contexts: The functions come last 7 2.1. File Naming Conventions UNIX requires certain suffix conventions for names of files to be processed by the cc command <ref> [5] </ref> 8 The following suffixes are required: g C source file names must end in .c g Assembler source file names must end in .s In addition the following conventions are universally followed: g Relocatable object file names end in .o g Include header file names end in .h 9 g

References-found: 5

