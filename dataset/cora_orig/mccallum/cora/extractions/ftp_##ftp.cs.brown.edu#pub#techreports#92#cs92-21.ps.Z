URL: ftp://ftp.cs.brown.edu/pub/techreports/92/cs92-21.ps.Z
Refering-URL: http://www.cs.brown.edu/publications/techreports/reports/CS-92-21.html
Root-URL: http://www.cs.brown.edu/
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> A. Agrawal, P. Klein and R. Ravi, </author> <title> "When trees collide: an approximation algorithm for the generalized Steiner problem on networks," </title> <booktitle> Proceedings of the 23rd Annual ACM Symposium on Theory of Computing (1991), </booktitle> <pages> pp. 134-144. </pages>
Reference-contexts: This is fl Research supported by an IBM Graduate Fellowship. Additional support provided by NSF PYI award CCR-9157620 and DARPA contract N00014-91-J-4052 ARPA Order No. 8225. 1 always greater than three. However, we adapt and use an approximate min-max equality relating Steiner trees to packing of cuts derived earlier <ref> [1] </ref> to improve the performance ratio to three. Khuller and Thurimella [7] have recently presented a more efficient and concise version of the results in [6]. We follow their outline in our exposition here. 2 Definitions We use the same terminology as in [7]. <p> Thus it is easy to see that the weight of any Steiner tree is at least as much as the value of a maximum packing of requirement cuts. The following result was shown in <ref> [1] </ref>. Theorem 3.1 Given an undirected graph with edge-weights, and a subset of the vertices specified as sites, the minimum-weight Steiner tree connecting all the sites has weight at most twice the value of the maximum packing of requirement cuts. The algorithm in [1] greedily finds a packing of requirement cuts <p> The following result was shown in <ref> [1] </ref>. Theorem 3.1 Given an undirected graph with edge-weights, and a subset of the vertices specified as sites, the minimum-weight Steiner tree connecting all the sites has weight at most twice the value of the maximum packing of requirement cuts. The algorithm in [1] greedily finds a packing of requirement cuts and simultaneously builds a Steiner tree of weight at most twice the value of this packing. <p> Combining the results from the Theorem and the lemma above, we get the following theorem. Theorem 3.2 Given an undirected graph with edge-weights, and a subset of the vertices specified as sites, the approximately minimum-weight Steiner tree found by the algorithm in <ref> [1] </ref> has weight at most that of any minimum-weight two-connected Steiner subgraph. We can extend the above theorem to handle the case when all sites are not one-connected in the initial subgraph G 0 . To one-connect the sites in initial subgraph, we do the following. <p> Now, we contract the significant components to single supernodes; the uncontracted edges of G 0 are assigned zero weight. Now we find a Steiner tree of approximately minimum weight connecting these significant supernodes and the remaining sites in G 0 using the algorithm in <ref> [1] </ref>. This algorithm also gives us a packing of requirement cuts of at least half the value as the weight of the Steiner tree. This Steiner tree is our augmentation that one-connect the sites.
Reference: [2] <author> Y. J. Chu, and T. H. Liu, </author> <title> "On the shortest arborescence of a directed graph", </title> <institution> Sci. Sinica, </institution> <month> 14 </month> <year> (1965), </year> <pages> pp. 1396-1400. </pages>
Reference-contexts: A reverse arborescence rooted at r is one with edges directed towards r, i.e., all nodes except r have outdegree one and r has outdegree zero. Given a directed graph with edge-weights and a root node r, the algorithms in <ref> [2, 3, 9] </ref> can be used to find a minimum-weight arborescence.
Reference: [3] <author> J. Edmonds, </author> <title> "Optimum branchings", </title> <institution> J. Res. Nat. Bur. Standards Sect. B, </institution> <month> 71 </month> <year> (1967), </year> <pages> pp. 233-240. </pages>
Reference-contexts: A reverse arborescence rooted at r is one with edges directed towards r, i.e., all nodes except r have outdegree one and r has outdegree zero. Given a directed graph with edge-weights and a root node r, the algorithms in <ref> [2, 3, 9] </ref> can be used to find a minimum-weight arborescence.
Reference: [4] <author> K. P. Eswaran, and R. E. Tarjan, </author> <title> "Augmentation problems", </title> <journal> SIAM Journal on Computing, </journal> <volume> Vol. 5 (1976), </volume> <pages> pp. 653-665. </pages>
Reference: [5] <author> M. R. Garey and D. S. Johnson, </author> <title> Computers and Intractability: A guide to the theory of NP-completeness, </title> <editor> W. H. </editor> <publisher> Freeman, </publisher> <address> San Francisco (1979). </address>
Reference-contexts: observe that a naive extension of the techniques of Fredrickson and Ja'Ja' to the minimum-weight two-connected Steiner subgraph problems would result in approximation algorithms with performance factor greater than three; The initial subgraph of minimum-weight that one-connects the sites is a minimum-weight Steiner tree which is NP-hard to compute exactly <ref> [5] </ref>. Hence, in this case, the performance guarantee is the sum of that for the Steiner tree problem and two for the second phase of augmenting this Steiner tree. This is fl Research supported by an IBM Graduate Fellowship.
Reference: [6] <author> Greg N. Fredrickson, and Joseph Ja'Ja', </author> <title> "Approximation algorithms for several graph augmentation problems", </title> <journal> SIAM Journal on Computing, </journal> <volume> Vol. 10, No. 2 (1981), </volume> <pages> pp. 270-283. </pages>
Reference-contexts: The latter problems were shown to be NP-complete by Fredrickson and Ja'Ja' <ref> [6] </ref> and they also offer approximation algorithms with a worst case performance guarantee of two when the initial subgraphs are connected. <p> However, we adapt and use an approximate min-max equality relating Steiner trees to packing of cuts derived earlier [1] to improve the performance ratio to three. Khuller and Thurimella [7] have recently presented a more efficient and concise version of the results in <ref> [6] </ref>. We follow their outline in our exposition here. 2 Definitions We use the same terminology as in [7]. We are given an undirected graph G = (V; E) with a nonnegative weight function w on its edges and jV j = n; jEj = m. <p> Thus we have an approximation algorithm with guarantee three. 3 4 The Steiner bridge-connected augmentation problem 4.1 Overview We follow the outline of the algorithm of Fredrickson and Ja'Ja' <ref> [6] </ref> as modified by Khuller and Thurimella [7] for finding an approximately minimum-weight bridge-connected augmentation of a given initial subgraph. First, note that we can assume that we are given an initial subgraph one-connecting all the sites, from the remarks in the end of the previous section. <p> The costliest step in our algorithm is the computation of the all-pair shortest paths for determining the edges in E 0 and their weights which takes O (n 3 ) time. We note that the above performance ratios are approachable as illustrated by an example in <ref> [6] </ref> for the case of minimum-weight spanning bridge-connected subgraphs. By using the same example with the set of sites being the whole node set of the graph, we see that our algorithm reduces to that in [6] and hence performs just as badly on this example. 5 The Steiner biconnected subgraph <p> note that the above performance ratios are approachable as illustrated by an example in <ref> [6] </ref> for the case of minimum-weight spanning bridge-connected subgraphs. By using the same example with the set of sites being the whole node set of the graph, we see that our algorithm reduces to that in [6] and hence performs just as badly on this example. 5 The Steiner biconnected subgraph problem 5.1 Overview Again, as in Section 4, we can assume without loss of generality that the initial subgraph G 0 connects the sites. <p> While the method described in <ref> [6] </ref> generalizes to the Steiner setting as we saw above, it does not extend to the generalized Steiner setting where we seek to two-connect arbitrarily specified pairs of vertices.
Reference: [7] <author> S. Khuller, and R. Thurimella, </author> <title> "Approximation algorithms for graph augmentation," </title> <type> Technical report UMIACS-TR-91-132, </type> <institution> CS-TR-2766, Univ. of Maryland, </institution> <month> September </month> <year> (1991), </year> <note> to appear in Journal of Algorithms. </note>
Reference-contexts: However, we adapt and use an approximate min-max equality relating Steiner trees to packing of cuts derived earlier [1] to improve the performance ratio to three. Khuller and Thurimella <ref> [7] </ref> have recently presented a more efficient and concise version of the results in [6]. We follow their outline in our exposition here. 2 Definitions We use the same terminology as in [7]. <p> Khuller and Thurimella <ref> [7] </ref> have recently presented a more efficient and concise version of the results in [6]. We follow their outline in our exposition here. 2 Definitions We use the same terminology as in [7]. We are given an undirected graph G = (V; E) with a nonnegative weight function w on its edges and jV j = n; jEj = m. The set E represents the set of feasible edges to be used in the subgraph. <p> Thus we have an approximation algorithm with guarantee three. 3 4 The Steiner bridge-connected augmentation problem 4.1 Overview We follow the outline of the algorithm of Fredrickson and Ja'Ja' [6] as modified by Khuller and Thurimella <ref> [7] </ref> for finding an approximately minimum-weight bridge-connected augmentation of a given initial subgraph. First, note that we can assume that we are given an initial subgraph one-connecting all the sites, from the remarks in the end of the previous section. <p> Observation 4.1 All the edges in G D T connect a vertex to one of its descendants in T . 4.3 Correctness and Guarantee We now state and sketch the proofs of the key lemmas. They follow exactly the same outline as in <ref> [7] </ref>. Lemma 4.1 If the set of sites is bridge-connected in G, then G D is strongly connected. Proof Sketch: The proof is by contradiction. Clearly every vertex in G D can reach the root r via the tree T . <p> Again, we follow exactly the same outline as in <ref> [7] </ref>. Lemma 5.1 If the set of sites is biconnected in G, then G D is strongly connected. Proof Sketch: The proof is by contradiction. Clearly, every vertex in G D can reach the root r via the tree T . <p> Using these connections, we can identify directed edges added to G D that make u reachable from r giving a contradiction. The case when u is a block vertex is handled by a similar argument on the cut vertex p (u). The details are in <ref> [7] </ref>. 2 Lemma 5.2 If G biconnects all the sites, then the graph G 0 along with Aug biconnects all the sites. Proof Sketch: By the previous lemma, we can find a minimum weight arborescence in G D .
Reference: [8] <author> S. Khuller, and U. Vishkin, </author> <title> "Biconnectivity approximations and graph carvings", </title> <type> Technical Report UMIACS-TR-92-5, </type> <institution> CS-TR-2825 Univ. of Maryland, </institution> <month> January </month> <year> 1992. </year>
Reference-contexts: Again, the costliest step is the computation of the all-pair shortest paths for determining the edges in E 0 and their weights which takes O (n 3 ) time. 6 Conclusions Though more recent algorithms in <ref> [8] </ref> solve the minimum bridge-connected and biconnected subgraph problems with better performance factors, they do not extend to the edge-weighted or to the Steiner cases we considered.
Reference: [9] <author> R. E. Tarjan, </author> <title> "Finding optimum branchings", Networks, </title> <booktitle> 7 (1977), </booktitle> <pages> pp. 25-35. 9 </pages>
Reference-contexts: A reverse arborescence rooted at r is one with edges directed towards r, i.e., all nodes except r have outdegree one and r has outdegree zero. Given a directed graph with edge-weights and a root node r, the algorithms in <ref> [2, 3, 9] </ref> can be used to find a minimum-weight arborescence.
References-found: 9

