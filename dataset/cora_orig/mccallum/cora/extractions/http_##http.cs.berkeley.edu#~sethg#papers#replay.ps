URL: http://http.cs.berkeley.edu/~sethg/papers/replay.ps
Refering-URL: http://http.cs.berkeley.edu/~sethg/papers.html
Root-URL: http://www.cs.berkeley.edu
Title: effect on available resources for the CPUs. Hardware-assisted replay of multiprocessor programs. EXtendable Debugging and
Author: Bacon, D. F., and Goldstein, S. C. [] Balzer, R. M. EXDAMS: Cargill, T. A., and Locanthi, B. N. Eggers, S. J., and Katz, R. H. [] Lamport, L. [] LeBlanc, T. J., and Mellor-Crummey, J. M. [] Lovett, T., and Thakkar, S. McDowell, C. E., and Helmbold, D. P. [] Mellor-Crummey, J., and LeBlanc, T. [] Pan, D. Z., and Linton, M. A. Taub, D. M. [] Thacker, C. P., Stewart, L. C., and Sat-terthwaite, Jr., E. H. [] Veal, B., Sweazey, P., and Hawley, D. Technology-independent [] Zelkowitz, M. V. 
Date: 21, 7 (July 1978), 558-565.  4 (April 1987), 471-482.  21, 4 (December 1989), 593-623.  (June 1987), 52-62.  8 (August 1988), 909-920.  16, 9 (September 1973), 566.  
Address: Berkeley, CA 94720, 1991.  Berkeley, 1990.  
Affiliation: Computer Science Division, University of California,  University of California,  
Note: References [1]  Tech. Rep. 91/624,  AFIPS Spring Joint Computer Conference (1969), pp. 567-580. [3]  and Operating Systems (October 1987), pp. 82-83. [4]  and Operating Systems (April 1989), pp. 257-271. [5] Fidge, C. Partial orders for parallel debugging. In Proceedings of the ACM Workshop on Parallel and Distributed Debugging (1989), pp. 183-194. [6] Forin, A. Debugging of heterogeneous parallel programs. In Proceedings of the ACM Workshop on Parallel and Distributed Debugging (1989), pp. 130-139.  Commun. ACM  IEEE Transactions on Computers C-36,  In International Conference on Parallel Processing (August 1988), pp. 303-310. [11]  ACM Computing Surveys  (April 1989), pp. 78-86. [13] Okrafka, B. Personal communication.  of the ACM Workshop on Parallel and Distributed Debugging (1989), pp. 124-129. [15] Pratt, V. Modelling concurrency with partial orders. International Journal of Parallel Programming 15, 1 (1986). [16]  for the IEEE 896 Futurebus. IEEE Micro  Reversible execution. Com-mun. ACM  13  
Pubnum: 37,  
Abstract: Our detailed simulations have shown that the amount of log data is small enough that even for programs that exhibit very fine-grained sharing behavior, several minutes of program history can be kept. Because the logging process does not intrude upon or degrade normal execution, logging can be done continuously during normal operation. If a bug occurs, the programmer can replay the last several minutes of execution repeatedly until the bug is found. If the logging device is being used for fault-tolerance purposes, the log can be used to recreate the exact system state prior to the crash. Previous debuggers for parallel programs have not been able to perform well with programs that make maximal use of available parallelism, because of overheads in both time and space to perform logging. By reducing log entries to 2 bytes, we are able to keep up with a pipelined multiprocessor bus like the Symmetry's even when it is running at full speed. Our system allows "debug mode" to be the default and allows all the available parallelism on the machine to be used without compromising access to high-level debugging facilities. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bacon, D. F., and Goldstein, S. C. </author> <title> Hardware-assisted replay of multiprocessor programs. </title> <type> Tech. Rep. 91/624, </type> <institution> Computer Science Division, University of California, Berkeley, </institution> <address> CA 94720, </address> <year> 1991. </year>
Reference: [2] <author> Balzer, R. M. </author> <title> EXDAMS: EXtendable Debugging and Monitoring System. </title> <booktitle> In Proceedings of the AFIPS Spring Joint Computer Conference (1969), </booktitle> <pages> pp. 567-580. </pages>
Reference: [3] <author> Cargill, T. A., and Locanthi, B. N. </author> <title> Cheap hardware support for software debugging and profiling. </title> <booktitle> In Second International Conference on Architectural Support for Programming Languages and Operating Systems (October 1987), </booktitle> <pages> pp. 82-83. </pages>
Reference: [4] <author> Eggers, S. J., and Katz, R. H. </author> <title> The effect of sharing on the cache and bus performance of parallel programs. </title> <booktitle> In Third International Conference on Architectural Support for Programming Languages and Operating Systems (April 1989), </booktitle> <pages> pp. 257-271. </pages>
Reference: [5] <author> Fidge, C. </author> <title> Partial orders for parallel debugging. </title> <booktitle> In Proceedings of the ACM Workshop on Parallel and Distributed Debugging (1989), </booktitle> <pages> pp. 183-194. </pages>
Reference: [6] <author> Forin, A. </author> <title> Debugging of heterogeneous parallel programs. </title> <booktitle> In Proceedings of the ACM Workshop on Parallel and Distributed Debugging (1989), </booktitle> <pages> pp. 130-139. </pages>
Reference: [7] <author> Hewlett Packard. </author> <title> Precision Architecture and Instruction Set Reference Manual, </title> <booktitle> third ed., </booktitle> <month> September </month> <year> 1989. </year>
Reference: [8] <author> Lamport, L. </author> <title> Time, clocks, and the ordering of events in a distributed system. </title> <journal> Commun. ACM 21, </journal> <month> 7 (July </month> <year> 1978), </year> <pages> 558-565. </pages>
Reference: [9] <author> LeBlanc, T. J., and Mellor-Crummey, J. M. </author> <title> Debugging parallel programs with Instant Replay. </title> <journal> IEEE Transactions on Computers C-36, </journal> <month> 4 (April </month> <year> 1987), </year> <pages> 471-482. </pages>
Reference: [10] <author> Lovett, T., and Thakkar, S. </author> <title> The Symmetry multiprocessor system. </title> <booktitle> In International Conference on Parallel Processing (August 1988), </booktitle> <pages> pp. 303-310. </pages>
Reference: [11] <author> McDowell, C. E., and Helmbold, D. P. </author> <title> Debugging concurrent programs. </title> <journal> ACM Computing Surveys 21, </journal> <month> 4 (December </month> <year> 1989), </year> <pages> 593-623. </pages>
Reference: [12] <author> Mellor-Crummey, J., and LeBlanc, T. </author> <title> A software instruction counter. </title> <booktitle> In Third International Conference on Architectural Support for Programming Languages and Operating Systems (April 1989), </booktitle> <pages> pp. 78-86. </pages>
Reference: [13] <author> Okrafka, B. </author> <type> Personal communication. </type> <institution> University of California, Berkeley, </institution> <year> 1990. </year>
Reference: [14] <author> Pan, D. Z., and Linton, M. A. </author> <title> Supporting reverse execution of parallel programs. </title> <booktitle> In Proceedings of the ACM Workshop on Parallel and Distributed Debugging (1989), </booktitle> <pages> pp. 124-129. </pages>
Reference: [15] <author> Pratt, V. </author> <title> Modelling concurrency with partial orders. </title> <journal> International Journal of Parallel Programming 15, </journal> <month> 1 </month> <year> (1986). </year>
Reference: [16] <author> Taub, D. M. </author> <title> Improved control acquisition scheme for the IEEE 896 Futurebus. </title> <booktitle> IEEE Micro (June 1987), </booktitle> <pages> 52-62. </pages>
Reference: [17] <author> Thacker, C. P., Stewart, L. C., and Sat-terthwaite, Jr., E. H. Firefly: </author> <title> A multiprocessor workstation. </title> <journal> IEEE Transactions on Computers 37, </journal> <month> 8 (August </month> <year> 1988), </year> <pages> 909-920. </pages>
Reference: [18] <author> Veal, B., Sweazey, P., and Hawley, D. </author> <title> Technology-independent bus speeds multiprocessing systems. </title> <booktitle> Computer Technology Review (Spring 1987), </booktitle> <pages> 31-35. </pages>

References-found: 18

