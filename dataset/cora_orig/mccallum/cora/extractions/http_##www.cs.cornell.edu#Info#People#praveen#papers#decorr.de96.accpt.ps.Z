URL: http://www.cs.cornell.edu/Info/People/praveen/papers/decorr.de96.accpt.ps.Z
Refering-URL: http://www.cs.cornell.edu/Info/People/praveen/papers.html
Root-URL: http://www.cs.brown.edu/
Email: praveen@cs.wisc.edu  pirahesh@almaden.ibm.com  cleung@almaden.ibm.com  
Title: Complex Query Decorrelation  
Author: Praveen Seshadri Hamid Pirahesh T.Y. Cliff Leung 
Address: Wisconsin, Madison WI 53706, USA  San Jose, CA 95120, USA  San Jose, CA 95141, USA  
Affiliation: Computer Sciences Department University of  IBM Almaden Research Center  IBM Santa Teresa Laboratory  
Abstract: Complex queries used in decision support applications use multiple correlated subqueries and table expressions, possibly across several levels of nesting. It is usually inefficient to directly execute a correlated query; consequently, algorithms have been proposed to decorrelate the query, i.e. to eliminate the correlation by rewriting the query. This paper explains the issues involved in decorrelation, and surveys existing algorithms. It presents an efficient and flexible algorithm called magic decorrelation which is superior to existing algorithms both in terms of the generality of application, and the efficiency of the rewritten query. The algorithm is described in the context of its implementation in the Starburst Extensible Database System, and its performance is compared with other decorrelation techniques. The paper also explains why magic decorrelation is not merely applicable, but crucial in a parallel database system. 
Abstract-found: 1
Intro-found: 1
Reference: [BR91] <author> C. Beeri and R. Ramakrishnan. </author> <title> On the Power of Magic. </title> <journal> Journal of Logic Programming, </journal> <volume> 10:255, </volume> <year> 1991. </year>
Reference-contexts: The temporary table is then incorporated into the subquery via an outer-join ( instead of the more efficient left outer-join). Finally, the method cannot deal with arbitrary correlated SQL queries. Magic decorrelation is similar in flavor to the magic sets rewriting technique <ref> [BR91] </ref> which is used to propagate join bindings into subqueries to restrict computation. The primary difference between the two is that while magic rewriting propagates join bindings, magic decorrelation propagates correlation bindings. The importance of magic sets to non-recursive relational systems has been described in [MFPR90].
Reference: [B ul87] <author> G. von B ultingsloewen. </author> <title> Translating and Optimizing SQL Queries having Aggregates. </title> <booktitle> In VLDB, </booktitle> <pages> pages 235-243, </pages> <year> 1987. </year>
Reference-contexts: There are many cases where such merg-ing is not possible (usually when the subquery involves aggregation), and the correlation persists. A theoretical approach to decorrelation is described in <ref> [B ul87] </ref>, which extends the relational algebra and calculus to express correlated aggregate sub-queries. As we mentioned briefly in Section 2, a special case of magic decorrelation was proposed by Ganski/Wong [GW87]. This method considers a simple outer block consisting of a single table, and a single correlated aggregate subquery.
Reference: [Day87] <author> U. Dayal. </author> <title> Of Nests and Trees: A Unified Approach to Processing Queries that contain Nested Subqueries, Aggregates and Quantifiers. </title> <booktitle> In VLDB, </booktitle> <pages> pages 197-208, </pages> <year> 1987. </year>
Reference-contexts: introduction of an outer-join operator. Dayal's method <ref> [Day87] </ref> merges the two query blocks using the left outer-join (LOJ) operator to produce a transformed query of the form: Select D.name From DEPT D LOJ EMP E On (D.building = E.building) Where D.budget &lt; 10000 GroupBy D.[key] Having D.num emps &gt; Count (E.[key]) There are three problems with this transformation:
Reference: [Gra95] <author> J. Gray. </author> <title> A Survey of Parallel Database Systems. Invited Talk, </title> <booktitle> SIGMOD, </booktitle> <month> May </month> <year> 1995. </year>
Reference: [GW87] <author> R.A. Ganski and K.T. Wong. </author> <title> Optimization of Nested SQL Queries Revisited. </title> <booktitle> In SIGMOD, </booktitle> <pages> pages 23-33, </pages> <year> 1987. </year>
Reference-contexts: Ganski/Wong's Method: Ganski and Wong proposed a method <ref> [GW87] </ref> that projects a unique collection of correlation values into a temporary relation. The temporary relation is then used to decorrelate the subquery using an outerjoin. However, many practical details were not considered, and the method is not applicable to non-linear correlated queries. <p> A theoretical approach to decorrelation is described in [B ul87], which extends the relational algebra and calculus to express correlated aggregate sub-queries. As we mentioned briefly in Section 2, a special case of magic decorrelation was proposed by Ganski/Wong <ref> [GW87] </ref>. This method considers a simple outer block consisting of a single table, and a single correlated aggregate subquery. A temporary table similar to a magic table is generated from the single outer block relation.
Reference: [HCL + 90] <author> L. Haas, et al. </author> <title> Starburst Mid-Flight: As the dust clears. </title> <journal> IEEE TKDE, </journal> <month> March </month> <year> 1990. </year>
Reference: [Kie84] <author> W. Kiessling. </author> <title> SQL-like and Quel-like Correlation Queries with Aggregates Revisited. </title> <type> Technical Report 84/75, </type> <institution> UCB/ERL, </institution> <month> September </month> <year> 1984. </year>
Reference: [Kim82] <author> W. Kim. </author> <title> On Optimizing an SQL-like Nested Query. </title> <journal> ACM TODS, </journal> <volume> 7, </volume> <month> September </month> <year> 1982. </year>
Reference: [MFPR90] <author> I.S. Mumick, S. Finkelstein, H. Pirahesh, and R. Ramakr-ishnan. </author> <title> Magic is Relevant. </title> <booktitle> In SIGMOD, </booktitle> <year> 1990. </year>
Reference-contexts: The primary difference between the two is that while magic rewriting propagates join bindings, magic decorrelation propagates correlation bindings. The importance of magic sets to non-recursive relational systems has been described in <ref> [MFPR90] </ref>. However that work did not address the issue of correlated queries, assuming instead that the queries would be decorrelated by the prior application of some decorrelation algorithm.
Reference: [MP94] <author> I.S. Mumick and H. Pirahesh. </author> <title> Implementation of Magic-Sets in Starburst. </title> <booktitle> In SIGMOD, </booktitle> <year> 1994. </year>
Reference-contexts: In order to appreciate the details of our implementation in Starburst, we direct the reader to [PHH92] which describes the rewrite rule mechanism of Star-burst, and <ref> [MP94] </ref> which describes the implementation of the magic sets rewriting rule. It is only fair to note that magic decorrelation is a heuristic optimization that is not based on statistical cost estimates. Further like magic sets rewriting, it is dependent on the order of tables chosen.
Reference: [PHH92] <author> H. Pirahesh, J.M. Hellerstein, and W. Hasan. </author> <title> Extensible/Rule Based Query Rewrite Optimization in Starburst. </title> <booktitle> In SIG-MOD, </booktitle> <year> 1992. </year>
Reference-contexts: The join predicate S.building = D.building enforces the correlating relationship. 3 Query Rewrite in Starburst The query data structure used by Starburst is called the Query Graph Model (QGM) <ref> [PHH92] </ref>. Each query construct such as a Select-Project-Join (SPJ), an Aggregate, a Union, or an Intersection, corresponds to a query block in the QGM. The QGM is transformed using rewrite rules, each operating at the granularity of one query block. <p> Since there is no coupling between the query blocks, each of the joins can be executed in parallel on all nodes without interference from each other. 7 Related Work Current database systems attempt to merge subquery blocks into the outer query block, thereby eliminating some correlations <ref> [PHH92] </ref>. There are many cases where such merg-ing is not possible (usually when the subquery involves aggregation), and the correlation persists. A theoretical approach to decorrelation is described in [B ul87], which extends the relational algebra and calculus to express correlated aggregate sub-queries. <p> Existing decorrelation algorithms deal correctly with only a limited class of queries, and can alter the structure of the query making it difficult to subsequently apply magic sets. In order to appreciate the details of our implementation in Starburst, we direct the reader to <ref> [PHH92] </ref> which describes the rewrite rule mechanism of Star-burst, and [MP94] which describes the implementation of the magic sets rewriting rule. It is only fair to note that magic decorrelation is a heuristic optimization that is not based on statistical cost estimates.
Reference: [SACLP79] <author> P.G. Selinger, M. Astrahan, D. Chamberlin, R. Lorie, and T. Price. </author> <title> Access Path Selection in a Relational Database Management System. </title> <booktitle> In SIGMOD, </booktitle> <pages> pages 23-34, </pages> <year> 1979. </year>
Reference: [SHR94] <author> P. Seshadri, J.M. Hellerstein, and R. Ramakrishnan. </author> <title> Filter Joins: Cost-Based Optimization for Magic Sets. </title> <type> Technical Report, </type> <institution> Computer Sciences Department, U.W.-Madison, </institution> <year> 1995. </year>
Reference-contexts: Our implementation simply optimizes the query once without decorrelation, and using the chosen join orders repeats the optimization with decorrelation. The better of the two optimized plans is chosen. We are currently working at a closer integration between cost-based optimization and such heuristic rewrite-based transformations <ref> [SHR94] </ref>. 8 Conclusions We discussed the issues involved in decorrelation, and the problems with existing approaches.
Reference: [SPL94] <author> P. Seshadri, H. Pirahesh, and T.Y.C. Leung. </author> <title> Decorrelating Complex Queries. </title> <type> Research Report RJ 9846, </type> <institution> IBM Almaden Research Center, </institution> <year> 1994. </year>
Reference-contexts: All the same, it may be desirable to decorrelate the query as much as possible. Magic decorrelation deals with all these situations; some of the details have been omitted in this paper but are explained in <ref> [SPL94] </ref>). Any correlated subquery block can be modeled as a function CS (x) whose parameters x are the correlation values. The function returns a table which is then processed at the outer block level. <p> We now look at each of these cases separately, in the context of our example. 4.3.1 non-SPJ Box If the CurBox is not an SPJ box, for example an Aggregate box, the actual correlation is usually contained in some descendant of the CurBox (some exceptions are described in <ref> [SPL94] </ref>). Therefore, the correlation bindings in the magic table should be fed to the children of the CurBox, so that they can be decorre-lated. Once the children have been decorrelated, the CurBox can absorb the correlation bindings from the children. <p> The behavior of each box with respect to the magic decorrelation algorithm is captured by a box en-capsulator, The details of these aspects of the algorithm are described in <ref> [SPL94] </ref>. We have seen that the magic decorrelation algorithm can introduce extra CI boxes into the query graph; this happens when correlated subqueries occur within existential (ANY,EXISTS,IN) or universal (ALL) quantification. These boxes perform repeated correlated selections on the result of the decorrelated subquery. <p> These decisions on whether and how to decorrelate act as knobs that can be used to adapt the magic decorrelation algorithm <ref> [SPL94] </ref>. 5 Performance Results Magic decorrelation has been prototyped in the Starburst DBMS. In this section, we present a performance comparison with other strategies for processing correlated queries. 5.1 Algorithms Investigated We considered four basic algorithms: nested iteration (NI), Kim's method (Kim), Dayal's method (Dayal), and magic decor-relation.
Reference: [SQL93] <author> ISO ANSI. </author> <note> ISO-ANSI Working Draft: Database Language SQL2 and SQL3; X3H2; ISO/IEC JTC1/SC21/WG3. </note> <year> 1993. </year>
Reference: [TPC-D94] <institution> TPC benchmark group. </institution> <type> TPC-D Draft, </type> <month> December </month> <year> 1994. </year> <title> Information Paradigm. </title> <address> Suite 7, 115 North Wahsatch Avenue, Col-orado Springs, CO 80903. </address>
Reference-contexts: in Section 7, the magic decorrelation algorithm uses the join order of the nested iteration strategy to generate the correlation bindings. 5.2 Parameters Name customers parts suppliers partsupp lineitem Tuples 15,000 20,000 1,000 80,000 600,000 Table 1: TPC-D Database In our experiments, we used the TPC-D complex query benchmark database <ref> [TPC-D94] </ref> of size 120 megabytes. The experiments were run on a IBM RS6000/530H workstation, configured with 40 megabytes of database buffer and 40 megabytes of heap memory. The database tables for our experiments is shown in Table 1, along with the number of tuples in each table.
References-found: 16

