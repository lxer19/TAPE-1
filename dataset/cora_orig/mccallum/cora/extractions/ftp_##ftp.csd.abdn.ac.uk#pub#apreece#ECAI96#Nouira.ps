URL: ftp://ftp.csd.abdn.ac.uk/pub/apreece/ECAI96/Nouira.ps
Refering-URL: http://www.csd.abdn.ac.uk/~apreece/ECAI96/Nouira.html
Root-URL: 
Email: email: nouira, fouet@lisisun.univ-lyon1.fr  
Title: A Knowledge Based Tool for the Incremental Construction, Validation and Refinement of Large Knowledge Bases  
Author: Rym Nouira, Jean-Marc Fouet 
Address: 43 Boulevard du 11 Novembre 1918 69622 Villeurbanne Cedex France  
Affiliation: Laboratoire d'Ingnierie des Systmes d'Information, Universit Claude Bernard et INSA de Lyon  
Abstract: We present an assistance tool for the incremental construction of knowledge bases. First it divides the construction process into many phases. Each one is characterised by particular functionalities aiming at structuring treatments and checks in the most adaptive way, according to the needs of the expert, and to the contents of the base. This will avoid accomplishing non adapted checks that might generate invalid or redundant results . Moreover and throughout the different treatments and checks applied on each chunk of knowledge, the system generates a large number of meta-attributes. Being semantically related to the domain or specific to the needs of the checks, they allow the system to enhance the information that it possess about the knowledge contained in the base. This leads to a meta-knowledge base that speeds up future process. For example, some significant describing properties concerning concepts and rules will be used to considerably reduce the combinatory. Others, consisting of access keys, will reduce the search duration for a particular information. Finally, as knowledge used to accomplish treatments is itself heuristic, the system may be applied to itself. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Eriksson H. </author> <title> A survey of Knowledge Acquisition techniques and tools and their relationship to software engineering. </title> <journal> The journal of systems and software Vol 19 N1, </journal> <pages> 97-107, </pages> <year> 1992. </year>
Reference-contexts: Since we are dealing with domains in which the heuristic nature of knowledge makes it impossible for problems and solutions to be well defined, the stage based life cycle used i n software engineering is no longer applicable <ref> [1] </ref>. In fact, the uncertain character of knowledge requires frequent questioning and updating of knowledge already defined. Consequently, an incremental approach becomes necessary [2].
Reference: [2] <author> Weitzel J.-R and Kerschberg. </author> <title> Developing knowledge based systems: Reorganising the system development life cycle. </title> <note> Communications of the ACM April 89 Vol 32 number 4 , 482-488. </note>
Reference-contexts: In fact, the uncertain character of knowledge requires frequent questioning and updating of knowledge already defined. Consequently, an incremental approach becomes necessary <ref> [2] </ref>. Many methodologies and tools have been developed in order t o help the expert formulate his knowledge ; they rely, in most cases, upon a knowledge engineer. <p> He will begin by describing the conceptual structure of the domain <ref> [2] </ref>, the objects classes and attributes, describe their characteristics and the relations that may exist between them. Once the conceptual knowledge conveniently and sufficiently described, it will constitute for the system a solid and reliable basis that will assist the second big step that is the extraction of deductive knowledge.
Reference: [3] <author> Fouet J.-M., Nouira R., </author> <title> Acquisition and structuration of knowledge using meta-knowledge. </title> <booktitle> IJCAI , Workshop on Machine learning. </booktitle> <address> Montreal, </address> <month> August </month> <year> 1995. </year>
Reference-contexts: So, many points of view have emerged, aiming at constructing tools that will assist the knowledge engineer in his task and sometimes even replace him. Our work is done in this perspective <ref> [3] </ref> : to provide the tandem expert/knowledge engineer with a tool that will help them validating the knowledge base progressively during i ts construction. In fact, such a system is perfectly able to have a complete and precise view of all the knowledge contained in the base. <p> Heuristics are then used t o generate the corresponding incoherence conjectures and to try to prove them. 3 THE DEVELOPMENT ENVIRONMENT Our tool is developed in the Gosseyn Machine Environment <ref> [3] </ref>. It is a non monotonic system, based upon first order and 3-valued logic. It uses the object and rule formalisms to represent knowledge. Knowledge contained in the base may be divided into two main parts. Conceptual knowledge consists of the set of objects-classes and attributes.
Reference: [4] <author> Nouira R. , Fouet J. </author> <title> -M., A knowledge based tool for checking large knowledge bases. </title> <booktitle> IEA-AIE 96 the Ninth International Conference on Industrial and Engineering Applications of Artificial Intelligence & Expert Systems. </booktitle> <address> Fukuoka, Japan. </address> <month> June 4-7, </month> <year> 1996. </year>
Reference-contexts: And its performance will not decrease if the base grows i n size, which is the main weakness of a human being. So each newly created knowledge will be studied, confronted with some other chunks of knowledge contained in the base, looking for anomalies or deficiencies <ref> [4] </ref> [5]. The result consists of a set of messages sent to the knowledge engineer, describing all the imperfections, errors or missing knowledge that the system was able to detect. The knowledge engineer will then check whether the anomaly was caused by him. <p> to designate two different concepts. 6.2 Local checks on rules As explained above, since the rule base initialisation phase, the system proceeds by validating locally each newly created rule, in order to verify that treatments applied on concepts are compatible with all the semantic constraints they have t o satisfy <ref> [4] </ref> [5]. This consists of checking first that the rule i s fireable and second that its application generates a coherent fact base. In both cases this consists of a set of premises that have to be asserted compatible. <p> If that is not the case, this allows to determine the exact combinations of variables for which the rule is valid. 6.3 Global checks on rules They consist in searching, for each newly created rule, rules that may be redundant or conflictual with it <ref> [4] </ref> [5] . Reducing the combinatory in this case becomes vital. 6.3.1 Detecting conflicts We define a conflict between two rules when they cause the generation, during the resolution of a problem, of two incompatible facts. <p> An important aspect of the system is the continuity of the treatments. Most of the checks accomplished by the system are based upon previously obtained results <ref> [4] </ref> [5]. This has the advantage of reducing treatments but, and this is the major inconvenient of our system, it raises the cost of updating knowledge.
Reference: [5] <author> Nouira R. , Fouet J. </author> <title> -M., A meta-knowledge based method for detecting invalid, conflictual and redundant rules. AAAI-96 Workshop on Validation and Verification of knowledge based systems and subsystems, </title> <booktitle> In Proc. Ninth national Conference on Artificial Intelligence Portland, </booktitle> <month> Oregon 4-8 August </month> <year> 1996. </year>
Reference-contexts: And its performance will not decrease if the base grows i n size, which is the main weakness of a human being. So each newly created knowledge will be studied, confronted with some other chunks of knowledge contained in the base, looking for anomalies or deficiencies [4] <ref> [5] </ref>. The result consists of a set of messages sent to the knowledge engineer, describing all the imperfections, errors or missing knowledge that the system was able to detect. The knowledge engineer will then check whether the anomaly was caused by him. <p> designate two different concepts. 6.2 Local checks on rules As explained above, since the rule base initialisation phase, the system proceeds by validating locally each newly created rule, in order to verify that treatments applied on concepts are compatible with all the semantic constraints they have t o satisfy [4] <ref> [5] </ref>. This consists of checking first that the rule i s fireable and second that its application generates a coherent fact base. In both cases this consists of a set of premises that have to be asserted compatible. <p> If that is not the case, this allows to determine the exact combinations of variables for which the rule is valid. 6.3 Global checks on rules They consist in searching, for each newly created rule, rules that may be redundant or conflictual with it [4] <ref> [5] </ref> . Reducing the combinatory in this case becomes vital. 6.3.1 Detecting conflicts We define a conflict between two rules when they cause the generation, during the resolution of a problem, of two incompatible facts. <p> An important aspect of the system is the continuity of the treatments. Most of the checks accomplished by the system are based upon previously obtained results [4] <ref> [5] </ref>. This has the advantage of reducing treatments but, and this is the major inconvenient of our system, it raises the cost of updating knowledge.
Reference: [6] <author> Wielinga B. J, Breuker J. A., </author> <title> Models of expertise, </title> <booktitle> 7th European conference on artificial intelligence, ECAI 86, </booktitle> <address> Brighton. </address>
Reference-contexts: They are of different levels of abstraction : the most general ones like KADS <ref> [6] </ref> and PROTEGE [7] try to adapt to all domains ; they first help the user defining a conceptual model of the expertise, and then use this model as a framework for knowledge extraction.
Reference: [7] <institution> Musen M An editor for the conceptual models of interactive knowledge-acquisition tools International journal of Man Machine studies 1989 31 673-698 </institution>
Reference-contexts: They are of different levels of abstraction : the most general ones like KADS [6] and PROTEGE <ref> [7] </ref> try to adapt to all domains ; they first help the user defining a conceptual model of the expertise, and then use this model as a framework for knowledge extraction.
Reference: [8] <author> Boose, J.H., </author> <title> Expertise transfer for expert system design Elsevier Ed., </title> <booktitle> Advances in human factors/Ergonomics 1986. </booktitle>
Reference-contexts: Other systems like ETS <ref> [8] </ref>, AQUINAS [9], MORE [10], MOLE [11], SALT [12] deal with a certain category of problems. They rely on a general analysis of problem resolution methods to define their extraction method.
Reference: [9] <author> Boose, J.H., Bradshaw, J.M., </author> <title> Expertise transfer and complex problems: using AQUINAS as a knowledge acquisition Workbench for knowledge-based systems, </title> <journal> International journal of man machine studies, </journal> <volume> n26, </volume> <year> 1987. </year>
Reference-contexts: Other systems like ETS [8], AQUINAS <ref> [9] </ref>, MORE [10], MOLE [11], SALT [12] deal with a certain category of problems. They rely on a general analysis of problem resolution methods to define their extraction method.
Reference: [10] <author> Khan G., Nowlan S., Mac Dermott., J, </author> <title> MORE: an intelligent knowledge acquisition tool. </title> <booktitle> Proceedings of IJCAI 85, </booktitle> <address> Munich RFA. </address>
Reference-contexts: Other systems like ETS [8], AQUINAS [9], MORE <ref> [10] </ref>, MOLE [11], SALT [12] deal with a certain category of problems. They rely on a general analysis of problem resolution methods to define their extraction method.
Reference: [11] <author> Eshelman L., Ehret D., Mc Dermott J., Tan M. MOLE, </author> <title> A tenacious knowledge acquisition tool, </title> <journal> international journal of Man-Machine studies. </journal>
Reference-contexts: Other systems like ETS [8], AQUINAS [9], MORE [10], MOLE <ref> [11] </ref>, SALT [12] deal with a certain category of problems. They rely on a general analysis of problem resolution methods to define their extraction method.
Reference: [12] <author> Marcus, S., Mc Dermott, J., </author> <title> SALT, </title> <journal> a knowledge acquisition language for propose and revise systems , Artificial Intelligence n39, </journal> <year> 1989. </year>
Reference-contexts: Other systems like ETS [8], AQUINAS [9], MORE [10], MOLE [11], SALT <ref> [12] </ref> deal with a certain category of problems. They rely on a general analysis of problem resolution methods to define their extraction method.
Reference: [13] <author> Musen M, Fagan L, Combs D., Shortliffe E,. </author> <title> Using a domain model to drive an interactive knowledge editing tool. </title> <booktitle> Proceedings of EKAW 86 Banff, </booktitle> <address> Canada 1986. </address>
Reference-contexts: Other systems like ETS [8], AQUINAS [9], MORE [10], MOLE [11], SALT [12] deal with a certain category of problems. They rely on a general analysis of problem resolution methods to define their extraction method. Lastly, very specialised tools like STUDENT <ref> [13] </ref>, have an extraction method which has been developed with close reference to specificities of the task. 2.2 Knowledge verification Since it is the other main task in assuring the quality of performance of the final system, a considerable research effort has been devoted to the verification of knowledge based systems
Reference: [14] <author> Lopez B., Mesguer P., Plaza E., </author> <title> Knowledge-based systems validation: A state of the art. </title> <journal> AI Communications, </journal> <volume> 3 (2): 58- 72, </volume> <year> 1990. </year>
Reference-contexts: have an extraction method which has been developed with close reference to specificities of the task. 2.2 Knowledge verification Since it is the other main task in assuring the quality of performance of the final system, a considerable research effort has been devoted to the verification of knowledge based systems <ref> [14] </ref> [15] [16] [17] [18]. The tools developed may be divided into two categories [16] 2.2.1 Domain independent tools Domain independent tools try to detect anomalies which consist of an abuse or unusual use of the knowledge representation scheme.
Reference: [15] <author> Coenen F., Bench-cap T., </author> <title> Maintenance of knowledge based systems Academic Press 1993. </title>
Reference-contexts: an extraction method which has been developed with close reference to specificities of the task. 2.2 Knowledge verification Since it is the other main task in assuring the quality of performance of the final system, a considerable research effort has been devoted to the verification of knowledge based systems [14] <ref> [15] </ref> [16] [17] [18]. The tools developed may be divided into two categories [16] 2.2.1 Domain independent tools Domain independent tools try to detect anomalies which consist of an abuse or unusual use of the knowledge representation scheme.
Reference: [16] <author> OKeefe R. M., OLeary D. E., </author> <title> Expert systems verification and validation: A survey and tutorial. </title> <journal> Artificial intelligence Review 7, </journal> <month> p3-42 </month> <year> 1993. </year>
Reference-contexts: extraction method which has been developed with close reference to specificities of the task. 2.2 Knowledge verification Since it is the other main task in assuring the quality of performance of the final system, a considerable research effort has been devoted to the verification of knowledge based systems [14] [15] <ref> [16] </ref> [17] [18]. The tools developed may be divided into two categories [16] 2.2.1 Domain independent tools Domain independent tools try to detect anomalies which consist of an abuse or unusual use of the knowledge representation scheme. <p> the task. 2.2 Knowledge verification Since it is the other main task in assuring the quality of performance of the final system, a considerable research effort has been devoted to the verification of knowledge based systems [14] [15] <ref> [16] </ref> [17] [18]. The tools developed may be divided into two categories [16] 2.2.1 Domain independent tools Domain independent tools try to detect anomalies which consist of an abuse or unusual use of the knowledge representation scheme. Some are based on decision table methods : ESC [19] RCP [20] CHECK [21]. They separate rules' conditions and actions parameters.
Reference: [17] <author> Ayel M., Rousset M.-C., </author> <title> La cohrence dans les bases de connaissances, </title> <address> CEPADUES, </address> <year> 1990. </year>
Reference-contexts: method which has been developed with close reference to specificities of the task. 2.2 Knowledge verification Since it is the other main task in assuring the quality of performance of the final system, a considerable research effort has been devoted to the verification of knowledge based systems [14] [15] [16] <ref> [17] </ref> [18]. The tools developed may be divided into two categories [16] 2.2.1 Domain independent tools Domain independent tools try to detect anomalies which consist of an abuse or unusual use of the knowledge representation scheme. Some are based on decision table methods : ESC [19] RCP [20] CHECK [21]. <p> It consists of an integrated set of generic tools for checking the structural, logical and semantic integrity of knowledge bases. To do so, it relies on structure checking algorithms and the information contained in the meta-knowledge base. SACCO [30] <ref> [17] </ref> is a system for interactive acquisition of knowledge. Static checks are made in parallel with their acquisition. The coherence model, supplied by the expert, contains all semantic constraints that knowledge contained i n the base has to satisfy. Hence each newly created knowledge will first undergo static checks.
Reference: [18] <author> Gupta U., </author> <title> Validating and verifying Knowledge-Based Systems. </title> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> CA, </address> <year> 1991. </year>
Reference-contexts: which has been developed with close reference to specificities of the task. 2.2 Knowledge verification Since it is the other main task in assuring the quality of performance of the final system, a considerable research effort has been devoted to the verification of knowledge based systems [14] [15] [16] [17] <ref> [18] </ref>. The tools developed may be divided into two categories [16] 2.2.1 Domain independent tools Domain independent tools try to detect anomalies which consist of an abuse or unusual use of the knowledge representation scheme. Some are based on decision table methods : ESC [19] RCP [20] CHECK [21].
Reference: [19] <author> Cragen B.J., Steudel H.J., </author> <title> A decision table based processor for checking completeness and consistency in rule based expert systems. </title> <journal> International journal of Man Machine studies. </journal> <volume> Vol 26, p633-648, </volume> <year> 1987. </year>
Reference-contexts: The tools developed may be divided into two categories [16] 2.2.1 Domain independent tools Domain independent tools try to detect anomalies which consist of an abuse or unusual use of the knowledge representation scheme. Some are based on decision table methods : ESC <ref> [19] </ref> RCP [20] CHECK [21]. They separate rules' conditions and actions parameters. Conditions are given along the X-axis and actions along the Y-axis. Algorithms then examine the existence of relationships among rows and columns.
Reference: [20] <author> Suwa M., Scott A.C, </author> <title> Shortliffe E.H. An approach to verifying completeness and consistency in a rule-based expert system. </title> <type> AI Magazine 3 (4) 16-2, </type> <month> Fall </month> <year> 1982. </year>
Reference-contexts: The tools developed may be divided into two categories [16] 2.2.1 Domain independent tools Domain independent tools try to detect anomalies which consist of an abuse or unusual use of the knowledge representation scheme. Some are based on decision table methods : ESC [19] RCP <ref> [20] </ref> CHECK [21]. They separate rules' conditions and actions parameters. Conditions are given along the X-axis and actions along the Y-axis. Algorithms then examine the existence of relationships among rows and columns.
Reference: [21] <author> Nguyen T. A., Perkins W. A., Laffey T. J., Pecora D., </author> <title> Knowledge base verification. </title> <journal> AI Magazine 8 (2): </journal> <pages> 69-75, </pages> <month> Summer </month> <year> 1987. </year>
Reference-contexts: The tools developed may be divided into two categories [16] 2.2.1 Domain independent tools Domain independent tools try to detect anomalies which consist of an abuse or unusual use of the knowledge representation scheme. Some are based on decision table methods : ESC [19] RCP [20] CHECK <ref> [21] </ref>. They separate rules' conditions and actions parameters. Conditions are given along the X-axis and actions along the Y-axis. Algorithms then examine the existence of relationships among rows and columns.
Reference: [22] <author> Preece A.D., Shingal R., </author> <title> Foundation and application of knowledge base verification. </title> <journal> International journal of intelligent Systems, </journal> <volume> 9 (8) 683-701, </volume> <year> 1994. </year>
Reference-contexts: Conditions are given along the X-axis and actions along the Y-axis. Algorithms then examine the existence of relationships among rows and columns. The drawback of this method is that it is useful only for small rule bases, because the table grows to an unmanageable proportion. COVER <ref> [22] </ref> constructs a graphic representation of the rule base. This allows it to detect anomalies across numerous rules rather than between pairs of rules, as is common with the table based approaches. KB-reducer [23] is a system for checking all potential inconsistencies and redundancies in rule bases.
Reference: [23] <author> Ginsberg A., </author> <title> Knowledge base system reduction: A new approach to checking knowledge bases for consistency and redundancy. </title> <booktitle> In Proc. Seventh National Conference on Artificial Intelligence (AAAI-88), </booktitle> <pages> pages 585-589. </pages> <address> AAAI-Press, Menlo Park, CA, </address> <year> 1988. </year>
Reference-contexts: COVER [22] constructs a graphic representation of the rule base. This allows it to detect anomalies across numerous rules rather than between pairs of rules, as is common with the table based approaches. KB-reducer <ref> [23] </ref> is a system for checking all potential inconsistencies and redundancies in rule bases. It transforms rules into a logical form, then it computes for each hypothesis its labels following the ATMS terminology [24]. Anomalies are detected during this labelling process.
Reference: [24] <author> De Kleer J., </author> <title> An assumption based TMS. </title> <booktitle> Artificial intelligence 28, </booktitle> <address> p127 -162. </address>
Reference-contexts: KB-reducer [23] is a system for checking all potential inconsistencies and redundancies in rule bases. It transforms rules into a logical form, then it computes for each hypothesis its labels following the ATMS terminology <ref> [24] </ref>. Anomalies are detected during this labelling process. Using a similar approach, COVADIS [25] is based on the constraint propagation technique. It uses the integrity constraints to construct minimal and coherent initial fact bases.
Reference: [25] <institution> Rousset M.-C Sur la cohrence et la validation des bases de connaissances: le systme COVADIS. Thse d'tat, Universit d'Orsay, </institution> <address> France Septembre 1988. </address>
Reference-contexts: KB-reducer [23] is a system for checking all potential inconsistencies and redundancies in rule bases. It transforms rules into a logical form, then it computes for each hypothesis its labels following the ATMS terminology [24]. Anomalies are detected during this labelling process. Using a similar approach, COVADIS <ref> [25] </ref> is based on the constraint propagation technique. It uses the integrity constraints to construct minimal and coherent initial fact bases. Then it saturates each of them in forward chaining in order t o detect conflicts in the rule base.
Reference: [26] <editor> Pipard E., Dtection dincohrences et dincompltudes dans les bases de rgles- Le systme INDE. </editor> <booktitle> Proceedings Les systmes experts et leurs application, </booktitle> <address> Avignon June 88, p13-33. </address>
Reference-contexts: Using a similar approach, COVADIS [25] is based on the constraint propagation technique. It uses the integrity constraints to construct minimal and coherent initial fact bases. Then it saturates each of them in forward chaining in order t o detect conflicts in the rule base. Some systems like INDE <ref> [26] </ref> and [27], use Petri nets t o represent the rule base, which can then be tested for detecting inconsistencies, incompleteness, and non fireable rules, using existing methods. 2.2.2 Domain dependent tools Domain dependent tools use meta-knowledge from the domain to verify the validity of the knowledge.
Reference: [27] <author> Agarwal R., Tanniru M., </author> <title> A Petri-Net based approach for verifying the integrity of Production systems. Knowledge-Based systems verification, Validation and Testing. </title> <booktitle> Workshop notes from the 9th National Conference on Artificial Intelligence, </booktitle> <address> AAAI-91 Anaheim CA, </address> <month> 17 July. </month>
Reference-contexts: It uses the integrity constraints to construct minimal and coherent initial fact bases. Then it saturates each of them in forward chaining in order t o detect conflicts in the rule base. Some systems like INDE [26] and <ref> [27] </ref>, use Petri nets t o represent the rule base, which can then be tested for detecting inconsistencies, incompleteness, and non fireable rules, using existing methods. 2.2.2 Domain dependent tools Domain dependent tools use meta-knowledge from the domain to verify the validity of the knowledge.
Reference: [28] <editor> Stachowitz R.A. et Combs J. B., </editor> <booktitle> Validation of expert systems. 20th annual Hawaii International Conference on System Sciences, </booktitle> <volume> Vol 1, </volume> <pages> pages 686-695, </pages> <year> 1987. </year>
Reference-contexts: One of the best known examples in this category is EVA <ref> [28] </ref> [29]. It consists of an integrated set of generic tools for checking the structural, logical and semantic integrity of knowledge bases. To do so, it relies on structure checking algorithms and the information contained in the meta-knowledge base. SACCO [30] [17] is a system for interactive acquisition of knowledge.
Reference: [29] <author> Chang C. L., Combs J. B., Stachowitz R.A., </author> <title> A report on the expert system validation associate (EVA). </title> <journal> Experts systems with applications. </journal> <volume> Vol 1, N 3, </volume> <month> p219-230. </month>
Reference-contexts: One of the best known examples in this category is EVA [28] <ref> [29] </ref>. It consists of an integrated set of generic tools for checking the structural, logical and semantic integrity of knowledge bases. To do so, it relies on structure checking algorithms and the information contained in the meta-knowledge base. SACCO [30] [17] is a system for interactive acquisition of knowledge.
Reference: [30] <author> Ayel, M., </author> <title> Dtection d'incohrences dans les bases de connaissances: </title> <type> SACCO. </type> <institution> thse d'tat, universit de Chambery, </institution> <month> September </month> <year> 1987. </year>
Reference-contexts: It consists of an integrated set of generic tools for checking the structural, logical and semantic integrity of knowledge bases. To do so, it relies on structure checking algorithms and the information contained in the meta-knowledge base. SACCO <ref> [30] </ref> [17] is a system for interactive acquisition of knowledge. Static checks are made in parallel with their acquisition. The coherence model, supplied by the expert, contains all semantic constraints that knowledge contained i n the base has to satisfy. Hence each newly created knowledge will first undergo static checks.
Reference: [31] <author> Pitrat, J., Mta-connaissances, Futur de lintelligence artificielle, Herms, </author> <year> 1990. </year>
Reference-contexts: Finally, an important difference is that we deal with systems using a non monotonic and 3-valued logic. 8 DISCUSSION AND CONCLUSION We have presented a system that relies on meta-knowledge <ref> [31] </ref> to divide the construction process into phases. By asking the expert to concentrate at each step on the formulation of a certain type of knowledge, we expect t o obtain a relatively complete and neat version that raises the efficiency of the checks that will be applied on them.
References-found: 31

