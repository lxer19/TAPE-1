URL: http://www-cs-faculty.stanford.edu/~koza/SACamp.ps
Refering-URL: http://www.cs.bham.ac.uk/~wbl/biblio/gp-bibliography.html
Root-URL: 
Email: koza@cs.stanford.edu  fhb3@slip.net  dandre@cs.berkeley.edu  makeane@ix.netcom.com  
Title: EVOLUTION USING GENETIC PROGRAMMING OF A LOW- DISTORTION 96 DECIBEL OPERATIONAL AMPLIFIER  
Author: John R. Koza Forrest H Bennett III David Andre Martin A. Keane 
Keyword: Genetic programming, Automated circuit design, Analog circuit synthesis, operational amplifier  
Address: 258 Gates Building  Stanford, California 94305  Stanford, California 94305  Berkeley, California  5733 West Grover Chicago, Illinois 60630  
Affiliation: Computer Science Dept.  Stanford University  Visiting Scholar Stanford University  Computer Science Dept. University of California  Martin Keane Inc.  
Abstract: There is no known general technique for automatically designing an analog electrical circuit that satisfies design specifications. Genetic programming was used to evol ve both the topology and the sizing (numerical values) for each component of a low-distortion 9 6 decibel (64,860 to-1) amplifier circuit.
Abstract-found: 1
Intro-found: 1
Reference: <author> Aaserud, O. and Nielsen, I. Ring. </author> <year> 1995. </year> <title> Trends in current analog design: A panel debate. Analog Integrated Circuits and Signal Processing. </title> <type> 7(1) 5-9. </type>
Reference: <author> Andre, David and Koza, John R. </author> <year> 1996. </year> <title> Parallel genetic programming: A scalable implementation using the transputer architecture. </title> <editor> In Angeline, P. J. and Kinnear, K. E. Jr. (editors). </editor> <booktitle> 1996. Advances in Genetic Programming 2. </booktitle> <address> Cambridge: </address> <publisher> MIT Press. </publisher>
Reference: <editor> Angeline, Peter J. and Kinnear, Kenneth E. Jr. (editors). </editor> <booktitle> 1996. Advances in Genetic Programming 2. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference: <author> Gruau, Frederic. </author> <year> 1996. </year> <title> Artificial cellular development in optimization and compilation. </title> <editor> In Sanchez, Eduardo and Tomassini, Marco (editors). </editor> <year> 1996. </year> <title> Towards Evolvable Hardware. </title> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> Volume 1062. </volume> <publisher> Berlin: Springer-Verlag. </publisher> <pages> Pages 48 75. </pages>
Reference: <author> Holland, John H. </author> <year> 1975. </year> <booktitle> Adaptation in Natural and Artificial Systems. </booktitle> <address> Ann Arbor, MI: </address> <publisher> University of Michigan Press. </publisher>
Reference: <editor> Kinnear, Kenneth E. Jr. (editor). </editor> <booktitle> 1994. Advances in Genetic Programming. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference: <author> Koza, John R. </author> <year> 1992. </year> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R. </author> <year> 1994a. </year> <title> Genetic Programming II: Automatic Discovery of Reusable Programs. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference-contexts: Connection-modifying functions have one or more construction-continuing subtrees, but no arithmetic-performing subtrees. Component-creating functions have one construction-continuing subtree and typically have one arithmetic-performing subtree. This constrained syntactic structure is preserved by using structure-preserving crossover with point typing <ref> (Koza 1994a) </ref>. 2 . 1 . The Embryonic Circuit The developmental process for converting a program tree into an electrical circuit begins with an embryonic circuit. shows a one-input, one-output embryonic circuit that serves as a test harness for evolving op amp circuits. VSOURCE is the input signal.
Reference: <author> Koza, John R. </author> <year> 1994b. </year> <title> Genetic Programming II Videotape: The Next Generation. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R. </author> <year> 1995. </year> <title> Evolving the architecture of a multipart program in genetic programming using architecture-altering operations. </title> <editor> In McDonnell, John R., Reynolds, Robert G., and Fogel, David B. (editors). </editor> <booktitle> 1995. Evolutionary Programming IV: Proceedings of the Fourth Annual Conference on Evolutionary Programming. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher> <pages> Pages 695717. </pages>
Reference-contexts: Architecture-altering operations provide a way to automatically determine the number of such subprograms, the number of arguments that each possesses, and the nature of the hierarchical references, if any, among such subprograms <ref> (Koza 1995) </ref>. Recent research papers on genetic programming can be found in Kinnear (1994), Angeline and Kinnear (1996), and Koza, Goldberg, Fogel, and Riolo (1996).
Reference: <author> Koza, John R., Andre, David, Bennett III, Forrest H, and Keane, Martin A. </author> <year> 1996. </year> <title> Use of automatically defined functions and architecture-altering operations in automated circuit synthesis using genetic programming. </title> <editor> In Koza, John R., Goldberg, David E., Fogel, David B., and Riolo, Rick L. (editors). </editor> <booktitle> 1996. Genetic Programming 1996: Proceedings of the First Annual Conference, </booktitle> <month> July 28-31, </month> <year> 1996, </year> <institution> Stanford University. </institution> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </author> <year> 1996a. </year> <title> Toward evolution of electronic animals using genetic programming. </title> <booktitle> Artificial Life V: Proceedings of the Fifth International Workshop on the Synthesis and Simulation of Living Systems. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference-contexts: Lowpass Filter Genetic programming has successfully evolved a design for a lowpass filter with passband below 1,000 Hz and a stopband above 2,000 Hz with requirements equivalent to that of a fifth order elliptic filter <ref> (Koza, Bennett, Andre, and Keane 1996a, 1996c) </ref>. For the amplifier described above, the fitness measure was based on gain. For a filter, the fitness measure is based on the amount of voltage that the circuit passes at various frequencies.
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </author> <year> 1996b. </year> <title> Four problems for which a computer program evolved by genetic programming is competitive with human performance. </title> <booktitle> Proceedings of the 1996 IEEE International Conference on Evolutionary Computation. </booktitle> <publisher> IEEE Press. </publisher> <pages> Pages 110. </pages>
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </author> <year> 1996c. </year> <title> Automated design of both the topology and sizing of analog electrical circuits using genetic programming. </title> <editor> In Gero, John S. and Sudweeks, Fay (editors). </editor> <booktitle> Artificial Intelligence in Design '96. </booktitle> <address> Dordrecht: </address> <publisher> Kluwer. </publisher> <pages> Pages 151-170. </pages>
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </author> <year> 1996d. </year> <title> Automated WYWIWYG design of both the topology and component values of analog electrical circuits using genetic programming. </title> <editor> In Koza, John R., Goldberg, David E., Fogel, David B., and Riolo, Rick L. (editors). </editor> <booktitle> 1996. Genetic Programming 1996: Proceedings of the First Annual Conference, </booktitle> <month> July 28-31, </month> <year> 1996, </year> <institution> Stanford University. </institution> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference-contexts: This circuit is slightly better than the combination of lowpass and highpass Butterworth filters of order 7. 5.3. Asymmetric Bandpass Filter A design for an asymmetric bandpass filter with requirements equivalent to a tenth-order elliptic filter was successfully evolved <ref> (Koza, Bennett, Andre, and Keane 1996d) </ref>. The preparatory steps required to solve this problem were almost identical to that of the two lowpass filter mentioned above, except that the fitness measure reflected the more complicated asymmetric requirements of the problem. bandpass filter. filter. 5.4.
Reference: <editor> Koza, John R., Goldberg, David E., Fogel, David B., and Riolo, Rick L. (editors). </editor> <booktitle> 1996. Genetic Programming 1996: Proceedings of the First Annual Conference, </booktitle> <month> July 28-31, </month> <year> 1996, </year> <institution> Stanford University. </institution> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference: <author> Koza, John R., and Rice, James P. </author> <year> 1992. </year> <title> Genetic Programming: The Movie. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher> <editor> Kruiskamp Marinum Wilhelmus and Leenaerts, Domine. </editor> <year> 1995. </year> <title> DARWIN: CMOS opamp synthesis by means of a genetic algorithm. </title> <booktitle> Proceedings of the 32nd Design Automation Conference. </booktitle> <address> New York, NY: </address> <publisher> Association for Computing Machinery. </publisher> <pages> Pages 433438. </pages>
Reference: <author> Quarles, Thomas, Newton, A. R., Pederson, D. O., and Sangiovanni-Vincentelli, A. </author> <year> 1994. </year> <note> SPICE 3 Version 3F5 User's Manual. </note> <institution> Department of Electrical Engineering and Computer Science, University of California, Berkeley, </institution> <address> CA. </address> <month> March </month> <year> 1994. </year>
Reference-contexts: The netlist identifies each component of the circuit, the nodes to which that component is connected, and the value of that component. Each circuit is then simulated to determine its behavior. The 217,000-line SPICE (Simulation Program with Integrated Circuit Emphasis) simulation program <ref> (Quarles et al. 1994) </ref> was modified to run as a submodule within the genetic programming system. fitness. The calculation starts by initializing the current CIRCUIT to the embryonic circuit. The individual circuit-constructing program tree from the population is then executed.
Reference: <author> Rutenbar, R. A. </author> <year> 1993. </year> <title> Analog design automation: Where are we? Where are we going? Proceedings of the l5th IEEE CICC. </title> <address> New York: </address> <publisher> IEEE. 13.1.1-13.1.8. </publisher>
Reference-contexts: Considerable progress has been made in automating the design of certain categories of purely digital circuits; however, the design of analog circuits and mixed analog-digital circuitshas not proved to be as amenable to automation <ref> (Rutenbar 1993) </ref>. In discussing "the analog dilemma," O. Aaserud and I. Ring Nielsen (1995) (not to be confused with Ivan Riis Nielsen cited later) observe, "Analog designers are few and far between.
Reference: <author> Thompson, Adrian. </author> <year> 1996. </year> <title> Silicon evolution. </title> <editor> In Koza, John R., Goldberg, David E., Fogel, David B., and Riolo, Rick L. (editors). </editor> <booktitle> 1996. Genetic Programming 1996: Proceedings of the First Annual Conference, </booktitle> <month> July 28-31, </month> <year> 1996, </year> <institution> Stanford University. </institution> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher> <address> BIOGRAPHIES John R. </address> <institution> Koza is Consulting Professor in the Computer Science Department at Stanford University. </institution>
Reference: <institution> Forrest H Bennett III is visiting scholar in the Computer Science Department at Stanford University. David Andre is a researcher in the Computer Science Department at the University of California at Berkeley. </institution>

References-found: 21

