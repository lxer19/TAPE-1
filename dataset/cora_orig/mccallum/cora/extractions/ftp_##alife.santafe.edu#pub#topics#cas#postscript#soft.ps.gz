URL: ftp://alife.santafe.edu/pub/topics/cas/postscript/soft.ps.gz
Refering-URL: http://alife.santafe.edu/alife/topics/cas/ca-faq/ca-faq.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Chapter 1 CA Software and Hardware Issues  
Abstract-found: 0
Intro-found: 0
Reference: [AS92] <author> N. M Allinson and M. J Sales. </author> <title> CART Acellular automata research tool. Microprocessors and microsystems, </title> <address> 16(8):4093, </address> <year> 1992. </year> <title> The authors discuss the principles of cellular automata and present a detailed design of an expandable machine together with an example maze-solving program. </title>
Reference-contexts: CAPOW.CPP The main program module, fairly generic Windows code. CA.HPP The header file for the CA automata classes. CA.CPP The key source code for the program: the CA class methods. Contact Rudy Rucker at rucker@jupiter.sjsu.edu. This program can be obtained by ftp 9 1.2.7 CART description: see <ref> [AS92] </ref>. requirements: ?? availability: ?? description: see [Has90]. 8 http://www.mathcs.sjsu.edu/capow 9 ftp://cam8.math.wisc.edu/pub/CAPOW3 0.ZIP 8 CONTENTS requirements: ?? availability: ?? 1.2.8 CAT The Institute for Application-Oriented Software and Systems Technology of the German National Research Center for Computer Science (GMD) has released the software package 'Cellular Automaton Tool' (CAT).
Reference: [Has90] <author> Wilhelm Hasselbring. </author> <title> CELIP: A cellular language for imaging processin. </title> <journal> Parallel Computing, </journal> <volume> 14 </volume> <pages> 99-109, </pages> <year> 1990. </year>
Reference-contexts: CA.HPP The header file for the CA automata classes. CA.CPP The key source code for the program: the CA class methods. Contact Rudy Rucker at rucker@jupiter.sjsu.edu. This program can be obtained by ftp 9 1.2.7 CART description: see [AS92]. requirements: ?? availability: ?? description: see <ref> [Has90] </ref>. 8 http://www.mathcs.sjsu.edu/capow 9 ftp://cam8.math.wisc.edu/pub/CAPOW3 0.ZIP 8 CONTENTS requirements: ?? availability: ?? 1.2.8 CAT The Institute for Application-Oriented Software and Systems Technology of the German National Research Center for Computer Science (GMD) has released the software package 'Cellular Automaton Tool' (CAT).
Reference: [Hie90] <author> D. Hiebeler. </author> <title> A brief review of CA packages. </title> <journal> Physica D, </journal> <volume> 45:463, </volume> <year> 1990. </year>
Reference-contexts: Chou &lt;hhchou@cs.umd.edu&gt; Dana Eckart &lt;dana@rucs.faculty.cs.runet.edu&gt; Andy Wakelin &lt;mctaww@uk.ac.dct&gt; Harold McIntosh &lt;mcintosh@redvax1.dgsca.unam.mx&gt; Rudy Rucker &lt;rucker@sjsumcs.SJSU.EDU&gt; Ken Karakotsios &lt;karakots@apple.com&gt; Simone Maggi &lt;magi@c700-2.sm.dsi.unimi.it&gt; Dino Cule cule@ee.umanitoba.ca 1.1 Archives 1. hyperarchive 1 Enter the key words "Cellular Automata". Pro grams for Mac,Windows. 1.2 General-Purpose CA Simulators General Reference: <ref> [Hie90] </ref>. 1.2.1 automata author: &lt;cs89ssg@brunel.ac.uk&gt; (Sunil Gupta) 1 http://hyperarchive.lcs.mit.edu/HyperArchive.html 1.2. GENERAL-PURPOSE CA SIMULATORS 5 description: Runs various two-D CA. Written in C, Based on SUIT.
Reference: [HTA92] <author> N. Howard, R. Taylor, and N. Allinson. </author> <title> The design and implementation of a massively-parallel fuzzy architecture. </title> <booktitle> Proc. IEEE, </booktitle> <pages> pages 545-552, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: For example, one bit states of cell plus eight neighboors is a 512 possible results. There was also a "rule compiler" that built the transition table and other computations from a special programming language. You might also want to look at <ref> [HTA92] </ref> which describes a 3D automata engine, computation is performed through the reconfiguration (at a very low level) of the hardware. 1.7 Are there any simulators for CAM? Contributions by: Don Hopkins &lt;hopkins@turing.ac.uk&gt; Hopkins: I've written a recreational CAM-6 simulator (Toffoli & Mar-golus's Cellular Automata Machine) and ported it to HyperLook
Reference: [SC91] <author> Hans B. Sieburg and Oliver K. Clay. </author> <title> Cellular automata as algebraic systems. </title> <journal> Complex Systems, </journal> <volume> 5(6) </volume> <pages> 575-602, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: For further details please refer to the paper cited above. availability: here 17 or dtr 18 1.2.19 SimLife description: GUI requirements: UNIX (?) or mac or amiga or PC availability: in local software store 1.2.20 SLANG description: see <ref> [SC91] </ref> 17 ftp://ftp.cs.umd.edu/pub/dtr.tar.Z 18 http://www.cs.cmu.edu/afs/cs/project/ai-repository/ai/areas/ca/syste ms/dtr/0.html 14 CONTENTS availability: cdm 19 1.2.21 Wautom description: 1-Dimensional elementary binary cellular automata, with Wolfram's rules 0 to 255.
Reference: [Seu85] <author> Friedhelm Seutter. </author> <title> CEPROL: A cellular programming language. </title> <booktitle> Parallel Computing, </booktitle> <address> 2(327-333):327-333, </address> <year> 1985. </year>
Reference-contexts: For further information, questions, and comments, please contact: J Dana Eckart Computer Science Department Radford University Radford, VA 24142 dana@rucs.faculty.cs.runet.edu 1.2.11 CEPROL description: see <ref> [Seu85] </ref> requirements: ?? availability: ?? 1.2.12 CINC Creature simulator for the Next. cinc 12 12 http://www.cs.cmu.edu/afs/cs/project/ai-repository/ai/areas/ca/syst ems/cinc/0.html 1.2.
Reference: [TM87] <author> Tommaso Toffoli and Norman Margolus. </author> <title> Cellular Automata Machines. </title> <publisher> MIT Press, </publisher> <address> London, </address> <year> 1987. </year> <month> 21 </month>
Reference-contexts: Still better, if the range is a power of 2, might be (x+offset)&63 when offset is positive and (x+offset+64)&63 when offset is negative. 1.6 What hardware implementations exist for CA? Contributions by: Dr R W Taylor &lt;rwt@ohm.york.ac.uk&gt; See <ref> [TM87] </ref> The "trick" of the CAM-6 was to encode the rules as a lookup table accessed by an "address" formed of the states of the neighborhood. For example, one bit states of cell plus eight neighboors is a 512 possible results.
References-found: 7

