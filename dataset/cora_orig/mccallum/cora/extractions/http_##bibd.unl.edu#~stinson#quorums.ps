URL: http://bibd.unl.edu/~stinson/quorums.ps
Refering-URL: http://bibd.unl.edu/~stinson/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Quorum Systems Constructed from Combinatorial Designs  
Author: Charles J. Colbourn Jeffrey H. Dinitz Douglas R. Stinson 
Date: May 11, 1998  
Address: Vermont Burlington VT 05405  Vermont Burlington VT 05405  Lincoln NE 68588  
Affiliation: Department of Computer Science University of  Department of Mathematics University of  Department of Computer Science and Engineering University of Nebraska  
Abstract: A quorum system is a set system in which any two subsets have nonempty intersection. Quorum systems have been extensively studied as a method of maintaining consistency in distributed systems. Important attributes of a quorum system include the load, balancing ratio, rank (i.e., quorum size) and availability. Many constructions have been presented in the literature for quorum systems in which these attributes take on optimal or otherwise favorable values. In this paper, we point out an elementary connection between quorum systems and the classical covering systems studied in combinatorial design theory. We look more closely at the quorum systems that are obtained from balanced incomplete block designs (BIBDs). We study the properties of these quorum systems, and observe that they have load, balancing ratio and rank that are all within a constant factor of being optimal. We also provide several observations about computing the failure polynomials of a quorum system (failure polynomials are used to measure availability). Asymptotic properties of failure polynomials have previously been analyzed for certain infinite families of quorum systems. We give an explicit formula for the failure polynomials for an easily constructed infinite class of quorum systems. We also develop two algorithms that are useful for computing failure polynomials for quorum systems, and prove that computing failure polynomials is #P-hard. Computational results are presented for several "small" quorum systems obtained from BIBDs. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Agrawal, O. Egecioglu and A. El Abbadi. </author> <title> Billiard quorums on the grid. </title> <booktitle> Information Processing Letters 64 (1997), </booktitle> <pages> 9-16. </pages>
Reference-contexts: Various other constructions for (n; m)-quorum systems that are uniform of rank c p n can be found in the literature; see, for example, <ref> [1, 2, 7, 9, 10, 12] </ref>.
Reference: [2] <author> S. Y. Cheung, M. H. Ammar and M. Ahamad. </author> <title> The grid protocol: a high performance scheme for maintaining replicated data. </title> <booktitle> 6th IEEE Conference on Data Engineering, </booktitle> <year> 1990, </year> <pages> pp. 438-445. </pages>
Reference-contexts: Various other constructions for (n; m)-quorum systems that are uniform of rank c p n can be found in the literature; see, for example, <ref> [1, 2, 7, 9, 10, 12] </ref>.
Reference: [3] <author> C. J. Colbourn and J. H. Dinitz, eds. </author> <title> The CRC Handbook of Combinatorial Designs, </title> <publisher> CRC Press, Inc., </publisher> <year> 1996. </year>
Reference-contexts: Proof. A set system is a quorum system if and only the dual set system is a covering system. 1.1 Quorum systems from BIBDs There is a considerable literature on covering systems; see <ref> [3] </ref> and [11], for example. In view of Theorem 1.2, any covering system yields a quorum system, and vice versa. It is perhaps surprising that covering systems have not been extensively investigated for their suitability as quorum systems. <p> The most likely explanation for this is that quorum systems have been studied primarily within 2 hypergraph theory as opposed to design theory, the branch of combinatorics that includes covering systems. A comprehensive reference for results in design theory is <ref> [3] </ref>. In this paper, we concentrate on a special type of covering system, which we define now. Suppose v and k are integers such that v &gt; k &gt; 1. <p> Difference covers are a generalization of the difference sets that are used to construct projective planes. There are many known infinite classes of BIBDs, any of which could be employed as quorum systems (for a summary of results on BIBDs, see <ref> [3] </ref>). Examples include BIBDs with "small" block size, which have undergone a tremendous amount of study. In fact, existence of (v; k; 1)-BIBDs with k 5 has been completely determined as follows (see [3], for example). Theorem 1.4 1. A (v; 2; 1)-BIBD exists for all integers v 3. 2. <p> any of which could be employed as quorum systems (for a summary of results on BIBDs, see <ref> [3] </ref>). Examples include BIBDs with "small" block size, which have undergone a tremendous amount of study. In fact, existence of (v; k; 1)-BIBDs with k 5 has been completely determined as follows (see [3], for example). Theorem 1.4 1. A (v; 2; 1)-BIBD exists for all integers v 3. 2. A (v; 3; 1)-BIBD exists if and only if v 1; 3 mod 6, v 7. 3. <p> All nonisomorphic BIBDs with parameters in this range have been enumerated; see <ref> [3] </ref>, for example, where these designs are explicitly presented. <p> = 5408; F 7 = 66950; F 8 = 382980; F 12 = 8055580; F 13 = 9401030; F 14 = 9154990; F 18 = 1559805; F 19 = 657540; F 20 = 230217; F 24 = 325; F 25 = 26; F 26 = 1: For design #1 in <ref> [3] </ref> we have F 5 = 112; for design #2 in [3], we have F 5 = 117. <p> 12 = 8055580; F 13 = 9401030; F 14 = 9154990; F 18 = 1559805; F 19 = 657540; F 20 = 230217; F 24 = 325; F 25 = 26; F 26 = 1: For design #1 in <ref> [3] </ref> we have F 5 = 112; for design #2 in [3], we have F 5 = 117. <p> F 33 = 595; F 34 = 35; and F 35 = 1: The values of F 5 ; F 6 ; F 7 and F 8 for the 80 nonisomorphic (15; 3; 1)-BIBDs are presented in Tables 1 and 2 (the numbering used for the designs is as in <ref> [3] </ref>). Given that we have described two algorithms for computing failure polynomials, it is natural to ask which is faster. This of course can depend on the implementation.
Reference: [4] <author> M. J. Grannell, T. S. Griggs and E. Mendelsohn. </author> <title> A small basis for four-line configurations in Steiner triple systems. </title> <journal> Journal of Combinatorial Designs 3 (1995), </journal> <pages> 51-59. </pages>
Reference-contexts: A Pasch configuration is isomorphic to the following set of blocks: f1; 2; 3g; f1; 4; 5g; f2; 4; 6g; f3; 5; 6g. For more information about small configurations in (v; 3; 1)-BIBDS, see <ref> [4] </ref>, for example.) From the fact that all values a i;j are constant for j 6r 16, Theorem 3.3 implies that the value F i is constant for i b6r +16. (Of course, it is also the case that F i = 0 if i &lt; v=3.) 4 Algorithms for computing
Reference: [5] <author> R. Holzman, Y. Marcus and D. Peleg. </author> <title> Load balancing in quorum systems. </title> <note> SIAM Journal on Discrete Mathematics 10 (1997), 223-245. </note>
Reference-contexts: Theorem 2.3 ([5, Prop. 3.1]) If Q is a regular quorum system, then (Q) = 1. 2.2 Rank The following result was proved by Lovasz [8]; a generalization is proved in <ref> [5, Theorem 5.10] </ref>. Theorem 2.4 If (X; A) is an (n; m)-quorum system that is regular of degree d and uniform of rank r, then then n r 2 r + 1. In a uniform quorum system, the rank specifies the number of elements in any quorum.
Reference: [6] <author> A. C. H. Ling, C. J. Colbourn, M. J. Grannell and T. S. Griggs. </author> <title> Construction techniques for anti-Pasch Steiner triple systems. </title> <type> Preprint, </type> <year> 1997. </year>
Reference-contexts: The observations used in developing these methods hinge on an understanding of small configurations in BIBDs. In this context, we have seen that the number of Pasch configurations plays a role. Minimizing the number of Pasch configurations is explored in <ref> [6] </ref>, while maximizing this number is examined in [15]. Other configurations also play a role. In the failure polynomial of a (3s; 3; 1)-BIBD, the coefficient F s is the number of parallel classes, i.e., sets of blocks of the design which contain each element exactly once.
Reference: [7] <author> L. Lovasz. </author> <title> Coverings and colorings of hypergraphs. </title> <booktitle> 4th Southeastern Conference on Combinatorics, Graph Theory and Computing, </booktitle> <year> 1973, </year> <pages> pp. 3-12. </pages>
Reference-contexts: Various other constructions for (n; m)-quorum systems that are uniform of rank c p n can be found in the literature; see, for example, <ref> [1, 2, 7, 9, 10, 12] </ref>.
Reference: [8] <author> L. Lovasz. </author> <title> On the minimax theorems of combinatorics (in Hungarian). </title> <booktitle> Mathematikai Lapok 26 (1975), </booktitle> <pages> 209-264. </pages>
Reference-contexts: Theorem 2.3 ([5, Prop. 3.1]) If Q is a regular quorum system, then (Q) = 1. 2.2 Rank The following result was proved by Lovasz <ref> [8] </ref>; a generalization is proved in [5, Theorem 5.10]. Theorem 2.4 If (X; A) is an (n; m)-quorum system that is regular of degree d and uniform of rank r, then then n r 2 r + 1.
Reference: [9] <author> W.-S. Luk and T.-T. Wong. </author> <title> Two new quorum based algorithms for distributed mutual exclusion. </title> <booktitle> 17th International Conference on Distributed Computing Systems, </booktitle> <year> 1997, </year> <pages> pp. 100-106. </pages>
Reference-contexts: Maekawa [10] first suggested using projective planes as quorum systems. To our knowledge, the only other example in the literature where quorum systems are constructed from BIBDs is by Luk and Wong <ref> [9] </ref>, who give a direct construction of a set system that can be seen to be isomorphic to the dual of a (v; 2; 1)-BIBD. (This BIBD is in fact a complete graph K v , which trivially exists for all integers v.) Luk and Wong also suggested the use of <p> Various other constructions for (n; m)-quorum systems that are uniform of rank c p n can be found in the literature; see, for example, <ref> [1, 2, 7, 9, 10, 12] </ref>. <p> Most of these constructions have c = 2 or 1:41 (except for the finite projective plane construction from [10] and the difference cover construction from <ref> [9] </ref>, which have c 1). 2 Attributes of quorum systems We discuss several measures of merit for quorum systems in this section, including load, balancing ratio, rank and availability.
Reference: [10] <author> M. Maekawa. </author> <title> A p N algorithm for mutual exclusion in decentralized systems. </title> <journal> ACM Transactions on Computing Systems 3 (1985), </journal> <pages> 145-159. </pages>
Reference-contexts: A projective plane of order n is an (n 2 + n + 1; n + 1; 1)-BIBD. Such planes are known to exist only when n is a prime or a power of a prime. Maekawa <ref> [10] </ref> first suggested using projective planes as quorum systems. <p> Various other constructions for (n; m)-quorum systems that are uniform of rank c p n can be found in the literature; see, for example, <ref> [1, 2, 7, 9, 10, 12] </ref>. <p> Various other constructions for (n; m)-quorum systems that are uniform of rank c p n can be found in the literature; see, for example, [1, 2, 7, 9, 10, 12]. Most of these constructions have c = 2 or 1:41 (except for the finite projective plane construction from <ref> [10] </ref> and the difference cover construction from [9], which have c 1). 2 Attributes of quorum systems We discuss several measures of merit for quorum systems in this section, including load, balancing ratio, rank and availability.
Reference: [11] <author> W. H. Mills and R. C. Mullin. </author> <title> Coverings and packings. In Contemporary Design Theory: A Collection of Surveys, </title> <editor> J. H. Dinitz and D. R. Stinson, eds., </editor> <publisher> John Wiley & Sons, </publisher> <year> 1992, </year> <pages> pp. 371-399. </pages>
Reference-contexts: Proof. A set system is a quorum system if and only the dual set system is a covering system. 1.1 Quorum systems from BIBDs There is a considerable literature on covering systems; see [3] and <ref> [11] </ref>, for example. In view of Theorem 1.2, any covering system yields a quorum system, and vice versa. It is perhaps surprising that covering systems have not been extensively investigated for their suitability as quorum systems.
Reference: [12] <author> M. Naor and A. Wool. </author> <title> The load, capacity and availability of quorum systems. </title> <booktitle> 35th IEEE Symposium on the Foundations of Computer Science, </booktitle> <year> 1994, </year> <pages> pp. 214-225. </pages>
Reference-contexts: Various other constructions for (n; m)-quorum systems that are uniform of rank c p n can be found in the literature; see, for example, <ref> [1, 2, 7, 9, 10, 12] </ref>.
Reference: [13] <author> D. Peleg and A. Wool. </author> <title> The availability of quorum systems. </title> <booktitle> Information and Computation 123 (1995), </booktitle> <pages> 210-223. </pages>
Reference-contexts: For 0 i n, suppose we define F i to be the number of spanning sets of i blocks in the dual set system (i.e., the covering system). Then F Q (p) can be written as follows: Theorem 2.5 <ref> [13, Lemma 2.21] </ref> Let Q be an (n; m)-quorum system, and suppose the values F i are defined as above. Then F Q (p) = i=0 2.4 An example We present a small example.
Reference: [14] <author> A. Rosa and C. J. Colbourn, </author> <title> Colorings of block designs. In Contemporary Design Theory: A Collection of Surveys, </title> <editor> J. H. Dinitz and D. R. Stinson, eds., </editor> <publisher> John Wiley & Sons, </publisher> <year> 1992, </year> <pages> pp. 401-430. </pages>
Reference-contexts: It is unknown at present whether for all odd s 5 there exists a (3s; 3; 1)-BIBD having no parallel classes <ref> [14] </ref>, nor is the complexity of determining the existence of a parallel class known.
Reference: [15] <author> D. R. Stinson and Y. J. Wei. </author> <title> Some results on quadrilaterals in Steiner triple systems. </title> <journal> Discrete Math. </journal> <volume> 105 (1992), </volume> <pages> 220-245. </pages>
Reference-contexts: The observations used in developing these methods hinge on an understanding of small configurations in BIBDs. In this context, we have seen that the number of Pasch configurations plays a role. Minimizing the number of Pasch configurations is explored in [6], while maximizing this number is examined in <ref> [15] </ref>. Other configurations also play a role. In the failure polynomial of a (3s; 3; 1)-BIBD, the coefficient F s is the number of parallel classes, i.e., sets of blocks of the design which contain each element exactly once.
Reference: [16] <author> L. G. Valiant. </author> <title> The complexity of enumeration and reliability problems. </title> <journal> SIAM J. Computing 8 (1979), </journal> <pages> 410-421. </pages>
Reference-contexts: We pursue this next. 4.1 The complexity of computing availability Calculating failure polynomials involves solving an enumeration problem for each coefficient. Thus natural complexity classes to consider involve machines with a capability for counting. Valiant <ref> [16] </ref> introduced the counting Turing machine, which is a nondeterministic Turing machine with an auxiliary write-only tape. When such a machine accepts its input, it writes the number of accepting computations on the auxiliary tape. <p> A problem is #P-hard if every problem in #P can be reduced in polynomial time to it, and a problem is #P-complete if it is a member of #P and also is #P-hard. Theorem 4.1 Computing the failure polynomial of a quorum system is #P-hard. Proof. Valiant <ref> [16] </ref> establishes that computing the number of perfect matchings in a graph is #P-complete. We give a polynomial-time reduction from the problem of computing the number of 8 perfect matchings in a graph to the computation of one of the coefficients in the failure polynomial of a quorum system.
References-found: 16

