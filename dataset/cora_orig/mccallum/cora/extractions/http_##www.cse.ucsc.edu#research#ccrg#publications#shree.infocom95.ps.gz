URL: http://www.cse.ucsc.edu/research/ccrg/publications/shree.infocom95.ps.gz
Refering-URL: http://www.cse.ucsc.edu/research/ccrg/publications.html
Root-URL: http://www.cse.ucsc.edu
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> D. Bertsekas and R. Gallager, </author> <title> Data Networks, </title> <publisher> Prentice Hall, </publisher> <address> Inc. </address> <note> Second Edition 1992. </note>
Reference-contexts: 1. Introduction Some of the most popular routing protocols used in today's Internet (e.g., RIP [9]) are based on the distributed Bellman-Ford algorithm (DBF) for shortest-path computation <ref> [1] </ref>. However, DBF suffers from bouncing effect and counting-to-infinity problems. The counting-to-infinity problem is overcome in one of three ways in existing internet routing protocols. OSPF [13] relies on broadcasting complete topology information among routers, and organizes an internet hierarchically to cope with the overhead incurred with topology broadcast.
Reference: [2] <author> R. Albrightson, J.J. Garcia-Luna-Aceves, and J. Boyle, </author> <title> "EIGRP-A Fast Routing Protocol Based on Distance Vectors," </title> <booktitle> Proc. </booktitle> <address> Networld/Interop 94, Las Vegas, Nevada, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: OSPF [13] relies on broadcasting complete topology information among routers, and organizes an internet hierarchically to cope with the overhead incurred with topology broadcast. BGP [11] exchanges distance vectors that specify complete paths to destinations. EIGRP <ref> [2] </ref> uses a loop-free routing algorithm called DUAL [5], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops.
Reference: [3] <author> C. Cheng, R. Reley, S. P. R Kumar and J. J. Garcia-Luna-Aceves, </author> <title> "A Loop-Free Extended Bellman-Ford Routing Protocol without Bouncing Effect", </title> <journal> ACM Computer Commun. Review, </journal> <volume> Vol. 19, No.4, </volume> <year> 1989, </year> <pages> pp. 224-236. </pages>
Reference-contexts: BGP [11] exchanges distance vectors that specify complete paths to destinations. EIGRP [2] uses a loop-free routing algorithm called DUAL [5], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops. Recently, distributed shortest-path algorithms <ref> [3] </ref>, [4], [8], [10], [15] that utilize information regarding the length and second-to-last hop (predecessor) of the shortest path to each destination have been proposed to eliminate the counting-to-infinity problem of DBF. We call these type of algorithms path-finding algorithms. <p> This reduces the number of operations performed in LPA. The simulation results clearly show that considerable efficiency is achieved by the tagging mechanism used in LPA. 5.3 Comparison with Prior Path-Finding Algorithms LPA provides loop freedom at every instant. Reference <ref> [3] </ref> discusses loop freedom; however, the path finding algorithm presented in that work does not provide loop-free paths at every instant. <p> In contrast, LPA uses fixed-size entries in update messages, because path information is obtained from the predecessor entries. LPA updates routing table entries using a mechanism that ensures that only simple paths are used. This mechanism is similar to those proposed in <ref> [3] </ref>, [15]; however, Procedure DT in LPA makes a router check the consistency of predecessor information reported by all its neighbors each time an input event is processed. In contrast, earlier path finding algorithms [3], [15], [10] check the consistency of the predecessor information only for the neighbor associated with the <p> This mechanism is similar to those proposed in <ref> [3] </ref>, [15]; however, Procedure DT in LPA makes a router check the consistency of predecessor information reported by all its neighbors each time an input event is processed. In contrast, earlier path finding algorithms [3], [15], [10] check the consistency of the predecessor information only for the neighbor associated with the input event. LPA is more scalable than the algorithms in [3], [10], because LPA updates only those entries of the distance and routing tables that are affected by the input event, rather than the <p> In contrast, earlier path finding algorithms <ref> [3] </ref>, [15], [10] check the consistency of the predecessor information only for the neighbor associated with the input event. LPA is more scalable than the algorithms in [3], [10], because LPA updates only those entries of the distance and routing tables that are affected by the input event, rather than the entire tables, using tags similar to those used in [15]. <p> In contrast, the algorithm in [10] uses a breath-first search on the entire distance table each time a router processes an input event; the algorithms reported in <ref> [3] </ref> make sure that Property 1 is satisfied by all destinations every time an input event is processed, much like PFA does. 6.
Reference: [4] <author> J. J. Garcia-Luna-Aceves, </author> <title> "A Fail-Safe Routing Algorithm for Multihop Packet Radio Networks", </title> <booktitle> Proc. IEEE INFOCOM 86, </booktitle> <address> Miami, Florida, </address> <year> 1986. </year> <title> [5] |, "Loop-free Routing using Diffusing Computations", </title> <journal> IEEE/ACM Trans. Networking, </journal> <volume> Vol. 1, No. 1, </volume> <month> Feb, </month> <year> 1993, </year> <pages> pp. </pages> <month> 130-141. </month> <title> [6] |, "Distributed Routing with Labeled Distances", </title> <booktitle> Proc. IEEE INFOCOM 92, </booktitle> <volume> Vol. 2, </volume> <month> May </month> <year> 1992, </year> <pages> pp. 633-643. </pages> <month> [7] |, "LIBRA: </month> <title> A Distributed Routing Algorithm for Large Internets", </title> <booktitle> Proc. IEEE Globecom 92, </booktitle> <volume> Vol. 3, </volume> <month> Dec. </month> <year> 1992, </year> <pages> pp. 1465-1471. </pages>
Reference-contexts: BGP [11] exchanges distance vectors that specify complete paths to destinations. EIGRP [2] uses a loop-free routing algorithm called DUAL [5], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops. Recently, distributed shortest-path algorithms [3], <ref> [4] </ref>, [8], [10], [15] that utilize information regarding the length and second-to-last hop (predecessor) of the shortest path to each destination have been proposed to eliminate the counting-to-infinity problem of DBF. We call these type of algorithms path-finding algorithms.
Reference: [8] <author> J. Hagouel, </author> <title> "Issues in Routing for Large and Dynamic Networks," IBM Research Report RC 9942 (No. </title> <type> 44055) Communications, </type> <institution> IBM Thomas J. Watson Research Center, </institution> <address> Yorktown Heights, New York, </address> <month> April </month> <year> 1983. </year>
Reference-contexts: BGP [11] exchanges distance vectors that specify complete paths to destinations. EIGRP [2] uses a loop-free routing algorithm called DUAL [5], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops. Recently, distributed shortest-path algorithms [3], [4], <ref> [8] </ref>, [10], [15] that utilize information regarding the length and second-to-last hop (predecessor) of the shortest path to each destination have been proposed to eliminate the counting-to-infinity problem of DBF. We call these type of algorithms path-finding algorithms.
Reference: [9] <author> C. Hedrick, </author> <title> "Routing Information Protocol," </title> <type> RFC 1058, </type> <month> June </month> <year> 1988. </year>
Reference-contexts: 1. Introduction Some of the most popular routing protocols used in today's Internet (e.g., RIP <ref> [9] </ref>) are based on the distributed Bellman-Ford algorithm (DBF) for shortest-path computation [1]. However, DBF suffers from bouncing effect and counting-to-infinity problems. The counting-to-infinity problem is overcome in one of three ways in existing internet routing protocols.
Reference: [10] <author> P.A. Humblet, </author> <title> "Another Adaptive Shortest-Path Algorithm", </title> <journal> IEEE Trans. Commun., </journal> <volume> Vol. 39, No. 6, </volume> <year> 1991, </year> <pages> pp. 995-1003. </pages>
Reference-contexts: BGP [11] exchanges distance vectors that specify complete paths to destinations. EIGRP [2] uses a loop-free routing algorithm called DUAL [5], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops. Recently, distributed shortest-path algorithms [3], [4], [8], <ref> [10] </ref>, [15] that utilize information regarding the length and second-to-last hop (predecessor) of the shortest path to each destination have been proposed to eliminate the counting-to-infinity problem of DBF. We call these type of algorithms path-finding algorithms. <p> This mechanism is similar to those proposed in [3], [15]; however, Procedure DT in LPA makes a router check the consistency of predecessor information reported by all its neighbors each time an input event is processed. In contrast, earlier path finding algorithms [3], [15], <ref> [10] </ref> check the consistency of the predecessor information only for the neighbor associated with the input event. LPA is more scalable than the algorithms in [3], [10], because LPA updates only those entries of the distance and routing tables that are affected by the input event, rather than the entire tables, <p> In contrast, earlier path finding algorithms [3], [15], <ref> [10] </ref> check the consistency of the predecessor information only for the neighbor associated with the input event. LPA is more scalable than the algorithms in [3], [10], because LPA updates only those entries of the distance and routing tables that are affected by the input event, rather than the entire tables, using tags similar to those used in [15]. In contrast, the algorithm in [10] uses a breath-first search on the entire distance table each time a <p> LPA is more scalable than the algorithms in [3], <ref> [10] </ref>, because LPA updates only those entries of the distance and routing tables that are affected by the input event, rather than the entire tables, using tags similar to those used in [15]. In contrast, the algorithm in [10] uses a breath-first search on the entire distance table each time a router processes an input event; the algorithms reported in [3] make sure that Property 1 is satisfied by all destinations every time an input event is processed, much like PFA does. 6.
Reference: [11] <author> Y. Rekhter, T. Li, </author> <title> "A Border Gateway Protocol 4 (BGP-4)," Network Working Group Internet Draft, </title> <month> Jan. </month> <year> 1994. </year>
Reference-contexts: However, DBF suffers from bouncing effect and counting-to-infinity problems. The counting-to-infinity problem is overcome in one of three ways in existing internet routing protocols. OSPF [13] relies on broadcasting complete topology information among routers, and organizes an internet hierarchically to cope with the overhead incurred with topology broadcast. BGP <ref> [11] </ref> exchanges distance vectors that specify complete paths to destinations. EIGRP [2] uses a loop-free routing algorithm called DUAL [5], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops.
Reference: [12] <author> P.M. Merlin and A. Segall, </author> <title> "A Failsafe Distributed Routing Algorithm", </title> <journal> IEEE Trans. Commun., </journal> <volume> Vol. 27, </volume> <year> 1979, </year> <pages> pp. 1280-1288. </pages>
Reference-contexts: N-00014-92-J-1807 and by the Advanced Research Projects Agency (ARPA) under contract F19628-93-C-0175 improvement over DBF, they do not eliminate the possibility of temporary loops. Most of the loop-free algorithms reported to date rely on mechanisms that require routers to either synchronize along multiple hops (e.g, [5], <ref> [12] </ref>, or exchange path information that can include all the routers in the path from source to destination [7]. This paper presents a path-finding algorithm that is loop-free at every instant, which we call the loop-free path-finding algorithm (LPA). <p> To reduce the communication overhead incurred with such inter-neighbor coordination, routers use a feasibility condition to limit the number of times when they have to send queries to their neighbors. In contrast to many prior loop-free routing algorithms [5], <ref> [12] </ref>, queries propagate only one hop in LPA; updates and routing-table entries in LPA require a single node identifier as path information [7].
Reference: [13] <author> J. Moy, </author> <note> "OSPF Version 2," RFC 1247, </note> <month> August </month> <year> 1991. </year>
Reference-contexts: However, DBF suffers from bouncing effect and counting-to-infinity problems. The counting-to-infinity problem is overcome in one of three ways in existing internet routing protocols. OSPF <ref> [13] </ref> relies on broadcasting complete topology information among routers, and organizes an internet hierarchically to cope with the overhead incurred with topology broadcast. BGP [11] exchanges distance vectors that specify complete paths to destinations.
Reference: [14] <author> S. Murthy, </author> <title> "Design and Analysis of Distributed Routing Algorithms", </title> <type> Master's Thesis, </type> <institution> University of California, Santa Cruz, </institution> <year> 1994. </year>
Reference-contexts: This proof relies on the fact that LPA is free of loops at every instant, which is shown in <ref> [14] </ref>. The approach to showing that LPA is always loop free is almost the same as the one presented in [6] for another algorithm. Lemma 1: LPA is live. Proof: Consider the case in which the network has a stable topology. <p> Because LPA is loop free at every instant <ref> [14] </ref>, the number of hops in any shortest path (as implied by the successor graph) is finite. Accordingly, the proof can proceed by induction on H. Assume that the theorem is true for some H &gt; 0. <p> ILS has T C = O (d) (where d is the network diameter), and CC = O (E) <ref> [14] </ref>. DUAL has T C = O (x) and CC = O (x), where x is the number of routers affected by the single topology change [5]. LPA has been shown to have a worst-case communication complexity of O (x) after a single resource failure [14]. 5.2 Average Performance To obtain <p> and CC = O (E) <ref> [14] </ref>. DUAL has T C = O (x) and CC = O (x), where x is the number of routers affected by the single topology change [5]. LPA has been shown to have a worst-case communication complexity of O (x) after a single resource failure [14]. 5.2 Average Performance To obtain insight into the average performance of LPA, we have developed simulation using an actor-based, discrete-event simulation language called Drama [16], together with a network simulation library. We compared LPA's performance with the performance of ILS, PFA, and DUAL. <p> PFA (path finding algorithm) operates similar to LPA, except that it does not use queries to block temporary loops and does not use the tagging scheme and must update the entire routing table when it processes an input event <ref> [14] </ref>. All the simulation runs are done for the unit propagation time and all the links are assumed to be of unit cost. If a link fails, the packets in transit are dropped.
Reference: [15] <author> B. Rajagopalan and M. Faiman, </author> <title> "A Responsive Distributed Shortest-Path Routing Algorithm within Autonomous Systems," Internetworking: </title> <journal> Research and Experience, </journal> <volume> Vol. 2, No. 1, </volume> <year> 1991, </year> <pages> pp. 51-69. </pages>
Reference-contexts: BGP [11] exchanges distance vectors that specify complete paths to destinations. EIGRP [2] uses a loop-free routing algorithm called DUAL [5], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops. Recently, distributed shortest-path algorithms [3], [4], [8], [10], <ref> [15] </ref> that utilize information regarding the length and second-to-last hop (predecessor) of the shortest path to each destination have been proposed to eliminate the counting-to-infinity problem of DBF. We call these type of algorithms path-finding algorithms. <p> In contrast, LPA uses fixed-size entries in update messages, because path information is obtained from the predecessor entries. LPA updates routing table entries using a mechanism that ensures that only simple paths are used. This mechanism is similar to those proposed in [3], <ref> [15] </ref>; however, Procedure DT in LPA makes a router check the consistency of predecessor information reported by all its neighbors each time an input event is processed. In contrast, earlier path finding algorithms [3], [15], [10] check the consistency of the predecessor information only for the neighbor associated with the input <p> This mechanism is similar to those proposed in [3], <ref> [15] </ref>; however, Procedure DT in LPA makes a router check the consistency of predecessor information reported by all its neighbors each time an input event is processed. In contrast, earlier path finding algorithms [3], [15], [10] check the consistency of the predecessor information only for the neighbor associated with the input event. <p> LPA is more scalable than the algorithms in [3], [10], because LPA updates only those entries of the distance and routing tables that are affected by the input event, rather than the entire tables, using tags similar to those used in <ref> [15] </ref>.
Reference: [16] <author> W. T. Zaumen, </author> <title> "Simulations in Drama", Network Information System Center, </title> <booktitle> SRI International, </booktitle> <address> Menlo Park, California, </address> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: LPA has been shown to have a worst-case communication complexity of O (x) after a single resource failure [14]. 5.2 Average Performance To obtain insight into the average performance of LPA, we have developed simulation using an actor-based, discrete-event simulation language called Drama <ref> [16] </ref>, together with a network simulation library. We compared LPA's performance with the performance of ILS, PFA, and DUAL.
References-found: 13

