URL: ftp://ftp.cs.washington.edu/tr/1991/02/UW-CSE-91-02-01.PS.Z
Refering-URL: http://www.cs.washington.edu/research/tr/tr-by-title.html
Root-URL: 
Email: bcn@cs.washington.edu  
Title: Proxy-Based Authorization and Accounting for Distributed Systems  
Author: B. Clifford Neuman 
Address: FR-35 Seattle, Washington 98195  
Affiliation: Department of Computer Science and Engineering University of Washington,  
Abstract: Technical Report 91-02-01 March 1991 Abstract In recent years there has been much interest in the secure authentication of principals across computer networks. There has been less discussion of distributed mechanisms to support authorization and accounting. Authorization and accounting are more closely related to authentication than most people realize. By generalizing the authentication model to support restricted proxies, both authorization and accounting can be easily supported. This paper shows how to support restricted proxies in an authentication system, presents an appropriate model for authorization and accounting, and describes how they may be easily implemented on top of restricted proxies.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Gasser, A. Goldstein, C. Kaufman, and B. Lampson. </author> <title> The Digital distributed system security architecture. </title> <booktitle> In Proceedings of the 1989 National Computer Security Conference, </booktitle> <pages> pages 305-319, </pages> <year> 1989. </year>
Reference-contexts: These channels might be implemented on top of an end-to-end encryption mechanism. The proxy mechanism described in this paper is very similar to the delegation mechanism supported by the Digital Distributed System Security Architecture <ref> [1, 2] </ref> in which principals generate and sign delegation certificates to allow intermediate systems to act on their behalf.
Reference: [2] <author> M. Gasser and E. McDermott. </author> <title> An architecture for practical delegation in a distributed system. </title> <booktitle> In Proceedings of the 1990 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 20-30, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: These channels might be implemented on top of an end-to-end encryption mechanism. The proxy mechanism described in this paper is very similar to the delegation mechanism supported by the Digital Distributed System Security Architecture <ref> [1, 2] </ref> in which principals generate and sign delegation certificates to allow intermediate systems to act on their behalf.
Reference: [3] <author> Paul A. Karger. </author> <title> Authentication and discretionary access control in computer networks. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 10(1) </volume> <pages> 27-37, </pages> <year> 1985. </year>
Reference-contexts: With distributed authorization and group services as supported by restricted proxies, the authorization decision can be delegated to a remote server. There has been much work concerning the forwarding or delegation of authentication in distributed systems. In <ref> [3] </ref> Karger proposes a server that keeps track of special passwords that are established when a user logs in. These passwords may be passed to other systems which are to act on the user's behalf when an operation involves the cascaded use of multiple servers.
Reference: [4] <author> John T. Kohl and B. Clifford Neuman. </author> <title> The Kerberos network authentication service. DARPA Internet Draft RFC, </title> <month> December </month> <year> 1990. </year>
Reference-contexts: Without this step an attacker would be able to reuse a ticket that it obtained by eavesdropping on an earlier exchange. Kerberos has been in use at MIT since Fall of 1986, and it has been used elsewhere since then. Version 5 of Kerberos <ref> [4] </ref> is the first major revision of the protocol since its original release. Version 5 contains several new features that are important for the support of restricted proxies. A Version 5 ticket has a new field called authorization-data.
Reference: [5] <author> S. P. Miller, B. C. Neuman, J. I. Schiller, and J. H. Saltzer. </author> <title> Section E.2.1: Kerberos authentication and authorization system. Project Athena Technical Plan, MIT Project Athena, </title> <address> Cambridge, Massachusetts, </address> <month> December </month> <year> 1987. </year>
Reference-contexts: The differences between Sollins' approach and support for cascaded authorization based on restricted proxies was described in Section 2.4. Work is underway on the Open Software Foundation's Distributed Computing Environment that makes use of Kerberos <ref> [5] </ref> to pass authorization information. Although based on a different model, the implementation of their authorization server is similar to that described in Section 2.2. <p> Al--though restricted proxies could have been supported in Version 4 of Kerberos using the method just described, the explicit support for proxies in Version 5 makes their use more transparent to applications which have already been modified to use Kerberos. Kerberos <ref> [5, 9] </ref> is an authentication system based on conventional cryptography, designed as part of MIT's Project Athena. Credentials are issued by an authentication server and presented by a client to prove its identity to a particular end-server. Credentials consist of two parts: a ticket, and a session key.
Reference: [6] <author> S. J. Mullender and A. S. Tanenbaum. </author> <title> The design of a capability-based distributed operating system. </title> <journal> The Computer Journal, </journal> <volume> 29(4) </volume> <pages> 289-299, </pages> <year> 1986. </year>
Reference-contexts: Although they share a common mechanism, it seems apparent now that there is little to be gained by requiring all three services to be co-located. Like the accounting mechanism described here, Sentry pointed out the need to support multiple currencies. Amoeba <ref> [6] </ref> supports a distributed bank server identical in purpose to the accounting server based on restricted proxies. The protocol used by Amoeba's bank server is significantly different, however. In Amoeba, a client must contact the bank and transfer funds into the server's account before it contacts the server.
Reference: [7] <author> B. Clifford Neuman. Sentry: </author> <title> A discretionary access contol server. </title> <type> Bachelor's Thesis, </type> <institution> Mas-sachusetts Institute of Technology, </institution> <month> June </month> <year> 1985. </year>
Reference-contexts: In fact, authorization information is passed using a field that was added to the Kerberos credentials specifically to support the restricted proxies described in this paper. Surprisingly little attention has been paid to the issue of accounting in distributed systems. A paper on Sentry <ref> [7] </ref> lays the ground work for an accounting mechanism that would be co-located with an authentication and authorization server. Although they share a common mechanism, it seems apparent now that there is little to be gained by requiring all three services to be co-located.
Reference: [8] <author> Karen R. Sollins. </author> <title> Cascaded authentication. </title> <booktitle> In Proceedings of the 1988 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 156-163, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: The proxy would be passed to the authorization server, and if all checks out, the authorization server would return an authorization proxy which could be used by the client as described in the previous subsection. 2.4 Cascaded Authorization In a paper on cascaded authentication <ref> [8] </ref>, Sollins proposed a method to pass authorization from party to party when a task involves cascaded operations by parties that do not completely trust one another. A similar mechanism can be supported by restricted proxies, though some of the tradeoffs are different. <p> Roles could not be used to implement the authorization server described in Section 2.2. The mechanism that comes closest to restricted proxies is the cascaded authentication mechanism described by Sollins <ref> [8] </ref> in which restrictions can be added as credentials are passed from system to system. The differences between Sollins' approach and support for cascaded authorization based on restricted proxies was described in Section 2.4.
Reference: [9] <author> J. G. Steiner, B. C. Neuman, and J. I. Schiller. </author> <title> Kerberos: An authentication service for open network systems. </title> <booktitle> In Proceedings of the Winter 1988 Usenix Conference, </booktitle> <pages> pages 191-201, </pages> <month> February </month> <year> 1988. </year> <institution> Dallas, Texas. </institution> <month> 14 </month>
Reference-contexts: Al--though restricted proxies could have been supported in Version 4 of Kerberos using the method just described, the explicit support for proxies in Version 5 makes their use more transparent to applications which have already been modified to use Kerberos. Kerberos <ref> [5, 9] </ref> is an authentication system based on conventional cryptography, designed as part of MIT's Project Athena. Credentials are issued by an authentication server and presented by a client to prove its identity to a particular end-server. Credentials consist of two parts: a ticket, and a session key.
References-found: 9

