URL: ftp://ftp.ai.univie.ac.at/papers/oefai-tr-97-25.ps.Z
Refering-URL: http://www.ai.univie.ac.at/cgi-bin/tr-online/?number+97-25
Root-URL: 
Email: E-mail:winkler@coams.atc.co.at  E-mail: juffi@ai.univie.ac.at  
Title: On Effort in AI Research A Description along Two Dimensions one could devise a successful
Author: Franz-Gunter Winkler Johannes Furnkranz Newell, Shaw Simon 
Note: "If  
Address: Barichgasse 10/2/10, A-1010 Wien, Austria  Schottengasse 3, A-1010 Wien, Austria  
Affiliation: Austrian Society for Cognitive Science  Austrian Research Institute for Artificial Intelligence  
Abstract: In this paper we describe Artificial Intelligence as research that moves along two different axes: human-compatible knowledge and machine-compatible processing. An analysis of computer chess research along these dimensions shows that AI more and more diverges into an engineering branch and a cognitive branch. As an explanation, we offer a hypothesis about the dependency of research effort on these dimensions. It becomes obvious that the most rewarding projects are the hardest. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Anderson, J. R. </author> <year> 1976. </year> <title> Language, Memory, </title> <booktitle> and Thought. </booktitle> <address> Hillsdale, NJ: </address> <publisher> Lawrence Erlbaum Associates. </publisher>
Reference: <author> Bratko, I., and Michie, D. </author> <year> 1980. </year> <title> A representation of pattern-knowledge in chess endgames. </title> <editor> In Clarke, M., ed., </editor> <booktitle> Advances in Computer Chess 2. </booktitle> <publisher> Edinburgh University Press. </publisher> <pages> 31-54. </pages>
Reference: <author> Chase, W. G., and Simon, H. A. </author> <year> 1972. </year> <title> The mind's eye in chess. In Chase, </title> <editor> W., ed., </editor> <booktitle> Visual Information Processing: Proceedings of the 8th Annual Carnegie Psychology Symposium. </booktitle> <address> New York: </address> <publisher> Academic Press. </publisher>
Reference: <editor> Reprinted in Collins (ed.), </editor> <booktitle> Readings in Cognitive Science, </booktitle> <publisher> Morgan Kaufmann 1988. </publisher>
Reference: <author> Collins, A. M., and Quillian, M. R. </author> <year> 1969. </year> <title> Retrieval time from semanticmemory. </title> <journal> Journal of Verbal Learning and Verbal Behavior 8 </journal> <pages> 240-248. </pages>
Reference: <author> Condon, J. H., and Thompson, K. </author> <year> 1982. </year> <title> Belle chess hardware. </title> <editor> In Clarke, M., ed., </editor> <booktitle> Advances in Computer Chess 3. </booktitle> <publisher> Pergamon Press. </publisher> <pages> 45-54. </pages> <editor> deGroot, A. D., and Gobet, F. </editor> <year> 1996. </year> <title> Perception and Memory in Chess. Assen, The Netherlands: </title> <editor> Van Gorcum. deGroot, A. D. </editor> <year> 1965. </year> <title> Thought and Choice in Chess. The Hague: </title> <publisher> Mouton. </publisher>
Reference: <author> Donninger, C. </author> <year> 1996. </year> <title> CHE: A graphical language for expressing chess knowledge. </title> <journal> ICCA Journal 19(4) </journal> <pages> 234-241. </pages>
Reference-contexts: Many formalisms have subsequently been developed in the same spirit (Bratko & Michie 1980; George & Schaeffer 1990), most of them limited to certain endgames (see (Michie & Bratko 1991) for a bibliography). A recent promising step into the right direction can be found in <ref> (Donninger 1996) </ref>, which introduces a very efficient interpreter of an extensible language for expressing certain characteristics of a board position.
Reference: <author> Ebeling, C. </author> <year> 1987. </year> <title> All the Right Moves: A VLSI Architecture for Chess. </title> <booktitle> The ACM Distinguished Dissertation Series. </booktitle> <publisher> MIT Press. </publisher>
Reference: <author> Furnkranz, J., and De Raedt, L. </author> <year> 1997. </year> <title> Learning playing strategies from chess endgame databases: An ILP approach. </title> <note> In preparation. </note>
Reference-contexts: It would be rewarding to develop algorithms for automatically discovering playing strategies for such endgames (see (Muggleton 1988) and <ref> (Furnkranz & De Raedt 1997) </ref> for some preliminary work). A particularly hard problem is that human-compatible strategies are typically simple, but not necessarily optimal in the sense that they require a minimum number of moves.
Reference: <author> George, M., and Schaeffer, J. </author> <year> 1990. </year> <title> Chunking for experience. </title> <journal> ICCA Journal 13(3) </journal> <pages> 123-132. </pages>
Reference: <author> Gillogly, J. J. </author> <year> 1972. </year> <title> The technology chess program. </title> <booktitle> Artificial Intelligence 3 </booktitle> <pages> 145-163. </pages>
Reference-contexts: This selective search was motivated by both hardware limitations and the attempt to model machine chess playing on human chess playing. However, the somewhat unexpected success of the Tech program <ref> (Gillogly 1972) </ref> for the first time demonstrated the power of brute-force computing. Further improvements (Slate & Atkin 1983) and the advances in parallel processing (Hyatt, Gower, & Nel-son 1985) and chess-specific hardware (Condon & Thompson 1982; Ebeling 1987; Hsu 1987) have eventually lead to the Deep Blue vs.
Reference: <author> Gobet, F., and Jansen, P. </author> <year> 1994. </year> <title> Towards a chess program based on a model of human memory. </title> <editor> In Herik, H. J. v. d.; Herschberg, I. S.; and Uiterwijk, J. W. H. M., eds., </editor> <booktitle> Advances in Computer Chess 7. </booktitle> <publisher> University of Limburg. </publisher> <pages> 35-60. </pages>
Reference-contexts: CHUMP is a variant of this program that is actually able to play a game by retrieving moves that it has previously associated to certain chunks in the program's pattern memory <ref> (Gobet & Jansen 1994) </ref>. Machine-compatible Processing AI has soon recognized the difficulty of formalizing human thought in a top-down way (using the human concepts as a starting point), and has instead discovered approaches to solving intelligent tasks, which are more closely modeled after the processing capabilities of a computer.
Reference: <author> Gobet, F., and Simon, H. A. </author> <year> 1996. </year> <title> Templates in chess memory: A mechanism for recalling several boards. </title> <booktitle> Cognitive Psychology 31 </booktitle> <pages> 1-40. </pages>
Reference-contexts: Several authors have even tried to measure the magnitude of this pattern library, resulting in estimates in the range of 5,000 to 10,000 patterns (Simon & Chase 1973; Hayes 1987). Some of these so-called chunks 1 are easy 1 Recent research has extended the chunking theory with so-called templates <ref> (Gobet & Simon 1996) </ref>, i.e., long-term-memory structures that are quite similar to scripts and to articulate and common to most chess players (like, e.g., passed pawn, skewer, minority attack ), while others are presumably subconscious and subjective to individual players. <p> Kasparov challenge, where a computer for the first time won a tournament game against the reigning human chess world champion. frames, but are based on a detailed psychological model <ref> (deGroot & Gobet 1996) </ref>. For our discussion, the differences in the details of the psychological models of chunks and templates are irrelevant. 2 The basic pattern for a fork is a protected knight threatening two higher-valued pieces, like, e.g., rook and queen.
Reference: <author> Gobet, F. </author> <year> 1993. </year> <title> A computer model of chess memory. </title> <booktitle> In Proceedings of the 15th Annual Meeting of the Cognitive Science Society, </booktitle> <pages> 463-468. </pages>
Reference-contexts: Recently, these ideas were reinvestigated and integrated into the CHREST program <ref> (Gobet 1993) </ref>, which is the most advanced computational model of a human's chess players memory organization.
Reference: <author> Hayes, J. R. </author> <year> 1987. </year> <title> Memory organization and world-class performance. </title> <booktitle> In Proceedings of the 21st Carnegie-Mellon Symposium in Cognition. </booktitle>
Reference: <author> Holding, D. H. </author> <year> 1985. </year> <title> The Psychology of Chess Skill. </title> <publisher> Lawrence Erlbaum Associates. </publisher>
Reference: <author> Hsu, F.-H. </author> <year> 1987. </year> <title> A two-million moves/s CMOS single-chip chess move generator. </title> <journal> IEEE Journal of Solid-State Circuits 22(5) </journal> <pages> 841-846. </pages>
Reference: <author> Hyatt, R. M.; Gower, B. E.; and Nelson, H. L. </author> <year> 1985. </year> <title> Cray Blitz. </title> <editor> In Beal, D., ed., </editor> <booktitle> Advances in Computer Chess 4. </booktitle> <address> Oxford, UK: </address> <publisher> Pergamon Press. </publisher> <pages> 8-18. </pages>
Reference-contexts: However, the somewhat unexpected success of the Tech program (Gillogly 1972) for the first time demonstrated the power of brute-force computing. Further improvements (Slate & Atkin 1983) and the advances in parallel processing <ref> (Hyatt, Gower, & Nel-son 1985) </ref> and chess-specific hardware (Condon & Thompson 1982; Ebeling 1987; Hsu 1987) have eventually lead to the Deep Blue vs.
Reference: <author> Kaindl, H. </author> <year> 1982. </year> <title> Positional long-range planning in computer chess. </title> <editor> In Clarke, M. R. B., ed., </editor> <booktitle> Advances in Computer Chess 3. </booktitle> <publisher> Pergamon Press. </publisher> <pages> 145-167. </pages>
Reference: <author> Kerner, Y. </author> <year> 1994. </year> <title> Case-based evaluation in computer chess. </title> <editor> In Keane, M.; Haton, J.; and Manago, M., eds., </editor> <booktitle> Topics in Case-Based Reasoning (EWCBR-94), Lecture Notes in Artificial Intelligence. </booktitle> <address> Berlin: </address> <publisher> Springer-Verlag. </publisher>
Reference: <author> Kerner, Y. </author> <year> 1995. </year> <title> Learning strategies for explanation patterns: Basic game patterns with application to chess. </title> <editor> In Aamodt, A., and Veloso, M., eds., </editor> <booktitle> Proceedings of the 1st International Conference on Case-Based Reasoning (ICCBR-95), Lecture Notes in Artificial Intelligence. </booktitle> <address> Berlin: </address> <publisher> Springer-Verlag. </publisher>
Reference: <author> Klimesch, W. </author> <year> 1994. </year> <title> The Structure of Long-Term Memory: A Connectivity Model of Semantic Processing. </title> <address> Hillsdale, NJ: </address> <publisher> Lawrence Erlbaum Associates. </publisher>
Reference-contexts: Thus processing depends on the number and the structure of the links in the network. Classical semantic memory models (Collins & Quil-lian 1969; Anderson 1976) rely on the power of hierarchical, sparse network structures, but there is strong critique on this situation. In <ref> (Klimesch 1994) </ref> Klimesch argues that these conceptions are misleading and he shows that they contradict important experimental data. He instead pleads for highly interconnected and cyclic memory structures in the following sense: The more connections a concept is associated with, the more meaningful is that concept.
Reference: <author> Levy, D. N., ed. </author> <year> 1988. </year> <title> Computer Chess Compendium. </title> <publisher> London: Batsford Ltd. </publisher>
Reference: <author> Michie, D., and Bratko, I. </author> <year> 1991. </year> <note> Comments to 'chunk-ing for experience'. ICCA Journal 18(1):18. </note>
Reference-contexts: Many formalisms have subsequently been developed in the same spirit (Bratko & Michie 1980; George & Schaeffer 1990), most of them limited to certain endgames (see <ref> (Michie & Bratko 1991) </ref> for a bibliography). A recent promising step into the right direction can be found in (Donninger 1996), which introduces a very efficient interpreter of an extensible language for expressing certain characteristics of a board position.
Reference: <author> Muggleton, S. </author> <year> 1988. </year> <title> Inductive acquisition of chess strategies. </title> <editor> In Hayes, J. E.; Michie, D.; and Richards, J., eds., </editor> <booktitle> Machine Intelligence 11. </booktitle> <publisher> Clarendon Press. </publisher> <pages> chapter 17, 375-387. </pages>
Reference-contexts: It would be rewarding to develop algorithms for automatically discovering playing strategies for such endgames (see <ref> (Muggleton 1988) </ref> and (Furnkranz & De Raedt 1997) for some preliminary work). A particularly hard problem is that human-compatible strategies are typically simple, but not necessarily optimal in the sense that they require a minimum number of moves.
Reference: <author> Newell, A.; Shaw, C.; and Simon, H. A. </author> <year> 1958. </year> <title> Chess playing programs and the problem of complexity. </title> <journal> IBM Journal of Research and Development 2 </journal> <pages> 320-335. </pages> <note> Reprinted in (Levy 1988). </note>
Reference-contexts: The basic idea of brute-force chess programs dates back to (Shannon 1950) and (Turing 1953), where one can already find many of the ideas that are still used in today's chess programs (like, e.g., search extensions). However early chess programs (see <ref> (Newell, Shaw, & Simon 1958) </ref> for an overview) relied on highly selective search on a few basic concepts like material balance, center control, and king safety. This selective search was motivated by both hardware limitations and the attempt to model machine chess playing on human chess playing.
Reference: <author> Nunn, J. </author> <year> 1992. </year> <note> Secrets of Rook Endings. Batsford. </note>
Reference: <author> Nunn, J. </author> <year> 1994a. </year> <title> Extracting information from endgame databases. </title> <editor> In van den Herik, H. J.; Her-schberg, I. S.; and Uiterwijk, J. W. H. M., eds., </editor> <booktitle> Advances in Computer Chess 7. </booktitle> <publisher> University of Limburg. </publisher> <pages> 19-34. </pages>
Reference-contexts: GM John Nunn's effort to manually extract some of the knowledge that is implicitly contained in these databases resulted in a series of widely acknowledged endgame books (Nunn 1992; 1994b; 1995), but Nunn readily admitted that he does not yet understand all aspects of the databases he analyzed <ref> (Nunn 1994a) </ref>. It would be rewarding to develop algorithms for automatically discovering playing strategies for such endgames (see (Muggleton 1988) and (Furnkranz & De Raedt 1997) for some preliminary work).
Reference: <author> Nunn, J. </author> <year> 1994b. </year> <note> Secrets of Pawnless Endings. Bats-ford. </note>
Reference: <author> Nunn, J. </author> <year> 1995. </year> <note> Secrets of Minor-Piece Endings. Bats-ford. </note>
Reference: <author> Opdahl, A. L., and Tessem, B. </author> <year> 1994. </year> <title> Long-term planning in computer chess. </title> <editor> In Herik, H. J. v. d.; Herschberg, I. S.; and Uiterwijk, J. W. H. M., eds., </editor> <booktitle> Advances in Computer Chess 7. </booktitle> <institution> University of Lim-burg. </institution>
Reference: <author> Roycroft, A. J. </author> <year> 1988. </year> <title> Expert against oracle. </title> <editor> In Hayes, J. E.; Michie, D.; and Richards, J., eds., </editor> <booktitle> Machine Intelligence 11. </booktitle> <address> Oxford, UK: </address> <publisher> Oxford University Press. </publisher> <pages> 347-373. </pages>
Reference-contexts: The most famous example are the attempts of grandmasters to defeat a perfect KQKR database within 50 moves or the attempt of an endgame specialist to defeat a perfect database in the "almost undocumented and very difficult" KBBKN endgame <ref> (Roycroft 1988) </ref>.
Reference: <author> Shannon, C. E. </author> <year> 1950. </year> <title> Programming a computer for playing chess. </title> <journal> Philosophical Magazine 41(7) </journal> <pages> 256-275. </pages>
Reference-contexts: Brute-force chess programs are the best-known example of this line of research. The basic idea of brute-force chess programs dates back to <ref> (Shannon 1950) </ref> and (Turing 1953), where one can already find many of the ideas that are still used in today's chess programs (like, e.g., search extensions).
Reference: <institution> Reprinted in (Levy 1988). </institution>
Reference: <author> Simon, H. A., and Barenfeld, M. </author> <year> 1969. </year> <title> Information-processing analysis of perceptual processes in problem solving. </title> <journal> Psychological Review 76(5) </journal> <pages> 473-483. </pages>
Reference-contexts: However, even simple concepts like a knight-fork are non-trivial to formalize. 2 Because of this strong focus on models for memory organization, early AI research has concentrated on the simulation of aspects of the problem-solving process that are closely related to memory, like perception <ref> (Simon & Barenfeld 1969) </ref> or retrieval (Simon & Gilmartin 1973). Recently, these ideas were reinvestigated and integrated into the CHREST program (Gobet 1993), which is the most advanced computational model of a human's chess players memory organization.
Reference: <author> Simon, H. A., and Chase, W. G. </author> <year> 1973. </year> <title> Skill in chess. </title> <journal> American Scientist 61(4) </journal> <pages> 394-403. </pages>
Reference-contexts: However, even simple concepts like a knight-fork are non-trivial to formalize. 2 Because of this strong focus on models for memory organization, early AI research has concentrated on the simulation of aspects of the problem-solving process that are closely related to memory, like perception (Simon & Barenfeld 1969) or retrieval <ref> (Simon & Gilmartin 1973) </ref>. Recently, these ideas were reinvestigated and integrated into the CHREST program (Gobet 1993), which is the most advanced computational model of a human's chess players memory organization.
Reference: <author> Simon, H. A., and Gilmartin, K. </author> <year> 1973. </year> <title> A simulation of memory for chess positions. </title> <booktitle> Cognitive Psychology 5 </booktitle> <pages> 29-46. </pages>
Reference-contexts: However, even simple concepts like a knight-fork are non-trivial to formalize. 2 Because of this strong focus on models for memory organization, early AI research has concentrated on the simulation of aspects of the problem-solving process that are closely related to memory, like perception (Simon & Barenfeld 1969) or retrieval <ref> (Simon & Gilmartin 1973) </ref>. Recently, these ideas were reinvestigated and integrated into the CHREST program (Gobet 1993), which is the most advanced computational model of a human's chess players memory organization.
Reference: <author> Slate, D. J., and Atkin, L. R. </author> <year> 1983. </year> <title> Chess 4.5 | the northwestern university chess program. In Chess Skill in Man and Machine. </title> <publisher> Springer-Verlag, </publisher> <address> 2 edition. </address> <note> chapter 4, 82-118. </note>
Reference-contexts: This selective search was motivated by both hardware limitations and the attempt to model machine chess playing on human chess playing. However, the somewhat unexpected success of the Tech program (Gillogly 1972) for the first time demonstrated the power of brute-force computing. Further improvements <ref> (Slate & Atkin 1983) </ref> and the advances in parallel processing (Hyatt, Gower, & Nel-son 1985) and chess-specific hardware (Condon & Thompson 1982; Ebeling 1987; Hsu 1987) have eventually lead to the Deep Blue vs.
Reference: <author> Turing, A. M. </author> <year> 1953. </year> <title> Chess. </title> <editor> In Bowden, B., ed., </editor> <title> Faster Than Thought. </title> <journal> London: </journal> <volume> Bitman. </volume> <pages> 286-295. </pages> <note> Reprinted in (Levy 1988). </note>
Reference-contexts: Brute-force chess programs are the best-known example of this line of research. The basic idea of brute-force chess programs dates back to (Shannon 1950) and <ref> (Turing 1953) </ref>, where one can already find many of the ideas that are still used in today's chess programs (like, e.g., search extensions).
Reference: <author> Wilkins, D. E. </author> <year> 1980. </year> <title> Using patterns and plans in chess. </title> <booktitle> Artificial Intelligence 14(3) </booktitle> <pages> 165-203. </pages>
Reference-contexts: Therefore, it has only made a small step along the MCP axis. Its contribution along the HCK axis is higher, but it is clearly a simplification compared to human memory organization. As a sort of dual example, consider PARADISE <ref> (Wilkins 1980) </ref>, which is a program for solving chess combinations at an abstract level. The main goal of this project was to investigate the extent to which tree search can be guided and controlled with the use of background knowledge (Wilkins 1982).
Reference: <author> Wilkins, D. E. </author> <year> 1982. </year> <title> Using knowledge to control tree search searching. </title> <booktitle> Artificial Intelligence 18(1) </booktitle> <pages> 1-51. </pages>
Reference-contexts: As a sort of dual example, consider PARADISE (Wilkins 1980), which is a program for solving chess combinations at an abstract level. The main goal of this project was to investigate the extent to which tree search can be guided and controlled with the use of background knowledge <ref> (Wilkins 1982) </ref>. The used concepts are quite abstract and clearly motivated by human knowledge, but the processing is still very machine-compatible, using a systematic best-first search in the space of possible plans.
Reference: <author> Winkler, F.-G. </author> <year> 1991. </year> <title> Das Vernetzungsmodell von Klimesch - eine Simulation. </title> <type> Master's thesis, </type> <institution> Institute for Medical Cybernetics and Artificial Intelligence, University of Vienna, Vienna, Austria. </institution> <note> In German. </note>
Reference-contexts: Achieving functionality does not necessarily increase the understanding of how we achieve this functionality. We think 3 One of the authors made extensive experience with this and other facettes of problematic computability of interconnected structures when simulating Klimesch's model in his diploma thesis <ref> (Winkler 1991) </ref>. the original motivation of research in computer chess, namely "merely" to build a successful chess machine, has to be replaced with different goals that require a reconciliation of machine-compatible processing with human-compatible knowledge. However, according to our hypothesis, we cannot expect this to be easy.
Reference: <author> Zobrist, A. L., and Carlson, F. R. </author> <year> 1973. </year> <title> An advice-taking chess computer. </title> <publisher> Scientific American 93-105. </publisher>
References-found: 43

