URL: http://www.cs.cornell.edu/home/kleinber/stoc96-node.ps
Refering-URL: http://www.cs.cornell.edu/home/kleinber/kleinber.html
Root-URL: 
Title: Node-Disjoint Paths on the Mesh and a New Trade-Off in VLSI Layout  
Author: Alok Aggarwal Jon M. Kleinberg David P. Williamson 
Note: 02139. Supported by an ONR Graduate Fellowship. Part of this work was performed while visiting the  
Address: P.O. Box 218, Yorktown Heights NY 10598.  Cambridge, MA  
Affiliation: I.B.M. T.J. Watson Research Center,  Laboratory for Computer Science, MIT,  IBM T.J. Watson Research Center.  
Abstract: A number of basic models for VLSI layout are based on the construction of node-disjoint paths between terminals on a multi-layer grid. In this setting, one is interested in minimizing both the number of layers required and the area of the underlying grid. Building on work of Cutler and Shiloach, and Aggarwal, Klawe, et al., we prove an upper-bound trade-off between these two quantities in a general multi-layer grid model. As a special case of our main result, we obtain significantly improved bounds for the problem of routing a full permutation on the mesh using node-disjoint paths; our new bound here is within polylogarithmic factors of the bisection bound. Our algorithms involve some new techniques for analyzing the structure of node-disjoint paths in planar graphs, and indicate some respects in which this problem, at least in the planar case, is fundamentally different from its edge-disjoint counterpart. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Aggarwal, M. Klawe, D. Lichtenstein, N. Linial, A. Wigderson, </author> <title> "Multi-layer grid embeddings," </title> <booktitle> Proc. 26th IEEE FOCS, </booktitle> <year> 1985. </year>
Reference-contexts: O (n 1+" ) rounds, for every " &gt; 0? Again, by way of contrast, these questions are straightforward to resolve in the affirmative when one only requires edge-disjoint paths. 1 These latter questions turn out to be closely related to open problems of Aggarwal, Klawe, Lichtenstein, Linial, and Wigderson <ref> [1] </ref> in the setting of multi-layer VLSI layout. In multi-layer VLSI layouts, typically a pin (a node, in our terminology) goes through several layers at the same location, and the routing among pins at each layer is planar. <p> Consequently, it is practically useful to route as many connections on a single layer as possible (in order to reduce the vias); for more details see <ref> [1, 5, 14] </ref>. These constraints thus result directly in problems of the type (1) and (1 0 ), with layers now playing the role of "rounds." One typically reduces the number of layers by introducing spacing between the terminals. <p> These constraints thus result directly in problems of the type (1) and (1 0 ), with layers now playing the role of "rounds." One typically reduces the number of layers by introducing spacing between the terminals. In the model of <ref> [1, 5] </ref>, for a parameter d, consider a dn fi dn mesh G d , with an n fi n grid of terminals at a uniform spacing of d. <p> The goal in this model is to find the tightest trade-off possible between the spacing d and the number of layers required in the worst case. Cutler and Shiloach [5] showed that spacing d = O (n 2 ) suffices to route all pairs in a single layer; and <ref> [1] </ref> showed that this value of d was tight up to constant factors. In terms of a general trade-off between d and the minimum number of layers required, the techniques of [5, 1] are only sufficient to show that, for spacing d, O ( d ) layers are sufficient. <p> In terms of a general trade-off between d and the minimum number of layers required, the techniques of <ref> [5, 1] </ref> are only sufficient to show that, for spacing d, O ( d ) layers are sufficient. <p> Theorem 1.2 With spacing d, every permutation on the mesh contains a set of (n p pairs that can be routed in one layer, and the entire permutation can be routed in O (nd 1 2 log 2 n) layers. This strengthens the bounds of <ref> [5, 1] </ref> on the number of layers required for routing a permutation. However, in the context of VLSI, where the number of layers is typically a fixed small number, the "dual" maximization versions of these theorems may in fact be of greater interest. <p> In this language, Theorem 1.1 simply says that for any permutation T , we have (T ) = O (n log 2 n). For the model of <ref> [5, 1] </ref>, with a dn fi dn mesh and terminals evenly spaced at distance d, we use d (T ) to denote the minimum size of a partition of T into routable sets. <p> In Section 3, we consider the basic problem of a permutation on the mesh, and prove Theorem 1.1. In Section 4, we give our algorithm for routing with inter-terminal spacing in the model of <ref> [5, 1] </ref>. Finally, in Section 5, we discuss algorithms for routing with only a constant number of bends per path. Lemma 2.1 Let x 1 ; : : : ; x d be positive integers for which P P i = b. Then d a 2 b 1 . <p> Lemma 2.2 For non-negative integers a and b, one has Z 1 x a (1 x) b dx = (a + b + 1) 1 a + b ! 1 Lemma 2.3 Consider the following random experiment: we first choose a bias ff for a coin uniformly from the interval <ref> [0; 1] </ref>, and then flip the coin n times. The probability that the number of heads is k is equal to 1 n+1 . Proof. The probability is equal to k 0 which by Lemma 2.2 is equal to 1 n+1 . <p> The details for this are easy, and omitted here. We represent A as a union of pseudo-rows, as follows. Let v 1 denote the lower left vertex of A. We choose ff 2 <ref> [0; 1] </ref> uniformly at random, and perform the following random walk for k time steps starting from v 1 : 6 (i) With probability 1 ff, move one step to the right. (ii) With probability ff, move one step up and then one step to the right. <p> The crucial point is that there are only d edges of H 0 with both ends in a given slice, and so using the technique of <ref> [1, 5] </ref>, we can route one terminal pair for each of these edges using a single color.
Reference: [2] <author> A. Aggarwal, M. Klawe, D. Lichtenstein, N. Linial, A. Wigderson, </author> <title> "A lower bound on the area of permutation layouts," </title> <journal> Algorithmica, </journal> <volume> 6(1991), </volume> <pages> pp. 241-255. </pages>
Reference: [3] <author> A. Aggarwal, M. Klawe, P. Shor, </author> <title> "Multi-layer grid embeddings for VLSI," </title> <journal> Algorithmica, </journal> <volume> 6(1991), </volume> <pages> pp. 129-151. </pages>
Reference: [4] <author> R. Cole, A. Siegel, </author> <title> "River routing every which way but loose," </title> <booktitle> Proc. 25th IEEE FOCS, </booktitle> <year> 1984. </year>
Reference-contexts: This extends work of Cole and Siegel <ref> [4] </ref> and Leiserson and Maley [11] for the mesh. This approach based on homotopy appears not to be directly applicable 3 to our problem, for although we could test any fixed choice of homotopies for our paths in polynomial time, there are exponentially many choices of homotopies to try.
Reference: [5] <author> M. Cutler, Y. Shiloach, </author> <title> "Permutation layout," </title> <journal> Networks, </journal> <volume> 8(1978), </volume> <pages> pp. 253-278. </pages>
Reference-contexts: Consequently, it is practically useful to route as many connections on a single layer as possible (in order to reduce the vias); for more details see <ref> [1, 5, 14] </ref>. These constraints thus result directly in problems of the type (1) and (1 0 ), with layers now playing the role of "rounds." One typically reduces the number of layers by introducing spacing between the terminals. <p> These constraints thus result directly in problems of the type (1) and (1 0 ), with layers now playing the role of "rounds." One typically reduces the number of layers by introducing spacing between the terminals. In the model of <ref> [1, 5] </ref>, for a parameter d, consider a dn fi dn mesh G d , with an n fi n grid of terminals at a uniform spacing of d. <p> The goal in this model is to find the tightest trade-off possible between the spacing d and the number of layers required in the worst case. Cutler and Shiloach <ref> [5] </ref> showed that spacing d = O (n 2 ) suffices to route all pairs in a single layer; and [1] showed that this value of d was tight up to constant factors. <p> In terms of a general trade-off between d and the minimum number of layers required, the techniques of <ref> [5, 1] </ref> are only sufficient to show that, for spacing d, O ( d ) layers are sufficient. <p> However, guided by (2 0 ), a reasonable question was the following. (3 0 ) With spacing d, are O ( d ) layers sufficient to route any permutation on the mesh, for every " &gt; 0? This contains the result of <ref> [5] </ref> in the case d = fi (n 2 ) and question (2 0 ) in the case d = 1. The main results of this paper provide affirmative answers to questions (2), (2 0 ), and (3 0 ). <p> Theorem 1.2 With spacing d, every permutation on the mesh contains a set of (n p pairs that can be routed in one layer, and the entire permutation can be routed in O (nd 1 2 log 2 n) layers. This strengthens the bounds of <ref> [5, 1] </ref> on the number of layers required for routing a permutation. However, in the context of VLSI, where the number of layers is typically a fixed small number, the "dual" maximization versions of these theorems may in fact be of greater interest. <p> Namely, these are the first algorithms that can provably extract from any permutation on the mesh a routable set of terminal pairs whose size is within polylogarithmic factors of the bisection bound. Moreover, the approach we develop is fundamentally different from that of Cutler and Shiloach <ref> [5] </ref>, which was essentially the only previous method applicable in this setting. <p> In this language, Theorem 1.1 simply says that for any permutation T , we have (T ) = O (n log 2 n). For the model of <ref> [5, 1] </ref>, with a dn fi dn mesh and terminals evenly spaced at distance d, we use d (T ) to denote the minimum size of a partition of T into routable sets. <p> If there are p terminal pairs, we will show how to route p=(k log k) of them simultaneously; applying this process greedily gives the bound of Theorem 1.1. The approach of Cutler and Shiloach <ref> [5] </ref> requires, in order to route q terminals in a single round, that the inter-terminal spacing be at least q. Using this, one can therefore only be sure of routing a set of size k 2=3 , which is not enough when p = k 5=3+" . <p> In Section 3, we consider the basic problem of a permutation on the mesh, and prove Theorem 1.1. In Section 4, we give our algorithm for routing with inter-terminal spacing in the model of <ref> [5, 1] </ref>. Finally, in Section 5, we discuss algorithms for routing with only a constant number of bends per path. Lemma 2.1 Let x 1 ; : : : ; x d be positive integers for which P P i = b. Then d a 2 b 1 . <p> The crucial point is that there are only d edges of H 0 with both ends in a given slice, and so using the technique of <ref> [1, 5] </ref>, we can route one terminal pair for each of these edges using a single color.
Reference: [6] <author> P. Erdos, G. Szekeres, </author> <title> "A combinatorial problem in geometry," </title> <journal> Compositio Math., </journal> <volume> 2(1935), </volume> <pages> pp. 463-470. </pages>
Reference-contexts: Let M be a matching of maximum size in H, and order its edges so that their endpoints in U have increasing indices. Consider the resulting sequence of indices in V . By a lemma due to Erdos and Szekeres <ref> [6] </ref>, this sequence must have either an increasing sequence or a decreasing sequence of length at least q q (H). The edges corresponding to this sequence constitute a monotone matching. Lemma 2.6 H has a monotone matching of size at least e=2n. Proof.
Reference: [7] <author> M. Klawe, F.T. Leighton, </author> <title> "A tight lower bound on the area of planar permutation layouts," </title> <journal> SIAM J. Discrete Math., </journal> <volume> 5(192), </volume> <pages> pp. 558-563. </pages>
Reference: [8] <author> J. Kleinberg, E. Tardos, </author> <title> "Disjoint paths in densely embedded graphs," </title> <booktitle> Proc. 36th IEEE FOCS, </booktitle> <year> 1995. </year>
Reference-contexts: The study of this problem is also interesting to us precisely because its structure, in the case of planar graphs, is very different from the analogous edge-disjoint paths problem. This is true even in a technical sense; for example, work of Eva Tardos and the second author <ref> [8] </ref> has shown that for many planar graphs including the mesh, a natural cut condition is sufficient to within polylogarithmic factors for the feasibility of edge-disjoint paths.
Reference: [9] <author> M.E. Kramer, J. van Leeuwen, </author> <title> "The complexity of wire routing and finding the minimum area layouts for arbitrary VLSI circuits," </title> <booktitle> Advances in Computing Research 2: VLSI Theory, </booktitle> <editor> F.P. Preparata, Ed., </editor> <publisher> London: JAI Press, </publisher> <year> 1984. </year> <pages> pp. 129-146. </pages>
Reference-contexts: At the same time, the basic node-disjoint paths problem is NP-hard even for the two-dimensional mesh <ref> [9] </ref>, and very little is known in the way of reasonable approximation algorithms for the problem.
Reference: [10] <author> F.T. Leighton, </author> <title> Layouts for the Shu*e-Exchange Graph and Lower Bound Techniques for VLSI, </title> <type> Ph.D. Thesis, </type> <institution> MIT Math Dept., </institution> <year> 1981. </year>
Reference-contexts: Then it is not hard to show by a crossing number argument (using a lemma of <ref> [10] </ref>) that (T ) = fi ( p even though T is again routable in a single round using edge-disjoint paths. 1.2 Sketch of the Algorithm It is not difficult, with a constant-factor loss in the bound, to reduce the problem for an arbitrary set of terminals to one in which
Reference: [11] <author> C. Leiserson, </author> <title> F.M. Maley, "Algorithms for routing and testing routability of planar VLSI layouts," </title> <booktitle> Proc. 17th ACM STOC, </booktitle> <year> 1985. </year>
Reference-contexts: This extends work of Cole and Siegel [4] and Leiserson and Maley <ref> [11] </ref> for the mesh. This approach based on homotopy appears not to be directly applicable 3 to our problem, for although we could test any fixed choice of homotopies for our paths in polynomial time, there are exponentially many choices of homotopies to try.
Reference: [12] <author> W.R. Pulleyblank, </author> <title> "Two Steiner tree packing problems," </title> <booktitle> invited talk at ACM Symposium on Theory of Computing, </booktitle> <year> 1995. </year>
Reference-contexts: In particular, in many models of VLSI layout, effective layout strategies rely on heuristics for finding node-disjoint paths; many current routing software systems rely extensively on such an approach (see also <ref> [12] </ref>). Node-disjointness constraints can arise as well in the context of virtual circuit routing in networks, when one requires paths to be node-disjoint for the sake of fault-tolerance or because of bottlenecks involving switches rather than links.
Reference: [13] <author> P. Raghavan, E. Upfal, </author> <title> "Efficient all-optical routing," </title> <booktitle> Proc. 26th ACM STOC, </booktitle> <year> 1994. </year>
Reference-contexts: Bounds for (T ) for permutations T on a d-dimensional mesh is a result of Raghavan and Upfal <ref> [13] </ref>, and our work here can be seen to provide node-disjoint analogues of some of these bounds.
Reference: [14] <author> R. Rivest, </author> <title> "The placement and interconnect system," </title> <booktitle> Proc. 19th Design and Automation Conference, </booktitle> <year> 1982. </year> <month> 11 </month>
Reference-contexts: Consequently, it is practically useful to route as many connections on a single layer as possible (in order to reduce the vias); for more details see <ref> [1, 5, 14] </ref>. These constraints thus result directly in problems of the type (1) and (1 0 ), with layers now playing the role of "rounds." One typically reduces the number of layers by introducing spacing between the terminals.
Reference: [15] <author> N. Robertson, </author> <title> P.D. Seymour, "Graph Minors VII. Disjoint paths on a surface," </title> <journal> J. Com--binatorial Theory Ser. B, </journal> <volume> 45(1988), </volume> <pages> pp. 212-254. </pages>
Reference-contexts: When the number of terminal pairs is restricted to be a fixed constant, and the graph is planar, a polynomial algorithm for (1) and (1 0 ) was first given by Robertson and Seymour in <ref> [15] </ref>.
Reference: [16] <author> A. Schrijver, </author> <title> "Disjoint homotopic paths and trees in a planar graph," </title> <journal> Discrete and Computational Geometry, </journal> <volume> 6(1991), </volume> <pages> pp. 527-574. 12 </pages>
Reference-contexts: When the number of terminal pairs is restricted to be a fixed constant, and the graph is planar, a polynomial algorithm for (1) and (1 0 ) was first given by Robertson and Seymour in [15]. A more practically efficient algorithm for this case was subsequently given by Schrijver <ref> [16] </ref>, who also gave a polynomial-time algorithm for the case in which all terminals lie on the boundaries of a designated set of faces, and the homotopies of the paths with respect to these faces is fixed.
References-found: 16

