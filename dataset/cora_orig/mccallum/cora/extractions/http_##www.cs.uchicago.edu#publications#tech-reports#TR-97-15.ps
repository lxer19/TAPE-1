URL: http://www.cs.uchicago.edu/publications/tech-reports/TR-97-15.ps
Refering-URL: http://cs-www.uchicago.edu/publications/tech-reports/
Root-URL: 
Email: schaefer@cs.uchicago.edu  
Title: A Guided Tour of Minimal Indices and Shortest Descriptions  
Author: Marcus Schaefer 
Degree: Submitted as a Master's Thesis at the  
Date: November 21, 1997  
Address: 1100 East 58th Street Chicago, Illinois 60637, USA  
Affiliation: University of Chicago  Department of Computer Science University of Chicago  
Abstract: The set of minimal indices of a Gdel numbering ' is detned as MIN ' = fe : (8i &lt; e)[' i 6= ' e ]g. It has been known since 1972 that MIN ' T ; 00 , but beyond this MIN ' has remained mostly uninvestigated. This thesis collects the scarce results on MIN ' from the literature and adds some new observations including that MIN ' is autoreducible, but neither regressive nor (1; 2)- computable. We also study several variants of MIN ' that have been detned in the literature like size-minimal indices, shortest descriptions, and minimal indices of decision tables. Some challenging open problems are left for the adventurous reader. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Amitava Bagchi. </author> <title> Economy of Descriptions and Minimal Indices. </title> <type> MAC Technical Memorandum, </type> <institution> MIT, </institution> <year> 1972. </year>
Reference-contexts: A generalization of the set MIN ' as detned above was suggested in the early seventies, at least partially inspired by Blum's investigations into the axiomatization of complexity measures <ref> [1] </ref>. The idea was to allow size-measure on the indices; instead of saying i is smaller than e if i &lt; e, we use a size measure s to decide; we say i has smaller size than e if s (i) &lt; s (e). <p> These size measures s measure anything from time to space complexity, not just program length [29]. Some problems connected with the generalized version of MIN ' were solved by Bagchi <ref> [1] </ref> and Pager [25], but many remained, and still remain, open. The thesis starts with the investigation of MIN ' and then traces the variants considered in the literature. <p> This detnition might be found too restrictive in its insistence on the computability of s. We will return to this question in the section on -minimal indices. For now we restrict s to be computable. Consider the following generalization of MIN. Detnition 3.1 (Bagchi <ref> [1] </ref>) For a Gdel numbering ' and a size function s detne MIN ';s = fe : (8i)[s (i) &lt; s (e) ) ' i 6= ' e ]g; the set of size-minimal indices of '. As usual we will drop ' if not needed. <p> In this case most of the results for MIN carry over to MIN s , for example ; 00 T MIN s (which was proved by Bagchi <ref> [1] </ref>). We will not pursue this question here, since the situation becomes much more interesting for general size functions. <p> Then both (8i &gt; k)[s (i) &gt; s (e)] and ' e (x) 6= ' i (x) are decidable with a ; 0 oracle uniformly in s (and '), even if s is not total. 2 Bagchi <ref> [1] </ref> proved that ; 00 T MIN s ; 0 , but he leaves unanswered the question of whether ; 0 reduces to MIN s . We know already that if s is the identity function then we can make MIN ';s tt-complete for some Gdel numbering '. <p> Remark. In the light of our newfound interest in weak size function let us return to size-minimal indices and see what happens there. Bagchi <ref> [1] </ref> proved that ; 00 T MIN s ; 0 for size functions. For weak size functions this becomes ; 00 T MIN s s 0 , where s 0 is the jump of the graph of s. <p> The variant of minimal indices we look at next is suggested by the work of David Pager [23, 24]. For two partial functions f and g we write f g if f (x) = g (x) for all x in the domain of f. Detnition 6.1 (Bagchi <ref> [1] </ref>) Let MIN ';s = fe : (8i)[s (i) &lt; s (e) ) ' e 6 ' i ]g; the set of -size-minimal indices of '.
Reference: [2] <author> Manuel Blum. </author> <title> On the size of machines. </title> <journal> Information and Control, </journal> <volume> 11, 257265, </volume> <year> 1967. </year>
Reference-contexts: natural assumption, it can also be made without any loss of generality, since the results will easily translate to other versions of ; 0 , TOT, or W e . 2.2 Immunity Perhaps the trst result on minimal indices can be found in Manuel Blum's 1967 paper on machine size <ref> [2] </ref>. His Theorem 1 in a slightly modernized and restricted version states that the set MIN is immune, that is, it does not contain an intnite c.e. subset (and is intnite itself). Theorem 2.3 (Blum [2]) MIN is immune. Proof. <p> result on minimal indices can be found in Manuel Blum's 1967 paper on machine size <ref> [2] </ref>. His Theorem 1 in a slightly modernized and restricted version states that the set MIN is immune, that is, it does not contain an intnite c.e. subset (and is intnite itself). Theorem 2.3 (Blum [2]) MIN is immune. Proof. Suppose there is a computable function f such that the range of f is an intnite subset of MIN ' . Detne the computable function g (e) = f ((i)[f (i) &gt; e]).
Reference: [3] <author> John Case. </author> <type> email communication, </type> <year> 1996. </year>
Reference-contexts: Remember that two partial functions f and g are said to be almost always equal (written as f = fl g) if they agree on all but tnitely many inputs. Detnition 5.1 (Case <ref> [3] </ref>) For a Gdel numbering ' detne MIN fl the = fl -minimal indices of '. As regards dropping ' the same conventions that were used for MIN apply. Let us trst note some facts. Lemma 5.2 (i) (Case [3]) MIN fl is 0 2 -immune, i.e., it has no intnite <p> Detnition 5.1 (Case <ref> [3] </ref>) For a Gdel numbering ' detne MIN fl the = fl -minimal indices of '. As regards dropping ' the same conventions that were used for MIN apply. Let us trst note some facts. Lemma 5.2 (i) (Case [3]) MIN fl is 0 2 -immune, i.e., it has no intnite subset in 0 2 . 3 0 (iii) There is a Kolmogorov numbering ' such that MIN fl ' is d-complete for 0 3 . (iv) MIN fl is k-immune for every k, hence ; 0 does not btt-reduce
Reference: [4] <author> John Case, S. Jain, M. Suraj. </author> <title> Not-So-Nearly-Minimal-Size Program Inference. </title> <booktitle> Lecture Notes in Artitcial Intelligence, </booktitle> <volume> 961, 7796, </volume> <year> 1995. </year>
Reference-contexts: The only area where minimal indices still receive some attention is computational learning theory, and here MIN ' is of practical interest. This line of research was started by Freivalds and Kinber in the 1970s and continues to the present day <ref> [4] </ref>. The underlying motivation is to not to be content with just learning a function, but to tnd a program that is not too much longer than the shortest possible. <p> A short history of this area can be found in a paper by Case, Jain and Suraj <ref> [4] </ref>. But that's another story and shall be told another time. 8 Open Questions Several interesting questions remain open. Foremost is Meyer's original question whether all MIN ' are tt-equivalent.
Reference: [5] <author> J. P. Cleave. </author> <title> Some Properties of Recursively Inseparable Sets. </title> <journal> Zeitschr. f. math. Logik und Grund-lagen d. Math., </journal> <volume> 16, 187200, </volume> <year> 1970. </year>
Reference-contexts: In this case S and T are strongly inseparable, namely if U and V are c.e. sets such that S U V T , then S = fl U and T = fl V (the easy proof can be found in a paper by Cleave <ref> [5] </ref>). Detne g (x) = &gt; &lt; 0 if x 2 S " otherwise. Fix an index a of g and let I 1 be the tnite set of indices which have at most the size of a, namely H = fi : s (i) s (a)g.
Reference: [6] <author> Stephen Fenner, Marcus Schaefer. </author> <title> Bounded Immunity and Btt-Reductions. </title> <type> Unpublished manuscript, </type> <note> 1997; a preliminary version appeared as: A note on a variant of immunity, </note> <author> btt-reducibility, </author> <title> and minimal indices. </title> <type> Technical Report TR96-8-13, </type> <institution> University of Southern Maine, </institution> <note> http://www.cs.usm.maine.edu/report/TR96-8-13.ps, 1996. </note>
Reference-contexts: Detnition 2.8 (Fenner and Schaefer <ref> [6] </ref>) A set A is called k-immune if it is intnite and there is no computable function f such that * (D f (i) ) i2! is a family of pairwise disjoint sets, and * D f (i) " A 6= ;, and A set A is called !-immune if it <p> Note that 1-immunity is the same as immunity and hyperimmunity implies !-immunity. One reason for the lack of interest in !-immune sets is the folklore result that a set which is immune and co-c.e. is !-immune <ref> [6] </ref>. Therefore we do not get any new notions of simplicity between simple and hypersimple. Our interest in k-immunity here is explained by the following result. Theorem 2.9 MIN is !-immune. Proof. The proof is a generalization of the immunity proof using the k-fold Recursion Theorem. <p> By the last theorem MIN is a natural example of a set which is not hyperimmune, although it is !-immune. More on the realm between !-immunity and hyperimmunity can be found in the paper by Fenner and Schaefer <ref> [6] </ref>. 4 2.3 The Degrees of MIN There is a strong connection between immunity properties and completeness under strong reducibili-ties [6] which allows us to exploit the results of the last section. <p> More on the realm between !-immunity and hyperimmunity can be found in the paper by Fenner and Schaefer <ref> [6] </ref>. 4 2.3 The Degrees of MIN There is a strong connection between immunity properties and completeness under strong reducibili-ties [6] which allows us to exploit the results of the last section. The immunity of MIN immediately implies that no c.e., noncomputable set conjunctively reduces to MIN, and K does not m-reduce to MIN. It can also be shown that no c.e., noncomputable set bounded disjunctively reduces to MIN. <p> It can also be shown that no c.e., noncomputable set bounded disjunctively reduces to MIN. A more interesting result is the following which was trst proved by Fenner and Schaefer. Theorem 2.10 (Fenner and Schaefer <ref> [6] </ref>) ; 0 6 btt MIN. The proof will adapt a result of Denisov's according to which no hyperimmune set can be truth-table complete. Proof. Detne A = fe : ' e (0) = 0g and B = fe : ' e (0) = 1g. <p> A closer inspection of the proof reveals that it establishes that ; 0 does not k-tt-reduce to a 2k-immune set. Fenner and Schaefer <ref> [6] </ref> showed that in fact ; 0 does not k-tt-reduce to a k-immune set, a result which is tight, but more dicult to prove, and the present version is sucient to deal with btt-reductions. The above shows that any reduction of ; 0 to MIN will not be trivial. <p> Further thanks to Steve Fenner for long discussions on bounded reducibilities which eventually made it into a separate paper <ref> [6] </ref>. Several helpful remarks came from an anonymous referee who in particular deserves credit for pointing out the possibility of a short proof of Theorem 2.10 similar to the one presented here (using the recursion theorem instead of inseparable sets).
Reference: [7] <author> R.M. Friedberg. </author> <title> Three theorems on recursive enumeration. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 23, 309316, </volume> <year> 1958. </year>
Reference-contexts: This is also witnessed by the behavior of MIN ' itself. If we allowed arbitrary numberings of the computable, partial functions, MIN ' could be almost any set. And even for eective numberings there is the pathological Friedberg numbering <ref> [7] </ref> for which MIN ' would be equal to !, i.e., every index would be minimal. Belonging to MIN ' is the function min ' which computes the minimal '-index of a program. More formally the function is detned as min ' (i) = (e)[' i = ' e ].
Reference: [8] <author> Carl G. Jockusch. </author> <title> Semirecursive sets and positive reducibility. </title> <journal> Trans. Amer. Math. Soc., </journal> <volume> 131, 420436, </volume> <year> 1968. </year>
Reference-contexts: Perhaps the most famous notion of approximate computability is semirecursiveness as introduced by Jockusch in 1968 <ref> [8] </ref>. A set A is called semirecursive if there is a total computable function f in two arguments such that f (a; b) 2 A " fa; bg if A " fa; bg is not empty. MIN is not semirecursive. This follows from an easy general result by Jockusch [8]: every <p> 1968 <ref> [8] </ref>. A set A is called semirecursive if there is a total computable function f in two arguments such that f (a; b) 2 A " fa; bg if A " fa; bg is not empty. MIN is not semirecursive. This follows from an easy general result by Jockusch [8]: every immune and semirecursive set is hyperimmune. Since MIN is immune without being hyperimmune, it cannot be semirecursive. Semirecursiveness is generalized by the notion of (1; k)-computability which originated in frequency computation, an area closely related to the theory of bounded queries. <p> 3 for all x 1 ; x 2 . (3; 2)-verboseness comprises several other familiar (and less familiar) properties several of which formalize weak notions of enumerability. 9 Fact 2.21 If a set A has any of the following properties then it is (3; 2)-verbose: * (1; 2)-computable, * semirecursive <ref> [8] </ref>, * semi-c.e. [9], i.e., there is a computable partial function f such that f (a; b) 2 A " fa; bg whenever A " fa; bg is not empty, * weakly semirecursive [9], i.e., there is a computable partial function f such that f (a; b) 2 A " fa;
Reference: [9] <author> Carl G. Jockusch. </author> <title> Weakly Semirecursive Sets. </title> <journal> The Journal of Symbolic Logic, </journal> <volume> 55, 2, 637644, </volume> <year> 1990. </year> <month> 22 </month>
Reference-contexts: x 1 ; x 2 . (3; 2)-verboseness comprises several other familiar (and less familiar) properties several of which formalize weak notions of enumerability. 9 Fact 2.21 If a set A has any of the following properties then it is (3; 2)-verbose: * (1; 2)-computable, * semirecursive [8], * semi-c.e. <ref> [9] </ref>, i.e., there is a computable partial function f such that f (a; b) 2 A " fa; bg whenever A " fa; bg is not empty, * weakly semirecursive [9], i.e., there is a computable partial function f such that f (a; b) 2 A " fa; bg whenever jA <p> A has any of the following properties then it is (3; 2)-verbose: * (1; 2)-computable, * semirecursive [8], * semi-c.e. <ref> [9] </ref>, i.e., there is a computable partial function f such that f (a; b) 2 A " fa; bg whenever A " fa; bg is not empty, * weakly semirecursive [9], i.e., there is a computable partial function f such that f (a; b) 2 A " fa; bg whenever jA " fa; bgj = 1, * regressive, i.e., there is a computable partial function f and an enumeration a 0 ; a 1 ; : : : of A without
Reference: [10] <author> Carl G. Jockusch, Jr., M. Lerman, R. I. Soare, R. M. Solovay. </author> <title> Recursively enumerable sets modulo iterated jumps and extensions of Arslanov's completeness criterion. </title> <journal> Journal of Symbolic Logic, 43,4, </journal> <volume> 12881323, </volume> <year> 1989. </year>
Reference-contexts: Since R s is a 2-c.e. (d.c.e.) set in which we can compute a txed-point free function we can conclude ; 0 T R s using the generalized Arslanov completeness criterion <ref> [10] </ref>. Proposition 3.15 ; 0 T R s (for all computable size functions s). The proposition leaves us with a slightly unsatisfactory situation: we know that a Turing reduction exists, but we cannot explicitly present it. Part of the reason is that the generalized Arslanov completeness criterion is nonuniform. <p> Part of the reason is that the generalized Arslanov completeness criterion is nonuniform. It does not yield a Turing reduction uniformly in s (and as a matter of fact it cannot, even for d.c.e. sets <ref> [10, Theorem 6.4] </ref>). <p> Proof. For (i) use a result by Arslanov, Nadirov, and Solov'ev on almost txed points <ref> [10, Theorem 2.1, Lemma 4.1] </ref>. Then (ii): MIN fl 62 0 2 is an immediate consequence and MIN fl 2 0 3 is easily checked. Using the Kolmogorov numbering ' from Theorem 2.17 yields (iii) (even using the same reduction). For (iv) note that MIN fl MIN.
Reference: [11] <author> Jetm Kinber. </author> <title> On btt-degrees of sets of minimal numbers in Gdel numberings. </title> <journal> Zeitschr. f. math. Logik und Grundlagen d. Math., </journal> <volume> 23, 201212, </volume> <year> 1977. </year>
Reference-contexts: This follows because MIN as a 0 2 set has an intnite subset computable in ; 0 . The second observation leads to the question (trst asked by Meyer) whether all MIN ' are tt-equivalent. Two partial results to this question have been obtained so far. Theorem 2.15 (Kinber <ref> [11] </ref>) There are two Gdel numberings ', such that MIN ' and MIN are incomparable with regard to btt-reductions. Marandjan proves the same result for conjunctive reductions (c-reductions). <p> Marandjan proves the same result for conjunctive reductions (c-reductions). Theorem 2.16 (Marandjan [18, 19]) There are two Gdel numberings ', such that MIN ' and MIN are incomparable with regard to c-reductions. This leaves us with the possibility that the tt-degree of MIN ' will depend on '. Kinber <ref> [11] </ref> mentions that it is possible to construct a Gdel numbering, for which MIN ' is tt-complete for 0 2 , and Marandjan provides a proof which shows that MIN ' can be made d-complete for 0 2 .
Reference: [12] <author> Martin Kummer. </author> <title> An easy priority-free proof of a theorem of Friedberg. </title> <journal> Theoretical Computer Science, </journal> <volume> 74, 249251, </volume> <year> 1990. </year>
Reference-contexts: This means that MIN s and s cannot be computationally easy at the same time. Bagchi observed that s can be chosen in such a way (using the Friedberg numbering) that MIN s becomes computable. It might be interesting to note that in the other direction Kummer <ref> [12] </ref> used minimal indices to give an easy priority-free proof of the existence of a Friedberg numbering. For the rest of this section we will concentrate on weak size functions. The variant of minimal indices we look at next is suggested by the work of David Pager [23, 24].
Reference: [13] <author> Martin Kummer. </author> <type> email communication, </type> <month> March, </month> <year> 1996. </year>
Reference-contexts: It seems, however, that we do not understand the relationship between R s , RAND ' and MIN s very well. Acknowledgments Thanks go to Martin Kummer <ref> [13] </ref> for giving me an extensive overview of the history of the MIN-problem, Bill Gasarch for suggesting [22], and Lance Fortnow for help with some of the results. Further thanks to Steve Fenner for long discussions on bounded reducibilities which eventually made it into a separate paper [6].
Reference: [14] <author> Martin Kummer. </author> <title> On the Complexity of Random Strings. </title> <booktitle> 12th Annual Symposium on Theoretical Aspects of Computer Science, </booktitle> <volume> 1046, 2536, </volume> <year> 1996. </year>
Reference-contexts: Using Arslanov's completeness criterion again, one can show that ; 0 wtt RAND ' . Martin Kummer recently gave a surprising retnement of this result. Theorem 2.29 (Kummer <ref> [14] </ref>) ; 0 tt RAND for all Kolmogorov numberings , but there is a Gdel numbering ', for which ; 0 6 tt RAND ' .
Reference: [15] <author> Martin Kummer, Frank Stephan. </author> <title> Some Aspects of Frequency Computation. </title> <type> Technical Report 21/91, </type> <institution> Universitt Karlsruhe, </institution> <month> October, </month> <year> 1991. </year>
Reference-contexts: Detnition 2.20 (Kummer and Stephan <ref> [15] </ref>) A set A is called (3; 2)-verbose if there is a computable function f such that A (x 1 ; x 2 ) 2 W f (x 1 ;x 2 ) and jW f (x 1 ;x 2 ) j 3 for all x 1 ; x 2 . (3; <p> We know that MIN ' is not approximable for some Gdel numbering '. This make this particular MIN ' a natural example of an autoreducible, non-approximable set (Kummer and Stephan <ref> [15] </ref> showed that approximable sets are autoreducible). If we could prove that MIN is not approximable the example 21 would be even more convincing.
Reference: [16] <author> Martin Kummer, Frank Stephan. </author> <title> Recursion Theoretic Properties of Frequency Computation and Bounded Queries. </title> <journal> Information and Computation 120(1), </journal> <volume> 5977, </volume> <year> 1995. </year>
Reference-contexts: Semirecursiveness is generalized by the notion of (1; k)-computability which originated in frequency computation, an area closely related to the theory of bounded queries. Frequency computation is another attempt at introducing a notion of approximate computability; for a recent paper on the subject see Kummer and Stephan <ref> [16] </ref>. Let A denote the characteristic function of A. Then the characteristic vector A (x 1 ; : : : ; x k ) is detned as ( A (x 1 ); : : : ; A (x k )). <p> By relativizing a theorem of Kummer and Stephan <ref> [16, Theorem 3.2] </ref> to ; 0 we would then have that MIN is not even (1; k)-computable by a function computable in ; 0 . 2.5 Autoreducibility Most of the results concerning MIN are of a negative character, due to its extreme thinness.
Reference: [17] <author> Ming Li, Paul Vitnyi. </author> <title> An Introduction to Kolmogorov Complexity and Its Applications. </title> <publisher> Springer Verlag, </publisher> <address> New York, </address> <note> Second Edition, </note> <year> 1997. </year>
Reference-contexts: Detnition 2.28 (Li and Vitnyi <ref> [17] </ref>) Detne RAND ' = fx : C ' (x) lg xg; the set of random strings with regard to '. Using Arslanov's completeness criterion again, one can show that ; 0 wtt RAND ' . Martin Kummer recently gave a surprising retnement of this result.
Reference: [18] <author> G. B. Marandjan. </author> <title> On the sets of minimal indices of partial recursive functions. </title> <booktitle> Mathematical Foundations of Computer Science 1979, Lecture Notes in Computer Science 74, </booktitle> <pages> 372374. </pages>
Reference-contexts: Two partial results to this question have been obtained so far. Theorem 2.15 (Kinber [11]) There are two Gdel numberings ', such that MIN ' and MIN are incomparable with regard to btt-reductions. Marandjan proves the same result for conjunctive reductions (c-reductions). Theorem 2.16 (Marandjan <ref> [18, 19] </ref>) There are two Gdel numberings ', such that MIN ' and MIN are incomparable with regard to c-reductions. This leaves us with the possibility that the tt-degree of MIN ' will depend on '.
Reference: [19] <author> G. B. Marandjan. </author> <title> Selected Topics in Recursive Function Theory. </title> <type> Technical Report 1990-75, </type> <month> August </month> <year> 1990, </year> <institution> Department of Computer Science, Technical University of Denmark. </institution>
Reference-contexts: Two partial results to this question have been obtained so far. Theorem 2.15 (Kinber [11]) There are two Gdel numberings ', such that MIN ' and MIN are incomparable with regard to btt-reductions. Marandjan proves the same result for conjunctive reductions (c-reductions). Theorem 2.16 (Marandjan <ref> [18, 19] </ref>) There are two Gdel numberings ', such that MIN ' and MIN are incomparable with regard to c-reductions. This leaves us with the possibility that the tt-degree of MIN ' will depend on '.
Reference: [20] <author> Albert R. Meyer. </author> <title> Program Size in Restricted Programming Languages. </title> <journal> Information and Control, </journal> <volume> 21, 382394, </volume> <year> 1972. </year>
Reference-contexts: Lemma 2.7 (Meyer <ref> [20] </ref>) MIN is not hyperimmune. Proof. To see this, we will detne a strictly increasing function ff (n) inductively such that the pairwise disjoint sets I n = fx : ff (n) &lt; x ff (n + 1)g intersect MIN ' for every n. Start with ff (0) = 0. <p> As a matter of fact the best result known is a wtt-reduction. Recall that a Turing reduction is called a wtt-reduction if there is a computable bound on the queries asked to the oracle. Theorem 2.11 (Meyer <ref> [20] </ref>) ; 0 wtt MIN. Proof. Fix a Gdel numbering '. We will show that ; 0 ' wtt MIN ' , where ; 0 ' = fi : ' i (i) #g. Since ; 0 m ; 0 ' this will conclude the proof. <p> The index of this function is the minimal index of ' i . 2 We observed earlier that the reverse is also true, namely MIN ' T min ' , hence MIN ' and min ' have the same Turing degree. Theorem 2.13 (Meyer <ref> [20, Theorem 7] </ref>) ; 00 T MIN. Proof. Fix a Gdel numbering '. Since ; 00 m TOT ' , it will be sucient to show that TOT ' T MIN ' . Let a be the minimal index of the function that is zero everywhere.
Reference: [21] <author> Piergiorgio Odifreddi. </author> <title> Classical recursion theory. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1989. </year>
Reference-contexts: To the extent of my knowledge this is a fairly complete account with the exception of the learning-theoretic cousins of MIN ' . For reducibilities and other notation see the standard references <ref> [21, 28] </ref>. 2 Minimal Indices and Shortest Descriptions 2.1 Detnitions Given a numbering (' i ) i2! we call an index e of the computable function ' e minimal if ' e is dierent from all functions with smaller index in the numbering. <p> Now i 2 TOT ' i the index which is left is a j . 2 This result is nontrivial, since every degree above ; 0 contains a set which is not autoreducible (as proven by Jockusch and Paterson <ref> [21] </ref>). 2.6 Shortest Descriptions Remember that we detned the set of shortest descriptions of a Gdel numbering ' to be R ' = fe : (8i &lt; e)[' i (0) 6= ' e (0)]g; which is computable in ; 0 . <p> Using Arslanov's completeness criterion the result can be sharpened. We include a statement of the version of the criterion we will need. Theorem 2.26 (Arslanov <ref> [21] </ref>) If A is a c.e. set and f wtt A has no txed-points, i.e., ' e 6= ' f (e) for all e, then A is wtt-complete 3 . <p> Theorem 2.27 Suppose A is an intnite c.e. set and f a computable partial function which agrees with C ' on A. Then ; 0 wtt f . In particular any such function f has the same wtt-degree as ; 0 . 3 Arslanov's criterion for wtt-reductions <ref> [21, Proposition III.8.17] </ref> is usually stated for functions which fultll W e 6= W f (e) for all e. Such a function can be transformed into one which is txed-point free in our sense (see, for example, Exercise V.5.8 in Soare [28]). 12 Proof. <p> These two results are particularly interesting in the light of the observation that ; 0 tt B and A wtt B imply A tt B (thanks to Martin Kummer for pointing this out <ref> [21, Proof of Proposition VI.5.8] </ref>).
Reference: [22] <author> James C. Owings. </author> <title> Eective Choice Functions and Index Sets. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 32, 370373, </volume> <year> 1986. </year>
Reference-contexts: The usual attempts of m-reducing ; 0 or ; 0 to MIN are doomed, as shown in Theorem 2.10. By a result of Case <ref> [22] </ref> the set of minimal indices is even strongly eectively immune. Owings gives a proof of a more general result in the same paper. We include the short, but instructive proof of the original result. <p> We include the short, but instructive proof of the original result. Detnition 2.4 A set A is strongly eectively immune if it is intnite and there is a computable function f such that (8e)[W e A ) max (W e ) f (e)]: Theorem 2.5 (Case <ref> [22, Theorem 1] </ref>) MIN is strongly eectively immune. Proof. Fix ', and let W e = dom (' e ) for all e. <p> Although we do not expect it to be either eectively or even strongly eectively immune in general (and it is easy to construct s where it is neither), it is constructively immune. We will prove a more general result which is based on a proof by Owings <ref> [22] </ref>. Detnition 3.7 A set A is constructively immune if it is intnite and there is a computable partial function such that if W e is intnite, then (e) # and (e) 2 W e A. <p> Detnition 3.8 We call H : P (!) ! P (!) an eective choice functional if there is a computable g such that * H (I (e)) I (e), * W g (e) cotnite, for all e. Eective choice functionals should not be confused with Owings <ref> [22] </ref> eective choice functions which are computable partial functions H from P (!) to ! such that H (A) 2 A for all A 2 dom (H). <p> Now the corollary applies, since MIN s = fH (I (e)) : e 2 !g. 2 Note that, for example, the same result holds for the ith-minimal indices. The next result is immediate from Owings' paper. Lemma 3.12 (Owings <ref> [22] </ref>) Suppose that H is a computable partial functional whose domain includes all intnite subsets of !, and such that H (A) is a tnite subset of A for all A in the domain of H. Then H is an eective choice functional. Hence we can draw the following conclusion. <p> It seems, however, that we do not understand the relationship between R s , RAND ' and MIN s very well. Acknowledgments Thanks go to Martin Kummer [13] for giving me an extensive overview of the history of the MIN-problem, Bill Gasarch for suggesting <ref> [22] </ref>, and Lance Fortnow for help with some of the results. Further thanks to Steve Fenner for long discussions on bounded reducibilities which eventually made it into a separate paper [6].
Reference: [23] <author> David Pager. </author> <title> On the Problem of Finding Minimal Programs for Tables. </title> <journal> Information and Control, </journal> <volume> 14, 550554, </volume> <year> 1969. </year>
Reference-contexts: For the rest of this section we will concentrate on weak size functions. The variant of minimal indices we look at next is suggested by the work of David Pager <ref> [23, 24] </ref>. For two partial functions f and g we write f g if f (x) = g (x) for all x in the domain of f.
Reference: [24] <author> David Pager. </author> <title> Further Results on the Problem of Finding Minimal Length Programs for Decision Tables. </title> <journal> Journal of the ACM, </journal> <volume> 21, 2, 207212, </volume> <year> 1974. </year>
Reference-contexts: Call a function s : S ! ! a weak size function if s 1 (n) is tnite for all n, where S ! is a set of indices we are interested in. Pager <ref> [24, 25] </ref> and Young [29] suggested some examples of weak size functions which are based on Blum's complexity measures. <p> For the rest of this section we will concentrate on weak size functions. The variant of minimal indices we look at next is suggested by the work of David Pager <ref> [23, 24] </ref>. For two partial functions f and g we write f g if f (x) = g (x) for all x in the domain of f. <p> Consequently the (x i ; b i ) are called the entries of the decision table. 19 The question of how dicult it is to tnd a -size-minimal index for a decision table was trst investigated by David Pager <ref> [24, 25] </ref>. He proved that even if we restrict ourselves to decision tables with just two entries, the problem is undecidable, regardless of the complexity of the size function. Let (x; y) denote the function with the decision table f (x; 0); (y; 1)g.
Reference: [25] <editor> David Pager. </editor> <booktitle> On the Eciency of Algorithms Journal of the ACM, </booktitle> <volume> 17, 4, 703714, </volume> <year> 1979. </year>
Reference-contexts: These size measures s measure anything from time to space complexity, not just program length [29]. Some problems connected with the generalized version of MIN ' were solved by Bagchi [1] and Pager <ref> [25] </ref>, but many remained, and still remain, open. The thesis starts with the investigation of MIN ' and then traces the variants considered in the literature. To the extent of my knowledge this is a fairly complete account with the exception of the learning-theoretic cousins of MIN ' . <p> Call a function s : S ! ! a weak size function if s 1 (n) is tnite for all n, where S ! is a set of indices we are interested in. Pager <ref> [24, 25] </ref> and Young [29] suggested some examples of weak size functions which are based on Blum's complexity measures. <p> This seems to be a natural size function taking into account both time and space. It is essentially the one suggested by Young [29]; Pager <ref> [25] </ref> later generalized it to include intnite functions. <p> Consequently the (x i ; b i ) are called the entries of the decision table. 19 The question of how dicult it is to tnd a -size-minimal index for a decision table was trst investigated by David Pager <ref> [24, 25] </ref>. He proved that even if we restrict ourselves to decision tables with just two entries, the problem is undecidable, regardless of the complexity of the size function. Let (x; y) denote the function with the decision table f (x; 0); (y; 1)g. <p> He proved that even if we restrict ourselves to decision tables with just two entries, the problem is undecidable, regardless of the complexity of the size function. Let (x; y) denote the function with the decision table f (x; 0); (y; 1)g. Theorem 6.2 (Pager <ref> [25] </ref>) For every weak size function s there is a constant c such that no total computable function f fultlls * (c; x) ' f (c;x) , * (c; x) 6 ' e for all e with s (e) &lt; s (f (c; x)) Using his proof and improving it slightly
Reference: [26] <author> C. P. Schnorr. </author> <title> Optimal Enumerations and Optimal Gdel Numberings. </title> <journal> Mathematical Systems Theory, </journal> <volume> 8, 182191, </volume> <year> 1974. </year>
Reference-contexts: Remember that a Gdel numbering ' is a Kolmogorov numbering if for every Gdel numbering there is a 6 linearly bounded computable function that transforms -indices into '-indices. It is well known that Kolmogorov numberings exist <ref> [26, Theorem 1] </ref>. The theorem gives us a tight result with regard to disjunctive reductions, since (as we mentioned earlier) not even ; 0 bd-reduces to MIN ' . Theorem 2.17 There is a Kolmogorov numbering ' such that MIN ' is d-complete for 0 2 . Proof.
Reference: [27] <author> Robert I. Soare. </author> <title> Computability and Recursiveness. </title> <journal> Bulletin of Symbolic Logic, </journal> <volume> 3, 284321, </volume> <year> 1996. </year>
Reference-contexts: The study of minimal indices started in the 1960s with research concentrating on the size of automata. Manuel Blum and Albert Meyer isolated the problem as we know it today, and initiated its fl Partially supported by NSF Grants CCR 92-53582 and CCR-9501794. 1 Soare <ref> [27] </ref> suggests a new terminology for computability which will be used throughout this thesis, for example computable instead of recursive and computably enumerable (c.e.) for recursively enumerable. 1 research. There is a twofold interest in MIN ' , one academic and one practical.
Reference: [28] <author> Robert I. Soare. </author> <title> Recursively Enumerable Sets and Degrees. </title> <publisher> Springer, </publisher> <address> New York, </address> <year> 1987. </year> <month> 23 </month>
Reference-contexts: To the extent of my knowledge this is a fairly complete account with the exception of the learning-theoretic cousins of MIN ' . For reducibilities and other notation see the standard references <ref> [21, 28] </ref>. 2 Minimal Indices and Shortest Descriptions 2.1 Detnitions Given a numbering (' i ) i2! we call an index e of the computable function ' e minimal if ' e is dierent from all functions with smaller index in the numbering. <p> Such a function can be transformed into one which is txed-point free in our sense (see, for example, Exercise V.5.8 in Soare <ref> [28] </ref>). 12 Proof. Let B be an intnite computable subset of A, and f as described in the theorem. We will show how to compute a function g in f which is txed-point free, i.e., ' e 6= ' g (e) . <p> The theorem is a consequence of a new result which is given below and the classical result by Friedberg and Rogers that ; 0 does not wtt-reduce to a hyperimmune set <ref> [28, Exercise 2.16] </ref>. Theorem 3.4 There is a computable size function s (independent of the Gdel numbering) such that MIN s is hyperimmune. Proof. We will in fact construct a computable size function s such that MIN ;s is hyperimmune for every eective numbering .
Reference: [29] <author> Paul D. Young. </author> <title> A Note on "Axioms" for Computational Complexity and Computation of Finite Functions. </title> <journal> Information and Control, </journal> <volume> 19, 377386, </volume> <year> 1971. </year>
Reference-contexts: These size measures s measure anything from time to space complexity, not just program length <ref> [29] </ref>. Some problems connected with the generalized version of MIN ' were solved by Bagchi [1] and Pager [25], but many remained, and still remain, open. The thesis starts with the investigation of MIN ' and then traces the variants considered in the literature. <p> Call a function s : S ! ! a weak size function if s 1 (n) is tnite for all n, where S ! is a set of indices we are interested in. Pager [24, 25] and Young <ref> [29] </ref> suggested some examples of weak size functions which are based on Blum's complexity measures. <p> This seems to be a natural size function taking into account both time and space. It is essentially the one suggested by Young <ref> [29] </ref>; Pager [25] later generalized it to include intnite functions.
Reference: [30] <author> Li Xiang. </author> <title> Eective immune sets, program index sets and eectively simple sets. </title> <booktitle> In Southeast Asian Conference on Logic, </booktitle> <address> New York, </address> <year> 1981. </year> <month> 24 </month>
Reference-contexts: Then M = fH (I (e)) : e 2 !g is constructively immune. In Owings paper it is shown that M is eectively immune under the assumptions of the corollary. Xiang <ref> [30] </ref> showed that the notions of constructive and eective immunity are independent. 3.2 Descriptions of smallest size Consider the set R s = fe : (8i)[s (i) &lt; s (e) ) ' i (0) 6= ' e (0)]g. (As usual ' remains in the background.) Since R s MIN s the
References-found: 30

