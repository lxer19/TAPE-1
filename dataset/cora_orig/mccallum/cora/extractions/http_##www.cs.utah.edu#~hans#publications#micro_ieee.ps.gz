URL: http://www.cs.utah.edu/~hans/publications/micro_ieee.ps.gz
Refering-URL: http://www.cs.utah.edu/~hans/publications/publications.html
Root-URL: 
Title: SPECIAL ISSUE OF THE IEEE PROCEEDINGS ON ASYNCHRONOUS CIRCUITS AND SYSTEMS 1 Application-Specific Asynchronous Microengines
Author: Hans Jacobson, Ganesh Gopalakrishnan 
Keyword: programmable control, micro-program, micro-control, micro-engine, chaining, asynchronous circuits, self-timed.  
Abstract: The programmable control paradigm has sucessfully demonstrated its usefulness in the synchronous design community, with its ability to allow late correction of design errors and easy upgrade of product families which both help meet time to market, and even effect run-time modifications of control in adaptive systems. However, despite the growing interest in asynchronous (self-timed) circuits, programmable asynchronous controllers based on the idea of microprogramming have not been actively pursued. We believe programmable control fills an important part of the design spectrum of asynchronous circuits. We propose an asynchronous microprogrammed control organization, a microengine, that targets application-specific implementations and emphasizes simplicity, modularity, and high performance. The architecture takes advantage of the natural ability of self-timing to sequence, or chain, actions efficiently|something that cannot easily be achived in similar synchronous designs. The result is a general approach to the design of application-specific microengines featuring a programmable datapath topology that offers very compact microcode and high performance|in fact performance close to that offered by automated high-level synthesis tools targeting state-of-the-art asynchronous hard-wired controllers. In performance comparisons of a CD-player error decoder design, the proposed microengine architecture was 26 times faster than the general purpose hardware of a 280 MIPS microprocessor, over 3 times as fast as the special purpose hardware of a low-power macro-module based implementation, and had almost identical performance to a finite state machine based implementation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Davis, B. Coates, and K. Stevens, </author> <title> "The Post Office experience: Designing a large asynchronous chip," </title> <booktitle> in Proc. Hawaii International Conf. System Sciences. Jan. 1993, </booktitle> <volume> vol. I, </volume> <pages> pp. 409-418, </pages> <publisher> IEEE Computer Society Press. </publisher>
Reference: [2] <author> Alan Marshall, Bill Coates, and Polly Siegel, </author> <title> "Designing an asynchronous communications chip," </title> <journal> IEEE Design & Test of Computers, </journal> <volume> vol. 11, no. 2, </volume> <pages> pp. 8-21, </pages> <year> 1994, </year> <month> Summer. </month>
Reference: [3] <author> Kees van Berkel, Ronan Burgess, Joep Kessels, Ad Peeters, Marly Roncken, Frits Schalij, and Rik van de Wiel, </author> <title> "A single-rail re-implementation of a DCC error detector using a generic standard-cell library," </title> <booktitle> in Asynchronous Design Methodologies. </booktitle> <month> May </month> <year> 1995, </year> <pages> pp. 72-79, </pages> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: According to <ref> [3] </ref> a factor of 1.5 in performance improvement and a 40% smaller area can be attributed to single rail over double rail in a Tangram implementation of a similar, but more complex, error decoder for the DCC player.
Reference: [4] <author> Andreas Nowatzyk, Gunes Aybay, and Fong Pong, </author> <booktitle> "Design of the s3mp processor," </booktitle> <year> 1995. </year>
Reference: [5] <author> J. Kuskin and D. Ofelt et al., </author> <title> "The Stanford FLASH multiprocessor," </title> <booktitle> in Proceedings of the 21st Annual International Symposium on Computer Architecture, </booktitle> <month> May </month> <year> 1994, </year> <pages> pp. 302-313. </pages>
Reference: [6] <author> Maurice Wilkes, </author> <title> "The best way to design an automatic calculating machine.," </title> <month> July </month> <year> 1951. </year>
Reference: [7] <author> Kenneth Stevens, </author> <title> "The soft controller: A self-timed microse-quencer for distributed parallel architectures," </title> <type> Tech. Rep., </type> <institution> Department of Computer Science, University of Utah, </institution> <month> Dec. </month> <year> 1984. </year>
Reference: [8] <author> S. B. Furber, J. D. Garside, S. Temple, J. Liu, P. Day, </author> <title> and N.C. Paver, "AMULET2e: An asynchronous embedded controller," </title> <booktitle> in Proc. International Symposium on Advanced Research in Asynchronous Circuits and Systems. </booktitle> <month> Apr. </month> <year> 1997, </year> <pages> pp. 290-299, </pages> <publisher> IEEE Computer Society Press. </publisher>
Reference: [9] <author> Alain J. Martin, Andrew Lines, Rajit Manohar, Mika Nystroem, Paul Penzes, Robert Southworth, and Uri Cummings, </author> <title> "The design of an asynchronous MIPS R3000 microprocessor," </title> <booktitle> in Advanced Research in VLSI, </booktitle> <month> Sept. </month> <year> 1997, </year> <pages> pp. 164-181. </pages>
Reference: [10] <author> Akihiro Takamura, Masashi Kuwako, Masashi Ima, Taro Fujii, Motokazu Ozawa, Izumi Fukasaku, Yoichiro Ueno, and Takashi Nanya, "TITAC-2: </author> <title> An asynchronous 32-bit microprocessor based on scalable-delay-insensitive model," </title> <booktitle> in Proc. International Conf. Computer Design (ICCD), </booktitle> <month> Oct. </month> <year> 1997, </year> <pages> pp. 288-294. </pages>
Reference: [11] <author> Joep Kessels, Kees van Berkel, Ronan Burgess, Marly Roncken, and Frits Schalij, </author> <title> "An error decoder for the compact disc player as an example of VLSI programming," </title> <booktitle> in Proc. European Conference on Design Automation (EDAC). </booktitle> <month> Mar. </month> <year> 1992, </year> <pages> pp. 69-75, </pages> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: No more changes are visible in the microinstruction bits since we continue to iterate over the SYNDROME loop instruction until n becomes negative. B. Result Comparison The Tangram implementation described in <ref> [11] </ref>, which was targeted for low-power, used double rail logic and a 1.2 micron technology and was reported to have an approximate worst case cycle time of 20 microseconds, each cycle decoding a sequence of 32 8-bit input words, and a core area of 2.0 mm 2 .
Reference: [12] <author> M. Renaudin, P. Vivet, and F. Robin, "ASPRO-216: </author> <title> A standard-cell QDI 16-bit RISC asynchronous microprocessor," </title> <booktitle> in Proc. International Symposium on Advanced Research in Asynchronous Circuits and Systems, </booktitle> <year> 1998, </year> <pages> pp. 22-31. </pages>
Reference: [13] <author> N. C. Paver, P. Day, C. Farnsworth, D. L. Jackson, W. A. Lien, and J. Liu, </author> <title> "A low-power, low-noise configurable self-timed DSP," </title> <booktitle> in Proc. International Symposium on Advanced Research in Asynchronous Circuits and Systems, </booktitle> <year> 1998, </year> <pages> pp. 32-42. </pages>
Reference: [14] <author> Takashi Nanya, Yoichiro Ueno, Hiroto Kagotani, Masashi Kuwako, and Akihiro Takamura, "TITAC: </author> <title> Design of a quasi-delay-insensitive microprocessor," </title> <journal> IEEE Design & Test of Computers, </journal> <volume> vol. 11, no. 2, </volume> <pages> pp. 50-63, </pages> <year> 1994. </year>
Reference: [15] <author> Scott Hauck, Gaetano Borriello, and Carl Ebeling, "Triptych: </author> <title> An fpga architecture with integrated logic and routing," </title> <booktitle> in Advanced Research in VLSI and Parallel Systems: Proceedings of the 1992 Brown/MIT Conference, </booktitle> <pages> pp. 26-43. </pages> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference: [16] <author> Daniel Gajski, </author> <title> Principles of Digital Design, </title> <publisher> Prentice Hall, </publisher> <year> 1997. </year>
Reference: [17] <author> Kenneth Yun, Peter Beerel, Vida Vakilotojar, Ayoob Dooply, and Julio Arceo, </author> <title> "The design and verification of a high-performance low-control-overhead asynchronous differential equation solver," </title> <booktitle> in Proceedings of the 1997 International Symposium on Advanced Research in Asynchronous Circuits and Systems, </booktitle> <month> Apr. </month> <year> 1997, </year> <pages> pp. 140-153. </pages>
Reference: [18] <author> Ivan Sutherland, </author> <title> "Micropipelines," </title> <journal> Communications of the ACM, </journal> <month> June </month> <year> 1989, </year> <note> The 1988 ACM Turing Award Lecture. </note>
Reference: [19] <author> S. M. Nowick, </author> <title> Automatic synthesis of burst-mode asynchronous controllers, </title> <type> Ph.D. thesis, </type> <institution> Computer Systems Laboratory, Stan-ford University, </institution> <year> 1993. </year>
Reference: [20] <author> K. Y. Yun, </author> <title> Synthesis of asynchronous controllers for heterogeneous systems, </title> <type> Ph.D. thesis, </type> <institution> Stanford University, </institution> <month> Aug. </month> <year> 1994. </year>
Reference: [21] <author> Hans Jacobson and Ganesh Gopalakrishnan, </author> <title> "Asynchronous mi-croengines for efficient high-level control," </title> <booktitle> in Advanced Research in VLSI, </booktitle> <month> Sept. </month> <year> 1997, </year> <pages> pp. 201-218. </pages>
Reference: [22] <author> Hans Jacobson and Ganesh Gopalakrishnan, </author> <title> "Asynchronous mi-croengines for efficient high-level control," </title> <type> Tech. Rep. </type> <institution> UUCS-97-007, Department of Computer Science, University of Utah, </institution> <address> Salt Lake City, UT, USA, </address> <month> June </month> <year> 1997. </year>
Reference: [23] <author> Prabhakar Kudva, </author> <title> Synthesis of Asynchronous Systems Targeting Finite State Machines, </title> <type> Ph.D. thesis, </type> <institution> Computer Science Department, University of Utah, </institution> <year> 1995. </year>
Reference: [24] <author> Neil H. Weste and Kamran Eshraghian, </author> <title> Principles of CMOS VLSI Design, </title> <publisher> Addison Wesley, </publisher> <year> 1992. </year>
Reference-contexts: The cycle time under worst case transistor models and temperature was 1.46 microseconds. Feature size scaling under constant field assumption <ref> [24] </ref>, except for voltage, would give a cycle time of Fig. 9. CD-Player error decoder area breakdown. The large digits add up to the total area of the respective designs. 3.7 microseconds in a 5V 1.2 micron technology.
References-found: 24

