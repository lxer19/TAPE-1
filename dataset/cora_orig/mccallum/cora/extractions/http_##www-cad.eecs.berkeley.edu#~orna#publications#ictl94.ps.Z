URL: http://www-cad.eecs.berkeley.edu/~orna/publications/ictl94.ps.Z
Refering-URL: http://www-cad.eecs.berkeley.edu/~orna/pub.html
Root-URL: http://www.cs.berkeley.edu
Phone: 1 (X' 2 QX(' 1 2 Q((X' 1 2 U 3 3 2 QX' 1 3 QX(' 1 Q' 2 U 3 E((' 1 U 2 3 U 4 (E' 1 U 2 (E' 3 U 4 4. A((' 1 U 2 3 U 4 A((' 1 U 2 3 U 4 A((' 1 U 2 3 U 4  2. A(X' 1 )U 2 A(AX' 1 )U 2 A(' 1 U 2 )U' 3 A(A' 1 U' 2 )U' 3 E(' 1 U' 2 )U' 3 3 E(' 1 2 )U((' 2 EX' 3 3 E' 1 U' 2 4. A' 1 U (X' 2 AX' 2 1 AXA' 1 U 2 AX' 2 5. E' 1 U (X' 2 E' 1 U(EX' 2 E' 1 U(' 2 U' 3 E' 1 U(E' 2 U' 3  
Note: 2. Q((X'  EX' 1 U 2 EXE' 1 U 2  
Abstract: A Summery of the equivalences A.1 Equivalences for Rule R5. The following equivalences show that the formulas in Rule R5 do not add to the expressive power of CTL. Their redundancy is already known, yet the equivalences we suggest have cl( 0 ) of size linear in j j, where 0 is the CTL equivalent of . We use the notation ' 1 ~ U ' 2 = (:' 1 ) U(:' 2 ). 1. Q(' 1 _ (X' 2 )) ' 1 _ QX' 2 A.2 Equivalences for Rule R4. Below we list the equivalences for the formulas in rule R4. 1. EXX' 1 EXEX' 1 
Abstract-found: 1
Intro-found: 1
Reference: [BCM + 92] <author> J.R. Burch, E.M. Clarke, K.L. McMillan, D.L. Dill, and L.J. Hwang. </author> <title> Symbolic model checking: 10 20 states and beyond. </title> <journal> Information and Computation, </journal> <volume> 98(2) </volume> <pages> 142-170, </pages> <month> June </month> <year> 1992. </year>
Reference: [BG94] <author> O. Bernholtz and O. Grumberg. </author> <title> Buy one, </title> <booktitle> get one free !!! In Proceedings of the First International Conference on Temporal Logic, </booktitle> <address> Bonn, </address> <month> July </month> <year> 1994. </year>
Reference: [Bro86] <author> M.C. Browne. </author> <title> An improved algorithm for the automatic verification of finite state systems using temporal logic. </title> <booktitle> In Proceedings of the First Symposium on Logic in Computer Science, </booktitle> <pages> pages 260-266, </pages> <address> Cambridge, </address> <month> June </month> <year> 1986. </year>
Reference: [Bry86] <author> R.E. Bryant. </author> <title> Graph-based algorithms for boolean function manipulation. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-35(8), </volume> <year> 1986. </year>
Reference: [CE81] <author> E.M. Clarke and E.A. Emerson. </author> <title> Design and synthesis of synchronization skeletons using branching time temporal logic. </title> <booktitle> In Proc. Workshop on Logic of Programs, volume 131 of Lecture Notes in Computer Science, </booktitle> <pages> pages 52-71. </pages> <publisher> Springer-Verlag, </publisher> <year> 1981. </year>
Reference: [CES86] <author> E.M. Clarke, </author> <title> E.A. Emerson, and A.P. Sistla. Automatic verification of finite-state concurrent systems using temporal logic specifications. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 8(2) </volume> <pages> 244-263, </pages> <month> January </month> <year> 1986. </year>
Reference: [EC82] <author> E.A. Emerson and E.M. Clarke. </author> <title> Using branching time logic to synthesize synchronization skeletons. </title> <booktitle> Science of Computer Programming, </booktitle> <volume> 2 </volume> <pages> 241-266, </pages> <year> 1982. </year>
Reference: [EH86] <author> E.A. Emerson and J.Y. Halpern. </author> <title> Sometimes and not never revisited: On branching versus linear time. </title> <journal> Journal of the ACM, </journal> <volume> 33(1) </volume> <pages> 151-178, </pages> <year> 1986. </year>
Reference: [EL85] <author> E.A. Emerson and C.-L. Lei. </author> <title> Modalities for model checking: Branching time logic strikes back. </title> <booktitle> In Proceedings of the Twelfth ACM Symposium on Principles of Programming Languages, </booktitle> <pages> pages 84-96, </pages> <address> New Orleans, </address> <month> January </month> <year> 1985. </year>
Reference: [Eme90] <author> E.A. Emerson. </author> <title> Temporal and modal logic. </title> <booktitle> Handbook of theoretical computer science, </booktitle> <pages> pages 997-1072, </pages> <year> 1990. </year>
Reference: [ES84] <author> A.E. Emerson and A.P. Sistla. </author> <title> Deciding full branching time logics. </title> <journal> Information and Control, </journal> <volume> 61(3) </volume> <pages> 175-201, </pages> <year> 1984. </year>
Reference: [Gei94] <author> D. Geist. </author> <title> Private communication. </title> <year> 1994. </year>
Reference: [GL91] <author> O. Grumberg and D. </author> <title> Long. Model checking and modular verification. </title> <booktitle> In Proc. 2nd Conference on Concurrency Theory, volume 527 of Lecture Notes in Computer Science, </booktitle> <year> 1991. </year>
Reference: [Lam80] <author> L. Lamport. </author> <title> Sometimes is sometimes "not never" on the temporal logic of programs. </title> <booktitle> In Proceedings of the 7th ACM Symposium on Principles of Programming Languages, </booktitle> <pages> pages 174-185, </pages> <month> January </month> <year> 1980. </year>
Reference: [McM93] <author> K.L. McMillan. </author> <title> Symbolic model checking. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1993. </year>
Reference: [Pnu81] <author> A. Pnueli. </author> <title> The temporal semantics of concurrent programs. </title> <journal> Theoretical Computer Science, </journal> <volume> 13 </volume> <pages> 45-60, </pages> <year> 1981. </year>
Reference: [Rab70] <author> M.O. Rabin. </author> <title> Weakly definable relations and special automata. </title> <booktitle> In Proc. Symp. Math. Logic and Foundations of Set Theory, </booktitle> <pages> pages 1-23. </pages> <publisher> North Holland, </publisher> <year> 1970. </year>
Reference: [SC85] <author> A.P. Sistla and E.M. Clarke. </author> <title> The complexity of propositional linear time logic. </title> <journal> ACM, </journal> <volume> 32(3) </volume> <pages> 733-749, </pages> <year> 1985. </year>

References-found: 18

