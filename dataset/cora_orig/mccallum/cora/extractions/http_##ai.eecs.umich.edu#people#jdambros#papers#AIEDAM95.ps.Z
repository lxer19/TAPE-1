URL: http://ai.eecs.umich.edu/people/jdambros/papers/AIEDAM95.ps.Z
Refering-URL: http://ai.eecs.umich.edu/people/jdambros/resume.html
Root-URL: http://www.cs.umich.edu
Title: Preference-Directed Design 1  
Author: Joseph G. DAmbrosio William P. 
Address: Ann Arbor, MI 48109 USA  
Affiliation: Birmingham 2 Dept. of Electrical Engineering and Computer Science The University of Michigan  
Abstract: Current design practices mandate that engineering designs be evaluated based on multiple attributes, e.g., cost, power, and area. For multi-attribute design problems, generation and evaluation of the Pareto optimal set guarantees the optimal design will be found, but is not practical for a large class of problems. Iterative techniques can be applied to most problems, but sacrifice optimality. In this paper, we introduce a new technique that extends the set of design problems that can be solved optimally. By first constructing an imprecise value function, the number of non-dominated alternatives that must be generated is reduced. We describe an implementation based on combinatorial optimization and constraint satisfaction which achieves additional performance gains by decomposing the value function to identify dominated design-variable assignments. Test results indicate that our approach extends the set of problems that can be solved optimally. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Birmingham, W. P., Gupta, A. P., & Siewiorek, D. P. </author> <year> (1992). </year> <title> Automating the Design of Computer Systems. </title>
Reference-contexts: Examples of the constraintsatisfaction approach include COSSACK (Mittal & Frayman, 1987) , MBESDSD (Wu & al., 1990) , and MICON <ref> (Birmingham, Gupta, & Siewiorek, 1992) </ref> . MICON and MBESDSD use a weighted evaluation function as a search heuristic, therefore reducing the multi-attribute optimization problem to a single-objective-function problem. As stated previously, there is no guarantee that the optimal design will be found when a weighted evaluation function is used.
Reference: <institution> Jones and Bartlett. </institution>
Reference: <author> Bradley, S. R., & Agogino, A. M. </author> <year> (1993). </year> <title> Computer-assisted catalog selection with multiple objectives. </title> <booktitle> ASME Design Theory and Methodology 53, </booktitle> <pages> 139-147. </pages>
Reference: <author> Darr, T., & Birmingham, W. P. </author> <year> (1994). </year> <title> Automated design for concurrent engineering. </title> <journal> IEEE Expert, </journal> <month> Oct. </month>
Reference-contexts: By properly choosing the order of variables to assign, the amount of dynamic partitioning, dominance checks, or both can be increased. We are also investigating problems where design knowledge is distributed among a number of autonomous agents <ref> (Darr & Birmingham, 1994) </ref> . 25
Reference: <author> Decther, R., & Pearl, J. </author> <year> (1987). </year> <title> Network-based heuristics for constraintsatisfaction problems. </title> <booktitle> Artificial Intelligence 34(1), </booktitle> <pages> 1-38. </pages>
Reference: <author> Fishburn, P. C. </author> <year> (1970). </year> <title> Utility Theory for Decision Making. </title> <publisher> John Wiley & Sons, </publisher> <address> New York. </address>
Reference-contexts: Finally, we introduce preference-directed search, and discuss how the value function is decomposed into a set of design variable value functions. 3.1 Imprecise Value Function Decision theory defines the conditions when a single-valued utility function can be used for decision making <ref> (Fishburn, 1970) </ref> . The preference relationship between alternatives must be asymmetric and negatively transitive. The utility function creates a weak order over all possible alternatives. In this paper, we restrict our discussion to decisions made under certainty.
Reference: <author> Gebotys, C. H., & Elmasry, M. I. </author> <year> (1993). </year> <title> Global optimization approach for architectural synthesis. </title> <booktitle> Computer Aided Design of Integrated Circuits and Systems 12, </booktitle> <month> Sept., </month> <pages> 1266-1278. </pages>
Reference: <author> Grossmann, I. E. </author> <year> (1990). </year> <title> Mixed-integer nonlinear programming techniques for synthesis of engineering systems. </title> <booktitle> Research in Engineering Design 1, </booktitle> <pages> 205-228. </pages>
Reference-contexts: By setting up appropriate constraints between integer design variables, different topologies can be considered. A 4 wide range of constraints can be supported, including if-then constraints between integer design variables <ref> (Grossmann, 1990) </ref> . The majority of single-attribute design problems can be formulated and solved as mixed-integer nonlinear programs (Grossmann, 1990) as follows: Minimize z (X) = x 1 Subject to: R x i+1 ...x n -0,1 where the nonlinearities are present in the real variables, and x 1 measures the level <p> By setting up appropriate constraints between integer design variables, different topologies can be considered. A 4 wide range of constraints can be supported, including if-then constraints between integer design variables <ref> (Grossmann, 1990) </ref> . The majority of single-attribute design problems can be formulated and solved as mixed-integer nonlinear programs (Grossmann, 1990) as follows: Minimize z (X) = x 1 Subject to: R x i+1 ...x n -0,1 where the nonlinearities are present in the real variables, and x 1 measures the level 3 of a single attribute, such as cost.
Reference: <author> Hafer, L., & Parker, A. </author> <year> (1983). </year> <title> A formal method for the specification, analysis and design of register-transfer-level digital logic. </title> <journal> IEEE Transactions on Computer-Aided Design CAD-2, </journal> <month> Jan., </month> <pages> 4-17. </pages>
Reference: <author> Haworth, M. S., & Birmingham, W. P. </author> <year> (1993). </year> <title> Towards optimal system-level design. </title> <booktitle> Proc. of the 30th Design Automation Conference, </booktitle> <pages> 434-438. </pages>
Reference-contexts: The optimal design is guaranteed to be in the Pareto-optimal set. The Pareto-optimal set is usually found by enumeration or by repeated optimization based on a single attribute while changing the 6 bounds on others. GOPS <ref> (Haworth & Birmingham, 1993) </ref> produces the Pareto-optimal set of designs for electronic system problems using a combinatorial-optimization technique. Bradley and Agogino (1993) use Pareto plots to choose components from a catalog. Once the set of Pareto-optimal alternatives is found, the alternatives are evaluated, and the best one chosen. <p> Other design tools have postprocessed design results using ISMAUT. An iterative design style is employed by MICAD (Sykes & White, 1991) to identify several design alternatives, and the best one is chosen using ISMAUT. Ext_GOPS <ref> (Haworth & Birmingham, 1993) </ref> produces the Pareto optimal set of designs, and uses ISMAUT to select the best one. Unlike MICAD and ExtGOPS, preference-directed design performs ISMAUT pruning during search as opposed to after, reducing the complexity of the design task and guaranteeing identification of the optimal design.
Reference: <author> Keeney, R. L., & Raiffa, H. </author> <year> (1976). </year> <title> Decisions with Multiple Objectives: Preferences and Value Tradeoffs. </title> <publisher> Wiley and Sons, </publisher> <address> New York. </address>
Reference: <author> King, B., & Akao, Y. </author> <year> (1989). </year> <title> Better Designs in Half the Time - Implementing QFD Quality Function Deployment in America. </title> <address> GOAL/QPC, Metheun, MA. </address>
Reference-contexts: 1 Accepted for publication by AI EDAM, Journal for Artificial Inelligence in Engineering Design, Analysis and Manufacturing, 12/94. 2 Contact Author Information email: wpb@eecs.umich.edu Phone: 313-936-1590 fax: 313-763-1260 2 1.0 Introduction Over recent years, engineering organizations have extended the process of design to include a number of new practices. Quality-function-deployment <ref> (King & Akao, 1989) </ref> translates customer preferences for product features into terms appropriate for the design process. Pugh's selection method (Pugh, 1990) provides a high-level means to generate and evaluate design alternatives.
Reference: <author> Lee, J., Hsu, Y., & Lin, Y. </author> <year> (1989). </year> <title> A new integer linear programming formulation for the scheduling problem in data path synthesis. </title> <booktitle> Proc. of the International Conference on Computer Aided Design. </booktitle>
Reference: <author> Mackworth, A. K. </author> <year> (1987). </year> <title> Constraint satisfaction. </title> <booktitle> In Encyclopedia of Artificial Intelligence , (S. </booktitle> <editor> C. Shapiro (Ed.)), </editor> <publisher> John Wiley & Sons, </publisher> <address> New York. </address>
Reference-contexts: The attribute value functions and preferences among sample elements imply an imprecise value function, v, which measures design value during problem solving (see Section 3.1). BuildConstraintNetwork generates a constraint network for constraint propagation during search (design) <ref> (Mackworth, 1987) </ref> . StaticPartitioning examines the constraint connections among design variables, and divides X into sets, P 1 , P 2 ,...,P i , forming independent sub problems, if possible 8 (see Section 3.2). Preference-directed search, PD_Search, finds solutions for each partition (see Section 3.3).
Reference: <author> Mittal, S., & Falkenhainer, B. </author> <year> (1990). </year> <title> Dynamic constraint satisfaction problems. </title> <booktitle> Proceedings of the Eighth National Conference on Artificial Intelligence (AAAI-90), </booktitle> <pages> 25-32. </pages>
Reference: <author> Mittal, S., & Frayman, F. </author> <year> (1987). </year> <title> A constraint-based expert system for configuration tasks. </title> <booktitle> Proc. of the 2nd International Conference on Applications of AI to Engineering. </booktitle>
Reference-contexts: Different topologies can be described through the use of dynamic constraints and variables, such that as design variable assignments are made, constraints and variables are activated and deactivated to reflect the topology under consideration. Examples of the constraintsatisfaction approach include COSSACK <ref> (Mittal & Frayman, 1987) </ref> , MBESDSD (Wu & al., 1990) , and MICON (Birmingham, Gupta, & Siewiorek, 1992) . MICON and MBESDSD use a weighted evaluation function as a search heuristic, therefore reducing the multi-attribute optimization problem to a single-objective-function problem.
Reference: <author> Murty, K. G. </author> <year> (1983). </year> <title> Linear Programming. </title> <publisher> John Wiley & Sons, </publisher> <address> New York. </address>
Reference-contexts: An alternative dominates another if it is preferred. The set of non-dominated alternatives based on Pareto preference is the Pareto-optimal set. Identification of the Pareto-optimal set is also known as vector minimization <ref> (Murty, 1983) </ref> . The optimal design is guaranteed to be in the Pareto-optimal set. The Pareto-optimal set is usually found by enumeration or by repeated optimization based on a single attribute while changing the 6 bounds on others. <p> In theory, a mathematical programming or constraintsatisfaction tool that identifies Pareto optimality could be used for optimal design. Once the set is identified, utility or fuzzy analysis could be used to select the optimal alternative. Unfortunately, the Pareto-optimal set is often extremely large <ref> (Murty, 1983) </ref> , making generation of the entire set impractical.
Reference: <editor> Nemhauser, G. L., Kan, A. H. G. R., & Todd, M. J. (Eds.). </editor> <year> (1989). </year> <title> Optimization. </title> <publisher> North-Holland, </publisher> <address> New York. </address>
Reference-contexts: Table 2.1: List of symbols. 2.1 Problem Formulation A mathematical-programming <ref> (Nemhauser, Kan, & Todd, 1989) </ref> formulation of a design problem includes: a tuple of n design variables, X = (x 1 , x 2 , ...x k , x k+1 , ...x n ), where variables 1 to k measure the k attributes to be optimized a tuple of n domains,
Reference: <author> Peihua, G., & Andrew, A. </author> <year> (1993). </year> <title> Concurrent Engineering - Methodology & Applications. </title> <publisher> Elsevier, </publisher> <address> New York. </address>
Reference-contexts: Quality-function-deployment (King & Akao, 1989) translates customer preferences for product features into terms appropriate for the design process. Pugh's selection method (Pugh, 1990) provides a high-level means to generate and evaluate design alternatives. Concurrent engineering <ref> (Peihua & Andrew, 1993) </ref> integrates overall knowledge, resources, and experience of a company into the design cycle as early as possible.
Reference: <author> Pekny, J. G. </author> <year> (1992). </year> <title> Combinatorial optimization in engineering systems: exploiting problem structure and parallelism. </title> <booktitle> Proc. of the NSF Design and Manufacturing Systems Conference. </booktitle>
Reference: <author> Pugh, S. </author> <year> (1990). </year> <title> Total Design. </title> <publisher> Addison-Wesley, </publisher> <address> New York. </address> <note> 26 Sykes, </note> <author> E. A., & White, C. C. </author> <year> (1991). </year> <title> Multiobjective intelligent computer-aided design. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics 21(6), </journal> <pages> 1498-1511. </pages>
Reference-contexts: Quality-function-deployment (King & Akao, 1989) translates customer preferences for product features into terms appropriate for the design process. Pugh's selection method <ref> (Pugh, 1990) </ref> provides a high-level means to generate and evaluate design alternatives. Concurrent engineering (Peihua & Andrew, 1993) integrates overall knowledge, resources, and experience of a company into the design cycle as early as possible.
Reference: <author> Thurston, D. L. </author> <year> (1991). </year> <title> A formal method for subjective design evaluation with multiple attributes. </title> <booktitle> Research in Engineering Design 3, </booktitle> <pages> 105-122. </pages>
Reference: <author> Thurston, D. L., & Carnahan, J. V. </author> <year> (1992). </year> <title> Fuzzy ratings and utility analysis in preliminary design evaluation of multiple attributes. </title> <journal> Journal of Mechanical Design 114, </journal> <month> Dec., </month> <pages> 648-658. </pages>
Reference: <author> Vanderplaats, G. N., & Sugimoto, H. </author> <year> (1985). </year> <title> Numerical optimization techniques for mechanical design. </title> <publisher> In Design and Synthesis , Elsevier Science Publishers B. V. (North-Holland). </publisher>
Reference-contexts: Mathematical programming for design has been applied to the fields of electronic engineering (Gebotys & Elmasry, 1993; Hafer & Parker, 1983; Lee, Hsu, & Lin, 1989) , chemical engineering (Grossmann, 1990; Pekny, 1992) , and mechanical engineering <ref> (Vanderplaats & Sugimoto, 1985) </ref> . Techniques for formulating multi-attribute (multi-objective) mathematical programs include weighted evaluation function, goal programming, and compromise (Murty, 1983; Yu, 1989) .
Reference: <author> White, C. C., & al., e. </author> <year> (1984). </year> <title> A model of multi-attribute decision making and tradeoff weight determination under uncertainty. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics SMC-14(2), </journal> <volume> March/April, </volume> <pages> 223-229. </pages>
Reference-contexts: The amount of quantitative analysis required to identify the optimal alternative can be reduced by using an imprecise value function. Imprecisely Specified Multi-Attribute Utility Theory (ISMAUT) 9 <ref> (White & al., 1984) </ref> creates a partial order based on preference relationships among a subset of alternatives. ISMAUT uses a weighted sum of attribute values. Thus, the value of alternative a i is given by Eqn. 3.1.
Reference: <author> Wood, K. L., & Antonsson, E. K. </author> <year> (1989). </year> <title> Computations with imprecise parameters in engineering design: background and theory. Journal of Mechanisms, </title> <booktitle> Transmissions and Automation in Design 111, </booktitle> <month> Dec., </month> <pages> 616-625. </pages>
Reference-contexts: Wood et al. (1990) note the difficulties involved in using utility analysis when most design information is incomplete. An alternative approach is fuzzy analysis <ref> (Wood & Antonsson, 1989) </ref> , which allows evaluation based on qualitative information. Fuzzy calculations are simpler than those based on probability, which is required by utility analysis. In theory, a mathematical programming or constraintsatisfaction tool that identifies Pareto optimality could be used for optimal design. <p> If the solution is acceptable, the design process terminates, otherwise it is repeated with additional domain knowledge. A key aspect of iterative design is how iterations are performed. Relating inputs to outputs is critical for determining how to modify the objective function for the next iteration. Fuzzy analysis <ref> (Wood & Antonsson, 1989) </ref> allows the level of preference for an input variable to be directly related to an output variable.
Reference: <author> Wood, K. L., Antonsson, E. K., & Beck, J. L. </author> <year> (1990). </year> <title> Representing imprecision in engineering design: comparing fuzzy analysis and probability calculus. </title> <booktitle> Research in Engineering Design 1, </booktitle> <pages> 187-203. </pages>
Reference: <author> Wu, J., & al., e. </author> <year> (1990, </year> <title> A model-based expert system for digital system design. </title> <booktitle> IEEE Design and Test of Computers. </booktitle>
Reference-contexts: Different topologies can be described through the use of dynamic constraints and variables, such that as design variable assignments are made, constraints and variables are activated and deactivated to reflect the topology under consideration. Examples of the constraintsatisfaction approach include COSSACK (Mittal & Frayman, 1987) , MBESDSD <ref> (Wu & al., 1990) </ref> , and MICON (Birmingham, Gupta, & Siewiorek, 1992) . MICON and MBESDSD use a weighted evaluation function as a search heuristic, therefore reducing the multi-attribute optimization problem to a single-objective-function problem.
Reference: <author> Yu, P. L. </author> <year> (1989). </year> <title> Multiple criteria decision making: five basic concepts. </title> <editor> In Optimization , (G. L. Nemhauser, A. </editor> <publisher> H. </publisher>
Reference-contexts: The compromise approach attempts to minimize the distance from an ideal state. The compromise approach often fails, since there is no guarantee that the design alternative closest to the ideal will be optimal <ref> (Yu, 1989) </ref> .
Reference: <editor> G. R. Kan, & M. J. Todd (Eds.)), </editor> <booktitle> pp. </booktitle> <pages> 663-699. </pages> <publisher> Elsevier Science Publishers B.V. </publisher>
References-found: 30

