URL: ftp://ic.eecs.berkeley.edu/pub/Papers_Talks/Analog_Group/PostScript/CICC95_malavasi.ps.Z
Refering-URL: http://www-cad.eecs.berkeley.edu:80/~charbon/publications/analog-group-publications.html
Root-URL: http://www.cs.berkeley.edu
Title: Dynamic Bound Generation for Constraint-Driven Routing  
Author: Enrico Malavasi and Alberto Sangiovanni-Vincentelli 
Note: On leave from  
Address: Berkeley  Italy  
Affiliation: Department of Electrical Engineering and Computer Sciences, University of California,  Dipartimento di Elettronica ed Informatica Universita di Padova,  
Abstract: We propose a technique to update dynamically the bounds used during constraint-driven routing. Moderate bound violations are allowed as long as no constraint violations are induced. Adaptive net scheduling is made possible during routing, so that nets requiring an implementation with large parasitics can take advantage of the margin made available to them by other parameters maintained within their own bounds. The user is provided with a quantitative evaluation of the effectiveness of the tool in enforcing the set of constraints on the given design. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> U. Choudhury and A. Sangiovanni-Vincentelli, </author> <title> Constraint-Based Channel Routing for Analog and Mixed-AnalogDigital Circuits, </title> <booktitle> in Proc. IEEE ICCAD, </booktitle> <pages> pp. 198-201, </pages> <month> Nov. </month> <year> 1990. </year>
Reference-contexts: 1. Introduction The constraint-driven approach to layout <ref> [1] </ref> is based on the translation of performance constraints into a set of bounds for all layout parameters. A tool able to enforce all these bounds guarantees that high-level performance constraints are met. <p> The sensitivity of K i with respect to p j is indicated as S i;j . We assume that performance functions are continuous and sufficiently regular in an interval around their nominal value, and therefore degradations can be linearized as in <ref> [1] </ref>: DK i = j=1 (0) The maximum allowed degradation of K i is denoted as DK i , hence performance constraints are expressed as DK i DK i ; for i = 1; : : : ; N k Problem formulation As shown in [1], we can assume without loss <p> can be linearized as in <ref> [1] </ref>: DK i = j=1 (0) The maximum allowed degradation of K i is denoted as DK i , hence performance constraints are expressed as DK i DK i ; for i = 1; : : : ; N k Problem formulation As shown in [1], we can assume without loss of generality that S i;j 0; 8i; j, and p (b) (0) j ; 8j.
Reference: [2] <author> W. K. Luk, </author> <title> A Fast Physical Constraint Generator for Timing Driven Layout, </title> <booktitle> in Proc. IEEE/ACM DAC, </booktitle> <pages> pp. 626-631, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: The constraint-driven approach has been employed successfully in several fields of layout design for enforcement of timing <ref> [2] </ref> and analog constraints [3][4]. However, it suffers from two main limitations. The first is the fact that constraint generation is usually based on heuristic assumptions and incomplete information, and consequently bounds are not always feasible.
Reference: [3] <author> G. Gad-El-Karim and R. S. Gyurcsik, </author> <title> Generation of Performance Sensitivities for Analog Cell Layout, </title> <booktitle> in Proc. IEEE/ACM DAC, </booktitle> <pages> pp. 500-505, </pages> <month> June </month> <year> 1991. </year>
Reference: [4] <author> E. Malavasi et al., </author> <title> A Top-down, Constraint-Driven Design Methodology for Analog Integrated Circuits, </title> <booktitle> in Analog Circuit Design, </booktitle> <pages> pp. 285-324, </pages> <editor> J. H. Huijsing, R. J. van der Plassche and W. Sansen Ed., </editor> <publisher> Kluwer Academic Press, </publisher> <year> 1993. </year>
Reference: [5] <author> B. Basaran, R. A. Rutenbar and L. R. Carley, </author> <title> Latchup-Aware Placement and Parasitic-Bounded Routing of Custom Analog Cells, </title> <booktitle> in Proc. IEEE ICCAD, </booktitle> <pages> pp. 415-421, </pages> <month> Nov. </month> <year> 1993. </year>
Reference-contexts: A bound might become feasible or infeasible depending on the order in which it is enforced. All constraint-driven routers suffer from a strong dependence on net scheduling. The ones which try to enforce directly the bounds, such as <ref> [5] </ref>, can only route nets which can be implemented without bound violations. Weight-driven tools, such as ANAGRAM [6] and ROAD [7], allow bound violations, since their target is the minimization of a cost function rather than direct bound enforcement.
Reference: [6] <author> J. M. Cohn, D. J. Garrod, R. A. Rutenbar and L. R. Carley, KOAN/ANAGRAM II: </author> <title> New Tools for Device-Level Analog Placement and Routing, </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> vol. 26, </volume> <editor> n. </editor> <volume> 3, </volume> <pages> pp. 330-342, </pages> <month> March </month> <year> 1991. </year>
Reference-contexts: All constraint-driven routers suffer from a strong dependence on net scheduling. The ones which try to enforce directly the bounds, such as [5], can only route nets which can be implemented without bound violations. Weight-driven tools, such as ANAGRAM <ref> [6] </ref> and ROAD [7], allow bound violations, since their target is the minimization of a cost function rather than direct bound enforcement. However, their dependence on net scheduling is still considerable, and the performance constraints are not guaranteed to be met.
Reference: [7] <author> E. Malavasi and A. Sangiovanni-Vincentelli, </author> <title> Area Routing for Analog Layout, </title> <journal> IEEE Trans. on CAD, </journal> <volume> vol. 12, </volume> <editor> n. </editor> <volume> 8, </volume> <pages> pp. 1186-1197, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: All constraint-driven routers suffer from a strong dependence on net scheduling. The ones which try to enforce directly the bounds, such as [5], can only route nets which can be implemented without bound violations. Weight-driven tools, such as ANAGRAM [6] and ROAD <ref> [7] </ref>, allow bound violations, since their target is the minimization of a cost function rather than direct bound enforcement. However, their dependence on net scheduling is still considerable, and the performance constraints are not guaranteed to be met. <p> Table 1. Some of the most critical bounds on stray capacitances 5. Results The approach to adaptive bound generation and dynamic net scheduling has been implemented in the area router ROAD <ref> [7] </ref>, programmed to accommodate direct bound-driven operation as well as a weight-driven cost-function.
Reference: [8] <author> T. Ohtsuki, </author> <title> Maze-Running and Line-Search Algorithms, in Layout Design and Verification, </title> <journal> ch. </journal> <volume> 3, </volume> <pages> pp. 99-131, </pages> <editor> T. Ohtsuki Ed., </editor> <publisher> North Holland, </publisher> <year> 1986. </year>
Reference-contexts: With an inappropriate net order, even a feasible layout might not be implemented correctly, i.e. within the constraint specifications. Unfortunately, there is no valid criterion to determine the best net order with a general set of constraints <ref> [8] </ref>. While numerous heuristic approaches have been developed, none of them has proved successful and reliable in general, and most area routers must employ some rip-up and re-route strategy to achieve correct layouts with reasonable density.
Reference: [9] <author> U. Choudhury and A. Sangiovanni-Vincentelli, </author> <title> Automatic Generation of Parasitic Constraints for Performance-Constrained Physical Design of Analog Circuits, </title> <journal> IEEE Trans. on CAD, </journal> <volume> vol. 12, </volume> <editor> n. </editor> <volume> 2, </volume> <pages> pp. 208-224, </pages> <month> Feb. </month> <year> 1993. </year> <month> 4 </month>
Reference-contexts: More than 120 stray capacitances were identified as critical. Some of their bounds are listed in Table 1. Notice in particular the tight bounds on capacitance-to-ground for nets 3, 4 and 11. This set of bounds was computed with the constraint generator PARCAR <ref> [9] </ref>, from a set of estimates of the range of feasible values for each parasitic. Without adaptive bound generation, we have not been able to find a feasible net scheduling allowing to route the circuit with this set of bounds.
References-found: 9

