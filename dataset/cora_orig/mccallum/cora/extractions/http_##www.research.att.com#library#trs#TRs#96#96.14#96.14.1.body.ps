URL: http://www.research.att.com/library/trs/TRs/96/96.14/96.14.1.body.ps
Refering-URL: http://www.research.att.com/library/trs/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: fmab,jf,lacyg@research.att.com  
Title: Managing Trust in Medical Information Systems  
Author: Matt Blaze Joan Feigenbaum Jack Lacy 
Date: May 13, 1996  
Address: Murray Hill, NJ 07974  
Affiliation: AT&T Labs  
Abstract: The development of large-scale health information networks necessitates the use of cryptography to guarantee privacy, authenticity, and integrity of personal medical records. This use of cryptography in turn necessitates careful management of trust relationships in health networks. For example, it is crucial that only qualified authorities issue certificates that authorize physicians' cryptographic keys to create certain types of medical records, because the ability to issue such certificates may in some circumstances be tantamount to the ability to decide who is a physician. This paper demonstrates that the PolicyMaker trust management system that we introduced in [3] is suitable for the specification of trust relationships in medical information systems.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. V. Aho, B. W. Kernighan, and P. J. Weinberger, </author> <title> The AWK Programming Language, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, </address> <year> 1988. </year>
Reference-contexts: Similarly, PolicyMaker filters are interpreted programs that are run within a "safe" (I/O and resource limited) wrapper. The interpreter currently supports three filter languages: a regular expression system (similar to those used in Unix), a safe version of AWK <ref> [1] </ref>, called AWKWARD, and a macro language that preprocesses into AWKWARD. Other "safe" languages, such as Java [4] or Safe-TCL [6], are easily added as desired. In general, any language that can be safely interpreted can be used as a filter language.
Reference: [2] <author> R. Anderson, </author> <title> A Security Policy Model for Clinical Information Systems, </title> <booktitle> in Proceedings of the Symposium on Security and Privacy, </booktitle> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <year> 1996, </year> <pages> pp. 30-43. </pages>
Reference-contexts: An excellent overview of realistic threats posed by large-scale computerization and networking, together with a set of security policy recommendations, is provided by Anderson <ref> [2] </ref>. The main focus of [2] is the proposed British health information network, but the security threats and policy recommendations are relevant to health information in many countries, including the US and the rest of the EC. <p> An excellent overview of realistic threats posed by large-scale computerization and networking, together with a set of security policy recommendations, is provided by Anderson <ref> [2] </ref>. The main focus of [2] is the proposed British health information network, but the security threats and policy recommendations are relevant to health information in many countries, including the US and the rest of the EC. Cryptography is an important tool in the development of protection mechanisms for medical records. <p> This type of highly centralized certification bureaucracy is unsuitable for health information security. As Anderson <ref> [2] </ref> explains: : : : it is vital that electronic trust structures reflect the actual nature of trust and authority in the application area : : : In the practice of medicine, authority is hierarchical but tends to be local and collegiate rather than centralised and bureaucratic.
Reference: [3] <author> M. Blaze, J. Feigenbaum, and J. Lacy, </author> <title> Decentralized Trust Management, </title> <booktitle> in Proceedings of the Symposium on Security and Privacy, </booktitle> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <year> 1996, </year> <pages> pp. 164-173. </pages>
Reference-contexts: For a thorough discussion of our approach to trust management, see <ref> [3] </ref>. Our goal in this paper is to demonstrate that PolicyMaker is well suited for trust management in health information networks and that other models of distributed trust are cumbersome to use in this application. The need for effective trust management in a health information network is self-evident. <p> These and other relevant features of the PolicyMaker system are explored in detail in Section 3 below. The next section reviews the PolicyMaker approach to trust management that we introduced in <ref> [3] </ref>. Section 3 below contains examples, expressed in PolicyMaker pseudocode, of trust relationships, certificates, and policies suitable for use in a health information network in which security is based on patient consent and professional qualification. <p> Readers already familiar with <ref> [3] </ref> should skip to Section 3. The interface to PolicyMaker reflects the goal of separating generic mechanism (provided by PolicyMaker) from application-specific policy (which is defined by each application). The Poli-cyMaker service appears to applications very much like a database query engine. <p> Credentials themselves also contain filters that limit the actions their holder is trusted to 4 perform. Trust is monotonic; each policy statement or credential can only increase the capabilities granted to others. An action is considered acceptable according to local policy if there is a "chain" (defined precisely in <ref> [3] </ref>) from the policy to the key (s) requesting the action in which all the filters along the chain are satisfied. This model supports very precise and complex trust relationships, as we shall see below. <p> PolicyMaker ignores certificates written in unknown or unsupported filter languages. More information, including a detailed comparison of PolicyMaker with the X.509 and PGP systems and an explanation of PolicyMaker query semantics, can be found in <ref> [3] </ref>. 3 PolicyMaker Assertions for Health Information Security This section contains examples, expressed in PolicyMaker pseudocode, of policies, certificates, and queries in a health information network.
Reference: [4] <author> J. Gosling and H. McGilton, </author> <title> The Java Language Environment, A White Paper, Sun Microsys-tems, </title> <publisher> Inc., </publisher> <address> Mountain View, </address> <year> 1995. </year>
Reference-contexts: The interpreter currently supports three filter languages: a regular expression system (similar to those used in Unix), a safe version of AWK [1], called AWKWARD, and a macro language that preprocesses into AWKWARD. Other "safe" languages, such as Java <ref> [4] </ref> or Safe-TCL [6], are easily added as desired. In general, any language that can be safely interpreted can be used as a filter language. A distinguishing feature of PolicyMaker is that filters are allowed the full complexity and expressiveness of general programs.
Reference: [5] <institution> Information Technology Open Systems Interconnection The Directory:Authentication Framework, Recommendation X.509, </institution> <address> ISO/IEC 9594-8. </address>
Reference-contexts: Thus health information networks, like many other applications, require a notion of official CAs. Some such applications use the X.509 certification framework <ref> [5] </ref>, which postulates that all CAs within a "community of interest" are 1 More precisely, the phrase "authorizing a public key K to perform an action" really means that the private key corresponding to K is authorized to sign requests to perform this action.
Reference: [6] <author> J. K. Ousterhout, </author> <title> TCL and the TK Toolkit, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, </address> <year> 1994. </year>
Reference-contexts: The interpreter currently supports three filter languages: a regular expression system (similar to those used in Unix), a safe version of AWK [1], called AWKWARD, and a macro language that preprocesses into AWKWARD. Other "safe" languages, such as Java [4] or Safe-TCL <ref> [6] </ref>, are easily added as desired. In general, any language that can be safely interpreted can be used as a filter language. A distinguishing feature of PolicyMaker is that filters are allowed the full complexity and expressiveness of general programs.
Reference: [7] <author> P. Zimmermann, </author> <title> PGP User's Guide, </title> <publisher> MIT Press, </publisher> <address> Cambridge, </address> <year> 1994. </year> <month> 13 </month>
Reference-contexts: In some applications that use cryptography, any user may issue certificates. One example of such an application is the PGP secure email system <ref> [7] </ref>, where CAs are called "introducers." Clearly, health information security policy must not allow arbitrary users to issue certificates: As the pharmacy example demonstrates, the ability to issue certificates may in some circumstances be tantamount to the ability to decide who is a physician.
References-found: 7

