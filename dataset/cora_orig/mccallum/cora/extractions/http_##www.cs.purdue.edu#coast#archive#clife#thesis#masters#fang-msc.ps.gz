URL: http://www.cs.purdue.edu/coast/archive/clife/thesis/masters/fang-msc.ps.gz
Refering-URL: http://www.cs.purdue.edu/coast/archive/clife/thesis/masters/
Root-URL: http://www.cs.purdue.edu
Title: Investigating Genetic Algorithms for Scheduling  
Author: Hsiao-Lan Fang 
Degree: MSc Dissertation  
Date: 1992  
Affiliation: Department of Artificial Intelligence University of Edinburgh  
Abstract-found: 0
Intro-found: 1
Reference: [Abramson & Abela 91] <author> D. Abramson and J. Abela. </author> <title> A parallel genetic algorithms for solving the school timetabling problem. </title> <type> Technical report, </type> <institution> Division of Information Technology, C.S.I.R.O., </institution> <month> April </month> <year> 1991. </year>
Reference-contexts: This kind of representation however leads to a problem called the label replacement problem <ref> [Abramson & Abela 91] </ref>; the problem is that crossover operator can easily lead to producing timetables which leave out many of the exams that need to be scheduled. An algorithm must be used to then modify the chromosome to include all the necessary exams.
Reference: [Belew & Booker 91] <editor> R.K. Belew and L.B. Booker. </editor> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms. </booktitle> <address> San Mateo: </address> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference: [Conway et al 67] <author> Richard W. Conway, William L. Maxwell, and Louis W. Miller. </author> <title> Theory of Scheduling. </title> <publisher> Addison Wesley Publishing Company, </publisher> <year> 1967. </year>
Reference-contexts: In a word, the algorithms and techniques used in the system can be very easily modified to some other similar kinds of scheduling problems (for example: 85 school courses timetable scheduling, or scheduling athletics events in a stadium). And the more complicated Flow Shop and Job Shop Scheduling <ref> [Conway et al 67] </ref> [E. G. Coffman 76] can also use the exam timetable scheduling techniques we use here as their foundation and inspiration to modify and extend the domain-specific parts such as the representation and evaluation.
Reference: [Davis 87] <author> L. Davis. </author> <title> Genetic Algorithms and Simulated Annealing. </title> <address> San Mateo: </address> <publisher> Morgan Kaufmann, </publisher> <year> 1987. </year>
Reference-contexts: The outline of traditional Genetic algorithms is as follows: 1 Defn: Classifier System is a Genetic-based machine learning system [Holland et al 86] <ref> [Davis 87] </ref>[Goldberg 89][Shavlik & Dietterich 90][Holland 92]. 9 1. Initialize and encode a random population of chromosomes. 2. Decode and evaluate each chromosome's fitness in the population. 3. Reproduce a new generation by stochastically selecting current chromosomes as parents according to fitness to generate new children. 4.
Reference: [Davis 91] <author> L. Davis. </author> <title> Handbook of Genetic Algorithms. </title> <address> New York: </address> <publisher> Van Nostrand Reinhold, </publisher> <year> 1991. </year>
Reference-contexts: But in <ref> [Davis 91] </ref>, the changed value will depend on a random bit generator, so it is possible that there will be no effective change and it could be form 0 to 0 or 1 to 1. 2.9 A Simple Example to Illustrate Genetic Op erators Let's assume that there are ten students <p> Perhaps such a GA2-1 strategy might be better for a different kind of problem, where the local minima are more widespread. We will do other experiments in section 7.4 using GA3 to re-confirm this observation that this strategy is not much help here. 65 7.3 Inverse Square Pressure <ref> [Davis 91] </ref> mentioned about two normalization techniques to improve the performance of traditional Genetic Algorithms; both of these adjust the evaluation function in order to somehow improve performance: * Windowing: Find the chromosome with the lowest fitness in the population.
Reference: [E. G. Coffman 76] <author> JR. E. G. Coffman. </author> <title> Computer and Job-Shop Scheduling Theory. </title> <publisher> John Wiley and Sons, Inc., </publisher> <year> 1976. </year>
Reference-contexts: And the more complicated Flow Shop and Job Shop Scheduling [Conway et al 67] <ref> [E. G. Coffman 76] </ref> can also use the exam timetable scheduling techniques we use here as their foundation and inspiration to modify and extend the domain-specific parts such as the representation and evaluation.
Reference: [Goldberg 89] <author> David E. Goldberg. </author> <title> Genetic Algorithms in Search, Optimization & Machine Learning. </title> <address> Reading: </address> <publisher> Addison Wes-ley, </publisher> <year> 1989. </year>
Reference-contexts: While randomized, genetic algorithms are no simple random walk. They efficiently exploit historical information to speculate on new search points with expected improved performance. How are Genetic Algorithms different from other optimization and search meth ods? Again <ref> [Goldberg 89] </ref> says they are different in four ways:(P7) * Genetic Algorithms work with a coding of the parameter set, not the parameters themselves. * Genetic Algorithms search from a population of points, not the parameters themselves. * Genetic Algorithms use payoff (objective function) information, not derivation or other auxiliary knowledge. <p> There is a slight difference between Goldberg and Davis in the definition of this operator. 13 Student Examination s1 e1,e2,e4,e6 s3 e1,e2,e4,e5 s5 e4 s7 e2,e4 s9 e3,e4,e6 Table 2-1: Example of student-exam data In <ref> [Goldberg 89] </ref>, once we decide to apply the mutation operator , the bit will unconditionally change from 0 to 1 or vice versa. <p> The mathematical descriptions of Genetic Algorithms that we use in this chapter is adapted from [Spiessens 88]. 20 3.1 Implicit Parallelism A schema (Holland 75) is a similarity template describing a subset of strings with similarities at certain string positions. Why are schemata important for Genetic Algorithms? <ref> [Goldberg 89] </ref> says: "In some sense we are no longer interested in strings as strings alone. Since important similarities among highly fit strings can help guide a search, we question how one string can be similar to its fellow strings. <p> Even though we perform computation proportional to the size of the population, we get useful processing of something like c 3 schema in parallel with no special book keeping or memory other than the population itself.(for the detailed proof of c 3 see <ref> [Goldberg 89] </ref> p40-41) 3.2 Reproduction and Schemata The frequency m (H,t) of a schema H at generation t will change at generation t + 1 proportionally to the selection probability of strings for reproduction. There are two steps to consider.
Reference: [Grefenstette 85] <editor> J. J. Grefenstette. </editor> <booktitle> Proceedings of the First International Conference on Genetic Algorithms and their Applications. </booktitle> <address> San Mateo: </address> <publisher> Morgan Kaufmann, </publisher> <year> 1985. </year> <month> 87 </month>
Reference: [Grefenstette 87] <editor> J. J. Grefenstette. </editor> <booktitle> Proceedings of the Second Interna--tional Conference on Genetic Algorithms and their Applications. </booktitle> <address> San Mateo: </address> <publisher> Morgan Kaufmann, </publisher> <year> 1987. </year>
Reference: [Grefory 91] <author> J. E. Grefory. </author> <booktitle> Foundations of Genetic Algorithms. </booktitle> <address> San Mateo: </address> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference: [Holland 75] <author> John H. Holland. </author> <booktitle> Adaptation in Natural and Artificial Systems. </booktitle> <address> Ann Arbor: </address> <publisher> The University of Michigan Press, </publisher> <year> 1975. </year>
Reference: [Holland 92] <author> John H. Holland. </author> <booktitle> Adaptation in Natural and Artificial Systems. </booktitle> <address> Cambridge: Massachusetts: </address> <publisher> M.I.T. Press, </publisher> <year> 1992. </year>
Reference: [Holland et al 86] <author> J.H. Holland, K.J. Holyoak, R.E. Nisbeet, and P.R. Thagard. </author> <title> Induction: Processes of Inference, Learning, and Discovery. </title> <address> Cambridge: Massachusetts: </address> <publisher> M.I.T. Press, </publisher> <year> 1986. </year>
Reference-contexts: The outline of traditional Genetic algorithms is as follows: 1 Defn: Classifier System is a Genetic-based machine learning system <ref> [Holland et al 86] </ref> [Davis 87][Goldberg 89][Shavlik & Dietterich 90][Holland 92]. 9 1. Initialize and encode a random population of chromosomes. 2. Decode and evaluate each chromosome's fitness in the population. 3.
Reference: [Schaffer 89] <editor> J. D. Schaffer. </editor> <booktitle> Proceedings of the Third International Conference on Genetic Algorithms and their Applications. </booktitle> <address> San Mateo: </address> <publisher> Morgan Kaufmann, </publisher> <year> 1989. </year>
Reference-contexts: From 1985 the general approach began to receive wide attention. Two formal conferences on Genetic Algorithms: "Proceeding of the International Conference on Genetic Algorithms and their Applications"[Grefenstette 85][Grefenstette 87] <ref> [Schaffer 89] </ref>[Belew & Booker 91] are held every two years from 1985 and the theoretical conference of "Foundations of Genetic Algorithms and Classifier Systems 1 "[Grefory 91] are held every two years from 1990.
Reference: [Shavlik & Dietterich 90] <author> Jude W. Shavlik and Thomas G. Dietterich. </author> <booktitle> Readings in Machine Learning. </booktitle> <address> San Mateo: </address> <publisher> Morgan Kaufmann, </publisher> <year> 1990. </year>
Reference: [Spiessens 88] <author> P. Spiessens. </author> <title> Genetic algorithms: Introduction, applications and extensions. </title> <type> Technical report, </type> <institution> Artificial Intelligence Laboratory, Vrije Universiteit, Brussel, </institution> <year> 1988. </year>
Reference-contexts: I therefore include this chapter in my report, to help explain why the methods and experiments described work so well. The mathematical descriptions of Genetic Algorithms that we use in this chapter is adapted from <ref> [Spiessens 88] </ref>. 20 3.1 Implicit Parallelism A schema (Holland 75) is a similarity template describing a subset of strings with similarities at certain string positions. Why are schemata important for Genetic Algorithms? [Goldberg 89] says: "In some sense we are no longer interested in strings as strings alone. <p> Another approach not yet implement by us is to divide the large population into several small sub-populations, let the several sub-populations run in parallel and then periodically select some individuals and exchange them with other sub-populations; this is know as migration <ref> [Spiessens 88] </ref> [Tanese 89]. 84 * Seeding the Initial Population. Genetic Algorithms are a way of solving highly complex optimization problems.
Reference: [Tanese 89] <author> Reiko Tanese. </author> <title> Distributed Genetic Algorithms for Function Optimization. </title> <type> Unpublished PhD thesis, </type> <institution> Dept. of Computer Science and Engineering, University of Michi-gan, </institution> <year> 1989. </year> <month> 88 </month>
Reference-contexts: Another approach not yet implement by us is to divide the large population into several small sub-populations, let the several sub-populations run in parallel and then periodically select some individuals and exchange them with other sub-populations; this is know as migration [Spiessens 88] <ref> [Tanese 89] </ref>. 84 * Seeding the Initial Population. Genetic Algorithms are a way of solving highly complex optimization problems.
Reference: [Winston 92] <author> Patrick Winston. </author> <booktitle> Artificial Intelligence 3rd edition. </booktitle> <publisher> Ad--dison Wesley Publishing Company, </publisher> <year> 1992. </year> <month> 89 </month>
References-found: 18

