URL: file://ftp.cis.ohio-state.edu/pub/tech-report/1997/TR18.ps.gz
Refering-URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/TRList.html
Root-URL: 
Email: wuchi@cis.ohio-state.edu  jrex@research.att.com  
Title: Performance Evaluation of Smoothing Algorithms for Transmitting Prerecorded Variable-Bit-Rate Video  
Author: Wu-chi Feng Jennifer Rexford 
Address: Columbus, OH 43210  Murray Hill, NJ 07974  
Affiliation: Computer and Information Sciences Ohio State University  Networking and Distributed Systems AT&T Labs Research  
Abstract: The transfer of prerecorded, compressed video requires multimedia services to support large fluctuations in bandwidth requirements on multiple time scales. Bandwidth smoothing techniques can reduce the burstiness of a variable-bit-rate stream by prefetching data at a series of fixed rates, simplifying the allocation of resources in video servers and the communication network. Given a fixed client-side prefetch buffer, several bandwidth smoothing algorithms have been introduced that are provably optimal under certain constraints. This paper presents a comprehensive performance evaluation of bandwidth smoothing algorithms, based on a collection of metrics that relate directly to the server, network, and client resources necessary for the transmission, transport, and playback of prerecorded video. Due to the scarcity of available trace data, we have constructed a video capture testbed and generated a collection of twenty full-length, motion-JPEG encoded video clips. Using these video traces and a range of client buffer sizes, we investigate the interplay between the performance metrics through simulation experiments. The results highlight the unique strengths and weaknesses of each bandwidth smoothing algorithm and pinpoint promising directions for future research.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Anderson, Y. Osawa, and R. Govindan, </author> <title> "A file system for continuous media," </title> <journal> ACM Transactions on Computer Systems, </journal> <pages> pp. 311-337, </pages> <month> November </month> <year> 1992. </year>
Reference: [2] <author> P.Lougher and D. Shepard, </author> <title> "The design of a storage server for continuous media," </title> <journal> The Computer Journal, </journal> <volume> vol. 36, </volume> <pages> pp. 32-42, </pages> <month> February </month> <year> 1993. </year>
Reference: [3] <author> D. Kandlur, M. Chen, and Z. Shae, </author> <title> "Design of a multimedia storage server," </title> <booktitle> in Proceedings of the IS&T/SPIE Symposium on Electronic Imaging Science and Technology, </booktitle> <month> February </month> <year> 1994. </year>
Reference: [4] <author> D. Gemmell, J. Vin, D. Kandlur, P. Rangan, and L. Rowe, </author> <title> "Multimedia storage servers: A tutorial," </title> <journal> IEEE Computer Magazine, </journal> <volume> vol. 28, </volume> <pages> pp. 40-49, </pages> <month> May </month> <year> 1995. </year>
Reference: [5] <author> C. Federighi and L. Rowe, </author> <title> "A distributed hierarchical storage manager for a video-on-demand system," </title> <booktitle> in Proceedings of the IS&T/SPIE Symposium on Electronic Imaging Science and Technology, </booktitle> <month> February </month> <year> 1994. </year>
Reference-contexts: Video-on-demand servers typically store video on large, fast disks [1-4], as shown in Figure 1; the server may also include tertiary storage, such as tapes or optical jukeboxes, for holding less frequently requested data <ref> [5] </ref>. A network connects the video servers to the client sites through one or more communication links. The network can help ensure the continuous delivery of the video data by including support for rate or delay guarantees [6, 7], based on resource reservation requests from the video server.
Reference: [6] <author> C. Aras, J. Kurose, D. Reeves, and H. Schulzrinne, </author> <title> "Real-time communication in packet switched networks," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 82, </volume> <pages> pp. 122-139, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: A network connects the video servers to the client sites through one or more communication links. The network can help ensure the continuous delivery of the video data by including support for rate or delay guarantees <ref> [6, 7] </ref>, based on resource reservation requests from the video server. Client sites include workstations and set-top boxes that have a playback buffer for storing one or more video frames.
Reference: [7] <author> H. Zhang, </author> <title> "Service disciplines for guaranteed performance service in packet-switching networks," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 83, </volume> <pages> pp. 1374-1396, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: A network connects the video servers to the client sites through one or more communication links. The network can help ensure the continuous delivery of the video data by including support for rate or delay guarantees <ref> [6, 7] </ref>, based on resource reservation requests from the video server. Client sites include workstations and set-top boxes that have a playback buffer for storing one or more video frames.
Reference: [8] <author> D. L. Gall, </author> <title> "MPEG: A video compression standard for multimedia applications," </title> <journal> Communications of the ACM, </journal> <volume> vol. 34, </volume> <pages> pp. 46-58, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: IEEE INFOCOM, April 1997. workstations and set-top boxes that contain hardware to interact with the network and a disk (or RAM) that serves as a playback buffer. Effective compression algorithms, such as MPEG <ref> [8] </ref> and JPEG [9], can substantially reduce the resource requirements for storing and transmitting video streams. However, compressed video traffic typically exhibits significant burstiness on multiple time scales, due to the frame structure of the compression algorithm as well as natural variations within and between scenes [10-15]. <p> While the quality factor can be adjusted, each sequence that is captured must have a fixed quality factor, resulting in the bursty variable-bit-rate video sources. Since motion-JPEG compresses each video frame independently, the traces do not capture the effects of inter-frame dependencies that would exist in MPEG-encoded streams <ref> [8, 15] </ref>. For a typical video source, a MPEG encoding would have smaller average frame sizes and larger short-term bursti-ness, due the mixture of interpolated (I), predictive (P), and bidirectional (B) frames.
Reference: [9] <author> G. K. Wallace, </author> <title> "The JPEG still picture transmission standard," </title> <journal> Communications of the ACM, </journal> <volume> vol. 34, </volume> <pages> pp. 30-44, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: IEEE INFOCOM, April 1997. workstations and set-top boxes that contain hardware to interact with the network and a disk (or RAM) that serves as a playback buffer. Effective compression algorithms, such as MPEG [8] and JPEG <ref> [9] </ref>, can substantially reduce the resource requirements for storing and transmitting video streams. However, compressed video traffic typically exhibits significant burstiness on multiple time scales, due to the frame structure of the compression algorithm as well as natural variations within and between scenes [10-15]. <p> The MiroVideo Capture board is a motion-JPEG compression board containing the C-Cube Microsystems' motion-JPEG chip, the CL550. The motion-JPEG algorithm compresses each video frame using the JPEG still-picture standard <ref> [9] </ref>. The MiroVideo board digitizes the frames at 640 fi 480 pixels and then subsamples them to 320 fi 240 pixels with guaranteed VHS picture quality. By setting options on this board, the testbed can vary the quality factor used in compressing the video encoding. <p> The three versions of E.T. permit the simulation experiments in Section 4 to study the effectiveness of bandwidth smoothing techniques as a function of video quality. The remainder of the video traces in Table 1 have 0:94 bits-per-pixel, which corresponds to "excellent" picture quality <ref> [9] </ref>. To broaden the collection of traces, the library also includes a handful of sources from video cassette tapes. The NCAA Final Four video is a documentary describing the 1993 NCAA basketball tournament, resulting in many scenes with a large amount of detail.
Reference: [10] <author> E. P. Rathgeb, </author> <title> "Policing of realistic VBR video traffic in an ATM network," </title> <journal> International Journal of Digital and Analog Communication Systems, </journal> <volume> vol. 6, </volume> <pages> pp. 213-226, </pages> <month> October-December </month> <year> 1993. </year> <month> 25 </month>
Reference: [11] <author> W. E. Leland, M. S. Taqqu, W. Willinger, and D. V. Wilson, </author> <title> "On the self-similar nature of Ethernet traffic (extended version)," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 2, </volume> <pages> pp. 1-15, </pages> <month> February </month> <year> 1994. </year>
Reference: [12] <author> S. S. Lam, S. Chow, and D. K. Yau, </author> <title> "An algorithm for lossless smoothing of MPEG video," </title> <booktitle> in Proceedings of ACM SIGCOMM, </booktitle> <pages> pp. 281-293, </pages> <month> August/September </month> <year> 1994. </year>
Reference: [13] <author> A. R. Reibman and A. W. Berger, </author> <title> "Traffic descriptors for VBR video teleconferencing over ATM networks," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 3, </volume> <pages> pp. 329-339, </pages> <month> June </month> <year> 1995. </year>
Reference: [14] <author> M. Grossglauser, S. Keshav, and D. Tse, "RCBR: </author> <title> A simple and efficient service for multiple time-scale traffic," </title> <booktitle> in Proceedings of ACM SIGCOMM, </booktitle> <pages> pp. 219-230, </pages> <month> August/September </month> <year> 1995. </year>
Reference-contexts: Also, smaller values of m reduce the storage requirements for the bandwidth plans, although this is typically small in comparison to the size of the actual video data. Minimizing the number of rate changes can also limit the cost of negotiating with the network <ref> [14] </ref> to reserve link bandwidth for transporting the video stream 3 . Figure 11 compares the algorithms based on the number 3 To further reduce interaction with the network, each video stream could have a separate reservation plan for allocating network resources along the route to the client. <p> This reservation plan could have fewer rate changes than the underlying transmission plan, at the expense of reserving excess link bandwidth <ref> [14, 18] </ref>. 17 required for the various smoothing algorithms as a function of the client buffer size.
Reference: [15] <author> O. Rose, </author> <title> "Statistical properties of MPEG video traffic and their impact on traffic modeling in ATM systems," </title> <booktitle> in Proceedings of Conference on Local Computer Networks, </booktitle> <pages> pp. 397-406, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: While the quality factor can be adjusted, each sequence that is captured must have a fixed quality factor, resulting in the bursty variable-bit-rate video sources. Since motion-JPEG compresses each video frame independently, the traces do not capture the effects of inter-frame dependencies that would exist in MPEG-encoded streams <ref> [8, 15] </ref>. For a typical video source, a MPEG encoding would have smaller average frame sizes and larger short-term bursti-ness, due the mixture of interpolated (I), predictive (P), and bidirectional (B) frames.
Reference: [16] <author> W. Feng and S. Sechrest, </author> <title> "Smoothing and buffering for delivery of prerecorded compressed video," </title> <booktitle> in Proceedings of IS&T/SPIE Symp. on Multimedia Computing and Networking, </booktitle> <pages> pp. 234-242, </pages> <month> February </month> <year> 1995. </year> <note> Extended version appears in Computer Communications, </note> <month> October </month> <year> 1995, </year> <pages> pp. 709-717. </pages>
Reference-contexts: Specifically, we evaluate six algorithms that create plans that * minimize the number of bandwidth increases <ref> [16] </ref>, * minimize the total number of bandwidth changes [17], * minimize the variability of the bandwidth requirements [18], * minimize the utilization of the prefetch buffer [19], * consist of periodic bandwidth runs [20], * minimize cost metrics through dynamic programming [21] An effective comparison of these algorithms requires experiments <p> The various bandwidth smoothing algorithms differ in how they select a starting point for run j+1 on rate increases and decreases, resulting in transmission plans with different performance properties: * CBA: For example, the critical bandwidth allocation (CBA) algorithm <ref> [16] </ref> starts a rate decrease at the leftmost point on the frontier, where the trajectory for run j hits the F under curve; for rate increases, the CBA algorithm performs a search along the frontier to locate the starting point that allows the next trajectory to extend as far as possible,
Reference: [17] <author> W. Feng, F. Jahanian, and S. Sechrest, </author> <title> "Optimal buffering for the delivery of compressed prerecorded video," </title> <booktitle> in Proceedings of the IASTED/ISMM International Conference on Networks, </booktitle> <month> January </month> <year> 1995. </year> <note> Extended version to appear in ACM/Springer-Verlag Multimedia Systems Journal. </note>
Reference-contexts: Specifically, we evaluate six algorithms that create plans that * minimize the number of bandwidth increases [16], * minimize the total number of bandwidth changes <ref> [17] </ref>, * minimize the variability of the bandwidth requirements [18], * minimize the utilization of the prefetch buffer [19], * consist of periodic bandwidth runs [20], * minimize cost metrics through dynamic programming [21] An effective comparison of these algorithms requires experiments that evaluate a wide range of video traces and <p> This results in a transmission plan that has the smallest possible peak bandwidth requirement (minimizes max j fr j g) and the minimum number of bandwidth increases. * MCBA: To minimize the number of rate decreases, the minimum changes bandwidth allocation (MCBA) algorithm <ref> [17] </ref> extends the CBA scheme to perform the linear search operation on all rate changes. This results in a transmission plan with the smallest possible number of rate changes (minimizes m), as well as the minimum peak bandwidth requirement. <p> a larger prefetch buffer can absorb most of the variation in frame sizes for the lower quality stream. 4.3 Number of Bandwidth Changes To reduce the complexity of the server and client sites, a bandwidth smoothing algorithm could strive to minimize m, the number of runs in the transmission schedule <ref> [17] </ref>. A rate change alters the amount of data that the server must read from the disk in each time interval, which can have implications for disk layout and scheduling policies, particularly when the server must multiplex a large number of video streams.
Reference: [18] <author> J. D. Salehi, Z.-L. Zhang, J. F. Kurose, and D. Towsley, </author> <title> "Supporting stored video: Reducing rate variability and end-to-end resource requirements through optimal smoothing," </title> <booktitle> in Proceedings of ACM SIGMETRICS, </booktitle> <pages> pp. 222-231, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: Specifically, we evaluate six algorithms that create plans that * minimize the number of bandwidth increases [16], * minimize the total number of bandwidth changes [17], * minimize the variability of the bandwidth requirements <ref> [18] </ref>, * minimize the utilization of the prefetch buffer [19], * consist of periodic bandwidth runs [20], * minimize cost metrics through dynamic programming [21] An effective comparison of these algorithms requires experiments that evaluate a wide range of video traces and client buffer sizes. <p> For the PCRTT algorithm, the graph shows the plan with the largest possible interval size that would not overflow a 1 megabyte buffer. * MVBA: Instead of minimizing m, a bandwidth smoothing algorithm can strive to reduce the variability in the rate requirements <ref> [18] </ref>; for the remainder of the paper, we refer to this approach as the minimum variability bandwidth allocation (MVBA) algorithm. To adjust to variations in the underlying video stream, the MVBA algorithm initiates bandwidth changes at the leftmost point along the frontier, for both rate increases and rate decreases. <p> By avoiding a binary search along the frontier, the MVBA algorithm can have a worst-case complexity of O (n 2 ); this initial algorithm can be modified to be strictly O (n) <ref> [18] </ref>. The MVBA and CBA algorithms handle bandwidth decreases in the same manner, while an CBA plan more closely resembles an MCBA plan on rate increases, as shown in Figure 3. <p> a small number of linear curves, allowing efficient admission control policies that balance the use of network/server bandwidth and client buffer space. 4.2 Variability in Bandwidth Requirements In addition to minimizing the peak bandwidth, a smoothing algorithm should reduce the overall variability in the rate requirements for the video stream <ref> [18] </ref>. Intuitively, plans with smaller rate variation should require fewer resources from the server and the network; more precisely, smoother plans have lower effective bandwidth requirements, allowing the server and the network to statistically multiplex a larger number of streams [24]. <p> This reservation plan could have fewer rate changes than the underlying transmission plan, at the expense of reserving excess link bandwidth <ref> [14, 18] </ref>. 17 required for the various smoothing algorithms as a function of the client buffer size.
Reference: [19] <author> W. Feng, </author> <title> "Rate-constrained bandwidth smoothing for the delivery of stored video," </title> <booktitle> in Proceedings of IS&T/SPIE Multimedia Networking and Computing, </booktitle> <month> February </month> <year> 1997. </year>
Reference-contexts: Specifically, we evaluate six algorithms that create plans that * minimize the number of bandwidth increases [16], * minimize the total number of bandwidth changes [17], * minimize the variability of the bandwidth requirements [18], * minimize the utilization of the prefetch buffer <ref> [19] </ref>, * consist of periodic bandwidth runs [20], * minimize cost metrics through dynamic programming [21] An effective comparison of these algorithms requires experiments that evaluate a wide range of video traces and client buffer sizes. <p> To reduce the frequency of rate changes, generalizations of the RCBS algorithm could transmit frames at averaged rates over small intervals of time by introducing a modest amount of extra prefetching <ref> [19] </ref>. This hybrid of the PCRTT and RCBS algorithms would produce plans with a reasonable time between consecutive rate changes, while still limiting the amount of prefetching. Under small buffer sizes, the top three curves for the MCBA algorithm correspond to the Seminar videos. <p> For a given size b for the playback buffer, a smoothing algorithm could strive to limit buffer utilization while still minimizing the peak rate <ref> [19] </ref>. Reducing the amount of prefetching allows the client to statistically share the playback space between multiple video streams, or even other applications.
Reference: [20] <author> J. M. McManus and K. W. Ross, </author> <title> "Video on demand over ATM: Constant-rate transmission and transport," </title> <booktitle> in Proceedings of IEEE INFOCOM, </booktitle> <pages> pp. 1357-1362, </pages> <month> March </month> <year> 1996. </year> <note> Extended version appears in IEEE J. Selected Areas in Communications, </note> <month> August </month> <year> 1996, </year> <pages> pp. 1087-1098. </pages>
Reference-contexts: Specifically, we evaluate six algorithms that create plans that * minimize the number of bandwidth increases [16], * minimize the total number of bandwidth changes [17], * minimize the variability of the bandwidth requirements [18], * minimize the utilization of the prefetch buffer [19], * consist of periodic bandwidth runs <ref> [20] </ref>, * minimize cost metrics through dynamic programming [21] An effective comparison of these algorithms requires experiments that evaluate a wide range of video traces and client buffer sizes. <p> RCBS algorithm first invokes the O (n) MVBA algorithm to determine the smallest possible peak rate for a given buffer size; then, this rate constraint is used in computing the RCBS schedule. * PCRTT: In contrast to the four previous algorithms, the piecewise constant rate transmission and transport (PCRTT) algorithm <ref> [20] </ref> creates bandwidth allocation plans by dividing the video stream into fixed-size intervals.
Reference: [21] <author> J. M. McManus and K. W. Ross, </author> <title> "A dynamic programming methodology for managing prerecorded VBR sources in packet-switched networks." </title> <note> Unpublished report extending September 1995 report, </note> <month> January </month> <year> 1997. </year>
Reference-contexts: that * minimize the number of bandwidth increases [16], * minimize the total number of bandwidth changes [17], * minimize the variability of the bandwidth requirements [18], * minimize the utilization of the prefetch buffer [19], * consist of periodic bandwidth runs [20], * minimize cost metrics through dynamic programming <ref> [21] </ref> An effective comparison of these algorithms requires experiments that evaluate a wide range of video traces and client buffer sizes. <p> minimum acceptable buffer size to avoid overflow given the interval size, as shown in Figure 5. * PCRTT-DP: Instead of requiring a rate change for each time interval, a recent extension to the PCRTT algorithm employs dynamic programming (DP) to calculate a minimum-cost transmission plan that consists of m runs <ref> [21] </ref>. Although dynamic programming offers a general framework for optimization, we focus on the buffer size b as the cost metric to facilitate comparison with the other smoothing algorithms. <p> However, an exact solution, permitting rate changes in any time slot, would introduce significant computational complexity, particularly for full-length video traces. To reduce the computational overhead, a heuristic version of the algorithm <ref> [21] </ref> groups frames into intervals, as in Figure 5, when computing each candidate schedule; then, the full frame-level information is used to determine how far to raise the schedule to avoid buffer underflow. This algorithm has a computational complexity of O (n 3 ).
Reference: [22] <author> W. Feng, </author> <title> Video-On-Demand Services: Efficient Transportation and Decompression of Variable-Bit-Rate Video. </title> <type> PhD thesis, </type> <institution> University of Michigan, </institution> <month> April </month> <year> 1996. </year>
Reference-contexts: However, most studies of video transmission techniques evaluate a small number of compressed video clips, due to the scarcity of publicly-available traces. To facilitate a more comprehensive evaluation of the smoothing algorithms, we have generated a library of full-length, motion-JPEG encoded video traces <ref> [22, 23] </ref>. 2.1 Video Capture Testbed Efficiently gathering large amounts of video trace data requires hardware support for video compression. The video capture testbed consists of a Pioneer Laser Disc player, a MiroVideo DC1tv capture board, and a Pentium-90 processor with 32 megabytes of memory.
Reference: [23] <author> W. Feng and J. Rexford, </author> <title> "A comparison of bandwidth smoothing techniques for the transmission of prerecorded compressed video." </title> <note> To appear in Proceedings of IEEE INFOCOM, </note> <month> April </month> <year> 1997. </year>
Reference-contexts: However, most studies of video transmission techniques evaluate a small number of compressed video clips, due to the scarcity of publicly-available traces. To facilitate a more comprehensive evaluation of the smoothing algorithms, we have generated a library of full-length, motion-JPEG encoded video traces <ref> [22, 23] </ref>. 2.1 Video Capture Testbed Efficiently gathering large amounts of video trace data requires hardware support for video compression. The video capture testbed consists of a Pioneer Laser Disc player, a MiroVideo DC1tv capture board, and a Pentium-90 processor with 32 megabytes of memory. <p> necessary, these algorithms can iterate to compute a schedule that also satisfies the buffer constraint b for the F over curve: * RCBS: Given a maximum bandwidth constraint r, the rate-constrained bandwidth smoothing (RCBS) algorithm generates a schedule with the smallest buffer utilization by prefetching frames as late as possible <ref> [23] </ref>. In addition, given the rate r, this algorithm minimizes the maximum buffer size required for the particular rate. This O (n) algorithm starts with the last frame of the movie and sequences backwards toward the first frame.
Reference: [24] <author> D. Towsley. </author> <title> Private communication, </title> <month> January </month> <year> 1997. </year>
Reference-contexts: Intuitively, plans with smaller rate variation should require fewer resources from the server and the network; more precisely, smoother plans have lower effective bandwidth requirements, allowing the server and the network to statistically multiplex a larger number of streams <ref> [24] </ref>. Even under a deterministic model of resource reservation, the server's ability to change a stream's bandwidth reservation may depend on the size of the adjustment (jr j+1 r j j), particularly on rate increases.
Reference: [25] <author> L. Rowe, K. Patel, B. Smith, and K. Liu, </author> <title> "MPEG video in software: Representation, transmission, </title> <booktitle> and playback," in Proceedings of the High Speed Networking and Multimedia Computing Symposium, </booktitle> <month> February </month> <year> 1994. </year> <month> 26 </month>
Reference-contexts: For example, with a layered encoding of the video stream, the server could reduce the transmission rate by sending only the higher priority components of the stream <ref> [25, 26] </ref>. To limit the degradation in video quality at the client site, the server can raise the stream's rate as close to r j+1 as possible. 15 client buffer size. than MVBA and CBA.
Reference: [26] <author> P. Pancha and M. E. Zarki, </author> <title> "Prioritized transmission of variable bit rate MPEG video," </title> <booktitle> in Proceedings of IEEE GLOBECOM, </booktitle> <pages> pp. 1135-1139, </pages> <year> 1992. </year>
Reference-contexts: For example, with a layered encoding of the video stream, the server could reduce the transmission rate by sending only the higher priority components of the stream <ref> [25, 26] </ref>. To limit the degradation in video quality at the client site, the server can raise the stream's rate as close to r j+1 as possible. 15 client buffer size. than MVBA and CBA.
Reference: [27] <author> D. Ferrari, A. Gupta, and G. Ventre, </author> <title> "Distributed advance reservation of real-time connections," </title> <booktitle> in Proceedings of the International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> pp. 15-26, </pages> <month> April </month> <year> 1994. </year> <month> 27 </month>
Reference-contexts: In addition, in networks that support advance booking of resources, periodic bandwidth allocation intervals can reduce the complexity of the admission control algorithms by ensuring that reservations change only at a relatively small set of points <ref> [27] </ref>. While Section 4.3 evaluates the average rate of bandwidth changes, the plots in Figure 13 focus on the variability of this metric.
References-found: 27

