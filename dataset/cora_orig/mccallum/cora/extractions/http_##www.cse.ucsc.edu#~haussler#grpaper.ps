URL: http://www.cse.ucsc.edu/~haussler/grpaper.ps
Refering-URL: http://www.cse.ucsc.edu/~haussler/pubs.html
Root-URL: http://www.cse.ucsc.edu
Title: Computational Genefinding  
Author: David Haussler 
Keyword: Summary  
Address: Santa Cruz, CA 95064  
Affiliation: Computer Science Department University of California  
Email: email: haussler@cse.ucsc.edu  
Phone: Tel: 831 459 2105  
Web: www: http://www.cse.ucsc.edu/ haussler  
Abstract: We briefly review computational methods for finding genes in genomic DNA sequences. Specific programs are now available to find genes in the genomic DNA of many organisms. We discuss the approaches used by these programs, their performance, and future directions for this field. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Agarwal and V. Bafna. </author> <title> The ribosome scanning model for translation initiation for gene prediction and full-length cDNA detection. </title> <booktitle> In Proceedings of the Fifth International Conference on Intelligent Systems for Molecular Biology, </booktitle> <pages> pages 2-7, </pages> <year> 1998. </year>
Reference-contexts: Other statistical/pattern models besides neural networks, such as nonhomogeneous Markov models (a weight matrix where the distribution at position i depends on the residue at position i 1, sometimes called "WAM" models), decision trees, quadratic discriminant functions, and graphical models, have also been used as biosequence signal sensors <ref> [37, 76, 63, 15, 58, 1] </ref>. <p> The statistical signals they are trying to recognize are too weak <ref> [1] </ref>, and there are dependencies between signals and contents that they cannot capture [11], such as the possible correlation between splice site strength and exon size [78].
Reference: [2] <author> A. Bairoch. Prosite: </author> <title> a dictionary of sites and patterns in proteins. </title> <journal> Nucleic Acids Research, </journal> <volume> 20 </volume> <pages> 2013-2018, </pages> <year> 1992. </year>
Reference-contexts: regions such as exons and introns, which are recognized by different methods that may be called content sensors [64, 65]. 2 Signal Sensors The most basic signal sensor is a simple consensus sequence or an expression that describes a consensus sequence along with allowable variations, such as a PROSITE expression <ref> [66, 2] </ref>. More sensitive sensors can be designed using weight matrices in place of the consensus, in which each position in the pattern allows a match to any residue, but different costs are associated with matching each residue in each position [64, 67, 66, 3, 12].
Reference: [3] <author> O. Berg and P. von Hippel. </author> <title> Selection of DNA binding sites by regulatory proteins. </title> <journal> J. Mol. Biol., </journal> <volume> 193 </volume> <pages> 723-750, </pages> <year> 1987. </year>
Reference-contexts: More sensitive sensors can be designed using weight matrices in place of the consensus, in which each position in the pattern allows a match to any residue, but different costs are associated with matching each residue in each position <ref> [64, 67, 66, 3, 12] </ref>. The score returned 1 by a weight matrix sensor for a candidate site is the sum of the costs of the individual residue matches over that site. If this score exceeds a given threshold, the candidate site is predicted to be a true site. <p> A mathematically equivalent interpretation of the score is that it is the discrimination energy for site recognition <ref> [3] </ref>. Weight matrices can also be viewed as a simple type of neural network, sometimes called a perceptron [67, 66].
Reference: [4] <author> A. P. Bird. </author> <title> CpG islands as gene markers in the vertebrate nucleus. </title> <journal> Trends Genet, </journal> <volume> 3 </volume> <pages> 342-347, </pages> <year> 1987. </year>
Reference-contexts: Other content sensors include sensors for CpG islands, which are regions that often occur near the beginnings of genes where the frequency of the dinucleotide CG is not as low as it typically is in the rest of the genome <ref> [4, 25, 47] </ref>, and sensors for repetitive DNA, such as ALU sequences [36, 35, 51].
Reference: [5] <author> E. Birney and R. Durbin. Dynamite: </author> <title> a flexible code generating language for dynamic programming methods used in sequence comparison. </title> <booktitle> In ismb97, </booktitle> <pages> pages 56-64, </pages> <year> 1997. </year>
Reference-contexts: His genefinding program, GenLang, was one of the earliest integrated genefinders, following on the pioneering work of Gelfand [26], Gelfand and Roytberg [30], Fields and Soderlund [24], and Phil Green's GeneFinder [69], and was one of the inspirations for significant later work (e.g. <ref> [6, 5] </ref> and the HMM methods described below.) Nearly all integrated genefinders use dynamic programming to combine candidate exons and other scored regions and sites into an complete gene prediction with maximal total score. <p> Nevertheless, in the presence of a very close homolog, Procrustes is an extremely effective gene finding method. Recent related methods, based on HMM models, have been developed by Birney and Durbin <ref> [5] </ref> and are currently being developed by Kulp [43]. In 1995, a number of different integrated genefinders were tested on a benchmark set of 570 vertebrate genes by Burset and Guigo [10].
Reference: [6] <author> E. Birney, J. Thompson, and T. Gibson. </author> <title> PairWise and SearchWise: finding the optimal alignment is a simultaneous comparison of a protein profile against all DNA translation frames. </title> <journal> NAR, </journal> <volume> 24 </volume> <pages> 2730-2739, </pages> <year> 1996. </year>
Reference-contexts: His genefinding program, GenLang, was one of the earliest integrated genefinders, following on the pioneering work of Gelfand [26], Gelfand and Roytberg [30], Fields and Soderlund [24], and Phil Green's GeneFinder [69], and was one of the inspirations for significant later work (e.g. <ref> [6, 5] </ref> and the HMM methods described below.) Nearly all integrated genefinders use dynamic programming to combine candidate exons and other scored regions and sites into an complete gene prediction with maximal total score.
Reference: [7] <author> M. Borodovsky and J. McIninch. Genmark: </author> <title> Parallel gene recognition for both DNA strands. </title> <journal> Computers and Chemistry, </journal> <volume> 17(2) </volume> <pages> 123-133, </pages> <year> 1993. </year>
Reference-contexts: To discriminate coding from non-coding regions in eukaryotes, exon content sensors often use in-frame hexamer counts or, what is nearly equivalent, a set of 3 fifth-order Markov models, one for each of the three nucleotide positions within a codon, as pioneered in the genefinder GeneMark <ref> [7] </ref>. It is also important to consider local compositional biases, as the codon preferences are quite different between genes in G+C rich regions and genes in A+T rich regions [55, 18, 7]. <p> It is also important to consider local compositional biases, as the codon preferences are quite different between genes in G+C rich regions and genes in A+T rich regions <ref> [55, 18, 7] </ref>. While many other measures of coding potential have been investigated (Fickett tested 19 different measures, which he took from the literature [21]), few others have been proven to be as effective.
Reference: [8] <author> S. Brunak, J. Engelbrecht, and S. Knudsen. </author> <title> Prediction of human mRNA donor and acceptor sites from the DNA sequence. </title> <journal> JMB, </journal> <volume> 220 </volume> <pages> 49-65, </pages> <year> 1991. </year>
Reference-contexts: Weight matrices can also be viewed as a simple type of neural network, sometimes called a perceptron [67, 66]. Many investigators have also applied more complex neural networks, such as multi-layer feed-forward networks and time delay networks, to various DNA signal recognition problems <ref> [8, 19, 49, 53, 54, 46, 32] </ref>. Multi-layer nets have the ability to capture statistical dependency between the residues at different positions in a site, an ability that perceptrons (and hence weight matrices) lack.
Reference: [9] <author> C. Burge and S. Karlin. </author> <title> Predictions of complete gene structures in human genomic DNA. </title> <journal> JMB, </journal> <volume> 268 </volume> <pages> 78-94, </pages> <year> 1997. </year> <month> 8 </month>
Reference-contexts: A somewhat more general class of probabilistic models, called generalized HMMs (GHMMs) or (hidden) semi-Markov models, have their roots in GeneParser [62], and were more fully developed in Genie [44, 57, 45] and then GenScan <ref> [9] </ref> (see also [72]). The probabilistic approach has further advantages. For example, for any given feature, such as a 5' splice site, and any position in the DNA sequence X, we can calculate the probability that that feature occurs at that position. <p> GeneParser [62] pioneered this methodology (see further theoretical discussion in [68]), and it is used to give highly accurate confidence values for predicted exons in Genscan <ref> [9] </ref>. In addition, the probabilistic formulation provides various new ways to estimate the parameters of the gene-finding model. <p> A new category of completely correct gene prediction has been added to the list of performance measurements, and Genscan achieves an accuracy of about 40% on the Burset and Guigo dataset in this category <ref> [9] </ref>. Tests have also been conducted on the identification of promoters, showing that the accuracy of currently available methods is much lower on this task [22]. The currently available genefinding performance results must be approached with extreme caution. <p> Guigo, D. Kulp, M. Reese and the editor for helpful suggestions. URLs Computational genefinding bibliographies: http://linkage.rockefeller.edu/wli/gene/ http://www-hto.usc.edu/software/procrustes/fans_ref/ Genfinding Datasets: Single genes: ftp://www-hgc.lbl.gov/pub/genesets/ Annotated contigs: http://igs-server.cnrs-mrs.fr/banbury/index.html http://www.sanger.ac.uk/Projects/C_elegans/genefinding/ Some HMM-based genefinders genes: Genie [44, 57, 45]: http://www.cse.ucsc.edu/~dkulp/cgi-bin/genie GenScan <ref> [9] </ref>: http://CCR-081.mit.edu/GENSCAN.html 7 HMMgene [41]: http://www.cbs.dtu.dk/services/HMMgene/ GeneMark-HMM [48]: http://genemark.biology.gatech.edu/GeneMark/hmmchoice.html Veil [33]: http://www.cs.jhu.edu/labs/compbio/veil.html Some further genefinders: AAT [34]: http://genome.cs.mtu.edu/aat.html FGENEH [63]: http://dot.imgen.bcm.tmc.edu:9331/gene-finder/gf.html GENEID [31]: http://www.imim.es/GeneIdentification/Geneid/geneid_inp ut.html Genlang [60]: http://cbil.humgen.upenn.edu/~sdong/genlang_home.html GeneParser [62]: http://beagle.colorado.edu/~eesnyder/GeneParser.html Glimmer [59]: http://www.cs.jhu.edu/labs/compbio/glimmer.html Grail [73]: http://compbio.ornl.gov/ MZEF [77]: http://www.cshl.org/genefinder Procrustes [28]: http://www-hto.usc.edu/software/procrustes/ Full version of this review: http://www.cse.ucsc.edu/~haussler/pubs.html
Reference: [10] <author> M. Burset and R. Guigo. </author> <title> Evaluation of gene structure prediction programs. </title> <journal> Ge--nomics, </journal> <volume> 34(3) </volume> <pages> 353-367, </pages> <year> 1996. </year> <title> Data set and evaluation results can be found at http://www.imim.es/GeneIdentification/Evaluation/Index.html. </title>
Reference-contexts: Current state-of-the-art genefinding systems combine multiple statistical measures with database homology searches, obtained by translating the DNA to protein in all possible reading frames, and then searching the protein databases for similar protein sequences. Examples are Genie [45], GeneID+ <ref> [10] </ref>, GeneParser3 [62], and recent versions of Grail [75]. The program AAT [34] and new versions of Grail also take into account EST information [74]. <p> Recent related methods, based on HMM models, have been developed by Birney and Durbin [5] and are currently being developed by Kulp [43]. In 1995, a number of different integrated genefinders were tested on a benchmark set of 570 vertebrate genes by Burset and Guigo <ref> [10] </ref>. They looked at not only how many bases were predicted correctly as either coding or non-coding, but how many exons were predicted exactly, with both splice sites located correctly. In the former case, accuracy was about 75-80%. In the latter it was about 40-60%.
Reference: [11] <author> J.-M. Claverie. </author> <title> Sequence "signals": Artifact or reality? Computers and Chemistry, </title> <booktitle> 16(2) </booktitle> <pages> 89-91, </pages> <year> 1992. </year>
Reference-contexts: The statistical signals they are trying to recognize are too weak [1], and there are dependencies between signals and contents that they cannot capture <ref> [11] </ref>, such as the possible correlation between splice site strength and exon size [78]. During the last five years, a number of systems have been developed that combine signal and content sensors to try to identify complete gene structure.
Reference: [12] <author> J.-M. Claverie. </author> <title> Some useful statistical properties of position-weight matrices. </title> <journal> Computers and Chemistry, </journal> <volume> 18(3) </volume> <pages> 287-294, </pages> <year> 1994. </year>
Reference-contexts: More sensitive sensors can be designed using weight matrices in place of the consensus, in which each position in the pattern allows a match to any residue, but different costs are associated with matching each residue in each position <ref> [64, 67, 66, 3, 12] </ref>. The score returned 1 by a weight matrix sensor for a candidate site is the sum of the costs of the individual residue matches over that site. If this score exceeds a given threshold, the candidate site is predicted to be a true site.
Reference: [13] <author> J.-M. Claverie. </author> <title> Computational methods for the identification of genes in vertebrate genomic sequences. Human Molecular Genetics, </title> <booktitle> 6(10) </booktitle> <pages> 1735-1744, </pages> <year> 1997. </year>
Reference-contexts: 1 Introduction Computational methodology for finding genes and other functional sites in genomic DNA has evolved significantly over the last 20 years. Excellent recent surveys have been given by Gelfand [27], Fickett [20, 21], Guigo [31], Claverie <ref> [13] </ref>, Milanesi and Rogosin [50], and Krogh [41]. Extensive bibliographies are available at http://linkage.rockefeller.edu/wli/gene/ and http://www-hto.usc.edu/software/procrustes/fans_ref/. Here we give only a very brief overview.
Reference: [14] <author> S. Cole et al. </author> <title> Deciphering the biology of mycobecterium tuberculosis from the complete genome sequence. </title> <journal> Nature, </journal> <volume> 393(6685) </volume> <pages> 537-544, </pages> <year> 1998. </year>
Reference-contexts: Equivalently, we can maximize log P (QjX; ). This is the score function that is optimized in a genefinding HMM. It can be optimized using standard dynamic programming methods. Early genfinding HMMs were EcoParse (for E. coli [42], also recently used in the annotation of the M. Tuberculosis genome <ref> [14] </ref>) and Xpound (for human) [70]. More recent programs are GeneMark-HMM (for bacterial genomes) [48] Veil [33] and HMMgene (for human) [41].
Reference: [15] <author> M. Craven and J. Shavlik. </author> <title> Learning to predict reading frames in e. coli DNA sequences. </title> <booktitle> In Proceedings of the Hawaii International Conference on System Sciences, </booktitle> <pages> pages 773-782, </pages> <address> Los Alamitos, CA, 1993. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Other statistical/pattern models besides neural networks, such as nonhomogeneous Markov models (a weight matrix where the distribution at position i depends on the residue at position i 1, sometimes called "WAM" models), decision trees, quadratic discriminant functions, and graphical models, have also been used as biosequence signal sensors <ref> [37, 76, 63, 15, 58, 1] </ref>.
Reference: [16] <author> S. Dong and D. B. </author> <title> Searls. Gene structure prediction by linguistic methods. </title> <journal> Genomics, </journal> <volume> 162 </volume> <pages> 705-708, </pages> <year> 1994. </year>
Reference-contexts: Indeed this parsing metaphor can be pushed deeper. Searls <ref> [60, 16] </ref> was the first major proponent of describing gene structure in linguistic terms using a formal grammar.
Reference: [17] <author> R. Durbin, S. Eddy, A. Krogh, and G. Mitchison. </author> <title> Biological Sequence Analysis: Probabilistic Models of Proteins and Nucleic Acids. </title> <publisher> Cambridge University Press, </publisher> <year> 1998. </year>
Reference-contexts: A brief and lucid tutorial on this topic can be found in [41] and a more detailed exposition in <ref> [17] </ref>. Gelfand, et al, proposed a dynamic programming scheme, embodied in the genefinder GREAT [29], that calculates the set of all so-called Pareto-optimal gene structure predictions, which include the optimal predictions for a wide variety of different scoring functions. <p> It is even possible to estimate the parameters from partially annotated training sequences using the expectation-maximization method <ref> [17] </ref>. 4 So far we have focused on genefinders that predict gene structure based only on general features of genes, rather than using explicit comparisons to other, previously known genes, or auxiliary information such as expressed sequence tag (EST) matches.
Reference: [18] <author> L. Duret, D. Mouchiroud, and C. Gautier. </author> <title> Statistical analysis of vertebrate sequences reveals that long genes are scarce in CG-rich isochores. </title> <journal> Journal of Molecular Evolution, </journal> <volume> 40 </volume> <pages> 308-317, </pages> <year> 1995. </year>
Reference-contexts: It is also important to consider local compositional biases, as the codon preferences are quite different between genes in G+C rich regions and genes in A+T rich regions <ref> [55, 18, 7] </ref>. While many other measures of coding potential have been investigated (Fickett tested 19 different measures, which he took from the literature [21]), few others have been proven to be as effective.
Reference: [19] <author> R. Farber, A. Lapedes, and K. Sirotkin. </author> <title> Determination of eukaryotic protein coding regions using neural networks and information theory. </title> <journal> JMB, </journal> <volume> 226 </volume> <pages> 471-479, </pages> <year> 1992. </year>
Reference-contexts: Weight matrices can also be viewed as a simple type of neural network, sometimes called a perceptron [67, 66]. Many investigators have also applied more complex neural networks, such as multi-layer feed-forward networks and time delay networks, to various DNA signal recognition problems <ref> [8, 19, 49, 53, 54, 46, 32] </ref>. Multi-layer nets have the ability to capture statistical dependency between the residues at different positions in a site, an ability that perceptrons (and hence weight matrices) lack.
Reference: [20] <author> J. Fickett. </author> <title> Finding genes by computer the state of the art. </title> <booktitle> Trends in Genetics, </booktitle> <volume> 12(8) </volume> <pages> 316-320, </pages> <year> 1996. </year>
Reference-contexts: 1 Introduction Computational methodology for finding genes and other functional sites in genomic DNA has evolved significantly over the last 20 years. Excellent recent surveys have been given by Gelfand [27], Fickett <ref> [20, 21] </ref>, Guigo [31], Claverie [13], Milanesi and Rogosin [50], and Krogh [41]. Extensive bibliographies are available at http://linkage.rockefeller.edu/wli/gene/ and http://www-hto.usc.edu/software/procrustes/fans_ref/. Here we give only a very brief overview. <p> An extensive review of computational methods to detect coding regions is given by Fickett and Tung [23] (see also <ref> [20, 21] </ref>). In prokaryotes, it is still common to locate genes by simply looking for long open reading frames (ORFs); this is certainly not adequate for higher eukaryotes.
Reference: [21] <author> J. Fickett. </author> <title> The gene identification problem | an overview for developers. </title> <journal> Computers and Chemistry, </journal> <volume> 20(1) </volume> <pages> 103-118, </pages> <year> 1996. </year>
Reference-contexts: 1 Introduction Computational methodology for finding genes and other functional sites in genomic DNA has evolved significantly over the last 20 years. Excellent recent surveys have been given by Gelfand [27], Fickett <ref> [20, 21] </ref>, Guigo [31], Claverie [13], Milanesi and Rogosin [50], and Krogh [41]. Extensive bibliographies are available at http://linkage.rockefeller.edu/wli/gene/ and http://www-hto.usc.edu/software/procrustes/fans_ref/. Here we give only a very brief overview. <p> An extensive review of computational methods to detect coding regions is given by Fickett and Tung [23] (see also <ref> [20, 21] </ref>). In prokaryotes, it is still common to locate genes by simply looking for long open reading frames (ORFs); this is certainly not adequate for higher eukaryotes. <p> While many other measures of coding potential have been investigated (Fickett tested 19 different measures, which he took from the literature <ref> [21] </ref>), few others have been proven to be as effective.
Reference: [22] <author> J. Fickett and A. G. Hatzigeorgiou. </author> <title> Eukaryotic promoter recognition. </title> <journal> Genome Research, </journal> <volume> 7(9) </volume> <pages> 861-878, </pages> <year> 1997. </year>
Reference-contexts: Tests have also been conducted on the identification of promoters, showing that the accuracy of currently available methods is much lower on this task <ref> [22] </ref>. The currently available genefinding performance results must be approached with extreme caution.
Reference: [23] <author> J. W. Fickett and C.-S. Tung. </author> <title> Assessment of protein coding measures. Nucl. </title> <journal> Acids Res., </journal> <volume> 20 </volume> <pages> 6441-6450, </pages> <year> 1992. </year>
Reference-contexts: An extensive review of computational methods to detect coding regions is given by Fickett and Tung <ref> [23] </ref> (see also [20, 21]). In prokaryotes, it is still common to locate genes by simply looking for long open reading frames (ORFs); this is certainly not adequate for higher eukaryotes.
Reference: [24] <author> C. Fields and C. Soderlund. </author> <title> A practical tool for automating DNA sequence analysis. </title> <journal> Comp. Appl. Biosci., </journal> <volume> 6 </volume> <pages> 263-270, </pages> <year> 1990. </year>
Reference-contexts: Searls [60, 16] was the first major proponent of describing gene structure in linguistic terms using a formal grammar. His genefinding program, GenLang, was one of the earliest integrated genefinders, following on the pioneering work of Gelfand [26], Gelfand and Roytberg [30], Fields and Soderlund <ref> [24] </ref>, and Phil Green's GeneFinder [69], and was one of the inspirations for significant later work (e.g. [6, 5] and the HMM methods described below.) Nearly all integrated genefinders use dynamic programming to combine candidate exons and other scored regions and sites into an complete gene prediction with maximal total score.
Reference: [25] <author> M. Gardiner-Garden and M. Frommer. </author> <title> CpG islands in vertebrate genomes. </title> <journal> JMB, </journal> <volume> 196 </volume> <pages> 261-282, </pages> <year> 1987. </year>
Reference-contexts: Other content sensors include sensors for CpG islands, which are regions that often occur near the beginnings of genes where the frequency of the dinucleotide CG is not as low as it typically is in the rest of the genome <ref> [4, 25, 47] </ref>, and sensors for repetitive DNA, such as ALU sequences [36, 35, 51].
Reference: [26] <author> M. S. Gelfand. </author> <title> Computer prediction of exon-intron structure of mammalian pre-mrnas. </title> <journal> NAR, </journal> <volume> 18 </volume> <pages> 5865-5869, </pages> <year> 1990. </year>
Reference-contexts: Indeed this parsing metaphor can be pushed deeper. Searls [60, 16] was the first major proponent of describing gene structure in linguistic terms using a formal grammar. His genefinding program, GenLang, was one of the earliest integrated genefinders, following on the pioneering work of Gelfand <ref> [26] </ref>, Gelfand and Roytberg [30], Fields and Soderlund [24], and Phil Green's GeneFinder [69], and was one of the inspirations for significant later work (e.g. [6, 5] and the HMM methods described below.) Nearly all integrated genefinders use dynamic programming to combine candidate exons and other scored regions and sites into
Reference: [27] <author> M. S. Gelfand. </author> <title> Prediction of function in DNA sequence analysis. </title> <journal> Jour. Comp. Biol., </journal> <volume> 2(1) </volume> <pages> 87-115, </pages> <year> 1995. </year>
Reference-contexts: 1 Introduction Computational methodology for finding genes and other functional sites in genomic DNA has evolved significantly over the last 20 years. Excellent recent surveys have been given by Gelfand <ref> [27] </ref>, Fickett [20, 21], Guigo [31], Claverie [13], Milanesi and Rogosin [50], and Krogh [41]. Extensive bibliographies are available at http://linkage.rockefeller.edu/wli/gene/ and http://www-hto.usc.edu/software/procrustes/fans_ref/. Here we give only a very brief overview. <p> Among the types of functional sites in genomic DNA that researchers have sought to recognize are splice sites, start and stop codons, branch points, promoters and terminators of transcription, polyadenylation sites, ribosomal binding sites, topoisomerase II binding sites, topoisomerase I cleavage sites, and various transcription factor binding sites <ref> [27] </ref>. Local sites such as these are called signals and methods for detecting them may be called signal sensors.
Reference: [28] <author> M. S. Gelfand, A. A. Mironov, and P. A. Pevzner. </author> <title> Gene recognition via spliced sequence alignment. </title> <journal> PNAS, </journal> <volume> 93(17) </volume> <pages> 9061-9066, </pages> <year> 1996. </year>
Reference-contexts: This approach has been taken to its extreme limit in a genefinding program developed by Gelfand, Mironov, and Pevzner <ref> [28] </ref>. This system, called Procrustes, requires the user to provide a close protein homolog of the gene to be predicted. Then a "spliced alignment" algorithm, similar to a Smith-Waterman [61] alignment, is used to derive a putative gene structure by aligning the DNA to the homolog. <p> HMM-based genefinders genes: Genie [44, 57, 45]: http://www.cse.ucsc.edu/~dkulp/cgi-bin/genie GenScan [9]: http://CCR-081.mit.edu/GENSCAN.html 7 HMMgene [41]: http://www.cbs.dtu.dk/services/HMMgene/ GeneMark-HMM [48]: http://genemark.biology.gatech.edu/GeneMark/hmmchoice.html Veil [33]: http://www.cs.jhu.edu/labs/compbio/veil.html Some further genefinders: AAT [34]: http://genome.cs.mtu.edu/aat.html FGENEH [63]: http://dot.imgen.bcm.tmc.edu:9331/gene-finder/gf.html GENEID [31]: http://www.imim.es/GeneIdentification/Geneid/geneid_inp ut.html Genlang [60]: http://cbil.humgen.upenn.edu/~sdong/genlang_home.html GeneParser [62]: http://beagle.colorado.edu/~eesnyder/GeneParser.html Glimmer [59]: http://www.cs.jhu.edu/labs/compbio/glimmer.html Grail [73]: http://compbio.ornl.gov/ MZEF [77]: http://www.cshl.org/genefinder Procrustes <ref> [28] </ref>: http://www-hto.usc.edu/software/procrustes/ Full version of this review: http://www.cse.ucsc.edu/~haussler/pubs.html
Reference: [29] <author> M. S. Gelfand, L. I. Podolsky, T. V. Astakhova, and M. A. Roytberg. </author> <title> Recognition of genes in human DNA sequences. </title> <journal> Jour. Comp. Biol., </journal> <volume> 3(2) </volume> <pages> 223-234, </pages> <year> 1996. </year>
Reference-contexts: A brief and lucid tutorial on this topic can be found in [41] and a more detailed exposition in [17]. Gelfand, et al, proposed a dynamic programming scheme, embodied in the genefinder GREAT <ref> [29] </ref>, that calculates the set of all so-called Pareto-optimal gene structure predictions, which include the optimal predictions for a wide variety of different scoring functions. Dynamic programming methods are also used in Grail II [73], GeneParser [62], FGENEH [63], and recent versions of GeneID [31].
Reference: [30] <author> M. S. Gelfand and M. A. Roytberg. </author> <title> Prediction of the exon-intron structure by a dynamic programming approach. </title> <journal> BioSystems, </journal> <volume> 30 </volume> <pages> 173-182, </pages> <year> 1993. </year>
Reference-contexts: Indeed this parsing metaphor can be pushed deeper. Searls [60, 16] was the first major proponent of describing gene structure in linguistic terms using a formal grammar. His genefinding program, GenLang, was one of the earliest integrated genefinders, following on the pioneering work of Gelfand [26], Gelfand and Roytberg <ref> [30] </ref>, Fields and Soderlund [24], and Phil Green's GeneFinder [69], and was one of the inspirations for significant later work (e.g. [6, 5] and the HMM methods described below.) Nearly all integrated genefinders use dynamic programming to combine candidate exons and other scored regions and sites into an complete gene prediction
Reference: [31] <author> R. Guigo. </author> <title> Computational gene identification: an open problem. </title> <journal> Computers and Chemistry, </journal> <volume> 21(4) </volume> <pages> 215-222, </pages> <year> 1997. </year>
Reference-contexts: 1 Introduction Computational methodology for finding genes and other functional sites in genomic DNA has evolved significantly over the last 20 years. Excellent recent surveys have been given by Gelfand [27], Fickett [20, 21], Guigo <ref> [31] </ref>, Claverie [13], Milanesi and Rogosin [50], and Krogh [41]. Extensive bibliographies are available at http://linkage.rockefeller.edu/wli/gene/ and http://www-hto.usc.edu/software/procrustes/fans_ref/. Here we give only a very brief overview. <p> Dynamic programming methods are also used in Grail II [73], GeneParser [62], FGENEH [63], and recent versions of GeneID <ref> [31] </ref>. Dynamic programming methods find the candidate gene structure with the best overall score. The key to success in these methods is developing the right score function. <p> The primary reason is that they depend very strongly on the difficulty of the genes in the test set, and for some genefinders, on the homology overlap between the genes in the test set and those in the training set that is used to optimize the parameters of the models <ref> [31, 41] </ref>. The latter is a factor even when no homology is explicitly used by the genefinding method. To avoid this problem, it is best to compare genefinders by training and testing on the same genes, and to avoid homologies between genes used for training and testing. <p> site signals, translation start and stop signals, along with the standard syntactic constraints on gene structure (frame consistency, no in-frame stop codons, minimum intron size), gives results on his benchmark 6 data set that are comparable to those obtained by most of the genefinders he and Burset tested in 1995 <ref> [31] </ref>. These results are not competitive with the older genefinders that use protein homology, nor with the newer methods that use exon coding potential but not homology, but they nevertheless indicate a surprising potential for purist genefinding models. <p> URLs Computational genefinding bibliographies: http://linkage.rockefeller.edu/wli/gene/ http://www-hto.usc.edu/software/procrustes/fans_ref/ Genfinding Datasets: Single genes: ftp://www-hgc.lbl.gov/pub/genesets/ Annotated contigs: http://igs-server.cnrs-mrs.fr/banbury/index.html http://www.sanger.ac.uk/Projects/C_elegans/genefinding/ Some HMM-based genefinders genes: Genie [44, 57, 45]: http://www.cse.ucsc.edu/~dkulp/cgi-bin/genie GenScan [9]: http://CCR-081.mit.edu/GENSCAN.html 7 HMMgene [41]: http://www.cbs.dtu.dk/services/HMMgene/ GeneMark-HMM [48]: http://genemark.biology.gatech.edu/GeneMark/hmmchoice.html Veil [33]: http://www.cs.jhu.edu/labs/compbio/veil.html Some further genefinders: AAT [34]: http://genome.cs.mtu.edu/aat.html FGENEH [63]: http://dot.imgen.bcm.tmc.edu:9331/gene-finder/gf.html GENEID <ref> [31] </ref>: http://www.imim.es/GeneIdentification/Geneid/geneid_inp ut.html Genlang [60]: http://cbil.humgen.upenn.edu/~sdong/genlang_home.html GeneParser [62]: http://beagle.colorado.edu/~eesnyder/GeneParser.html Glimmer [59]: http://www.cs.jhu.edu/labs/compbio/glimmer.html Grail [73]: http://compbio.ornl.gov/ MZEF [77]: http://www.cshl.org/genefinder Procrustes [28]: http://www-hto.usc.edu/software/procrustes/ Full version of this review: http://www.cse.ucsc.edu/~haussler/pubs.html
Reference: [32] <author> A. Hatzigeorgiou and M. Reczko. </author> <title> Recognition of coding regions and reading frames in DNA. In Gene-Finding and Gene Structure Prediction Workshop, </title> <year> 1995. </year>
Reference-contexts: Weight matrices can also be viewed as a simple type of neural network, sometimes called a perceptron [67, 66]. Many investigators have also applied more complex neural networks, such as multi-layer feed-forward networks and time delay networks, to various DNA signal recognition problems <ref> [8, 19, 49, 53, 54, 46, 32] </ref>. Multi-layer nets have the ability to capture statistical dependency between the residues at different positions in a site, an ability that perceptrons (and hence weight matrices) lack.
Reference: [33] <author> J. Henderson, S. Salzberg, and K. Fasman. </author> <title> Finding genes in human DNA with a hidden Markov model. </title> <journal> Journal of Computational Biology, </journal> <volume> 4(2) </volume> <pages> 119-126, </pages> <year> 1997. </year>
Reference-contexts: It can be optimized using standard dynamic programming methods. Early genfinding HMMs were EcoParse (for E. coli [42], also recently used in the annotation of the M. Tuberculosis genome [14]) and Xpound (for human) [70]. More recent programs are GeneMark-HMM (for bacterial genomes) [48] Veil <ref> [33] </ref> and HMMgene (for human) [41]. A somewhat more general class of probabilistic models, called generalized HMMs (GHMMs) or (hidden) semi-Markov models, have their roots in GeneParser [62], and were more fully developed in Genie [44, 57, 45] and then GenScan [9] (see also [72]). <p> Guigo, D. Kulp, M. Reese and the editor for helpful suggestions. URLs Computational genefinding bibliographies: http://linkage.rockefeller.edu/wli/gene/ http://www-hto.usc.edu/software/procrustes/fans_ref/ Genfinding Datasets: Single genes: ftp://www-hgc.lbl.gov/pub/genesets/ Annotated contigs: http://igs-server.cnrs-mrs.fr/banbury/index.html http://www.sanger.ac.uk/Projects/C_elegans/genefinding/ Some HMM-based genefinders genes: Genie [44, 57, 45]: http://www.cse.ucsc.edu/~dkulp/cgi-bin/genie GenScan [9]: http://CCR-081.mit.edu/GENSCAN.html 7 HMMgene [41]: http://www.cbs.dtu.dk/services/HMMgene/ GeneMark-HMM [48]: http://genemark.biology.gatech.edu/GeneMark/hmmchoice.html Veil <ref> [33] </ref>: http://www.cs.jhu.edu/labs/compbio/veil.html Some further genefinders: AAT [34]: http://genome.cs.mtu.edu/aat.html FGENEH [63]: http://dot.imgen.bcm.tmc.edu:9331/gene-finder/gf.html GENEID [31]: http://www.imim.es/GeneIdentification/Geneid/geneid_inp ut.html Genlang [60]: http://cbil.humgen.upenn.edu/~sdong/genlang_home.html GeneParser [62]: http://beagle.colorado.edu/~eesnyder/GeneParser.html Glimmer [59]: http://www.cs.jhu.edu/labs/compbio/glimmer.html Grail [73]: http://compbio.ornl.gov/ MZEF [77]: http://www.cshl.org/genefinder Procrustes [28]: http://www-hto.usc.edu/software/procrustes/ Full version of this review: http://www.cse.ucsc.edu/~haussler/pubs.html
Reference: [34] <author> X. Huang, M. Adams, H. Zhou, and A. Kerlavage. </author> <title> A tool for analyzing and annotating genomic sequences. </title> <journal> Genomics, </journal> <volume> 46 </volume> <pages> 37-45, </pages> <year> 1997. </year>
Reference-contexts: Examples are Genie [45], GeneID+ [10], GeneParser3 [62], and recent versions of Grail [75]. The program AAT <ref> [34] </ref> and new versions of Grail also take into account EST information [74]. Database homology has long been used as a post hoc method to validate gene predictions, but these systems were among the first to integrate database homology directly into the genefinding algorithm itself. <p> Reese and the editor for helpful suggestions. URLs Computational genefinding bibliographies: http://linkage.rockefeller.edu/wli/gene/ http://www-hto.usc.edu/software/procrustes/fans_ref/ Genfinding Datasets: Single genes: ftp://www-hgc.lbl.gov/pub/genesets/ Annotated contigs: http://igs-server.cnrs-mrs.fr/banbury/index.html http://www.sanger.ac.uk/Projects/C_elegans/genefinding/ Some HMM-based genefinders genes: Genie [44, 57, 45]: http://www.cse.ucsc.edu/~dkulp/cgi-bin/genie GenScan [9]: http://CCR-081.mit.edu/GENSCAN.html 7 HMMgene [41]: http://www.cbs.dtu.dk/services/HMMgene/ GeneMark-HMM [48]: http://genemark.biology.gatech.edu/GeneMark/hmmchoice.html Veil [33]: http://www.cs.jhu.edu/labs/compbio/veil.html Some further genefinders: AAT <ref> [34] </ref>: http://genome.cs.mtu.edu/aat.html FGENEH [63]: http://dot.imgen.bcm.tmc.edu:9331/gene-finder/gf.html GENEID [31]: http://www.imim.es/GeneIdentification/Geneid/geneid_inp ut.html Genlang [60]: http://cbil.humgen.upenn.edu/~sdong/genlang_home.html GeneParser [62]: http://beagle.colorado.edu/~eesnyder/GeneParser.html Glimmer [59]: http://www.cs.jhu.edu/labs/compbio/glimmer.html Grail [73]: http://compbio.ornl.gov/ MZEF [77]: http://www.cshl.org/genefinder Procrustes [28]: http://www-hto.usc.edu/software/procrustes/ Full version of this review: http://www.cse.ucsc.edu/~haussler/pubs.html
Reference: [35] <author> J. Jurka, P. Klonowski, V. Dagman, and P. Pelton. </author> <title> Censor a program for identification and elimination of repetitive elements from DNA sequences. </title> <journal> Computers and Chemistry, </journal> <volume> 20(1) </volume> <pages> 119-122, </pages> <year> 1996. </year>
Reference-contexts: sensors include sensors for CpG islands, which are regions that often occur near the beginnings of genes where the frequency of the dinucleotide CG is not as low as it typically is in the rest of the genome [4, 25, 47], and sensors for repetitive DNA, such as ALU sequences <ref> [36, 35, 51] </ref>. The latter sensors are often used as masks or filters that completely 2 remove the repetitive DNA, leaving the remaining DNA to be analyzed. 4 Integrated Gene Finding Methods Signal and content sensors alone cannot solve the genefinding problem.
Reference: [36] <author> J. Jurka, J. Walichiewicz, and A. J. Milosavljevic. </author> <title> Prototypic sequences for human repetitive DNA. </title> <journal> J. Mol. Evol., </journal> <volume> 35 </volume> <pages> 286-291, </pages> <year> 1992. </year>
Reference-contexts: sensors include sensors for CpG islands, which are regions that often occur near the beginnings of genes where the frequency of the dinucleotide CG is not as low as it typically is in the rest of the genome [4, 25, 47], and sensors for repetitive DNA, such as ALU sequences <ref> [36, 35, 51] </ref>. The latter sensors are often used as masks or filters that completely 2 remove the repetitive DNA, leaving the remaining DNA to be analyzed. 4 Integrated Gene Finding Methods Signal and content sensors alone cannot solve the genefinding problem.
Reference: [37] <author> T. Klinger and D. Brutlag. </author> <title> Detection of correlations in tRNA sequences with structural implications. </title> <editor> In L. Hunter, D. Searls, and J. Shavlik, editors, ISMB-93, </editor> <address> Menlo Park, 1993. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: Other statistical/pattern models besides neural networks, such as nonhomogeneous Markov models (a weight matrix where the distribution at position i depends on the residue at position i 1, sometimes called "WAM" models), decision trees, quadratic discriminant functions, and graphical models, have also been used as biosequence signal sensors <ref> [37, 76, 63, 15, 58, 1] </ref>.
Reference: [38] <author> N. Kolchanov et al. GenExpress: </author> <title> a computer system for description, analysis, and recognition of regulatory sequences in eukaryotic genome. </title> <booktitle> In Proceedings of the Fifth International Conference on Intelligent Systems for Molecular Biology, </booktitle> <pages> pages 95-104, </pages> <year> 1998. </year>
Reference-contexts: This implies, among other things, that future genefinders will need to explicitly take into account experimental data relating to differential expression, along with the other types of data we have discussed (see e.g. <ref> [38] </ref>). It may be anticipated that this task will occupy genefinding researchers for some years to come. Acknowledgments The author gratefully acknowledges the support of DOE grant DE-FG03-95ER6211, and thanks R. Guigo, D. Kulp, M. Reese and the editor for helpful suggestions.
Reference: [39] <author> M. Kozak. </author> <title> Interpreting cDNA sequences: some insights from studies on translation. </title> <journal> Mammalian Genome, </journal> <volume> 7 </volume> <pages> 563-574, </pages> <year> 1996. </year>
Reference-contexts: It presumably should not use codon statistics, frame consistency between exons, or lack of in-frame stop codons to predict overall gene structure, although there is some evidence that absence of early in-frame stop codons may be involved in biological start site selection <ref> [39] </ref>.
Reference: [40] <author> A. Krogh. </author> <title> Two methods for improving performace of a HMM and their application for gene finding. </title> <booktitle> In Proceedings, 5th International Conference on Intelligent Systems for Molecular Biology, </booktitle> <pages> pages 179-186, </pages> <year> 1997. </year> <month> 10 </month>
Reference-contexts: Given a large "training" DNA contig (or set of contigs) X and its correct state sequence annotation Q, we can find to maximize P (X; Qj) (the maximum likelihood approach), P (jX; Q) (the maximum a posteriori approach), or P (QjX; ) (the conditional maximum likelihood approach) <ref> [40] </ref>.
Reference: [41] <author> A. Krogh. </author> <title> Gene finding: putting the parts together. </title> <editor> In M. J. Bishop, editor, </editor> <title> Guide to Human Genome Computing, </title> <booktitle> chapter 11, </booktitle> <pages> pages 261-274. </pages> <publisher> Academic Press, </publisher> <address> 2nd edition, </address> <year> 1998. </year>
Reference-contexts: 1 Introduction Computational methodology for finding genes and other functional sites in genomic DNA has evolved significantly over the last 20 years. Excellent recent surveys have been given by Gelfand [27], Fickett [20, 21], Guigo [31], Claverie [13], Milanesi and Rogosin [50], and Krogh <ref> [41] </ref>. Extensive bibliographies are available at http://linkage.rockefeller.edu/wli/gene/ and http://www-hto.usc.edu/software/procrustes/fans_ref/. Here we give only a very brief overview. <p> A brief and lucid tutorial on this topic can be found in <ref> [41] </ref> and a more detailed exposition in [17]. Gelfand, et al, proposed a dynamic programming scheme, embodied in the genefinder GREAT [29], that calculates the set of all so-called Pareto-optimal gene structure predictions, which include the optimal predictions for a wide variety of different scoring functions. <p> Early genfinding HMMs were EcoParse (for E. coli [42], also recently used in the annotation of the M. Tuberculosis genome [14]) and Xpound (for human) [70]. More recent programs are GeneMark-HMM (for bacterial genomes) [48] Veil [33] and HMMgene (for human) <ref> [41] </ref>. A somewhat more general class of probabilistic models, called generalized HMMs (GHMMs) or (hidden) semi-Markov models, have their roots in GeneParser [62], and were more fully developed in Genie [44, 57, 45] and then GenScan [9] (see also [72]). The probabilistic approach has further advantages. <p> The primary reason is that they depend very strongly on the difficulty of the genes in the test set, and for some genefinders, on the homology overlap between the genes in the test set and those in the training set that is used to optimize the parameters of the models <ref> [31, 41] </ref>. The latter is a factor even when no homology is explicitly used by the genefinding method. To avoid this problem, it is best to compare genefinders by training and testing on the same genes, and to avoid homologies between genes used for training and testing. <p> Guigo, D. Kulp, M. Reese and the editor for helpful suggestions. URLs Computational genefinding bibliographies: http://linkage.rockefeller.edu/wli/gene/ http://www-hto.usc.edu/software/procrustes/fans_ref/ Genfinding Datasets: Single genes: ftp://www-hgc.lbl.gov/pub/genesets/ Annotated contigs: http://igs-server.cnrs-mrs.fr/banbury/index.html http://www.sanger.ac.uk/Projects/C_elegans/genefinding/ Some HMM-based genefinders genes: Genie [44, 57, 45]: http://www.cse.ucsc.edu/~dkulp/cgi-bin/genie GenScan [9]: http://CCR-081.mit.edu/GENSCAN.html 7 HMMgene <ref> [41] </ref>: http://www.cbs.dtu.dk/services/HMMgene/ GeneMark-HMM [48]: http://genemark.biology.gatech.edu/GeneMark/hmmchoice.html Veil [33]: http://www.cs.jhu.edu/labs/compbio/veil.html Some further genefinders: AAT [34]: http://genome.cs.mtu.edu/aat.html FGENEH [63]: http://dot.imgen.bcm.tmc.edu:9331/gene-finder/gf.html GENEID [31]: http://www.imim.es/GeneIdentification/Geneid/geneid_inp ut.html Genlang [60]: http://cbil.humgen.upenn.edu/~sdong/genlang_home.html GeneParser [62]: http://beagle.colorado.edu/~eesnyder/GeneParser.html Glimmer [59]: http://www.cs.jhu.edu/labs/compbio/glimmer.html Grail [73]: http://compbio.ornl.gov/ MZEF [77]: http://www.cshl.org/genefinder Procrustes [28]: http://www-hto.usc.edu/software/procrustes/ Full version of this review: http://www.cse.ucsc.edu/~haussler/pubs.html
Reference: [42] <author> A. Krogh, I. S. Mian, and D. Haussler. </author> <title> A Hidden Markov Model that finds genes in E. coli DNA. </title> <journal> NAR, </journal> <volume> 22 </volume> <pages> 4768-4778, </pages> <year> 1994. </year>
Reference-contexts: Equivalently, we can maximize log P (QjX; ). This is the score function that is optimized in a genefinding HMM. It can be optimized using standard dynamic programming methods. Early genfinding HMMs were EcoParse (for E. coli <ref> [42] </ref>, also recently used in the annotation of the M. Tuberculosis genome [14]) and Xpound (for human) [70]. More recent programs are GeneMark-HMM (for bacterial genomes) [48] Veil [33] and HMMgene (for human) [41].
Reference: [43] <author> D. Kulp and D. Haussler. </author> <title> Embedding HMMs: A Method for Recognizing Protein Homologs in DNA, </title> <note> 1997. http://www.ornl.gov/hgmis/publicat/97santa/infortoc.html. </note>
Reference-contexts: Nevertheless, in the presence of a very close homolog, Procrustes is an extremely effective gene finding method. Recent related methods, based on HMM models, have been developed by Birney and Durbin [5] and are currently being developed by Kulp <ref> [43] </ref>. In 1995, a number of different integrated genefinders were tested on a benchmark set of 570 vertebrate genes by Burset and Guigo [10].
Reference: [44] <author> D. Kulp, D. Haussler, M. Reese, and F. Eeckman. </author> <title> A generalized hidden Markov model for the recognition of human genes in DNA. </title> <booktitle> In ISMB-96, </booktitle> <pages> pages 134-142, </pages> <address> St. Louis, June 1996. </address> <publisher> AAAI Press. </publisher> <address> http://www.cse.ucsc.edu/~dkulp/cgi-bin/genie. </address>
Reference-contexts: A candidate gene structure is created by tracing a path in this figure from B to F. An HMM (GHMM) is defined by attaching stochastic models to each of the arcs and nodes. Figure taken from <ref> [44] </ref>. The advantage of HMMs is that, being probabilistic models, they define a natural score function. Let X denote the DNA sequence, Q denote a possible sequence of hidden states, one for each nucleotide in X, and denote the parameters of the HMM. <p> More recent programs are GeneMark-HMM (for bacterial genomes) [48] Veil [33] and HMMgene (for human) [41]. A somewhat more general class of probabilistic models, called generalized HMMs (GHMMs) or (hidden) semi-Markov models, have their roots in GeneParser [62], and were more fully developed in Genie <ref> [44, 57, 45] </ref> and then GenScan [9] (see also [72]). The probabilistic approach has further advantages. For example, for any given feature, such as a 5' splice site, and any position in the DNA sequence X, we can calculate the probability that that feature occurs at that position. <p> Acknowledgments The author gratefully acknowledges the support of DOE grant DE-FG03-95ER6211, and thanks R. Guigo, D. Kulp, M. Reese and the editor for helpful suggestions. URLs Computational genefinding bibliographies: http://linkage.rockefeller.edu/wli/gene/ http://www-hto.usc.edu/software/procrustes/fans_ref/ Genfinding Datasets: Single genes: ftp://www-hgc.lbl.gov/pub/genesets/ Annotated contigs: http://igs-server.cnrs-mrs.fr/banbury/index.html http://www.sanger.ac.uk/Projects/C_elegans/genefinding/ Some HMM-based genefinders genes: Genie <ref> [44, 57, 45] </ref>: http://www.cse.ucsc.edu/~dkulp/cgi-bin/genie GenScan [9]: http://CCR-081.mit.edu/GENSCAN.html 7 HMMgene [41]: http://www.cbs.dtu.dk/services/HMMgene/ GeneMark-HMM [48]: http://genemark.biology.gatech.edu/GeneMark/hmmchoice.html Veil [33]: http://www.cs.jhu.edu/labs/compbio/veil.html Some further genefinders: AAT [34]: http://genome.cs.mtu.edu/aat.html FGENEH [63]: http://dot.imgen.bcm.tmc.edu:9331/gene-finder/gf.html GENEID [31]: http://www.imim.es/GeneIdentification/Geneid/geneid_inp ut.html Genlang [60]: http://cbil.humgen.upenn.edu/~sdong/genlang_home.html GeneParser [62]: http://beagle.colorado.edu/~eesnyder/GeneParser.html Glimmer [59]: http://www.cs.jhu.edu/labs/compbio/glimmer.html Grail [73]: http://compbio.ornl.gov/ MZEF [77]: http://www.cshl.org/genefinder Procrustes [28]: http://www-hto.usc.edu/software/procrustes/ Full version of
Reference: [45] <author> D. Kulp, D. Haussler, M. G. Reese, and F. H. Eeckman. </author> <title> Integrating database homology in a probabilistic gene structure model. </title> <editor> In R. B. Altman, A. K. Dunker, L. Hunter, and T. E. Klein, editors, </editor> <booktitle> Proceedings of the Pacific Symposium on Biocomputing, </booktitle> <pages> pages 232-244. </pages> <publisher> World Scientific, </publisher> <address> New York, </address> <year> 1997. </year>
Reference-contexts: More recent programs are GeneMark-HMM (for bacterial genomes) [48] Veil [33] and HMMgene (for human) [41]. A somewhat more general class of probabilistic models, called generalized HMMs (GHMMs) or (hidden) semi-Markov models, have their roots in GeneParser [62], and were more fully developed in Genie <ref> [44, 57, 45] </ref> and then GenScan [9] (see also [72]). The probabilistic approach has further advantages. For example, for any given feature, such as a 5' splice site, and any position in the DNA sequence X, we can calculate the probability that that feature occurs at that position. <p> Current state-of-the-art genefinding systems combine multiple statistical measures with database homology searches, obtained by translating the DNA to protein in all possible reading frames, and then searching the protein databases for similar protein sequences. Examples are Genie <ref> [45] </ref>, GeneID+ [10], GeneParser3 [62], and recent versions of Grail [75]. The program AAT [34] and new versions of Grail also take into account EST information [74]. <p> Acknowledgments The author gratefully acknowledges the support of DOE grant DE-FG03-95ER6211, and thanks R. Guigo, D. Kulp, M. Reese and the editor for helpful suggestions. URLs Computational genefinding bibliographies: http://linkage.rockefeller.edu/wli/gene/ http://www-hto.usc.edu/software/procrustes/fans_ref/ Genfinding Datasets: Single genes: ftp://www-hgc.lbl.gov/pub/genesets/ Annotated contigs: http://igs-server.cnrs-mrs.fr/banbury/index.html http://www.sanger.ac.uk/Projects/C_elegans/genefinding/ Some HMM-based genefinders genes: Genie <ref> [44, 57, 45] </ref>: http://www.cse.ucsc.edu/~dkulp/cgi-bin/genie GenScan [9]: http://CCR-081.mit.edu/GENSCAN.html 7 HMMgene [41]: http://www.cbs.dtu.dk/services/HMMgene/ GeneMark-HMM [48]: http://genemark.biology.gatech.edu/GeneMark/hmmchoice.html Veil [33]: http://www.cs.jhu.edu/labs/compbio/veil.html Some further genefinders: AAT [34]: http://genome.cs.mtu.edu/aat.html FGENEH [63]: http://dot.imgen.bcm.tmc.edu:9331/gene-finder/gf.html GENEID [31]: http://www.imim.es/GeneIdentification/Geneid/geneid_inp ut.html Genlang [60]: http://cbil.humgen.upenn.edu/~sdong/genlang_home.html GeneParser [62]: http://beagle.colorado.edu/~eesnyder/GeneParser.html Glimmer [59]: http://www.cs.jhu.edu/labs/compbio/glimmer.html Grail [73]: http://compbio.ornl.gov/ MZEF [77]: http://www.cshl.org/genefinder Procrustes [28]: http://www-hto.usc.edu/software/procrustes/ Full version of
Reference: [46] <author> A. Lapedes, C. Barnes, C. Burks, R. Farber, and K. Sirotkin. </author> <title> Application of neural networks and other machine learning algorithms to DNA sequence analysis. </title> <editor> In G. Bell and T. Marr, editors, </editor> <title> Computers and DNA, </title> <booktitle> SFI Studies in the Sciences of Complexity, volume VII, </booktitle> <pages> pages 157-182. </pages> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: Weight matrices can also be viewed as a simple type of neural network, sometimes called a perceptron [67, 66]. Many investigators have also applied more complex neural networks, such as multi-layer feed-forward networks and time delay networks, to various DNA signal recognition problems <ref> [8, 19, 49, 53, 54, 46, 32] </ref>. Multi-layer nets have the ability to capture statistical dependency between the residues at different positions in a site, an ability that perceptrons (and hence weight matrices) lack.
Reference: [47] <author> F. Larsen, R. Gundersen, R. Lopez, and H. Prydz. </author> <title> CpG islands as gene markers in the human genome. </title> <journal> Genomics, </journal> <volume> 13 </volume> <pages> 1095-1107, </pages> <year> 1992. </year>
Reference-contexts: Other content sensors include sensors for CpG islands, which are regions that often occur near the beginnings of genes where the frequency of the dinucleotide CG is not as low as it typically is in the rest of the genome <ref> [4, 25, 47] </ref>, and sensors for repetitive DNA, such as ALU sequences [36, 35, 51].
Reference: [48] <author> A. V. Lukashin and M. Borodovsky. Genemark.hmm: </author> <title> new solutions for gene finding. </title> <journal> Nucleic Acids Research, </journal> <volume> 26(4) </volume> <pages> 1107-1115, </pages> <year> 1998. </year>
Reference-contexts: It can be optimized using standard dynamic programming methods. Early genfinding HMMs were EcoParse (for E. coli [42], also recently used in the annotation of the M. Tuberculosis genome [14]) and Xpound (for human) [70]. More recent programs are GeneMark-HMM (for bacterial genomes) <ref> [48] </ref> Veil [33] and HMMgene (for human) [41]. A somewhat more general class of probabilistic models, called generalized HMMs (GHMMs) or (hidden) semi-Markov models, have their roots in GeneParser [62], and were more fully developed in Genie [44, 57, 45] and then GenScan [9] (see also [72]). <p> Guigo, D. Kulp, M. Reese and the editor for helpful suggestions. URLs Computational genefinding bibliographies: http://linkage.rockefeller.edu/wli/gene/ http://www-hto.usc.edu/software/procrustes/fans_ref/ Genfinding Datasets: Single genes: ftp://www-hgc.lbl.gov/pub/genesets/ Annotated contigs: http://igs-server.cnrs-mrs.fr/banbury/index.html http://www.sanger.ac.uk/Projects/C_elegans/genefinding/ Some HMM-based genefinders genes: Genie [44, 57, 45]: http://www.cse.ucsc.edu/~dkulp/cgi-bin/genie GenScan [9]: http://CCR-081.mit.edu/GENSCAN.html 7 HMMgene [41]: http://www.cbs.dtu.dk/services/HMMgene/ GeneMark-HMM <ref> [48] </ref>: http://genemark.biology.gatech.edu/GeneMark/hmmchoice.html Veil [33]: http://www.cs.jhu.edu/labs/compbio/veil.html Some further genefinders: AAT [34]: http://genome.cs.mtu.edu/aat.html FGENEH [63]: http://dot.imgen.bcm.tmc.edu:9331/gene-finder/gf.html GENEID [31]: http://www.imim.es/GeneIdentification/Geneid/geneid_inp ut.html Genlang [60]: http://cbil.humgen.upenn.edu/~sdong/genlang_home.html GeneParser [62]: http://beagle.colorado.edu/~eesnyder/GeneParser.html Glimmer [59]: http://www.cs.jhu.edu/labs/compbio/glimmer.html Grail [73]: http://compbio.ornl.gov/ MZEF [77]: http://www.cshl.org/genefinder Procrustes [28]: http://www-hto.usc.edu/software/procrustes/ Full version of this review: http://www.cse.ucsc.edu/~haussler/pubs.html
Reference: [49] <author> S. Matis, Y. Xu, M. B. Shah, D. Buley, X. Guan, J. R. Einstein, R. J. Mural, and E. C. Uberbacher. </author> <title> Detection of RNA Polymerase II Promoters and Polyadenylation Sites in Human DNA Sequence. </title> <journal> Computers and Chemistry, </journal> <volume> 20 </volume> <pages> 135-140, </pages> <year> 1995. </year>
Reference-contexts: Weight matrices can also be viewed as a simple type of neural network, sometimes called a perceptron [67, 66]. Many investigators have also applied more complex neural networks, such as multi-layer feed-forward networks and time delay networks, to various DNA signal recognition problems <ref> [8, 19, 49, 53, 54, 46, 32] </ref>. Multi-layer nets have the ability to capture statistical dependency between the residues at different positions in a site, an ability that perceptrons (and hence weight matrices) lack.
Reference: [50] <author> L. Milanesi and I. Rogozin. </author> <title> Prediction of human gene structure. </title> <editor> In M. J. Bishop, editor, </editor> <title> Guide to Human Genome Computing. </title> <publisher> Academic Press, </publisher> <address> 2nd edition, </address> <year> 1998. </year>
Reference-contexts: 1 Introduction Computational methodology for finding genes and other functional sites in genomic DNA has evolved significantly over the last 20 years. Excellent recent surveys have been given by Gelfand [27], Fickett [20, 21], Guigo [31], Claverie [13], Milanesi and Rogosin <ref> [50] </ref>, and Krogh [41]. Extensive bibliographies are available at http://linkage.rockefeller.edu/wli/gene/ and http://www-hto.usc.edu/software/procrustes/fans_ref/. Here we give only a very brief overview.
Reference: [51] <author> A. Milosavljevic and J. Jurka. </author> <title> Discovering simple DNA sequences by the algorithmic similarity method. </title> <journal> CABIOS, </journal> <volume> 9(4) </volume> <pages> 407-411, </pages> <year> 1993. </year>
Reference-contexts: sensors include sensors for CpG islands, which are regions that often occur near the beginnings of genes where the frequency of the dinucleotide CG is not as low as it typically is in the rest of the genome [4, 25, 47], and sensors for repetitive DNA, such as ALU sequences <ref> [36, 35, 51] </ref>. The latter sensors are often used as masks or filters that completely 2 remove the repetitive DNA, leaving the remaining DNA to be analyzed. 4 Integrated Gene Finding Methods Signal and content sensors alone cannot solve the genefinding problem.
Reference: [52] <author> R. Nagel, A. Lancaster, and A. Zahler. </author> <title> Specific binding of an exonic splicing enhancer by the pre-mrna splicing factor srp55. </title> <journal> RNA, </journal> <volume> 4 </volume> <pages> 11-23, </pages> <year> 1998. </year>
Reference-contexts: One is the issue of alternative splicing. No currently available genefinders handle alternative splicing in an effective manner. Intimately tied with this issue is that of gene regulation. The abundant regulatory signals flanking genes, and appearing in introns (and sometimes in exons <ref> [52] </ref>), combined with regulatory proteins specific to the cell type and cell state, determine the expression of the gene. Gene annotation is not complete until these signals are identified, and the cellular conditions that give rise to differing expression levels for different transcripts are worked out.
Reference: [53] <author> C. M. O'Neill. </author> <title> Training back-propagation neural networks to define and detect DNA-binding sites. Nucl. </title> <journal> Acids Res., </journal> <volume> 19 </volume> <pages> 313-318, </pages> <year> 1991. </year>
Reference-contexts: Weight matrices can also be viewed as a simple type of neural network, sometimes called a perceptron [67, 66]. Many investigators have also applied more complex neural networks, such as multi-layer feed-forward networks and time delay networks, to various DNA signal recognition problems <ref> [8, 19, 49, 53, 54, 46, 32] </ref>. Multi-layer nets have the ability to capture statistical dependency between the residues at different positions in a site, an ability that perceptrons (and hence weight matrices) lack.
Reference: [54] <author> C. M. O'Neill. </author> <title> Escherichia coli promoters: neural networks develop distinct descriptions in learning to search for promoters of different spacing classes. Nucl. </title> <journal> Acids Res., </journal> <volume> 20 </volume> <pages> 3471-3477, </pages> <year> 1992. </year>
Reference-contexts: Weight matrices can also be viewed as a simple type of neural network, sometimes called a perceptron [67, 66]. Many investigators have also applied more complex neural networks, such as multi-layer feed-forward networks and time delay networks, to various DNA signal recognition problems <ref> [8, 19, 49, 53, 54, 46, 32] </ref>. Multi-layer nets have the ability to capture statistical dependency between the residues at different positions in a site, an ability that perceptrons (and hence weight matrices) lack.
Reference: [55] <author> G. R. and J. Fickett. </author> <title> Distinctive sequence features in protein coding genic non-coding, and intergenic human DNA. </title> <journal> JMB, </journal> <volume> 253(1) </volume> <pages> 51-60, </pages> <month> October 13, </month> <year> 1995. </year>
Reference-contexts: It is also important to consider local compositional biases, as the codon preferences are quite different between genes in G+C rich regions and genes in A+T rich regions <ref> [55, 18, 7] </ref>. While many other measures of coding potential have been investigated (Fickett tested 19 different measures, which he took from the literature [21]), few others have been proven to be as effective.
Reference: [56] <author> M. Reese and F. Eeckman. </author> <title> Novel neural network prediction systems for human promoters and splice sites. In Gene-Finding and Gene Structure Prediction Workshop, </title> <year> 1995. </year>
Reference-contexts: Time delay neural networks also allow insertions and deletions while evaluating a match to a prospective site, whereas weight matrices and feed-forward neural networks do not <ref> [56] </ref>.
Reference: [57] <author> M. G. Reese, F. H. Eeckman, D. Kulp, and D. Haussler. </author> <title> Improved splice site detection in genie. </title> <journal> Jour. Comp. Biol., </journal> <volume> 4 </volume> <pages> 311-323, </pages> <year> 1997. </year>
Reference-contexts: More recent programs are GeneMark-HMM (for bacterial genomes) [48] Veil [33] and HMMgene (for human) [41]. A somewhat more general class of probabilistic models, called generalized HMMs (GHMMs) or (hidden) semi-Markov models, have their roots in GeneParser [62], and were more fully developed in Genie <ref> [44, 57, 45] </ref> and then GenScan [9] (see also [72]). The probabilistic approach has further advantages. For example, for any given feature, such as a 5' splice site, and any position in the DNA sequence X, we can calculate the probability that that feature occurs at that position. <p> Acknowledgments The author gratefully acknowledges the support of DOE grant DE-FG03-95ER6211, and thanks R. Guigo, D. Kulp, M. Reese and the editor for helpful suggestions. URLs Computational genefinding bibliographies: http://linkage.rockefeller.edu/wli/gene/ http://www-hto.usc.edu/software/procrustes/fans_ref/ Genfinding Datasets: Single genes: ftp://www-hgc.lbl.gov/pub/genesets/ Annotated contigs: http://igs-server.cnrs-mrs.fr/banbury/index.html http://www.sanger.ac.uk/Projects/C_elegans/genefinding/ Some HMM-based genefinders genes: Genie <ref> [44, 57, 45] </ref>: http://www.cse.ucsc.edu/~dkulp/cgi-bin/genie GenScan [9]: http://CCR-081.mit.edu/GENSCAN.html 7 HMMgene [41]: http://www.cbs.dtu.dk/services/HMMgene/ GeneMark-HMM [48]: http://genemark.biology.gatech.edu/GeneMark/hmmchoice.html Veil [33]: http://www.cs.jhu.edu/labs/compbio/veil.html Some further genefinders: AAT [34]: http://genome.cs.mtu.edu/aat.html FGENEH [63]: http://dot.imgen.bcm.tmc.edu:9331/gene-finder/gf.html GENEID [31]: http://www.imim.es/GeneIdentification/Geneid/geneid_inp ut.html Genlang [60]: http://cbil.humgen.upenn.edu/~sdong/genlang_home.html GeneParser [62]: http://beagle.colorado.edu/~eesnyder/GeneParser.html Glimmer [59]: http://www.cs.jhu.edu/labs/compbio/glimmer.html Grail [73]: http://compbio.ornl.gov/ MZEF [77]: http://www.cshl.org/genefinder Procrustes [28]: http://www-hto.usc.edu/software/procrustes/ Full version of
Reference: [58] <author> S. L. Salzberg. </author> <title> Locating protein coding regions in human DNA using a decision tree algorithm. </title> <journal> Jour. Comp. Biol., </journal> <volume> 2 </volume> <pages> 473-485, </pages> <year> 1995. </year>
Reference-contexts: Other statistical/pattern models besides neural networks, such as nonhomogeneous Markov models (a weight matrix where the distribution at position i depends on the residue at position i 1, sometimes called "WAM" models), decision trees, quadratic discriminant functions, and graphical models, have also been used as biosequence signal sensors <ref> [37, 76, 63, 15, 58, 1] </ref>.
Reference: [59] <author> S. L. Salzberg, A. L. Delcher, , S. Kasif, and O. White. </author> <title> Microbial gene identification using interpolated Markov models. </title> <journal> Nucleic Acids Research, </journal> <volume> 26(2) </volume> <pages> 544-548, </pages> <year> 1998. </year>
Reference-contexts: Datasets: Single genes: ftp://www-hgc.lbl.gov/pub/genesets/ Annotated contigs: http://igs-server.cnrs-mrs.fr/banbury/index.html http://www.sanger.ac.uk/Projects/C_elegans/genefinding/ Some HMM-based genefinders genes: Genie [44, 57, 45]: http://www.cse.ucsc.edu/~dkulp/cgi-bin/genie GenScan [9]: http://CCR-081.mit.edu/GENSCAN.html 7 HMMgene [41]: http://www.cbs.dtu.dk/services/HMMgene/ GeneMark-HMM [48]: http://genemark.biology.gatech.edu/GeneMark/hmmchoice.html Veil [33]: http://www.cs.jhu.edu/labs/compbio/veil.html Some further genefinders: AAT [34]: http://genome.cs.mtu.edu/aat.html FGENEH [63]: http://dot.imgen.bcm.tmc.edu:9331/gene-finder/gf.html GENEID [31]: http://www.imim.es/GeneIdentification/Geneid/geneid_inp ut.html Genlang [60]: http://cbil.humgen.upenn.edu/~sdong/genlang_home.html GeneParser [62]: http://beagle.colorado.edu/~eesnyder/GeneParser.html Glimmer <ref> [59] </ref>: http://www.cs.jhu.edu/labs/compbio/glimmer.html Grail [73]: http://compbio.ornl.gov/ MZEF [77]: http://www.cshl.org/genefinder Procrustes [28]: http://www-hto.usc.edu/software/procrustes/ Full version of this review: http://www.cse.ucsc.edu/~haussler/pubs.html
Reference: [60] <author> D. B. </author> <title> Searls. The computational linguistics of biological sequences. </title> <editor> In L. Hunter, editor, </editor> <booktitle> Artificial Intelligence and Molecular Biology, chapter 2, </booktitle> <pages> pages 47-120. </pages> <publisher> AAAI Press, </publisher> <year> 1993. </year>
Reference-contexts: Indeed this parsing metaphor can be pushed deeper. Searls <ref> [60, 16] </ref> was the first major proponent of describing gene structure in linguistic terms using a formal grammar. <p> Computational genefinding bibliographies: http://linkage.rockefeller.edu/wli/gene/ http://www-hto.usc.edu/software/procrustes/fans_ref/ Genfinding Datasets: Single genes: ftp://www-hgc.lbl.gov/pub/genesets/ Annotated contigs: http://igs-server.cnrs-mrs.fr/banbury/index.html http://www.sanger.ac.uk/Projects/C_elegans/genefinding/ Some HMM-based genefinders genes: Genie [44, 57, 45]: http://www.cse.ucsc.edu/~dkulp/cgi-bin/genie GenScan [9]: http://CCR-081.mit.edu/GENSCAN.html 7 HMMgene [41]: http://www.cbs.dtu.dk/services/HMMgene/ GeneMark-HMM [48]: http://genemark.biology.gatech.edu/GeneMark/hmmchoice.html Veil [33]: http://www.cs.jhu.edu/labs/compbio/veil.html Some further genefinders: AAT [34]: http://genome.cs.mtu.edu/aat.html FGENEH [63]: http://dot.imgen.bcm.tmc.edu:9331/gene-finder/gf.html GENEID [31]: http://www.imim.es/GeneIdentification/Geneid/geneid_inp ut.html Genlang <ref> [60] </ref>: http://cbil.humgen.upenn.edu/~sdong/genlang_home.html GeneParser [62]: http://beagle.colorado.edu/~eesnyder/GeneParser.html Glimmer [59]: http://www.cs.jhu.edu/labs/compbio/glimmer.html Grail [73]: http://compbio.ornl.gov/ MZEF [77]: http://www.cshl.org/genefinder Procrustes [28]: http://www-hto.usc.edu/software/procrustes/ Full version of this review: http://www.cse.ucsc.edu/~haussler/pubs.html
Reference: [61] <author> T. F. Smith and M. S. Waterman. </author> <title> Comparison of bio-sequences. </title> <journal> Adv. Appl. Math, </journal> <volume> 2 </volume> <pages> 482-489, </pages> <year> 1981. </year>
Reference-contexts: This approach has been taken to its extreme limit in a genefinding program developed by Gelfand, Mironov, and Pevzner [28]. This system, called Procrustes, requires the user to provide a close protein homolog of the gene to be predicted. Then a "spliced alignment" algorithm, similar to a Smith-Waterman <ref> [61] </ref> alignment, is used to derive a putative gene structure by aligning the DNA to the homolog. The major disadvantage to this method is the requirement of a close homolog. It is often the case that homologs are unknown or are remote, in which case this system would be inappropriate.
Reference: [62] <author> E. Snyder and G. Stormo. </author> <title> Indentification of protein coding regions in genomic DNA. </title> <journal> JMB, </journal> <volume> 248 </volume> <pages> 1-18, </pages> <year> 1995. </year>
Reference-contexts: Gelfand, et al, proposed a dynamic programming scheme, embodied in the genefinder GREAT [29], that calculates the set of all so-called Pareto-optimal gene structure predictions, which include the optimal predictions for a wide variety of different scoring functions. Dynamic programming methods are also used in Grail II [73], GeneParser <ref> [62] </ref>, FGENEH [63], and recent versions of GeneID [31]. Dynamic programming methods find the candidate gene structure with the best overall score. The key to success in these methods is developing the right score function. <p> Tuberculosis genome [14]) and Xpound (for human) [70]. More recent programs are GeneMark-HMM (for bacterial genomes) [48] Veil [33] and HMMgene (for human) [41]. A somewhat more general class of probabilistic models, called generalized HMMs (GHMMs) or (hidden) semi-Markov models, have their roots in GeneParser <ref> [62] </ref>, and were more fully developed in Genie [44, 57, 45] and then GenScan [9] (see also [72]). The probabilistic approach has further advantages. <p> If we do this for separately for each feature of our overall predicted gene structure, then this gives us a kind of individual "confidence" value for each part of our prediction. GeneParser <ref> [62] </ref> pioneered this methodology (see further theoretical discussion in [68]), and it is used to give highly accurate confidence values for predicted exons in Genscan [9]. In addition, the probabilistic formulation provides various new ways to estimate the parameters of the gene-finding model. <p> Current state-of-the-art genefinding systems combine multiple statistical measures with database homology searches, obtained by translating the DNA to protein in all possible reading frames, and then searching the protein databases for similar protein sequences. Examples are Genie [45], GeneID+ [10], GeneParser3 <ref> [62] </ref>, and recent versions of Grail [75]. The program AAT [34] and new versions of Grail also take into account EST information [74]. <p> http://linkage.rockefeller.edu/wli/gene/ http://www-hto.usc.edu/software/procrustes/fans_ref/ Genfinding Datasets: Single genes: ftp://www-hgc.lbl.gov/pub/genesets/ Annotated contigs: http://igs-server.cnrs-mrs.fr/banbury/index.html http://www.sanger.ac.uk/Projects/C_elegans/genefinding/ Some HMM-based genefinders genes: Genie [44, 57, 45]: http://www.cse.ucsc.edu/~dkulp/cgi-bin/genie GenScan [9]: http://CCR-081.mit.edu/GENSCAN.html 7 HMMgene [41]: http://www.cbs.dtu.dk/services/HMMgene/ GeneMark-HMM [48]: http://genemark.biology.gatech.edu/GeneMark/hmmchoice.html Veil [33]: http://www.cs.jhu.edu/labs/compbio/veil.html Some further genefinders: AAT [34]: http://genome.cs.mtu.edu/aat.html FGENEH [63]: http://dot.imgen.bcm.tmc.edu:9331/gene-finder/gf.html GENEID [31]: http://www.imim.es/GeneIdentification/Geneid/geneid_inp ut.html Genlang [60]: http://cbil.humgen.upenn.edu/~sdong/genlang_home.html GeneParser <ref> [62] </ref>: http://beagle.colorado.edu/~eesnyder/GeneParser.html Glimmer [59]: http://www.cs.jhu.edu/labs/compbio/glimmer.html Grail [73]: http://compbio.ornl.gov/ MZEF [77]: http://www.cshl.org/genefinder Procrustes [28]: http://www-hto.usc.edu/software/procrustes/ Full version of this review: http://www.cse.ucsc.edu/~haussler/pubs.html
Reference: [63] <author> V. Solovyev, S. A., and C. Lawrence. </author> <title> Predicting internal exons by oligonucleotide composition and discriminant analysis of splicable open reading frames. Nucl. </title> <journal> Acids Res., </journal> <volume> 22 </volume> <pages> 5156-5163, </pages> <year> 1994. </year>
Reference-contexts: Other statistical/pattern models besides neural networks, such as nonhomogeneous Markov models (a weight matrix where the distribution at position i depends on the residue at position i 1, sometimes called "WAM" models), decision trees, quadratic discriminant functions, and graphical models, have also been used as biosequence signal sensors <ref> [37, 76, 63, 15, 58, 1] </ref>. <p> Dynamic programming methods are also used in Grail II [73], GeneParser [62], FGENEH <ref> [63] </ref>, and recent versions of GeneID [31]. Dynamic programming methods find the candidate gene structure with the best overall score. The key to success in these methods is developing the right score function. <p> URLs Computational genefinding bibliographies: http://linkage.rockefeller.edu/wli/gene/ http://www-hto.usc.edu/software/procrustes/fans_ref/ Genfinding Datasets: Single genes: ftp://www-hgc.lbl.gov/pub/genesets/ Annotated contigs: http://igs-server.cnrs-mrs.fr/banbury/index.html http://www.sanger.ac.uk/Projects/C_elegans/genefinding/ Some HMM-based genefinders genes: Genie [44, 57, 45]: http://www.cse.ucsc.edu/~dkulp/cgi-bin/genie GenScan [9]: http://CCR-081.mit.edu/GENSCAN.html 7 HMMgene [41]: http://www.cbs.dtu.dk/services/HMMgene/ GeneMark-HMM [48]: http://genemark.biology.gatech.edu/GeneMark/hmmchoice.html Veil [33]: http://www.cs.jhu.edu/labs/compbio/veil.html Some further genefinders: AAT [34]: http://genome.cs.mtu.edu/aat.html FGENEH <ref> [63] </ref>: http://dot.imgen.bcm.tmc.edu:9331/gene-finder/gf.html GENEID [31]: http://www.imim.es/GeneIdentification/Geneid/geneid_inp ut.html Genlang [60]: http://cbil.humgen.upenn.edu/~sdong/genlang_home.html GeneParser [62]: http://beagle.colorado.edu/~eesnyder/GeneParser.html Glimmer [59]: http://www.cs.jhu.edu/labs/compbio/glimmer.html Grail [73]: http://compbio.ornl.gov/ MZEF [77]: http://www.cshl.org/genefinder Procrustes [28]: http://www-hto.usc.edu/software/procrustes/ Full version of this review: http://www.cse.ucsc.edu/~haussler/pubs.html
Reference: [64] <author> R. Staden. </author> <title> Computer methods to locate signals in nucleic acid sequences. </title> <journal> NAR, </journal> <volume> 12 </volume> <pages> 505-519, </pages> <year> 1984. </year>
Reference-contexts: Local sites such as these are called signals and methods for detecting them may be called signal sensors. Genomic DNA signals can be contrasted with extended and variable length regions such as exons and introns, which are recognized by different methods that may be called content sensors <ref> [64, 65] </ref>. 2 Signal Sensors The most basic signal sensor is a simple consensus sequence or an expression that describes a consensus sequence along with allowable variations, such as a PROSITE expression [66, 2]. <p> More sensitive sensors can be designed using weight matrices in place of the consensus, in which each position in the pattern allows a match to any residue, but different costs are associated with matching each residue in each position <ref> [64, 67, 66, 3, 12] </ref>. The score returned 1 by a weight matrix sensor for a candidate site is the sum of the costs of the individual residue matches over that site. If this score exceeds a given threshold, the candidate site is predicted to be a true site.
Reference: [65] <author> R. Staden. </author> <title> Finding protein coding regions in genomic sequences. </title> <booktitle> Methods in Enzymology, </booktitle> <volume> 183 </volume> <pages> 163-180, </pages> <year> 1990. </year>
Reference-contexts: Local sites such as these are called signals and methods for detecting them may be called signal sensors. Genomic DNA signals can be contrasted with extended and variable length regions such as exons and introns, which are recognized by different methods that may be called content sensors <ref> [64, 65] </ref>. 2 Signal Sensors The most basic signal sensor is a simple consensus sequence or an expression that describes a consensus sequence along with allowable variations, such as a PROSITE expression [66, 2].
Reference: [66] <author> G. Stormo. </author> <title> Consensus patterns in DNA. </title> <booktitle> Methods in Enzymology, </booktitle> <volume> 183 </volume> <pages> 211-220, </pages> <year> 1990. </year>
Reference-contexts: regions such as exons and introns, which are recognized by different methods that may be called content sensors [64, 65]. 2 Signal Sensors The most basic signal sensor is a simple consensus sequence or an expression that describes a consensus sequence along with allowable variations, such as a PROSITE expression <ref> [66, 2] </ref>. More sensitive sensors can be designed using weight matrices in place of the consensus, in which each position in the pattern allows a match to any residue, but different costs are associated with matching each residue in each position [64, 67, 66, 3, 12]. <p> More sensitive sensors can be designed using weight matrices in place of the consensus, in which each position in the pattern allows a match to any residue, but different costs are associated with matching each residue in each position <ref> [64, 67, 66, 3, 12] </ref>. The score returned 1 by a weight matrix sensor for a candidate site is the sum of the costs of the individual residue matches over that site. If this score exceeds a given threshold, the candidate site is predicted to be a true site. <p> A mathematically equivalent interpretation of the score is that it is the discrimination energy for site recognition [3]. Weight matrices can also be viewed as a simple type of neural network, sometimes called a perceptron <ref> [67, 66] </ref>. Many investigators have also applied more complex neural networks, such as multi-layer feed-forward networks and time delay networks, to various DNA signal recognition problems [8, 19, 49, 53, 54, 46, 32].
Reference: [67] <author> G. D. Stormo. </author> <title> Computer methods for analyzing sequence recognition of nucleic acids. Annu. </title> <journal> Rev. Biophys. Biophys. Chem., </journal> <volume> 17 </volume> <pages> 241-263, </pages> <year> 1988. </year>
Reference-contexts: More sensitive sensors can be designed using weight matrices in place of the consensus, in which each position in the pattern allows a match to any residue, but different costs are associated with matching each residue in each position <ref> [64, 67, 66, 3, 12] </ref>. The score returned 1 by a weight matrix sensor for a candidate site is the sum of the costs of the individual residue matches over that site. If this score exceeds a given threshold, the candidate site is predicted to be a true site. <p> A mathematically equivalent interpretation of the score is that it is the discrimination energy for site recognition [3]. Weight matrices can also be viewed as a simple type of neural network, sometimes called a perceptron <ref> [67, 66] </ref>. Many investigators have also applied more complex neural networks, such as multi-layer feed-forward networks and time delay networks, to various DNA signal recognition problems [8, 19, 49, 53, 54, 46, 32].
Reference: [68] <author> G. D. Stormo and D. Haussler. </author> <title> Optimally parsing a sequence into different classes based on multiple types of information. </title> <booktitle> In ISMB-94, </booktitle> <address> Menlo Park, CA, Aug. 1994. </address> <publisher> AAAI/MIT Press. </publisher>
Reference-contexts: If we do this for separately for each feature of our overall predicted gene structure, then this gives us a kind of individual "confidence" value for each part of our prediction. GeneParser [62] pioneered this methodology (see further theoretical discussion in <ref> [68] </ref>), and it is used to give highly accurate confidence values for predicted exons in Genscan [9]. In addition, the probabilistic formulation provides various new ways to estimate the parameters of the gene-finding model.
Reference: [69] <author> J. Sulston et al. The C. </author> <title> elegans genome sequencing project: A beginning. </title> <journal> Nature, </journal> <volume> 356 </volume> <pages> 37-41, </pages> <year> 1992. </year>
Reference-contexts: His genefinding program, GenLang, was one of the earliest integrated genefinders, following on the pioneering work of Gelfand [26], Gelfand and Roytberg [30], Fields and Soderlund [24], and Phil Green's GeneFinder <ref> [69] </ref>, and was one of the inspirations for significant later work (e.g. [6, 5] and the HMM methods described below.) Nearly all integrated genefinders use dynamic programming to combine candidate exons and other scored regions and sites into an complete gene prediction with maximal total score.
Reference: [70] <author> A. Thomas and M. Skolnick. </author> <title> A probabilistic model for detecting coding regions in DNA sequences. </title> <journal> IMA Journal of Mathematics Applied in Medicine and Biology, </journal> <volume> 11 </volume> <pages> 149-160, </pages> <year> 1994. </year>
Reference-contexts: This is the score function that is optimized in a genefinding HMM. It can be optimized using standard dynamic programming methods. Early genfinding HMMs were EcoParse (for E. coli [42], also recently used in the annotation of the M. Tuberculosis genome [14]) and Xpound (for human) <ref> [70] </ref>. More recent programs are GeneMark-HMM (for bacterial genomes) [48] Veil [33] and HMMgene (for human) [41].
Reference: [71] <author> E. C. Uberbacher and R. J. </author> <title> Mural. Locating protein-coding regions in human DNA sequences by a multiple sensor-neural network approach. </title> <journal> PNAS, </journal> <volume> 88 </volume> <pages> 11261-11265, </pages> <year> 1991. </year>
Reference-contexts: However, combinations of several measures can be effective, as in the popular GRAIL exon detector, in which several coding measures are combined along with base composition and signal sensor output for flanking splice sites, and fed into a neural net to predict exons <ref> [71] </ref>.
Reference: [72] <author> T. Wu. </author> <title> A segment-based dynamic programing algorithm for predicting genes. </title> <journal> Jour. Comp. Biol., </journal> <volume> 3 </volume> <pages> 375-394, </pages> <year> 1996. </year>
Reference-contexts: A somewhat more general class of probabilistic models, called generalized HMMs (GHMMs) or (hidden) semi-Markov models, have their roots in GeneParser [62], and were more fully developed in Genie [44, 57, 45] and then GenScan [9] (see also <ref> [72] </ref>). The probabilistic approach has further advantages. For example, for any given feature, such as a 5' splice site, and any position in the DNA sequence X, we can calculate the probability that that feature occurs at that position.
Reference: [73] <author> Y. Xu, J. R. Einstein, M. Shah, and E. C. Uberbacher. </author> <title> An improved system for exon recognition and gene modeling in human DNA sequences. </title> <booktitle> In ISMB-94, </booktitle> <pages> pages 376-383, </pages> <address> Menlo Park, CA, 1994. </address> <publisher> AAAI/MIT Press. </publisher>
Reference-contexts: Gelfand, et al, proposed a dynamic programming scheme, embodied in the genefinder GREAT [29], that calculates the set of all so-called Pareto-optimal gene structure predictions, which include the optimal predictions for a wide variety of different scoring functions. Dynamic programming methods are also used in Grail II <ref> [73] </ref>, GeneParser [62], FGENEH [63], and recent versions of GeneID [31]. Dynamic programming methods find the candidate gene structure with the best overall score. The key to success in these methods is developing the right score function. <p> ftp://www-hgc.lbl.gov/pub/genesets/ Annotated contigs: http://igs-server.cnrs-mrs.fr/banbury/index.html http://www.sanger.ac.uk/Projects/C_elegans/genefinding/ Some HMM-based genefinders genes: Genie [44, 57, 45]: http://www.cse.ucsc.edu/~dkulp/cgi-bin/genie GenScan [9]: http://CCR-081.mit.edu/GENSCAN.html 7 HMMgene [41]: http://www.cbs.dtu.dk/services/HMMgene/ GeneMark-HMM [48]: http://genemark.biology.gatech.edu/GeneMark/hmmchoice.html Veil [33]: http://www.cs.jhu.edu/labs/compbio/veil.html Some further genefinders: AAT [34]: http://genome.cs.mtu.edu/aat.html FGENEH [63]: http://dot.imgen.bcm.tmc.edu:9331/gene-finder/gf.html GENEID [31]: http://www.imim.es/GeneIdentification/Geneid/geneid_inp ut.html Genlang [60]: http://cbil.humgen.upenn.edu/~sdong/genlang_home.html GeneParser [62]: http://beagle.colorado.edu/~eesnyder/GeneParser.html Glimmer [59]: http://www.cs.jhu.edu/labs/compbio/glimmer.html Grail <ref> [73] </ref>: http://compbio.ornl.gov/ MZEF [77]: http://www.cshl.org/genefinder Procrustes [28]: http://www-hto.usc.edu/software/procrustes/ Full version of this review: http://www.cse.ucsc.edu/~haussler/pubs.html
Reference: [74] <author> Y. Xu, R. Mural, and E. Uberbacher. </author> <title> Inferring gene structures in genomic sequences using pattern recognition and expressed sequence tags. </title> <booktitle> In Proceedings, 5th International Conference on Intelligent Systems for Molecular Biology, </booktitle> <pages> pages 344-353, </pages> <year> 1997. </year>
Reference-contexts: Examples are Genie [45], GeneID+ [10], GeneParser3 [62], and recent versions of Grail [75]. The program AAT [34] and new versions of Grail also take into account EST information <ref> [74] </ref>. Database homology has long been used as a post hoc method to validate gene predictions, but these systems were among the first to integrate database homology directly into the genefinding algorithm itself.
Reference: [75] <author> Y. Xu and E. C. Uberbacher. </author> <title> Automated gene identification in large-scale genomic sequences. </title> <journal> Journal of Computational Biology, </journal> <volume> 4(3) </volume> <pages> 325-338, </pages> <year> 1997. </year>
Reference-contexts: Current state-of-the-art genefinding systems combine multiple statistical measures with database homology searches, obtained by translating the DNA to protein in all possible reading frames, and then searching the protein databases for similar protein sequences. Examples are Genie [45], GeneID+ [10], GeneParser3 [62], and recent versions of Grail <ref> [75] </ref>. The program AAT [34] and new versions of Grail also take into account EST information [74]. Database homology has long been used as a post hoc method to validate gene predictions, but these systems were among the first to integrate database homology directly into the genefinding algorithm itself.
Reference: [76] <author> M. Zhang and T. Marr. </author> <title> A weighted array method for splicing and signal analysis. </title> <journal> CABIOS, </journal> <volume> 9 </volume> <pages> 499-509, </pages> <year> 1993. </year>
Reference-contexts: Other statistical/pattern models besides neural networks, such as nonhomogeneous Markov models (a weight matrix where the distribution at position i depends on the residue at position i 1, sometimes called "WAM" models), decision trees, quadratic discriminant functions, and graphical models, have also been used as biosequence signal sensors <ref> [37, 76, 63, 15, 58, 1] </ref>.
Reference: [77] <author> M. Q. Zhang. </author> <title> Identification of protein coding regions in the human genome based on quadratic discriminantanalysis. </title> <journal> PNAS, </journal> <volume> 94 </volume> <pages> 559-564, </pages> <year> 1998. </year>
Reference-contexts: http://igs-server.cnrs-mrs.fr/banbury/index.html http://www.sanger.ac.uk/Projects/C_elegans/genefinding/ Some HMM-based genefinders genes: Genie [44, 57, 45]: http://www.cse.ucsc.edu/~dkulp/cgi-bin/genie GenScan [9]: http://CCR-081.mit.edu/GENSCAN.html 7 HMMgene [41]: http://www.cbs.dtu.dk/services/HMMgene/ GeneMark-HMM [48]: http://genemark.biology.gatech.edu/GeneMark/hmmchoice.html Veil [33]: http://www.cs.jhu.edu/labs/compbio/veil.html Some further genefinders: AAT [34]: http://genome.cs.mtu.edu/aat.html FGENEH [63]: http://dot.imgen.bcm.tmc.edu:9331/gene-finder/gf.html GENEID [31]: http://www.imim.es/GeneIdentification/Geneid/geneid_inp ut.html Genlang [60]: http://cbil.humgen.upenn.edu/~sdong/genlang_home.html GeneParser [62]: http://beagle.colorado.edu/~eesnyder/GeneParser.html Glimmer [59]: http://www.cs.jhu.edu/labs/compbio/glimmer.html Grail [73]: http://compbio.ornl.gov/ MZEF <ref> [77] </ref>: http://www.cshl.org/genefinder Procrustes [28]: http://www-hto.usc.edu/software/procrustes/ Full version of this review: http://www.cse.ucsc.edu/~haussler/pubs.html
Reference: [78] <author> M. Q. Zhang. </author> <title> Statistical features of human exons and their flanking regions. Human Molecular Genetics, </title> <booktitle> 7(5) </booktitle> <pages> 919-932, </pages> <year> 1998. </year> <month> 13 </month>
Reference-contexts: The statistical signals they are trying to recognize are too weak [1], and there are dependencies between signals and contents that they cannot capture [11], such as the possible correlation between splice site strength and exon size <ref> [78] </ref>. During the last five years, a number of systems have been developed that combine signal and content sensors to try to identify complete gene structure. Such systems are capable, in principle, of handling more complex interdependencies between gene features.
References-found: 78

