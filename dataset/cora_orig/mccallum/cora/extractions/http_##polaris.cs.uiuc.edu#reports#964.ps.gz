URL: http://polaris.cs.uiuc.edu/reports/964.ps.gz
Refering-URL: http://polaris.cs.uiuc.edu/tech_reports.html
Root-URL: http://www.cs.uiuc.edu
Date: May 21, 1993  
Note: Robert Pirsig, Editor 1  National Science Foundation under Grant No. NSF MIP-88-07775, with additional support from NASA Grant No. NASA NCC 2-559 (DARPA).  
Abstract: Perfect: Performance Evaluation for Cost-Effective Transformations Report 2 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> 1989 Bell Award for Perfect Benchmarks. Center for Supercomputing Research and Development, University of Illinois at Urbana-Champaign, </institution> <year> 1989. </year>
Reference-contexts: All of the hand-optimized codes, with the exception of SPICE, benefitted from multiprocessing. Cray Research won the 1989 Bell-Perfect contest (Category 1: fastest wall-clock time for machines with 16 or fewer processors) with their Y-MP results (see <ref> [1] </ref>). 6 The Cray-2S baseline and optimized results are all single processor. The codes were optimized at Cray Computer Corporation. The type of optimizations applied included library substitution, loop unrolling, addition of compiler directives, subroutine inlining, computation reordering, and addition of arrays to avoid bank conflicts. <p> The Perfect Benchmarks T M were run on the Stardent 3010 machine, which is an upgrade of the Ardent Titan-3. The results presented here are Stardent's Bell-Perfect entry, which they in the cost-effectiveness category (see <ref> [1] </ref>). ADM, SPICE, and TRACK were compiler optimized at the lowest level: basic local optimization. MDG, 28 OCEAN, QCD, and SPEC77 were compiler optimized with "aggressive" global optimization. The remaining codes, ARC2D, BDNA, DYFESM, FLO52, MG3D, and TRFD, were compiler optimized for vectorization.
Reference: [2] <author> R. Beam and R. Warming, </author> <title> An implicit finite difference algorithm for hyperbolic systems in conservative law form, </title> <journal> J. Comp. Physics, </journal> <volume> 22 (1976), </volume> <pages> pp. 87-93. </pages>
Reference-contexts: However, unlike ARC3D, ARC2D is a two-dimensional code and only solves the Euler equations (rather than the Euler and Navier-Stokes equations, as ARC3D does). ARC2D can be used for steady and unsteady flows, but only for inviscid flows. ARC2D vectorizes well. See <ref> [2] </ref>, [6], [7] for a description of the algorithms implemented. The test problem solved in the Perfect Benchmarks T M version of ARC2D is for the upper-half of a biconvex airfoil sitting in a stretch rectangular domain.
Reference: [3] <author> M. Berry et al., </author> <title> The Perfect Club Benchmarks: Effective performance evaluation of supercomputers, </title> <journal> The International Journal of Supercomputer Applications, </journal> <volume> 3 (1989), </volume> <pages> pp. 5-40. </pages>
Reference-contexts: To these ends, we solicit the help of additional individuals and organizations. 2 Background The methodology of the Perfect benchmarking effort is discussed in detail in <ref> [3] </ref>. The focus of the project has expanded since its inception nearly three 2 years ago. Now, we are not only interested in quantifying the performance of large-scale computing systems, but also we are interested in collecting performance results across all computational classes of computers. <p> Now, we are not only interested in quantifying the performance of large-scale computing systems, but also we are interested in collecting performance results across all computational classes of computers. This expanded focus has resulted in a modification of the Perfect Fortran 77 Language Standard presented in <ref> [3] </ref>. This standard was developed as a guide to programming practices which aid portability. Some of the portability difficulties we have faced through the course of this project are discussed in [4]. These difficulties have provided us with the impetus to refine the original Perfect Fortran 77 standard. <p> The current Fortran 77 Language Standard is presented in Section A. A description of each of the 13 original codes in provided in <ref> [3] </ref>. For this report, there are 14 codes for which results are given although the benchmark suite still contains only 13. Late in the summer of 1989 we were asked by NASA/Ames to stop distributing ARC3D for national security reasons. <p> The codes were optimized at Cray Computer Corporation. The type of optimizations applied included library substitution, loop unrolling, addition of compiler directives, subroutine inlining, computation reordering, and addition of arrays to avoid bank conflicts. The NEC SX/2 data have not changed from when they were first presented in <ref> [3] </ref>. Four of the codes were hand-optimized: ARC3D, DYFESM, MDG, and SPEC77. The optimizations applied included inlining subroutines, unrolling DO loops, and adding additional dimensions to arrays to promote vectorization. The Florida State University benchmarking effort utilized only one of the CPU's on the ETA-10E, G, and Q machines. <p> The optimizations applied are the same as for the Cray Y-MP hand-optimized codes. It is Cray's philosophy that optimizations should be machine independent, and their optimization strategy reflects this belief. The Cyber 205 was involved in the original effort. The data remain essentially unchanged since they were discussed in <ref> [3] </ref>. FLO52 and OCEAN were the only codes optimized for the Cyber 205. Considerable human effort was extended on optimizing FLO52. A large speed-up was obtained by redimensioning certain arrays so that fewer equations were used with longer vectors. OCEAN was modified to improve vectorization. <p> These directives are considered hand-optimization and therefore the MG3D results for this machine appear under the optimized results. The IBM 3090-200S and 3090-600S results that have appeared in previous reports have been removed at the request of IBM. See <ref> [3] </ref> and [5] for previously reported 3090 results. 8 Machine Location Results Submitted By Cray X-MP/14 SE Exxon Research and Engineering Company Douglas Spragg Annandale, NJ Cray X-MP/416 Cray Research, Inc. (CRI) Charles Grassl Mendota Heights, MN Cray Y-MP/832 Cray Research, Inc. (CRI) Charles Grassl Mendota Heights, MN Pittsburgh Supercomputer Center
Reference: [4] <author> G. Cybenko, L. Kipp, L. Pointer, and D. Kuck, </author> <title> Supercomputer performance evaluation and the Perfect Benchmarks T M , Tech. </title> <type> Rep. 965, </type> <institution> Center for Supercomputing Research and Development, University of Illinois at Urbana-Champaign, </institution> <year> 1990. </year>
Reference-contexts: This expanded focus has resulted in a modification of the Perfect Fortran 77 Language Standard presented in [3]. This standard was developed as a guide to programming practices which aid portability. Some of the portability difficulties we have faced through the course of this project are discussed in <ref> [4] </ref>. These difficulties have provided us with the impetus to refine the original Perfect Fortran 77 standard. As we include more and more architectures in our focus, there is no doubt that further refinements to the standard will be made to ensure ease of portability among diverse computing systems.
Reference: [5] <author> L. </author> <title> Pointer, Editor, </title> <type> Perfect report 1, Tech. Rep. 896, </type> <institution> Center for Supercomputing Research and Development, University of Illinois at Urbana-Champaign, </institution> <month> July </month> <year> 1989. </year>
Reference-contexts: These directives are considered hand-optimization and therefore the MG3D results for this machine appear under the optimized results. The IBM 3090-200S and 3090-600S results that have appeared in previous reports have been removed at the request of IBM. See [3] and <ref> [5] </ref> for previously reported 3090 results. 8 Machine Location Results Submitted By Cray X-MP/14 SE Exxon Research and Engineering Company Douglas Spragg Annandale, NJ Cray X-MP/416 Cray Research, Inc. (CRI) Charles Grassl Mendota Heights, MN Cray Y-MP/832 Cray Research, Inc. (CRI) Charles Grassl Mendota Heights, MN Pittsburgh Supercomputer Center (PSC) John
Reference: [6] <author> T. Pulliam and D. Chaussee, </author> <title> A diagonal form of an implicit approximate-factorization algorithm, </title> <journal> J. Comp. Physics, </journal> <volume> 39 (1981), </volume> <pages> pp. 347-360. </pages>
Reference-contexts: However, unlike ARC3D, ARC2D is a two-dimensional code and only solves the Euler equations (rather than the Euler and Navier-Stokes equations, as ARC3D does). ARC2D can be used for steady and unsteady flows, but only for inviscid flows. ARC2D vectorizes well. See [2], <ref> [6] </ref>, [7] for a description of the algorithms implemented. The test problem solved in the Perfect Benchmarks T M version of ARC2D is for the upper-half of a biconvex airfoil sitting in a stretch rectangular domain.
Reference: [7] <author> T. Pulliam and J. Steger, </author> <title> Recent improvements in efficiency, accuracy, and convergence for implicit approximate factorization algorithms. </title> <booktitle> AIAA-85-0360. Presented at the 23rd aerospace science meeting, </booktitle> <address> Jan-uary 14-17, Reno, Nevada, </address> <year> 1985. </year> <month> 57 </month>
Reference-contexts: However, unlike ARC3D, ARC2D is a two-dimensional code and only solves the Euler equations (rather than the Euler and Navier-Stokes equations, as ARC3D does). ARC2D can be used for steady and unsteady flows, but only for inviscid flows. ARC2D vectorizes well. See [2], [6], <ref> [7] </ref> for a description of the algorithms implemented. The test problem solved in the Perfect Benchmarks T M version of ARC2D is for the upper-half of a biconvex airfoil sitting in a stretch rectangular domain.
References-found: 7

