URL: http://www.cs.ucsd.edu/groups/csl/pubs/phd/norival.thesis.ps
Refering-URL: http://www.cs.ucsd.edu/groups/csl/pubs/author.html
Root-URL: http://www.cs.ucsd.edu
Title: A New Approach to the Control of Real-Time Traffic in Packet Switching Data Networks  
Author: Professor George C. Polyzos Professor Ramesh Rao Professor S. Gill Williamson 
Degree: A dissertation submitted in partial satisfaction of the requirements for the degree Doctor of Philosophy in Computer Science by Norival Ribeiro Figueira Committee in charge: Professor Joseph Pasquale, Chair Professor Rene L. Cruz  
Date: 1995  
Affiliation: UNIVERSITY OF CALIFORNIA, SAN DIEGO  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> T. E. Anderson, S. S. Owicki, J. B. Saxe, and C. P. Thacker, </author> <title> High Speed Switch Scheduling for Local Area Networks, </title> <booktitle> In Proceedings of ASPLOS-V, </booktitle> <pages> pp. 98-110, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: A switch requires a packet scheduling algorithm and a data forwarding algorithm, which delivers a packet to the output link once it has been scheduled. Our work studies packet scheduling algorithms. The reader is referred to <ref> [1] </ref> for a work on switch scheduling (i.e. data forwarding algorithm). In this work, a sessions traffic is characterized at the entrance of the first node in the sessions connection.
Reference: [2] <author> D. Bertsekas and R. Gallager, </author> <title> Data Networks, </title> <publisher> Prentice Hall, </publisher> <address> Engle-wood Cliffs, New Jersey, </address> <year> 1992. </year>
Reference-contexts: For more details, the reader is 3 referred to <ref> [2] </ref>. High-speed networks, which are now possible with the advent of new technologies (such as optical fiber), allow applications to send new traffic types such as voice, video, and other kinds of interactive data.
Reference: [3] <author> D. Clark, S. Shenker, and L. Zhang, </author> <title> Supporting Real-Time Applications in an Integrated Services Packet Network: Architecture and Mechanism, </title> <booktitle> In Proceedings of ACM SIGCOMM 1992, </booktitle> <pages> pp. 14-26. </pages>
Reference-contexts: Thus, information about the delay distribution of packets is likely to be very useful for tolerant applications (regarding determination of the play-back delay, according to Clark et als characterization space -- i.e. adaptive, rigid, tolerant, and intolerant -- of real-time 4 networking applications in <ref> [3] </ref>). Tolerant applications can accept some brief interruptions in service. The level of tolerance can be defined as a maximum percentage of missing packets. <p> Before we introduce these results, we need some preliminary defini 29 tions. A Token (or Leaky) Bucket Filter A token (or leaky) bucket filter (r, b 0 ) (here we adopt the notation used in <ref> [3] </ref>) is characterized by two parameters, a rate r, and the maximum number of tokens (also called permits), b 0 , the bucket can store (see are continuously filling up the bucket with rate r. All tokens exceeding the maximum bucket capacity are discarded.
Reference: [4] <author> R. L. Cruz, </author> <title> A Calculus for Network Delay, Part I: Network Elements in Isolation, </title> <journal> In IEEE Transactions on Information Theory, </journal> <volume> Vol. 37, No. 1, </volume> <pages> pp. 114-131, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: The reader is referred to [29] which compares the delay distribution seen by sessions under FCFS multiplexing with the delay bound computed with Cruzs method <ref> [4, 5] </ref>, the delay bound using Stop-and-Go, and the delay bound using PGPS (presented later in this section). Hierarchical Round Robin (HRR) [17] also uses a framing strategy and is a non-work-conserving service discipline. <p> The reader is referred to [16] for a relevant work on fair queueing systems. Others have addressed the possibility of providing per-session bounds on delay and delay distribution in a network setting <ref> [4, 5, 19, 28] </ref>. In [4,5], Cruz uses a non-probabilistic approach to characterize each session entering the network -- the burstiness constraint, which is in principle very similar to a token bucket filter. Under this assumption, a methodology is proposed to calculate per-session upper bounds on delay and buffer requirements. <p> Kurose in [19], and Yaron and Sidi in [28] describe methods to calculate bounds on the distribution of delay and buffer occupancy when all sessions entering the network are stochastically bounded. The work in <ref> [4, 5, 19, 28] </ref> differs from our work in that the Leave-in-Time scheme provides a function to calculate an upper bound on the delay distribution for a session, while the methodology in [4, 5, 19, 28] provides directly the upper bound on the delay distribution. <p> The work in <ref> [4, 5, 19, 28] </ref> differs from our work in that the Leave-in-Time scheme provides a function to calculate an upper bound on the delay distribution for a session, while the methodology in [4, 5, 19, 28] provides directly the upper bound on the delay distribution. <p> able to provide this function for sessions with any kind of dynamic traffic behavior, and this function depends only on the session in question, i.e. the dynamic traffic behavior of other sessions does not enter into consideration (i.e. the Leave-in-Time service discipline provides isolation between sessions), while the methodology in <ref> [4, 5, 19, 28] </ref> is based on the traffic characterization of all sessions sharing network servers with the session in question, and the dynamic traffic behavior of all sessions enters in the calculation of the delay distribution. 181 Chapter 7 Summary and Extensions 7 This dissertation shows that our new approach
Reference: [5] <author> R. L. Cruz, </author> <title> A Calculus for Network Delay, Part II: Network Analysis, </title> <journal> In IEEE Transactions on Information Theory, </journal> <volume> Vol. 37, No. 1, </volume> <pages> pp. 132-141, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: The reader is referred to [29] which compares the delay distribution seen by sessions under FCFS multiplexing with the delay bound computed with Cruzs method <ref> [4, 5] </ref>, the delay bound using Stop-and-Go, and the delay bound using PGPS (presented later in this section). Hierarchical Round Robin (HRR) [17] also uses a framing strategy and is a non-work-conserving service discipline. <p> The reader is referred to [16] for a relevant work on fair queueing systems. Others have addressed the possibility of providing per-session bounds on delay and delay distribution in a network setting <ref> [4, 5, 19, 28] </ref>. In [4,5], Cruz uses a non-probabilistic approach to characterize each session entering the network -- the burstiness constraint, which is in principle very similar to a token bucket filter. Under this assumption, a methodology is proposed to calculate per-session upper bounds on delay and buffer requirements. <p> Kurose in [19], and Yaron and Sidi in [28] describe methods to calculate bounds on the distribution of delay and buffer occupancy when all sessions entering the network are stochastically bounded. The work in <ref> [4, 5, 19, 28] </ref> differs from our work in that the Leave-in-Time scheme provides a function to calculate an upper bound on the delay distribution for a session, while the methodology in [4, 5, 19, 28] provides directly the upper bound on the delay distribution. <p> The work in <ref> [4, 5, 19, 28] </ref> differs from our work in that the Leave-in-Time scheme provides a function to calculate an upper bound on the delay distribution for a session, while the methodology in [4, 5, 19, 28] provides directly the upper bound on the delay distribution. <p> able to provide this function for sessions with any kind of dynamic traffic behavior, and this function depends only on the session in question, i.e. the dynamic traffic behavior of other sessions does not enter into consideration (i.e. the Leave-in-Time service discipline provides isolation between sessions), while the methodology in <ref> [4, 5, 19, 28] </ref> is based on the traffic characterization of all sessions sharing network servers with the session in question, and the dynamic traffic behavior of all sessions enters in the calculation of the delay distribution. 181 Chapter 7 Summary and Extensions 7 This dissertation shows that our new approach
Reference: [6] <author> R. L. Cruz, </author> <title> Service Burstiness and Dynamic Burstiness Measures: </title>
References-found: 6

