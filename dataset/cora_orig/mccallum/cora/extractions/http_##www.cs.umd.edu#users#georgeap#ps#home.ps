URL: http://www.cs.umd.edu/users/georgeap/ps/home.ps
Refering-URL: http://www.cs.umd.edu/users/georgeap/
Root-URL: 
Title: Supporting Interactive Scanning Operations in Video on Demand Systems by Stream Switching  
Keyword: MPEG, video scheduling, interactive operations, stream switching  
Abstract: Video-on-Demand (VoD) systems have recently received considerable attention since there is significant potential for their commercial deployment. Support for interactive operations like forward and backward scanning will be necessary to make the VoD service more attractive and familiar to customers. Current mechanisms for supporting interactive scanning overload the network and the set-top box by sending movie data at increased rates. We introduce a scheme where interactive operations are implemented by switching preprocessed movie streams at the video server. In this way we are able to control the traffic that is injected into the network and reduce the load on the set-top box. We present the preprocessing steps that our technique requires and discuss the implementation costs at the server. We study the problem of the latency of interactive scanning operations and how our scheme affects this latency. Finally, we discuss how the stream switching technique can be implemented on top of a stream scheduling mechanism that can support stringent quality of service guarantees. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. M. Manus and K. Ross, </author> <title> Video-on-Demand Over ATM: </title> <journal> Constant-Rate Transmission and Control. IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 14, No. 6, </volume> <pages> pages 1087-1098, </pages> <month> August </month> <year> 1996 </year>
Reference-contexts: Not much has been reported on the implementation of interactive operations. An obvious solution to the problem is to have a very large buffer at the user terminal equipment. This allows all kinds of operations to be performed locally without involving the network. In <ref> [1] </ref> a detailed study of this approach is performed. As reported in this work the buffer size required is impractical and to provide some kind of guarantees for the timely performance of the VCR operations almost all the movie must be buffered locally at the set-top box.
Reference: [2] <author> S. C. Liew and C, Tse. </author> <title> Video Aggregation: Adapting Video Traffic for Transport Over Broadband Networks by Integrating Data Compression and Statistical Multiplexing. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 14, No. 6, </volume> <pages> pages 1123-1137, </pages> <month> August </month> <year> 1996 </year>
Reference-contexts: Indeed, most of the current hardware decoders are capable of decoding in "real-time" meaning a frame rate close to 30 fps. There have been a variety of proposed schemes trying to remedy the problems of this "greedy" approach [13], <ref> [2] </ref>. The focus of the proposed solution is either on reducing the amount of traffic injected to the network by dropping data using techniques that take into account the nature of the medium [2] or dynamically adjusting the rate of the movie data injected to the network [13]. <p> have been a variety of proposed schemes trying to remedy the problems of this "greedy" approach [13], <ref> [2] </ref>. The focus of the proposed solution is either on reducing the amount of traffic injected to the network by dropping data using techniques that take into account the nature of the medium [2] or dynamically adjusting the rate of the movie data injected to the network [13]. These approaches suffer from requiring increased processing by the server. On-the-fly media specific processing is expensive and this cost limits the number of streams that the server can support.
Reference: [3] <author> V. Balabanian et al., </author> <title> An Introduction to Digital Storage Media Command and Control. </title> <journal> IEEE Communications Magazine, </journal> <volume> Vol. 34, No. 11, </volume> <pages> pages 122-127, </pages> <month> November </month> <year> 1996 </year>
Reference-contexts: Moreover, special QoS can be associated with the interactive operations like user requirements for the delay, or user statements about the frequency of the operations and other. Clearly, signaling mechanisms are needed to support this initial exchange of information. DSM-CC <ref> [3] </ref> is an emerging standard for implementing this type of signaling.
Reference: [4] <author> C. Bisdikian et al., </author> <title> Cable Access Beyond the Hype: On Residential Broadband Services over HFC Networks. </title> <journal> IEEE Communications Magazine, </journal> <volume> Vol. 34, No. 11, </volume> <pages> pages 128-135, </pages> <month> November </month> <year> 1996 </year>
Reference-contexts: The actual characteristics of the signaling path between the server and the decoder/player depend largely on the network path and its properties. There is a large literature [16], [6], <ref> [4] </ref> on the architecture of the VoD distribution network and the technologies involved. Sine there is a variety of technologies proposed and the architecture is still far from complete, we make some general and as restrictive as possible assumptions about the distribution network.
Reference: [5] <author> K. Almeorth and M. Ammar, </author> <title> The Use of Multi-cast Delivery to Provide a Scalable and Interactive Video-on-Demand Service. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 14, No. 6, </volume> <pages> pages 1110-1122, </pages> <month> August </month> <year> 1996 </year>
Reference-contexts: These approaches suffer from requiring increased processing by the server. On-the-fly media specific processing is expensive and this cost limits the number of streams that the server can support. A different approach to the problem is explored in <ref> [5] </ref>. There the VoD server operates 3 in a multi-cast environment where many instances of the same movie are played at different logical times. VCR operations are implemented by moving the user to a group that receives an instant of the movie playing at the desired logical time.
Reference: [6] <author> Y. Chang et al., </author> <title> An Open-systems Approach to Video on Demand. </title> <journal> IEEE Communications Magazine ???, pages 68-101, </journal> <month> May </month> <year> 1994 </year>
Reference-contexts: The actual characteristics of the signaling path between the server and the decoder/player depend largely on the network path and its properties. There is a large literature [16], <ref> [6] </ref>, [4] on the architecture of the VoD distribution network and the technologies involved. Sine there is a variety of technologies proposed and the architecture is still far from complete, we make some general and as restrictive as possible assumptions about the distribution network.
Reference: [7] <author> J. Dey-Sircar et al., </author> <title> Providing VCR Capabilities in Large-Scale Video Servers. where? </title>
Reference-contexts: An alternative approach of implementing forward/backward scanning is to send data from the server at an increased frame rate. This approach and the related problems are presented in <ref> [7] </ref>. Sending at a multiple of the frame rate means that the network has to cope with a similar increase in the required bandwidth. Providing deterministic guarantees for such traffic results in significant underutilization of network resources. <p> Providing deterministic guarantees for such traffic results in significant underutilization of network resources. In order to alleviate this problem, research has focused on techniques for providing statistical guarantees <ref> [17, 7] </ref>. Another problem with this approach is that the decoder must decode movie data at a rate that is a multiple of the frame rate. Depending on the architecture of the hardware decoder, this usually is hard or expensive to implement.
Reference: [8] <institution> The main envelope paper </institution>
Reference-contexts: In section 6 the integration of our interactive techniques with the envelope based multiplexing is presented. Section 7 contains numerical results and section 8 concludes the paper. 2 Envelop Based Admission Control and Scheduling (extend here, add a figure) In <ref> [8] </ref> an admission control and scheduling policy is described that allows for deterministic guarantees and improved utilization of the network when compared 4 to peak rate bandwidth allocation. The MPEG streams of the stored movies are described using periodic envelopes. <p> from making the operation of the system more complicated, this approach would result is restrictions in the temporal spacing of interactive operations. 6 Admission Control The stream switching technique, described in the previous sections is going to be used on-top of the stream scheduling and admission control techniques presented in <ref> [8, 9] </ref>. For both scheduling and admission control the envelope of the movie to be served must be known. <p> For both scheduling and admission control the envelope of the movie to be served must be known. In <ref> [8] </ref> a simple envelope was used while [9] describes techniques for admission control and scheduling using window based envelopes that provide a better description of the bandwidth requirements of the movie. <p> On the other hand, in order to reduce the delay we use shorter GOPs that might reduce slightly the multiplexing gain since we limit the possibilities for multiplexing. But the essence of the results of <ref> [8] </ref> and [9] should not change.
Reference: [9] <institution> The windows paper </institution>
Reference-contexts: If this succeeds then the stream is started. A scheduling policy determines the exact point where the new stream is going to be started. In a later addition to this work <ref> [9] </ref> window based envelopes were used to provide a more accurate description of the movie bandwidth characteristics. We are assuming that the video server is implementing those mechanisms. <p> from making the operation of the system more complicated, this approach would result is restrictions in the temporal spacing of interactive operations. 6 Admission Control The stream switching technique, described in the previous sections is going to be used on-top of the stream scheduling and admission control techniques presented in <ref> [8, 9] </ref>. For both scheduling and admission control the envelope of the movie to be served must be known. <p> For both scheduling and admission control the envelope of the movie to be served must be known. In [8] a simple envelope was used while <ref> [9] </ref> describes techniques for admission control and scheduling using window based envelopes that provide a better description of the bandwidth requirements of the movie. Allowing the server to switch between different streams while serving the same movie affects the shape of the envelope of the particular movie. <p> If we want to handle jump switches, then the window size has to be shrinked to one GOP. The above heuristic is still valid in this case. Clearly the processing overhead is increasing when decreasing the window size. Still, as discussed in <ref> [9] </ref>, the overhead from window processing is not important even for small window sizes. Moreover, the operations described here are a preprocessing step, performed once, when the movie is added to the system. An exact calculation of the effective envelope takes exponential time. <p> To do admission control we make sure that the sum of the steady states of the on going streams plus the steady state of 31 the new stream are not going to exceed the available bandwidth. The details of how to do the admission control can be found in <ref> [9] </ref>. The complication in our case is that the window sizes are different. It is easy to resolve this difficulty by taking the the least common multiple of all the windows as the common window for all streams. The new windows will still be periodic and the techniques implemented in [9] <p> <ref> [9] </ref>. The complication in our case is that the window sizes are different. It is easy to resolve this difficulty by taking the the least common multiple of all the windows as the common window for all streams. The new windows will still be periodic and the techniques implemented in [9] are still be applicable. There are some alternative options on how to do the scheduling of the streams after they are admitted to the system. In [9] the following schemes are described: * minimal stream phase scheme. <p> The new windows will still be periodic and the techniques implemented in <ref> [9] </ref> are still be applicable. There are some alternative options on how to do the scheduling of the streams after they are admitted to the system. In [9] the following schemes are described: * minimal stream phase scheme. <p> This is going to increase the computation requirements of the server when doing the admission and the scheduling of new streams. As was detailed in <ref> [9] </ref> the computation needed for both these operations is not significant even for window size as small as one GOP. <p> On the other hand, in order to reduce the delay we use shorter GOPs that might reduce slightly the multiplexing gain since we limit the possibilities for multiplexing. But the essence of the results of [8] and <ref> [9] </ref> should not change.
Reference: [10] <institution> The MPEG-2 standard </institution>
Reference-contexts: As was described, the size of the larger I frame is not going to increase for the skip versions. So we are considering techniques for reducing the sizes of P and B frames. One step of the MPEG encoding process <ref> [10] </ref> is the quantization of the DCT coefficients. The quantization granularity affects to a large degree the size of the produced encoded frame. The most common way of decreasing the size of frames is to increase the quantization granularity.
Reference: [11] <institution> DSM-CC </institution>
Reference-contexts: There are various standards under discussion for different contexts <ref> [12, 11] </ref>. As explained, our techniques involve some additions to the signaling that has to be performed between the client and the server before the movie can start. The details will need some further study.
Reference: [12] <institution> VOD of the ATMF </institution>
Reference-contexts: There are various standards under discussion for different contexts <ref> [12, 11] </ref>. As explained, our techniques involve some additions to the signaling that has to be performed between the client and the server before the movie can start. The details will need some further study.
Reference: [13] <institution> DRS paper 36 </institution>
Reference-contexts: Indeed, most of the current hardware decoders are capable of decoding in "real-time" meaning a frame rate close to 30 fps. There have been a variety of proposed schemes trying to remedy the problems of this "greedy" approach <ref> [13] </ref>, [2]. The focus of the proposed solution is either on reducing the amount of traffic injected to the network by dropping data using techniques that take into account the nature of the medium [2] or dynamically adjusting the rate of the movie data injected to the network [13]. <p> "greedy" approach <ref> [13] </ref>, [2]. The focus of the proposed solution is either on reducing the amount of traffic injected to the network by dropping data using techniques that take into account the nature of the medium [2] or dynamically adjusting the rate of the movie data injected to the network [13]. These approaches suffer from requiring increased processing by the server. On-the-fly media specific processing is expensive and this cost limits the number of streams that the server can support. A different approach to the problem is explored in [5].
Reference: [14] <institution> OM-1 reference </institution>
Reference-contexts: Some efforts are currently under way to standardize the interface of the applications to the video decoding hardware. This new standard is called "Open MPEG-1" (OM-1) <ref> [14] </ref>. The proposed interface has two modes of operation: playing MPEG files or playing from an application supplied buffer. In the case of a network client, the second mode will be used.
Reference: [15] <institution> MPEG encoding s/w reference </institution>
Reference-contexts: The quantization granularity affects to a large degree the size of the produced encoded frame. The most common way of decreasing the size of frames is to increase the quantization granularity. In the common implementations of software MPEG encoders <ref> [15] </ref> the granularity of the quantization is controlled by the quantization factors. These are small integers one for each type of frame. The default quantization factor values used by mpeg encode are 8, 10 and 25 for I, P and B frames respectively.
Reference: [16] <institution> Byte article on home distribution technology </institution>
Reference-contexts: The actual characteristics of the signaling path between the server and the decoder/player depend largely on the network path and its properties. There is a large literature <ref> [16] </ref>, [6], [4] on the architecture of the VoD distribution network and the technologies involved. Sine there is a variety of technologies proposed and the architecture is still far from complete, we make some general and as restrictive as possible assumptions about the distribution network.
Reference: [17] <author> D. J. Reininger et al., </author> <title> Bandwidth Renegotiation for VBR Video Over ATM Networks, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 14, No. 6, </volume> <pages> pages 1076-1086, </pages> <month> August </month> <year> 1996 </year> <month> 37 </month>
Reference-contexts: Providing deterministic guarantees for such traffic results in significant underutilization of network resources. In order to alleviate this problem, research has focused on techniques for providing statistical guarantees <ref> [17, 7] </ref>. Another problem with this approach is that the decoder must decode movie data at a rate that is a multiple of the frame rate. Depending on the architecture of the hardware decoder, this usually is hard or expensive to implement. <p> Delay for switching between the streams 5. Propagation delay until the frames of the new stream reach the decoder/player 6. Delay from not displaying frames 1 and 3 are implementation dependent and we can safely assume that are small in comparison with the In <ref> [17] </ref> values of 30 to 50ms are reported for wide area ATM links and less than 10ms for local area ATM connections. 2 and 5 depend on the characteristics of the communication channel. 4 depends on the details of the stream switching mechanism.
References-found: 17

