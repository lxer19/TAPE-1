URL: ftp://ftp.db.toronto.edu/pub/papers/jodl97.ps.Z
Refering-URL: http://www.cs.toronto.edu/~kishor/websqlcost.html
Root-URL: 
Title: JODL Manuscript-Nr. (will be inserted by hand later) Querying the World Wide Web  
Author: Alberto O. Mendelzon George A. Mihaila and Tova Milo 
Date: Received: Sept 1, 1996 Accepted: Nov 15, 1996  
Affiliation: 1 Department of Computer Science and CSRI, University of Toronto 2 Computer Science Department, Tel Aviv University  
Abstract: 1 The World Wide Web is a large, heterogeneous, distributed collection of documents connected by hypertext links. The most common technology currently used for searching the Web depends on sending information retrieval requests to "index servers" that index as many documents as they can find by navigating the network. One problem with this is that users must be aware of the various index servers (over a dozen of them are currently deployed on the Web), of their strengths and weaknesses, and of the peculiarities of their query interfaces. A more serious problem is that these queries cannot exploit the structure and topology of the document network. In this paper we propose a query language, WebSQL, that takes advantage of multiple index servers without requiring users to know about them, and that integrates textual retrieval with structure and topology-based queries. We give a formal semantics for WebSQL using a calculus based on a novel "virtual graph" model of a document network. We propose a new theory of query cost based on the idea of "query locality," that is, how much of the network must be visited to answer a particular query. We give an algorithm for characterizing WebSQL queries with respect to query locality. Finally, we describe a prototype implementation of Web-SQL written in Java. 
Abstract-found: 1
Intro-found: 1
Reference: [ACM93] <author> Serge Abiteboul, Sophie Cluet, and Tova Milo. </author> <title> Querying and updating the file. </title> <booktitle> In Proceedings of the 19th VLDB Conference, </booktitle> <year> 1993. </year>
Reference-contexts: Finally, in Section 5 we describe a prototype implementation of WebSQL written in Java. We conclude in Section 6. Related Work There has been work in query languages for hypertext documents [BK90, CM89, MW93] as well as query languages for structured or semi-structured documents <ref> [GZC89, ACM93, CACS94, QRS + 95, NBY95] </ref>. Our work differs significantly from both these streams. None of these papers make a distinction between documents stored locally or remotely, or make an attempt to capitalize on existing index servers.
Reference: [AV97] <author> S. Abiteboul and V. Vianu. </author> <title> Queries and computation on the Web. </title> <booktitle> In Proc. </booktitle> <volume> ICDT '97, </volume> <year> 1997. </year>
Reference-contexts: As in the standard definition of queries, one can further require the mapping to be generic and computable. Since this is irrelevant to the following discussion, we ignore this issue here. Formal definitions of genericity and computability in the context of Web queries can be found in <ref> [AV97, MM96] </ref>. Definition 11. Let Q be a query, let G be a class of virtual graphs, let 2 G be a graph, and let W dom (Oid).
Reference: [BK90] <author> C. Beeri and Y. Kornatzky. </author> <title> A logical query language for hypertext systems. </title> <booktitle> In Proc. of the European Conference on Hypertext, </booktitle> <pages> pages 67-80. </pages> <publisher> Cambridge University Press, </publisher> <year> 1990. </year>
Reference-contexts: Finally, in Section 5 we describe a prototype implementation of WebSQL written in Java. We conclude in Section 6. Related Work There has been work in query languages for hypertext documents <ref> [BK90, CM89, MW93] </ref> as well as query languages for structured or semi-structured documents [GZC89, ACM93, CACS94, QRS + 95, NBY95]. Our work differs significantly from both these streams.
Reference: [BLCL + 94] <author> Tim Berners-Lee, Robert Cailliau, Ari Luotonen, Henrik Frystyk Nielsen, and Arthur Secret. </author> <title> The World-Wide Web. </title> <journal> Comm. of the ACM, </journal> <volume> 37(8) </volume> <pages> 76-82, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction The World Wide Web <ref> [BLCL + 94] </ref> is a large, heterogeneous, distributed collection of documents connected by hypertext links.
Reference: [CACS94] <author> V. Christophides, S. Abiteboul, S. Cluet, and M. Scholl. </author> <title> From structured documents to novel query facilities. </title> <booktitle> In Proc. ACM SIGMOD'94, </booktitle> <pages> pages 313-324, </pages> <year> 1994. </year>
Reference-contexts: Finally, in Section 5 we describe a prototype implementation of WebSQL written in Java. We conclude in Section 6. Related Work There has been work in query languages for hypertext documents [BK90, CM89, MW93] as well as query languages for structured or semi-structured documents <ref> [GZC89, ACM93, CACS94, QRS + 95, NBY95] </ref>. Our work differs significantly from both these streams. None of these papers make a distinction between documents stored locally or remotely, or make an attempt to capitalize on existing index servers. <p> The formal semantics of queries is defined in the following section. One of the difficulties in building an SQL-like query language for the Web is the absence of a database schema. Instead of trying to model document structure with some kind of object-oriented schema, as in <ref> [CACS94, QRS + 95] </ref>, we take a minimalist relational approach. At the highest level of abstraction, every Web object is identified by its Uniform Resource Locator (URL) and has a binary content whose interpretation depends on its type (HTML, Postscript, image, audio, etc.). <p> For example, we might be interested in links pointing to nodes in Canada such that their labels do not contain the strings "Back" or "Home." Second, we would like to make use of internal document structure when it is known, along the lines of <ref> [CACS94] </ref> and [QRS + 95]. There is also a great deal of scope for query optimization. We do not currently attempt to be selective in the index servers that are used for each query, or to propagate conditions from the WHERE to the FROM clause to avoid fetching irrelevant documents.
Reference: [CM89] <author> M. P. Consens and A. O. Mendelzon. </author> <title> Expressing structural hypertext queries in Graphlog. </title> <booktitle> In Hypertext'89, </booktitle> <pages> pages 269-292, </pages> <year> 1989. </year>
Reference-contexts: Finally, in Section 5 we describe a prototype implementation of WebSQL written in Java. We conclude in Section 6. Related Work There has been work in query languages for hypertext documents <ref> [BK90, CM89, MW93] </ref> as well as query languages for structured or semi-structured documents [GZC89, ACM93, CACS94, QRS + 95, NBY95]. Our work differs significantly from both these streams.
Reference: [Dre96] <author> Daniel Dreilinger. </author> <note> Savvysearch home page. 1996. http://guaraldi.cs.colostate.edu:2000/. </note>
Reference-contexts: To some degree this can be remedied by front-ends that provide a uniform interface to multiple search engines, such as Multisurf [HGN + 95], Savvysearch <ref> [Dre96] </ref>, and Metacrawler [SE95]. A more serious problem is that these queries cannot exploit the structure and topology of the document network. For example, suppose we are looking for an IBM catalog with prices for personal computers.
Reference: [GZC89] <author> Ralf Hartmut Guting, Roberto Zicari, and David M. Choy. </author> <title> An algebra for structured office documents. </title> <journal> ACM TOIS, </journal> <volume> 7(2) </volume> <pages> 123-157, </pages> <year> 1989. </year>
Reference-contexts: Finally, in Section 5 we describe a prototype implementation of WebSQL written in Java. We conclude in Section 6. Related Work There has been work in query languages for hypertext documents [BK90, CM89, MW93] as well as query languages for structured or semi-structured documents <ref> [GZC89, ACM93, CACS94, QRS + 95, NBY95] </ref>. Our work differs significantly from both these streams. None of these papers make a distinction between documents stored locally or remotely, or make an attempt to capitalize on existing index servers.
Reference: [HGN + 95] <author> Masum Z. Hasan, Gene Golovchinsky, Emanuel G. Noik, Nipon Charoenkitkarn, Mark Chignell, Alberto O. Mendelzon, and David Modjeska. </author> <title> Visual Web surfing with Hy+. </title> <booktitle> In Proceedings CASCON '95, </booktitle> <address> Toronto, </address> <month> November </month> <year> 1995. </year> <institution> IBM Canada. ftp://db.toronto.edu/pub/papers/- cascon95-multisurf.ps.Z. </institution>
Reference-contexts: To some degree this can be remedied by front-ends that provide a uniform interface to multiple search engines, such as Multisurf <ref> [HGN + 95] </ref>, Savvysearch [Dre96], and Metacrawler [SE95]. A more serious problem is that these queries cannot exploit the structure and topology of the document network. For example, suppose we are looking for an IBM catalog with prices for personal computers.
Reference: [KS95] <author> D. Konopnicki and O. Shmueli. W3QS: </author> <title> A query system for the World Wide Web. </title> <booktitle> In Proc. of VLDB'95, </booktitle> <pages> pages 54-65, </pages> <year> 1995. </year>
Reference-contexts: As a consequence, our language does not exploit internal document structure when it is known; but we are planning to build this on top of the current framework. Closer to our approach is the W3QL work by Shmueli and Konopnicki <ref> [KS95] </ref>. Our motivation is very similar to theirs, but the approach is substantially different. They emphasize extensibility and interfacing to external user-written programs and Unix utilities. <p> Mendelzon, George A. Mihaila, and Tova Milo View definition: This is a generalization of the previous point, as an index is a special kind of view. Views and virtual documents are likely to be an important facility, as discussed by Konopnicki and Shmueli <ref> [KS95] </ref>, and a declarative language is needed to specify them. Link maintenance: Keeping links current and checking whether documents that they point to have changed is a common task that can be automated with the help of a declarative query language. Several directions for extending this work present themselves.
Reference: [LSS96] <author> Laks V. S. Lakshmanan, Fereidoon Sadri, and Iyer N. Subramanian. </author> <title> A declarative language for querying and restructuring the Web. </title> <booktitle> In Proc. of 6th. International Workshop on Research Issues in Data Engineering, RIDE '96, </booktitle> <address> New Or-leans, </address> <month> February </month> <year> 1996. </year> <note> In press. </note>
Reference-contexts: In this regard, it is not our intention to provide a fully functional tool, but a clean and minimal design with well-defined semantics that can be extended with bells and whistles later. Another recent effort in this direction is the We-bLog language of Lakshmanan et al. <ref> [LSS96] </ref>. Unlike WebSQL, WebLog emphasizes manipulating the internal structure of Web documents. Instead of regular ex pressions for specifying paths, they rely on Datalog-like recursive rules. The paper does not describe an implementation or formal semantics. The work we describe here is not specifically addressed to digital libraries.
Reference: [Mih96] <author> G. A. Mihaila. </author> <title> WebSQL an SQL-like query language for the world wide web. </title> <type> Master's thesis, </type> <institution> University of Toronto, </institution> <year> 1996. </year>
Reference-contexts: Mendelzon and Wood give in [MW95] an algorithm for finding all the simple paths matching a regular expression R in a labeled graph. We adapted this algorithm for the virtual graph context. (For full details see <ref> [Mih96] </ref>). if A = C w the engine queries a customizable set of known index servers (currently Yahoo and Lycos) with the string w and builds a sorted list of URL's by merging the individual answer sets; if A = F rom (u; x) the engine determines first if u is
Reference: [MM96] <author> A.O. Mendelzon and T. Milo. </author> <title> Formal models of web queries. </title> <note> 1996. sumbitted for publication. </note>
Reference-contexts: One can extract all the links appearing in an HTML document by scanning the contents in search of 4 This comes as a consequence of a more general theorem in <ref> [MM96] </ref> 8 Alberto O. Mendelzon, George A. Mihaila, and Tova Milo &lt;A&gt; and &lt;/A&gt; tags. This means that the partial function Link (url) is computable. <p> As in the standard definition of queries, one can further require the mapping to be generic and computable. Since this is irrelevant to the following discussion, we ignore this issue here. Formal definitions of genericity and computability in the context of Web queries can be found in <ref> [AV97, MM96] </ref>. Definition 11. Let Q be a query, let G be a class of virtual graphs, let 2 G be a graph, and let W dom (Oid).
Reference: [MW93] <author> T. Minohara and R. Watanabe. </author> <title> Queries on structure in hypertext. </title> <booktitle> In Foundations of Data Organization and Algorithms, </booktitle> <volume> FODO '93, </volume> <pages> pages 394-411. </pages> <publisher> Springer, </publisher> <year> 1993. </year>
Reference-contexts: Finally, in Section 5 we describe a prototype implementation of WebSQL written in Java. We conclude in Section 6. Related Work There has been work in query languages for hypertext documents <ref> [BK90, CM89, MW93] </ref> as well as query languages for structured or semi-structured documents [GZC89, ACM93, CACS94, QRS + 95, NBY95]. Our work differs significantly from both these streams.
Reference: [MW95] <author> A. O. Mendelzon and P. T. Wood. </author> <title> Finding regular simple paths in graph databases. </title> <journal> SIAM J. Comp., </journal> <volume> 24(6), </volume> <year> 1995. </year>
Reference-contexts: Let us examine each of them in sequence: if A = P ath (u; R; x) the engine generates all simple paths starting at u that match R, thus determining the list of all qualifying values of x. Mendelzon and Wood give in <ref> [MW95] </ref> an algorithm for finding all the simple paths matching a regular expression R in a labeled graph.
Reference: [NBY95] <author> Gonzalo Navarro and Ricardo Baeza-Yates. </author> <title> A model to query documents by contents and structure. </title> <booktitle> In Proc. ACM SIGIR '95, </booktitle> <pages> pages 93-101, </pages> <year> 1995. </year>
Reference-contexts: Finally, in Section 5 we describe a prototype implementation of WebSQL written in Java. We conclude in Section 6. Related Work There has been work in query languages for hypertext documents [BK90, CM89, MW93] as well as query languages for structured or semi-structured documents <ref> [GZC89, ACM93, CACS94, QRS + 95, NBY95] </ref>. Our work differs significantly from both these streams. None of these papers make a distinction between documents stored locally or remotely, or make an attempt to capitalize on existing index servers.
Reference: [QRS + 95] <author> D. Quass, A. Rajaraman, Y. Sagiv, J. Ullman, and J. Widom. </author> <title> Querying semistructured heterogeneous information. In Deductive and Object-Oriented Databases, </title> <booktitle> Proceedings of the DOOD '95 Conference, </booktitle> <pages> pages 319-344, </pages> <address> Singapore, </address> <month> December </month> <year> 1995. </year> <pages> Springer. </pages>
Reference-contexts: Finally, in Section 5 we describe a prototype implementation of WebSQL written in Java. We conclude in Section 6. Related Work There has been work in query languages for hypertext documents [BK90, CM89, MW93] as well as query languages for structured or semi-structured documents <ref> [GZC89, ACM93, CACS94, QRS + 95, NBY95] </ref>. Our work differs significantly from both these streams. None of these papers make a distinction between documents stored locally or remotely, or make an attempt to capitalize on existing index servers. <p> The formal semantics of queries is defined in the following section. One of the difficulties in building an SQL-like query language for the Web is the absence of a database schema. Instead of trying to model document structure with some kind of object-oriented schema, as in <ref> [CACS94, QRS + 95] </ref>, we take a minimalist relational approach. At the highest level of abstraction, every Web object is identified by its Uniform Resource Locator (URL) and has a binary content whose interpretation depends on its type (HTML, Postscript, image, audio, etc.). <p> For example, we might be interested in links pointing to nodes in Canada such that their labels do not contain the strings "Back" or "Home." Second, we would like to make use of internal document structure when it is known, along the lines of [CACS94] and <ref> [QRS + 95] </ref>. There is also a great deal of scope for query optimization. We do not currently attempt to be selective in the index servers that are used for each query, or to propagate conditions from the WHERE to the FROM clause to avoid fetching irrelevant documents.
Reference: [SE95] <author> Erik Selberg and Oren Etzioni. </author> <title> Multi-service search and comparison using the MetaCrawler. </title> <booktitle> In Proceedings of the Fourth Int'l WWW Conference, </booktitle> <address> Boston, </address> <month> December </month> <year> 1995. </year> <note> http://www.w3.org/pub/Conferences/WWW4/Papers/169. </note>
Reference-contexts: To some degree this can be remedied by front-ends that provide a uniform interface to multiple search engines, such as Multisurf [HGN + 95], Savvysearch [Dre96], and Metacrawler <ref> [SE95] </ref>. A more serious problem is that these queries cannot exploit the structure and topology of the document network. For example, suppose we are looking for an IBM catalog with prices for personal computers.
Reference: [SM] <author> Sun Microsystems. </author> <title> Java (tm): Programming for the internet. http://java.sun.com. This article was processed by the author using the L a T E X style file cljour2 from Springer-Verlag. </title>
Reference-contexts: For this reason, our query engine prototype is implemented in the Java programming language <ref> [SM] </ref> and can be downloaded as an applet by a Java-aware browser. Another difference is that we provide formal query semantics, and emphasize the distinction between local and remote documents. This makes a theory and analysis of query locality possible. <p> For the WHERE clause, if the condition there is unsatisfiable, the locality can be immediately reduced to O (1). 5 Implementation This section presents our prototype implementation of a WebSQL compiler, query engine, and user interface. Both the WebSQL compiler and query engine are implemented entirely in Java <ref> [SM] </ref>, the language introduced by Sun Microsystems with the specific purpose of adding executable content to Web documents. Java applications incorporated in HTML documents, called applets, reside on a Web server but are transferred on demand to the client's site and are interpreted by the client.
References-found: 19

