URL: http://www.loria.fr/tex/divers/unix-eqn1.ps.gz
Refering-URL: http://www.loria.fr/tex/divers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: A System for Typesetting Mathematics  
Author: Brian W. Kernighan and Lorinda L. Cherry 
Date: 2  
Address: i =0  
Affiliation: produces  
Abstract: This paper describes the design and implementation of a system for typesetting mathematics. The language has been designed to be easy to learn and to use by people (for example, secretaries and mathematical typists) who know neither mathematics nor typesetting. Experience indicates that the language can be learned in an hour or so, for it has few rules and fewer exceptions. For typical expressions, the size and font changes, positioning, line drawing, and the like necessary to print according to mathematical conventions are all done automatically. For example, the input The syntax of the language is specified by a small context-free grammar; a compiler-compiler is used to make a compiler that translates this language into typesetting commands. Output may be produced on either a phototypesetter or on a terminal with forward and reverse half-line motions. The system interfaces directly with text formatting programs, so mixtures of text and mathematics may be handled simply. This paper is a revision of a paper originally published in CACM, March, 1975. sum from i=0 to infinity x sub i = pi over 2
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> A Manual of Style, </institution> <note> 12th Edition. </note> <institution> University of Chicago Press, </institution> <year> 1969. </year> <title> p 295. </title>
Reference-contexts: 1. Introduction ``Mathematics is known in the trade as difficult, or penalty, copy because it is slower, more difficult, and more expensive to set in type than any other kind of copy normally occurring in books and journals.'' <ref> [1] </ref> One difficulty with mathematical text is the multiplicity of characters, sizes, and fonts.
Reference: [2] <author> Model C/A/T Phototypesetter. </author> <title> Graphic Systems, </title> <publisher> Inc., Hudson, </publisher> <address> N. </address> <publisher> H. </publisher>
Reference-contexts: Photocomposition Photocomposition techniques can be used to solve some of the problems of typesetting mathematics. A phototypesetter is a device which exposes a piece of photographic paper or film, placing characters wherever they are wanted. The Graphic Systems phototypesetter <ref> [2] </ref> on the UNIX operating system [3] works by shining light through a character stencil. The character is made the right size by lenses, and the light beam directed by fiber optics to the desired - 2 - place on a piece of photographic paper.
Reference: [3] <author> Ritchie, D. M., and Thompson, K. L., </author> <title> ``The UNIX time-sharing system.'' </title> <journal> Comm. ACM 17, </journal> <month> 7 (July </month> <year> 1974), </year> <pages> 365-375. </pages>
Reference-contexts: Photocomposition Photocomposition techniques can be used to solve some of the problems of typesetting mathematics. A phototypesetter is a device which exposes a piece of photographic paper or film, placing characters wherever they are wanted. The Graphic Systems phototypesetter [2] on the UNIX operating system <ref> [3] </ref> works by shining light through a character stencil. The character is made the right size by lenses, and the light beam directed by fiber optics to the desired - 2 - place on a piece of photographic paper.
Reference: [4] <author> Ossanna, J. F., </author> <title> TROFF User's Manual. </title> <institution> Bell Laboratories Computing Science Technical Report 54, </institution> <year> 1977. </year>
Reference-contexts: The exposed paper is developed and typically used in some form of photo-offset reproduction. On UNIX, the phototypesetter is driven by a formatting program called TROFF <ref> [4] </ref>. TROFF was designed for setting running text.
Reference: [5] <author> Aho, A. V., and Johnson, S. C., </author> <title> ``LR Parsing.'' </title> <journal> Comp. Surv. </journal> <volume> 6, </volume> <month> 2 (June </month> <year> 1974), </year> <pages> 99-124. </pages>
Reference-contexts: When the language is supplemented by the disambiguating rules, it is in fact LR (1) and thus easy to parse <ref> [5] </ref>. The output code is generated as the input is scanned. Any time a production of the grammar is recognized, (potentially) some TROFF commands are output.
Reference: [6] <author> B. W. Kernighan and D. M. Ritchie, </author> <title> The C Programming Language. </title> <publisher> Prentice-Hall, Inc., </publisher> <year> 1978. </year>
Reference-contexts: The program consists of a number of small, essentially unconnected modules for code generation, a simple lexical analyzer, a canned parser which we did not have to write, and some miscellany associated with input files and the macro facility. The program is now about 1600 lines of C <ref> [6] </ref>, a high-level language reminiscent of BCPL. About 20 percent of these lines are ``print'' statements, generating the output code. The semantic routines that generate the actual TROFF commands can be changed to accommodate other formatting languages and devices.
References-found: 6

