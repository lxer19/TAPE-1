URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/reports/98/tr1373.ps.Z
Refering-URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/reports/98/
Root-URL: http://www.cs.wisc.edu
Email: jussara,cao@cs.wisc.edu  
Title: Measuring Proxy Performance with the Wisconsin Proxy Benchmark  
Author: Jussara Almeida and Pei Cao 
Date: April 13, 1998  
Affiliation: Department of Computer Sciences University of Wisconsin-Madison  
Abstract: As Web proxies become increasingly widespread, there is a critical need to establish a benchmark that can compare the performance of different proxy servers and predict their performance in practice. In this paper, we describe the Wisconsin Proxy Benchmark (WPB) and the performance comparison of four proxy software using the Benchmark. Using the benchmark, we also study the effect of more disk arms on proxy performance, and the effect of low-bandwidth modem client connections. We find that proxy implementations differ in their performance characteristics significantly. In addition, though disk arms appear to be the bottlenecks in proxy throughput, adding extra disks does not result in performance improvement for all proxy implementations. Finally, we find that the latency advantage of caching proxies vanishes in front of modem connections.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Gaurav Banga and Peter Druschel. </author> <title> Measuring the capacity of a web server. </title> <booktitle> In Proceedings of 1997 USENIX Symposium on Internet Technology and Systems, </booktitle> <month> December </month> <year> 1997. </year>
Reference-contexts: continueing the development of the benchmark and hope to eliminate these limitations in future versions of the benchmark. 2.7 Measuring the Behavior of Overloaded Proxy Servers We have also incorporated new features to WPB to generate bursty traffic, with peak loads that exceed the capacity of the proxy, based on <ref> [1] </ref>. We have changed the client process code to have a pair of process sender and handler generating HTTP traffic to the proxy using non-blocking sockets. The sender process is responsible for establishing a connection with the proxy. <p> Several benchmarks for Web servers have been developed, including WebStone [11] and SPECWeb. There are also studies on the overload behavior of the benchmarks and improvement of the benchmarks <ref> [1] </ref>. However none of the benchmarks can be easily used to measure proxy performances. We borrowed several ideas from these benchmarks when designing WPB.
Reference: [2] <author> Kevin Beach and Pei Cao. </author> <title> Modem emulator: Faking multiple modem connections on a lan. CS736 project report, 1998. contact cao@cs.wisc.edu for more detail. </title>
Reference-contexts: However, although this bottleneck is reduced when one extra disk is added to the system, the overall proxy performance does not improve as much as we expected. In fact, Squid's performance remains about the same. Finally, using an client machine that can emulate multiple modem connections <ref> [2] </ref>, we analyze the behavior of the four proxies when they must handle requests sent by clients connected through very low bandwidth connections. These results show that, in this case, transmission delays are the main component of latency and the low bandwidth effect clearly dominates the overall performance. <p> We wanted to analyse how proxies behave when they must handle requests sent by several clients, using slow connections, such as modems. We used a modem emulator <ref> [2] </ref> which introduces delays to each IP packet transmitted in order to achieve a certain effective bandwidth that is smaller than the one provided by the network connection. This modem emulator, implemented in the Linux operating system, assigns to each process a predefined maximum bandwidth that it can use.
Reference: [3] <author> Pei Cao and Sandy Irani. </author> <title> Cost-aware WWW proxy caching algorithms. </title> <booktitle> In Proceedings of the 1997 USENIX Symposium on Internet Technology and Systems, </booktitle> <month> December </month> <year> 1997. </year>
Reference-contexts: Second, the benchmark generate a request stream that has the same temporal locality as those found in real proxy traces. Studies have shown that the probability that a document is requested t requests after the last request to it is proportional to 1=t <ref> [8, 3] </ref>. The benchmark replicates the probability distribution and measures the hit ratio of the proxy cache. Third, the benchmark emulates Web server latency by letting the server process delay sending back responses to the proxy. <p> Our results confirm most of the findings in those studies. Different from those studies, WPB can be used as a tool to pin point the performance problems of a variety of proxy products. Finally, there have been many studies on characteristics of proxy traces <ref> [3, 8, 5, 6, 7] </ref>. Our research borrows results from those studies in designing WPB. 7 Conclusion In this paper, we have described the design of the Wisconsin Proxy Benchmark and the result of using the benchmark to compare four proxy implementations.
Reference: [4] <author> M. Crovella and A. Bestavros. </author> <title> Self-similiarity in world wide web traffic: Evidence and possible causes. </title> <booktitle> In Proc of the 1996 Sigmetrics Conference on Measurment and Modeling of Computer systems Philadelphia, </booktitle> <month> May </month> <year> 1996. </year>
Reference-contexts: The main feature of WPB is that it tries to replicate the workload characteristics found in real-life Web proxy traces. WPB consists of Web client and Web server processes. First, it generate server responses who sizes follow the heavy tailed Pareto distribution described in <ref> [4] </ref>. In other words, it includes very large files with a non-negligible probability. This is important because heavy-tail distribution of file sizes does impact proxy behavior. as it must handle (and store in the local cache) files with a wide range of sizes. <p> The parameter k represents the minimum file size and ff is such that the average file size av is given by ff = average averagek . Typical values of ff and k are 1.1 and 3.0KB, as shown in <ref> [4] </ref>. 2.4 Configuration File The configuration file specifies the following: the machine where the master process runs, the port number that the master process is listening at, the total number of client processes, the total number of server machines, and the specification of the server processes for each server machine.
Reference: [5] <author> Bradley M. Duska, David Marwood, and Michael J. Feeley. </author> <title> The measured access characteristics of world-wide-web client proxy caches. </title> <booktitle> In Proceedings of USENIX Symposium on Internet Technology and Systems, </booktitle> <month> December </month> <year> 1997. </year>
Reference-contexts: Our results confirm most of the findings in those studies. Different from those studies, WPB can be used as a tool to pin point the performance problems of a variety of proxy products. Finally, there have been many studies on characteristics of proxy traces <ref> [3, 8, 5, 6, 7] </ref>. Our research borrows results from those studies in designing WPB. 7 Conclusion In this paper, we have described the design of the Wisconsin Proxy Benchmark and the result of using the benchmark to compare four proxy implementations.
Reference: [6] <author> Steve Gribble and Eric Brewer. </author> <title> System design issues for internet middleware service: Deduction from a large client trace. </title> <booktitle> In Proceedings of USENIX Symposium on Internet Technology and Systems, </booktitle> <month> December </month> <year> 1997. </year>
Reference-contexts: Our results confirm most of the findings in those studies. Different from those studies, WPB can be used as a tool to pin point the performance problems of a variety of proxy products. Finally, there have been many studies on characteristics of proxy traces <ref> [3, 8, 5, 6, 7] </ref>. Our research borrows results from those studies in designing WPB. 7 Conclusion In this paper, we have described the design of the Wisconsin Proxy Benchmark and the result of using the benchmark to compare four proxy implementations.
Reference: [7] <author> Thomas M. Kroeger, Darrell D. E. Long, and Jeffrey C. Mogul. </author> <title> Exploring the bounds of web latency reduction from caching and prefetching. </title> <booktitle> In Proceedings of USENIX Symposium on Internet Technology and Systems, </booktitle> <month> December </month> <year> 1997. </year>
Reference-contexts: Our results confirm most of the findings in those studies. Different from those studies, WPB can be used as a tool to pin point the performance problems of a variety of proxy products. Finally, there have been many studies on characteristics of proxy traces <ref> [3, 8, 5, 6, 7] </ref>. Our research borrows results from those studies in designing WPB. 7 Conclusion In this paper, we have described the design of the Wisconsin Proxy Benchmark and the result of using the benchmark to compare four proxy implementations.
Reference: [8] <author> P. Lorenzetti, L. Rizzo, and L. Vicisano. </author> <title> Replacement policies for a proxy cache. </title> <type> Technical report, </type> <institution> Universita di Pisa, Italy, </institution> <month> October </month> <year> 1996. </year> <note> URL http://www.iet.unipi.it/ luigi/caching.ps.gz. </note>
Reference-contexts: Second, the benchmark generate a request stream that has the same temporal locality as those found in real proxy traces. Studies have shown that the probability that a document is requested t requests after the last request to it is proportional to 1=t <ref> [8, 3] </ref>. The benchmark replicates the probability distribution and measures the hit ratio of the proxy cache. Third, the benchmark emulates Web server latency by letting the server process delay sending back responses to the proxy. <p> Our results confirm most of the findings in those studies. Different from those studies, WPB can be used as a tool to pin point the performance problems of a variety of proxy products. Finally, there have been many studies on characteristics of proxy traces <ref> [3, 8, 5, 6, 7] </ref>. Our research borrows results from those studies in designing WPB. 7 Conclusion In this paper, we have described the design of the Wisconsin Proxy Benchmark and the result of using the benchmark to compare four proxy implementations.
Reference: [9] <author> Carlos Maltzahn, Kathy Richardson, and Dirk Grunwald. </author> <title> Performance issues of enterprise level web proxies. </title> <booktitle> In Proceedings of the 1997 ACM SIGMETRICS International Conference on Measurement and Modelling of Computer Systems, </booktitle> <pages> pages 13-23, </pages> <month> June </month> <year> 1997. </year>
Reference-contexts: As a consequence, proxy N may have problems in handling bursty traffic since this parameter must be statically chosen. for Apache and Cern. However, Cern has a slightly better average latency for caching experiments. These results are consistent to those presented in <ref> [9] </ref>. When caching is disabled, Squid performs better. Figure 11 shows the hit ratio curves. Byte hit ratio is very unstable but it can be seen that Squid can sustain a fairly constant hit ratio, independent of the number of clients. <p> There has also been many studies measuring the performance of Squid proxies in real use <ref> [9, 10] </ref>. Our results confirm most of the findings in those studies. Different from those studies, WPB can be used as a tool to pin point the performance problems of a variety of proxy products.
Reference: [10] <author> Valery Soloviev. </author> <title> Analyzing squid's performance. </title> <type> Private Communication, </type> <year> 1998. </year>
Reference-contexts: There has also been many studies measuring the performance of Squid proxies in real use <ref> [9, 10] </ref>. Our results confirm most of the findings in those studies. Different from those studies, WPB can be used as a tool to pin point the performance problems of a variety of proxy products.
Reference: [11] <author> Gene Trent and Mark Sake. WebSTONE: </author> <title> The first generation in HTTP server benchmarking. </title> <type> Technical report, </type> <institution> MTS, Silicon Graphics Inc., </institution> <month> February </month> <year> 1995. </year> <note> available from http://www-europe.sgi.com/TEXT/ Products/WebFORCE/WebStone/paper.html. 18 </note>
Reference-contexts: The utilization of both disk and cpu is much lower for the 28Kbps bandwidth experiment and, as consequence, the overall proxy throughput degrades. 6 Related Work Benchmarking Web servers is an active research area. Several benchmarks for Web servers have been developed, including WebStone <ref> [11] </ref> and SPECWeb. There are also studies on the overload behavior of the benchmarks and improvement of the benchmarks [1]. However none of the benchmarks can be easily used to measure proxy performances. We borrowed several ideas from these benchmarks when designing WPB.
References-found: 11

