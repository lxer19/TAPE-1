URL: ftp://ftp.cs.ucsb.edu/pub/faculty/su/tcs-cp95.ps
Refering-URL: ftp://ftp.cs.ucsb.edu/pub/faculty/su/tcs-cp95.html
Root-URL: http://www.cs.ucsb.edu
Email: E-mail: stephane.grumbach@inria.fr  E-mail: su@cs.ucsb.edu  
Title: Queries with Arithmetical Constraints  
Author: Stephane Grumbach a; and Jianwen Su b; 
Note: An extended abstract of the paper appeared in Proc. Int. Conf. on Principles and Practice of Constraint Programming (CP95), Sept. 1995.  
Address: Rocquencourt BP 105, 78153 Le Chesnay, France,  Santa Barbara, CA 93106, USA,  
Affiliation: a I.N.R.I.A.,  b Department of Computer Science, University of California,  
Abstract: This paper is dedicated to Paris Kanellakis who initiated the field of constraint databases, and deeply influenced our work. Abstract In this paper, we study the expressive power and the complexity of first-order logic with arithmetic, as a query language over relational and constraint databases. We consider constraints over various domains (N, Z, Q, and R), and with various arithmetical operations (6, +, fi, etc.). We first consider the data complexity of first-order queries. We prove in particular that linear queries can be evaluated in AC 0 over finite integer databases, and in NC 1 over linear constraint databases. This improves previously known bounds. We also show that over all domains, enough arithmetic lead to arithmetical queries, therefore, showing the frontiers of constraints for database purposes. We then tackle the problem of the expressive power, with the definability of the parity and the connectivity, which are the most classical examples of queries not expressible in first-order logic over finite structures. We prove that these two queries are first-order definable in presence of (enough) arithmetic. Nevertheless, we show that they are not definable with constraints of interest for constraint databases such as linear constraints for instance. Finally, we developed reduction techniques for queries over constraint databases, that allow us to draw conclusions with respect to their undefinability in various constraint query languages. 
Abstract-found: 1
Intro-found: 1
Reference: [ACGK94] <author> F. Afrati, S. Cosmadakis, S. Grumbach, and G. Kuper. </author> <title> Expressiveness of linear vs. polynomial constraints in database query languages. </title> <booktitle> In Proc. Workshop on the Principles and Practice of Constraint Programming, </booktitle> <year> 1994. </year>
Reference-contexts: We prove here that parity and connectivity are definable over the natural numbers or the rationals with addition and multiplication, and over the reals with super-exponentiation. On the other hand these queries are not definable with addition only. The expressive power of linear queries has also been studied in <ref> [ACGK94] </ref>. Recently, it was shown in [BDLW95] that parity was not definable with polynomial constraints over the reals. This later result was obtained by non-standard techniques. We develop reduction techniques to prove the undefinability of numerous queries under the assumption that parity is not definable.
Reference: [AHV95] <author> S. Abiteboul, R. Hull, and V. Vianu. </author> <title> Foundations of Databases. </title> <publisher> Addison-Wesley, </publisher> <year> 1995. </year>
Reference-contexts: The formal foundations have been studied in the context of finite model theory [Fag93], which is the 5 model theory of finite structures. This field has attracted a recent and large development mainly due to its connection to database theory <ref> [AHV95] </ref>. Finite model theory differs drastically form classical model theory. Indeed, the two fundamental theorems of classical logic, the compactness and the completeness theorems, fail in the context of finite models. <p> Attribute names are usually denoted by A; B; C; ::: (and possibly with subscripts). When the context is clear, we may blur the distinction between variables and attribute names. Let be a schema. The family of algebraic expressions (over ) is defined inductively in the usual manner (see <ref> [AHV95] </ref>) from the operators: Cartesian product, fi, selection 3 , F (where F is an atomic formula in L on attributes), projection, B 1 ;:::;B k (where B 1 ; :::; B k are attribute names), set operations, ; "; [, and rename A!B . <p> We prove in the next section that it can be done in polynomial length for the families of databases considered here. 13 similar to that of the equivalence of the classical relational algebra and calculus over finite structures (see <ref> [AHV95] </ref>). Theorem 3.6 [GST94] FO L = ALG L . We illustrate the above result with the following example. <p> Data complexity of first-order queries over finite integer databases We first consider the complexity of queries over finite databases. It is well known in finite model theory that first-order logic with no arithmetic has AC 0 data complexity <ref> [AHV95] </ref>. The proof is relatively simple and best realized in the context of the relational algebra which is equivalent to first-order queries [Cod70]. We briefly review the proof in the case of the relational algebra over finite structures as it is sketched in [AHV95]. <p> no arithmetic has AC 0 data complexity <ref> [AHV95] </ref>. The proof is relatively simple and best realized in the context of the relational algebra which is equivalent to first-order queries [Cod70]. We briefly review the proof in the case of the relational algebra over finite structures as it is sketched in [AHV95]. In the case of finite relations, the circuits are constructed uniformly as follows.
Reference: [BDLW95] <author> M. Benedikt, G. Dong, L. Libkin, and L. Wong. </author> <title> Relational expressive power of constraint query languages. </title> <type> manuscript, </type> <year> 1995. </year>
Reference-contexts: On the other hand these queries are not definable with addition only. The expressive power of linear queries has also been studied in [ACGK94]. Recently, it was shown in <ref> [BDLW95] </ref> that parity was not definable with polynomial constraints over the reals. This later result was obtained by non-standard techniques. We develop reduction techniques to prove the undefinability of numerous queries under the assumption that parity is not definable. <p> We illustrate these techniques on queries from geometry, topology, computational geometry [Yao90], graph theory, and geographical databases, and we investigate their first-order definability in various contexts. Our reduction results combined with the result of <ref> [BDLW95] </ref> answer most of the definability questions over constraint databases found in the literature. The paper is organized as follows. In the next section, we present the concept of relational databases and constraint databases. <p> Therefore parity is not definable in first-order over hR; 6; +i. A different technique was exhibited in [PVV95] for the case of real numbers. ffi Recently, Benedikt, Dong, Libkin, and Wong <ref> [BDLW95] </ref> have extended the above result and proved that parity is not expressible in first order over real numbers with addition and multiplication. Theorem 4.2 [BDLW95] parity is not definable in the context structure hR; 6; +; fii. <p> A different technique was exhibited in [PVV95] for the case of real numbers. ffi Recently, Benedikt, Dong, Libkin, and Wong <ref> [BDLW95] </ref> have extended the above result and proved that parity is not expressible in first order over real numbers with addition and multiplication. Theorem 4.2 [BDLW95] parity is not definable in the context structure hR; 6; +; fii. The proof, rather complex, relies on powerful model theoretic techniques. 21 We next prove a positive result, namely that parity is definable over the structure of number theory hN; 6; +; fii. <p> The theory of the rational field is therefore undecidable, 22 and parity can be defined in the same way as over the natural numbers. ffi For the real field, the situation is different since the theory of hR; 6; +; fii is decidable [Tar51] and parity is not definable <ref> [BDLW95] </ref>. However, parity can be defined over the reals with the super-exponentiation function x y . (But the exponential function e x is not sufficient [BDLW95].) Theorem 4.6 parity is definable in hR; 6; +; fi; x y i. Proof: The technique is similar to the previous cases. <p> ffi For the real field, the situation is different since the theory of hR; 6; +; fii is decidable [Tar51] and parity is not definable <ref> [BDLW95] </ref>. However, parity can be defined over the reals with the super-exponentiation function x y . (But the exponential function e x is not sufficient [BDLW95].) Theorem 4.6 parity is definable in hR; 6; +; fi; x y i. Proof: The technique is similar to the previous cases.
Reference: [BKR86] <author> M. Ben-Or, D. Kozen, and J. Reif. </author> <title> The complexity of elementary algebra and geometry. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 32(2) </volume> <pages> 251-264, </pages> <month> April </month> <year> 1986. </year>
Reference-contexts: On the other hand the complexity is bounded in the real context. This follows from the decidability of the theory of real closed fields [Tar51], and its tractability for a fixed number of variables <ref> [BKR86] </ref>. The data complexity was shown to be in NC in [KKR90] in a more general context. This result has been 16 improved in the present context. Benedikt and Libkin [BL96] proved a TC 0 upper-bound. TC 0 extends AC 0 with threshold gates.
Reference: [BL96] <author> M. Benedikt and L. Libkin. </author> <title> On the structure of queries in constraint query languages. </title> <booktitle> In Proc. 11th Annual IEEE Symposium on Logic in Computer Science, </booktitle> <year> 1996. </year>
Reference-contexts: On the other hand, we proved that while polynomial queries over the reals can be evaluated in NC [BKR86,KKR90], polynomial queries over the natural numbers, the integers and the rationals are arithmetical. The initial NC result was then improved. It was shown in <ref> [BL96] </ref> that a TC 0 bound holds for polynomial constraints over the reals. <p> The data complexity was shown to be in NC in [KKR90] in a more general context. This result has been 16 improved in the present context. Benedikt and Libkin <ref> [BL96] </ref> proved a TC 0 upper-bound. TC 0 extends AC 0 with threshold gates. AC 0 TC 0 NC 1 . Fig. 1 summarizes the complexity of query languages over various domains and with various arithmetic operations over finite integer databases.
Reference: [BSS89] <author> L. Blum, M. Shub, and S. Smale. </author> <title> On a theory of computation and complexity over the real numbers. </title> <journal> Bull. Amer. Math. Soc., </journal> <volume> 21 </volume> <pages> 1-46, </pages> <year> 1989. </year>
Reference-contexts: Various complexity models have been defined in the context of arithmetic following two main trends, the arithmetic model and the bit model of complexity [Ren92]. The arithmetic complexity <ref> [BSS89] </ref> refers to a model of computation for real numbers restricted to the arithmetic operations +; ; fi; ffi with infinite precision (no rounding errors), with the comparisons = and &lt;. These operations correspond to an atomic computation step independent of the size of the numbers involved in the computation.
Reference: [CH80] <author> A. K. Chandra and D. Harel. </author> <title> Computable queries for relational data bases. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 21(2) </volume> <pages> 156-78, </pages> <year> 1980. </year>
Reference-contexts: Ehrenfeucht-Frasse games apply, but they lead to 3 inextricable combinatorics [GS94], while locality and 0/1 laws do not work already in the presence of an order relation. On the other hand, the parity and connectivity queries have nothing to do with arithmetic. They are generic <ref> [CH80] </ref>, i.e., they commute with permutations of the domain, even permutations violating the order and the arithmetic operations. The increase of the number of relations and arithmetic functions in a first-order language generally results in an increase of its expressive power.
Reference: [CH82] <author> A. K. Chandra and D. Harel. </author> <title> Structure and complexity of relational queries. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 25(1) </volume> <pages> 99-128, </pages> <year> 1982. </year>
Reference: [CK73] <author> C. C. Chang and H. J. Keisler. </author> <title> Model Theory, </title> <booktitle> volume 73 of Studies in Logic. </booktitle> <publisher> North-Holland, </publisher> <year> 1973. </year>
Reference-contexts: 1 Introduction The expressive power of first-order logic has been studied in classical logic <ref> [CK73] </ref>, where powerful tools, such as the compactness theorem, Ehrenfeucht-Frasse games, etc., provide easy answers to the definability of numerous problems. More recently, a variant of the general problem has been considered with a restriction on the semantics. <p> Note that all theories of the previous structures are decidable and have hyper-exponential complexity [FR79,Ren92]. The structure Q satisfies the theory of dense order without endpoints that is known to be complete <ref> [CK73] </ref>. Moreover, it admits elimination of quantifiers, which as we shall see in the following is the fundamental property of constraint databases. The structure R satisfies the theory of ordered real closed fields which, like the theory of dense order without endpoints, is also complete and admits elimination of quantifiers [CK73]. <p> <ref> [CK73] </ref>. Moreover, it admits elimination of quantifiers, which as we shall see in the following is the fundamental property of constraint databases. The structure R satisfies the theory of ordered real closed fields which, like the theory of dense order without endpoints, is also complete and admits elimination of quantifiers [CK73].
Reference: [CK95] <author> J. Chomicki and G. Kuper. </author> <title> Measuring infinite relations. </title> <booktitle> In Proc. 14th ACM Symp. on Principles of Database Systems, </booktitle> <address> San Jose, </address> <month> May </month> <year> 1995. </year> <month> 30 </month>
Reference: [Cod70] <author> E. F. Codd. </author> <title> A relational model of data for large shared data banks. </title> <journal> Communications of ACM, </journal> <volume> 13(6) </volume> <pages> 377-387, </pages> <year> 1970. </year>
Reference-contexts: A k-ary finitely representable relation (or generalized relation in [KKR90]) is then a finite set of k-ary generalized tuples. In this framework, a tuple [a; b] in the context of classical relational databases <ref> [Cod70] </ref> is an abbreviation for the formula (x = a ^ y = b) represented using only the equality symbol, "=", and constants. Geometric objects can easily be defined. <p> It is well known in finite model theory that first-order logic with no arithmetic has AC 0 data complexity [AHV95]. The proof is relatively simple and best realized in the context of the relational algebra which is equivalent to first-order queries <ref> [Cod70] </ref>. We briefly review the proof in the case of the relational algebra over finite structures as it is sketched in [AHV95]. In the case of finite relations, the circuits are constructed uniformly as follows.
Reference: [Col75] <author> G. E. Collins. </author> <title> Quantifier elimination for real closed fields by cylindric decompositions. </title> <booktitle> In Proc. 2nd GI Conf. Automata Theory and Formal Languages, volume 35 of Lecture Notes in Computer Science, </booktitle> <pages> pages 134-83. </pages> <publisher> Springer-Verlag, </publisher> <year> 1975. </year>
Reference-contexts: For each cell, we select those which have an empty intersection with R. This last set defines R c . The first claim follows immediately. The number of cells is bounded by a polynomial function in n (see also <ref> [Col75] </ref> for a more general case). The complement of R, R c , can easily be computed in NC 1 . The set P is computed by the resolution (in parallel) of systems of two two-variate equations.
Reference: [CSV84] <author> A. K. Chandra, L. Stockmeyer, and U. Vishkin. </author> <title> Constant depth reducibility. </title> <journal> SIAM Journal on Computing, </journal> <volume> 13(2) </volume> <pages> 423-439, </pages> <month> May </month> <year> 1984. </year>
Reference-contexts: It is clear that the above reductions are first order 6-reductions. ffi It has already been shown [FSS84,CSV84] that parity reduces to (finite graph) connectivity. Moreover, several classes of (graph) equivalent problems were presented in <ref> [CSV84] </ref> under "projection" and "constant-depth truth-table" reductions. The reduction results can also be established in terms of 6-reductions. For example, the following shows the 6-reduction from majority to (graph) connectivity. Theorem 5.4 majority is first-order 6-reducible to connectivity.
Reference: [Dri82] <author> L. Van den Dries. </author> <title> Remarks on Tarski's problem concerning (r; +; fi; exp). </title> <booktitle> In Logic Colloquium, </booktitle> <publisher> North-Holland, </publisher> <address> 1982. </address> <publisher> Elsevier. </publisher>
Reference-contexts: The binary relation defined by cosine for instance is not finitely representable in L fi <ref> [Dri82] </ref>. Definition 2.3 Let A be an L-structure with universe A. An n-ary relation S A n is finitely representable in L (L-representable for short) over A (A is omitted when it is clear from the context) if it is represented by a formula in L over A.
Reference: [Ehr61] <author> A. Ehrenfeucht. </author> <title> An application of games to the completeness problem for formalized theories. </title> <journal> Fund. Math, </journal> <volume> 49, </volume> <year> 1961. </year>
Reference: [End72] <author> H. B. Enderton. </author> <title> A Mathematical Introduction to Logic. </title> <publisher> Academic Press, Inc., </publisher> <year> 1972. </year>
Reference-contexts: First-order logic with arithmetic is treated in great detail in <ref> [End72] </ref>, which is of great help for the present topic. We now review the well known framework of finite relational databases [Cod70,Ull88,AHV95]. The universe is restricted to the natural numbers, possibly with the order, but without arithmetic. <p> The converse is also true. Examples of such theories include the theory of dense-order without endpoints, and the theory of the real closed field. Not all the structures considered in the paper admit quantifier elimination procedures. Example 3.4 <ref> [End72] </ref> The theory of hN; 6; +i (a.k.a. Presburger arithmetic) does not admit quantifier elimination. <p> Details follow in the sequel about finitely representable databases. For richer languages, there is a serious gap of data complexity. This gap exists already for the complexity of the decision problem of the logical theories, Presburger arithmetic [Pre29,FR79] versus number theory <ref> [End72] </ref>. Theorem 3.11 First-order queries in the contexts of the natural numbers, hN; 6; +; fii, the integers, hZ; 6; +; fii, and the rationals hQ; 6; +; fii define mappings in the arithmetical hierarchy. <p> All these relations are first-order definable (for first-order definability of relations and functions, see <ref> [End72] </ref>). The formula ' 0 (d; n) defines the biggest prime divisor d of n. It is easily expressed in first-order. The formula (x; y) defines the set of pairs of the form (ff k ; k), where ff k is the k th prime number. <p> It is easily expressed in first-order. The formula (x; y) defines the set of pairs of the form (ff k ; k), where ff k is the k th prime number. The definition of is given in <ref> [End72] </ref>. The parity of R is finally expressed by the sentence: 8n 8d 8k (('(R; n) ^ ' 0 (d; n) ^ (d; k)) ) div (2; k)): ffi The proof of Theorem 4.3 now follows from the fact that the exponentiation function is definable in hN; 6; +; fii [End72]. <p> <ref> [End72] </ref>. The parity of R is finally expressed by the sentence: 8n 8d 8k (('(R; n) ^ ' 0 (d; n) ^ (d; k)) ) div (2; k)): ffi The proof of Theorem 4.3 now follows from the fact that the exponentiation function is definable in hN; 6; +; fii [End72]. Interestingly, for the natural numbers, N, + is definable in first order using fi and 6, or by divisibility (div ) and 6 [Rob49]. Therefore, parity is definable in the structures hN; 6; fii and hN; 6; div i. parity is also definable with multiplication over the rational numbers. <p> Let K and L be the corresponding first and second projections. The functions J , K and L are definable using f6; +; fig <ref> [End72] </ref>.
Reference: [Fag74] <author> R. Fagin. </author> <title> Generalized first-order spectra and polynomial-time recognizable sets. </title> <editor> In R. M. Karp, editor, </editor> <booktitle> Complexity of Computation, SIAM-AMS Proceedings, </booktitle> <volume> Vol. 7, </volume> <pages> pages 43-73, </pages> <year> 1974. </year>
Reference-contexts: They are especially interesting, since they involve two basic primitives: counting and recursion. Their undefinability was shown by various proof techniques such as locality [Gai81], asymptotic probabilities <ref> [Fag74] </ref>, Ehrenfeucht-Frasse games [Fra54,Ehr61], etc. The undefinability results also hold in the presence of an order relation on the domain [Gur88]. It was shown in [GS94] that the model theory of finitely representable structures, differs strongly from the classical model theory of all structures.
Reference: [Fag76] <author> R. Fagin. </author> <title> Probabilities on finite models. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 41(1) </volume> <pages> 50-58, </pages> <year> 1976. </year>
Reference-contexts: The problem differs drastically from the initial one, since most of the powerful tools of classical logic fail when the semantics is restricted to classes of models, such as finite models. New techniques have been developed such as the study of the asymptotic probabilities of the truth of sentences <ref> [Fag76] </ref>. Finite model theory is strongly motivated by database theory. A relational database is simply a finite structure. The new applications of database systems (e.g. geographical information) have lead to new data models, appropriate for the manipulation of geometrical, topological, and arithmetical information.
Reference: [Fag93] <author> R. Fagin. </author> <title> Finite model theory | a personal perspective. </title> <journal> Theoretical Computer Science, </journal> <volume> 116(1) </volume> <pages> 3-31, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: More recently, a variant of the general problem has been considered with a restriction on the semantics. The definability over the class of finite structures has attracted a considerable attention in the emerging field of finite model theory <ref> [Fag93] </ref>. The problem differs drastically from the initial one, since most of the powerful tools of classical logic fail when the semantics is restricted to classes of models, such as finite models. <p> In particular, most of the classical results of logic such as the compactness and the completeness theorems fail for finitely representable structures, like for finite models (see the survey by Fagin <ref> [Fag93] </ref>). Constraint databases thus introduce a new area of research on first-order definability. The previous unde-finability results were shown for domains allowing at most an order relation. It is particularly challenging that the existing techniques do not carry over in presence of arithmetic. <p> The theoretical framework of relational databases is therefore restricted to finite models in contrast to all models in classical logic. The formal foundations have been studied in the context of finite model theory <ref> [Fag93] </ref>, which is the 5 model theory of finite structures. This field has attracted a recent and large development mainly due to its connection to database theory [AHV95]. Finite model theory differs drastically form classical model theory.
Reference: [FR79] <author> J. Ferrante and C. W. Rackoff. </author> <title> The Computational Complexity of Logical Theories, </title> <booktitle> volume 718 of Lecture Notes in Mathematics. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1979. </year>
Reference: [Fra54] <author> R. Frasse. </author> <title> Sur les classifications des systemes de relations. </title> <type> Publ. </type> <institution> Sci. Univ Alger, I:1, </institution> <year> 1954. </year>
Reference: [FSS84] <author> M. Furst, J. B. Saxe, and M. Sipser. </author> <title> Parity, circuits, and the polynomial-time hierarchy. </title> <journal> Math. Syst. Theory, </journal> <volume> 17 </volume> <pages> 13-27, </pages> <year> 1984. </year>
Reference-contexts: Consider the following input: R = f [ a b ; c]g, and the query 8xy (R (x; y) ! x = y), with the equality predicate. The query is satisfied by R iff a = b fi c holds. This cannot be checked in AC 0 <ref> [FSS84] </ref>. This example shows that even without order, rational numbers lead to more com plex evaluation than AC 0 . The AC 0 bound can be extended to the case of linear queries, as shown in the following proposition. <p> The proof exhibits an AC 0 data complexity upper-bound for first order logic with order and addition over rational numbers, over inputs that are finite subsets of N k . Since parity is not in AC 0 <ref> [FSS84] </ref>, it follows that parity is not definable. Assume now that there is a sentence ' over hR; 6; +i which expresses parity of a set of reals. Then, ' is also a sentence over hQ; 6; +i, which also expresses parity of a set of rationals. <p> We consider 6-reductions, f6; +g-reductions, and f6; +; fig-reductions. Note that 6-reductions are AC 0 reductions. When databases involve only integers, f6; +g-reductions are also in AC 0 [GST94]. This is not the case of f6; +; fig-reductions since multiplica tion is not in AC 0 <ref> [FSS84] </ref>. As an interesting aside, Gaifman [Gai81] proved that numerous queries were not definable in first-order logic with only equality using the locality property. This property doesn't carry over in presence of order. Lemma 5.2 Let L 00 L 0 ( L) be two first order languages.
Reference: [Gai81] <author> H. Gaifman. </author> <title> On local and non local properties. </title> <editor> In J. Stern, editor, </editor> <booktitle> Proc. Herbrand Symposium Logic Colloquium, </booktitle> <pages> pages 105-135. </pages> <publisher> North Holland, </publisher> <year> 1981. </year>
Reference-contexts: They are especially interesting, since they involve two basic primitives: counting and recursion. Their undefinability was shown by various proof techniques such as locality <ref> [Gai81] </ref>, asymptotic probabilities [Fag74], Ehrenfeucht-Frasse games [Fra54,Ehr61], etc. The undefinability results also hold in the presence of an order relation on the domain [Gur88]. It was shown in [GS94] that the model theory of finitely representable structures, differs strongly from the classical model theory of all structures. <p> Note that 6-reductions are AC 0 reductions. When databases involve only integers, f6; +g-reductions are also in AC 0 [GST94]. This is not the case of f6; +; fig-reductions since multiplica tion is not in AC 0 [FSS84]. As an interesting aside, Gaifman <ref> [Gai81] </ref> proved that numerous queries were not definable in first-order logic with only equality using the locality property. This property doesn't carry over in presence of order. Lemma 5.2 Let L 00 L 0 ( L) be two first order languages.
Reference: [GG94] <author> E. Gradel and Y. Gurevich. </author> <title> Metafinite model theory. </title> <editor> In D. Leivant, editor, </editor> <booktitle> Logic and Computational Complexity, number 960 in Lecture Notes in Computer Science. </booktitle> <publisher> Springer Verlag, </publisher> <year> 1994. </year>
Reference-contexts: This trend is currently very active [KW95]. This model has been used to develop a descriptive complexity over the reals [GM95] for a special class of models in the spirit of the meta-finite structures of <ref> [GG94] </ref>, associating a finite structure with the real field. The arithmetic model lacks a sensitivity to the size of numbers, which seems fundamental in the database context.
Reference: [GL95] <author> S. Grumbach and Z. Lacroix. </author> <title> Computing queries on linear constraint databases. </title> <booktitle> In Proc. Fifth Int. Workshop on Database Programming Languages, </booktitle> <address> Gubbio, </address> <year> 1995. </year> <month> 31 </month>
Reference-contexts: z j 9x9y (R (x; y) ^ y = 2x + z) : The equivalent algebra query is: A 2 B=A 1 +A 2 A 1 =A+A ( R fi (A 1 : Q) fi (A 2 : Q) ) : ffi Optimization techniques for linear queries were investigated in <ref> [GL95] </ref>. 3.3 Data complexity We next consider the complexity of evaluating queries over finite or finitely representable databases. Various complexity models have been defined in the context of arithmetic following two main trends, the arithmetic model and the bit model of complexity [Ren92].
Reference: [GM95] <author> E. Gradel and K. Meer. </author> <title> Descriptive complexity theory over the real numbers. </title> <booktitle> In Proc. ACM SIGACT Symp. on the Theory of Computing, </booktitle> <year> 1995. </year>
Reference-contexts: These operations correspond to an atomic computation step independent of the size of the numbers involved in the computation. This trend is currently very active [KW95]. This model has been used to develop a descriptive complexity over the reals <ref> [GM95] </ref> for a special class of models in the spirit of the meta-finite structures of [GG94], associating a finite structure with the real field. The arithmetic model lacks a sensitivity to the size of numbers, which seems fundamental in the database context.
Reference: [GS94] <author> S. Grumbach and J. Su. </author> <title> Finitely representable databases (extended abstract). </title> <booktitle> In Proc. 13th ACM Symp. on Principles of Database Systems, </booktitle> <year> 1994. </year>
Reference-contexts: Their undefinability was shown by various proof techniques such as locality [Gai81], asymptotic probabilities [Fag74], Ehrenfeucht-Frasse games [Fra54,Ehr61], etc. The undefinability results also hold in the presence of an order relation on the domain [Gur88]. It was shown in <ref> [GS94] </ref> that the model theory of finitely representable structures, differs strongly from the classical model theory of all structures. <p> The previous unde-finability results were shown for domains allowing at most an order relation. It is particularly challenging that the existing techniques do not carry over in presence of arithmetic. Ehrenfeucht-Frasse games apply, but they lead to 3 inextricable combinatorics <ref> [GS94] </ref>, while locality and 0/1 laws do not work already in the presence of an order relation. On the other hand, the parity and connectivity queries have nothing to do with arithmetic.
Reference: [GS95] <author> S. Grumbach and J. Su. </author> <title> Dense order constraint databases. </title> <booktitle> In Proc. 14th ACM Symp. on Principles of Database Systems, </booktitle> <address> San Jose, </address> <month> May </month> <year> 1995. </year>
Reference: [GST94] <author> S. Grumbach, J. Su, and C. Tollu. </author> <title> Linear constraint query languages: Expressive power and complexity. In Logic and Computational Complexity: </title> <booktitle> International Workshop LCC '94. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: First-order queries can also be written in algebraic form. The success of the relational model is largely due to the existence of an algebraic framework, equivalent to the calculus, and which allows efficient optimization and implementation techniques. We recall the algebra for finitely representable relations that was introduced in <ref> [GST94] </ref>. It plays a fundamental role in the proof techniques for the data complexity on Boolean circuits. We recall the algebraic operators. Suppose R is an n-ary relation represented by a quantifier-free formula, ', of the form: ' i=1 j=1 where the ' i;j 's are atomic formulas. <p> We prove in the next section that it can be done in polynomial length for the families of databases considered here. 13 similar to that of the equivalence of the classical relational algebra and calculus over finite structures (see [AHV95]). Theorem 3.6 <ref> [GST94] </ref> FO L = ALG L . We illustrate the above result with the following example. <p> Databases are encoded in a standard way as strings on the machine tape. Rational numbers are encoded as pairs of integers, which are encoded in their binary representation. Let be a database schema. An (A; )-database in 14 stance I, is encoded following the standard encoding of <ref> [GST94] </ref>. The size of a database is by definition the size of its standard encoding. The data complexity of a query measures the resources (time, space, number of processors, etc.) needed to evaluate the query on a computing device (Turing machine, Boolean circuit, etc.) with respect to the database size. <p> Proposition 3.10 First-order queries over finite integer databases in the con texts hN; 6; +i; hZ; 6; +i; hQ; 6; +i, or hR; 6; +i have AC 0 data complexity. The proof follows from techniques developed in <ref> [GST94] </ref> to establish the AC 0 bound for finitely representable linear constraint databases. Details follow in the sequel about finitely representable databases. For richer languages, there is a serious gap of data complexity. <p> Instead of assuming a normalization of all relations, it is possible to consider restricted classes of inputs. In particular, for finitely representable integer databases, the AC 0 bound holds for first-order limited to an order relation as shown in Fig. 2. An AC 0 bound was obtained in <ref> [GST94] </ref> for linear constraint queries and databases representable in f=; 6; +g [ Z with the number of occurrences of + in every constraint uniformly bounded. This result is also used to show the data complexity for finite integer databases (Fig. 1). <p> Assume for a moment that the operations projection and complement (with which set-difference can be defined), are done with black boxes proj and comp. Then it follows from the detailed technique developed in <ref> [GST94] </ref>, that linear queries can be computed on circuits with arbitrary fan-in, gates and, or, neg, proj, and comp, in constant depth (depending only upon the query), with a polynomial (in the size of the input database) number of gates. <p> Proof of Theorem 3.12: The proof is by induction on the structure of the formula expressing the query. It follows the steps of the proof of Theorem 5.2 in <ref> [GST94] </ref>, and is therefore omitted. ffi The arithmetic power is obtained exactly in the same cases (polynomial constraints) as before for identical reasons. <p> The next theorem shows that addition is inadequate to define parity. Theorem 4.1 [GST94,PVV95] parity is definable in none of the following additive context structures: hN; 6; +i; hQ ; 6; +i, and hR; 6; +i. Proof: The result was shown in <ref> [GST94] </ref> in the case of the rational numbers. The proof exhibits an AC 0 data complexity upper-bound for first order logic with order and addition over rational numbers, over inputs that are finite subsets of N k . <p> We consider 6-reductions, f6; +g-reductions, and f6; +; fig-reductions. Note that 6-reductions are AC 0 reductions. When databases involve only integers, f6; +g-reductions are also in AC 0 <ref> [GST94] </ref>. This is not the case of f6; +; fig-reductions since multiplica tion is not in AC 0 [FSS84]. As an interesting aside, Gaifman [Gai81] proved that numerous queries were not definable in first-order logic with only equality using the locality property.
Reference: [Gur88] <author> Y. Gurevich. </author> <booktitle> Logic and the challenge of computer science. In Current Trends in Theoretical Computer Science, </booktitle> <pages> pages 1-57. </pages> <publisher> Computer Science Press, </publisher> <year> 1988. </year>
Reference-contexts: They are especially interesting, since they involve two basic primitives: counting and recursion. Their undefinability was shown by various proof techniques such as locality [Gai81], asymptotic probabilities [Fag74], Ehrenfeucht-Frasse games [Fra54,Ehr61], etc. The undefinability results also hold in the presence of an order relation on the domain <ref> [Gur88] </ref>. It was shown in [GS94] that the model theory of finitely representable structures, differs strongly from the classical model theory of all structures. <p> Various other results also fail such as the recursive enumerability of the set of sentences valid over finite models [Tra50], or Beth's theorem on the equivalence between implicit and explicit definitions <ref> [Gur88] </ref>. These results are fundamental to prove in particular expressive power results, and explain the need to develop alternative proof methods in finite model theory. We shall see that the situation is even worse for constraint databases. We now consider constraint databases.
Reference: [Hul86] <author> R. Hull. </author> <title> Relative information capacity of simple relational schemata. </title> <journal> SIAM Journal on Computing, </journal> <volume> 15(3) </volume> <pages> 856-886, </pages> <year> 1986. </year>
Reference-contexts: The gener-icity implies in particular that if two databases, I and J , over are isomorphic by an isomorphism, then the answers Q (I) and Q (J ) are also isomorphic by the same isomorphism. Genericity was later generalized to "C-genericity" by Hull <ref> [Hul86] </ref> to allow the use of a fixed set C of constants (which are left fixed by the isomorphisms) in a query expression. In this paper, we only consider the genericity notion in its original form, though the results are generalizable.
Reference: [Imm87] <author> N. Immerman. </author> <title> Languages that capture complexity classes. </title> <journal> SIAM Journal on Computing, </journal> <volume> 16(4) </volume> <pages> 760-778, </pages> <year> 1987. </year>
Reference-contexts: We prove in this section that none of the queries studied here are first order expressible neither in the additive context structures, nor in hR; 6; +; fii. The proofs are based on first order reductions <ref> [Imm87] </ref> from the parity query. We present in the following the notion of first-order reduction [Imm87] and then establish reductions among the queries under consideration. 24 Let L 0 L be a first order language and a schema. <p> The proofs are based on first order reductions <ref> [Imm87] </ref> from the parity query. We present in the following the notion of first-order reduction [Imm87] and then establish reductions among the queries under consideration. 24 Let L 0 L be a first order language and a schema.
Reference: [Joh90] <author> D. S. Johnson. </author> <title> A catalog of complexity classes. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, volume A, chapter 2, </booktitle> <pages> pages 67-162. </pages> <publisher> North Holland, </publisher> <year> 1990. </year>
Reference-contexts: based on Turing machines such as LOGSPACE and PTIME, classes based on Boolean circuits, with and, or, and neg gates, such as AC 0 with constant depth, a polynomial number of gates with arbitrary fan-in, and NC with polylog depth, a polynomial number of processors and bounded fan-in gates (see <ref> [Joh90] </ref> for a detailed exposition of these classes). We also consider the class NC 1 NC based on circuits with logarithmic depth, a polynomial number of processors (bounded fan-in gates). We define formally the size of a database as follows. This precise definition is fundamental for Boolean circuits.
Reference: [KG94] <author> P. C. Kanellakis and D. Q. Goldin. </author> <title> Constraint programming and database query languages. </title> <booktitle> In Proc. 2nd Conference on Theoretical Aspects of Computer Software (TACS), volume 789 of Lecture notes in computer science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: Interesting constraint query languages are then obtained by coupling the relational calculus (or some version of Datalog) with the decidable theory. Different types of constraints were considered in [KKR90] such as dense linear order inequalities <ref> [KG94] </ref>, real polynomial inequalities, etc. These constraints are based on decidable theories that admit elimination of quantifiers. <p> Complexity of first-order queries over finitely representable databases More recently, Kanellakis and Goldin <ref> [KG94] </ref> proved that the query language of dense order constraints over the reals (without +; fi) has an AC 0 data complexity upper bound when dealing with finitely representable inputs in some normal form.
Reference: [KKR90] <author> P. Kanellakis, G. Kuper, and P. Revesz. </author> <title> Constraint query languages. </title> <booktitle> In Proc. 9th ACM Symp. on Principles of Database Systems, </booktitle> <pages> pages 299-313, </pages> <address> Nashville, </address> <year> 1990. </year>
Reference-contexts: New applications such as those involving temporal and spatial data lead very naturally to more general data models allowing infinite collections of items to be stored in the database. Constraint databases, introduced by Kanellakis, Kuper, and Revesz in their seminal paper <ref> [KKR90] </ref>, constitute a powerful generalization of Codd's relational model. In this new paradigm, instead of tuples, queries act on "generalized tuples" expressed as quantifier-free first-order formulas in a decidable (first-order) theory. <p> Interesting constraint query languages are then obtained by coupling the relational calculus (or some version of Datalog) with the decidable theory. Different types of constraints were considered in <ref> [KKR90] </ref> such as dense linear order inequalities [KG94], real polynomial inequalities, etc. These constraints are based on decidable theories that admit elimination of quantifiers. <p> These results are fundamental to prove in particular expressive power results, and explain the need to develop alternative proof methods in finite model theory. We shall see that the situation is even worse for constraint databases. We now consider constraint databases. Kanellakis, Kuper, and Revesz <ref> [KKR90] </ref> introduced the concept of k-ary generalized tuple, which is a constraint expressed as a conjunction of atomic formulas in L over k variables. A k-ary finitely representable relation (or generalized relation in [KKR90]) is then a finite set of k-ary generalized tuples. <p> We now consider constraint databases. Kanellakis, Kuper, and Revesz <ref> [KKR90] </ref> introduced the concept of k-ary generalized tuple, which is a constraint expressed as a conjunction of atomic formulas in L over k variables. A k-ary finitely representable relation (or generalized relation in [KKR90]) is then a finite set of k-ary generalized tuples. In this framework, a tuple [a; b] in the context of classical relational databases [Cod70] is an abbreviation for the formula (x = a ^ y = b) represented using only the equality symbol, "=", and constants. <p> Note that for k = 1, the region connectivity, at least and exactly one hole queries can be easily expressed in first order. We also consider the following query, euclidean spanning tree, which is not 6-generic but was conjectured to be inexpressible in first order in <ref> [KKR90] </ref> in the context of R. - euclidean spanning tree, input: a binary relation representing a finite set of points in R 2 ; output: a relation with arity 4 representing a set of pairs of points which are edges of the Euclidean spanning tree. 3.2 Query languages Let L be <p> On the other hand the complexity is bounded in the real context. This follows from the decidability of the theory of real closed fields [Tar51], and its tractability for a fixed number of variables [BKR86]. The data complexity was shown to be in NC in <ref> [KKR90] </ref> in a more general context. This result has been 16 improved in the present context. Benedikt and Libkin [BL96] proved a TC 0 upper-bound. TC 0 extends AC 0 with threshold gates. AC 0 TC 0 NC 1 . <p> The assumption of integer databases versus rational databases is necessary only for AC 0 bounds. We next consider the data complexity over finitely representable databases instead of finite databases. It was shown in <ref> [KKR90] </ref> that first-order for real constraint databases has an NC data complexity upper bound. <p> The result is proved using the algebra for linear constraint databases. The difficult part of the proof is related to the operations of projection and difference, which require some weak form of multiplication. The initial result of <ref> [KKR90] </ref> proving an NC bound for polynomial constraints over the reals applies of course to linear constraints over dense orders, such as the rationals or the reals. We next improve the previous bound, and prove that the data complexity of linear queries is actually NC 1 . <p> Since parity is not definable in f6; +; fig in the context structure hR; 6; +; fii, it follows that none of the above queries are definable. In particular, it was conjectured in <ref> [KKR90] </ref> that Euclidean spanning tree is not expressible in first order. Our results prove that the conjecture holds indeed. <p> In particular, region connectivity, exactly 1 hole, at least 1 hole, eulerian traversal, home-omorphism, and euclidean spanning tree are not definable over real polynomial constraint databases. 29 The results presented in this paper answered many open questions rela-tive to the expressive power of first-order logic with arithmetic. In <ref> [KKR90] </ref>, Kanellakis, Kuper and Revesz conjectured that euclidean spanning tree is not definable with polynomial constraints over the reals, that is in R = hR; 6; +; fii. We proved this is indeed true. <p> It follows that from a practical point of view, query languages for constraint databases should support aggregate functions, such as counting, and recursion mechanisms. These issues have been addressed recently in the literature. Inflationary Datalog with negation was used in the context of dense order constraint databases <ref> [KKR90] </ref>, and aggregate functions were discussed in [Kup93,CK95].
Reference: [KR90] <author> R. Karp and V. Ramachandran. </author> <title> Parallel algorithms for shared memory machines. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, volume A, </booktitle> <pages> pages 869-941. </pages> <publisher> North Holland, </publisher> <year> 1990. </year>
Reference-contexts: The multiplication of two integers can be done on bounded fan-in circuits with O (log n) depth, and O (n log n log log n) size [SS71], and so is in uniform NC 1 with respect to the size of the binary representation of the integers <ref> [KR90] </ref>. We next prove that the projection can be done in NC 1 . More precisely, we prove that for each tuple, there is a circuit of logarithmic depth, with a polynomial number of gates, that computes the projected tuple.
Reference: [Kup93] <author> G. M. Kuper. </author> <title> Aggregation in constraint databases. </title> <booktitle> In Proc. Workshop on the Principles and Practice of Constraint Programming, </booktitle> <pages> pages 176-183, </pages> <month> April </month> <year> 1993. </year>
Reference: [KW95] <author> Ker-I Ko and K. Weihrauch. </author> <title> Computability and complexity in analysis. </title> <booktitle> In Workshop at Fern Universitaet, </booktitle> <year> 1995. </year>
Reference-contexts: These operations correspond to an atomic computation step independent of the size of the numbers involved in the computation. This trend is currently very active <ref> [KW95] </ref>. This model has been used to develop a descriptive complexity over the reals [GM95] for a special class of models in the spirit of the meta-finite structures of [GG94], associating a finite structure with the real field.
Reference: [Pre29] <author> M. </author> <title> Presburger. uber die Vollstandigkeit eines gewissen systems der arithmetik ganzer zahlen, in welchem die addition als einzige operation hervortritt. </title> <booktitle> In Comptes rendus du premier Congres des Mathematiciens des Pays Slaves, </booktitle> <pages> pages 92-101, </pages> <address> Warszawa, </address> <year> 1929. </year> <month> 32 </month>
Reference: [PVV94] <author> J. Paredaens, J. Van den Bussche, and D. Van Gucht. </author> <title> Towards a theory of spatial database queries. </title> <booktitle> In Proc. 13th ACM Symp. on Principles of Database Systems, </booktitle> <pages> pages 279-88, </pages> <year> 1994. </year>
Reference: [PVV95] <author> J. Paredaens, J. Van den Bussche, and D. Van Gucht. </author> <title> First-order queries on finite structures over the reals. </title> <booktitle> In Proc. IEEE Symposium on Logic In Computer Science, </booktitle> <year> 1995. </year>
Reference-contexts: Then, ' is also a sentence over hQ; 6; +i, which also expresses parity of a set of rationals. Therefore parity is not definable in first-order over hR; 6; +i. A different technique was exhibited in <ref> [PVV95] </ref> for the case of real numbers. ffi Recently, Benedikt, Dong, Libkin, and Wong [BDLW95] have extended the above result and proved that parity is not expressible in first order over real numbers with addition and multiplication.
Reference: [Ren92] <author> J. Renegar. </author> <title> On the computational complexity and geometry of the first-order theory of the reals. </title> <journal> Journal of Symbolic Computation, </journal> <volume> 13 </volume> <pages> 255-352, </pages> <year> 1992. </year>
Reference-contexts: Various complexity models have been defined in the context of arithmetic following two main trends, the arithmetic model and the bit model of complexity <ref> [Ren92] </ref>. The arithmetic complexity [BSS89] refers to a model of computation for real numbers restricted to the arithmetic operations +; ; fi; ffi with infinite precision (no rounding errors), with the comparisons = and &lt;.
Reference: [Rev93] <author> P. Z. Revesz. </author> <title> A closed form for datalog queries with integer (gap)-order constraints. </title> <journal> Theoretical Computer Science, </journal> <volume> 116(1) </volume> <pages> 117-149, </pages> <year> 1993. </year>
Reference: [Rev95] <author> P. Revesz. </author> <title> Datalog queries over set constraint databases. </title> <booktitle> In Proc. Int. Conf. on Database Theory, </booktitle> <year> 1995. </year>
Reference: [Rob49] <author> J. Robinson. </author> <title> Decidability and decision problems in arithmetic. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 14 </volume> <pages> 98-114, </pages> <year> 1949. </year>
Reference-contexts: Proof: It is clear in the context of the natural numbers and the integers, where the language provides exactly the power of the arithmetical hierarchy. Now, for the context of the rational numbers, Robinson <ref> [Rob49] </ref> proved that the integers are first-order definable over Q. It follows that, in this later context, number theory can be simulated. ffi We analyze in detail queries in the context of hN; 6; +; fii in Section 4. <p> Interestingly, for the natural numbers, N, + is definable in first order using fi and 6, or by divisibility (div ) and 6 <ref> [Rob49] </ref>. Therefore, parity is definable in the structures hN; 6; fii and hN; 6; div i. parity is also definable with multiplication over the rational numbers. Theorem 4.5 parity is definable in hQ; 6; +; fii. <p> Theorem 4.5 parity is definable in hQ; 6; +; fii. Proof: This follows from the fact that the set of integers, Z, is definable in the rational field <ref> [Rob49] </ref>.
Reference: [Sch86] <author> A. Schrijver. </author> <title> Theory of Linear and Integer Programming. </title> <publisher> Wiley, </publisher> <year> 1986. </year>
Reference-contexts: We apply the well-known Fourier-Motzkin Elimination method to eliminate one by one all existentially quantified variables for the projection in the case of linear constraints. The Fourier-Motzkin elimination method (see for instance <ref> [Sch86] </ref>, pp. 155-157) works as follows.
Reference: [SS71] <author> A Schonhage and V. </author> <title> Strassen. </title> <journal> Schnelle Multiplikation grosser Zahlen. Comp., </journal> <volume> 7 </volume> <pages> 281-292, </pages> <year> 1971. </year>
Reference-contexts: The proof is based on the following observation. The computation of a linear query requires the use of a bounded number of nested integer multiplications, which is known to be computable within logarithmic parallel time <ref> [SS71] </ref>. Order queries have AC 0 bounds while polynomial queries admit the same bound as over finite structures. The data complexity of first-order logic provides an upper-bound on the expressive power. We investigate in detail the impact of the arithmetic. <p> The multiplication of two integers can be done on bounded fan-in circuits with O (log n) depth, and O (n log n log log n) size <ref> [SS71] </ref>, and so is in uniform NC 1 with respect to the size of the binary representation of the integers [KR90]. We next prove that the projection can be done in NC 1 .
Reference: [Tar51] <author> A. Tarski. </author> <title> A Decision Method for Elementary Algebra and Geometry. </title> <institution> University of California Press, Berkeley, California, </institution> <year> 1951. </year>
Reference-contexts: On the other hand the complexity is bounded in the real context. This follows from the decidability of the theory of real closed fields <ref> [Tar51] </ref>, and its tractability for a fixed number of variables [BKR86]. The data complexity was shown to be in NC in [KKR90] in a more general context. This result has been 16 improved in the present context. Benedikt and Libkin [BL96] proved a TC 0 upper-bound. <p> The theory of the rational field is therefore undecidable, 22 and parity can be defined in the same way as over the natural numbers. ffi For the real field, the situation is different since the theory of hR; 6; +; fii is decidable <ref> [Tar51] </ref> and parity is not definable [BDLW95]. However, parity can be defined over the reals with the super-exponentiation function x y . (But the exponential function e x is not sufficient [BDLW95].) Theorem 4.6 parity is definable in hR; 6; +; fi; x y i.
Reference: [Tra50] <author> B. A. Trakhtenbrot. </author> <title> The impossibilty of an algorithm for the decision problem for finite models. </title> <journal> Doklady Akademii Nauk SSR, </journal> <volume> 70 </volume> <pages> 569-572, </pages> <year> 1950. </year>
Reference-contexts: Finite model theory differs drastically form classical model theory. Indeed, the two fundamental theorems of classical logic, the compactness and the completeness theorems, fail in the context of finite models. Various other results also fail such as the recursive enumerability of the set of sentences valid over finite models <ref> [Tra50] </ref>, or Beth's theorem on the equivalence between implicit and explicit definitions [Gur88]. These results are fundamental to prove in particular expressive power results, and explain the need to develop alternative proof methods in finite model theory. We shall see that the situation is even worse for constraint databases.
Reference: [Ull88] <author> J. D. Ullman. </author> <title> Database and Knowledge-Base Systems, volume 1. </title> <publisher> Computer Science Press, </publisher> <year> 1988. </year>
Reference: [Yao90] <author> F. F. Yao. </author> <title> Computational geometry. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, volume A, chapter 7, </booktitle> <pages> pages 343-389. </pages> <publisher> North Holland, </publisher> <year> 1990. </year> <month> 33 </month>
Reference-contexts: This later result was obtained by non-standard techniques. We develop reduction techniques to prove the undefinability of numerous queries under the assumption that parity is not definable. We illustrate these techniques on queries from geometry, topology, computational geometry <ref> [Yao90] </ref>, graph theory, and geographical databases, and we investigate their first-order definability in various contexts. Our reduction results combined with the result of [BDLW95] answer most of the definability questions over constraint databases found in the literature. The paper is organized as follows.
References-found: 51

