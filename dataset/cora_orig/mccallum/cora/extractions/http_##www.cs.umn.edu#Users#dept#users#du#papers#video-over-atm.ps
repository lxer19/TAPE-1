URL: http://www.cs.umn.edu/Users/dept/users/du/papers/video-over-atm.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/du/papers/
Root-URL: http://www.cs.umn.edu
Title: High Speed ATM Network Support for Video-Based Distributed Applications  
Author: Rose P. Tsang and David H.C. Du Allalaghatta Pavan 
Keyword: Asynchronous Transfer Mode (ATM), Distributed Multimedia Systems, High Speed Local Area Networks, traffic smoothing, Transmission Control Protocol (TCP), User Datagram Protocol (UDP), video transmission, Moving Picture Experts Group (MPEG), Joint Photographic Experts Group (JPEG).  
Note: Invited submission to ACM/Springer-Verlag Multimedia Systems Journal  
Address: Minneapolis, MN 55455  Minneapolis, MN 55418  
Affiliation: Distributed Multimedia Center 1 Computer Science Department University of Minnesota  Honeywell Technology Center  
Abstract: Video traffic is expected to be the predominant type of multimedia traffic generated by distributed multimedia applications. In terms of bandwidth, real-time delivery and loss, it is also one of the most demanding on both the network and host systems. This paper presents the performance of JPEG (Joint Photographic Experts Group), MPEG-1 (Moving Picture Experts Group), and MPEG-2 coded video over a local Asynchronous Transfer Mode (ATM) network. TCP (Transmission Control Protocol) and the UDP (User Datagram Protocol) are used as the transport protocols. The performance in terms of delay (jitter) and frame loss, as a function of load, are presented and discussed. The appropiateness of using TCP and UDP over an ATM network to transmit periodic bursty sources, such as coded video, are discussed. When the hosts and the network are stressed, the experimental data reveal that the burstiness of the variable bit rate coded video streams is a significant factor in the resulting performance degradation. Several traffic smoothing schemes are presented. Our results show that traffic smoothing results in a significantly decreased frame loss rate while maintaining acceptable jitter and loss bounds. On the basis of our experimental results, we also discuss requirements for system components, such as the network interface and switch, which are necessary to efficiently support video services. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Agrawal, M., Guha, A., Pavan, A., </author> <title> "A Real-Time Multimedia Network Architecture for Time-Critical Applications", </title> <booktitle> Proceedings of the IEEE Workshop on the Role of Real-Time Multimedia/ Interactive Computing, </booktitle> <address> Durham, NC, </address> <month> November, </month> <year> 1993. </year>
Reference: [2] <author> Andersen, </author> <title> T.M., Cornelius, R.S., "High Performance Switching with Fiber Channel", </title> <booktitle> IEEE Proceedings of CompCon, </booktitle> <pages> pages 261-264, </pages> <year> 1992. </year>
Reference-contexts: Hence, the past several years has seen the emergence of three digital switch-based high-speed network standards: the HIgh Performance Parallel Interface (HIPPI) [12], Fiber Channel <ref> [2, 3] </ref>, and the Asynchronous Transfer Mode (ATM) [5, 11, 14]. HIPPI is a standard aimed at supporting supercomputer applications, such as large-scale visualization and distributed numerical applications, which require relatively infrequent, very large and fast data transfers.
Reference: [3] <institution> ANSI X3T9.3 Fiber Channel Physical and Signalling Interface (FC-PH), </institution> <address> 4.2 edition, </address> <month> November </month> <year> 1993. </year> <month> 25 </month>
Reference-contexts: Hence, the past several years has seen the emergence of three digital switch-based high-speed network standards: the HIgh Performance Parallel Interface (HIPPI) [12], Fiber Channel <ref> [2, 3] </ref>, and the Asynchronous Transfer Mode (ATM) [5, 11, 14]. HIPPI is a standard aimed at supporting supercomputer applications, such as large-scale visualization and distributed numerical applications, which require relatively infrequent, very large and fast data transfers.
Reference: [4] <author> Biagioni, E., Coope, E., Samsom, R., </author> <title> "Designing a Practical ATM LAN", </title> <journal> IEEE Network, </journal> <pages> pages 32-39, </pages> <month> March </month> <year> 1993. </year>
Reference-contexts: Section 4 presents the experimental results. Section 5 presents a discussion of network requirements for the support of video transmission. Section 6 provides our conclusions. 2 ATM: the Next Generation Network ATM <ref> [4, 5, 11] </ref> is a standard developed by the international networking standards committee, CCITT. It is a specification for the network layer protocol of future B-ISDNs. It resides above the physical layer and directly below the ATM Adaptation Layer (AAL) (see Figure 1). <p> The i960 uses local memory to manage pointers to packets, and uses DMA (Direct Memory Access) to move cells out of and into host memory. Cells are never stored in adapter memory. 7 * A Fore Systems Forerunner ASX-100/8 ATM switch. The ASX-100 local ATM switch <ref> [4] </ref> is based on a 2.4 Gbits/sec (gigabit per second) switch fabric and a RISC control processor. The switch supports four network modules with each module supporting up to 622 Mbits/sec.
Reference: [5] <author> Boudec, J., </author> <title> "The Asynchronous Transfer Mode: A Tutorial", </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> Vol. 24, </volume> <pages> pp. 279-309, </pages> <year> 1992. </year>
Reference-contexts: Hence, the past several years has seen the emergence of three digital switch-based high-speed network standards: the HIgh Performance Parallel Interface (HIPPI) [12], Fiber Channel [2, 3], and the Asynchronous Transfer Mode (ATM) <ref> [5, 11, 14] </ref>. HIPPI is a standard aimed at supporting supercomputer applications, such as large-scale visualization and distributed numerical applications, which require relatively infrequent, very large and fast data transfers. <p> It was developed to serve as the transport mechanism for Broadband Integrated Services Digital Network (B-ISDN). Because of its international standardization efforts, it will very likely be available on a worldwide basis and may in the future be incorporated into the public telecommunications infrastructure. The ATM standard <ref> [5, 11, 14] </ref> defines a fast packet switched network where data is fragmented into fixed-size 53 byte cells. It defines the manner in which cells are switched and routed through network packet switches and links. <p> How well is each suited for transmitting multiplexed video streams ? What are their performance tradeoffs ? Protocols which provide end-to-end flow control and re-transmissions, such as TCP, have been considered unsuitable due to the time-sensitive nature of video traffic <ref> [5, 14] </ref>. Packets (frames) must be delivered within a bounded delay or else become meaningless (discarded). End-to-end flow control, such as TCP's sliding window protocol, as well as TCP's retransmission mechanism, have been expected to distort the timing requirement between successive video frames [5, 14], and thus produce unacceptable visual quality <p> to the time-sensitive nature of video traffic <ref> [5, 14] </ref>. Packets (frames) must be delivered within a bounded delay or else become meaningless (discarded). End-to-end flow control, such as TCP's sliding window protocol, as well as TCP's retransmission mechanism, have been expected to distort the timing requirement between successive video frames [5, 14], and thus produce unacceptable visual quality video. The experimental results were initially unexpected. <p> Section 4 presents the experimental results. Section 5 presents a discussion of network requirements for the support of video transmission. Section 6 provides our conclusions. 2 ATM: the Next Generation Network ATM <ref> [4, 5, 11] </ref> is a standard developed by the international networking standards committee, CCITT. It is a specification for the network layer protocol of future B-ISDNs. It resides above the physical layer and directly below the ATM Adaptation Layer (AAL) (see Figure 1).
Reference: [6] <author> Cohen, D., Heyman, D., </author> <title> "A Simulation study of Video Teleconferencing Traffic in ATM Networks", </title> <booktitle> Proceedings of IEEE INFOCOM 1993. </booktitle>
Reference-contexts: Moreover, frame sizes may vary greatly even between consecutive frames. Previous work on the performance of packet switch networks to support variable bit rate sources have used either analytical means or simulation models to predict performance <ref> [6, 8, 10] </ref>. However, accurate analytical models which capture the time-varying correlated nature of the stochastic process that model video streams are usually intractable [15]. It is also obvious that even in simulation models it is not possible to capture all aspects (or even most) of an actual distributed system.
Reference: [7] <institution> Fore Systems, Inc., </institution> <note> ForeRunner SBA-200 ATM SBus Adapter User's Manual, </note> <year> 1993. </year>
Reference-contexts: Each Sun SPARC 2 host is equipped with a Fore Systems SBus ATM host interface SBA-200 as its ATM adapter card. The Series-200 host adapter <ref> [7] </ref> is Fore's second generation interface. It uses an Intel i960 onboard processor. The i960 takes over most of the AAL and cell related tasks including the SAR functions for AAL 3/4 and AAL 5, as well as cell multiplexing.
Reference: [8] <author> Friesen, V., Wong, J., </author> <title> "The Effect of Multiplexing, Switching and Other Factors on the Performance of Broadband Networks", </title> <booktitle> Proceedings of IEEE INFOCOM 1993. </booktitle>
Reference-contexts: Moreover, frame sizes may vary greatly even between consecutive frames. Previous work on the performance of packet switch networks to support variable bit rate sources have used either analytical means or simulation models to predict performance <ref> [6, 8, 10] </ref>. However, accurate analytical models which capture the time-varying correlated nature of the stochastic process that model video streams are usually intractable [15]. It is also obvious that even in simulation models it is not possible to capture all aspects (or even most) of an actual distributed system.
Reference: [9] <author> Guha A., Pavan A., Liu, J., Steeves, T., </author> <title> "Supporting Real-Time and Multimedia Applications on the Mercuri ATM Testbed", </title> <note> to appear in the IEEE Journal on Selected Areas in Communications special issue on ATM LANs, </note> <year> 1995. </year>
Reference-contexts: Both JPEG and MPEG standards are described in Section 3 Currently, the lack of experimental work has been primarily due to the lack of readily available high speed components. Recently however, several vendors are now providing ATM equipment. Preliminary performance results of ATM networks have been reported in <ref> [9, 20, 13, 24, 25] </ref>. However, these reports include mainly throughput and delay studies. Little is known about the ability of ATM to support realistic application traffic patterns such as time-sensitive bursty traffic, e.g., coded variable bit rate video. <p> The data was `played' by reading a file which consisted of an enumeration of frames and their corresponding byte sizes. To ensure accuracy, individual runs were executed multiple times. When appropiate, replicated results were averaged and the standard deviation computed and reported. Previous work. In <ref> [9] </ref>, the throughputs for AAL5, AAL3/4, TCP/IP on ATM, and TCP/IP on Ethernet, were measured. For AAL5, a maximum throughput of about 48 Mbits/sec was obtained for large messages (about 200 Kbytes). For AAL4, a maximum throughput of about 40 Mbits/sec was obtained for large messages. <p> For AAL4, a maximum throughput of about 40 Mbits/sec was obtained for large messages. TCP was observed to achieve a maximum throughput of about 35 Mbits/sec. The maximum Ethernet throughput was measured at 7.85 Mbits/sec. In terms of round-trip delay, <ref> [9] </ref> found the delays were best (least) for AAL5, AAL3/4, TCP over ATM, and Ethernet, in that order. Experiment #1: Throughput Measurements. During the course of performing our experiments, our steady state throughput measurements correlated with the measurements reported in [9]. <p> In terms of round-trip delay, <ref> [9] </ref> found the delays were best (least) for AAL5, AAL3/4, TCP over ATM, and Ethernet, in that order. Experiment #1: Throughput Measurements. During the course of performing our experiments, our steady state throughput measurements correlated with the measurements reported in [9]. As expected, while transmitting multiplexed MPEG-1 streams, we observed peak steady state throughputs slightly lower than those reported in [9]. In [9], throughputs were attained by using message sizes of approximately 200 KBytes. <p> Experiment #1: Throughput Measurements. During the course of performing our experiments, our steady state throughput measurements correlated with the measurements reported in <ref> [9] </ref>. As expected, while transmitting multiplexed MPEG-1 streams, we observed peak steady state throughputs slightly lower than those reported in [9]. In [9], throughputs were attained by using message sizes of approximately 200 KBytes. Using multiplexed MPEG-1 streams, we attained throughputs of 41 Mbits/sec for UDP on AAL5 ATM, and 26 Mbits/sec for TCP on AAL5 ATM. Table 5 depicts our throughput measurements and those measured in [9]. <p> Experiment #1: Throughput Measurements. During the course of performing our experiments, our steady state throughput measurements correlated with the measurements reported in <ref> [9] </ref>. As expected, while transmitting multiplexed MPEG-1 streams, we observed peak steady state throughputs slightly lower than those reported in [9]. In [9], throughputs were attained by using message sizes of approximately 200 KBytes. Using multiplexed MPEG-1 streams, we attained throughputs of 41 Mbits/sec for UDP on AAL5 ATM, and 26 Mbits/sec for TCP on AAL5 ATM. Table 5 depicts our throughput measurements and those measured in [9]. <p> those reported in <ref> [9] </ref>. In [9], throughputs were attained by using message sizes of approximately 200 KBytes. Using multiplexed MPEG-1 streams, we attained throughputs of 41 Mbits/sec for UDP on AAL5 ATM, and 26 Mbits/sec for TCP on AAL5 ATM. Table 5 depicts our throughput measurements and those measured in [9]. This table also shows the relative ability of TCP and UDP to transport variable bit rate video (i.e., MPEG-1).
Reference: [10] <author> Heffes, H., Lucantoni, D., </author> <title> "A Markov Modulated Characterization of Packetized Voice and Data Traffic and Related Statistical Multiplexer Performance", </title> <journal> IEEE Journal on Selected Areas of Communication, </journal> <volume> Vol. 4, No. 6, </volume> <month> Sept. </month> <year> 1986. </year>
Reference-contexts: Moreover, frame sizes may vary greatly even between consecutive frames. Previous work on the performance of packet switch networks to support variable bit rate sources have used either analytical means or simulation models to predict performance <ref> [6, 8, 10] </ref>. However, accurate analytical models which capture the time-varying correlated nature of the stochastic process that model video streams are usually intractable [15]. It is also obvious that even in simulation models it is not possible to capture all aspects (or even most) of an actual distributed system.
Reference: [11] <author> Kawarasaki, M., and Jabbari, B., </author> <title> "B-ISDN Architecture and Protocol", </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 9, No. 9, </volume> <pages> pp. 1405-1415, </pages> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: Hence, the past several years has seen the emergence of three digital switch-based high-speed network standards: the HIgh Performance Parallel Interface (HIPPI) [12], Fiber Channel [2, 3], and the Asynchronous Transfer Mode (ATM) <ref> [5, 11, 14] </ref>. HIPPI is a standard aimed at supporting supercomputer applications, such as large-scale visualization and distributed numerical applications, which require relatively infrequent, very large and fast data transfers. <p> It was developed to serve as the transport mechanism for Broadband Integrated Services Digital Network (B-ISDN). Because of its international standardization efforts, it will very likely be available on a worldwide basis and may in the future be incorporated into the public telecommunications infrastructure. The ATM standard <ref> [5, 11, 14] </ref> defines a fast packet switched network where data is fragmented into fixed-size 53 byte cells. It defines the manner in which cells are switched and routed through network packet switches and links. <p> Section 4 presents the experimental results. Section 5 presents a discussion of network requirements for the support of video transmission. Section 6 provides our conclusions. 2 ATM: the Next Generation Network ATM <ref> [4, 5, 11] </ref> is a standard developed by the international networking standards committee, CCITT. It is a specification for the network layer protocol of future B-ISDNs. It resides above the physical layer and directly below the ATM Adaptation Layer (AAL) (see Figure 1).
Reference: [12] <author> Kung, H.T., </author> <title> "Gigabit Local area Networks: A Systems Perspective", </title> <journal> IEEE Communications, </journal> <month> April </month> <year> 1992. </year>
Reference-contexts: Hence, the past several years has seen the emergence of three digital switch-based high-speed network standards: the HIgh Performance Parallel Interface (HIPPI) <ref> [12] </ref>, Fiber Channel [2, 3], and the Asynchronous Transfer Mode (ATM) [5, 11, 14]. HIPPI is a standard aimed at supporting supercomputer applications, such as large-scale visualization and distributed numerical applications, which require relatively infrequent, very large and fast data transfers. <p> This was an unexpected result. Due to the real-time nature of video traffic, a best-effort or guaranteed service protocol has usually been suggested as the most appropiate type of protocol for video traffic <ref> [12, 23, 19] </ref>. Protocols which provide end-to-end flow control and re-transmissions, such as TCP, have been considered unsuitable because it has usually been thought that the delays caused would result in packets missing their bounded delay requirements and 24 hence becoming meaningless (discarded) [19].
Reference: [13] <author> Lin, M., Hsieh, J., Du, D., Thomas, J., MacDonald, J., </author> <title> "Distributed Network Computing Over Local ATM Networks", </title> <note> to appear in IEEE Journal on Selected Areas in Communications: Special Issue on ATM LANs (Early `95). </note>
Reference-contexts: Both JPEG and MPEG standards are described in Section 3 Currently, the lack of experimental work has been primarily due to the lack of readily available high speed components. Recently however, several vendors are now providing ATM equipment. Preliminary performance results of ATM networks have been reported in <ref> [9, 20, 13, 24, 25] </ref>. However, these reports include mainly throughput and delay studies. Little is known about the ability of ATM to support realistic application traffic patterns such as time-sensitive bursty traffic, e.g., coded variable bit rate video.
Reference: [14] <author> Lyles, J., Swinehart, D., </author> <title> "The Emerging Gigabit Environment and the Role of Local ATM", </title> <journal> IEEE Communications Magazine, </journal> <month> April </month> <year> 1992. </year>
Reference-contexts: Hence, the past several years has seen the emergence of three digital switch-based high-speed network standards: the HIgh Performance Parallel Interface (HIPPI) [12], Fiber Channel [2, 3], and the Asynchronous Transfer Mode (ATM) <ref> [5, 11, 14] </ref>. HIPPI is a standard aimed at supporting supercomputer applications, such as large-scale visualization and distributed numerical applications, which require relatively infrequent, very large and fast data transfers. <p> It was developed to serve as the transport mechanism for Broadband Integrated Services Digital Network (B-ISDN). Because of its international standardization efforts, it will very likely be available on a worldwide basis and may in the future be incorporated into the public telecommunications infrastructure. The ATM standard <ref> [5, 11, 14] </ref> defines a fast packet switched network where data is fragmented into fixed-size 53 byte cells. It defines the manner in which cells are switched and routed through network packet switches and links. <p> The type of video quality expected by today's users require very large network transmission speeds. Uncompressed speeds of broadcast-quality NTSC video and studio quality NTSC video are about 120 Mbits/sec and 216 Mbits/sec, respectively <ref> [14] </ref>. Fortunately, recent advances in compression techniques make the transmission of these high quality video media feasible. These compression techniques take advantage of the characteristics (or limitations) of the human visual system, to achieve lossy, yet visually lossless, compressed images and video. <p> How well is each suited for transmitting multiplexed video streams ? What are their performance tradeoffs ? Protocols which provide end-to-end flow control and re-transmissions, such as TCP, have been considered unsuitable due to the time-sensitive nature of video traffic <ref> [5, 14] </ref>. Packets (frames) must be delivered within a bounded delay or else become meaningless (discarded). End-to-end flow control, such as TCP's sliding window protocol, as well as TCP's retransmission mechanism, have been expected to distort the timing requirement between successive video frames [5, 14], and thus produce unacceptable visual quality <p> to the time-sensitive nature of video traffic <ref> [5, 14] </ref>. Packets (frames) must be delivered within a bounded delay or else become meaningless (discarded). End-to-end flow control, such as TCP's sliding window protocol, as well as TCP's retransmission mechanism, have been expected to distort the timing requirement between successive video frames [5, 14], and thus produce unacceptable visual quality video. The experimental results were initially unexpected.
Reference: [15] <author> Maglaris, B., Anastassiou, D., Sen, P., Karlsson, G., Robbins, J., </author> <title> "Performance Models of Statistical Multiplexing in Packet Video Communications", </title> <journal> IEEE Transactions on Communications, </journal> <volume> Vol. 36, No. 7, </volume> <month> July </month> <year> 1988. </year>
Reference-contexts: However, accurate analytical models which capture the time-varying correlated nature of the stochastic process that model video streams are usually intractable <ref> [15] </ref>. It is also obvious that even in simulation models it is not possible to capture all aspects (or even most) of an actual distributed system.
Reference: [16] <author> Norros, I., Roberts, J., Simonian, A., Virtamo, J., </author> <title> "The Superposition of Variable Bit Rate Sources in an ATM Multiplexer", </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 9, No. 3, </volume> <month> April </month> <year> 1991. </year>
Reference: [17] <author> Ott, T., Tabatabai, A., Lakshman, </author> <title> T.V.,, "A Scheme for Smoothing Delay Sensitive Traffic Offered by ATM Networks", </title> <booktitle> IEEE Proceedings of INFOCOM 1992. </booktitle>
Reference-contexts: As the overall bursti-ness of a stream increases, buffer overflows due to contention are more likely to be occurring at the sending and receiving hosts and at the switch. Hence, it has been suggested <ref> [22, 23, 18, 17] </ref> that smoothing on bursty sources be performed at the individual source nodes before being admitted to the network. Most previous work on burst-level control or smoothing at sources have not examined smoothing in the context of delay-sensitive data such as coded video. <p> Most previous work on burst-level control or smoothing at sources have not examined smoothing in the context of delay-sensitive data such as coded video. A study <ref> [17] </ref> which determined an optimal smoothing algorithm for video traffic has appeared. However, that particular study was performed on videoconference sources. As mentioned before, videoconference applications consist of mostly low-motion scenes, and thus usually produce much less bursty and lower bit rate traffic then a general video source.
Reference: [18] <author> Pancha, P., El Zarki, M., </author> <title> "MPEG Coding for Variable Bit Rate Video Transmission", </title> <journal> IEEE Communications Magazine, </journal> <month> May </month> <year> 1994. </year>
Reference-contexts: The video data consisted of the following: * MPEG. The input video stream for the MPEG codec was a 3 minute 40 second sequence from the movie Star Wars <ref> [18] </ref>. The sequence was digitized from laser disc with a frame resolution (similar to NTSC broadcast quality) of 512 fi 480 pixels. This particular Star Wars sequence was chosen because it contained a mix of high and low action scenes. The interframe to intraframe ratio was 16. <p> As the overall bursti-ness of a stream increases, buffer overflows due to contention are more likely to be occurring at the sending and receiving hosts and at the switch. Hence, it has been suggested <ref> [22, 23, 18, 17] </ref> that smoothing on bursty sources be performed at the individual source nodes before being admitted to the network. Most previous work on burst-level control or smoothing at sources have not examined smoothing in the context of delay-sensitive data such as coded video. <p> However, that particular study was performed on videoconference sources. As mentioned before, videoconference applications consist of mostly low-motion scenes, and thus usually produce much less bursty and lower bit rate traffic then a general video source. This study as well as others <ref> [18] </ref> are based upon simulation models or analytical techniques. As mentioned before, actual distributed systems consist of many components, hardware and software, whose complex interactions are very difficult to predict.
Reference: [19] <author> Partridge, C., </author> <title> "Gigabit Networking", Addison-Wesley Professional Computing Series. </title> <type> 26 </type>
Reference-contexts: If a frame arrives late, it will cause jerkiness in the visual medium. If a frame never arrives (is lost) its absence will also cause jerkiness in the visual medium. In MPEG, which consists of `I', `P', and `B' frames, some frames are more important than others <ref> [19] </ref>. `I' frames are complete bit images. They must be received regularly in order to re-generate high quality images. `P' and `B' frames are used to `refresh' the current image. <p> The worst case occurs when all 10% of the lost frames are `I' frames. At 24 frames per second, a 10% loss translates into a 21:6 frame per second frame rate. This is in the range of what is usually judged to be `acceptable' visual quality <ref> [19] </ref>. Recall that the Parallax Graphics video card is only capable of displaying 15 frames per second. Using TCP, packets which are discarded by the network are re-transmitted. Thus packets (and hence frames) are very rarely lost. Packets are discarded only after a pre-set number of re-transmissions occur. <p> This is a reasonable assumption because `B' frames may reference either forward or backward frames; both the last and next `P' or `I' frames must be transmitted before the `B' frames may be sent. Thus the receiver host must be able to buffer a minimal of 3 frames <ref> [19] </ref>. Hence a frame received within a 3 fixed frame intervals will not cause jitter to occur. A frame which arrives outside of 3 fixed frame intervals is considered lost (undisplayable) and may contribute to the overall perceived jitter. <p> This was an unexpected result. Due to the real-time nature of video traffic, a best-effort or guaranteed service protocol has usually been suggested as the most appropiate type of protocol for video traffic <ref> [12, 23, 19] </ref>. Protocols which provide end-to-end flow control and re-transmissions, such as TCP, have been considered unsuitable because it has usually been thought that the delays caused would result in packets missing their bounded delay requirements and 24 hence becoming meaningless (discarded) [19]. <p> Protocols which provide end-to-end flow control and re-transmissions, such as TCP, have been considered unsuitable because it has usually been thought that the delays caused would result in packets missing their bounded delay requirements and 24 hence becoming meaningless (discarded) <ref> [19] </ref>. From our experiments, we observed TCP's sliding window protocol to have the effect of smoothing traffic burstiness, as well as still being able to deliver packets within their deadlines.
Reference: [20] <author> Pavan A., Guha, A., Liu, J., Midani, M. and Pugaczewski, J., </author> <title> "Experimental Evaluation of Real-Time Support on the Mercuri Wide Area ATM Testbed", </title> <booktitle> in review, </booktitle> <month> Mar., </month> <year> 1995. </year>
Reference-contexts: Both JPEG and MPEG standards are described in Section 3 Currently, the lack of experimental work has been primarily due to the lack of readily available high speed components. Recently however, several vendors are now providing ATM equipment. Preliminary performance results of ATM networks have been reported in <ref> [9, 20, 13, 24, 25] </ref>. However, these reports include mainly throughput and delay studies. Little is known about the ability of ATM to support realistic application traffic patterns such as time-sensitive bursty traffic, e.g., coded variable bit rate video.
Reference: [21] <author> Schoch, J., Hupp, J., </author> <title> "Measured Performance of an Ethernet Local Network", </title> <journal> Communications of the ACM, </journal> <month> December </month> <year> 1980. </year>
Reference: [22] <author> Shroff, N., Schwartz, M., </author> <title> "Video Modeling within Networks using Deterministic Smoothing at the Source", </title> <booktitle> IEEE Proceedings of INFOCOM 1994, </booktitle> <pages> pp. 342-349. </pages>
Reference-contexts: This experiment shows TCP capable of supporting upto 20 streams with reasonable performance at steady state peak 18 throughput of nearly 24 Mbits/sec. Thus TCP is capable of providing efficient transport for variable bit rate video traffic. 4.3 Controlling burstiness Previous work <ref> [22, 23] </ref>, as well as our experimental results, indicate that bursty traffic sources contribute to the amount of delay and loss experienced by network traffic. <p> As the overall bursti-ness of a stream increases, buffer overflows due to contention are more likely to be occurring at the sending and receiving hosts and at the switch. Hence, it has been suggested <ref> [22, 23, 18, 17] </ref> that smoothing on bursty sources be performed at the individual source nodes before being admitted to the network. Most previous work on burst-level control or smoothing at sources have not examined smoothing in the context of delay-sensitive data such as coded video. <p> Thus there is a fundamental tradeoff between providing smoothing (for greater performance gains) and tolerating additional buffer and delay requirements. Several schemes for smoothing traffic at the source have been proposed. They include deterministic smoothing <ref> [22] </ref> and smoothing according to a uniform distribution [23]. We chose to look at deterministic smoothing because it is the simplest and hence seems most suitable for the real-time requirements of video transmission. In deterministic smoothing, cells are equispaced over a single or multiple fixed frame intervals.
Reference: [23] <author> Skelly, P., Dixit, S., Schwartz, </author> <title> "A Histogram-Based Model for Video Traffic Behavour in an ATM Network Node with an Application to Congestion Control", </title> <booktitle> IEEE Proceedings of INFOCOM 1992. </booktitle>
Reference-contexts: This experiment shows TCP capable of supporting upto 20 streams with reasonable performance at steady state peak 18 throughput of nearly 24 Mbits/sec. Thus TCP is capable of providing efficient transport for variable bit rate video traffic. 4.3 Controlling burstiness Previous work <ref> [22, 23] </ref>, as well as our experimental results, indicate that bursty traffic sources contribute to the amount of delay and loss experienced by network traffic. <p> As the overall bursti-ness of a stream increases, buffer overflows due to contention are more likely to be occurring at the sending and receiving hosts and at the switch. Hence, it has been suggested <ref> [22, 23, 18, 17] </ref> that smoothing on bursty sources be performed at the individual source nodes before being admitted to the network. Most previous work on burst-level control or smoothing at sources have not examined smoothing in the context of delay-sensitive data such as coded video. <p> Thus there is a fundamental tradeoff between providing smoothing (for greater performance gains) and tolerating additional buffer and delay requirements. Several schemes for smoothing traffic at the source have been proposed. They include deterministic smoothing [22] and smoothing according to a uniform distribution <ref> [23] </ref>. We chose to look at deterministic smoothing because it is the simplest and hence seems most suitable for the real-time requirements of video transmission. In deterministic smoothing, cells are equispaced over a single or multiple fixed frame intervals. <p> This was an unexpected result. Due to the real-time nature of video traffic, a best-effort or guaranteed service protocol has usually been suggested as the most appropiate type of protocol for video traffic <ref> [12, 23, 19] </ref>. Protocols which provide end-to-end flow control and re-transmissions, such as TCP, have been considered unsuitable because it has usually been thought that the delays caused would result in packets missing their bounded delay requirements and 24 hence becoming meaningless (discarded) [19].
Reference: [24] <author> Thekkath, C.A., Levy, H.M., Lazowska, E.D., </author> <title> "Efficient Support for Multicomputing on ATM Networks", </title> <type> Technical Report TR 93-04-03, </type> <institution> Department of Computer Science and Engineering, University of Washington, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: Both JPEG and MPEG standards are described in Section 3 Currently, the lack of experimental work has been primarily due to the lack of readily available high speed components. Recently however, several vendors are now providing ATM equipment. Preliminary performance results of ATM networks have been reported in <ref> [9, 20, 13, 24, 25] </ref>. However, these reports include mainly throughput and delay studies. Little is known about the ability of ATM to support realistic application traffic patterns such as time-sensitive bursty traffic, e.g., coded variable bit rate video.
Reference: [25] <author> Wolman, A., Voelker, G., Chandramohan, A., Thekkath, </author> <title> C.A., "Latency Analysis of TCP on an ATM Network", </title> <type> Technical Report TR 93-03-03, </type> <institution> Department of Computer Science and Engineering, University of Washington, </institution> <month> March </month> <year> 1993. </year> <month> 27 </month>
Reference-contexts: Both JPEG and MPEG standards are described in Section 3 Currently, the lack of experimental work has been primarily due to the lack of readily available high speed components. Recently however, several vendors are now providing ATM equipment. Preliminary performance results of ATM networks have been reported in <ref> [9, 20, 13, 24, 25] </ref>. However, these reports include mainly throughput and delay studies. Little is known about the ability of ATM to support realistic application traffic patterns such as time-sensitive bursty traffic, e.g., coded variable bit rate video.
References-found: 25

