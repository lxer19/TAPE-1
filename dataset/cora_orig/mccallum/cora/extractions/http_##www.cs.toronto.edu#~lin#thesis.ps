URL: http://www.cs.toronto.edu/~lin/thesis.ps
Refering-URL: http://www.cs.toronto.edu/~lin/
Root-URL: 
Title: FRAMEWORKS FOR DEALING WITH CONFLICTING INFORMATION AND APPLICATIONS  
Author: by Jinxin Lin 
Degree: A thesis submitted in conformity with the requirements for the degree of Doctor of Philosophy  
Note: c Copyright by Jinxin Lin 1995  
Address: Toronto  
Affiliation: Graduate Department of Computer Science University of  
Abstract-found: 0
Intro-found: 1
Reference: [AB75] <author> A. R. Anderson and N. D. Belnap. </author> <title> Entailment: The Logic of Relevance and Necessity. </title> <publisher> Princeton University Press, </publisher> <year> 1975. </year>
Reference-contexts: Introduction One problem in knowledge representation is to deal with conflicting information in knowledge bases. This problem is important since in the presence of inconsistency, systems based on classical logic deduce in every sentence in the underlying language, which is regarded undesirable by many researchers <ref> [Dun76, Bel75, AB75, Roz89, Pri91, KL89, Hal86, Lin87, Sub92] </ref>. A knowledge base may become inconsistent due to, for example, some conflicting data or rules recorded in it. Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas.
Reference: [BAP92] <author> M.W. Bright, A.R.Hurson, and S.H. Pakzad. </author> <title> A taxonomy and current issues in multidatabase systems. </title> <journal> Computer, </journal> <volume> 25(3) </volume> <pages> 50-59, </pages> <year> 1992. </year>
Reference-contexts: Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases <ref> [BAP92, SL90, BL86, MIR94, LSS93, EP90] </ref>, multi-agent reasoning systems [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87], distributed artificial intelligence [BG68, Zha92], genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on. <p> However, information or knowledge from different agents or systems is often contradictory. For example, in a multidatabase system, two component databases may record the same data item but give it different values because of incomplete updates, system error or valid differences in underlying semantics <ref> [BAP92] </ref>. An organization often maintains a multitude of information systems due to autonomous departmental operations and these systems may hold overlapping and inconsistent data. <p> Merging Databases under Constraints Considerable efforts have been made in both academia and industry to develop global information-sharing systems such as federated databases, multidatabases, or interoperable systems (cf. <ref> [BAP92, EP90, SL90, BL86] </ref>). Those systems aim at integrating information stored in possibly distributed or heterogeneous component databases. Research in this area focuses on integrating the schemas of local component databases into a global, unified schema (cf. [BL86, MIR94]). Problems treated include name differences, structural differences or format differences.
Reference: [Bel75] <author> N. D. Belnap. </author> <title> A useful four-valued logic. </title> <editor> In J. M. Dunn and G. Epstein, editors, </editor> <booktitle> Modern Uses of Multiple-Valued Logic, </booktitle> <year> 1975. </year>
Reference-contexts: Introduction One problem in knowledge representation is to deal with conflicting information in knowledge bases. This problem is important since in the presence of inconsistency, systems based on classical logic deduce in every sentence in the underlying language, which is regarded undesirable by many researchers <ref> [Dun76, Bel75, AB75, Roz89, Pri91, KL89, Hal86, Lin87, Sub92] </ref>. A knowledge base may become inconsistent due to, for example, some conflicting data or rules recorded in it. Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. <p> These two problems are in fact two sides of the same coin and the mechanisms for the first may be used to deal with the second by operating on the union of the knowledge bases. 1.1 Inconsistency in a Single Knowledge Base Belnap <ref> [Bel75] </ref> points out that information processing is often threatened by inconsistency, since computer obtains data from a variety of sources, none of which can be assumed to be that "paragon of paragons, a universal truth-teller". <p> Thus, as concluded by Halpern [Hal86], reasoning in the presence of inconsistency is an issue which will need to be considered in the design of knowledge bases. A great deal of research has been devoted to constructing systems that allow reasoning in the presence of inconsistency (e.g. <ref> [Dun76, RB80, Bel75, Pri79, Gin88, KL89, Lin87, dC74, Prz89, Sub92] </ref>, to name just a few). Most of them are based on some kind of multi-valued logic. <p> Most of them are based on some kind of multi-valued logic. In these systems inconsistent formulas can have meaning different from "false" and it is no longer the case that everything is a consequence of a set of formulas that is inconsistent. Belnap <ref> [Bel75] </ref> suggests that a certain four-valued logic be used as an actual guide to reasoning and handling inconsistency. Lin [Lin87] and da Costa [dC74] employ three-valued logic to construct their systems, and Przymusinski [Prz89] uses it to model non-monotonic reasoning.
Reference: [BG68] <editor> A. H. Bond and L. Gasser. </editor> <booktitle> Readings in distributed Artificial Intelligence. </booktitle> <publisher> Mor-gan Kaufmann Publishers, Inc., </publisher> <address> San Mateo, CA, </address> <year> 1968. </year>
Reference-contexts: A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases [BAP92, SL90, BL86, MIR94, LSS93, EP90], multi-agent reasoning systems [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87], distributed artificial intelligence <ref> [BG68, Zha92] </ref>, genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on. These areas require the participation of multiple agents or component systems, and aim at sharing information or knowledge among the agents or systems.
Reference: [BI84] <author> A. Borgida and T. Imielinski. </author> <title> Decision making in committees-a framework for dealing with inconsistency and non-monotonicity. </title> <booktitle> In Proceedings Nonmono-tonic Reasoning Workshop, </booktitle> <pages> pages 21-32, </pages> <year> 1984. </year>
Reference-contexts: It is not difficult to verify that the group supports a and b and :a_:b, which is a contradiction! 1 Or weighted majority view when there is weight information about the knowledge bases. 5 Several other approaches are proposed by Borgida and Imielinski <ref> [BI84] </ref> to resolve a conflict in beliefs held by a collection of experts (which they called a "committee"). One protocol they discussed is that a committee supports a sentence ff if all members support ff. This protocol is equivalent to taking the disjunction of the knowledge bases. <p> 1 ; : : : ; T n g) corresponding to a support relation ` to be as follows: (D) Merge (fT 1 ; : : : ; T n g) = fff j fT 1 ; : : : ; T n g ` ffg. 4.1 All-Support Approach In <ref> [BI84] </ref>, Borgida and Imielinski discuss a method where a group of agents is defined to support a sentence ff if every member in the group supports ff. Let ` AS denote the support relation of this method. <p> Then by the all-support approach, fT 1 ; : : : ; T n g supports neither ff nor :ff. Proof: Obvious. 2 4.2 The Democratic Approach Borgida and Imielinski <ref> [BI84] </ref> propose a "democracy" protocol described as follows.
Reference: [BJe94] <editor> M. Brodie, M. Jarke, and M. Papazoglou (eds.). </editor> <booktitle> Proc. of the 2nd intenational conference on cooperative information systems. </booktitle> <address> Toronto, Canada, </address> <month> May, </month> <year> 1994. </year>
Reference-contexts: Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. A similar problem exists in many other areas such as cooperative information systems <ref> [BJe94, HM92, WL92] </ref>, multidatabases [BAP92, SL90, BL86, MIR94, LSS93, EP90], multi-agent reasoning systems [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87], distributed artificial intelligence [BG68, Zha92], genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on.
Reference: [BKMS92] <author> C. Baral, S. Kraus, J. Minker, and V. S. Subrahmanian. </author> <title> Combining knowledge bases consisting of first-order theories. </title> <journal> Computational Intelligence, </journal> <volume> 8 </volume> <pages> 45-71, </pages> <year> 1992. </year>
Reference-contexts: Furthermore, the knowledge base may be in use for quite some time before the inconsistency is ever detected <ref> [BKMS92] </ref>. Thus, as concluded by Halpern [Hal86], reasoning in the presence of inconsistency is an issue which will need to be considered in the design of knowledge bases. <p> For example, if an agent knows a and another agent knows a ! b then combining their knowledge yields b, even though it might be the case that neither of the agents individually knows b. Such need also arises in other contexts <ref> [FV86, BKMS92, Zha92] </ref>. Assume each agent is associated with a knowledge base and the agent reasons about the world according to the knowledge base. Then the process of combining knowledge in a group of agents is the same as merging a group of knowledge bases. <p> There appear to be a few (logical) approaches to deal with the case where there is a conflict among the knowledge bases, which we briefly describe below. The first approach, proposed by Baral el al. <ref> [BKMS92] </ref>, is to compute the maximal consistent subsets of the union of the knowledge bases, and then take as the result the disjunction of all the maximal consistent subsets. <p> Hence the set of sentences supported by the "more proponents than opponents" method is inconsistent. 2 4.4 "Maximal Consistent Subsets" Protocol Baral et al. <ref> [BKMS92] </ref> consider how to combine knowledge bases by manipulating the maximal consistent subsets of the union of the knowledge bases. Although they also consider integrity constraints and priorities, the basic idea is to define the result of the merge as the disjunction of all the maximal consistent subsets.
Reference: [BL85] <editor> R. Brachman and H. Levesque, editors. </editor> <booktitle> Readings in Knowledge Representation. </booktitle> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, CA, </address> <year> 1985. </year>
Reference: [BL86] <author> C. Batini and M. Lenzerini. </author> <title> A comparative analysis of methodologies for database schema integration. </title> <journal> ACM Computing Surveys, </journal> <volume> 18(4) </volume> <pages> 323-364, </pages> <month> Dec. </month> <year> 1986. </year>
Reference-contexts: Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases <ref> [BAP92, SL90, BL86, MIR94, LSS93, EP90] </ref>, multi-agent reasoning systems [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87], distributed artificial intelligence [BG68, Zha92], genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on. <p> Merging Databases under Constraints Considerable efforts have been made in both academia and industry to develop global information-sharing systems such as federated databases, multidatabases, or interoperable systems (cf. <ref> [BAP92, EP90, SL90, BL86] </ref>). Those systems aim at integrating information stored in possibly distributed or heterogeneous component databases. Research in this area focuses on integrating the schemas of local component databases into a global, unified schema (cf. [BL86, MIR94]). Problems treated include name differences, structural differences or format differences. <p> Those systems aim at integrating information stored in possibly distributed or heterogeneous component databases. Research in this area focuses on integrating the schemas of local component databases into a global, unified schema (cf. <ref> [BL86, MIR94] </ref>). Problems treated include name differences, structural differences or format differences. However, little attention has been paid to the problem of conflicting or missing data among component databases. Our merge operator WMerge (proposed in Chapter 5) provides a general solution to the problem. <p> Then the schema of a database db, denoted by (db), is the set of schemas of all relational symbols appearing in db. In the schema integration literature (see <ref> [BL86] </ref> for a survey), schema conflicts in different databases, such as synonym and homonym problems, 65 are studied. However, in this section we assume that there are no conflicts among the schemas of the databases to be merged. <p> The differences among the schemas of databases are well known in schema integration (see <ref> [BL86] </ref> for a survey, also [MIR94]), e.g., this first problem is known as "synonym" problem and the second "homonym" problem. The differences and relationships among the schemas of databases must be recognized and dealt with when merging the information of the databases. <p> In dealing with these problems, the designer must decide on a global representation for each relation, called global schema. The global schema must ensure that all the information in the original databases can be expressed; many methodologies to design the global schema have been proposed (again see <ref> [BL86] </ref> for the survey). In this section, we assume the global schema has been constructed. We show several examples of rules to transform data from 70 local schemas to the global schema. <p> [ S) (IC [ S) ^ fM anager db 1 (a; m; g; d 1 ); Supervisor db 3 (a; g; m; d 1 )g: The result implies M anager (a; m; g; d 1 ), as desired. 71 Example 6.6 (Different structure|type conflict) As part of an example in <ref> [BL86] </ref>, suppose (db 1 ) = fP ublisher (N ame; Address)g; (db 2 ) = fP ublication (T itle; Code; P ublisher)g: In db 1 , P ublisher is represented as an entity but as an attribute in db 2 . This difference is called type conflict in [BL86]. <p> example in <ref> [BL86] </ref>, suppose (db 1 ) = fP ublisher (N ame; Address)g; (db 2 ) = fP ublication (T itle; Code; P ublisher)g: In db 1 , P ublisher is represented as an entity but as an attribute in db 2 . This difference is called type conflict in [BL86].
Reference: [BM86] <author> F. Bry and R. Manthey. </author> <title> Checking consistency of database constraints: a logical basis. </title> <booktitle> In Proceedings of the 12th International Conference on Very Large Data Bases, </booktitle> <pages> pages 13-20, </pages> <year> 1986. </year> <month> 108 </month>
Reference: [Bor85] <author> A. Borgida. </author> <title> Language features for flexible handling of exceptions in information systems. </title> <journal> ACM Trans. on Database Systems, </journal> <volume> 10 </volume> <pages> 563-603, </pages> <year> 1985. </year>
Reference-contexts: But as shown by Revesz (personal conversation), there is a way of using model-fitting to merge multiple knowledge bases by treating each knowledge base as a formula in the set K, and then doing model-fitting over K by the set of all models. Borgida <ref> [Bor85] </ref> proposes a mechanism for handling exceptional facts in database systems that violate constraints such as semantic integrity constraints and type constraints associated with the database schema.
Reference: [Bou91] <author> C. Boutilier. </author> <title> Inaccessible worlds and irrelevance: Preliminary report. </title> <booktitle> In Proc. Tewelfth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 413-418, </pages> <year> 1991. </year>
Reference: [Che80] <author> B. F. Chellas. </author> <title> Modal Logic. </title> <publisher> Cambridge University Press, </publisher> <year> 1980. </year>
Reference: [Dal88] <author> Mukesh Dalal. </author> <title> Investigations into a theory of knowledge base revision: preliminary report. </title> <booktitle> In Proceedings of the 7th National Conference of the American Association for Artificial Intelligence, </booktitle> <pages> pages 475-479, </pages> <year> 1988. </year>
Reference-contexts: We will define the distance between a possible world and a set of knowledge bases as the sum of the distances between the world and each knowledge base, where the distance to a single knowledge base is defined using the method of Dalal's <ref> [Dal88] </ref>, which is simply the minimum number of atoms on which the world differs from some model of the knowledge base. 3.4.1 The Definition Let the distance between two possible worlds w 1 and w 2 , denoted dist (w 1 ; w 2 ), be the number of atoms whose
Reference: [dC74] <author> N. C. A. da Costa. </author> <title> On the theory of inconsistent formal systems. </title> <journal> Notre Dam J. of Formal Logic, </journal> <volume> 15 </volume> <pages> 497-510, </pages> <year> 1974. </year>
Reference-contexts: Thus, as concluded by Halpern [Hal86], reasoning in the presence of inconsistency is an issue which will need to be considered in the design of knowledge bases. A great deal of research has been devoted to constructing systems that allow reasoning in the presence of inconsistency (e.g. <ref> [Dun76, RB80, Bel75, Pri79, Gin88, KL89, Lin87, dC74, Prz89, Sub92] </ref>, to name just a few). Most of them are based on some kind of multi-valued logic. <p> Belnap [Bel75] suggests that a certain four-valued logic be used as an actual guide to reasoning and handling inconsistency. Lin [Lin87] and da Costa <ref> [dC74] </ref> employ three-valued logic to construct their systems, and Przymusinski [Prz89] uses it to model non-monotonic reasoning. Kifer and Lozinskii [KL89] propose an Annotated Predicate Calculus where inconsistency is tolerated and it is possible to assign different degrees of truth to a proposition.
Reference: [dK86] <author> J. de Kleer. </author> <title> An assumption-based TMS. </title> <journal> Artificial Intelligence, </journal> <volume> 28 </volume> <pages> 127-162, </pages> <year> 1986. </year>
Reference: [Doy79] <author> J. Doyle. </author> <title> A truth maintenance system. </title> <journal> Artificial Intelligence, </journal> <volume> 12 </volume> <pages> 231-272, </pages> <year> 1979. </year>
Reference: [Dun76] <author> M. Dunn. </author> <title> Intuitive semantics for first-degree entailments and coupled trees. </title> <journal> Philosophical Studies, </journal> <volume> 29 </volume> <pages> 149-168, </pages> <year> 1976. </year>
Reference-contexts: Introduction One problem in knowledge representation is to deal with conflicting information in knowledge bases. This problem is important since in the presence of inconsistency, systems based on classical logic deduce in every sentence in the underlying language, which is regarded undesirable by many researchers <ref> [Dun76, Bel75, AB75, Roz89, Pri91, KL89, Hal86, Lin87, Sub92] </ref>. A knowledge base may become inconsistent due to, for example, some conflicting data or rules recorded in it. Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. <p> Thus, as concluded by Halpern [Hal86], reasoning in the presence of inconsistency is an issue which will need to be considered in the design of knowledge bases. A great deal of research has been devoted to constructing systems that allow reasoning in the presence of inconsistency (e.g. <ref> [Dun76, RB80, Bel75, Pri79, Gin88, KL89, Lin87, dC74, Prz89, Sub92] </ref>, to name just a few). Most of them are based on some kind of multi-valued logic.
Reference: [EG92] <author> T. Eiter and G. Gottlob. </author> <title> On the complexity of propositional knowledge base revision, updates, and counterfactuals. </title> <booktitle> In Proc. of the Eleventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, </booktitle> <year> 1992. </year>
Reference: [EP90] <author> A. Elmagarmid and C. </author> <title> Pu. </title> <journal> ACM Computing Surveys special issue on heterogeneous databases. ACM Computing Surveys, </journal> <volume> 22(3), </volume> <month> Sept. </month> <year> 1990. </year>
Reference-contexts: Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases <ref> [BAP92, SL90, BL86, MIR94, LSS93, EP90] </ref>, multi-agent reasoning systems [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87], distributed artificial intelligence [BG68, Zha92], genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on. <p> Merging Databases under Constraints Considerable efforts have been made in both academia and industry to develop global information-sharing systems such as federated databases, multidatabases, or interoperable systems (cf. <ref> [BAP92, EP90, SL90, BL86] </ref>). Those systems aim at integrating information stored in possibly distributed or heterogeneous component databases. Research in this area focuses on integrating the schemas of local component databases into a global, unified schema (cf. [BL86, MIR94]). Problems treated include name differences, structural differences or format differences.
Reference: [fGR93] <author> Whitehead Institute/MIT Center for Genome Research. </author> <title> Human genomic mapping project, data release 1. </title> <month> Dec. </month> <year> 1993. </year>
Reference-contexts: The process is called physical map generation. The Whitehead Institute/MIT Genome Center focuses on developing an STS content map of the human genome consisting of many Sequence Tag-Site (STS) probes screened in the CEPH YAC library <ref> [RDRG93, fGR93] </ref>. For the purpose of mapping, each DNA fragment is a YAC (Yeast Artificial Chromosome, a small piece of human DNA replicated in yeast cells), and each STS probe is a very short piece of DNA that "sticks" to a particular site on the chromosome. <p> This information is crucial for positioning the YAC fragments on a map. We consider the December 1993 data release from the Human Physical Mapping Project at the Whitehead Institute/MIT Genome Center <ref> [RDRG93, fGR93] </ref>. The data describe the relationships between many probes and YACs. They consist of the following form: * hit (P; Y ), meaning that probe P hits YAC Y .
Reference: [FH88] <author> R. Fagin and J. Halpern. </author> <title> Belief, awareness, and limited reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 34 </volume> <pages> 39-76, </pages> <year> 1988. </year>
Reference-contexts: Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases [BAP92, SL90, BL86, MIR94, LSS93, EP90], multi-agent reasoning systems <ref> [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87] </ref>, distributed artificial intelligence [BG68, Zha92], genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on. <p> Then we would not have a problem believing that "the patient has hepatitis" since he/she has jaundice. We therefore need reasoning about safe (consistent) beliefs for diagnoses in a medical expert system that is possibly inconsistent. For several modal logics of beliefs <ref> [Lev84b, Lak87, FH88, Var86, FHV90] </ref>, the presence of an inconsistency is not as damaging as in classical logics. The main purpose of those logics is to combat the problem of logical omniscience in possible world semantics and model resource-bounded reasoning. <p> Fagin, Halpern and Vardi [FHV90] propose a logic that is essentially equivalent to the one in [Lev84b]. In Vardi's logic [Var86], the agent has very limited reasoning power: Believing p and believing :p are different from believing p ^ :p and have `models' to correspond. Fagin and Halpern <ref> [FH88] </ref> present a logic of local reasoning where an agent is viewed as a society of minds, each with its own set of beliefs, which may contradict each other. <p> It follows that M j= T B c ff [x=a]. Since a is any element in D, we have M j= T 8xB c ff. 2 2.7 Summary The phenomenon of inconsistent beliefs seems to occur even in science. As cited in <ref> [FH88] </ref>, the physicist Eugene Wigner noted that the two great theories physicists reason with are the theory of quantum phenomena and the theory of relativity.
Reference: [FHMV94] <author> R. Fagin, J. Halpern, Y. Moses, and M. Vardi. </author> <title> Reasoning about Knowledge. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1994. </year>
Reference-contexts: Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases [BAP92, SL90, BL86, MIR94, LSS93, EP90], multi-agent reasoning systems <ref> [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87] </ref>, distributed artificial intelligence [BG68, Zha92], genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on. <p> Generalize the logic of belief in the second chapter to the nested belief case. 2. Consider merging knowledge that includes `meta-knowledge' of the agents, e.g., an agent's knowledge about some other agents <ref> [FHMV94, FHV84] </ref>. 3. In this thesis, integrity constraints are treated as (first-order) sentences in the underlying language. But as shown by Reiter [Rei89], integrity constraints are epistemic in nature. How to incorporate such integrity constraints into our framework is a difficult but interesting issue. 4.
Reference: [FHV84] <author> R. Fagin, J. Halpern, and M. Vardi. </author> <title> A model-theoretic analysis of knowledge. </title> <booktitle> In Proceeding 25th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 268-278, </pages> <year> 1984. </year> <month> 109 </month>
Reference-contexts: Generalize the logic of belief in the second chapter to the nested belief case. 2. Consider merging knowledge that includes `meta-knowledge' of the agents, e.g., an agent's knowledge about some other agents <ref> [FHMV94, FHV84] </ref>. 3. In this thesis, integrity constraints are treated as (first-order) sentences in the underlying language. But as shown by Reiter [Rei89], integrity constraints are epistemic in nature. How to incorporate such integrity constraints into our framework is a difficult but interesting issue. 4.
Reference: [FHV90] <author> R. Fagin, J. Halpern, and M. Vardi. </author> <title> A nonstandard approach to the logical omniscience problem. </title> <booktitle> In Proceedings of 3rd Conference on Theoretical Aspects of Reasoning about Knowledge, </booktitle> <year> 1990. </year>
Reference-contexts: Then we would not have a problem believing that "the patient has hepatitis" since he/she has jaundice. We therefore need reasoning about safe (consistent) beliefs for diagnoses in a medical expert system that is possibly inconsistent. For several modal logics of beliefs <ref> [Lev84b, Lak87, FH88, Var86, FHV90] </ref>, the presence of an inconsistency is not as damaging as in classical logics. The main purpose of those logics is to combat the problem of logical omniscience in possible world semantics and model resource-bounded reasoning. <p> The logic is also demonstrated useful for the specification of a decidable knowledge representation service in the first-order case, which offers routines for querying a knowledge base and for adding new information to it. Fagin, Halpern and Vardi <ref> [FHV90] </ref> propose a logic that is essentially equivalent to the one in [Lev84b]. In Vardi's logic [Var86], the agent has very limited reasoning power: Believing p and believing :p are different from believing p ^ :p and have `models' to correspond.
Reference: [FHV91] <author> R. Fagin, J. Halpern, and M. Vardi. </author> <title> A model-theoretic analysis of knowledge. </title> <journal> Journal of the ACM, </journal> <volume> 38(2) </volume> <pages> 382-428, </pages> <year> 1991. </year>
Reference-contexts: Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases [BAP92, SL90, BL86, MIR94, LSS93, EP90], multi-agent reasoning systems <ref> [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87] </ref>, distributed artificial intelligence [BG68, Zha92], genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on.
Reference: [FKUV86] <author> R. Fagin, G. M. Kuper, J. D. Ullman, and M. Vardi. </author> <title> Updating logical databases. </title> <booktitle> Advances in Computing Research, </booktitle> <volume> 3 </volume> <pages> 1-18, </pages> <year> 1986. </year>
Reference-contexts: We have mentioned that belief revision can be viewed as concerning two agents: the new knowledge and the old information. The difference is that the first agent is more important than the second. Belief revision <ref> [G 88, KM91b, FUV83, FKUV86] </ref> is a well studied problem and a great number of semantic models for the problem have been proposed in the literature. Can these models be extended to deal with the problem of knowledge merging? 7.
Reference: [Fre91] <author> K. A. Frenkel. </author> <title> The human genome project and informatics. </title> <journal> Communications of the Association for Computing Machinery, </journal> <volume> 34:42, </volume> <year> 1991. </year>
Reference-contexts: A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases [BAP92, SL90, BL86, MIR94, LSS93, EP90], multi-agent reasoning systems [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87], distributed artificial intelligence [BG68, Zha92], genomic information systems <ref> [Fre91, HB94, LRTL93, RDRG93] </ref>, collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on. These areas require the participation of multiple agents or component systems, and aim at sharing information or knowledge among the agents or systems. <p> In genomic information systems, data often involve a large amount of contradiction as a result of experimental errors or the problems of false negatives, ambiguity and chimerism <ref> [Fre91, HB94] </ref>. On an abstract level, the above problems can be subsumed under the problem of conflicting information in knowledge bases, either within a single knowledge base or among multiple knowledge bases. <p> We propose a way of merging databases with different schemas by treating schema transformation rules (used to transform data from local schemas to the global schema) as part of constraints that must be enforced in WMerge. Genome Map Assembly The goal of the Human Genome Project <ref> [Fre91] </ref> is to determine the locations of the estimated 100,000 human genes of the entire human genome. This includes generating "maps" of the genes along each human chromosome at increasingly finer resolutions. <p> This shows the usefulness of knowledge merging techniques in the area of genome mapping. 7.1 Introduction The Human Genome Project is "one of the monumental scientific adventures of history" <ref> [Fre91] </ref>. It is aimed at determining the location of the estimated 100,000 human genes in the entire human genome. This includes generating "maps" of the genes along each human chromosome at increasingly finer resolutions. <p> A mistake in the experimental data is called a false positive in genome mapping terms. It is known that in real experiments generally there exist some kinds of failures or errors causing false positives and false negatives <ref> [RDRG93, Fre91, HB94] </ref>.
Reference: [FUV83] <author> R. Fagin, J. D. Ullman, and M. Vardi. </author> <title> On the semantics of updates in databases. </title> <booktitle> In 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems, </booktitle> <pages> pages 352-365, </pages> <year> 1983. </year>
Reference-contexts: We have mentioned that belief revision can be viewed as concerning two agents: the new knowledge and the old information. The difference is that the first agent is more important than the second. Belief revision <ref> [G 88, KM91b, FUV83, FKUV86] </ref> is a well studied problem and a great number of semantic models for the problem have been proposed in the literature. Can these models be extended to deal with the problem of knowledge merging? 7.
Reference: [FV86] <author> R. Fagin and M. Vardi. </author> <title> Knowledge and implicit knowledge in a distributed environment. </title> <booktitle> In Proceedings of the Conference on Theoretical Aspects of Reasoning About Knowledge. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1986. </year>
Reference-contexts: Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases [BAP92, SL90, BL86, MIR94, LSS93, EP90], multi-agent reasoning systems <ref> [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87] </ref>, distributed artificial intelligence [BG68, Zha92], genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on. <p> For example, if an agent knows a and another agent knows a ! b then combining their knowledge yields b, even though it might be the case that neither of the agents individually knows b. Such need also arises in other contexts <ref> [FV86, BKMS92, Zha92] </ref>. Assume each agent is associated with a knowledge base and the agent reasons about the world according to the knowledge base. Then the process of combining knowledge in a group of agents is the same as merging a group of knowledge bases.
Reference: [G 88] <author> Peter Gardenfors. </author> <title> Knowledge in Flux Modeling the Dynamics of Epistemic States. </title> <publisher> MIT press, </publisher> <year> 1988. </year>
Reference-contexts: Hence their formulation of distributed knowledge applies only to agents who do not have conflicting views. Revesz [Rev94] defines a notion of model-fitting (or a more general notion, called arbitration) which has a close link with belief revision and update <ref> [G 88, KM91b, KM91a] </ref>. Model-fitting takes a set of formulas K and a formula , and tries to find the models of that "best fit" the formulas in K. Model-fitting deals with a single knowledge base only. <p> We define a revision operator ffi M as follows: Definition 5.2 ffi M = WMerge (f ; g; $); where $ is a weight function such that $() &gt; $( ) &gt; 0. Gardenfors and his colleagues <ref> [G 88] </ref> propose a set of rationality postulates, colloquially known as the AGM postulates, that they expect revision operators to satisfy. Katsuno and Mendelzon [KM91b] rephrase those postulates so that they are applicable for finite knowledge bases. <p> 2 and 1 2 then 1 ffi 1 2 ffi 2 . (R5) ( ffi ) ^ implies ffi ( ^ ). (R6) If ( ffi ) ^ is consistent then ffi ( ^ ) implies ( ffi ) ^ . 54 The intuition behind these postulates is described in <ref> [G 88, KM91b] </ref>. We have the following result for ffi M . This relates our merge operation WMerge (f ; g; $) with the AGM postulates for belief revision. Theorem 5.5 ffi M satisfies R2-R5, but not R1 or R6. <p> We have mentioned that belief revision can be viewed as concerning two agents: the new knowledge and the old information. The difference is that the first agent is more important than the second. Belief revision <ref> [G 88, KM91b, FUV83, FKUV86] </ref> is a well studied problem and a great number of semantic models for the problem have been proposed in the literature. Can these models be extended to deal with the problem of knowledge merging? 7.
Reference: [Gin88] <author> M. L. Ginsberg. </author> <title> Multivalued logics: A uniform approach to reasoning in artificial intelligence. </title> <journal> Computational Intelligence, </journal> <volume> 4 </volume> <pages> 265-316, </pages> <year> 1988. </year>
Reference-contexts: Thus, as concluded by Halpern [Hal86], reasoning in the presence of inconsistency is an issue which will need to be considered in the design of knowledge bases. A great deal of research has been devoted to constructing systems that allow reasoning in the presence of inconsistency (e.g. <ref> [Dun76, RB80, Bel75, Pri79, Gin88, KL89, Lin87, dC74, Prz89, Sub92] </ref>, to name just a few). Most of them are based on some kind of multi-valued logic. <p> Lin [Lin87] and da Costa [dC74] employ three-valued logic to construct their systems, and Przymusinski [Prz89] uses it to model non-monotonic reasoning. Kifer and Lozinskii [KL89] propose an Annotated Predicate Calculus where inconsistency is tolerated and it is possible to assign different degrees of truth to a proposition. Ginsberg <ref> [Gin88] </ref> has described the usefulness of lattice-valued logics in non-monotonic reasoning, counterfactuals, truth maintenance systems, etc. These systems avoid falling into triviality (i.e., concluding every sentence in the underlying language) in the presence of inconsistency. However, they may generate inconsistent 2 conclusions or conclusions that contradict their other conclusions.
Reference: [GM88] <author> Peter Gardenfors and D. Makinson. </author> <title> Revision of knowledge systems using epis-temic entrenchment. </title> <editor> In M. Vardi, editor, </editor> <booktitle> Proceedings of 2nd Conference on Theoretical Aspects of Reasoning about Knowledge, </booktitle> <year> 1988. </year>
Reference: [GMR92] <author> G. Grahne, A. O. Mendelzon, and Ray Reiter. </author> <title> On the semantics of belief revision systems. </title> <booktitle> In Proceedings of 4th Conference on Theoretical Aspects of Reasoning about Knowledge, </booktitle> <year> 1992. </year>
Reference: [Gra91] <author> G. Grahne. </author> <title> The problem of incomplete information in relational databases. </title> <booktitle> Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: As before, we consider IC to be a set of first-order sentences and the choice of IC is the task of the merge designer. Those are the constraints that the designer wishes to enforce during merging, e.g., the fd Employee ! Dept (expressed as a first-order sentence). Grahne <ref> [Gra91] </ref> expresses data dependencies by closed formulas of the following form: 8x 1 ; : : : ; x s : p 1 ^ : : : ^ p m ! q; (6.7) where each p i is of the form p (z 1 ; : : : ; z n <p> In the first case the dependency is called equality generating, and in the second case it is called tuple generating <ref> [Gra91] </ref>. The well known functional dependency is an example of equality generating dependency.
Reference: [Gru94] <author> J. Grudin. </author> <title> Groupware and social dynamics: Eight challenges for developers. </title> <journal> Communications of the ACM, </journal> <volume> 37(1) </volume> <pages> 92-105, </pages> <month> Jan. </month> <year> 1994. </year>
Reference-contexts: A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases [BAP92, SL90, BL86, MIR94, LSS93, EP90], multi-agent reasoning systems [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87], distributed artificial intelligence [BG68, Zha92], genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware <ref> [Gru94] </ref>, computer-supported cooperative work (CSCW), organizational computing and so on. These areas require the participation of multiple agents or component systems, and aim at sharing information or knowledge among the agents or systems. However, information or knowledge from different agents or systems is often contradictory.
Reference: [Hal86] <author> J. Halpern. </author> <title> Reasoning about knowledge: an overview. </title> <booktitle> In Proceedings of the Conference on Theoretical Aspects of Reasoning about Knowledge, </booktitle> <year> 1986. </year> <month> 110 </month>
Reference-contexts: Introduction One problem in knowledge representation is to deal with conflicting information in knowledge bases. This problem is important since in the presence of inconsistency, systems based on classical logic deduce in every sentence in the underlying language, which is regarded undesirable by many researchers <ref> [Dun76, Bel75, AB75, Roz89, Pri91, KL89, Hal86, Lin87, Sub92] </ref>. A knowledge base may become inconsistent due to, for example, some conflicting data or rules recorded in it. Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. <p> Furthermore, the knowledge base may be in use for quite some time before the inconsistency is ever detected [BKMS92]. Thus, as concluded by Halpern <ref> [Hal86] </ref>, reasoning in the presence of inconsistency is an issue which will need to be considered in the design of knowledge bases.
Reference: [Hal87] <author> J. Halpern. </author> <title> Using reasoning about knowledge to analyze distributed systems. </title> <journal> Ann. Rev. of Comput. Sci., </journal> <volume> 2 </volume> <pages> 37-68, </pages> <year> 1987. </year>
Reference-contexts: Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases [BAP92, SL90, BL86, MIR94, LSS93, EP90], multi-agent reasoning systems <ref> [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87] </ref>, distributed artificial intelligence [BG68, Zha92], genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on.
Reference: [HB94] <author> E. Harley and A. J. Bonner. </author> <title> A flexible approach to genome map assembly and analysis. </title> <booktitle> In Proceedings of the International Symposium on Intelligent Systems for Molecular Biology, </booktitle> <year> 1994. </year>
Reference-contexts: A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases [BAP92, SL90, BL86, MIR94, LSS93, EP90], multi-agent reasoning systems [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87], distributed artificial intelligence [BG68, Zha92], genomic information systems <ref> [Fre91, HB94, LRTL93, RDRG93] </ref>, collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on. These areas require the participation of multiple agents or component systems, and aim at sharing information or knowledge among the agents or systems. <p> In genomic information systems, data often involve a large amount of contradiction as a result of experimental errors or the problems of false negatives, ambiguity and chimerism <ref> [Fre91, HB94] </ref>. On an abstract level, the above problems can be subsumed under the problem of conflicting information in knowledge bases, either within a single knowledge base or among multiple knowledge bases. <p> A mistake in the experimental data is called a false positive in genome mapping terms. It is known that in real experiments generally there exist some kinds of failures or errors causing false positives and false negatives <ref> [RDRG93, Fre91, HB94] </ref>.
Reference: [HF89] <author> J. Halpern and R. Fagin. </author> <title> Modelling knowledge and action in distributed systems. </title> <journal> Distributed Computing, </journal> <volume> 3(4) </volume> <pages> 159-179, </pages> <year> 1989. </year>
Reference-contexts: Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases [BAP92, SL90, BL86, MIR94, LSS93, EP90], multi-agent reasoning systems <ref> [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87] </ref>, distributed artificial intelligence [BG68, Zha92], genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on.
Reference: [HM85] <author> J. Halpern and Y. Moses. </author> <title> A guide to the modal logics of knowledge and belief. </title> <booktitle> In Proceedings IJCAI-85, </booktitle> <pages> pages 480-490, </pages> <year> 1985. </year> <note> A complete version appears in Artificial Intelligence, </note> <month> 54(3) </month> <pages> 319-379, </pages> <year> 1992, </year> <title> under the title "A guide to completeness and complexity for modal logics of knowledge and belief". </title>
Reference-contexts: Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases [BAP92, SL90, BL86, MIR94, LSS93, EP90], multi-agent reasoning systems <ref> [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87] </ref>, distributed artificial intelligence [BG68, Zha92], genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on. <p> They contribute a non-classical logic solution to the problem of merging knowledge bases. This we discuss in Chapter 4. 1.2 Merging Multiple Knowledge Bases Halpern and Moses <ref> [HM85] </ref> show there is a need to reason about knowledge that is implicit in a group of agents, which they call implicit knowledge or distributed knowledge. <p> This protocol may conclude contradictory results. Under this protocol a committee consisting of T 1 = fag; T 2 = fbg and T 3 = f:a _ :bg will support a and b and :a _ :b. Halpern and Moses <ref> [HM85] </ref> essentially define distributed (implicit) knowledge in a group of agents as the classical logical consequences of the union of the agents' knowledge bases. Hence their formulation of distributed knowledge applies only to agents who do not have conflicting views. <p> This is similar to logics such as S5 where in the single-agent case we can assume that the same set of worlds is accessible from each world <ref> [HM85] </ref>. 12 Finally, we say ff is valid (denoted j= ff) if M; s j= T ff for all belief model M and s 2 W. If ff is objective, we may abbreviate M; s j= T ff by s j= T ff since M is not relevant.
Reference: [HM90] <author> J. Halpern and Y. Moses. </author> <title> Knowledge and common knowledge in a distributed environment. </title> <journal> Journal of the ACM, </journal> <volume> 37(3) </volume> <pages> 549-587, </pages> <year> 1990. </year>
Reference-contexts: Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases [BAP92, SL90, BL86, MIR94, LSS93, EP90], multi-agent reasoning systems <ref> [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87] </ref>, distributed artificial intelligence [BG68, Zha92], genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on.
Reference: [HM92] <author> K. Huff and J. Mylopoulos. </author> <title> Development of intelligent information systems: A workshop summary. </title> <journal> International Journal of Intelligent & Cooperative Information Systems, </journal> <volume> 1(2) </volume> <pages> 233-248, </pages> <year> 1992. </year>
Reference-contexts: Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. A similar problem exists in many other areas such as cooperative information systems <ref> [BJe94, HM92, WL92] </ref>, multidatabases [BAP92, SL90, BL86, MIR94, LSS93, EP90], multi-agent reasoning systems [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87], distributed artificial intelligence [BG68, Zha92], genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on.
Reference: [IS93] <author> Y. E. Ioannidis and T. K. Sellis. </author> <title> Supporting inconsistent rules in database systems. </title> <note> To appear in the International Journal of Intelligent Information Systems. An earlier version appeared under the title "Conflict Resolution of Rules Assigning Values to Virtual Attributes" in Proceedings of the 1989 ACM-SIGMOD Conference, pages 205-214, </note> <year> 1989, 1993. </year>
Reference-contexts: Ioannidis and Sellis <ref> [IS93] </ref> state that rules in deductive database systems of most organizations do contain inconsistency. Removing inconsistencies from a knowledge base is difficult and expensive since, as we know, inconsistencies may not lie on the surface and in most cases there is no single solution to eliminate them.
Reference: [Kel88] <author> Jerry S. Kelly. </author> <title> Social Choice Theory: An Introduction. </title> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: But this approach yields fag _ f:ag, a tautology, which does not support either a or :a. The second approach is to use majority rule <ref> [Kel88] </ref> to merge knowledge bases, but this can produce contradictory results. For example, let us define that a group of knowledge bases supports a sentence ff if there are more members supporting ff than members supporting :ff. <p> Proof: Follows from Proposition 4.5 and Proposition 4.6 in the next section. 2 40 4.3 More Proponents than Opponents Approach When selecting from two alternatives, we usually choose the one that has more supporters. This is the majority rule used in social choice theory <ref> [Kel88] </ref>. Using this rule, we can define a merging method with its support relation ` MPO as follows: Definition 4.2 fT 1 ; : : : ; T n g ` MPO ff if there are more T i 's supporting ff than supporting :ff.
Reference: [KL89] <author> Michael Kifer and E. L. Lozinskii. RI: </author> <title> A logic for reasoning with inconsistency. </title> <booktitle> In Proc. 4th Symposium on Logic in Computer Science, </booktitle> <pages> pages 253-262, </pages> <year> 1989. </year>
Reference-contexts: Introduction One problem in knowledge representation is to deal with conflicting information in knowledge bases. This problem is important since in the presence of inconsistency, systems based on classical logic deduce in every sentence in the underlying language, which is regarded undesirable by many researchers <ref> [Dun76, Bel75, AB75, Roz89, Pri91, KL89, Hal86, Lin87, Sub92] </ref>. A knowledge base may become inconsistent due to, for example, some conflicting data or rules recorded in it. Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. <p> Thus, as concluded by Halpern [Hal86], reasoning in the presence of inconsistency is an issue which will need to be considered in the design of knowledge bases. A great deal of research has been devoted to constructing systems that allow reasoning in the presence of inconsistency (e.g. <ref> [Dun76, RB80, Bel75, Pri79, Gin88, KL89, Lin87, dC74, Prz89, Sub92] </ref>, to name just a few). Most of them are based on some kind of multi-valued logic. <p> Belnap [Bel75] suggests that a certain four-valued logic be used as an actual guide to reasoning and handling inconsistency. Lin [Lin87] and da Costa [dC74] employ three-valued logic to construct their systems, and Przymusinski [Prz89] uses it to model non-monotonic reasoning. Kifer and Lozinskii <ref> [KL89] </ref> propose an Annotated Predicate Calculus where inconsistency is tolerated and it is possible to assign different degrees of truth to a proposition. Ginsberg [Gin88] has described the usefulness of lattice-valued logics in non-monotonic reasoning, counterfactuals, truth maintenance systems, etc. <p> This method is also viewed as a kind of "revision" operator in a survey by Katsuno and Mendelzon [KM91b]. The operator can be used to deal with multiple and conflicting knowledge bases in a way similar to Revesz's method. Subrahmanian [Sub94] uses annotated logic as developed in <ref> [KL89] </ref> to interpret the inconsistency among multiple knowledge bases. Annotated logic is a kind of multi-valued logic where different lattice values such as default true (dt), default false (df) or even possibility values can be assigned to a sentence.
Reference: [KM91a] <author> H. Katsuno and A. O. Mendelzon. </author> <title> On the difference between updating a knowledge base and revising it. </title> <booktitle> In Proceedings of the 2nd International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 387-394, </pages> <year> 1991. </year>
Reference-contexts: Hence their formulation of distributed knowledge applies only to agents who do not have conflicting views. Revesz [Rev94] defines a notion of model-fitting (or a more general notion, called arbitration) which has a close link with belief revision and update <ref> [G 88, KM91b, KM91a] </ref>. Model-fitting takes a set of formulas K and a formula , and tries to find the models of that "best fit" the formulas in K. Model-fitting deals with a single knowledge base only. <p> Note the similarity of this theorem to the representation theorems of Katsuno and Mendelzon for theory change operators such as revision and update <ref> [KM91b, KM91a] </ref>. In theory change, we have a knowledge base T and a sentence ff that must be incorporated into T ; the operators select from all models of ff those that are closest to T in a certain sense. <p> Can these models be extended to deal with the problem of knowledge merging? 7. It would be worthwhile to study the relationship between knowledge merging and Katsuno and Mendelzon's postulates for updates <ref> [KM91a] </ref>. Several research topics for the application of knowledge merging techniques in genome mapping problem can be found in the summary section of Chapter 7. 87 Appendix A Proofs for Chapter 2 A.1 Completeness of the Logic of BL First, we give some definitions and notation.
Reference: [KM91b] <author> H. Katsuno and A. O. Mendelzon. </author> <title> Propositional knowledgebase revision and minimal change. </title> <journal> Artificial Intelligence, </journal> <volume> 52 </volume> <pages> 263-294, </pages> <year> 1991. </year>
Reference-contexts: Hence their formulation of distributed knowledge applies only to agents who do not have conflicting views. Revesz [Rev94] defines a notion of model-fitting (or a more general notion, called arbitration) which has a close link with belief revision and update <ref> [G 88, KM91b, KM91a] </ref>. Model-fitting takes a set of formulas K and a formula , and tries to find the models of that "best fit" the formulas in K. Model-fitting deals with a single knowledge base only. <p> He presents a logical framework for the notion of "accommodating exceptions" by minimally modifying logical assertions so that they become consistent with the database. This method is also viewed as a kind of "revision" operator in a survey by Katsuno and Mendelzon <ref> [KM91b] </ref>. The operator can be used to deal with multiple and conflicting knowledge bases in a way similar to Revesz's method. Subrahmanian [Sub94] uses annotated logic as developed in [KL89] to interpret the inconsistency among multiple knowledge bases. <p> Note the similarity of this theorem to the representation theorems of Katsuno and Mendelzon for theory change operators such as revision and update <ref> [KM91b, KM91a] </ref>. In theory change, we have a knowledge base T and a sentence ff that must be incorporated into T ; the operators select from all models of ff those that are closest to T in a certain sense. <p> In the following we will define a belief revision operator using WMerge. We will then discuss the relationship between this operator and the AGM postulates for revision. Following the notation used by Katsuno and Mendelzon <ref> [KM91b] </ref>, we denote to be an existing knowledge base and to be a new sentence that is to be incorporated into the knowledge base. <p> Gardenfors and his colleagues [G 88] propose a set of rationality postulates, colloquially known as the AGM postulates, that they expect revision operators to satisfy. Katsuno and Mendelzon <ref> [KM91b] </ref> rephrase those postulates so that they are applicable for finite knowledge bases. <p> 2 and 1 2 then 1 ffi 1 2 ffi 2 . (R5) ( ffi ) ^ implies ffi ( ^ ). (R6) If ( ffi ) ^ is consistent then ffi ( ^ ) implies ( ffi ) ^ . 54 The intuition behind these postulates is described in <ref> [G 88, KM91b] </ref>. We have the following result for ffi M . This relates our merge operation WMerge (f ; g; $) with the AGM postulates for belief revision. Theorem 5.5 ffi M satisfies R2-R5, but not R1 or R6. <p> We have mentioned that belief revision can be viewed as concerning two agents: the new knowledge and the old information. The difference is that the first agent is more important than the second. Belief revision <ref> [G 88, KM91b, FUV83, FKUV86] </ref> is a well studied problem and a great number of semantic models for the problem have been proposed in the literature. Can these models be extended to deal with the problem of knowledge merging? 7.
Reference: [Lak87] <author> G. Lakemeyer. </author> <title> Tractable meta-reasoning in propostional logics of belief. </title> <booktitle> In Proc. of the Tenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 402-408, </pages> <year> 1987. </year> <month> 111 </month>
Reference-contexts: Then we would not have a problem believing that "the patient has hepatitis" since he/she has jaundice. We therefore need reasoning about safe (consistent) beliefs for diagnoses in a medical expert system that is possibly inconsistent. For several modal logics of beliefs <ref> [Lev84b, Lak87, FH88, Var86, FHV90] </ref>, the presence of an inconsistency is not as damaging as in classical logics. The main purpose of those logics is to combat the problem of logical omniscience in possible world semantics and model resource-bounded reasoning.
Reference: [Lak90] <author> Gerhard Lakemeyer. </author> <title> Models of belief for decidable reasoning in incomplete knowledge base. </title> <type> Ph.D thesis, </type> <institution> Univ. of Toronto, Dept. of Computer Science, </institution> <year> 1990. </year>
Reference-contexts: The logic therefore provides a more plausible foundation for the service offered by a knowledge representation utility. Lakemeyer <ref> [Lak90] </ref> extends Levesque's logic to a first-order case. His logic of beliefs [Lak90] aims at decidable and efficient reasoning in first-order knowledge bases. Decidabil-ity is achieved by limiting the deductive power of the system, while keeping full introspective ability. <p> The logic therefore provides a more plausible foundation for the service offered by a knowledge representation utility. Lakemeyer <ref> [Lak90] </ref> extends Levesque's logic to a first-order case. His logic of beliefs [Lak90] aims at decidable and efficient reasoning in first-order knowledge bases. Decidabil-ity is achieved by limiting the deductive power of the system, while keeping full introspective ability. The logic offers an intuitive model-theoretic semantics that combines notions from relevance logic and possible-world semantics. <p> We need to fix the upper bound of what the agent believes so that the set of consistent beliefs of the agent can be determined. The O operator is for this purpose. 2.5.1 Semantics of O The semantics of O is similar to the ones in <ref> [Lak90, Lev90] </ref>. 7. M; s j= T Off iff for every s 0 ; s 0 2 M () M; s 0 j= T ff. M; s j= F Off iff M; s 6j= T Off. <p> A special feature of first-order possible worlds or situations is that all of them are assumed to have the same domain of discourse|the set of domain elements D. The same assumption is found in Levesque's possible world models [Lev81, Lev90] and Lakemeyer's first-order semantics of situations <ref> [Lak90] </ref>, where the domain of discourse is a set of so-called standard names or parameters instead. Our definition of first-order situations is similar to that of Lakemeyer's [Lak90], except that: 1. <p> The same assumption is found in Levesque's possible world models [Lev81, Lev90] and Lakemeyer's first-order semantics of situations <ref> [Lak90] </ref>, where the domain of discourse is a set of so-called standard names or parameters instead. Our definition of first-order situations is similar to that of Lakemeyer's [Lak90], except that: 1.
Reference: [Lev81] <author> Hector J. Levesque. </author> <title> A formal treatment of incomplete knowledge bases. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Toronto, </institution> <year> 1981. </year>
Reference-contexts: A special feature of first-order possible worlds or situations is that all of them are assumed to have the same domain of discourse|the set of domain elements D. The same assumption is found in Levesque's possible world models <ref> [Lev81, Lev90] </ref> and Lakemeyer's first-order semantics of situations [Lak90], where the domain of discourse is a set of so-called standard names or parameters instead. Our definition of first-order situations is similar to that of Lakemeyer's [Lak90], except that: 1.
Reference: [Lev84a] <author> Hector J. Levesque. </author> <title> Foundations of a functional approach to knowledge representation. </title> <journal> Artificial Intelligence, </journal> <volume> 23 </volume> <pages> 155-212, </pages> <year> 1984. </year>
Reference: [Lev84b] <author> Hector J. Levesque. </author> <title> A logic of implicit and explicit belief. FLAIR Texh. Rept. 32, Fairchld Lab. for AI Research, Palp Alto. A preliminary version appears in Proc. </title> <booktitle> of the 4th National conference of the American Association for Artificial Intelligence, </booktitle> <pages> pages 198-202,1984, </pages> <year> 1984. </year>
Reference-contexts: Then we would not have a problem believing that "the patient has hepatitis" since he/she has jaundice. We therefore need reasoning about safe (consistent) beliefs for diagnoses in a medical expert system that is possibly inconsistent. For several modal logics of beliefs <ref> [Lev84b, Lak87, FH88, Var86, FHV90] </ref>, the presence of an inconsistency is not as damaging as in classical logics. The main purpose of those logics is to combat the problem of logical omniscience in possible world semantics and model resource-bounded reasoning. <p> For several modal logics of beliefs [Lev84b, Lak87, FH88, Var86, FHV90], the presence of an inconsistency is not as damaging as in classical logics. The main purpose of those logics is to combat the problem of logical omniscience in possible world semantics and model resource-bounded reasoning. Levesque <ref> [Lev84b] </ref> distinguishes between implicit beliefs and explicit beliefs, where explicit beliefs consist of, roughly, the facts that agents are explicitly aware of and implicit beliefs consist of all the logical consequences of explicit beliefs. <p> Fagin, Halpern and Vardi [FHV90] propose a logic that is essentially equivalent to the one in <ref> [Lev84b] </ref>. In Vardi's logic [Var86], the agent has very limited reasoning power: Believing p and believing :p are different from believing p ^ :p and have `models' to correspond. <p> We follow the same approach as <ref> [Lev84b] </ref> to construct our logic. It includes two modal operators B c and B (representing consistent beliefs and beliefs respectively) built on top of a three-valued logic. <p> We now define the support relations j= T and j= F . As in <ref> [Lev84b] </ref>, M; s j= T ff means "the situation s in the belief model M supports the truth of ff" and M; s j= F ff means "the situation s in M supports the falsity of ff". 1. <p> M; s j= T (ff _ fi) iff M; s j= T ff or M; s j= T fi 4. M; s j= T :ff iff M; s j= F ff 1 Our notion of situation is somewhat different from that of <ref> [Lev84b] </ref>, where Levesque also considers situations that support neither p nor :p for some atom p. 2 A situation s is minimal in M with respect to &lt; c if s 2 M and there is no s 0 2 M such that s 0 &lt; c s. <p> The effect of inconsistency is localized in the sense that conclusions can still be drawn through implication from consistent beliefs. This work was inspired by Levesque's logic of implicit and explicit belief <ref> [Lev84b] </ref>. It may be worthwhile at this point to discuss the difference between our logic and Levesque's. Levesque's logic attempts to model resource-bounded and efficient reasoning, and hence in the logic an agent's beliefs are generally not closed under implication. <p> Proof: To prove completeness, we must prove that every valid formula is provable. Equivalently, we prove every consistent formula is satisfiable. The proof is much like the one in <ref> [Lev84b] </ref>. Given a consistent formula , we treat formulas dominated by a modal operator as atomic and extend fg into a consistent set that is downward saturated (i.e., a Hintikka set).
Reference: [Lev86] <author> Hector Levesque. </author> <title> Knowledge representation and reasoning. </title> <journal> Ann. Rev. Comput. Sci., </journal> <volume> 1 </volume> <pages> 255-87, </pages> <year> 1986. </year>
Reference: [Lev90] <author> Hector J. Levesque. </author> <title> All I know: a study in autoepistemic logic. </title> <journal> Artificial Intelligence, </journal> <volume> 42 </volume> <pages> 263-309, </pages> <year> 1990. </year>
Reference-contexts: Connectives ! and are defined in terms of :, ^, and _; that is, ff ! fi is an abbreviation of :ff _ fi, and ff fi is an abbreviation of (ff ! fi) ^ (fi ! ff). Following Levesque <ref> [Lev90] </ref>, we call formulas without any belief operator objective, and formulas where atoms all occur within the scope of a belief operator subjective. <p> Like BL, BOL does not involve nested belief operators. A formula such as Off is read as "ff is all that the agent believes" or "the agent only believes ff". The concept of `only knowing' originated from <ref> [Lev90] </ref>. Note that it may not be the case that the more the agent believes, the more the agent consistently believes. For example, if p is the only proposition that the agent believes (i.e. the agent's belief set is fpg), then the agent consistently believes p. <p> We need to fix the upper bound of what the agent believes so that the set of consistent beliefs of the agent can be determined. The O operator is for this purpose. 2.5.1 Semantics of O The semantics of O is similar to the ones in <ref> [Lak90, Lev90] </ref>. 7. M; s j= T Off iff for every s 0 ; s 0 2 M () M; s 0 j= T ff. M; s j= F Off iff M; s 6j= T Off. <p> Then M = [ff] by the definition of O. Since M j= T Ofi, M = [fi]. Therefore, [ff] = [fi]. By the definition of O it is obvious that j= Off Ofi iff [ff] = [fi]. 2 The following result is similar to Corollary 3.12 in <ref> [Lev90] </ref>; it tells us that an only-knowing sentence specifies a complete epistemic state. Proposition 2.4 Let and ff be any objective sentences. <p> A special feature of first-order possible worlds or situations is that all of them are assumed to have the same domain of discourse|the set of domain elements D. The same assumption is found in Levesque's possible world models <ref> [Lev81, Lev90] </ref> and Lakemeyer's first-order semantics of situations [Lak90], where the domain of discourse is a set of so-called standard names or parameters instead. Our definition of first-order situations is similar to that of Lakemeyer's [Lak90], except that: 1.
Reference: [Lin87] <author> Fangzhen Lin. </author> <title> Reasoning in the presence of inconsistency. </title> <booktitle> In Proceedings of the 6th National conference of the American Association for Artificial Intelligence, </booktitle> <year> 1987. </year>
Reference-contexts: Introduction One problem in knowledge representation is to deal with conflicting information in knowledge bases. This problem is important since in the presence of inconsistency, systems based on classical logic deduce in every sentence in the underlying language, which is regarded undesirable by many researchers <ref> [Dun76, Bel75, AB75, Roz89, Pri91, KL89, Hal86, Lin87, Sub92] </ref>. A knowledge base may become inconsistent due to, for example, some conflicting data or rules recorded in it. Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. <p> Thus, as concluded by Halpern [Hal86], reasoning in the presence of inconsistency is an issue which will need to be considered in the design of knowledge bases. A great deal of research has been devoted to constructing systems that allow reasoning in the presence of inconsistency (e.g. <ref> [Dun76, RB80, Bel75, Pri79, Gin88, KL89, Lin87, dC74, Prz89, Sub92] </ref>, to name just a few). Most of them are based on some kind of multi-valued logic. <p> Belnap [Bel75] suggests that a certain four-valued logic be used as an actual guide to reasoning and handling inconsistency. Lin <ref> [Lin87] </ref> and da Costa [dC74] employ three-valued logic to construct their systems, and Przymusinski [Prz89] uses it to model non-monotonic reasoning. Kifer and Lozinskii [KL89] propose an Annotated Predicate Calculus where inconsistency is tolerated and it is possible to assign different degrees of truth to a proposition.
Reference: [Lina] <author> Jinxin Lin. </author> <title> Integration of weighted knowledge bases. </title> <journal> Artificial Intelligence. </journal> <note> To appear. </note>
Reference: [Linb] <author> Jinxin Lin. </author> <title> A semantics for reasoning consistently in the presence of inconsistency. </title> <journal> Artificial Intelligence. </journal> <note> To appear. </note>
Reference: [Lin94a] <author> Jinxin Lin. </author> <title> Consistent belief reasoning in the presence of inconsistency. </title> <booktitle> In Proceedings of Fifth Conference on Theoretical Aspects of Reasoning about Knowledge, </booktitle> <pages> pages 80-94. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Francisco, CA, </address> <year> 1994. </year>
Reference: [Lin94b] <author> Jinxin Lin. </author> <title> Knowledge merging by majority. </title> <booktitle> Presented and received `Best Student Paper Award' in the Fourth Canadian IRIS-PRECARN Conference, </booktitle> <address> Toronto, Canada, </address> <month> June </month> <year> 1994. </year>
Reference: [LM95a] <author> Jinxin Lin and Alberto O. Mendelzon. </author> <title> Knowledge base merging by majority. </title> <note> To appear, </note> <year> 1995. </year>
Reference: [LM95b] <author> Jinxin Lin and Alberto O. Mendelzon. </author> <title> Merging databases under constraints. </title> <type> Manuscript, </type> <year> 1995. </year> <month> 112 </month>
Reference: [LM95c] <author> Jinxin Lin and Alberto O. Mendelzon. </author> <title> Semantics of first-order theory merging. </title> <type> Manuscript, </type> <year> 1995. </year>
Reference: [LRTL93] <author> A. J. Lee, E. A. Rundensteiner, S. Thomas, and S. Lafortune. </author> <title> An information model for genome map representation and assembly. </title> <type> Technical Report CSE-TR-163-93, </type> <institution> Dept. of Electrical Eng. and Computer Science, Univ. of Michigan, </institution> <address> Ann Arbor, </address> <year> 1993. </year>
Reference-contexts: A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases [BAP92, SL90, BL86, MIR94, LSS93, EP90], multi-agent reasoning systems [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87], distributed artificial intelligence [BG68, Zha92], genomic information systems <ref> [Fre91, HB94, LRTL93, RDRG93] </ref>, collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on. These areas require the participation of multiple agents or component systems, and aim at sharing information or knowledge among the agents or systems.
Reference: [LSS93] <author> L. Lakshmanan, F. Sadri, and I. Subramanian. </author> <title> On the logical foundations of schema integration and evolution in heterogeneous database systems. </title> <booktitle> In Proc. </booktitle> <address> DOOD'93, </address> <year> 1993. </year>
Reference-contexts: Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases <ref> [BAP92, SL90, BL86, MIR94, LSS93, EP90] </ref>, multi-agent reasoning systems [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87], distributed artificial intelligence [BG68, Zha92], genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on.
Reference: [McC80] <author> J. McCarthy. </author> <title> Circumscription a form of non-monotonic reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 13 27-39,171-172, </volume> <year> 1980. </year>
Reference-contexts: While numeric or procedural approaches (e.g., [Sho76, Nil86, Zad78]) may be of use in the same problem, we are in favor of symbolic and declarative approaches. The arguments for symbolic and declarative approaches can be found in <ref> [Rei87a, McC80, McC86] </ref>. For our analysis, we shall use various forms of logics, propositional or first-order, two-valued or three-valued. We may also assign weights to the knowledge bases, which refer to their relative degrees of importance.
Reference: [McC86] <author> J. McCarthy. </author> <title> Applications of circumscription to formalizing common sense knowledge. </title> <journal> Artificial Intelligence, </journal> <volume> 28 </volume> <pages> 89-116, </pages> <year> 1986. </year>
Reference-contexts: While numeric or procedural approaches (e.g., [Sho76, Nil86, Zad78]) may be of use in the same problem, we are in favor of symbolic and declarative approaches. The arguments for symbolic and declarative approaches can be found in <ref> [Rei87a, McC80, McC86] </ref>. For our analysis, we shall use various forms of logics, propositional or first-order, two-valued or three-valued. We may also assign weights to the knowledge bases, which refer to their relative degrees of importance.
Reference: [MIR94] <author> R. J. Miller, Y. E. Ioannidis, and R. Ramakrishnan. </author> <title> Schema equivalence in heterogeneous systems: bridging theory and practice. </title> <booktitle> In Proc. of the Int'l Conference on Extending Database Technology, </booktitle> <year> 1994. </year>
Reference-contexts: Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases <ref> [BAP92, SL90, BL86, MIR94, LSS93, EP90] </ref>, multi-agent reasoning systems [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87], distributed artificial intelligence [BG68, Zha92], genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on. <p> Those systems aim at integrating information stored in possibly distributed or heterogeneous component databases. Research in this area focuses on integrating the schemas of local component databases into a global, unified schema (cf. <ref> [BL86, MIR94] </ref>). Problems treated include name differences, structural differences or format differences. However, little attention has been paid to the problem of conflicting or missing data among component databases. Our merge operator WMerge (proposed in Chapter 5) provides a general solution to the problem. <p> The differences among the schemas of databases are well known in schema integration (see [BL86] for a survey, also <ref> [MIR94] </ref>), e.g., this first problem is known as "synonym" problem and the second "homonym" problem. The differences and relationships among the schemas of databases must be recognized and dealt with when merging the information of the databases.
Reference: [Neb90] <author> Bernhard Nebel. </author> <title> Reasoning and Revision in Hybrid Representation Systems, </title> <booktitle> volume 422 of LNCS. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference: [Nil86] <author> N. J. Nilsson. </author> <title> Probabilistic logic. </title> <journal> Artificial Intelligence, </journal> <volume> 28(1) </volume> <pages> 71-87, </pages> <year> 1986. </year>
Reference-contexts: In this thesis, we will carry out a detailed study of this prob 1 lem and propose several frameworks for dealing with conflicting information in knowledge bases. While numeric or procedural approaches (e.g., <ref> [Sho76, Nil86, Zad78] </ref>) may be of use in the same problem, we are in favor of symbolic and declarative approaches. The arguments for symbolic and declarative approaches can be found in [Rei87a, McC80, McC86]. For our analysis, we shall use various forms of logics, propositional or first-order, two-valued or three-valued.
Reference: [Pri79] <author> G. Priest. </author> <title> Logic of paradox. </title> <journal> Journal of Philosophical Logic, </journal> <volume> 8 </volume> <pages> 219-241, </pages> <year> 1979. </year>
Reference-contexts: Thus, as concluded by Halpern [Hal86], reasoning in the presence of inconsistency is an issue which will need to be considered in the design of knowledge bases. A great deal of research has been devoted to constructing systems that allow reasoning in the presence of inconsistency (e.g. <ref> [Dun76, RB80, Bel75, Pri79, Gin88, KL89, Lin87, dC74, Prz89, Sub92] </ref>, to name just a few). Most of them are based on some kind of multi-valued logic.
Reference: [Pri91] <author> Graham Priest. </author> <title> Minimally inconsistent LP. </title> <journal> Studia Logica, </journal> <volume> L2:321-331, </volume> <year> 1991. </year>
Reference-contexts: Introduction One problem in knowledge representation is to deal with conflicting information in knowledge bases. This problem is important since in the presence of inconsistency, systems based on classical logic deduce in every sentence in the underlying language, which is regarded undesirable by many researchers <ref> [Dun76, Bel75, AB75, Roz89, Pri91, KL89, Hal86, Lin87, Sub92] </ref>. A knowledge base may become inconsistent due to, for example, some conflicting data or rules recorded in it. Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas.
Reference: [Prz89] <author> T. C. Przymusinski. </author> <title> Three-valued formalizations of non-monotonic reasoning and logic programming. </title> <booktitle> In Proceedings of 1st International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <year> 1989. </year>
Reference-contexts: Thus, as concluded by Halpern [Hal86], reasoning in the presence of inconsistency is an issue which will need to be considered in the design of knowledge bases. A great deal of research has been devoted to constructing systems that allow reasoning in the presence of inconsistency (e.g. <ref> [Dun76, RB80, Bel75, Pri79, Gin88, KL89, Lin87, dC74, Prz89, Sub92] </ref>, to name just a few). Most of them are based on some kind of multi-valued logic. <p> Belnap [Bel75] suggests that a certain four-valued logic be used as an actual guide to reasoning and handling inconsistency. Lin [Lin87] and da Costa [dC74] employ three-valued logic to construct their systems, and Przymusinski <ref> [Prz89] </ref> uses it to model non-monotonic reasoning. Kifer and Lozinskii [KL89] propose an Annotated Predicate Calculus where inconsistency is tolerated and it is possible to assign different degrees of truth to a proposition. Ginsberg [Gin88] has described the usefulness of lattice-valued logics in non-monotonic reasoning, counterfactuals, truth maintenance systems, etc.
Reference: [RB80] <author> N. Rescher and R. Brandom. </author> <title> The logic of inconsistency. </title> <publisher> Billing & Sons, </publisher> <address> Ltd.,Oxford, UK, </address> <year> 1980. </year>
Reference-contexts: Thus, as concluded by Halpern [Hal86], reasoning in the presence of inconsistency is an issue which will need to be considered in the design of knowledge bases. A great deal of research has been devoted to constructing systems that allow reasoning in the presence of inconsistency (e.g. <ref> [Dun76, RB80, Bel75, Pri79, Gin88, KL89, Lin87, dC74, Prz89, Sub92] </ref>, to name just a few). Most of them are based on some kind of multi-valued logic.
Reference: [RDRG93] <author> S. Rozen, M. J. Daly, M. Reeve, and N. Goodman. Genome-map: </author> <title> Real-world test data and queries for logic databases. Whitehead/MIT Center for Genome Research, One Kendall Square, </title> <address> Cambridge, MA 02139. </address> <note> Unpublished draft, </note> <year> 1993. </year>
Reference-contexts: A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases [BAP92, SL90, BL86, MIR94, LSS93, EP90], multi-agent reasoning systems [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87], distributed artificial intelligence [BG68, Zha92], genomic information systems <ref> [Fre91, HB94, LRTL93, RDRG93] </ref>, collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on. These areas require the participation of multiple agents or component systems, and aim at sharing information or knowledge among the agents or systems. <p> The process is called physical map generation. The Whitehead Institute/MIT Genome Center focuses on developing an STS content map of the human genome consisting of many Sequence Tag-Site (STS) probes screened in the CEPH YAC library <ref> [RDRG93, fGR93] </ref>. For the purpose of mapping, each DNA fragment is a YAC (Yeast Artificial Chromosome, a small piece of human DNA replicated in yeast cells), and each STS probe is a very short piece of DNA that "sticks" to a particular site on the chromosome. <p> This information is crucial for positioning the YAC fragments on a map. We consider the December 1993 data release from the Human Physical Mapping Project at the Whitehead Institute/MIT Genome Center <ref> [RDRG93, fGR93] </ref>. The data describe the relationships between many probes and YACs. They consist of the following form: * hit (P; Y ), meaning that probe P hits YAC Y . <p> A mistake in the experimental data is called a false positive in genome mapping terms. It is known that in real experiments generally there exist some kinds of failures or errors causing false positives and false negatives <ref> [RDRG93, Fre91, HB94] </ref>.
Reference: [Rei78] <author> R. Reiter. </author> <title> On closed world databases. </title> <editor> In H. Gallaire and J. Minker, editors, </editor> <booktitle> Logic and Data Bases, </booktitle> <pages> pages 119-140. </pages> <publisher> Plenum, </publisher> <address> New York, </address> <year> 1978. </year> <month> 113 </month>
Reference-contexts: We define a (relational) database to be a finite set of primitive sentences in P. We adopt the open-world assumption as opposed to the closed-world assumption (both assumptions are described in <ref> [Rei78] </ref>). The reason is that for databases such as db 1 = fStudent (a)g and db 2 = fStudent (b)g, we do not want the two databases to be considered in conflict, and we want the merge of the two databases to be simply fStudent (a); Student (b)g.
Reference: [Rei80] <author> R. Reiter. </author> <title> A logic for default reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 13(1) </volume> <pages> 81-132, </pages> <year> 1980. </year>
Reference: [Rei84] <author> R. Reiter. </author> <title> Towards a logical reconstruction of relational database theory. </title> <editor> In J. Mylopoulos M. Brodie and J. Schmidt, editors, </editor> <booktitle> On Conceptual Modelling, </booktitle> <pages> pages 191-233. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1984. </year>
Reference-contexts: Let D py = fSts (x) j x 2 P g [ fY ac (y) j y 2 Y g: Thus D py defines the set of probes and YACs for the mapping. Following <ref> [Rei84] </ref>, if is one of the type predicates then (x=): abbreviates 8x: (x) ! : We now explore the constraints involved in the construction of genome maps. With respect to the layout of probes, we use a predicate B to describe the order between probes.
Reference: [Rei87a] <author> R. Reiter. </author> <title> Nonmonotonic reasoning. </title> <journal> Ann. Rev. Comput. Sci., </journal> <volume> 2 </volume> <pages> 147-86, </pages> <year> 1987. </year>
Reference-contexts: While numeric or procedural approaches (e.g., [Sho76, Nil86, Zad78]) may be of use in the same problem, we are in favor of symbolic and declarative approaches. The arguments for symbolic and declarative approaches can be found in <ref> [Rei87a, McC80, McC86] </ref>. For our analysis, we shall use various forms of logics, propositional or first-order, two-valued or three-valued. We may also assign weights to the knowledge bases, which refer to their relative degrees of importance.
Reference: [Rei87b] <author> R. Reiter. </author> <title> A theory of diagnosis from first principles. </title> <journal> Artificial Intelligence, </journal> <volume> 33(1) </volume> <pages> 57-95, </pages> <year> 1987. </year>
Reference: [Rei89] <author> R. Reiter. </author> <title> On integrity constraints. </title> <institution> KRR-TR-89-5, Department of Computer Science, Univ. of Toronto, </institution> <year> 1989. </year>
Reference-contexts: Consider merging knowledge that includes `meta-knowledge' of the agents, e.g., an agent's knowledge about some other agents [FHMV94, FHV84]. 3. In this thesis, integrity constraints are treated as (first-order) sentences in the underlying language. But as shown by Reiter <ref> [Rei89] </ref>, integrity constraints are epistemic in nature. How to incorporate such integrity constraints into our framework is a difficult but interesting issue. 4. A study of merging the knowledge bases that are restricted to some special forms such as Datalog programs or Horn clauses would be practically appealing.
Reference: [Rei92] <author> R. Reiter. </author> <title> On specifying database updates. </title> <institution> KRR-TR-92-3, Department of Computer Science, Univ. of Toronto, </institution> <year> 1992. </year>
Reference: [Rev92] <author> P. Revesz. </author> <title> On the semantics of theory change: arbitration between old and new information. </title> <booktitle> In Proceedings of the Twelfth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, </booktitle> <pages> pages 71-82, </pages> <year> 1992. </year>
Reference: [Rev94] <author> P. Revesz. </author> <title> On the semantics of arbitration. </title> <type> Manuscript, </type> <year> 1994. </year>
Reference-contexts: Halpern and Moses [HM85] essentially define distributed (implicit) knowledge in a group of agents as the classical logical consequences of the union of the agents' knowledge bases. Hence their formulation of distributed knowledge applies only to agents who do not have conflicting views. Revesz <ref> [Rev94] </ref> defines a notion of model-fitting (or a more general notion, called arbitration) which has a close link with belief revision and update [G 88, KM91b, KM91a].
Reference: [Roz89] <author> L. I. Rozonoer. </author> <title> On interpretation of inconsistent theories. </title> <journal> Information Sciences, </journal> <volume> 47 </volume> <pages> 243-266, </pages> <year> 1989. </year>
Reference-contexts: Introduction One problem in knowledge representation is to deal with conflicting information in knowledge bases. This problem is important since in the presence of inconsistency, systems based on classical logic deduce in every sentence in the underlying language, which is regarded undesirable by many researchers <ref> [Dun76, Bel75, AB75, Roz89, Pri91, KL89, Hal86, Lin87, Sub92] </ref>. A knowledge base may become inconsistent due to, for example, some conflicting data or rules recorded in it. Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas.
Reference: [Sho76] <author> E. H. Shortliffe. </author> <title> Computer-Based medical consultations: MYCIN. </title> <address> New York: </address> <publisher> Elsevier, </publisher> <year> 1976. </year>
Reference-contexts: In this thesis, we will carry out a detailed study of this prob 1 lem and propose several frameworks for dealing with conflicting information in knowledge bases. While numeric or procedural approaches (e.g., <ref> [Sho76, Nil86, Zad78] </ref>) may be of use in the same problem, we are in favor of symbolic and declarative approaches. The arguments for symbolic and declarative approaches can be found in [Rei87a, McC80, McC86]. For our analysis, we shall use various forms of logics, propositional or first-order, two-valued or three-valued.
Reference: [SL90] <author> A. P. Sheth and J. A. Larson. </author> <title> Federated database systems for managing distributed, heterogeneous, and autonomous databases. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(3) </volume> <pages> 183-235, </pages> <month> Sept. </month> <year> 1990. </year>
Reference-contexts: Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases <ref> [BAP92, SL90, BL86, MIR94, LSS93, EP90] </ref>, multi-agent reasoning systems [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87], distributed artificial intelligence [BG68, Zha92], genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on. <p> Merging Databases under Constraints Considerable efforts have been made in both academia and industry to develop global information-sharing systems such as federated databases, multidatabases, or interoperable systems (cf. <ref> [BAP92, EP90, SL90, BL86] </ref>). Those systems aim at integrating information stored in possibly distributed or heterogeneous component databases. Research in this area focuses on integrating the schemas of local component databases into a global, unified schema (cf. [BL86, MIR94]). Problems treated include name differences, structural differences or format differences.
Reference: [Sub92] <author> V. S. Subrahmanian. </author> <title> Paraconsistent disjunctive deductive databases. </title> <journal> Theoretical Computer Science, </journal> <volume> 93 </volume> <pages> 115-141, </pages> <year> 1992. </year>
Reference-contexts: Introduction One problem in knowledge representation is to deal with conflicting information in knowledge bases. This problem is important since in the presence of inconsistency, systems based on classical logic deduce in every sentence in the underlying language, which is regarded undesirable by many researchers <ref> [Dun76, Bel75, AB75, Roz89, Pri91, KL89, Hal86, Lin87, Sub92] </ref>. A knowledge base may become inconsistent due to, for example, some conflicting data or rules recorded in it. Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. <p> Thus, as concluded by Halpern [Hal86], reasoning in the presence of inconsistency is an issue which will need to be considered in the design of knowledge bases. A great deal of research has been devoted to constructing systems that allow reasoning in the presence of inconsistency (e.g. <ref> [Dun76, RB80, Bel75, Pri79, Gin88, KL89, Lin87, dC74, Prz89, Sub92] </ref>, to name just a few). Most of them are based on some kind of multi-valued logic.
Reference: [Sub94] <author> V. S. Subrahmanian. </author> <title> Amalgamating knowledge bases. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 19(2) </volume> <pages> 291-331, </pages> <year> 1994. </year>
Reference-contexts: This method is also viewed as a kind of "revision" operator in a survey by Katsuno and Mendelzon [KM91b]. The operator can be used to deal with multiple and conflicting knowledge bases in a way similar to Revesz's method. Subrahmanian <ref> [Sub94] </ref> uses annotated logic as developed in [KL89] to interpret the inconsistency among multiple knowledge bases. Annotated logic is a kind of multi-valued logic where different lattice values such as default true (dt), default false (df) or even possibility values can be assigned to a sentence.
Reference: [Var86] <author> M. Vardi. </author> <title> On epistemic logic and logical omniscience. </title> <booktitle> In Proc. of the Conference on Theoretical Aspects of Reasoning about Knowledge, </booktitle> <pages> pages 293-305, </pages> <year> 1986. </year>
Reference-contexts: Then we would not have a problem believing that "the patient has hepatitis" since he/she has jaundice. We therefore need reasoning about safe (consistent) beliefs for diagnoses in a medical expert system that is possibly inconsistent. For several modal logics of beliefs <ref> [Lev84b, Lak87, FH88, Var86, FHV90] </ref>, the presence of an inconsistency is not as damaging as in classical logics. The main purpose of those logics is to combat the problem of logical omniscience in possible world semantics and model resource-bounded reasoning. <p> Fagin, Halpern and Vardi [FHV90] propose a logic that is essentially equivalent to the one in [Lev84b]. In Vardi's logic <ref> [Var86] </ref>, the agent has very limited reasoning power: Believing p and believing :p are different from believing p ^ :p and have `models' to correspond.
Reference: [Web87] <author> A. Weber. </author> <title> Updating propositional formulas. </title> <editor> In L. Kerschberg, editor, </editor> <booktitle> Proceedings of 1st International Conference on Expert Database Systems, </booktitle> <year> 1987. </year> <month> 114 </month>
Reference: [Win90] <author> M. Winslett. </author> <title> Updating Logical Databases. </title> <publisher> Cambridge University Press, </publisher> <year> 1990. </year>
Reference: [WL92] <author> C. C. Woo and F. H. </author> <title> Lochovsky. </title> <journal> Knowledge communication in intelligent information systems. Intenational Journal of Intelligent & Cooperative Information Systems, </journal> <volume> 1 </volume> <pages> 203-228, </pages> <year> 1992. </year>
Reference-contexts: Information from different knowledge bases may contradict each other since knowledge bases are often constructed independently and used in different areas. A similar problem exists in many other areas such as cooperative information systems <ref> [BJe94, HM92, WL92] </ref>, multidatabases [BAP92, SL90, BL86, MIR94, LSS93, EP90], multi-agent reasoning systems [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87], distributed artificial intelligence [BG68, Zha92], genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on.
Reference: [Zad78] <author> L. A. Zadeh. </author> <title> Fuzzy sets as a basis for a theory of possibility. </title> <journal> Fuzzy Sets and Systems, </journal> <volume> 1(1) </volume> <pages> 3-28, </pages> <year> 1978. </year>
Reference-contexts: In this thesis, we will carry out a detailed study of this prob 1 lem and propose several frameworks for dealing with conflicting information in knowledge bases. While numeric or procedural approaches (e.g., <ref> [Sho76, Nil86, Zad78] </ref>) may be of use in the same problem, we are in favor of symbolic and declarative approaches. The arguments for symbolic and declarative approaches can be found in [Rei87a, McC80, McC86]. For our analysis, we shall use various forms of logics, propositional or first-order, two-valued or three-valued.
Reference: [Zha92] <author> Chengqi Zhang. </author> <title> Cooperation under uncertainty in distributed expert systems. </title> <journal> Artificial Intelligence, </journal> <volume> 56 </volume> <pages> 21-69, </pages> <year> 1992. </year> <month> 115 </month>
Reference-contexts: A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multidatabases [BAP92, SL90, BL86, MIR94, LSS93, EP90], multi-agent reasoning systems [HM85, FH88, HM90, FHV91, FHMV94, FV86, HF89, Hal87], distributed artificial intelligence <ref> [BG68, Zha92] </ref>, genomic information systems [Fre91, HB94, LRTL93, RDRG93], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), organizational computing and so on. These areas require the participation of multiple agents or component systems, and aim at sharing information or knowledge among the agents or systems. <p> For example, if an agent knows a and another agent knows a ! b then combining their knowledge yields b, even though it might be the case that neither of the agents individually knows b. Such need also arises in other contexts <ref> [FV86, BKMS92, Zha92] </ref>. Assume each agent is associated with a knowledge base and the agent reasons about the world according to the knowledge base. Then the process of combining knowledge in a group of agents is the same as merging a group of knowledge bases.
References-found: 95

