URL: http://ai.eecs.umich.edu/people/durfee/courses/592winter98/readings/c5.ps
Refering-URL: http://ai.eecs.umich.edu/people/durfee/courses/592winter98/index.html
Root-URL: http://www.cs.umich.edu
Title: 5 Distributed Rational Decision Making negotiation at the operative decision making level. This automation can
Author: Tuomas W. Sandholm 
Note: Multiagent technology facilitates such  
Date: 5.1 Introduction  
Abstract: Automated negotiation systems with self-interested agents are becoming increasingly important. One reason for this is the technology push of a growing standardized communication infrastructure|Internet, WWW, NII, EDI, KQML, FIPA, Concor-dia, Voyager, Odyssey, Telescript, Java, etc|over which separately designed agents belonging to different organizations can interact in an open environment in real-time and safely carry out transactions. The second reason is strong application pull for computer support for negotiation at the operative decision making level. For example, we are witnessing the advent of small transaction electronic commerce on the Internet for purchasing goods, information, and communication bandwidth [29]. There is also an industrial trend toward virtual enterprises: dynamic alliances of small, agile enterprises which together can take advantage of economies of scale when available (e.g., respond to more diverse orders than individual agents can), but do not suffer from diseconomies of scale. This chapter discusses multiagent negotiation in situations where agents may have different goals, and each agent is trying to maximize its own good without concern for the global good. Such self-interest naturally prevails in negotiations among independent businesses or individuals. In building computer support for negotiation in such settings, the issue of self-interest has to be dealt with. In cooperative distributed problem solving [10, 7], the system designer imposes an interaction protocol 1 and a strategy (a mapping from state history to action; a 1. Here a protocol does not mean a low level communication protocol, but a negotiation protocol which determines the possible actions that agents can take at different points of the interaction. The sealed-bid first-price auction is an example protocol where each bidder is free to submit one bid for the item, which is awarded to the highest bidder at 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Martin Andersson and Tuomas W Sandholm. </author> <title> Contract types for satisficing task allocation: II experimental results. </title> <booktitle> In AAAI Spring Symposium Series: Satisficing Models, </booktitle> <address> Stanford University, CA, </address> <month> March </month> <year> 1998. </year>
Reference-contexts: Nash analyzed a 2-agent setting where the agents have to decide on an outcome o 2 O, and the fallback outcome o fallback occurs if no agreement is reached. There is a utility function u i : O ! &lt; for each agent i 2 <ref> [1; 2] </ref>. It is assumed that that the set of feasible utility vectors f (u 1 (o); u 2 (o))jo 2 Og is convex. This occurs, for example, if outcomes include all possible lotteries over actual alternatives. <p> However, sufficient conditions for existence are known: Theorem 5.12 Existence Let the production possibilities sets be closed (i.e. include their boundaries), convex (i.e. if bundles y and y 0 are producible, then so is ffy + (1 ff)y 0 8ff 2 <ref> [0; 1] </ref>), 26 Distributed Rational Decision Making and bounded above (i.e. an infinite amount of no good can be produced). <p> Let the consumers' preferences be continuous (i.e. the preferences have no "jumps"), strictly convex (i.e. if the consumer prefers y to y 00 and y 0 to y 00 , then he prefers ffy+(1ff)y 0 to y 00 8ff 2 <ref> [0; 1] </ref>), and strongly monotone (i.e. each consumer strictly prefers more to less of each commodity). Now, if a society-wide bundle is producible where the amount of each commodity is positive (positive endowments trivially imply this), a general equilibrium exists [37]. <p> In general TODs using all-or-nothing deals, the negotiation set (set of individually rational Pareto efficient deals) may be empty. 5.7.2 Contingency Contracts and Leveled Commitment Contracts In traditional multiagent negotiation protocols among self-interested agents, once a contract is made, it is binding, i.e. neither party can back out <ref> [54, 58, 62, 1, 12, 32, 66, 8] </ref>. Once an agent agrees to a contract, it has to follow through with it no matter how future events unravel.
Reference: 2. <author> Kenneth Arrow. </author> <title> Social choice and individual values. New Haven: Cowles Foundation, </title> <booktitle> 2nd edition, 1963. 1st edition 1951. </booktitle>
Reference-contexts: No agent should be a dictator in the sense that o i o 0 implies o fl o 0 for all preferences of the other agents. Unfortunately it is not possible to satisfy these desiderata: Theorem 5.1 Arrow's impossibility theorem <ref> [2, 33] </ref> No social choice rule satisfies all of these six conditions. So, to design social choice rules, the desiderata have to be relaxed. Commonly the first property is relaxed in the sense that the domain (combinations of individual preferences) on which the rule works is restricted. <p> Nash analyzed a 2-agent setting where the agents have to decide on an outcome o 2 O, and the fallback outcome o fallback occurs if no agreement is reached. There is a utility function u i : O ! &lt; for each agent i 2 <ref> [1; 2] </ref>. It is assumed that that the set of feasible utility vectors f (u 1 (o); u 2 (o))jo 2 Og is convex. This occurs, for example, if outcomes include all possible lotteries over actual alternatives.
Reference: 3. <author> R Aumann. </author> <title> Acceptable points in general cooperative n-person games. volume IV of Contributions to the Theory of Games. </title> <publisher> Princeton University Press, </publisher> <year> 1959. </year> <title> 54 Distributed Rational Decision Making </title>
Reference-contexts: However, the Nash equilibrium is often too weak because subgroups of agents can deviate in a coordinated manner. The Strong Nash equilibrium is a solution concept that guarantees more stability <ref> [3] </ref>. It requires that there is no subgroup that can deviate by changing strategies jointly in a manner that increases the payoff of all of its members given that nonmembers do not deviate from the original solution.
Reference: 4. <author> Salvador Barbera and Matthew O Jackson. </author> <title> Strategy-proof exchange. </title> <journal> Econometrica, </journal> <volume> 63(1) </volume> <pages> 51-87, </pages> <year> 1995. </year>
Reference-contexts: A stronger condition is to require dominant strategy equilibrium, i.e. that each agent's strategy is optimal for that agent no matter what strategies others choose. Market protocols have been studied using dominant strategy equilibrium in <ref> [4] </ref>. The results are negative in the sense that the agents need to be given price ratios for trading in advance by the protocol designer, and the designer does not know the agents' preferences and capabilities.
Reference: 5. <author> B Douglas Bernheim, Bezalel Peleg, and Michael D Whinston. </author> <title> Coalition-proof Nash equilibria: I concepts. </title> <journal> Journal of Economic Theory, </journal> <volume> 42(1) </volume> <pages> 1-12, </pages> <month> June </month> <year> 1987. </year>
Reference-contexts: The Strong Nash equilibrium is often too strong a solution concept because in many games no such equilibria exist. The Coalition-Proof Nash equilibrium has been suggested as a partial remedy to the nonexistence problem of the Strong Nash equilibrium <ref> [5, 6] </ref>. It requires that there is no subgroup that can make a mutually beneficial deviation (keeping the strategies of nonmembers fixed) in a way that the deviation itself is stable according to the same criterion.
Reference: 6. <author> B Douglas Bernheim and Michael D Whinston. </author> <title> Coalition-proof Nash equilibria: II applications. </title> <journal> Journal of Economic Theory, </journal> <volume> 42(1) </volume> <pages> 13-29, </pages> <month> June </month> <year> 1987. </year>
Reference-contexts: The Strong Nash equilibrium is often too strong a solution concept because in many games no such equilibria exist. The Coalition-Proof Nash equilibrium has been suggested as a partial remedy to the nonexistence problem of the Strong Nash equilibrium <ref> [5, 6] </ref>. It requires that there is no subgroup that can make a mutually beneficial deviation (keeping the strategies of nonmembers fixed) in a way that the deviation itself is stable according to the same criterion.
Reference: 7. <editor> Alan H. Bond and Les Gasser. </editor> <booktitle> Readings in Distributed Artificial Intelligence. </booktitle> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Mateo, CA, </address> <year> 1988. </year>
Reference-contexts: Such self-interest naturally prevails in negotiations among independent businesses or individuals. In building computer support for negotiation in such settings, the issue of self-interest has to be dealt with. In cooperative distributed problem solving <ref> [10, 7] </ref>, the system designer imposes an interaction protocol 1 and a strategy (a mapping from state history to action; a 1.
Reference: 8. <author> John Q. Cheng and Michael P. Wellman. </author> <title> The WALRAS algorithm: A convergent distributed implementation of general equilibrium outcomes. </title> <booktitle> Computational Economics, </booktitle> <year> 1997. </year>
Reference-contexts: setting of Real-Time A* in that there are multiple self-interested agents: the agents' strategies should be in equilibrium. 5.6 General Equilibrium Market Mechanisms This section presents general equilibrium theory, a microeconomic market framework that has recently been successfully adapted for and used in computational multiagent systems in many application domains <ref> [79, 80, 42, 82, 8] </ref>. General equilibrium theory provides a distributed method for efficiently allocating goods and resources among agents|i.e. striking the best tradeoffs in a moderately complex multidimensional search space|based on market prices. Such a market has n &gt; 0 commodity goods g. <p> Walras uses asynchronous declarations by the agents, i.e. an agent might only change its plan regarding a subset of goods at a time. Similarly, agents might take arbitrary turns in making new declarations. Under certain conditions, this process still converges to a general equilibrium <ref> [8] </ref>. As in t^atonnement, trades in Walras only occur after the market process has arrived (close) to a general equilibrium. In addition to price-based market mechanisms, quantity-based (commodity-based, resource-based) mechanisms exist for reaching the general equilibrium [37]. <p> In general TODs using all-or-nothing deals, the negotiation set (set of individually rational Pareto efficient deals) may be empty. 5.7.2 Contingency Contracts and Leveled Commitment Contracts In traditional multiagent negotiation protocols among self-interested agents, once a contract is made, it is binding, i.e. neither party can back out <ref> [54, 58, 62, 1, 12, 32, 66, 8] </ref>. Once an agent agrees to a contract, it has to follow through with it no matter how future events unravel.
Reference: 9. <author> E H Clarke. </author> <title> Multipart pricing of public goods. Public Choice, </title> <booktitle> 11 </booktitle> <pages> 17-33, </pages> <year> 1971. </year>
Reference-contexts: Agents that do not end up changing the outcome do not pay any tax. Theorem 5.4 If each agent has quasilinear preferences, then, under Algorithm 5.2, each agent's dominant strategy is to reveal his true preferences, i.e. ^v i (g) = v i (g) for all g. <ref> [9, 19] </ref> So, in the example, if the pool is built, the utility for each agent i becomes u i (o) = v i (1) P=jAj tax i , and if not, u i (o) = v i (0).
Reference: 10. <author> E Durfee, V Lesser, and D Corkill. </author> <title> Cooperative distributed problem solving. </title> <booktitle> In </booktitle>
Reference-contexts: Such self-interest naturally prevails in negotiations among independent businesses or individuals. In building computer support for negotiation in such settings, the issue of self-interest has to be dealt with. In cooperative distributed problem solving <ref> [10, 7] </ref>, the system designer imposes an interaction protocol 1 and a strategy (a mapping from state history to action; a 1.
References-found: 10

