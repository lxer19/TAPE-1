URL: ftp://ftp.cs.indiana.edu/pub/techreports/TR502.ps.Z
Refering-URL: http://www.cs.indiana.edu/trindex.html
Root-URL: 
Email: mh@mathematik.th-darmstadt.de  pierce@cs.indiana.edu  
Title: Type Destructors some restrictions in order to achieve a tractable metatheory. The properties of the
Author: Martin Hofmann Benjamin C. Pierce 
Note: which imposes  
Date: February 4, 1998  
Address: Schlogartenstrae 7 D-64289 Darmstadt, Germany  Lindley Hall 215 Bloomington, IN 47405, USA  
Affiliation: Fachbereich Mathematik Technische Hochschule Darmstadt  Computer Science Department Indiana University  Indiana University  
Pubnum: CSCI Technical Report 502  
Abstract: We study a variant of System F that integrates and generalizes several existing proposals for calculi with structural typing rules. To the usual type constructors (!, fi, All, Some, Rec) we add a number of type destructors, each internalizing a useful fact about the subtyping relation. For example, in F with products every closed subtype of a product SfiT must itself be a product S 0 fiT 0 with S 0 &lt;:S and T 0 &lt;:T. We internalise this observation by introducing type destructors .1 and .2 and postulating an equivalence T = T.1fiT.2 whenever T &lt;: UfiV (including, for example, when T is a variable). In other words, every subtype of a product type literally is a product type, modulo -conversion. Adding type destructors provides a clean solution to the problem of polymorphic update without introducing new term formers, new forms of polymorphism, or quantification over type operators. We illustrate this by giving elementary presentations of two well-known encodings of objects, one based on recursive record types and the other based on existential packages. The formulation of type destructors poses some tricky meta-theoretic problems. We discuss two different variants: an "ideal" system where both constructors and destructors appear in general forms, and a more modest system, F TD 
Abstract-found: 1
Intro-found: 1
Reference: [AC93] <author> Roberto M. Amadio and Luca Cardelli. </author> <title> Subtyping recursive types. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 15(4) </volume> <pages> 575-631, </pages> <year> 1993. </year> <note> A preliminary version appeared in POPL '91 (pp. 104-118) and as DEC Systems Research Center Research Report number 62, </note> <month> August </month> <year> 1990. </year>
Reference: [AC95] <author> Martn Abadi and Luca Cardelli. </author> <title> On subtyping and matching. </title> <booktitle> In Proceedings ECOOP '95, </booktitle> <pages> pages 145-167, </pages> <year> 1995. </year>
Reference: [AC96] <author> Martn Abadi and Luca Cardelli. </author> <title> A Theory of Objects. </title> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference: [ACV96] <author> Martn Abadi, Luca Cardelli, and Ramesh Viswanathan. </author> <title> An interpretation of objects and object types. </title> <booktitle> In Principles of Programming Languages, </booktitle> <pages> pages 396-409, </pages> <year> 1996. </year>
Reference: [Ama91] <author> Roberto M. Amadio. </author> <title> Recursion over realizability structures. </title> <journal> Information and Computation, </journal> <volume> 90(2) </volume> <pages> 55-85, </pages> <year> 1991. </year> <month> 31 </month>
Reference: [BCP97] <author> Kim B. Bruce, Luca Cardelli, and Benjamin C. Pierce. </author> <title> Comparing object encodings. </title> <booktitle> In Theoretical Aspects of Computer Software (TACS), Sendai, </booktitle> <address> Japan, </address> <month> September </month> <year> 1997. </year> <note> An earlier version was presented as an invited lecture at the Third International Workshop on Foundations of Object Oriented Languages (FOOL 3), </note> <month> July </month> <year> 1996. </year>
Reference: [BPF97] <author> Kim B. Bruce, Leaf Petersen, and Adrian Fiech. </author> <title> Subtyping is not a good "match" for object-oriented languages. </title> <booktitle> In Proceedings of ECOOP, volume 1241 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997. </year>
Reference: [Car90] <author> Luca Cardelli. </author> <title> Notes about F ! &lt;: </title> . <type> Unpublished manuscript, </type> <month> October </month> <year> 1990. </year>
Reference: [Car92] <author> Luca Cardelli. </author> <title> Extensible records in a pure calculus of subtyping. </title> <type> Research report 81, </type> <institution> DEC Systems Research Center, </institution> <month> January </month> <year> 1992. </year> <editor> Also in Carl A. Gunter and John C. Mitchell, editors, </editor> <title> Theoretical Aspects of Object-Oriented Programming: Types, Semantics, </title> <publisher> and Language Design (MIT Press, </publisher> <year> 1994). </year>
Reference: [Car95] <author> Luca Cardelli. </author> <title> Operationally sound update. Talk at Higher-Order Operational Techniques in Semantics (HOOTS I), </title> <address> Cambridge, England, </address> <year> 1995. </year>
Reference: [CG92] <author> Pierre-Louis Curien and Giorgio Ghelli. </author> <title> Coherence of subsumption: Minimum typing and type-checking in F . Mathematical Structures in Computer Science, </title> <booktitle> 2 </booktitle> <pages> 55-91, </pages> <year> 1992. </year> <editor> Also in Carl A. Gunter and John C. Mitchell, editors, </editor> <title> Theoretical Aspects of Object-Oriented Programming: Types, Semantics, </title> <publisher> and Language Design (MIT Press, </publisher> <year> 1994). </year>
Reference: [CL91] <author> Luca Cardelli and Giuseppe Longo. </author> <title> A semantic basis for Quest. </title> <journal> Journal of Functional Programming, </journal> <volume> 1(4) </volume> <pages> 417-458, </pages> <month> October </month> <year> 1991. </year> <title> Preliminary version in ACM Conference on Lisp and Functional Program ming, </title> <month> June </month> <year> 1990. </year> <note> Also available as DEC SRC Research Report 55, </note> <month> Feb. </month> <year> 1990. </year>
Reference: [CM91] <author> Luca Cardelli and John Mitchell. </author> <title> Operations on records. </title> <booktitle> Mathematical Structures in Computer Science, </booktitle> <volume> 1 </volume> <pages> 3-48, </pages> <year> 1991. </year> <editor> Also in Carl A. Gunter and John C. Mitchell, editors, </editor> <title> Theoretical Aspects of Object-Oriented Programming: Types, Semantics, and Language Design (MIT Press, </title> <note> 1994); available as DEC Systems Research Center Research Report #48, </note> <month> August, </month> <year> 1989, </year> <booktitle> and in the proceedings of MFPS '89, </booktitle> <publisher> Springer LNCS volume 442. </publisher>
Reference: [CMMS94] <author> Luca Cardelli, Simone Martini, John C. Mitchell, and Andre Scedrov. </author> <title> An extension of system F with subtyping. </title> <journal> Information and Computation, </journal> <note> 109(1-2):4-56, 1994. A preliminary version appeared in TACS '91 (Sendai, Japan, pp. 750-770). </note>
Reference: [Com94] <author> Adriana B. Compagnoni. </author> <title> Decidability of higher-order subtyping with intersection types. </title> <booktitle> In Computer Science Logic, </booktitle> <month> September </month> <year> 1994. </year> <title> Kazimierz, </title> <booktitle> Poland. Springer Lecture Notes in Computer Science 933, </booktitle> <month> June </month> <year> 1995. </year> <note> Also available as University of Edinburgh, LFCS technical report ECS-LFCS-94-281, titled "Subtyping in F ! ^ is decidable". </note>
Reference: [CW85] <author> Luca Cardelli and Peter Wegner. </author> <title> On understanding types, data abstraction, and polymorphism. </title> <journal> Computing Surveys, </journal> <volume> 17(4), </volume> <month> December </month> <year> 1985. </year>
Reference: [FM96] <author> Kathleen Fisher and John Mitchell. </author> <title> The development of type systems for object-oriented languages. </title> <journal> Theory and Practice of Object Systems, </journal> <volume> 1(3) </volume> <pages> 189-220, </pages> <year> 1996. </year>
Reference: [GLT89] <author> Jean-Yves Girard, Yves Lafont, and Paul Taylor. </author> <title> Proofs and Types, </title> <booktitle> volume 7 of Cambridge Tracts in Theoretical Computer Science. </booktitle> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1989. </year>
Reference: [HP95a] <author> Martin Hofmann and Benjamin Pierce. </author> <title> Positive subtyping. </title> <booktitle> In Proceedings of Twenty-Second Annual ACM Symposium on Principles of Programming Languages, </booktitle> <pages> pages 186-197. </pages> <publisher> ACM, </publisher> <month> January </month> <year> 1995. </year> <note> Full version in Information and Computation, volume 126, number 1, April 1996. Also available as University of Edinburgh technical report ECS-LFCS-94-303, </note> <month> September </month> <year> 1994. </year>
Reference: [HP95b] <author> Martin Hofmann and Benjamin Pierce. </author> <title> A unifying type-theoretic framework for objects. </title> <journal> Journal of Functional Programming, </journal> <volume> 5(4) </volume> <pages> 593-635, </pages> <month> October </month> <year> 1995. </year> <note> Previous versions appeared in the Symposium on Theoretical Aspects of Computer Science, </note> <year> 1994, </year> <title> (pages 251-262) and, under the title "An Abstract View of Objects and Subtyping (Preliminary Report)," as University of Edinburgh, </title> <type> LFCS technical report ECS-LFCS-92-226, </type> <year> 1992. </year>
Reference: [Pie96] <author> Benjamin C. Pierce. </author> <title> Even simpler type-theoretic foundations for oop. </title> <editor> Manuscript (circulated electroni cally), </editor> <month> March </month> <year> 1996. </year>
Reference: [Pol96] <author> Erik Poll. </author> <title> Width-subtyping and polymorphic record update. </title> <type> Manuscript, </type> <month> June </month> <year> 1996. </year>
Reference: [PS94] <author> Benjamin Pierce and Martin Steffen. </author> <title> Higher-order subtyping. </title> <booktitle> In IFIP Working Conference on Programming Concepts, Methods and Calculi (PROCOMET), </booktitle> <year> 1994. </year> <note> Full version in Theoretical Computer Science, </note> <editor> vol. </editor> <volume> 176, no. </volume> <pages> 1-2, pp. 235-282, </pages> <note> 1997 (with a corrigendum in TCS vol. 184 (1997), </note> <editor> p. </editor> <volume> 247). </volume> <pages> 32 </pages>
Reference: [PT94] <author> Benjamin C. Pierce and David N. Turner. </author> <title> Simple type-theoretic foundations for object-oriented programming. </title> <journal> Journal of Functional Programming, </journal> <volume> 4(2) </volume> <pages> 207-247, </pages> <month> April </month> <year> 1994. </year> <note> A preliminary version appeared in Principles of Programming Languages, </note> <year> 1993, </year> <title> and as University of Edinburgh technical report ECS-LFCS-92-225, under the title "Object-Oriented Programming Without Recursive Types". </title>
Reference: [Ste98] <author> Martin Steffen. </author> <title> Polarized Higher-Order Subtyping. </title> <type> PhD thesis, </type> <institution> Universitat Erlangen-Nurnberg, </institution> <year> 1998. </year> <month> Forthcoming. </month>
References-found: 25

