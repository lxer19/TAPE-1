URL: ftp://ftp.ics.uci.edu/pub/csp/CSP-repository/papers/local-global-rel-consistency.ps
Refering-URL: http://www.ics.uci.edu/~mlearn/MLPapers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: dechter@ics.uci.edu  vanbeek@cs.ualberta.ca  
Phone: 2  
Title: Local and Global Relational Consistency  
Author: Rina Dechter and Peter van Beek 
Address: Irvine, California, USA 92717  Edmonton, Alberta, Canada T6G 2H1  
Affiliation: 1 Department of Information and Computer Science University of California, Irvine  Department of Computing Science University of Alberta  
Abstract: Local consistency has proven to be an important concept in the theory and practice of constraint networks. In this paper, we present a new definition of local consistency, called relational consistency. The new definition is relation-based, in contrast with the previous definition of local consistency, which we characterize as variable-based. We show the conceptual power of the new definition by showing how it unifies known elimination operators such as resolution in theorem proving, joins in relational databases, and variable elimination for solving linear inequalities. Algorithms for enforcing various levels of relational consistency are introduced and analyzed. We also show the usefulness of the new definition in characterizing relationships between properties of constraint network sand the level of local consistency needed to ensure global consistency.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> S. Arnborg. </author> <title> Efficient algorithms for combinatorial problems on graphs with bounded decomposability | a survey. </title> <journal> BIT, </journal> <volume> 25 </volume> <pages> 2-23, </pages> <year> 1985. </year>
Reference-contexts: Like similar algorithms for enforcing directional consistency, the worst-case complexity of Directional-Relational-Consistency can be bounded as a function of the topological structure of the problem via parameters like the induced width of the graph [11], also known as tree-width <ref> [1, 2] </ref>. Definition 17 (width, tree-width). A constraint network R can be associated with a constraint graph, where each node is a variable and two variables that appear in one constraint are connected. A general graph can be embedded in a chordal graph 5 . <p> We have recently shown how a collection of probabilistic and combinatorial optimization tasks can be formulated within this framework [15]. Such algorithms were also presented for various graph-based tasks by <ref> [1, 3] </ref>. All the algorithms possess similar properties of compiling a theory into a backtrack-free one (or greedy) and their complexity is dependent on the same graph properties. Specifically they all have a complexity bound which is exponential in the induced-width of some graph.
Reference: 2. <author> S. Arnborg, D. G. Corneil, and A. Proskurowski. </author> <title> Complexity of finding an embedding in k-trees. </title> <journal> SIAM Journal of Algebraic Discrete Methods, </journal> <volume> 8 </volume> <pages> 177-184, </pages> <year> 1987. </year>
Reference-contexts: Like similar algorithms for enforcing directional consistency, the worst-case complexity of Directional-Relational-Consistency can be bounded as a function of the topological structure of the problem via parameters like the induced width of the graph [11], also known as tree-width <ref> [1, 2] </ref>. Definition 17 (width, tree-width). A constraint network R can be associated with a constraint graph, where each node is a variable and two variables that appear in one constraint are connected. A general graph can be embedded in a chordal graph 5 . <p> The size of the smallest induced width over all the graph's clique-tree embeddings is the induced width, w fl of the graph. It is known that finding the induced width of a graph is NP-complete <ref> [2] </ref>, nevertheless every ordering of the variables o, yields a simple to compute upper bound denoted w fl (o) (see [12]). The complexity of DRC m along o can be bounded as a function of w fl (o) of its constraint graph. Specifically [12], Theorem 18.
Reference: 3. <author> S. Arnborg, and A. Proskurowski. </author> <title> Linear time algorithms for NP-hard problems restricted to partial k-trees. </title> <note> Discrete and applied Mathematics 23 (1989) 11-24. </note>
Reference-contexts: We have recently shown how a collection of probabilistic and combinatorial optimization tasks can be formulated within this framework [15]. Such algorithms were also presented for various graph-based tasks by <ref> [1, 3] </ref>. All the algorithms possess similar properties of compiling a theory into a backtrack-free one (or greedy) and their complexity is dependent on the same graph properties. Specifically they all have a complexity bound which is exponential in the induced-width of some graph.
Reference: 4. <author> C. Beeri, R. Fagin, D. Maier, and M. Yannakakis. </author> <title> On the desirability of acyclic database schemes. </title> <journal> J. ACM, </journal> <volume> 30 </volume> <pages> 479-513, </pages> <year> 1983. </year>
Reference-contexts: In particular binary trees can be solved by arc-consistency [31]. Dechter and Pearl [11] provide an adaptive scheme where the level of local consistency is adjusted on a node-by-node basis. Dechter and Pearl [12] generalize the results on trees to hyper-trees which are called acyclic in the database community <ref> [4] </ref>. For work on identifying properties of the constraints, Montanari [33] shows that path consistency is sufficient to guarantee that a binary network is globally consistent if the relations are monotone.
Reference: 5. <author> U. Bertele and F. Brioschi. </author> <title> Nonserial Dynamic Programming, </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1972. </year>
Reference-contexts: For the latter two classes this is a special case of the zero-diversity class. 6 Discussion The algorithms we present in this paper belong to the class of variable elimination algorithms, formulated recently within the bucket elimination framework [15], which generalize non-serial dynamic programming <ref> [5] </ref>. We have recently shown how a collection of probabilistic and combinatorial optimization tasks can be formulated within this framework [15]. Such algorithms were also presented for various graph-based tasks by [1, 3].
Reference: 6. <author> M. C. Cooper. </author> <title> An optimal k-consistency algorithm. </title> <journal> Artif. Intell., </journal> <volume> 41 </volume> <pages> 89-95, </pages> <year> 1989. </year>
Reference-contexts: This insight has led to the definition of conditions that characterize the level of local consistency of a network [29, 33] and to the development of algorithms for enforcing local consistency conditions by removing local inconsistencies (e.g., <ref> [33, 29, 19, 12, 6] </ref>). In this paper, we present a new definition of local consistency called relational consistency 3 .
Reference: 7. <author> M. Davis and H. Putnam. </author> <title> A computing procedure for quantification theory. </title> <journal> J. ACM, </journal> <volume> 7 </volume> <pages> 201-215, </pages> <year> 1960. </year> <month> 24 </month>
Reference-contexts: Replacing extended 2-composition by resolution and the instantiation step by unit resolution in DRC 2 , results in algorithm Directional Resolution (denoted DR) which is the core of the well known Davis Putnam algorithm for satisfiability <ref> [7, 14] </ref>. Applying the same exchange within DRC (i;2) yields algorithm bounded directional resolution (BDR i ) which is a polynomial approximation of DR [14]. As is well known and as also follows from our theory, algorithm directional resolution globally solves any CNF theory.
Reference: 8. <author> R. Dechter. </author> <title> Enhancement schemes for constraint processing incorporating, back--jumping, learning and cutset decomposition. </title> <journal> Artif. Intell., </journal> <volume> 41 </volume> <pages> 273-312, </pages> <year> 1990. </year>
Reference-contexts: This is equivalent to applying extended 2-composition between each relation and the singleton relation. This special case-handling for instantiation exploits the computational effect of conditioning as described in <ref> [8, 15] </ref>. In step 7 of the algorithm, if the size of S j t=1 S t fx p g is smaller than i, we apply the operation to A = S j t=1 S t fx p g.
Reference: 9. <author> R. Dechter. </author> <title> From local to global consistency. </title> <journal> Artif. Intell., </journal> <volume> 55 </volume> <pages> 87-107, </pages> <year> 1992. </year>
Reference-contexts: Node, arc, and path consistency correspond to one-, two-, and three-consistency, respectively. A strongly n-consistent network is called globally consistent. Globally consistent networks have the property that any consistent instantiation of a subset of the variables can be extended to a consistent instantiation of all the variables without backtracking <ref> [9] </ref>. It is frequently enough to have a globally consistent network along a single ordering of the variables as long as this ordering is known in advance. 4 Definition 8 (globally solved). <p> For work on identifying properties of the constraints, Montanari [33] shows that path consistency is sufficient to guarantee that a binary network is globally consistent if the relations are monotone. Dechter <ref> [9] </ref> identifies a relationship between the size of the domains of the variables, the arity of the constraints, and the level of local consistency sufficient to ensure the network is globally consistent. <p> In this section we apply the definition of relational consistency to relationships involving properties such as the size of the domains, acyclicity and causality. 5.1 Domain size and global consistency In <ref> [9] </ref>, we have shown that: Theorem 30. [9] If R is a k-valued binary constraint network that is k + 1 consistent then it is globally consistent. If R is a k-valued r-ary constraint network that is k (r 1) + 1 consistent then it is globally consistent. <p> In this section we apply the definition of relational consistency to relationships involving properties such as the size of the domains, acyclicity and causality. 5.1 Domain size and global consistency In <ref> [9] </ref>, we have shown that: Theorem 30. [9] If R is a k-valued binary constraint network that is k + 1 consistent then it is globally consistent. If R is a k-valued r-ary constraint network that is k (r 1) + 1 consistent then it is globally consistent.
Reference: 10. <author> R. Dechter, I. Meiri, and J. Pearl. </author> <title> Temporal constraint networks. </title> <journal> Artif. Intell., </journal> <volume> 49 </volume> <pages> 61-95, </pages> <year> 1991. </year>
Reference-contexts: One case is the class of simple temporal constraints. Those are unary and binary constraints of the form X Y a. Algorithm DLE reduces, in this case, to the shortest path algorithm presented in <ref> [10] </ref>. The algorithm is polynomial since the number of inequalities produced is bounded (in this simple case at most two inequalities are needed between any pair of variables) and since the class is closed under linear elimination. <p> Proof. Over the Integers and the Rationals, global consistency follows from the global consistency of DRC 2 . In this case DLE is complete since simple temporal inequalities over the integers are closed under extended 2-composition and intersection. the proof is given in <ref> [10] </ref>. Case of zero-diversity theories: Propositional CNFs as well as linear inequalities share an interesting syntactic property: It is easy to recognize whether applying extended 2-composition relative to variable x i results in a universal constraint.
Reference: 11. <author> R. Dechter and J. Pearl. </author> <title> Network-based heuristics for constraint satisfaction problems. </title> <journal> Artif. Intell., </journal> <volume> 34 </volume> <pages> 1-38, </pages> <year> 1988. </year>
Reference-contexts: Like similar algorithms for enforcing directional consistency, the worst-case complexity of Directional-Relational-Consistency can be bounded as a function of the topological structure of the problem via parameters like the induced width of the graph <ref> [11] </ref>, also known as tree-width [1, 2]. Definition 17 (width, tree-width). A constraint network R can be associated with a constraint graph, where each node is a variable and two variables that appear in one constraint are connected. A general graph can be embedded in a chordal graph 5 . <p> Processing bucket 10 adds the empty relation. Since the empty relation was derived, the algorithm stops and reports that the network is inconsistent. 12 Finally, we propose algorithm Adaptive-Relational-Consistency (ARC) which is the relational counter-part of algorithm adaptive-consistency <ref> [11] </ref>. Like algorithm DRC m , it processes the buckets in order from last to first. <p> For work on identifying topological properties, Freuder [20] identifies a relationship between the width of a constraint graph and the level of local consistency needed to ensure a solution can be found without backtracking. In particular binary trees can be solved by arc-consistency [31]. Dechter and Pearl <ref> [11] </ref> provide an adaptive scheme where the level of local consistency is adjusted on a node-by-node basis. Dechter and Pearl [12] generalize the results on trees to hyper-trees which are called acyclic in the database community [4].
Reference: 12. <author> R. Dechter and J. Pearl. </author> <title> Tree clustering for constraint networks. </title> <journal> Artif. Intell., </journal> <volume> 38 </volume> <pages> 353-366, </pages> <year> 1989. </year>
Reference-contexts: This insight has led to the definition of conditions that characterize the level of local consistency of a network [29, 33] and to the development of algorithms for enforcing local consistency conditions by removing local inconsistencies (e.g., <ref> [33, 29, 19, 12, 6] </ref>). In this paper, we present a new definition of local consistency called relational consistency 3 . <p> The maximal cliques in the newly generated chordal graph form a clique-tree and may serve as the subproblems in a procedure called tree-clustering <ref> [12] </ref>. The size of the smallest induced width over all the graph's clique-tree embeddings is the induced width, w fl of the graph. <p> It is known that finding the induced width of a graph is NP-complete [2], nevertheless every ordering of the variables o, yields a simple to compute upper bound denoted w fl (o) (see <ref> [12] </ref>). The complexity of DRC m along o can be bounded as a function of w fl (o) of its constraint graph. Specifically [12], Theorem 18. <p> induced width of a graph is NP-complete [2], nevertheless every ordering of the variables o, yields a simple to compute upper bound denoted w fl (o) (see <ref> [12] </ref>). The complexity of DRC m along o can be bounded as a function of w fl (o) of its constraint graph. Specifically [12], Theorem 18. The time complexity and size of the network generated by DRC m along ordering o is O (nm (2 m k 3 ) (w fl (o)+1) ). In particular, the time complexity of DRC 2 is O ((4k 3 ) (w fl (o)+1) ). Proof. <p> In particular binary trees can be solved by arc-consistency [31]. Dechter and Pearl [11] provide an adaptive scheme where the level of local consistency is adjusted on a node-by-node basis. Dechter and Pearl <ref> [12] </ref> generalize the results on trees to hyper-trees which are called acyclic in the database community [4]. For work on identifying properties of the constraints, Montanari [33] shows that path consistency is sufficient to guarantee that a binary network is globally consistent if the relations are monotone. <p> It is well known that acyclic networks are tractable <ref> [32, 12] </ref>. Definition 33 (acyclic networks). A network of constraints is acyclic if it has a chordal constraint graph and if each maximal clique is associated with a single constraint. It is easy to see that: Lemma 34.
Reference: 13. <author> R. Dechter and J. Pearl. </author> <title> Directed constraint networks: A relational framework for causal modeling. </title> <booktitle> In Proc. of the 12th Int'l Joint Conf. on AI, </booktitle> <pages> pages 1164-1170, </pages> <year> 1991. </year>
Reference-contexts: These properties were generalized recently to implicational constraints [26, 23] and to row-convexity [38]. Finally, for work that falls into both classes, Dechter and Pearl <ref> [13] </ref> present effective procedures for determining whether a constraint network can be formulated as a causal theory and thus a solution can be found without backtracking. Whether a constraint network can be so formulated depends on the topology of the underlying constraint graph and the type of the constraints. <p> If a network is acyclic then there exists an ordering of the variables for which each bucket has a single relation. Causal networks include acyclic networks. They were defined in order to capture the ease of some tasks in physical systems, such as projection. Definition 35 (causal networks <ref> [13] </ref>). A constraint network is causal relative to an ordering o = x 1 ; :::; x n iff it is globally solved (i.e., backtrack-free). Definition 36 (causal relations [13]). A constraint is called causal if its projection on any subset of variables generates a universal relation. Lemma 37. [13] A <p> Definition 35 (causal networks <ref> [13] </ref>). A constraint network is causal relative to an ordering o = x 1 ; :::; x n iff it is globally solved (i.e., backtrack-free). Definition 36 (causal relations [13]). A constraint is called causal if its projection on any subset of variables generates a universal relation. Lemma 37. [13] A single-bucket network relative to ordering o whose constraints are causal, is causal relative to o. Finally, it is easy to see that: Theorem 38. <p> networks <ref> [13] </ref>). A constraint network is causal relative to an ordering o = x 1 ; :::; x n iff it is globally solved (i.e., backtrack-free). Definition 36 (causal relations [13]). A constraint is called causal if its projection on any subset of variables generates a universal relation. Lemma 37. [13] A single-bucket network relative to ordering o whose constraints are causal, is causal relative to o. Finally, it is easy to see that: Theorem 38. Single-bucket networks that are closed under DRC 1 are tractable. 22 Proof.
Reference: 14. <author> R. Dechter and I. Rish. </author> <title> Directional resolution: The Davis-Putnam procedure, revisited. </title> <booktitle> In Proc. of the 4th Int'l Conf. on Principles of KR&R, </booktitle> <pages> 134-145, </pages> <year> 1994. </year>
Reference-contexts: Replacing extended 2-composition by resolution and the instantiation step by unit resolution in DRC 2 , results in algorithm Directional Resolution (denoted DR) which is the core of the well known Davis Putnam algorithm for satisfiability <ref> [7, 14] </ref>. Applying the same exchange within DRC (i;2) yields algorithm bounded directional resolution (BDR i ) which is a polynomial approximation of DR [14]. As is well known and as also follows from our theory, algorithm directional resolution globally solves any CNF theory. <p> Applying the same exchange within DRC (i;2) yields algorithm bounded directional resolution (BDR i ) which is a polynomial approximation of DR <ref> [14] </ref>. As is well known and as also follows from our theory, algorithm directional resolution globally solves any CNF theory. Directional-Resolution ('; o) Input: A CNF theory ', an ordering o = Q 1 ; . . . ; Q n of its variables. <p> This leads to a simple-to-identify tractable class for both these languages. If there exists an ordering of the variables, such that in each of its bucket i , x i appears with the same sign, then the theory is already globally solved relative to that ordering. We called in <ref> [14] </ref> such theories as "zero diversity" and we showed that they can be recognized in linear time. 5 From Local to Global Consistency Much work has been done on identifying relationships between properties of constraint networks and the level of local consistency sufficient to ensure global consistency. <p> Example 5. From Theorem 32, bi-valued networks can be globally solved by DRC 2 . In particular, propositional CNFs can be globally solved by DRC 2 . As we have seen, in this case, the operator of extended 2-composition takes the form of pair-wise resolution yielding algorithm directional resolution <ref> [14] </ref>. 5.2 Acyclicity, causality and global consistency Relational consistency and the DRC m algorithms can also capture the tractable classes of acyclic and causal networks. It is well known that acyclic networks are tractable [32, 12]. Definition 33 (acyclic networks).
Reference: 15. <author> R. Dechter. </author> <title> Bucket elimination: a unifying framework for probabilistic inference. </title> <booktitle> In Proceedings of Uncertainty in Artificial Intelligence (UAI-96), </booktitle> <year> 1996. </year>
Reference-contexts: This is equivalent to applying extended 2-composition between each relation and the singleton relation. This special case-handling for instantiation exploits the computational effect of conditioning as described in <ref> [8, 15] </ref>. In step 7 of the algorithm, if the size of S j t=1 S t fx p g is smaller than i, we apply the operation to A = S j t=1 S t fx p g. <p> For the latter two classes this is a special case of the zero-diversity class. 6 Discussion The algorithms we present in this paper belong to the class of variable elimination algorithms, formulated recently within the bucket elimination framework <ref> [15] </ref>, which generalize non-serial dynamic programming [5]. We have recently shown how a collection of probabilistic and combinatorial optimization tasks can be formulated within this framework [15]. Such algorithms were also presented for various graph-based tasks by [1, 3]. <p> 6 Discussion The algorithms we present in this paper belong to the class of variable elimination algorithms, formulated recently within the bucket elimination framework <ref> [15] </ref>, which generalize non-serial dynamic programming [5]. We have recently shown how a collection of probabilistic and combinatorial optimization tasks can be formulated within this framework [15]. Such algorithms were also presented for various graph-based tasks by [1, 3]. All the algorithms possess similar properties of compiling a theory into a backtrack-free one (or greedy) and their complexity is dependent on the same graph properties. <p> The algorithms are complete when i w fl (o). All the algorithms we present belong to the family of variable elimination algorithms that are widely applicable to deterministic reasoning tasks, to optimization problems and to probabilistic inference <ref> [16, 15] </ref>. Acknowledgement. We would like to thank Simon Kasif for mentioning Fourier's elimination algorithm to us and to Irina Rish for commenting on the latest version of this manuscript.
Reference: 16. <author> R. Dechter. </author> <title> Topological properties of time-space tradeoff. </title> <booktitle> In Proceedings of Uncertainty in Artificial Intelligence (UAI-96), </booktitle> <year> 1996. </year>
Reference-contexts: We have recently demonstrated how a method of conditioning can be incorporated into the bucket-elimination scheme to allow trading space for time. The special case-handling of singleton values that we had introduced (i.e., instantiation) permits this extension <ref> [16] </ref> and will lead to similar time-space tradeoffs. Since the algorithms may be quite time demanding, unless the problem is very sparse, practical considerations call for the use of approximations. <p> The algorithms are complete when i w fl (o). All the algorithms we present belong to the family of variable elimination algorithms that are widely applicable to deterministic reasoning tasks, to optimization problems and to probabilistic inference <ref> [16, 15] </ref>. Acknowledgement. We would like to thank Simon Kasif for mentioning Fourier's elimination algorithm to us and to Irina Rish for commenting on the latest version of this manuscript.
Reference: 17. <author> D. Q. Goldin and P. C. Kanellakis, </author> <title> Constraint query algebras. In Constraints 1,1-41,1996. </title>
Reference-contexts: A more restricted case of binary monotone inequalities of the form ax i bx j c, where a; b; c positive integers, was shown to be weakly NP-complete since there exists a pseudo-polynomial algorithm [18]. A polynomial algorithm that globally solves the problem over the rationals is given in <ref> [17] </ref>. For bounded integer domains the general binary linear problem can be expressed in a relational form and since DRC 2 is polynomial over binary constraints, the class can be solved in polynomial time relative to the maximal range of the integer domains. In summary, Theorem 26.
Reference: 18. <author> D. S. Hochbaum and J. Naor, </author> <title> Simple and Fast algorithms for linear integer programs with two variables per inequality. </title> <journal> SIAM J. of Computing 23:6:1179-1192, </journal> <year> 1994. </year>
Reference-contexts: However it was shown to have a polynomial implementation over the Rationals that uses a special data structure that bounds the number of inequalities over any pair of variables and leads to a polynomial algorithm <ref> [18] </ref>. Over the integers the binary linear problem is NP-complete [27]. A more restricted case of binary monotone inequalities of the form ax i bx j c, where a; b; c positive integers, was shown to be weakly NP-complete since there exists a pseudo-polynomial algorithm [18]. <p> leads to a polynomial algorithm <ref> [18] </ref>. Over the integers the binary linear problem is NP-complete [27]. A more restricted case of binary monotone inequalities of the form ax i bx j c, where a; b; c positive integers, was shown to be weakly NP-complete since there exists a pseudo-polynomial algorithm [18]. A polynomial algorithm that globally solves the problem over the rationals is given in [17]. <p> The linear elimination operator over the integers, coincides with extended 2-composition in this case, and therefore, DLE is complete for simple temporal constraints over the integers as well. Note, that although this is a subclass of monotone inequalities, tractability of DLE over this class does not follow from <ref> [18] </ref> whereby a special implementation was required. Theorem 27. Algorithm DLE is polynomial over the class of unary and binary inequalities of the form X Y a, X b. The algorithm globally solves such inequalities, over the Integers (if a and b are integers), the Rationals and the Reals. Proof.
Reference: 19. <author> E. C. Freuder. </author> <title> Synthesizing constraint expressions. </title> <journal> Comm. ACM, </journal> <volume> 21 </volume> <pages> 958-966, </pages> <year> 1978. </year>
Reference-contexts: This insight has led to the definition of conditions that characterize the level of local consistency of a network [29, 33] and to the development of algorithms for enforcing local consistency conditions by removing local inconsistencies (e.g., <ref> [33, 29, 19, 12, 6] </ref>). In this paper, we present a new definition of local consistency called relational consistency 3 . <p> We then present new definitions of local consistency that are relation-based and present algorithms for enforcing these local consistencies. 3.1 Variable-based consistency Mackworth [29] defines three properties of networks that characterize local consistency of networks: node, arc, and path consistency. Freuder <ref> [19] </ref> generalizes this to k-consistency. Definition 7 (k-consistency; Freuder [19, 20]). <p> Freuder [19] generalizes this to k-consistency. Definition 7 (k-consistency; Freuder <ref> [19, 20] </ref>).
Reference: 20. <author> E. C. Freuder. </author> <title> A sufficient condition for backtrack-free search. </title> <journal> J. ACM, </journal> <volume> 29 </volume> <pages> 24-32, </pages> <year> 1982. </year>
Reference-contexts: Freuder [19] generalizes this to k-consistency. Definition 7 (k-consistency; Freuder <ref> [19, 20] </ref>). <p> This work falls into two classes: identifying topological properties of the underlying graph of the network and identifying properties of the constraints. For work on identifying topological properties, Freuder <ref> [20] </ref> identifies a relationship between the width of a constraint graph and the level of local consistency needed to ensure a solution can be found without backtracking. In particular binary trees can be solved by arc-consistency [31].
Reference: 21. <author> M. L. Ginsberg, M. Frank, M. P. Halpin, and M. C. Torrance. </author> <title> Search lessons learned from crossword puzzles. </title> <booktitle> In Proc. of the 8th Nat'l Conf. on AI, </booktitle> <pages> pages 210-215, </pages> <year> 1990. </year>
Reference-contexts: Simplification of a bucket takes O (e 2 t 2 ) yielding the result. 2 Example 3. Crossword puzzles have been used experimentally in evaluating backtracking algorithms for solving constraint networks <ref> [21] </ref>. We use an example puzzle to illustrate algorithm DRC 2 (see Figure 2).
Reference: 22. <author> P. Jegou. </author> <title> On the consistency of general constraint satisfaction problems. </title> <booktitle> In Proc. of the 11th National Conf. on AI, </booktitle> <pages> pages 114-119, </pages> <year> 1993. </year>
Reference-contexts: By definition, relational k-consistency implies relational (i; k)-consistency for i k 1, which, for binary constraints, implies strong variable-based k-consistency. The virtue in the relational definition (relative, for instance, to the one based on the dual graph <ref> [22] </ref>), is that it is easy to work with; it can be incorporated naturally into algorithms for enforcing desired levels of relational consistency. Below we present algorithm Relational-Consistency or RC (i;m) , a brute-force algorithm for enforcing relational (i; m)-consistency on a network R.
Reference: 23. <author> M.C. Cooper, D,A, Cohen and P.G. Jeavons. </author> <booktitle> Characterizing tractable constraints Artificial Intelligence 65, </booktitle> <pages> 347-361, </pages> <year> 1994. </year>
Reference-contexts: Van Hentenryck, Deville, and Teng [39] show that arc consistency is sufficient to test whether a network is satisfiable if the relations are from a restricted class of functional and monotone constraints. These properties were generalized recently to implicational constraints <ref> [26, 23] </ref> and to row-convexity [38]. Finally, for work that falls into both classes, Dechter and Pearl [13] present effective procedures for determining whether a constraint network can be formulated as a causal theory and thus a solution can be found without backtracking.
Reference: 24. <author> P.C. Kanellakis, G.M. Kuper and P. Z. Revesz. </author> <title> Constraint Query languages. </title> <booktitle> Proc. 9th ACM PODS, </booktitle> <pages> 299-313, </pages> <year> 1990. </year>
Reference-contexts: However, the relational calculus and algebra can be developed without the finiteness assumptions for relations. We will use the term unrestricted relation, for finite or infinite sets of points in a k-dimensional space <ref> [24] </ref>. In particular, it was shown that relational calculus is identical to relational algebra for countable domains and that relational algebra for infinite relations is exactly the same as for finite relations [25] 6 . Therefore, the relational framework we have presented applies as is to infinite relations.
Reference: 25. <author> P. Kanellakis, </author> <title> Elements of Relational Database Theory, </title> <booktitle> Handbook of Theoretical Computer Science, Chapter 17, </booktitle> <volume> Vol, </volume> <editor> B, J. van Leeuwen editor, </editor> <publisher> North-Holland, </publisher> <year> 1990. </year>
Reference-contexts: In particular, it was shown that relational calculus is identical to relational algebra for countable domains and that relational algebra for infinite relations is exactly the same as for finite relations <ref> [25] </ref> 6 . Therefore, the relational framework we have presented applies as is to infinite relations.
Reference: 26. <author> L. M. Kirousis. </author> <title> Fast parallel constraint satisfaction. </title> <journal> Artif. Intell., </journal> <volume> 64 </volume> <pages> 147-160, </pages> <year> 1993. </year>
Reference-contexts: Van Hentenryck, Deville, and Teng [39] show that arc consistency is sufficient to test whether a network is satisfiable if the relations are from a restricted class of functional and monotone constraints. These properties were generalized recently to implicational constraints <ref> [26, 23] </ref> and to row-convexity [38]. Finally, for work that falls into both classes, Dechter and Pearl [13] present effective procedures for determining whether a constraint network can be formulated as a causal theory and thus a solution can be found without backtracking.
Reference: 27. <author> J. C. Lagarias, </author> <title> "The computational complexity of simultaneous Diophantine approximation problems" SIAM Journal on Computing, </title> <booktitle> Vol 14, </booktitle> <volume> No. 1 (1985), </volume> <pages> pp. 196-209. </pages>
Reference-contexts: However it was shown to have a polynomial implementation over the Rationals that uses a special data structure that bounds the number of inequalities over any pair of variables and leads to a polynomial algorithm [18]. Over the integers the binary linear problem is NP-complete <ref> [27] </ref>. A more restricted case of binary monotone inequalities of the form ax i bx j c, where a; b; c positive integers, was shown to be weakly NP-complete since there exists a pseudo-polynomial algorithm [18].
Reference: 28. <author> J-L Lassez and M. Mahler, </author> <title> "On Fourier's algorithm for linear constraints" Journal of Automated Reasoning, </title> <booktitle> Vol 9, </booktitle> <year> 1992. </year>
Reference-contexts: Incorporating linear elimination into DRC 2 (when the constraints are presented as linear inequalities) results in algorithm Directional Linear Elimination (abbreviated DLE) which is the well known Fourier elimination algorithm (see <ref> [28] </ref>). Indeed, as dictated by our theory and as is already known the algorithm decides the solvability of any set of linear inequalities over the Rationals.
Reference: 29. <author> A. K. Mackworth. </author> <title> Consistency in networks of relations. </title> <journal> Artif. Intell., </journal> <volume> 8 </volume> <pages> 99-118, </pages> <year> 1977. </year>
Reference-contexts: If we are using a backtracking search to find a solution, such an inconsistency can lead to a dead end in the search. This insight has led to the definition of conditions that characterize the level of local consistency of a network <ref> [29, 33] </ref> and to the development of algorithms for enforcing local consistency conditions by removing local inconsistencies (e.g., [33, 29, 19, 12, 6]). In this paper, we present a new definition of local consistency called relational consistency 3 . <p> This insight has led to the definition of conditions that characterize the level of local consistency of a network [29, 33] and to the development of algorithms for enforcing local consistency conditions by removing local inconsistencies (e.g., <ref> [33, 29, 19, 12, 6] </ref>). In this paper, we present a new definition of local consistency called relational consistency 3 . <p> In this section we first review previous definitions of local consistency, which we characterize as variable-based. We then present new definitions of local consistency that are relation-based and present algorithms for enforcing these local consistencies. 3.1 Variable-based consistency Mackworth <ref> [29] </ref> defines three properties of networks that characterize local consistency of networks: node, arc, and path consistency. Freuder [19] generalizes this to k-consistency. Definition 7 (k-consistency; Freuder [19, 20]).
Reference: 30. <author> A. K. Mackworth. </author> <title> On reading sketch maps. </title> <booktitle> International joint conference on Artificial Intelligence(IJCAI-77), </booktitle> <address> Cambridge, Mass. </address> <year> 1977, </year> <pages> pp. 587-606. 25 </pages>
Reference-contexts: A network is strong relational (i; m)-consistent iff it is relational (j; m)-consistent for every j i. Strong relational (n; m)-consistency is identical to relational m-consistency. The relational based definition of arc-consistency given in <ref> [30] </ref> is identical to relational (1,1)-consistency. Definition 12 (directional relational consistency).
Reference: 31. <author> A. K. Mackworth and E. C. Freuder. </author> <title> The complexity of some polynomial network consistency algorithms for constraint satisfaction problems. </title> <journal> Artif. Intell., </journal> <volume> 25 </volume> <pages> 65-74, </pages> <year> 1985. </year>
Reference-contexts: Its complexity is O (exp (i m)) (see Theorem 16) which is clearly computationally expensive for large i and m though it can be improved in a manner parallel to the improvements of path-consistency algorithms <ref> [31] </ref>. As with variable-based local-consistency, we can improve the efficiency of enforcing relational consistency by enforcing it only along a certain direction. <p> For work on identifying topological properties, Freuder [20] identifies a relationship between the width of a constraint graph and the level of local consistency needed to ensure a solution can be found without backtracking. In particular binary trees can be solved by arc-consistency <ref> [31] </ref>. Dechter and Pearl [11] provide an adaptive scheme where the level of local consistency is adjusted on a node-by-node basis. Dechter and Pearl [12] generalize the results on trees to hyper-trees which are called acyclic in the database community [4].
Reference: 32. <author> D. Maier. </author> <title> The Theory of Relational Databases. </title> <publisher> Computer Science Press, </publisher> <year> 1983. </year>
Reference-contexts: It is well known that acyclic networks are tractable <ref> [32, 12] </ref>. Definition 33 (acyclic networks). A network of constraints is acyclic if it has a chordal constraint graph and if each maximal clique is associated with a single constraint. It is easy to see that: Lemma 34.
Reference: 33. <author> U. Montanari. </author> <title> Networks of constraints: Fundamental properties and applications to picture processing. </title> <journal> Inform. Sci., </journal> <volume> 7 </volume> <pages> 95-132, </pages> <year> 1974. </year>
Reference-contexts: If we are using a backtracking search to find a solution, such an inconsistency can lead to a dead end in the search. This insight has led to the definition of conditions that characterize the level of local consistency of a network <ref> [29, 33] </ref> and to the development of algorithms for enforcing local consistency conditions by removing local inconsistencies (e.g., [33, 29, 19, 12, 6]). In this paper, we present a new definition of local consistency called relational consistency 3 . <p> This insight has led to the definition of conditions that characterize the level of local consistency of a network [29, 33] and to the development of algorithms for enforcing local consistency conditions by removing local inconsistencies (e.g., <ref> [33, 29, 19, 12, 6] </ref>). In this paper, we present a new definition of local consistency called relational consistency 3 . <p> Dechter and Pearl [11] provide an adaptive scheme where the level of local consistency is adjusted on a node-by-node basis. Dechter and Pearl [12] generalize the results on trees to hyper-trees which are called acyclic in the database community [4]. For work on identifying properties of the constraints, Montanari <ref> [33] </ref> shows that path consistency is sufficient to guarantee that a binary network is globally consistent if the relations are monotone.
Reference: 34. <author> J. D. Ullman. </author> <booktitle> Principles of Database and Knowledge-Base Systems, </booktitle> <volume> Vol. 1. </volume> <publisher> Computer Science Press, </publisher> <year> 1988. </year>
Reference-contexts: A consistent instantiation is also called a solution. The order of the variables constrained by a relation is not important; that is, we follow the set-of-mappings formulation of relations (see <ref> [34] </ref>). The notion of a consistent instantiation of a subset of the variables can be defined in several 4 Note that all the definitions and algorithms are applicable to relations without the finiteness assumption; a point we make explicit in section 4.2 2 ways. <p> The set of all consistent instantiations of the variables in Y is denoted (Y ). One can view (Y ) as the set of all solutions of the subnetwork defined by Y . We now introduce the needed operations on constraints adopted from the relational calculus (see <ref> [34] </ref> for details). Definition 4 (operations on constraints). Let R be a relation on a set S of variables, let Y S be a subset of the variables, and let Y I be an instantiation of the variables in Y .
Reference: 35. <author> P. van Beek. </author> <title> On the minimality and decomposability of constraint networks. </title> <booktitle> In Proc. of the 10th National Conf. on AI, </booktitle> <pages> pages 447-452, </pages> <year> 1992. </year>
Reference-contexts: It is easy to see that pair-wise resolution is equivalent to extended 2-composition. Lemma 22. The resolution operation over two clauses (ff _Q) and (fi _:Q), results in a clause (ff_fi) satisfying: models (ff_fi) = EC Q 0 (models (ff); models (fi)). Proof. Clear. In <ref> [35] </ref> we have shown that row-convex relations that are closed under extended 2-composition can be globally solved by DRC 2 . <p> It is unclear, though, that there exists an integer extension to x r which is the reason for partial containment for the integers. 2 In <ref> [35] </ref> we have shown that linear inequality constraints over finite sets of integers are row-convex and therefore can be globally solved by DRC 2 using their relational form. The definition of row-convexity can be extended to infinite domains without any modification.
Reference: 36. <author> P. van Beek. </author> <title> On the inherent level of local consistency in constraint networks. </title> <booktitle> In Proc. of the 12th National Conf. on AI, </booktitle> <pages> pages 368-373, </pages> <year> 1994. </year>
Reference-contexts: These results were extended recently by van Beek and Dechter to the property of tightness and looseness of the constraints in the network <ref> [37, 36] </ref>. Van Hentenryck, Deville, and Teng [39] show that arc consistency is sufficient to test whether a network is satisfiable if the relations are from a restricted class of functional and monotone constraints. These properties were generalized recently to implicational constraints [26, 23] and to row-convexity [38].
Reference: 37. <author> P. van Beek and R. Dechter. </author> <title> Constraint tightness versus global consistency. </title> <booktitle> In Proc. of the 4th Int'l Conf. on Principles of KR&R, </booktitle> <pages> pages 572-582, </pages> <year> 1994. </year>
Reference-contexts: The virtue of the new definition of local consistency is that, firstly, it removes the need for referencing the arity of the constraints when discussing 3 A preliminary version of this definition appears in <ref> [37] </ref>. relationships between the properties of the constraints and local consistency. Secondly, it is operational, thus generalizing the concept of the composition operation defined for binary constraints, and can be incorporated naturally in algorithms for enforcing desired levels of relational consistency. <p> The new local consistency conditions were called relational arc- and path-consistency. In <ref> [37] </ref> we generalized relational arc- and path-consistency to relational m-consistency and used it to specify conditions under which tight binary constraints are globally consistent. In the definition of relational-consistency, the relations rather than the variables are the primitive entities. <p> These results were extended recently by van Beek and Dechter to the property of tightness and looseness of the constraints in the network <ref> [37, 36] </ref>. Van Hentenryck, Deville, and Teng [39] show that arc consistency is sufficient to test whether a network is satisfiable if the relations are from a restricted class of functional and monotone constraints. These properties were generalized recently to implicational constraints [26, 23] and to row-convexity [38]. <p> We have shown that, Theorem 28. [38]. A networks of relations that are row-convex and are relational 2-consistent are globally consistent. Consequently, a network of row-convex relations that are closed under extended 2-composition can be globally-solved by DRC 2 . Similarly, we have shown that: Theorem 29. <ref> [37] </ref> If a network of constraints is m-tight and m + 2-relational consistent, than it is globally consistent. Consequently, whenever a set of m-tight relations is closed under extended m+2-composition it can be solved by DRC m+2 . The notion of m-tightness is defined as follows.
Reference: 38. <author> P. van Beek and R. Dechter. </author> <title> On the minimality and global consistency of row-convex constraint networks. </title> <journal> Journal of the ACM, </journal> <volume> 42 </volume> <pages> 543-561, </pages> <year> 1995. </year>
Reference-contexts: An algorithm globally solves a problem if it generates a globally solved network. A globally solved representation is a useful representation of all solutions whenever such a representation is more compact than the set of all solutions. 3.2 Relation-based consistency In <ref> [38] </ref>, we extended the notions of arc and path consistency to non-binary relations, and used it to specify an alternative condition under which row-convex non-binary networks are globally consistent. The new local consistency conditions were called relational arc- and path-consistency. <p> Van Hentenryck, Deville, and Teng [39] show that arc consistency is sufficient to test whether a network is satisfiable if the relations are from a restricted class of functional and monotone constraints. These properties were generalized recently to implicational constraints [26, 23] and to row-convexity <ref> [38] </ref>. Finally, for work that falls into both classes, Dechter and Pearl [13] present effective procedures for determining whether a constraint network can be formulated as a causal theory and thus a solution can be found without backtracking. <p> Furthermore, it is sufficient for condition l (p) to hold only relative to the particular ordering on which the algorithm is applied. We have recently demonstrated the use of our definition for two properties: row-convexity and tightness. We have shown that, Theorem 28. <ref> [38] </ref>. A networks of relations that are row-convex and are relational 2-consistent are globally consistent. Consequently, a network of row-convex relations that are closed under extended 2-composition can be globally-solved by DRC 2 .
Reference: 39. <author> P. Van Hentenryck, Y. Deville, and C.-M. Teng. </author> <title> A generic arc consistency algorithm and its specializations. </title> <journal> Artif. Intell., </journal> <volume> 57 </volume> <pages> 291-321, </pages> <year> 1992. </year> <title> This article was processed using the L a T E X macro package with LLNCS style 26 </title>
Reference-contexts: These results were extended recently by van Beek and Dechter to the property of tightness and looseness of the constraints in the network [37, 36]. Van Hentenryck, Deville, and Teng <ref> [39] </ref> show that arc consistency is sufficient to test whether a network is satisfiable if the relations are from a restricted class of functional and monotone constraints. These properties were generalized recently to implicational constraints [26, 23] and to row-convexity [38].
References-found: 39

