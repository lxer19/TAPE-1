URL: ftp://ftp.cs.man.ac.uk/pub/IPG/bw94a.ps.Z
Refering-URL: http://www.cs.man.ac.uk/ipg/publications.html
Root-URL: http://www.cs.man.ac.uk
Title: Reflections on the relationship between BPR and Software Process Modelling  
Author: Brian Warboys 
Keyword: Software Process Modelling Business Process Re-engineering  
Address: Manchester M13 9PL  
Affiliation: Informatics Process Group (IPG) Department of Computer Science University of  
Abstract: Business Process Re-engineering (BPR) is much in vogue both as an approach to the rationalisation of Corporate Organisations and as an aid to the design of the IT system which supports the Organ-isation. The field of Software Process Modelling (SPM) started some 10 years ago with the objective of modelling and thence supporting the total set of software engineering activities necessary to develop and maintain software products. They both arose as a result of dissatisfaction with the current approaches to their respective domains. They share the word process but is there any other connection between them? This paper attempts to outline some possible synergies and pitfalls which might derive from a closer contact between the two disciplines. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Feiler, P and Humphrey, W. </author> <title> "Software Process Development and Enactment: Concepts and Definitions." </title> <booktitle> Procs ICSP 1993. </booktitle>
Reference-contexts: 1 Introduction 1.1 Some Definitions Feiler and Humphrey <ref> [1] </ref> define a Process as a A set of partially ordered steps intended to reach a goal. Another definition from the Workflow community is A process is characterised by a number of individuals acting to fulfil a set of (ideally) common goals.
Reference: 2. <author> J.N.Buxton, J.N and Randell, B. </author> <booktitle> "Software Engineering Techniques" Report on NATO Science Conference October 1969 </booktitle>
Reference-contexts: The origins of Software Process Modelling are somewhat different. The desire to control the Software Process is nearly as old as software itself. In 1968 and 1969 two NATO sponsored workshops <ref> [2] </ref> were held which arguably invented the term Software Engineering. The term was necessary as it was perceived that Software Systems had grown to such complexity that they needed an engineering method to guide their development. The last 25 years have led to all manner of methods being proposed.
Reference: 3. <author> Hammer, M. </author> <title> "Re-engineering Work: Don't Automate, </title> <note> Obliterate!" Harvard Business Review July 1990. </note>
Reference-contexts: maturity (or rather lack of it) of the two fields of BPR and SPM it seems appropriate to reflect on the connections between the two topics; if only because they share the word process. 2 On Business Process Re-engineering (BPR) The term re-engineering was arguably first applied by Mike Hammer <ref> [3] </ref> in the Harvard Business Review 1990, proclaiming "Re-engineering work: Don't automate, Obliterate!". Clearly an approach which seeks to minimise bureacracy rather than institutionalising it in computer programmes has some appeal. However I believe that the sentiment fails to deal with the essential evolutionary nature of ecosystems.
Reference: 4. <author> Warboys, </author> <title> B.C "The IPSE 2.5 Project: Process Modelling as the basis for a Support Environment", </title> <booktitle> Procs First International Conference on Software Development, Environments and Factories, </booktitle> <address> Berlin, </address> <year> 1989. </year>
Reference-contexts: To provide a persistent language in which the compiler run-time store man agement becomes the persistent database. My own preference is for the latter and that is what is implemented by the IPSE 2.5 system <ref> [4] </ref>, now marketed by ICL as ProcessWise Integrator. The reason being that this gives full run-time type checking plus a generic ability to re-bind process fragments through the compiler system.
Reference: 5. <author> Dowson, M and Fernstrom, C. </author> <title> "Towards Requirements for Enactment mechanisms", </title> <booktitle> Procs 3rd European workshop on Software Process Technology, </booktitle> <publisher> Springer-Verlag LNCS 772. </publisher>
Reference-contexts: The fact that it uses familiar social notions such as Process, Roles and Interactions should not lead us to suppose that the words have the same meaning in both contexts. In fact from the viewpoint of seperating the domains of (after Dowson <ref> [5] </ref>) process production (creation of the model), process enactment (the execution of a process model) process performance (the carrying out of the real-world process) the usage of the same terms is rather misleading.
References-found: 5

