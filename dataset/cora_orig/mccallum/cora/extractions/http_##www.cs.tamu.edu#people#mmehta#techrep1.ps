URL: http://www.cs.tamu.edu/people/mmehta/techrep1.ps
Refering-URL: http://www.cs.tamu.edu/people/mmehta/resume.html
Root-URL: http://www.cs.tamu.edu
Email: E-mail: fsaadb,mmehta,swest,vaidyag@cs.tamu.edu  
Title: TCP over Wireless Networks Using Multiple Acknowledgements (Preliminary Version)  Web: http://www.cs.tamu.edu/faculty/vaidya/mobile.html  
Author: Saad Biaz Miten Mehta Steve West Nitin H. Vaidya 
Date: January 30, 1997  
Address: College Station, TX 77843-3112, USA  
Affiliation: Department of Computer Science Texas A&M University  
Pubnum: Technical Report 97-001  
Abstract: TCP protocol has been designed and tuned to perform well on wired network where the packet loss is due mainly to congestion. On heterogeneous networks where some links can be wireless this assumption is no more valid. In this paper, we propose a protocol which makes the TCP protocol layer aware of high bit error rates on wireless links while it tries to minimize the traffic load on the wired network. This is done by avoiding unnecessary retransmissions from TCP. The idea is to acknowledge partially a packet which reaches a base station, if it experiences difficulty (errors or congestion) on the wireless link. The base station is responsible for retransmissions on the wireless link, while it delays timeout at the sender by sending a partial acknowledgement. fl Research reported is supported in part by Texas Advanced Technology Program grant 009741-052-C and National Science Foundation grant CDA-9529442. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Balakrishnan,H., V. N. Padmanabhan, Seshan, S., Katz, R., </author> <title> A Comparison of Mechanisms for Improving TCP Performance over Wireless Links, </title> <booktitle> ACM SIGCOMM'96, </booktitle> <address> CA, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: In this case, slow-start and congestion avoidance algorithms lower the connection throughput. So, there is a need to adapt TCP to heterogeneous networks which mix wired and wireless links. The proposed approach is based on previous work in <ref> [1, 3, 4, 5, 6] </ref>, and combines ideas proposed in these papers to obtain a 2 unified scheme. The reader is assumed to be familiar with [1, 3, 4, 5, 6]. <p> The proposed approach is based on previous work in <ref> [1, 3, 4, 5, 6] </ref>, and combines ideas proposed in these papers to obtain a 2 unified scheme. The reader is assumed to be familiar with [1, 3, 4, 5, 6]. The similarities and differences between proposed approach and the previous work are as follows: * Balakrishnan et al. [1] evaluate several TCP-based protocols. <p> The reader is assumed to be familiar with [1, 3, 4, 5, 6]. The similarities and differences between proposed approach and the previous work are as follows: * Balakrishnan et al. <ref> [1] </ref> evaluate several TCP-based protocols. Our approach uses the snoop protocol scheme in that some intermediate hosts on the path (e.g., base station) may buffer packets being sent to the receiver. <p> In presence of bad transmissions conditions, snoop cannot prevent this. End-to-end semantics are still retained because the sender will consider that a packet has been received only if it receives a complete acknowledgement Ack c from the receiver. Similar to the explicit loss notification (ELN) <ref> [1] </ref>, our protocol also (implicitly) sends loss notification (using the partial acknowledgement Ack p ). The difference is that the loss notification (actually an ack) is not sent by the receiver, but by an intermediate node (in practice, a base station). In [1], the author recognizes the difficulty to distinguish between <p> Similar to the explicit loss notification (ELN) <ref> [1] </ref>, our protocol also (implicitly) sends loss notification (using the partial acknowledgement Ack p ). The difference is that the loss notification (actually an ack) is not sent by the receiver, but by an intermediate node (in practice, a base station). In [1], the author recognizes the difficulty to distinguish between congestion and error losses. Our protocol uses a realistic way to achieve the ELN with a very good accuracy. Similar to the link-layer retransmission scheme in [1] our scheme also uses retransmissions, however, these retransmissions are unlikely to conflict with retransmissions from <p> In <ref> [1] </ref>, the author recognizes the difficulty to distinguish between congestion and error losses. Our protocol uses a realistic way to achieve the ELN with a very good accuracy. Similar to the link-layer retransmission scheme in [1] our scheme also uses retransmissions, however, these retransmissions are unlikely to conflict with retransmissions from the sender. It is expected that our protocol will behave like snoop protocol for low bit error rates. <p> If RTT has been updated using Ack p then no update with Ack c . Otherwise, RTT update must be done. 3.2 The base station 3.2.1 Data received The base stations follow the Snoop protocol <ref> [1] </ref> with some modifications. When data is received from the sender, the base station will take different steps depending on whether the packet is out-of-sequence or not. <p> The problem here is to distinguish between out of order delivery and 6 retransmitted packets. In <ref> [1] </ref>, Balakrishnan identifies an out-of-order delivered packet as a packet whose sequence number is not more than one or two packets away from the last packet seen so far. The retransmitted packet must be distinguished for the processing of duplicate acknowledgements received from the mobile host. <p> We will investigate each approach. 3.2.3 New acknowledgement received Since the protocol must hold even if the TCP-sender does not recognize Ack p , acknowledge-ments from the receiver must be processed (filtered) at the base station. These acknowledge-ments will be processed exactly as in Snoop <ref> [1] </ref>. We recall here how Snoop processes acknowl-edgements. The idea is to forward what is needed by the TCP protocol and to discard what can trigger unnecessary retransmissions from the sender. <p> RT T B is the time which elapses from the time the base station receives a packet to the reception of its acknowledgement from the receiver. In fact, <ref> [1] </ref> updates RT T B 7 only once per window and respects Karp's condition which states that RT T B must not be updated with any acknowledgement for a retransmitted packet.
Reference: [2] <author> Balakrishnan,H., Seshan, S., Amir, E., Katz, R., </author> <title> Improving TCP/IP Performance over Wireless Networks, </title> <booktitle> 1st ACM Int'l Conf. on Mobile Computing (Mobicom), </booktitle> <month> November </month> <year> 1995. </year>
Reference: [3] <author> Bikram S.Bakshi, P. Krishna, N.H. Vaidya, D.K. Pradhan, </author> <title> Improving Performance of TCP over Wireless Networks, </title> <institution> Texas A&M University, </institution> <type> Technical Report TR-96-014, </type> <month> May </month> <year> 1996. </year>
Reference-contexts: In this case, slow-start and congestion avoidance algorithms lower the connection throughput. So, there is a need to adapt TCP to heterogeneous networks which mix wired and wireless links. The proposed approach is based on previous work in <ref> [1, 3, 4, 5, 6] </ref>, and combines ideas proposed in these papers to obtain a 2 unified scheme. The reader is assumed to be familiar with [1, 3, 4, 5, 6]. <p> The proposed approach is based on previous work in <ref> [1, 3, 4, 5, 6] </ref>, and combines ideas proposed in these papers to obtain a 2 unified scheme. The reader is assumed to be familiar with [1, 3, 4, 5, 6]. The similarities and differences between proposed approach and the previous work are as follows: * Balakrishnan et al. [1] evaluate several TCP-based protocols. <p> In our scheme, this may be done while respecting the TCP end-to-end semantics. Yavatkar et al. [6] proposes a similar scheme based on splitting the connection. * Bakshi et al. <ref> [3, 4] </ref> present a protocol that sends, to the sender, an explicit bad state notification (EBSN) when a wireless link experiences errors. Our scheme also (implicitly) provides such a notification, using acknowledgement messages. <p> The channel bad 3 state can also be of a very short duration such that whenever EBSN reaches the sender, the channel is no more in bad state. While proposed scheme, when applied to case (a) is similar to <ref> [3] </ref>, proposed scheme also applies to (b) and other scenarios. The proposal here can be considered to be an improvement over [3] which does not use the snoop protocol. <p> While proposed scheme, when applied to case (a) is similar to <ref> [3] </ref>, proposed scheme also applies to (b) and other scenarios. The proposal here can be considered to be an improvement over [3] which does not use the snoop protocol. The motivation behind the proposed approach is to combine the explicit notification schemes (ELN or EBSN), end-to-end semantics, and link-level retransmission (snoop) into a TCP-like protocol that handles a larger spectrum of bit error rates.
Reference: [4] <author> Bikram S.Bakshi, P. Krishna, N.H. Vaidya, D.K. Pradhan, </author> <title> Performance of TCP over Wireless Networks, </title> <booktitle> to appear in the 17 th International Conference on Distributed Computing Systems (ICDCS), </booktitle> <address> Baltimore, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: In this case, slow-start and congestion avoidance algorithms lower the connection throughput. So, there is a need to adapt TCP to heterogeneous networks which mix wired and wireless links. The proposed approach is based on previous work in <ref> [1, 3, 4, 5, 6] </ref>, and combines ideas proposed in these papers to obtain a 2 unified scheme. The reader is assumed to be familiar with [1, 3, 4, 5, 6]. <p> The proposed approach is based on previous work in <ref> [1, 3, 4, 5, 6] </ref>, and combines ideas proposed in these papers to obtain a 2 unified scheme. The reader is assumed to be familiar with [1, 3, 4, 5, 6]. The similarities and differences between proposed approach and the previous work are as follows: * Balakrishnan et al. [1] evaluate several TCP-based protocols. <p> In our scheme, this may be done while respecting the TCP end-to-end semantics. Yavatkar et al. [6] proposes a similar scheme based on splitting the connection. * Bakshi et al. <ref> [3, 4] </ref> present a protocol that sends, to the sender, an explicit bad state notification (EBSN) when a wireless link experiences errors. Our scheme also (implicitly) provides such a notification, using acknowledgement messages.
Reference: [5] <author> A. Bakre, B.R. Badrinath, </author> <title> I-TCP : Indirect TCP for mobile hosts, </title> <type> Technical Report DCS-TR-314, </type> <institution> Rutgers University, </institution> <month> October </month> <year> 1994. </year> <month> 9 </month>
Reference-contexts: In this case, slow-start and congestion avoidance algorithms lower the connection throughput. So, there is a need to adapt TCP to heterogeneous networks which mix wired and wireless links. The proposed approach is based on previous work in <ref> [1, 3, 4, 5, 6] </ref>, and combines ideas proposed in these papers to obtain a 2 unified scheme. The reader is assumed to be familiar with [1, 3, 4, 5, 6]. <p> The proposed approach is based on previous work in <ref> [1, 3, 4, 5, 6] </ref>, and combines ideas proposed in these papers to obtain a 2 unified scheme. The reader is assumed to be familiar with [1, 3, 4, 5, 6]. The similarities and differences between proposed approach and the previous work are as follows: * Balakrishnan et al. [1] evaluate several TCP-based protocols. <p> However, our protocol will behave like snoop for a sender whose TCP is not modified. This sender will ignore the options field which we use to implement partial acknowledgements. * Badrinath et al. <ref> [5] </ref> : The I-TCP protocol [5] does not provide end-to-end semantics, while the proposed approach does. Proposed scheme is similar to I-TCP in that different links are treated somewhat differently, as elaborated later. <p> However, our protocol will behave like snoop for a sender whose TCP is not modified. This sender will ignore the options field which we use to implement partial acknowledgements. * Badrinath et al. <ref> [5] </ref> : The I-TCP protocol [5] does not provide end-to-end semantics, while the proposed approach does. Proposed scheme is similar to I-TCP in that different links are treated somewhat differently, as elaborated later. I-TCP has the advantage to tune (choose the packet size) every connection, (wired connection or wireless connection), to the errors characteristics.
Reference: [6] <author> R. Yavatkar, N. </author> <title> Bhagwat,Improving End-to-End Performance of TCP over Mobile Inter--networks, </title> <booktitle> Mobile 94 Workshop on Mobile Computing Systems and Applications, </booktitle> <month> Decem-ber </month> <year> 1994. </year>
Reference-contexts: In this case, slow-start and congestion avoidance algorithms lower the connection throughput. So, there is a need to adapt TCP to heterogeneous networks which mix wired and wireless links. The proposed approach is based on previous work in <ref> [1, 3, 4, 5, 6] </ref>, and combines ideas proposed in these papers to obtain a 2 unified scheme. The reader is assumed to be familiar with [1, 3, 4, 5, 6]. <p> The proposed approach is based on previous work in <ref> [1, 3, 4, 5, 6] </ref>, and combines ideas proposed in these papers to obtain a 2 unified scheme. The reader is assumed to be familiar with [1, 3, 4, 5, 6]. The similarities and differences between proposed approach and the previous work are as follows: * Balakrishnan et al. [1] evaluate several TCP-based protocols. <p> I-TCP has the advantage to tune (choose the packet size) every connection, (wired connection or wireless connection), to the errors characteristics. In our scheme, this may be done while respecting the TCP end-to-end semantics. Yavatkar et al. <ref> [6] </ref> proposes a similar scheme based on splitting the connection. * Bakshi et al. [3, 4] present a protocol that sends, to the sender, an explicit bad state notification (EBSN) when a wireless link experiences errors. Our scheme also (implicitly) provides such a notification, using acknowledgement messages.
Reference: [7] <author> V. Jacobson, </author> <title> Congestion Avoidance and Control, </title> <booktitle> ACM SIGCOMM'88, </booktitle> <pages> pp 314-329, </pages> <month> Aug. </month> <year> 1988. </year> <note> An update version is available via ftp://ftp.ee.lbl.gov/papers/congavoid.ps.Z. </note>
Reference-contexts: Several performance optimization to this protocol are possible, as described in Section 7. 2 Motivation and Related work TCP is a protocol which has been designed, improved and tuned to work efficiently on wired network where the packet loss is very small (o 1%) <ref> [7] </ref>. Whenever a packet is lost, it is reasonably assumed that congestion occurred on the connection path. Hence, TCP triggers slow-start and congestion avoidance algorithms when a timeout occurs for a packet. These algorithms proved their efficiency on a wired network. <p> Such variations will be investigated in our future work. 3.1 The sender 3.1.1 Data Sent The sender will strictly follow the regular TCP when sending any packet as defined by RFC 793 [8]with the addition of algorithms introduced by <ref> [7] </ref> : slow start, congestion avoidance, fast retransmit and fast recovery [9]. 4 3.1.2 Acknowledgement Ack p received Before describing the actions taken at the reception of Ack P , we define some variables.
Reference: [8] <author> J. Postel, </author> <title> Transmission Control Protocol, </title> <type> RFC 793, </type> <pages> 85 pages, </pages> <month> Sept </month> <year> 1981. </year>
Reference: [9] <author> W.R. Stevens, </author> <title> TCP/IP Illustrated, Volume 1, The Protocols, </title> <publisher> Addison Wesley, </publisher> <year> 1994. </year> <month> 10 </month>
Reference-contexts: Such variations will be investigated in our future work. 3.1 The sender 3.1.1 Data Sent The sender will strictly follow the regular TCP when sending any packet as defined by RFC 793 [8]with the addition of algorithms introduced by [7] : slow start, congestion avoidance, fast retransmit and fast recovery <ref> [9] </ref>. 4 3.1.2 Acknowledgement Ack p received Before describing the actions taken at the reception of Ack P , we define some variables.
References-found: 9

