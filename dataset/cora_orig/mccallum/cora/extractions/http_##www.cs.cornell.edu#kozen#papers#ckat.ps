URL: http://www.cs.cornell.edu/kozen/papers/ckat.ps
Refering-URL: http://www.cs.cornell.edu/kozen/papers/papers.html
Root-URL: 
Email: ernie@bellcore.com  kozen@cs.cornell.edu  fms@cs.cornell.edu  
Title: The Complexity of Kleene Algebra with Tests  
Author: Ernie Cohen Dexter Kozen Frederick Smith 
Date: July 19, 1996  
Abstract: Kleene algebras with tests provide a natural framework for equational specification and verification. Kleene algebras with tests and related systems have been used successfully in basic safety analysis, source-to-source program transformation, and concurrency control. The equational theory of Kleene algebras with tests has been shown to be decidable in at most exponential time by an efficient reduction to Propositional Dynamic Logic. In this paper we prove that the theory is PSPACE -complete.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. V. Aho, J. E. Hopcroft, and J. D. Ullman, </author> <title> The Design and Analysis of Computer Algorithms, </title> <publisher> Addison-Wesley, </publisher> <year> 1975. </year>
Reference-contexts: Kleene algebra has appeared in one form or another in relational algebra [19, 22], semantics and logics of programs [11, 20], automata and formal language theory [17, 18], and the design and analysis of algorithms <ref> [1, 9, 13] </ref>. Many authors have contributed over the years to the development of the algebraic theory; see [15] and references therein. Propositional Dynamic Logic (PDL) [7] is a logical system that blends Kleene algebra with modal logic.
Reference: [2] <author> E. Cohen, </author> <month> February </month> <year> 1994. </year> <type> Personal communication. </type> <note> [3] , Hypotheses in Kleene algebra. ftp://ftp.bellcore.com/pub/ernie/research/homepage.html, </note> <month> April </month> <year> 1994. </year> <title> [4] , Lazy caching. </title> <address> ftp://ftp.bellcore.com/pub/ernie/research/homepage.html, </address> <year> 1994. </year> <title> 21 [5] , Using Kleene algebra to reason about concurrency control. </title> <address> ftp://ftp.bellcore.com/pub/ernie/research/homepage.html, </address> <year> 1994. </year>
Reference-contexts: Kleene algebra with extra conditions of the form p = 0 reduces efficiently to Kleene algebra without extra conditions, therefore remains decidable [3]; but that fl -continuous Kleene algebra in the presence of extra commutativity conditions of the form pq = qp, even for primitive p and q, is undecidable <ref> [2] </ref>. In [15], it was shown how this undecidability proof can be used to establish that the universal Horn theory of fl -continuous Kleene algebras is not finitely axiomatizable.
Reference: [6] <author> J. H. Conway, </author> <title> Regular Algebra and Finite Machines, </title> <publisher> Chapman and Hall, </publisher> <year> 1971. </year>
Reference-contexts: This paper is concerned with the extent to which this system can be automated. Kleene algebra dates to a 1956 paper of Kleene [10] and was further developed in the 1971 monograph of Conway <ref> [6] </ref>. Kleene algebra has appeared in one form or another in relational algebra [19, 22], semantics and logics of programs [11, 20], automata and formal language theory [17, 18], and the design and analysis of algorithms [1, 9, 13].
Reference: [7] <author> M. J. Fischer and R. E. Ladner, </author> <title> Propositional dynamic logic of regular programs, </title> <institution> J. Comput. Syst. Sci., </institution> <month> 18 </month> <year> (1979), </year> <pages> pp. 194-211. </pages>
Reference-contexts: Many authors have contributed over the years to the development of the algebraic theory; see [15] and references therein. Propositional Dynamic Logic (PDL) <ref> [7] </ref> is a logical system that blends Kleene algebra with modal logic. Syntactically, PDL is a two-sorted logic consisting of programs and propositions defined by mutual induction. A basic operator in PDL is the test operator ?, by which a program '? can be formed from any proposition '. <p> It was conjectured in [15] that KAT is no more difficult to decide than KA. In this paper we verify that conjecture. We give a new decidability proof that establishes that KAT is in PSPACE , therefore PSPACE -complete. In contrast, PDL is complete for exponential time <ref> [7] </ref>, which indicates that some savings can be achieved by using KAT in applications where PDL would previously have been used.
Reference: [8] <author> J. E. Hopcroft and J. D. Ullman, </author> <title> Introduction to Automata Theory, Languages, and Computation, </title> <publisher> Addison-Wesley, </publisher> <year> 1979. </year>
Reference-contexts: The construction of P is by induction on the structure of p, and corresponds to the combinatorial construction of an automaton from a regular expression as found for example in <ref> [8] </ref>. The matrix P is the transition matrix of the automaton equivalent to the regular expression p over the input alphabet [ B [ B. The vectors u and v specify the start and final states of the automaton, respectively. <p> It uses at most polynomial space, since in each stage of the computation only the vectors w i and x i need be remembered. The algorithm can be made deterministic using Savitch's Theorem (see <ref> [8] </ref>). The problem is known to be PSPACE -hard [21]. We have thus shown Theorem 12 The equational theory of KAT is PSPACE -complete. Acknowledgements The support of the National Science Foundation under grant CCR-9317320 is gratefully acknowledged. The third author is supported on a National Science Foundation Graduate Fellowship.
Reference: [9] <author> K. Iwano and K. Steiglitz, </author> <title> A semiring on convex polygons and zero-sum cycle problems, </title> <journal> SIAM J. Comput., </journal> <volume> 19 (1990), </volume> <pages> pp. 883-901. </pages>
Reference-contexts: Kleene algebra has appeared in one form or another in relational algebra [19, 22], semantics and logics of programs [11, 20], automata and formal language theory [17, 18], and the design and analysis of algorithms <ref> [1, 9, 13] </ref>. Many authors have contributed over the years to the development of the algebraic theory; see [15] and references therein. Propositional Dynamic Logic (PDL) [7] is a logical system that blends Kleene algebra with modal logic.
Reference: [10] <author> S. C. Kleene, </author> <title> Representation of events in nerve nets and finite automata, in Automata Studies, </title> <editor> Shannon and McCarthy, eds., </editor> <publisher> Princeton University Press, </publisher> <year> 1956, </year> <pages> pp. 3-41. </pages>
Reference-contexts: This paper is concerned with the extent to which this system can be automated. Kleene algebra dates to a 1956 paper of Kleene <ref> [10] </ref> and was further developed in the 1971 monograph of Conway [6]. Kleene algebra has appeared in one form or another in relational algebra [19, 22], semantics and logics of programs [11, 20], automata and formal language theory [17, 18], and the design and analysis of algorithms [1, 9, 13].

Reference: [16] <author> D. Kozen and F. Smith, </author> <title> Kleene algebra with tests: completeness and de-cidability, </title> <type> Tech. Rep. </type> <institution> TR96-1582, Cornell University, </institution> <month> April </month> <year> 1996. </year>
Reference-contexts: In [15], it was shown how this undecidability proof can be used to establish that the universal Horn theory of fl -continuous Kleene algebras is not finitely axiomatizable. In <ref> [16] </ref> it was shown that the equational theories of Kleene algebras with tests and fl -continuous Kleene algebras with tests coincide, and that these theories are complete over certain language-theoretic and relational models. <p> The language-theoretic models involved regular sets of guarded strings over finite alphabets and B of actions and tests, respectively. These sets play the same role in Kleene algebra with tests that the regular sets play in Kleene 2 algebra. The completeness theorem of <ref> [16] </ref> is analogous to the completeness theorem of [14] in which the regular sets over were shown to form the free Kleene algebra on generators . In [16] the proof of correctness of the reduction of [3] from Kleene algebra with conditions p = 0 to Kleene algebra without conditions was <p> The completeness theorem of <ref> [16] </ref> is analogous to the completeness theorem of [14] in which the regular sets over were shown to form the free Kleene algebra on generators . In [16] the proof of correctness of the reduction of [3] from Kleene algebra with conditions p = 0 to Kleene algebra without conditions was simplified and extended to handle Kleene algebras with tests. <p> The complexity of KAT is therefore of considerable practical interest. It was shown in <ref> [16] </ref> that KAT is decidable in at most exponential time by an efficient reduction to PDL. Since KA is known to be PSPACE -complete [21], KAT is at least PSPACE -hard. It was conjectured in [15] that KAT is no more difficult to decide than KA. <p> In contrast, PDL is complete for exponential time [7], which indicates that some savings can be achieved by using KAT in applications where PDL would previously have been used. The algorithm makes use of the free language-theoretic model involving sets of guarded strings introduced in <ref> [16] </ref> and matrices over Kleene algebras with tests. 2 Kleene Algebra with Tests A Kleene algebra with tests [15] is a Kleene algebra with an embedded Boolean subalgebra. <p> We write KAT fl * ' if ' holds under all interpretations over fl -continuous Kleene algebras with tests. 3 A Language-Theoretic Model The following language-theoretic model G and standard interpretation G were introduced in <ref> [16] </ref>. We repeat the definitions here for completeness. Let and B = fb 1 ; : : : ; b k g be disjoint finite sets of symbols. <p> The following result of <ref> [16] </ref> is analogous to the corresponding result for Kleene algebra and R as proved in [14]. Theorem 4 ([16]) KAT j= p = q () G (p) = G (q) : 3.2 Relating G and R For regular expressions p 2 R ;B , the standard interpretation R applies, giving a <p> By Theorem 4, it suffices to decide whether G (p) = G (q). One possible approach, exploited in <ref> [16] </ref>, is to construct from p 2 T ;B a regular expression b p 2 R ;B such that G (p) = R ( b p) : (16) Then deciding whether G (p) = G (q) reduces to deciding whether R ( b p) = R ( b q), which we <p> The construction of b p from p as given in <ref> [16] </ref> involves an exponential blowup, which the following example shows to be unavoidable. Suppose k = 2m.
Reference: [17] <author> W. </author> <title> Kuich, The Kleene and Parikh theorem in complete semirings, </title> <booktitle> in Proc. 14th Colloq. Automata, Languages, and Programming, </booktitle> <editor> Ottmann, ed., </editor> <volume> vol. </volume> <booktitle> 267 of Lect. Notes in Comput. </booktitle> <publisher> Sci., EATCS, Springer, </publisher> <year> 1987, </year> <pages> pp. 212-225. 22 </pages>
Reference-contexts: Kleene algebra dates to a 1956 paper of Kleene [10] and was further developed in the 1971 monograph of Conway [6]. Kleene algebra has appeared in one form or another in relational algebra [19, 22], semantics and logics of programs [11, 20], automata and formal language theory <ref> [17, 18] </ref>, and the design and analysis of algorithms [1, 9, 13]. Many authors have contributed over the years to the development of the algebraic theory; see [15] and references therein. Propositional Dynamic Logic (PDL) [7] is a logical system that blends Kleene algebra with modal logic.
Reference: [18] <editor> W. Kuich and A. Salomaa, Semirings, </editor> <booktitle> Automata, and Languages, </booktitle> <publisher> Springer, </publisher> <year> 1986. </year>
Reference-contexts: Kleene algebra dates to a 1956 paper of Kleene [10] and was further developed in the 1971 monograph of Conway [6]. Kleene algebra has appeared in one form or another in relational algebra [19, 22], semantics and logics of programs [11, 20], automata and formal language theory <ref> [17, 18] </ref>, and the design and analysis of algorithms [1, 9, 13]. Many authors have contributed over the years to the development of the algebraic theory; see [15] and references therein. Propositional Dynamic Logic (PDL) [7] is a logical system that blends Kleene algebra with modal logic.
Reference: [19] <author> K. C. Ng, </author> <title> Relation Algebras with Transitive Closure, </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <year> 1984. </year>
Reference-contexts: This paper is concerned with the extent to which this system can be automated. Kleene algebra dates to a 1956 paper of Kleene [10] and was further developed in the 1971 monograph of Conway [6]. Kleene algebra has appeared in one form or another in relational algebra <ref> [19, 22] </ref>, semantics and logics of programs [11, 20], automata and formal language theory [17, 18], and the design and analysis of algorithms [1, 9, 13]. Many authors have contributed over the years to the development of the algebraic theory; see [15] and references therein.
Reference: [20] <author> V. Pratt, </author> <title> Dynamic algebras as a well-behaved fragment of relation algebras, </title> <booktitle> in Proc. Conf. on Algebra and Computer Science, </booktitle> <editor> D. Pigozzi, ed., </editor> <volume> vol. </volume> <booktitle> 425 of Lect. Notes in Comput. </booktitle> <publisher> Sci., Springer, </publisher> <month> June </month> <year> 1988, </year> <pages> pp. 77-110. </pages>
Reference-contexts: Kleene algebra dates to a 1956 paper of Kleene [10] and was further developed in the 1971 monograph of Conway [6]. Kleene algebra has appeared in one form or another in relational algebra [19, 22], semantics and logics of programs <ref> [11, 20] </ref>, automata and formal language theory [17, 18], and the design and analysis of algorithms [1, 9, 13]. Many authors have contributed over the years to the development of the algebraic theory; see [15] and references therein.
Reference: [21] <author> L. J. Stockmeyer and A. R. Meyer, </author> <title> Word problems requiring exponential time, </title> <booktitle> in Proc. 5th Symp. Theory of Computing, ACM, </booktitle> <year> 1973, </year> <pages> pp. 1-9. </pages>
Reference-contexts: The complexity of KAT is therefore of considerable practical interest. It was shown in [16] that KAT is decidable in at most exponential time by an efficient reduction to PDL. Since KA is known to be PSPACE -complete <ref> [21] </ref>, KAT is at least PSPACE -hard. It was conjectured in [15] that KAT is no more difficult to decide than KA. In this paper we verify that conjecture. We give a new decidability proof that establishes that KAT is in PSPACE , therefore PSPACE -complete. <p> It uses at most polynomial space, since in each stage of the computation only the vectors w i and x i need be remembered. The algorithm can be made deterministic using Savitch's Theorem (see [8]). The problem is known to be PSPACE -hard <ref> [21] </ref>. We have thus shown Theorem 12 The equational theory of KAT is PSPACE -complete. Acknowledgements The support of the National Science Foundation under grant CCR-9317320 is gratefully acknowledged. The third author is supported on a National Science Foundation Graduate Fellowship.
Reference: [22] <author> A. Tarski, </author> <title> On the calculus of relations, </title> <journal> J. Symb. Logic, </journal> <volume> 6 (1941), </volume> <pages> pp. 65-106. 23 </pages>
Reference-contexts: This paper is concerned with the extent to which this system can be automated. Kleene algebra dates to a 1956 paper of Kleene [10] and was further developed in the 1971 monograph of Conway [6]. Kleene algebra has appeared in one form or another in relational algebra <ref> [19, 22] </ref>, semantics and logics of programs [11, 20], automata and formal language theory [17, 18], and the design and analysis of algorithms [1, 9, 13]. Many authors have contributed over the years to the development of the algebraic theory; see [15] and references therein.
References-found: 14

