URL: http://bibd.unl.edu/~stinson/sfpc.ps
Refering-URL: http://bibd.unl.edu/~stinson/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: stinson@bibd.unl.edu  trung@exp-math.uni-essen.de  rwei@cse.unl.edu  
Title: Secure Frameproof Codes, Key Distribution Patterns, Group Testing Algorithms and Related Structures  
Author: D. R. Stinson Tran van Trung R. Wei 
Date: November 26, 1997  
Address: Lincoln, NE 68588  Ellernstrae 29, 45326 Essen, Germany  Lincoln, NE 68588  
Affiliation: Department of Computer Science and Engineering University of Nebraska-Lincoln  Institute for Experimental Mathematics University of Essen  Department of Mathematics and Statistics University of Nebraska-Lincoln  
Abstract: Frameproof codes were introduced by Boneh and Shaw as a method of "digital fingerprinting" which prevents a coalition of a specified size c from framing a user not in the coalition. Stinson and Wei then gave a combinatorial formulation of the problem in terms of certain types of extremal set sytems. In this paper, we study frameproof codes that provide a certain (weak) form of traceability. We extend our combinatorial formulation to address this stronger requirement, and show that the problem is solved by using (i; j)-separating systems, as defined by Friedman, Graham and Ullman. Using constructions based on perfect hash families, we give the first efficient explicit constructions for these objects for general values of i and j. We also review nonconstructive existence results that are based on probabilistic arguments. Then we look at two other, related concepts, namely key distribution patterns and non-adaptive group testing algorithms. We again approach these problems from the point of view of extremal set systems, and we describe a natural common setting in which these two problems are complementary special cases. This approach also demonstrates a close relationship between these two problems and frameproof codes. Explicit constructions are given, and some non-constructive existence results are reviewed. In the case of key distribution patterns, our explicit constructions are the most efficient ones known. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Alon and J. H. Spencer. </author> <title> The Probabilistic Method, </title> <publisher> John Wiley & Sons, </publisher> <year> 1992. </year>
Reference-contexts: Then p = 3=4, and w 1 + w 2 1 = 2 log 2 3 Hence, a (1; 2)-SS (n; 4:819 log 2 n) exists by part 2. of Theorem 5.2. This result was shown independently in Alon and Spencer <ref> [1, Theorem 1.1, p. 200] </ref>, Korner [24, Theorem 1] and Chee [8, Theorem 9.3.1]. * Suppose that w 1 = w 2 = 2.
Reference: [2] <author> M. Atici, S. S. Magliveras, D. R. Stinson and W.-D. Wei. </author> <title> Some recursive constructions for perfect hash families, </title> <editor> J. </editor> <booktitle> Combinatorial Designs 4 (1996), </booktitle> <pages> 353-363. </pages>
Reference-contexts: Lemma 4.4 <ref> [2, Theorem 4.4] </ref> Suppose there exists a PHF (N 0 ; n 0 ; m; w), where gcd w 1. Then there exists a PHF w j 2 j for any integer j 0. <p> Then there exists an SHF 2 j for any integer j 0. Proof. The proof is essentially the same as the proof of <ref> [2, Theorem 4.4] </ref>. We illustrate the application of the above results by constructing an infinite family of 2-SFPC. The following separating hash family is easily constructed by hand.
Reference: [3] <author> I. Biehl and B. Meyer. </author> <title> Protocols for collusion-secure asymmetric fingerprinting, </title> <booktitle> 14th Symposium on Theoretical Aspects of Computing (1997). </booktitle>
Reference-contexts: Further existence results, both constructive and nonconstructive, can be found in Chee [8]. Related questions, including generalizations of frameproof codes to the setting of public-key cryptography, have been studied in <ref> [3, 9, 28, 29, 30, 31] </ref>. 2.2 Traceability of frameproof codes Suppose that is a c-FPC (v; b).
Reference: [4] <author> S. Blackburn. </author> <title> Combinatorics and threshold cryptography, </title> <type> preprint. </type>
Reference-contexts: Results on perfect hash families can be found in numerous textbooks and papers; Mehlhorn [26] is a good textbook source. Recently, several applications in cryptography have been found, including broadcast encryption [17], threshold signature schemes <ref> [5, 4] </ref> and frame-proof codes [38]. We will modify our construction given in [38, Theorem 3.12] so that it can be used for secure frameproof codes. First, we need to define perfect hash families.
Reference: [5] <author> S. Blackburn, M. Burmester, Y. Desmedt and P. R. Wild. </author> <title> Efficient multiplicative sharing schemes, </title> <booktitle> Lecture Notes in Computer Science 1070 (1996), 107-118 (Advances in Cryptology - Eurocrypt '96). </booktitle>
Reference-contexts: Results on perfect hash families can be found in numerous textbooks and papers; Mehlhorn [26] is a good textbook source. Recently, several applications in cryptography have been found, including broadcast encryption [17], threshold signature schemes <ref> [5, 4] </ref> and frame-proof codes [38]. We will modify our construction given in [38, Theorem 3.12] so that it can be used for secure frameproof codes. First, we need to define perfect hash families.
Reference: [6] <author> D. Boneh and J. Shaw. </author> <title> Collusion-secure fingerprinting for digital data, </title> <booktitle> Lecture Notes in Computer Science 963 (1995), 452-465 (Advances in Cryptology - Crypto '95). </booktitle>
Reference-contexts: This will deter users from releasing an unauthorized copy. However, a coalition of users may detect some of the marks, namely the ones where their copies differ. They can then change these marks arbitrarily. To prevent a group of users from "framing" another user, Boneh and Shaw <ref> [6] </ref> defined the concept of c-frameproof codes. A c-frameproof code has the property that no coalition of at most c users can frame a user not in the coalition. In [38], combinatorial methods are used to further investigate frameproof codes. <p> A c-frameproof code has the property that no coalition of at most c users can frame a user not in the coalition. In [38], combinatorial methods are used to further investigate frameproof codes. Several constructions of c-frameproof codes are given in <ref> [6, 38, 8] </ref>. Frameproof codes prevent a coalition from framing a user not in the coalition. However, the coalition may be able to change some of the marks they have detected so that the distributor cannot trace an illegal copy. <p> To protect against this situation, we might try to construct a code such that, given an illegal copy, at least one user in the coalition that created it can be found. Unfortunately, such a code cannot exist, as pointed out in <ref> [6] </ref>. In this article, we consider a slightly weaker property, where we require that it is impossible that an illegal copy could be created by two disjoint coalitions. In a sense, our definition is the strongest that can be realized. <p> Observe that C F (C) for all C, and F (C) = C if jCj = 1. Now, if there is a codeword w (j) 2 F (C)nC, then user j could be "framed" if the coalition C produces the v-tuple w (j) . The following definition from <ref> [6] </ref> is motivated by the desire for this situation not to occur. Definition 2.1 A (v; b)-code is called a c-frameproof code if, for every C such that jCj c, we have F (C) " = C. We will say that is a c-FPC (v; b) for short. <p> In general, we are interested in constructing c-FPC (v; b) with b as large as possible as a function of c and v. Using the above example and error correcting codes with large minimal distance, Boneh and Shaw <ref> [6] </ref> gave a construction of frameproof codes. Stinson and Wei [38] investigated the combinatorial properties of frameproof codes and gave some explicit constructions of frameproof codes by using combinatorial designs, such as t-designs, packing designs and perfect hash families. <p> More generally, if F 1 (x) 6= ; and there exists a codeword w (j) such that w (j) 2 C for all C 2 F 1 (x), then we would at least be able to identify user j as being guilty. Unfortunately, as shown in <ref> [6] </ref>, this is hoping for too much. The following theorem is a straightforward generalization of [6, Theorem 11], which concerned the case c = 2. Theorem 2.1 Suppose is a c-FPC (v; b) with b 2c 1. Suppose D , where jDj = 2c 1. <p> Unfortunately, as shown in [6], this is hoping for too much. The following theorem is a straightforward generalization of <ref> [6, Theorem 11] </ref>, which concerned the case c = 2. Theorem 2.1 Suppose is a c-FPC (v; b) with b 2c 1. Suppose D , where jDj = 2c 1.
Reference: [7] <author> K. A. Bush, W. T. Federer, H. Pesotan and D. Raghavarao. </author> <title> New combinatorial designs and their application to group testing, </title> <journal> Journal of Statistical Planning and Inference 10 (1984), </journal> <pages> 335-343. </pages>
Reference-contexts: Remark 6.2 Our definition is a generalization of term "disjunct" as it is defined in [11, p. 62]. The definition in [11] corresponds to the case i = 1. When i = 1, this property is also known as j-complete; see <ref> [7] </ref>. Cover-free families and disjunct systems are dual incidence structures. The following is proved in the same way as Theorem 3.5. Theorem 6.1 There exists an (i; j)-CFF (v; b) if and only if there exists an (i; j)-DS (b; v). The following two lemmas follow immediately from the definitions. <p> There is an extensive literature on group testing algorithms. The interested reader should consult the book by Du and Hwang [11], in which many references are given. Two important papers on the topic are <ref> [7] </ref> and [21]. 7 Constructions The constructions we have discussed in Sections 4 and 5 can be modified in a straightforward fashion to produce cover-free families or (equivalently) disjunct systems.
Reference: [8] <author> Y. M. Chee. </author> <title> Turan-type Problems in Group Testing, Coding Theory and Cryptography, </title> <type> PhD Thesis, </type> <institution> University of Waterloo, </institution> <year> 1996. </year>
Reference-contexts: A c-frameproof code has the property that no coalition of at most c users can frame a user not in the coalition. In [38], combinatorial methods are used to further investigate frameproof codes. Several constructions of c-frameproof codes are given in <ref> [6, 38, 8] </ref>. Frameproof codes prevent a coalition from framing a user not in the coalition. However, the coalition may be able to change some of the marks they have detected so that the distributor cannot trace an illegal copy. <p> Stinson and Wei [38] investigated the combinatorial properties of frameproof codes and gave some explicit constructions of frameproof codes by using combinatorial designs, such as t-designs, packing designs and perfect hash families. Further existence results, both constructive and nonconstructive, can be found in Chee <ref> [8] </ref>. Related questions, including generalizations of frameproof codes to the setting of public-key cryptography, have been studied in [3, 9, 28, 29, 30, 31]. 2.2 Traceability of frameproof codes Suppose that is a c-FPC (v; b). <p> This result was shown independently in Alon and Spencer [1, Theorem 1.1, p. 200], Korner [24, Theorem 1] and Chee <ref> [8, Theorem 9.3.1] </ref>. * Suppose that w 1 = w 2 = 2. Then p = 7=8 and w 1 + w 2 1 = 2 log 2 7 Hence, a (2; 2)-SS (n; 15:573 log 2 n) exists by part 2. of Theorem 5.2.
Reference: [9] <author> B. Chor, A. Fiat and M. Naor. </author> <title> Tracing traitors, </title> <booktitle> Lecture Notes in Computer Science 839 (1994), 257-270 (Advances in Cryptology - Crypto '94). </booktitle>
Reference-contexts: Further existence results, both constructive and nonconstructive, can be found in Chee [8]. Related questions, including generalizations of frameproof codes to the setting of public-key cryptography, have been studied in <ref> [3, 9, 28, 29, 30, 31] </ref>. 2.2 Traceability of frameproof codes Suppose that is a c-FPC (v; b).
Reference: [10] <author> G. D. Cohen, S. Litsyn and G. Z emor. </author> <title> Greedy algorithms in coding theory, </title> <journal> IEEE Trans. Inform. Theory 42 (1996), </journal> <pages> 2053-2057. </pages>
Reference: [11] <author> D.-Z. Du and F. K. Hwang. </author> <title> Combinatorial Group Testing and Applications, </title> <publisher> World Scientific, </publisher> <year> 1993. </year>
Reference-contexts: An (i; j)-disjunct system, (X; B), will be denoted as an (i; j)-DS (v; b) if jXj = v and jBj = b. Remark 6.2 Our definition is a generalization of term "disjunct" as it is defined in <ref> [11, p. 62] </ref>. The definition in [11] corresponds to the case i = 1. When i = 1, this property is also known as j-complete; see [7]. Cover-free families and disjunct systems are dual incidence structures. The following is proved in the same way as Theorem 3.5. <p> An (i; j)-disjunct system, (X; B), will be denoted as an (i; j)-DS (v; b) if jXj = v and jBj = b. Remark 6.2 Our definition is a generalization of term "disjunct" as it is defined in [11, p. 62]. The definition in <ref> [11] </ref> corresponds to the case i = 1. When i = 1, this property is also known as j-complete; see [7]. Cover-free families and disjunct systems are dual incidence structures. The following is proved in the same way as Theorem 3.5. <p> Thus, the positive samples are identified by this testing procudure, and we have a d-NAGTA (v; b). There is an extensive literature on group testing algorithms. The interested reader should consult the book by Du and Hwang <ref> [11] </ref>, in which many references are given. Two important papers on the topic are [7] and [21]. 7 Constructions The constructions we have discussed in Sections 4 and 5 can be modified in a straightforward fashion to produce cover-free families or (equivalently) disjunct systems. <p> In view of Theorem 6.5, we immediately obtain a bound for disjunct systems: an (i; j)-DS (v; b) exists in which b 2fl log 2 v. However, a more direct approach is used in [13] (in the case i 2) and in <ref> [11, Theorem 4.3.9] </ref> (in the case i = 1; see also [12, Corollary 2]). This approach, which is a simple modification of the one we described in Section 5, yields smaller constants. In this section, we briefly review the nonconstructive bounds that can be obtained in this way.
Reference: [12] <author> A. G. Dyachkov, V. V. Rykov and A. M. Rashad. </author> <title> Superimposed distance codes, </title> <booktitle> Problems of Control and Information Theory 18 (1989), </booktitle> <pages> 237-250. </pages>
Reference-contexts: Remark 6.1 Our definition is a generalization of term "cover-free family" as it is commonly used in the combinatorial literature (see, e.g., [15]). The standard definition corresponds to the case i = 1. Another equivalent concept is "superimposed distance codes"; see <ref> [22, 12] </ref>. Definition 6.2 A set system (X; B) is an (i; j)-disjunct system provide that, for any P; Q X such that jP j i, jQj j and P " Q = ;, there exists a B 2 B such that P B and Q " B = ;. <p> However, a more direct approach is used in [13] (in the case i 2) and in [11, Theorem 4.3.9] (in the case i = 1; see also <ref> [12, Corollary 2] </ref>). This approach, which is a simple modification of the one we described in Section 5, yields smaller constants. In this section, we briefly review the nonconstructive bounds that can be obtained in this way. <p> In fact the best known result in this particular case is the existence of a (1; 2)-DS (n; 5:481 log 2 n), which is shown in <ref> [14, 12] </ref> by a more refined argument. 19 Acknowledgment The authors' research is supported by NSF grant CCR-9610138.
Reference: [13] <author> M. Dyer, T. Fenner, A. Frieze and A. Thomason. </author> <title> On key storage in secure networks, </title> <journal> Journal of Cryptology 8 (1995), </journal> <pages> 189-200. </pages>
Reference-contexts: Key distribution patterns have been an active area of study in the last ten years. For more information, the reader can consult <ref> [13, 20, 27, 32, 33, 34, 35, 36, 37] </ref>. 6.3 Group testing algorithms We informally define non-adaptive group testing algorithms. Definition 6.4 Suppose that X is a set of v samples that are to be tested positive or negative. <p> In view of Theorem 6.5, we immediately obtain a bound for disjunct systems: an (i; j)-DS (v; b) exists in which b 2fl log 2 v. However, a more direct approach is used in <ref> [13] </ref> (in the case i 2) and in [11, Theorem 4.3.9] (in the case i = 1; see also [12, Corollary 2]). This approach, which is a simple modification of the one we described in Section 5, yields smaller constants. <p> Part 2. of Theorem 7.5 shows the existence of a (1; 2)-DS (n; 8:646 log 2 n). This compares with (1; 2)-DS (n; 9:638 log 2 n) that would be obtained by applying Theorem 5.2 and Theorem 6.5. In <ref> [13] </ref>, it is shown that there is a (1; 2)-DS (n; 12:97 log 2 n); this corresponds to part 1. of Theorem 7.5.
Reference: [14] <author> P. Erd os, P. Frankl and Z. F uredi. </author> <title> Families of finite sets in which no set is covered by the union of two others, </title> <journal> Journal of Combinatorial Theory A 33 (1982), </journal> <pages> 158-166. </pages>
Reference-contexts: In fact the best known result in this particular case is the existence of a (1; 2)-DS (n; 5:481 log 2 n), which is shown in <ref> [14, 12] </ref> by a more refined argument. 19 Acknowledgment The authors' research is supported by NSF grant CCR-9610138.
Reference: [15] <author> P. Erd os, P. Frankl and Z. F uredi. </author> <title> Families of finite sets in which no set is covered by the union of r others, </title> <journal> Isreal Journal of Mathematics 51 (1985), </journal> <pages> 75-89. </pages>
Reference-contexts: Remark 6.1 Our definition is a generalization of term "cover-free family" as it is commonly used in the combinatorial literature (see, e.g., <ref> [15] </ref>). The standard definition corresponds to the case i = 1. Another equivalent concept is "superimposed distance codes"; see [22, 12].
Reference: [16] <author> P. Erd os and Z. F uredi. </author> <title> The greatest angle among n points in the the d-dimensional Euclidean space, </title> <booktitle> Annals of Discrete Mathematics 17 (1983), </booktitle> <pages> 275-283. </pages>
Reference: [17] <author> A. Fiat and M. Naor. </author> <title> Broadcast encryption, </title> <booktitle> Lecture Notes in Computer Science 773 (1994), 480-491 (Advances in Cryptology - Crypto '93). </booktitle>
Reference-contexts: Results on perfect hash families can be found in numerous textbooks and papers; Mehlhorn [26] is a good textbook source. Recently, several applications in cryptography have been found, including broadcast encryption <ref> [17] </ref>, threshold signature schemes [5, 4] and frame-proof codes [38]. We will modify our construction given in [38, Theorem 3.12] so that it can be used for secure frameproof codes. First, we need to define perfect hash families.
Reference: [18] <author> A. D. Friedman, R. L. Graham and J. D. Ullman. </author> <title> Universal single transition time asynchronous state assignments, </title> <journal> IEEE Trans. Comput. </journal> <month> C-18 </month> <year> (1969), </year> <pages> 541-547. </pages>
Reference-contexts: In a sense, our definition is the strongest that can be realized. We present a combinatorial formulation of this problem that turns out to be equivalent to the (i; j)-separating systems defined almost 30 years ago by Friedman, Graham and Ullman <ref> [18] </ref>. Using constructions based on perfect hash families, we give the first efficient explicit constructions for these objects for general values of i and j (our constructions produce systems in which the number of blocks is a polynomial in log v for fixed i and j). <p> The first equivalence involves set systems, satisfying certain union and intersection properties, that we call "sandwich-free families". The second concerns separating systems, as defined in <ref> [18] </ref>. 3.1 Sandwich-free families We first define some terminology concerning set systems. A set system is a pair (X; B) where X is a set of elements called points, and B is a set of subsets of X, the members of which are called blocks. <p> Theorem 3.4 A c-FPC (v; b) exists if and only if there exists a (1; c)-SFF (v; b). 7 3.2 Separating systems Friedman, Graham and Ullman <ref> [18] </ref> defined separating systems as follows. <p> As far as we know, Theorem 4.10 provides the first efficient explicit constructions for (c; c)-SS (b; v) for general c. (A construction, similar in flavour to Theorem 4.9, was already given in <ref> [18] </ref> for the case c = 2.) 5 Nonconstructive bounds Nonconstructive existence results can often be obtained by probabilistic methods. For some of the structures under discussion in this paper, bounds of this type have been derived. <p> This result was shown in Korner and Simonyi [23, Theorem 2]. Earlier, it had been shown by Friedman, Graham and Ullman <ref> [18, Theorem 5] </ref> that a (2; 2)-SS (n; 20:764 log 2 n) exists. <p> Earlier, it had been shown by Friedman, Graham and Ullman [18, Theorem 5] that a (2; 2)-SS (n; 20:764 log 2 n) exists. This is in fact the result that would be obtained from part 1. of Theorem 5.2. * Friedman, Graham and Ullman <ref> [18, p. 546] </ref> showed the existence of a (w 1 ; w 2 )- SS (n; fl log 2 n) where fl is the value given in part 1. of Theorem 5.2.
Reference: [19] <author> M. L. Fredman and J. Komlos. </author> <title> On the size of separating systems and families of perfect hash functions, </title> <journal> SIAM J. Algebriac and Discrete Meth. </journal> <volume> 5 (1984), </volume> <pages> 61-68. </pages>
Reference: [20] <author> L. Gong and D. L. Wheeler. </author> <title> A matrix key-distribution scheme, </title> <journal> Journal of Cryptology 2 (1990), </journal> <pages> 51-59. </pages>
Reference-contexts: Key distribution patterns have been an active area of study in the last ten years. For more information, the reader can consult <ref> [13, 20, 27, 32, 33, 34, 35, 36, 37] </ref>. 6.3 Group testing algorithms We informally define non-adaptive group testing algorithms. Definition 6.4 Suppose that X is a set of v samples that are to be tested positive or negative.
Reference: [21] <author> F. K. Hwang and V. T. </author> <title> S os. Non-adaptive hypergeometric group testing, </title> <journal> Studia Sci. Math. Hungar. </journal> <volume> 22 (1987), </volume> <pages> 257-263. </pages>
Reference-contexts: There is an extensive literature on group testing algorithms. The interested reader should consult the book by Du and Hwang [11], in which many references are given. Two important papers on the topic are [7] and <ref> [21] </ref>. 7 Constructions The constructions we have discussed in Sections 4 and 5 can be modified in a straightforward fashion to produce cover-free families or (equivalently) disjunct systems.
Reference: [22] <author> W. H. Kautz and R. G. </author> <title> Singleton. Nonrandom binary superimposed codes, </title> <journal> IEEE Trans. Inform. Theory 10 (1964), </journal> <pages> 363-37. </pages>
Reference-contexts: Remark 6.1 Our definition is a generalization of term "cover-free family" as it is commonly used in the combinatorial literature (see, e.g., [15]). The standard definition corresponds to the case i = 1. Another equivalent concept is "superimposed distance codes"; see <ref> [22, 12] </ref>. Definition 6.2 A set system (X; B) is an (i; j)-disjunct system provide that, for any P; Q X such that jP j i, jQj j and P " Q = ;, there exists a B 2 B such that P B and Q " B = ;.
Reference: [23] <author> J. K orner and G. Simonyi. </author> <title> Separating partition systems and locally different sequences, </title> <journal> SIAM J. Discrete Math. </journal> <volume> 1 (1988), </volume> <pages> 355-359. </pages>
Reference-contexts: Then p = 7=8 and w 1 + w 2 1 = 2 log 2 7 Hence, a (2; 2)-SS (n; 15:573 log 2 n) exists by part 2. of Theorem 5.2. This result was shown in Korner and Simonyi <ref> [23, Theorem 2] </ref>. Earlier, it had been shown by Friedman, Graham and Ullman [18, Theorem 5] that a (2; 2)-SS (n; 20:764 log 2 n) exists.
Reference: [24] <author> J. K orner. </author> <title> On the extremal combinatorics of the Hamming space, </title> <journal> J. Combin. </journal> <note> Theory A 71 (1995), 112-126. </note>
Reference-contexts: Then p = 3=4, and w 1 + w 2 1 = 2 log 2 3 Hence, a (1; 2)-SS (n; 4:819 log 2 n) exists by part 2. of Theorem 5.2. This result was shown independently in Alon and Spencer [1, Theorem 1.1, p. 200], Korner <ref> [24, Theorem 1] </ref> and Chee [8, Theorem 9.3.1]. * Suppose that w 1 = w 2 = 2. Then p = 7=8 and w 1 + w 2 1 = 2 log 2 7 Hence, a (2; 2)-SS (n; 15:573 log 2 n) exists by part 2. of Theorem 5.2.
Reference: [25] <author> K. Mehlhorn. </author> <title> On the program size of perfect and universal hash functions, </title> <booktitle> in Proc. 23rd Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 170-175. </pages>
Reference-contexts: In this section, we present a unified treatment of several of these bounds, most of which are proved in a similar fashion. To illustrate the technique used, we begin with a bound for perfect hash families. This is essentially the bound first proved in <ref> [25] </ref> (see also [26]). <p> Thus we have proved the following bound of Mehlhorn: 13 Theorem 5.1 <ref> [25] </ref> There exists a PHF (N ; n; m; w) if N &gt; n m : We can use a similar approach to prove bounds for separating hash families.
Reference: [26] <author> K. Mehlhorn. </author> <title> Data Structures and Algorithms, </title> <journal> Vol. </journal> <volume> 1. </volume> <publisher> Springer-Verlag, </publisher> <year> 1984. </year>
Reference-contexts: Results on perfect hash families can be found in numerous textbooks and papers; Mehlhorn <ref> [26] </ref> is a good textbook source. Recently, several applications in cryptography have been found, including broadcast encryption [17], threshold signature schemes [5, 4] and frame-proof codes [38]. We will modify our construction given in [38, Theorem 3.12] so that it can be used for secure frameproof codes. <p> In this section, we present a unified treatment of several of these bounds, most of which are proved in a similar fashion. To illustrate the technique used, we begin with a bound for perfect hash families. This is essentially the bound first proved in [25] (see also <ref> [26] </ref>).
Reference: [27] <author> C. J. Mitchell and F. C. Piper. </author> <title> Key storage in secure networks, </title> <booktitle> Discrete Applied Mathematics 21 (1988), </booktitle> <pages> 215-228. </pages>
Reference-contexts: Corollary 6.6 If there exists an (i; j)-SFF (v; b), then there exists an (i; j)-CFF (2v; b). Proof. Apply Theorems 6.5, 6.1 and 3.5. 6.2 Key distribution patterns The elegant idea of a key distribution pattern is due to Mitchell and Piper <ref> [27] </ref>. Here is an informal definition. Definition 6.3 Let v and b be positive integers. <p> Key distribution patterns have been an active area of study in the last ten years. For more information, the reader can consult <ref> [13, 20, 27, 32, 33, 34, 35, 36, 37] </ref>. 6.3 Group testing algorithms We informally define non-adaptive group testing algorithms. Definition 6.4 Suppose that X is a set of v samples that are to be tested positive or negative.
Reference: [28] <author> B. Pfitzmann. </author> <title> Trials of traced traitors, </title> <booktitle> Lecture Notes in Computer Science 1174 (1996), 49-64 (Workshop on Information Hiding). </booktitle>
Reference-contexts: Further existence results, both constructive and nonconstructive, can be found in Chee [8]. Related questions, including generalizations of frameproof codes to the setting of public-key cryptography, have been studied in <ref> [3, 9, 28, 29, 30, 31] </ref>. 2.2 Traceability of frameproof codes Suppose that is a c-FPC (v; b).
Reference: [29] <author> B. Pfitzmann and M. Schunter. </author> <title> Asymmetric fingerprinting, </title> <booktitle> Lecture Notes in Computer Science 1070 (1996), 84-95 (Advances in Cryptology - Eurocrypt '96). </booktitle>
Reference-contexts: Further existence results, both constructive and nonconstructive, can be found in Chee [8]. Related questions, including generalizations of frameproof codes to the setting of public-key cryptography, have been studied in <ref> [3, 9, 28, 29, 30, 31] </ref>. 2.2 Traceability of frameproof codes Suppose that is a c-FPC (v; b).
Reference: [30] <author> B. Pfitzmann and M. Waidner. </author> <title> Asymmetric fingerprinting for larger collusions, </title> <booktitle> 4th ACM Conference on Computer and Communications Security (1997). </booktitle>
Reference-contexts: Further existence results, both constructive and nonconstructive, can be found in Chee [8]. Related questions, including generalizations of frameproof codes to the setting of public-key cryptography, have been studied in <ref> [3, 9, 28, 29, 30, 31] </ref>. 2.2 Traceability of frameproof codes Suppose that is a c-FPC (v; b).
Reference: [31] <author> B. Pfitzmann and M. Waidner. Anonymous fingerprinting, </author> <booktitle> Lecture Notes in Computer Science 1233 (1997), 88-102 (Advances in Cryptology - Eurocrypt '97). </booktitle>
Reference-contexts: Further existence results, both constructive and nonconstructive, can be found in Chee [8]. Related questions, including generalizations of frameproof codes to the setting of public-key cryptography, have been studied in <ref> [3, 9, 28, 29, 30, 31] </ref>. 2.2 Traceability of frameproof codes Suppose that is a c-FPC (v; b).
Reference: [32] <author> C. M. O'Keefe. </author> <title> Key distribution patterns using Minkowski planes, Designs, </title> <booktitle> Codes and Cryptography 5 (1995), </booktitle> <pages> 261-267. 21 </pages>
Reference-contexts: Key distribution patterns have been an active area of study in the last ten years. For more information, the reader can consult <ref> [13, 20, 27, 32, 33, 34, 35, 36, 37] </ref>. 6.3 Group testing algorithms We informally define non-adaptive group testing algorithms. Definition 6.4 Suppose that X is a set of v samples that are to be tested positive or negative.
Reference: [33] <author> K. A. S. Quinn. </author> <title> Some constructions for key distribution patterns, Designs, </title> <booktitle> Codes and Cryptography 4 (1994), </booktitle> <pages> 177-191. </pages>
Reference-contexts: Key distribution patterns have been an active area of study in the last ten years. For more information, the reader can consult <ref> [13, 20, 27, 32, 33, 34, 35, 36, 37] </ref>. 6.3 Group testing algorithms We informally define non-adaptive group testing algorithms. Definition 6.4 Suppose that X is a set of v samples that are to be tested positive or negative.
Reference: [34] <author> K. A. S. Quinn. </author> <title> Bounds for for key distribution patterns, </title> <note> to appear in J. Cryptology. </note>
Reference-contexts: Key distribution patterns have been an active area of study in the last ten years. For more information, the reader can consult <ref> [13, 20, 27, 32, 33, 34, 35, 36, 37] </ref>. 6.3 Group testing algorithms We informally define non-adaptive group testing algorithms. Definition 6.4 Suppose that X is a set of v samples that are to be tested positive or negative.
Reference: [35] <author> K. A. S. Quinn. </author> <title> On construction methods for key distribution patterns, </title> <type> preprint. </type>
Reference-contexts: Key distribution patterns have been an active area of study in the last ten years. For more information, the reader can consult <ref> [13, 20, 27, 32, 33, 34, 35, 36, 37] </ref>. 6.3 Group testing algorithms We informally define non-adaptive group testing algorithms. Definition 6.4 Suppose that X is a set of v samples that are to be tested positive or negative.
Reference: [36] <author> D. R. Stinson. </author> <title> On some methods for unconditionally secure key distribution and broadcast encryption, Designs, </title> <booktitle> Codes and Cryptography 12 (1997), </booktitle> <pages> 215-243. </pages>
Reference-contexts: Key distribution patterns have been an active area of study in the last ten years. For more information, the reader can consult <ref> [13, 20, 27, 32, 33, 34, 35, 36, 37] </ref>. 6.3 Group testing algorithms We informally define non-adaptive group testing algorithms. Definition 6.4 Suppose that X is a set of v samples that are to be tested positive or negative.
Reference: [37] <author> D. R. Stinson and Tran van Trung. </author> <title> Some new results on key distribution patterns and broadcast encryption, to appear in Designs, Codes and Cryptography. </title>
Reference-contexts: Key distribution patterns have been an active area of study in the last ten years. For more information, the reader can consult <ref> [13, 20, 27, 32, 33, 34, 35, 36, 37] </ref>. 6.3 Group testing algorithms We informally define non-adaptive group testing algorithms. Definition 6.4 Suppose that X is a set of v samples that are to be tested positive or negative.
Reference: [38] <author> D. R. Stinson and R. Wei. </author> <title> Combinatorial properties and constructions of traceability schemes and frameproof codes, </title> <note> to appear in SIAM J. Discrete Math. </note>
Reference-contexts: To prevent a group of users from "framing" another user, Boneh and Shaw [6] defined the concept of c-frameproof codes. A c-frameproof code has the property that no coalition of at most c users can frame a user not in the coalition. In <ref> [38] </ref>, combinatorial methods are used to further investigate frameproof codes. Several constructions of c-frameproof codes are given in [6, 38, 8]. Frameproof codes prevent a coalition from framing a user not in the coalition. <p> A c-frameproof code has the property that no coalition of at most c users can frame a user not in the coalition. In [38], combinatorial methods are used to further investigate frameproof codes. Several constructions of c-frameproof codes are given in <ref> [6, 38, 8] </ref>. Frameproof codes prevent a coalition from framing a user not in the coalition. However, the coalition may be able to change some of the marks they have detected so that the distributor cannot trace an illegal copy. <p> In general, we are interested in constructing c-FPC (v; b) with b as large as possible as a function of c and v. Using the above example and error correcting codes with large minimal distance, Boneh and Shaw [6] gave a construction of frameproof codes. Stinson and Wei <ref> [38] </ref> investigated the combinatorial properties of frameproof codes and gave some explicit constructions of frameproof codes by using combinatorial designs, such as t-designs, packing designs and perfect hash families. Further existence results, both constructive and nonconstructive, can be found in Chee [8]. <p> Similarly, B x [B w (i) if and only if x j = 0 when all the codewords in C have jth bit equal to 0. The conclusion follows. Lemma 3.1 can be used to prove the following combinatorial description of frameproof codes that was given in <ref> [38] </ref>. Theorem 3.2 [38] There exists a c-FPC (v; b) if and only if there exists a set system (X; B) such that jXj = v; jBj = b and for any subset of d c blocks B 1 ; B 2 ; : : : ; B d 2 B, <p> The conclusion follows. Lemma 3.1 can be used to prove the following combinatorial description of frameproof codes that was given in <ref> [38] </ref>. Theorem 3.2 [38] There exists a c-FPC (v; b) if and only if there exists a set system (X; B) such that jXj = v; jBj = b and for any subset of d c blocks B 1 ; B 2 ; : : : ; B d 2 B, there does not <p> Results on perfect hash families can be found in numerous textbooks and papers; Mehlhorn [26] is a good textbook source. Recently, several applications in cryptography have been found, including broadcast encryption [17], threshold signature schemes [5, 4] and frame-proof codes <ref> [38] </ref>. We will modify our construction given in [38, Theorem 3.12] so that it can be used for secure frameproof codes. First, we need to define perfect hash families. <p> Results on perfect hash families can be found in numerous textbooks and papers; Mehlhorn [26] is a good textbook source. Recently, several applications in cryptography have been found, including broadcast encryption [17], threshold signature schemes [5, 4] and frame-proof codes [38]. We will modify our construction given in <ref> [38, Theorem 3.12] </ref> so that it can be used for secure frameproof codes. First, we need to define perfect hash families.
References-found: 38

