URL: ftp://ftp.cs.unh.edu/pub/csp/Papers/cp95-ds1.ps.gz
Refering-URL: http://www.cs.unh.edu/Personal/ecf.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: A Constraint-Based Approach to Diagnosing Software Problems in Computer Networks  
Author: Daniel Sabin, Mihaela Sabin, Robert D. Russell and Eugene C. Freuder 
Address: New Hampshire, Durham, NH 03824 USA  
Affiliation: Department of Computer Science, University of  
Abstract: Distributed software problems can be particularly mystifying to diagnose, for both system users and system administrators. Model-based diagnosis methods that have been more commonly applied to physical systems can be brought to bear on such software systems. A prototype system has been developed for diagnosing problems in software that controls computer networks. Our approach divides this software into its natural hierarchy of layers, subdividing each layer into three separately modeled components: the interface to the layer above on the same machine, the protocol to the same layer on a remote machine, and the configuration. For each component knowledge is naturally represented in the form of constraints. User interaction modeling is accomplished through the introduction of constraints representing user assumptions, the finite-state machine specification of a protocol is translated to a standard CSP representation and configuration tasks are modeled as dynamic CSPs. Diagnosis is viewed as a partial constraint satisfaction problem (PCSP). A PCSP algorithm has been adapted for use as a diagnostic engine. This paper presents a case study illustrating the diagnosis of some problems involving the widely used FTP and DNS network software.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Albitz, P. and Liu, C., </author> <title> DNS and BIND, </title> <publisher> O'Reilly & Associates, Inc., </publisher> <address> Sebastopol, CA, </address> <year> 1994. </year>
Reference-contexts: The Berkeley Internet Name Domain (BIND) is a set of procedures used to map DNS names to IP addresses and vice versa <ref> [1] </ref> [11]. It consists of a number of server daemons running at various locations in the Internet, each with the responsibility of resolving a subset of the names. On OSF/1 [5] a name is resolved as follows: 1.
Reference: 2. <author> Bakker, R.R., Dikker, F., Tempelman, F. and Wognum, </author> <title> P.M., Diagnosing and solving over-determined constraint satisfaction problems, </title> <booktitle> Proceedings of the 13th International Joint Conference on Artificial Intelligence, </booktitle> <volume> 1, </volume> <pages> 276-281, </pages> <year> 1993. </year>
Reference-contexts: Regarding components as constraints, and faulty components as failed constraints, minimal diagnoses naturally correspond to PCSP solutions that leave minimal sets of constraints unsatisfied. These sets are minimal in that there is no solution which leaves only a proper subset unsatisfied. Bakker et al. <ref> [2] </ref> have taken the opposite approach, applying model-based diagnosis methods to partial constraint satisfaction. Combinations of branch and bound and CSP techniques have been used in algorithms that search for a solution that leaves a minimal number of constraints unsatisfied [8].
Reference: 3. <author> Bouloutas, </author> <title> A.T., Modeling Fault Management in Communication Networks, </title> <type> PhD Thesis, </type> <institution> Columbia University, </institution> <year> 1990. </year>
Reference-contexts: No subset of A is a solution. 4 Representation and Reasoning We model each of the components of Fig. 1 user interaction, protocol, configuration as a separate PCSP knowledge base. Protocol diagnosis has been studied previously as a constraint satisfaction problem <ref> [3] </ref> [9] [20]. We apply a similar approach here to the FTP protocol. We demonstrate here that user interaction diagnosis can also be modeled as a constraint satisfaction problem, in particular by introducing constraints that reflect user assumptions. <p> The idea of using model-based techniques to diagnose communication protocols based on extended finite automata is not new. To our knowledge, at least three protocol diagnosis systems have been proposed <ref> [3] </ref> [9] [20]. All these approaches attempt to diagnose protocols by analyzing conflicts between observations and the protocol model. This implies that observations must somehow be associated with the model. The representation approach we are using is similar to the one used by Riese in [20].
Reference: 4. <author> Comer, D.E., </author> <title> Internetworking with TCP/IP , vol. 1, </title> <publisher> Prentice Hall, Inc., </publisher> <address> Englewoods Cliffs, NJ, </address> <year> 1991. </year>
Reference-contexts: It provides interactive file transfer and relies on Transmission Control Protocol (TCP) a transport protocol in the TCP/IP hierarchy of protocols <ref> [4] </ref>. We decompose the problem domain into three components, each of which will be modeled separately, as shown in Fig. 1. Fig. 1. Problem domain decomposition 1.
Reference: 5. <institution> DEC OSF/1, Configuring Your Network Software, Digital Equipment Corporation, </institution> <year> 1993. </year>
Reference-contexts: It consists of a number of server daemons running at various locations in the Internet, each with the responsibility of resolving a subset of the names. On OSF/1 <ref> [5] </ref> a name is resolved as follows: 1. The file /etc/svc.conf is consulted to see what services are available and in what order they are to be used. Possibilities are local and bind.
Reference: 6. <author> El Fattah, Y. and Dechter, R., </author> <title> Empirical Evaluation of Diagnosis as Optimization in Constraint Networks, </title> <booktitle> Working Papers of The Third International Workshop on Principles of Diagnosis (DX-92), </booktitle> <year> (1992). </year>
Reference-contexts: as a constraint optimization problem by associating system components with constraints that reflect their behavior, component inputs and outputs with problem variables, and introducing assumption variables associated with the system components, where a value of 0 for an assumption variable reflects normal behavior and a value of 1 abnormal behavior <ref> [6] </ref>. Observations force assignment of some of the problem variables. The task of finding a minimal diagnosis corresponds to finding an optimal solution of such a CSP. We use a refinement of this approach based on the notion of a partial constraint satisfaction problem (PCSP) [8].
Reference: 7. <author> Freuder, </author> <title> E.C. and Mackworth, A.K., Special Volume, Constraint-Based Reasoning, </title> <journal> Artificial Intelligence, </journal> <volume> 58, </volume> <year> 1992. </year>
Reference-contexts: Minimal diagnoses postulate sets of faulty components that are minimal in the sense that no proper subset provides an explanation. 3.1 Model-based Diagnosis as Partial Constraint Satisfaction Constraint satisfaction is a powerful and extensively used artificial intelligence paradigm <ref> [7] </ref>. A constraint satisfaction problem (CSP) involves a set of problem variables, a set of values for each variable and set of constraints specifying which combinations of values are consistent. A solution to a CSP specifies a value for each variable such that all the constraints are satisfied.
Reference: 8. <author> Freuder, E.C. and Wallace, </author> <title> R.J., Partial Constraint Satisfaction, </title> <journal> Artificial Intelligence, </journal> <volume> 58, </volume> <pages> 21-71, </pages> <year> 1992. </year>
Reference-contexts: Observations force assignment of some of the problem variables. The task of finding a minimal diagnosis corresponds to finding an optimal solution of such a CSP. We use a refinement of this approach based on the notion of a partial constraint satisfaction problem (PCSP) <ref> [8] </ref>. PCSPs were introduced for applications that settle for partial solutions that leave some of the constraints unsatisfied, e.g. because the problems are overconstrained or because complete solutions require too much time to compute. We have found that PCSPs provide an elegant approach to viewing diagnosis in CSP terms. <p> Bakker et al. [2] have taken the opposite approach, applying model-based diagnosis methods to partial constraint satisfaction. Combinations of branch and bound and CSP techniques have been used in algorithms that search for a solution that leaves a minimal number of constraints unsatisfied <ref> [8] </ref>. We have adapted one of these algorithms to search for solutions with minimal sets of unsatisfied constraints. <p> No $remote-host in $hosts-file." con $local-server != nil "*** Local resolution failed. No $remote-host in $hosts-file." con $servers = nil or bind-resolve ($remote-host $servers $domain) "*** bind resolution failed." Fig. 7. Activity and compatibility constraints definition section 4.4 Algorithm Description satisfaction algorithm presented in <ref> [8] </ref>. bound ffconjcon is a compatibility constraint gg algorithm branch&bound (distance, search-path, variables, values) if (variables = ;) then if (distance = ;) then return true for each element D 2 bound do if (distance D) then bound bound nfDg 2 bound bound [f distance g return false 2 if (values
Reference: 9. <author> Ghedamsi, A., von Bochmann, G. and Dssouli, R., </author> <title> Diagnosing multiple faults in finite state machines, </title> <type> Technical Report, </type> <institution> Dept. d'IRO, Universite de Montreal, Canada, </institution> <month> January </month> <year> 1993. </year>
Reference-contexts: No subset of A is a solution. 4 Representation and Reasoning We model each of the components of Fig. 1 user interaction, protocol, configuration as a separate PCSP knowledge base. Protocol diagnosis has been studied previously as a constraint satisfaction problem [3] <ref> [9] </ref> [20]. We apply a similar approach here to the FTP protocol. We demonstrate here that user interaction diagnosis can also be modeled as a constraint satisfaction problem, in particular by introducing constraints that reflect user assumptions. <p> The idea of using model-based techniques to diagnose communication protocols based on extended finite automata is not new. To our knowledge, at least three protocol diagnosis systems have been proposed [3] <ref> [9] </ref> [20]. All these approaches attempt to diagnose protocols by analyzing conflicts between observations and the protocol model. This implies that observations must somehow be associated with the model. The representation approach we are using is similar to the one used by Riese in [20].
Reference: 10. <editor> Hamscher, W., Console, L. and de Kleer, J., editors, </editor> <title> Readings in Model-based Diagnosis, </title> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <address> San Mateo, CA, </address> <year> 1992. </year>
Reference-contexts: The situation has been summarized in a cartoon that pictures a visitor to a computing site staring at a swami sitting cross-legged in the corner, and receiving the explanation: "That's our network guru". Techniques for model-based diagnosis have been used successfully in the diagnosis of physical systems <ref> [10] </ref>. We have applied and extended this approach to computer network software. We consider this software to be constructed in a hierarchy of layers fashion as described in the ISO OSI Reference Model [12]. <p> This diagnosis is shown in Fig. 5. Fig. 5. Local resolution with incompletely specified host table 3 Background Model-based diagnosis techniques compare observations of the behavior of a sys tem being diagnosed to predictions based upon a model of the system in order to diagnose faults <ref> [10] </ref>. The fundamental presumption behind model-based diagnosis is that, assuming the model is correct, all the inconsistencies between observation and prediction arise from faults in the system.
Reference: 11. <author> Hunt, C., </author> <title> TCP/IP Network Administration, </title> <publisher> O'Reilly & Associates, Inc., </publisher> <address> Se-bastopol, CA, </address> <year> 1994. </year>
Reference-contexts: The Berkeley Internet Name Domain (BIND) is a set of procedures used to map DNS names to IP addresses and vice versa [1] <ref> [11] </ref>. It consists of a number of server daemons running at various locations in the Internet, each with the responsibility of resolving a subset of the names. On OSF/1 [5] a name is resolved as follows: 1.
Reference: 12. <author> ISO, </author> <title> ISO Open Systems Interconnection Basic Reference Model, Second Edition, </title> <address> ISO/TC 97/SC 16(ISO CD 7498-1), </address> <year> 1992. </year>
Reference-contexts: Techniques for model-based diagnosis have been used successfully in the diagnosis of physical systems [10]. We have applied and extended this approach to computer network software. We consider this software to be constructed in a hierarchy of layers fashion as described in the ISO OSI Reference Model <ref> [12] </ref>. We subdivide each layer into three separately modeled components: the inter-face to the layer above on the same machine (or to the user, in the case of the application layer), the protocol to the same layer on a remote machine, and the configuration.
Reference: 13. <author> Lin, Y.J. and Wuu, G., </author> <title> A constraint approach for temporal intervals in the analysis of timed transitions, Protocol Specification, Testing and Verification, </title> <booktitle> XI, </booktitle> <pages> 215-230, </pages> <year> 1991. </year>
Reference-contexts: Since simple FSMs have limited expressive power in representing such notions as timers, logical conditions, etc., a more powerful formalism is needed, and thus extended finite automata have been used for protocol testing and specification analysis or diagnosis <ref> [13] </ref> [21]. The idea of using model-based techniques to diagnose communication protocols based on extended finite automata is not new. To our knowledge, at least three protocol diagnosis systems have been proposed [3] [9] [20].
Reference: 14. <author> Miller, M.A., </author> <title> Troubleshooting TCP/IP , M&T Books, </title> <year> 1993. </year>
Reference-contexts: Furthermore, the error messages from the system are usually so general and vague that little can be gleaned from them as to the exact cause of (and hence the fix to) the problem. Diagnosing under these circumstances is currently more art than science <ref> [14] </ref>. The situation has been summarized in a cartoon that pictures a visitor to a computing site staring at a swami sitting cross-legged in the corner, and receiving the explanation: "That's our network guru". Techniques for model-based diagnosis have been used successfully in the diagnosis of physical systems [10].
Reference: 15. <author> Mittal, S. and Falkenhainer, B., </author> <title> Dynamic Constraint Satisfaction Problems, </title> <booktitle> Proceedings of the Eighth National Conference on Artificial Intelligence (AAAI-90), </booktitle> <pages> 25-32, </pages> <year> 1990. </year>
Reference-contexts: of the advantages of viewing diagnosis as a PCSP is that it permits us to bring our experience with PCSP algorithms to bear on diagnosis. 3.2 Modeling Configuration as Dynamic Constraint Satisfaction For synthesis tasks such as configuration and model composition, the constraint problem is of a more dynamic nature <ref> [15] </ref> [16] [17]. Any of the elements of the CSP might change during the search process. Mittal and Falkenhainer introduced the notion of a dynamic constraint satisfaction problem (DCSP) by adding a new type of constraint, called an activity constraint , on the variables considered in each solution. <p> The main advantage of this extension to the standard CSP is that inferences can now be made about variable activity, based on the conditions under which variables become active, avoiding irrelevant work during search. The definitions of a dynamic constraint satisfaction problem and activity constraints, as stated in <ref> [15] </ref>, are the following: Given A set of variables V representing all variables that may potentially become active and appear in a solution. A non-empty initial set of active variables V I = fv 1 ; : : : ; v k g, which is a subset of V . <p> result in partial satisfaction of the constraints, and the diagnosis algorithm applied to this PCSP will produce the set of minimal diagnosis in terms of errors at the level of the protocol commands (e.g. incorrect/missing arguments) and/or sets of faulty state transitions. 4.3 Configuration We use the same approach as <ref> [15] </ref>, but extend the definition of DCSP to that of dynamic partial constraint satisfaction problem (DPCSP), by relaxing two of the requirements in the previously presented DCSP definition. First, we do not restrict the domains of values for variables to be predefined finite sets of values.
Reference: 16. <author> Mittal, S., </author> <title> Reasoning about Resource Constraints in Configuration Tasks, </title> <type> SSL Technical Report, </type> <institution> XEROX Park, </institution> <year> 1990. </year>
Reference-contexts: the advantages of viewing diagnosis as a PCSP is that it permits us to bring our experience with PCSP algorithms to bear on diagnosis. 3.2 Modeling Configuration as Dynamic Constraint Satisfaction For synthesis tasks such as configuration and model composition, the constraint problem is of a more dynamic nature [15] <ref> [16] </ref> [17]. Any of the elements of the CSP might change during the search process. Mittal and Falkenhainer introduced the notion of a dynamic constraint satisfaction problem (DCSP) by adding a new type of constraint, called an activity constraint , on the variables considered in each solution.
Reference: 17. <author> Mittal, S. and Frayman, F., </author> <title> Towards a Generic Model of Configuration Tasks, </title> <booktitle> Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <volume> 2, </volume> <pages> 1395-1401, </pages> <year> 1989. </year>
Reference-contexts: advantages of viewing diagnosis as a PCSP is that it permits us to bring our experience with PCSP algorithms to bear on diagnosis. 3.2 Modeling Configuration as Dynamic Constraint Satisfaction For synthesis tasks such as configuration and model composition, the constraint problem is of a more dynamic nature [15] [16] <ref> [17] </ref>. Any of the elements of the CSP might change during the search process. Mittal and Falkenhainer introduced the notion of a dynamic constraint satisfaction problem (DCSP) by adding a new type of constraint, called an activity constraint , on the variables considered in each solution. <p> We apply a similar approach here to the FTP protocol. We demonstrate here that user interaction diagnosis can also be modeled as a constraint satisfaction problem, in particular by introducing constraints that reflect user assumptions. Finally, extending the representation used by <ref> [17] </ref>, we are able to treat diagnosis of configuration tasks as a PCSP as well. These three components are naturally modeled separately. They utilize different mechanisms to instantiate the general CSP paradigm, e.g. an intermediate finite state machine model for protocols.
Reference: 18. <author> Mockapetris, P., </author> <title> Domain Names Concepts and Facilities, Request For Comments 1034 , 1987. </title>
Reference-contexts: Programs that utilize networking need to map between the names used by people to refer to host computers and the IP addresses (numbers) used to communicate over the network. The Domain Name Service (DNS) <ref> [18] </ref> consists of a method for constructing names of host computers in a hierarchical manner and a way to resolve these names in a distributed fashion. The Berkeley Internet Name Domain (BIND) is a set of procedures used to map DNS names to IP addresses and vice versa [1] [11].
Reference: 19. <author> Postel, J., </author> <title> File Transfer Protocol, Request For Comments 959 , ISI, </title> <month> October </month> <year> 1985. </year>
Reference-contexts: We believe it gives us a solid foundation for understanding basic problems that occur at all levels in information networks, and that the techniques we have developed are applicable at higher levels as well. 2 FTP Case Study The application protocol chosen for exemplification is FTP, described in RFC 959 <ref> [19] </ref>. It provides interactive file transfer and relies on Transmission Control Protocol (TCP) a transport protocol in the TCP/IP hierarchy of protocols [4]. We decompose the problem domain into three components, each of which will be modeled separately, as shown in Fig. 1. Fig. 1. Problem domain decomposition 1.
Reference: 20. <author> Riese, M., </author> <title> Model-based Diagnosis of Communication Protocols, </title> <type> PhD Thesis, </type> <institution> Swiss Federal Institute of Technology, Lausanne, </institution> <year> 1993. </year>
Reference-contexts: No subset of A is a solution. 4 Representation and Reasoning We model each of the components of Fig. 1 user interaction, protocol, configuration as a separate PCSP knowledge base. Protocol diagnosis has been studied previously as a constraint satisfaction problem [3] [9] <ref> [20] </ref>. We apply a similar approach here to the FTP protocol. We demonstrate here that user interaction diagnosis can also be modeled as a constraint satisfaction problem, in particular by introducing constraints that reflect user assumptions. <p> The idea of using model-based techniques to diagnose communication protocols based on extended finite automata is not new. To our knowledge, at least three protocol diagnosis systems have been proposed [3] [9] <ref> [20] </ref>. All these approaches attempt to diagnose protocols by analyzing conflicts between observations and the protocol model. This implies that observations must somehow be associated with the model. The representation approach we are using is similar to the one used by Riese in [20]. <p> diagnosis systems have been proposed [3] [9] <ref> [20] </ref>. All these approaches attempt to diagnose protocols by analyzing conflicts between observations and the protocol model. This implies that observations must somehow be associated with the model. The representation approach we are using is similar to the one used by Riese in [20]. The FTP protocol specification as an extended finite transducer is translated into a standard CSP form. Where Riese is using a specialized algorithm for solving the diagnosis problem, he calls it HMDP, we are using a variant of a standard PCSP algorithm to produce the set of minimal diagnoses.
Reference: 21. <author> Wang, C.J. and Liu, </author> <title> M.T., A test suite generation method for extended finite state machines using axiomatic semantics approach, Protocol Specification, Testing and Verification, </title> <booktitle> XII, </booktitle> <pages> 29-43, </pages> <year> 1992. </year> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: Since simple FSMs have limited expressive power in representing such notions as timers, logical conditions, etc., a more powerful formalism is needed, and thus extended finite automata have been used for protocol testing and specification analysis or diagnosis [13] <ref> [21] </ref>. The idea of using model-based techniques to diagnose communication protocols based on extended finite automata is not new. To our knowledge, at least three protocol diagnosis systems have been proposed [3] [9] [20]. All these approaches attempt to diagnose protocols by analyzing conflicts between observations and the protocol model.
References-found: 21

