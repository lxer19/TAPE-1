URL: http://www.cs.wisc.edu/~beyer/papers/pa_coopis98.ps.gz
Refering-URL: http://www.cs.wisc.edu/~beyer/beyer.html
Root-URL: http://www.cs.wisc.edu
Email: beyer,miron,raghu@cs.wisc.edu  
Title: Protecting the Quality of Service of Existing Information Systems  
Author: Kevin S. Beyer Miron Livny Raghu Ramakrishnan 
Address: Wisconsin, Madison WI 53706, USA  
Affiliation: Computer Sciences Department University of  
Abstract: Organizations that offer external access to their data need a mechanism that ensures a desired level of service for local users. We propose such a mechanism, called the provider agent (PA) architecture, that protects local users by ensuring a (DBA specified) quality of service for local requests in the face of computational demands made by external requests. The PA is a general purpose solution that enhances most information systems currently available. The novelty of our approach is the combination of request profiling with load control mechanisms to improve both protection and performance, while not requiring any modifications to the underlying information system. We demonstrate the effectiveness of the proposed techniques with a prototype PA for a commercial DBMS. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. M. Andrade. </author> <title> Open on-line transaction processing with the TUXEDO system. </title> <booktitle> IEEE CompCon, </booktitle> <year> 1992. </year> <note> also http://www.- beasys.com/. </note>
Reference-contexts: An exception to this is DSS Administrator which appears to use the profile information to schedule the queries from their Decision Support System (DSS) product. TP Monitors are sold by Transarc (Encina [9]), BEA (Tuxedo, Top End <ref> [1, 22] </ref>), and IBM (CICS [13]), to name a few. The main thrust of a TP monitor is to coordinate transactions through a TP system, but TP monitors do offer priority queuing and load balancing [2].
Reference: [2] <author> P. Bernstein. </author> <title> Transaction processing monitors. </title> <journal> Communications of the ACM, </journal> <volume> 33(11), </volume> <month> November </month> <year> 1990. </year>
Reference-contexts: TP Monitors are sold by Transarc (Encina [9]), BEA (Tuxedo, Top End [1, 22]), and IBM (CICS [13]), to name a few. The main thrust of a TP monitor is to coordinate transactions through a TP system, but TP monitors do offer priority queuing and load balancing <ref> [2] </ref>. The priorities are controlled by the applications, not through profiling, and their load balancing just tries to keep the machines in the TP system equally busy. 8. Future Work We have identified a number of areas for future work.
Reference: [3] <author> K. P. Brown, M. Mehta, M. J. Carey, and M. Livny. </author> <title> Towards automated performance tuning for complex workloads. </title> <booktitle> In Proc. of the 20th VLDB Conf., </booktitle> <address> Santiago, Chile, </address> <year> 1994. </year>
Reference-contexts: Related Work Our work inherits much from the work on operating system load control [11, 6]. Our contribution is in applying load control in a novel way to protect the local QoS. A significant amount of work on database scheduling has also been completed, especially on memory allocation <ref> [12, 10, 17, 18, 3, 5] </ref>. The main difference between our work and the database scheduling is that ours exists outside the database and is not specific to any particular DBMS. A few vendors have some load control mechanisms similar to ours.
Reference: [4] <author> S. Chawathe et al. </author> <title> The TSIMMIS project: Integration of heterogeneous information sources. </title> <booktitle> In Proc. of IPSJ Conf., </booktitle> <pages> pages 718, </pages> <address> Tokyo, Japan, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: The PA mediates between the provider and the external world (see Figure 1), and extends the traditional integration wrapper (e.g., <ref> [4, 23] </ref>) with resource management. The architecture is designed to work with any type of data provider available today, for example, a DBMS, a Web server, an FTP server, or even data generating programs like a simulation system.
Reference: [5] <author> D. L. Davidson and G. Graefe. </author> <title> Dynamic resource brokering for multi-user query execution. </title> <booktitle> In SIGMOD 95, </booktitle> <pages> pages 281 292, </pages> <address> San Jose, CA, 1995. </address> <publisher> ACM. </publisher>
Reference-contexts: Related Work Our work inherits much from the work on operating system load control [11, 6]. Our contribution is in applying load control in a novel way to protect the local QoS. A significant amount of work on database scheduling has also been completed, especially on memory allocation <ref> [12, 10, 17, 18, 3, 5] </ref>. The main difference between our work and the database scheduling is that ours exists outside the database and is not specific to any particular DBMS. A few vendors have some load control mechanisms similar to ours.
Reference: [6] <author> P. Denning. </author> <title> The working set model for program behavior. </title> <journal> Communications of the ACM, </journal> <volume> 11(5):323333, </volume> <month> May </month> <year> 1968. </year>
Reference-contexts: Each of the mechanisms presented in this section describes a way that the PA can control when and how a particular external job is run. The merits of load control are well known, dating back to operating systems work of the '60s and '70s <ref> [11, 6] </ref>. The novelty of our approach is in extending these ideas to the protection of the local QoS in the presence of an unknown external workload without changing the existing system, in our definition of fractional MPL, and in combining load control with query profiling. 4.1. <p> Related Work Our work inherits much from the work on operating system load control <ref> [11, 6] </ref>. Our contribution is in applying load control in a novel way to protect the local QoS. A significant amount of work on database scheduling has also been completed, especially on memory allocation [12, 10, 17, 18, 3, 5].
Reference: [7] <author> W. Du, R. Krishnamurthy, and M.-C. Shan. </author> <title> Query optimization in heterogeneous dbms. </title> <booktitle> In Proc. of the 18th VLDB Conf., </booktitle> <pages> pages 277291, </pages> <year> 1992. </year>
Reference-contexts: A work-around to these limitations is to replicate the profiler in the PA, similar to the approach taken in the Pegasus project at HP <ref> [7] </ref>. The profiler will frequently consult catalog information, so to avoid placing an additional strain on the provider, all of the needed catalog information should also be replicated within the PA.
Reference: [8] <author> D. Eichman. </author> <title> Ethical web agents. </title> <booktitle> In Electronic Proc. of the Second World Wide Web Conf. '94: Mosaic and the Web, </booktitle> <year> 1994. </year> <note> http://www.ncsa.uiuc.edu/SDG/IT94/Proceedings/- Agents/eichmann.ethical/eichmann.html. </note>
Reference-contexts: The service provided by the indexing sites is invaluable to web users that are trying to locate information, so simply rejecting the request is probably not acceptable. The current solution is to rely upon the agent writers to space requests to an individual server <ref> [15, 8] </ref>. The first problem with this approach is that the web site administrator must rely on the agent writer to be conscientious and careful when writing it.
Reference: [9] <author> J. L. Eppinger and S. Dietzen. Encina: </author> <title> Modular transaction processing. </title> <booktitle> IEEE CompCon, </booktitle> <year> 1992. </year> <note> also http://www.- transarc.com. </note>
Reference-contexts: An exception to this is DSS Administrator which appears to use the profile information to schedule the queries from their Decision Support System (DSS) product. TP Monitors are sold by Transarc (Encina <ref> [9] </ref>), BEA (Tuxedo, Top End [1, 22]), and IBM (CICS [13]), to name a few. The main thrust of a TP monitor is to coordinate transactions through a TP system, but TP monitors do offer priority queuing and load balancing [2].
Reference: [10] <author> C. Faloutsos, R. Ng, and T. Sellis. </author> <title> Predictive load control for flexible buffer allocation. </title> <booktitle> In Proc. of the 17th Int'l VLDB Conf., </booktitle> <address> Barcelona, Spain, </address> <month> September </month> <year> 1991. </year>
Reference-contexts: Related Work Our work inherits much from the work on operating system load control [11, 6]. Our contribution is in applying load control in a novel way to protect the local QoS. A significant amount of work on database scheduling has also been completed, especially on memory allocation <ref> [12, 10, 17, 18, 3, 5] </ref>. The main difference between our work and the database scheduling is that ours exists outside the database and is not specific to any particular DBMS. A few vendors have some load control mechanisms similar to ours.
Reference: [11] <author> D. Ferrari. </author> <title> Computer Systems Performance Evaluation. </title> <publisher> Prentice Hall, </publisher> <year> 1978. </year>
Reference-contexts: Each of the mechanisms presented in this section describes a way that the PA can control when and how a particular external job is run. The merits of load control are well known, dating back to operating systems work of the '60s and '70s <ref> [11, 6] </ref>. The novelty of our approach is in extending these ideas to the protection of the local QoS in the presence of an unknown external workload without changing the existing system, in our definition of fractional MPL, and in combining load control with query profiling. 4.1. <p> Related Work Our work inherits much from the work on operating system load control <ref> [11, 6] </ref>. Our contribution is in applying load control in a novel way to protect the local QoS. A significant amount of work on database scheduling has also been completed, especially on memory allocation [12, 10, 17, 18, 3, 5].
Reference: [12] <author> R. B. Hagmann and D. Ferrari. </author> <title> Performance analysis of several back-end database architectures. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 11(1):126, </volume> <month> March </month> <year> 1986. </year>
Reference-contexts: Related Work Our work inherits much from the work on operating system load control [11, 6]. Our contribution is in applying load control in a novel way to protect the local QoS. A significant amount of work on database scheduling has also been completed, especially on memory allocation <ref> [12, 10, 17, 18, 3, 5] </ref>. The main difference between our work and the database scheduling is that ours exists outside the database and is not specific to any particular DBMS. A few vendors have some load control mechanisms similar to ours.
Reference: [13] <institution> IBM Corp. CICS product family home page. </institution> <address> http://www.- software.ibm.com/ts/cics/. </address>
Reference-contexts: An exception to this is DSS Administrator which appears to use the profile information to schedule the queries from their Decision Support System (DSS) product. TP Monitors are sold by Transarc (Encina [9]), BEA (Tuxedo, Top End [1, 22]), and IBM (CICS <ref> [13] </ref>), to name a few. The main thrust of a TP monitor is to coordinate transactions through a TP system, but TP monitors do offer priority queuing and load balancing [2].
Reference: [14] <author> IBM Corp. </author> <title> MVS workload manager / system resource manager. </title> <address> http://www.s390.ibm.com/products/mvs/wlm/- index.html. </address>
Reference-contexts: The main difference between our work and the database scheduling is that ours exists outside the database and is not specific to any particular DBMS. A few vendors have some load control mechanisms similar to ours. IBM's DB2 for MVS <ref> [14] </ref> offers many tuning parameters, but it does not have our fractional MPL and profiling mechanisms. NCR's DBQM [20], which was developed concurrently with our research, includes many of the features described in this paper, but is specific to NCR's Teradata DBMS.
Reference: [15] <author> M. Koster. </author> <title> Guidelines for robot writers. </title> <address> http://info.- webcrawler.com/mak/projects/robots/guidelines.html. </address>
Reference-contexts: The service provided by the indexing sites is invaluable to web users that are trying to locate information, so simply rejecting the request is probably not acceptable. The current solution is to rely upon the agent writers to space requests to an individual server <ref> [15, 8] </ref>. The first problem with this approach is that the web site administrator must rely on the agent writer to be conscientious and careful when writing it.
Reference: [16] <author> M. Litzkow, M. Livny, and M. W. </author> <title> Mutka. Condor a hunter of idle workstations. </title> <booktitle> In Proc. of the 8th Intl. Conf. of Distributed Computing Systems, </booktitle> <pages> pages 104111, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: Feedback In this section, we describe a feedback mechanism that monitors the utilization of key resources, for example, the disk drives, CPU, network, and memory, to decided when to start and stop jobs. This mechanism can detect periods of relatively low activity, similar to the way the Condor system <ref> [16] </ref> finds idle resources to run batch programs. If the local workload experiences periods of high and low activity throughout the day, the PA can run external jobs during the periods of low activity.
Reference: [17] <author> M. Mehta and D. J. DeWitt. </author> <title> Dynamic memory allocation for multiple-query workloads. </title> <booktitle> In Proc. of the 19th VLDB Conf., </booktitle> <address> Dublin, Ireland, </address> <year> 1993. </year>
Reference-contexts: Related Work Our work inherits much from the work on operating system load control [11, 6]. Our contribution is in applying load control in a novel way to protect the local QoS. A significant amount of work on database scheduling has also been completed, especially on memory allocation <ref> [12, 10, 17, 18, 3, 5] </ref>. The main difference between our work and the database scheduling is that ours exists outside the database and is not specific to any particular DBMS. A few vendors have some load control mechanisms similar to ours.
Reference: [18] <author> M. Mehta, V. Soloviev, and D. J. DeWitt. </author> <title> Batch scheduling in parallel database systems. </title> <booktitle> In Proc. of the 9th Intl. Conf. on Data Engineering, </booktitle> <address> Vienna, Austria, </address> <month> April </month> <year> 1993. </year>
Reference-contexts: Related Work Our work inherits much from the work on operating system load control [11, 6]. Our contribution is in applying load control in a novel way to protect the local QoS. A significant amount of work on database scheduling has also been completed, especially on memory allocation <ref> [12, 10, 17, 18, 3, 5] </ref>. The main difference between our work and the database scheduling is that ours exists outside the database and is not specific to any particular DBMS. A few vendors have some load control mechanisms similar to ours.
Reference: [19] <author> MicroStrategy. </author> <note> http://www.strategy.com/. </note>
Reference-contexts: Two other classes of applications that extend the scheduling of DBMSs are available: Query Analyzers and Transaction Processing (TP) Monitors. Query analyzer products are sold, for example, by Platinum Technologies (Plan Analyzer, DB Analyzer, SQL-Spy, Detector) [21], Blue Lagoon (DBProfiler), and MicroStrategy (DSS Administrator) <ref> [19] </ref>. The analyzers provide a feature like our profiler to estimate the cost of executing a query before actually running it.
Reference: [20] <institution> NCR DBQM. </institution> <note> http://www3.ncr.com/teradata/dbqm.pdf. </note>
Reference-contexts: A few vendors have some load control mechanisms similar to ours. IBM's DB2 for MVS [14] offers many tuning parameters, but it does not have our fractional MPL and profiling mechanisms. NCR's DBQM <ref> [20] </ref>, which was developed concurrently with our research, includes many of the features described in this paper, but is specific to NCR's Teradata DBMS. In particular, DBQM uses both feedback and query profiles to schedule the external workload.
Reference: [21] <institution> Platinum Technologies. </institution> <note> http://www.platinum.com/. </note>
Reference-contexts: Two other classes of applications that extend the scheduling of DBMSs are available: Query Analyzers and Transaction Processing (TP) Monitors. Query analyzer products are sold, for example, by Platinum Technologies (Plan Analyzer, DB Analyzer, SQL-Spy, Detector) <ref> [21] </ref>, Blue Lagoon (DBProfiler), and MicroStrategy (DSS Administrator) [19]. The analyzers provide a feature like our profiler to estimate the cost of executing a query before actually running it.
Reference: [22] <author> R. Smerik. </author> <title> An overview of TOP END. </title> <booktitle> IEEE CompCon, </booktitle> <year> 1992. </year>
Reference-contexts: An exception to this is DSS Administrator which appears to use the profile information to schedule the queries from their Decision Support System (DSS) product. TP Monitors are sold by Transarc (Encina [9]), BEA (Tuxedo, Top End <ref> [1, 22] </ref>), and IBM (CICS [13]), to name a few. The main thrust of a TP monitor is to coordinate transactions through a TP system, but TP monitors do offer priority queuing and load balancing [2].
Reference: [23] <author> M. Stonebraker et al. Mariposa: </author> <title> a wide-area distributed system. </title> <journal> VLDB Journal, </journal> <pages> pages 4863, </pages> <year> 1996. </year>
Reference-contexts: The PA mediates between the provider and the external world (see Figure 1), and extends the traditional integration wrapper (e.g., <ref> [4, 23] </ref>) with resource management. The architecture is designed to work with any type of data provider available today, for example, a DBMS, a Web server, an FTP server, or even data generating programs like a simulation system.
References-found: 23

