URL: ftp://ftp.cs.bham.ac.uk/pub/authors/W.B.Langdon/papers/GPlist_aigp2.ps
Refering-URL: http://www.cs.bham.ac.uk/~wbl/WBL_papers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Data Structures and Genetic Programming  
Author: W. B. Langdon 
Affiliation: Dept. of Computer Science, University College London  
Abstract-found: 0
Intro-found: 1
Reference: [AHU87] <author> A V Aho, J E Hopcroft, and J D Ullman. </author> <title> Data Structures and Algorithms. </title> <publisher> Addison-Wesley, </publisher> <year> 1987. </year>
Reference-contexts: This abstract reports the successful evolution a list data structure, compares the use of Pareto selection and demes and describes the directed choice of crossover points. 2 Evolving a list Aho et al's <ref> [AHU87] </ref> definition of a list gives ten list operations (Makenull, Retrieve, Insert, Delete, End, First, Next, Previous, Locate and Printlist). In the GP each operation is implemented as a separate evolving tree. Each member of the GP population contains all ten operations, plus ADFs.
Reference: [Koz94] <author> John R. Koza. </author> <title> Genetic Programming II: Automatic Discovery of Reusable Programs. </title> <publisher> MIT Press, </publisher> <address> Cambridge Massachusetts, </address> <month> May </month> <year> 1994. </year>
Reference: [Lan95] <author> W. B. Langdon. </author> <title> Evolving data structures using genetic programming. </title> <editor> In L. Eshelman, editor, </editor> <booktitle> Genetic Algorithms: Proceedings of the Sixth International Conference (ICGA95), </booktitle> <address> San Francisco, CA., USA, </address> <month> July </month> <year> 1995. </year> <note> Morgan Kaufmann. To appear. Submitted to ICGA-95 GP workshop, 19 July 1995 4 </note>
Reference-contexts: introduction of data structures within GP. The expectation is that the use of data structures will prove as useful to GP as code structuring has already been shown to be. So far the important result is that GP can evolve simple data structures, such as stacks and queues <ref> [Lan95] </ref>.
Reference: [Tel94] <author> Astro Teller. </author> <title> Turing completeness in the language of genetic programming with indexed memory. </title> <booktitle> In Proceedings of the 1994 IEEE World Congress on Computational Intelligence, </booktitle> <volume> volume 1. </volume> <publisher> IEEE Press, </publisher> <month> Jun </month> <year> 1994. </year>
References-found: 4

