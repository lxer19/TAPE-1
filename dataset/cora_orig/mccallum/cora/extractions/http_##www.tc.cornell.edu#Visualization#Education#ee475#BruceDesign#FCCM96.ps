URL: http://www.tc.cornell.edu/Visualization/Education/ee475/BruceDesign/FCCM96.ps
Refering-URL: http://www.tc.cornell.edu/Visualization/Education/ee475/
Root-URL: http://www.tc.cornell.edu
Title: IEEE Symposium on FPGAs for Custom Computing Machines, Apr.17-19,1996, Napa,California (FCCM'96) Aizup A Pipelined Processor
Author: Yamin Li and Wanming Chu 
Web: yamin@u-aizu.ac.jp, w-chu@u-aizu.ac.jp  
Address: Aizu-Wakamatsu, 965-80 Japan  
Affiliation: Computer Architecture Laboratory The University of Aizu  
Abstract: This paper describes a pipelined processor (named Aizup) design and implementation for the exercise of Computer Architecture/Organization Education at the University of Aizu. The Aizup pipeline has four stages and deals with data dependency and control dependency. The Aizup was designed at Cadence environment and implemented on Xilinx XC4006PC84 FPGA chip. We ask students to design the processor, to perform functional simulations, to implement the design on the chip, and to measure the chip with Logic Analyzer. The exercise course is helpful to students to understand the operations of pipelined processors and to master the design methodologies and the use of measuring instruments. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Iwanczuk, </author> <title> "Using the XC4000 RAM Capability," The Programmable Logic Data Book. </title> <address> Xilinx, </address> <year> 1994. </year>
Reference-contexts: It becomes possible to access memory once at each cycle. Comparing to register access, the memory access control circuit is more complicated. Especially, in the memory write operation (WE), the glitches on the WE line or glitches on the address lines while WE is active might cause problems <ref> [1] </ref>. An example of a glitch-free WE generation circuit is given in [1], but the memory access will take more than one clock cycle. The performance will suffer. Here we show a glitch-free WE and address generation circuit that can perform memory access once on every clock cycle. <p> Especially, in the memory write operation (WE), the glitches on the WE line or glitches on the address lines while WE is active might cause problems <ref> [1] </ref>. An example of a glitch-free WE generation circuit is given in [1], but the memory access will take more than one clock cycle. The performance will suffer. Here we show a glitch-free WE and address generation circuit that can perform memory access once on every clock cycle. An example of 32x8 data memory module is shown in Figure 4.
Reference: [2] <author> J. Hennessy and D. Patterson, </author> <title> Computer Architecture, A Quantitative Approach, </title> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction In the University of Aizu, there are more than sixty sets of exercise equipments for Computer Architecture/Organization Education <ref> [2] </ref> [3]. One set consists of a SUN workstation with installed Cadence/Xilinx design tools [4], an evaluation board with mounted Xilinx XC4006PC84 FPGA chip [5], and a Logic Analyzer. We developed a RISC pipelined model (Aizup) and implemented it on the Xilinx chip for Computer Architecture/Organization Education [9].
Reference: [3] <author> D. Patterson and J. Hennessy, </author> <title> Computer Organization & Design: The Hardware/Software Interface, </title> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <year> 1994. </year>
Reference-contexts: 1 Introduction In the University of Aizu, there are more than sixty sets of exercise equipments for Computer Architecture/Organization Education [2] <ref> [3] </ref>. One set consists of a SUN workstation with installed Cadence/Xilinx design tools [4], an evaluation board with mounted Xilinx XC4006PC84 FPGA chip [5], and a Logic Analyzer. We developed a RISC pipelined model (Aizup) and implemented it on the Xilinx chip for Computer Architecture/Organization Education [9].
Reference: [4] <institution> XACT Development System - XACT User Guide, Xilinx, </institution> <month> April, </month> <year> 1994. </year>
Reference-contexts: 1 Introduction In the University of Aizu, there are more than sixty sets of exercise equipments for Computer Architecture/Organization Education [2] [3]. One set consists of a SUN workstation with installed Cadence/Xilinx design tools <ref> [4] </ref>, an evaluation board with mounted Xilinx XC4006PC84 FPGA chip [5], and a Logic Analyzer. We developed a RISC pipelined model (Aizup) and implemented it on the Xilinx chip for Computer Architecture/Organization Education [9].
Reference: [5] <institution> XACT Development System - XACT Libraries Guide, Xilinx, </institution> <month> April, </month> <year> 1994. </year>
Reference-contexts: 1 Introduction In the University of Aizu, there are more than sixty sets of exercise equipments for Computer Architecture/Organization Education [2] [3]. One set consists of a SUN workstation with installed Cadence/Xilinx design tools [4], an evaluation board with mounted Xilinx XC4006PC84 FPGA chip <ref> [5] </ref>, and a Logic Analyzer. We developed a RISC pipelined model (Aizup) and implemented it on the Xilinx chip for Computer Architecture/Organization Education [9].
Reference: [6] <author> Y. Li and W. Chu, </author> <title> "Aizup A Pipelined Processor Design and Its Implementation on XILINX FPGA Chip," </title> <booktitle> Lecture Notes, </booktitle> <institution> The University of Aizu, </institution> <year> 1995. </year>
Reference-contexts: The contents of the exercise include analysis of processor instruction set, design of datapath and control unit, circuit schematic, functional simulation, netlist generation, pin assignment, placement and routing, Intel mcs-format file generation, file download, and measurement and check of the chip <ref> [6] </ref>. Because students have mastered the use of Cadence in Logic Circuit Design course, they can finish the exercise within one semester, say 45 hours. In this paper, we will introduce the pipelined Aizup model and experiences in designing the circuits with Xilinx XC4000 library.
Reference: [7] <author> Y. Li and W. Chu, </author> <title> "Design and Performance Analysis of A Multiple-threaded Multiple-pipelined Architecture," </title> <booktitle> Proc. of the Second International Conference on High Performance Computing, </booktitle> <address> New Delhi, India, </address> <month> December </month> <year> 1995. </year>
Reference-contexts: The Aizup model that we designed and implemented does not contain any floating-point instruction. We have designed a Multiple-threaded Multiple-pipelined processor including floating-point unit using Toshiba TC180/183E/C ASIC library <ref> [7] </ref> [8]. The floating-point unit can perform addition, subtraction, multiplication, division, square root, and conversion between integer and floating-point numbers. We are now investigating the possibility of implementation of the floating-point unit on FPGA chips for advanced exercise course.
Reference: [8] <author> Y. Li and W. Chu, </author> <title> "A New Non-Restoring Square Root Algorithm and Its VLSI Implementations," </title> <note> 1996, to be submitted. </note>
Reference-contexts: The Aizup model that we designed and implemented does not contain any floating-point instruction. We have designed a Multiple-threaded Multiple-pipelined processor including floating-point unit using Toshiba TC180/183E/C ASIC library [7] <ref> [8] </ref>. The floating-point unit can perform addition, subtraction, multiplication, division, square root, and conversion between integer and floating-point numbers. We are now investigating the possibility of implementation of the floating-point unit on FPGA chips for advanced exercise course.
Reference: [9] <author> Y. Li and W. Chu, </author> <title> "Using Computer Architecture/Organization at the University of Aizu," </title> <booktitle> Second Annual Workshop on Computer Architecture Education, </booktitle> <address> San Jose, California, Febru-ary, </address> <year> 1996. </year> <month> 106 </month>
Reference-contexts: One set consists of a SUN workstation with installed Cadence/Xilinx design tools [4], an evaluation board with mounted Xilinx XC4006PC84 FPGA chip [5], and a Logic Analyzer. We developed a RISC pipelined model (Aizup) and implemented it on the Xilinx chip for Computer Architecture/Organization Education <ref> [9] </ref>. The contents of the exercise include analysis of processor instruction set, design of datapath and control unit, circuit schematic, functional simulation, netlist generation, pin assignment, placement and routing, Intel mcs-format file generation, file download, and measurement and check of the chip [6].
References-found: 9

