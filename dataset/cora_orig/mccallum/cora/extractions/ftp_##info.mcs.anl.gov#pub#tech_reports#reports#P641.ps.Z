URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P641.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts97.htm
Root-URL: http://www.mcs.anl.gov
Email: fdisz,papka,stevensg@mcs.anl.gov  
Title: UbiWorld: An Environment Integrating Virtual Reality, Supercomputing, and Design  
Author: Terrence Disz, Michael E. Papka, and Rick Stevens 
Address: Argonne, IL 60439  
Affiliation: Mathematics and Computer Science Division Argonne National Laboratory  
Abstract: UbiWorld is a concept being developed by the Futures Laboratory group at Argonne National Laboratory that ties together the notion of ubiquitous computing (Ubicomp) with that of using virtual reality for rapid prototyping. The goal is to develop an environment where one can explore Ubicomp-type concepts without having to build real Ubicomp hardware. The basic notion is to extend object models in a virtual world by using distributed wide area heterogeneous computing technology to provide complex networking and processing capabilities to virtual reality objects. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Terrence L. Disz, Remy Evard, Mark W. Hender-son, William Nickless, Robert Olson, Michael E. Papka, and Rick Stevens, </author> <title> "Designing the future of collaborative science: Argonne's futures laboratory," </title> <journal> IEEE Parallel and Distributed Technology Systems and Applications, </journal> <volume> vol. 3, no. 2, </volume> <pages> pp. 14-21, </pages> <month> Summer </month> <year> 1995. </year>
Reference-contexts: 1 Introduction In the Futures Laboratory <ref> [1] </ref> in the Mathematics and Computer Science (MCS) Division at Argonne National Laboratory (ANL), our research agenda is driven partly by discussions of advanced computing scenarios.
Reference: [2] <author> Mark Weiser, </author> <booktitle> "The computer for the 21st century," Scientific American, </booktitle> <volume> vol. 265, no. 3, </volume> <pages> pp. 94-104, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: The next wave of computing will be ubiquitous computing, characterized by many computers per person and a transparent interface, used to amplify one's powers, not replace them. Ubiquitous computing means computers will become as invisible to us today as text is <ref> [2] </ref>. There was a time when the written word was the sole province of the experts, guarded and used sparingly, much as computing has been. Text technology has undergone a transformation from being written on clay tablets, then coarse paper, up to today's refined paper and display technology.
Reference: [3] <author> Mark Weiser, </author> <title> "The world is not a desktop," </title> <journal> Interactions, </journal> <volume> vol. 1, no. 1, </volume> <pages> pp. 7-8, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: We are already beginning to see this happen with the integration of computers in automobiles: the driver is really unaware of the computer and its function. The ubiquitous computing philosophy originated at Xerox Parc in 1988 <ref> [3] </ref>, pioneered by Mark Weiser. He conceived of Ubicomp as nonintrusive, mobile, flexible computing, highly integrated into the working and living environment. Ubicomp is not virtual reality (VR). VR techniques, which put people into artificial worlds, primarily pose a computing and graphics horsepower problem.
Reference: [4] <author> Ian Foster, Michael E. Papka, and Rick Stevens, </author> <title> "Tools for distributed collaborative environments: A research agenda," </title> <booktitle> in Proceedings of the Fifth IEEE International Symposium on High Performance Distributed Compututing. IEEE, </booktitle> <year> 1996, </year> <pages> pp. 23-29, </pages> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: The computer science issues span all areas|networking, operating systems, distribution of memory and processing, naming, resource management, etc. A general discussion of these issues can be found in <ref> [4] </ref>. Engineering will have to make advances in nanotechnology to manufacture the devices we can foresee. No one knows the social implications of everyone's having full-time computing and network access.
Reference: [5] <author> Mark Weiser, </author> <title> "Some computer science issues in ubiquitous computing," </title> <journal> Communications of the ACM, </journal> <volume> vol. 36, no. 7, </volume> <pages> pp. 74-83, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: We discuss many other examples, limited only by our imagination. Research in ubiquitous computing conducted at Xe-rox Parc followed standard experimental science protocols <ref> [5] </ref>. Devices were conceived and prototypes constructed and tried out on willing subjects. There were three prototypes of note: the Xerox ParcTab, a palm-sized device; the Pad, a notebook-sized device; and the Liveboard, a wall hanging device.
Reference: [6] <author> Roy Want, Bill N. Schilit, Norman I. Adams, Rich Gold, Karin Petersen, David Goldberg, John R. Ellis, and Mark Weiser, </author> <title> "The parctab ubiquitous computing experiment," </title> <type> Tech. Rep. </type> <institution> CSL-95-1, Xerox PARC, Xerox Palo Alto Research Center, </institution> <month> March </month> <year> 1995. </year>
Reference-contexts: Devices were conceived and prototypes constructed and tried out on willing subjects. There were three prototypes of note: the Xerox ParcTab, a palm-sized device; the Pad, a notebook-sized device; and the Liveboard, a wall hanging device. Applications were constructed to perform e-mail, take notes, schedule meetings, check weather, etc. <ref> [6] </ref>. The primary lesson we take from the work, however, is that technology today is nowhere near what is required to design and perform experiments in truly ubiquitous computing. A discussion of the many compromises that Xerox had to make in the development of the ParcTab can be found in [6]. <p> <ref> [6] </ref>. The primary lesson we take from the work, however, is that technology today is nowhere near what is required to design and perform experiments in truly ubiquitous computing. A discussion of the many compromises that Xerox had to make in the development of the ParcTab can be found in [6]. 3 UbiWorld UbiWorld is an experimental system combining virtual reality, advanced networking, and supercomputing to explore the implications of ubiquitous computing. We use a virtual reality system as a design and evaluation environment. Instead of actually building devices, we use VR techniques to model the representation of devices.
Reference: [7] <author> C. Cruz-Neira, D. J. Sandin, and T. A. De-Fanti, </author> <title> "Surround-screen projection-based virtual reality: </title> <booktitle> The design and implementation of the CAVE," in Computer Graphics (Proceedings of SIGGRAPH '93). ACM SIGGRAPH, </booktitle> <month> August </month> <year> 1993, </year> <pages> pp. 135-142, </pages> <publisher> Addison Wesley. </publisher>
Reference-contexts: It serves to focus those efforts and leverages our long-standing expertise in software engineering and our strong development environment. Starting with the CAVE TM family of display devices we integrate tools for the construction of 3D objects into the existing library <ref> [7] </ref>. Using these objects as models, we can then imbed new information technology within them. These products might be handheld computers, intelligent paper, image-processing binoculars, desks, clothing, jewelry, cups, eyeglasses, or carpeting. <p> The CAVE environment, originally developed by the Electronic Visualization Laboratory (EVL) at the University of Illinois at Chicago, produces a 3D stereo effect by displaying in alternating succession the left and right eye views of the scene as rendered from the viewer's perspective <ref> [7] </ref>. These views are then seen by the user through a pair of LCD shutter glasses whose lenses open and close forty-eight times a second in synchronization with the left- and right-eye views. <p> This is yet another active research project spawned by requirements of the UbiWorld project. 5.2 Software Although more tools are required, we have a good group of software already available to us for use in the UbiWorld project. 5.2.1 CAVElib The CAVE library <ref> [7] </ref>, developed at EVL to work with the CAVE family of display devices, provides basic VR functionality and viewer-centered perspective transforms automatically. This frees the VR programmer to focus on the graphics of the problem at hand, not the viewer perspective problem.
Reference: [8] <author> M. McKenna and David Zeltzer, </author> <title> "Three dimensional visual display systems for virtual environments," </title> <journal> Presence, </journal> <volume> vol. 1, no. 4, </volume> <pages> pp. 421-458, </pages> <year> 1992. </year>
Reference-contexts: If we were to attempt a resolution close to the capabilities of the human eye, we would need a resolution of 4,800 x 3,800 <ref> [8] </ref>.
Reference: [9] <author> T. L. Disz, M. E. Papka, M. Pellegrino, and R. Stevens, </author> <title> "Sharing visualization experiences among remote virtual environments," </title> <booktitle> in International Workshop on High Performance Computing for Computer Graphics and Visualization. </booktitle> <year> 1995, </year> <pages> pp. 217-237, </pages> <publisher> Springer-Verlag. </publisher>
Reference-contexts: The CAVE library provides basic navigation functions, tracking of the user and wand, and interaction with the wand buttons and joystick. 5.2.2 CAVEcomm The CAVEcomm library is a communications library that aids developers of virtual reality applications in the area of remote communications <ref> [9, 10] </ref>. The remote communications can be either virtual reality device to virtual reality device or virtual reality device to supercomputer. Using the CAVEcomm library, users register their virtual reality applications and/or supercomputing simulations with a broker. The broker process handles the connections of separate entities.
Reference: [10] <author> Terrence L. Disz, Michael E. Papka, Michael Pel-legrino, and Matthew Szymanski, </author> <title> CAVEcomm Users Manual v1.0, </title> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, </institution> <address> 1.0 edition, </address> <month> August </month> <year> 1996, </year> <month> ANL/MCS-TM-218. </month>
Reference-contexts: The CAVE library provides basic navigation functions, tracking of the user and wand, and interaction with the wand buttons and joystick. 5.2.2 CAVEcomm The CAVEcomm library is a communications library that aids developers of virtual reality applications in the area of remote communications <ref> [9, 10] </ref>. The remote communications can be either virtual reality device to virtual reality device or virtual reality device to supercomputer. Using the CAVEcomm library, users register their virtual reality applications and/or supercomputing simulations with a broker. The broker process handles the connections of separate entities.
Reference: [11] <author> Ivan Judson and Rick Stevens, </author> <title> "Architecture of an immersive virtual reality telepresence system," </title> <type> Private Communication, </type> <institution> Argonne National Laboratory, </institution> <month> April </month> <year> 1997. </year>
Reference-contexts: A prototype system demonstrating these features has been developed at ANL. A small robot mounted with a variety of video and audio components is connected to the CAVE; from within the CAVE, a user can navigate the robot and interact with the environment within which the robot lives <ref> [11] </ref>. This system is being used to test the requirements and to expose the difficult problems within a toolkit of this nature. 5.2.4 CAVE-VRML Modeler Three-dimensional virtual computer environments such as the CAVE should have the capacity to be a working development environment, not just an interactive display environment.
Reference: [12] <author> Rick Stevens, Terrence Disz, Robert Olson, Michael E. Papka, and Remy Evard, </author> <title> "Voyager: A next generation hypermedia server to support the construction of virtual organizastions," 1995, Grant Proposal, </title> <note> Submitted to DOE 1995. </note>
Reference-contexts: The created worlds and environments will be exportable to VRML. 5.2.5 VR Voyager The Voyager multimedia recording and playback system has been under development in the Futures Lab for the past two years <ref> [12] </ref>. It uses an IBM SP2 for multistream, multimedia record and playback of network-based sources.
Reference: [13] <author> Stefano Casciani, </author> <title> The Art Factory Disgn in Italy Towards the Third Millennium, </title> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: The type of advanced design philosophy we have in mind is embodied in publications such as Arbitare magazine and the book The Art Factory, Design in Italy Towards the Third Millenium <ref> [13] </ref>.
Reference: [14] <author> A. Liu, G. Tharp, L. French, S. Lai, and L. Stark, </author> <title> "Some of what one needs to know about using head-monunted displays to imporve teleoperator performance," </title> <journal> IEEE Transactions on robotics and Automation, </journal> <volume> vol. 9, no. 5, </volume> <pages> pp. 638-648, </pages> <year> 1993. </year>
Reference-contexts: The latency of the total system (including latency from the graphics system, the tracking systems, the networks and the computation engines) cannot exceed 100 ms - 1000 ms, depending on the user's experience level <ref> [14] </ref>.
Reference: [15] <author> Valerie E. Taylor, Milana Huang, Thomas Can-field, Rick Stevens, Daniel Reed, and Stephen Lamm, </author> <title> "Performance modeling of interactive, immersive virtual envrionments for finite element simulations," </title> <journal> The International Journal of Supercomputing Applications and High Performance Computing, </journal> <volume> vol. 10, no. 2/3, </volume> <pages> pp. 141-151, </pages> <month> Novem-ber </month> <year> 1996. </year>
Reference-contexts: Taylor et al. studied this phenomenon in multiple-tracked, network-connected VR systems and offered data and research issues to be investigated to mitigate the latencies in the system <ref> [15] </ref>. * Object Representation The representation of objects within the Ubi-World model must be flexible, so that they can be changed easily, without affecting the underlying simulation of the objects.
Reference: [16] <author> John Kunze, </author> <title> "Functional recommendations for Internet resource locators," Febuary 1995, Network Working Group, </title> <type> RFC 1738. </type>
Reference-contexts: Future environments will require the ability to name a much wider variety of objects with varying degrees of persistence and scope <ref> [16] </ref>. Mechanisms are also required for locating objects based on different criteria. Proposals for Universal Resource Names are a step in this direction but are designed for long-lived objects.
Reference: [17] <author> Ian Foster, Jonathan Geisler, William Nickless, Warren Smith, and Steve Tuecke, </author> <title> "Software infrastructure for the i-way high-performance distributed computing experiment," </title> <booktitle> in 5th IEEE Symposium on High Performance Distributed Computing. IEEE, </booktitle> <year> 1996. </year>
Reference-contexts: For SC'95, a team at ANL developed custom software for scheduling and mapping processes to network-based processors. The system deployed at SC'95 was the I-WAY Point of Presence (I-POP) machine. The I-POP machine was specifically set up to manage security issues and was configured specifically for the I-WAY <ref> [17] </ref>. It allowed use of process mapping and control software such as Nexus and MPI. Subsequent to the I-WAY project, a team at ANL has been integrating the Adaptive Communication Environment (ACE) [18] system into a parallel message-passing toolkit.
Reference: [18] <author> Douglas C. Schmidt, </author> <title> "The adaptive communication environment an object-oriented network programming toolkit for developing communication software," </title> <booktitle> in Sun Users Group Conference, </booktitle> <month> De-cember </month> <year> 1993. </year>
Reference-contexts: It allowed use of process mapping and control software such as Nexus and MPI. Subsequent to the I-WAY project, a team at ANL has been integrating the Adaptive Communication Environment (ACE) <ref> [18] </ref> system into a parallel message-passing toolkit.
References-found: 18

