URL: http://www.cse.unsw.edu.au/~cs3111/Postscript/ztc-guide.ps
Refering-URL: http://www.cse.unsw.edu.au/~cs3111/Postscript/
Root-URL: http://www.cse.unsw.edu.au
Title: ZTC: A Type Checker for Z Notation User's Guide  
Author: Xiaoping Jia 
Address: Chicago, Illinois, U.S.A.  
Affiliation: Division of Software Engineering School of Computer Science, Telecommunication, and Information Systems DePaul University  
Date: 2.01, May 1995  
Note: Version  Copyright c fl1993-1995, Xiaoping Jia  
Abstract: Permission is granted to copy and distribute this document free of charge for educational or nonprofit uses, provided that it is copied and distributed as a whole and without modification. Copying and distributionof this document and/or the ZTC tool for direct commercial gain without the author's written permission is prohibited. The ZTC tool is distributed without warranty. The author accepts no liability, explicit or implied, for its accuracy and fitness for any purpose. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.M. Spivey, </author> <title> The Z Notation, A Reference Manual, 2nd edition. </title> <publisher> Prentice Hall International, </publisher> <year> 1992. </year>
Reference: [2] <author> I. Hayes (ed.), </author> <title> Specification Case Studies, </title> <publisher> Prentice Hall International, </publisher> <address> 2nd edition, </address> <year> 1993. </year>
Reference: [3] <author> I. Houston, and S. King, </author> <title> CICS Project: Experiences and Results From the Use of Z in IBM, </title> <booktitle> Proc. VDM'91 Formal Software Development Methods, </booktitle> <volume> LNCS No. 552, </volume> <pages> pp. 588-596, </pages> <year> 1991. </year>
Reference: [4] <author> J.M. Spivey, </author> <title> An Introduction to Z and Formal Specification, </title> <journal> Software Engineering Journal, </journal> <volume> Vol. 4, No. 1, </volume> <month> January </month> <year> 1989, </year> <pages> pp. 40-50. </pages>
Reference: [5] <author> J.B. Wordsworth, </author> <title> Software Development with Z: A Practical Approach to Formal Methods in Software Engineering, </title> <publisher> Addison-Wesley, </publisher> <year> 1992. </year>
Reference: [6] <author> A. Diller, </author> <title> Z: An Introduction to Formal Methods, 2nd edition, </title> <publisher> John Wiley & Sons, </publisher> <year> 1994. </year>
Reference: [7] <author> P. King, </author> <title> Printing Z and Object-Z L A T E X Documents, 1990. Included in L A T E X2"distribution. </title> <note> Available at CTAN cites. </note>
Reference-contexts: You will have to get familiar with zed or oz before using ZTC. The zed package is described in Mike Spivey's A Guide to the zed Style Option [8], and the oz package is described in Paul King's Printing Z and Object-Z L A T E X Documents <ref> [7] </ref>. 3.1 Choosing a package ZTC now accepts specification written with either zed and oz packages. The two packages areNew 2.0! mostly compatible but not completely.
Reference: [8] <author> J.M. Spivey, </author> <title> A guide to the zed style option, </title> <note> 1990. Available via anonymous FTP at ftp.comlab.ox.ac.uk. </note>
Reference-contexts: Otherwise, skip this section, and use ZSL instead. You will have to get familiar with zed or oz before using ZTC. The zed package is described in Mike Spivey's A Guide to the zed Style Option <ref> [8] </ref>, and the oz package is described in Paul King's Printing Z and Object-Z L A T E X Documents [7]. 3.1 Choosing a package ZTC now accepts specification written with either zed and oz packages. The two packages areNew 2.0! mostly compatible but not completely.
Reference: [9] <author> L. Lamport, </author> <title> L A T E X: A Document Preparation System, 2nd edition, </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: If you are not familiar with L A T E X but want to learn about L A T E X, consult Leslie Lamport's L A T E X: A Document Preparation System <ref> [9] </ref>. Otherwise, skip this section, and use ZSL instead. You will have to get familiar with zed or oz before using ZTC.
Reference: [10] <author> S. Stepney, </author> <title> High Integrity Compilation, </title> <publisher> Prentice Hall, </publisher> <year> 1993. </year> <note> ZTC 2.01 User's Guide May 1995 </note>
Reference-contexts: The variables are used without declaration but their types easily deduced from the context. The following is a more sensible use of liberal mode. This is an excerpt from Susan Stepney's High Integrity Compilation <ref> [10] </ref>, in which she specified the semantics of compilers using Z. She wrote The definitions of the semantics functions are quantified over all the variables appearing on the left-hand side of the equation. ... The continual occurrence of such quantifications tends to clutter the specification.
References-found: 10

