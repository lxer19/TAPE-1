URL: ftp://ftp.cs.huji.ac.il/users/transis/tina-96.ps.gz
Refering-URL: http://www.cs.huji.ac.il/~grishac/grishac.html
Root-URL: http://www.cs.huji.ac.il
Email: Email: fgrishac,nabil,idish,dolevg@cs.huji.ac.il  
Phone: 032-7658  
Title: Multimedia Multicast Transport Service for Groupware  
Author: Chockler, Gregory V., Huleihel, Nabil, Keidar, Idit, and Dolev, Danny, 
Web: Url: http://www.cs.huji.ac.il/f~grishac,~nabil,~idish,~dolevg  
Note: 2.0 Introduction This work was supported by Ministry of Science of Israel, grant number  
Address: Jerusalem, Jerusalem, Israel  
Affiliation: The Hebrew University of  
Abstract: 1.0 Abstract Reliability carries different meanings for different applications. For example, in a replicated database setting, reliability means that messages are never lost, and that messages arrive in the same order at all sites. In order to guarantee this reliability property, it is acceptable to sacrifice real-time message delivery: some messages may be greatly delayed, and at certain periods message transmission may even be blocked. While this is perfectly acceptable behavior for a reliable database application, this behavior is intolerable for a reliable video server. For a continuous MPEG video player [20, 19], reliability means real-time message delivery, at a certain bandwidth; It is acceptable for some messages to be lost, as long as the available bandwidth complies with certain predetermined stochastic assumptions. Introducing database style reliability (i.e. message recovery and order constraints) may violate these assumptions, rendering the MPEG decoding algorithm incorrect. Many CSCW groupware and multimedia applications require quality of service multicast for most of their messages, and may greatly benefit from reliable multicast for a small portion of critical messages. Furthermore, such applications often need to be fault-tolerant, and need to support smooth reconfiguration when parties join or leave. Group communication [1] is a powerful tool for the construction of fault-tolerant applications, providing reliable multicast and membership services with strong semantics. In this paper, we incorporate Multimedia Multicast Transport Service that supports multiple quality of service options within the framework of group communications systems. This way, a single application can exploit multiple quality service options, and can also benefit from the group communication semantics. In this paper we present a novel communication paradigm that provides multiple quality of service (QoS) options for multimedia and Computer Supported Cooperative Work (CSCW) [18] applications, e.g. video conferencing. The Multimedia Multicast Transport Service (MMTS) consists of multiple QoS options incorporated in the group communication framework. The MMTS extends group communication systems (GCSs) that provide reliable multicast services 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Communications of the ACM 39(4), </institution> <note> special issue on Group Communications Systems, </note> <month> April </month> <year> 1996. </year>
Reference-contexts: Furthermore, such applications often need to be fault-tolerant, and need to support smooth reconfiguration when parties join or leave. Group communication <ref> [1] </ref> is a powerful tool for the construction of fault-tolerant applications, providing reliable multicast and membership services with strong semantics. In this paper, we incorporate Multimedia Multicast Transport Service that supports multiple quality of service options within the framework of group communications systems. <p> GCSs also provide group membership services that guarantee strong semantics, which are useful for the construction of fault tolerant applications. Some of the leading GCSs today are: Transis, Totem, ISIS, Horus, Psync, Relacs, RMP, and Newtop; A survey of GCSs may be found in <ref> [1] </ref>. GCSs introduce the notion of the group abstraction that allows the application builder to treat multiple communicating parties as a single connection. Members may dynamically join and leave the group (i.e. subscribe and unsubscribe to the connection). <p> In this case, p delivers a special join-bunch B notification, and following it delivers the remainder of M B . 5.0 MMTS Incorporation in Transis and Horus We now present the incorporation of MMTS in the Transis and Horus <ref> [1] </ref> GCSs. MMTS could be similarly incorporated into other GCSs. The main data structure of the Transis GCS is a directed acyclic graph, DAG, based on Trans [15] and on Psync [17]. The nodes in the DAG represent messages, and the arcs represent acknowledgments.
Reference: [2] <author> Y. Amir, D. Breitgand, G. Chockler, and D. Dolev. </author> <title> Group Communication as an Infrastructure for Distributed System Management. </title> <booktitle> In International Workshop on Services in Distributed and Networked Environment, </booktitle> <volume> number 3, </volume> <pages> pages 8491, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: This reliability guarantee is sometimes called atomic. application an indication which processes are reachable at any given time. The Virtual Syn--chrony [6], Strong Virtual Synchrony [9] and Extended Virtual Synchrony [16] models provide powerful semantics, that greatly facilitate application design <ref> [6, 2, 10, 3] </ref>.
Reference: [3] <author> Y. Amir, D. Dolev, P. M. Melliar-Smith, and L. E. Moser. </author> <title> Robust and Efficient Replication using Group Communication. </title> <type> Technical Report CS94-20, </type> <institution> Institute of Computer Science, The Hebrew University of Jerusalem, Jerusalem, Israel, </institution> <year> 1994. </year>
Reference-contexts: This reliability guarantee is sometimes called atomic. application an indication which processes are reachable at any given time. The Virtual Syn--chrony [6], Strong Virtual Synchrony [9] and Extended Virtual Synchrony [16] models provide powerful semantics, that greatly facilitate application design <ref> [6, 2, 10, 3] </ref>.
Reference: [4] <author> T. Anker, D. Breitgand, G. Chockler, D. Dolev, and I. Keidar. </author> <title> Reliable Video Multicast Services. </title> <note> In preparation. </note>
Reference-contexts: In our approach, the video is mul-ticast in QoS bunches, and the other tasks (e.g. QoS negotiation, load balancing and consistent information sharing) exploit the GCS services. We are currently implementing a replicated video on demand server <ref> [4] </ref>, that exploits MMTS QoS bunches to transmit video. If one server crashes or detaches from a client, the other servers get an indication, and can smoothly take over.
Reference: [5] <author> T. Anker, D. Breitgand, D. Dolev, and Z. Levy. </author> <note> The WAN according to GARP. In preparation. </note>
Reference-contexts: GCSs today have begun to exploit new technologies, and to run over fast networks e.g. ATM <ref> [5] </ref> in WAN environments. 4.0 Multimedia Multicast Transport Service (MMTS) We propose to incorporate Multimedia Multicast Transport Service (MMTS) into group communication systems (GCSs) that provide reliable multicast. The GCS is extended with Multimedia Multicast Transport Service providing QoS multicast. The basic MMTS object is a bunch.
Reference: [6] <author> K. Birman and T. Joseph. </author> <title> Exploiting Virtual Synchrony in Distributed Systems. </title> <booktitle> In Symp. Operating Systems Principles, </booktitle> <volume> number 11, </volume> <pages> pages 123138. </pages> <publisher> ACM, </publisher> <month> Nov 87. </month>
Reference-contexts: In this paper we require delivery at connected targets only. This reliability guarantee is sometimes called atomic. application an indication which processes are reachable at any given time. The Virtual Syn--chrony <ref> [6] </ref>, Strong Virtual Synchrony [9] and Extended Virtual Synchrony [16] models provide powerful semantics, that greatly facilitate application design [6, 2, 10, 3]. <p> This reliability guarantee is sometimes called atomic. application an indication which processes are reachable at any given time. The Virtual Syn--chrony [6], Strong Virtual Synchrony [9] and Extended Virtual Synchrony [16] models provide powerful semantics, that greatly facilitate application design <ref> [6, 2, 10, 3] </ref>.
Reference: [7] <author> S. Y. Cheung, M. H. Ammar, and X. Li. </author> <title> On the Use of Destination Set Grouping to Improve Fairness in Multicast Video Distribution. </title> <booktitle> In 15th International Conference on Computer Communication (Infocom'96), </booktitle> <month> March </month> <year> 1996. </year>
Reference-contexts: The group abstraction may also be exploited for reducing the transmission rate for slow receivers by multicasting the video concurrently to different groups for receivers with different QoS capabilities <ref> [7] </ref>. Receivers can dynamically switch from group to group, according to the bandwidth they have available.
Reference: [8] <author> G. Chockler, N. Huleihel, I. Keidar, and D. Dolev. </author> <title> Supporting Multiple Quality of Service Options with High Performance Groupware. </title> <type> TR 96-3, </type> <institution> Institute of Computer Science, The Hebrew University of Jerusalem, </institution> <month> March </month> <year> 1996. </year>
Reference-contexts: The conference agent controls the communication among the conferees and the applications. The distributed agent can exploit GCS with MMTS to pro-vide the services listed in [18], e.g. floor control, dynamic reconfiguration, consistent workspace replication and management, and logging the session. In the full paper <ref> [8] </ref> we discuss these ser vices in more detail. 7.0 Concluding Remarks The performance of an MMTS application greatly depends on the size of the bunches, and on the mixture of different QoS options, as well as on the properties of the underlying network.
Reference: [9] <author> R. Friedman and R. V. Renesse. </author> <title> Strong and Weak Virtual Synchrony in Horus. </title> <type> TR 95-1537, </type> <institution> dept. of Computer Science, Cornell University, </institution> <month> August </month> <year> 1995. </year>
Reference-contexts: In this paper we require delivery at connected targets only. This reliability guarantee is sometimes called atomic. application an indication which processes are reachable at any given time. The Virtual Syn--chrony [6], Strong Virtual Synchrony <ref> [9] </ref> and Extended Virtual Synchrony [16] models provide powerful semantics, that greatly facilitate application design [6, 2, 10, 3].
Reference: [10] <author> I. Keidar and D. Dolev. </author> <title> Efficient Message Ordering in Dynamic Networks. </title> <booktitle> In ACM Symp. on Prin. of Distributed Computing (PODC), </booktitle> <pages> pages 6876, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: This reliability guarantee is sometimes called atomic. application an indication which processes are reachable at any given time. The Virtual Syn--chrony [6], Strong Virtual Synchrony [9] and Extended Virtual Synchrony [16] models provide powerful semantics, that greatly facilitate application design <ref> [6, 2, 10, 3] </ref>.
Reference: [11] <author> D. Kozen, Y. Minsky, and B. Smith. </author> <title> Efficient Algorithms for Optimal Video Transmission. </title> <type> TR 95-1517, </type> <institution> Computer Science Department, Cornell University, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: No ordering constraints are guaranteed for any message in M B . Reliable FIFO All the messages in M B are guaranteed to be delivered exactly once and the FIFO delivery order is preserved. Prioritized Bunch implements a more complex QoS type, especially designed for video transmission <ref> [11] </ref>. This service is based on the cyclic-UDP [22] protocol, which is a best-effort priority-driven network protocol. The prioritized bunch is unreliable, but it does use re-transmissions in order to increase the probability of successful delivery.
Reference: [12] <author> L. Lamport. </author> <title> Time, Clocks, and the Ordering of Events in a Distributed System. </title> <journal> Communications of the ACM, </journal> <volume> 21(7):558565, </volume> <month> July 78. </month>
Reference-contexts: Typical examples of order constraints are: None no order constraints. FIFO messages from a single source are delivered in the order of their transmission. Causal messages are delivered in an order preserving the happened before (causal) partial order defined by Lamport <ref> [12] </ref>. The causal order is defined as the transitive closure of: m cause ! m 0 if deliver q (m) ! send q (m 0 ) or if send q (m) ! send q (m 0 ). Totally Ordered (Atomic) messages are delivered in the same order at all targets.
Reference: [13] <author> L. Mathy. </author> <title> Features of the ACCOPI Multimedia Transport Service. </title> <booktitle> In European Workshop on Interactive Distributed Multimedia Systems and Services (IDMS), (LNCS, </booktitle> <volume> 1045), </volume> <pages> pages 175194, </pages> <year> 1996. </year>
Reference-contexts: For example, negotiation and re-negotiation of QoS <ref> [14, 13] </ref> is a major challenge in the design of video multicast applications; it requires all the communicating parties to agree on certain QoS parameters, adjusted to actual capabilities of the communicating parties. <p> Increment frames that improve the video quality are multicast to the other groups. Receivers with higher processing capabilities subscribe to one or more these groups, and thus improve the quality of the video they receive, according to their capabilities. Other multimedia transport services, e.g. ACCOPI <ref> [13] </ref> also use group abstraction for multimedia multicast, but they usually support only 1 ! N logical topologies (one sender, many receivers). This is justified because complex connections in the transport service complicate the design of the transport protocol.
Reference: [14] <author> L. Mathy and O. Bonaventure. </author> <title> QoS Negotiation for Multicast Communications. In Multimedia Transport and Teleservices, </title> <booktitle> International COST 237 Workshop, (LNCS, </booktitle> <volume> 882), </volume> <pages> pages 199218, </pages> <month> November </month> <year> 1994. </year>
Reference-contexts: For example, negotiation and re-negotiation of QoS <ref> [14, 13] </ref> is a major challenge in the design of video multicast applications; it requires all the communicating parties to agree on certain QoS parameters, adjusted to actual capabilities of the communicating parties. <p> Receivers can dynamically switch from group to group, according to the bandwidth they have available. Another approach to reducing the bandwidth for slow receivers is based on filtering <ref> [14] </ref>: the video frames are multicast to several target groups, one group receives a self-contained low bandwidth (and hence low quality) video film, all the receivers subscribe to this group. Increment frames that improve the video quality are multicast to the other groups.
Reference: [15] <author> P. M. Melliar-Smith, L. E. Moser, and V. Agrawala. </author> <title> Broadcast Protocols for Distributed Systems. </title> <journal> IEEE Trans. Parallel & Distributed Syst., </journal> <volume> (1), </volume> <month> Jan </month> <year> 1990. </year>
Reference-contexts: MMTS could be similarly incorporated into other GCSs. The main data structure of the Transis GCS is a directed acyclic graph, DAG, based on Trans <ref> [15] </ref> and on Psync [17]. The nodes in the DAG represent messages, and the arcs represent acknowledgments. The DAG is used to provide various reliable multicast services. We extend the DAG data structure of Transis to incorporate Multimedia Multicast Transport Service.
Reference: [16] <author> L. E. Moser, Y. Amir, P. M. Melliar-Smith, and D. A. Agarwal. </author> <title> Extended Virtual Synchrony. </title> <booktitle> In International Conference on Distributed Computing Systems, number 14th, </booktitle> <month> June </month> <year> 1994. </year>
Reference-contexts: In this paper we require delivery at connected targets only. This reliability guarantee is sometimes called atomic. application an indication which processes are reachable at any given time. The Virtual Syn--chrony [6], Strong Virtual Synchrony [9] and Extended Virtual Synchrony <ref> [16] </ref> models provide powerful semantics, that greatly facilitate application design [6, 2, 10, 3].
Reference: [17] <author> L. L. Peterson, N. C. Buchholz, and R. D. Schlichting. </author> <title> Preserving and Using Context Information in Interprocess Communication. </title> <journal> ACM Trans. Comput. Syst., </journal> <volume> 7(3):217246, </volume> <month> August 89. </month>
Reference-contexts: MMTS could be similarly incorporated into other GCSs. The main data structure of the Transis GCS is a directed acyclic graph, DAG, based on Trans [15] and on Psync <ref> [17] </ref>. The nodes in the DAG represent messages, and the arcs represent acknowledgments. The DAG is used to provide various reliable multicast services. We extend the DAG data structure of Transis to incorporate Multimedia Multicast Transport Service. The begin-bunch and end-bunch messages are multicast using the DAG.
Reference: [18] <author> T. Rodden. </author> <title> A survey of CSCW systems. Interacting with Computers, </title> <address> 3(3):319353, </address> <year> 1991. </year>
Reference-contexts: This way, a single application can exploit multiple quality service options, and can also benefit from the group communication semantics. 2.0 Introduction In this paper we present a novel communication paradigm that provides multiple quality of service (QoS) options for multimedia and Computer Supported Cooperative Work (CSCW) <ref> [18] </ref> applications, e.g. video conferencing. The Multimedia Multicast Transport Service (MMTS) consists of multiple QoS options incorporated in the group communication framework. <p> Fig. 1 depicts a video conferencing application, with a new party wishing to join the discussion. In Section 6.0 we describe several examples of applications that can benefit from our services among which is a multimedia and desktop conferencing application <ref> [18] </ref>. 2.1 The Benefits of Group Communication Group communication systems (GCSs) are powerful tools for the development of fault-tolerant distributed applications and for CSCW groupware and multimedia applications. <p> Multimedia and desktop conferencing systems are described in the survey of CSCW systems <ref> [18] </ref>. Such a system consists of several conferees (users), that cooperatively use a variety of application such as a meeting room (video and audio), shared work space (e.g. cooperative editing or drawing on a board), etc. The conference agent controls the communication among the conferees and the applications. <p> The conference agent controls the communication among the conferees and the applications. The distributed agent can exploit GCS with MMTS to pro-vide the services listed in <ref> [18] </ref>, e.g. floor control, dynamic reconfiguration, consistent workspace replication and management, and logging the session.
Reference: [19] <author> L. A. Rowe, K. D. Patel, B. C. Smith, and K. Liu. </author> <title> MPEG Video in Software: Representation, Transmission, and Playback. In High Speed Networking and Multimedia Computing, </title> <booktitle> IS&T/SPIE Symp. </booktitle> <institution> on Elec. Imaging Sci. & Tech., </institution> <month> February </month> <year> 1994. </year>
Reference-contexts: While this is perfectly acceptable behavior for a reliable database application, this behavior is intolerable for a reliable video server. For a continuous MPEG video player <ref> [20, 19] </ref>, reliability means real-time message delivery, at a certain bandwidth; It is acceptable for some messages to be lost, as long as the available bandwidth complies with certain predetermined stochastic assumptions. <p> Ordering constraints must be preserved within each stream, but messages from different streams should not interfere with each other. Another example is video transmission: an MPEG-encoded video consists of a few full images which must be reliably delivered <ref> [19] </ref>, followed by incremental update frames which can be sent unreliably. The incremental update frames must follow the corresponding full picture frame only, and have no restrictions w.r.t. other messages.
Reference: [20] <author> L. A. Rowe and B. C. Smith. </author> <title> A Continous Media Player. In Int. Workshop on Network and OS Support for Digital Audio and Video, number 3, </title> <month> November </month> <year> 1992. </year>
Reference-contexts: While this is perfectly acceptable behavior for a reliable database application, this behavior is intolerable for a reliable video server. For a continuous MPEG video player <ref> [20, 19] </ref>, reliability means real-time message delivery, at a certain bandwidth; It is acceptable for some messages to be lost, as long as the available bandwidth complies with certain predetermined stochastic assumptions. <p> Often, neither solution is appropriate: e.g. in a typical multimedia application, several types of data streams (e.g. video, audio, translation subtitles) are each multicast independently <ref> [20] </ref>, as shown in Fig. 2, and are synchronized at the receiving server. Ordering constraints must be preserved within each stream, but messages from different streams should not interfere with each other.
Reference: [21] <author> B. C. Smith. RIVL: </author> <title> A Resolution Independant Video Language. </title>
Reference-contexts: Pic--ture frames can be multicast via a reliable FIFO bunch, and increments in nested unreliable bunches. This implementation imposes the order relationship between pictures and increments, and imposes no order constraints w.r.t. other messages or bunches. Video representation languages (e.g. Rivl <ref> [21] </ref>) can be naturally extended to compile into this form of representation, for video transmission. 4.2 MMTS in Presence of Membership Changes The membership messages of the GCS have an important role in providing strong semantics such as virtual synchrony.
Reference: [22] <author> B. C. Smith. </author> <title> Implementation Techniques for Continous Media Systems and Applications. </title> <type> PhD thesis, </type> <institution> University of California at Berkeley, </institution> <year> 1994. </year>
Reference-contexts: Reliable FIFO All the messages in M B are guaranteed to be delivered exactly once and the FIFO delivery order is preserved. Prioritized Bunch implements a more complex QoS type, especially designed for video transmission [11]. This service is based on the cyclic-UDP <ref> [22] </ref> protocol, which is a best-effort priority-driven network protocol. The prioritized bunch is unreliable, but it does use re-transmissions in order to increase the probability of successful delivery.
References-found: 22

