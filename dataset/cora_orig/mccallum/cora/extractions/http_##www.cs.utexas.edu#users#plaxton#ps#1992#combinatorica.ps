URL: http://www.cs.utexas.edu/users/plaxton/ps/1992/combinatorica.ps
Refering-URL: http://www.cs.utexas.edu/users/plaxton/html/abc.html
Root-URL: 
Title: On the Spanning Trees of Weighted Graphs  
Author: Ernst W. Mayr J.W. Goethe-Universitat C. Greg Plaxton 
Note: This work was supported in part by a grant from the AT&T Foundation and NSF grant DCR-8351757. Primarily supported by a 1967 Science and Engineering Scholarship from the Natural  
Address: FRG  Stanford, California  
Affiliation: Fachbereich Informatik  Frankfurt,  Department of Computer Science Stanford University  Sciences and Engineering Research Council of Canada.  
Abstract: Given a weighted graph, let W 1 ; W 2 ; W 3 ; : : : denote the increasing sequence of all possible distinct spanning tree weights. Settling a conjecture due to Kano, we prove that every spanning tree of weight W 1 is at most k 1 edge swaps away from some spanning tree of weight W k . Three other conjectures posed by Kano are proven for two special classes of graphs. Finally, we consider the algorithmic complexity of generating a spanning tree of weight W k . 
Abstract-found: 1
Intro-found: 1
Reference: [Ed] <author> J. Edmonds. </author> <title> Systems of distinct representatives and linear algebra. </title> <institution> J. of Research and the National Bureau of Standards, </institution> <month> 71B </month> <year> (1967), </year> <pages> 241-245. </pages>
Reference-contexts: The interpolation is the most costly step, and it involves solving a system of W max + 1 equations with O (W 2 max ) digit integer coefficients. This can be done in time polynomial in W max by the result of Edmonds <ref> [Ed] </ref>, who proved that Gaussian elimination with pivoting is in P for exact rational arithmetic.
Reference: [FT] <author> M. L. Fredman and R. E. Tarjan. </author> <title> Fibonacci heaps and their uses in improved network optimization algorithms. </title> <journal> JACM, </journal> <volume> 34 (1987), </volume> <pages> 596-615. </pages>
Reference-contexts: Proof: First compute a 1-MST M. This can be done in O (m + n log n) time using Fibonacci heaps <ref> [FT] </ref>, although for the present argument it would suffice to use one of the simpler 1-MST algorithms with a higher asymptotic running time. Then compute the weight of all spanning trees that are strictly fewer than k edge swaps away from M .
Reference: [JK] <author> D. B. Johnson and S. D. Kashdan. </author> <title> Lower bounds for selection in X + Y and other multisets. </title> <journal> JACM, </journal> <volume> 25 (1978), </volume> <pages> 556-570. </pages>
Reference-contexts: For fixed k, we obtain a polynomial time algorithm. When k is part of the input, the associated decision problem (KMST) is seen to be N P-hard using a reduction due to Johnson and Kashdan <ref> [JK] </ref> for the related kth best spanning tree problem (KBST). Lawler [La] gave a simple branch-and-bound algorithm for KBST with a running time that is pseudo-polynomial in k. The existence of such an algorithm provides a hopeful sign that a similar result might be possible for KMST. <p> By omitting the word "distinct" from Definition 5.1, we obtain the definition of the kth best spanning tree problem (KBST). Theorem 6 KMST is N P-hard. Proof: The proof is basically identical to the one given in <ref> [JK] </ref> for KBST, which is not known to be in N P. The reduction is from HAMILTON CIRCUIT. Note that the O ((mn) k1 ) algorithm described earlier does not solve KMST in time pseudo-polynomial in k.
Reference: [Kaj] <author> Y. Kajitani. </author> <title> Graph theoretical properties of the node determinant of an LCR network. </title> <journal> IEEE Trans. Circuit Theory, </journal> <month> CT-18 </month> <year> (1971), </year> <pages> 343-350. </pages>
Reference-contexts: Another interesting class of weighted graphs for which we can prove Conjecture 5 are those with edge weights drawn from an arithmetic sequence of length 3. Weighted graphs of this sort arise in the analysis of LCR networks <ref> [Kaj] </ref>, and Kano was able to prove Conjecture 1 for such graphs. Lemma 4.9 For a fixed choice of k, let A denote an unordered k-tuple of edge weights, and let S denote a set of unordered k-tuples of edge weights.
Reference: [Kan] <author> M. </author> <title> Kano. Maximum and kth maximal spanning trees of a weighted graph. Com binatorica, </title> <booktitle> 7 (1987), </booktitle> <pages> 205-214. </pages>
Reference-contexts: If one considers partitioning the spanning trees of a weighted graph into weight classes, a number of natural questions arise with regard to relationships between the classes. In a recent paper, Kano <ref> [Kan] </ref> posed four conjectures that were motivated by the previous work of Kawamoto, Kajitani and Shinoda [KKS]. Our main result is a proof that every minimum spanning tree is at most k 1 edge swaps away from some representative of the kth weight class, settling the first of Kano's conjectures. <p> Such a bispanning graph will be denoted by the triple (V; P; Q). The following result was obtained previously by Kano using Hall's Theorem <ref> [Kan] </ref>. Here we provide an alternative proof that is explicitly constructive and introduces some of the ideas that will be used to prove Conjecture 1. Theorem 1 Let P be a 1-MST and Q be an arbitrary spanning tree of a given weighted graph G = (V; E).
Reference: [KKS] <author> T. Kawamoto, Y. Kajitani and S. Shinoda. </author> <title> On the second maximal spanning trees of a weighted graph (in Japanese). </title> <journal> Trans. IECE of Japan, </journal> <month> 61-A </month> <year> (1978), </year> <pages> 988-995. </pages>
Reference-contexts: If one considers partitioning the spanning trees of a weighted graph into weight classes, a number of natural questions arise with regard to relationships between the classes. In a recent paper, Kano [Kan] posed four conjectures that were motivated by the previous work of Kawamoto, Kajitani and Shinoda <ref> [KKS] </ref>. Our main result is a proof that every minimum spanning tree is at most k 1 edge swaps away from some representative of the kth weight class, settling the first of Kano's conjectures. <p> However, going in the other direction turns out to be much 2 more difficult. Kawamoto, Kajitani and Shinoda <ref> [KKS] </ref> studied 2-MSTs and proved that for every 1-MST P there is a 2-MST Q such that d (P; Q) = 1. This led Kano to pose the following conjecture, for which the result of Kawamoto et al. corresponds to the special case i = 2.
Reference: [Kn] <author> D. E. Knuth. </author> <title> The Art of Computer Programming Vol. I: Fundamental Algorithms, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass. </address>
Reference-contexts: Letting A S denote the matrix (a ij ) for i 2 S and j ranging from 1 to n, we have det A T X jSj=n by the Binet-Cauchy formula (see <ref> [Kn] </ref>). Furthermore, det A S = 1; if (V; S) is a tree; 0; otherwise. (3) so that the determinant of A T 0 A 0 is the number of spanning trees of G.
Reference: [Kr] <author> J. B. Kruskal. </author> <title> On the shortest spanning subtree of a graph and the traveling salesman problem. </title> <journal> Proc. Amer. Math. Soc., </journal> <volume> 7 (1956), </volume> <pages> 48-50. </pages>
Reference-contexts: We will have occasion to make use of several well-known facts about 1-MSTs. The validity of each of these statements follows easily from the proof of correctness of Kruskal's greedy algorithm for computing a 1-MST <ref> [Kr] </ref>. In Kruskal's algorithm, the edges are first sorted in ascending order by weight (within a set of edges of equal weight, the order is arbitrary).
Reference: [La] <author> E. L. Lawler. </author> <title> A procedure for computing the K best solutions to discrete opti mization problems and its application to the shortest path problem. </title> <institution> Management Sci., </institution> <month> 18 </month> <year> (1972), </year> <pages> 401-405. </pages>
Reference-contexts: For fixed k, we obtain a polynomial time algorithm. When k is part of the input, the associated decision problem (KMST) is seen to be N P-hard using a reduction due to Johnson and Kashdan [JK] for the related kth best spanning tree problem (KBST). Lawler <ref> [La] </ref> gave a simple branch-and-bound algorithm for KBST with a running time that is pseudo-polynomial in k. The existence of such an algorithm provides a hopeful sign that a similar result might be possible for KMST. <p> Interestingly, a pseudo-polynomial time solution is known for KBST; the approach is to generate all spanning trees up to the kth <ref> [La] </ref>. Unfortunately, this method is not powerful enough for KMST since there may be exponentially many spanning trees belonging to classes below the kth. We will now present a determinant-based KMST algorithm for which the running time is pseudo-polynomial in the edge weights as well as k.
Reference: [OO] <author> Okada and Onodera. Bull. Yamagata Univ., </author> <month> 2 </month> <year> (1952), </year> <note> 89-117 (cited in [Kn]). </note>
Reference-contexts: The existence of such an algorithm provides a hopeful sign that a similar result might be possible for KMST. We do not achieve this goal, but by extending a determinant method due to Okada and Onodera <ref> [OO] </ref>, we obtain an algorithm for which the running time is pseudo-polynomial in the edge weights as well as k. 2 Preliminaries Let G = (V; E) be a connected undirected graph with a rational weight w (e) assigned to each edge e 2 E. <p> Furthermore, det A S = 1; if (V; S) is a tree; 0; otherwise. (3) so that the determinant of A T 0 A 0 is the number of spanning trees of G. This result is due to Okada and Onodera <ref> [OO] </ref>. 13 Similary, we can construct the m fi (n + 1) matrix B with b ij = &gt; &lt; +x w (e i ) ; if e i = (v j ; v k ) for some k &gt; j; x w (e i ) ; if e i =
Reference: [Pr] <author> R. C. Prim. </author> <title> Shortest connection networks and some generalizations. </title> <journal> Bell System Technical J., </journal> <volume> 36 (1957), </volume> <pages> 1389-1401. 15 </pages>
References-found: 11

