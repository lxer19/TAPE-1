URL: ftp://dimacs.rutgers.edu/pub/dimacs/TechnicalReports/TechReports/1998/98-08.ps.gz
Refering-URL: http://dimacs.rutgers.edu/TechnicalReports/abstracts/1998/98-08.html
Root-URL: http://www.cs.rutgers.edu
Title: mutual exclusion scheduling problem for permutation and comparability graphs  
Author: by Klaus Jansen 
Web: jansen@mpi-sb.mpg.de  
Address: 66 123 Saarbrucken, Germany  
Affiliation: Max-Planck Institute for Computer Science Im Stadtwald  
Note: The  part by DIMACS and by EU ESPRIT LTR Project No. 20244 (ALCOM-IT). DIMACS is a partnership of Rutgers University, Princeton University, AT&T Labs-Research, Bell Labs and Bellcore. DIMACS is an NSF Science and Technology Center, funded under contract STC-91-19999; and also receives support from the New Jersey Commission on Science and Technology.  
Abstract: DIMACS Technical Report 98-8 January 1998 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Alon: </author> <title> A note on the decomposition of graphs into isomorphic matchings, </title> <note> Acta Mathematica Hungarica 42 (1983), 221-223. </note>
Reference-contexts: A linear time algorithm was proposed in [15] for MES restricted to graphs with constant treewidth and fixed m. Furthermore, MES is NP-complete for complements of line graphs and fixed m 3 [9] and polynomial for line graphs and every fixed m <ref> [1] </ref>. In this paper, we prove the following main result. <p> Let us assume that the clauses are numbered by 1; : : : ; r and that the number of the j.th occurrence of variable x i in the clauses is denoted by i [j]. Since each clause contains a variable x i at most once, we have i <ref> [1] </ref> &lt; i [2] &lt; i [3]. <p> We say that an instance I has the separation property if for each variable x i one of the following cases is true (observe that each variable appears either twice negated and once unnegated or twice unnegated and once negated): (1) x i appears negated in clauses i <ref> [1] </ref> and i [2] and unnegated in i [3], (2) x i appears unnegated in clauses i [1] and i [2] and negated in i [3], - 6 - b b a x i ! a (3) x i appears negated in clauses i [2] and i [3] and unnegated in <p> i one of the following cases is true (observe that each variable appears either twice negated and once unnegated or twice unnegated and once negated): (1) x i appears negated in clauses i <ref> [1] </ref> and i [2] and unnegated in i [3], (2) x i appears unnegated in clauses i [1] and i [2] and negated in i [3], - 6 - b b a x i ! a (3) x i appears negated in clauses i [2] and i [3] and unnegated in i [1], (4) x i appears unnegated in clauses i [2] and i [3] and negated in <p> i [2] and unnegated in i [3], (2) x i appears unnegated in clauses i <ref> [1] </ref> and i [2] and negated in i [3], - 6 - b b a x i ! a (3) x i appears negated in clauses i [2] and i [3] and unnegated in i [1], (4) x i appears unnegated in clauses i [2] and i [3] and negated in i [1]. The separation property means that only the cases in Figure 1 are possible. This property is necessary for our reduction in section 3. <p> i [2] and negated in i [3], - 6 - b b a x i ! a (3) x i appears negated in clauses i [2] and i [3] and unnegated in i <ref> [1] </ref>, (4) x i appears unnegated in clauses i [2] and i [3] and negated in i [1]. The separation property means that only the cases in Figure 1 are possible. This property is necessary for our reduction in section 3. The Figure 1 illustrates how the points corresponding to x i and x i are placed in the horizontal stripe corresponding to variable x i .
Reference: [2] <author> B.S. Baker and E.G. Coffman: </author> <title> Mutual exclusion scheduling, </title> <booktitle> Theoretical Computer Science 162 (1996), </booktitle> <pages> 225-243. </pages>
Reference-contexts: Problems of this form have been studied in the Operations Research literature [6, 17, 18]. Another problem arises in load balancing the parallel solution of partial differential equations (pde's) by domain decomposition <ref> [5, 2] </ref>. The domain for the pde's is decomposed into regions where each region corresponds to a subcomputation. The subcomputations are scheduled on m processors so that subcomputations corresponding to regions that touch at even one point are not performed simultaneously. <p> On the other hand, for m = 3 the complexity of MES is the same as that of the NP-complete problem partition into triangles in the complement graph. Moreover, Baker and Coffman <ref> [2] </ref> proved that MES is in P for forests and general t; m 2 NI. A linear time algorithm was proposed in [15] for MES restricted to graphs with constant treewidth and fixed m. <p> Since each clause contains a variable x i at most once, we have i [1] &lt; i <ref> [2] </ref> &lt; i [3]. <p> say that an instance I has the separation property if for each variable x i one of the following cases is true (observe that each variable appears either twice negated and once unnegated or twice unnegated and once negated): (1) x i appears negated in clauses i [1] and i <ref> [2] </ref> and unnegated in i [3], (2) x i appears unnegated in clauses i [1] and i [2] and negated in i [3], - 6 - b b a x i ! a (3) x i appears negated in clauses i [2] and i [3] and unnegated in i [1], (4) <p> the following cases is true (observe that each variable appears either twice negated and once unnegated or twice unnegated and once negated): (1) x i appears negated in clauses i [1] and i <ref> [2] </ref> and unnegated in i [3], (2) x i appears unnegated in clauses i [1] and i [2] and negated in i [3], - 6 - b b a x i ! a (3) x i appears negated in clauses i [2] and i [3] and unnegated in i [1], (4) x i appears unnegated in clauses i [2] and i [3] and negated in i [1]. <p> i appears negated in clauses i [1] and i <ref> [2] </ref> and unnegated in i [3], (2) x i appears unnegated in clauses i [1] and i [2] and negated in i [3], - 6 - b b a x i ! a (3) x i appears negated in clauses i [2] and i [3] and unnegated in i [1], (4) x i appears unnegated in clauses i [2] and i [3] and negated in i [1]. The separation property means that only the cases in Figure 1 are possible. This property is necessary for our reduction in section 3. <p> i appears unnegated in clauses i [1] and i <ref> [2] </ref> and negated in i [3], - 6 - b b a x i ! a (3) x i appears negated in clauses i [2] and i [3] and unnegated in i [1], (4) x i appears unnegated in clauses i [2] and i [3] and negated in i [1]. The separation property means that only the cases in Figure 1 are possible. This property is necessary for our reduction in section 3.
Reference: [3] <author> K.A. Baker, </author> <title> P.C. Fishburn and F.S. Roberts: Partial orders of dimension 2, </title> <booktitle> Networks 2 (1971), </booktitle> <pages> 11-28. </pages>
Reference-contexts: A partial order is called k dimensional for k 2 NI, if dim (P ) k. Baker et al. <ref> [3] </ref> have given the following graph theoretic characterization: A partial order P is 2 dimensional, if and only if the complement graph G (P ) c is also a comparability graph. <p> Since each clause contains a variable x i at most once, we have i [1] &lt; i [2] &lt; i <ref> [3] </ref>. <p> has the separation property if for each variable x i one of the following cases is true (observe that each variable appears either twice negated and once unnegated or twice unnegated and once negated): (1) x i appears negated in clauses i [1] and i [2] and unnegated in i <ref> [3] </ref>, (2) x i appears unnegated in clauses i [1] and i [2] and negated in i [3], - 6 - b b a x i ! a (3) x i appears negated in clauses i [2] and i [3] and unnegated in i [1], (4) x i appears unnegated in <p> (observe that each variable appears either twice negated and once unnegated or twice unnegated and once negated): (1) x i appears negated in clauses i [1] and i [2] and unnegated in i <ref> [3] </ref>, (2) x i appears unnegated in clauses i [1] and i [2] and negated in i [3], - 6 - b b a x i ! a (3) x i appears negated in clauses i [2] and i [3] and unnegated in i [1], (4) x i appears unnegated in clauses i [2] and i [3] and negated in i [1]. <p> in clauses i [1] and i [2] and unnegated in i <ref> [3] </ref>, (2) x i appears unnegated in clauses i [1] and i [2] and negated in i [3], - 6 - b b a x i ! a (3) x i appears negated in clauses i [2] and i [3] and unnegated in i [1], (4) x i appears unnegated in clauses i [2] and i [3] and negated in i [1]. The separation property means that only the cases in Figure 1 are possible. This property is necessary for our reduction in section 3. <p> in clauses i [1] and i [2] and negated in i <ref> [3] </ref>, - 6 - b b a x i ! a (3) x i appears negated in clauses i [2] and i [3] and unnegated in i [1], (4) x i appears unnegated in clauses i [2] and i [3] and negated in i [1]. The separation property means that only the cases in Figure 1 are possible. This property is necessary for our reduction in section 3.
Reference: [4] <author> M. Bartusch, R.H. Mohring and F.J. Radermacher: </author> <title> M -machine unit time scheduling: A report on ongoing research, in: Optimization, Parallel Processing and Applications (ed. </title> <editor> A. Kurzhanski), </editor> <volume> LNEMS 304, </volume> <year> 1988, </year> <pages> 165-213. - 12 </pages> - 
Reference-contexts: Inspite of intensive research by several scientists, the complexity status of the problem of finding such a partition with minimum t for each fixed constant m 3 still remains unsolved <ref> [4] </ref>. In fact, this problem is mentioned already in the original list of ten basic open problems in complexity theory [11]. For an overview about different classes of partial orders and complexity results, we refer to [4, 22]. Mohring [21] proposed 1985 a related problem. <p> In fact, this problem is mentioned already in the original list of ten basic open problems in complexity theory [11]. For an overview about different classes of partial orders and complexity results, we refer to <ref> [4, 22] </ref>. Mohring [21] proposed 1985 a related problem. He asked for the complexity of the problem with condition (fl) dropped. This amounts to the mutual exclusion problem restricted to comparability graphs and fixed constant m 3.
Reference: [5] <author> P. Bjorstad, W.M. Coughran and E. Grosse: </author> <title> Parallel domain decomposition applied to coupled transport equations, in: Domain Decomposition Methods in Scientific and Engineering Computing (eds. D.E. Keys, </title> <editor> J. Xu), </editor> <publisher> AMS, </publisher> <address> Providence, </address> <year> 1995, </year> <pages> 369-380. </pages>
Reference-contexts: Problems of this form have been studied in the Operations Research literature [6, 17, 18]. Another problem arises in load balancing the parallel solution of partial differential equations (pde's) by domain decomposition <ref> [5, 2] </ref>. The domain for the pde's is decomposed into regions where each region corresponds to a subcomputation. The subcomputations are scheduled on m processors so that subcomputations corresponding to regions that touch at even one point are not performed simultaneously.
Reference: [6] <author> J. Blazewicz, K.H. Ecker, E. Pesch, G. Schmidt and J. Weglarz: </author> <title> Scheduling computer and manufacturing processes, </title> <publisher> Springer, </publisher> <address> Heidelberg, </address> <year> 1996. </year>
Reference-contexts: The scheduling is complicated by additional resources (e.g. I-O devices, communication links). A job can only be scheduled onto a processor in a given time unit after it has an exclusive lock on all required resources. Problems of this form have been studied in the Operations Research literature <ref> [6, 17, 18] </ref>. Another problem arises in load balancing the parallel solution of partial differential equations (pde's) by domain decomposition [5, 2]. The domain for the pde's is decomposed into regions where each region corresponds to a subcomputation.
Reference: [7] <author> H.L. Bodlaender and K. Jansen: </author> <title> On the complexity of scheduling incompatible jobs with unit-times, </title> <booktitle> Mathematical Foundations of Computer Science, MFCS 93, </booktitle> <volume> LNCS 711, </volume> <pages> 291-300. </pages>
Reference-contexts: A minimum length schedule corresponds to a partition of V into a minimum number t of such independent sets. Baker and Coffman called this graph theoretical problem Mutual Exclusion Scheduling (short: MES). Bodlaender and Jansen <ref> [7] </ref> studied the decision problem of a complementary scheduling problem. <p> He proved that MES is NP-complete for complements of comparability graphs and fixed m 3 and that MES is polynomial solvable for complements of interval graphs and every m and for cographs and fixed m. However, Bodlaender and Jansen <ref> [7] </ref> showed that MES is NP-complete when G is restricted to cographs, bipartite or interval graphs.
Reference: [8] <author> A. Brandstadt: </author> <title> On improved time bounds for permutation graph problems, </title> <booktitle> Graph Theoretic Concepts in Computer Science, WG 92, </booktitle> <volume> LNCS 657, </volume> <pages> 1-10. </pages>
Reference-contexts: Different techniques for solving algorithmic problems on a permutation graph are given in <ref> [8] </ref>. In our proof, the permutation graph is given as a set of points fp j = (j; 1 (j))j1 j ng in the plane NI 2 .
Reference: [9] <author> E. Cohen and M. Tarsi: </author> <title> NP-completeness of graph decomposition problem, </title> <journal> Journal of Complexity 7 (1991), </journal> <pages> 200-212. </pages>
Reference-contexts: A linear time algorithm was proposed in [15] for MES restricted to graphs with constant treewidth and fixed m. Furthermore, MES is NP-complete for complements of line graphs and fixed m 3 <ref> [9] </ref> and polynomial for line graphs and every fixed m [1]. In this paper, we prove the following main result.
Reference: [10] <author> D.G. Corneil: </author> <title> The complexity of generalized clique packing, </title> <booktitle> Discrete Applied Mathematics 12 (1985), </booktitle> <pages> 233-239. </pages>
Reference-contexts: MES remains NP-complete for bipartite graphs and any fixed t 3, and for interval graphs and any fixed m 4. Independently, Hansen et al. [13] proved that MES restricted to biparite graphs and fixed m is solvable in polynomial time. Corneil <ref> [10] </ref> reports that Kirkpatrick has shown the NP-completeness of MES restricted to chordal graphs and fixed m 3. For m = 2, MES is equivalent to the maximum - 2 - matching problem in the complement graph and, therefore, in P .
Reference: [11] <author> M.R. Garey and D.S. Johnson: </author> <title> Computers and Intractability: A Guide to the Theorey of NP-Completeness, </title> <publisher> Freeman, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: In fact, this problem is mentioned already in the original list of ten basic open problems in complexity theory <ref> [11] </ref>. For an overview about different classes of partial orders and complexity results, we refer to [4, 22]. Mohring [21] proposed 1985 a related problem. He asked for the complexity of the problem with condition (fl) dropped. <p> Lemma 2.1 The restricted SAT problem is NP-complete. Proof: By a reduction from the NP-complete SAT problem where each clause contains exactly three literals <ref> [11] </ref>. We may assume that each variable appears not only negated or unnegated; otherwise we replace x j (or x j ) by the truth values TRUE and get a smaller instance.
Reference: [12] <author> P.C. Gilmore and A.J. Hoffman: </author> <title> A characterization of comparability graphs and of interval graphs, </title> <journal> Canadian Journal of Mathematics 16 (1964), </journal> <pages> 539-548. </pages>
Reference-contexts: This implies that a graph G is a comparability graph of a 2 dimensional partial order if and only if G and its complement graph G c are comparability graphs. These graphs have been studied also under the name permutation graphs <ref> [23, 12] </ref>. Let = (i 1 ; : : : ; i n ) be a permutation of f1; : : : ; ng. We denote with 1 (i) the position of i in .
Reference: [13] <author> P. Hansen, A. Hertz and J. Kuplinsky: </author> <title> Bounded vertex colorings of graphs, </title> <booktitle> Discrete Mathematics 111 (1993), </booktitle> <pages> 305-312. </pages>
Reference-contexts: MES remains NP-complete for bipartite graphs and any fixed t 3, and for interval graphs and any fixed m 4. Independently, Hansen et al. <ref> [13] </ref> proved that MES restricted to biparite graphs and fixed m is solvable in polynomial time. Corneil [10] reports that Kirkpatrick has shown the NP-completeness of MES restricted to chordal graphs and fixed m 3.
Reference: [14] <author> S. Irani and V. Leung: </author> <title> Scheduling with conflicts, and applications to traffic signal control, </title> <booktitle> SIAM Symposium on Discrete Algorithms, SODA 96, </booktitle> <pages> 85-94. </pages>
Reference-contexts: The subcomputations are scheduled on m processors so that subcomputations corresponding to regions that touch at even one point are not performed simultaneously. Other applications are in constructing school course time tables [16] and scheduling in communication systems <ref> [14] </ref>. 1.1 Mutual exclusion scheduling These scheduling problems can be solved by creating an undirected graph G = (V; E) with a vertex for each of the n jobs, and an edge between every pair of conflicting jobs.
Reference: [15] <author> D. Kaller, A. Gupta and T. Shermer: </author> <title> The t coloring problem, </title> <booktitle> Symposium on Theoretical Aspects of Computer Science, STACS 95, </booktitle> <volume> LNCS 900, </volume> <pages> 409-420. </pages>
Reference-contexts: Moreover, Baker and Coffman [2] proved that MES is in P for forests and general t; m 2 NI. A linear time algorithm was proposed in <ref> [15] </ref> for MES restricted to graphs with constant treewidth and fixed m. Furthermore, MES is NP-complete for complements of line graphs and fixed m 3 [9] and polynomial for line graphs and every fixed m [1]. In this paper, we prove the following main result.
Reference: [16] <author> F. Kitagawa and H. Ikeda: </author> <title> An existential problem of a weight controlled subset and its application to school time table construction, </title> <booktitle> Discrete Mathematics 72 (1988), </booktitle> <pages> 195-211. </pages>
Reference-contexts: The domain for the pde's is decomposed into regions where each region corresponds to a subcomputation. The subcomputations are scheduled on m processors so that subcomputations corresponding to regions that touch at even one point are not performed simultaneously. Other applications are in constructing school course time tables <ref> [16] </ref> and scheduling in communication systems [14]. 1.1 Mutual exclusion scheduling These scheduling problems can be solved by creating an undirected graph G = (V; E) with a vertex for each of the n jobs, and an edge between every pair of conflicting jobs.
Reference: [17] <author> J. Krarup and D. de Werra: </author> <title> Chromatic optimization: limitations, objectives, uses, references, </title> <journal> European Journal of Operations Research 11 (1982), </journal> <pages> 1-19. </pages>
Reference-contexts: The scheduling is complicated by additional resources (e.g. I-O devices, communication links). A job can only be scheduled onto a processor in a given time unit after it has an exclusive lock on all required resources. Problems of this form have been studied in the Operations Research literature <ref> [6, 17, 18] </ref>. Another problem arises in load balancing the parallel solution of partial differential equations (pde's) by domain decomposition [5, 2]. The domain for the pde's is decomposed into regions where each region corresponds to a subcomputation.
Reference: [18] <author> V. Lofti and S. Sarin: </author> <title> A graph coloring algorithm for large scale scheduling problems, </title> <booktitle> Computers and Operations Research 13 (1986), </booktitle> <pages> 27-32. - 13 </pages> - 
Reference-contexts: The scheduling is complicated by additional resources (e.g. I-O devices, communication links). A job can only be scheduled onto a processor in a given time unit after it has an exclusive lock on all required resources. Problems of this form have been studied in the Operations Research literature <ref> [6, 17, 18] </ref>. Another problem arises in load balancing the parallel solution of partial differential equations (pde's) by domain decomposition [5, 2]. The domain for the pde's is decomposed into regions where each region corresponds to a subcomputation.
Reference: [19] <author> Z. Lonc: </author> <title> On complexity of some chain and antichain partition problem, </title> <booktitle> Graph Theoretical Concepts in Computer Science, WG 91, </booktitle> <volume> LNCS 570, </volume> <pages> 97-104. </pages>
Reference-contexts: Therefore, in MES an independent set is processed in a time unit, whereas in CS an independent set is executed on one processor. Lonc <ref> [19] </ref> showed that MES for split graphs can be solved in polynomial time. He proved that MES is NP-complete for complements of comparability graphs and fixed m 3 and that MES is polynomial solvable for complements of interval graphs and every m and for cographs and fixed m. <p> Mohring [21] proposed 1985 a related problem. He asked for the complexity of the problem with condition (fl) dropped. This amounts to the mutual exclusion problem restricted to comparability graphs and fixed constant m 3. Furthermore, Lonc <ref> [19] </ref> asked 1991 for the complexity of MES restricted to permutation graphs (a subclass of all comparability graphs) and fixed m 3. <p> Finding the complexity of MES for smaller constants m = 3; 4; 5 could be a step to the solution of the famous m-machine scheduling problem with unit-times. The MES problem for permutation graphs and m = 3 is equivalent to the following problem <ref> [19] </ref>: Problem S (3) Given: A sequence of 3 n distinct positive integers. Question: Is there a partition of the sequence into n increasing subsequences each of length three?
Reference: [20] <author> R.H. Mohring: </author> <title> Algorithmic aspects of comparability graphs and interval graphs, in: Graphs and Orders (ed. </title> <editor> I. Rival), </editor> <publisher> Reidel Publishing, </publisher> <address> Dordrecht 1985, </address> <pages> 41-101. </pages>
Reference-contexts: G (P ) is called the comparability graph of P . In general, an undirected graph G is called a comparability graph, if G = G (P ) for some partial order on its vertex set. Algorithmic aspects of comparability graphs are given e.g. in <ref> [20] </ref>. Let us consider another famous scheduling problem.
Reference: [21] <author> R.H. Mohring: </author> <title> Problem 9.10, in: Graphs and Orders (ed. </title> <editor> I. Rival), </editor> <publisher> Reidel Publishing, </publisher> <address> Dordrecht 1985, </address> <month> 583. </month>
Reference-contexts: In fact, this problem is mentioned already in the original list of ten basic open problems in complexity theory [11]. For an overview about different classes of partial orders and complexity results, we refer to [4, 22]. Mohring <ref> [21] </ref> proposed 1985 a related problem. He asked for the complexity of the problem with condition (fl) dropped. This amounts to the mutual exclusion problem restricted to comparability graphs and fixed constant m 3.
Reference: [22] <author> R.H. Mohring: </author> <title> Computationally tractable classes of ordered sets, in: Algorithms and Orders (ed. </title> <editor> I. Rival), </editor> <publisher> Kluwer Acad. Publishing, </publisher> <address> Dordrecht 1989, </address> <pages> 105-193. </pages>
Reference-contexts: In fact, this problem is mentioned already in the original list of ten basic open problems in complexity theory [11]. For an overview about different classes of partial orders and complexity results, we refer to <ref> [4, 22] </ref>. Mohring [21] proposed 1985 a related problem. He asked for the complexity of the problem with condition (fl) dropped. This amounts to the mutual exclusion problem restricted to comparability graphs and fixed constant m 3.
Reference: [23] <author> A. Pnueli, A. Lempel and W. </author> <title> Even: Transitive orientation of graphs and identification of permutation graphs, </title> <journal> Canadian Journal of Mathematics 23 (1971), </journal> <pages> 160-175. </pages>
Reference-contexts: This implies that a graph G is a comparability graph of a 2 dimensional partial order if and only if G and its complement graph G c are comparability graphs. These graphs have been studied also under the name permutation graphs <ref> [23, 12] </ref>. Let = (i 1 ; : : : ; i n ) be a permutation of f1; : : : ; ng. We denote with 1 (i) the position of i in .
Reference: [24] <author> K. Wagner: </author> <title> Monotonic coverings of finite sets, </title> <journal> Journal of Information Processing and Cybernetics - EIK 20 (1984), </journal> <volume> 633 - 639. </volume>
Reference-contexts: Finally, we place some points (in two chains) around the rectangle such that each independent set in an optimum solution of the restricted coloring problem for the permutation graph covers only points in a horizontal or vertical stripe. Our proof was inspired by the NP-completeness proof of K. Wagner <ref> [24] </ref>. 2 A restricted satisfiability problem To prove the main theorem, we consider the following restricted satisfiability problem: Restricted SAT Given: A set of unnegated variables X = fx 1 ; : : : ; x n g and negated variables X = f x 1 ; : : : ;
References-found: 24

