URL: ftp://ftpipr.ira.uka.de/pub/papers/1995/ewlr95hf.ps.gz
Refering-URL: ftp://ftpipr.ira.uka.de/.public_html/papersna.html
Root-URL: 
Email: e-mail: friedric@ira.uka.de.  
Title: In: 3rd European Workshop on Learning Robots at ECML'95 ROBOT PROGRAMMING BASED ON A SINGLE
Author: HOLGER FRIEDRICH and R UDIGER DILLMANN 
Keyword: Key Words. Machine Learning, Robotics, Programming by Demonstration, Plan Construction  
Address: D-76128 Karl-sruhe, Germany,  
Affiliation: Institute for Real-Time Computer Systems Robotics, University of Karlsruhe,  
Abstract: This paper presents a method that allows to create programs by following the Programming by Demonstration paradigm. Plans for the execution of production processes such as assembly or stacking operation sequences are constructed not only from examples provided by the user through demonstrations. Additionally, the intention the user had in mind when demonstrating a specific example is acquired through a textual interface. By using these two sources of information a generalized plan containing conditioned operation sets can be constructed. Hence a solution for a whole class of tasks can be derived from a single demonstration. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Peter Merrett Andreae. </author> <title> Justified generalization: Acquiring procedures from examples. </title> <type> Technical Report AI-TR-834, </type> <institution> Artificial Intelligence Laboratory, MIT, </institution> <year> 1985. </year>
Reference-contexts: Applications of symbolic learning techniques are mostly concerned with the extension and/or maintainance of domain and action knowledge. So far mostly simple block world problems are considered for the application of symbolic learning techniques in systems programmable by demonstration. Moreover, those applications mostly take place in simulation (see [6], <ref> [1] </ref>, [11], [5]) only. Even though PbD is user friendly due to the 'natural', 'human' way of providing examples, it usually lacks one characteristic of Learning from Example methods. For the creation of a plan covering a whole class of tasks many examples are needed.
Reference: [2] <author> H. Asada and S. Liu. </author> <title> Transfer of human skills to neural net robot controllers. </title> <booktitle> In Proceedings of the 1991 IEEE International Conference on Robotics and Automation, </booktitle> <year> 1991. </year>
Reference-contexts: In robotics, PbD, which can be seen as a strongly user supported type of Learning from Examples has already been applied to numerous tasks. On the level of control-knowledge subsymbolic learning techniques, namely neural networks are used for representation, improvement and reformulation of knowledge (see [7], <ref> [2] </ref>, [9]). Applications of symbolic learning techniques are mostly concerned with the extension and/or maintainance of domain and action knowledge. So far mostly simple block world problems are considered for the application of symbolic learning techniques in systems programmable by demonstration.
Reference: [3] <author> R. Dillmann, M. Kaiser, J. Kreuziger, S. Muench, and A. Ude. </author> <title> Acquiring robot skills and knowledge by human demonstration. </title> <booktitle> In IEEE International Conference on Robotics and Automation, submitted. </booktitle>
Reference-contexts: 1 INTRODUCTION Recently the Programming by Demonstration (PbD) paradigm gained a lot of interest. Throughout the ML community as well as task oriented research areas like learning apprentice systems, graphics interface builders [10] and robotics <ref> [3] </ref>. The analogy to the human way of learning and teaching makes it an appealing approach for the development of intelligent, easy programmable, extendable, and maintainable systems.
Reference: [4] <author> Richard E. Fikes and Nils J. Nilsson. </author> <title> Strips: A new approach to the application of theorem proving to problem solving. </title> <journal> Artificial Intelligence, </journal> <volume> Vol. 2 </volume> <pages> 189-208, </pages> <year> 1971. </year>
Reference-contexts: It can itself be used as part of another plan, branch or loop. Currently, the loop operators are not used, they are however already defined for the next development stage of the system. All operators of the planning language are modeled in the tradition of STRIPS operators (see <ref> [4] </ref>). This in the sense that for every operator the applicability depends on the evaluation of a precondition and that after the application a certain postcondition is valid. Conditions themselves are expressed as terms that are a combination of dis- and conjunctions of relations.
Reference: [5] <author> Rosanna Heise. </author> <title> Programming robots by example. </title> <type> Technical Report 92/476/14, </type> <institution> Department of Computer Science, The University of Calgary, Canada, </institution> <year> 1992. </year>
Reference-contexts: So far mostly simple block world problems are considered for the application of symbolic learning techniques in systems programmable by demonstration. Moreover, those applications mostly take place in simulation (see [6], [1], [11], <ref> [5] </ref>) only. Even though PbD is user friendly due to the 'natural', 'human' way of providing examples, it usually lacks one characteristic of Learning from Example methods. For the creation of a plan covering a whole class of tasks many examples are needed. <p> Finally these are executed. 3 PLAN CONSTRUCTION Constructing a plan is a task consisting of several phases that will be discussed in the following paragraphs in detail. These are: 1. Formation of Object Groups (OGs). An OG is defined much like Key Groups in <ref> [5] </ref>. It contains a subset of the demonstration BO sequence that represents the manipulation of one object. 2. Determination of the valid postcondition of the input BO sequence. 3. Acquisition of the intention the user had with the demonstration via man-machine commu nication. 4. Detection and generation of branches.
Reference: [6] <author> Katsushi Ikeuchi and Takashi Suehiro. </author> <title> Towards an assembly plan from observation. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, Nice, </booktitle> <pages> pages 2171-2177, </pages> <year> 1992. </year>
Reference-contexts: Applications of symbolic learning techniques are mostly concerned with the extension and/or maintainance of domain and action knowledge. So far mostly simple block world problems are considered for the application of symbolic learning techniques in systems programmable by demonstration. Moreover, those applications mostly take place in simulation (see <ref> [6] </ref>, [1], [11], [5]) only. Even though PbD is user friendly due to the 'natural', 'human' way of providing examples, it usually lacks one characteristic of Learning from Example methods. For the creation of a plan covering a whole class of tasks many examples are needed.
Reference: [7] <author> M. Kaiser, A. Giordana, and M. Nuttin. </author> <title> Integrated acquisition, execution, evaluation and tuning of elementary skills for intelligent robots. </title> <booktitle> In Proceedings of the 2nd IFAC Symposium on Artificial Intelligence in Real Time Control (AIRTC '94), </booktitle> <address> Valencia, Spain, </address> <year> 1994. </year>
Reference-contexts: In robotics, PbD, which can be seen as a strongly user supported type of Learning from Examples has already been applied to numerous tasks. On the level of control-knowledge subsymbolic learning techniques, namely neural networks are used for representation, improvement and reformulation of knowledge (see <ref> [7] </ref>, [2], [9]). Applications of symbolic learning techniques are mostly concerned with the extension and/or maintainance of domain and action knowledge. So far mostly simple block world problems are considered for the application of symbolic learning techniques in systems programmable by demonstration.
Reference: [8] <author> Y. Kuniyoshi, M. Inaba, and H. Inoue. </author> <title> Seeing, understanding, doing human task. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <address> Nice, France, </address> <year> 1992. </year>
Reference-contexts: Nevertheless generalizations are easily triggered by the user through man-machine interaction. The presented method can be used on principle with other demonstration devices e.g. data-gloves or image processing systems (see <ref> [8] </ref>, [12]). Likewise graphical user interfaces and simulation tools are applicable for a more comfortable man-machine communication. Hence easy ways to giving demonstrations and communicating are open. This enables experts for the production task to be performed to program the task, even though they may only know little about robots.
Reference: [9] <author> L. J. Lin. </author> <title> Reinforcement learning for robots using neural networks. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, School of Computer Science, </institution> <year> 1993. </year>
Reference-contexts: In robotics, PbD, which can be seen as a strongly user supported type of Learning from Examples has already been applied to numerous tasks. On the level of control-knowledge subsymbolic learning techniques, namely neural networks are used for representation, improvement and reformulation of knowledge (see [7], [2], <ref> [9] </ref>). Applications of symbolic learning techniques are mostly concerned with the extension and/or maintainance of domain and action knowledge. So far mostly simple block world problems are considered for the application of symbolic learning techniques in systems programmable by demonstration.
Reference: [10] <author> M. Sassin. </author> <title> Creating User-Intended Programs with Programming by Demonstration. </title> <booktitle> pages 153 - 160, </booktitle> <address> St. Louis, Missouri, </address> <month> Oct. </month> <year> 1994. </year> <booktitle> Proc. of the 1994 IEEE/CS Symposium on Visual Languages. </booktitle>
Reference-contexts: 1 INTRODUCTION Recently the Programming by Demonstration (PbD) paradigm gained a lot of interest. Throughout the ML community as well as task oriented research areas like learning apprentice systems, graphics interface builders <ref> [10] </ref> and robotics [3]. The analogy to the human way of learning and teaching makes it an appealing approach for the development of intelligent, easy programmable, extendable, and maintainable systems.
Reference: [11] <author> A.M. Segre. </author> <title> Machine Learning of Robot Assembly Plans. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1988. </year>
Reference-contexts: So far mostly simple block world problems are considered for the application of symbolic learning techniques in systems programmable by demonstration. Moreover, those applications mostly take place in simulation (see [6], [1], <ref> [11] </ref>, [5]) only. Even though PbD is user friendly due to the 'natural', 'human' way of providing examples, it usually lacks one characteristic of Learning from Example methods. For the creation of a plan covering a whole class of tasks many examples are needed.
Reference: [12] <author> A. Ude and R. Dillmann. </author> <title> Trajectory reconstruction from stereo image sequences for teaching robot paths. </title> <booktitle> In Proc. of the 24th Int. Symposium on Industrial Robots, </booktitle> <address> Tokyo, </address> <year> 1993. </year>
Reference-contexts: Nevertheless generalizations are easily triggered by the user through man-machine interaction. The presented method can be used on principle with other demonstration devices e.g. data-gloves or image processing systems (see [8], <ref> [12] </ref>). Likewise graphical user interfaces and simulation tools are applicable for a more comfortable man-machine communication. Hence easy ways to giving demonstrations and communicating are open. This enables experts for the production task to be performed to program the task, even though they may only know little about robots.
References-found: 12

