URL: ftp://ftp.tnt.uni-hannover.de/pub/papers/1997/SCAI-97-UR.ps.gz
Refering-URL: http://www.tnt.uni-hannover.de/data/www/project/kbs/solution/
Root-URL: 
Title: Knowledge-Based Genetic Learning  
Author: Ursula Rost, Peter Oechtering 
Address: Appelstr. 9a, 30167 Hannover  
Affiliation: Institut fur Theoretische Nachrichtentechnik, Universitat Hannover  
Abstract: Genetic algorithms have been proven to be a powerful tool within the area of machine learning. However, there are some classes of problems where they seem to be scarcely applicable, e.g. when the solution to a given problem consists of several parts that influence each other. In that case the classic genetic operators cross-over and mutation do not work very well thus preventing a good performance. This paper describes an approach to overcome this problem by using high-level genetic operators and integrating task specific but domain independent knowledge to guide the use of these operators. The advantages of this approach are shown for learning a rule base to adapt the parameters of an image processing operator path within the SOLUTION system.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D.E. Goldberg, </author> <title> "Genetic Algorithms in Search, Optimization and Machine Learning", </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: 1 Introduction Genetic algorithms are a class of adaptive search techniques which use evolutionary principles like inheritance and natural selection. They have been applied successfully to many problems in different areas including machine learning (see for example <ref> [1] </ref>). However, there are some classes of problems where the standard genetic algorithm which uses bit patterns to represent the knowledge and crossover and mutation to work on it is scarcely applicable. This is especially the case within the field of learning complex behaviour containing multiple dependencies. <p> In this connection a maximum value means that a rule is non-dominated by any other rule in the sense that no other rule has a higher value in all three criteria. A more detailed description of the methodology of Pareto optimality can be found for example in <ref> [1] </ref>. The Pareto rank of each rule is converted into its priority value and thus influences whether it is selected during the conflict resolution process of the rule inference. The selection process is completely driven by the control rules described in the next section.
Reference: [2] <editor> L. D. Davis (Ed.), </editor> <booktitle> "Handbook of Genetic Algorithms",Van Nostrand Reinhold, </booktitle> <year> 1991. </year>
Reference-contexts: As problem-specific knowledge has to be incorporated into this process it is sometimes called hybridization <ref> [2] </ref>. Much research has been dedicated to these problems and many strategies have been proposed. An overview is given for example in [3] and a large set of applications using different kinds of data structures and genetic operators can be found in [4].
Reference: [3] <author> K. De Jong, </author> <title> "Learning with Genetic Algorithms", </title> <journal> Machine Learning, </journal> <volume> Vol.3, </volume> <pages> pp. 121-138, </pages> <year> 1988. </year>
Reference-contexts: As problem-specific knowledge has to be incorporated into this process it is sometimes called hybridization [2]. Much research has been dedicated to these problems and many strategies have been proposed. An overview is given for example in <ref> [3] </ref> and a large set of applications using different kinds of data structures and genetic operators can be found in [4]. While the operators described there are mainly variations of the classic mutation and crossover operators, Janikow suggests in [5] high-level genetic operators as for example specialization or generalization.
Reference: [4] <author> Z. Michalewicz, </author> <title> "Genetic Algorithms + Data Structures = Evolution Programs", third, revised and extended edition, </title> <publisher> Springer, </publisher> <year> 1996. </year>
Reference-contexts: Much research has been dedicated to these problems and many strategies have been proposed. An overview is given for example in [3] and a large set of applications using different kinds of data structures and genetic operators can be found in <ref> [4] </ref>. While the operators described there are mainly variations of the classic mutation and crossover operators, Janikow suggests in [5] high-level genetic operators as for example specialization or generalization.
Reference: [5] <author> C.Z. Janikow, </author> <title> "Inductive Learning of Decision Rules from Attribute-Based Examples: A Knowledge-Intensive Genetic Algorithm Approach", </title> <address> TR91-030, </address> <month> July </month> <year> 1991. </year>
Reference-contexts: An overview is given for example in [3] and a large set of applications using different kinds of data structures and genetic operators can be found in [4]. While the operators described there are mainly variations of the classic mutation and crossover operators, Janikow suggests in <ref> [5] </ref> high-level genetic operators as for example specialization or generalization. The genetic programming approach introduced by Koza uses hierarchical structured programs to encode the knowledge thus enabling the individuals of a population to have arbitrary size and shape [6].
Reference: [6] <editor> J.R. Koza, </editor> <booktitle> "Genetic Programming", </booktitle> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: The genetic programming approach introduced by Koza uses hierarchical structured programs to encode the knowledge thus enabling the individuals of a population to have arbitrary size and shape <ref> [6] </ref>. A different idea has been developed by Potter et al in [7]. There the population is broken up into several species which are designed to work on different tasks. Each of theses species is treated independently during the genetic phase. For evaluation all subpopulations are combined.
Reference: [7] <author> M.A. Potter, K.A. De Jong, J.F. Grefenstette, </author> <title> "A Coevolutionary Approach to Learning Sequential Decision Rules", </title> <booktitle> Proc. of the 6th International Conference on Genetic Algorithms, </booktitle> <publisher> Morgan Kaufmann, </publisher> <pages> pp. 366-372, </pages> <month> July </month> <year> 1995. </year>
Reference-contexts: The genetic programming approach introduced by Koza uses hierarchical structured programs to encode the knowledge thus enabling the individuals of a population to have arbitrary size and shape [6]. A different idea has been developed by Potter et al in <ref> [7] </ref>. There the population is broken up into several species which are designed to work on different tasks. Each of theses species is treated independently during the genetic phase. For evaluation all subpopulations are combined.
Reference: [8] <author> W.M. Spears, </author> <title> "Recombination parameters", Handbook of Evolutionary Computation, </title> <publisher> IOP Publishing Ltd. and Oxford University Press, </publisher> <year> 1995. </year>
Reference-contexts: They only vary to which extent any of the operators is used and to which portion of the population. While much work has been directed towards the investigation of the recombination and mutation parameters (see for example <ref> [8] </ref>) the stochastic principle used remains the same. In contrast the approach described in this paper uses a completely different strategy. The selection of the genetic operators is guided by control rules which incorporate feedback received from the environment which is gained during the evaluation process.
Reference: [9] <author> C.-E. Liedtke, A. Blomer, T. Gahm, </author> <title> "Knowledge-Based Configuration of Image Segmentation Processes", </title> <journal> International Journal of Imaging Systems and Technology, </journal> <volume> Vol.2, </volume> <pages> pp. 285-295, </pages> <year> 1990. </year>
Reference-contexts: This is something no company can afford nowadays so that many production managers are extremely hesitating concerning the further deployment of image processing systems. The basic idea behind SOLUTION which stands for Solution for a Learning Configuration System for Image Processing (and formerly Conny <ref> [9] </ref>) is to provide a tool to configure the low-level part of an image processing system in a way that always yields results with a specified quality so that subsequent high-level routines work more robustly. Low-level processing thereby means an image to image transformation.
Reference: [10] <author> C.-E. Liedtke, T. Schnier, A. Blomer, </author> <title> "Automated Learning of Rules Using Genetic Operators", </title> <booktitle> Proceedings of the 5th International Conference on Computer Analysis of Images and Patterns, </booktitle> <pages> pp. 327-334, </pages> <address> Budapest, </address> <month> Sept. </month> <year> 1993. </year>
Reference-contexts: The applicability of genetic algorithms to this kind of problem in principle has been shown in earlier studies. The genetic algorithm described in <ref> [10] </ref> already uses a coding scheme reflecting the structure of the rules. An individual is thereby represented by a single rule. <p> value of the granulation is "average". 5 Discussion and Future Work The knowledge-based genetic algorithm presented in this paper produces a performance increase up to the factor 100 when compared to a standard genetic algorithm applied to the same problem of learning a complex rule base for parameter adaptation (see <ref> [10] </ref>). This success is mainly due to the knowledge-based control of applying the high-level genetic operators used in this approach.
Reference: [11] <editor> J.J. Grefenstette, </editor> <booktitle> "Lamarckian learning in multi-agent environments", Proc. of the 4th International Conference on Genetic Algorithms, </booktitle> <publisher> Morgan Kaufmann, </publisher> <pages> pp. 303-310, </pages> <year> 1991. </year>
Reference-contexts: In addition to this most of the genetic operators represent logic or heuristic operators which are applied in reaction to the different situations which occurred during the preceding adaptation. Such kind of relationship of a learning operator to its environment is sometimes called Lamarckian. In <ref> [11] </ref> Grefenstette describes Lamarckian Learning in the domain of sequential decision making in an multi-agent environment.
Reference: [12] <author> C.L. Ramsey, J.F. Grefenstette, </author> <title> "Case-Based Initialization of Genetic Algorithms", </title> <booktitle> Proc. of the 5th Int. Conference on Genetic Algorithms, </booktitle> <publisher> Morgan Kaufmann, </publisher> <pages> pp. 84-91, </pages> <year> 1993. </year>
Reference-contexts: containing the property the local goal refers to, the direction in which a change is desired and the strength of this change. 3.2 Initial Population A careful choice of the initial population of a genetic algorithm can improve its efficiency in a substantial way as various studies have shown (e.g. <ref> [12, 13] </ref>). Although the algorithm described here is able to start from scratch, i.e. with an empty rule base, it turns out to reach a better performance when given an initial rule base that includes at least some useful rules.
Reference: [13] <author> Lingyan Shu, Jonathan Schaeffer, </author> <title> "Improving the Performance of Genetic Algorithm Learning by Choosing a Good Initial Population", </title> <type> Technical Report TR 90-22, </type> <institution> Department of Computing Science, University of Alberta, Canada, </institution> <month> July </month> <year> 1990. </year>
Reference-contexts: containing the property the local goal refers to, the direction in which a change is desired and the strength of this change. 3.2 Initial Population A careful choice of the initial population of a genetic algorithm can improve its efficiency in a substantial way as various studies have shown (e.g. <ref> [12, 13] </ref>). Although the algorithm described here is able to start from scratch, i.e. with an empty rule base, it turns out to reach a better performance when given an initial rule base that includes at least some useful rules.
Reference: [14] <author> U. Rost, C. Lehr, J. Wingbermuhle, C. Kramer, M. Fleute: </author> <booktitle> "Lageerkennung in der Knieendoprothetik", "Der Orthopade", </booktitle> <pages> pp. 237-245, </pages> <publisher> Springer-Verlag, </publisher> <pages> 3/97. </pages>
Reference-contexts: This problem consists of extracting the contours in an x-ray image that shows the projection of a human knee in which a knee joint endoprosthesis was implied. The algorithm used to compute the spatial position of the implant <ref> [14] </ref> needs for example highly accurate contour points to produce good results. Furthermore, the contours in the result image should not be frayed out and a certain portion of small artefacts should not be exceeded.
References-found: 14

