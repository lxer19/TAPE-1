URL: ftp://ftp.cs.arizona.edu/reports/1992/TR92-10.ps
Refering-URL: http://www.cs.arizona.edu/research/reports.html
Root-URL: http://www.cs.arizona.edu
Title: Bounds and Approximations for Overheads in the Time to Join Parallel Forks  
Author: Peter J. Downey 
Address: Tucson, Arizona 85721  
Affiliation: Department of Computer Science The University of Arizona  
Note: April  
Date: TR 92-10  2, 1992 Revised August 7, 1992  
Abstract: This paper studies the effects of overheads in massively parallel processing. The execution times for tasks on individual processors are modeled as independent and identically but arbitrarily distributed random variables. The time to execute a process fork is assumed to be distributed exponentially. The main result bounds (in expectation) the overhead time in forking a large number of tasks across n machines and then waiting for the join event. The model used is appropriate for massive parallelism (when n is large): in fact the bound serves as a heavy traffic limit approached as n fi and for task times that are large in comparison to the time to execute a fork. In this model, the expected total time to reach the final join consists of a forking overhead that grows linearly with the number of processors n, a time for parallel execution of tasks that decreases in n, and finally a synchronization delay that is a concave sub-linear function of r = EX /EA, which is the ratio of expected task time to the expected time needed to fork a new process. This overhead function is typically no worse that o(r). An interesting aspect of the analysis is that the original problem reduces to a previously studied problem in queueing theory: estimating total delay in an infinite-server resequencing system. The new results thus provide new bounds and heavy-traffic approximations in the theory of M /G / resequencing queues. 
Abstract-found: 1
Intro-found: 1
Reference: [Abr68] <editor> Abramowitz, M. and I.A. Stegun (eds). </editor> <title> Handbook of Mathematical Functions. </title> <institution> Washing-ton: National Bureau of Standards (1968). </institution>
Reference-contexts: It is shown in [Cho90] that this is equivalent to EY * (r) = EX . Ein (r) + EA . (1 - e -r ) , where the exponential integral <ref> [Abr68, p. 228] </ref> is defined by Ein (z) = (1 - e -t ) dt hhh . It is known that [Abr68, 5.1.39] Ein (z) = ln z + g + e -z hhhh . I L M , z fi where g is Euler's constant. <p> Ein (r) + EA . (1 - e -r ) , where the exponential integral [Abr68, p. 228] is defined by Ein (z) = (1 - e -t ) dt hhh . It is known that <ref> [Abr68, 5.1.39] </ref> Ein (z) = ln z + g + e -z hhhh . I L M , z fi where g is Euler's constant. <p> H n . H n can be extended to the reals via the digamma or psi function y (z) := D ln G (z); the relationship <ref> [Abr68, 6.3.2, 6.3.18] </ref> is H z := y (z + 1) + g = ln z + g + O (z -1 ) , z fi .
Reference: [And91] <author> Andrews, </author> <title> G.R. Concurrent Programming. </title> <address> Redwood City, CA: Benjamin-Cummings, </address> <year> 1991. </year>
Reference-contexts: A construct like this is used to specify concurrent execution of the given tasks in a wide variety of languages, including Algol 68, CSP and SR <ref> [And91] </ref>. Such a parallel construct is typically implemented through n fork () calls by the parent process, which then busy-waits for all n children to call exit () [And91]. <p> is used to specify concurrent execution of the given tasks in a wide variety of languages, including Algol 68, CSP and SR <ref> [And91] </ref>. Such a parallel construct is typically implemented through n fork () calls by the parent process, which then busy-waits for all n children to call exit () [And91].
Reference: [Arn89] <author> Arnold, B.C. and N. Balakrishnan. </author> <title> Relations, Bounds and Approximations for Order Statistics, </title> <booktitle> Lecture Notes in Statistics No. 53. </booktitle> <address> New York: </address> <publisher> Springer Verlag (1989). </publisher>
Reference-contexts: . . . , X n , no value can lie more than dddd n - 1 standard deviations from the population mean: 1 i n hh | s dddd n - 1 . (1.4) Half a dozen different proofs of this pleasant and extremely general inequality are provided in <ref> [Arn89] </ref>. <p> Since each integrand is non-negative, complete monotonicity in () is assured. ` Obviously EX (n) EX . n, but sharper results exist that bound the rate of increase of EX (n) as a concave function of n: PROPOSITION 2.4 <ref> [Arn89, Dow90] </ref>. If EX p &lt; for some p &gt; 0, then EX (n) = o (n 1/p ). 2.5. Regular Variation To a great extent the asymptotic behavior of EX (n) for large n is controlled by the rate of decay of the upper tail of F X .
Reference: [Bac84] <author> Baccelli, F., E. Gelenbe and B. </author> <title> Plateau. An end-to-end approach to the resequencing problem. </title> <journal> J. ACM 31, </journal> <month> 3 (Jul </month> <year> 1984), </year> <pages> 474-485. </pages>
Reference-contexts: This completes the induction. ` For a GI /G / resequencing system, define the traffic intensity by r := EX /EA. In <ref> [Bac84] </ref> it is shown that, for any finite r, the end-to-end delay is stable. That is, Y n converges in distribution to a proper (almost surely finite) random variable Y * which represents the equilibrium end-to-end delay. <p> Their work built on an earlier solution of the M /M / case by Kamoun, Kleinrock and Muntz [Kam81]. For a generalization of this model, where output from the M /G / resequencing system is fed into a single-server queue with general service time, Bacelli, Gelenbe and Plateau <ref> [Bac84] </ref> gave conditions for stability at equilibrium, and derived closed-form solutions for the Laplace transform of the equilibrium end to-end delay. In this section we provide a simple, direct argument establishing the distribution of Y * for the M /G / resequencing system.
Reference: [Bac85] <author> Baccelli, F., and A.M. Makowski. </author> <title> Simple computable bounds for the fork-join queue. </title> <booktitle> Proc. 19th Annual Conf. Information Sciences and Systems, </booktitle> <publisher> The Johns Hopkins University, </publisher> <address> Baltimore, MD (Mar 1985), </address> <pages> 536-441. </pages>
Reference-contexts: This liberal idealization is made since it is our purpose to study the effect of overheads arising from forking and synchronization alone, and to understand how these overheads trade against the benefit of parallel execution of tasks. Other models <ref> [Bac85, Bac89b, Kim89] </ref> have studied queueing delays caused by forking across a fixed number of processors. We also make the assumption that the task (i) represent the performance of independent, non-interfering and non-communicating processes.
Reference: [Bac89a] <author> Baccelli, F. and A.M. Makowski. </author> <title> Queueing models for systems with synchronization constraints. </title> <booktitle> Proc. IEEE 77, </booktitle> <month> 1 (Jan </month> <year> 1989), </year> <pages> 138-161. </pages>
Reference-contexts: Stochastic Orderings A number of useful notions of ordering among random variables occur in the literature <ref> [Sto83, Bac89a] </ref>. The two found most useful are defined below. DEFINITION. Let X and Y be non-negative random variables.
Reference: [Bac89b] <author> Baccelli, F., A.M. Makowski, and A. Shwartz. </author> <title> The fork-join queue and related systems with synchronization constraints: stochastic ordering and computable bounds. </title> <journal> Adv. Appl. Prob. </journal> <volume> 21, </volume> <year> (1989), </year> <pages> 629-660. </pages>
Reference-contexts: This liberal idealization is made since it is our purpose to study the effect of overheads arising from forking and synchronization alone, and to understand how these overheads trade against the benefit of parallel execution of tasks. Other models <ref> [Bac85, Bac89b, Kim89] </ref> have studied queueing delays caused by forking across a fixed number of processors. We also make the assumption that the task (i) represent the performance of independent, non-interfering and non-communicating processes. <p> Finally, we may wish to restrict the number of available processors to a total of m, running several tasks sequentially on one machine when n &gt; m. Analysis of this case would relate closely to the study of GI /G /m resequencing queues <ref> [Bac89b] </ref>. Here bounding results involving stochastic inequalities are likely to be the most successful. - 19 - --- Acknowledgement I am grateful to Robert Maier for several suggestions that considerably improved the statement and proof of Theorem 5.3.
Reference: [Ben78] <author> Bender, </author> <title> C.M. and S.A. Orszag. Advanced Mathematical Methods for Scientists and Engineers. </title> <address> New York: </address> <publisher> McGraw-Hill (1978). </publisher>
Reference: [Bin83] <author> Bingham, N.H. and J. Hawkes. </author> <title> On limit theorems for occupation times. In J.F.C. </title> <journal> King-man and G.E.H. Reuter, Probability, Statistics and Analysis, London Math. Soc. Lect. Note Ser. </journal> <volume> 79, </volume> <publisher> Cambridge University Press (1983), </publisher> <pages> 46-62. </pages>
Reference-contexts: This completes the proof of Theorem 5.3. ` Asymptotic estimates similar to (5.10) have been proven for more general Poisson-weighted sums of regularly varying sequences (not involving extremes) in <ref> [Bin83, Teu77] </ref>. The previous two results can be combined to give a heavy traffic bound for expected end-to-end resequencing delay. THEOREM 5.4 (M/G / Heavy-Traffic Bound). In an M /G / resequencing system, with non-lattice service random variable X and exponential interarrival random variable A, let r := EX /EA.
Reference: [Bin87] <editor> Bingham N.H., C.M. Goldie and J.L. Teugels. </editor> <title> Regular Variation, </title> <booktitle> volume 27 of The Encyclopedia of Mathematics and Its Applications, </booktitle> <publisher> Cambridge University Press, </publisher> <address> Cam-bridge, </address> <year> 1987. </year>
Reference-contexts: U is rapidly varying if the limit exists and is 0 or . The fundamental result about regular variation <ref> [Bin87] </ref> is that if the limit (2.7) exists for all l &gt; 1, then there is a real number a, 0 a such that " l &gt; 1 lim U (lx) hhhhhh = l a . (2.8) This a is called the exponent or index of variation.
Reference: [Bra89] <author> Brawer, S. </author> <title> Introduction to Parallel Programming. </title> <address> New York: </address> <publisher> Academic Press (1989). </publisher>
Reference-contexts: Since fork () and wait () are low-level synchronization primitives, they need not be used in the restrictive way illustrated in Figure 1.1. However, this disciplined pattern of use, or "paradigm", is commonly seen in both the organization of operating systems code as well as in scientific applications <ref> [Bra89] </ref>. One important reason for the ubiquity of this pattern comes from the presence in high-level programming languages of the parallel execution construct cobegin task (1) || task (2) || . . . || task (n) coend . <p> The significant explicit overheads in Figure 1.1 arise from the fork () calls. If a fork () call actually creates a new process on a new processor, rather than reallocating an existing one, the call might require several milliseconds on a typical 1 MIP (million instructions per second) processor <ref> [Bra89] </ref>. Experiments on the Sequent Symmetry multiprocessor indicate that process creation takes 13-14 milliseconds. Process creation involves such substantial overhead from the need to manage memory tables and create a new address space. <p> Process creation involves such substantial overhead from the need to manage memory tables and create a new address space. If all needed processes are pre-created and "parked" while busy-waiting until dispatched on a fork () request, the call can return in tens of microseconds <ref> [Bra89] </ref>. Sequent experiments indicate that 280-300 microseconds suffice for parked processor allocation. This is still a substantial overhead, equivalent to hundreds of instructions on a 1 MIP processor.
Reference: [Cho90] <author> Chowdhury, S. </author> <title> Analysis of queueing systems requiring resequencing of customers. </title> <type> TR 90-26, </type> <institution> Department of Computer Science, University of Arizona, </institution> <month> August </month> <year> 1990. </year>
Reference-contexts: S e -r r n where H n = S 1 n i -1 is the nth harmonic number. It is shown in <ref> [Cho90] </ref> that this is equivalent to EY * (r) = EX . Ein (r) + EA . (1 - e -r ) , where the exponential integral [Abr68, p. 228] is defined by Ein (z) = (1 - e -t ) dt hhh .
Reference: [Cin75] <author> Cinlar, E. </author> <title> Introduction to Stochastic Processes. </title> <address> Englewood Cliffs: </address> <publisher> Prentice-Hall (1975). </publisher>
Reference-contexts: PROPOSITION 2.1 <ref> [Cin75, Ros83] </ref>. If the renewal period X = d F is not a lattice and EX &lt; then X (t) fi D X * as t fi , where F X * (x ) = 0 x hhh hhhhhhhhh . (2.2) Distributional convergence does not imply convergence in moment.
Reference: [Chu74] <author> Chung, K.L. </author> <title> A Course in Probability Theory, 2nd Ed. </title> <address> New York: </address> <publisher> Academic Press (1974). </publisher>
Reference-contexts: For example, E Z (X + Z) is equivalent to the random variable EZ + X. Two standard notions of stochastic convergence <ref> [Chu74] </ref> are used in the sequel. a sequence of random variables X n = d F n (x ) is said to converge in distribution to a random variable X = d F (x ) pro vided that for all x n fi If this is the case we write X <p> It follows by Theorem 4.1 and Corollary 4.2 that EY n EY n +1 EY * . If in addition EY * is finite, then the sequence EY n is uniformly bounded and Y n fi D Y * . Under these conditions it is well-known <ref> [Chu74, Theorem 4.5.2] </ref> that convergence in distribution implies convergence in moment. This establishes (4.5). ` 5. <p> By Theorem 2.3 EZ (n) is concave for n &gt; 0, and we have by Jensen's inequality <ref> [Chu74, p. 47] </ref> that for all r &gt; 0 I (r) = E N [E Z Z (N) ] E Z Z (EN) = E Z Z (r) = EZ (r) . This bound trivially holds for r = 0.
Reference: [Dow90] <author> Downey, P.J. </author> <title> Distribution-free bounds on the expectation of the maximum with scheduling applications. </title> <journal> Operations Research Letters 9 (1990), </journal> <pages> 189-201. </pages>
Reference-contexts: Since each integrand is non-negative, complete monotonicity in () is assured. ` Obviously EX (n) EX . n, but sharper results exist that bound the rate of increase of EX (n) as a concave function of n: PROPOSITION 2.4 <ref> [Arn89, Dow90] </ref>. If EX p &lt; for some p &gt; 0, then EX (n) = o (n 1/p ). 2.5. Regular Variation To a great extent the asymptotic behavior of EX (n) for large n is controlled by the rate of decay of the upper tail of F X . <p> As Proposition 2.4 indicates, EX (r) * is a slowly growing function of r, no worse than o (r) as long as EX 2 &lt; . For many types of distribution function, it is at most polylogarithmic. Discussion of the slow growth of expected extremes occurs in <ref> [Dow90, Dow91] </ref>. We can apply (7.1) to the estimation of speed-up in expectation achievable as n fi . It is instructive to compare the result with that from the deterministic "worst-case" model of (1.9).
Reference: [Dow91] <author> Downey, P.J. and R.S. Maier. </author> <title> Stochastic orderings and the mean growth of extremes. </title> <type> TR 91-13, </type> <institution> Department of Computer Science, University of Arizona, </institution> <month> April </month> <year> 1991. </year>
Reference-contexts: As Proposition 2.4 indicates, EX (r) * is a slowly growing function of r, no worse than o (r) as long as EX 2 &lt; . For many types of distribution function, it is at most polylogarithmic. Discussion of the slow growth of expected extremes occurs in <ref> [Dow90, Dow91] </ref>. We can apply (7.1) to the estimation of speed-up in expectation achievable as n fi . It is instructive to compare the result with that from the deterministic "worst-case" model of (1.9).
Reference: [Fer67] <author> Ferguson, </author> <title> T.S. Mathematical Statistics: A Decision Theoretic Approach. </title> <address> New York: </address> <publisher> Academic Press (1967). </publisher>
Reference-contexts: The bound (1.8) is therefore the product of a "malevolent adversary" assumption rather than the result of a "disinterested adversary" assumption about the source of workloads. In this sense, it is a game-theoretic bound rather than a decision-theoretic bound <ref> [Fer67] </ref>, in which the opposing player is an intelligent optimizing agent rather than "nature". g The deterministic nature of the bound prevents us from understanding how T n is affected by other characteristics of the workload, such as the distribution of long tasks.
Reference: [Gne43] <author> Gnedenko, </author> <title> B.V. Sur la distribution limit e du terme d'une s erie al eatoire. </title> <journal> Ann. Math. </journal> <volume> 44, </volume> <year> (1943),423-453. </year>
Reference-contexts: Let X = d F be a non-negative random variable with F hh Then EX (n) &lt; and EX (n) ~ G (1 a-1 ) . c X (n) , n fi . (2.10) Gnedenko <ref> [Gne43] </ref> showed that in the regular (a &lt; ) case, X (n) /c X (n) fi D F a where the limit F a has the d.f. exp (-x a). <p> No general limit distribution result holds for the R case, though an analogous result holds for certain subclasses <ref> [Gne43, Res87] </ref>. 3. Reduction to a Resequencing System Consider a sequence of customers 1, 2, . . . n, . . . arriving at a service system.
Reference: [Gro85] <author> Gross, D. and G.M. Harris. </author> <title> Fundamentals of Queueing Theory, 2nd Ed. </title> <address> New York: </address> <publisher> Wiley, </publisher> <year> 1985. </year> - <note> 20 - --- [Har82] Harrus, </note> <author> G. and B. </author> <title> Plateau. Queueing analysis of a reordering issue. </title> <journal> IEEE Trans. on Software Engineering SE-8, </journal> <month> 2(Mar </month> <year> 1982), </year> <pages> 113-123. </pages>
Reference-contexts: Conditioned on n in the system at arrival, the total delay is thus distributed as max (X (n) * , X). Removing the conditioning, using the well-known M /G / equilibrium state distribution <ref> [Gro85] </ref> yields the mixture in (5.2). In terms of d.f.s, (5.1) is equivalent. ` Harrus and Plateau [Har82] do not directly derive an expression of end-to-end delay Y * . Instead they focus upon the equilibrium resequencing delay R * = Y * - X.
Reference: [Kam81] <author> Kamoun, F., L. Kleinrock and R. Muntz. </author> <title> Queueing analysis of the ordering issue in a distributed database concurrency control mechanism. </title> <booktitle> Proc. 2nd International Conf. on Distributed Computing Systems, </booktitle> <address> Versailles, France, </address> <note> IEEE (April 1981). </note>
Reference-contexts: The disordering subsystem is then an M /G / queueing system. Harrus and Plateau [Har82] solved for the distribution of resequencing delay and various other parameters for this resequencing system. Their work built on an earlier solution of the M /M / case by Kamoun, Kleinrock and Muntz <ref> [Kam81] </ref>. <p> EXAMPLE 5.5. (Exponential Delays.) The end-to-end delay in an M /M / system in which X is assumed to be EXP (1/EX) has been solved <ref> [Kam81] </ref> to give EY * (r) = EX . S e -r r n where H n = S 1 n i -1 is the nth harmonic number. It is shown in [Cho90] that this is equivalent to EY * (r) = EX .
Reference: [Kim89] <author> Kim, C. and A.K. Agrawala. </author> <title> Analysis of the fork-join queue. </title> <journal> IEEE Trans. on Computers 38, </journal> <month> 2(Feb </month> <year> 1989), </year> <pages> 250-255. </pages>
Reference-contexts: This liberal idealization is made since it is our purpose to study the effect of overheads arising from forking and synchronization alone, and to understand how these overheads trade against the benefit of parallel execution of tasks. Other models <ref> [Bac85, Bac89b, Kim89] </ref> have studied queueing delays caused by forking across a fixed number of processors. We also make the assumption that the task (i) represent the performance of independent, non-interfering and non-communicating processes.
Reference: [Kle76] <author> Kleinrock, L. </author> <title> Queueing Systems, </title> <booktitle> Vol. II: Computer Applications. </booktitle> <address> New York: </address> <publisher> Wiley (1976). </publisher>
Reference: [Pic68] <author> Pickands, J. </author> <title> Moment convergence of sample extremes. </title> <journal> Ann. Math. Statist. </journal> <volume> 39, </volume> <year> (1968), </year> <pages> 881-889. </pages>
Reference-contexts: DEFINITION. For a random variable X, the characteristic maximum function is defined as follows: c X (n) = F X (n -1 ) . (2.9) The significance of the characteristic maximum function is given by the following PROPOSITION 2.5 <ref> [Pic68] </ref>.
Reference: [Res87] <author> Resnick, </author> <title> S.I. Extreme Values, Regular Variation and Point Processes. </title> <address> New York: </address> <publisher> Springer-Verlag (1987). </publisher>
Reference-contexts: No general limit distribution result holds for the R case, though an analogous result holds for certain subclasses <ref> [Gne43, Res87] </ref>. 3. Reduction to a Resequencing System Consider a sequence of customers 1, 2, . . . n, . . . arriving at a service system. <p> In the exponential case, X * = d X and the expected extreme of n exponentials is well-known <ref> [Res87] </ref> to be EX (n) * = EX . H n . <p> A PAR (b) rv has finite pth moments only for p [0, b); we confine attention to the case b &gt; 1. Straightforward calculation (as found in <ref> [Res87] </ref> for example) establishes that for b &gt; 1 EX (n) = G (1 - b -1 ) . n 1/b - 1 + o (1) . Using (2.1) one directly shows that if X is PAR (b) then X * is PAR (b - 1).
Reference: [Ros83] <author> Ross, </author> <title> S.M. Stochastic Processes. </title> <address> New York: </address> <publisher> Wiley (1983). </publisher>
Reference-contexts: PROPOSITION 2.1 <ref> [Cin75, Ros83] </ref>. If the renewal period X = d F is not a lattice and EX &lt; then X (t) fi D X * as t fi , where F X * (x ) = 0 x hhh hhhhhhhhh . (2.2) Distributional convergence does not imply convergence in moment. <p> It is immediate that X d Y fi X c Y fi E [X p ] E [Y p ] (2.5) for all p 1, provided the expectations exist. PROPOSITION 2.2 <ref> [Ros83] </ref>.
Reference: [Sam68] <author> Samuelson, </author> <title> P.A. How deviant can you be? J. </title> <journal> Amer. Statist. Assoc. </journal> <volume> 63, </volume> <year> (1968), </year> <pages> 1522-1525. </pages>
Reference-contexts: Define the speed-up ratio by S (n) := i =1 n hhhhh . Only in the perfect balance case can a perfect speed-up of S (n) = n occur. But perfect balance is not achieved in practice; there is always some variation in the population. Samuelson's <ref> [Sam68] </ref> famous result is that, in a finite population of n values X 1 , . . . , X n , no value can lie more than dddd n - 1 standard deviations from the population mean: 1 i n hh | s dddd n - 1 . (1.4) Half
Reference: [Sto83] <author> Stoyan, D. </author> <title> Comparison Methods for Queues and Other Stochastic Models. </title> <address> New York: </address> <publisher> Wiley (1983). </publisher>
Reference-contexts: Stochastic Orderings A number of useful notions of ordering among random variables occur in the literature <ref> [Sto83, Bac89a] </ref>. The two found most useful are defined below. DEFINITION. Let X and Y be non-negative random variables.
Reference: [Teu77] <author> Teugels, J.L. </author> <title> On the rate of convergence of the maximum of a compound Poisson process. </title> <journal> Bull. Soc. Math. Belg., Ser B 29, </journal> <volume> II(1977), </volume> <pages> 205-216 </pages>
Reference-contexts: This completes the proof of Theorem 5.3. ` Asymptotic estimates similar to (5.10) have been proven for more general Poisson-weighted sums of regularly varying sequences (not involving extremes) in <ref> [Bin83, Teu77] </ref>. The previous two results can be combined to give a heavy traffic bound for expected end-to-end resequencing delay. THEOREM 5.4 (M/G / Heavy-Traffic Bound). In an M /G / resequencing system, with non-lattice service random variable X and exponential interarrival random variable A, let r := EX /EA.
Reference: [Var87] <author> Varma, S. </author> <title> Some problems in queueing systems with resequencing. </title> <type> Electrical Engineering Technical Report TR 87-192, </type> <institution> University of Maryland, College Park (1987). </institution>
Reference-contexts: See Figure 3.1. arrivals disordering system resequencing buffer resequenced departures interarrivals A n D n R n Y n A fundamental result in resequencing systems is the sample path recurrence describing Y n . LEMMA 3.1 <ref> [Bac84 , Var87] </ref>. Y n +1 = max (X n +1 , Y n An+1 ) . (3.1) Proof: Let a n +1 denote the arrival instant of customer n +1.
Reference: [Wid71] <author> Widder, D.V. </author> <title> An Introduction to Transform Theory. </title> <address> New York: </address> <publisher> Academic (1971). </publisher> - <pages> 21 </pages> - 
Reference-contexts: With this real extension, the overall qualitative behavior of the expected extreme is reported below: EX (n) is increasing and concave in n. Let Df (n) represent differentiation with respect to real argument n. DEFINITION <ref> [Wid71] </ref>. A real function f (n) is completely monotone in argument n on the interval (a, ), written f c.m.(a, ), if it is infinitely differentiable on (a, ) and for all k 0 (-1) k D k f (n) 0 , for all n [a, ).
References-found: 30

