URL: http://www.eecs.umich.edu/~hyungwon/research/ITC98.ps
Refering-URL: http://www.eecs.umich.edu/~hyungwon/research/RIBATPG.html
Root-URL: http://www.eecs.umich.edu
Title: High-Coverage ATPG for Datapath Circuits with Unimplemented Blocks  
Author: Hyungwon Kim and John P. Hayes 
Address: Ann Arbor, MI 48109-2122 USA  
Affiliation: Department of Electrical Engineering and Computer Science University of Michigan,  
Abstract: Conventional ATPG cannot effectively handle designs employing IP circuits (cores) whose implementation details are either unknown, unavailable, or subject to change. A new ATPG program RIBTEC for such designs is described that employs a functional (behavioral) fault model based on a class of none xhaustive universal test sets. Given a circuits high-level block structure, RIBTEC constructs a universal test set for each block from its functional description in such a w ay that realization-independence of the blocks is ensured. Experimental results are presented for representative datapath circuits, which show that RIBTEC achieves very high fault coverage and an exceptionally high level of realization independence. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. B. Akers, </author> <title> Universal Test Sets for Logic Networks, </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. C-22, </volume> <pages> pp. 853-839, </pages> <month> Sept. </month> <year> 1973. </year>
Reference-contexts: For instance, the carry block of an N-bit adder, requires at least 2 2N + 1 tests with the CF model, while it requires only 2N + 2 tests with the fault model presented in this paper. The socalled universal tests proposed in the 1970s <ref> [1, 3] </ref> provide yet another route to realization-independent testing. Universal tests are derived from a circuits functional specification, and so are realization-independent subject to some modest restrictions; the y also detect multiple stuck-line (MSL) and other comple x faults [17]. <p> The maximal false vector s are defined similarly. Expanded vectors consist of all input literals appearing in a functions minimal expression <ref> [1] </ref>. The universal test set (UTS) U z of a function z consists of all minimal true expanded vectors U z T and all maximal f alse expanded vectors U z F of z [1]. <p> Expanded vectors consist of all input literals appearing in a functions minimal expression <ref> [1] </ref>. The universal test set (UTS) U z of a function z consists of all minimal true expanded vectors U z T and all maximal f alse expanded vectors U z F of z [1]. For example, Fig. 1 (b) gives the UTS for a function z 1 (a,b,c,d) derived from its truth table. <p> Procedure RIB-Tgen (t k , U (k)) 1: for each bit x i in t k begin 2: if (x i is positive [negative] unate and t k = true vector and x i = 0 <ref> [1] </ref>) then 3: t h := complement (t k , x i ); /* Complement x i of t k */ 4: if (t h = true vector and E (t h ) is no greater than E (t u ) for all t u in U (k)) then T R
Reference: [2] <author> M. Batek and J. P. Hayes, </author> <title> Test-Set Preserving Logic Transformations, </title> <booktitle> Proc. Design Automation Conf. </booktitle> <pages> pp. 454-458, </pages> <year> 1992. </year>
Reference-contexts: This follows from the f act that an y BIP realization can be obtained from a unate-g ate network by applying a set of resubstitution and De Morgan transformations, which preserve MSL fault detectability <ref> [2] </ref>. If R m is an m-output BIP network realizing the set of functions -z i -, then the union of the universal test sets - detects all detectable MSL faults in R m .
Reference: [3] <author> R. Betancourt, </author> <title> Derivation of Minimum Test Sets for Unate Logic Circuits, </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. C-20, </volume> <pages> pp. 1264-1269, </pages> <month> Nov. </month> <year> 1971. </year>
Reference-contexts: For instance, the carry block of an N-bit adder, requires at least 2 2N + 1 tests with the CF model, while it requires only 2N + 2 tests with the fault model presented in this paper. The socalled universal tests proposed in the 1970s <ref> [1, 3] </ref> provide yet another route to realization-independent testing. Universal tests are derived from a circuits functional specification, and so are realization-independent subject to some modest restrictions; the y also detect multiple stuck-line (MSL) and other comple x faults [17]. <p> The size of the UTS U z for a unate function z equals the relatively small number of zs prime implicants and prime implicates <ref> [3] </ref>. Most datapath functions such as adders and ALUs are completely binate and thus require an exhaustive UTS of size 2 2N+1 for word size N, which is clearly impractical. <p> The UTS for a unate function z can be constructed by substituting 1 for every variable present in each prime impli-cant of z, and substituting 0 for e very variable not present, while substituting 0 for every variable in each prime implicate and 1 for e very variable not present <ref> [3] </ref>. The prime implicants define the set U T of all minimal true v ectors, while the prime implicates define the set U F of all maximal false vectors.
Reference: [4] <author> R. D. Blanton and J. P. Hayes, </author> <title> Properties of the Input Pattern Fault Model, </title> <booktitle> Proc. Intl Conf. Comp. Design, </booktitle> <pages> pp. 372-380, </pages> <year> 1997. </year>
Reference-contexts: This model has been used for testing iterati ve logic arrays and in design-for-test (DFT) techniques for C-testability [5, 18]. CF testing methods can pro vide realization independence for circuits composed of very small cells only <ref> [4, 8] </ref> because they require exhaustive testing of the cells. For instance, the carry block of an N-bit adder, requires at least 2 2N + 1 tests with the CF model, while it requires only 2N + 2 tests with the fault model presented in this paper.
Reference: [5] <author> A. Chatterjee and J. A. Abraham, </author> <title> Test Generation, Design-for-Testability, and Built-In Self-Test for Arithmetic Units Based on Graph Labeling, </title> <journal> Journal of Electronic Testing, </journal> <volume> vol. 2, </volume> <pages> pp. 351-372, </pages> <month> Nov. </month> <year> 1991. </year>
Reference-contexts: The cell fault (CF) model, for e xample, considers all combinational faults that change the function of a cell. This model has been used for testing iterati ve logic arrays and in design-for-test (DFT) techniques for C-testability <ref> [5, 18] </ref>. CF testing methods can pro vide realization independence for circuits composed of very small cells only [4, 8] because they require exhaustive testing of the cells.
Reference: [6] <author> B. Chen and C. L. Lee, </author> <title> A Complement-Based Fast Algorithm to Generate Universal Test Sets for Multi-Output Functions, </title> <journal> IEEE Trans. CAD, </journal> <volume> vol. 13, </volume> <pages> pp. 370-377, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: To handle large binate functions more ef ficiently, a fast algorithm similar to FUTS <ref> [6] </ref> could be used. 5 Experimental Results We have implemented RIBTEC in an ATPG program composed of about 6000 lines of C++ code. T o date, we have applied it to a fe w circuits that can be vie wed as small IP designs.
Reference: [7] <author> K. De, </author> <title> Test Methodology for Embedded Cores which Protects Intellectual Property, </title> <booktitle> Proc. VLSI Test Symp., </booktitle> <pages> pp. 2-9, </pages> <year> 1997. </year>
Reference-contexts: However, it is difficult to apply these test vectors to the IP circuits when they are surrounded by other, user-designed circuits, without employing high-cost boundary scan <ref> [7, 20] </ref>. A possible way of addressing the abo ve issues is to construct tests directly from high-le vel descriptions of the IP circuits and their faulty behavior, so that testing becomes independent of the IP circuits low (gate-level) implementation details.
Reference: [8] <author> D. Gizopoulos, et al,. </author> <title> An Effective BIST Scheme for Arithmetic Logic Units, </title> <booktitle> Proc. Intl Test Conf., </booktitle> <pages> pp. 868-877, </pages> <year> 1997. </year>
Reference-contexts: This model has been used for testing iterati ve logic arrays and in design-for-test (DFT) techniques for C-testability [5, 18]. CF testing methods can pro vide realization independence for circuits composed of very small cells only <ref> [4, 8] </ref> because they require exhaustive testing of the cells. For instance, the carry block of an N-bit adder, requires at least 2 2N + 1 tests with the CF model, while it requires only 2N + 2 tests with the fault model presented in this paper.
Reference: [9] <author> P. Goel, </author> <title> An Implicit Enumeration Algorithm to Generate Tests for Combinational Logic Circuits, </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. C-30, </volume> <pages> pp. 215-222, </pages> <month> May </month> <year> 1981. </year>
Reference-contexts: A pair (t i , r j ) is selected from S P and a primary input v ector pt that applies t i and observes r j is computed by HL-PODEM ((t i , r j )). The procedure HL-PODEM is similar to PODEM <ref> [9] </ref>, b ut represents blocks as two-level Boolean expressions. If HL-PODEM ((t i , r j )) fails, then t i is an NCV or NO V.
Reference: [10] <author> G. Gupta and N. K. Jha, </author> <title> A Universal Test Set for CMOS Circuits, </title> <journal> IEEE Trans. CAD, </journal> <volume> vol. 7, </volume> <pages> pp. 590-597, </pages> <month> May. </month> <year> 1988. </year>
Reference-contexts: In the case of binate functions, uni versal test sets become exhaustive, and for this reason the y have been largely ignored in the past. The uni versal testing approach has, however, been successfully applied recently to two-pattern testing for sequential (delay) faults <ref> [10, 19] </ref>. At first sight, datapath circuits seem poor candidates for universal test sets, because most of their output functions are binate, so the universal test set computed for the entire circuit can be e xcessively large.
Reference: [11] <author> G. D. Hachtel and F. Somenzi, </author> <title> Logic Synthesis and Verification Algorithms, </title> <publisher> Kluwer, </publisher> <address> Boston, </address> <year> 1996. </year>
Reference-contexts: The last column in Fig. 6 (b) indicates which uni versal tests are NCVs or NOVs. The NCVs are called satisf iability dont care inputs in the logic synthesis literature <ref> [11] </ref>. NO Vs are similar to observability dont cares, but cover a broader range of output v ectors that are unobserv able due to multiple faulty output lines.
Reference: [12] <author> M. Hansen and J. Hayes, </author> <title> High-level Test Generation Using Physically-Induced Faults, </title> <booktitle> Proc. VLSI Test Symp., </booktitle> <pages> pp. 20-28, </pages> <year> 1995. </year>
Reference-contexts: The IP pro viders can thus hide key implementation details, and the use of full boundary scan to access embedded versions of C can be avoided. Several approaches <ref> [12, 16] </ref> have been suggested previously for realization-independent testing of datapath circuits, but they are all limited to a fe w specific applications and design styles. Alternatively, a sufficiently general fault model can implicitly provide a high degree of realization independence. <p> These include four different classes of high-level datapath circuits: a carry look-ahead adder , a carry select adder, an ALU, and a magnitude comparator. We also experimented with two ISCAS-85 benchmark circuits: c880 and c7552 whose high-level structures have been previously extracted from their gate-level netlist <ref> [12] </ref>. The high-le vel models of these circuits are composed of relati vely large blocks that have as many as 17 inputs and 8 outputs, and are specified by behavioral Verilog code.
Reference: [13] <author> H. K. Lee and D. S. Ha, </author> <title> On the Generation of Test Patterns for Combinational Circuits, </title> <type> Tech. Report 12-93, </type> <institution> EE Dept., Virginia Polytechnic Institute and State University, </institution> <year> 1993. </year>
Reference-contexts: If HL-PODEM ((t i , r j )) succeeds, on the other hand, fault simulation with pt removes other covered pairs -(t i , r j )- as well. Finally, when all pairs in S p have been examined, reverse-order fault simulation <ref> [13] </ref> is done to reduce the size of the f inal test set. As a result, RIBTEC generates a complete test set T RIBTEC for C and identifies its detectable RIB fault set S F . <p> The other columns give the number of tests obtained and the CPU time for a HALstation300 SPARC64. The current (preliminary) implementation of RIBTEC compresses the test sets using a simple re verse-order fault simulation technique similar to that in <ref> [13] </ref>. Ne vertheless, RIBTEC produces relatively small test sets for all the circuits examined. We also synthesized tw o different gate-level implementations of the example circuits, one for low area and the other for high speed. <p> We used both the Synopsys Design Compiler program and manual design, and we found that in all cases the realizations meet the BIP constraints automatically with no design changes. Then we generated tests for the gate-level designs using the conventional (implementation-specific) ATPG program Atalanta <ref> [13] </ref>. The last four columns of Fig. 13 gi ve the RIB f ault coverage obtained when the Atalanta test sets are applied to the initial high-level designs.
Reference: [14] <author> H. K. Lee and D. S. Ha, </author> <title> An Efficient Forward Fault Simulation Algorithm Based on the Parallel Pattern Single Fault Propagation, </title> <booktitle> Proc. Intl Test Conf., </booktitle> <pages> pp. 946-955, </pages> <month> Oct. </month> <year> 1991. </year>
Reference-contexts: )-; 15: end; /* Test compaction */ 16: Reverse-Order-FaultSimulate (T RIBTEC ); 17: return T RIBTEC and S F ; /* S F = Detectable RIB fault set */ We performed conventional SSL fault simulation with the above test sets applied to the two gate-level realizations. faults measured by FSIM <ref> [14] </ref>. While RIBTEC tests provide 100% coverage for all casesas e xpected, since the SSL faults are a small subset of the MSL f aultsAtalanta tests provide 100% coverage only for the g ate-level designs at which they were targeted, and fairly poor coverage for the others.
Reference: [15] <author> B. T. Murray and J. P. Hayes, </author> <title> Testing ICs: Getting to the Core of the Problem, </title> <journal> IEEE Computer, </journal> <volume> vol. 29, </volume> <pages> pp. 32-38, </pages> <month> Nov. </month> <year> 1996. </year>
Reference-contexts: Functional testing without explicit fault models is the main alternative, but existing methods provide low and uncertain fault coverage or, as in (pseudo) exhaustive testing, are practical only for very small circuits <ref> [15] </ref>. Test Application Problems: In the case of fully designed (hard) IP circuits, the providers often do not reveal the implementation details of the circuits, but instead provide precomputed test vectors for them.
Reference: [16] <author> M. Nicolaidis, </author> <title> Test Pattern Generators for Arithmetic Units and Arithmetic and Logic Units, </title> <booktitle> Proc. European Test Conf., </booktitle> <pages> pp. 61-71, </pages> <year> 1991. </year>
Reference-contexts: The IP pro viders can thus hide key implementation details, and the use of full boundary scan to access embedded versions of C can be avoided. Several approaches <ref> [12, 16] </ref> have been suggested previously for realization-independent testing of datapath circuits, but they are all limited to a fe w specific applications and design styles. Alternatively, a sufficiently general fault model can implicitly provide a high degree of realization independence.
Reference: [17] <author> S. M. Reddy, </author> <title> Complete Test Sets for Logic Functions, </title> <journal> IEEE Trans. CAD, </journal> <volume> vol. C-22, </volume> <pages> pp. 1016-1020, </pages> <month> Nov. </month> <year> 1973. </year>
Reference-contexts: The socalled universal tests proposed in the 1970s [1, 3] provide yet another route to realization-independent testing. Universal tests are derived from a circuits functional specification, and so are realization-independent subject to some modest restrictions; the y also detect multiple stuck-line (MSL) and other comple x faults <ref> [17] </ref>. Unlike CF tests, universal test sets can be quite small; their size depends on the unateness of the functions realized by the target circuit. In the case of binate functions, uni versal test sets become exhaustive, and for this reason the y have been largely ignored in the past. <p> It has been proved that the UTS detects all MSL faults in a realization R under the following restriction: every path between tw o points in R (excluding the stems of primary inputs) has the same inversion parity; these realizations are called unate gate networks <ref> [17] </ref>. Figure 1 (c) gi ves a unate-gate implementation of z 1 . The unate-gate restriction is slightly more strict than necessary, and so we replace it by a new, relaxed condition.
Reference: [18] <author> J. P. Shen and F. J. Ferguson, </author> <title> The Design of Easily Testable VLSI Array Multipliers, </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. C-33, </volume> <pages> pp. 554-560, </pages> <month> June </month> <year> 1984. </year>
Reference-contexts: The cell fault (CF) model, for e xample, considers all combinational faults that change the function of a cell. This model has been used for testing iterati ve logic arrays and in design-for-test (DFT) techniques for C-testability <ref> [5, 18] </ref>. CF testing methods can pro vide realization independence for circuits composed of very small cells only [4, 8] because they require exhaustive testing of the cells.
Reference: [19] <author> U. Sparmann, et al., </author> <title> Minimal Delay Test Set for Unate Gate Networks, </title> <booktitle> Proc. Asian Test Symp,. </booktitle> <pages> pp. 155-163, </pages> <year> 1996. </year>
Reference-contexts: In the case of binate functions, uni versal test sets become exhaustive, and for this reason the y have been largely ignored in the past. The uni versal testing approach has, however, been successfully applied recently to two-pattern testing for sequential (delay) faults <ref> [10, 19] </ref>. At first sight, datapath circuits seem poor candidates for universal test sets, because most of their output functions are binate, so the universal test set computed for the entire circuit can be e xcessively large. <p> It has been sho wn recently that in the w orst case unate-gate networks are at most twice as lar ge as the minimal implementation <ref> [19] </ref>. BIP realizations, on the other hand, tend to be minimal or near minimal, because any inversion that violates the BIP condition can be easily removed without adding gates.
Reference: [20] <author> N. A. Touba and B. Pouya, </author> <title> Testing Embedded Cores Using Partial Isolation Rings, </title> <booktitle> Proc. VLSI Test Symp., </booktitle> <pages> pp. 10-16, </pages> <year> 1997. </year>
Reference-contexts: However, it is difficult to apply these test vectors to the IP circuits when they are surrounded by other, user-designed circuits, without employing high-cost boundary scan <ref> [7, 20] </ref>. A possible way of addressing the abo ve issues is to construct tests directly from high-le vel descriptions of the IP circuits and their faulty behavior, so that testing becomes independent of the IP circuits low (gate-level) implementation details.
Reference: [21] <institution> Virtual Socket Interface Alliance, VSI Alliance Architecture Document, </institution> <note> Version 1.0, </note> <year> 1997. </year> <title> Fault coverage Circuits 16-bit CLA 32-bit CLA 16-bit CSA 32-bit CSA 16-bit ALU 32-bit ALU 16-bit comp 32-bit comp SSL fault coverage with 100K patterns Low-area realizations 100% 100% 100% 100% 100% 100% 95.3% 63.4% High-speed realizations 100% 99.1% 100% 99.3% 100% 99.5% 92.3% 59.2% RIB fault coverage with 1M patterns High-level designs 98.8% 83.6% 98.9% 84.7% 100% 99.3% 94.2% 45.9% Fig. 15 : RIB fault coverage with 1M pseudorandom patterns and SSL fault coverage for gate-level realizations with 100K pseudorandom patterns. </title>
Reference-contexts: 1 Introduction Due to the rapidly gro wing complexity of VLSI circuits, design methodologies based on reusable predesigned circuits, which are variously called intellectual property (IP) circuits, cores, or virtual components <ref> [21] </ref>, are becoming popular. High-quality and low-cost testing of such designs is a challenging problem, ho wever, since IP circuits are often specified only in terms of high-le vel functional or behavioral models.
References-found: 21

