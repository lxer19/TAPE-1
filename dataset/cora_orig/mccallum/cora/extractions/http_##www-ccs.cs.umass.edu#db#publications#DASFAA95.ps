URL: http://www-ccs.cs.umass.edu/db/publications/DASFAA95.ps
Refering-URL: http://www-ccs.cs.umass.edu/rtdb/publications.html
Root-URL: 
Email: kamath@cs.umass.edu krithi@cs.umass.edu towsley@cs.umass.edu  
Title: Continuous Media Sharing in Multimedia Database Systems  
Author: Mohan Kamath Krithi Ramamritham Don Towsley 
Address: Amherst, MA 01003 Amherst, MA 01003 Amherst, MA 01003  
Affiliation: Dept. of Computer Science Dept. of Computer Science Dept. of Computer Science University of Massachusetts University of Massachusetts University of Massachusetts  
Abstract: The timeliness and synchronization requirements of multimedia data demand efficient buffer management and disk access schemes for multimedia database systems. The data rates involved are very high and despite the development of efficient storage and retrieval strategies, disk I/O is a potential bottleneck, which limits the number of concurrent sessions supported by a system. This calls for more efficient use of data that has already been brought into the buffer. We introduce the notion of continuous media caching, which is a simple and novel technique where data that have been played back by a user are preserved in a controlled fashion for use by subsequent users requesting the same data. We present heuristics to determine when continuous media sharing is beneficial and describe the buffer management algorithms. Simulation studies indicate that our technique substantially improves the performance of multimedia database applications where data sharing is possible. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. P. Anderson, Y. Osawa and R. Govindan, </author> <title> "A File System for Continuous Media", </title> <journal> in ACM Transactions on Computer Systems, </journal> <volume> Vol. 10, No. 4, </volume> <month> November </month> <year> 1992, </year> <pages> pp 311-337. </pages>
Reference: [2] <author> D. P. Anderson, </author> <title> "Metascheduling for Continuous Media", </title> <journal> in ACM Transactions on Computer Systems, </journal> <volume> Vol. 11, No. 3, </volume> <month> August </month> <year> 1993, </year> <pages> pp 226-252. </pages>
Reference-contexts: It is assumed that the network between the client and the server provides certain quality-of-service (QOS) guarantees with respect to network delay and bandwidth (detailed discussion of reliability and networking issues for continuous media can be found in <ref> [2] </ref>). We will assume a two level storage system: primary storage (main memory buffer) and secondary storage (disk). Knowing the average seek time, rotational latency and data read rate, the effective transfer rate, R can be determined for a storage system.
Reference: [3] <editor> P. B. Berra et al, </editor> <booktitle> "Issues in Networking and Data Management of Distributed Multimedia Systems", in Proceedings of Symposium on High Performance Distributed Computing, </booktitle> <month> September </month> <year> 1992. </year>
Reference: [4] <author> S.Christodoulakis, </author> <title> "Multimedia Data Base Management: Applications and Problems A Position Paper", </title> <booktitle> in Proc. of ACM SIGMOD, </booktitle> <year> 1985, </year> <pages> pp 304-305. </pages>
Reference: [5] <author> S.Christodoulakis et al, </author> <title> "An Object-Oriented Architecture for Multimedia Information Systems", </title> <journal> in The Quarterly Bulletin of the IEEE Computer Society Technical Committee on Data Engineering, </journal> <volume> Vol. 14, No. 3, </volume> <month> September </month> <year> 1991, </year> <pages> pp 4-15. </pages>
Reference-contexts: Though buffer management schemes used in traditional database systems [9] share data, they are unsuitable for multimedia data because of the timeliness and synchronization requirements. Alternatively, schemes developed thus far for multimedia data [1,5] disregard sharing of continuous media data. The Use-And-Toss (UAT) scheme <ref> [5] </ref> tosses away used data so that the next piece of required data is brought into the same buffer. Thus the UAT scheme is good only if data sharing cannot be exploited. The buffer sharing scheme discussed in [21] only reuses buffer space and does not consider continuous media sharing.
Reference: [6] <author> A. Dan, D. Sitaram and P. Shahabuddin, </author> <title> "Scheduling Policies for an On-Demand Video Server with Batching", </title> <institution> IBM Research Report RC 19381, </institution> <year> 1994. </year>
Reference-contexts: This typifies applications where extensive data sharing is possible. Batching is another technique for improving the per formance of a system by grouping requests that request the same topic <ref> [6] </ref>. By using continuous media caching in conjunction with batching, the performance of multimedia database systems can be further improved. To examine such techniques, we also study two other schemes BAT-UAT and BAT-SHR, which are enhancements of UAT and SHR respectively with batching. <p> In the Maximum-Group-Scheme (MGS) policy, requests for the same topic are batched and the topic which has the maximum number of requests is considered first. Other variations are possible but we consider only the FCFS policy which is recommended as a fair policy in <ref> [6] </ref>. At each scheduling point, in the FCFS scheme, the grouped requests are considered one by one based on the earliest arrival time of a request in the group. A request first goes through the admission control and bandwidth reservation phase.
Reference: [7] <author> J. K. Dey, James D. Salehi, James F. Kurose, Don Towsley, </author> <title> "Providing VCR Capabilities in Large-Scale Video Servers", </title> <booktitle> in Proc. of ACM Multimedia, </booktitle> <address> San Fran-cisco, </address> <month> October </month> <year> 1994. </year>
Reference: [8] <author> J.K. Dey, C.H. Shih and M. Kumar, </author> <title> "Storage Subsystem Design in a Large Multimedia Server for High-Speed Network Environments", </title> <booktitle> in IS&T/SPIE Symposium on Electronic Imaging Science and Technology, </booktitle> <address> San Jose, </address> <month> February </month> <year> 1994. </year>
Reference: [9] <author> W. Effelsberg and T. Haerder, </author> <title> "Principles of Database Buffer Management", </title> <journal> in ACM Transactions on Database Systems, </journal> <volume> Vol. 9, No. 4, </volume> <month> December </month> <year> 1984, </year> <pages> pp 560-595. </pages>
Reference-contexts: Although several buffer management schemes have been studied, thus far there has not been much research to evaluate the potential benefits of continuous media sharing when users are accessing multimedia data concurrently. Though buffer management schemes used in traditional database systems <ref> [9] </ref> share data, they are unsuitable for multimedia data because of the timeliness and synchronization requirements. Alternatively, schemes developed thus far for multimedia data [1,5] disregard sharing of continuous media data.
Reference: [10] <author> L. Felician, </author> <title> "Simulative and Analytical Studies on Performances in Large Multimedia Databases", </title> <booktitle> in Information Systems, </booktitle> <volume> Vol. 15, No. 4, </volume> <pages> pp 417-427, </pages> <year> 1990. </year>
Reference: [11] <author> J. Gecsei, </author> <title> The Architecture of Videotex Systems, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs NJ, </address> <year> 1983. </year>
Reference-contexts: This distribution has been shown to closely approximate real user behavior in videotex systems <ref> [11] </ref> which are similar to on-demand services. The system and batching parameters were selected based on practical considerations.
Reference: [12] <author> S. Gibbs, C. Breiteneder and D. Tsichritzis, </author> <title> "Audio/Video Databases: An Object Oriented Approach", </title> <booktitle> in Proceedings of 9th International Conference on Data Engineering, </booktitle> <address> Vienna, </address> <month> April </month> <year> 1993, </year> <pages> pp 381-390. </pages>
Reference: [13] <author> J. Gemmel and S. Christodoulakis, </author> <title> "Principles of Delay-Sensitive Multimedia Data Storage and Retrieval", </title> <journal> in ACM Transactions on Information Systems, </journal> <volume> Vol. 10, No. 1, </volume> <month> January </month> <year> 1992. </year>
Reference: [14] <author> J. Huang and J. A. Stankovic, </author> <title> "Buffer Management in Real-Time Databases", </title> <type> Technical Report 90-65, </type> <institution> Department of Computer Science, University of Mas-sachusetts, </institution> <month> July </month> <year> 1990. </year>
Reference: [15] <author> M. Kamath, K. Ramamritham and D. Towsley, </author> <title> "Buffer Management for Continuous Media Sharing in Multimedia Database Systems", </title> <type> Technical Report 94-11, </type> <institution> Department of Computer Science, University of Mas-sachusetts, </institution> <month> February </month> <year> 1994. </year>
Reference-contexts: We have also done a preliminary analysis of our schemes to determine the enhancements necessary to support fast-forward and rewind but have not included it here to keep the discussion short (details can be found in <ref> [15] </ref>). We studied the impact of continuous media sharing by measuring the disk bandwidth required for 95% of the requests to succeed. We observed that the disk bandwidth required for SHR is low in all cases.
Reference: [16] <author> K. Kawagoe, </author> <title> "Continuous Media Data Management", </title> <booktitle> in SIGMOD Record, </booktitle> <volume> Vol. 20, No. 3, </volume> <month> September </month> <year> 1991, </year> <pages> pp 74-75 </pages>
Reference: [17] <author> W. Klas, E.J. Neuhold and M. Shrefl, </author> <title> "Using an Object-Oriented Approach to Model Multimedia Data", </title> <journal> in Computer Communications, </journal> <volume> Vol. 13, No. 4, </volume> <pages> pp 204-216, </pages> <year> 1990. </year>
Reference: [18] <author> D. L. Gall, </author> <title> "MPEG: A Video Standard for Multimedia Applications", </title> <journal> in Communications of the ACM, </journal> <volume> Vol. 34, No. 4, </volume> <month> April </month> <year> 1991, </year> <pages> pp 46-58. </pages>
Reference: [19] <editor> T.D.C.Little, A.Gafoor et al., </editor> <title> "Multimedia Synchronization", </title> <journal> in The Quarterly Bulletin of the IEEE Computer Society Technical Committee on Data Engineering, </journal> <volume> Vol. 14, No. 3, </volume> <month> September </month> <year> 1991, </year> <pages> pp 26-35. </pages>
Reference: [20] <author> P. Lougher and D. Shepherd, </author> <title> "The Design of a Storage Server for Continuous Media", </title> <journal> in The Computer Journal, </journal> <volume> Vol. 36, No. 1, </volume> <year> 1993. </year>
Reference: [21] <author> R. Ng and J. Yang, </author> <title> "Maximizing Buffer and Disk Utilization for News-on-Demand", </title> <booktitle> in Proc. of the 20th VLDB Conference, </booktitle> <address> Santiago, Chile, </address> <year> 1994, </year> <pages> pp 451-462. </pages>
Reference-contexts: The Use-And-Toss (UAT) scheme [5] tosses away used data so that the next piece of required data is brought into the same buffer. Thus the UAT scheme is good only if data sharing cannot be exploited. The buffer sharing scheme discussed in <ref> [21] </ref> only reuses buffer space and does not consider continuous media sharing.
Reference: [22] <author> R. Staehli and J. Walpole, </author> <title> "Constrained-Latency Storage Access", </title> <booktitle> in Computer, </booktitle> <month> March </month> <year> 1993, </year> <pages> pp 44-53. </pages>
Reference: [23] <author> R.Steinmetz, </author> <title> "Synchronization Properties in Multimedia Systems", </title> <journal> in IEEE Journal on Selected Areas of Communication, Vol.8, </journal> <volume> No.3, </volume> <month> April </month> <year> 1990, </year> <pages> pp 401-412. </pages>
Reference: [24] <author> P. Venkat Rangan and Harrick M. Vin, </author> <title> "Efficient Storage Techniques for Digital Continuous Multimedia", </title> <journal> in IEEE Transactions on Knowledge and Data Engineering, </journal> <month> August </month> <year> 1993. </year>
Reference: [25] <author> D.Woeld and W.Kim, </author> <title> "Multimedia Information Management in an Object-Oriented System", </title> <booktitle> in Proc. of the 13th VLDB Conference, </booktitle> <address> Brighton, </address> <year> 1987, </year> <pages> pp 319-329. </pages>
Reference: [26] <author> C. Yu et al, </author> <title> "Efficient Placement of Audio Data on Opti cal Disks for Real-Time Applications", </title> <journal> Communications of the ACM, </journal> <volume> Vol. 32, No. 7, </volume> <month> July </month> <year> 1989, </year> <pages> pp 862-871. </pages>
Reference: [27] <author> G.K. Zipf, </author> <title> Human Behaviour and the Principles of Least Effort, </title> <publisher> Addison-Wesley, </publisher> <address> Reading MA, </address> <year> 1949. </year>
Reference-contexts: They are listed below in the table with their default values. Topic parameters (length, data rate, etc.) are generated using a uniform distribution. Customer arrivals are modeled using a Poisson process. The topic chosen by a customer is modeled using Zipf's law <ref> [27] </ref>. According to this, if the topics 1; 2; :::; n are ordered such that p 1 p 2 ::: p n then p i = c=i where c is a normalizing constant and p i represents the probability that a customer chooses topic i.
References-found: 27

