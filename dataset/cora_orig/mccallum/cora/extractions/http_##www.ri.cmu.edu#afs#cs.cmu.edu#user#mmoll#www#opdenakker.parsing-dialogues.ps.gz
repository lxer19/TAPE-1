URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/mmoll/www/opdenakker.parsing-dialogues.ps.gz
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/mmoll/www/publications.html
Root-URL: 
Title: Parsing in Dialogue Systems using Typed Feature Structures  
Author: Rieks op den Akker, Hugo ter Doest, Mark Moll and Anton Nijholt 
Date: September 1995  
Address: 95-25  P.O. Box 217 7500 AE Enschede The Netherlands  
Affiliation: Memoranda Informatica  University of Twente Department of Computer Science  
Pubnum: ISSN 0924-3755  
Abstract-found: 0
Intro-found: 1
Reference: <author> Akker, R. o. d., Ter Doest, H., Moll, M., and Nijholt, A. </author> <year> (1995). </year> <title> Parsing in dialogue sys-tems using typed feature structures. </title> <booktitle> In Proceedings of the International Workshop on Parsing Technologies. </booktitle> <address> Prague/Karlovy Vary, Czech Republic. </address>
Reference: <author> Alshawi, H., </author> <title> editor (1992). The Core Language Engine. </title> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference-contexts: An example of a language that combines expressiveness with ease of use is the Core Language Engine <ref> (Alshawi 1992) </ref>. Unfor- tunately the Core Language Engine (CLE) does not support typing. Within our project a type specification language is being developed that can be positioned somewhere between ALE and CLE.
Reference: <author> Andernach, T. </author> <year> (1995). </year> <title> Predicting and interpret-ing speech acts in a theatre information and booking system. </title> <editor> In Andernach, T., Van de Burgt, S. P., and Van der Hoeven, G. F., ed-itors, </editor> <title> Corpus-Based Approaches to Dialogue Modelling, </title> <booktitle> Proceedings of TWLT9, </booktitle> <pages> 107-115. </pages> <institution> University of Twente. Enschede. </institution>
Reference: <author> Andernach, T., Ter Doest, H., Op den Akker, R., Schaake, J., Van der Hoeven, G. F., Van der Burgt, S. P., and Nijholt, A. </author> <year> (1995). </year> <title> Language analysis for dialogue management in a theatre information and booking system. </title> <booktitle> In Language Engineering '95, AI'95, 15th International Conference, </booktitle> <pages> 351-362. </pages> <address> Montpellier, France. </address>
Reference: <author> Bergin, J. </author> <year> (1994). </year> <title> Data Abstraction: the ObjectOriented Approach using C++. </title> <address> New York: </address> <publisher> McGraw-Hill. </publisher>
Reference: <author> Carpenter, B. </author> <year> (1992). </year> <title> The Logic of Typed Feature Sructures. </title> <publisher> Cambridge University Press. </publisher>
Reference: <author> Carpenter, B., and Penn, G. </author> <year> (1994). </year> <title> Ale 2.0 user's guide. </title> <type> Technical report, </type> <institution> Carnegie Mellon University Laboratory for Computational Linguistics, </institution> <address> Pittsburgh, PA. </address>
Reference-contexts: Almost always the usage of a specification language is limited to only one grammar formalism. This is not necessarily a drawback, as such a specification language can be better tailored towards the peculiarities of the formalism. For example, ALE <ref> (Carpenter and Penn 1994) </ref> is a very powerful (type) specification language for the domain of unification-based grammar formalisms. proc copyUnifact (tf s) tf s := dereference (tf s); if (tf s!unif actM ark = currentGeneration) then return tf s!unif act fi; needT oCopy := (#tf s!auxF eatures &gt; 0); i :=
Reference: <author> Komen, E. </author> <year> (1995). </year> <title> Evaluation of Natural Language tm for the SCHISMA domain. </title> <institution> Memoranda Informatica 95-14, University of Twente, Enschede, The Netherlands. </institution>
Reference-contexts: These domain-dependent characteristics of the Schisma dialogues influence the morphological and parse modules that have to concentrate on recognition of these and other domain-specific phrases or words. Other experiments with existing ("commercially available") natural language interfaces 1 <ref> (Komen 1995) </ref> have shown that systems in which input analyses are restricted to the search for particular (domain-dependent) phrases or patterns are often missing relevant information provided by the user.
Reference: <author> Moll, M. </author> <year> (1995). </year> <title> Head-corner parsing using typed feature structures. </title> <type> Master's thesis, </type> <institution> University of Twente, Department of Computer Science. </institution>
Reference-contexts: QLF is basically equal to first-order predicate calculus, but is extended with some extra operators to express the mood of an utterance and to express some basic set properties. A more detailed description of QLF can be found in <ref> (Moll 1995) </ref>. The idea is that the constraints are only necessary during parsing and the semantics are passed on to be used after parsing.
Reference: <author> Oflazer, K. </author> <year> (1994). </year> <title> Error-tolerant finite state recognition with applications to morpholog-ical analysis and spelling correction. </title> <type> Technical report, </type> <institution> Bilkent University, Ankara, Turkey. </institution>
Reference-contexts: In the integrated approach recognition of tokens (lexical items, number names, etc. (see discussion below)) is done simultaneously with the error correction; this can be done by recording all word components in a trie structure and then operate on it by means of a cost function. See <ref> (Oflazer 1994) </ref> for details. The preprocessor approach requires the introduction of generic knowledge of what character sequences definitely may and what may not occur.
Reference: <author> Rounds, W. C., and Kasper, R. T. </author> <year> (1986). </year> <title> A complete logical calculus for record struc-tures representing linguistic information. </title> <booktitle> In 15 Proceedings of the 15th Annual IEEE Sym-posium on Logic in Computer Science, 3943. </booktitle> <address> Cambridge, MA. </address>
Reference: <author> Shieber, S. M. </author> <year> (1986). </year> <title> An Introduction to Unification-based Approaches to Grammar. </title> <institution> Stanford, CA, USA: Center for the Study of Language and Information. </institution>
Reference-contexts: During parsing constraints can be checked with feature structures, and after parsing the meaning of the language utterance can (hopefully) be extracted from them. The structure of our feature structures is similar to the more traditional form of feature structures as used in the patr-ii system <ref> (Shieber 1986) </ref> and those defined by Rounds and Kasper (1986). Typed feature structures are defined as rooted DAGs (directed acyclic graphs), with labeled edges and nodes.
Reference: <author> Sikkel, K. </author> <year> (1993). </year> <title> Parsing Schemata. </title> <type> PhD dissertation, </type> <institution> University of Twente, Department of Computer Science. </institution>
Reference-contexts: The basic idea is that the head of a rule derives (generates) the most informative (semantically relevant) words of the part of the sentence covered by this rule and that the parser should start looking for these words. An earlier version of this chart parser was presented in <ref> (Sikkel and Op den Akker 1993) </ref> and we refer to this paper for the technical details about the technique of head-corner chart parsing. 3.2 Robustness Parsing in the context of a natural language dialogue system should be robust.
Reference: <author> Sikkel, K., and Op den Akker, R. </author> <year> (1993). </year> <title> Predictive head-corner chart parsing. </title> <booktitle> In Proceedings of the Third International Workshop on Parsing Technologies, </booktitle> <pages> 267-275. </pages> <address> Tilburg (The Netherlands), Durbuy (Belgium). </address>
Reference-contexts: The basic idea is that the head of a rule derives (generates) the most informative (semantically relevant) words of the part of the sentence covered by this rule and that the parser should start looking for these words. An earlier version of this chart parser was presented in <ref> (Sikkel and Op den Akker 1993) </ref> and we refer to this paper for the technical details about the technique of head-corner chart parsing. 3.2 Robustness Parsing in the context of a natural language dialogue system should be robust.
Reference: <author> Stroustrup, B. </author> <year> (1991). </year> <title> The C++ Programming Language. </title> <address> Reading, MA: </address> <publisher> Addison-Wesley. second edition. </publisher>
Reference: <author> Tomabechi, H. </author> <year> (1991). </year> <title> Quasi-destructive graph unification. </title> <booktitle> In Proceedings of the 29th Annual Meeting of the ACL. </booktitle> <address> Berkeley, CA. </address>
Reference: <author> Veldhuijzen van Zanten, G., and Op den Akker, R. </author> <year> (1994). </year> <title> Developing natural language in-terfaces: a test case. </title> <editor> In Boves, L., and Nijholt, A., editors, </editor> <booktitle> Twente Workshop on Language Technology 8: Speech and Language Engineering, </booktitle> <pages> 121-135. </pages> <address> Enschede, The Netherlands. </address>
Reference: <author> Vosse, T. G. </author> <year> (1994). </year> <title> The Word Connection. </title> <type> PhD dissertation, </type> <institution> Rijksuniversiteit Leiden. Neslia Paniculata. </institution>
Reference-contexts: It makes use of what trigrams of characters and what triphones (tri- grams of phonemes) are viable in the Dutch language (given a dictionary of words that may occur). Using these trigrams substrings of the input string are compared to words in the dictionary. We refer to <ref> (Vosse 1994) </ref> for details on this error correction method. For reasons of compo- sitionality we have chosen the latter approach: this option offers the best possibility to partition Maf in a number of submodules that have clear input/output specifications and thus can be developed and implemented separately. <p> DBrec and Lex have been developed by the Schisma partners, and CorSe has been adapted from the source code based on <ref> (Vosse 1994) </ref>.
Reference: <author> Wroblewski, D. </author> <year> (1987). </year> <title> Nondestructive graph unification. </title> <booktitle> In Proceedings of the Sixth National Conference on Artificial Intelligence. </booktitle> <pages> 16 </pages>
References-found: 19

