URL: http://www-graphics.stanford.edu/papers/volume/vol.ps.Z
Refering-URL: http://www-graphics.stanford.edu/papers/volume/
Root-URL: http://www.cs.stanford.edu
Author: John Danskin and Pat Hanrahan 
Abstract: We examine various simple algorithms that exploit homogeneity and accumulated opacity for tracing rays through shaded volumes. Most of these methods have error criteria which allow them to trade quality for speed. The time vs. quality tradeoff for these adaptive methods is compared to fixed step multiresolution methods. These methods are also useful for general light transport in volumes.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Arvo, </author> <title> James and David Kirk "Particle Transport and Image Synthesis" Computer Graphics Vol. </title> <journal> 24, </journal> <volume> No. 4, </volume> <month> August </month> <year> 1990 </year>
Reference-contexts: Homogeneity-acceleration uses a range 27 pyramid (defined below) to maintain a measure of local homogeneity, and an average pyramid to maintain average material properties. Samples are taken at higher levels of the pyramid in regions of high homogeneity [10]. 4. Russian Roulette [9] <ref> [1] </ref> [16] [3] probabilistically kills off some of the front to back ray-tracing calculations once they have accumulated opacity exceeding some threshold. <p> The following pseudo code implements presence acceleration: rgba Trace (pyramid, max_alpha, k, O, D, t, maxt) - rgba c, s; int level = 0; c = (0,0,0,0); while (t &lt; maxt) - if ((level == 0) || <ref> [1] </ref> (sample (max_alpha, level, O + t D) &lt;= k)) - s = sample (pyramid, level, O + t D); c = over (c, s); t += pow (2, level++); else level--; - return c; - If (level &gt; 0) then the sample on line [1] must be less than or <p> if ((level == 0) || <ref> [1] </ref> (sample (max_alpha, level, O + t D) &lt;= k)) - s = sample (pyramid, level, O + t D); c = over (c, s); t += pow (2, level++); else level--; - return c; - If (level &gt; 0) then the sample on line [1] must be less than or equal to k in order to make progress. Whenever we can make progress, we try to move up the tree. Whenever we cannot make progress, we move down the tree. <p> Hall implemented a weight cutoff mechanism for a ray tracer [7] and Levoy adapted this technique to volume ray tracing: any rays which accumulated an ff larger than some threshold were terminated. Unfortunately this leads to a systematic bias in the image <ref> [1] </ref>. We will develop or adapt two techniques to take advantage of accumulated opacity without introducing a systematic bias: Russian Roulette [9], and fi-acceleration. 7.4.1 Russian Roulette Russian Roulette was developed as a way for particle transport codes to avoid simulating particles with low weights without biasing the results. <p> The algorithm reported in <ref> [1] </ref> uses Russian Roulette to cut down on the bushiness of shade trees in classic ray tracers. We use Russian Roulette to cut down on the average penetration of rays into the volume. Think of the ray as a particle. <p> Note (comparing the tables in Figures 3 and 5) that for a given value of k, fi-acceleration will usually generate an image with more error than homogeneity-acceleration because fi-acceleration is realistic about the effects of errors after opacity is accumulated, while homogeneity-acceleration is relatively paranoid. We modify line <ref> [1] </ref> of the code for homogeneity-acceleration to implement fi-acceleration: rgba Trace (pyramid, range, k, O, D, t, maxt) - rgba c, s; int level = 0; c = (0,0,0,0); while (t &lt; maxt) - if ((level == 0) || [1] (1 - co.a) * (sample (range, level, O + t D) <p> We modify line <ref> [1] </ref> of the code for homogeneity-acceleration to implement fi-acceleration: rgba Trace (pyramid, range, k, O, D, t, maxt) - rgba c, s; int level = 0; c = (0,0,0,0); while (t &lt; maxt) - if ((level == 0) || [1] (1 - co.a) * (sample (range, level, O + t D) &lt;= k)) - s = sample (pyramid, level, O + t D); c = over (c, s); t += pow (2, level++); else level-; - return c; - using fi-acceleration.
Reference: [2] <author> Bergman L., H. Fuchs, E. Grant, and S. </author> <title> Spach "Image rendering by adaptive refinement," </title> <journal> Computer Graphics, </journal> <volume> Vol. 20, No. 4, </volume> <month> August </month> <year> 1986, </year> <pages> pp. 29-37 </pages>
Reference-contexts: Although fi-acceleration is fast, it is hardly fast enough for real time rotation, even with the addition of progressive and adaptive refinement <ref> [2; 15] </ref>. Splatting [10] can support real time rotation, but image quality suffers even at peak resolution. We expect that it should be possible to construct a volume beam tracer which combines the image quality of ray tracing with the performance of splatting. <p> In fi-acceleration the user specifies an error, and the algorithm picks the number of samples. We would like to see importance sampling combined with stratified sampling [8; 16] (also known as quota sampling) to justify and perhaps refine the commonly used technique of adaptive refinement <ref> [2; 19; 15] </ref>. In stratified sampling, the sample space is broken up into disjoint regions, and a fixed number of samples are generated in each region.
Reference: [3] <author> Carter, L. L. and E. D. </author> <title> Cashwell "Particle-Transport Simulation with the Monte Carlo Method" Technical Information Center, </title> <booktitle> Energy Research and Development Administration 1975 ISBN 0-87079-021-8 </booktitle>
Reference-contexts: Importance sampling applied to integrals means concentrating most of the samples in that portion of the domain which contributes most to the value <ref> [3] </ref>. We will follow [3] in the derivation of equations 7 through 10. Suppose we need to determine the value of f (x) where x is sampled from a probability distribution p (x) which is defined on [a; b]. <p> Importance sampling applied to integrals means concentrating most of the samples in that portion of the domain which contributes most to the value <ref> [3] </ref>. We will follow [3] in the derivation of equations 7 through 10. Suppose we need to determine the value of f (x) where x is sampled from a probability distribution p (x) which is defined on [a; b]. <p> Homogeneity-acceleration uses a range 27 pyramid (defined below) to maintain a measure of local homogeneity, and an average pyramid to maintain average material properties. Samples are taken at higher levels of the pyramid in regions of high homogeneity [10]. 4. Russian Roulette [9] [1] [16] <ref> [3] </ref> probabilistically kills off some of the front to back ray-tracing calculations once they have accumulated opacity exceeding some threshold.
Reference: [4] <author> Coveyou, R. R., V. R. Cain, and K. J. Yost, </author> <title> "Adjoint and importance in Monte Carlo application" Nuclear Science Engineering, </title> <journal> No. </journal> <volume> 27, </volume> <pages> pp. </pages> <month> 219-234 </month> <year> (1967) </year>
Reference-contexts: A general motivation for studying these techniques is that they are continuous, and do not involve binary valued data-structures or all or nothing decisions. We will relate these ideas to importance sampling <ref> [4] </ref>: a fundamental technique in Monte Carlo integration. John Danskin jmd@cs.princeton.edu Pat Hanrahan pmh@cs.princeton.edu Department of Computer Science Princeton University Princeton, NJ 08544-2087 In Section 2 we will discuss the light transport equations which we will be analyzing. <p> rgba Trace (volume, O, D, t, maxt) - rgba c, s; c = (0,0,0,0) while (t &lt; maxt) - s = sample (volume, O + t D); c = over (c, s); t++; return c; - 3 Importance Sampling The basis for most of our acceleration techniques is importance sampling <ref> [4] </ref>. Importance sampling applied to integrals means concentrating most of the samples in that portion of the domain which contributes most to the value [3]. We will follow [3] in the derivation of equations 7 through 10.
Reference: [5] <author> Drebin, R.A., L., Carpenter and P. </author> <title> Hanrahan, </title> <journal> "Volume Rendering" Computer Graphics, </journal> <volume> Vol. 22, No. 4, </volume> <month> August </month> <year> 1988, </year> <pages> pp. 65-74 </pages>
Reference: [6] <author> Garrity, M., </author> <title> "Ray Tracing Irregular Volume Data," </title> <journal> Computer Graphics, </journal> <volume> Vol. 24, No. 5, </volume> <month> November </month> <year> 1990 </year>
Reference-contexts: Max et. al. [17] discuss rendering 3D scalar fields sampled on the vertices of a space filling arrangement of convex polyhedra. Upson and Keeler [23] discuss rendering volumes with large voxels. Garrity <ref> [6] </ref>, Wilhelms et. al. [25], Shirley and Tuchman [22], and Neeman [18] discuss rendering irregular volumes and volumes specified on curvilinear grids.
Reference: [7] <author> Hall, R., and D. </author> <title> Greenberg "A testbed for realistic image synthesis," </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> Vol. 3, No. 10, </volume> <month> November </month> <year> 1983, </year> <pages> pp. 10-20. </pages>
Reference-contexts: For instance, if we have an accumulated fi = :6, only 40% of the light we find will make it back to the eye. This means that any mistakes we make will be similarly scaled. Hall implemented a weight cutoff mechanism for a ray tracer <ref> [7] </ref> and Levoy adapted this technique to volume ray tracing: any rays which accumulated an ff larger than some threshold were terminated. Unfortunately this leads to a systematic bias in the image [1].
Reference: [8] <author> Hammersly, J. M., and D. C. Handscomb, </author> <title> "Monte Carlo Methods," </title> <booktitle> in Methuen's Monographs on Applied Probability and Statistics, </booktitle> <publisher> Methuen and Company, Ltd., </publisher> <address> Lon-don, </address> <year> 1964. </year>
Reference-contexts: In the Fixed Step Multiresolution method, the user picks the number of samples (or speed), and gets an image with some error. In fi-acceleration the user specifies an error, and the algorithm picks the number of samples. We would like to see importance sampling combined with stratified sampling <ref> [8; 16] </ref> (also known as quota sampling) to justify and perhaps refine the commonly used technique of adaptive refinement [2; 19; 15]. In stratified sampling, the sample space is broken up into disjoint regions, and a fixed number of samples are generated in each region.
Reference: [9] <author> Kahn H., </author> <title> "Use of Different Monte Carlo Sampling Techniques" Symposium on Monte Carlo Methods, </title> <institution> University of Florida, </institution> <note> March 1954 Credits J. </note> <author> von Neumann and S. </author> <title> Ulam with the idea of Russian Roulette </title>
Reference-contexts: Homogeneity-acceleration uses a range 27 pyramid (defined below) to maintain a measure of local homogeneity, and an average pyramid to maintain average material properties. Samples are taken at higher levels of the pyramid in regions of high homogeneity [10]. 4. Russian Roulette <ref> [9] </ref> [1] [16] [3] probabilistically kills off some of the front to back ray-tracing calculations once they have accumulated opacity exceeding some threshold. <p> Unfortunately this leads to a systematic bias in the image [1]. We will develop or adapt two techniques to take advantage of accumulated opacity without introducing a systematic bias: Russian Roulette <ref> [9] </ref>, and fi-acceleration. 7.4.1 Russian Roulette Russian Roulette was developed as a way for particle transport codes to avoid simulating particles with low weights without biasing the results. The algorithm reported in [1] uses Russian Roulette to cut down on the bushiness of shade trees in classic ray tracers.
Reference: [10] <author> Laur, D., and P. Hanrahan, </author> <title> "Hierarchical Splatting: A Progressive Refinement Algorithm for Volume Rendering" Computer Graphics Vol. </title> <journal> 25, </journal> <volume> No. 4, </volume> <month> July </month> <year> 1991, </year> <pages> pp. 285-288 </pages>
Reference-contexts: Homogeneity-acceleration uses a range 27 pyramid (defined below) to maintain a measure of local homogeneity, and an average pyramid to maintain average material properties. Samples are taken at higher levels of the pyramid in regions of high homogeneity <ref> [10] </ref>. 4. Russian Roulette [9] [1] [16] [3] probabilistically kills off some of the front to back ray-tracing calculations once they have accumulated opacity exceeding some threshold. <p> To achieve this, we apply the following filter: rgba ScaleColor (int n, rgba ia) - while (n--) - ia = over (ia, ia); - return ia; - This filter is the same as the one proposed in <ref> [10] </ref>. We tried storing these scaled values in the pyramid instead of the averages, but the quantization effects were intolerable at eight bits per entry. At this point, we use ScaleColor as a filter for volume access. First trilinear interpolation is applied, then we scale colors and opacity. <p> (level in v) - l = level; forEach (pt in v) - errorV (level, pt) = NYNYdist ( ScaleColor (l, maxV (l, pt)), ScaleColor (l, minV (l, pt))); - The range 27 pyramid will be our primary acceleration data structure, but we could have used a variance 27 pyramid instead <ref> [10] </ref>. We chose the range 27 pyramid because it has good worst case behavior. A large voxel high up in a pyramid could be mostly empty, containing only a very thin yet totally opaque wall, and yet have low variance because of the small number of variant pixels. <p> If we are willing to accept an image error of 5%, fi-acceleration outperforms the empty space skipping algorithm in [11] (including ff-Termination) by a factor of 2.74 in this experiment. 9 Discussion We have extended the volume homogeneity ideas of Laur <ref> [10] </ref>, and the volume presence ideas of Levoy [11], by combining them with importance sampling. The resulting algorithm is simple and has markedly improved performance over previous volume ray tracers, while retaining the intrinsic image quality advantages of ray tracing as compared to splatting. <p> Although fi-acceleration is fast, it is hardly fast enough for real time rotation, even with the addition of progressive and adaptive refinement [2; 15]. Splatting <ref> [10] </ref> can support real time rotation, but image quality suffers even at peak resolution. We expect that it should be possible to construct a volume beam tracer which combines the image quality of ray tracing with the performance of splatting.
Reference: [11] <author> Levoy, M., </author> <title> "Efficient Ray tracing of Volume Data" ACM Transactions on Graphics, </title> <journal> Vol. </journal> <volume> 9, No. 3, </volume> <month> July </month> <year> 1990 </year>
Reference-contexts: Our data structures will be view independent to speed the production of animations of preshaded volumes and interactive viewing. In <ref> [11] </ref> Levoy introduced two key concepts which we will be expanding on: presence acceleration, and ff-Termination. The first technique allows fast traversal of empty space using octrees. The second technique terminates front to back ray-tracing after the opacity accumulated by the ray exceeds a certain threshold. <p> Color and density values at intermediate points are usually derived using tri-linear interpolation <ref> [11] </ref>, although higher order interpolation is possible. We limit the gamut of color and density to the range [0 1] before pre-multiplication, and store color values premulti-plied by the density. <p> A voxel in the average pyramid is the cubic region supported by 8 data values. To sample within the voxel we apply tri-linear interpolation <ref> [11] </ref> (although higher order interpolation is possible). Levoy used average pyramids for gaze directed rendering [13]. They are a 3D generalization of mip-maps [26]. When ray tracing with the average pyramid, samples can be taken at any level. <p> Recall that we use the ScaleColor filter to achieve proper weighting. In the special case where k = 0, this method is equivalent to Levoy's method for traversing empty space without error <ref> [11] </ref>. <p> We summarize the performance of fi-acceleration compared to the previous state of the art in Figure 6. If we are willing to accept an image error of 5%, fi-acceleration outperforms the empty space skipping algorithm in <ref> [11] </ref> (including ff-Termination) by a factor of 2.74 in this experiment. 9 Discussion We have extended the volume homogeneity ideas of Laur [10], and the volume presence ideas of Levoy [11], by combining them with importance sampling. <p> If we are willing to accept an image error of 5%, fi-acceleration outperforms the empty space skipping algorithm in <ref> [11] </ref> (including ff-Termination) by a factor of 2.74 in this experiment. 9 Discussion We have extended the volume homogeneity ideas of Laur [10], and the volume presence ideas of Levoy [11], by combining them with importance sampling. The resulting algorithm is simple and has markedly improved performance over previous volume ray tracers, while retaining the intrinsic image quality advantages of ray tracing as compared to splatting.
Reference: [12] <author> Levoy, M., </author> <title> "Volume Rendering by Adaptive Refine ment" The Visual Computer, </title> <journal> Vol. </journal> <volume> 6, No. 1, </volume> <month> February </month> <year> 1990, </year> <pages> pp. 2-7 </pages>
Reference: [13] <author> Levoy, M., </author> <booktitle> "Gaze-Directed Volume Rendering" Com puter Graphics Vol. </booktitle> <volume> 24, No. 2, </volume> <month> March </month> <year> 1990 </year>
Reference-contexts: Fixed Step Multiresolution: We maintain an average pyramid of volumes where each successive volume is half the resolution of the previous one. The level in the pyramid at which the algorithm operates is user specified. A more sophisticated variant of this algorithm is due to Levoy <ref> [13] </ref>. We use this algorithm as a control for comparison with our other algorithms. 2. Presence-acceleration uses a max 27 (ff) pyramid (defined below) to maintain the maximum material density in a neighborhood, and an average pyramid to maintain average material properties. <p> A voxel in the average pyramid is the cubic region supported by 8 data values. To sample within the voxel we apply tri-linear interpolation [11] (although higher order interpolation is possible). Levoy used average pyramids for gaze directed rendering <ref> [13] </ref>. They are a 3D generalization of mip-maps [26]. When ray tracing with the average pyramid, samples can be taken at any level. <p> These pyramid datastructures are view independent: the cost of construction can be amortized over a whole animation sequence or interactive session. 7 Algorithms 7.1 Fixed Step Multiresolution Levoy <ref> [13] </ref> has proposed using an average pyramid or mip-map [26] to accelerate the tracing of rays that are intended to cover a large image area. The density of rays per unit area, and the number of samples per ray are both decreased to produce fuzzy pictures very fast. <p> The fixed step multiresolution method at full resolution was used to generate our reference image. The diff images in the figures represent the pixel and channel-wise absolute value of the difference between the test image and the reference image. Note that for comparison purposes with Levoy's implementation in <ref> [13] </ref> our implementation uses almost exactly half as many samples per ray because we do not implement interpolation between adjacent pyramid levels. 7.2 Presence-Acceleration We saw in Section 3 that it is not necessary to take many samples in regions with small contributions to the opacity and intensity integrals.
Reference: [14] <author> Levoy, M., </author> <title> "Display of Surface from Volume Data" IEEE Computer Graphics and Applications, </title> <journal> Vol. </journal> <volume> 8, No. 3, </volume> <month> May </month> <year> 1988, </year> <pages> pp. 29-37 </pages>
Reference: [15] <author> Levoy, M., </author> <title> "Volume Rendering by Adaptive Refine ment," </title> <journal> The Visual Computer, </journal> <volume> Vol. 6, No. 1, </volume> <month> February </month> <year> 1990, </year> <pages> pp. 2-7 </pages>
Reference-contexts: Although fi-acceleration is fast, it is hardly fast enough for real time rotation, even with the addition of progressive and adaptive refinement <ref> [2; 15] </ref>. Splatting [10] can support real time rotation, but image quality suffers even at peak resolution. We expect that it should be possible to construct a volume beam tracer which combines the image quality of ray tracing with the performance of splatting. <p> In fi-acceleration the user specifies an error, and the algorithm picks the number of samples. We would like to see importance sampling combined with stratified sampling [8; 16] (also known as quota sampling) to justify and perhaps refine the commonly used technique of adaptive refinement <ref> [2; 19; 15] </ref>. In stratified sampling, the sample space is broken up into disjoint regions, and a fixed number of samples are generated in each region.
Reference: [16] <author> Lux, I., and L., </author> <title> Koblinger "Monte Carlo Particle Trans port Methods: </title> <publisher> Neutron and Photon Calculations" CRC Press 1990 ISBN 0-8493-6074-9 </publisher>
Reference-contexts: Homogeneity-acceleration uses a range 27 pyramid (defined below) to maintain a measure of local homogeneity, and an average pyramid to maintain average material properties. Samples are taken at higher levels of the pyramid in regions of high homogeneity [10]. 4. Russian Roulette [9] [1] <ref> [16] </ref> [3] probabilistically kills off some of the front to back ray-tracing calculations once they have accumulated opacity exceeding some threshold. <p> In the Fixed Step Multiresolution method, the user picks the number of samples (or speed), and gets an image with some error. In fi-acceleration the user specifies an error, and the algorithm picks the number of samples. We would like to see importance sampling combined with stratified sampling <ref> [8; 16] </ref> (also known as quota sampling) to justify and perhaps refine the commonly used technique of adaptive refinement [2; 19; 15]. In stratified sampling, the sample space is broken up into disjoint regions, and a fixed number of samples are generated in each region.
Reference: [17] <author> Max, N., P. Hanrahan, and P. Crawfis, </author> <title> "Area and Vol ume Coherence for Efficient Visualization of 3D Scalar Functions" Computer Graphics, </title> <journal> Vol. </journal> <volume> 24, No. </volume> <pages> 5, </pages> <note> Novem ber 1990 </note>
Reference-contexts: The sum in equation 5 is equivalent to the nested integral in equation 1 in the limit as the sample spacing goes to zero <ref> [21; 17] </ref>. We will be concerned with efficiently approximating this sum. There has been a lot of work on efficiently and accurately rendering volumes with large or irregularly shaped voxels. <p> We will be concerned with efficiently approximating this sum. There has been a lot of work on efficiently and accurately rendering volumes with large or irregularly shaped voxels. Max et. al. <ref> [17] </ref> discuss rendering 3D scalar fields sampled on the vertices of a space filling arrangement of convex polyhedra. Upson and Keeler [23] discuss rendering volumes with large voxels.
Reference: [18] <author> Neeman, H., </author> <title> "A Decomposition Algorithm for Visual izing Irregular Grids" Computer Graphics, </title> <journal> Vol. </journal> <volume> 24, No. 5, </volume> <month> November </month> <year> 1990 </year>
Reference-contexts: Max et. al. [17] discuss rendering 3D scalar fields sampled on the vertices of a space filling arrangement of convex polyhedra. Upson and Keeler [23] discuss rendering volumes with large voxels. Garrity [6], Wilhelms et. al. [25], Shirley and Tuchman [22], and Neeman <ref> [18] </ref> discuss rendering irregular volumes and volumes specified on curvilinear grids. We will assume that our input volume has sufficiently fine resolution so that the approximation of equation 5 is sufficiently accurate, and also assume that our volume dataset is defined on a regular grid.
Reference: [19] <author> Painter, J., and K. Sloan, </author> <title> "Antialiased Ray Tracing by Adaptive Progressive Refinement," </title> <booktitle> Computer Graph ics, </booktitle> <volume> Vol. 23, No. 3, </volume> <month> July </month> <year> 1989, </year> <pages> pp 281-288. </pages>
Reference-contexts: In fi-acceleration the user specifies an error, and the algorithm picks the number of samples. We would like to see importance sampling combined with stratified sampling [8; 16] (also known as quota sampling) to justify and perhaps refine the commonly used technique of adaptive refinement <ref> [2; 19; 15] </ref>. In stratified sampling, the sample space is broken up into disjoint regions, and a fixed number of samples are generated in each region.
Reference: [20] <author> Porter T., and T. </author> <booktitle> Duff "Compositing Digital Images" Computer Graphics, </booktitle> <volume> Vol 18, No. 3, </volume> <month> July </month> <year> 1984, </year> <pages> pp 253 259 </pages>
Reference-contexts: With this insight, we see that in the special case where n = 2, this sum embodies the Porter-Duff over operator <ref> [20] </ref>. rgba over (rgba fg, bg) - return fg + (1 - fg.alpha) * bg; - the resulting alpha can be seen to be (1 (1 f g:alpha)(1 bg:alpha)) (6) which fits equation 5.
Reference: [21] <author> Sabella, P., </author> <title> "A Rendering Algorithm for Visualizing 3D Scalar Fields" Computer Graphics Vol. </title> <journal> 22, </journal> <volume> No. 4, </volume> <booktitle> Au gust 1988, </booktitle> <pages> pp. 51-58 </pages>
Reference-contexts: The sum in equation 5 is equivalent to the nested integral in equation 1 in the limit as the sample spacing goes to zero <ref> [21; 17] </ref>. We will be concerned with efficiently approximating this sum. There has been a lot of work on efficiently and accurately rendering volumes with large or irregularly shaped voxels.
Reference: [22] <author> Shirley, P., and A. Tuchman, </author> <title> "A Polygonal Approach to Direct Scalar Volume Rendering" Computer Graphics, </title> <journal> Vol. </journal> <volume> 24, No. 5, </volume> <month> November </month> <year> 1990 </year>
Reference-contexts: Max et. al. [17] discuss rendering 3D scalar fields sampled on the vertices of a space filling arrangement of convex polyhedra. Upson and Keeler [23] discuss rendering volumes with large voxels. Garrity [6], Wilhelms et. al. [25], Shirley and Tuchman <ref> [22] </ref>, and Neeman [18] discuss rendering irregular volumes and volumes specified on curvilinear grids. We will assume that our input volume has sufficiently fine resolution so that the approximation of equation 5 is sufficiently accurate, and also assume that our volume dataset is defined on a regular grid.
Reference: [23] <author> Upson C., M. </author> <title> Keeler, </title> <journal> "V-BUFFER: Visible Volume Rendering" Computer Graphics, </journal> <volume> Vol. 22, No. 4, </volume> <month> August </month> <year> 1988, </year> <pages> pp. 59-64 </pages>
Reference-contexts: There has been a lot of work on efficiently and accurately rendering volumes with large or irregularly shaped voxels. Max et. al. [17] discuss rendering 3D scalar fields sampled on the vertices of a space filling arrangement of convex polyhedra. Upson and Keeler <ref> [23] </ref> discuss rendering volumes with large voxels. Garrity [6], Wilhelms et. al. [25], Shirley and Tuchman [22], and Neeman [18] discuss rendering irregular volumes and volumes specified on curvilinear grids.
Reference: [24] <author> Wilhelms, J. and A. </author> <title> Van Gelder "Octrees for Faster Isosurface Generation," </title> <journal> Computer Graphics, </journal> <volume> Vol. 24, No. 5, </volume> <month> November </month> <year> 1990 </year>
Reference-contexts: Since some of the children of an entry in the nth level may be outside of the domain of the original dataset, we define the dataset to take on a constant value outside of its domain. This is a compact representation for a pointerless complete octree <ref> [24] </ref> allowing efficient neighbor, parent and child calculations. In the average pyramid, each sample in the nth level of the pyramid stores the average of it's eight children in the n 1st level of the pyramid. <p> Wil-helms and Van Gelder propose storing child min and max values in octree nodes to speed iso-surface generation <ref> [24] </ref>. At first glance, a max pyramid looks like the right structure for us. Unfortunately the max pyramid doesn't efficiently solve our problem because a ray taking even a tiny step can step through three pyramid nodes.
Reference: [25] <author> Wilhelms, J., J. Challinger, N. Alper, S. Ramamoorthy, and A. Vaziri, </author> <title> "Direct Volume Rendering of Curvilinear Volumes," </title> <journal> Computer Graphics, </journal> <volume> Vol. 24, No. </volume> <pages> 5, </pages> <note> Novem ber 1990 </note>
Reference-contexts: Max et. al. [17] discuss rendering 3D scalar fields sampled on the vertices of a space filling arrangement of convex polyhedra. Upson and Keeler [23] discuss rendering volumes with large voxels. Garrity [6], Wilhelms et. al. <ref> [25] </ref>, Shirley and Tuchman [22], and Neeman [18] discuss rendering irregular volumes and volumes specified on curvilinear grids.

References-found: 25

