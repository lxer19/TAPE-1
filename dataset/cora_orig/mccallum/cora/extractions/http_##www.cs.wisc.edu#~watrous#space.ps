URL: http://www.cs.wisc.edu/~watrous/space.ps
Refering-URL: http://www.cs.wisc.edu/~watrous/publications.html
Root-URL: 
Email: watrous@cs.wisc.edu  
Title: Relationships Between Quantum and Classical Space-Bounded Complexity Classes  
Author: John Watrous 
Address: Madison, Wisconsin 53706  
Affiliation: Computer Sciences Department University of Wisconsin  
Abstract: This paper investigates the relative power of space-bounded quantum and classical (probabilistic) computational models. The following relationships are proved. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Adleman, J. Demarrais, and M. Huang. </author> <title> Quantum computability. </title> <journal> SIAM Journal on Computing, </journal> <volume> 26(5): </volume> <pages> 1524-1540, </pages> <year> 1997. </year>
Reference-contexts: It is known that the power of QTMs depends greatly upon the values which the transition function may take; in the absence of any restrictions, it is possible to encode a great deal of information in these values. For example, it is shown in <ref> [1] </ref> that QTMs can recognize non-recursive sets in polynomial time, logarithmic space and with bounded probability of error if allowed to have arbitrary transcendental transition amplitudes. <p> Thus we must place some restriction on these values in order to avoid this problem, and so we will insist that all transition functions of QTMs take only rational values. Although some quantum algorithms use algebraic transition amplitudes, it is shown in <ref> [1] </ref> that, for the case of bounded error polynomial time, machines with algebraic amplitudes are equivalent in power to ones with rational amplitudes. <p> that the QTM M 0 halts absolutely, having a cumulative probability of fi +(1fi) p acc (x)ff fi p rej (x) for acceptance and (1fi)(1fi) p acc (x)+ff fi p rej (x) for rejection. (The values ff and fi could be taken to be any rational numbers in the range <ref> [0; 1] </ref>, but the values above are sufficient for our needs.) A proof of Lemma 3.1 can be found in the appendix. An immediate consequence of Lemma 3.1 is that we have NQ H SPACE (s) PrQ H SPACE (s) (take ff = 1, fi = 1 2 ). <p> Lemma A.1 Let M be a QTM running in space s. Then for each input x, there exists a (2 2s +2)fi (2 2s +2) matrix E such that for every k 0, E k+2 <ref> [2 2s + 2; 1] </ref> is the probability that M accepts x after precisely k steps (and E [2 2s + 2; 1] = 0). Furthermore, the following properties are satisfied. 1. <p> Then for each input x, there exists a (2 2s +2)fi (2 2s +2) matrix E such that for every k 0, E k+2 <ref> [2 2s + 2; 1] </ref> is the probability that M accepts x after precisely k steps (and E [2 2s + 2; 1] = 0). Furthermore, the following properties are satisfied. 1. <p> y init (D D) k+2 0 y T acc (D D) k y init y T acc (D D) k+1 0 7 It follows that, for (j init 1) 2 f0; : : : ; 2 s 1g encoding the initial configuration of M on x, we have E k+2 <ref> [2 2s + 2; 1] </ref> = y T acc (D D) k y init = y T y init = i2f1;:::;2 s g (i1) encodes c2C acc D k [i; j init ] 2 fl fl ; given that M runs in space s. <p> <ref> [2 2s + 2; 1] </ref> = y T acc (D D) k y init = y T y init = i2f1;:::;2 s g (i1) encodes c2C acc D k [i; j init ] 2 fl fl ; given that M runs in space s. Hence we have that E k+2 [2 2s + 2; 1] is the probability that M accepts x after precisely k steps. It remains to show that items 1 - 3 in the statement of the lemma are satisfied. <p> (N) 1 m E ; F = G 1;N 0 # We have det (F ) = 2 m 2 p (N)+q (N) det (G 1;N ) = 2 1 Hence, by Lemma A.2, det (F ) det (G) &gt; 1 if and only if lim z"1 (I zE) 1 <ref> [N; 1] </ref> &gt; 1 2 : For jzj &lt; 1, we have (I zE) 1 [N; 1] = k0 since E has eigenvalues bounded in absolute value by 1 (see [17], p. 54 for example) from which we conclude lim (I zE) 1 [N; 1] = Prob [M accepts x] by <p> ) = 2 m 2 p (N)+q (N) det (G 1;N ) = 2 1 Hence, by Lemma A.2, det (F ) det (G) &gt; 1 if and only if lim z"1 (I zE) 1 <ref> [N; 1] </ref> &gt; 1 2 : For jzj &lt; 1, we have (I zE) 1 [N; 1] = k0 since E has eigenvalues bounded in absolute value by 1 (see [17], p. 54 for example) from which we conclude lim (I zE) 1 [N; 1] = Prob [M accepts x] by Lemma A.1. <p> only if lim z"1 (I zE) 1 <ref> [N; 1] </ref> &gt; 1 2 : For jzj &lt; 1, we have (I zE) 1 [N; 1] = k0 since E has eigenvalues bounded in absolute value by 1 (see [17], p. 54 for example) from which we conclude lim (I zE) 1 [N; 1] = Prob [M accepts x] by Lemma A.1. It follows that det (F ) det (G) &gt; 1 if and only if M accepts x with probability greater than 1 2 .
Reference: [2] <author> E. Allender and M. Ogihara. </author> <title> Relationships among PL, #L, and the determinant. </title> <journal> RAIRO - Theoretical Informatics and Applications, </journal> <volume> 30:1 - 21, </volume> <booktitle> 1996. Preliminary version appeared in Proceedings of the 9th Annual Structure in Complexity Theory Conference, </booktitle> <pages> pages 267-278, </pages> <year> 1994. </year>
Reference-contexts: Further, we have that unbounded error, space-bounded QTMs do not lose power if required to halt absolutely; a result which is analogous to one proved by Jung [20] for the probabilistic case (see also <ref> [2] </ref>). Our proofs of these relationships use a technique similar to one often used in the probabilistic case; the problem of determining if quantum machines accept with probability exceeding 1=2 is reduced to the problem of comparing determinants of integer matrices. The remainder of this paper has the following organization. <p> Proposition 3.4 EQSPACE (s) = RQSPACE (s) = NQSPACE (s): It will be demonstrated in the two sections which follow that the class NQSPACE (s) corresponds to the counting class co-C = SPACE (s), defined analogously to co-C = L for s (n) = log n (see <ref> [2] </ref>, and also see Sec tion A.4 in the appendix for an equivalent definition). 4 Quantum simulations of probabilis tic machines In this section, we discuss quantum simulations of probabilistic machines. <p> Proposition 4.2 PrSPACE (s) PrQ H SPACE (s). (Here we are relying on the fact that PrSPACE (s) = Pr H SPACE (s), proved in [20] (see also <ref> [2] </ref>).) In the case that M has probability of error bounded away from 1/2, we may apply Lemmas 3.1 and 3.3 to M 0 to obtain a QTM which accepts with prob ability p acc (x) 2 p acc (x) 2 +p rej (x) 2 and rejects with probability p acc <p> Combining these relationships with results of the previous section, we conclude that unbounded error space-bounded quantum and probabilistic machines are equivalent in power. Using similar arguments, the class NQSPACE (s) is shown to correspond directly to the class co-C = SPACE (s). The following lemma, proved in <ref> [2] </ref> (see also [10, 28, 29, 30]), is central to our argument. Lemma 5.1 Define L = (A; B) fi fi A; B are integer matrices satisfying det (A) &gt; det (B) where pairs of matrices (A; B) are encoded as binary strings. Then L 2 PrSPACE (log n). <p> Finally, we note the following relationship. Proposition 5.6 NQSPACE (s) co-C = SPACE (s). Proof. It follows from the proof of Lemma 5.2 that the matrix A has zero determinant if and only if M accepts x with probability zero. As noted in <ref> [2] </ref>, singularity of integer matrices is in C = L, from which it follows that testing non-singularity of A can be performed in co-C = SPACE (s). From Propositions 4.4 and 5.6, we have Corollary 5.7 NQSPACE (s) = co-C = SPACE (s). <p> We refer the reader to <ref> [2] </ref> for further discussion regarding C = L; the log-space representative of these classes. Proof of Proposition 4.4. Let L 2 C = SPACE (s), and let M be a PTM for L in the sense of Definition A.1.
Reference: [3] <author> C. H. Bennett. </author> <title> Logical reversibility of computation. </title> <journal> IBM Journal of Research and Development, </journal> <volume> 17 </volume> <pages> 525-532, </pages> <year> 1973. </year>
Reference-contexts: In this paper, we restrict our attention to QTMs which have rational transition amplitudes. QTMs can perform exactly those deterministic computations which are reversible, and consequently previous work on reversible computation is quite relevant to our discussion. It was proved by Bennett <ref> [3] </ref> that any deterministic Turing machine (DTM) computation can be simulated by a reversible Turing machine (RTM) (which we may define to be a deterministic Turing machine for which each configuration has at most one predecessor). <p> Similarly, the RTMs considered in <ref> [3, 4, 22] </ref> obey this restriction (where each V is a permutation in this case). In the interest of simplicity, we prefer to include this restriction as part of the definition of multi-tape QTMs.
Reference: [4] <author> C. H. Bennett. </author> <title> Time/space trade-offs for reversible computation. </title> <journal> SIAM Journal of Computing, </journal> <volume> 4(18) </volume> <pages> 766-776, </pages> <year> 1989. </year>
Reference-contexts: Bennett later improved the space-efficiency of this simulation so that it required at most a quadratic increase in space, at the cost of only a slight increase in running time <ref> [4] </ref>. This implies the relationship DSPACE (s) RevSPACE (s 2 ), where RevSPACE (s) denotes, for a given space bound s, the class of languages recognizable in space O (s) by a RTM. <p> Similarly, the RTMs considered in <ref> [3, 4, 22] </ref> obey this restriction (where each V is a permutation in this case). In the interest of simplicity, we prefer to include this restriction as part of the definition of multi-tape QTMs.
Reference: [5] <author> C. H. Bennett, E. Bernstein, G. Brassard, and U. Vazirani. </author> <title> Strengths and weaknesses of quantum computing. </title> <journal> SIAM Journal on Computing, </journal> <volume> 26(5) </volume> <pages> 1510-1523, </pages> <year> 1997. </year>
Reference: [6] <author> E. Bernstein and U. Vazirani. </author> <title> Quantum complexity theory. </title> <journal> SIAM Journal on Computing, </journal> <volume> 26(5) </volume> <pages> 1411-1473, </pages> <year> 1997. </year>
Reference-contexts: 1 Introduction Within the past several years, a number of researchers have provided compelling evidence suggesting that quantum computers may be considerably more powerful, in terms of time-bounded computation, than clas fl Supported in part by NSF grant CCR-95-10244 sical (probabilistic) computers (see <ref> [6, 7, 12, 16, 25, 26, 27] </ref>, for instance). In this paper, we consider the relative power of quantum and classical machines when space, rather than time, is the resource of primary concern. <p> The model for quantum computation which we use in this paper is the quantum Turing machine (QTM) model, first formally defined by Deutsch [11] (see also <ref> [6, 31] </ref>). We use a multitape version of the QTM model; in addition to having a read-only input tape, our QTMs also have an output tape which is assumed to be observed after each and every computation step. <p> (q) 2 [ f"g, such that (q; i ; w ; q 0 ; d i ; 0 = &gt; &gt; &gt; &lt; hq 0 ; 0 d w = D w (q 0 ); 0 otherwise: This restriction is analogous to unidirectionality for the single-tape QTM model, discussed in <ref> [6] </ref>; therein it is shown that this restriction does not decrease the power of QTMs. Similarly, the RTMs considered in [3, 4, 22] obey this restriction (where each V is a permutation in this case).
Reference: [7] <author> A. Berthiaume and G. Brassard. </author> <title> The quantum challenge to structural complexity theory. </title> <booktitle> In Proceedings of the 7th Annual IEEE Conference on Structure in Complexity, </booktitle> <pages> pages 132-137, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction Within the past several years, a number of researchers have provided compelling evidence suggesting that quantum computers may be considerably more powerful, in terms of time-bounded computation, than clas fl Supported in part by NSF grant CCR-95-10244 sical (probabilistic) computers (see <ref> [6, 7, 12, 16, 25, 26, 27] </ref>, for instance). In this paper, we consider the relative power of quantum and classical machines when space, rather than time, is the resource of primary concern.
Reference: [8] <author> A. Borodin, S. Cook, and N. Pippenger. </author> <title> Parallel computation for well-endowed rings and space-bounded probabilistic machines. </title> <journal> Information and Control, </journal> <volume> 58 </volume> <pages> 113-136, </pages> <year> 1983. </year>
Reference-contexts: DSPACE (s) = RevSPACE (s). Given that DSPACE (s) = RevSPACE (s), we may deduce various relationships among probabilistic and quantum space-bounded classes by considering deterministic simulations of probabilistic machines. Independently, Jung [18] and Borodin, Cook and Pip-penger <ref> [8] </ref> showed that any probabilistic Turing machine (PTM), even in the case of unbounded error and without restriction on running time, can be simulated deterministically with at most a quadratic increase in space, i.e. PrSPACE (s) DSPACE (s 2 ). (The result proved by Borodin, Cook and Pippenger [8] is somewhat <p> and Pip-penger <ref> [8] </ref> showed that any probabilistic Turing machine (PTM), even in the case of unbounded error and without restriction on running time, can be simulated deterministically with at most a quadratic increase in space, i.e. PrSPACE (s) DSPACE (s 2 ). (The result proved by Borodin, Cook and Pippenger [8] is somewhat stronger than this, implying that PrSPACE (log n) NC 2 .) This implies that RTMs, and hence QTMs, can also simulate PTMs with at most a quadratic increase in space. <p> By Propositions 4.2 and 5.3, we have the following corollaries. Corollary 5.4 PrQ H SPACE (s) = PrQSPACE (s) = PrSPACE (s): Corollary 5.5 PrQSPACE (s) DSPACE (s 2 ). In fact, it is shown in <ref> [8] </ref> that PrSPACE (log n) NC 2 , from which it follows that any log-space quantum Tur-ing machine, without restriction on error-probability or running time, can be simulated in NC 2 . Finally, we note the following relationship. Proposition 5.6 NQSPACE (s) co-C = SPACE (s). Proof.
Reference: [9] <author> P. Crescenzi and C. Papadimitriou. </author> <title> Reversible simulation of space-bounded computations. </title> <journal> Theoretical Computer Science, </journal> <volume> 143 </volume> <pages> 159-165, </pages> <year> 1995. </year>
Reference-contexts: This implies the relationship DSPACE (s) RevSPACE (s 2 ), where RevSPACE (s) denotes, for a given space bound s, the class of languages recognizable in space O (s) by a RTM. It was later proved <ref> [9] </ref> that nondeterministic Turing machines can also be simulated reversibly with the same increase in space, i.e. NSPACE (s) RevSPACE (s 2 ).
Reference: [10] <author> C. Damm. </author> <title> DET = L #L ? Informatik-Preprint 8, </title> <institution> Fachbereich Informatik der Humboldt-Universi-tat zu Berlin, </institution> <year> 1991. </year>
Reference-contexts: Using similar arguments, the class NQSPACE (s) is shown to correspond directly to the class co-C = SPACE (s). The following lemma, proved in [2] (see also <ref> [10, 28, 29, 30] </ref>), is central to our argument. Lemma 5.1 Define L = (A; B) fi fi A; B are integer matrices satisfying det (A) &gt; det (B) where pairs of matrices (A; B) are encoded as binary strings. Then L 2 PrSPACE (log n).
Reference: [11] <author> D. Deutsch. </author> <title> Quantum theory, the Church-Turing principle and the universal quantum computer. </title> <journal> Proceedings of the Royal Society of London, </journal> <volume> A400:97-117, </volume> <year> 1985. </year>
Reference-contexts: The model for quantum computation which we use in this paper is the quantum Turing machine (QTM) model, first formally defined by Deutsch <ref> [11] </ref> (see also [6, 31]). We use a multitape version of the QTM model; in addition to having a read-only input tape, our QTMs also have an output tape which is assumed to be observed after each and every computation step.
Reference: [12] <author> D. Deutsch and R. Jozsa. </author> <title> Rapid solutions of problems by quantum computation. </title> <journal> Proceedings of the Royal Society of London, </journal> <volume> A439:553-558, </volume> <year> 1992. </year>
Reference-contexts: 1 Introduction Within the past several years, a number of researchers have provided compelling evidence suggesting that quantum computers may be considerably more powerful, in terms of time-bounded computation, than clas fl Supported in part by NSF grant CCR-95-10244 sical (probabilistic) computers (see <ref> [6, 7, 12, 16, 25, 26, 27] </ref>, for instance). In this paper, we consider the relative power of quantum and classical machines when space, rather than time, is the resource of primary concern.
Reference: [13] <author> S. Fenner, F. Green, S. Homer, and R. Pruim. </author> <title> Determining acceptance possibility for a quantum computation is hard for PH. </title> <type> Preprint, </type> <year> 1997. </year>
Reference-contexts: From Propositions 4.4 and 5.6, we have Corollary 5.7 NQSPACE (s) = co-C = SPACE (s). This may be viewed as the space-bounded analogue of the result QNP = co-C = P <ref> [13] </ref>. 6 Conclusion and open problems space-bounded classes we have discussed in this paper. s DSPACE (s 2 ) = RevSPACE (s 2 ) s PrSPACE (s) = PrQSPACE (s) = PrQ H SPACE (s) s BPSPACE (s) H H H H H H Q Q Q Q Q s BQSPACE
Reference: [14] <author> L. Fortnow. </author> <title> Counting complexity. </title> <editor> In L. Hemas-paandra and A. Selman, editors, </editor> <booktitle> Complexity Theory Retrospective II, </booktitle> <pages> pages 81-107. </pages> <publisher> Springer, </publisher> <year> 1997. </year>
Reference-contexts: The integers stored on tracks 1, 2, 4 and 5 are to be encoded as binary strings beginning in square 0 in such a way that (1) the empty string represents 0, and (2) the integers and representations are in one-to-one correspondence (see <ref> [14] </ref>, for example, for such an encoding). By this assumption, these tracks all initially 1. Execute the following loop with starting/stopping condition "track 4 contains 0": i. Increment the number on track 4 modulo t (jxj). ii.
Reference: [15] <author> J. Gill. </author> <title> Computational complexity of probabilistic Turing machines. </title> <journal> SIAM Journal on Computing, </journal> <volume> 6(4) </volume> <pages> 675-695, </pages> <year> 1977. </year>
Reference: [16] <author> L. Grover. </author> <title> A fast quantum mechanical algorithm for database search. </title> <booktitle> In Proceedings of the 28th Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 212-219, </pages> <year> 1996. </year>
Reference-contexts: 1 Introduction Within the past several years, a number of researchers have provided compelling evidence suggesting that quantum computers may be considerably more powerful, in terms of time-bounded computation, than clas fl Supported in part by NSF grant CCR-95-10244 sical (probabilistic) computers (see <ref> [6, 7, 12, 16, 25, 26, 27] </ref>, for instance). In this paper, we consider the relative power of quantum and classical machines when space, rather than time, is the resource of primary concern.
Reference: [17] <author> A. </author> <title> Householder. The Theory of Matrices in Numerical Analysis. </title> <publisher> Blaisdell Publishing Company, </publisher> <address> New York, </address> <year> 1965. </year>
Reference-contexts: Hence, by Lemma A.2, det (F ) det (G) &gt; 1 if and only if lim z"1 (I zE) 1 [N; 1] &gt; 1 2 : For jzj &lt; 1, we have (I zE) 1 [N; 1] = k0 since E has eigenvalues bounded in absolute value by 1 (see <ref> [17] </ref>, p. 54 for example) from which we conclude lim (I zE) 1 [N; 1] = Prob [M accepts x] by Lemma A.1. It follows that det (F ) det (G) &gt; 1 if and only if M accepts x with probability greater than 1 2 .
Reference: [18] <author> H. Jung. </author> <title> Relationships between probabilistic and deterministic tape complexity. </title> <booktitle> In 10th Symposium on Mathematical Foundations of Computer Science, volume 118 of Lecture Notes in Computer Science, </booktitle> <pages> pages 339-346, </pages> <year> 1981. </year>
Reference-contexts: DSPACE (s) = RevSPACE (s). Given that DSPACE (s) = RevSPACE (s), we may deduce various relationships among probabilistic and quantum space-bounded classes by considering deterministic simulations of probabilistic machines. Independently, Jung <ref> [18] </ref> and Borodin, Cook and Pip-penger [8] showed that any probabilistic Turing machine (PTM), even in the case of unbounded error and without restriction on running time, can be simulated deterministically with at most a quadratic increase in space, i.e.
Reference: [19] <author> H. Jung. </author> <title> On probabilistic tape complexity and fast circuits for matrix inversion problems. </title> <booktitle> In Proceedings of the 11th International Colloquium on Automata, Languages and Programming, volume 172 of Lecture Notes in Computer Science, </booktitle> <pages> pages 281-291, </pages> <year> 1984. </year>
Reference: [20] <author> H. Jung. </author> <title> On probabilistic time and space. </title> <booktitle> In Proceedings of the 12th International Colloquium on Automata, Languages and Programming, volume 194 of Lecture Notes in Computer Science, </booktitle> <pages> 310-317, </pages> <year> 1985. </year>
Reference-contexts: Further, we have that unbounded error, space-bounded QTMs do not lose power if required to halt absolutely; a result which is analogous to one proved by Jung <ref> [20] </ref> for the probabilistic case (see also [2]). Our proofs of these relationships use a technique similar to one often used in the probabilistic case; the problem of determining if quantum machines accept with probability exceeding 1=2 is reduced to the problem of comparing determinants of integer matrices. <p> Proposition 4.2 PrSPACE (s) PrQ H SPACE (s). (Here we are relying on the fact that PrSPACE (s) = Pr H SPACE (s), proved in <ref> [20] </ref> (see also [2]).) In the case that M has probability of error bounded away from 1/2, we may apply Lemmas 3.1 and 3.3 to M 0 to obtain a QTM which accepts with prob ability p acc (x) 2 p acc (x) 2 +p rej (x) 2 and rejects with
Reference: [21] <author> A. Kondacs and J. Watrous. </author> <title> On the power of quantum finite state automata. </title> <booktitle> In Proceedings of the 38th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 66-75, </pages> <year> 1997. </year>
Reference-contexts: In the case of constant space-bounds, polynomial time QTMs are strictly more powerful than polynomial time PTMs <ref> [21] </ref>.
Reference: [22] <author> K. Lange, P. McKenzie and A. Tapp. </author> <title> Reversible space equals deterministic space, </title> <booktitle> In Proceedings of the 12th Annual IEEE Conference on Computational Complexity, </booktitle> <pages> pages 45-50, </pages> <year> 1997. </year>
Reference-contexts: It was later proved [9] that nondeterministic Turing machines can also be simulated reversibly with the same increase in space, i.e. NSPACE (s) RevSPACE (s 2 ). Quite recently, Lange, McKenzie and Tapp <ref> [22] </ref> proved that, at the cost of a possibly exponential increase in running time, DTMs can be simulated by RTMs with only a constant factor increase in space, i.e. DSPACE (s) = RevSPACE (s). <p> Similarly, the RTMs considered in <ref> [3, 4, 22] </ref> obey this restriction (where each V is a permutation in this case). In the interest of simplicity, we prefer to include this restriction as part of the definition of multi-tape QTMs. <p> s to do this (in step a, for example, M 0 may move its tape head over each square in the range fs; : : : ; sg, and perform the required swap only when some particular control bit is set, say). (Note that space constructibility of s, along with <ref> [22] </ref>, implies that M 0 can compute s (jxj) in space O (s), etc.) For the remaining deterministic steps, this is straightforward. Next we note that the loop (step 1) can be performed reversibly.
Reference: [23] <author> M. Saks. </author> <title> Randomization and derandomization in space-bounded computation. </title> <booktitle> In Proceedings of the 11th Annual IEEE Conference on Computational Complexity, </booktitle> <pages> pages 128-149, </pages> <year> 1996. </year>
Reference-contexts: If in addition M halts absolutely, then L is in the class X H SPACE (s). The prefixes RQ, BQ, NQ and PrQ may be replaced by R, BP, N and Pr, respectively, to obtain the analogously defined probabilistic classes. Here we have adopted the notation of <ref> [23] </ref>, to which the reader is referred for further information regarding the probabilistic versions of these classes. 3 Relations among quantum classes In this section, we discuss relationships among the space-bounded quantum classes defined in the previ ous section.
Reference: [24] <author> M. Saks and S. Zhou. </author> <booktitle> RSP ACE(s) DSP ACE(s 3=2 ). In Proceedings of the 36th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 344-353, </pages> <year> 1995. </year>
Reference-contexts: Along similar lines, Saks and Zhou <ref> [24] </ref> proved that any bounded error PTM which runs in space s and halts absolutely (i.e. halts with certainty after some finite number of steps) can be simulated deterministically (and hence by a QTM) in space O (s 3=2 ).
Reference: [25] <author> P. Shor. </author> <title> Algorithms for quantum computation: discrete logarithms and factoring. </title> <booktitle> In Proceedings of the 35th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 124-134, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction Within the past several years, a number of researchers have provided compelling evidence suggesting that quantum computers may be considerably more powerful, in terms of time-bounded computation, than clas fl Supported in part by NSF grant CCR-95-10244 sical (probabilistic) computers (see <ref> [6, 7, 12, 16, 25, 26, 27] </ref>, for instance). In this paper, we consider the relative power of quantum and classical machines when space, rather than time, is the resource of primary concern.
Reference: [26] <author> P. Shor. </author> <title> Polynomial-time algorithms for prime factorization and discrete logarithms on a quantum computer. </title> <journal> SIAM Journal on Computing, </journal> <volume> 26(5) </volume> <pages> 1484-1509, </pages> <year> 1997. </year>
Reference-contexts: 1 Introduction Within the past several years, a number of researchers have provided compelling evidence suggesting that quantum computers may be considerably more powerful, in terms of time-bounded computation, than clas fl Supported in part by NSF grant CCR-95-10244 sical (probabilistic) computers (see <ref> [6, 7, 12, 16, 25, 26, 27] </ref>, for instance). In this paper, we consider the relative power of quantum and classical machines when space, rather than time, is the resource of primary concern.
Reference: [27] <author> D. Simon. </author> <title> On the power of quantum computation. </title> <journal> SIAM Journal on Computing, </journal> <volume> 26(5) </volume> <pages> 1474-1483, </pages> <year> 1997. </year>
Reference-contexts: 1 Introduction Within the past several years, a number of researchers have provided compelling evidence suggesting that quantum computers may be considerably more powerful, in terms of time-bounded computation, than clas fl Supported in part by NSF grant CCR-95-10244 sical (probabilistic) computers (see <ref> [6, 7, 12, 16, 25, 26, 27] </ref>, for instance). In this paper, we consider the relative power of quantum and classical machines when space, rather than time, is the resource of primary concern.
Reference: [28] <author> S. </author> <title> Toda. Counting problems computationally equivalent to the determinant. </title> <type> Technical Report CSIM 91-07, </type> <institution> University of Electro-Communications, </institution> <address> Tokyo, </address> <year> 1991. </year>
Reference-contexts: Using similar arguments, the class NQSPACE (s) is shown to correspond directly to the class co-C = SPACE (s). The following lemma, proved in [2] (see also <ref> [10, 28, 29, 30] </ref>), is central to our argument. Lemma 5.1 Define L = (A; B) fi fi A; B are integer matrices satisfying det (A) &gt; det (B) where pairs of matrices (A; B) are encoded as binary strings. Then L 2 PrSPACE (log n).
Reference: [29] <author> L. Valiant. </author> <title> Why is Boolean complexity theory difficult? In Boolean Function Complexity, </title> <booktitle> volume 169 of London Mathematical Society Lecture Notes Series, </booktitle> <pages> pages 84-94, </pages> <year> 1992. </year>
Reference-contexts: Using similar arguments, the class NQSPACE (s) is shown to correspond directly to the class co-C = SPACE (s). The following lemma, proved in [2] (see also <ref> [10, 28, 29, 30] </ref>), is central to our argument. Lemma 5.1 Define L = (A; B) fi fi A; B are integer matrices satisfying det (A) &gt; det (B) where pairs of matrices (A; B) are encoded as binary strings. Then L 2 PrSPACE (log n).
Reference: [30] <author> V. Vinay. </author> <title> Counting auxiliary pushdown automata and semi-unbounded arithmetic circuits. </title> <booktitle> In Proceedings of the 6th Annual Structure in Complexity Theory Conference, </booktitle> <pages> pages 270-284, </pages> <year> 1991. </year>
Reference-contexts: Using similar arguments, the class NQSPACE (s) is shown to correspond directly to the class co-C = SPACE (s). The following lemma, proved in [2] (see also <ref> [10, 28, 29, 30] </ref>), is central to our argument. Lemma 5.1 Define L = (A; B) fi fi A; B are integer matrices satisfying det (A) &gt; det (B) where pairs of matrices (A; B) are encoded as binary strings. Then L 2 PrSPACE (log n).
Reference: [31] <author> A. Yao. </author> <title> Quantum circuit complexity. </title> <booktitle> In Proceedings of the 34th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 352-361, </pages> <year> 1993. </year>
Reference-contexts: The model for quantum computation which we use in this paper is the quantum Turing machine (QTM) model, first formally defined by Deutsch [11] (see also <ref> [6, 31] </ref>). We use a multitape version of the QTM model; in addition to having a read-only input tape, our QTMs also have an output tape which is assumed to be observed after each and every computation step.
References-found: 31

