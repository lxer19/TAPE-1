URL: ftp://ftp.cs.huji.ac.il/users/clag/padd97/yuval.ps
Refering-URL: http://www.cs.huji.ac.il/~clag/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: fyuvalf,clag,yish,jeffg@cs.huji.ac.il  
Title: Relevancy Ranking of Web Pages Using Shallow Parsing  
Author: Yuval Z. Feinstein Claudia V. Goldman Yishay Mor Jeffrey S. Rosenschein 
Address: Givat Ram, Jerusalem, Israel  
Affiliation: Institute of Computer Science The Hebrew University  
Abstract: We present a Phrase-Structure-Grammar method to rank the relevancy of Web pages. This method might be used as an aid to an information agent, assisting it in understanding the information acquired. The method could guide the agent when evaluating text by taking into account the syntactic roles of the words in this text. In cases where the agent presents its user with results from a search, our system could also assist this agent by ranking the results according to their relevance to the user's query. An existing search engine can also take advantage of this kind of method to improve the precision of its search results, without undermining recall. In both cases, we focus on ranking the pages retrieved for the user based on the relevance of these pages to the user's query. Therefore, we expect that our method will decrease the need to browse through irrelevant pages. The system is based on a syntactic analysis that requires the construction of parse trees for part of the text. Nevertheless, we combine shallow parsing with heuristics, thus making the system's computational requirements practical for real-world applications. 
Abstract-found: 1
Intro-found: 1
Reference: [alt] <author> altavista. </author> <note> http://altavista.digital.com/. </note>
Reference-contexts: Obviously, to use this heuristic we need to know in advance all the pages we are checking, and therefore all the links from the pages to the set we are ranking. 4. Relevance weights on terms | AltaVista <ref> [alt] </ref> lets the user assign weights to the query terms, and if a word with a high weight appears more times, the rank is higher. 5.
Reference: [Bri94] <author> E. Brill. </author> <title> Some advances in rule-based part of speech tagging'. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI-94), </booktitle> <pages> pages 722-727, </pages> <address> Seattle, Wa., </address> <year> 1994. </year>
Reference-contexts: The agent is a patchwork object that uses the following programs: * Amir Langer's IA library [lan] that receives a URL as its input, and outputs a data structure listing the links and text included in the corresponding Web page. * Eric Brill's syntactic tagger <ref> [Bri94] </ref> receives a chunk as input, and gives syntactic tags (Part Of Speech) to each word.
Reference: [Ear70] <author> Jay Earley. </author> <title> An efficient context-free parsing algorithm. </title> <journal> Communications of the ACM, </journal> <volume> 14:453|460, </volume> <year> 1970. </year>
Reference-contexts: The complexity of the process of tagging a word in a sentence is the time it takes to find the word in a dictionary, i.e., the time is O (length of the word). Parsing a string of length n takes O (n 3 fi SizeOf Grammar) <ref> [Ear70] </ref>. In our case the grammar is small, and n is bounded. In one case, n denotes the length of the query which is in practice generally quite small. We might even bound it in our implementation to a fixed maximal length.
Reference: [EZ96] <author> David A. Evans and Chengxiang Zhai. </author> <title> Noun-phrase analysis in unrestricted text for information retrieval. </title> <booktitle> The Computation and language E-Print Archive, </booktitle> <year> 1996. </year> <note> http://xxx.lanl.gov/ps/cmp-lg/9605019. </note>
Reference-contexts: Worse still, looking for "Blue Moon" using these heuristics may retrieve all pages containing both "Blue" and "Moon", irrespective of their relative places or order. Using a typical search engine we may still get a list of irrelevant pages before we get a relevant one. In <ref> [EZ96] </ref>, Evans & Zhai propose using noun-phrase extraction to increase recall and precision in information retrieval. Their claim is that using noun-phrases as index terms will improve current database retrieval performance. They have used statistical noun-phrase extraction to identify concepts that are likely to be recalled. <p> We parse the text online, rather than prepare a prior noun phrase index, as done in <ref> [EZ96] </ref>. The only information we save is the syntactic head and a parse tree representing the query. In addition, our system ranks the relevant documents such that the user will see the most relevant documents first, and all the other documents in decreasing order of relevance.
Reference: [GLR96] <author> Claudia V. Goldman, Amir Langer, and Jeffrey S. Rosenschein. Musag: </author> <title> an agent that learns what you mean. </title> <booktitle> In Proceedings of the First International Conference on Practical Applications of Intelligent Agents and Multi-Agents Technology (PAAM96), </booktitle> <pages> pages 311-329, </pages> <address> London, UK, </address> <year> 1996. </year>
Reference-contexts: Our results show that the ranking is not sufficient for independent use, i.e., for using our program as a search engine. However, the syntactic information extracted by this system might improve the heuristics that a learning agent, such as "MUSAG" <ref> [GLR96] </ref> uses to understand the context of words on the Internet.
Reference: [Hae91] <author> Lilian M. V. Haegeman. </author> <title> Introduction to Government and Binding Theory. </title> <publisher> Basil Blackwell, Oxford, </publisher> <year> 1991. </year>
Reference-contexts: For the parsing we do on the query and on the document text, we use a simple Definite Clause Grammar (DCG), which becomes an LL parser using Prolog's search order. The leaves in the trees are tags obtained from Brill's tagger. The parsing process finds the syntactic head <ref> [Hae91] </ref> using a local pointer | for each grammar rule, we indicate whether the head will be in the right subtree or in the left subtree of the tree produced from an application of that rule, so that a path from the tree's root to the head is saved in the
Reference: [lan] <institution> Ialib. Software developed at the Hebrew University by Amir Langer. </institution>
Reference-contexts: The agent is a patchwork object that uses the following programs: * Amir Langer's IA library <ref> [lan] </ref> that receives a URL as its input, and outputs a data structure listing the links and text included in the corresponding Web page. * Eric Brill's syntactic tagger [Bri94] receives a chunk as input, and gives syntactic tags (Part Of Speech) to each word.
Reference: [Man89] <author> Udi Manber. </author> <title> Introduction to Algorithms ACreative Approach. </title> <publisher> Addison Wesley, </publisher> <address> Reading,Massachusetes, </address> <year> 1989. </year>
Reference-contexts: VP S * a Det NP VP S * Dog N NP VP S (c) Individual branches are compared as follows: if a branch in T w has a leaf identical to one of the leaves in T q , their linearized branches are checked for minimal edit-distance (Levenshtein measure) <ref> [Man89] </ref>, and an inverse function of the distance is added to the page's rank. Levenshtein measure is the minimal number of letter insertions, deletions and substitutions needed to get from string A to string B. The "strings" here are the branch representations, and the "letters" are the node labels.
Reference: [Ofl96] <author> Kemal Oflazer. </author> <title> Error-tolerant tree matching. </title> <booktitle> The Computation and language E-Print Archive, </booktitle> <year> 1996. </year> <note> http://xxx.lanl.gov/ps/cmp-lg/9604003. </note>
Reference-contexts: Even if the heads are different, the trees are compared as explained in item 3b. (b) Now we compare the tree that represents the text chunk (T w ) with the tree representing the query (T q ). Each tree is represented as a linearized branch list <ref> [Ofl96] </ref>. Each branch is represented as a list of the node labels, from the leaf upwards.
Reference: [SM83] <author> Gerard Salton and Michael J. McGill. </author> <title> Introduction to Modern Information Retrieval. </title> <publisher> Mcgraw-Hill Book Co., </publisher> <address> New York, </address> <year> 1983. </year>
Reference-contexts: As a result, a user may spend many minutes going through irrelevant retrieved pages before reaching a relevant document. The standard measures of performance of an information retrieval system <ref> [SM83] </ref> are recall and precision.
Reference: [spi] <institution> The spider 0 s apprentice how to use web search engines. </institution> <note> http://www.monash.com/spidap.html. [yah] yahoo. http://av.yahoo.com/. </note>
Reference-contexts: Relevancy ranking is a process that tries to order the documents according to their relevance to the user's needs. There are several heuristics used for relevancy ranking in existing Web search engines. They include: <ref> [spi] </ref> 1. Search term frequency | if a word from the query appears in the page many times, rank the page high. 2.
References-found: 11

