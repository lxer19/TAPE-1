URL: http://www.cs.berkeley.edu/~alanm/CP/chiola.tr96-22.96.ps
Refering-URL: http://www.cs.berkeley.edu/~alanm/CP/bib.html
Root-URL: 
Email: fchiola,ciacciog@disi.unige.it  
Title: GAMMA: Architecture, Programming Interface and Preliminary Benchmarking  
Author: Giovanni Chiola, Giuseppe Ciaccio 
Keyword: GAMMA approach.  
Address: via Dodecaneso 35 16146 Genova, Italy  
Affiliation: DISI, Universita di Genova  
Abstract: Technical Report DISI-TR-96-22, November 1996 http://www.disi.unige.it/ Abstract The cost of high-performance parallel platforms prevents parallel processing techniques from spreading in present applications. Networks of Workstations (NOW) exploiting off-the-shelf communication hardware, high-end PCs and standard communication software provide much cheaper but poorly performing parallel platforms. Indeed standard network protocols and mechanisms cannot deliver a satisfactory amount of the communication performances of the raw hardware to applications. The GAMMA (Genoa Active Message MAchine) prototype is an attempt to overcome such a limitation by adopting a minimal communication protocol and the Active Message communication paradigm. The virtualization of the network interface provided by GAMMA is close enough to the raw hardware to guarantee good performance, while still providing a usable programming interface. This paper illustrates the software architecture of the communication layer of GAMMA. Two main optimizations are discussed and their remarkable impact on communication latency and throughput is shown. A comparison of communication performance with other parallel platforms is presented, with particular enphasis on other prototypes of NOWs. The application programming interface is described in detail. A preliminary benchmarking was carried out on a working prototype of GAMMA. The comparison with the results achieved by the same benchmarks run on the same hardware platform but with socket TCP/IP communications demonstrate the success of the 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> G. Chiola and G. Ciaccio. </author> <title> Implementing a Low Cost, Low Latency Parallel Platform. </title> <booktitle> In Proc. </booktitle> <address> DAPSYS'96, Miskolc, Hungary, </address> <month> October </month> <year> 1996. </year>
Reference-contexts: In what follows, the words "workstation" and "PC" are used as synonyms. 2 Hardware configuration The current prototype of GAMMA <ref> [1] </ref> is composed of a set of 12 autonomous workstations connected by means of two independent LANs: one 10 Mb/s Ethernet LAN used with the standard TCP and UDP protocol suites to provide Unix network services (access to network file servers, remote login, etc.), and one isolated 100 Mb/s Fast Ethernet
Reference: [2] <author> R.W. Hockney. </author> <title> The Communication Challenge for MPP: Intel Paragon and Meiko CS-2. </title> <journal> Parallel Computing, </journal> <volume> 20(3) </volume> <pages> 389-398, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: communication throughput T (s) as the transfer rate perceived by the application when sending a message of size s: T (s) = s=D (s): (1) The performance of message passing communications on a parallel platform is often characterized in terms of two synthetic parameters, namely communication latency and maximum bandwidth <ref> [2] </ref>. Maximum bandwidth is usually introduced as a constant value according to the following linear approximation for D (s): D (s) = D (0) + s=Bandwidth (2) where s is the message size in bytes. However such a linear approximation not always holds accurately.
Reference: [3] <author> N. Islam and R. Campbell. </author> <title> Latest Development in Operating Systems. </title> <journal> Comm. of ACM, </journal> <volume> 39(9):38 40, </volume> <month> September </month> <year> 1996. </year>
Reference-contexts: We argue that the efficient low level communication layer of GAMMA may constitute a good support to higher level mechanisms of both message passing and shared memory parallel programming paradigms. Both could be implemented as user level libraries. Indeed this approach conforms to the current trend in OS technology <ref> [3, 5] </ref>: modern OS kernels have reduced sizes and functionalities, and many traditional OS services are moved to user level libraries, thanks to the modern technology of dynamic linking to shared libraries.
Reference: [4] <author> L. Kronsjo. </author> <title> Computational complexity of sequential and parallel algorithms. </title> <publisher> John Wiley & Sons, </publisher> <year> 1985. </year>
Reference-contexts: So far we have developed two data parallel "benchmark" applications taken from the domain of numerical calculus, namely Parallel Matrix Multiplication (PMM) and (monodimensional) Fast Fourier Transform (FFT) <ref> [4] </ref>. <p> exploit the benefits on the communication/computation balance offered by larger matrices to a much more limited extent (e.g. speed-up less than 5 with 8 processors, hence 17 efficiency of 62% with 256fi256 matrices). 7.2 Fast Fourier Transform We implemented a parallel version of the monodimensional Fast Fourier Transform (FFT) algorithm <ref> [4] </ref> which assumes an initial replication of all data on the N processing nodes. Such initial data are a collection of M complex numbers, each one represented as a pair of single precision floating point numbers. The result is another collection of M complex numbers.
Reference: [5] <author> J. Liedtke. </author> <title> Towards Real Microkernels. </title> <journal> Comm. of ACM, </journal> <volume> 39(9) </volume> <pages> 70-77, </pages> <month> September </month> <year> 1996. </year>
Reference-contexts: We argue that the efficient low level communication layer of GAMMA may constitute a good support to higher level mechanisms of both message passing and shared memory parallel programming paradigms. Both could be implemented as user level libraries. Indeed this approach conforms to the current trend in OS technology <ref> [3, 5] </ref>: modern OS kernels have reduced sizes and functionalities, and many traditional OS services are moved to user level libraries, thanks to the modern technology of dynamic linking to shared libraries.
Reference: [6] <author> R. P. Martin. HPAM: </author> <title> An Active Message layer for a Network of HP Workstations. </title> <booktitle> In Proc. of Hot Interconnect II, </booktitle> <month> August </month> <year> 1994. </year>
Reference-contexts: GAMMA provides a consistent improvement of performance compared to Linux TCP/IP sockets. 14 Platform Latency (s) Bandwidth (MByte/s) Fast Messages (Myrinet) [7] 14.0 17.5 Active Messages (FDDI) <ref> [6] </ref> 14.5 12.0 GAMMA (Fast Ethernet) 18.6 10.4 Sender based protocol (FDDI) [9] 23.5 10.2 U-Net (Fast Ethernet) [15] 30.0 12.0 Active Messages (ATM) [12] 30 5.6 U-Net (ATM) [15] 35.5 14.8 PARMA 2 PRP sockets (Fast Ethernet) 73.5 6.6 Linux TCP/IP sockets (Fast Ethernet) 151.0 5.3 CM-5 CMAML ports 15.0
Reference: [7] <author> S. Pakin, M. Lauria, and A. Chien. </author> <title> High Performance Messaging on Workstations: Illinois Fast Messages (FM) for Myrinet Computation. </title> <booktitle> In Proc. Supercomputing '95, </booktitle> <address> San Diego, California, 1995. </address> <publisher> ACM Press. </publisher>
Reference-contexts: From the point of view of communication performance, one of the most promising approaches described in the literature is the Active Message paradigm [14]. NOWs based on Active Messages are currently being implemented in the framework a few research projects (e.g. <ref> [12, 7] </ref>), based on expensive, higher performance LAN technology (e.g. ATM) and products (e.g. Myrinet). <p> GAMMA provides a consistent improvement of performance compared to Linux TCP/IP sockets. 14 Platform Latency (s) Bandwidth (MByte/s) Fast Messages (Myrinet) <ref> [7] </ref> 14.0 17.5 Active Messages (FDDI) [6] 14.5 12.0 GAMMA (Fast Ethernet) 18.6 10.4 Sender based protocol (FDDI) [9] 23.5 10.2 U-Net (Fast Ethernet) [15] 30.0 12.0 Active Messages (ATM) [12] 30 5.6 U-Net (ATM) [15] 35.5 14.8 PARMA 2 PRP sockets (Fast Ethernet) 73.5 6.6 Linux TCP/IP sockets (Fast Ethernet)
Reference: [8] <author> V. Sunderam. </author> <title> PVM: A Framework for Parallel Distributed Computing. </title> <journal> Concurrency: Practice and Experience, </journal> <pages> pages 315-339, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: Neither of the above advantage was enjoyed by commercial high-performance parallel platforms, at least not to the same extent. Moreover, software environments such as PVM <ref> [8] </ref> or MPI [11] allow for easy exploitation of the NOW parallelism in order to implement portable parallel processing applications. The negative aspects of the NOW approach are related to the performance of the communication mechanisms usually made available at the application level.
Reference: [9] <author> M. R. Swanson and L. B. Stoller. </author> <title> Low Latency Workstation Cluster Communications Using Sender Based Protocols. </title> <type> Technical Report UUCS-96-001, </type> <institution> Dept. of Computer Science, University of Utah, </institution> <month> January </month> <year> 1996. </year> <month> 20 </month>
Reference-contexts: GAMMA provides a consistent improvement of performance compared to Linux TCP/IP sockets. 14 Platform Latency (s) Bandwidth (MByte/s) Fast Messages (Myrinet) [7] 14.0 17.5 Active Messages (FDDI) [6] 14.5 12.0 GAMMA (Fast Ethernet) 18.6 10.4 Sender based protocol (FDDI) <ref> [9] </ref> 23.5 10.2 U-Net (Fast Ethernet) [15] 30.0 12.0 Active Messages (ATM) [12] 30 5.6 U-Net (ATM) [15] 35.5 14.8 PARMA 2 PRP sockets (Fast Ethernet) 73.5 6.6 Linux TCP/IP sockets (Fast Ethernet) 151.0 5.3 CM-5 CMAML ports 15.0 8.5 SP2 MPL 44.8 34.9 T3D SHMEM 1.5 58.5 T3D PVMFAST 30.0
Reference: [10] <author> The Computer Engineering Group. </author> <title> P ARM A 2 Project: Parma PARallel MAchine. </title> <type> Technical report, </type> <institution> Dip. Ingegneria dell'Informazione, University of Parma, </institution> <month> October </month> <year> 1995. </year>
Reference-contexts: Naval Research Laboratory (URL http://www.nrl.navy.mil/CCS/help/CM5/products/cmmd.html). Performance measurements on PARMA 2 , IBM SP2 and Cray T3D have been collected by colleagues of ours who are currently developing the PARMA 2 project <ref> [10, Table 2.1] </ref>.
Reference: [11] <author> The Message Passing Interface Forum. </author> <title> MPI: A Message Passing Interface Standard. </title> <type> Technical report, </type> <institution> University of Tennessee, Knoxville, Tennessee, </institution> <year> 1995. </year>
Reference-contexts: Neither of the above advantage was enjoyed by commercial high-performance parallel platforms, at least not to the same extent. Moreover, software environments such as PVM [8] or MPI <ref> [11] </ref> allow for easy exploitation of the NOW parallelism in order to implement portable parallel processing applications. The negative aspects of the NOW approach are related to the performance of the communication mechanisms usually made available at the application level.
Reference: [12] <author> T. von Eicken, V. Avula, A. Basu, and V. </author> <title> Buch. Low-latency Communication Over ATM Networks Using Active Messages. </title> <journal> IEEE Micro, </journal> <volume> 15(1) </volume> <pages> 46-64, </pages> <month> February </month> <year> 1995. </year>
Reference-contexts: From the point of view of communication performance, one of the most promising approaches described in the literature is the Active Message paradigm [14]. NOWs based on Active Messages are currently being implemented in the framework a few research projects (e.g. <ref> [12, 7] </ref>), based on expensive, higher performance LAN technology (e.g. ATM) and products (e.g. Myrinet). <p> provides a consistent improvement of performance compared to Linux TCP/IP sockets. 14 Platform Latency (s) Bandwidth (MByte/s) Fast Messages (Myrinet) [7] 14.0 17.5 Active Messages (FDDI) [6] 14.5 12.0 GAMMA (Fast Ethernet) 18.6 10.4 Sender based protocol (FDDI) [9] 23.5 10.2 U-Net (Fast Ethernet) [15] 30.0 12.0 Active Messages (ATM) <ref> [12] </ref> 30 5.6 U-Net (ATM) [15] 35.5 14.8 PARMA 2 PRP sockets (Fast Ethernet) 73.5 6.6 Linux TCP/IP sockets (Fast Ethernet) 151.0 5.3 CM-5 CMAML ports 15.0 8.5 SP2 MPL 44.8 34.9 T3D SHMEM 1.5 58.5 T3D PVMFAST 30.0 25.1 Table 1: Ping-pong application: comparison of platforms.
Reference: [13] <author> T. von Eicken, A. Basu, V. Buch, and W. Vogels. U-Net: </author> <title> A User-Level Network Interface for Parallel and Distributed Computing. </title> <booktitle> In Proc. of the 15th ACM Symp. on Operating Systems Principles (SOSP'95), </booktitle> <address> Copper Mountain, Colorado, </address> <month> December </month> <year> 1995. </year> <note> ACM Press. </note>
Reference-contexts: The kernel code implements a thin and efficient communication protocol upon the IEEE 802.3 protocol implemented and run in firmware by the network adapters. Our implementation approach can be considered as quite traditional, as opposed to emerging "user level" approaches (e.g. <ref> [13, 15] </ref>) where the role of the kernel in the communication path is very limited or even null. Nevertheless GAMMA yields a communication latency time that is unbeated by any NOW-based prototype leveraging comparable hardware, together with a good exploitation of the communication bandwidth of the raw hardware.
Reference: [14] <author> T. von Eicken, D.E. Culler, S.C. Goldstein, and K.E. Schauser. </author> <title> Active Messages: A Mechanism for Integrated Communication and Computation. </title> <booktitle> In Proc. of the 19th Annual Int'l Symp. on Computer Architecture (ISCA'92), </booktitle> <address> Gold Coast, Australia, May 1992. </address> <publisher> ACM Press. </publisher>
Reference-contexts: Sometimes they provide for optimized network device drivers too, with only limited performance improvements at the application level. From the point of view of communication performance, one of the most promising approaches described in the literature is the Active Message paradigm <ref> [14] </ref>. NOWs based on Active Messages are currently being implemented in the framework a few research projects (e.g. [12, 7]), based on expensive, higher performance LAN technology (e.g. ATM) and products (e.g. Myrinet).
Reference: [15] <author> M. Welsh, A. Basu, and T. von Eicken. </author> <title> Low-latency Communication over Fast Ethernet. </title> <booktitle> In Proc. </booktitle> <address> Euro-Par'96, Lyon, France, </address> <month> August </month> <year> 1996. </year> <month> 21 </month>
Reference-contexts: The kernel code implements a thin and efficient communication protocol upon the IEEE 802.3 protocol implemented and run in firmware by the network adapters. Our implementation approach can be considered as quite traditional, as opposed to emerging "user level" approaches (e.g. <ref> [13, 15] </ref>) where the role of the kernel in the communication path is very limited or even null. Nevertheless GAMMA yields a communication latency time that is unbeated by any NOW-based prototype leveraging comparable hardware, together with a good exploitation of the communication bandwidth of the raw hardware. <p> GAMMA provides a consistent improvement of performance compared to Linux TCP/IP sockets. 14 Platform Latency (s) Bandwidth (MByte/s) Fast Messages (Myrinet) [7] 14.0 17.5 Active Messages (FDDI) [6] 14.5 12.0 GAMMA (Fast Ethernet) 18.6 10.4 Sender based protocol (FDDI) [9] 23.5 10.2 U-Net (Fast Ethernet) <ref> [15] </ref> 30.0 12.0 Active Messages (ATM) [12] 30 5.6 U-Net (ATM) [15] 35.5 14.8 PARMA 2 PRP sockets (Fast Ethernet) 73.5 6.6 Linux TCP/IP sockets (Fast Ethernet) 151.0 5.3 CM-5 CMAML ports 15.0 8.5 SP2 MPL 44.8 34.9 T3D SHMEM 1.5 58.5 T3D PVMFAST 30.0 25.1 Table 1: Ping-pong application: comparison <p> performance compared to Linux TCP/IP sockets. 14 Platform Latency (s) Bandwidth (MByte/s) Fast Messages (Myrinet) [7] 14.0 17.5 Active Messages (FDDI) [6] 14.5 12.0 GAMMA (Fast Ethernet) 18.6 10.4 Sender based protocol (FDDI) [9] 23.5 10.2 U-Net (Fast Ethernet) <ref> [15] </ref> 30.0 12.0 Active Messages (ATM) [12] 30 5.6 U-Net (ATM) [15] 35.5 14.8 PARMA 2 PRP sockets (Fast Ethernet) 73.5 6.6 Linux TCP/IP sockets (Fast Ethernet) 151.0 5.3 CM-5 CMAML ports 15.0 8.5 SP2 MPL 44.8 34.9 T3D SHMEM 1.5 58.5 T3D PVMFAST 30.0 25.1 Table 1: Ping-pong application: comparison of platforms.
References-found: 15

