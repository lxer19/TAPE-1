URL: ftp://coast.cs.purdue.edu/pub/doc/authentication/longjobs.ps.Z
Refering-URL: http://www.cs.purdue.edu/coast/archive/data/categ9.html
Root-URL: http://www.cs.purdue.edu
Email: rubin@citi.umich.edu  honey@citi.umich.edu  
Title: Long Running Jobs in an Authenticated Environment  
Author: A. D. Rubin P. Honeyman 
Address: 519 West William Street Ann Arbor, MI 48103-4943  
Affiliation: Center for Information Technology Integration University of Michigan  
Note: March  
Date: 93-1  29, 1993  
Pubnum: CITI Technical Report  
Abstract: Current authentication systems require that a user have a valid token or ticket for a job to run. These tickets are issued with limited lifetimes, and their renewal requires a user to enter her password. We have developed a system called lat with which a user may schedule a batch job to be run at a later date in the current environment. The batch job is stored on a secure machine, and sent and received only in encrypted form. When it is time for the job to run, the server generates a ticket for the original user and sends it (encrypted) to the machine on which the job will run. The user is given an option to specify that tickets should be continually generated for the job until its execution has completed. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> R.M. Needham and M.D. Schroeder, </author> <title> ``Using Encryption for Authentication in Large Networks of Computers,'' </title> <journal> Communications of the ACM 21(12), </journal> <pages> pp. </pages> <month> 993-999 (December, </month> <year> 1978). </year>
Reference-contexts: 1. Introduction Adaptations of Needham and Schroeder's authentication system <ref> [1] </ref> are a boon for establishing secure services in distributed systems. One such adaptation is the Kerberos Authentication system [2] of MIT's Project Athena. An unfortunate byproduct of building Kerberos-based systems is a loss of functionality, such as long running jobs.
Reference: 2. <author> J.G. Steiner, B.C. Neuman, and J.I. Schiller, </author> <title> ``Kerberos: An Authentication Service for Open Network Systems,'' pp. </title> <booktitle> 191-202 in Usenix Conference Proceedings, </booktitle> <address> Dallas, Texas (February, </address> <year> 1988). </year>
Reference-contexts: 1. Introduction Adaptations of Needham and Schroeder's authentication system [1] are a boon for establishing secure services in distributed systems. One such adaptation is the Kerberos Authentication system <ref> [2] </ref> of MIT's Project Athena. An unfortunate byproduct of building Kerberos-based systems is a loss of functionality, such as long running jobs. In this paper, we address this weakness and offer a solution. Before Kerberos, UNIX authentication was coter-minus with a login session. <p> The lat ticket is then sent to a latd server. The server must run on a secure machine. The client and server then mutally authenticate <ref> [2] </ref>, as shown in Figure 2. After mutual authentication, the client and server - 1 - - -- Rubin/Honeyman Ticket Mutual Authentication KRB LATD LAT ClientLAT Server SF for the lat job, which it stores on the local disk.
Reference: 3. <author> B. Lampson, M. Abadi, M. Burrows, and E. Wobber, </author> <title> ``Authentication in Distributed Systems: </title> <journal> Theory and Practice,'' ACM Transactions on Computer Systems 10(4) (November, </journal> <year> 1992). </year>
Reference-contexts: Thus, to schedule a long-running job, or one to be run at a later date, a principal must leave something around so that possession of this thing is equivalent to an authentication for that principal. A similar idea, called delegation is discussed by Lampson et al. in <ref> [3] </ref>. The authors define the ``speaks for'' relationship and provide rigorous definitions and proofs based on a set of axioms they define in the paper. Ideally, we would like the user's batch job to delegate authority to the workstation, saying that the workstation speaks for the user. <p> Thus, the user must place something on the workstation which the server can later use for mutual authenticata-tion. Lampson et al. describe a mechanism whereby a vacant workstation could share a secret <ref> [3] </ref>. Their method requires that a machine possess a private key stored in nonvolatile memory. In addition to the private key, certificates and other rules must be stored on the boot ROM.
Reference: 4. <institution> National Bureau of Standards, ``Data Encryption Standard.,'' Federal Information Processing Standards Publication(46) (1977). </institution>
Reference-contexts: It sends a lat ticket to the server (LATD), and the client and server mutually authenticate. Note that the Kerberos server (KRB) is running on the same machine as latd. have available a shared DES <ref> [4] </ref> key, which we denote K, as shown in Figure 3. K K LATD LAT ClientLAT Server client machine. The client and server share a secret key, K. The lat client uses K to seal the spool file.
Reference: 5. <author> D. Kahn, </author> <title> The Codebreakers, </title> <publisher> Macmillan Publishing Co., </publisher> <address> New York (1967). </address>
Reference-contexts: Yet, we take it as given that the encryption key may not reside on the workstation, even if well hidden. It has long been agreed by experts that ``security through obscurity'' should never be relied on for system secuity, e.g. , Kahn <ref> [5] </ref> cites Kerckhoffs' classic treatise on military security [6]; a more modern view is espoused by Saltzer and Schroeder [7] in describing ``open design'' as one of the basic principles of information protection: The design should not be secret.
Reference: 6. <author> A. Kerckhoffs, La Cryptographie Militaire, Libraire Militaire de L. Baudoin & Cie., </author> <note> Paris (1883). </note>
Reference-contexts: It has long been agreed by experts that ``security through obscurity'' should never be relied on for system secuity, e.g. , Kahn [5] cites Kerckhoffs' classic treatise on military security <ref> [6] </ref>; a more modern view is espoused by Saltzer and Schroeder [7] in describing ``open design'' as one of the basic principles of information protection: The design should not be secret.
Reference: 7. <author> J.H. Saltzer and M.D. Schroeder, </author> <title> ``The Protection of Information in Computer Systems,'' </title> <booktitle> Proc. of the IEEE 63(9), </booktitle> <pages> pp. </pages> <address> 1278-1307 (Sep-tember, </address> <year> 1975). </year>
Reference-contexts: It has long been agreed by experts that ``security through obscurity'' should never be relied on for system secuity, e.g. , Kahn [5] cites Kerckhoffs' classic treatise on military security [6]; a more modern view is espoused by Saltzer and Schroeder <ref> [7] </ref> in describing ``open design'' as one of the basic principles of information protection: The design should not be secret. The mechanisms should not depend on the ignorance of potential attackers, but rather on the possession of specific, more easily protected, keys or passwords.
Reference: 8. <author> V.L. Voydock and S.T. Kent, </author> <title> ``Security Mechanisms in High-Level Network Protocols,'' </title> <journal> Computing Surveys 15(2) (June, </journal> <year> 1983). </year>
Reference-contexts: Finally, it is simply not realistic to attempt to maintain secrecy for any system which receives wide distribution. Voydock and Kent amplify this perspective: ``data encryption is the fundamental technique on which all communications security measures are - 3 - - -- Rubin/Honeyman based'' <ref> [8] </ref>. Any techniques or protocols may as well be open and known if there is nothing gained from hiding them. Therefore, in a secure, distributed authentication system, data must travel across the network encrypted; for two peers to communicate this way, they must share a secret.
Reference: 9. <author> G.W. Treese, </author> <title> ``Berkeley UNIX on 1000 Workstations: Athena Changes to 4.3BSD,'' </title> <booktitle> USENIX Winter Conference, </booktitle> <address> Dallas Texas, </address> <pages> pp. </pages> <month> 175-182 (February, </month> <year> 1988). </year> <month> - 7 </month> - 
Reference-contexts: Lat does not compromise the security of people who do not use it. 3.4. The single user approach The vacant workstation problem was addressed by Treese at MIT, where access to an Athena workstation is limited to one user at a time <ref> [9] </ref>. Treese reports that ``experience has shown that this is an acceptable limitation.'' Placed in our context, workstations could prohibit any login while any lat job is scheduled. This would make lat client machines much more secure. However, this could result in a serious denial of service.
References-found: 9

