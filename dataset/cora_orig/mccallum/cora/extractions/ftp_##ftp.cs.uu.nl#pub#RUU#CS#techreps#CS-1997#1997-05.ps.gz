URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1997/1997-05.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: E-mail: fkoichi,hansb,babette,sedthilkg@cs.ruu.nl  
Title: Isomorphism for Graphs of Bounded Distance Width  
Author: Koichi Yamazaki, Hans L. Bodlaender, Babette de Fluiter, Dimitrios M. Thilikos 
Address: P.O. Box 80.089, 3508 TB Utrecht, the Netherlands  
Affiliation: Department of Computer Science, Utrecht University,  
Abstract: In this paper, we study the Graph Isomorphism problem on graphs of bounded treewidth, bounded degree or bounded bandwidth. Graph Isomorphism can be solved in polynomial time for graphs of bounded treewidth, pathwidth, or bandwidth, but the exponent depends on the treewidth, pathwidth, or bandwidth. Thus, we look for special cases where `fixed parameter tractable' polynomial time algorithms can be established. We introduce some new and natural graph parameters: the (rooted) path distance width, which is a restriction of bandwidth, and the (rooted) tree distance width, which is a restriction of treewidth. We give algorithms that solve Graph Isomorphism in O(n 2 ) time for graphs with bounded rooted path distance width, and in O(n 3 ) time for graphs with bounded rooted tree distance width. Additionally, we show that computing the path distance width of a graph is NP-hard, but both path and tree distance width can be computed in O(n k+1 ) time, when they are bounded by a constant k; the rooted path or tree distance width can be computed in O(ne) time. Finally, we study the relationships between the newly introduced parameters and other existing graph parameters.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. L. Bodlaender, </author> <title> Some classes of graphs with bounded treewidth, </title> <journal> Bulletin of the EATCS, </journal> <volume> 36 (1988), </volume> <pages> pp. 116-126. </pages>
Reference-contexts: For D 6 T W, we may notice that grids have maximum degree 4 and arbitrary large treewidth (see [13]). (2) CW T W follows immediately from the fact that for any graph G, T W (G) CW (G) (see <ref> [1] </ref>). Also, it is known that for any complete binary tree B k with depth k 2 CW (B k ) = d (k 1)=2e + 1 (see [4]). Hence T W 6 CW. (3) It is easy to see that the CW (G) D (G)=2 for any graph G. <p> Hence, we have CW T BW and T BW CW. (5) In <ref> [1] </ref>, it is shown that for any graph G, BW (G)(BW (G)+1)=2 CW (G). Therefore, BW CW. Consider the class L of graphs shown in Figure 10.
Reference: [2] <author> H. L. Bodlaender, </author> <title> A partial k-arboretum of graphs with bounded treewidth, </title> <type> Technical Report UU-CS-1996-02, </type> <institution> Dept. of Computer Science, Utrecht University, The Netherlands. </institution>
Reference-contexts: We are especially interested in Graph Isomorphism on graphs where either the treewidth, bandwidth, or degree of the graph is bounded, as there are many interesting graph classes which have a bound on one of these parameters (see e.g. <ref> [2] </ref>). For these parameters, it has been shown that when the parameter is a constant, then Graph Isomorphism is polynomial time solvable (see [12] for bounded degree, and [3] for bounded treewidth and bandwidth). However, in each of these three cases, the exponent of the algorithm grows with the parameter.
Reference: [3] <author> H. L. Bodlaender, </author> <title> Polynomial algorithms for graph isomorphism and chromatic index on partial k-trees, </title> <journal> J. Algorithms, </journal> <volume> 11 (1990), </volume> <pages> pp. 631-643. </pages>
Reference-contexts: For these parameters, it has been shown that when the parameter is a constant, then Graph Isomorphism is polynomial time solvable (see [12] for bounded degree, and <ref> [3] </ref> for bounded treewidth and bandwidth). However, in each of these three cases, the exponent of the algorithm grows with the parameter.
Reference: [4] <author> F. R. K. Chung, </author> <title> Labelings of graphs, in Selected topics in graph theory 3 (ed. </title> <editor> L. W. Beineke and R. J. Wilson), </editor> <year> (1988), </year> <pages> pp. 151-168. </pages>
Reference-contexts: Also, it is known that for any complete binary tree B k with depth k 2 CW (B k ) = d (k 1)=2e + 1 (see <ref> [4] </ref>). Hence T W 6 CW. (3) It is easy to see that the CW (G) D (G)=2 for any graph G. Thus, CW D. <p> As (B k ) = 3 we have that D 6 CW. (4) It is known that T BW (G) CW (G) for any graph G (see <ref> [4] </ref>), and that there exists a function f such that for any graph G, CW (G) f (T BW (G)) (see [5]). Hence, we have CW T BW and T BW CW. (5) In [1], it is shown that for any graph G, BW (G)(BW (G)+1)=2 CW (G).
Reference: [5] <author> F. R. K. Chung and P. D. Seymour, </author> <title> Graphs with small bandwidth and cutwidth, </title> <journal> Discrete Math., </journal> <volume> 75 (1989), </volume> <pages> pp. 113-119. </pages>
Reference-contexts: As (B k ) = 3 we have that D 6 CW. (4) It is known that T BW (G) CW (G) for any graph G (see [4]), and that there exists a function f such that for any graph G, CW (G) f (T BW (G)) (see <ref> [5] </ref>). Hence, we have CW T BW and T BW CW. (5) In [1], it is shown that for any graph G, BW (G)(BW (G)+1)=2 CW (G). Therefore, BW CW. Consider the class L of graphs shown in Figure 10. <p> Therefore, BW CW. Consider the class L of graphs shown in Figure 10. It is clear that these graphs have bounded cutwidth but arbitrary large bandwidth (use the well known formula jV (G)j1 diam (G) BW (G), where diam (G) is the diameter of G, see <ref> [5] </ref>). Thus CW 6 BW. 17 (6) Let G be a graph which has a strong path decomposition (X 1 ; X 2 ; ; X t ) with width at most k. We will prove that the bandwidth of G is bounded by g (k) = 2k 1.
Reference: [6] <author> C. J. Colbourn and K. S. Booth. </author> <title> Linear time automorphism algorithms for trees, interval graphs, and planar graphs. </title> <journal> SIAM J. Comput., </journal> <volume> 10 (1981), </volume> <pages> pp. 203-225. </pages>
Reference-contexts: Note that D G and D H cannot be isomorphic if T G and T H are not isomorphic. Therefore, ISO-CHECK (D G ; D H ) first test whether T G and T H are isomorphic (step 1). This test uses the rooted tree isomorphism checking algorithm from <ref> [6] </ref> and requires O (n) time. Now suppose T G and T H are isomorphic. The depth of a node in a rooted tree is the length of a path from this node to the root (so the root has depth zero).
Reference: [7] <author> G. Ding and B. Oporowski, </author> <title> Some results on tree decomposition of graphs. </title> <journal> Journal of Graph Theory, </journal> <volume> 20 (4) (1995), </volume> <pages> pp. 481-499. 21 </pages>
Reference: [8] <author> R. G. Downey and M. R. Fellows, </author> <title> Fixed-parameter tractability and Completeness I: Basic Results, </title> <journal> SIAM J. Comput., </journal> <volume> 24 (1995), </volume> <pages> pp. 873-921. </pages>
Reference-contexts: O (f (k)n c ), c a small constant, k the maximum degree / treewidth / bandwidth / . . . / of the graph; in other words, whether Graph Isomorphism is fixed parameter tractable (in the sense of the fixed parameter complexity theory of Downey and Fellows, see e.g. <ref> [8, 9] </ref>), with the maximum degree / treewidth / bandwidth / . . . / as parameter. Thus, we are looking for answers to the questions whether Graph Isomorphism is fixed parameter tractable for the case that the parameter is the degree, treewidth or bandwidth of the graph. <p> problems An interesting open problem is to find in the hierarchy depicted in Figure 9, the boundary between the parameters that give fixed parameter tractability for Graph Isomorphism, and the parameters that (probably) do not, i.e. for which Graph Isomorphism is W [t]- hard for some t (as defined by <ref> [8, 9] </ref>): until now, we only know that Graph Isomorphism 20 is fixed parameter tractable for parameters RT DW, RPDW and CSPW, but for all other parameters in the figure, the problem is still open.
Reference: [9] <author> R. G. Downey and M. R. Fellows, </author> <title> Fixed-parameter tractability and completeness II: On completeness for W [1], </title> <institution> Theor. Comput. Sci. </institution> <month> 141 </month> <year> (1995), </year> <pages> pp. 109-131. </pages>
Reference-contexts: O (f (k)n c ), c a small constant, k the maximum degree / treewidth / bandwidth / . . . / of the graph; in other words, whether Graph Isomorphism is fixed parameter tractable (in the sense of the fixed parameter complexity theory of Downey and Fellows, see e.g. <ref> [8, 9] </ref>), with the maximum degree / treewidth / bandwidth / . . . / as parameter. Thus, we are looking for answers to the questions whether Graph Isomorphism is fixed parameter tractable for the case that the parameter is the degree, treewidth or bandwidth of the graph. <p> problems An interesting open problem is to find in the hierarchy depicted in Figure 9, the boundary between the parameters that give fixed parameter tractability for Graph Isomorphism, and the parameters that (probably) do not, i.e. for which Graph Isomorphism is W [t]- hard for some t (as defined by <ref> [8, 9] </ref>): until now, we only know that Graph Isomorphism 20 is fixed parameter tractable for parameters RT DW, RPDW and CSPW, but for all other parameters in the figure, the problem is still open.
Reference: [10] <author> R. </author> <title> Halin, Tree-partitions of infinite graphs. </title> <journal> Discrete Mathematics, </journal> <volume> 97 (1991), </volume> <pages> pp. 103-217. </pages>
Reference: [11] <author> B. Korte, L. Lovasz, H. J. Promel and A. Schrijver ed., </author> <title> "Paths, Flows, and VLSI-Layout", </title> <publisher> Springer-Verlag (1990), </publisher> <pages> pp. 383. </pages>
Reference: [12] <author> E. M. Luks, </author> <title> Isomorphism of graphs of bounded valence can be tested in polynomial time, </title> <journal> JCSS, </journal> <volume> 25 (1982), </volume> <pages> pp. 42-65. </pages>
Reference-contexts: For these parameters, it has been shown that when the parameter is a constant, then Graph Isomorphism is polynomial time solvable (see <ref> [12] </ref> for bounded degree, and [3] for bounded treewidth and bandwidth). However, in each of these three cases, the exponent of the algorithm grows with the parameter.
Reference: [13] <author> N. Robertson and P. D. Seymour, </author> <title> Graph Minors. X. Obstructions to Tree-Decomposition, </title> <journal> J. Combin. Theory Ser. B, </journal> <volume> 52 (1991), </volume> <pages> pp. 153-190. </pages>
Reference-contexts: For D 6 T W, we may notice that grids have maximum degree 4 and arbitrary large treewidth (see <ref> [13] </ref>). (2) CW T W follows immediately from the fact that for any graph G, T W (G) CW (G) (see [1]). Also, it is known that for any complete binary tree B k with depth k 2 CW (B k ) = d (k 1)=2e + 1 (see [4]).
Reference: [14] <author> D. Seese, </author> <title> Tree-partite graphs and the complexity of algorithms, </title> <booktitle> Proc. Int. Conf. on Fundamentals of Computation Theory, Lecture Notes in Computer Science 199, </booktitle> <year> (1985), </year> <pages> pp. 412-421. </pages>
Reference: [15] <author> L. Smithline, </author> <title> Bandwidth of the complete k-ary tree, </title> <journal> Discrete Mathematics, </journal> <volume> 142 (1995), </volume> <pages> pp. 203-212. </pages>
Reference-contexts: Thus we have that BW SPW. (7) It is easy to see that RT DW 6 BW by considering the class of complete binary trees. (It is well known that the bandwidth of a k-depth complete binary tree is d (2 k 1)=ke, see <ref> [15] </ref>.) (8) We straightforwardly obtain RPDW PDW from the definitions. Consider the class L of graphs described in Figure 11. It is clear that any graph in L has bounded path distance width and arbitrary large rooted path distance width.
References-found: 15

