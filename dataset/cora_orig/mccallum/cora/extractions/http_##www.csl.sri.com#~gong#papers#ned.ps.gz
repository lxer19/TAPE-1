URL: http://www.csl.sri.com/~gong/papers/ned.ps.gz
Refering-URL: http://www.csl.sri.com/~gong/papers/ned-abs.html
Root-URL: 
Email: (gong@csl.sri.com)  
Title: New Protocols for Third-Party-Based Authentication and Secure Broadcast  
Author: Li Gong 
Address: 333 Ravenswood Avenue Menlo Park, California 94025 U.S.A.  
Affiliation: SRI International Computer Science Laboratory  
Abstract: This paper gives Needham-Schroeder style third-party-based authentication and key-distribution protocols that do not use conventional cryptosystems such as DES. The new protocols use polynomial interpolation and secure keyed one-way hash functions, and are efficient compared with protocols using conventional cryptosystems. The same techniques are generalized to develop protocols for secure broadcast and for secure communication. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Berkovits. </author> <title> How To Broadcast a Secret. </title> <booktitle> In Advances in Cryptology: Proceedings of Eurocrypt '91, volume 547 of Lecture Notes in Computer Science, </booktitle> <pages> pages 535-541. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <month> April </month> <year> 1991. </year>
Reference-contexts: The problem we examine here is how to securely broadcast a message when public-key systems are not used, and how to avoid encrypting the message n times or maintaining O (2 n ) group keys. 4.1 Common Attacks in Secure Broadcast Some authors of secure broadcast protocols (e.g., <ref> [9, 1] </ref>) focus their attention mostly on attacks on secrecy, and do not discuss other attacks, for example, the insider attack in Section 2.2. We now highlight the risks with a case study of the Chiou-Chen protocol [9]. We discuss these attacks and also suggest counter measures. <p> in terms of efficiency in avoiding conventional encryption may be outweight by the increased total network traffic and load. 4.3 Related Work in Secure Broadcast There are a number of existing protocols for secure broadcast, and some protocols for conference key distribution can also be extended for this purpose (e.g., <ref> [9, 17, 1] </ref>). The three protocols cited here are typical in that the main concern is to defeat those attacks directly on message secrecy, but not other attacks such as by insiders or on message freshness. <p> The three protocols cited here are typical in that the main concern is to defeat those attacks directly on message secrecy, but not other attacks such as by insiders or on message freshness. Among these protocols, the closest to the NED-B protocol is perhaps the work by Berkovits <ref> [1] </ref> where the proposal uses polynomial interpolation but in a different form. Another closely related protocol is by Chiou and Chen [9] since polynomial interpolation is a special case of the Chinese Remainder Theorem. <p> Moreover, the arithmetic in their protocol must be computed in a field containing the product of all the n relatively prime numbers. Since the range containing n prime numbers is roughly <ref> [1; n log n] </ref> [14, pp.9-10], the size of the field is at least O (n log (n log n)) = O (n log n) bits long and the broadcast message has O (n 2 log n) bits, whereas in NED-B protocols, the field size is only O (log n) and <p> Included in SRI CSL-94-03, March 1994. Many colleagues read the two reports (and some earlier drafts) and provided valuable feedback. The anonymous reviewers of this conference brought to my attention several references <ref> [1, 5, 7, 17] </ref>, thus giving me the opportunity to make the presentation in this paper more complete.
Reference: [2] <author> T.A. Berson, L. Gong, and T.M.A. Lomas. </author> <title> Secure, Keyed, and Collisionful Hash Functions. </title> <note> Decem-ber 1993. Included in Technical Report SRI-CSL-94-08, </note> <institution> Computer Science Laboratory, SRI International, </institution> <address> Menlo Park, California, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: An outsider can attack in the same way if k is later compromised through other means. 2 One solution is to use a secure keyed one-way hash function. The following definition is adapted from <ref> [2] </ref>, which also contains more references to works on one-way hash functions. 3 Definition 1 A function h () that maps a key and a second bit string to a string of a fixed length is a secure keyed one way hash function if it satisfies the following five properties: 1. <p> This usage may implicitly require additional properties about the statistical distribution of the output from the one-way hash function. These properties probably hold for well-designed hash functions, but they are not required in the theoretical definition of a one-way hash function <ref> [2, 21] </ref>, and may also be hard to analyze. For example, given that h () is a secure keyed one-way hash function, we define g (x) = h (x) j 1 1, i.e., the output of h () concatenated with a string of 1's.
Reference: [3] <author> B. Bird, I. Gopal, A. Herzberg, P. Janson, S. Kut-ten, R. Molva, and M. Yung. </author> <title> Systematic Design of a Family of Attack-Resistant Authentication Protocols. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 11(5) </volume> <pages> 679-693, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Because the hash function is one-way, the same process cannot be repeated with B. But S can send k to B using a simple exclusive-or operation to hide k. This technique was subsequently used elsewhere to design efficient authentication protocols for computer networks (e.g., <ref> [3] </ref>). In this paper, we propose new authentication protocols that do not use a conventional cryptosystem such as DES [24]. Instead, the protocols are based on polynomial interpolation [16, pp.484-486], similar to Shamir's use in secret-sharing [23]. <p> The earliest work we are aware of on this type of protocols that do not use conventional cryptosystems is [11]. The protocols there (and elsewhere such as in <ref> [3] </ref>) use secure keyed one-way hash functions, and sometimes in bitwise exclusive-or operations to protect data secrecy. This usage may implicitly require additional properties about the statistical distribution of the output from the one-way hash function.
Reference: [4] <author> K.P. Birman and T.A. Joseph. </author> <title> Reliable Communication in the Presence of Failures. </title> <journal> ACM Transactions on Computing Systems, </journal> <volume> 5(1) </volume> <pages> 47-76, </pages> <month> February </month> <year> 1987. </year>
Reference-contexts: There is yet another problem that is not solved by this new version. In many systems, for example, the Internet, a broadcast channel is a simulation. Sometimes such a channel will behave correctly only if all parties concerned follow the protocol (e.g., <ref> [4] </ref>). In such an environment, it is likely that P 1 can interfere with the broadcast before another recipient receives the message.
Reference: [5] <author> B. Blakley, G.R. Blakley, A.H. Chan, and J.L. Massey. </author> <title> Threshold Schemes with Disenrollment. </title> <booktitle> In Advances in Cryptology: Proceedings of Crypto '92, volume 740 of Lecture Notes in Computer Science, </booktitle> <pages> pages 540-548. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: Wheeler of the University of Cambridge during a discussion on April 8, 1994. A reviewer of this conference later referred to me the work by Blakley et al. <ref> [5] </ref> where the problem of how to replenish new shadows in a secret-sharing scheme when pieces of old shadows are compromised was studied. <p> Included in SRI CSL-94-03, March 1994. Many colleagues read the two reports (and some earlier drafts) and provided valuable feedback. The anonymous reviewers of this conference brought to my attention several references <ref> [1, 5, 7, 17] </ref>, thus giving me the opportunity to make the presentation in this paper more complete.
Reference: [6] <author> R. Blom. </author> <title> An Optimal Class of Symmetric Key Generation Systems. </title> <booktitle> In Advances in Cryptology: Proceedings of Eurocrypt '84, volume 209 of Lecture Notes in Computer Science, </booktitle> <pages> pages 335-338. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <month> April </month> <year> 1984. </year>
Reference-contexts: One is by Blom <ref> [6] </ref> and others (e.g., [18, 13, 7]) in which the server distributes a large amount of keys to clients who later compute session or conference keys using the distributed keys together with the identities of those clients in the session.
Reference: [7] <author> C. Blundo, A. De Santis, A. Herzberg, S. Kutten, U. Vaccaro, and M. Young. </author> <title> Perfectly-Secure Key Distribution for Dynamic Conferences. </title> <booktitle> In Advances in Cryptology: Proceedings of Crypto '92, volume 740 of Lecture Notes in Computer Science, </booktitle> <pages> pages 471-486. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: This is because otherwise for A to find out B's key k 2 , it is just a matter of solving a higher order equation. This intuition is supported by the work of Blundo et al. <ref> [7] </ref> where they proved a theorem (for the noninteractive case of conference key distribution) that, in order to prevent a group of colluders from compromising others' secrets, a user needs to hold secret information that is many times the size of the session key. (The authors there gave a protocol based <p> One is by Blom [6] and others (e.g., <ref> [18, 13, 7] </ref>) in which the server distributes a large amount of keys to clients who later compute session or conference keys using the distributed keys together with the identities of those clients in the session. <p> The theme in these protocols is not how the server distributes the keys to the clients, but rather how the clients use the keys to generate session keys. The NED protocols we propose in this paper are not of this type. Nevertheless, the work by Blundo et al. <ref> [7] </ref> is quite relevant in that they proved that, to prevent a group of colluders from compromising other clents' keys, the total size of the keys the server needs to distribute to each client must be many times of the size of a session key, not assuming the use of one-way <p> Included in SRI CSL-94-03, March 1994. Many colleagues read the two reports (and some earlier drafts) and provided valuable feedback. The anonymous reviewers of this conference brought to my attention several references <ref> [1, 5, 7, 17] </ref>, thus giving me the opportunity to make the presentation in this paper more complete.
Reference: [8] <author> M. Burrows, M. Abadi, and R.M. Needham. </author> <title> A Logic for Authentication. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 8(1) </volume> <pages> 18-36, </pages> <month> February </month> <year> 1990. </year>
Reference-contexts: 1 Authentication Authentication, the process of identifying entities such as users and machines, is a crucial element in secure distributed systems and networks. Authentication is closely related to key distribution, and the two issues are often treated jointly <ref> [8, 19] </ref>. Research in third-party-based authentication protocols has been significantly influenced by the work of Needham and Schroeder [19], and we confine this paper to the discussion of Needham-Schroeder type authentication protocols. <p> A ! B: h (k; N b ; I b ; I a ) The security arguments for this protocol are the same as those given in Section 2, and a preliminary analysis using BAN-like logics <ref> [8] </ref> does not reveal any security problems. In an exhaustive cryptanalysis, the attacker may attempt to build up a dictionary of possible session keys and hash values. One way to increase the difficulty of this attack is to use longer texts in the input to the hash function.
Reference: [9] <author> G.H. Chiou and W.T. Chen. </author> <title> Secure Broadcasting Using Secure Lock. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 15(8) </volume> <pages> 929-934, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: The problem we examine here is how to securely broadcast a message when public-key systems are not used, and how to avoid encrypting the message n times or maintaining O (2 n ) group keys. 4.1 Common Attacks in Secure Broadcast Some authors of secure broadcast protocols (e.g., <ref> [9, 1] </ref>) focus their attention mostly on attacks on secrecy, and do not discuss other attacks, for example, the insider attack in Section 2.2. We now highlight the risks with a case study of the Chiou-Chen protocol [9]. We discuss these attacks and also suggest counter measures. <p> We now highlight the risks with a case study of the Chiou-Chen protocol <ref> [9] </ref>. We discuss these attacks and also suggest counter measures. The Chiou-Chen protocol works as follows. Assume that S and P i share a key k i . S selects a random encryption key k, encrypts m with it, and computes fkg k . <p> Recipient P i obtains m as before, computes h (m), and compares it with the checksum value received from S. A discrepancy suggests accidental modification or deliberate tampering of the broadcast message. Since the original Chiou-Chen protocol is secure against known-plaintext attacks <ref> [9] </ref>, and the new protocol is different only in that two more data items a timestamp t and a checksum h (m) are encrypted, the new protocol is also likely to be resistant to known-plaintext attacks. <p> in terms of efficiency in avoiding conventional encryption may be outweight by the increased total network traffic and load. 4.3 Related Work in Secure Broadcast There are a number of existing protocols for secure broadcast, and some protocols for conference key distribution can also be extended for this purpose (e.g., <ref> [9, 17, 1] </ref>). The three protocols cited here are typical in that the main concern is to defeat those attacks directly on message secrecy, but not other attacks such as by insiders or on message freshness. <p> Among these protocols, the closest to the NED-B protocol is perhaps the work by Berkovits [1] where the proposal uses polynomial interpolation but in a different form. Another closely related protocol is by Chiou and Chen <ref> [9] </ref> since polynomial interpolation is a special case of the Chinese Remainder Theorem. Their protocol needs to associate one positive number with each of the n clients where the numbers must be relatively prime to each other.
Reference: [10] <author> W. Diffie and M.E. Hellman. </author> <title> New Directions in Cryptography. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-22(6):644-65, </volume> <month> November </month> <year> 1976. </year>
Reference-contexts: Typically, for two clients to authenticate each other, an authentication server distributes a session key to both clients so that they will have a secure communication channel. The protocols can be based on symmetric-key cryp-tosystems or asymmetric-key (e.g., public-key) cryptosys-tems <ref> [10, 19] </ref>. Prior to authentication and session key distribution, a client either shares a secret key or (securely) registers a public key with the server [19]. <p> However, since S may need to send messages to different sets of recipients, S must maintain many such group keys, up to O (2 n ). Suppose that each server or client has a pair of public and private keys <ref> [10] </ref> and that each party knows the public key of every other party, then S can choose an encryption key (e.g., for use in DES) at random and encrypt m.
Reference: [11] <author> L. Gong. </author> <title> Using One-Way Functions for Authentication. </title> <journal> ACM Computer Communication Review, </journal> <volume> 19(5) </volume> <pages> 8-11, </pages> <month> October </month> <year> 1989. </year>
Reference-contexts: In an effort to reduce the use of encryption in authentication protocols (partly to increase protocol efficiency), Gong suggests an authentication protocol that uses only secure keyed one-way hash functions <ref> [11] </ref>. <p> The earliest work we are aware of on this type of protocols that do not use conventional cryptosystems is <ref> [11] </ref>. The protocols there (and elsewhere such as in [3]) use secure keyed one-way hash functions, and sometimes in bitwise exclusive-or operations to protect data secrecy. This usage may implicitly require additional properties about the statistical distribution of the output from the one-way hash function.
Reference: [12] <author> L. Gong. </author> <title> Cryptographic Protocols for Distributed Systems. </title> <type> Phd dissertation, </type> <institution> University of Cambridge, Eng-land, </institution> <month> April </month> <year> 1990. </year>
Reference-contexts: We are not aware of any previously proposed third-party-based authentication and key distribution protocol that is based on polynomial interpolation instead of conventional encryption. The possibility of doing the "reverse calculation" in polynomial interpolation, which is crucial for our new protocols, has been noted before (e.g., <ref> [12, Appendix B] </ref>). Other secret-sharing schemes where a similar "reverse calculation" can be done are also potentially applicable here.
Reference: [13] <author> L. Gong and D.J. Wheeler. </author> <title> A Matrix Key Distribution Scheme. </title> <journal> Journal of Cryptology, </journal> <volume> 2(2) </volume> <pages> 51-59, </pages> <address> 1990. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: One is by Blom [6] and others (e.g., <ref> [18, 13, 7] </ref>) in which the server distributes a large amount of keys to clients who later compute session or conference keys using the distributed keys together with the identities of those clients in the session.
Reference: [14] <author> G.H. Hardy and E.M. Wright. </author> <title> An Introduction to the Theory of Numbers. </title> <publisher> Oxford University Press, Oxford, </publisher> <address> England, </address> <year> 1979. </year> <note> First edition 1938, fifth edition 1979, reprinted (with corrections) 1983. </note>
Reference-contexts: Moreover, the arithmetic in their protocol must be computed in a field containing the product of all the n relatively prime numbers. Since the range containing n prime numbers is roughly [1; n log n] <ref> [14, pp.9-10] </ref>, the size of the field is at least O (n log (n log n)) = O (n log n) bits long and the broadcast message has O (n 2 log n) bits, whereas in NED-B protocols, the field size is only O (log n) and the broadcast message has
Reference: [15] <author> R.R. Jueneman, S.M. Matyas, and C.H. Meyer. </author> <title> Message Authentication with Manipulation Detection Codes. </title> <booktitle> In Proceedings of the IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 33-54, </pages> <address> Oakland, California, </address> <month> April </month> <year> 1983. </year>
Reference-contexts: here, though we have the additional (and significant) constraint that the shadows the keys clients and the server share are usually long term keys that do not or cannot get changed after each session of authentication. 3 Paul Van Oorschot of Bell-Northern Research recently pointed out to me two papers <ref> [15, 21] </ref> where a definition of manipulation detection code is given.
Reference: [16] <author> D.E. Knuth. </author> <title> The Art of Computer Programming, Vol.2: Seminumerical Algorithms. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1969. </year> <note> Revised edition. </note>
Reference-contexts: This technique was subsequently used elsewhere to design efficient authentication protocols for computer networks (e.g., [3]). In this paper, we propose new authentication protocols that do not use a conventional cryptosystem such as DES [24]. Instead, the protocols are based on polynomial interpolation <ref> [16, pp.484-486] </ref>, similar to Shamir's use in secret-sharing [23]. <p> clients, S first selects a session key k, and then solves the following equations for a 1 and a 2 : k + a 1 fi 2 + a 2 fi (2) 2 = k 2 All computations are performed mod (q) where q is a suitably large prime number <ref> [16] </ref>. Let f (x) = k + a 1 fi x + a 2 fi (x) 2 . <p> Later we discuss how to avoid such situations. A knows k 1 , and thus can use interpolation to solve the following equations to obtain k <ref> [16] </ref>: ( k + a 1 fi 3 + a 2 fi (3) 2 = f (3) (2) Similarly, B knows k 2 , and thus can obtain k by solving the following equations: ( k + a 1 fi 3 + a 2 fi (3) 2 = f (3) (3) <p> To distribute a session key to n clients, the server and the clients each computes n + c hash functions (where c is a small constant), and solves n equations with n unknowns, where the computational complexity of polynomial interpolation is O (n (log n) 2 ) <ref> [16] </ref>. In conventional protocols, the server does n encryptions and each client does at least one decryption.
Reference: [17] <author> C.S. Laih, J.Y. Lee, and L. Harn. </author> <title> A New Threshold Scheme and its Application in Designing the Conference Key Distribution Cryptosystem. </title> <journal> Information Processing Letters, </journal> <volume> 32 </volume> <pages> 95-99, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: in terms of efficiency in avoiding conventional encryption may be outweight by the increased total network traffic and load. 4.3 Related Work in Secure Broadcast There are a number of existing protocols for secure broadcast, and some protocols for conference key distribution can also be extended for this purpose (e.g., <ref> [9, 17, 1] </ref>). The three protocols cited here are typical in that the main concern is to defeat those attacks directly on message secrecy, but not other attacks such as by insiders or on message freshness. <p> Included in SRI CSL-94-03, March 1994. Many colleagues read the two reports (and some earlier drafts) and provided valuable feedback. The anonymous reviewers of this conference brought to my attention several references <ref> [1, 5, 7, 17] </ref>, thus giving me the opportunity to make the presentation in this paper more complete.
Reference: [18] <author> T. Matsumoto and H. Imai. </author> <title> On the Key Predistribution System: A Practical Solution to the Key Distribution Problem. </title> <booktitle> In Advances in Cryptology: Proceedings of Crypto '87, volume 293 of Lecture Notes in Computer Scien, </booktitle> <pages> pages 185-193. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <month> Oc-tober </month> <year> 1987. </year>
Reference-contexts: One is by Blom [6] and others (e.g., <ref> [18, 13, 7] </ref>) in which the server distributes a large amount of keys to clients who later compute session or conference keys using the distributed keys together with the identities of those clients in the session.
Reference: [19] <author> R.M. Needham and M.D. Schroeder. </author> <title> Using Encryption for Authentication in Large Networks of Computers. </title> <journal> Communications of the ACM, </journal> <volume> 21(12) </volume> <pages> 993-999, </pages> <month> Decem-ber </month> <year> 1978. </year>
Reference-contexts: 1 Authentication Authentication, the process of identifying entities such as users and machines, is a crucial element in secure distributed systems and networks. Authentication is closely related to key distribution, and the two issues are often treated jointly <ref> [8, 19] </ref>. Research in third-party-based authentication protocols has been significantly influenced by the work of Needham and Schroeder [19], and we confine this paper to the discussion of Needham-Schroeder type authentication protocols. <p> Authentication is closely related to key distribution, and the two issues are often treated jointly [8, 19]. Research in third-party-based authentication protocols has been significantly influenced by the work of Needham and Schroeder <ref> [19] </ref>, and we confine this paper to the discussion of Needham-Schroeder type authentication protocols. Typically, for two clients to authenticate each other, an authentication server distributes a session key to both clients so that they will have a secure communication channel. <p> Typically, for two clients to authenticate each other, an authentication server distributes a session key to both clients so that they will have a secure communication channel. The protocols can be based on symmetric-key cryp-tosystems or asymmetric-key (e.g., public-key) cryptosys-tems <ref> [10, 19] </ref>. Prior to authentication and session key distribution, a client either shares a secret key or (securely) registers a public key with the server [19]. <p> The protocols can be based on symmetric-key cryp-tosystems or asymmetric-key (e.g., public-key) cryptosys-tems [10, 19]. Prior to authentication and session key distribution, a client either shares a secret key or (securely) registers a public key with the server <ref> [19] </ref>. In the rest of our discussion, we examine only the case in which server and clients share symmetric keys, and we use the term authentication to mean third-party-based authentication and key distribution. <p> The other type is the Needham-Schroeder style third-party-based authentication <ref> [19] </ref> where each client shares a small amount of (long term) secret with the server, who distributes a session key using the shared secrets to the clients upon request. The earliest work we are aware of on this type of protocols that do not use conventional cryptosystems is [11].
Reference: [20] <author> B.C. Neuman and T. Ts'o. </author> <title> Kerberos: An Authentication Service for Computer Networks. </title> <journal> IEEE Communications, </journal> <volume> 32(9), </volume> <month> September </month> <year> 1994. </year>
Reference-contexts: Other secret-sharing schemes where a similar "reverse calculation" can be done are also potentially applicable here. Compared with currently available third-party-based authentication protocols using conventional encryption, such as Kerberos <ref> [20] </ref>, the NED-A protocols' main advantage is efficiency, though issues such as licensing and export control may also be relevant.
Reference: [21] <author> B. Preneel. </author> <title> Cryptographic Hash Functions. </title> <journal> European Transactions on Telecommunications, </journal> <month> August </month> <year> 1994. </year> <note> To appear. </note>
Reference-contexts: here, though we have the additional (and significant) constraint that the shadows the keys clients and the server share are usually long term keys that do not or cannot get changed after each session of authentication. 3 Paul Van Oorschot of Bell-Northern Research recently pointed out to me two papers <ref> [15, 21] </ref> where a definition of manipulation detection code is given. <p> This usage may implicitly require additional properties about the statistical distribution of the output from the one-way hash function. These properties probably hold for well-designed hash functions, but they are not required in the theoretical definition of a one-way hash function <ref> [2, 21] </ref>, and may also be hard to analyze. For example, given that h () is a secure keyed one-way hash function, we define g (x) = h (x) j 1 1, i.e., the output of h () concatenated with a string of 1's. <p> In conventional protocols, the server does n encryptions and each client does at least one decryption. Since it is widely accepted that a one-way hash function is much (e.g., at least one to two orders of magnitudes <ref> [21] </ref>) cheaper to compute than a traditional encryption algorithm such as DES [24], the NED-A (n) protocols are more efficient when n is a small number such as 2. Note that the size of q (in mod (q)) needs to increase only logarithmically when n increases.
Reference: [22] <author> R.L. Rivest. </author> <title> The MD5 Message-Digest Algorithm. Request for Comments 1321, </title> <institution> Internet Activities Board, </institution> <month> April </month> <year> 1992. </year>
Reference-contexts: We note that, for a fixed key k, the secure keyed one-way hash function h () behaves as a one-way hash function. However, it is unclear whether a one-way hash function such as MD-5 <ref> [22] </ref> can be securely used in a keyed fashion.
Reference: [23] <author> A. Shamir. </author> <title> How to Share a Secret. </title> <journal> Communications of the ACM, </journal> <volume> 22(11) </volume> <pages> 612-613, </pages> <month> November </month> <year> 1979. </year>
Reference-contexts: In this paper, we propose new authentication protocols that do not use a conventional cryptosystem such as DES [24]. Instead, the protocols are based on polynomial interpolation [16, pp.484-486], similar to Shamir's use in secret-sharing <ref> [23] </ref>. The same techniques can also be used for secure broadcast and secure communication, and we discuss these topics in Sections 4 and 5. 2 Basic Techniques In this section, we start by describing the basic technique for ensuring the secrecy of the distributed session key. <p> Server S now calculates f (3) and f (4), and sends them to both A and B. 1 The above procedure is like the "reverse calculation" of secret sharing in that, instead of calculating some arbitrary "shadows" of a given secret <ref> [23] </ref>, server S is given some pieces of "shadows" that have been predetermined (e.g., k 1 and k 2 ), and is then required to calculate what the rest of the "shadows" should be. 1 If k 1 = k 2 , then a 1 = a 2 = 0 and <p> This argument is identical to that used in Shamir's secret-sharing scheme <ref> [23] </ref>, and the guarantee of k's secrecy is information theoretic. By the same argument, the attacker cannot compute k 1 or k 2 . <p> The NED-A protocols in this paper do not require such statistical properties. Polynomial interpolation has been used in secret-sharing schemes <ref> [23] </ref>, which deal mainly with the secrecy requirement. For authentication and secure broadcast protocols, we must handle additional issues such as insider attacks, freshness, integrity, multiple sessions, and authenticity.
Reference: [24] <institution> Data Encryption Standard. (U.S.) National Bureau of Standards, </institution> <month> January </month> <year> 1977. </year> <type> (U.S.) </type> <note> Federal Information Processing Standards Publication, FIPS PUB 46. </note>
Reference-contexts: But S can send k to B using a simple exclusive-or operation to hide k. This technique was subsequently used elsewhere to design efficient authentication protocols for computer networks (e.g., [3]). In this paper, we propose new authentication protocols that do not use a conventional cryptosystem such as DES <ref> [24] </ref>. Instead, the protocols are based on polynomial interpolation [16, pp.484-486], similar to Shamir's use in secret-sharing [23]. <p> In conventional protocols, the server does n encryptions and each client does at least one decryption. Since it is widely accepted that a one-way hash function is much (e.g., at least one to two orders of magnitudes [21]) cheaper to compute than a traditional encryption algorithm such as DES <ref> [24] </ref>, the NED-A (n) protocols are more efficient when n is a small number such as 2. Note that the size of q (in mod (q)) needs to increase only logarithmically when n increases. Other improvements to the NED-A protocols are possible.
References-found: 24

