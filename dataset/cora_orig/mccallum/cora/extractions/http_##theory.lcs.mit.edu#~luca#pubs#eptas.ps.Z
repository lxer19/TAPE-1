URL: http://theory.lcs.mit.edu/~luca/pubs/eptas.ps.Z
Refering-URL: http://theory.lcs.mit.edu/~luca/papers.html
Root-URL: 
Title: On the Efficiency of Polynomial Time Approximation Schemes more interesting. In several cases, the development
Author: Marco Cesati Luca Trevisan 
Keyword: Computational Complexity, Approximation Algorithms, Parameterized Complexity.  
Note: While algorithms of the former kind tend to be impractical, the latter ones are  
Date: January 8, 1997  
Abstract: Under likely assumptions, we prove that for some problems (including natural ones) there cannot be approximation schemes running in time f(1=*)n O(1) , no matter how fast function f grows. Our result relies on a connection with Parameterized Complexity Theory. We show that this connection is necessary.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. A. Abrahamson, R. G. Downey, and M. R. Fellows. </author> <title> Fixed-parameter tractability and completeness IV: on completeness for W [P ] and P SP ACE analogues. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 73(3) </volume> <pages> 235-276, </pages> <month> June 15, </month> <year> 1995. </year>
Reference-contexts: Since a direct proof that some NP-complete problem is not fixed parameter tractable would imply that P 6= NP, Downey and Fellows have then introduced a "parameterized reduction" and a hierarchy of classes containing likely fixed parameter intractable problems (the so-called W hierarchy): FPT W <ref> [1] </ref> W [2] : : : W [P] SP. Moreover, many very natural parameterized problems have been shown to be complete for several levels of the W hierarchy, thus giving evidence that this framework is a useful tool for proving (likely) parameterized intractability. Our main results are: 1. <p> We prove the former result with the usual argument of prefix languages. The weak reverse connection makes use of a mildly involved scaling argument. 2. A natural problem mentioned in [17] is not in EPTAS unless FPT = W <ref> [1] </ref>. This result requires a proof of W [1]-completeness of the induced language. The main new ingredient of this proof is a cross-over gadget for multivalued satisfiability problems. 2 Definitions Definition 1 (Parameterized problem) A parameterized problem is a set L fl fi fl , where is a fixed alphabet. <p> L is in FPT if there is a constant c, a function f and an algorithm T such that T determines if hx; ki 2 L in time bounded by f (k) jxj c . There exists an hierarchy W <ref> [1] </ref> W [2] : : : W [t] : : : of classes that are intermediate between FPT and SP. On top of it, lies the class W [P], still contained in SP (see [10] for definitions). There is some evidence that these classes do not collapse to FPT. <p> On top of it, lies the class W [P], still contained in SP (see [10] for definitions). There is some evidence that these classes do not collapse to FPT. In particular, if FPT = W <ref> [1] </ref> then 3SAT can be solved in 2 o (n) time [1] (where n is the number of variables). Natural complete problems are known for most of these classes under FPT-preserving reductions. <p> On top of it, lies the class W [P], still contained in SP (see [10] for definitions). There is some evidence that these classes do not collapse to FPT. In particular, if FPT = W <ref> [1] </ref> then 3SAT can be solved in 2 o (n) time [1] (where n is the number of variables). Natural complete problems are known for most of these classes under FPT-preserving reductions. <p> It is clear that is satisfiable iff G has a k-clique. 2 4 The next lemma shows that the previous hardness result cannot be pushed higher in the W hierarchy, because even a much more general problem is in W <ref> [1] </ref>. Lemma 8 Multivalued GSAT belongs to W [1]. Proof: We will show a parameterized reduction from Multivalued GSAT (with parameters the number of variables k 1 and the number of constraints k 2 ) to the Short Nondeterministic Tur-ing Machine Computation problem. <p> It is clear that is satisfiable iff G has a k-clique. 2 4 The next lemma shows that the previous hardness result cannot be pushed higher in the W hierarchy, because even a much more general problem is in W <ref> [1] </ref>. Lemma 8 Multivalued GSAT belongs to W [1]. Proof: We will show a parameterized reduction from Multivalued GSAT (with parameters the number of variables k 1 and the number of constraints k 2 ) to the Short Nondeterministic Tur-ing Machine Computation problem. <p> After replacing each crossing with a gadget, we have that the new (planar) instance is satisfiable if and only if the former instance was satisfiable. 2 From Lemmas 6 and 9 the main result of this section follows. Theorem 10 Multivalued Planar Max 3CSP 62 EPTAS unless W <ref> [1] </ref> = FPT. 5 An Artificial Hard Problem In this section we will give a weak converse of Theorem 5, namely, we will prove the following theorem. Theorem 11 If W [P] 6= FPT then EPTAS 6= PTAS. <p> Parameter: an integer k n. Question: can we delete k inequalities and get a system that is consistent over the rationals? Linear Inequalities is complete in W [P] and thus cannot belong to FPT unless FPT = W [P] <ref> [1] </ref>. Let us define an optimization version Max Subsystem such that the measure in defined in a very tricky way. Instance: A set of linear inequalities S. Solution: A subset S 0 S such that S S 0 is consistent. <p> When restricted to boolean domains, the planar Max GSATB problem admits an EPTAS for any fixed B [8], while we have shown that multivalued planar Max GSAT3 is not in EPTAS unless FPT = W <ref> [1] </ref>. It appears that the size of the domain changes quite dramatically the approximability properties of constraint satisfaction problems. This point seems to be worth further investigation. Acknowledgements We are grateful to Sanjeev Khanna for his contribution to this research.
Reference: [2] <author> S. Arora. </author> <title> Polynomial time approximation schemes for Euclidean TSP and other geometric problems. </title> <booktitle> In Proceedings of the 37th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1996. </year>
Reference-contexts: For some of those problems, Crescenzi and Trevisan [8] improve the running time to 2 poly (1=*) n. Perhaps the most interesting problem for which a PTAS exists is the Euclidean TSP. Arora's PTAS <ref> [2] </ref> runs in time roughly n 30=* . Arora formulates an algorithmic problem that, if solved, would imply an EPTAS for Euclidean TSP. We address the issue of whether all PTAS problems admit an efficient PTAS. We show that this problem is connected to parameterized complexity. <p> Since a direct proof that some NP-complete problem is not fixed parameter tractable would imply that P 6= NP, Downey and Fellows have then introduced a "parameterized reduction" and a hierarchy of classes containing likely fixed parameter intractable problems (the so-called W hierarchy): FPT W [1] W <ref> [2] </ref> : : : W [P] SP. Moreover, many very natural parameterized problems have been shown to be complete for several levels of the W hierarchy, thus giving evidence that this framework is a useful tool for proving (likely) parameterized intractability. Our main results are: 1. <p> L is in FPT if there is a constant c, a function f and an algorithm T such that T determines if hx; ki 2 L in time bounded by f (k) jxj c . There exists an hierarchy W [1] W <ref> [2] </ref> : : : W [t] : : : of classes that are intermediate between FPT and SP. On top of it, lies the class W [P], still contained in SP (see [10] for definitions). There is some evidence that these classes do not collapse to FPT.
Reference: [3] <author> S. Arora, D. Karger, and M. Karpinski. </author> <title> Polynomial time approximation schemes for dense instances of NP-hard problems. </title> <booktitle> In Proceedings of the 27th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 284-293, </pages> <year> 1995. </year>
Reference-contexts: A PTAS running in time n O (1=*) for the problem of scheduling processes on identical machines was given by Hochbaum and Shmoys in [15]. Very recently, the same authors gave a O (f (*) + n) algorithm [16], where f is doubly exponential. Arora, Karger, and Karpinski <ref> [3] </ref> present PTAS's for dense constraint satisfaction problems (including dense Max CUT and dense Max 3SAT) running in time n O (1=*) . For dense Max CUT, a randomized algorithm by de la Vega [9] runs in time O (2 poly (1=*) n c ).
Reference: [4] <author> D.P. Bovet and P. Crescenzi. </author> <title> Introduction to the Theory of Complexity. </title> <publisher> Prentice Hall, </publisher> <year> 1993. </year>
Reference-contexts: The goal of an optimization problem is, given an instance x, to find an optimum solution y, that is, a solution whose measure is maximum or minimum depending on whether the problem is a maximization or a minimization one. For a formal definition of NP optimization (NPO) problems see <ref> [4] </ref>. In the following opt will denote the function that maps an instance x into the measure of an optimum solution. Let A be an NPO problem.
Reference: [5] <author> L. Cai and J. Chen. </author> <title> On fixed-parameter tractability and approximability of N P -hard optimization problems. </title> <booktitle> In Proc. of 2nd Israel Symposium on Theory of Computing and Systems, </booktitle> <pages> pages 118-126, </pages> <year> 1993. </year> <note> To appear also in the Journal of Computer and System Science. </note>
Reference-contexts: 1=2 = 1 + 2 (k 2 + 2k) 1 where fourth inequality is due to the fact that k n, and so k=2 (n + 1) 2 1=2 (k + 1). 2 6 Conclusions The relations between fixed parameter complexity and approximability was already considered by Cai and Chen <ref> [5] </ref>. Their study was directed towards the approximation properties of optimization problems with a hard induced language. Our approach, instead, focuses on the relation between the approximation factor in a PTAS and the parameter in a parameterized problem.
Reference: [6] <author> L. Cai, J. Chen, R. G. Downey, and M. R. Fellows. </author> <title> On the parameterized complexity of short computation and factorization. </title> <note> To appear in the Archive for Mathematical Logic, 1995. 8 </note>
Reference: [7] <author> M. Cesati and M. Di Ianni. </author> <title> Computation models for parameterized complexity. </title> <journal> Mathematical Logic Quarterly, </journal> <volume> 43 </volume> <pages> 179-202, </pages> <year> 1997. </year>
Reference: [8] <author> P. Crescenzi and L. Trevisan. </author> <title> MAXNP-completeness made easy. </title> <type> Manuscript, </type> <year> 1996. </year>
Reference-contexts: It is still open whether there exists an EPTAS for dense Max 3SAT. Khanna and Motwani [17] develop PTAS's for a large variety of planar constraint satisfcation problems; the running time is n O (1=*) . For some of those problems, Crescenzi and Trevisan <ref> [8] </ref> improve the running time to 2 poly (1=*) n. Perhaps the most interesting problem for which a PTAS exists is the Euclidean TSP. Arora's PTAS [2] runs in time roughly n 30=* . Arora formulates an algorithmic problem that, if solved, would imply an EPTAS for Euclidean TSP. <p> The difference between the two approaches is best noted by considering that the induced language of the problem Max Subsystem, defined in Section 5, is in FPT. When restricted to boolean domains, the planar Max GSATB problem admits an EPTAS for any fixed B <ref> [8] </ref>, while we have shown that multivalued planar Max GSAT3 is not in EPTAS unless FPT = W [1]. It appears that the size of the domain changes quite dramatically the approximability properties of constraint satisfaction problems. This point seems to be worth further investigation.
Reference: [9] <author> W.F. de la Vega. </author> <title> MAXCUT has a randomized approximation scheme in dense graphs. </title> <type> Manuscript, </type> <year> 1994. </year>
Reference-contexts: Arora, Karger, and Karpinski [3] present PTAS's for dense constraint satisfaction problems (including dense Max CUT and dense Max 3SAT) running in time n O (1=*) . For dense Max CUT, a randomized algorithm by de la Vega <ref> [9] </ref> runs in time O (2 poly (1=*) n c ). Similar performances are obtained by Frieze and Kannan [13] using an algorithmic version of Szemeredy's regularity lemma. A more efficient algorithm is given by Goldreich et al. [14].
Reference: [10] <author> R. G. Downey and M. R. Fellows. </author> <title> Fixed-parameter intractability (extended abstract). </title> <booktitle> In Proceedings of the 7th IEEE Conference on Structure in Complexity Theory, </booktitle> <pages> pages 36-49, </pages> <address> Boston, </address> <month> June </month> <year> 1992. </year> <note> IEEE. </note>
Reference-contexts: Almost all natural problems have instances consisting of at least two logical items; many NP-complete problems admit "efficient" algorithms for small values of one item (the parameter). Downey and Fellows have introduced <ref> [10, 11, 12] </ref> the notion of "fixed parameter tractable problem": a parameterized problem admitting a solving algorithm whose running time, for any fixed value of the parameter, is bounded by a polynomial of constant degree. The class of all fixed parameter tractable problems is called FPT. <p> There exists an hierarchy W [1] W [2] : : : W [t] : : : of classes that are intermediate between FPT and SP. On top of it, lies the class W [P], still contained in SP (see <ref> [10] </ref> for definitions). There is some evidence that these classes do not collapse to FPT. In particular, if FPT = W [1] then 3SAT can be solved in 2 o (n) time [1] (where n is the number of variables).
Reference: [11] <author> R. G. Downey and M. R. Fellows. </author> <title> Fixed-parameter tractability and completeness I: Basic theory. </title> <journal> SIAM J. Comput., </journal> <volume> 24 </volume> <pages> 873-921, </pages> <year> 1995. </year>
Reference-contexts: Almost all natural problems have instances consisting of at least two logical items; many NP-complete problems admit "efficient" algorithms for small values of one item (the parameter). Downey and Fellows have introduced <ref> [10, 11, 12] </ref> the notion of "fixed parameter tractable problem": a parameterized problem admitting a solving algorithm whose running time, for any fixed value of the parameter, is bounded by a polynomial of constant degree. The class of all fixed parameter tractable problems is called FPT.
Reference: [12] <author> R. G. Downey and M. R. Fellows. </author> <title> Fixed-parameter tractability and completeness II: On completeness for W [1]. </title> <journal> Theoretical Computer Science, </journal> <volume> 141 </volume> <pages> 109-131, </pages> <year> 1995. </year>
Reference-contexts: Almost all natural problems have instances consisting of at least two logical items; many NP-complete problems admit "efficient" algorithms for small values of one item (the parameter). Downey and Fellows have introduced <ref> [10, 11, 12] </ref> the notion of "fixed parameter tractable problem": a parameterized problem admitting a solving algorithm whose running time, for any fixed value of the parameter, is bounded by a polynomial of constant degree. The class of all fixed parameter tractable problems is called FPT. <p> Max GSATB, Max GSAT) instance, the parameters are the number of variables and the number of constraints, and the question is whether the instance is satisfiable. Lemma 7 Multivalued 2CSP is W [1]-hard. Proof: We give parameterized reduction from the CLIQUE problem, that is W [1]-complete <ref> [12] </ref>.
Reference: [13] <author> A. Frieze and R. Kannan. </author> <title> The regularity lemma and approximation schemes for dense problems. </title> <booktitle> In Proceedings of the 37th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1996. </year>
Reference-contexts: For dense Max CUT, a randomized algorithm by de la Vega [9] runs in time O (2 poly (1=*) n c ). Similar performances are obtained by Frieze and Kannan <ref> [13] </ref> using an algorithmic version of Szemeredy's regularity lemma. A more efficient algorithm is given by Goldreich et al. [14]. It is still open whether there exists an EPTAS for dense Max 3SAT.
Reference: [14] <author> O. Goldreich, S. Goldwasser, and D. Ron. </author> <title> Property testing and its connection with learning and approximation. </title> <booktitle> In Proceedings of the 37th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1996. </year>
Reference-contexts: For dense Max CUT, a randomized algorithm by de la Vega [9] runs in time O (2 poly (1=*) n c ). Similar performances are obtained by Frieze and Kannan [13] using an algorithmic version of Szemeredy's regularity lemma. A more efficient algorithm is given by Goldreich et al. <ref> [14] </ref>. It is still open whether there exists an EPTAS for dense Max 3SAT. Khanna and Motwani [17] develop PTAS's for a large variety of planar constraint satisfcation problems; the running time is n O (1=*) .
Reference: [15] <author> D.S. Hochbaum and D.B. Shmoys. </author> <title> Using dual approximation algorithms for scheduling problems: practical and theoretical results. </title> <journal> Journal of the ACM, </journal> <volume> 34(1) </volume> <pages> 144-162, </pages> <year> 1987. </year>
Reference-contexts: A PTAS running in time n O (1=*) for the problem of scheduling processes on identical machines was given by Hochbaum and Shmoys in <ref> [15] </ref>. Very recently, the same authors gave a O (f (*) + n) algorithm [16], where f is doubly exponential. Arora, Karger, and Karpinski [3] present PTAS's for dense constraint satisfaction problems (including dense Max CUT and dense Max 3SAT) running in time n O (1=*) .
Reference: [16] <author> D.S. Hochbaum and D.B. Shmoys. </author> <title> A linear time approximation scheme for the makespan problem. </title> <type> Manuscript, </type> <year> 1996. </year>
Reference-contexts: A PTAS running in time n O (1=*) for the problem of scheduling processes on identical machines was given by Hochbaum and Shmoys in [15]. Very recently, the same authors gave a O (f (*) + n) algorithm <ref> [16] </ref>, where f is doubly exponential. Arora, Karger, and Karpinski [3] present PTAS's for dense constraint satisfaction problems (including dense Max CUT and dense Max 3SAT) running in time n O (1=*) .
Reference: [17] <author> S. Khanna and R. Motwani. </author> <title> Towards a syntactic characterization of PTAS. </title> <booktitle> In Proceedings of the 28th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 329-337, </pages> <year> 1996. </year> <month> 9 </month>
Reference-contexts: Similar performances are obtained by Frieze and Kannan [13] using an algorithmic version of Szemeredy's regularity lemma. A more efficient algorithm is given by Goldreich et al. [14]. It is still open whether there exists an EPTAS for dense Max 3SAT. Khanna and Motwani <ref> [17] </ref> develop PTAS's for a large variety of planar constraint satisfcation problems; the running time is n O (1=*) . For some of those problems, Crescenzi and Trevisan [8] improve the running time to 2 poly (1=*) n. <p> Namely, if FPT = SP, then EPTAS = PTAS, and if FPT 6= W [P] then EPTAS 6= PTAS. We prove the former result with the usual argument of prefix languages. The weak reverse connection makes use of a mildly involved scaling argument. 2. A natural problem mentioned in <ref> [17] </ref> is not in EPTAS unless FPT = W [1]. This result requires a proof of W [1]-completeness of the induced language. <p> An instance is said to be planar if its incidence graph is planar. Khanna and Motwani <ref> [17] </ref> prove that planar multivalued Max GSAT admits a PTAS. Multivalued KCSP (resp. GSATB, GSAT) is the parameterized problem where the instance is a multivalued Max KCSP (resp.
References-found: 17

