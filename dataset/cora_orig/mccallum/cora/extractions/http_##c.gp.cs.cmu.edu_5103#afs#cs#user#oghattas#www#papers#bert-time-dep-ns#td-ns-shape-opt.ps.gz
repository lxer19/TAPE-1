URL: http://c.gp.cs.cmu.edu:5103/afs/cs/user/oghattas/www/papers/bert-time-dep-ns/td-ns-shape-opt.ps.gz
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs/user/oghattas/www/home.html
Root-URL: http://www.cs.cmu.edu
Title: COMPUTATIONAL STRATEGIES FOR SHAPE OPTIMIZATION OF TIME-DEPENDENT NAVIER-STOKES FLOWS  
Author: BEICHANG HE OMAR GHATTAS AND JAMES F. ANTAKI 
Abstract: We consider the problem of shape optimization of two-dimensional flows governed by the time-dependent Navier-Stokes equations. For this problem we propose computational strategies with respect to optimization method, sensitivity method, and unstructured meshing scheme. We argue that, despite their superiority for steady Navier-Stokes flow optimization, reduced sequential quadratic programming (RSQP) methods are too memory-intensive for the time-dependent problem. Instead, we advocate a combination of generalized reduced gradients (for the flow equation constraints) and SQP (for the remaining inequality constraints). With respect to sensitivity method, we favor discrete sensitivities, which can be implemented with little additional storage or work beyond that required for solution of the flow equations, and thus possess a distinct advantage over discretized continuous sensitivities, which require knowledge of the entire time history of the flow variables. Finally, we take a two-phase approach to unstructured meshing and grid sensitivities. Far from the optimum, we remesh each new shape completely using an unstructured mesh generator to accommodate the large shape changes that are anticipated in this phase, while an inconsistent but easily computed form of grid sensitivities is employed. Close to the optimum, where differentiability of the mesh movement scheme and consistency of grid sensitivities are desirable, we use elastic mesh movement to generate meshes corresponding to new shapes. Elastic mesh movement is valid only for small shape changes but is differentiable and permits computation of exact grid sensitivities in a straightforward manner. Two examples characterized by a viscous dissipation objective function illustrate the approach. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W. K. Anderson and V. Venkatakrishnan, </author> <title> Aerodynamic design optimization on unstructured grids with a continuous adjoint formulation, </title> <type> Tech. Rep. 97-9, </type> <institution> Institute for Computer Applications in Science and Engineering, NASA Langley Research Center, Hampton, VA, </institution> <month> Jan. </month> <year> 1997. </year>
Reference-contexts: Generally, the two operations need not commute, and the two are equivalent only in the limit of infinitesimal mesh size (in certain special cases, equivalence is obtained independent of mesh size). See the discussion in <ref> [1] </ref> for inviscid and viscous flows, and SHAPE OPTIMIZATION OF TIME-DEPENDENT NAVIER-STOKES FLOWS 11 [27] for a more general setting. For time-dependent Navier-Stokes equations, finding continuous sensitivities requires solving a final-boundary value problem in the adjoint variables [23]. <p> Similar physically-based mesh moving schemes are popular for moving boundary problems, and have been in use as early as in [3]. Related mesh moving schemes using networks of springs have been used in various flow optimization settings in <ref> [1] </ref> [12] [30] [31]. So in summary, mesh movement is by unstructured mesh generation in Stage I and elastic mesh movement in Stage II; internal mesh sensitivities are simply taken as zero in Stage I and computed by taking the derivative of the elastic mesh movement algorithm in Stage II. <p> Here, (p t j ; q t j ; q b j ) are coordinates of Bezier control points, B K;j (s) = j! (K j)! is a Bernstein polynomial, K is the order of the Bernstein polynomial, and s 2 <ref> [0; 1] </ref> is a parameter. As s sweeps over [0; 1], (x t (s); y t (s)) and (x b (s); y b (s)) depict the upper and lower surfaces of the obstacle, respectively. <p> Here, (p t j ; q t j ; q b j ) are coordinates of Bezier control points, B K;j (s) = j! (K j)! is a Bernstein polynomial, K is the order of the Bernstein polynomial, and s 2 <ref> [0; 1] </ref> is a parameter. As s sweeps over [0; 1], (x t (s); y t (s)) and (x b (s); y b (s)) depict the upper and lower surfaces of the obstacle, respectively.
Reference: [2] <author> J. Antaki, O. Ghattas, G. Burgreen, and B. </author> <title> He, Computational flow optimization of rotory blood pump components, </title> <booktitle> Artifical Organs, 19 (1995), </booktitle> <pages> pp. 608-615. </pages>
Reference-contexts: Our concern in this article is on shape optimization of time-dependent Navier-Stokes flows, and in particular on devising efficient numerical strategies for solution of two-dimensional (2D) realizations of such problems. Our ultimate goal is to solve three-dimensional (3D) shape optimization problems arising in the design of artificial heart devices <ref> [2] </ref> [8]. fl Technical Report CMU-CML-97-102, June, 1997. This work was supported in part by the Engineering Design Research Center, an Engineering Research Center of the National Science Foundation, under Grant No. EEC-8943164, and by Algor, Inc. <p> These functions are inspired directly or indirectly by the desire to avoid blood damage by thrombosis and hemolysis in artificial heart devices <ref> [2] </ref>. Later in this article we describe a code we have developed that implements any convex combination of the six global functions in Equations (2.11)-(2.13) as the objective function. In addition, limits on allowable values of the local functions (2.8)-(2.10) may be introduced as inequality constraints.
Reference: [3] <author> J. Argyris, J. Doltsinis, H. Fischer, and H. W ustenberg, </author> <booktitle> Tff ff-tff ", Computer Methods in Applied Mechanics and Engineering, 51 (1985), </booktitle> <pages> pp. 289-362. </pages>
Reference-contexts: Thus, it is best left for small shape changes contemplated in Stage II. Similar physically-based mesh moving schemes are popular for moving boundary problems, and have been in use as early as in <ref> [3] </ref>. Related mesh moving schemes using networks of springs have been used in various flow optimization settings in [1] [12] [30] [31].
Reference: [4] <author> I. Babu ska and A. Aziz, </author> <title> On the angle condition in the finite element method, </title> <journal> SIAM Journal on Numerical Analysis, </journal> <volume> 13 (1976), </volume> <pages> pp. 214-227. </pages>
Reference-contexts: In the finite element method, it is well known that poor element quality can have a deleterious effect on the solution. Angles near 0 can lead to ill-conditioning of the discrete operator [13], while angles near can lead to large approximation errors in the H 1 norm <ref> [4] </ref>. When the geometry undergoes large changes during optimization, it becomes very difficult, if not impossible, to construct a structured mesh scheme that maintains element quality for a wide range of shapes.
Reference: [5] <author> L. T. Biegler, J. Nocedal, and C. Schmid, </author> <title> A reduced Hessian method for large-scale constrained optimization, </title> <journal> SIAM Journal on Optimization, </journal> <volume> 5 (1995), </volume> <pages> pp. 314-347. </pages>
Reference-contexts: Reduced SQP methods have been analyzed for the finite dimensional case in <ref> [5] </ref> [9] [32], and for infinite dimensions in [22] [25]. In light of its vastly superior performance over GRG (for steady optimal boundary velocity control [14]), our initial idea was to use RSQP for solution of the time-dependent Navier-Stokes shape optimization problem.
Reference: [6] <author> R. D. Blevins, </author> <title> Flow-Induced Vibration, </title> <publisher> Van Nostrand Reinhold, </publisher> <year> 1990. </year>
Reference-contexts: The dependence of S on Reynolds number Re has been established experimentally for Re = 40 to 10 7 <ref> [6] </ref>. In the finite element method, it is well known that poor element quality can have a deleterious effect on the solution. Angles near 0 can lead to ill-conditioning of the discrete operator [13], while angles near can lead to large approximation errors in the H 1 norm [4]. <p> The oscillation frequencies are equal to those of vortex shedding. Table 6.3 compares frequencies obtained numerically and experimentally, and we see very good agreement between the two. Strouhal numbers in Table 6.3 are from <ref> [6] </ref>. In all calculations, we have used the upper bounds of the Strouhal number, which correspond to a cylinder with a smooth surface. At Reynolds number 500, R R d oscillates with a period of about 9.
Reference: [7] <author> R. A. Brockman, </author> <title> Geometric sensitivity analysis with isoparametric finite element, Communications in Applied Numerical Methods, </title> <booktitle> 3 (1987), </booktitle> <pages> pp. 495-499. </pages>
Reference-contexts: Hence, we may treat them as constants in the above differentiation operations. This is one of the advantages of working with isoparametric finite elements: the sensitivity of the shape change can be limited to terms involving the Jacobian of the mapping, J (e.g. <ref> [7] </ref>).
Reference: [8] <author> G. W. Burgreen and J. F. Antaki, </author> <title> CFD-based design optimization of a three-dimensional rotary blood pump, </title> <booktitle> in Proceedings of the Sixth AIAA/NASA/ISSMO Symposium on Multidisciplinary Analysis and Optimization, AIAA, </booktitle> <month> September </month> <year> 1996. </year>
Reference-contexts: Our ultimate goal is to solve three-dimensional (3D) shape optimization problems arising in the design of artificial heart devices [2] <ref> [8] </ref>. fl Technical Report CMU-CML-97-102, June, 1997. This work was supported in part by the Engineering Design Research Center, an Engineering Research Center of the National Science Foundation, under Grant No. EEC-8943164, and by Algor, Inc.
Reference: [9] <author> R. H. Byrd and J. Nocedal, </author> <title> An analysis of reduced Hessian methods for constrained optimization, </title> <journal> Mathematical Programming, </journal> <volume> 49 (1991), </volume> <pages> pp. 285-323. </pages>
Reference-contexts: Reduced SQP methods have been analyzed for the finite dimensional case in [5] <ref> [9] </ref> [32], and for infinite dimensions in [22] [25]. In light of its vastly superior performance over GRG (for steady optimal boundary velocity control [14]), our initial idea was to use RSQP for solution of the time-dependent Navier-Stokes shape optimization problem.
Reference: [10] <author> T. Davis, </author> <title> Users' guide for the unsymmetric pattern multifrontal package (UMFPACK), </title> <type> Tech. Rep. </type> <institution> TR-93-020, University of Florida, </institution> <address> Gainesville, FL, </address> <year> 1993. </year>
Reference-contexts: The Taylor-Hood element is known to be stable in the sense of Ladyzhenskaya-Babuska-Brezzi, and produces errors of order h 3 for velocity and h 2 for pressure [16]. Time-integration is by the Crank-Nicolson method. The multifrontal sparse LU factorization code UMFPACK <ref> [10] </ref> is used to solve the linear systems that arise at each step of Newton's method. The optimizer used is IMSL's implementation of the dense BFGS-SQP code NLPQL [42]. Analytical gradients of the objective and inequality constraints are found as described in this section.
Reference: [11] <author> J. E. Dennis and R. M. Lewis, </author> <title> A comparison of nonlinear programming approaches to an elliptic inverse problem and a new domain decomposition approach, </title> <type> Tech. Rep. </type> <institution> TR94-33, Department of Computational and Applied Mathematics, Rice University, </institution> <year> 1994. </year>
Reference-contexts: The efficacy of RSQP for PDE-constrained optimization problems has been demonstrated in a number of applications including structural optimization [35] [39] [40], heat equation boundary control [26], compressible flow airfoil design [33] [34] [43], boundary control of viscous incompressible flows [14] [21], and inverse parameter estimation problems <ref> [11] </ref> [24]. Reduced SQP methods have been analyzed for the finite dimensional case in [5] [9] [32], and for infinite dimensions in [22] [25].
Reference: [12] <author> J. Elliott and J. Peraire, </author> <title> Practical 3D aerodynamic design and optimization using unstructured meshes, </title> <booktitle> in Proceedings of the Sixth AIAA/NASA/ISSMO Symposium on Multidisciplinary Analysis and Optimization, AIAA, </booktitle> <month> September </month> <year> 1996. </year>
Reference-contexts: Similar physically-based mesh moving schemes are popular for moving boundary problems, and have been in use as early as in [3]. Related mesh moving schemes using networks of springs have been used in various flow optimization settings in [1] <ref> [12] </ref> [30] [31]. So in summary, mesh movement is by unstructured mesh generation in Stage I and elastic mesh movement in Stage II; internal mesh sensitivities are simply taken as zero in Stage I and computed by taking the derivative of the elastic mesh movement algorithm in Stage II.
Reference: [13] <author> I. Fried, </author> <title> Condition of finite element matrices generated from nonuniform meshes, </title> <journal> AIAA Journal, </journal> <volume> 10 (1972), </volume> <pages> pp. 219-221. </pages>
Reference-contexts: In the finite element method, it is well known that poor element quality can have a deleterious effect on the solution. Angles near 0 can lead to ill-conditioning of the discrete operator <ref> [13] </ref>, while angles near can lead to large approximation errors in the H 1 norm [4]. When the geometry undergoes large changes during optimization, it becomes very difficult, if not impossible, to construct a structured mesh scheme that maintains element quality for a wide range of shapes.
Reference: [14] <author> O. Ghattas and J. Bark, </author> <title> Optimal control of two- and three-dimensional Navier-Stokes flows, </title> <journal> Journal of Computational Physics, </journal> <note> (1997). In press. Available from http://www.cs.cmu.edu/~oghattas. </note>
Reference-contexts: The efficacy of RSQP for PDE-constrained optimization problems has been demonstrated in a number of applications including structural optimization [35] [39] [40], heat equation boundary control [26], compressible flow airfoil design [33] [34] [43], boundary control of viscous incompressible flows <ref> [14] </ref> [21], and inverse parameter estimation problems [11] [24]. Reduced SQP methods have been analyzed for the finite dimensional case in [5] [9] [32], and for infinite dimensions in [22] [25]. In light of its vastly superior performance over GRG (for steady optimal boundary velocity control [14]), our initial idea was <p> of viscous incompressible flows <ref> [14] </ref> [21], and inverse parameter estimation problems [11] [24]. Reduced SQP methods have been analyzed for the finite dimensional case in [5] [9] [32], and for infinite dimensions in [22] [25]. In light of its vastly superior performance over GRG (for steady optimal boundary velocity control [14]), our initial idea was to use RSQP for solution of the time-dependent Navier-Stokes shape optimization problem. However, the large size of state constraints in the form of the spatio-temporally discretized Navier-Stokes equations SHAPE OPTIMIZATION OF TIME-DEPENDENT NAVIER-STOKES FLOWS 3 forced us to rethink that desire. <p> Thus, the benefit of RSQP relative to GRG for time-dependent flow optimization is not as great as the steady case, in which over an order of magnitude improvement has been observed <ref> [14] </ref>. Instead, we pursue here a combination of SQP and GRG. At each optimization iteration, we solve the equality state constraints (i.e. the spatio-temporally discretized Navier-Stokes equations) completely, by stepping sequentially through time, obtaining the flow variables at the next time step given those of the current. <p> Second, with the goal of reducing the number of optimization iterations, one might pursue incorporating second order derivatives for use in a Newton method. Our experience (for a problem in optimal boundary control of Navier-Stokes flows <ref> [14] </ref>) is that use of exact Hessians cuts the number of iterations significantly (in half or third); however, the reduction in CPU time is not as substantial, due to the additional work involved in computing second derivatives. Finally, CPU time can certainly be reduced through parallel computing.
Reference: [15] <author> O. Ghattas and C. E. Orozco, </author> <title> A parallel reduced Hessian SQP method for shape optimization, in Multidisciplinary Design Optimization: State-of-the-Art, </title> <editor> N. Alexandrov and M. Hussaini, eds., </editor> <publisher> SIAM, </publisher> <year> 1997, </year> <pages> pp. 133-152. </pages>
Reference-contexts: Finally, CPU time can certainly be reduced through parallel computing. In earlier work, we devised and implemented parallel RSQP algorithms for full potential flow optimal design problems [33], <ref> [15] </ref>; recently, parallel implementations of GRG-based optimal design methods for Euler flows have appeared [38]. We have recently implemented a parallel SQP method for general 3D unstructured mesh shape optimization problems on a Cray T3E [29], and are currently tailoring the code to incompressible Navier-Stokes flows.
Reference: [16] <author> M. Gunzburger, </author> <title> Finite Element Methods for Viscous Incompressible Flows, </title> <publisher> Academic Press, </publisher> <year> 1989. </year>
Reference-contexts: Spatial discretization is by triangular Taylor-Hood finite elements, which use piecewise quadratic velocity and piecewise linear pressure basis functions. The Taylor-Hood element is known to be stable in the sense of Ladyzhenskaya-Babuska-Brezzi, and produces errors of order h 3 for velocity and h 2 for pressure <ref> [16] </ref>. Time-integration is by the Crank-Nicolson method. The multifrontal sparse LU factorization code UMFPACK [10] is used to solve the linear systems that arise at each step of Newton's method. The optimizer used is IMSL's implementation of the dense BFGS-SQP code NLPQL [42].
Reference: [17] <author> M. D. Gunzburger, L. S. Hou, and T. P. Svobodny, </author> <title> Optimal control and optimization of viscous, incompressible flows, in Incompressible Computational Fluid Dynamics, </title> <editor> M. D. Gunzburger and R. A. Nicolaides, eds., </editor> <address> Cambridge, </address> <year> 1993, </year> <journal> ch. </journal> <volume> 5, </volume> <pages> pp. 109-150. </pages>
Reference-contexts: Most of the theoretical and numerical work on optimization of Navier-Stokes flows has been done in the context of both optimal control and steady flows (see <ref> [17] </ref> for an overview). A few studies have considered optimal control of time-dependent flows, where the control is in the form of boundary velocities [23] [41].
Reference: [18] <author> R. T. Haftka and Z. G urdal, </author> <title> Elements of Structural Optimization, </title> <publisher> Kluwer Academic, </publisher> <editor> third ed., </editor> <year> 1991. </year>
Reference-contexts: This is done by solving the state equations for the states variables given values of the design variables. The state variables are then used to evaluate the objective function and remaining constraints, and the implicit function theorem is invoked for derivative computations. See, for example, <ref> [18] </ref> [19]. This method therefore treats the equality constraints in a generalized reduced gradient (GRG) fashion, since it satisfies them exactly at each optimization iteration. The remaining constraints are then treated using one's favorite nonlinear optimizer.
Reference: [19] <author> E. Haug and J. Arora, </author> <title> Applied Optimal Design, </title> <publisher> Wiley Interscience, </publisher> <year> 1979. </year>
Reference-contexts: This is done by solving the state equations for the states variables given values of the design variables. The state variables are then used to evaluate the objective function and remaining constraints, and the implicit function theorem is invoked for derivative computations. See, for example, [18] <ref> [19] </ref>. This method therefore treats the equality constraints in a generalized reduced gradient (GRG) fashion, since it satisfies them exactly at each optimization iteration. The remaining constraints are then treated using one's favorite nonlinear optimizer.
Reference: [20] <author> B. </author> <title> He, Shape Optimization of Navier-Stokes Flows, with Application to Design of Artificial Heart Devices, </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, </institution> <year> 1996. </year>
Reference-contexts: In the remainder of this article, we will define the continuous optimization problem, discuss it spatial and temporal discretization, develop sensitivity expressions, consider grid sensitivities, and apply the method to two time-dependent Navier-Stokes shape optimization model problems. More extensive discussion can be found in <ref> [20] </ref>. 2. Mathematical model. In this section we state the continuous form of the mathematical model of the shape optimization problem addressed in this paper. Let denote an open, bounded, and possibly multiply connected domain in &lt; 2 or &lt; 3 . Let denote the boundary of .
Reference: [21] <author> M. Heinkenschloss, </author> <title> Numerical solution of optimal control problems governed by the Navier-Stokes equations using sequential quadratic programming. In preparation. [22] , Formulation and analysis of a sequential quadratic programming method for the optimal Dirichlet boundary control of Navier-Stokes flow, </title> <type> Tech. Rep. </type> <institution> TR97-14, Department of Computational and Applied Mathematics, Rice University, </institution> <month> May </month> <year> 1997. </year>
Reference-contexts: The efficacy of RSQP for PDE-constrained optimization problems has been demonstrated in a number of applications including structural optimization [35] [39] [40], heat equation boundary control [26], compressible flow airfoil design [33] [34] [43], boundary control of viscous incompressible flows [14] <ref> [21] </ref>, and inverse parameter estimation problems [11] [24]. Reduced SQP methods have been analyzed for the finite dimensional case in [5] [9] [32], and for infinite dimensions in [22] [25].
Reference: [23] <author> R. D. Joslin, M. D. Gunzburger, R. A. Nicolaides, G. Erlbacher, and M. Y. Hussaini, </author> <title> Self-contained automated methodology for optimal flow control, </title> <journal> AIAA Journal, </journal> <volume> 35 (1997), </volume> <pages> pp. 816-824. </pages>
Reference-contexts: A few studies have considered optimal control of time-dependent flows, where the control is in the form of boundary velocities <ref> [23] </ref> [41]. Our concern in this article is on shape optimization of time-dependent Navier-Stokes flows, and in particular on devising efficient numerical strategies for solution of two-dimensional (2D) realizations of such problems. <p> See the discussion in [1] for inviscid and viscous flows, and SHAPE OPTIMIZATION OF TIME-DEPENDENT NAVIER-STOKES FLOWS 11 [27] for a more general setting. For time-dependent Navier-Stokes equations, finding continuous sensitivities requires solving a final-boundary value problem in the adjoint variables <ref> [23] </ref>. This PDE has time-dependent coefficients that depend on the velocities, which are found by solving the forward problem. Thus storage of the state variable history for all time is required.
Reference: [24] <author> K. Kunisch and E. W. Sachs, </author> <title> Reduced SQP methods for parameter identification problems, </title> <journal> SIAM Journal on Numerical Analysis, </journal> <volume> 29 (1992), </volume> <pages> pp. </pages> <month> 1793-1820. </month> <title> SHAPE OPTIMIZATION OF TIME-DEPENDENT NAVIER-STOKES FLOWS 33 </title>
Reference-contexts: The efficacy of RSQP for PDE-constrained optimization problems has been demonstrated in a number of applications including structural optimization [35] [39] [40], heat equation boundary control [26], compressible flow airfoil design [33] [34] [43], boundary control of viscous incompressible flows [14] [21], and inverse parameter estimation problems [11] <ref> [24] </ref>. Reduced SQP methods have been analyzed for the finite dimensional case in [5] [9] [32], and for infinite dimensions in [22] [25].
Reference: [25] <author> F.-S. Kupfer, </author> <title> An infinite-dimensional convergence theory for reduced SQP methods in Hilbert space, </title> <journal> SIAM Journal on Optimization, </journal> <volume> 6 (1996), </volume> <pages> pp. 126-163. </pages>
Reference-contexts: Reduced SQP methods have been analyzed for the finite dimensional case in [5] [9] [32], and for infinite dimensions in [22] <ref> [25] </ref>. In light of its vastly superior performance over GRG (for steady optimal boundary velocity control [14]), our initial idea was to use RSQP for solution of the time-dependent Navier-Stokes shape optimization problem.
Reference: [26] <author> F.-S. Kupfer and E. W. Sachs, </author> <title> Numerical solution of a nonlinear parabolic control problem by a reduced SQP method, </title> <journal> Computational Optimization and Applications, </journal> <volume> 1 (1992), </volume> <pages> pp. 113-135. </pages>
Reference-contexts: The efficacy of RSQP for PDE-constrained optimization problems has been demonstrated in a number of applications including structural optimization [35] [39] [40], heat equation boundary control <ref> [26] </ref>, compressible flow airfoil design [33] [34] [43], boundary control of viscous incompressible flows [14] [21], and inverse parameter estimation problems [11] [24]. Reduced SQP methods have been analyzed for the finite dimensional case in [5] [9] [32], and for infinite dimensions in [22] [25]. <p> HE AND O. GHATTAS AND J.F. ANTAKI when the PDEs are posed in one spatial dimension, and time represents the other), the storage associated with discretizing the time-space continuum is not onerous, and there is no reason not to use a RSQP method; see <ref> [26] </ref> for an application to boundary control involving nonlinear heat conduction. Another example of memory being less important than computational work is when the state equations are naturally discrete in "space," and are posed as (ordinary) differential-algebraic equations in time. In this case, RSQP is also a good idea.
Reference: [27] <author> R. M. Lewis, </author> <title> A nonlinear programming perspective on sensitivity calculations for systems governed by state equations, </title> <type> Tech. Rep. 97-12, </type> <institution> Institute for Computer Applications in Science and Engineering, NASA Langley Research Center, Hampton, VA, </institution> <month> Feb. </month> <year> 1997. </year>
Reference-contexts: Generally, the two operations need not commute, and the two are equivalent only in the limit of infinitesimal mesh size (in certain special cases, equivalence is obtained independent of mesh size). See the discussion in [1] for inviscid and viscous flows, and SHAPE OPTIMIZATION OF TIME-DEPENDENT NAVIER-STOKES FLOWS 11 <ref> [27] </ref> for a more general setting. For time-dependent Navier-Stokes equations, finding continuous sensitivities requires solving a final-boundary value problem in the adjoint variables [23]. This PDE has time-dependent coefficients that depend on the velocities, which are found by solving the forward problem.
Reference: [28] <author> R. M. Lewis, </author> <title> Practical aspects of variable reduction formulations and reduced basis algorithms in multidisciplinary design optimization, in Multidisciplinary Design Optimization: State-of-the-Art, </title> <editor> N. Alexandrov and M. Hussaini, eds., </editor> <publisher> SIAM, </publisher> <year> 1997, </year> <pages> pp. 172-188. </pages>
Reference-contexts: The two can be seen roughly as extremes of a continuum, the endpoints of which are: completely converging the state equations at each optimization iteration versus performing a single Newton step on them (see <ref> [28] </ref>). The efficacy of RSQP for PDE-constrained optimization problems has been demonstrated in a number of applications including structural optimization [35] [39] [40], heat equation boundary control [26], compressible flow airfoil design [33] [34] [43], boundary control of viscous incompressible flows [14] [21], and inverse parameter estimation problems [11] [24].
Reference: [29] <author> I. Malcevic, </author> <title> Large-scale unstructured mesh shape optimization on parallel computers, </title> <type> Master's thesis, </type> <institution> Carnegie Mellon University, </institution> <year> 1997. </year>
Reference-contexts: We have recently implemented a parallel SQP method for general 3D unstructured mesh shape optimization problems on a Cray T3E <ref> [29] </ref>, and are currently tailoring the code to incompressible Navier-Stokes flows. Speedups induced by domain-based parallelism seem to offer the best hope for significant reductions in computing time necessary for practical shape optimization of time-dependent Navier-Stokes flows. 32 B. HE AND O. GHATTAS AND J.F. ANTAKI Acknowledgments.
Reference: [30] <author> J. Newman and A. Taylor, </author> <title> Three-dimensional aerodynamic shape sensitivity analysis and design optimization using the Euler equations on unstructured grids, 1996. </title> <type> AIAA Paper 96-2464. </type>
Reference-contexts: Therefore, the characteristic time interval for objective function computation is taken as a multiple of the inflow time period. For this problem, the objective function b u equals R d integrated over [t L ; t M ] = <ref> [30; 33] </ref> Case I [30; 36] Case II ; which correspond to 3 and 6 inflow periods, respectively. For the remainder of the computation, we use t = 0:125. Figure 5.3 gives several snapshots in time of velocity streamlines corresponding to the initial shape. <p> Therefore, the characteristic time interval for objective function computation is taken as a multiple of the inflow time period. For this problem, the objective function b u equals R d integrated over [t L ; t M ] = [30; 33] Case I <ref> [30; 36] </ref> Case II ; which correspond to 3 and 6 inflow periods, respectively. For the remainder of the computation, we use t = 0:125. Figure 5.3 gives several snapshots in time of velocity streamlines corresponding to the initial shape. <p> Similar physically-based mesh moving schemes are popular for moving boundary problems, and have been in use as early as in [3]. Related mesh moving schemes using networks of springs have been used in various flow optimization settings in [1] [12] <ref> [30] </ref> [31]. So in summary, mesh movement is by unstructured mesh generation in Stage I and elastic mesh movement in Stage II; internal mesh sensitivities are simply taken as zero in Stage I and computed by taking the derivative of the elastic mesh movement algorithm in Stage II.
Reference: [31] <author> J. Newman, A. Taylor, and G. Burgreen, </author> <title> An unstructured grid approach to sensitivity analysis and shape optimization using the Euler equations, 1995. </title> <type> AIAA Paper 95-1646. </type>
Reference-contexts: Similar physically-based mesh moving schemes are popular for moving boundary problems, and have been in use as early as in [3]. Related mesh moving schemes using networks of springs have been used in various flow optimization settings in [1] [12] [30] <ref> [31] </ref>. So in summary, mesh movement is by unstructured mesh generation in Stage I and elastic mesh movement in Stage II; internal mesh sensitivities are simply taken as zero in Stage I and computed by taking the derivative of the elastic mesh movement algorithm in Stage II.
Reference: [32] <author> J. Nocedal and M. Overton, </author> <title> Projected Hessian updating algorithms for nonlinearly constrained optimization, </title> <journal> SIAM Journal on Numerical Analysis, </journal> <volume> 22 (1985), </volume> <pages> pp. 821-850. </pages>
Reference-contexts: Reduced SQP methods have been analyzed for the finite dimensional case in [5] [9] <ref> [32] </ref>, and for infinite dimensions in [22] [25]. In light of its vastly superior performance over GRG (for steady optimal boundary velocity control [14]), our initial idea was to use RSQP for solution of the time-dependent Navier-Stokes shape optimization problem.
Reference: [33] <author> C. E. Orozco and O. Ghattas, </author> <title> Massively parallel aerodynamic shape optimization, </title> <booktitle> Computing Systems in Engineering, </booktitle> <month> 1-4 </month> <year> (1992), </year> <pages> pp. </pages> <month> 311-320. </month> <title> [34] , Infeasible path optimal design methods, with application to aerodynamic shape optimization, </title> <journal> AIAA Journal, </journal> <volume> 34 (1996), </volume> <pages> pp. </pages> <month> 217-224. </month> <title> [35] , A reduced SAND method for optimal design of nonlinear structures, </title> <note> International Journal for Numerical Methods in Engineering, (1997). To appear. </note>
Reference-contexts: The efficacy of RSQP for PDE-constrained optimization problems has been demonstrated in a number of applications including structural optimization [35] [39] [40], heat equation boundary control [26], compressible flow airfoil design <ref> [33] </ref> [34] [43], boundary control of viscous incompressible flows [14] [21], and inverse parameter estimation problems [11] [24]. Reduced SQP methods have been analyzed for the finite dimensional case in [5] [9] [32], and for infinite dimensions in [22] [25]. <p> Therefore, the characteristic time interval for objective function computation is taken as a multiple of the inflow time period. For this problem, the objective function b u equals R d integrated over [t L ; t M ] = <ref> [30; 33] </ref> Case I [30; 36] Case II ; which correspond to 3 and 6 inflow periods, respectively. For the remainder of the computation, we use t = 0:125. Figure 5.3 gives several snapshots in time of velocity streamlines corresponding to the initial shape. <p> Finally, CPU time can certainly be reduced through parallel computing. In earlier work, we devised and implemented parallel RSQP algorithms for full potential flow optimal design problems <ref> [33] </ref>, [15]; recently, parallel implementations of GRG-based optimal design methods for Euler flows have appeared [38]. We have recently implemented a parallel SQP method for general 3D unstructured mesh shape optimization problems on a Cray T3E [29], and are currently tailoring the code to incompressible Navier-Stokes flows.
Reference: [36] <author> L. Petzold, J. B. Rosen, P. E. Gill, L. O. Jay, and K. Park, </author> <title> Numerical optimal control of parabolic PDEs using DASOPT, </title> <type> Tech. Rep. NA 96-3, </type> <institution> Department of Mathematics, University of California, </institution> <address> San Diego, </address> <year> 1996. </year>
Reference-contexts: Therefore, the characteristic time interval for objective function computation is taken as a multiple of the inflow time period. For this problem, the objective function b u equals R d integrated over [t L ; t M ] = [30; 33] Case I <ref> [30; 36] </ref> Case II ; which correspond to 3 and 6 inflow periods, respectively. For the remainder of the computation, we use t = 0:125. Figure 5.3 gives several snapshots in time of velocity streamlines corresponding to the initial shape. <p> For example, one might use a multiple shooting method for solving the system of DAEs (as was done in <ref> [36] </ref> for a time-dependent heat equation), or a very high order method in time. Second, with the goal of reducing the number of optimization iterations, one might pursue incorporating second order derivatives for use in a Newton method.
Reference: [37] <author> O. Pironneau, </author> <title> On optimum design in fluid mechanics, </title> <journal> Journal of Fluid Mechanics, </journal> <volume> 64 (1974), </volume> <pages> pp. 97-110. </pages>
Reference-contexts: The motivation for this is a result from sensitivity analysis that states that the continuous shape sensitivity of a flow function is independent of the grid sensitivity of interior points, at least for certain objec SHAPE OPTIMIZATION OF TIME-DEPENDENT NAVIER-STOKES FLOWS 23 tive functions expressed in terms of domain integrals <ref> [37] </ref>. Therefore, for the sake of speed and simplicity, we might as well take grid sensitivities to be zero.
Reference: [38] <author> J. Reuther, J. J. Alonso, M. J. Rimlinger, and A. Jameson, </author> <title> Aerodynamic shape optimization of supersonic aircraft configurations via an adjoint formulation on parallel computers, </title> <type> Tech. Rep. </type> <institution> 96.17, RIACS, NASA Ames Research Center, </institution> <month> Sept. </month> <year> 1996. </year>
Reference-contexts: Finally, CPU time can certainly be reduced through parallel computing. In earlier work, we devised and implemented parallel RSQP algorithms for full potential flow optimal design problems [33], [15]; recently, parallel implementations of GRG-based optimal design methods for Euler flows have appeared <ref> [38] </ref>. We have recently implemented a parallel SQP method for general 3D unstructured mesh shape optimization problems on a Cray T3E [29], and are currently tailoring the code to incompressible Navier-Stokes flows.
Reference: [39] <author> U. Ringertz, </author> <title> Optimal design of nonlinear shell structures, </title> <type> Tech. Rep. </type> <institution> FFA TN 91-18, The Aeronautical Research Institute of Sweden, </institution> <year> 1991. </year> <title> [40] , An algorithm for optimization of nonlinear shell structures, International Journal for Numerical Methods in Engineering, </title> <booktitle> 38 (1995), </booktitle> <pages> pp. 299-314. </pages>
Reference-contexts: The efficacy of RSQP for PDE-constrained optimization problems has been demonstrated in a number of applications including structural optimization [35] <ref> [39] </ref> [40], heat equation boundary control [26], compressible flow airfoil design [33] [34] [43], boundary control of viscous incompressible flows [14] [21], and inverse parameter estimation problems [11] [24].
Reference: [41] <author> A. Sahrapour, N. U. Ahmed, and S. Tavoularis, </author> <title> Boundary control of the Navier-Stokes equations with potential applications to artificial hearts, </title> <booktitle> in Proceedings of the 2nd Conference of the CFD Society of Canada, </booktitle> <editor> J. Gottlieb and C. Ethier, eds., </editor> <address> Toronto, </address> <year> 1994, </year> <pages> pp. 387-394. </pages>
Reference-contexts: A few studies have considered optimal control of time-dependent flows, where the control is in the form of boundary velocities [23] <ref> [41] </ref>. Our concern in this article is on shape optimization of time-dependent Navier-Stokes flows, and in particular on devising efficient numerical strategies for solution of two-dimensional (2D) realizations of such problems.
Reference: [42] <author> K. Schittkowski, NLPQL: </author> <title> A Fortran subroutine for solving constrained nonlinear programming problems, </title> <journal> Annals of Operations Research, </journal> <volume> 5 (1985/86), </volume> <pages> pp. 485-500. </pages>
Reference-contexts: This generates a small, dense constraint Jacobian matrix (and a small, dense Hessian matrix of the Lagrangian function). Thus, standard dense SQP methods are appropriate. In fact, in this work we use the IMSL implementation of NLPQL, Schittkowski's dense BFGS-SQP code <ref> [42] </ref>. In this section we discuss sensitivity analysis, i.e. how we compute derivatives of flow quantities of interest with respect to design variables. <p> Time-integration is by the Crank-Nicolson method. The multifrontal sparse LU factorization code UMFPACK [10] is used to solve the linear systems that arise at each step of Newton's method. The optimizer used is IMSL's implementation of the dense BFGS-SQP code NLPQL <ref> [42] </ref>. Analytical gradients of the objective and inequality constraints are found as described in this section. In the next two sections, we present two time-dependent shape optimization model problems solved using our code.
Reference: [43] <author> V. H. Schulz and H. G. Bock, </author> <title> Partially reduced SQP methods for large-scale nonlinear optimization problems, </title> <booktitle> in Proceedings of the Second World Congress of Nonlinear Analysis, </booktitle> <publisher> Elsevier Verlag, </publisher> <year> 1997. </year>
Reference-contexts: The efficacy of RSQP for PDE-constrained optimization problems has been demonstrated in a number of applications including structural optimization [35] [39] [40], heat equation boundary control [26], compressible flow airfoil design [33] [34] <ref> [43] </ref>, boundary control of viscous incompressible flows [14] [21], and inverse parameter estimation problems [11] [24]. Reduced SQP methods have been analyzed for the finite dimensional case in [5] [9] [32], and for infinite dimensions in [22] [25]. <p> In this case, RSQP is also a good idea. An example application is optimal control of robots, the behavior of which is governed by rigid multibody dynamics. <ref> [43] </ref>. In the remainder of this article, we will define the continuous optimization problem, discuss it spatial and temporal discretization, develop sensitivity expressions, consider grid sensitivities, and apply the method to two time-dependent Navier-Stokes shape optimization model problems. More extensive discussion can be found in [20]. 2. Mathematical model.
Reference: [44] <author> J. R. Shewchuk, </author> <title> Triangle: Engineering a 2D quality mesh generator and Delaunay triangu-lator, </title> <booktitle> in First Workshop on Applied Computational Geometry, Association for Computing Machinery, </booktitle> <month> May </month> <year> 1996, </year> <pages> pp. 124-133. </pages>
Reference-contexts: That is, the resulting triangulations they produce do not vary smoothly with the input boundary shapes. For example, we use a state-of-the-art 2D triangular mesh generator, Triangle, which is a constrained Delaunay code that incorporates adaptive arithmetic for stability and robustness <ref> [44] </ref>. Triangle makes a number of binary decisions that render its output a discontinuous function of its input, including whether edges should be flipped, boundary edges split, triangles refined, etc.
Reference: [45] <author> D. P. Young, W. P. Huffman, R. G. Melvin, M. B. Bieterman, C. L. Hilmes, and F. T. Johnson, </author> <title> Inexactness and global convergence in design optimization, </title> <booktitle> in Proceedings of the 5th AIAA/NASA/USAF/ISSMO Symposium on Multidisciplinary Analysis and Optimization, </booktitle> <address> Panama City, Florida, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: Far from the optimum, the optimizer takes large steps, so provided a sufficient decrease in the merit function is observed, this discrepancy and the lack of smoothness are not a problem. Discussions of the influence of inexact sensitivities on design optimization can be found in <ref> [45] </ref>. Close to the optimum, however, we sometimes find that the inconsistency between the way the mesh is actually moved and the way it is assumed to move results in premature termination of the optimization iterations.
References-found: 41

