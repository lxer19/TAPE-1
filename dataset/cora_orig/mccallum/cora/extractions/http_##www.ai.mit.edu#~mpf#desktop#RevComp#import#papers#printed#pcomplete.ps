URL: http://www.ai.mit.edu/~mpf/desktop/RevComp/import/papers/printed/pcomplete.ps
Refering-URL: 
Root-URL: 
Title: Lattice Gas Prediction is P-complete  
Author: Cristopher Moore and Mats G. Nordahl 
Address: 1399 Hyde Park Road, Santa Fe, New Mexico 87501  Sweden  
Affiliation: 1 Santa Fe Institute,  Institute of Theoretical Physics, Chalmers University of Technology,  Goteborg,  
Note: comp-gas/9704001  P is equal to the class NC or SP respectively.  
Pubnum: S-412 96  
Email: e-mail: moore@santafe.edu  e-mail: tfemn@fy.chalmers.se  
Phone: 2  
Date: 17 Apr 1997  
Abstract: We show that predicting the HPP or FHP III lattice gas for finite time is equivalent to calculating the output of an arbitrary Boolean circuit, and is therefore P-complete: that is, it is just as hard as any other problem solvable by a serial computer in polynomial time. It is widely believed in computer science that there are inherently sequential problems, for which parallel processing gives no significant speedup. Unless this is false, it is impossible even with highly parallel processing to predict lattice gases much faster than by explicit simulation. More precisely, we cannot predict t time-steps of a lattice gas in parallel computation time O(log k t) for any k, or O(t ff ) for ff &lt; 1=2, unless the class 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> A. Condon, </author> <title> "A theory of strict P-completeness." </title> <note> STACS 1992, in Lecture Notes in Computer Science 577 (1992) 33-44. </note>
Reference-contexts: The class of problems for which this is possible is called SP for semi-efficient parallel computation [17]. Using the theory of strict P-completeness <ref> [1] </ref>, we show that ff 1=2 for lattice gases unless SP = P. We conjecture that this lower bound can be improved to ff = 1, in which case it is impossible to predict lattice gases faster than by explicit simulation. <p> the dynamic exponent, and propose it as a measure of the extent to which a system's dynamics is dependent on its history. 4 Is SP = P? That is, can all problems in P be parallelized with ff &lt; 1? To study this, Condon introduced the notion of strict P-completeness <ref> [1] </ref>. <p> One way to prove this would be to show that, for each ff &lt; 1, the family of circuits with D = n ff is strict n ff -P-complete; then Circuit Value would be strict n-P-complete in general. Unfortunately, the proof in <ref> [1] </ref> doesn't appear to work for circuits narrower than ff = 1=2. 5 Is all this physically relevant? We have shown that Lattice Gas Prediction for the HPP and FHP III rules is P-complete, and in fact at most t 1=2 -P-complete.
Reference: 2. <author> E. Fredkin and T. Toffoli, </author> <title> "Conservative logic." </title> <journal> Int. J. Theor. Phys. </journal> <month> 21 </month> <year> (1982) </year> <month> 219-253. </month>
Reference-contexts: However, the converse is not the case. The heat equation, for instance, is linear and easily predictable, even though it is the continuum limit of the com-putationally universal "billiard-ball" CA of Fredkin and Toffoli <ref> [2] </ref>. Thus the continuum limit of a CA can be much easier to predict than the CA itself, and a hardness result for the CA is not necessarily a hardness result for the corresponding continuum system.
Reference: 3. <author> U. Frisch, B. Hasslacher, and Y. Pomeau, </author> <title> "Lattice-gas automata for the Navier-Stokes equation." </title> <journal> Phys. Rev. Lett. </journal> <month> 56 </month> <year> (1986) </year> <month> 1505-1508. </month>
Reference: 4. <author> U. Frisch, D. d'Humieres, B. Hasslacher, P. Lallemand, Y. Pomeau, and J.P. Rivet, </author> <title> "Lattice gas hydrodynamics in two and three dimensions." </title> <booktitle> Complex Systems 1 (1987) 649-707. </booktitle>
Reference-contexts: Unlike the HPP rule, it becomes isotropic in the continuum limit, making it an attractive way to simulate the Navier-Stokes equations. We use a variant called FHP III <ref> [4] </ref>, which includes both stationary and moving particles; this allows particles to have a varying speed or energy, so that the system has non-trivial thermodynamic behavior.
Reference: 5. <author> R. Greenlaw, H.J. Hoover, and W.L. Ruzzo, </author> <title> Limits to Parallel Computation: P-Completeness Theory. </title> <publisher> Oxford University Press, </publisher> <year> 1995. </year>
Reference-contexts: Some non-linear CA's with certain algebraic properties can be predicted in NC [9, 10], as can the Lorentz lattice gas of one particle bouncing off of fixed scatterers [13]. But CA Prediction is P-complete in general since CA's exist that can perform universal computation <ref> [5, 7] </ref>. Other cellular automata and lattice systems that have been shown to be P-complete include majority-voting CA's, single spin-flip Ising dynamics, sandpiles, fluid invasion, and diffusion-limited aggregation [8, 11, 12]. <p> Finally, we end the paper with a discussion of the relevance, or lack of it, of the computational complexity of lattice gases to that of continuum hydrodynamics and the Navier-Stokes equations. We recommend <ref> [5, 15] </ref> for introductions to NC, P, and P-completeness. 2 The HPP lattice gas The simplest lattice gas is the HPP rule on the square lattice [6].
Reference: 6. <author> J. Hardy, O. de Pazzis, and Y. Pomeau, </author> <title> "Molecular dynamics of a classical lattice gas: transport properties and time correlation functions." </title> <journal> Phys. Rev. </journal> <month> A13 </month> <year> (1976) 1949-1960. </year>
Reference-contexts: We recommend [5, 15] for introductions to NC, P, and P-completeness. 2 The HPP lattice gas The simplest lattice gas is the HPP rule on the square lattice <ref> [6] </ref>. Unfortunately, its continuum limit is non-isotropic; it has an infinite number of unphysical conserved quantities, namely the total horizontal (vertical) component of momentum in each row (column). Thus it is not a good rule for simulating hydrodynamics.
Reference: 7. <author> K. Lindgren and M.G. Nordahl, </author> <title> "Universal Computation in Simple One-Dimensional Cellular Automata." </title> <booktitle> Complex Systems 4 (1990) 299-318. </booktitle>
Reference-contexts: Some non-linear CA's with certain algebraic properties can be predicted in NC [9, 10], as can the Lorentz lattice gas of one particle bouncing off of fixed scatterers [13]. But CA Prediction is P-complete in general since CA's exist that can perform universal computation <ref> [5, 7] </ref>. Other cellular automata and lattice systems that have been shown to be P-complete include majority-voting CA's, single spin-flip Ising dynamics, sandpiles, fluid invasion, and diffusion-limited aggregation [8, 11, 12].
Reference: 8. <author> J. Machta and R. Greenlaw, </author> <title> "The computational complexity of generating random fractals." </title> <journal> J. Stat. Phys. </journal> <volume> 82 (1996) 1299. </volume>
Reference-contexts: But CA Prediction is P-complete in general since CA's exist that can perform universal computation [5, 7]. Other cellular automata and lattice systems that have been shown to be P-complete include majority-voting CA's, single spin-flip Ising dynamics, sandpiles, fluid invasion, and diffusion-limited aggregation <ref> [8, 11, 12] </ref>. <p> Then the proofs in <ref> [8, 11, 12] </ref> work by showing that we can build "wires" to carry truth values, and AND and OR gates to connect them, so that the future state of a particular site corresponds to the output of the circuit.
Reference: 9. <author> C. Moore, </author> <title> "Quasi-linear cellular automata." Santa Fe Institute Working Paper 95-09-078, to appear in Physica D, </title> <booktitle> Proceedings of the International Workshop on Lattice Dynamics. </booktitle>
Reference-contexts: Unless NC = P (which would be almost as surprising to computer scientists as if P = NP), then, P-complete problems cannot be solved in polylogarithmic parallel time. Some non-linear CA's with certain algebraic properties can be predicted in NC <ref> [9, 10] </ref>, as can the Lorentz lattice gas of one particle bouncing off of fixed scatterers [13]. But CA Prediction is P-complete in general since CA's exist that can perform universal computation [5, 7].
Reference: 10. <author> C. Moore, </author> <title> "Non-Abelian cellular automata," Santa Fe Institute Working Paper 95-09-081, or "Predicting non-linear cellular automata quickly by decomposing them into linear ones", </title> <note> available as patt-sol/9701008. Submitted to Physica D. </note>
Reference-contexts: Unless NC = P (which would be almost as surprising to computer scientists as if P = NP), then, P-complete problems cannot be solved in polylogarithmic parallel time. Some non-linear CA's with certain algebraic properties can be predicted in NC <ref> [9, 10] </ref>, as can the Lorentz lattice gas of one particle bouncing off of fixed scatterers [13]. But CA Prediction is P-complete in general since CA's exist that can perform universal computation [5, 7].
Reference: 11. <author> C. Moore, </author> <title> "Majority-Vote Cellular Automata, Ising Dynamics, </title> <institution> and P-Completeness." Santa Fe Institute Working Paper 96-08-060, </institution> <note> to appear in J. </note> <institution> Stat. Phys. </institution>
Reference-contexts: But CA Prediction is P-complete in general since CA's exist that can perform universal computation [5, 7]. Other cellular automata and lattice systems that have been shown to be P-complete include majority-voting CA's, single spin-flip Ising dynamics, sandpiles, fluid invasion, and diffusion-limited aggregation <ref> [8, 11, 12] </ref>. <p> Then the proofs in <ref> [8, 11, 12] </ref> work by showing that we can build "wires" to carry truth values, and AND and OR gates to connect them, so that the future state of a particular site corresponds to the output of the circuit.
Reference: 12. <author> C. Moore, </author> <title> "The computational complexity of sandpiles." </title> <note> In preparation. </note>
Reference-contexts: But CA Prediction is P-complete in general since CA's exist that can perform universal computation [5, 7]. Other cellular automata and lattice systems that have been shown to be P-complete include majority-voting CA's, single spin-flip Ising dynamics, sandpiles, fluid invasion, and diffusion-limited aggregation <ref> [8, 11, 12] </ref>. <p> Then the proofs in <ref> [8, 11, 12] </ref> work by showing that we can build "wires" to carry truth values, and AND and OR gates to connect them, so that the future state of a particular site corresponds to the output of the circuit.
Reference: 13. <author> J. Machta and K. Moriarty, </author> <title> "The computational complexity of the lorentz lattice gas." </title> <note> Available as comp-gas/9607001, to appear in J. </note> <institution> Stat. Phys. </institution>
Reference-contexts: Some non-linear CA's with certain algebraic properties can be predicted in NC [9, 10], as can the Lorentz lattice gas of one particle bouncing off of fixed scatterers <ref> [13] </ref>. But CA Prediction is P-complete in general since CA's exist that can perform universal computation [5, 7]. Other cellular automata and lattice systems that have been shown to be P-complete include majority-voting CA's, single spin-flip Ising dynamics, sandpiles, fluid invasion, and diffusion-limited aggregation [8, 11, 12].
Reference: 14. <author> K. Moriarty, J. Machta and R. Greenlaw, </author> <title> "Parallel algorithm and dynamic exponent for diffusion-limited aggregation." </title> <note> Available as comp-gas/9609001, to appear in Phys. Rev. E. </note>
Reference-contexts: Clearly even a polynomial speedup is highly useful from a computational point of view; t 1=2 is an enormous improvement over t for large t. For instance, Moriarty, Machta and Greenlaw give an algorithm with ff &lt; 1 on average for diffusion-limited aggregation <ref> [14] </ref>.
Reference: 15. <author> C.H. Papadimitriou, </author> <title> Computational Complexity. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: Finally, we end the paper with a discussion of the relevance, or lack of it, of the computational complexity of lattice gases to that of continuum hydrodynamics and the Navier-Stokes equations. We recommend <ref> [5, 15] </ref> for introductions to NC, P, and P-completeness. 2 The HPP lattice gas The simplest lattice gas is the HPP rule on the square lattice [6].
Reference: 16. <author> R. Squier and K. Steiglitz, </author> <title> "Two-dimensional FHP lattice gases are computation universal." </title> <booktitle> Complex Systems 7 (1993) 297-307. </booktitle>
Reference-contexts: Thus we can simulate circuits level-by-level as we did for the HPP lattice gas, using O (n) time and length for circuits with n gates. So FHP III Lattice Gas Prediction is P-complete also. We note that a similar result for the FHP III rule was obtained in <ref> [16] </ref> under the name of "computation universality," but with additional barrier particles of Fig. 6. Shifting and splitting wires, and an AND gate, in the FHP III lattice gas. Solid dots indicate stationary particles that are initially present; dashed ones may be produced as exhaust. Fig. 7.
Reference: 17. <author> J.S. Vitter and R.A. Simons, </author> <title> "New classes for parallel complexity: a study of unification and other complete problems for P." IEEE Transactions on Computers TC-35 (1986) 403-418. This article was processed using the L A T E X macro package with LLNCS style </title>
Reference-contexts: The class of problems for which this is possible is called SP for semi-efficient parallel computation <ref> [17] </ref>. Using the theory of strict P-completeness [1], we show that ff 1=2 for lattice gases unless SP = P. We conjecture that this lower bound can be improved to ff = 1, in which case it is impossible to predict lattice gases faster than by explicit simulation. <p> But even if NC ( P, it might still be possible to achieve a polynomial speedup with parallelization, predicting t time-steps in parallel time O (t ff ) for some ff &lt; 1. Such problems are in the class SP of semi-efficient parallel computation, introduced in <ref> [17] </ref>. Fig. 8. Collisions between exhaust particles only take place if they are displaced by 0 ffi , 30 ffi or 60 ffi from the horizontal.
References-found: 17

