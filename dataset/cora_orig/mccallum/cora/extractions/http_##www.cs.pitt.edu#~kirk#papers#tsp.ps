URL: http://www.cs.pitt.edu/~kirk/papers/tsp.ps
Refering-URL: http://www.cs.pitt.edu/~kirk/papers/index.html
Root-URL: 
Title: Constructing Competitive Tours From Local Information  
Author: Bala Kalyanasundaram Kirk R. Pruhs 
Address: Pittsburgh, PA. 15260, USA  Pittsburgh, PA. 15260, USA  
Affiliation: Computer Science Department, University of  Computer Science Department, University of  
Abstract: We consider the problem of a searcher exploring an initially unknown weighted planar graph G. When the searcher visits a vertex v, it learns of each edge incident to v. The searcher's goal is to visit each vertex of G, incurring as little cost as possible. We present a constant competitive algorithm for this problem. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Alon, and Y. Azar, </author> <title> On-line Steiner trees in the Euclidean plane, </title> <booktitle> in: Proceedings of the 8th ACM Symposium on Computational Geometry (1992). </booktitle>
Reference-contexts: Chandra and 4 Vishwanathan [8], and Imase and Waxman [14] showed that it is possible to maintain a O (log n) competitive spanning tree under the point by point scenario. Alon and Azar <ref> [1] </ref> give an (log n= log log n) lower bound on the competitiveness achievable for constructing a Steiner tree point by point in the plane. Further results can be found in [2, 4, 14].
Reference: [2] <author> Y. Azar, </author> <title> Lower bounds for insertion methods for TSP, </title> <type> Manuscript. </type>
Reference-contexts: Alon and Azar [1] give an (log n= log log n) lower bound on the competitiveness achievable for constructing a Steiner tree point by point in the plane. Further results can be found in <ref> [2, 4, 14] </ref>. The main difference between this scenario and the fixed graph scenario is in what information in known to the online algorithm about "explored" vertices. In the point by point scenario the online algorithm may not be aware of all edges incident to revealed points.
Reference: [3] <author> R. Baeza-Yates, J. Culberson, and G. Rawlins, </author> <title> Searching with uncertainty, </title> <note> to appear in: Information and Computation. </note>
Reference-contexts: As far as we know this paper is the first one to examine constructing short tours online under the fixed graph scenario. However, we will now briefly survey some related work to place our results in perspective. Baeza-Yates, Culberson, and Rawlins <ref> [3] </ref> seem to have initiated the recent line of research into problems involving searching with incomplete information. They studied several problems that deal with finding a short path to an unknown destination in some simple types of metrics.
Reference: [4] <author> V. Bafna, B. Kalyanasundaram, and K. Pruhs, </author> <title> Not all insertion methods yield constant approximate tours in the plane, </title> <type> Technical Report, </type> <institution> Computer Science Department, University of Pittsburgh, </institution> <year> 1992. </year> <month> 13 </month>
Reference-contexts: Alon and Azar [1] give an (log n= log log n) lower bound on the competitiveness achievable for constructing a Steiner tree point by point in the plane. Further results can be found in <ref> [2, 4, 14] </ref>. The main difference between this scenario and the fixed graph scenario is in what information in known to the online algorithm about "explored" vertices. In the point by point scenario the online algorithm may not be aware of all edges incident to revealed points.
Reference: [5] <author> E. Bar-Eli, P. Berman, A. Fiat, and P. Yan, </author> <title> On-line navigation in a room, </title> <booktitle> in: Proceedings of the Second Annual SIAM/ACM Conference on Discrete Algorithms (1991) 237-249. </booktitle>
Reference-contexts: Note that the combinatorics of finding shortest paths under the fixed graph scenario differs significantly from the combinatorics of finding tours under the fixed graph scenario. Recently, there has been much interest in problems involving online searching and mapping using visual information <ref> [5, 7, 11, 12, 16, 17, 18, 21] </ref>. Papadimitriou and Yannakakis [21] introduced and popularized the problem of finding online a short path to a known destination in a scene of polygonal obstacles. Later results on this problem can be found in [5, 7, 17]. <p> Papadimitriou and Yannakakis [21] introduced and popularized the problem of finding online a short path to a known destination in a scene of polygonal obstacles. Later results on this problem can be found in <ref> [5, 7, 17] </ref>. Kalyanasundaram and Pruhs [16] and Klein [18] considered the case when the location of the destination is also initially unknown, but is recognizable once it is seen. Deng, Kameda, and Papadimitriou [12] gave a competitive algorithm for mapping the interior, or exterior, of a simple polygon.
Reference: [6] <author> A. Bar-Noy, and B. </author> <title> Schieber, </title> <booktitle> The Canadian travelers problem, in: Proceedings of the Second Annual ACM/SIAM Symposium on Discrete Algorithms (1991) 261-270. </booktitle>
Reference-contexts: They studied several problems that deal with finding a short path to an unknown destination in some simple types of metrics. Papadimitriou and Yannakakis [21] introduced the problem of finding a short path to some vertex under the fixed graph scenario. Related results can be found in <ref> [6, 13] </ref>. One application cited by Bar-noy and Schieber [6] is the problem of establishing a point to point connection in a communication network with unreliable links. Computing a tour online under the fixed graph scenario has some relation to broadcasting in a network with unknown topology. <p> Papadimitriou and Yannakakis [21] introduced the problem of finding a short path to some vertex under the fixed graph scenario. Related results can be found in [6, 13]. One application cited by Bar-noy and Schieber <ref> [6] </ref> is the problem of establishing a point to point connection in a communication network with unreliable links. Computing a tour online under the fixed graph scenario has some relation to broadcasting in a network with unknown topology.
Reference: [7] <author> A. Blum, P. Raghavan, and B. Schieber, </author> <title> Navigating in unfamiliar geometric terrain, </title> <booktitle> in: Proceedings of the Twenty Third Annual ACM Symposium of Theory of Computing (1991) 494-504. </booktitle>
Reference-contexts: Note that the combinatorics of finding shortest paths under the fixed graph scenario differs significantly from the combinatorics of finding tours under the fixed graph scenario. Recently, there has been much interest in problems involving online searching and mapping using visual information <ref> [5, 7, 11, 12, 16, 17, 18, 21] </ref>. Papadimitriou and Yannakakis [21] introduced and popularized the problem of finding online a short path to a known destination in a scene of polygonal obstacles. Later results on this problem can be found in [5, 7, 17]. <p> Papadimitriou and Yannakakis [21] introduced and popularized the problem of finding online a short path to a known destination in a scene of polygonal obstacles. Later results on this problem can be found in <ref> [5, 7, 17] </ref>. Kalyanasundaram and Pruhs [16] and Klein [18] considered the case when the location of the destination is also initially unknown, but is recognizable once it is seen. Deng, Kameda, and Papadimitriou [12] gave a competitive algorithm for mapping the interior, or exterior, of a simple polygon.
Reference: [8] <author> B. Chandra, and S. Vishwanathan, </author> <title> Constructing reliable communication networks of small weight online, </title> <type> Manuscript. </type>
Reference-contexts: When the ith point is revealed, all edges to previously revealed points are also revealed, and the online algorithm must extend (without the deletion of any edges) the previous tree to include the new point. Chandra and 4 Vishwanathan <ref> [8] </ref>, and Imase and Waxman [14] showed that it is possible to maintain a O (log n) competitive spanning tree under the point by point scenario.
Reference: [9] <author> T. Cormen, C. Leiserson, and R. Rivest, </author> <title> Introduction to Algorithms (McGraw-Hill, </title> <address> New York, </address> <year> 1990). </year>
Reference-contexts: We also show how this algorithm can be extended to planar graphs that additionally have vertex weights. The total computation time for ShortCut is asymptotically equivalent to the time required by the standard algorithms for solving the all-pairs shortest path problem on a sparse graph <ref> [9] </ref>. It is well known that the o*ine traveling salesperson problem, in which G is known in advance, is N P -hard [19]. At this point we should note that the standard heuristics for approximating o*ine TSP do not seem to be applicable in the online setting. <p> This gives a total computation time of O (n 2 log n), which is the same as the time required for the standard all-pairs shortest path algorithms for sparse graphs <ref> [9] </ref>. 10 4 Visual TSP We now show how to use the algorithm ShortCut, presented in section 2, to develop a competitive algorithm for visual TSP. Notice that our analysis of ShortCut holds only when the underlying graph is planar. <p> If x 2 S this contradicts the choice of v, and if x 2 V S this contradicts the choice of w. Therefore ON G contains the minimum spanning tree as a subgraph <ref> [9] </ref>. We now show that ON G is a planar graph. If two edges vw and xy is in ON G and cross at a point c then neither edge can be a perimeter edge. Without loss of generality assume, jcvj minfjcwj; jcxj; jcyjg. Hence, v 2 lune (x; y).
Reference: [10] <author> G. Das and D. Joseph, </author> <title> Which triangulations approximate the complete graph, </title> <booktitle> in: Proceedings of International Symposium on Optimal Algorithms (1989) 168-192. </booktitle>
Reference-contexts: It is important to mention the possibility that there is no one-to-one correspondence between the edges used by the algorithm to the edges in minimum spanning trees. Proofs found in <ref> [10, 20] </ref> also face similar problem. The proof that the tour is competitive ( as well as proofs found in [10, 20]) overcome this problem by performing an amortized cost-accounting. Theorem 1 The searcher, using ShortCut, visits all the vertices. <p> Proofs found in <ref> [10, 20] </ref> also face similar problem. The proof that the tour is competitive ( as well as proofs found in [10, 20]) overcome this problem by performing an amortized cost-accounting. Theorem 1 The searcher, using ShortCut, visits all the vertices. Proof: Assume to reach a contradiction that upon termination the algorithm does not visit all the vertices. At the time of termination let xy be the boundary edge minimizing jxyj.
Reference: [11] <author> X. Deng, and C. Papadimitriou, </author> <title> Exploring an unknown graph, </title> <booktitle> in: Proceedings of the Thirty First Annual Symposium on Foundations of Computer Science (1990) 355-361. </booktitle>
Reference-contexts: Our original motivation for considering online TSP arose from an online mapping problem, apparently first proposed in the literature by Deng and Papadimitriou <ref> [11] </ref>. In this problem a robot searcher inhabits a plane littered with opaque polygonal obstacles. The searcher learns about the environment only through visual information. More precisely, the searcher only learns about a part of an obstacle when it comes into the searcher's line of sight. <p> Note that the combinatorics of finding shortest paths under the fixed graph scenario differs significantly from the combinatorics of finding tours under the fixed graph scenario. Recently, there has been much interest in problems involving online searching and mapping using visual information <ref> [5, 7, 11, 12, 16, 17, 18, 21] </ref>. Papadimitriou and Yannakakis [21] introduced and popularized the problem of finding online a short path to a known destination in a scene of polygonal obstacles. Later results on this problem can be found in [5, 7, 17]. <p> Kalyanasundaram and Pruhs [16] and Klein [18] considered the case when the location of the destination is also initially unknown, but is recognizable once it is seen. Deng, Kameda, and Papadimitriou [12] gave a competitive algorithm for mapping the interior, or exterior, of a simple polygon. Deng and Papadimitriou <ref> [11] </ref> investigated the problem of visiting all of the edges in an unweighted graph revealed under a variant of the fixed graph scenario. Several researchers have considered constructing spanning trees and Steiner trees online under what we call the point by point scenario.
Reference: [12] <author> X. Deng, Kameda, and C. Papadimitriou, </author> <title> How to learn an unknown environment, </title> <booktitle> in: Proceedings of the Thirty Second Annual Symposium on Foundations of Computer Science 1991, </booktitle> <pages> 298-303. </pages>
Reference-contexts: It has been shown that any online algorithm for this mapping problem must have a competitive factor that is !(1), ie. asymptotically larger than any constant <ref> [12, 17] </ref>. Notice that in this mapping problem the searcher is allowed to map arbitrarily minute details from arbitrarily large distances. At least in some situations, it seems more realistic to assume that one must be close to an object to completely map it. <p> Note that the combinatorics of finding shortest paths under the fixed graph scenario differs significantly from the combinatorics of finding tours under the fixed graph scenario. Recently, there has been much interest in problems involving online searching and mapping using visual information <ref> [5, 7, 11, 12, 16, 17, 18, 21] </ref>. Papadimitriou and Yannakakis [21] introduced and popularized the problem of finding online a short path to a known destination in a scene of polygonal obstacles. Later results on this problem can be found in [5, 7, 17]. <p> Later results on this problem can be found in [5, 7, 17]. Kalyanasundaram and Pruhs [16] and Klein [18] considered the case when the location of the destination is also initially unknown, but is recognizable once it is seen. Deng, Kameda, and Papadimitriou <ref> [12] </ref> gave a competitive algorithm for mapping the interior, or exterior, of a simple polygon. Deng and Papadimitriou [11] investigated the problem of visiting all of the edges in an unweighted graph revealed under a variant of the fixed graph scenario.
Reference: [13] <author> A. Fiat, D. Foster, H. Karloff, Y. Rabani, Y. Ravid, S. </author> <title> Vishwanathan Competitive algorithms for layered graph traversal, </title> <booktitle> in: Proceedings of the 32nd Annual Symposium on Foundations of Computer Science (1991), </booktitle> <pages> 288-297. </pages>
Reference-contexts: They studied several problems that deal with finding a short path to an unknown destination in some simple types of metrics. Papadimitriou and Yannakakis [21] introduced the problem of finding a short path to some vertex under the fixed graph scenario. Related results can be found in <ref> [6, 13] </ref>. One application cited by Bar-noy and Schieber [6] is the problem of establishing a point to point connection in a communication network with unreliable links. Computing a tour online under the fixed graph scenario has some relation to broadcasting in a network with unknown topology.
Reference: [14] <author> M. Imase, and B. Waxman, </author> <title> Dynamic Steiner tree problem, </title> <note> SIAM Journal of Discrete Mathematics 4 (1991) 369-384. </note>
Reference-contexts: When the ith point is revealed, all edges to previously revealed points are also revealed, and the online algorithm must extend (without the deletion of any edges) the previous tree to include the new point. Chandra and 4 Vishwanathan [8], and Imase and Waxman <ref> [14] </ref> showed that it is possible to maintain a O (log n) competitive spanning tree under the point by point scenario. Alon and Azar [1] give an (log n= log log n) lower bound on the competitiveness achievable for constructing a Steiner tree point by point in the plane. <p> Alon and Azar [1] give an (log n= log log n) lower bound on the competitiveness achievable for constructing a Steiner tree point by point in the plane. Further results can be found in <ref> [2, 4, 14] </ref>. The main difference between this scenario and the fixed graph scenario is in what information in known to the online algorithm about "explored" vertices. In the point by point scenario the online algorithm may not be aware of all edges incident to revealed points.
Reference: [15] <author> B. Kalyanasundaram, and K. Pruhs, </author> <title> Constructing competitive tours from local information, </title> <type> Technical Report, </type> <institution> Computer Science Department, University of Pittsburgh, </institution> <year> 1992. </year> <month> 14 </month>
Reference: [16] <author> B. Kalyanasundaram, and K. Pruhs, </author> <title> A competitive analysis of nearest neighbor algorithms for searching unknown scenes, </title> <booktitle> in: Proceedings of the 9th Annual Symposium on Theoretical Aspects of Computer Science (1992) 147-157. </booktitle>
Reference-contexts: Note that the combinatorics of finding shortest paths under the fixed graph scenario differs significantly from the combinatorics of finding tours under the fixed graph scenario. Recently, there has been much interest in problems involving online searching and mapping using visual information <ref> [5, 7, 11, 12, 16, 17, 18, 21] </ref>. Papadimitriou and Yannakakis [21] introduced and popularized the problem of finding online a short path to a known destination in a scene of polygonal obstacles. Later results on this problem can be found in [5, 7, 17]. <p> Papadimitriou and Yannakakis [21] introduced and popularized the problem of finding online a short path to a known destination in a scene of polygonal obstacles. Later results on this problem can be found in [5, 7, 17]. Kalyanasundaram and Pruhs <ref> [16] </ref> and Klein [18] considered the case when the location of the destination is also initially unknown, but is recognizable once it is seen. Deng, Kameda, and Papadimitriou [12] gave a competitive algorithm for mapping the interior, or exterior, of a simple polygon.
Reference: [17] <author> H. Karloff, Y. Rabani, and Y. Ravid, </author> <title> Lower bounds for randomized k-server and motion planning algorithms, </title> <booktitle> in: Proceedings of the Twenty Third Annual ACM Symposium of Theory of Computing (1991) 278-288. </booktitle>
Reference-contexts: It has been shown that any online algorithm for this mapping problem must have a competitive factor that is !(1), ie. asymptotically larger than any constant <ref> [12, 17] </ref>. Notice that in this mapping problem the searcher is allowed to map arbitrarily minute details from arbitrarily large distances. At least in some situations, it seems more realistic to assume that one must be close to an object to completely map it. <p> Note that the combinatorics of finding shortest paths under the fixed graph scenario differs significantly from the combinatorics of finding tours under the fixed graph scenario. Recently, there has been much interest in problems involving online searching and mapping using visual information <ref> [5, 7, 11, 12, 16, 17, 18, 21] </ref>. Papadimitriou and Yannakakis [21] introduced and popularized the problem of finding online a short path to a known destination in a scene of polygonal obstacles. Later results on this problem can be found in [5, 7, 17]. <p> Papadimitriou and Yannakakis [21] introduced and popularized the problem of finding online a short path to a known destination in a scene of polygonal obstacles. Later results on this problem can be found in <ref> [5, 7, 17] </ref>. Kalyanasundaram and Pruhs [16] and Klein [18] considered the case when the location of the destination is also initially unknown, but is recognizable once it is seen. Deng, Kameda, and Papadimitriou [12] gave a competitive algorithm for mapping the interior, or exterior, of a simple polygon.
Reference: [18] <author> R. Klein, </author> <title> Walking an unknown street with bounded detour, </title> <booktitle> in: Proceedings of the Thirty Second Annual Symposium on Foundations of Computer Science (1991) 304-313. </booktitle>
Reference-contexts: Note that the combinatorics of finding shortest paths under the fixed graph scenario differs significantly from the combinatorics of finding tours under the fixed graph scenario. Recently, there has been much interest in problems involving online searching and mapping using visual information <ref> [5, 7, 11, 12, 16, 17, 18, 21] </ref>. Papadimitriou and Yannakakis [21] introduced and popularized the problem of finding online a short path to a known destination in a scene of polygonal obstacles. Later results on this problem can be found in [5, 7, 17]. <p> Papadimitriou and Yannakakis [21] introduced and popularized the problem of finding online a short path to a known destination in a scene of polygonal obstacles. Later results on this problem can be found in [5, 7, 17]. Kalyanasundaram and Pruhs [16] and Klein <ref> [18] </ref> considered the case when the location of the destination is also initially unknown, but is recognizable once it is seen. Deng, Kameda, and Papadimitriou [12] gave a competitive algorithm for mapping the interior, or exterior, of a simple polygon.
Reference: [19] <author> E. Lawler, J. Lenstra, A. Rinnooy Kan, and D. Schmoys, </author> <title> The Traveling Salesman Problem (Wiley, </title> <address> New York, </address> <year> 1985). </year>
Reference-contexts: We only require that the distances are nonnegative. So, for example, the distances need not satisfy the triangle inequality. In addition, n, the number of vertices of G, is not known in advance to the searcher. As in the standard traveling salesperson problem <ref> [19] </ref>, the salesperson's goal is to visit all of the vertices, traveling only on the edges, with his/her path being as short as possible. Since the searcher/salesperson lacks complete information, it is generally not possible to construct the optimal tour. <p> It is well known that the o*ine traveling salesperson problem, in which G is known in advance, is N P -hard <ref> [19] </ref>. At this point we should note that the standard heuristics for approximating o*ine TSP do not seem to be applicable in the online setting. <p> By necessity an algorithm in the online setting must be local. The competitive o*ine approximation heuristics, eg. nearest insertion, cheapest insertion, the minimum spanning tree algorithm, and Christofides algorithm <ref> [19, 24] </ref>, are not local. The proofs that these heuristics are competitive involve finding a one-to-one correspondence between the edges in the approximate tour and the edges in the minimum spanning tree. <p> Besides being nonlocal, these heuristics, when applied in the online setting, do not take into account all costs incurred by the salesperson. In contrast, the heuristics that are local, eg. 2 the nearest neighbor algorithm <ref> [19] </ref>, and the space filling curve algorithm [22], are not competitive. (The competitive factor of the nearest neighbor algorithm on an arbitrary graph is fi (log n). [24]) Since our algorithm is both local and competitive, the proof that the resulting tours are competitive seems to require a more general technique <p> Then T (jRj; k) then satisfies the following recurrence relation: T (jRj; 0) = 0 T (jRj; k) T (jRj (1 + ffi)jxyj + jxyj) + jxyj The solution to this recurrence relation is T (jRj; k) jRj=ffi. Using a standard trick <ref> [19] </ref> we now briefly explain how to extend ShortCut to handle graphs with vertex costs in addition to edge costs. That is each vertex x has a cost w (x) and the searcher incurs a cost of w (x) each time it visits x.
Reference: [20] <author> C. Levcopoulos, and A. Lingas, </author> <title> There are planar graphs almost as good as the complete graphs and as short as minimum spanning trees, </title> <booktitle> in: Proceedings of International Symposium on Optimal Algorithms (1989) 9-13. </booktitle>
Reference-contexts: It is important to mention the possibility that there is no one-to-one correspondence between the edges used by the algorithm to the edges in minimum spanning trees. Proofs found in <ref> [10, 20] </ref> also face similar problem. The proof that the tour is competitive ( as well as proofs found in [10, 20]) overcome this problem by performing an amortized cost-accounting. Theorem 1 The searcher, using ShortCut, visits all the vertices. <p> Proofs found in <ref> [10, 20] </ref> also face similar problem. The proof that the tour is competitive ( as well as proofs found in [10, 20]) overcome this problem by performing an amortized cost-accounting. Theorem 1 The searcher, using ShortCut, visits all the vertices. Proof: Assume to reach a contradiction that upon termination the algorithm does not visit all the vertices. At the time of termination let xy be the boundary edge minimizing jxyj.
Reference: [21] <author> C. Papadimitriou, and M. Yannakakis, </author> <title> Shortest paths without a map, </title> <booktitle> in: Proceedings of the Sixteenth Annual Internation Colloquium on Automata, Languages, and Programming (1989) 610-620. </booktitle>
Reference-contexts: Baeza-Yates, Culberson, and Rawlins [3] seem to have initiated the recent line of research into problems involving searching with incomplete information. They studied several problems that deal with finding a short path to an unknown destination in some simple types of metrics. Papadimitriou and Yannakakis <ref> [21] </ref> introduced the problem of finding a short path to some vertex under the fixed graph scenario. Related results can be found in [6, 13]. One application cited by Bar-noy and Schieber [6] is the problem of establishing a point to point connection in a communication network with unreliable links. <p> Note that the combinatorics of finding shortest paths under the fixed graph scenario differs significantly from the combinatorics of finding tours under the fixed graph scenario. Recently, there has been much interest in problems involving online searching and mapping using visual information <ref> [5, 7, 11, 12, 16, 17, 18, 21] </ref>. Papadimitriou and Yannakakis [21] introduced and popularized the problem of finding online a short path to a known destination in a scene of polygonal obstacles. Later results on this problem can be found in [5, 7, 17]. <p> Recently, there has been much interest in problems involving online searching and mapping using visual information [5, 7, 11, 12, 16, 17, 18, 21]. Papadimitriou and Yannakakis <ref> [21] </ref> introduced and popularized the problem of finding online a short path to a known destination in a scene of polygonal obstacles. Later results on this problem can be found in [5, 7, 17].
Reference: [22] <author> L. Platzman, and J. Bartholdi, </author> <title> Spacefilling curves and the planar traveling salesman problem", </title> <note> Journal of the ACM 36 (1989) 719-737. </note>
Reference-contexts: Besides being nonlocal, these heuristics, when applied in the online setting, do not take into account all costs incurred by the salesperson. In contrast, the heuristics that are local, eg. 2 the nearest neighbor algorithm [19], and the space filling curve algorithm <ref> [22] </ref>, are not competitive. (The competitive factor of the nearest neighbor algorithm on an arbitrary graph is fi (log n). [24]) Since our algorithm is both local and competitive, the proof that the resulting tours are competitive seems to require a more general technique than finding a one-to-one correspondence with edges
Reference: [23] <author> F. Preparata, and M. Shamos, </author> <title> Computational Geometry: An Introduction (Springer-Verlag, </title> <address> New York, </address> <year> 1985). </year>
Reference-contexts: We finish this section by briefly considering the total computation time required by ShortCut. First note that the number of edges in a planar graph is O (n) <ref> [23] </ref>. In order to efficiently maintain the Block lists, for each boundary edge vw, we maintain a list, BlockedBy (vw), of edges that vw blocks. So, xy 2 Block (vw) if and only if vw 2 BlockedBy (xy).
Reference: [24] <author> D. Rosenkrantz, R. Stearns, and P. Lewis, </author> <title> An analysis of several heuristics for the traveling salesman problem, </title> <note> SIAM Journal of Computing 6 (1977) 563-581. </note>
Reference-contexts: By necessity an algorithm in the online setting must be local. The competitive o*ine approximation heuristics, eg. nearest insertion, cheapest insertion, the minimum spanning tree algorithm, and Christofides algorithm <ref> [19, 24] </ref>, are not local. The proofs that these heuristics are competitive involve finding a one-to-one correspondence between the edges in the approximate tour and the edges in the minimum spanning tree. <p> In contrast, the heuristics that are local, eg. 2 the nearest neighbor algorithm [19], and the space filling curve algorithm [22], are not competitive. (The competitive factor of the nearest neighbor algorithm on an arbitrary graph is fi (log n). <ref> [24] </ref>) Since our algorithm is both local and competitive, the proof that the resulting tours are competitive seems to require a more general technique than finding a one-to-one correspondence with edges in the minimum spanning tree. <p> The outstanding open question seems to be whether there is a competitive algorithm for online TSP on a general weighted graph under the fixed graph scenario. Note that the competitive factor of the greedy algorithm Nearest Neighbor is O (log n) for arbitrary weighted graphs <ref> [24] </ref>. Acknowledgments: We would like to thank Sundar Vishwanathan, Gautam Das, Giri Narasimhan, and Harry Plantinga for helpful discussions. Finally, we would like to thank an anonymous referee for an observation that allowed us to reduce the competitive factor from 24 to 18.
Reference: [25] <author> G. Toussaint, </author> <title> The relative neighborhood graph of a finite planar set, </title> <booktitle> Pattern Recognition 12 (1980) 261-268. </booktitle> <pages> 15 </pages>
Reference-contexts: In the first case, vw is called a perimeter edge. An object neighborhood graph is a generalization of a relative neighborhood graph <ref> [25] </ref>. Definition 7 For a nonperimeter edge vw in ON G, the Olune (v; w) is the intersection of lune (v; w) with the region of the plane mutually visible from v and w.
References-found: 25

