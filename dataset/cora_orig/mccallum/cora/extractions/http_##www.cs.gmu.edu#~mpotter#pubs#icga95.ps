URL: http://www.cs.gmu.edu/~mpotter/pubs/icga95.ps
Refering-URL: http://www.cs.gmu.edu/~mpotter/pubs/icga95.html
Root-URL: 
Email: e-mail: mpotter@cs.gmu.edu  
Title: A Coevolutionary Approach to Learning Sequential Decision Rules  
Author: Mitchell A. Potter Kenneth A. De Jong John J. Grefenstette 
Address: Fairfax, VA 22030  Fairfax, VA 22030  Washington, DC 20375  
Affiliation: Dept. of Computer Science George Mason University  Dept. of Computer Science George Mason University  NCARAI Naval Research Laboratory  
Abstract: We present a coevolutionary approach to learning sequential decision rules which appears to have a number of advantages over non-coevolutionary approaches. The coevolutionary approach encourages the formation of stable niches representing simpler sub-behaviors. The evolutionary direction of each subbehavior can be controlled independently, providing an alternative to evolving complex behavior using intermediate training steps. Results are presented showing a significant learning rate speedup over a non-coevolutionary approach in a simulated robot domain. In addition, the results suggest the coevolutionary approach may lead to emer gent problem decompositions.
Abstract-found: 1
Intro-found: 1
Reference: <author> Cohoon, J., S. Hegde, W. Martin, and D. </author> <title> Richards (1987). Punctuated equilibria: A parallel genetic algorithm. </title> <editor> In J. Grefenstette (Ed.), </editor> <booktitle> Proceedings of the Second International Conference on Genetic Algorithms, </booktitle> <pages> pp. 148-154. </pages> <publisher> Lawrence Erlbaum Associates. </publisher>
Reference: <author> Davidor, Y. </author> <year> (1991). </year> <title> A naturally occuring niche & species phenomenon: The model and first results. </title>
Reference: <editor> In R. Belew and L. Booker (Eds.), </editor> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> pp. 257-263. </pages> <publisher> Morgan Kaufmann. </publisher> <editor> de Garis, H. </editor> <year> (1990). </year> <title> Building artificial nervous systems using genetically programmed neural network modules. </title> <editor> In B. Porter and R. Mooney (Eds.), </editor> <booktitle> Proceedings of the Seventh International Conference on Machine Learning, </booktitle> <pages> pp. 132-139. </pages>
Reference: <author> Deb, K. and D. </author> <title> Goldberg (1989). An investigation of niche and species formation in genetic function optimization. </title> <editor> In J. Schaffer (Ed.), </editor> <booktitle> Proceedings of the Third International Conference on Genetic Algorithms, </booktitle> <pages> pp. 42-50. </pages> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> DeJong, K. </author> <year> (1975). </year> <title> Analysis of Behavior of a Class of Genetic Adaptive Systems. </title> <type> Ph. D. thesis, </type> <institution> University of Michigan, </institution> <address> Ann Arbor, MI. </address>
Reference: <author> Forrest, S., B. Javornik, R. Smith, and A. </author> <title> Perelson (1993). Using genetic algorithms to explore pattern recognition in the immune system. </title> <booktitle> Evolutionary Computation 1 (3), </booktitle> <pages> 191-211. </pages>
Reference: <author> Giordana, A., L. Saitta, and F. </author> <month> Zini </month> <year> (1994). </year> <title> Learning disjunctive concepts by means of genetic algorithms. </title> <editor> In W. Cohen and H. Hirsh (Eds.), </editor> <booktitle> Proceedings of the Eleventh International Conference on Machine Learning, </booktitle> <pages> pp. 96-104. </pages> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Grefenstette, J., C. Ramsey, and A. </author> <title> Schultz (1990). Learning sequential decision rules using simulation models and competition. </title> <booktitle> Machine Learning 5 (4), </booktitle> <pages> 355-381. </pages>
Reference-contexts: Samuel, which stands for Strategy Acquisition Method Using Empirical Learning, is designed to evolve sets of sequential decision rules to be used by decision making agents <ref> (Grefenstette, Ramsey, and Schultz 1990) </ref>. 3.1 Standard Samuel System The architecture of Samuel consists of three main components: a domain module, a production system, and a genetic algorithm. The production system and domain module evaluate rule sets while the genetic algorithm evolves new rule sets.
Reference: <author> Grosso, P. </author> <year> (1985). </year> <title> Computer Simulations of Genetic Adaptation: Parallel Subcomponent Interaction in a Multilocus Model. </title> <type> Ph. D. thesis, </type> <institution> University of Michigan, </institution> <address> Ann Arbor, MI. </address>
Reference: <author> Hills, D. </author> <year> (1990). </year> <title> Co-evolving parasites improve simulated evolution as an optimization procedure. </title> <editor> In C. Langton, C. Taylor, J. Farmer, and S. Ras-mussen (Eds.), </editor> <booktitle> Artificial Life II, </booktitle> <pages> pp. 313-324. </pages> <publisher> Addison-Wesley. </publisher>
Reference-contexts: In addition, individuals occasionally migrate from one subpopulation (island) to another, so there is a mixing of genetic material. The previous work that has looked at cooperating rather than competing subpopulations has involved a user-specified decomposition of the problem into species (see, for example, (Husbands and Mill 1991) or <ref> (Hills 1990) </ref>). Cooperative coevolutionary algorithms (CCAs) combine and extend ideas from these earlier systems in several ways. As shown in Figure 1, a CCA consists of a collection of evolutionary algorithm (EA) instances, each attempting to evolve species which are useful as modules for achieving higher level goals.
Reference: <author> Holland, J. and J. </author> <title> Reitman (1978). Cognitive systems based on adaptive algorithms. </title> <editor> In D. Waterman and F. Hayes-Roth (Eds.), </editor> <title> Pattern-Directed Inference Systems. </title> <publisher> Academic Press. </publisher>
Reference-contexts: Classifier systems attempt to accomplish this via a single population of interacting rules whose individual fitnesses are determined by their interactions with other rules via a simulated micro-economy <ref> (Holland and Reitman 1978) </ref>.
Reference: <author> Husbands, P. and F. </author> <title> Mill (1991). Simulated coevolution as the mechanism for emergent planning and scheduling. </title> <editor> In R. Belew and L. Booker (Eds.), </editor> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> pp. 264-270. </pages> <publisher> Morgan Kauf-mann. </publisher>
Reference-contexts: In addition, individuals occasionally migrate from one subpopulation (island) to another, so there is a mixing of genetic material. The previous work that has looked at cooperating rather than competing subpopulations has involved a user-specified decomposition of the problem into species (see, for example, <ref> (Husbands and Mill 1991) </ref> or (Hills 1990)). Cooperative coevolutionary algorithms (CCAs) combine and extend ideas from these earlier systems in several ways.
Reference: <author> Lin, L.-J. </author> <year> (1993). </year> <title> Hierarchical learning of robot skills by reinforcement. </title> <booktitle> In Proceedings of the 1993 International Joint Conference on Neural Networks, </booktitle> <pages> pp. 181-186. </pages> <publisher> IEEE Press. </publisher>
Reference: <author> Moriarty, D. E. and R. </author> <title> Miikkulainen (1996). Efficient reinforcement learning through symbiotic evolution. </title> <booktitle> Machine Learning 22 (1). </booktitle> <publisher> In Press. </publisher>
Reference: <author> Pettey, C., M. Leuze, and J. </author> <title> Grefenstette (1987). A parallel genetic algorithm. </title> <editor> In J. Grefenstette (Ed.), </editor> <booktitle> Proceedings of the Second International Conference on Genetic Algorithms, </booktitle> <pages> pp. 155-161. </pages> <publisher> Lawrence Erl-baum Associates. </publisher>
Reference: <author> Potter, M. and K. </author> <title> De Jong (1994). A cooperative coevolutionary approach to function optimization. </title> <editor> In Y. Davidor and S. H.-P. (Eds.), </editor> <booktitle> Proceedings of the Third Conference on Parallel Problem Solving from Nature, </booktitle> <pages> pp. 249-257. </pages> <publisher> Springer-Verlag. </publisher>
Reference-contexts: This credit is then used by the GA instances to evolve better sub-components. We call such systems Cooperative Coevolutionary Genetic Algorithms (CCGAs). We initially tested this CCGA architecture in the well-studied and well-understood domain of function optimization and achieved considerable performance improvements over the more traditional centralized architectures <ref> (Potter and De Jong 1994) </ref>. In this paper, we describe a more ambitious on-going effort involv 1 We define a species to be a collection of interbreeding individuals with similar characteristics 1 ing the use of CCGAs to evolve sequential decision rules which control the behavior of a simulated robot.
Reference: <author> Singh, S. </author> <year> (1992). </year> <title> Transfer of learning by composing solutions of elemental sequential tasks. </title> <booktitle> Machine Learning 8, </booktitle> <pages> 323-339. </pages>
Reference: <author> Tanese, R. </author> <year> (1989). </year> <title> Distributed genetic algorithms. </title> <editor> In J. Schaffer (Ed.), </editor> <booktitle> Proceedings of the Third International Conference on Genetic Algorithms, </booktitle> <pages> pp. 434-439. </pages> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Whitley, D. and T. </author> <title> Starkweather (1990). Genitor II: a distributed genetic algorithm. </title> <journal> Journal of Experimental and Theoretical Artificial Intelligence 2, </journal> <pages> 189-214. </pages>
References-found: 19

