URL: http://www.cs.umn.edu/Users/dept/users/kencham/synchronization1.ps.gz
Refering-URL: http://www.cs.umn.edu/Users/dept/users/kencham/
Root-URL: http://www.cs.umn.edu
Title: Synchronization Relation Tree A Model for Temporal Synchronization in Multimedia Presentations Keywords: Multimedia, Synchronization, Temporal
Author: Woosaeng Kim Deepak Kenchammana-Hosekote Ee Peng Lim Jaideep Srivastava 
Date: December 8, 1992  
Address: Minneapolis, MN  
Affiliation: Computer Science Department University of Minnesota  
Pubnum: (612)-624-7372  
Abstract: Schemes for specifying synchronization relations between multimedia data have important ramifications from user level specification to system level schedule generation. This paper examines the problems of synchronizing multimedia objects in a multimedia presentation. We present a scheme to handle the general problem of temporal relationship specification and scheduling. The scheme proposes a two phased approach with a specification phase and a scheduling phase. The first phase focuses on assisting users to construct a consistent temporal relationship specification. The second phase ensures that the actual presentation proceeds according to the consistent temporal relationship specification despite dynamic factors such as resource contention. The use of Synchronization Relation Tree (SRT) as a formal temporal relationship specification to capture the temporal information is proposed. Consistency checks can be performed on the SRT during the specification phase. In order to guarantee the temporal relationships among various media objects as specified in a SRT, a pair of message passing protocols is proposed to generate the accurate timing values required for actual presentation of the multimedia objects. 
Abstract-found: 1
Intro-found: 1
Reference: [All83] <author> J.F. Allen. </author> <title> Maintaining knowledge about temporal intervals. </title> <journal> Communications of the ACM, </journal> <month> November </month> <year> 1983. </year>
Reference-contexts: Interval-based temporal specification models the presentation (runtime) duration of multimedia objects as time intervals. Allen in <ref> [All83] </ref> has shown a set of thirteen possible temporal relationships between two temporal intervals. Since a time instant can be captured as an interval with zero length, the interval-based representation is therefore more expressive than the instant-based representation. <p> SRT model treats all synchronizable objects as temporal intervals and allows the user to express any temporal relationship between a pair of temporal intervals. The concept of temporal intervals introduced by J.F. Allen <ref> [All83] </ref> is shown in Figure 4. Except the equal relationship, each of these temporal relationships has an inverse which is not shown in the diagram. In Figure 4, we show how each of these possible temporal relationships can be modeled using the SRT.
Reference: [And90] <author> D.P. Anderson. </author> <title> Meta scheduling for distributed continuous media. </title> <type> Technical Report 90-006, </type> <institution> University of California, Berkeley, </institution> <month> October </month> <year> 1990. </year>
Reference-contexts: At the root node, setup time and display time are synonymous since the amount of time before the display of the entire presentation is exactly the setup time. Online monitoring of the presentation at runtime can be preformed by using techniques of meta-scheduling as described in <ref> [And90] </ref>. 14 To support the two message passing protocols, two methods are defined for each object class in the SRT. They are AcqTime and DisTime and can be invoked by sending acquire-time and distribute-time messages respectively to the object involved. AcqTime method is invoked during the upward message protocol.
Reference: [BCG + 90] <author> P. Berra, C.Y.R. Chen, A. Ghafoor, C.C. Lin, T.D.C. Little, and D. Shin. </author> <title> Architecture for distributed multimedia database system. </title> <journal> Computer Communications, </journal> <month> May </month> <year> 1990. </year>
Reference-contexts: The main functions are defined as methods which are procedures that implement operations defined on an object. A request to perform an operation on an object is accomplished by sending a message to the object, i.e. a method invocation. Several multimedia system models have been proposed in recent years <ref> [BCG + 90, Mas87, LG90b, Sve87] </ref>. A typical multimedia information system consists of four modules: user interface, object composition manager, database management system, and media managers. to construct a multimedia presentation with consistent temporal relationships among its media objects.
Reference: [CRT91] <author> M. Carlo, F. Rabitti, and C. Thanos. </author> <title> Conceptual modeling of multimedia documents. </title> <booktitle> IEEE Computer, </booktitle> <month> October </month> <year> 1991. </year>
Reference-contexts: In addition to its modeling power for timing specification, SRT can be treated as a hierarchical data structure which 3 can be easily implemented using the object-oriented model. This bridges the gap between our work and the research on object-oriented modelling of static multimedia information <ref> [WKL86, KNS90, CRT91] </ref>. The organization of this paper is as follows. In Section 2, we define a multimedia information system model along with its assumptions. A two-phase approach to temporal relationship specification and scheduling problems is discussed in Section 3.
Reference: [KNS90] <author> W. Klas, E.J. Neuhold, and M. Schrefl. </author> <title> Using an object-oriented approach to model multimedia data. </title> <journal> Computer Communications, </journal> <month> May </month> <year> 1990. </year>
Reference-contexts: In addition to its modeling power for timing specification, SRT can be treated as a hierarchical data structure which 3 can be easily implemented using the object-oriented model. This bridges the gap between our work and the research on object-oriented modelling of static multimedia information <ref> [WKL86, KNS90, CRT91] </ref>. The organization of this paper is as follows. In Section 2, we define a multimedia information system model along with its assumptions. A two-phase approach to temporal relationship specification and scheduling problems is discussed in Section 3.
Reference: [LG90a] <author> T.D.C. Little and A. Ghafoor. </author> <title> Network considerations for distributed multimedia object. </title> <journal> IEEE Network Magazine, </journal> <volume> 4(6), </volume> <month> November </month> <year> 1990. </year>
Reference-contexts: An integrated model based on OCPN for the problems of low-level and high-level synchronization and object management in a network environment was also studied <ref> [LG90a, LG91b, LG91a] </ref>. However, it was assumed that the database contains only consistent temporal relationship specification, i.e. the timing values for the object presentation durations are consistent with all the user-specified temporal relationships.
Reference: [LG90b] <author> T.D.C. Little and A. Ghafoor. </author> <title> Synchronication and storage models for multimedia objects. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 8(3), </volume> <month> April </month> <year> 1990. </year>
Reference-contexts: Therefore, the system should combine data from different media for use or presentation to the user. The process of combining data in this manner is commonly known as integration, or composition. Integration can generally be classified into temporal or spatial <ref> [LG90b] </ref>. Temporal integration refers to the synchronization of multiple media objects of varying granularity. These temporal relationships among media objects are used to schedule the retrieval and presentation of these media objects. Some temporal relationships are natural or implied, such as between audio and video objects in a live conference. <p> Since spatial integration techniques are often application dependent, we are not going to address it in this paper. In order to properly process the integration of media with vastly different presentation requirements, the characteristics of, and relationships between media must be established. Little and Ghafoor <ref> [LG90b] </ref> have proposed a synchronization scheme to facilitate storage and retrieval of media elements based on the Object Composition Petri Net (OCPN) model. An integrated model based on OCPN for the problems of low-level and high-level synchronization and object management in a network environment was also studied [LG90a, LG91b, LG91a]. <p> The main functions are defined as methods which are procedures that implement operations defined on an object. A request to perform an operation on an object is accomplished by sending a message to the object, i.e. a method invocation. Several multimedia system models have been proposed in recent years <ref> [BCG + 90, Mas87, LG90b, Sve87] </ref>. A typical multimedia information system consists of four modules: user interface, object composition manager, database management system, and media managers. to construct a multimedia presentation with consistent temporal relationships among its media objects.
Reference: [LG91a] <author> T.D.C. Little and A. Ghafoor. </author> <title> Multimedia synchronization protocols for broadband integrated services. </title> <journal> to appear in IEEE Journal on Selected Areas in Communications, </journal> <year> 1991. </year>
Reference-contexts: An integrated model based on OCPN for the problems of low-level and high-level synchronization and object management in a network environment was also studied <ref> [LG90a, LG91b, LG91a] </ref>. However, it was assumed that the database contains only consistent temporal relationship specification, i.e. the timing values for the object presentation durations are consistent with all the user-specified temporal relationships.
Reference: [LG91b] <author> T.D.C. Little and A. Ghafoor. </author> <title> Spatial-temporal composition of distributed multimedia objects for value-added networks. </title> <booktitle> IEEE Computer, </booktitle> <month> October </month> <year> 1991. </year>
Reference-contexts: An integrated model based on OCPN for the problems of low-level and high-level synchronization and object management in a network environment was also studied <ref> [LG90a, LG91b, LG91a] </ref>. However, it was assumed that the database contains only consistent temporal relationship specification, i.e. the timing values for the object presentation durations are consistent with all the user-specified temporal relationships.
Reference: [LGCB91] <author> T.D.C. Little, A. Ghafoor, C.Y.R. Chen, and P.B. Berra. </author> <title> Multimedia synchronization. </title> <journal> Data Engineering Bulletin, </journal> <year> 1991. </year>
Reference-contexts: The data is physically accessed only at the time of rendition and until then, we assume that the layers communicate data instances in the form of the overlying data structures. As discussed in <ref> [LGCB91] </ref>, temporal information has traditionally been used in maintaining historical information [Sno87]. An example is a highway sensor data collection and maintenance system. This system collects sensor data consisting of temperature and data collection time, which can be queried using a temporal query language, e.g. TQuel. <p> Instant-based temporal specification usually involves assigning reference points to two or more streams of media data and media synchronization is performed by matching reference points in different streams. This scheme has been widely applied in the motion picture industry <ref> [LGCB91] </ref>. Instant-based representation has some difficulties in representing temporal relationships among multimedia data. First, since unique and absolute time references are used, the relative timing between multimedia objects is lost when part of a data stream is edited.
Reference: [Mas87] <author> Y. </author> <title> Masunaga. Multimedia databases: A formal framework. </title> <booktitle> In IEEE Office Automation Symposium, </booktitle> <month> April </month> <year> 1987. </year>
Reference-contexts: The main functions are defined as methods which are procedures that implement operations defined on an object. A request to perform an operation on an object is accomplished by sending a message to the object, i.e. a method invocation. Several multimedia system models have been proposed in recent years <ref> [BCG + 90, Mas87, LG90b, Sve87] </ref>. A typical multimedia information system consists of four modules: user interface, object composition manager, database management system, and media managers. to construct a multimedia presentation with consistent temporal relationships among its media objects.
Reference: [RV91a] <author> P. V. Rangan and H. M. Vin. </author> <title> File system design for digital video and audio. </title> <booktitle> In Proc. of the 13th Symposium on Operating Systems Principles, </booktitle> <month> October </month> <year> 1991. </year>
Reference-contexts: The actual setup time is only available during presentation. A media manager manager is assumed to adhere strictly to the actual setup time it supplies. An important observation made by <ref> [RV91a] </ref> is that the cost of copying multimedia is very expensive and any architecture for a multimedia system should avoid doing it.
Reference: [RV91b] <author> P. V. Rangan and H. M. Vin. </author> <title> A testbed for digital audio and video. </title> <booktitle> In Usenix, </booktitle> <month> Summer </month> <year> 1991. </year>
Reference-contexts: To avoid the copy of data from layer to layer in such a layered system architecture, we believe that an overlying data structure (a pointer based scheme as in <ref> [RV91b] </ref>) is assumed to exist. The data is physically accessed only at the time of rendition and until then, we assume that the layers communicate data instances in the form of the overlying data structures. As discussed in [LGCB91], temporal information has traditionally been used in maintaining historical information [Sno87].
Reference: [Sno87] <author> R. Snodgrass. </author> <title> The temporal query language tquel. </title> <journal> ACM Transactions on Database Systems, </journal> <month> June </month> <year> 1987. </year>
Reference-contexts: The data is physically accessed only at the time of rendition and until then, we assume that the layers communicate data instances in the form of the overlying data structures. As discussed in [LGCB91], temporal information has traditionally been used in maintaining historical information <ref> [Sno87] </ref>. An example is a highway sensor data collection and maintenance system. This system collects sensor data consisting of temperature and data collection time, which can be queried using a temporal query language, e.g. TQuel. In the case of multimedia information systems, temporal information is used for synchronization purposes.
Reference: [Ste90] <author> R. Steinmetz. </author> <title> Synchronization properties in multimedia systems. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 8(3), </volume> <month> April </month> <year> 1990. </year> <month> 22 </month>
Reference-contexts: For example, it may be appropriate to extend the display of an image object until the next image object is ready for display. This is known as the restricted blocking concept used in the language-based synchronization specification proposed by Steinmetz <ref> [Ste90] </ref>. Such an approach is useful when the actual setup time cannot be predicted. Its main disadvantage is that now the actual presentation may look different from what has been originally specified. In general, estimating the setup time required for a media object is a very difficult problem.
Reference: [Sve87] <author> J.S. Sventek. </author> <title> An architecture for supporting multi-media integration. </title> <booktitle> In Proc. </booktitle> <institution> IEEE Comput. Soc. Office Automat. </institution> <note> Symp., </note> <month> April </month> <year> 1987. </year>
Reference-contexts: The main functions are defined as methods which are procedures that implement operations defined on an object. A request to perform an operation on an object is accomplished by sending a message to the object, i.e. a method invocation. Several multimedia system models have been proposed in recent years <ref> [BCG + 90, Mas87, LG90b, Sve87] </ref>. A typical multimedia information system consists of four modules: user interface, object composition manager, database management system, and media managers. to construct a multimedia presentation with consistent temporal relationships among its media objects.
Reference: [WKL86] <author> D. Woelk, W. Kim, and W. </author> <title> Luther. An object-oriented approach to multimedia database. </title> <booktitle> In ACM SIGMOD, </booktitle> <year> 1986. </year> <month> 23 </month>
Reference-contexts: In addition to its modeling power for timing specification, SRT can be treated as a hierarchical data structure which 3 can be easily implemented using the object-oriented model. This bridges the gap between our work and the research on object-oriented modelling of static multimedia information <ref> [WKL86, KNS90, CRT91] </ref>. The organization of this paper is as follows. In Section 2, we define a multimedia information system model along with its assumptions. A two-phase approach to temporal relationship specification and scheduling problems is discussed in Section 3.
References-found: 17

