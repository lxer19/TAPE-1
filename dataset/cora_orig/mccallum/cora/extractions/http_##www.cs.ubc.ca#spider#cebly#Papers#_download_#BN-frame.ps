URL: http://www.cs.ubc.ca/spider/cebly/Papers/_download_/BN-frame.ps
Refering-URL: http://www.cs.ubc.ca/spider/cebly/papers.html
Root-URL: 
Email: cebly@cs.ubc.ca  moises@rpal.rockwell.com  
Phone: 2  
Title: The Frame Problem and Bayesian Network Action Representations  
Author: Craig Boutilier and Moises Goldszmidt 
Address: Vancouver, BC V6T 1Z4, CANADA  Street, Palo Alto, CA 94301, U.S.A.  
Affiliation: 1 Dept. of Computer Science, University of British Columbia,  Rockwell Science Center, 444 High  
Abstract: We examine a number of techniques for representing actions with stochastic effects using Bayesian networks and influence diagrams. We compare these techniques according to ease of specification and size of the representation required for the complete specification of the dynamics of a particular system, paying particular attention the role of persistence relationships. We precisely characterize two components of the frame problem for Bayes nets and stochastic actions, propose several ways to deal with these problems, and compare our solutions with Re-iter's solution to the frame problem for the situation calculus. The result is a set of techniques that permit both ease of specification and compact representation of probabilistic system dynamics that is of comparable size (and timbre) to Reiter's representation (i.e., with no explicit frame axioms).
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Andrew B. Baker. </author> <title> Nonmonotonic reasoning in the framework of the situation calculus. </title> <journal> Artificial Intelligence, </journal> <volume> 49 </volume> <pages> 5-23, </pages> <year> 1991. </year>
Reference-contexts: Since the earliest attempts to formalize this problem, the straightforward encoding of actions and their effects has been fraught with difficulties, such as the frame, qualification and ramification problems. Representations such as the situation calculus [20] and STRIPS [10], as well as various methodologies for using these systems (e.g., <ref> [16, 28, 1, 25, 14] </ref>) have been proposed for dealing with such issues. However, such problems are exacerbated by considerations such as nondeterministic or stochastic action effects, the occurrence of exogenous events, incomplete or uncertain knowledge, imprecise observations, and so on. <p> Finally, a stochastic transition function is a function T : S fi A fi S ! <ref> [0; 1] </ref>; the probability of outcome of state t resulting when a is applied at s is Pr (s; a; t) df T (s; a; t), the only requirement being that P t Pr (s; a; t) = 1 for each state s, and action a applicable at s. <p> state space that can be factored in this way will often permit compact representation of actions, as we now explore. 2.2 Situation Calculus The situation calculus (SC) was among the first logical formalisms for representing (deterministic) actions adopted in AI [20] and continues to be the focus of much research <ref> [16, 28, 1, 25, 14] </ref>. We adopt a somewhat simplified version of SC here.
Reference: 2. <author> Craig Boutilier and Richard Dearden. </author> <title> Using abstractions for decision-theoretic planning with time constraints. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, </booktitle> <pages> pages 1016-1022, </pages> <address> Seattle, </address> <year> 1994. </year>
Reference-contexts: Actions are usually referred to as decisions, but for our purposes the two can be considered equivalent. 4 There are a number of other representational methods that deserve analysis (e.g., the event calculus [17], the A language of [12] and its variants, probabilistic STRIPS rules <ref> [18, 2] </ref>, probabilistic Horn rules [24]) which unfortunately we cannot provide here; but see the full paper [6]. 2 Actions: Semantics and Basic Representations 2.1 Semantics Before presenting various representations of actions, we present the semantic model underlying these representations, namely that of discrete transition systems, a view common in dynamical
Reference: 3. <author> Craig Boutilier, Richard Dearden, and Moises Goldszmidt. </author> <title> Exploiting structure in policy construction. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1104-1111, </pages> <address> Montreal, </address> <year> 1995. </year>
Reference-contexts: Only recently there is work attempting to represent regularities in BN matrices [11], and in particular, structures such as logical formulae, decision trees and rooted decision graphs have been explored as compact representations for matrices <ref> [3, 5] </ref>. Examples of representations that capture this regularity are the decision tree and decision graph shown in Figure 2 (b), corresponding to the original CPT for variable B. The broken arrows indicate the persistence relationships that can be added automatically when left unspecified by the user. <p> We have demonstrated that the usual models of stochastic actions have not provided the compact or natural specification methodology provided in the classical/logical setting; but that the use of "automatic" filling in of persistence relationships and the use of the compact CPT representations recently adopted in <ref> [3, 5] </ref> allow solutions to the frame problem of similar size, structure and timbre to Reiter's. In this sense, we have proposed a starting point for a methodology for the natural, compact representation of actions in BNs. <p> in inference is very flexible|standard BN 11 Nondeterministic actions are addressed in, e.g., [15]; the difficulties with correlations are addressed in [4]. algorithms can be used to answer queries with respect to temporal projection and explanation, for action sequences of arbitrary (finite) length, and can be used for plan generation <ref> [3, 27] </ref>. In this regard, an important question is whether the compact representations of actions proposed here can enhance computation for probabilistic queries about the effects of actions, temporal projection, and planning in stochastic domains. <p> Certain aspects of this question are investigated in [5] (in the context of BNs without actions) and <ref> [3] </ref> (with dynamic BNs). Acknowledgements Thanks to David Poole, Nir Friedman and especially all the participants of the 1995 AAAI Spring Symposium on Extending Theories of Action for their spirited and enjoyable discussion of these topics.
Reference: 4. <author> Craig Boutilier and Nir Friedman. </author> <title> Nondeterministic actions and the frame problem. </title> <booktitle> In AAAI Spring Symposium on Extending Theories of Action: Formal Theory and Practical Applications, </booktitle> <pages> pages 39-44, </pages> <address> Stanford, </address> <year> 1995. </year>
Reference-contexts: Finally, we shouldn't forget that BNs are designed to facilitate efficient inference. The use of dynamic BNs in inference is very flexible|standard BN 11 Nondeterministic actions are addressed in, e.g., [15]; the difficulties with correlations are addressed in <ref> [4] </ref>. algorithms can be used to answer queries with respect to temporal projection and explanation, for action sequences of arbitrary (finite) length, and can be used for plan generation [3, 27].
Reference: 5. <author> Craig Boutilier, Nir Friedman, Moises Goldszmidt, and Daphne Koller. </author> <title> Context-specific independence in bayesian networks. </title> <type> (manuscript), </type> <year> 1996. </year>
Reference-contexts: Only recently there is work attempting to represent regularities in BN matrices [11], and in particular, structures such as logical formulae, decision trees and rooted decision graphs have been explored as compact representations for matrices <ref> [3, 5] </ref>. Examples of representations that capture this regularity are the decision tree and decision graph shown in Figure 2 (b), corresponding to the original CPT for variable B. The broken arrows indicate the persistence relationships that can be added automatically when left unspecified by the user. <p> However, one can also use graphs, logical formulae and other representations for CPTs|each has particular advantages and disadvantages with respect to size and speed of inference <ref> [5] </ref>. For example, Poole [24] has used Horn rules with probabilities as a way of representing Bayes nets. <p> We have demonstrated that the usual models of stochastic actions have not provided the compact or natural specification methodology provided in the classical/logical setting; but that the use of "automatic" filling in of persistence relationships and the use of the compact CPT representations recently adopted in <ref> [3, 5] </ref> allow solutions to the frame problem of similar size, structure and timbre to Reiter's. In this sense, we have proposed a starting point for a methodology for the natural, compact representation of actions in BNs. <p> In this regard, an important question is whether the compact representations of actions proposed here can enhance computation for probabilistic queries about the effects of actions, temporal projection, and planning in stochastic domains. Certain aspects of this question are investigated in <ref> [5] </ref> (in the context of BNs without actions) and [3] (with dynamic BNs). Acknowledgements Thanks to David Poole, Nir Friedman and especially all the participants of the 1995 AAAI Spring Symposium on Extending Theories of Action for their spirited and enjoyable discussion of these topics.
Reference: 6. <author> Craig Boutilier and Moises Goldszmidt. </author> <title> A comparison of probabilistic and non-probabilistic action representations. </title> <type> (manuscript), </type> <year> 1995. </year>
Reference-contexts: Space precludes a detailed survey and discussion of the work in this area and a number of interesting issues. We defer such discussion to a longer version of this paper <ref> [6] </ref>, though we will point out some of these issues in the concluding section. <p> two can be considered equivalent. 4 There are a number of other representational methods that deserve analysis (e.g., the event calculus [17], the A language of [12] and its variants, probabilistic STRIPS rules [18, 2], probabilistic Horn rules [24]) which unfortunately we cannot provide here; but see the full paper <ref> [6] </ref>. 2 Actions: Semantics and Basic Representations 2.1 Semantics Before presenting various representations of actions, we present the semantic model underlying these representations, namely that of discrete transition systems, a view common in dynamical systems and control theory, as well as computer science. 5 A transition system consists of a set <p> Space precludes a full discussion of this problem (see <ref> [6] </ref>), but we mention the main issues. Ramifications or domain constraints are synchronic constraints on possible state configurations (as opposed to diachronic constraints of the type we've discussed - that relate features of one state to features of its successor). <p> Thus, the methodology reflected in BNs has an important role to play in informing the extension of classical representations such as SC to handle nondeterministic actions. 11 We discuss this further in <ref> [6] </ref>. Finally, we shouldn't forget that BNs are designed to facilitate efficient inference.
Reference: 7. <author> Thomas Dean and Keiji Kanazawa. </author> <title> A model for reasoning about persistence and causation. </title> <journal> Computational Intelligence, </journal> <volume> 5(3) </volume> <pages> 142-150, </pages> <year> 1989. </year>
Reference-contexts: BNs provide a formal, graphical way of decomposing a state of belief by exploiting probabilistic independence relationships. BNs can also be augmented to represent actions, for instance, using the methods of influence diagrams (IDs) [27, 21], 3 or representa-tions such as two-stage or dynamic BNs <ref> [7] </ref>. <p> The set of states induced by this language consists of 5 Many of the ideas discussed here can be extended to continuous time, continuous state systems (see, e.g., [23] for continuous time extensions of the situation calculus, or <ref> [7] </ref> for continuous time action networks). 6 Clearly if the branching factor b of nondeterministic or stochastic actions is small, sparse matrix methods can be used, requiring size O (jSjb) representations. the set of truth assignments to P, each a possible configuration of the system. 7 A state space that can <p> We refer to [21][Chapter 3] for details. any state, or assignment to pre-action variables. This coincides with the classical view of action representation. Second, such a network is sometimes called a dynamic BN or two-stage BN <ref> [7] </ref>, since it should be viewed as schematic across time. The restriction to two stages (corresponding to states s and do (a; s)) is appropriate given our semantics.
Reference: 8. <author> Thomas Dean and Michael Wellman. </author> <title> Planning and Control. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, </address> <year> 1991. </year>
Reference-contexts: However, such problems are exacerbated by considerations such as nondeterministic or stochastic action effects, the occurrence of exogenous events, incomplete or uncertain knowledge, imprecise observations, and so on. Increasing interest in stochastic and decision theoretic planning <ref> [8, 9] </ref>, with the objective of incorporating the above considerations into planning systems, requires that attention be paid to the natural and effective representation of actions with stochastic effects.
Reference: 9. <author> Steve Hanks (ed.). </author> <title> Decision theoretic planning: </title> <booktitle> Proceedings of the aaai spring symposium. Technical Report SS-94-06, </booktitle> <publisher> AAAI Press, </publisher> <address> Menlo Park, </address> <year> 1994. </year>
Reference-contexts: However, such problems are exacerbated by considerations such as nondeterministic or stochastic action effects, the occurrence of exogenous events, incomplete or uncertain knowledge, imprecise observations, and so on. Increasing interest in stochastic and decision theoretic planning <ref> [8, 9] </ref>, with the objective of incorporating the above considerations into planning systems, requires that attention be paid to the natural and effective representation of actions with stochastic effects.
Reference: 10. <author> Richard E. Fikes and Nils J. Nilsson. </author> <title> Strips: A new approach to the application of theorem proving to problem solving. </title> <journal> Artificial Intelligence, </journal> <volume> 2 </volume> <pages> 189-208, </pages> <year> 1971. </year>
Reference-contexts: Since the earliest attempts to formalize this problem, the straightforward encoding of actions and their effects has been fraught with difficulties, such as the frame, qualification and ramification problems. Representations such as the situation calculus [20] and STRIPS <ref> [10] </ref>, as well as various methodologies for using these systems (e.g., [16, 28, 1, 25, 14]) have been proposed for dealing with such issues.
Reference: 11. <author> Dan Geiger and David Heckerman. </author> <booktitle> Advances in probabilistic reasoning. In Proceedings of the Seventh Conference on Uncertainty in Artificial Intelligence, </booktitle> <pages> pages 118-126, </pages> <address> Los Angeles, </address> <year> 1991. </year>
Reference-contexts: CPTs in BNs are unstructured, and fail to capture the regularities in the action effects that fall out naturally in SC. Only recently there is work attempting to represent regularities in BN matrices <ref> [11] </ref>, and in particular, structures such as logical formulae, decision trees and rooted decision graphs have been explored as compact representations for matrices [3, 5].
Reference: 12. <author> Michael Gelfond and Vladimir Lifschitz. </author> <title> Representing actions in extended logic programming. </title> <editor> In K. Apt, editor, </editor> <booktitle> Proceedings of the Tenth Conference on Logic Programming, </booktitle> <pages> pages 559-573, </pages> <year> 1992. </year>
Reference-contexts: Actions are usually referred to as decisions, but for our purposes the two can be considered equivalent. 4 There are a number of other representational methods that deserve analysis (e.g., the event calculus [17], the A language of <ref> [12] </ref> and its variants, probabilistic STRIPS rules [18, 2], probabilistic Horn rules [24]) which unfortunately we cannot provide here; but see the full paper [6]. 2 Actions: Semantics and Basic Representations 2.1 Semantics Before presenting various representations of actions, we present the semantic model underlying these representations, namely that of discrete
Reference: 13. <author> Ronald A. Howard and James E. </author> <title> Matheson, </title> <editor> editors. </editor> <booktitle> Readings on the Principles and Applications of Decision Analysis. Strategic Decision Group, </booktitle> <address> Menlo Park, CA, </address> <year> 1984. </year>
Reference-contexts: We also point out that, as with our description of the situation calculus, such a BN does not uniquely specify a transition matrix for action a (more in the next section). Finally, influence diagrams (IDs) <ref> [13, 27] </ref> have been used in probabilistic inference and decision analysis to represent decision problems. Similar in structure to BNs, they have additional types of variables, represented by value nodes and decision nodes; we are only interested in decision nodes here.
Reference: 14. <author> G. Neelakantan Kartha. </author> <title> Two counterexamples related to Baker's approach to the frame problem. </title> <journal> Artificial Intelligence, </journal> <volume> 69 </volume> <pages> 379-392, </pages> <year> 1994. </year>
Reference-contexts: Since the earliest attempts to formalize this problem, the straightforward encoding of actions and their effects has been fraught with difficulties, such as the frame, qualification and ramification problems. Representations such as the situation calculus [20] and STRIPS [10], as well as various methodologies for using these systems (e.g., <ref> [16, 28, 1, 25, 14] </ref>) have been proposed for dealing with such issues. However, such problems are exacerbated by considerations such as nondeterministic or stochastic action effects, the occurrence of exogenous events, incomplete or uncertain knowledge, imprecise observations, and so on. <p> state space that can be factored in this way will often permit compact representation of actions, as we now explore. 2.2 Situation Calculus The situation calculus (SC) was among the first logical formalisms for representing (deterministic) actions adopted in AI [20] and continues to be the focus of much research <ref> [16, 28, 1, 25, 14] </ref>. We adopt a somewhat simplified version of SC here.
Reference: 15. <author> G. Neelakantan Kartha and Vladimir Lifschitz. </author> <title> Actions with indirect effects (preliminary report). </title> <booktitle> In Proceedings of the Fourth International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 341-350, </pages> <address> Bonn, </address> <year> 1994. </year>
Reference-contexts: Solutions have been proposed by Lin and Reiter [19], Kartha and Lifschitz <ref> [15] </ref> among others. A domain constraint is represented in a BN as an arc between two post-action variables, representing the dependency between two fluents in a single state. <p> Finally, we shouldn't forget that BNs are designed to facilitate efficient inference. The use of dynamic BNs in inference is very flexible|standard BN 11 Nondeterministic actions are addressed in, e.g., <ref> [15] </ref>; the difficulties with correlations are addressed in [4]. algorithms can be used to answer queries with respect to temporal projection and explanation, for action sequences of arbitrary (finite) length, and can be used for plan generation [3, 27].
Reference: 16. <author> Henry A. Kautz. </author> <title> The logic of persistence. </title> <booktitle> In Proceedings of the Fifth National Conference on Artificial Intelligence, </booktitle> <pages> pages 401-405, </pages> <address> Philadelphia, </address> <year> 1986. </year>
Reference-contexts: Since the earliest attempts to formalize this problem, the straightforward encoding of actions and their effects has been fraught with difficulties, such as the frame, qualification and ramification problems. Representations such as the situation calculus [20] and STRIPS [10], as well as various methodologies for using these systems (e.g., <ref> [16, 28, 1, 25, 14] </ref>) have been proposed for dealing with such issues. However, such problems are exacerbated by considerations such as nondeterministic or stochastic action effects, the occurrence of exogenous events, incomplete or uncertain knowledge, imprecise observations, and so on. <p> state space that can be factored in this way will often permit compact representation of actions, as we now explore. 2.2 Situation Calculus The situation calculus (SC) was among the first logical formalisms for representing (deterministic) actions adopted in AI [20] and continues to be the focus of much research <ref> [16, 28, 1, 25, 14] </ref>. We adopt a somewhat simplified version of SC here.
Reference: 17. <author> R. Kowalski and M. Sergot. </author> <title> A logic-based calculus of events. </title> <journal> New Generation Computing, </journal> <volume> 4(1) </volume> <pages> 67-95, </pages> <year> 1986. </year>
Reference-contexts: Actions are usually referred to as decisions, but for our purposes the two can be considered equivalent. 4 There are a number of other representational methods that deserve analysis (e.g., the event calculus <ref> [17] </ref>, the A language of [12] and its variants, probabilistic STRIPS rules [18, 2], probabilistic Horn rules [24]) which unfortunately we cannot provide here; but see the full paper [6]. 2 Actions: Semantics and Basic Representations 2.1 Semantics Before presenting various representations of actions, we present the semantic model underlying these
Reference: 18. <author> Nicholas Kushmerick, Steve Hanks, and Daniel Weld. </author> <title> An algorithm for probabilistic least-commitment planning. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, </booktitle> <pages> pages 1073-1078, </pages> <address> Seattle, </address> <year> 1994. </year>
Reference-contexts: Actions are usually referred to as decisions, but for our purposes the two can be considered equivalent. 4 There are a number of other representational methods that deserve analysis (e.g., the event calculus [17], the A language of [12] and its variants, probabilistic STRIPS rules <ref> [18, 2] </ref>, probabilistic Horn rules [24]) which unfortunately we cannot provide here; but see the full paper [6]. 2 Actions: Semantics and Basic Representations 2.1 Semantics Before presenting various representations of actions, we present the semantic model underlying these representations, namely that of discrete transition systems, a view common in dynamical
Reference: 19. <author> Fangzhen Lin and Ray Reiter. </author> <title> State constraints revisited. </title> <journal> Journal of Logic and Computation, </journal> <volume> 4(5) </volume> <pages> 655-678, </pages> <year> 1994. </year>
Reference-contexts: Solutions have been proposed by Lin and Reiter <ref> [19] </ref>, Kartha and Lifschitz [15] among others. A domain constraint is represented in a BN as an arc between two post-action variables, representing the dependency between two fluents in a single state. <p> The general ideas used for SC solutions (especially those based on "compiling" ramifications into effect axioms automatically <ref> [19] </ref>) can be applied to the BN case and are discussed in the full paper. 5 Concluding Remarks In this paper we have taken a close look at representational issues in encoding actions in stochastic domains using Bayesian networks.
Reference: 20. <author> John McCarthy and P.J. Hayes. </author> <title> Some philosophical problems from the standpoint of artificial intelligence. </title> <journal> Machine Intelligence, </journal> <volume> 4 </volume> <pages> 463-502, </pages> <year> 1969. </year>
Reference-contexts: Since the earliest attempts to formalize this problem, the straightforward encoding of actions and their effects has been fraught with difficulties, such as the frame, qualification and ramification problems. Representations such as the situation calculus <ref> [20] </ref> and STRIPS [10], as well as various methodologies for using these systems (e.g., [16, 28, 1, 25, 14]) have been proposed for dealing with such issues. <p> P, each a possible configuration of the system. 7 A state space that can be factored in this way will often permit compact representation of actions, as we now explore. 2.2 Situation Calculus The situation calculus (SC) was among the first logical formalisms for representing (deterministic) actions adopted in AI <ref> [20] </ref> and continues to be the focus of much research [16, 28, 1, 25, 14]. We adopt a somewhat simplified version of SC here. <p> Once again, it is usually taken to be desirable not to force the user to have to say a fluent is unaffected in other circumstances, leaving it as a tacit assumption. We call this the problem of persistence of affected fluents (PAF). The frame problem <ref> [20] </ref> is that of easing the user from the burden of having to specify conditions under which an action does not affect a fluent: PUF and PAF are two instances of this problem.
Reference: 21. <author> Judea Pearl. </author> <title> Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, </address> <year> 1988. </year>
Reference-contexts: A number of researchers have adopted for this purpose a very efficient approach to representing and reasoning with probability distributions, namely Bayesian networks (BNs) <ref> [21] </ref>. BNs provide a formal, graphical way of decomposing a state of belief by exploiting probabilistic independence relationships. BNs can also be augmented to represent actions, for instance, using the methods of influence diagrams (IDs) [27, 21], 3 or representa-tions such as two-stage or dynamic BNs [7]. <p> BNs provide a formal, graphical way of decomposing a state of belief by exploiting probabilistic independence relationships. BNs can also be augmented to represent actions, for instance, using the methods of influence diagrams (IDs) <ref> [27, 21] </ref>, 3 or representa-tions such as two-stage or dynamic BNs [7]. <p> Given that states can be factored proposi-tionally, and this distribution is in fact a joint distribution over P, we would like to employ a representation that takes advantage of this factorization. Bayesian networks (BNs) <ref> [21] </ref> are one such representation. 7 Multi-valued random variables are treated similarly. 8 The restriction to unary predicates means that the underlying domain is described using propositions rather than predicates itself. We adopt this merely for simplicity of exposition | rarely is the assumption made in practice. Fig. 1.
Reference: 22. <author> Edwin Pednault. </author> <title> ADL: Exploring the middle ground between STRIPS and the situation calculus. </title> <booktitle> In Proceedings of the First International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 324-332, </pages> <address> Toronto, </address> <year> 1989. </year>
Reference-contexts: Other approaches deal not just with the specification problem, but also with the sheer number of axioms required. One example is the solution proposed by Reiter [25], extending the work of Pednault <ref> [22] </ref> and Schubert [26]. The aim is to directly encode the "assumption" that all conditions under which an action affects a fluent have been listed.
Reference: 23. <author> Javier A. Pinto. </author> <title> Temporal Reasoning in the Situation Calculus. </title> <type> PhD thesis, </type> <institution> University of Toronto, </institution> <year> 1994. </year>
Reference-contexts: We assume that a set of propositional atoms P characterize the system. The set of states induced by this language consists of 5 Many of the ideas discussed here can be extended to continuous time, continuous state systems (see, e.g., <ref> [23] </ref> for continuous time extensions of the situation calculus, or [7] for continuous time action networks). 6 Clearly if the branching factor b of nondeterministic or stochastic actions is small, sparse matrix methods can be used, requiring size O (jSjb) representations. the set of truth assignments to P, each a possible
Reference: 24. <author> David Poole. </author> <title> Probabilistic Horn abduction and Bayesian networks. </title> <journal> Artificial Intelligence, </journal> <volume> 64(1) </volume> <pages> 81-129, </pages> <year> 1993. </year>
Reference-contexts: Actions are usually referred to as decisions, but for our purposes the two can be considered equivalent. 4 There are a number of other representational methods that deserve analysis (e.g., the event calculus [17], the A language of [12] and its variants, probabilistic STRIPS rules [18, 2], probabilistic Horn rules <ref> [24] </ref>) which unfortunately we cannot provide here; but see the full paper [6]. 2 Actions: Semantics and Basic Representations 2.1 Semantics Before presenting various representations of actions, we present the semantic model underlying these representations, namely that of discrete transition systems, a view common in dynamical systems and control theory, as <p> However, one can also use graphs, logical formulae and other representations for CPTs|each has particular advantages and disadvantages with respect to size and speed of inference [5]. For example, Poole <ref> [24] </ref> has used Horn rules with probabilities as a way of representing Bayes nets.
Reference: 25. <author> Raymond Reiter. </author> <title> The frame problem in the situation calculus: A simple solution (sometimes) and a completeness result for goal regression. </title> <editor> In V. Lifschitz, editor, </editor> <booktitle> Artificial Intelligence and Mathematical Theory of Computation (Papers in Honor of John McCarthy), </booktitle> <pages> pages 359-380. </pages> <publisher> Academic Press, </publisher> <address> San Diego, </address> <year> 1991. </year>
Reference-contexts: Since the earliest attempts to formalize this problem, the straightforward encoding of actions and their effects has been fraught with difficulties, such as the frame, qualification and ramification problems. Representations such as the situation calculus [20] and STRIPS [10], as well as various methodologies for using these systems (e.g., <ref> [16, 28, 1, 25, 14] </ref>) have been proposed for dealing with such issues. However, such problems are exacerbated by considerations such as nondeterministic or stochastic action effects, the occurrence of exogenous events, incomplete or uncertain knowledge, imprecise observations, and so on. <p> In this paper, we concentrate on the issues of naturalness and compactness of action specification, and the frame problem in particular, focusing solely on the the situation calculus as the classical action representation, and the relatively elegant treatment of the frame problem proposed by Reiter <ref> [25] </ref>; from the probabilistic side, we deal exclusively with dynamic BNs and IDs. <p> state space that can be factored in this way will often permit compact representation of actions, as we now explore. 2.2 Situation Calculus The situation calculus (SC) was among the first logical formalisms for representing (deterministic) actions adopted in AI [20] and continues to be the focus of much research <ref> [16, 28, 1, 25, 14] </ref>. We adopt a somewhat simplified version of SC here. <p> Other approaches deal not just with the specification problem, but also with the sheer number of axioms required. One example is the solution proposed by Reiter <ref> [25] </ref>, extending the work of Pednault [22] and Schubert [26]. The aim is to directly encode the "assumption" that all conditions under which an action affects a fluent have been listed.
Reference: 26. <author> Lenhart K. Schubert. </author> <title> Monotonic solution of the frame problem in the situation calculus: An efficient method for worlds with fully specified actions. </title> <editor> In H. E. Kyburg, R. P. Loui, and G. N. Carlson, editors, </editor> <booktitle> Knowledge Representation and Defeasible Reasoning, </booktitle> <pages> pages 23-67. </pages> <publisher> Kluwer, </publisher> <address> Boston, </address> <year> 1990. </year>
Reference-contexts: Other approaches deal not just with the specification problem, but also with the sheer number of axioms required. One example is the solution proposed by Reiter [25], extending the work of Pednault [22] and Schubert <ref> [26] </ref>. The aim is to directly encode the "assumption" that all conditions under which an action affects a fluent have been listed.
Reference: 27. <author> Ross D. Shachter. </author> <title> Evaluating influence diagrams. </title> <journal> Operations Research, </journal> <volume> 33(6) </volume> <pages> 871-882, </pages> <year> 1986. </year>
Reference-contexts: BNs provide a formal, graphical way of decomposing a state of belief by exploiting probabilistic independence relationships. BNs can also be augmented to represent actions, for instance, using the methods of influence diagrams (IDs) <ref> [27, 21] </ref>, 3 or representa-tions such as two-stage or dynamic BNs [7]. <p> We also point out that, as with our description of the situation calculus, such a BN does not uniquely specify a transition matrix for action a (more in the next section). Finally, influence diagrams (IDs) <ref> [13, 27] </ref> have been used in probabilistic inference and decision analysis to represent decision problems. Similar in structure to BNs, they have additional types of variables, represented by value nodes and decision nodes; we are only interested in decision nodes here. <p> in inference is very flexible|standard BN 11 Nondeterministic actions are addressed in, e.g., [15]; the difficulties with correlations are addressed in [4]. algorithms can be used to answer queries with respect to temporal projection and explanation, for action sequences of arbitrary (finite) length, and can be used for plan generation <ref> [3, 27] </ref>. In this regard, an important question is whether the compact representations of actions proposed here can enhance computation for probabilistic queries about the effects of actions, temporal projection, and planning in stochastic domains.
Reference: 28. <author> Yoav Shoham. </author> <title> Reasoning About Change: Time and Causation from the Standpoint of Artificial Intelligence. </title> <publisher> MIT Press, </publisher> <address> Cambridge, </address> <year> 1988. </year> <title> This article was processed using the L A T E X macro package with LLNCS style </title>
Reference-contexts: Since the earliest attempts to formalize this problem, the straightforward encoding of actions and their effects has been fraught with difficulties, such as the frame, qualification and ramification problems. Representations such as the situation calculus [20] and STRIPS [10], as well as various methodologies for using these systems (e.g., <ref> [16, 28, 1, 25, 14] </ref>) have been proposed for dealing with such issues. However, such problems are exacerbated by considerations such as nondeterministic or stochastic action effects, the occurrence of exogenous events, incomplete or uncertain knowledge, imprecise observations, and so on. <p> state space that can be factored in this way will often permit compact representation of actions, as we now explore. 2.2 Situation Calculus The situation calculus (SC) was among the first logical formalisms for representing (deterministic) actions adopted in AI [20] and continues to be the focus of much research <ref> [16, 28, 1, 25, 14] </ref>. We adopt a somewhat simplified version of SC here.
References-found: 28

