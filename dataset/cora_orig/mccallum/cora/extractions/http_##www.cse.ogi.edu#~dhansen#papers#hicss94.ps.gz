URL: http://www.cse.ogi.edu/~dhansen/papers/hicss94.ps.gz
Refering-URL: http://www.cse.ogi.edu/~dhansen/html/research.html
Root-URL: http://www.cse.ogi.edu
Title: Using an Object-Oriented Database to Encapsulate Heterogeneous Scientific Data Sources  
Author: David M. Hansen David Maier 
Address: Portland, OR 97291-1000 Portland, OR 97291-1000  
Affiliation: Computer Science Engineering Computer Science Engineering Oregon Graduate Institute Oregon Graduate Institute  
Abstract: We believe that an object-oriented database management system can be used to implement an object-oriented heterogeneous database (OOHDB) that efficiently addresses the problem of heterogeneity among large scientific property databases. The object-oriented data model provides a powerful modeling paradigm for representing complex scientific data. Objects within the OOHDB hide heterogeneity among various data sources. Efficient access to external data is achieved by representing external data with a small amount of data stored within the OOHDB. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Rafiul Ahad. </author> <title> The object shell: An extensible system to define an object-oriented view of an existing database. </title> <booktitle> In Dittrich [4], </booktitle> <pages> pages 174 - 192. </pages>
Reference-contexts: A few researchers have explored using object-oriented languages and database management systems for constructing an HDB <ref> [1, 2, 9, 20, 17] </ref>. The approach taken by these researchers is typified by the ViewSystem developed by Kaul, Drosten, and Neuhold [9]. The ViewSys-tem takes an "integrated" approach, where the object-oriented schema provides an integrating global schema for data drawn from the external data sources.
Reference: [2] <author> Tim Connors and Peter Lyngback. </author> <title> Providing uniform access to heterogeneous information bases. </title> <booktitle> In Dittrich [4], </booktitle> <pages> pages 162 - 173. </pages>
Reference-contexts: A few researchers have explored using object-oriented languages and database management systems for constructing an HDB <ref> [1, 2, 9, 20, 17] </ref>. The approach taken by these researchers is typified by the ViewSystem developed by Kaul, Drosten, and Neuhold [9]. The ViewSys-tem takes an "integrated" approach, where the object-oriented schema provides an integrating global schema for data drawn from the external data sources.
Reference: [3] <author> Bogdan Czejdo and Malcolm Taylor. </author> <title> Integration of database systems using an object-oriented approach. </title> <editor> In Kambayashi et al. </editor> <volume> [8], </volume> <pages> pages 30 - 37. </pages>
Reference-contexts: The approach we present in this paper attempts to provide the efficiency of Aurora's imported files, while using little more space than Aurora's registered files. 2.2 Object-Oriented HDB Research The notion of using an object-oriented model for the development of a heterogeneous database is relatively new <ref> [13, 14, 16, 3, 10] </ref>. A few researchers have explored using object-oriented languages and database management systems for constructing an HDB [1, 2, 9, 20, 17]. The approach taken by these researchers is typified by the ViewSystem developed by Kaul, Drosten, and Neuhold [9].
Reference: [4] <author> K.R. Dittrich, </author> <title> editor. </title> <booktitle> Advances in Object-Oriented Database Systems, volume 334 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <month> September </month> <year> 1988. </year>
Reference: [5] <author> James C. French, Anita K. Jones, and John L. Pfaltz. </author> <title> Report of the first invitational NSF workshop on scientific database management (final report). </title> <type> Technical Report 90-21, </type> <institution> University of Vir-ginia, </institution> <address> Charlottesville, VA, </address> <month> August </month> <year> 1990. </year>
Reference-contexts: Many of these data sources can be characterized as large, slowly changing databases of chemical and physical property values. Integrating data from these databases is a difficult task primarily because relevant data is available in a variety of heterogeneous data sources <ref> [5] </ref>. This paper presents an object-oriented heterogeneous database (OOHDB) architecture for accessing large, heterogeneous databases of scientific property data. Crystallography, a sub-domain of materials science, is being used as a test domain for the OOHDB.
Reference: [6] <editor> Jerry S. Glazman and John R. Rumble, editors. </editor> <booktitle> Computerization and Networking of Materials Data Bases. </booktitle> <address> ASTM, Philadelphia, PA, </address> <year> 1989. </year>
Reference: [7] <author> Gregory A. Jirak. Aurora dataserver. </author> <title> Submitted to IEEE Visualization '93 Workshop on Database Issues for Data Visualization, </title> <month> July </month> <year> 1993. </year>
Reference-contexts: The HDB translates queries into sub-queries over the local schemas of the component databases. The component databases execute the sub-queries and return selected data to the HDB for integration as shown in Figure 1. The Aurora Dataserver for visualization applications <ref> [7] </ref> is an example of an integrated approach that provides access to large scientific datasets. Figure 2 depicts the Aurora architecture. Importer/exporter procedures provide transparent access to datasets from various sources in a variety of formats. Visualization applications access the data using a common application program interface.
Reference: [8] <author> Y. Kambayashi, M. Rusinkiewicz, and A. Sheth, </author> <title> editors. </title> <booktitle> First International Workshop on Interoperability in Multidatabase Systems, </booktitle> <address> Kyoto, Japan, April 1991. </address> <publisher> IEEE Computer Society, IEEE Computer Society Press. </publisher>
Reference: [9] <author> M. Kaul, K. Drosten, and E.J. Neuhold. Viewsys-tem: </author> <title> Integrating heterogeneous information bases by object-oriented views. </title> <booktitle> In Sixth International Conference on Data Engineering, </booktitle> <pages> pages 2 - 10, </pages> <address> Los Angeles, CA, </address> <month> February </month> <year> 1990. </year> <booktitle> IEEE Computer Society, </booktitle> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: A few researchers have explored using object-oriented languages and database management systems for constructing an HDB <ref> [1, 2, 9, 20, 17] </ref>. The approach taken by these researchers is typified by the ViewSystem developed by Kaul, Drosten, and Neuhold [9]. The ViewSys-tem takes an "integrated" approach, where the object-oriented schema provides an integrating global schema for data drawn from the external data sources. <p> A few researchers have explored using object-oriented languages and database management systems for constructing an HDB [1, 2, 9, 20, 17]. The approach taken by these researchers is typified by the ViewSystem developed by Kaul, Drosten, and Neuhold <ref> [9] </ref>. The ViewSys-tem takes an "integrated" approach, where the object-oriented schema provides an integrating global schema for data drawn from the external data sources. Classes that correspond to external data sources are "non-materialized" in that no data is stored within the OOHDB. <p> However, an external database whose capabilities are more limited may only be capable of returning entire record structures. Like the Aurora Dataserver, the authors observe that One extreme example is that of flat files which can only be loaded completely or not at all <ref> [9, p.6] </ref>. The problem with this approach is that it relies on the capabilities of the external data management software to provide query and data retrieval capabilities.
Reference: [10] <author> Qing Li and Dennis McLeod. </author> <title> An object-oriented approach to federated databases. </title> <editor> In Kambayashi et al. </editor> <volume> [8], </volume> <pages> pages 64 - 70. </pages>
Reference-contexts: The approach we present in this paper attempts to provide the efficiency of Aurora's imported files, while using little more space than Aurora's registered files. 2.2 Object-Oriented HDB Research The notion of using an object-oriented model for the development of a heterogeneous database is relatively new <ref> [13, 14, 16, 3, 10] </ref>. A few researchers have explored using object-oriented languages and database management systems for constructing an HDB [1, 2, 9, 20, 17]. The approach taken by these researchers is typified by the ViewSystem developed by Kaul, Drosten, and Neuhold [9].
Reference: [11] <author> Witold Litwin and Abdelaziz Abdellatif. </author> <title> Mul--tidatabase interoperability. </title> <journal> IEEE Computer, </journal> <volume> 19(12):10 - 18, </volume> <month> December </month> <year> 1986. </year>
Reference-contexts: The interoperable approach has been popular with commercial vendors since it does not attempt to integrate data selected from component databases, leaving that task to the user. The Multics Relational Data Store Multidatabase (MRDSM) was an early research prototype of an interoperable HDB <ref> [11] </ref>. Today a number of commercial relational database management systems provide "interoperable"-style access to other vendor's databases through query translation mechanisms such as Ingres' Gateways and the Open Server from Sybase [19].
Reference: [12] <author> David Maier and Bennet Vance. </author> <title> A call to order. </title> <editor> In Kenneth A. Ross, editor, </editor> <booktitle> Proceedings of the Twelfth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, </booktitle> <pages> pages 1 - 16, </pages> <address> Washington, DC, May 1993. </address> <publisher> ACM Press. </publisher>
Reference-contexts: Scientific data sources are also logically heterogeneous. Logical heterogeneity is especially common among scientific databases because popular data models, such as the relational model, are not well-suited for modeling complex scientific data and do not adequately support common requirements such as ordered collections of data elements <ref> [12] </ref>. So scientific databases use customized, non-standard data models. There are many forms of logical heterogeneity among models for the same domain. For example, different data sources may store the same attribute with different units of measure. In addition, complex interrelationships exist among attributes.
Reference: [13] <author> Frank Manola. </author> <title> Applications of object-oriented database technology in knowledge-based integrated information systems. </title> <editor> In Amar Gupta, editor, </editor> <title> Integration of Information Systems: Bridging Heterogeneous Databases, </title> <booktitle> Selected Reprint Series, </booktitle> <pages> pages 126 - 134. </pages> <publisher> IEEE Press, </publisher> <address> New York, </address> <year> 1989. </year>
Reference-contexts: The approach we present in this paper attempts to provide the efficiency of Aurora's imported files, while using little more space than Aurora's registered files. 2.2 Object-Oriented HDB Research The notion of using an object-oriented model for the development of a heterogeneous database is relatively new <ref> [13, 14, 16, 3, 10] </ref>. A few researchers have explored using object-oriented languages and database management systems for constructing an HDB [1, 2, 9, 20, 17]. The approach taken by these researchers is typified by the ViewSystem developed by Kaul, Drosten, and Neuhold [9].
Reference: [14] <author> John L. McCarthy. </author> <title> Information systems design for material properties data. </title> <booktitle> In Glazman and Rumble [6], </booktitle> <pages> pages 135 - 150. </pages>
Reference-contexts: The approach we present in this paper attempts to provide the efficiency of Aurora's imported files, while using little more space than Aurora's registered files. 2.2 Object-Oriented HDB Research The notion of using an object-oriented model for the development of a heterogeneous database is relatively new <ref> [13, 14, 16, 3, 10] </ref>. A few researchers have explored using object-oriented languages and database management systems for constructing an HDB [1, 2, 9, 20, 17]. The approach taken by these researchers is typified by the ViewSystem developed by Kaul, Drosten, and Neuhold [9].
Reference: [15] <institution> NIST standard reference data products catalog, </institution> <year> 1992. </year>
Reference-contexts: The objects added to the OOHDB include sufficient information for accessing the external database and retrieving attribute data from that database on-demand (i.e., a unique "key"). For example, the initial scan of the NBS Crystal Database (distributed by the National Institute of Standards and Technology <ref> [15] </ref>) results in the creation of 145,281 Crystal objects along with associated UnitCell , ReducedUnitCell , and JournalReference objects.
Reference: [16] <author> F. Saltor, M. Castellanos, and M. Garcia-Solaco. </author> <title> Suitability of data models as canonical models for federated databases. </title> <editor> In Arie Segev, editor, </editor> <booktitle> SIGMOD Record Special Issue: Semantic Issues in Multidatabase Systems, </booktitle> <volume> volume 20, </volume> <pages> pages 44 - 48. </pages> <publisher> ACM Press, </publisher> <month> December </month> <year> 1991. </year>
Reference-contexts: The approach we present in this paper attempts to provide the efficiency of Aurora's imported files, while using little more space than Aurora's registered files. 2.2 Object-Oriented HDB Research The notion of using an object-oriented model for the development of a heterogeneous database is relatively new <ref> [13, 14, 16, 3, 10] </ref>. A few researchers have explored using object-oriented languages and database management systems for constructing an HDB [1, 2, 9, 20, 17]. The approach taken by these researchers is typified by the ViewSystem developed by Kaul, Drosten, and Neuhold [9].
Reference: [17] <author> Ming-Chien Shan. </author> <title> Pegasus architecture and design principles. </title> <editor> In Peter Buneman and Sushil Ja-jodia, editors, </editor> <booktitle> Proceedings of the 1993 ACM SIG-MOD International Conference on Management of Data, </booktitle> <volume> volume 22, </volume> <pages> pages 422 - 425, </pages> <address> Washing-ton, DC, </address> <month> June </month> <year> 1993. </year> <title> Association for Computing Machinery, </title> <publisher> ACM Press. </publisher>
Reference-contexts: A few researchers have explored using object-oriented languages and database management systems for constructing an HDB <ref> [1, 2, 9, 20, 17] </ref>. The approach taken by these researchers is typified by the ViewSystem developed by Kaul, Drosten, and Neuhold [9]. The ViewSys-tem takes an "integrated" approach, where the object-oriented schema provides an integrating global schema for data drawn from the external data sources.
Reference: [18] <author> John Miles Smith, Philip A. Bernstein, Umesh-war Dayal, Nathan Goodman, Terry Landers, Ken W. T. Lin, and Eugene Wong. </author> <title> Multibase integrating heterogeneous distributed database systems. </title> <booktitle> In AFIPS Proceedings of the National Computer Conference, volume 50, </booktitle> <address> Reston, VA, </address> <year> 1981. </year> <booktitle> American Federation of Information Processing Societies, </booktitle> <publisher> Inc., AFIPS Press. </publisher>
Reference-contexts: The integrated or "federated" approach is characterized by the use of a single global schema that integrates data from the component databases as typified by Multibase <ref> [18] </ref>. In an integrated HDB, queries are posed against a global schema maintained by the HDB. The HDB translates queries into sub-queries over the local schemas of the component databases. The component databases execute the sub-queries and return selected data to the HDB for integration as shown in Figure 1.
Reference: [19] <author> Gomer Thomas, Glenn R. Thompson, Chin-Wan Chung, Edward Barkmeyer, Fred Carter, Mar-jorie Templeton, Stephen Fox, and Berl Hart-man. </author> <title> Heterogeneous distributed database systems for production use. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(3):237 - 265, </volume> <month> September </month> <year> 1990. </year>
Reference-contexts: The Multics Relational Data Store Multidatabase (MRDSM) was an early research prototype of an interoperable HDB [11]. Today a number of commercial relational database management systems provide "interoperable"-style access to other vendor's databases through query translation mechanisms such as Ingres' Gateways and the Open Server from Sybase <ref> [19] </ref>. The integrated or "federated" approach is characterized by the use of a single global schema that integrates data from the component databases as typified by Multibase [18]. In an integrated HDB, queries are posed against a global schema maintained by the HDB.
Reference: [20] <author> Henry R. Tirri, Jagannathan Srinivasan, and Bharat Bhargava. </author> <title> Integrating distributed data sources using federated objects. </title> <editor> In M. Tamer Ozsu, Umeshwar Dayal, and Patrick Valduriez, editors, </editor> <booktitle> Pre-Proceedings of the International Workshop on Distributed Object Management, </booktitle> <pages> pages 292 - 306, </pages> <address> Edmonton, Canada, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: A few researchers have explored using object-oriented languages and database management systems for constructing an HDB <ref> [1, 2, 9, 20, 17] </ref>. The approach taken by these researchers is typified by the ViewSystem developed by Kaul, Drosten, and Neuhold [9]. The ViewSys-tem takes an "integrated" approach, where the object-oriented schema provides an integrating global schema for data drawn from the external data sources.
References-found: 20

