URL: ftp://garovix.ijs.si/pub/papers/bz/ev95.ps.gz
Refering-URL: http://www-ai.ijs.si/BlazZupan/papers.html
Root-URL: 
Phone: 2  
Title: Stability Analysis of Real-Time Systems: Porting Crisp Methods to Fuzzy "Static Stability Analysis Method for
Author: Blaz Zupan Albert Mo Kim Cheng Marko Bohanec J. Stefan 
Keyword: real-time decision systems, stability analysis, rule-based programs, fuzzy-logic control, hierarchical rule-base decomposition  
Note: This is an extended version of the paper  submitted to AIRTC'95 conference by the same authors.  
Address: Jamova 39, 61000 Ljubljana, Slovenia.  Houston, Houston, TX 77204-3475, U.S.A.  
Affiliation: Institute,  University of  
Abstract: This paper shows how the analysis tools built for crisp real-time rule-based system might be used for fuzzy systems as well. Major difference of the two are crisp/fuzzy interpretation of variables and operations on them, and sequential/parallel interpretation of rule firing. We propose an analysis method that takes a fuzzy system and extends it with rules that account for the difference of the results of parallel and sequential firing. An extended system can then be analyzed with the tools that rely on sequential rule-firing interpretation. In addition, we show that only minor changes of crisp stability analysis tools are necessary to enable their use for such extended fuzzy systems. fl Support for this effort was generously provided by the Ministry of Science and Technology of the Republic of Slovenia. Albert M. K. Cheng is supported in part by the National Science Foundation under Award No. CCR-9111563, by the Texas Advanced Research Program under Grant No. 3652270, and by a grant from the Institute of Space Systems Operations. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> A fuzzy logic symposium: </editor> <title> a collection of papers. </title> <journal> IEEE Expert, </journal> <month> August </month> <year> 1994. </year> <month> 18 </month>
Reference-contexts: Recently and to a large extent in this decade, rule-based expert systems using fuzzy set theory were presented to efficiently alleviate the else necessary discretization while maintaining the representational capabilities of simple decision rules (cf. <ref> [1, 9] </ref>). The majority of fuzzy systems use rules that map input to output variables directly. There are no system variables and no rule-chaining as in the conventional rule-based systems (cf. [7]).
Reference: [2] <author> J.-R. Chen and A. M. K. Cheng. </author> <title> Predicting the response time of OPS5-style produc-tion systems. </title> <booktitle> In IEEE Conf. on Artificial Intelligence for Applications, </booktitle> <address> Los Angeles, CA, </address> <month> February </month> <year> 1995. </year>
Reference-contexts: Recently, different analysis and optimization tools have been developed in order to facilitate the use of these systems in real-time environments. These include stability and response time analysis tools <ref> [5, 2] </ref>, rule-based program parallel decomposition tools [4], and response-time optimization methods [15]. The above methods all address crisp rule-based systems that in general use variables with finite set of values. Input values to such systems are usually a discrete interpretation of continuous values obtained from sensor readings.
Reference: [3] <author> J.-R. Chen and A. M. K. Cheng. </author> <title> Response time analysis of EQL real-time rule-based systems. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 7(1), </volume> <month> February </month> <year> 1995. </year>
Reference-contexts: Other, more complex sets of constraints were proposed and proven to identify stable EQL programs. Listing other, in general more complex constraint sets identified and published up-to-date is beyond the scope of this paper and an interested reader should refer to <ref> [5, 3] </ref>. The Estella tools may play an important part of a rule-based system life cycle. It provides a rule-base engineer the capability to analyze the rule-base, identifying conflict rules that may cause the cycles.
Reference: [4] <author> A. M. K. Cheng. </author> <title> Parallel execution of real-time rule-based systems. </title> <booktitle> In Proc. IEEE Int. Parallel Processing Symposium, </booktitle> <pages> pages 779-789, </pages> <address> Newport Beach, CA, </address> <month> April </month> <year> 1993. </year>
Reference-contexts: Recently, different analysis and optimization tools have been developed in order to facilitate the use of these systems in real-time environments. These include stability and response time analysis tools [5, 2], rule-based program parallel decomposition tools <ref> [4] </ref>, and response-time optimization methods [15]. The above methods all address crisp rule-based systems that in general use variables with finite set of values. Input values to such systems are usually a discrete interpretation of continuous values obtained from sensor readings. <p> Even though in EQL a set of rules might fire in parallel, this is just because any order of sequential firing of the rules from the set would result in the same final state due to independency of rules (see <ref> [4] </ref>). The basic interpretation of firing in EQL is thus still sequential. Within EQLf, all the rules that are enabled are fired in parallel. The results of each of the firing are then combined to form a single system's state. <p> For example, the method that takes an equational crisp rule-base, identifies the independent groups of rules, and builds a high level dependency (HLD) graph for the groups is described in <ref> [4] </ref>. The HLD graph serves the purpose of both hierarchical decomposition of crisp rule-base and identification of blocks of rules that might be executed in parallel.
Reference: [5] <author> A. M. K. Cheng, J. C. Browne, A. K. Mok, and R.-H. Wang. </author> <title> Analysis of real-time rule-based system with behavioral constraint assertions specified in Estella. </title> <journal> IEEE Transactions on Software Engineering, </journal> 19(19) 863-885, September 1993. 
Reference-contexts: Recently, different analysis and optimization tools have been developed in order to facilitate the use of these systems in real-time environments. These include stability and response time analysis tools <ref> [5, 2] </ref>, rule-based program parallel decomposition tools [4], and response-time optimization methods [15]. The above methods all address crisp rule-based systems that in general use variables with finite set of values. Input values to such systems are usually a discrete interpretation of continuous values obtained from sensor readings. <p> The weakness of this approach is in the prohibitive size of state-space graphs, which were proved to be potentially of very high complexity, and the analysis problem to be PSPACE-hard [10]. A different and more efficient approach was proposed in <ref> [5] </ref>. This uses sets of behavioral constraints specified in the Estella language. If all rules satisfy these constraints the program is found to be stable. Constraints in Estella use statically determined information about the system. <p> Other, more complex sets of constraints were proposed and proven to identify stable EQL programs. Listing other, in general more complex constraint sets identified and published up-to-date is beyond the scope of this paper and an interested reader should refer to <ref> [5, 3] </ref>. The Estella tools may play an important part of a rule-based system life cycle. It provides a rule-base engineer the capability to analyze the rule-base, identifying conflict rules that may cause the cycles. <p> For the second couple of rules, the enabling conditions relate to two different variables and can (potentially) be both enabled at the same time instance. Rules that cannot be potentially enabled at the same time have mutually exclusive enabling conditions. Within the Estella analysis tools <ref> [5] </ref> this is an important and frequently 13 Procedure Expand 2 Begin Foreach rule i in EQLf' Do R = frule j, i 6= j, where rules i and j are not mutually exclusiveg R = R [ fig V = fv, v appears in LHS of assignments part of at <p> This definition is only slightly different from the one Estella uses for crisp systems <ref> [5] </ref>. In general, we believe that changes to Estella to be used for fuzzy interpretation of the rules would be minor, since most of the constraints are described in similar form as used in the above definition. <p> Even if one changes only the mutual exclusivity and potential enable relationships, she has most of the already implemented Estella constraint sets <ref> [5] </ref> immediately available for fuzzy systems analysis. For these reason, and for the reason that Estella is a powerful language and one can define and implement her own constraints of her choice, we do not extend the descriptions of fuzzy implementation of Estella constraints any further.
Reference: [6] <author> E. M. Clarke, E. A. Emerson, and A. P. Sistla. </author> <title> Automatic verification of finite-state concurrent system using temporal logic specifications. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 8(2) </volume> <pages> 244-263, </pages> <month> April </month> <year> 1986. </year>
Reference-contexts: A state-space graph is then analyzed by specifying the constraints in the computational tree logic language and verified with the methodology proposed in <ref> [6] </ref>. The weakness of this approach is in the prohibitive size of state-space graphs, which were proved to be potentially of very high complexity, and the analysis problem to be PSPACE-hard [10]. A different and more efficient approach was proposed in [5].
Reference: [7] <author> Charles Elkan. </author> <title> The paradoxical success of fuzzy logic. </title> <journal> IEEE Expert, </journal> <pages> pages 3-8, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: The majority of fuzzy systems use rules that map input to output variables directly. There are no system variables and no rule-chaining as in the conventional rule-based systems (cf. <ref> [7] </ref>). Though the advantages of this approach are several [13], the fundamental reason for not using complex (deep, model based) fuzzy expert systems with rule chaining might be the lack of stability and response-time analysis tools. This paper presents a fuzzy extension (EQLf) of crisp equational logic (EQL) rule-based systems.
Reference: [8] <author> Bart Kosko. </author> <title> Neural Networks and Fuzzy Systems. </title> <publisher> Prentice-Hall, </publisher> <address> New Jersey, </address> <year> 1992. </year>
Reference-contexts: Namely, after firing, for each of the fuzzy variables that were affected in the assignment parts, the effects of assignments are combined together to obtain a single fuzzy set. This is a composition process and can use standard superimposition methods <ref> [8, pp.313-314] </ref>. After each EQLf parallel firing step a resulting state is checked for the new set of rules being enabled, and if such is found, a new parallel rule firing takes place. Thus, in contrast to rule firing, rule chaining is sequential in EQLf. <p> At this point, the variables that form the decision vector are assigned crisp numbers. This is done using defuzzification methods such as CENTEROID or MAX <ref> [8, p.315] </ref>. To be able to analyze the stability and employ existing Estella techniques (Sec.2.2) we allow EQLf rules' enabling conditions to use operators AND, OR, and NOT, and those that can be expressed by any combination of these.
Reference: [9] <author> Bart Kosko. </author> <title> Fuzzy Thinking: </title> <booktitle> The New Science of Fuzzy Logic, chapter FAMS in Practice: Fuzzy Products, </booktitle> <pages> pages 180-190. </pages> <address> Hyperion, New York, </address> <year> 1993. </year>
Reference-contexts: Recently and to a large extent in this decade, rule-based expert systems using fuzzy set theory were presented to efficiently alleviate the else necessary discretization while maintaining the representational capabilities of simple decision rules (cf. <ref> [1, 9] </ref>). The majority of fuzzy systems use rules that map input to output variables directly. There are no system variables and no rule-chaining as in the conventional rule-based systems (cf. [7]).
Reference: [10] <author> A. K. Mok. </author> <title> Formal analysis of real-time equational rule-based systems. </title> <booktitle> In Proc. 10th Real-Time Systems Symposium (RTSS), </booktitle> <month> December </month> <year> 1989. </year>
Reference-contexts: This cycle then causes a 6 possible instability of the system and has to be avoided by either changing or removing the rules. Stability analysis is usually not as trivial as in our example. Early work <ref> [10] </ref> suggested an analysis approach based on a state-space graph. A state-space graph of an EQL program is a labeled directed graph where nodes store the state information (any combination of values of variables), and vertices represent rule firing information. <p> The weakness of this approach is in the prohibitive size of state-space graphs, which were proved to be potentially of very high complexity, and the analysis problem to be PSPACE-hard <ref> [10] </ref>. A different and more efficient approach was proposed in [5]. This uses sets of behavioral constraints specified in the Estella language. If all rules satisfy these constraints the program is found to be stable. Constraints in Estella use statically determined information about the system. <p> This inhibits the use of analysis methods based on state-space techniques that would rely on single-rule firing interpretation but on fuzzy evaluation of the enabling conditions. This is unfortunate, since it would else be straightforward to adapt the techniques mentioned in <ref> [10] </ref> to be used for fuzzy systems analysis. The analysis of crisp EQL systems relies on both single-rule firing and interpretation and crisp evaluation of the enabling conditions.
Reference: [11] <author> C. A. O'Reilly and A. S. Cromatry. </author> <title> "Fast" is not "real-time": Designing effective real-time AI system. </title> <editor> In John F. Gilmore, editor, </editor> <booktitle> Applications of Artificial Intelligence, volume 548 of SPIE, </booktitle> <pages> pages 249-257, </pages> <year> 1985. </year>
Reference-contexts: 1 Introduction Given an embedded rule-based expert system, one can attach a flag "real-time" to it if the later proves that the system satisfies required timing constraints. In other words, embedded real-time systems are not required to be fast, but to be "fast enough" <ref> [11] </ref>. Most of all, for any combination of input variables' values, such systems have to derive their decisions in a finite time, i.e., they have to be stable. Thus, for the real-time system, a formal proof of stability is required.
Reference: [12] <author> K. Tanaka and M. Sugeno. </author> <title> Stability analysis and design of fuzzy control systems. </title> <journal> Fuzzy Sets and Systems, </journal> <volume> 45(2) </volume> <pages> 135-156, </pages> <year> 1992. </year>
Reference-contexts: For EQLf to be used in real-time environments a stability analysis is required. The paper shows how to adapt stability analysis methods previously used for crisp rule-based systems for this purpose. Our use of the term "stability" is essentially different as that defined in <ref> [12] </ref>. There, the authors propose a stability analysis of fuzzy control systems that is based on Lyapunov's direct method and has its origins in the analysis methods for linear systems. They define 3 an equilibrium of fuzzy system to be an asymptotically stable state. <p> The hierarchical decomposition technique using an HLD graph might be thus directly applicable for fuzzy rule-base systems. The block structuring of fuzzy systems is not a new idea (cf. <ref> [12] </ref>) and the HLD based method might help in the discovery of unforeseen hierarchy and rule independency within a fuzzy rule base. We believe that there are other methods either from the fuzzy or crisp rule-based systems worlds that can be modified and used within both domains.
Reference: [13] <author> N. Vadiee and M. Jamshidi. </author> <title> The promising future of fuzzy logic. </title> <journal> IEEE Expert, </journal> <month> August </month> <year> 1994. </year> <month> 19 </month>
Reference-contexts: The majority of fuzzy systems use rules that map input to output variables directly. There are no system variables and no rule-chaining as in the conventional rule-based systems (cf. [7]). Though the advantages of this approach are several <ref> [13] </ref>, the fundamental reason for not using complex (deep, model based) fuzzy expert systems with rule chaining might be the lack of stability and response-time analysis tools. This paper presents a fuzzy extension (EQLf) of crisp equational logic (EQL) rule-based systems.
Reference: [14] <author> Lotfi A. Zadeh. </author> <title> Why the success of fuzzy logic is not paradoxical. </title> <journal> IEEE Expert, </journal> <pages> pages 43-45, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: We have presented a fuzzy extension of the equational logic real-time rule-based system. The pay-off for high representational capabilities of fuzzy systems (see <ref> [14] </ref>) is an increase in computational complexity. Crisp systems use simpler representation and are potentially 16 view.

References-found: 14

