URL: http://www.cs.cmu.edu/~dreyer/syv96.ps
Refering-URL: http://www.cs.cmu.edu/~dreyer/
Root-URL: 
Email: (syverson@itd.nrl.navy.mil)  
Title: Limitations on Design Principles for Public Key Protocols  
Author: Paul Syverson 
Address: Washington, DC 20375  
Affiliation: Center for High Assurance Computer Systems Naval Research Laboratory  
Abstract: Recent papers have taken a new look at cryptographic protocols from the perspective of proposing design principles. For years the main approach to cryptographic protocols has been logical, and a number of papers have examined the limitations of those logics. This paper takes a similar cautionary look at the design principal approach. Limitations and exceptions are offered on some of the previously given basic design principals. The focus is primarily on public key protocols, especially on the order of signature and encryption. But, other principles are discussed as well. Apparently secure protocols that fail to meet principles are presented. Also presented are new attacks on protocols as well as previously claimed attacks which are not. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Abadi and R. Needham. </author> <title> Prudent Engineering Practice for Cryptographic Protocols. </title> <booktitle> In Proceedings of the 1994 IEEE Computer Society Symposium on Security and Privacy, </booktitle> <pages> pages 122-136. </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> California, </address> <year> 1994. </year>
Reference-contexts: We will return to coin flips below. More recently there has been some emphasis on providing general requirements [5, 29, 30] and design principles <ref> [1, 2] </ref> for cryptographic protocols. Design principles have been put forth not only for producing secure protocols but also for producing protocols whose security is easy to evaluate [17]. <p> And if Alice simply sends ff At T 1 Alice authorizes a salary increase for Bob from $X to $X + $5000 g K 1 a g K b none of these attacks are possible. Tsang and John's recommendation runs contrary to design principles of <ref> [1] </ref> (and, as we will see presently, design principles of [2]). This leads to their incorrect recommendation. In the next section, we will begin to look at protocols that are exceptions to these design principles. 3. <p> Furthermore, the same problem that arose in the auction attack because of the use of hashing in digital signatures arises for these attacks as well. 6. Does it Pay to be Explicit? Explicitness is the "overarching principle of which others are in some sense instances" [2]. In <ref> [1] </ref> it is given as Principle 10: If an encoding is used to present the meaning of a message, then it should be possible to tell which encoding is being used.
Reference: [2] <author> R. Anderson and R. Needham. </author> <title> Robustness Principles for Public Key Protocols. </title> <editor> In D. Coppersmith, editor, </editor> <booktitle> Advances in Cryptology | CRYPTO `95, volume 963 of Lecture Notes in Computer Science, </booktitle> <pages> pages 236-247. </pages> <publisher> Springer Verlag, </publisher> <address> Berlin, </address> <year> 1995. </year>
Reference-contexts: We will return to coin flips below. More recently there has been some emphasis on providing general requirements [5, 29, 30] and design principles <ref> [1, 2] </ref> for cryptographic protocols. Design principles have been put forth not only for producing secure protocols but also for producing protocols whose security is easy to evaluate [17]. <p> In section 3 we discuss the often reasonable principle that signing messages before encrypting is the order to follow in maintaining nonre-pudiability. We look at a putative attack from <ref> [2] </ref> on a CCITT X.509 protocol message due to encryption prior to signing. <p> Tsang and John's recommendation runs contrary to design principles of [1] (and, as we will see presently, design principles of <ref> [2] </ref>). This leads to their incorrect recommendation. In the next section, we will begin to look at protocols that are exceptions to these design principles. 3. Is it OK to Sign Encrypted Messages? Expanding on Abadi and Needham's fifth principle, the first principle set forth by Anderson and Needham in [2] <p> <ref> [2] </ref>). This leads to their incorrect recommendation. In the next section, we will begin to look at protocols that are exceptions to these design principles. 3. Is it OK to Sign Encrypted Messages? Expanding on Abadi and Needham's fifth principle, the first principle set forth by Anderson and Needham in [2] is: Principle 1: Sign before encrypting. If a signature is affixed to encrypted data, then one cannot assume that the signer has any knowledge of the data. A third party certainly cannot assume that the signature is authentic, so nonrepudiation is lost. <p> Furthermore, the same problem that arose in the auction attack because of the use of hashing in digital signatures arises for these attacks as well. 6. Does it Pay to be Explicit? Explicitness is the "overarching principle of which others are in some sense instances" <ref> [2] </ref>. In [1] it is given as Principle 10: If an encoding is used to present the meaning of a message, then it should be possible to tell which encoding is being used.
Reference: [3] <author> S. Bellovin and M. Merritt. </author> <title> Encrypted Key Exchange: Password-Based Protocols Secure Against Dictionary Attacks. </title> <booktitle> In Proceedings of the IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <pages> pages 72-84. </pages> <publisher> IEEE CS Press, Los Alamitos, </publisher> <address> California, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: But, there are perfectly good protocols that violate these principles. In fact, some even derive their strength largely from their violation of these principles. Protocols have been proposed that are resistant to attacks based on guessing poorly chosen keys or passwords <ref> [3, 4, 16, 15] </ref>. These work largely by having the plaintext contents of encrypted messages be unrecognizable.
Reference: [4] <author> S. Bellovin and M. Merritt. </author> <title> Augmented Encrypted Key Exchange: A Password-Based Protocol Secure Against Dictionary Attacks and Password File Compromise. </title> <booktitle> In Proceedings of the First ACM Conference on Computer and Communications Security, </booktitle> <pages> pages 244-250. </pages> <publisher> ACM Press, </publisher> <address> New York, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: But, there are perfectly good protocols that violate these principles. In fact, some even derive their strength largely from their violation of these principles. Protocols have been proposed that are resistant to attacks based on guessing poorly chosen keys or passwords <ref> [3, 4, 16, 15] </ref>. These work largely by having the plaintext contents of encrypted messages be unrecognizable.
Reference: [5] <author> R. Bird, I. Gopal, A. Herzberg, P. Janson, S. Kut-ten, R. Molva, and M. Yung. </author> <title> Systematic Design of a Family of Attack-Resistant Protocols. </title> <journal> IEEE Journal on Selected Areas in Communication, </journal> <volume> 11(5) </volume> <pages> 679-693, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: We will return to coin flips below. More recently there has been some emphasis on providing general requirements <ref> [5, 29, 30] </ref> and design principles [1, 2] for cryptographic protocols. Design principles have been put forth not only for producing secure protocols but also for producing protocols whose security is easy to evaluate [17].
Reference: [6] <author> C. Boyd and W. Mao. </author> <title> On a Limitation of BAN Logic. </title> <editor> In T. Helleseth, editor, </editor> <booktitle> Advances in Cryptology | EU-ROCRYPT `93, volume 765 of Lecture Notes in Computer Science, </booktitle> <pages> pages 240-247. </pages> <publisher> Springer Verlag, </publisher> <address> Berlin, </address> <year> 1994. </year>
Reference-contexts: Logical methods have been applied to protocol analysis almost as long. In fact, some of these logics (especially BAN logic [7]) have themselves been subject to a good deal of analysis, e.g., <ref> [14, 31, 26, 6, 35] </ref>. Burrows et al. were careful to provide a number of caveats about the limitations of their logic in [7]. But, this has not precluded a number of confused applications or misapplications of the logic.
Reference: [7] <author> M. Burrows, M. Abadi, and R. Needham. </author> <title> A Logic of Authentication. </title> <type> Research Report 39, </type> <institution> Digital Systems Research Center, </institution> <month> February </month> <year> 1989. </year> <title> Parts and versions of this material have been presented in many places including ACM Transactions on Computer Systems, </title> <booktitle> 8(1): </booktitle> <pages> 18-36, </pages> <month> Feb. </month> <year> 1990. </year> <note> All references herein are to the SRC Research Report 39 as revised Feb. 22, </note> <year> 1990. </year>
Reference-contexts: And, analysis and modelling techniques for evaluating cryptographic protocols have been researched for well more than a decade (e.g, [9, 19]). Logical methods have been applied to protocol analysis almost as long. In fact, some of these logics (especially BAN logic <ref> [7] </ref>) have themselves been subject to a good deal of analysis, e.g., [14, 31, 26, 6, 35]. Burrows et al. were careful to provide a number of caveats about the limitations of their logic in [7]. <p> In fact, some of these logics (especially BAN logic <ref> [7] </ref>) have themselves been subject to a good deal of analysis, e.g., [14, 31, 26, 6, 35]. Burrows et al. were careful to provide a number of caveats about the limitations of their logic in [7]. But, this has not precluded a number of confused applications or misapplications of the logic. What the papers just cited have done is map out in more detail the boundaries of what BAN logic can be applied to and what one can conclude from such application. <p> Furthermore, the attack does not illustrate any weakness in the protocol for sending confidential information to Bob. (That Bob cannot correctly infer that this information came from Alice is well known, independent of this attack <ref> [7, 21] </ref>.) The Anderson-Needham attack is based on the assumption that Alice could otherwise be held accountable for the contents of fY g K b . But, such an assumption is not justified.
Reference: [8] <author> CCITT. </author> <title> X.509 and ISO 9594-8 The Directory| Authentication Framework, </title> <month> March </month> <year> 1988. </year>
Reference-contexts: But, such criticism cuts both ways. The example that Anderson and Needham use to illustrate their Principle 1 is itself unrealistic. Unlike Tsang and John, Anderson and Needham have chosen a real protocol, or at least a real proposal, viz: CCITT X.509 <ref> [8] </ref>. What is problematic in this case is not the protocol but the application of their attack to it. The general protocol form they attack is as follows: Alice sends ffM g K b g K 1 a , an encrypted then signed message, to Bob. <p> The `low price' key is given to E, and the `high price' key is registered for use with Invoice. Both of these attacks involve significant implementation assumptions. Keys are expected to be registered and handled along the lines of X.509 <ref> [8] </ref>. Thus, timing issues like those that affected the Anderson-Needham attack on X.509 are a factor here as well. For E's attack, he would need to make sure that the key given to S is revoked and replaced prior to service provision by the key used to acknowledge fewer items.
Reference: [9] <author> R. DeMillo, N. Lynch, and M. Merritt. </author> <title> Cryptographic Protocols. </title> <booktitle> In Proceedings of the Fourteenth ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 383-400. </pages> <publisher> ACM Press, </publisher> <address> New York, </address> <year> 1982. </year>
Reference-contexts: 1. Introduction Protocols employing cryptography for key distribution, authenticated and/or confidential data exchange, and a host of other applications have been around for a long time. And, analysis and modelling techniques for evaluating cryptographic protocols have been researched for well more than a decade (e.g, <ref> [9, 19] </ref>). Logical methods have been applied to protocol analysis almost as long. In fact, some of these logics (especially BAN logic [7]) have themselves been subject to a good deal of analysis, e.g., [14, 31, 26, 6, 35].
Reference: [10] <author> Y. Desmedt, P. Landrock, A. Lenstra, K. McCurley, A. Odlyzko, R. rueppel, and M. Snid. </author> <note> The Eurocrypt `92 Controverial Issue: </note> <editor> Trapdoor Primes and Moduli. In R. Reuppel, editor, </editor> <booktitle> Advances in Cryptology | EU-ROCRYPT `92, volume 658 of Lecture Notes in Computer Science, </booktitle> <pages> pages 194-199. </pages> <publisher> Springer Verlag, </publisher> <address> Berlin, </address> <year> 1993. </year>
Reference-contexts: So, timing features of messages and certificates will not preclude such an attack. However, the consensus amongst the panelists in the paper they cite is that the odds on finding trapdoor moduli that are both useful and hard to detect are currently negligible <ref> [10] </ref>. A variant on Anderson and Needham's RSA-based attack on X.509 might still be possible.
Reference: [11] <author> Y. Ding and P. Horster. </author> <title> Undetectable On-line Password Guessing Attacks. </title> <journal> Operating Systems Review, </journal> <volume> 29(4) </volume> <pages> 77-86, </pages> <year> 1995. </year>
Reference-contexts: Note that even when designing a protocol specifically to guard against guessing attacks spotting the oracle can be difficult <ref> [11] </ref>. 7. Conclusions We have looked at a number of protocols and attacks thereon, ones that illustrate stated design principles and ones that serve as exceptions to them.
Reference: [12] <author> T. ElGamal. </author> <title> A Public-Key Cryptosystem and a Signature Scheme Based on Discrete Logarithms. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-31(4):469-472, </volume> <month> July </month> <year> 1985. </year>
Reference-contexts: So, the attack is detectable solely from data that Bob himself would produce in attempting the fraud. Anderson and Needham also present an attack based on using ElGamal encryption <ref> [12] </ref> with `trapdoor' moduli. These can be chosen independently of any message to be attacked. So, timing features of messages and certificates will not preclude such an attack.
Reference: [13] <author> M. Franklin and M. Reiter. </author> <title> The Design and Implementation of a Secure Auction Service. </title> <booktitle> In Proceedings of the 1995 IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <pages> pages 2-14. </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> Califor-nia, </address> <year> 1995. </year>
Reference-contexts: This provides further rule-of-thumb incentive to follow Anderson and Need-ham's recommendation to sign before encrypting. Note that the secure auction service of Franklin and Reiter <ref> [13] </ref> is not vulnerable to such an attack. First, since digital money must be put up against any bid in their auction, the attack requires the active participation of a bank.
Reference: [14] <author> V. Gligor, R. Kailar, S. Stubblebine, and L. Gong. </author> <title> Logics for Cryptographic Protocols | Virtues and Limitations. </title> <booktitle> In Proceedings of the Computer Security Foundations Workshop IV, </booktitle> <pages> pages 219-226. </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> California, </address> <year> 1991. </year>
Reference-contexts: Logical methods have been applied to protocol analysis almost as long. In fact, some of these logics (especially BAN logic [7]) have themselves been subject to a good deal of analysis, e.g., <ref> [14, 31, 26, 6, 35] </ref>. Burrows et al. were careful to provide a number of caveats about the limitations of their logic in [7]. But, this has not precluded a number of confused applications or misapplications of the logic.
Reference: [15] <author> L. Gong. </author> <title> Optimal Authentication Protocols Resistant to Password Guessing Attacks. </title> <booktitle> In Proceedings of the Eighth Computer Security Foundations Workshop, </booktitle> <pages> pages 24-29. </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> California, </address> <year> 1995. </year>
Reference-contexts: But, there are perfectly good protocols that violate these principles. In fact, some even derive their strength largely from their violation of these principles. Protocols have been proposed that are resistant to attacks based on guessing poorly chosen keys or passwords <ref> [3, 4, 16, 15] </ref>. These work largely by having the plaintext contents of encrypted messages be unrecognizable.
Reference: [16] <author> L. Gong, M. Lomas, R. Needham, and J. Saltzer. </author> <title> Protecting Poorly Chosen Secrets Against Guessing Attacks. </title> <journal> IEEE Journal on Selected Areas in Communication, </journal> <volume> 11(5) </volume> <pages> 648-656, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: But, there are perfectly good protocols that violate these principles. In fact, some even derive their strength largely from their violation of these principles. Protocols have been proposed that are resistant to attacks based on guessing poorly chosen keys or passwords <ref> [3, 4, 16, 15] </ref>. These work largely by having the plaintext contents of encrypted messages be unrecognizable.
Reference: [17] <author> L. Gong and P. Syverson. </author> <title> Fail-Stop Protocols: An Approach to Designing Secure Protocols. </title> <booktitle> In Pre-proceedings of DCCA-5: Fifth International Working Conference on Dependable Computing for Critical Applications, </booktitle> <pages> pages 44-55, </pages> <address> Urban-Champaign, Illinois, </address> <month> September </month> <year> 1995. </year>
Reference-contexts: More recently there has been some emphasis on providing general requirements [5, 29, 30] and design principles [1, 2] for cryptographic protocols. Design principles have been put forth not only for producing secure protocols but also for producing protocols whose security is easy to evaluate <ref> [17] </ref>. This paper will attempt to explore some limitations of the design principle approach to cryptographic protocols similar to the way that limitations on logical analysis were explored in the works cited above. One cannot fairly criticize the design principle approach simply because exceptions are found to the principles. <p> Abadi and Needham introduce Principle 10 by noting, "It seems important that principals recognize messages for what they are, and can associate them correctly with the current step of whatever protocol they are executing." This is also the guiding idea behind other explicitness principles, e.g., Gong's fail-stop protocols <ref> [17] </ref> and the causal consistency criterion of [32]. But, there are perfectly good protocols that violate these principles. In fact, some even derive their strength largely from their violation of these principles.
Reference: [18] <author> R. Kailar. </author> <title> Reasoning About Accountability in Protocols for Electronic Commerce. </title> <booktitle> In Proceedings of the 1995 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 236-250. </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> California, </address> <year> 1995. </year>
Reference-contexts: In [23], a number of alternative transaction protocols for IBS are presented including some based entirely on public key cryptography. The protocol we examine was not ultimately recommended for use; however, this was due to considerations other than security vulnerabilities. It was also examined in <ref> [18] </ref> for accountability guarantees. Some redundancies were found but no security or accountability problems. This protocol takes place between three principals: end user, E, service provider, S, and billing server, B. It occurs in three phases, pricing assurance, service provision, and invoice confirmation and payment.
Reference: [19] <author> M. Merritt. </author> <title> Cryptographic Protocols. </title> <type> PhD thesis, </type> <institution> Georgia Institute of Technology, </institution> <year> 1983. </year>
Reference-contexts: 1. Introduction Protocols employing cryptography for key distribution, authenticated and/or confidential data exchange, and a host of other applications have been around for a long time. And, analysis and modelling techniques for evaluating cryptographic protocols have been researched for well more than a decade (e.g, <ref> [9, 19] </ref>). Logical methods have been applied to protocol analysis almost as long. In fact, some of these logics (especially BAN logic [7]) have themselves been subject to a good deal of analysis, e.g., [14, 31, 26, 6, 35].
Reference: [20] <author> J. Moore. </author> <title> Protocol Failures in Cryptosystems. </title> <booktitle> In Contemporary Cryptology, chapter 11, </booktitle> <pages> pages 541-558. </pages> <publisher> IEEE Press, Los Alamitos, </publisher> <address> California, </address> <year> 1992. </year>
Reference-contexts: When presenting this protocol Schneier offers RSA as an example for which it does hold. This is an overstatement. It only holds for RSA if there is a common modulus. Normally, a common modulus can lead to attacks <ref> [20] </ref>. In this particular application none of those attacks apply; however, it is possible to construct one that does. Before discussing the attack, we note that the random strings in M 1 and M 2 are unnecessary.
Reference: [21] <author> J. Nechvatal. </author> <title> Public Key Cryptography. </title> <booktitle> In Contemporary Cryptology, chapter 4, </booktitle> <pages> pages 177-288. </pages> <publisher> IEEE Press, Los Alamitos, </publisher> <address> California, </address> <year> 1992. </year>
Reference-contexts: Furthermore, the attack does not illustrate any weakness in the protocol for sending confidential information to Bob. (That Bob cannot correctly infer that this information came from Alice is well known, independent of this attack <ref> [7, 21] </ref>.) The Anderson-Needham attack is based on the assumption that Alice could otherwise be held accountable for the contents of fY g K b . But, such an assumption is not justified.
Reference: [22] <author> B. C. Neuman. </author> <title> Proxy-based Authorization and Accounting for Distributed Systems. </title> <booktitle> In Proceedings of the 13 th Int. Conf. on Distributed Computing Systems, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: Tsang and John's example seems implausible. After all, any real world authorization for salary increase includes a unique identifier for the person receiving the increase such as a full name, employee ID number, etc. There are bearer authorizations, messages which apply to the bearer of that message <ref> [22] </ref>, but these are used in contexts where a bearer instrument is appropriate. And, the point of the example is to show that the message is transferable in an unintended way.
Reference: [23] <author> K. R. O'Toole. </author> <title> The Internet Billing Server: Transaction Protocol Alternatives. </title> <type> Technical Report INI TR 1994-1, </type> <institution> Carnegie Mellon University Information Networking Institute, </institution> <month> April </month> <year> 1994. </year>
Reference-contexts: That is outside the scope of this paper. Another response is to demonstrate a similar attack on a published protocol. The Internet Billing Server (IBS), under development at Carnegie Mellon is intended to provide billing services for service providers on the Internet. In <ref> [23] </ref>, a number of alternative transaction protocols for IBS are presented including some based entirely on public key cryptography. The protocol we examine was not ultimately recommended for use; however, this was due to considerations other than security vulnerabilities. It was also examined in [18] for accountability guarantees. <p> S's attack is even trickier since the key associated with the invoice might need to be valid at the time that E signed message 3. All the details of key management are not discussed in <ref> [23] </ref>. The protocol has not been pursued in development of the IBS, and the ones that have been pursued are not subject to this kind of attack. Thus, any speculation we make about the feasibility of these attacks on this protocol must remain on the hypothetical level.
Reference: [24] <author> R. Rivest, A. Shamir, and L. Adleman. </author> <title> A Method for Obtaining Digital Signatures. </title> <journal> Communications of the ACM, </journal> <volume> 21 </volume> <pages> 120-126, </pages> <year> 1978. </year>
Reference-contexts: What is problematic in this case is not the protocol but the application of their attack to it. The general protocol form they attack is as follows: Alice sends ffM g K b g K 1 a , an encrypted then signed message, to Bob. In the example, RSA <ref> [24] </ref> is used, and some particulars of the algorithm are relevant.
Reference: [25] <author> B. Schneier. </author> <title> Applied Cryptography. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: In section 4 we use the technique of the just mentioned attack to construct an attack on a coin-flip protocol from <ref> [25] </ref>. We also illustrate how difficult it can be to spot oracles by using this to attack oblivious transfer in an unexpected way. In section 5 we construct the most surprising attack based on the Anderson-Needham technique. <p> This does not mean that Principle 1 is incorrect for most straightforward cases. It does mean that Principle 1 should not be followed blindly. 4. Is it OK to Encrypt Encrypted Messages? Consider the following coin-flip protocol given in <ref> [25] </ref>. Alice and Bob choose keys K a and K b . Al-ice appends a random string to `heads' and another to `tails' forming M 1 and M 2 (not necessarily respectively). She encrypts these with K a and sends them to Bob.
Reference: [26] <author> E. Snekkenes. </author> <title> Exploring the BAN Approach to Protocol Analysis. </title> <booktitle> In Proceedings of the 1991 IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <pages> pages 171-181. </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> California, </address> <year> 1991. </year>
Reference-contexts: Logical methods have been applied to protocol analysis almost as long. In fact, some of these logics (especially BAN logic [7]) have themselves been subject to a good deal of analysis, e.g., <ref> [14, 31, 26, 6, 35] </ref>. Burrows et al. were careful to provide a number of caveats about the limitations of their logic in [7]. But, this has not precluded a number of confused applications or misapplications of the logic. <p> What the papers just cited have done is map out in more detail the boundaries of what BAN logic can be applied to and what one can conclude from such application. This can prove valuable. For example, in <ref> [26] </ref>, Snekkenes showed that the results of BAN analysis is the same for any two protocols containing the same set of messages regardless of the order in which they are sent. (The sender and receiver of each message is nonetheless expected to stay the same.) To illustrate this, consider a coin-flip
Reference: [27] <author> S. Stubblebine. </author> <title> Recent-Secure Authentication: Enforcing Revocation in Distributed Systems. </title> <booktitle> In Proceedings of the 1995 IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <pages> pages 224-235. </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> Califor-nia, </address> <year> 1995. </year>
Reference-contexts: Otherwise this could be compared to the key Bob claims is the right public key and seen to be different. Second, Alice would have to fail to receive a certificate revocation for (e b ; n b ). This puts Bob's attack under potentially impossible time constraints. (Cf. <ref> [27] </ref> for a discussion of relevant issues.) Even if Alice does not receive such a revocation, the existence of certificates for two keys, both valid at the time Alice sends her message, should call into question any obligation Alice might have based on her signature on that message.
Reference: [28] <author> S. Stubblebine and V. Gligor. </author> <title> On Message Integrity in Cryptographic Protocols. </title> <booktitle> In Proceedings of the 1992 IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <pages> pages 85-104. </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> California, </address> <year> 1992. </year>
Reference-contexts: It is unclear why they think this should be a problem. They also cite integrity concerns, but integrity of signed and encrypted messages is generally assumed to be addressed on another level of analysis. (Cf. <ref> [28] </ref> for a discussion of integrity issues in cryptographic protocols.) That the signer of a message need not be the originator of the message is widely recognized. Even if we do not employ the obvious solution just mentioned, we still need not resort to principals signing encrypted plaintext.
Reference: [29] <author> P. Syverson and C. Meadows. </author> <title> A Logical Language for Specifying Cryptographic Protocol Requirements. </title> <booktitle> In Proceedings of the 1993 IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <pages> pages 165-177. </pages> <publisher> IEEE Computer Society Press, </publisher> <address> Los Alami-tos, California, </address> <year> 1993. </year>
Reference-contexts: We will return to coin flips below. More recently there has been some emphasis on providing general requirements <ref> [5, 29, 30] </ref> and design principles [1, 2] for cryptographic protocols. Design principles have been put forth not only for producing secure protocols but also for producing protocols whose security is easy to evaluate [17].
Reference: [30] <author> P. Syverson and C. Meadows. </author> <title> Formal Requirements for Key Distribution Protocols. </title> <editor> In A. D. Santis, editor, </editor> <booktitle> Advances in Cryptology | EUROCRYPT `94, volume 950 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer Verlag, </publisher> <address> Berlin, </address> <year> 1995. </year>
Reference-contexts: We will return to coin flips below. More recently there has been some emphasis on providing general requirements <ref> [5, 29, 30] </ref> and design principles [1, 2] for cryptographic protocols. Design principles have been put forth not only for producing secure protocols but also for producing protocols whose security is easy to evaluate [17].
Reference: [31] <author> P. F. Syverson. </author> <title> The Use of Logic in the Analysis of Cryptographic Protocols. </title> <booktitle> In Proceedings of the 1991 IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <pages> pages 156-170. </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> California, </address> <year> 1991. </year>
Reference-contexts: Logical methods have been applied to protocol analysis almost as long. In fact, some of these logics (especially BAN logic [7]) have themselves been subject to a good deal of analysis, e.g., <ref> [14, 31, 26, 6, 35] </ref>. Burrows et al. were careful to provide a number of caveats about the limitations of their logic in [7]. But, this has not precluded a number of confused applications or misapplications of the logic.
Reference: [32] <author> P. F. Syverson. </author> <title> Adding Time to a Logic of Authentication. </title> <booktitle> In Proceedings of the First ACM Conference on Computer and Communications Security, </booktitle> <pages> pages 97-101. </pages> <publisher> ACM Press, </publisher> <address> New York, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: 10 by noting, "It seems important that principals recognize messages for what they are, and can associate them correctly with the current step of whatever protocol they are executing." This is also the guiding idea behind other explicitness principles, e.g., Gong's fail-stop protocols [17] and the causal consistency criterion of <ref> [32] </ref>. But, there are perfectly good protocols that violate these principles. In fact, some even derive their strength largely from their violation of these principles. Protocols have been proposed that are resistant to attacks based on guessing poorly chosen keys or passwords [3, 4, 16, 15].
Reference: [33] <author> M.-J. Toussaint. </author> <title> Separating the Specification and Implementation Phases in Cryptology. </title> <editor> In Y. Deswarte, G. Eizenberg, and J.-J. Quisquater, editors, </editor> <booktitle> Computer Security | ESORICS 92, volume 648 of Lecture Notes in Computer Science, </booktitle> <pages> pages 77-101. </pages> <publisher> Springer Verlag, </publisher> <address> Berlin, </address> <year> 1992. </year>
Reference-contexts: The r ij also prevent an outside intruder from substituting messages from parallel sessions between Alice and Bob to cause them to get different results from the flip. (Roughly similar attacks on roughly similar protocols are discussed in <ref> [33] </ref>.) The second subscript in the r ij indicates additional information that is assumed to be included (clearly) in the message.
Reference: [34] <author> W. Tsang and J. John. </author> <title> A Neglected Aspect of Digital Signatures. </title> <type> Technical Report, </type> <institution> Dept. of Information Systems and Computer Science, National University of Singapore, </institution> <month> May </month> <year> 1987. </year>
Reference-contexts: Though we will make some other points, we will proceed primarily by examining principles involving the encryption of signed data and/or the signing of encrypted data. The remainder of the paper procedes as follows. In section 2 we discuss a protocol message from <ref> [34] </ref> that putatively fails because it is signed before encrypting rather than vice versa. We provide a solution to the failure that is both more reasonable at maintaining accountability and more computationally efficient than the solution in [34]. <p> In section 2 we discuss a protocol message from <ref> [34] </ref> that putatively fails because it is signed before encrypting rather than vice versa. We provide a solution to the failure that is both more reasonable at maintaining accountability and more computationally efficient than the solution in [34]. In section 3 we discuss the often reasonable principle that signing messages before encrypting is the order to follow in maintaining nonre-pudiability. We look at a putative attack from [2] on a CCITT X.509 protocol message due to encryption prior to signing. <p> The attack on the auction protocol shows that even full explicitness does not prevent substitution. And, we discuss protocols for which explicitness is antithetical to design goals. 2. Is it OK to Encrypt Signed Messages? In <ref> [34] </ref>, Tsang and John considered a protocol in which principal A sends a message to B that is signed with A's signature key and then encrypted with B's public key. <p> Conclusions We have looked at a number of protocols and attacks thereon, ones that illustrate stated design principles and ones that serve as exceptions to them. In section 2 we saw that, contrary to the recommendations of <ref> [34] </ref>, nonrepudiation of basic message content is usually better preserved by encrypting before signing, rather than vice versa. In section 3 we saw that there are other motivations for protocols involving digital signatures than nonrepudiation. Thus, the sign-before-encrypting principle of Anderson and Needham may not be fully general. <p> Make sure you have a good reason for doing so in each case. Acknowledgements I would like to thank Cathy Meadows and the anonymous referees for helpful comments on a draft of this paper, Li Gong for making me aware of <ref> [34] </ref>, and Paul van Oorschot, Li Gong and Cathy Meadows for helpful discussions.
Reference: [35] <author> P. C. van Oorschot. </author> <title> An Alternate Explanation of two BAN-logic "failures". </title> <editor> In T. Helleseth, editor, </editor> <booktitle> Advances in Cryptology | EUROCRYPT `93, volume 765 of Lecture Notes in Computer Science, </booktitle> <pages> pages 443-447. </pages> <publisher> Springer Verlag, </publisher> <address> Berlin, </address> <year> 1994. </year>
Reference-contexts: Logical methods have been applied to protocol analysis almost as long. In fact, some of these logics (especially BAN logic [7]) have themselves been subject to a good deal of analysis, e.g., <ref> [14, 31, 26, 6, 35] </ref>. Burrows et al. were careful to provide a number of caveats about the limitations of their logic in [7]. But, this has not precluded a number of confused applications or misapplications of the logic.
References-found: 35

