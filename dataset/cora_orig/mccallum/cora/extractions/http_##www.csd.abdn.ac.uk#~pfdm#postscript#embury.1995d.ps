URL: http://www.csd.abdn.ac.uk/~pfdm/postscript/embury.1995d.ps
Refering-URL: http://www.csd.abdn.ac.uk/~pgray/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: E-Mail: fsmejpgrayg@csd.abdn.ac.uk  
Title: AUCS/TR9507 Database Object Creation Subject to Constraint Rules Using a Constraint Logic Search Engine  
Author: Suzanne M. Embury and Peter M.D. Gray 
Date: 30 June 1995  
Web: URL: http://www.csd.abdn.ac.uk/~pfdm  
Address: Aberdeen, Scotland, AB9 2UE  
Affiliation: Department of Computing Science King's College, University of Aberdeen  
Abstract: The P/FDM object database is based on a semantic data model in which stored data is integrated with derived data which is computed by Prolog rules retrieved from the class descriptors stored in the database. These rules may also be inherited. They are generated from declarative definitions expressed in the functional data language Daplex. Other Prolog rules are generated from integrity constraints expressed as invariant Daplex expressions, and these rules are triggered by relevant updates, and used to check semantic integrity. We are interested in using complex updates as part of design work. Thus, we do not execute update actions immediately following failure of a triggered rule, since these may in turn trigger other failures and knock-on actions, giving rise to anomalous rule behaviour. Instead we ask a constraint solver to find a set of values which consistently satisfy all the constraints. This set of values is then committed as a single update action. This paper describes how information from constraints (both semantic and structural) is compiled into constraint logic form for the CHIP constraint solver, and how information on the generated objects is fed back. The system is This report is an expanded version of the paper entitled "Planning Complex Updates to Satisfy Constraint Rules Using a Constraint Logic Search Engine", to appear "Proceedings of 2nd International Workshop on Rules in Databases (RIDS'95)", T. Sellis (ed.), Athens, September 1995, Springer-Verlag LNCS Series. implemented and has re-used significant parts of the Daplex query language parser and optimiser.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Aggoun and N. Beldiceanu. </author> <title> Extending CHIP in Order to Solve Complex Scheduling and Placement Problems. </title> <type> COSYTEC Internal Report, </type> <institution> Parc Club Orsay-Universite, Orsay, France. </institution>
Reference-contexts: In particular, we would like to be able to apply the global (or higher-order) constraints, such as the cumulative and diffn and cycle constraints, which have proven key to CHIP's success in solving large, real-world problems <ref> [1] </ref>. In the longer term, our aim is to make use of the facilities for automatically generating CHIP code described above to generate CLP descriptions of transaction repair problems [11].
Reference: [2] <author> M. Atkinson, F. Bancilhon, D. DeWitt, K. Dittrich, D. Maier, and S. Zdonik. </author> <title> The Object-Oriented Database System Manifesto. </title> <editor> In W. Kim, J.-M. Nicolas, and S. Nishio, editors, </editor> <booktitle> Proceedings of 1st International Conference on Deductive and Object-Oriented Databases, </booktitle> <pages> pages 223-240, </pages> <address> Kyoto, Japan, </address> <month> May </month> <year> 1989. </year> <institution> North Holland/Elsevier Science Publishers (1990). </institution>
Reference: [3] <author> A. Brodsky, J. Jaffar, and M.J. Maher. </author> <title> Toward Practical Constraint Databases. </title> <editor> In R. Agrawal, S. Baker, and D. Bell, editors, </editor> <booktitle> VLDB 93 Conference, </booktitle> <pages> pages 567-580, </pages> <address> Dublin, 1993. </address> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference-contexts: These systems, however, are concerned with answering queries, rather than with using constraints to build solutions in the database. The LCDB system (Linear Constraint DataBase) <ref> [3] </ref> uses a variant of SQL in order to describe the creation of new relations which contain tuples satisfying a given set of linear arithmetic constraints. <p> Programs in this language have the general form: CONSTRUCT a (X1, ..., Xn) FROM b1 (args), ..., bk (args) WHERE constraints1 (args) OR FROM c1 (args), ..., cl (args) WHERE constraints2 (args) OR ... (Taken from <ref> [3] </ref>, p.570) The main contribution of the LCDB system is that it recognises that both constraint handling and database access techniques must be combined, in order to solve constraint problems over large data sets in practical time-scales. Their own evaluation strategy consequently combines novel indexing techniques with constraint reasoning.
Reference: [4] <editor> C. Delobel, M. Kifer, and Y. Masunaga, editors. </editor> <booktitle> Second International Conference on Deductive and Object-Oriented Databases, </booktitle> <address> Munich, </address> <month> December </month> <year> 1991. </year> <note> Springer-Verlag. </note>
Reference: [5] <author> S.M. Embury. </author> <title> Constraint-Based Updates in a Functional Data Model Database. </title> <type> PhD thesis, </type> <institution> University of Aberdeen, King's College, </institution> <address> Aberdeen, Scotland, </address> <month> July </month> <year> 1994. </year>
Reference: [6] <author> S.M. Embury. </author> <title> A Formal Semantics for the Daplex Language. </title> <type> Technical Report AUCS/TR9504, </type> <institution> University of Aberdeen, Dept. of Computing Science, King's College, Ab-erdeen, U.K., </institution> <month> March </month> <year> 1995. </year>
Reference: [7] <author> S.M. Embury and P.M.D. Gray. </author> <title> Compiling a Declarative, High-Level Language for Semantic Integrity Constraints. </title> <editor> In R. Meersman and L. Mark, editors, </editor> <booktitle> Proceedings of 6th IFIP TC-2 Working Conference on Data Semantics, </booktitle> <address> Atlanta, USA, </address> <month> May </month> <year> 1995. </year> <note> Chapman and Hall. To Appear. </note>
Reference: [8] <author> S.M. Embury and P.M.D. Gray. </author> <title> Compiling Angelic Daplex into CHIP. </title> <note> In preparation, </note> <year> 1995. </year>
Reference: [9] <author> S.M. Embury, P.M.D. Gray, </author> <title> and N.D. Bassiliades. Constraint Maintenance Using Generated Methods in the P/FDM Object-Oriented Database. </title> <booktitle> In Paton and Williams [23], </booktitle> <pages> pages 364-381. </pages>
Reference: [10] <author> R.W. Floyd. </author> <title> Nondeterministic Algorithms. </title> <journal> Journal of the ACM, </journal> <volume> 14(4) </volume> <pages> 636-644, </pages> <month> October </month> <year> 1967. </year>
Reference: [11] <author> P. Fraternali and S. Paraboschi. </author> <title> A Review of Repair Techniques for Integrity Maintenance. </title> <booktitle> In Paton and Williams [23], </booktitle> <pages> pages 332-346. </pages>
Reference-contexts: In the longer term, our aim is to make use of the facilities for automatically generating CHIP code described above to generate CLP descriptions of transaction repair problems <ref> [11] </ref>. Transaction repair is the process of automatically generating a sequence of update operations that will restore validity to a database at the end of a transaction in which integrity constraints have been violated. Previous approaches to this problem have been based on active rules [28] and deductive rules [20].
Reference: [12] <author> P.M.D. Gray, K.G. Kulkarni, and N.W. Paton. </author> <title> Object-Oriented Databases: a Semantic Data Model Approach. </title> <publisher> Prentice Hall Series in Computer Science. Prentice Hall International Ltd., </publisher> <year> 1992. </year>
Reference: [13] <author> P.M.D. Gray, N.W. Paton, G.J.L. Kemp, and J.E. Fothergill. </author> <title> An Object-Oriented Database for Protein Structure Analysis. </title> <journal> Protein Engineering, </journal> <volume> 3 </volume> <pages> 235-243, </pages> <year> 1990. </year>
Reference: [14] <author> P. Van Hentenryck. </author> <title> Constraint Satisfaction in Logic Programming. </title> <publisher> MIT Press, </publisher> <year> 1989. </year>
Reference: [15] <author> R. Hull and R. King. </author> <title> Semantic Data Modelling: Survey, Applications and Research Issues. </title> <journal> ACM Computing Surveys, </journal> <volume> 19(3) </volume> <pages> 201-260, </pages> <month> September </month> <year> 1987. </year>
Reference: [16] <author> T. Imielinski, S. Naqvi, and K. Vadaparty. </author> <title> Incomplete Objects | a Data Model for Design and Planning Applications. </title> <editor> In J. Clifford and R. King, editors, </editor> <booktitle> SIGMOD 91 Conference, </booktitle> <pages> pages 288-297, </pages> <address> Denver, Colorado, </address> <month> May </month> <year> 1991. </year> <note> ACM Press. 19 </note>
Reference-contexts: introduction of constraints into deductive databases, One of the earliest examples was the or-type of Imielinski, Naqvi and Vadaparty <ref> [16] </ref>, which allows database attributes to be specified as a disjunction of possible values, rather than as a single, known value.
Reference: [17] <author> T. Imielinski, S. Naqvi, and K. Vadaparty. </author> <title> Querying Design and Planning Databases. </title> <editor> In Delobel et al. </editor> <volume> [4], </volume> <pages> pages 524-545. </pages>
Reference-contexts: An example of this kind of hypothetical query might be "does an allocation of classes to teachers exist, in which no teacher takes more than three classes per week?" Such queries, expressed in a version of Datalog, can be evaluated using standard SLD-resolution <ref> [17] </ref>. Other work [26] has used an adaptation of the 14 Magic Sets approach to evaluate queries involving parametrised constraints.
Reference: [18] <author> K.G. Kulkarni. </author> <title> Object-Oriented Extensions in SQL3: a Status Report. In R.T. </title> <editor> Snodgrass and M. Winslett, editors, </editor> <booktitle> SIGMOD 94 Conference, </booktitle> <pages> page 478, </pages> <address> Minneapolis, USA, May 1994. </address> <publisher> ACM Press. </publisher>
Reference: [19] <author> S. Leishman. </author> <title> ChipLink User Manual. </title> <type> Technical report, </type> <institution> University of Aberdeen, Dept. of Computing Science, King's College, Aberdeen, U.K., </institution> <year> 1995. </year>
Reference: [20] <author> G. </author> <title> Moerkotte and P.C. Lockemann. Reactive Consistency Control in Deductive Databases. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 16(4) </volume> <pages> 670-702, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: Transaction repair is the process of automatically generating a sequence of update operations that will restore validity to a database at the end of a transaction in which integrity constraints have been violated. Previous approaches to this problem have been based on active rules [28] and deductive rules <ref> [20] </ref>. In the former approach rules are generated which fire when a particular integrity constraint is found to have been violated, and whose action is to make some update to restore consistency relative to that constraint. <p> The deductive rule approach does not suffer in this way, since it is able to consider all violated constraints in the search for repair updates. However, as Moerkotte and Lockemann point out <ref> [20] </ref>, it suffers from performance problems, which reduce its usefulness in practice. We believe that our own approach of making database constraints amenable to processing by a constraint logic processing search engine will overcome these performance problems, and allow transaction repair to become a practical tool for database users.
Reference: [21] <author> J. Owens. </author> <title> Using Object-Oriented Databases to Model Hydrocarbon Reservoirs. </title> <type> PhD thesis, </type> <institution> University of Aberdeen, Dept. of Computing Science, King's College, </institution> <address> Aberdeen, Scotland, </address> <year> 1995. </year>
Reference: [22] <author> N.W. Paton and P.M.D. Gray. </author> <title> Optimising and Executing Daplex Queries Using Prolog. </title> <journal> The Computer Journal, </journal> <volume> 33 </volume> <pages> 547-555, </pages> <year> 1990. </year>
Reference: [23] <editor> N.W. Paton and M.H. Williams, editors. </editor> <booktitle> Proc. of 1st Int. Workshop on Rules in Database Systems (RIDS '93), Workshops in Computing, </booktitle> <address> Edinburgh, </address> <month> August </month> <year> 1993. </year> <note> Springer-Verlag. </note>
Reference: [24] <author> D.W. Shipman. </author> <title> The Functional Data Model and the Data Language DAPLEX. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 6(1) </volume> <pages> 140-173, </pages> <month> March </month> <year> 1981. </year>
Reference: [25] <author> H. Sondergaard and P. Sestoft. </author> <title> Non-Determinism in Functional Languages. </title> <journal> The Computer Journal, </journal> <volume> 35(5) </volume> <pages> 514-523, </pages> <year> 1992. </year>
Reference: [26] <author> P.J. Stuckey and S. Sudarshan. </author> <title> Compiling Query Constraints. </title> <booktitle> In Proceedings of the ACM SIGMOD Symposium on Principles of Database Systems, </booktitle> <pages> pages 56-67, </pages> <address> Minneapolis, USA, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: An example of this kind of hypothetical query might be "does an allocation of classes to teachers exist, in which no teacher takes more than three classes per week?" Such queries, expressed in a version of Datalog, can be evaluated using standard SLD-resolution [17]. Other work <ref> [26] </ref> has used an adaptation of the 14 Magic Sets approach to evaluate queries involving parametrised constraints.
Reference: [27] <author> S.D. Urban and M. Desiderio. </author> <title> CONTEXT: a CONstraint EXplanation Tool. </title> <journal> Data and Knowledge Engineering, </journal> <volume> 8 </volume> <pages> 153-183, </pages> <year> 1992. </year>
Reference: [28] <editor> S.D. Urban, A.P. Karadimce, and R.B. Nannapaneni. </editor> <title> The Implementation and Evaluation of Integrity Maintenance Rules in an Object-Oriented Database. </title> <booktitle> In 8th International Conference on Data Engineering, </booktitle> <pages> pages 565-572, </pages> <address> Pheonix, Arizona, 1992. </address> <publisher> IEEE. </publisher>
Reference-contexts: Transaction repair is the process of automatically generating a sequence of update operations that will restore validity to a database at the end of a transaction in which integrity constraints have been violated. Previous approaches to this problem have been based on active rules <ref> [28] </ref> and deductive rules [20]. In the former approach rules are generated which fire when a particular integrity constraint is found to have been violated, and whose action is to make some update to restore consistency relative to that constraint. <p> However, since each rule is aware of only one constraint, there can be problems with anomalous rule behaviour (to use the terminology of <ref> [28] </ref>) in which two or more rules undo each other's updates in an attempt to satisfy two or more violated constraints. The deductive rule approach does not suffer in this way, since it is able to consider all violated constraints in the search for repair updates.
Reference: [29] <author> P. Wadler. </author> <title> How to Replace Failure by a List of Successes. </title> <editor> In J.-P. Jouannaud, editor, </editor> <booktitle> Proceedings of the IFIP Int. Conf. on Functional Programming Languages and Computer Architecture, Lecture Notes in Computing Science, </booktitle> <volume> Vol. 201, </volume> <pages> pages 113-128, </pages> <address> Nancy, France, </address> <month> September </month> <year> 1985. </year> <note> Springer-Verlag. 20 </note>
References-found: 29

