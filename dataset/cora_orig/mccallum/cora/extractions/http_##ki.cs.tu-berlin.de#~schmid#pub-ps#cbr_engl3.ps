URL: http://ki.cs.tu-berlin.de/~schmid/pub-ps/cbr_engl3.ps
Refering-URL: http://www.cs.tu-berlin.de/~schmid/publications.html
Root-URL: 
Email: email: schaedle,schmid,compuman,herold@cs.tu-berlin.de  
Title: A Neural Net for Determining Structural Similarity of Recursive Programs  
Author: Kristina Schadler, Ute Schmid, Hendrik Lubben, Bernd Machenschalk 
Address: Berlin  
Affiliation: Research Group "Methods of Artificial Intelligence" Institute for Applied Computer Science, Technische Universitat  
Abstract: In this work it will be shown, how the comparison of recursive program schemata (RPS) can be reduced to an only slightly modified type of the search for maximal isomorphic subgraphs by interpreting the RPS as directed, cyclic, labelled graphs. The quality of the mapping of two RPS can be used as a quantitative measure for similarity of RPS among each other. The simultaneously calculated graph morphism can serve as a basis for the detection of analogies between the RPS. A special neural net, developed for the solution of general graph-matching problems, realizes the search for a sensible and as comprising as possible mapping between two RPS. It is shown, which special properties of RPS have to be accounted for in the modeling and how these can be incorporated into the algorithms when using a special neural approach for the solution. 
Abstract-found: 1
Intro-found: 1
Reference: [Ash88] <author> K. D. Ashley. </author> <title> Arguing by analogy in law: a case-based model. </title> <editor> In D. H. Hellmann, editor, </editor> <booktitle> Analogical Reasoning, </booktitle> <pages> pages 205-224. </pages> <publisher> Kluwer Academic Publishers, </publisher> <address> Dordrecht, </address> <year> 1988. </year>
Reference-contexts: 1. Structural similarities in case-based reason ing and analogical problem solving Analogical and case-based reasoning differ from each other in some contextual conditions ([Sei89, Web94]). While a topic-specific knowledge base is provided in case-based reasoning (e.g. court judgements, <ref> [Ash88] </ref>), relations between examples from different domains are used in analogical reasoning (e.g. Ruther-ford analogy: solar system atom, [Gen83]). For the detection of a similar case mainly property-based similarity measures are used in case-based reasoning ([RS89]), in analogical reasoning, though, structure-based measures are preferred ([FFG89]).
Reference: [AT89] <author> J.R. Anderson and R. Thompson. </author> <title> Use of analogy in a production system architecture. </title> <editor> In S. Vosniadou and A. Ortony, editors, </editor> <booktitle> Similarity and Analogical Reasoning, </booktitle> <pages> pages 267-297. </pages> <publisher> Cambridge University Press, </publisher> <year> 1989. </year>
Reference: [Der86] <author> N. Dershowitz. </author> <title> Programming by analogy. </title> <editor> In J.G. Carbonell R.S. Michalski and T.M. Mitchell, editors, </editor> <booktitle> Machine Learning AnArtificial Intelligence Approach, </booktitle> <volume> volume 2, </volume> <pages> pages 393-422. </pages> <publisher> Morgan Kaufmann, Los Altos, Cal, </publisher> <year> 1986. </year>
Reference-contexts: In the following sections, we will be concerned with the identification of structurally similar solutions in a special problem area the creation of recursive programs ("Programming by Analogical Reasoning", cmp. <ref> [Der86, Wil88] </ref>). Starting point of this work is the system IPAL (see e.g. [SWss]). IPAL is a system for inductive synthesis of recursive program schemata (RPS, [Eng74]) from problem solving experiences. Already synthesized RPS are stored in memory.
Reference: [Eng74] <author> J. Engelfriet. </author> <title> Simple Program Schemes and Formal Languages. </title> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1974. </year>
Reference-contexts: Starting point of this work is the system IPAL (see e.g. [SWss]). IPAL is a system for inductive synthesis of recursive program schemata (RPS, <ref> [Eng74] </ref>) from problem solving experiences. Already synthesized RPS are stored in memory. These are provided as examples for solving new programing problems by analogical transfer.
Reference: [FFG89] <author> B. Falkenhainer, K.D. Forbus, and D. Gentner. </author> <title> The structure mapping engine: Algorithm and example. </title> <journal> Artificial Intelligence, </journal> <volume> 41 </volume> <pages> 1-63, </pages> <year> 1989. </year>
Reference-contexts: We work with a special variant of Hopfield-Nets, so called WTA-Nets. The application of a neural net for the purpose of constraint-based identification of structural similarities when accessing or mapping examples for analogical reasoning has already proposed by <ref> [FFG89] </ref> and has been realized for example in the system ACME ([HT89]). The system ACME calculates structural congruences between propositional nets, taking into account semantic and pragmatic information. Predicates of one structure can only be mapped onto those of another, which have the same number of parameters. <p> The structure of the RPS is therefore reconstructed within the net. In order to calculate the similarity of two RPS on the basis of their best match, not only the size of the match, but, similar to e.g. in the definition of structural similarity in <ref> [FFG89] </ref>, the all-over similarity is used, taking into account the tree-like structure of the RPS. 3. Results Small RPS from IPALs database were compared, using all possible combinations of the different parameters.
Reference: [Gen83] <author> D. Gentner. Structure-mapping: </author> <title> a theoretical framework for analogy. </title> <journal> Cognitive Science, </journal> <volume> 7 </volume> <pages> 155-170, </pages> <year> 1983. </year>
Reference-contexts: While a topic-specific knowledge base is provided in case-based reasoning (e.g. court judgements, [Ash88]), relations between examples from different domains are used in analogical reasoning (e.g. Ruther-ford analogy: solar system atom, <ref> [Gen83] </ref>). For the detection of a similar case mainly property-based similarity measures are used in case-based reasoning ([RS89]), in analogical reasoning, though, structure-based measures are preferred ([FFG89]). If problem solving processes are modeled by using already present problem solving experience, these differences are obliterated.
Reference: [HT89] <author> K. J. Holyoak and P. Thagard. </author> <title> Analogical mapping by constraint satisfaction. </title> <journal> Cognitive Science, </journal> <volume> 13 </volume> <pages> 295-355, </pages> <year> 1989. </year>
Reference: [KS89] <author> J.L. Kolodner and R.L. Simpson. </author> <title> The mediator: Analysis of an early case-based problem solver. </title> <journal> Cognitive Science, </journal> <volume> 13 </volume> <pages> 507-549, </pages> <year> 1989. </year>
Reference: [Lu79] <author> S. Lu. </author> <title> A tree-to-tree distance and its application to cluster analysis. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> PAMI-1(2):219-224, </volume> <month> April </month> <year> 1979. </year>
Reference: [ML96] <author> Bernd Machenschalk and Hendrik Lubben. </author> <title> Graphmatching mit wta-netzen. </title> <institution> Projektbericht Studentisches Projekt Moderne Methoden des Maschinellen Lernens II SS96, </institution> <month> November </month> <year> 1996. </year>
Reference-contexts: Subsequently, we will first introduce the elements of our case-base the representations of recursive programs as graphs. Then the matching-algorithm and the result from the first applications will be presented. For a more detailed description of the approach and its implementation, see <ref> [ML96] </ref>. EQUAL N 0 + N @ summe @ 1- N @ nodes 2. Determining the similarity of recursive pro grams 2.1. Recursive programs as directed graphs IPAL manages a database of RPS, which are represented as recursive programs in LISP-notation.
Reference: [RS89] <editor> C.K. Riesbeck and R.C. Schank. </editor> <title> Inside Case-based Reasoning. </title> <publisher> Lawrence, Erlbaum, </publisher> <address> Hillsdale, NJ, </address> <year> 1989. </year>
Reference: [Sei89] <author> C. M. Seifert. </author> <title> Analogy and case-based reasoning. </title> <editor> In K. J. Hammond, editor, </editor> <booktitle> Proceedings of the 2nd Workshop on Case-Based Reasoning, </booktitle> <address> Pensacola, Florida, </address> <pages> pages 125-129, </pages> <address> San Mateo, CA, 1989. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [SW96a] <editor> Kristina Schadler and Fritz Wysotzki. Klassifizierungslernen mit Hilfe spezieller Hopfield-Netze. In Werner Dilger, Michael Schlosser, Jens Zeidler, and Andreas Ittner, editors, Beitrage zum 9.Fachgruppentreffen "Maschinelles Lernen" der GI-Fachgruppe 1.1.3., </editor> <booktitle> number CSR-96-06 in Chemnitzer Informatik-Berichte, </booktitle> <pages> pages 96-100. </pages> <institution> TU Chemnitz-Zwickau, </institution> <month> August </month> <year> 1996. </year>
Reference-contexts: Most of these measures are based on the calculation of the size of a maximal isomorphic subgraph or induced subgraph, or, leading to comparable results, on the calculation of the minimal costs of a transformation of one of the graphs into the other. In <ref> [SW96a] </ref> an algorithm is presented, which detects maximal isomorhpic subgraphs for arbitrary node- or edge-labelled graphs G 1 , G 2 , using a special neural net.
Reference: [SW96b] <author> Kristina Schadler and Fritz Wysotzki. </author> <title> Theoretical foundations of a special neural net approach for graphmatching. </title> <type> Technical Report 96-26, </type> <institution> TU Berlin, CS Dept., </institution> <year> 1996. </year>
Reference: [SWss] <editor> U. Schmid and Fritz Wysotzki. Induktion von rekursiven Programm-schemata und Analoges Lernen. In R. H. Kluwe, editor, Kognitionswis-senschaft: Strukturen und Prozesse intelligenter Systeme. </editor> <publisher> Westdeutscher Universitatsverlag, Wiesbaden, in press. </publisher>
Reference-contexts: In the following sections, we will be concerned with the identification of structurally similar solutions in a special problem area the creation of recursive programs ("Programming by Analogical Reasoning", cmp. [Der86, Wil88]). Starting point of this work is the system IPAL (see e.g. <ref> [SWss] </ref>). IPAL is a system for inductive synthesis of recursive program schemata (RPS, [Eng74]) from problem solving experiences. Already synthesized RPS are stored in memory. These are provided as examples for solving new programing problems by analogical transfer. <p> The RPS whose corresponding initial program is structurally most similar to the current problem, is then used as a model for creating the desired new program (a detailed description can be found in <ref> [SWss] </ref>). Alternatively it shall now be explored whether an approach developed by Wysotzki and Schadler ([Wys91, SW96b]) for the identification of isomorphic subgraphs is fit for detecting structurally similar RPS or not. We work with a special variant of Hopfield-Nets, so called WTA-Nets. <p> It is desired to be able to find a structurally similar known RPS from the case-database for a new initial program (i.e. start-fragment of a still to be extrapolated RPS, see <ref> [SWss] </ref>) and, using the mapping between RPS and initial program, to extrapolate the latter to a complete RPS, which comprises its subjacent initial program.
Reference: [VO89] <author> S. Vosniadou and A. Ortony. </author> <title> Similarity and analogical reasoning: A synthesis. </title> <editor> In S. Vosniadou and A. Ortony, editors, </editor> <booktitle> Similarity and Analogical Reasoning, </booktitle> <pages> pages 1-17. </pages> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1989. </year>
Reference: [Vo94] <author> A. Vo. </author> <title> Similarity concepts and retrieval methods. </title> <type> FABEL Report 13, </type> <institution> GMD, Sankt Augustin, </institution> <year> 1994. </year>
Reference-contexts: In analogical problem solving, already present solutions are adapted to new problems ([AT89]), i.e. within-domain analogies ([VO89]) are used. If case-based reasoning is used for problem solving and planing, structural similarities can be employed for accessing similar cases (as e.g. in <ref> [Vo94] </ref>) in addition to the property-based similarity measures ([KS89]). In the following sections, we will be concerned with the identification of structurally similar solutions in a special problem area the creation of recursive programs ("Programming by Analogical Reasoning", cmp. [Der86, Wil88]).
Reference: [Web94] <editor> G. Weber. Fallbasiertes Lernen und Analogien - Unterstutzung von Prob-lemlose- und Lernprozessen in einem adaptiven Lernsystem. PVU, Wein-heim, </editor> <year> 1994. </year>
Reference: [Wil88] <author> R.S. Williams. </author> <title> Learning to program by examining and modifying cases. </title> <editor> In J. Laird, editor, </editor> <booktitle> Proceedings of the fifth international conference on Machine Learning, </booktitle> <publisher> Univ. of. Michigan, </publisher> <pages> pages 318-324, </pages> <address> San Mateo, CAL, 1988. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: In the following sections, we will be concerned with the identification of structurally similar solutions in a special problem area the creation of recursive programs ("Programming by Analogical Reasoning", cmp. <ref> [Der86, Wil88] </ref>). Starting point of this work is the system IPAL (see e.g. [SWss]). IPAL is a system for inductive synthesis of recursive program schemata (RPS, [Eng74]) from problem solving experiences. Already synthesized RPS are stored in memory.
Reference: [Wys91] <author> F. Wysotzki. </author> <title> Structural Matching with Artificial Neural Nets. </title> <journal> Wiss. Z. TH Ilmenau, </journal> <volume> 37(1) </volume> <pages> 113-119, </pages> <year> 1991. </year>
References-found: 20

