URL: http://www.cs.uni-bonn.de/~idea/SEA/sea_specification.ps.gz
Refering-URL: http://www.cs.uni-bonn.de/~idea/SEA/publications.html
Root-URL: http://cs.uni-bonn.de
Title: Intelligent Database Environment for Advanced Applications IDEA The Schema Evolution Assistant: Tool Specification  
Note: Copyright 1994 University of Bonn ESPRIT Project 6333 Page 1  
Abstract: Summary: The Schema Evolution Assistant (SEA) guides the schema designer through the process of changing the schema of a Chimera application. Based on a short discussion of the consistency of schemas and the validity of database state and database usage, the evolution of Chimera schemas is investigated with respect to its repercussions to these properties. We specify the intended functionality of SEA, assigning priorities to all possible schema evolution operations. The deliverable closes with an outline of the SEA architec ture and its implementation. Author(s): Thomas Lemke Contributor(s): Rainer Manthey Issued by: Stephane Bressan ECRC Arabellastrae 17 D-81925 Munchen; Germany Tel. +49 / (0) 89 / 92 699 - 167 Authorised by: Stefano Ceri Issue number: 1 Status: DEFINITIVE Date of issue: 28.11.1994 Reference: IDEA.DE.22.O.002 Number of pages: 25 
Abstract-found: 1
Intro-found: 1
Reference: [CM93] <author> Stefano Ceri and Rainer Manthey. </author> <title> Consolidated specification of Chimera. </title> <booktitle> IDEA deliverable IDEA.DE.2P.006.001, ESPRIT Project 6333, </booktitle> <year> 1993. </year>
Reference-contexts: Apart from the syntactical constraints to a schema, these properties become invariants of schema evolution when (consistent) schemas can be changed. After the discussion of some general concepts, all elements of a Chimera schema are briefly investigated. The Chimera data model has been defined in <ref> [CM93] </ref> and formalized in [GBB94] where the specification of its syntax and details of its semantics can be found which have been omitted here. 3.1 General Properties As an abbreviation, we introduce the notion of a feature which denotes attributes, operations, constraints, and triggers of object classes, class attributes, class operations,
Reference: [DG94] <author> Susanne Deiters and Ulrike Griefahn. </author> <title> Propagation rule compiler: Tool specification. </title> <booktitle> IDEA deliverable IDEA.DE.22.O.001, ESPRIT Project 6333, </booktitle> <year> 1994. </year>
Reference: [ECL93] <author> ECRC, </author> <title> Munchen. ECL i PS e User Manual, </title> <year> 1993. </year>
Reference: [GBB94] <author> Giovanna Guerrini, Elisa Bertino, and Rene Bal. </author> <title> A formal definition of the Chimera object-oriented data model. </title> <booktitle> IDEA deliverable IDEA.DE.2P.011.01, ESPRIT Project 6333, </booktitle> <year> 1994. </year>
Reference-contexts: Apart from the syntactical constraints to a schema, these properties become invariants of schema evolution when (consistent) schemas can be changed. After the discussion of some general concepts, all elements of a Chimera schema are briefly investigated. The Chimera data model has been defined in [CM93] and formalized in <ref> [GBB94] </ref> where the specification of its syntax and details of its semantics can be found which have been omitted here. 3.1 General Properties As an abbreviation, we introduce the notion of a feature which denotes attributes, operations, constraints, and triggers of object classes, class attributes, class operations, class constraints, and class
Reference: [GM94] <author> Ulrike Griefahn and Rainer Manthey. </author> <title> Update propagation in Chimera, an active DOOD language. IDEA working paper IDEA.WP.22.O.001, ESPRIT Project 6333, </title> <booktitle> 1994. Also published in Proceedings of the International Workshop on the Deductive Approach to Information Systems (DAISD '94), </booktitle> <address> Aiguablava, Spain, </address> <month> September </month> <year> 1994. </year>
Reference: [Lem94] <author> Thomas Lemke. </author> <title> Schema evolution in OODBMS: A selective overview of problems and solutions. IDEA working paper IDEA.WP.22.O.002, ESPRIT Project 6333, </title> <year> 1994. </year>
Reference-contexts: Based on this analysis, the functionality of our Schema Evolution Assistant is sketched in chapter 7. A detailed analysis of the effects of schema evolution to the consistency of a (simple) object-oriented schema and the type validity of an (extensional) state has already been given in <ref> [Lem94] </ref>. ESPRIT Project 6333 Page 11 Intelligent Database Environment for Advanced Applications IDEA 6.1 Evolving Feature Signatures For the following discussion, we regard attributes, operations, constraints, and triggers, both in their targeted and untargeted version, as features which have some properties in common. <p> For each aspect, different strategies have been proposed to handle schema updates. As we have already pointed out in <ref> [Lem94] </ref>, these strategies include invariant-preserving schema evolution, schema and method modification, instance conversion and screening, schema and class versioning, and others. All these strategies have their strengths and weaknesses whose relevance depends on the actual requirements for the application.
Reference: [Man93] <author> Rainer Manthey. </author> <title> Beyond data dictionaries: Towards a reflective architecture of intelligent database systems. </title> <booktitle> In Deductive Object-Oriented Database Systems (DOOD '93), </booktitle> <year> 1993. </year>
Reference: [Ous94] <author> John K. Ousterhout. </author> <title> Tcl and the Tk Toolkit. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year> <note> ESPRIT Project 6333 Page 25 </note>
References-found: 8

