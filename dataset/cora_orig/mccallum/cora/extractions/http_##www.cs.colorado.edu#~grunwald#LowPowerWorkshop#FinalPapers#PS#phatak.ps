URL: http://www.cs.colorado.edu/~grunwald/LowPowerWorkshop/FinalPapers/PS/phatak.ps
Refering-URL: http://www.cs.colorado.edu/~grunwald/LowPowerWorkshop/agenda.html
Root-URL: http://www.cs.colorado.edu
Email: email: phatak@ee.binghamton.edu  
Title: Hybrid Signed Digit Representation for Low Power Arithmetic Circuits  
Author: Dhananjay S. Phatak Steffen Kahle, Hansoo Kim and Jason Lue 
Address: New York Binghamton, NY 13902-6000  
Affiliation: Electrical Engineering Department State University of  
Abstract: The Hybrid Signed Digit (HSD) representation introduced in [9] employs both signed and unsigned digits and renders the maximum length of carry propagation equal to the maximum distance between two consecutive signed digits. This representation offers a continuum of choices from two's complement representation on one extreme (where there are no signed digits) all the way to the conventional fully signed digit (SD) representation on the other extreme, wherein every digit is signed. The area-delay tradeoffs associated with each of the HSD formats have been analyzed in [9]. Possibility of reducing power consumption by utilizing the HSD representation was also mentioned therein. This paper investigates the impact of the HSD representation on power consumption. Adder based on a well known fully SD implementation [2] (which is adopted in a microprocessor [4]) is compared with the adder based on HSD representation. Layouts of basic adder cells based on SD and HSD representations are exhaustively simulated to obtain the average number of transitions and power dissipation per addition. The results are then used to estimate power dissipation in adders of various word lengths and indicate that adopting HSD representation can lead to a reduction in power consumption over a fully SD representation. The power (and area) reduction is achieved as a result of algorithm level change. This leaves room for additional power reduction by employing standard techniques at lower levels of the design process (such as circuit level, layout level etc). Furthermore, The HSD representation offers a continuum of choices to the designer. By increasing the distance between the signed digits, lower power dissipation can be achieved at the expense of slower speed. Thus, if the worst case delay is predetermined, the designer can select a hybrid representation that minimizes power dissipation under the delay constraint. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Avizienis, A. </author> <title> Signed-digit number representations for fast parallel arithmetic. </title> <journal> IRE Transactions on Electronic Computers, </journal> <volume> vol. EC-10, </volume> <month> Sep. </month> <year> 1961, </year> <pages> pp. 389400. </pages>
Reference-contexts: 1 Introduction The well known signeddigit (SD) number representation <ref> [1, 9, 10] </ref> makes it possible to perform addition with carry propagation chains that are limited to a single digit position, and has been used to speed up arithmetic operations.
Reference: [2] <author> Kuninobu, S., Nishiyama, T., Edamatsu, H., Taniguchi, T., and Takagi, N. </author> <title> Design of high speed MOS multiplier and divider using redundant binary representation. </title> <booktitle> Proc. of the 8th Symposium on Computer Arithmetic, </booktitle> <year> 1987, </year> <pages> pp. 8086. </pages>
Reference-contexts: If the delay associated with a carry-save stage is F A and that associated with a SD stage is SD , then the SD tree is (asymptotically) faster if SD log (3=2) 1:71. Signeddigit adder trees are easier to lay out and route than Wallace trees <ref> [2] </ref>. In [2] a 64 fi 64 bit multiplier based on a redundant signed digit binary adder tree was shown to yield a smaller critical path delay than the corresponding Wallace tree multiplier with booth recoding. <p> If the delay associated with a carry-save stage is F A and that associated with a SD stage is SD , then the SD tree is (asymptotically) faster if SD log (3=2) 1:71. Signeddigit adder trees are easier to lay out and route than Wallace trees <ref> [2] </ref>. In [2] a 64 fi 64 bit multiplier based on a redundant signed digit binary adder tree was shown to yield a smaller critical path delay than the corresponding Wallace tree multiplier with booth recoding. A similar design for a fast 54 fi 54 bit multiplier was published in [3]. <p> Possibility of reducing power consumption by utilizing the HSD representation was mentioned in [9]. This paper investigates the impact of the HSD representation on power consumption. Adder based on a well known fully SD implementation <ref> [2] </ref> (which is adopted in a microprocessor [4]) is compared with the adder based on HSD representation. Layouts of basic adder cells based on SD and HSD representations are exhaustively simulated to obtain the average number of transitions and power dissipation per addition. <p> The basic building block for the signed digit adders in <ref> [2, 4] </ref> is the efficient signed digit adder cell illustrated in [2]. The cell takes 2 signed digit operands and a signed carry as inputs and generates a signed digit sum a signed carry output. <p> The basic building block for the signed digit adders in [2, 4] is the efficient signed digit adder cell illustrated in <ref> [2] </ref>. The cell takes 2 signed digit operands and a signed carry as inputs and generates a signed digit sum a signed carry output. Since each variable takes two bits to encode, the cell has 6 inputs and 4 outputs and requires 42 transistors. <p> Theoretical Simulation estimate outputs Average Average Average Transitions Transitions Power Dissipation (fi10 5 Watts) Signed digits adder cell 7.94 11 8.171 based on SD rep. <ref> [2] </ref> Signed digits adder cell 7.94 12 8.291 based on HSD rep. [9] Unsigned digits adder cell 7.46 9 5.126 based on HSD rep. [9] Table 1: Comparison of average number of transitions and power dissipation in the basic cells. <p> The results are shown in Table 2. number Average Average of Transitions Power cases Dissipation (fi10 5 Watts) Cascade of two SD cells <ref> [2] </ref> 104653 23 (22) 14.36 (16.34) Cascade of Signed (higher 20591 21 (21) 12.81 (13.42) significant) and Unsigned HSD cells [9] Table 2: Comparison of average number of transitions and power dissipation in two-digit adders (word length of two digits).
Reference: [3] <author> Makino, H., Nakase, Y., and Shinohara, H. </author> <title> A 8.8 ns 54 fi 54bit Multiplier Using New Redundant Binary Architecture. </title> <booktitle> In Proceedings of the International Conference Computer Deign (ICCD), </booktitle> <address> Cambridge, Mas-sachusetts, </address> <month> Oct. </month> <year> 1993, </year> <pages> pp. </pages> <year> 202205. </year>
Reference-contexts: In [2] a 64 fi 64 bit multiplier based on a redundant signed digit binary adder tree was shown to yield a smaller critical path delay than the corresponding Wallace tree multiplier with booth recoding. A similar design for a fast 54 fi 54 bit multiplier was published in <ref> [3] </ref>. The cost for the speedup is higher area, since every (binary) signed digit needs two bits for encoding. The advent of mobile computing favors circuits with low power dissipation. Hence, combined analysis of speed and power tradeoffs is attracting increasing amounts of research efforts [5, 6].
Reference: [4] <author> Miyake, J., et. al. </author> <title> A Highly Integrated 40-MIPS (Peak) 64-b RISC Microprocessor. </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> vol. 25, no. 5, </volume> <month> Oct. </month> <year> 1990, </year> <pages> pp. 11991206. </pages>
Reference-contexts: Possibility of reducing power consumption by utilizing the HSD representation was mentioned in [9]. This paper investigates the impact of the HSD representation on power consumption. Adder based on a well known fully SD implementation [2] (which is adopted in a microprocessor <ref> [4] </ref>) is compared with the adder based on HSD representation. Layouts of basic adder cells based on SD and HSD representations are exhaustively simulated to obtain the average number of transitions and power dissipation per addition. <p> The basic building block for the signed digit adders in <ref> [2, 4] </ref> is the efficient signed digit adder cell illustrated in [2]. The cell takes 2 signed digit operands and a signed carry as inputs and generates a signed digit sum a signed carry output.
Reference: [5] <author> Nagendra, C., Owens, R. M., and Irwin, M. J. </author> <title> Power Delay Characteristics of CMOS Adders. </title> <journal> IEEE Transactions on VLSI, </journal> <month> Sept. </month> <year> 1994, </year> <pages> pp. 377381. </pages>
Reference-contexts: The cost for the speedup is higher area, since every (binary) signed digit needs two bits for encoding. The advent of mobile computing favors circuits with low power dissipation. Hence, combined analysis of speed and power tradeoffs is attracting increasing amounts of research efforts <ref> [5, 6] </ref>. All the number representations considered in [5, 6] were special cases of the GSD representation [8]. In [9] a Hybrid Signed Digit (HSD) representation was introduced. <p> The advent of mobile computing favors circuits with low power dissipation. Hence, combined analysis of speed and power tradeoffs is attracting increasing amounts of research efforts <ref> [5, 6] </ref>. All the number representations considered in [5, 6] were special cases of the GSD representation [8]. In [9] a Hybrid Signed Digit (HSD) representation was introduced.
Reference: [6] <author> Nagendra, C., Owens, R. M., and Irwin, M. J. </author> <title> Unifying CarrySum and SignedDigit Number Representations for Low Power. </title> <booktitle> In Proceedings of International Symposium on Low Power Design, Dana Point, </booktitle> <address> Califor-nia, </address> <month> Apr. </month> <year> 1995. </year>
Reference-contexts: The cost for the speedup is higher area, since every (binary) signed digit needs two bits for encoding. The advent of mobile computing favors circuits with low power dissipation. Hence, combined analysis of speed and power tradeoffs is attracting increasing amounts of research efforts <ref> [5, 6] </ref>. All the number representations considered in [5, 6] were special cases of the GSD representation [8]. In [9] a Hybrid Signed Digit (HSD) representation was introduced. <p> The advent of mobile computing favors circuits with low power dissipation. Hence, combined analysis of speed and power tradeoffs is attracting increasing amounts of research efforts <ref> [5, 6] </ref>. All the number representations considered in [5, 6] were special cases of the GSD representation [8]. In [9] a Hybrid Signed Digit (HSD) representation was introduced.
Reference: [7] <author> Najm, F. </author> <title> Transition Density, A Stochastic Measure of Activity in Digital Circuits. </title> <booktitle> In Proceedings of the 28th ACM/IEEE Design Automation Conference (DAC), </booktitle> <year> 1991, </year> <pages> pp. 644649. </pages>
Reference-contexts: Given 0 i &lt; 2 n , the total number of transitions is 2 (n 2 ) = n 2 (4) or the number of transitions for any single input is 2 2n1 since all inputs are symmetric. Using the zero delay model in <ref> [7] </ref>, the expected num ber of transitions E [n y (T )] at the output y of a logic module in time interval T is E [n y (T )] = i=1 @y ) E [n x i (T )] (5) where x i ; i = 1 n are the
Reference: [8] <author> Parhami, B. </author> <title> Generalized signed-digit number systems: a unifying framework for redundant number representations. </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. C-39, </volume> <month> Jan. </month> <year> 1990, </year> <pages> pp. 8998. </pages>
Reference-contexts: The advent of mobile computing favors circuits with low power dissipation. Hence, combined analysis of speed and power tradeoffs is attracting increasing amounts of research efforts [5, 6]. All the number representations considered in [5, 6] were special cases of the GSD representation <ref> [8] </ref>. In [9] a Hybrid Signed Digit (HSD) representation was introduced. It employs both signed and unsigned digits and reveals a continuum of choices of number representations between the extremes of fully SD on one hand to two's complement on the other.
Reference: [9] <author> Phatak, D. S., and Koren, I. </author> <title> Hybrid SignedDigit Number Systems: A Unified Framework for Redundant Number Representations with Bounded Carry Propagation Chains. </title> <journal> IEEE Trans. on Computers, Special issue on Computer Arithmetic, </journal> <volume> vol. TC43, no. 8, </volume> <month> Aug. </month> <year> 1994, </year> <pages> pp. </pages> <note> 880891. (An unabridged version is available on the web via the URL http://www.ee.binghamton.edu/faculty/phatak). </note>
Reference-contexts: 1 Introduction The well known signeddigit (SD) number representation <ref> [1, 9, 10] </ref> makes it possible to perform addition with carry propagation chains that are limited to a single digit position, and has been used to speed up arithmetic operations. <p> The advent of mobile computing favors circuits with low power dissipation. Hence, combined analysis of speed and power tradeoffs is attracting increasing amounts of research efforts [5, 6]. All the number representations considered in [5, 6] were special cases of the GSD representation [8]. In <ref> [9] </ref> a Hybrid Signed Digit (HSD) representation was introduced. It employs both signed and unsigned digits and reveals a continuum of choices of number representations between the extremes of fully SD on one hand to two's complement on the other. <p> It is outside the GSD framework (but overlaps it) as shown in Figure 1. The area-delay tradeoffs associated with each representation were analyzed in <ref> [9] </ref> and show that a multiplier based on HSD-1 representation (i.e., alternate digit po-sitions are signed) has lower AT product than multipliers that employ fully SD trees. Possibility of reducing power consumption by utilizing the HSD representation was mentioned in [9]. <p> The area-delay tradeoffs associated with each representation were analyzed in <ref> [9] </ref> and show that a multiplier based on HSD-1 representation (i.e., alternate digit po-sitions are signed) has lower AT product than multipliers that employ fully SD trees. Possibility of reducing power consumption by utilizing the HSD representation was mentioned in [9]. This paper investigates the impact of the HSD representation on power consumption. Adder based on a well known fully SD implementation [2] (which is adopted in a microprocessor [4]) is compared with the adder based on HSD representation. <p> HSD formats are illustrated in Figure 1. For radix r = 2 the signed digits can take any value in the set f1, 0, +1g. The unsigned digits are like normal bits and can assume any of the two values f0,1g. The addition procedure presented in <ref> [9] </ref> enables a signed digit to stop an incoming carry from propagating further. Consequently, the carries propagate between the signed digits and the maximum length of carry propagation equals the distance between the signed digits. <p> In practice, the signeddigit output z i is not produced directly. Instead, the carry c i and an intermediate sum s i are produced in the first step, and the summation z i = s i + c i1 is carried out in the second. Following the procedure in <ref> [9] </ref> guarantees that the second step generates no carry. The operations in an unsigned digit position are as follows. Let a i1 and b i1 be the bits to be added at the (i 1)th digit position; a i1 ; b i1 2 f0; 1g. <p> This format conversion flexibility (without any additional time delay penalty) can be useful, as illustrated by the multiplier design in <ref> [9] </ref>. 3 Power consumption of basic adder cells The adders considered are static CMOS circuits since these typically consume lower power than dynamic CMOS designs. The basic building block for the signed digit adders in [2, 4] is the efficient signed digit adder cell illustrated in [2]. <p> Since each variable takes two bits to encode, the cell has 6 inputs and 4 outputs and requires 42 transistors. Building blocks of the HSD adder are the cells in signed and unsigned digit positions presented in <ref> [9] </ref>. The signed cell takes 2 signed digits and one signed carry and generates a signed digit output and carry, and has 6 inputs and 4 outputs and also requires 42 transistors. <p> Theoretical Simulation estimate outputs Average Average Average Transitions Transitions Power Dissipation (fi10 5 Watts) Signed digits adder cell 7.94 11 8.171 based on SD rep. [2] Signed digits adder cell 7.94 12 8.291 based on HSD rep. <ref> [9] </ref> Unsigned digits adder cell 7.46 9 5.126 based on HSD rep. [9] Table 1: Comparison of average number of transitions and power dissipation in the basic cells. The simula tion average was determined by exhaustively testing all possible input cases, excluding the don't care input combinations. <p> Theoretical Simulation estimate outputs Average Average Average Transitions Transitions Power Dissipation (fi10 5 Watts) Signed digits adder cell 7.94 11 8.171 based on SD rep. [2] Signed digits adder cell 7.94 12 8.291 based on HSD rep. <ref> [9] </ref> Unsigned digits adder cell 7.46 9 5.126 based on HSD rep. [9] Table 1: Comparison of average number of transitions and power dissipation in the basic cells. The simula tion average was determined by exhaustively testing all possible input cases, excluding the don't care input combinations. The simulator used was IRSIM 9.3. <p> The results are shown in Table 2. number Average Average of Transitions Power cases Dissipation (fi10 5 Watts) Cascade of two SD cells [2] 104653 23 (22) 14.36 (16.34) Cascade of Signed (higher 20591 21 (21) 12.81 (13.42) significant) and Unsigned HSD cells <ref> [9] </ref> Table 2: Comparison of average number of transitions and power dissipation in two-digit adders (word length of two digits). The number of cases excludes the patterns in which any of the signed digits gets the impossible input combination 10. <p> It is seen that the power dissipated by the HSD-1 adder is about 12% less that the SD counterpart. The critical path delay for SD adder is equivalent to about 5 gates (two input NAND/NOR gates) whereas the delay of the HSD1 adder is about 6 gates <ref> [9] </ref>, irrespective of the word length. Note that HSD-1 is just one of the several feasible formats within the HSD representation. Distance between signed digits can be increased to obtain further power reduction at the expense of speed.

References-found: 9

