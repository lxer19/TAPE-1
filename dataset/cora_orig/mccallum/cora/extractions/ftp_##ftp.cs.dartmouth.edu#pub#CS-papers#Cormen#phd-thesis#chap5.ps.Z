URL: ftp://ftp.cs.dartmouth.edu/pub/CS-papers/Cormen/phd-thesis/chap5.ps.Z
Refering-URL: http://www.cs.dartmouth.edu/~thc/thesis.html
Root-URL: http://www.cs.dartmouth.edu
Title: Chapter 5 Paging and Addressing in the VM-DP System Chapters 2 and 3 looked at
Note: Overall, the  This chapter also discusses  152  
Abstract: Specifically, this chapter presents the design of the demand-paging portion of the VM-DP system. We implemented three different paging schemes and collected empirical data on their I/O performance. One of the schemes was straight LRU (least-recently used) paging, in which all tracks are treated equally. The other two schemes treat tracks differently according to the sizes of vectors they contain. Our empirical tests yielded two somewhat surprising results: * The observed I/O counts for our test suite were roughly equal under all three schemes. Moreover, as problem sizes increased, performance differences among the three schemes decreased. This chapter represents joint work with Lars Bader. 
Abstract-found: 1
Intro-found: 1
Reference: [ACS87] <author> Alok Aggarwal, Ashok K. Chandra, and Marc Snir. </author> <title> Hierarchical memory with block transfer. </title> <booktitle> In Proceedings of the 28th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 204-216, </pages> <month> October </month> <year> 1987. </year>
Reference: [AV88] <author> Alok Aggarwal and Jeffrey Scott Vitter. </author> <title> The input/output complexity of sorting and related problems. </title> <journal> Communications of the ACM, </journal> <volume> 31(9) </volume> <pages> 1116-1127, </pages> <month> September </month> <year> 1988. </year>
Reference: [BC90] <author> Guy E. Blelloch and Siddhartha Chatterjee. </author> <title> Vcode: A data-parallel intermediate language. </title> <booktitle> In Proceedings of the Third Symposium on the Frontiers of Massively Parallel Computation, </booktitle> <pages> pages 471-480, </pages> <month> October </month> <year> 1990. </year>
Reference: [BCD72] <author> A. Bensoussan, C. T. Clingen, and R. C. Daley. </author> <title> The Multics virtual memory: Concepts and design. </title> <journal> Communications of the ACM, </journal> <volume> 15(5) </volume> <pages> 308-318, </pages> <month> May </month> <year> 1972. </year>
Reference-contexts: Paging and LRU replacement The VM-DP system uses a paging system similar to the approach of using both segmentation and paging, as described by Denning [Den70] and used in the Multics system <ref> [BCD72, DD68] </ref>. In the VM-DP system, vectors serve as the equivalent of segments in a system such as Multics. Just as Multics addresses consist of a segment number and an index within the segment, we can address individual vector elements by a vector address and an index within the vector.
Reference: [BCK + 92] <author> Guy E. Blelloch, Siddartha Chatterjee, Fritz Knabe, Jay Sipelstein, and Marco Zagha. </author> <note> Vcode Reference Manual (Version 1.3), </note> <month> February </month> <year> 1992. </year>
Reference: [BCSZ91] <author> Guy E. Blelloch, Siddartha Chatterjee, Jay Sipelstein, and Marco Zagha. </author> <month> CVL: </month>
References-found: 6

