URL: http://www.csl.sri.com/~qian/oakland96.ps.gz
Refering-URL: http://www.csl.sri.com/~qian/early-pubs.html
Root-URL: 
Email: qian@csl.sri.com  
Title: View-Based Access Control with High Assurance  
Author: Xiaolei Qian 
Affiliation: Computer Science Laboratory SRI International  
Date: May 1996. 1  
Note: Proceedings of the IEEE Symposium on Security and Privacy,  
Abstract: View-based access control enables content-based and context-based security, as opposed to container-based security provided in operating systems. However, view-based access control in multilevel secure (MLS) databases suffers from two problems: safety and assurance. We investigate view-based access control in MLS relational databases for a large class of views expressible as project-select-join queries. We develop a polynomial-time label compilation algorithm that transforms view-level labeling to tuple-level labeling in such a way that guarantees safety and high assurance. We identify two problems related to optimal label compilation, and show that they are both NP-complete even for totally ordered security lattices of size two. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. G. Akl and D. E. Denning. </author> <title> Checking classifica tion constraints for consistency and completeness. </title> <booktitle> In Proceedings of the 1987 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 196-201, </pages> <year> 1987. </year>
Reference-contexts: However, the safety of views is reduced to the safety of classification constraints. For easy verification of safety, classification constraints have also been restricted to project-select queries where the selection condition involves arithmetic expressions of attributes and constants <ref> [1] </ref>. Again, the capability of content-based access control is limited. Neither class of approaches allows views involving joins, such as Bomb Enemy and Large Explosive on the FLIGHT database. In comparison, our algorithm allows views that are project-select-join queries, which are significantly more expressive than single-relation views. <p> Neither class of approaches allows views involving joins, such as Bomb Enemy and Large Explosive on the FLIGHT database. In comparison, our algorithm allows views that are project-select-join queries, which are significantly more expressive than single-relation views. Another problem associated with the label compilation method of <ref> [1] </ref> is that data are often overclassi-fied. When the same tuple appears in two views that are labeled differently, it is labeled at the least upper bound of the two view labels, making it inaccessible from both views.
Reference: [2] <author> B. G. Claybrook. </author> <title> Using views in a multilevel se cure database management system. </title> <booktitle> In Proceedings of the 1983 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 4-17, </pages> <year> 1983. </year>
Reference-contexts: However, the capability of content-based access control is limited. Another class of existing approaches to view-based access control is to treat labeled views as classification constraints, which are used to compile labels on views to labels on data such as tuples or elements in tuples <ref> [2, 3] </ref>. Users can access data through arbitrarily complex views, such as with ordinary MLS relational databases. High assurance is achievable with a small amount of trusted code for label compilation. However, the safety of views is reduced to the safety of classification constraints.
Reference: [3] <author> D. E. Denning, S. G. Akl, M. Heckman, T. F. Lunt, M. Morgenstern, P. G. Neumann, and R. R. Schell. </author> <title> Views for multilevel database security. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 13(2) </volume> <pages> 129-140, </pages> <month> February </month> <year> 1987. </year>
Reference-contexts: However, the capability of content-based access control is limited. Another class of existing approaches to view-based access control is to treat labeled views as classification constraints, which are used to compile labels on views to labels on data such as tuples or elements in tuples <ref> [2, 3] </ref>. Users can access data through arbitrarily complex views, such as with ordinary MLS relational databases. High assurance is achievable with a small amount of trusted code for label compilation. However, the safety of views is reduced to the safety of classification constraints.
Reference: [4] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability. </title> <editor> W. H. </editor> <publisher> Freeman and Co., </publisher> <year> 1979. </year>
Reference-contexts: Proof The problem belongs to NP because a nondeterministic machine can randomly guess a solution and verify that it is well-formed, proper, and safe in polynomial time. We reduce a known NP-complete problem, the Hitting Set problem <ref> [4, page 222] </ref>, to the Lowest Classification problem. The Hitting Set problem states: Let S be a finite set, C be a collection of subsets of S, and K jSj be a positive integer.
Reference: [5] <author> C. Garvey and A. Wu. </author> <title> ASD views. </title> <booktitle> In Proceed ings of the 1988 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 85-95, </pages> <year> 1988. </year>
Reference-contexts: One class of existing approaches to view-based access control restricts views to subsets of single relations. In particular, secure views in [12] are select queries where the selection condition involves comparisons of tuple labels to constants. ASD views <ref> [5] </ref> and pviews [10] are project-select queries where the selection condition involves comparisons of attributes to constants. The safety of such views is easy to verify, and high assurance is achievable with a small amount of trusted code to interpret such views.
Reference: [6] <author> P. P. Griffiths and B. W. Wade. </author> <title> An autho rization mechanism for a relational database system. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 1(3) </volume> <pages> 242-255, </pages> <month> September </month> <year> 1976. </year>
Reference-contexts: Obviously, S 00 S and jS 00 j K. Since c " S 00 6= ; for every c 2 C, S 00 is a solution for (S; C; K). 2 7 Related Work View-based access control in relational databases was first introduced in IBM's System R <ref> [6] </ref>, in which views expressed in SQL are the objects of authorization. It has been adopted by most commercial relational DBMSs. Because of its importance, view-based access control in MLS relational databases was recommended for long-term research by the Air Force Studies Board in 1983 [8].
Reference: [7] <author> C. E. Landwehr. </author> <title> Formal models for computer security. </title> <journal> ACM Computing Surveys, </journal> <volume> 13(3) </volume> <pages> 247-278, </pages> <month> September </month> <year> 1981. </year>
Reference-contexts: For example, a security lattice could be fU; C; Sg, where U C S. We consider view-based access control in MLS relational databases, where mandatory access control policies with the simple security property and the fl-property of the Bell-LaPadula model <ref> [7] </ref> are enforced. Given a security lattice, every user is assigned a clearance level, and every object is assigned a classification level, both of which are from the lattice. * The Simple Security Property.
Reference: [8] <institution> Committee on Multilevel Data Management Se curity. Multilevel data management security. </institution> <type> Technical report, </type> <institution> Air Force Studies Board, National Research Council, National Academy Press, </institution> <year> 1983. </year>
Reference-contexts: It has been adopted by most commercial relational DBMSs. Because of its importance, view-based access control in MLS relational databases was recommended for long-term research by the Air Force Studies Board in 1983 <ref> [8] </ref>. One class of existing approaches to view-based access control restricts views to subsets of single relations. In particular, secure views in [12] are select queries where the selection condition involves comparisons of tuple labels to constants.
Reference: [9] <author> X. Qian and T. F. Lunt. </author> <title> Tuple-level vs. element level classification. </title> <editor> In B. M. Thuraisingham and C. E. Landwehr, editors, </editor> <booktitle> Database Security, VI: Status and Prospects, </booktitle> <pages> pages 301-315. </pages> <publisher> North-Holland, </publisher> <year> 1993. </year>
Reference-contexts: Third, our algorithm can be generalized to the compilation of view-level labeling to element-level labeling, using the equivalence between tuple-level and element-level labeling established in <ref> [9] </ref>. Finally, we would like to consider views that are more expressive than project-select-join queries, such as views involving the difference operator or aggregation functions. Acknowledgment The author thanks Li Gong, Peter Neumann, Marvin Schaefer, and James O'Connor for useful comments on drafts of the paper.
Reference: [10] <author> M. Schaefer and G. Smith. </author> <title> Assured discretionary access control for trusted RDBMS. </title> <booktitle> In Proceedings of the Ninth IFIP WG 11.3 Working Conference on Database Security, </booktitle> <pages> pages 275-289, </pages> <year> 1995. </year>
Reference-contexts: However, view-based access control has not been in widespread use in multilevel secure (MLS) relational databases because of two major problems <ref> [10] </ref>. * Safety. The safety question asks the following. <p> One class of existing approaches to view-based access control restricts views to subsets of single relations. In particular, secure views in [12] are select queries where the selection condition involves comparisons of tuple labels to constants. ASD views [5] and pviews <ref> [10] </ref> are project-select queries where the selection condition involves comparisons of attributes to constants. The safety of such views is easy to verify, and high assurance is achievable with a small amount of trusted code to interpret such views. However, the capability of content-based access control is limited. <p> Both problems are shown to be NP-complete even for totally ordered security lattices of size two. Several directions for future work are possible. First, label compilation may stop after generating labeled primitive views. As argued in <ref> [10] </ref>, such views can be implemented with high assurance. This is especially useful for view-based discretionary access control, for it is not very practical to associate access control lists with tuples.
Reference: [11] <author> J. D. Ullman. </author> <title> Principles of Database and Knowl edge Base Systems, volume 1. </title> <publisher> Computer Science Press, </publisher> <year> 1988. </year>
Reference-contexts: a relation over R i [X i ]. 4.2 Views as Conjunctive Queries We consider views that are expressible as project-select-join (PSJ) queries whose selection condition is a conjunction of comparisons of attributes to constants or other attributes. 3 These queries are equivalently expressible as conjunctive queries with built-in predicates <ref> [11] </ref>. We assume that predicates are divided into three disjoint groups: base predicates, built-in predicates, and view predicates. Given a schema B, there is an jXj-ary base predicate R for every relation scheme R [X] in B. Built-in predicates are =; 6=; &lt;; ; &gt;; .
Reference: [12] <author> J. Wilson. </author> <title> Views as the security objects in a multilevel secure relational database management system. </title> <booktitle> In Proceedings of the 1988 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 70-84, </pages> <year> 1988. </year>
Reference-contexts: Because of its importance, view-based access control in MLS relational databases was recommended for long-term research by the Air Force Studies Board in 1983 [8]. One class of existing approaches to view-based access control restricts views to subsets of single relations. In particular, secure views in <ref> [12] </ref> are select queries where the selection condition involves comparisons of tuple labels to constants. ASD views [5] and pviews [10] are project-select queries where the selection condition involves comparisons of attributes to constants.
References-found: 12

