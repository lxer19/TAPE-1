URL: http://www.cs.cmu.edu/~softagents/papers/adaptive.ps.gz
Refering-URL: http://www.cs.cmu.edu/~softagents/publications_old.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: (decker,sycara,mikew)@cs.cmu.edu  
Title: Intelligent Adaptive Information Agents  
Author: Keith Decker, Katia Sycara, and Mike Williamson 
Address: 5000 Forbes Ave., Pittsburgh, PA 15213  
Affiliation: The Robotics Institute, Carnegie Mellon University  
Abstract: Adaptation in open, multi-agent information gathering systems is important for several reasons. These reasons include the inability to accurately predict future problem-solving work-loads, future changes in existing information requests, future failures and additions of agents and data supply resources, and other future task environment characteristic changes that require system reorganization. We are developing a multi-agent financial portfolio management system that must deal with all of these problems. This paper will briefly describe our approaches and solutions at several different levels within the agents: adaptation at the organizational, planning, scheduling, and execution levels. We discuss our solution for execution-level adaptation in detail, and present empirical evidence backing up the theory behind the solution. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Cohen, P. R., and Levesque, H. J. </author> <year> 1990. </year> <title> Intention is choice with commitment. </title> <booktitle> Artificial Intelligence 42(3) </booktitle> <pages> 213-261. </pages>
Reference-contexts: The most important constraint that the planning/plan retrieval algorithm needs to meet (as part of the agent's overall properties) is to guarantee at least one task for every goal until the goal is accomplished, removed, or believed to be unachiev-able <ref> (Cohen & Levesque 1990) </ref>. For information agents, a common reason that a goal in unachievable is that its specification is malformed, in which case a task to respond with the appropriate KQML error message is instantiated.
Reference: <author> Decker, K. S., and Lesser, V. R. </author> <year> 1995. </year> <title> Designing a family of coordination algorithms. </title> <booktitle> In Proceedings of the First International Conference on Multi-Agent Systems, </booktitle> <pages> 73-80. </pages> <address> San Francisco: </address> <note> AAAI Press. Longer version available as UMass CS-TR 94-14. </note>
Reference-contexts: The design of useful basic agent behaviors for all types of agents rests on a deeper specification of agents themselves, and is embodied in an agent architecture. Our current agent architecture is an instantiation of the DECAF (Distributed, Environment-Centered Agent Framework) architecture <ref> (Decker et al. 1995) </ref>. Control: Planning, Scheduling, and Action Execution The control process for information agents includes steps for planning to achieve local or non-local objectives, scheduling the actions within these plans, and actually carrying out these actions. In addition, the agent has a shutdown and an initialization process. <p> It has features derived from earlier classical planning work, as well as task structure representations such as TCA/TCX (Simmons 1994) and TMS <ref> (Decker & Lesser 1995) </ref>. The focus of planning in our system is on explicating the basic information flow relationships between tasks, and other relationships that affect control-flow decisions. Most control relationships are derivative of these more basic relationships. <p> Previous work has focussed on coordination mechanisms alone. In particular, the Generalized Partial Global Planning family of coordination mechanisms is a domain-independent approach to multi-agent scheduling- and planning-level coordination that works in conjunction with an agent's existing local scheduler to adapt a plan by adding certain constraints <ref> (Decker & Lesser 1995) </ref>. These include commitments to do a task with a minimum level of quality, or commitments to do a task by a certain deadline.
Reference: <author> Decker, K.; Lesser, V.; Prasad, M. N.; and Wagner, T. </author> <year> 1995. </year> <title> MACRON: an architecture for multi-agent cooperative information gathering. </title> <booktitle> In Proccedings of the CIKM-95 Workshop on Intelligent Information Agents. </booktitle>
Reference-contexts: The design of useful basic agent behaviors for all types of agents rests on a deeper specification of agents themselves, and is embodied in an agent architecture. Our current agent architecture is an instantiation of the DECAF (Distributed, Environment-Centered Agent Framework) architecture <ref> (Decker et al. 1995) </ref>. Control: Planning, Scheduling, and Action Execution The control process for information agents includes steps for planning to achieve local or non-local objectives, scheduling the actions within these plans, and actually carrying out these actions. In addition, the agent has a shutdown and an initialization process. <p> It has features derived from earlier classical planning work, as well as task structure representations such as TCA/TCX (Simmons 1994) and TMS <ref> (Decker & Lesser 1995) </ref>. The focus of planning in our system is on explicating the basic information flow relationships between tasks, and other relationships that affect control-flow decisions. Most control relationships are derivative of these more basic relationships. <p> Previous work has focussed on coordination mechanisms alone. In particular, the Generalized Partial Global Planning family of coordination mechanisms is a domain-independent approach to multi-agent scheduling- and planning-level coordination that works in conjunction with an agent's existing local scheduler to adapt a plan by adding certain constraints <ref> (Decker & Lesser 1995) </ref>. These include commitments to do a task with a minimum level of quality, or commitments to do a task by a certain deadline.
Reference: <author> Decker, K.; Williamson, M.; and Sycara, K. </author> <year> 1996. </year> <title> Modeling information agents: Advertisements, organizational roles, and dynamic behavior. </title> <booktitle> In Proceedings of the AAAI-96 Workshop on Agent Modeling. </booktitle>
Reference-contexts: The agent planning process (see Figure 1) takes as input the agent's current set of goals G (including any new, unplanned-for goals G n ), and the set of current task structures (plan instances) T . It produces a new set of current task structures <ref> (Williamson, Decker, & Sycara 1996) </ref>. * Each individual task T represents an instantiated approach to achieving one or more of the agent's goals Git is a unit of goal-directed behavior. <p> We have developed a standard basic advertising behavior that allows agents to encapsulate a model of their capabilities and send it to a matchmaker information agent (Kuokka & Harada 1995). Such a matchmaker agent can then be used by a multi-agent system to form several different organizational structures <ref> (Decker, Williamson, & Sycara 1996) </ref>: Uncoordinated Team: agents use a basic shared behavior for asking questions that first queries the matchmaker as to who might answer the query, and then chooses an agent randomly for the target query. <p> Managing can be viewed as brokering with special constraints on worker behavior brought about by the manager-worker authority relationship. This is not an exhaustive list. Our architecture has supported other explorations into understanding the effects of organizational structures <ref> (Decker 1996) </ref>. Planning Adaptation The planner portion of our agent architecture consists of a new hierarchical task network based planner using a plan formalism that admits sophisticated control structures such as looping and periodic tasks (Williamson, Decker, & Sycara 1996). <p> Our architecture has supported other explorations into understanding the effects of organizational structures (Decker 1996). Planning Adaptation The planner portion of our agent architecture consists of a new hierarchical task network based planner using a plan formalism that admits sophisticated control structures such as looping and periodic tasks <ref> (Williamson, Decker, & Sycara 1996) </ref>. It has features derived from earlier classical planning work, as well as task structure representations such as TCA/TCX (Simmons 1994) and TMS (Decker & Lesser 1995).
Reference: <author> Decker, K. S. </author> <year> 1996. </year> <title> Task environment centered simulation. </title>
Reference-contexts: The agent planning process (see Figure 1) takes as input the agent's current set of goals G (including any new, unplanned-for goals G n ), and the set of current task structures (plan instances) T . It produces a new set of current task structures <ref> (Williamson, Decker, & Sycara 1996) </ref>. * Each individual task T represents an instantiated approach to achieving one or more of the agent's goals Git is a unit of goal-directed behavior. <p> We have developed a standard basic advertising behavior that allows agents to encapsulate a model of their capabilities and send it to a matchmaker information agent (Kuokka & Harada 1995). Such a matchmaker agent can then be used by a multi-agent system to form several different organizational structures <ref> (Decker, Williamson, & Sycara 1996) </ref>: Uncoordinated Team: agents use a basic shared behavior for asking questions that first queries the matchmaker as to who might answer the query, and then chooses an agent randomly for the target query. <p> Managing can be viewed as brokering with special constraints on worker behavior brought about by the manager-worker authority relationship. This is not an exhaustive list. Our architecture has supported other explorations into understanding the effects of organizational structures <ref> (Decker 1996) </ref>. Planning Adaptation The planner portion of our agent architecture consists of a new hierarchical task network based planner using a plan formalism that admits sophisticated control structures such as looping and periodic tasks (Williamson, Decker, & Sycara 1996). <p> Our architecture has supported other explorations into understanding the effects of organizational structures (Decker 1996). Planning Adaptation The planner portion of our agent architecture consists of a new hierarchical task network based planner using a plan formalism that admits sophisticated control structures such as looping and periodic tasks <ref> (Williamson, Decker, & Sycara 1996) </ref>. It has features derived from earlier classical planning work, as well as task structure representations such as TCA/TCX (Simmons 1994) and TMS (Decker & Lesser 1995).
Reference: <editor> In Prietula, M.; Carley, K.; and Gasser, L., eds., </editor> <title> Simulating Organizations: Computational Models of Institutions and Groups. </title> <publisher> AAAI Press/MIT Press. Forthcoming. </publisher>
Reference: <author> Finin, T.; Fritzson, R.; McKay, D.; and McEntire, R. </author> <year> 1994. </year> <title> KQML as an agent communication language. </title> <booktitle> In Proceedings of the Third International Conference on Information and Knowledge Management CIKM'94. </booktitle> <publisher> ACM Press. </publisher>
Reference: <author> Garvey, A., and Lesser, V. </author> <year> 1995. </year> <title> Representing and scheduling satisficing tasks. </title> <editor> In Natarajan, S., ed., </editor> <title> Imprecise and Approximate Computation. </title> <publisher> Norwell, </publisher> <address> MA: </address> <publisher> Kluwer Academic Publishers. </publisher> <pages> 23-34. </pages>
Reference-contexts: Sophisticated schedulers will report such failures (or probable failures) before they occur by reasoning about action durations (and possibly commitments from other agents) <ref> (Garvey & Lesser 1995) </ref>. * The scheduler attempts to maximize some predefined utility function defined on the set of task structures. <p> In doing so, the scheduler may choose from both multiple methods (different algorithms that represent difference action duration/result quality tradeoffs) and anytime algorithms (summarized by duration/quality probability distribution tables (Zilberstein & Russell 1992)). Execution Adaptation Within this architecture, previous execution-time adaptation has focussed on monitoring actions <ref> (Garvey & Lesser 1995) </ref>. Recently, we have begun looking at load-balancing/rebalancing behaviors such as agent cloning. Cloning Cloning is one of an information agent's possible responses to overloaded conditions.
Reference: <author> Genesereth, M., and Katchpel, S. </author> <year> 1994. </year> <title> Software agents. </title> <journal> Communications of the ACM 37(7) 48-53,147. </journal>
Reference: <author> Kuokka, D., and Harada, L. </author> <year> 1995. </year> <title> On using KQML for matchmaking. </title> <booktitle> In Proceedings of the First International Conference on Multi-Agent Systems, </booktitle> <pages> 239-245. </pages> <address> San Francisco: </address> <publisher> AAAI Press. </publisher>
Reference-contexts: We have developed a standard basic advertising behavior that allows agents to encapsulate a model of their capabilities and send it to a matchmaker information agent <ref> (Kuokka & Harada 1995) </ref>.
Reference: <author> Lawrence, P., and Lorsch, J. </author> <year> 1967. </year> <title> Organization and Environment. </title> <address> Cambridge, MA: </address> <publisher> Harvard University Press. </publisher>
Reference-contexts: Finally, we present a fairly comprehensive account of one type of execution-time adaptation (self-cloning). Organizational Adaptation It has been clear to organizational theorists since at least the 60's that there is no one good organizational structure for human organizations <ref> (Lawrence & Lorsch 1967) </ref>. Organizations must instead be chosen and adapted to the task environment at hand.
Reference: <author> Prasad, M. N., and Lesser, V. </author> <year> 1996. </year> <title> Learning situation--specific coordination in generalized partial global planning. </title> <booktitle> In AAAI Spring Symposium on Adaptation, Co-evolution and Learning in Multiagent Systems. </booktitle>
Reference-contexts: If the resulting plan can be successfully scheduled, these local commitments can be communicated to other agents where they become non-local commitments to those agent's local schedulers. Not all mechanisms are needed in all environments. Nagendra-Prasad has begun work on learning which mechanisms are needed in an environment automatically <ref> (Prasad & Lesser 1996) </ref>. Scheduling Adaptation In our current work, we have been using a fairly simple earliest deadline first scheduler that does little adaptation besides adjusting the deadlines of periodic (technically max invocation separation constrained) actions that miss or are about to miss their initial deadlines.
Reference: <author> Scott, W. R. </author> <year> 1987. </year> <title> Organizations: Rational, Natural, and Open Systems. </title> <address> Englewood Cliffs, NJ: </address> <publisher> Prentice-Hall, Inc. </publisher>
Reference-contexts: Most important are the different types and qualities of uncertainty present in the environment (e.g., uncertainty associated with inputs and output measurements, uncertainty associated with causal relationships in the environment, the time span of definitive feedback after making a decision <ref> (Scott 1987) </ref>). Recently, researchers have proposed that organizations grow toward, and structure themselves around, sources of information that are important to them because they are sources of news about how the future is (evidently) turning out (Stinchcombe 1990).
Reference: <author> Simmons, R. </author> <year> 1994. </year> <title> Structured control for autonomous robots. </title> <journal> IEEE Trans. on Robotics and Automation 10(1). </journal>
Reference-contexts: It has features derived from earlier classical planning work, as well as task structure representations such as TCA/TCX <ref> (Simmons 1994) </ref> and TMS (Decker & Lesser 1995). The focus of planning in our system is on explicating the basic information flow relationships between tasks, and other relationships that affect control-flow decisions. Most control relationships are derivative of these more basic relationships.
Reference: <author> Stinchcombe, A. L. </author> <year> 1990. </year> <institution> Information and Organizations. Berkeley, CA: University of California Press. </institution>
Reference-contexts: Recently, researchers have proposed that organizations grow toward, and structure themselves around, sources of information that are important to them because they are sources of news about how the future is (evidently) turning out <ref> (Stinchcombe 1990) </ref>. In multi-agent information systems, one of the most important sources of uncertainty revolves around what information is available from whom (and at what cost).
Reference: <author> Wellman, M. </author> <year> 1993. </year> <title> A market-oriented programming environment and its application to distributed multicommodity flow problems. </title> <journal> Journal of Artificial Intelligence Research 1 </journal> <pages> 1-23. </pages>
Reference-contexts: We have constructed general purpose brokering agents, and are currently conducting an empirical study of matchmaking vs. brokering behavior. Of course, a hybrid organization is both possible and com pelling in many situations. Economic Markets: (e.g., <ref> (Wellman 1993) </ref>) agents use price, reliability, and other utility characteristics with which to choose another agent. The matchmaker can supply to each agent the appropriate updated pricing information as new agents enter and exit the system, or alter their advertisements.
Reference: <author> Wiederhold, G.; Wegner, P.; and Cefi, S. </author> <year> 1992. </year> <title> Toward megaprogramming. </title> <journal> Communications of the ACM 33(11) </journal> <pages> 89-99. </pages>
Reference: <author> Williamson, M.; Decker, K.; and Sycara, K. </author> <year> 1996. </year> <title> Unified information and control flow in hierarchical task networks. </title> <booktitle> In Proceedings of the AAAI-96 workshop on Theories of Planning, Action, and Control. </booktitle>
Reference-contexts: The agent planning process (see Figure 1) takes as input the agent's current set of goals G (including any new, unplanned-for goals G n ), and the set of current task structures (plan instances) T . It produces a new set of current task structures <ref> (Williamson, Decker, & Sycara 1996) </ref>. * Each individual task T represents an instantiated approach to achieving one or more of the agent's goals Git is a unit of goal-directed behavior. <p> We have developed a standard basic advertising behavior that allows agents to encapsulate a model of their capabilities and send it to a matchmaker information agent (Kuokka & Harada 1995). Such a matchmaker agent can then be used by a multi-agent system to form several different organizational structures <ref> (Decker, Williamson, & Sycara 1996) </ref>: Uncoordinated Team: agents use a basic shared behavior for asking questions that first queries the matchmaker as to who might answer the query, and then chooses an agent randomly for the target query. <p> Our architecture has supported other explorations into understanding the effects of organizational structures (Decker 1996). Planning Adaptation The planner portion of our agent architecture consists of a new hierarchical task network based planner using a plan formalism that admits sophisticated control structures such as looping and periodic tasks <ref> (Williamson, Decker, & Sycara 1996) </ref>. It has features derived from earlier classical planning work, as well as task structure representations such as TCA/TCX (Simmons 1994) and TMS (Decker & Lesser 1995).
Reference: <author> Zilberstein, S., and Russell, S. J. </author> <year> 1992. </year> <title> Constructing utility-driven real-time systems using anytime algorithms. </title> <booktitle> In Proceedings of the IEEE Workshop on Imprecise and Approximate Computation, </booktitle> <pages> 6-10. </pages>
Reference-contexts: In doing so, the scheduler may choose from both multiple methods (different algorithms that represent difference action duration/result quality tradeoffs) and anytime algorithms (summarized by duration/quality probability distribution tables <ref> (Zilberstein & Russell 1992) </ref>). Execution Adaptation Within this architecture, previous execution-time adaptation has focussed on monitoring actions (Garvey & Lesser 1995). Recently, we have begun looking at load-balancing/rebalancing behaviors such as agent cloning. Cloning Cloning is one of an information agent's possible responses to overloaded conditions.
References-found: 19

