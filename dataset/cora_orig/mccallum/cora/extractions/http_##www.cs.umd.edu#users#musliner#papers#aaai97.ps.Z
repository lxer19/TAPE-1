URL: http://www.cs.umd.edu/users/musliner/papers/aaai97.ps.Z
Refering-URL: http://www.cs.umd.edu/users/musliner/
Root-URL: 
Email: fgoldman,musliner,krebsbac,boddyg@htc.honeywell.com  
Title: Dynamic Abstraction Planning  
Author: Robert P. Goldman, David J. Musliner, Kurt D. Krebsbach, Mark S. Boddy 
Address: 3660 Technology Drive Minneapolis, MN 55418  
Affiliation: Automated Reasoning Group Honeywell Technology Center  
Note: To appear in Proc. AAAI'97  
Abstract: This paper describes Dynamic Abstraction Planning (DAP), an abstraction planning technique that improves the efficiency of state-enumeration planners for real-time embedded systems such as CIRCA. Abstraction is used to remove detail from the state representation, reducing both the size of the state space that must be explored to produce a plan and the size of the resulting plan. The intuition behind this approach is simple: in some situations, certain world features are important, while in other situations those same features are not important. By automatically selecting the appropriate level of abstraction at each step during the planning process, DAP can significantly reduce the size of the search space. Furthermore, the planning process can supply initial plans that preserve safety but might, on further refinement, do a better job of goal achievement. DAP can also terminate with an executable abstract plan, which may be much smaller than the corresponding plan expanded to precisely-defined states. Preliminary results show dramatic improvements in planning speed and scalability. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Dearden, R., and Boutilier, C. </author> <year> 1997. </year> <title> Abstraction and approximate decision-theoretic planning. </title> <journal> Artificial Intelligence 89(1-2):219-283. </journal>
Reference: <author> Godefroid, P., and Kabanza, F. </author> <year> 1991. </year> <title> An efficient reactive planner for synthesizing reactive plans. </title> <booktitle> In Proc. Nat'l Conf. on Artificial Intelligence, </booktitle> <pages> 640-645. </pages>
Reference-contexts: Kabanza's group has concentrated on developing a more flexible notation for goals than those used by CIRCA, but they do not make the same distinction between safety and goal achievement. In previous work, Godefroid and Kabanza <ref> (Godefroid & Ka-banza 1991) </ref> developed an abstraction technique based on partial orders. Their results allow a system to examine only a single ordering of independent actions, rather than enumerating all possible orderings. Unfortunately, these results are not immediately applicable to CIRCA, because their world model does not include exogenous events.
Reference: <author> Goldman, R. P., and Boddy, M. S. </author> <year> 1994. </year> <title> Conditional linear planning. </title> <booktitle> In Proc. Second Int'l Conf. on Artificial Intelligence Planning Systems, </booktitle> <pages> 80-85. </pages>
Reference-contexts: Our state descriptions are partial, and one way for the DAP planner to establish a proposition is to refine a partial state description to include that propo sition. Note that this operation is similar to the kind of conditional planning done by CNLP (Peot & Smith 1992) and Plinth <ref> (Goldman & Boddy 1994) </ref>: when the planner cannot determine a priori the value of a proposition, it plans for both alternatives. The planner combines information about the context of a state with the heuristic information provided by the operator-proposition graph.
Reference: <author> Kabanza, F.; Barbeau, M.; and St-Denis, R. </author> <year> 1997. </year> <title> Planning control rules for reactive agents. </title> <type> Technical Report 197, </type> <institution> Comp. Sci. Dept., Univ. of Sherbrooke. </institution>
Reference-contexts: Second, their method is uniform: the same propositions are relevant everywhere. The underlying model is also significantly different from CIRCA's: it does not model exogenous events or the timing required for real-time guarantees. Kabanza et al. <ref> (Kabanza, Barbeau, & St-Denis 1997) </ref> have developed a planning method for reactive agents that is similar to the original CIRCA. Their architecture differs in emphasis, however. The NFAs it constructs are "clocked:" they make transitions at times that are the least common denominator of all possible transitions. <p> Their results allow a system to examine only a single ordering of independent actions, rather than enumerating all possible orderings. Unfortunately, these results are not immediately applicable to CIRCA, because their world model does not include exogenous events. The more recent work by Kabanza et al. <ref> (Kabanza, Barbeau, & St-Denis 1997) </ref> does include exogenous events, but they do not seem to have carried over the earlier abstraction concepts. Future Directions In this paper, we have presented Dynamic Abstraction Planning (DAP), an abstraction technique that we use to generate real-time control plans in the CIRCA system.
Reference: <author> Kambhampati, S. </author> <year> 1994. </year> <title> Refinement search as a unifying framework for analyzing planning algorithms. </title> <booktitle> In Proc. Fourth Int'l Conf. on Principles of Knowledge Representation and Reasoning. </booktitle>
Reference-contexts: Related Work Many classical planning systems have used abstraction methods to increase the efficiency of searching for plans (see <ref> (Kambhampati 1994) </ref> for a brief survey). However, these abstractions are typically used only as guides in searching for a plan; the system may not know that its goals will actually be achieved by an abstract plan, and it will not be able to execute the abstracted operators directly.
Reference: <author> Knoblock, C. A. </author> <year> 1994. </year> <title> Automatically generating abstractions for planning. </title> <booktitle> Artificial Intelligence 68 </booktitle> <pages> 243-302. </pages>
Reference-contexts: Their method is similar to the DAP approach in that it involves aggregating states, but there are some differences. First, their method is not dynamic: aggregation is performed using a predefined set of "relevant" propositions, which is determined using Knoblock's approach <ref> (Knoblock 1994) </ref>. Second, their method is uniform: the same propositions are relevant everywhere. The underlying model is also significantly different from CIRCA's: it does not model exogenous events or the timing required for real-time guarantees.
Reference: <author> McDermott, D. </author> <year> 1996. </year> <title> A heuristic estimator for means-ends analysis in planning. </title> <booktitle> In Proc. Third Int'l Conf. on Artificial Intelligence Planning Systems, </booktitle> <pages> 142-149. </pages>
Reference-contexts: The heuristic we use for directing the choice of actions and refinements is a modified version of McDermott's heuristic estimator for state-based ADL planning <ref> (McDermott 1996) </ref>. When choosing how to handle a state, the planner constructs an operator-proposition graph connecting the current state description to the goal state description. This is a layered graph, with alternating layers containing nodes that represent propositions to be achieved and operators that can establish those propositions.
Reference: <author> Musliner, D. J.; Durfee, E. H.; and Shin, K. G. </author> <year> 1993. </year> <title> CIRCA: a cooperative intelligent real-time control architecture. </title> <journal> IEEE Trans. Systems, Man, and Cybernetics 23(6) </journal> <pages> 1561-1574. </pages>
Reference: <author> Musliner, D. J.; Durfee, E. H.; and Shin, K. G. </author> <year> 1995. </year> <title> World modeling for the dynamic construction of real-time control plans. </title> <booktitle> Artificial Intelligence 74(1) </booktitle> <pages> 83-127. </pages>
Reference-contexts: CIRCA's planning system builds reaction plans based on a world model and a set of formally-defined safety conditions that must be satisfied by feasible plans <ref> (Musliner, Durfee, & Shin 1995) </ref>. Because this world model is the focus of the abstraction techniques discussed in this paper, a brief review of the model formulation is in order. <p> The assignments determine the topology of the NFA (and so the set of reachable states): preemption of temporal transitions removes edges and assignment of actions adds them. System safety is guaranteed by planning action transitions that preempt all transitions to failure, making the failure state unreachable <ref> (Musliner, Durfee, & Shin 1995) </ref>.
Reference: <author> Peot, M. A., and Smith, D. E. </author> <year> 1992. </year> <title> Conditional nonlinear planning. </title> <booktitle> In Proc. First Int'l Conf. on Artificial Intelligence Planning Systems, </booktitle> <pages> 189-197. </pages>
Reference-contexts: Our state descriptions are partial, and one way for the DAP planner to establish a proposition is to refine a partial state description to include that propo sition. Note that this operation is similar to the kind of conditional planning done by CNLP <ref> (Peot & Smith 1992) </ref> and Plinth (Goldman & Boddy 1994): when the planner cannot determine a priori the value of a proposition, it plans for both alternatives. The planner combines information about the context of a state with the heuristic information provided by the operator-proposition graph.
Reference: <author> Sacerdoti, E. D. </author> <year> 1974. </year> <title> Planning in a hierarchy of abstraction spaces. </title> <booktitle> Artificial Intelligence 5(2) </booktitle> <pages> 115-135. </pages>
Reference-contexts: This corresponds closely to the methods used in early work on abstraction planning systems to generate abstract operators by omitting less-critical elements of operator precondition lists (cf. ABSTRIPS <ref> (Sacerdoti 1974) </ref>). ABSTRIPS planned at an abstract level that then restricted the extent of the detailed planning required to build a final plan.
References-found: 11

