URL: http://www.cs.pitt.edu/~kirk/papers/insert.ps
Refering-URL: http://www.cs.pitt.edu/~kirk/papers/index.html
Root-URL: 
Title: Not All Insertion Methods Yield Constant Approximate Tours in the Euclidean Plane  
Author: Vineet Bafna Bala Kalyanasundaram Kirk Pruhs 
Note: 1 Supported in part by NSF under grant CCR-9114545 2 Supported in part by NSF under grant CCR-9009318 3 Supported in part by NSF under grant CCR-9209283  
Date: March 24, 1993  
Address: Park, PA 16801  Pittsburgh Pittsburgh, PA 15260  
Affiliation: Department of Computer Science Penn State University University  Computer Science Department University of  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> N. Alon and Y. Azar, </author> <title> "On-line Steiner Trees in the Euclidean Plane," </title> <booktitle> to appear in Proceedings of 8th Symposium on Computational Geometry, </booktitle> <year> 1992. </year>
Reference-contexts: If the metric space is a plane, Alon and Azar <ref> [1] </ref> showed that every algorithm must create trees that are (log n= log log n) approximate for some instances. It is not hard to show that all these results still hold if Steiner points are allowed.
Reference: [2] <author> Y. Azar, </author> <title> "Lower Bounds for Insertion Methods for TSP", </title> <type> Manuscript. </type>
Reference-contexts: We have recently learned that Azar <ref> [2] </ref> has independently discovered the result presented in the paper as well as an (log n= log log n) on the performance guarantee of random insert.
Reference: [3] <author> R. Baeza-Yates, J. Culberson, and G. Rawlins, </author> <title> "Searching with Uncertainty", </title> <note> to appear in Information and Computation. </note>
Reference: [4] <author> J. Bentley, </author> <title> "Experiments on Traveling Salesman Heuristics", </title> <booktitle> Proceedings of 1st ACM/SIAM Conference on Discrete Algorithms, </booktitle> <pages> pp. 91-99, </pages> <year> 1990. </year>
Reference-contexts: Note that the cost of the minimum spanning tree is at most the cost of the optimal tour, which in turn, has cost at most twice the cost of the minimum spanning tree [7]. In empirical trials conducted by Bentley <ref> [4] </ref> and Rosenkrantz et al, the orderings that yielded the best tours of points uniformly distributed in the unit square were farthest insertion and random insertion.
Reference: [5] <author> J. Bentley and J. Saxe, </author> <title> "An Analysis of Two Heuristics for the Euclidean Traveling Salesman Problem", </title> <booktitle> Proceedings of the Eighteenth Annual Allerton Conference on Communication, Control, and Computing, </booktitle> <pages> pp. 41-49, </pages> <year> 1980. </year>
Reference-contexts: Furthermore, in these instances the underlying metric space is the Euclidean plane. The construction is a modification of a construction used by Bentley and Saxe <ref> [5] </ref> to prove that the performance guarantee for the algorithm Nearest Neighbor was (log n= log log n). Our original motivation for studying the performance guarantee of an arbitrary insertion method arose from our interest in the following online problem. <p> metric space? Can a constant approximate spanning tree (or tour) be maintained in the Euclidean plane with only one edge deletion per new point? How many edge deletions are needed in a general metric space? Acknowledgments: We would like to thank Jim Saxe for informing us of the construction in <ref> [5] </ref>. We have recently learned that Azar [2] has independently discovered the result presented in the paper as well as an (log n= log log n) on the performance guarantee of random insert.
Reference: [6] <author> B. Chandra, and S. Vishwanathan, </author> <title> "Constructing Reliable Communication Networks of Small Weight Online", </title> <type> Manuscript. </type>
Reference-contexts: In a general metric space, if one is not allowed to remove any part of the already existing tree, Imase and Waxman [8] and Chandra and Vishwanathan <ref> [6] </ref> proved that every algorithm must create spanning trees that are (log n) approximate for some instances. If the metric space is a plane, Alon and Azar [1] showed that every algorithm must create trees that are (log n= log log n) approximate for some instances.
Reference: [7] <author> M. Garey and D. Johnson, </author> <title> "Computers and Intractability: A Guide to the Theory of NP-completeness", W.H. </title> <publisher> Freeman, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: The performance guarantee P G A (n) of an algorithm A is the supremum over all instances with n vertices of the cost of the tour produced by A divided by the cost of the optimal tour <ref> [7] </ref>. Rosenkrantz, Stearns, and Lewis [11] proved that some orderings of the input points yield a performance guarantee of at most two (independent of n). One example of such an ordering is nearest insertion. <p> Note that the cost of the minimum spanning tree is at most the cost of the optimal tour, which in turn, has cost at most twice the cost of the minimum spanning tree <ref> [7] </ref>. In empirical trials conducted by Bentley [4] and Rosenkrantz et al, the orderings that yielded the best tours of points uniformly distributed in the unit square were farthest insertion and random insertion.
Reference: [8] <author> M. Imase, and B. Waxman, </author> <title> "Dynamic Steiner Tree Problem", </title> <journal> SIAM Journal of Discrete Mathematics, </journal> <volume> 4, </volume> <pages> pp. 369-384, </pages> <year> 1991. </year>
Reference-contexts: In a general metric space, if one is not allowed to remove any part of the already existing tree, Imase and Waxman <ref> [8] </ref> and Chandra and Vishwanathan [6] proved that every algorithm must create spanning trees that are (log n) approximate for some instances. <p> One natural question to ask is how much one needs to modify the existing spanning tree (tour) to maintain a tree (tour) that is constant approximate. One natural way to measure the amount of modification is the number of edge deletions. For a general metric space, Imase and Waxman <ref> [8] </ref> showed that O (n 3=2 ) edge deletions are sufficient to maintain a constant approximate tree over n point expansions, for an amortized cost of O ( p n) edge deletions per new point.
Reference: [9] <author> B. Kalyanasundaram, and K. Pruhs, </author> <title> "Online Construction of Short Traveling Salesman Tours", </title> <type> Technical Report 92-2, </type> <institution> Computer Science Department, University of Pitts-burgh, </institution> <year> 1992. </year>
Reference: [10] <author> E. Lawler, J. Lenstra, A. Rinnooy Kan, and D. Smoys, </author> <title> The Traveling Salesman Problem, </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: In farthest insertion the point v i+1 is the point not in T i that is farthest from T i , and in random insertion v i+1 is chosen uniformly at random among the remaining points. However, the performance guarantees of these insertion methods are unknown <ref> [10] </ref>. Rosenkrantz et al proved that the performance guarantee of every the insertion method, given a worst-case point ordering, is at most dlog ne + 1. <p> Fur--thermore, we want to minimize the amount of wire that is used. The well known optimal solution is that the connections should form a minimal spanning tree of the underlying distance graph <ref> [10] </ref>. However, over time it is likely that new cities will need to be added to the network. Since digging up existing phone lines would have significant cost, it would be infeasible to maintain the invariant that the cities are connected by the minimal spanning tree.
Reference: [11] <author> D. Rosenkrantz, R. Stearns, and P. Lewis, </author> <title> "An Analysis of Several Heuristics for the Traveling Salesman Problem", </title> <journal> SIAM Journal of Computing, </journal> <volume> 6, </volume> <pages> pp. 563-581, </pages> <year> 1977. </year> <month> 8 </month>
Reference-contexts: 1 Introduction Insertion methods are a class of algorithms, proposed by Rosenkrantz, Stearns and Lewis <ref> [11] </ref> for constructing a tour visiting a set V of points in a metric space M . <p> The performance guarantee P G A (n) of an algorithm A is the supremum over all instances with n vertices of the cost of the tour produced by A divided by the cost of the optimal tour [7]. Rosenkrantz, Stearns, and Lewis <ref> [11] </ref> proved that some orderings of the input points yield a performance guarantee of at most two (independent of n). One example of such an ordering is nearest insertion.
Reference: [12] <author> G. Toussaint, </author> <title> "The Relative Neighborhood Graph of a Finite Planar Set", </title> <journal> Pattern Recognition, </journal> <volume> 12, </volume> <pages> pp. 261-268, </pages> <year> 1980. </year> <month> 9 </month>
References-found: 12

