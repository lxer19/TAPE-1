URL: http://www.cs.berkeley.edu/~amit/research/Postscript/adm-adv.ps
Refering-URL: http://www.cs.berkeley.edu/~amit/research/index.html
Root-URL: http://www.cs.berkeley.edu
Email: fferrari,amitg@tenet.berkeley.edu  
Title: Admission control for advance reserved real-time connections  
Author: Domenico Ferrari and Amit Gupta 
Affiliation: University of California at Berkeley, and International Computer Science Institute, Berkeley  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Riccardo Bettati, Domenico Ferrari, Amit Gupta, Wendy Heffner, Wingwai Howe, Quyen Nguyen, Mark Moran, and Raj Yavatkar. </author> <title> Connection establishment for multi-party real-time communication. </title> <booktitle> Proceedings of Fifth International Workshop on Network and Operating Systems Support for Distributed Audio and Video, </booktitle> <address> Durham, NH, </address> <month> April </month> <year> 1994. </year>
Reference-contexts: This description is in the framework of the Tenet protocols <ref> [1] </ref>, though the underlying ideas and techniques are equally applicable to other techniques, including the ones in ST-2 and RSVP. <p> Channel establishment is a distributed process; the interested reader is referred to <ref> [1] </ref> for more details.
Reference: [2] <author> Domenico Ferrari, Amit Gupta, and Giorgio Ven-tre. </author> <title> Advance reservations for real-time communication. </title> <booktitle> Proceedings of Fifth International Workshop on Network and Operating Systems Support for Distributed Audio and Video, </booktitle> <address> Durham, NH, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: For simplicity, we only describe the fully-distributed technique here. 2 a resource partition is somewhat similar to a class of CBQ 3 Please see <ref> [2] </ref> for setting up and dynamically modifying partition allocations vation or for advance reservation; in case of advance reservations, the client also specifies the start and end time for the request (e.g. the channel is for a lecture that will start on Wednesday at 10:00 am and end at 2:00 pm). <p> In general, such an arrival will find the future-time axis of the server subdivided into n intervals, and its expected lifetime will completely cover some of them, but its birth and death may split up to two of the existing intervals. Please see <ref> [2] </ref> for more details of our advance reservation mechanisms. 3 Admission control mechanisms In the previous section, we described the design goals for the admission control mechanisms; in this section, we describe the mechanisms that we implemented for admission control of advance-reserved connections.
Reference: [3] <author> Amit Gupta and Domenico Ferrari. </author> <title> Resource partitioning for multi-party real-time communication. </title> <type> Technical Report TR-94-061, </type> <institution> International Computer Science Institute, Berkeley, California, </institution> <month> November </month> <year> 1994. </year> <note> Also to appear in IEEE/ACM Transactions on Networking, </note> <month> October </month> <year> 1995. </year>
Reference-contexts: MECHANISMS: These advance reservation services are based on top of resource partitioning <ref> [3] </ref>, which supports dividing a single server into multiple virtual servers, with independent admission control decisions 2 . For this description, we assume that all the network servers have two partitions each, one for supporting advance-reserved channels, and the other for supporting non-advance (immediate) channels 3 .
Reference: [4] <author> Amit Gupta, Winnie Howe, Mark Moran, and Quyen Nguyen. </author> <title> Resource sharing in multi-party realtime communication. </title> <booktitle> Proceedings of INFO-COM 95, </booktitle> <address> Boston, MA, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: 4 information . for channels that belong to this partition-server current resource allocations; this information is maintained as an interval table, with a pointer to the appropriate admission con trol server for each time interval. 4 resource allocations can be made more efficient by sharing resource allocations among related channels <ref> [4] </ref> The RRC is responsible for maintaining informa-tion about resource sharing on a per-partition-server basis and for coordinating the admission control tests among the admission control server objects. <p> In the workshop, we will describe the following: (a) interactions with techniques for sharing resource allocations among related channels <ref> [4, 5] </ref>; (b) setting system parameters, including limits on the advance notice period and granularity of time-specification; (c) performance measurements over many different network topology and workload distributions; and (d) design issues and trade-offs in dynamically changing partition allocations and moving resource reservation requests between immediate and advance partitions.
Reference: [5] <author> Amit Gupta and Mark Moran. </author> <title> Channel groups: A unifying abstraction for specifying inter-stream relationships. </title> <type> Technical Report TR-93-015, </type> <institution> International Computer Science Institute, Berkeley, Cali-fornia, </institution> <month> March </month> <year> 1993. </year>
Reference-contexts: In the workshop, we will describe the following: (a) interactions with techniques for sharing resource allocations among related channels <ref> [4, 5] </ref>; (b) setting system parameters, including limits on the advance notice period and granularity of time-specification; (c) performance measurements over many different network topology and workload distributions; and (d) design issues and trade-offs in dynamically changing partition allocations and moving resource reservation requests between immediate and advance partitions.
References-found: 5

