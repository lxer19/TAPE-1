URL: http://polaris.cs.uiuc.edu/reports/970.ps.gz
Refering-URL: http://polaris.cs.uiuc.edu/tech_reports.html
Root-URL: http://www.cs.uiuc.edu
Title: The LIDEX Approach  
Author: Jose Eduardo Moreira Wilson Vicente Ruggiero Departamento de Engenharia de Eletricidade, Escola Politecnica da 
Note: This work was supported in part by the Interamerican Development Bank/University of S~ao Paulo project, and the U. S. Department of Energy under Grant No. DE-FG02-85ER25001. Jose E. Moreira is with Laboratorio de Sistemas Integraveis, and Wilson V. Ruggiero is with Laboratorio  
Date: February 1990  970  
Address: S~ao Paulo, Brasil  USA  
Affiliation: Universidade de  Center for Supercomputing Research and Development University of Illinois at Urbana-Champaign,  de Sistemas Digitais  
Pubnum: CSRD Report No.  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Mario R. Barbacci. </author> <title> A Comparison of Register Transfer Languages for Describing Computers and Digital Systems. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-24(2):137-150, </volume> <month> February </month> <year> 1975. </year>
Reference-contexts: Many hardware description languages have been available for long time, with varying degree of description power and success of applicability, such as CDL <ref> [4, 5, 1] </ref>, ISPS [2], and AHPL [7, 6].
Reference: [2] <author> Mario R. Barbacci. </author> <title> Instruction Set Processor Specification (ISPS): The Notation and Its Applications. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-30(1):24-40, </volume> <month> January </month> <year> 1981. </year>
Reference-contexts: Many hardware description languages have been available for long time, with varying degree of description power and success of applicability, such as CDL [4, 5, 1], ISPS <ref> [2] </ref>, and AHPL [7, 6].
Reference: [3] <author> Melvin A. Breuer. </author> <title> Digital System Design Automation: Languages, Simulation & Data Base. </title> <publisher> Computer Science Press, Inc., </publisher> <address> Rockville, MD, </address> <year> 1975. </year>
Reference-contexts: but the efforts will continue with LIDEX . 4 The LIDER simulator really consists of two programs: one which reads a description in LIDER and generates a data structure representing the system, and another one which interprets the information stored in the data structure, executing the simulation (table driven simulator <ref> [3] </ref>). <p> The steps involved in simulating a system in the SPD are the following: 1. A description of the computer, and optionally of its assembler, is written in LD; 2. The LD description is compiled, by the LD compiler, in an Algol program that simulates the system (compiled code simulator <ref> [3] </ref>); 3. The Algol program is executed, reading the simulation commands from an LE file, carrying on the simulation and generating the results. The Algol program generated by the LD compiler is composed by three parts: 1.
Reference: [4] <author> Y. Chu. </author> <title> An Algol-like Computer Design Language. </title> <journal> Communications of the ACM, </journal> <volume> 8(10) </volume> <pages> 607-615, </pages> <month> October </month> <year> 1965. </year>
Reference-contexts: Many hardware description languages have been available for long time, with varying degree of description power and success of applicability, such as CDL <ref> [4, 5, 1] </ref>, ISPS [2], and AHPL [7, 6].
Reference: [5] <author> Y. Chu. </author> <title> Introducing the Computer Design Language. </title> <booktitle> In Proceedings of the IEEE Computer Conference, COMPCON 72, </booktitle> <pages> pages 215-218, </pages> <address> San Francisco, </address> <month> September </month> <year> 1972. </year>
Reference-contexts: Many hardware description languages have been available for long time, with varying degree of description power and success of applicability, such as CDL <ref> [4, 5, 1] </ref>, ISPS [2], and AHPL [7, 6].
Reference: [6] <author> Fredrick J. Hill and Z. Navabi. </author> <title> Extending Second Generation AHPL Software to Ac-comodate AHPL III. </title> <booktitle> In Proceedings of the 4th Interational Symposium on Computer Hardware Description Languages, </booktitle> <month> October </month> <year> 1979. </year>
Reference-contexts: Many hardware description languages have been available for long time, with varying degree of description power and success of applicability, such as CDL [4, 5, 1], ISPS [2], and AHPL <ref> [7, 6] </ref>. Now there is VHDL [8], which is supposed to be able to describe any digital system, at any desired level of abstraction and in any of the design axis; and indeed, as much ambitious as this may seem, VHDL is experimenting a spectacular success [11, 12].
Reference: [7] <author> Fredrick J. Hill and Gerald R.Peterson. </author> <title> Digital Systems: Hardware Organization and Design, Second Edition. </title> <publisher> John Wiley & Sons, </publisher> <address> New York, </address> <year> 1978. </year>
Reference-contexts: Many hardware description languages have been available for long time, with varying degree of description power and success of applicability, such as CDL [4, 5, 1], ISPS [2], and AHPL <ref> [7, 6] </ref>. Now there is VHDL [8], which is supposed to be able to describe any digital system, at any desired level of abstraction and in any of the design axis; and indeed, as much ambitious as this may seem, VHDL is experimenting a spectacular success [11, 12].
Reference: [8] <institution> The Institute of Electrical and Electronics Engineers, Inc, </institution> <address> New York. </address> <note> IEEE Stan-dandard VHDL 7.2 Language Reference Manual, 1988. 15 </note>
Reference-contexts: Many hardware description languages have been available for long time, with varying degree of description power and success of applicability, such as CDL [4, 5, 1], ISPS [2], and AHPL [7, 6]. Now there is VHDL <ref> [8] </ref>, which is supposed to be able to describe any digital system, at any desired level of abstraction and in any of the design axis; and indeed, as much ambitious as this may seem, VHDL is experimenting a spectacular success [11, 12].
Reference: [9] <author> Kathleen Jensen and Niklaus Wirth. </author> <title> Pascal User Manual and Report. </title> <publisher> Springer--Verlag, </publisher> <address> New York, </address> <year> 1975. </year>
Reference-contexts: Wirth has long ago expressed his conviction that "the language in which the student is taught to express his ideas profoundly influences his habits of thought and invention" <ref> [9] </ref>; * To be useful as a language for exploiting parallel architectures, it should allow the description of systems with many equal parts in an easy way; * Due to the lack of sophisticated resources, the language should be suitable for use, both for research and teaching purposes, in a low-cost
Reference: [10] <institution> Joao Jose Neto. SPD - Um Sistema Automatico de Apoio ao Projeto e Desenvolvi-mento de Sistemas Digitais. </institution> <type> PhD thesis, </type> <institution> Escola Politecnica da Universidade de Sao Paulo, Sao Paulo, SP, </institution> <year> 1980. </year> <note> in Portuguese. </note>
Reference-contexts: of Sao Paulo, an to serve as a first draft of a professional tool [13]; * The SPD project, Automatic System for Support to Design and Development of Digital Systems, conducted by Joao Jose Neto at the University of Sao Paulo, driven by the needs of some computer design projects <ref> [10] </ref>. 2.1 The LIDER Project The LIDER language was used for many years (until the advent of LIDEX ) in computer architecture and organization courses at the University of Sao Paulo.
Reference: [11] <author> Jonah McLeod. </author> <title> A Giant Leap for Simulation. </title> <publisher> Electronics, </publisher> <pages> pages 73-80, </pages> <year> 1989. </year>
Reference-contexts: Now there is VHDL [8], which is supposed to be able to describe any digital system, at any desired level of abstraction and in any of the design axis; and indeed, as much ambitious as this may seem, VHDL is experimenting a spectacular success <ref> [11, 12] </ref>. Even though, the need for a new language, an extension of LIDER, is justifiable for the following reasons: 2 * LIDER has been used for many years at the University of Sao Paulo as a language for teaching computer architecture and organization, with great success.
Reference: [12] <author> Ernest Meyer. </author> <title> VHDL Opens the Road to Top-Down Design. </title> <booktitle> Computer Design, </booktitle> <pages> pages 57-62, </pages> <month> February </month> <year> 1989. </year>
Reference-contexts: Now there is VHDL [8], which is supposed to be able to describe any digital system, at any desired level of abstraction and in any of the design axis; and indeed, as much ambitious as this may seem, VHDL is experimenting a spectacular success <ref> [11, 12] </ref>. Even though, the need for a new language, an extension of LIDER, is justifiable for the following reasons: 2 * LIDER has been used for many years at the University of Sao Paulo as a language for teaching computer architecture and organization, with great success. <p> Of course software for new machines can also be tested, but the LIDEX environment is much less ambitious at this point than the the SPD project and the VHDL related projects of JRS Laboratories and Zycad <ref> [12] </ref>, which intend to provide support for, at least, operating system kernel development.
Reference: [13] <author> Scopus Tecnologia, Sao Paulo, </author> <title> SP. Manual LIDER, </title> <booktitle> 1986. in Portuguese. </booktitle> <pages> 16 </pages>
Reference-contexts: The LIDER project, which involved the development of a RT language and its simulator, coordinated by Wilson V.Ruggiero and developed at Scopus Tecnologia, to be both used in computer architecture and organization courses at the University of Sao Paulo, an to serve as a first draft of a professional tool <ref> [13] </ref>; * The SPD project, Automatic System for Support to Design and Development of Digital Systems, conducted by Joao Jose Neto at the University of Sao Paulo, driven by the needs of some computer design projects [10]. 2.1 The LIDER Project The LIDER language was used for many years (until the
References-found: 13

