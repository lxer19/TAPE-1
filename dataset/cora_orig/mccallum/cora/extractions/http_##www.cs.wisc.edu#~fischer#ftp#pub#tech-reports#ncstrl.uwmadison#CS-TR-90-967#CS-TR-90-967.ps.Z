URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/CS-TR-90-967/CS-TR-90-967.ps.Z
Refering-URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/CS-TR-90-967/
Root-URL: http://www.cs.wisc.edu
Email: dave@cs.wisc.edu  bart@cs.wisc.edu  
Title: Verification of Network Management System Configurations  
Author: David L. Cohrs Barton P. Miller 
Keyword: Management Languages, Inter-Organizational Management Issues  
Note: Research supported in part by an AT&T Ph.D Scholarship, NFS grant CCR-8815928, ONR grant N00014-89-J-1222, and a Digital Equipment Corporation External Research Grant.  
Address: 262-6617  262-3378  1210 W. Dayton Street Madison, Wisconsin 53706  
Affiliation: (608)  (608)  Computer Sciences Department University of Wisconsin Madison  
Abstract: The size and complexity of current computer internets are increasing the need for automated network management. In the past, networks were usually managed from a central location. Today, internets are too large, and individual administrative domains too autonomous for this centralized approach. Distributing the network management system causes problems, because there is no longer central control over the configuration of the parts of the system. We address these problem through the use of a high level, formal specification language, NMSL. NMSL allows the network administrators to describe their network environment and its relationship to other environments. The NMSL system then operates in two roles: it verifies network management specifications, and it automatically configures network management systems given a verified specification. This paper presents a model for network management systems, and a method for verifying specifications of these systems. We divide the verification problem into three parts: capacity, protection, and configuration verification. Capacity verification determines if the processes in the network management system are configured to handle the load that their clients place on them. Protection verification determines if access permissions are being violated. Configuration verification determines if other general requirements on the specification are being met. We also provide a way to distribute the verification process, and a way to summarize information that needs to be propagated across domain boundaries. We discuss the performance of our implementation of this system, and describe our future research directions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Heintze, et al, </author> <title> The CLP(R) Programmer's Manual, </title> <institution> Dept. of Computer Science, Monash University, Clayton, </institution> <address> Victoria, Australia (1987). </address>
Reference: [2] <author> K. P. Birman, </author> <title> ``Replication and Fault-Tolerance in the ISIS System,'' </title> <booktitle> Proceedings of the Tenth ACM Symposium on Operating Systems Principles, </booktitle> <pages> pp. </pages> <address> 79-86 Orcas Island, Washington, </address> <month> (December </month> <year> 1985). </year>
Reference-contexts: We divide the calculations into two cases: a single client querying a single server, and a group of clients querying a single server. The case of a single client simultaneously querying a group of servers (multicast), while an interesting from a reliability point of view <ref> [2] </ref>, is not used in current network management systems. The single client/single server case is easy to calculate. For example, consider the interactive client and server shown in Figure 2.1; the average utilization is 0.80 0 qps + 0.20 20 qps = 4 qps.
Reference: [3] <author> L. Bronner, </author> <title> ``Overview of the Capacity Planning Process for Production Data Processing,'' </title> <journal> IBM Systems Journal 19(1) pp. </journal> <month> 4-27 </month> <year> (1980). </year>
Reference-contexts: Capacity The goal of the capacity model is to determine, as quickly as possible, if each service provider has the capacity to provide the services needed by its clients. This is a form of the classic capacity planning problem <ref> [3] </ref>. Capacity planning provides a systematic approach to modeling and predicting the capacity of a system, in our case, a network management system.
Reference: [4] <author> J. Case, M. Fedor, M. Schoffstall, and J. Davin, </author> <title> ``A Simple Network Management Protocol,'' </title> <type> RFC 1157, </type> <institution> IETF Network Working Group (May 1990). </institution>
Reference-contexts: The systems and processes of the domain are configured using implementation dependent modules, that speak the protocols and have the permission necessary to reconfigure the network management system. Ideally, standard management protocols, such as SNMP <ref> [4] </ref> or CMIS/CMIP [7, 8] will be used to reconfigure the network management system. Therefore, the NMSL system provides for both the description of the network management system through a specification language, and a method for enforcing that description through automated configuration. 2. <p> The load can be measured several ways. We are interested in the average utilization, the average number of queries per second clients place a server, and the peak utilization, the maximum number of queries a server can hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh Network management standards <ref> [4, 9] </ref> refer to these processes as managers and agents, respectively. receive per second. We are also interested in the probability that a server's capacity will be exceeded. <p> Consider a router connecting two networks, and a management station (another computer) on one of these networks. The router, in addition to routing packets, runs a network management server or agent. The network management stations runs several network management applications these all communicate with the agent via SNMP <ref> [4] </ref>. The agent supports trap management, as defined in the SNMP standard, and sends trap notices to a trap management application on the management station. A specification of this example is shown in Figure 3.1. The gateway is the system gw and the management station is called dip.
Reference: [5] <author> D. L. Cohrs and B. P. Miller, </author> <title> ``Specification and Verification of Network Managers for Large Internets,'' </title> <booktitle> ACM SIGCOMM 89, </booktitle> <pages> pp. 33-44, </pages> <address> Austin, TX, </address> <month> (September </month> <year> 1989). </year>
Reference-contexts: The verification process is distributed along domain boundaries, allowing administrative domains to hide any information about themselves that do not pertain to the relationships between domains. An overview of the NMSL system can be found below, with additional information in <ref> [5] </ref>. NMSL has applications to managing other large, distributed systems as well. A network management system can be thought of as a specialized distributed system. Network management systems include specialized protocols and data models, tailored to the management problem. <p> EXAMPLE OF AN ERROR PROPAGATION SPECIFICATION of NMSL specifications is described in <ref> [5] </ref>. This syntactic structure is a list of clauses, with the ability to group clauses into blocks. Examples of NMSL specifications are shown in Figures 2.5 and 3.1.
Reference: [6] <author> Information Processing Systems Open Systems Interconnection, </author> <title> ``Specification of Abstract Syntax Notation One (ASN.1),'' ISO 8824, International Organization for Standardization (December 1987). </title>
Reference-contexts: THE NMSL NETWORK MANAGEMENT SYSTEM MODEL NMSL allows the specification of objects and processes in terms of abstractions and instantiations. Abstract object specifications define the management information, including structural information (abstract data types), access permissions, naming, and containment. Objects are specified using standard ASN.1 notation <ref> [6] </ref>. Abstract process specifications describe a process's operation in general terms, including the types and frequencies of queries, the objects the process must be able to access, and the objects the process allows other processes to access.
Reference: [7] <institution> Information Processing Systems Open Systems Interconnection, ``Management Information Service Definition,'' </institution> <note> ISO DIS 9595/2, International Organization for Standardization (1988). </note>
Reference-contexts: The systems and processes of the domain are configured using implementation dependent modules, that speak the protocols and have the permission necessary to reconfigure the network management system. Ideally, standard management protocols, such as SNMP [4] or CMIS/CMIP <ref> [7, 8] </ref> will be used to reconfigure the network management system. Therefore, the NMSL system provides for both the description of the network management system through a specification language, and a method for enforcing that description through automated configuration. 2.
Reference: [8] <institution> Information Processing Systems Open Systems Interconnection, ``Management Information Protocol Definition,'' </institution> <note> ISO DIS 9596/2, International Organization for Standardization (1988). </note>
Reference-contexts: The systems and processes of the domain are configured using implementation dependent modules, that speak the protocols and have the permission necessary to reconfigure the network management system. Ideally, standard management protocols, such as SNMP [4] or CMIS/CMIP <ref> [7, 8] </ref> will be used to reconfigure the network management system. Therefore, the NMSL system provides for both the description of the network management system through a specification language, and a method for enforcing that description through automated configuration. 2.
Reference: [9] <author> Information Processing Systems Open Systems Interconnection, </author> <title> ``Basic Reference Model Part 4 - OSI Management Framework,'' ISO DIS 7498/4, International Organization for Standardization (1989). </title>
Reference-contexts: The load can be measured several ways. We are interested in the average utilization, the average number of queries per second clients place a server, and the peak utilization, the maximum number of queries a server can hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh Network management standards <ref> [4, 9] </ref> refer to these processes as managers and agents, respectively. receive per second. We are also interested in the probability that a server's capacity will be exceeded.
Reference: [10] <author> K. McCloghrie and M. Rose, </author> <title> ``Management Information Base for Network Management of TCP/IP-based Inter-nets,'' </title> <type> RFC 1156, </type> <institution> IETF Network Working Group (May 1990). </institution>
Reference-contexts: The server processes are instantiated on each of the systems, the client at one central location. Of the domains, the first includes 6 of the systems, the second, the remaining system. The object specifications in the third test are those defined in the complete RFC1066 MIB <ref> [10] </ref>. The internal and external parts shown in Table 4.1 are divided using the criteria discussed in Section 2.4. These tests were run on a Sun 4/110, running SunOS 4.0.3 with 8 Megabytes of main memory.
Reference: [11] <author> D. C. Verma, </author> <title> Private correspondence. </title>
Reference-contexts: Therefore, if we restrict the number of modes allowed in an aggregate to a constant number, and if we calculate the aggregate iteratively, the time to calculate the approximate probability is O (n N 2 ). In a related algorithm <ref> [11] </ref>, it was shown that this approximation can be made arbitrarily close to the real proba bility of exceeding the server's capacity, by increasing N. 2.2.
References-found: 11

