URL: http://www.cs.washington.edu/homes/pcrowley/papers/wwc.ps
Refering-URL: http://www.cs.washington.edu/homes/pcrowley/
Root-URL: http://www.cs.washington.edu
Email: fpcrowley, baerg@cs.washington.edu  
Title: Trace Sampling for Desktop Applications on Windows NT  
Author: Patrick Crowley and Jean-Loup Baer 
Address: Box 352350  Seattle, WA 98195-2350  
Affiliation: Department of Computer Science Engineering  University of Washington  
Abstract: This paper examines trace sampling for a suite of desktop application traces on Windows NT. This paper makes two contributions: we compare the accuracy of several sampling techniques to determine cache miss rates for these workloads, and we present a victim cache architecture study that demonstrates that sampling can be used to drive such studies. Of the sampling techniques used for the cache miss ratio determinations, stitch, which assumes that the state of the cache at the beginning of a sample is the same as the state at the end of the previous sample, is the most effective for these workloads. This technique is more accurate than the others and is reliable for caches up to 64KB in size. 
Abstract-found: 1
Intro-found: 1
Reference: [Agarwal et al. 88] <author> Agarwal, A., Hennessy, J., and Horowitz, M. </author> <title> Cache performance of operating system and multiprogramming workloads. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 6(4):393431, </volume> <month> November </month> <year> 1988. </year>
Reference-contexts: These assumptions may include: assuming an empty cache (i.e., assume that a complete context switch occurred between samples; hereafter denoted cold), assuming the state at the end of the previous sample <ref> [Agarwal et al. 88] </ref> (stitch), and using some number of references to prime the cache [Fu & Patel 94] (e.g., 20% of the sample, denoted prime-20, and 50%, denoted half).
Reference: [Agarwal et al. 89] <author> Agarwal, A., Horowitz, M., and Hen-nessy, J. </author> <title> An analytical cache model. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 7(2):184 215, </volume> <month> May </month> <year> 1989. </year>
Reference-contexts: A more major addition will evaluate the effectiveness of trace sampling in the estimation of parameters for analytical cache models like those of Agarwal <ref> [Agarwal et al. 89] </ref>. Finally, the limits of sampling will be evaluated by considering sampling measures beyond the cache memory hierarchy. In particular, we will consider the accuracy of sampling branch prediction behavior for the same set of Windows NT desktop application traces.
Reference: [Cochran 77] <author> Cochran, W. G. </author> <title> Sampling Techniques. </title> <publisher> John & Wiley Sons, </publisher> <year> 1977. </year>
Reference-contexts: As described above, observations in trace sampling are not random; they are systematic since they are evenly spaced throughout the trace. This non-random pattern is not a problem, though, since systematic observations can be used to make even more precise inferences than random observations under certain circumstances <ref> [Cochran 77] </ref> (that is, when the variance of systematic observations is greater than the variance of the population). Unfortunately, however, trace sampling neither involves unbiased observations nor a sufficient alternative. The problem is that the state of the cache is unknown at the start of each observation. <p> The error bars for each data point correspond to the 90% interval of confidence based on the distribution of miss ratios of the systematic samples <ref> [Cochran 77] </ref>. The actual miss ratio for the entire trace is indicated by the solid bar. Sampling Results: Figure 1 and Figure 2, respectively, display the miss rates corresponding to the simulations of direct-mapped instruction caches for the acrord32 applica-tion and of 4-way set-associative data caches for powerpnt.
Reference: [Fu & Patel 94] <author> Fu, J. W. C. and Patel, J. H. </author> <title> Trace driven simulation using sampled traces. </title> <booktitle> In Proceedings of the Twenty-Seventh Hawaii International Conference on System Sciences Vol. I: Architecture, </booktitle> <pages> pages 211220, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: These assumptions may include: assuming an empty cache (i.e., assume that a complete context switch occurred between samples; hereafter denoted cold), assuming the state at the end of the previous sample [Agarwal et al. 88] (stitch), and using some number of references to prime the cache <ref> [Fu & Patel 94] </ref> (e.g., 20% of the sample, denoted prime-20, and 50%, denoted half).
Reference: [Jouppi 90] <author> Jouppi, N. </author> <title> Improving direct-mapped cache performance by the addition of a small fully-associative cache and prefetch buffers. </title> <booktitle> In Proc. of 17th Int. Symp. on Computer Architecture, </booktitle> <pages> pages 364373, </pages> <year> 1990. </year>
Reference-contexts: all cases, however, the short and long trace sampling results are similar enough to indicate the same results (i.e., trends) within the context of architectural studies as presented in the next section. 4 An Architectural Study: Trends in Victim Caches Victim caches are a relatively recent innovation in memory systems <ref> [Jouppi 90] </ref>. The scenario we consider here is that of an architect who wishes to gather an efficient estimate of the expected decrease in miss ratio for data caches when those caches are augmented with victim caches with between one and five entries. <p> Our purpose here is not to study victim cache trends, as that has been done elsewhere <ref> [Jouppi 90] </ref>, but to demonstrate how sampling techniques may be efficiently used in this regard.
Reference: [Kessler et al. 94] <author> Kessler, R., Hill, M. D., and Wood, D. A. </author> <title> A comparison of trace-sampling techniques for multi-megabyte caches. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 43(6):664675, </volume> <month> June </month> <year> 1994. </year>
Reference-contexts: In a sampled trace, this probability must be estimated with observations within each sample. This sampled probability is the basis for INITMR, the miss rate estimator described in <ref> [Kessler et al. 94] </ref> and [Wood et al. 91]. Accurately coping with unknown references is particularly important when sampling for large caches, where the number of unknown references can easily dominate the number of known misses. <p> Accurately coping with unknown references is particularly important when sampling for large caches, where the number of unknown references can easily dominate the number of known misses. Very large caches typically correspond to a very small number of misses, and, hence, are inherently at odds with sampling <ref> [Kessler et al. 94] </ref>. As we will see, however, when known misses dominate unknown references, several approaches will be effective. <p> Methodology: After experimenting with various samples sizes and sample ratios, we settled on a sample size of 500,000 references and a sampling ratio of 0.1. The process of tuning these parameters for a given workload is important <ref> [Martonosi et al. 93, Kessler et al. 94] </ref>. The rationale for our choice for these Windows NT desktop application traces can be found in the technical report. Table 3 describes the sampling techniques considered in this study.
Reference: [Laha et al. 88] <author> Laha, S., Patel, J. H., and Iyer, R. K. </author> <title> Accurate low-cost methods for performance evaluation of cache memory systems. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 37(11):1325 1335, </volume> <month> November </month> <year> 1988. </year>
Reference-contexts: In other words, since portions of the trace are unexamined between observations, it is unknown whether the first reference to each cache block will be a hit or a miss. Such references are referred to as unknown [Wood et al. 91] or cold-start <ref> [Laha et al. 88] </ref> references. A number of techniques have been employed to mitigate the bias due to unknown references. One approach is to make assumptions about, or construct, the state of the cache at the start of each sample. <p> Like most other studies, we eschew this usage. here as . For example, cold can also be thought of as an estimator that assumes all unknown references miss. In <ref> [Laha et al. 88] </ref>, unknown references are not included in the estimate of overall miss rate. That is, unknown references are used to prime the cache but are not counted as hits or misses.
Reference: [Lee et al. 98] <author> Lee, D. C., Crowley, P. J., Baer, J.-L., An-derson, T. E., and Bershad, B. N. </author> <title> Execution characteristics of desktop applications on windows nt. </title> <booktitle> In Proceedings of the 25th Annual International Symposium on Computer Architecture, </booktitle> <month> June </month> <year> 1998. </year>
Reference-contexts: Sampling techniques for coping with unknown references. the integer SPEC95 suite can be found in <ref> [Lee et al. 98] </ref>. Methodology: After experimenting with various samples sizes and sample ratios, we settled on a sample size of 500,000 references and a sampling ratio of 0.1. The process of tuning these parameters for a given workload is important [Martonosi et al. 93, Kessler et al. 94].
Reference: [Martonosi et al. 93] <author> Martonosi, M., Gupta, A., and An-derson, T. </author> <title> Effectiveness of trace sampling for performance debugging tools. </title> <booktitle> In Proceedings of ACM Sigmetrics Conf. on Measurement and Modeling of Computer Systems, </booktitle> <pages> pages 248 259, </pages> <year> 1993. </year>
Reference-contexts: Methodology: After experimenting with various samples sizes and sample ratios, we settled on a sample size of 500,000 references and a sampling ratio of 0.1. The process of tuning these parameters for a given workload is important <ref> [Martonosi et al. 93, Kessler et al. 94] </ref>. The rationale for our choice for these Windows NT desktop application traces can be found in the technical report. Table 3 describes the sampling techniques considered in this study.
Reference: [Wood et al. 91] <author> Wood, D. A., Hill, M. D., and Kessler, R. E. </author> <title> A model for estimating trace-sample miss ratios. </title> <booktitle> In Proceedings of the ACM SIG-METRICS Conference for the Measurement and Modeling of Computer Systems, </booktitle> <pages> pages 7989, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: In other words, since portions of the trace are unexamined between observations, it is unknown whether the first reference to each cache block will be a hit or a miss. Such references are referred to as unknown <ref> [Wood et al. 91] </ref> or cold-start [Laha et al. 88] references. A number of techniques have been employed to mitigate the bias due to unknown references. One approach is to make assumptions about, or construct, the state of the cache at the start of each sample. <p> In [Laha et al. 88], unknown references are not included in the estimate of overall miss rate. That is, unknown references are used to prime the cache but are not counted as hits or misses. As noted in <ref> [Wood et al. 91] </ref>, this implicitly assumes that the miss ratio for unknown references is equivalent to the miss ratio for all other references. By employing a renewal-theoretic model that depends on the percentage of time a given cache block frame is alive or dead, [Wood et al. 91] show why <p> As noted in <ref> [Wood et al. 91] </ref>, this implicitly assumes that the miss ratio for unknown references is equivalent to the miss ratio for all other references. By employing a renewal-theoretic model that depends on the percentage of time a given cache block frame is alive or dead, [Wood et al. 91] show why should be, and is observed to be, higher than the overall miss rate. <p> In a sampled trace, this probability must be estimated with observations within each sample. This sampled probability is the basis for INITMR, the miss rate estimator described in [Kessler et al. 94] and <ref> [Wood et al. 91] </ref>. Accurately coping with unknown references is particularly important when sampling for large caches, where the number of unknown references can easily dominate the number of known misses. <p> Among these techniques, stitch works best and gives good results for caches up to 128 KB. All techniques, except those priming the cache, tend to overestimate the true-sample miss ratio, i.e., they underestimate the miss ratio of the unknown references as explained in <ref> [Wood et al. 91] </ref>. With larger caches, the bias gets larger since the number of unknown references is also larger. The priming techniques have a slightly different behavior since the statistics are gathered on a smaller number of references. <p> There are a number of additions to this work that are currently under way. Two are major additions, and one is minor. The minor addition will see the INITMR estimator presented in <ref> [Wood et al. 91] </ref> added to the list of sampling techniques evaluated here (this is the most accurate technique and should be included for completeness).
References-found: 10

