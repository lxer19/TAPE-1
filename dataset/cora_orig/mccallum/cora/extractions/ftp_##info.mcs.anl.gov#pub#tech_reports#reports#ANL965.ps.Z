URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/ANL965.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/reports.htm
Root-URL: http://www.mcs.anl.gov
Title: Installation Guide to mpich, a Portable Implementation of MPI  
Author: by William Gropp and Ewing Lusk 
Note: This work was supported by the Mathematical, Information, and Computational Sciences Division subprogram of the Office of Computational and Technology Research, U.S. Department of Energy, under Contract W-31-109-Eng-38.  
Date: July 1996  
Web: ANL-96/5  
Address: 9700 South Cass Avenue Argonne, IL 60439  
Affiliation: ARGONNE NATIONAL LABORATORY  Mathematics and Computer Science Division  
Abstract-found: 0
Intro-found: 0
Reference: [1] <author> Ralph Butler and Ewing Lusk. </author> <title> User's guide to the p4 parallel programming system. </title> <type> Technical Report ANL-92/17, </type> <institution> Argonne National Laboratory, </institution> <month> October </month> <year> 1992. </year>
Reference-contexts: In some environments, this abstract device is configured to be the native communication subsystem of the machine. This is done with the device argument to configure. For the rest of the environments, a generic communication device is constructed using p4 <ref> [1, 2] </ref> and that is used as the instantiation of the ADI. In these cases, use ch_p4 as the device. A new device named ch_nexus and based on the Nexus run-time system has been made available recently. Like p4, Nexus is able to use multimethod communication on many platforms.
Reference: [2] <author> Ralph Butler and Ewing Lusk. </author> <title> Monitors, messages, and clusters: The p4 parallel programming system. </title> <journal> Parallel Computing, </journal> <volume> 20 </volume> <pages> 547-564, </pages> <month> April </month> <year> 1994. </year> <institution> (Also Argonne National Laboratory, Mathematics and Computer Science Division preprint MCS-P362-0493). </institution>
Reference-contexts: In some environments, this abstract device is configured to be the native communication subsystem of the machine. This is done with the device argument to configure. For the rest of the environments, a generic communication device is constructed using p4 <ref> [1, 2] </ref> and that is used as the instantiation of the ADI. In these cases, use ch_p4 as the device. A new device named ch_nexus and based on the Nexus run-time system has been made available recently. Like p4, Nexus is able to use multimethod communication on many platforms.
Reference: [3] <author> William Gropp and Ewing Lusk. </author> <title> An abstract device definition to support the implementation of a high-level message-passing interface. </title> <type> Preprint MCS-P342-1193, </type> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, </institution> <year> 1993. </year>
Reference-contexts: For example, setting the C compiler with -cc=xxx may require also setting -cflags=yyy; configure will (usually) choose both the compiler and flags appropriately. mpich is implemented using an abstract device specification (ADI), described in <ref> [3] </ref>. In some environments, this abstract device is configured to be the native communication subsystem of the machine. This is done with the device argument to configure.
Reference: [4] <author> William Gropp and Ewing Lusk. </author> <title> Scalable Unix tools on parallel processors. </title> <booktitle> In Proceedings of the Scalable High Performance Computing Conference, </booktitle> <pages> pages 56-62. </pages> <publisher> IEEE, </publisher> <year> 1994. </year>
Reference-contexts: This is discussed in the users guide. 17 6.1.3 Stopping the Servers To stop the servers, their processes must be killed. Stopping is easily done with the Scalable Unix Tools <ref> [4] </ref> with the command pfps -all -tn serv_p4 -and -o $LOGNAME -kill INT Alternately, you can log into each system and execute something like ps auxww | egrep '$LOGNAME.*serv_p4' and then use the kill command on the resulting process number (users of System V-style ps commands will have to figure out
Reference: [5] <author> William Gropp and Ewing Lusk. </author> <title> User's guide for mpich, a portable implementation of MPI. </title> <type> Technical Report ANL-96/6, </type> <institution> Argonne National Laboratory, </institution> <year> 1996. </year>
Reference-contexts: In the following sections we go through these steps in more detail and describe other aspects of the mpich distribution you might wish to explore. The companion users guide <ref> [5] </ref> gives more information on building and running MPI programs with mpich. 2 Obtaining and Unpacking the Distribution mpich can be obtained by anonymous ftp from the site info.mcs.anl.gov. Go to the directory pub/mpi and get the file mpich.tar.Z. <p> SGI multiprocessor (such as an Onyx, Challenge, or Power Challenge), using the shared memory for fast message passing configure -device=ch_p4 -comm=shared Use -arch=IRIX to force 32-bit pointers and -arch=IRIX64 to force 64-bit pointers. Sun SunOS including the mpe libraries (See the users guide <ref> [5] </ref>: configure -device=ch_p4 -arch=sun4 -mpe Sun Solaris configure -device=ch_p4 -arch=solaris -mpe DEC Alpha configure -device=ch_p4 -arch=alpha FreeBSD For a network of PC's running the FreeBSD version of Unix: configure -device=ch_p4 -arch=freebsd Nexus device For a machine using the Nexus device, change the device in the above examples to ch_nexus. <p> Many interesting logfiles can be found in the profiling/upshot/logfiles subdirectory. 14 The file cpilog.c demonstrates how to instrument your own code for producing such logs. The users guide <ref> [5] </ref> describes how to link with a version of mpich that produces them automatically. For a short description of the programs in the examples/basic directory, see the README file there.
Reference: [6] <author> Virginia Herrarte and Ewing Lusk. </author> <title> Studying parallel program behavior with upshot. </title> <type> Technical Report ANL-91/15, </type> <institution> Argonne National Laboratory, Argonne, </institution> <year> 1991. </year>
Reference-contexts: To create a Makefile, just execute mpireconfig Makefile (mpireconfig is in the same directory as mpirun). This generates a new Makefile from Makefile.in, with the correct parameters for the mpich that was installed. 11.5 nupshot, a Way to View Logfiles Nupshot is a newer version of upshot <ref> [6] </ref> and can display log files created by using either the -mpilog option to mpicc or mpif77 or through use of the MPE logfile facilities. 12 Automatic Report Generation We are working on a prototype system for automatically producing a report describing the installation of MPI on the system you are

References-found: 6

