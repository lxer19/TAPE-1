URL: http://www.eecis.udel.edu:80/~mills/database/reports/ntpv4/actsb.ps
Refering-URL: http://www.eecis.udel.edu:80/~mills/database/reports/ntpv4/
Root-URL: http://www.cis.udel.edu
Abstract-found: 0
Intro-found: 1
Reference: [ALL90] <author> Allan, D., H. Hellwig, P. Kartaschoff, J. Vanier, J. Vig G.M.R. Winkler and N.F. Yannoni. </author> <title> Standard terminology for fundamental frequency and time metrology. </title> <booktitle> Proc. 42nd Annual Frequency Control Symposium (1988), </booktitle> <pages> 419-425. </pages> <note> Also in: Sullivan, D.B., </note> <author> D.W. Allan, D.A. Howe and F.L. </author> <title> Walls (Eds.). Characterization of Clocks and Oscillators. </title> <institution> National Institute of Standards and Technology Technical Note 1337, U.S. Government Printing Office (January, </institution> <year> 1990), </year> <month> TN139-TN145. </month>
Reference-contexts: The new design uses a hybrid of the PLL and FLL models. The design parameters are based on an analysis of the stability characteristics of room-temperature quartz oscillators found in typical computing equipment. Following the accepted notation used in the literature of precise time and frequency control <ref> [ALL90] </ref>, let x ( t ) be the time offset and y ( t ) be the frequency offset of the disciplined local clock oscillator relative to an external standard oscillator. Where no confusion exists, we will drop the word offset when dealing with time and frequency values.
Reference: [BAR87] <author> Barnes, J.A., and S.R. Stein. </author> <title> Application of Kalman filters and ARIMA models to digital frequency and phase lock loops. Proc. 19th Annual Precise Time and Time Interval (PTTI) Applications and Planning Meeting (December 1987, </title> <address> Redondo Beach, CA), </address> <pages> 311-322. </pages>
Reference-contexts: Ordinarily, this would include the clock filter algorithm defined in the NTP specification, where a separate shift register with offset and delay estimates would be required for the n n elements of T. Using the clock discipline described earlier in this report, or others suggested in <ref> [BAR87] </ref> and [LIN80], relative phase and frequency characteristics could be established between all peers in the subnet. The development of appropriate algorithms is an important topic for further research.
Reference: [DEC89] <institution> Digital Time Service Functional Specification Version T.1.0.5. Digital Equipment Cor poration, </institution> <year> 1989. </year>
Reference-contexts: As additional encouragement to adopt this limit, DEC engineers have established this figure as the absolute worst case scenario in order that correctness assertions not be violated in the Digital Time Synchronization Service (DTSS) <ref> [DEC89] </ref> specified for DCE systems. In any case, where the inherent oscillator error is greater than 100 ppm, it is usually possible to adjust the frequency in 100-ppm steps by adjusting the value of the Unix kernel variable tick using the tickadj utility program supplied with the NTP distribution.
Reference: [MIL89] <author> Mills, </author> <title> D.L. Measured performance of the Network Time Protocol in the Internet system. </title> <institution> DARPA Network Working Group Report RFC-1128, University of Delaware, </institution> <month> October </month> <year> 1989. </year> <note> Also published as: </note> <institution> Electrical Engineering Department Report 89-9-3, University of Delaware, </institution> <month> September </month> <year> 1989. </year>
Reference-contexts: Several papers, technical reports and RFCs have described the architecture [MIL91a], analysis [MIL91b], [MIL92a], [MIL94a], design [MIL94b], and implementation [MIL94c] of the various algorithms utilized in its operation, as well as measurements of its performance in the Internet <ref> [MIL89] </ref>. Most of the recent work in NTP has focussed on the continued development of the NTP daemon and utility programs for Unix. Recent improvements include the capability to operate in IP multicast mode with automatic calibration for transmission delays across the Internet.
Reference: [LEV] <author> Levine, J. </author> <title> An algorithm to synchronize the time of a computer clock to universal time. </title> <journal> IEEE Trans. </journal> <note> Networks (to appear). </note>
Reference: [LIN80] <author> Lindsay, W.C., and A.V. Kantak. </author> <title> Network synchronization of random signals. </title> <journal> IEEE Trans. Communications COM-28, </journal> <month> 8 (August </month> <year> 1980), </year> <pages> 1260-1266. 31 </pages>
Reference-contexts: Ordinarily, this would include the clock filter algorithm defined in the NTP specification, where a separate shift register with offset and delay estimates would be required for the n n elements of T. Using the clock discipline described earlier in this report, or others suggested in [BAR87] and <ref> [LIN80] </ref>, relative phase and frequency characteristics could be established between all peers in the subnet. The development of appropriate algorithms is an important topic for further research.
Reference: [MIL90] <author> Mills, </author> <title> D.L. Network Time Protocol (Version 3) specification, implementation and analy-sis. </title> <institution> DARPA Network Working Group Report RFC-1305, University of Delaware, </institution> <month> March </month> <year> 1992, </year> <pages> 113 pp. </pages> <note> Previous draft published as: </note> <institution> Electrical Engineering Department Report 90-6-1, Univer sity of Delaware, </institution> <month> June </month> <year> 1990. </year>
Reference-contexts: The present version 3 of the protocol and its predecessors have been deployed in an estimated 100,000 time servers and clients in the Internet for over a decade. The definitive specification of NTP Version 3 is RFC-1305 <ref> [MIL90] </ref>, while a subset of it, the Simple Network Time Protocol (SNTP) is described in RFC-1361 [MIL93]. NTP has been in a state of continuous evolution since its origins in the Hello Protocol of the late 1970s until Version 3 of the protocol appeared in 1992.
Reference: [MIL91a] <author> Mills, </author> <title> D.L. Internet time synchronization: the Network Time Protocol. </title> <journal> IEEE Trans. Communications COM-39, </journal> <month> 10 (October </month> <year> 1991), </year> <pages> 1482-1493. </pages> <note> Also in: Yang, </note> <editor> Z., and T.A. Marsland (Eds.). </editor> <booktitle> Global States and Time in Distributed Systems . IEEE Computer Society Press, </booktitle> <address> Los Alamitos, CA, </address> <year> 1994, </year> <pages> 91-102. </pages>
Reference-contexts: NTP has been in a state of continuous evolution since its origins in the Hello Protocol of the late 1970s until Version 3 of the protocol appeared in 1992. Several papers, technical reports and RFCs have described the architecture <ref> [MIL91a] </ref>, analysis [MIL91b], [MIL92a], [MIL94a], design [MIL94b], and implementation [MIL94c] of the various algorithms utilized in its operation, as well as measurements of its performance in the Internet [MIL89].
Reference: [MIL91b] <author> Mills, </author> <title> D.L. On the chronology and metrology of computer network timescales and their application to the Network Time Protocol. </title> <journal> ACM Computer Communications Review 21, </journal> <month> 5 (October </month> <year> 1991), </year> <pages> 8-17. </pages>
Reference-contexts: NTP has been in a state of continuous evolution since its origins in the Hello Protocol of the late 1970s until Version 3 of the protocol appeared in 1992. Several papers, technical reports and RFCs have described the architecture [MIL91a], analysis <ref> [MIL91b] </ref>, [MIL92a], [MIL94a], design [MIL94b], and implementation [MIL94c] of the various algorithms utilized in its operation, as well as measurements of its performance in the Internet [MIL89]. Most of the recent work in NTP has focussed on the continued development of the NTP daemon and utility programs for Unix.
Reference: [MIL92a] <author> Mills, </author> <title> D.L. Modelling and analysis of computer network clocks. </title> <institution> Electrical Engineering Department Report 92-5-2, University of Delaware, </institution> <month> May </month> <year> 1992, </year> <pages> 29 pp. </pages>
Reference-contexts: NTP has been in a state of continuous evolution since its origins in the Hello Protocol of the late 1970s until Version 3 of the protocol appeared in 1992. Several papers, technical reports and RFCs have described the architecture [MIL91a], analysis [MIL91b], <ref> [MIL92a] </ref>, [MIL94a], design [MIL94b], and implementation [MIL94c] of the various algorithms utilized in its operation, as well as measurements of its performance in the Internet [MIL89]. Most of the recent work in NTP has focussed on the continued development of the NTP daemon and utility programs for Unix. <p> By convention, the order of the PLL is the order of the loop filter, not that of the overall transfer function; therefore, the above PLL is classed as first order. The behavior of this type of loop is treated in great detail <ref> [MIL92a] </ref> and will not be repeated here. In the new NTP local clock discipline, the above FLL and PLL models are incorporated in a hybrid phase/frequency-lock loop. The discipline minimizes the prediction error as in (2) according to the offset x k measured at the k th update. <p> Justification of this model as simulating the behavior of a first-order, type-II, adaptive parameter PLL is given in previously published reports <ref> [MIL92a] </ref>. 7. If t k &gt; t A , the FLL model is used to adjust the time and frequency.
Reference: [MIL92b] <author> Mills, </author> <title> D.L. Simple Network Time Protocol (SNTP). </title> <institution> DARPA Network Working Group Report RFC-1361, University of Delaware, </institution> <month> August </month> <year> 1992, </year> <pages> 10 pp. </pages>
Reference: [MIL94a] <author> Mills, </author> <title> D.L. Precision synchronization of computer network clocks. </title> <journal> ACM Computer Communication Review 24, </journal> <month> 2 (April </month> <year> 1994). </year> <pages> 16 pp. </pages>
Reference-contexts: NTP has been in a state of continuous evolution since its origins in the Hello Protocol of the late 1970s until Version 3 of the protocol appeared in 1992. Several papers, technical reports and RFCs have described the architecture [MIL91a], analysis [MIL91b], [MIL92a], <ref> [MIL94a] </ref>, design [MIL94b], and implementation [MIL94c] of the various algorithms utilized in its operation, as well as measurements of its performance in the Internet [MIL89]. Most of the recent work in NTP has focussed on the continued development of the NTP daemon and utility programs for Unix.
Reference: [MIL94b] <author> Mills, </author> <title> D.L. A kernel model for precision timekeeping. </title> <institution> ARPA Network Working Group Report RFC-1589, University of Delaware, </institution> <month> March </month> <year> 1994. </year> <pages> 31 pp. </pages>
Reference-contexts: NTP has been in a state of continuous evolution since its origins in the Hello Protocol of the late 1970s until Version 3 of the protocol appeared in 1992. Several papers, technical reports and RFCs have described the architecture [MIL91a], analysis [MIL91b], [MIL92a], [MIL94a], design <ref> [MIL94b] </ref>, and implementation [MIL94c] of the various algorithms utilized in its operation, as well as measurements of its performance in the Internet [MIL89]. Most of the recent work in NTP has focussed on the continued development of the NTP daemon and utility programs for Unix. <p> Between updates, which can range from seconds to hours, the phase is adjusted as in (3). In the NTP daemon for Unix, these adjustments are implemented by the adjtime () system call; while, in the modified kernel described in <ref> [MIL94b] </ref>, correspondingly scaled adjustments are performed at each timer interrupt. In the new design it is a requirement that the discipline operate seamlessly with varying update intervals including some instances using the PLL model for updating the frequency, and others using the FLL model.
Reference: [MIL94c] <author> Mills, </author> <title> D.L. Improved algorithms for synchronizing computer network clocks. </title> <booktitle> Proc. ACM SIGCOMM 94 Symposium (London UK, </booktitle> <month> September </month> <year> 1994), </year> <pages> 317-327. </pages>
Reference-contexts: NTP has been in a state of continuous evolution since its origins in the Hello Protocol of the late 1970s until Version 3 of the protocol appeared in 1992. Several papers, technical reports and RFCs have described the architecture [MIL91a], analysis [MIL91b], [MIL92a], [MIL94a], design [MIL94b], and implementation <ref> [MIL94c] </ref> of the various algorithms utilized in its operation, as well as measurements of its performance in the Internet [MIL89]. Most of the recent work in NTP has focussed on the continued development of the NTP daemon and utility programs for Unix. <p> In a series of experiments and simulations, it was verified that the PLL model provides the best performance at t 1000 s, where the phase noise predominates, while the FLL model provides the best performance at intervals above that, where the frequency stability predominates. In the PLL described in <ref> [MIL94c] </ref>, a frequency averaging interval of 1000 s corresponds to a time constant of about unity and a poll interval of 16 s, which would normally be considered at the lower end of the acceptable polling range. <p> However, the PLL model shown here does not include the effect of the time constant, which is varied directly with the poll interval, normally equal to the update interval. The implications of this are discussed in <ref> [MIL94c] </ref>. It may seem strange that the coefficient a in (3) is used in both the FLL and PLL modes. The primary reason for doing this is to avoid discontinuities when the phase x k is very large; e.g., over 100 ms.
Reference: [STE85] <author> Stein, </author> <title> S.R. Frequency and time - their measurement and characterization (Chapter 12). In: E.A. </title> <editor> Gerber and A. Ballato (Eds.). </editor> <title> Precision Frequency Control, Vol. </title> <publisher> 2 , Academic Press, </publisher> <address> New York 1985, </address> <pages> 191-232, 399-416. </pages> <note> Also in: Sullivan, D.B., </note> <author> D.W. Allan, D.A. Howe and F.L. </author> <title> Walls (Eds.). Characterization of Clocks and Oscillators . National Institute of Standards and Technology Technical Note 1337, </title> <type> U.S. </type> <institution> Government Printing Office (January, </institution> <year> 1990), </year> <note> TN61-TN119. 32 </note>
Reference-contexts: Starting from the left at t = 16 s, the plot tends to a straight line with slope near -1, which is characteristic of white phase noise <ref> [STE85] </ref>. In this region, increasing t increases the frequency stability in direct proportion.
References-found: 15

