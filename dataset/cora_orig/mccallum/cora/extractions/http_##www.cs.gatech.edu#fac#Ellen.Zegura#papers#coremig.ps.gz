URL: http://www.cs.gatech.edu/fac/Ellen.Zegura/papers/coremig.ps.gz
Refering-URL: http://www.cs.gatech.edu/fac/Ellen.Zegura/pubs.html
Root-URL: 
Title: Core Migration for Dynamic Multicast Routing  
Author: Michael J. Donahoo Ellen W. Zegura 
Address: Atlanta, GA 30332-0280  
Affiliation: College of Computing Georgia Institute of Technology  
Abstract: Efficient multicast communication provides one of the best avenues for scaling bandwidth intensive applications. Current multicast routing mechanisms perform well for multicast groups which reach a long-term, steady-state distribution of membership. However, when the membership migrates throughout the network, current routing techniques may perform poorly. Recent techniques for IP multicast involve selection of a "core" router through which all multicast communication is routed. We propose to adapt this routing scheme to efficiently support dynamic groups, by allowing the core to migrate. As part of our work we provide solutions to several problems that are more general, including (1) estimating multicast tree bandwidth using unicast information and (2) a variation on soliciting responses from a limited number of participants to avoid message implosion. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Mostafa H. Ammar. </author> <title> Probabilistic multicast: Generalizing the multicast paradigm to improve scalability. </title> <booktitle> In Proceedings of INFOCOM 1994, </booktitle> <pages> pages 848-55, </pages> <year> 1994. </year>
Reference-contexts: This method has broader applicability, for example in deciding whether to deliver information (e.g., from a server) via unicast or multicast. * A method for efficiently soliciting responses from a selected number of receivers in the multicast group, using a combination of probabilistic mul-ticast <ref> [1] </ref> and probing rounds [4]. <p> This not only creates additional network load but can lead to message implosion at the candidate cores. In this section we introduce Random Participant Evaluation, which works in the same manner as above except that it utilizes probabilistic multicast <ref> [1] </ref> to control the number of re sponses sent by participants to each candidate core. The header of the multicast packet contains an acceptance probability, ff, which each participant uses to determine whether or not to respond.
Reference: [2] <author> A. J. Ballardie. </author> <title> Core-based trees (cbt) multicast architecture. </title> <type> Technical report, </type> <institution> IDMR Internet Draft, </institution> <month> February </month> <year> 1996. </year>
Reference-contexts: Changes in these types of applications are not predictable a priori since movement occurs in response to evolving situations. 1.1 Related Work Current core-based multicast routing protocols (CBT <ref> [2] </ref> and PIM [8]) do not adequately address the issue of performance-based core choice, assuming an administrative decision. Work is in progress on a scheme to organize candidate cores into a multi-level global hierarchy [13].
Reference: [3] <author> Tony Ballardie. </author> <title> Core based tree (CBT) multicast architectural overview and specification. </title> <type> Internet Draft, </type> <month> November </month> <year> 1994. </year>
Reference-contexts: 1 Introduction Core-based multicast routing <ref> [3, 7, 6] </ref> provides a good mechanism for scalable multicasting; however selecting a "good" core is difficult if the make-up of the group changes during the lifetime of the group connection (e.g., Distributed Interactive Simulation (DIS) [12]).
Reference: [4] <author> Jean-Chrysostome Bolot, Thierry Turleeti, and Ian Wakeman. </author> <title> Scalable feedback control for mul-ticast video distribution in the internet. </title> <booktitle> In Proceedings of SIGCOMM 1994, </booktitle> <pages> pages 58-67, </pages> <year> 1994. </year>
Reference-contexts: This method has broader applicability, for example in deciding whether to deliver information (e.g., from a server) via unicast or multicast. * A method for efficiently soliciting responses from a selected number of receivers in the multicast group, using a combination of probabilistic mul-ticast [1] and probing rounds <ref> [4] </ref>. <p> We adapt the receiver congestion discovery protocol proposed by Bolot <ref> [4] </ref> to determine the number of receivers. Our algorithm chooses an initial value of ff, and the core sends a probabilistic multicast to the receivers. The initial value of ff is chosen conservatively, allowing for few or no responses. <p> However, all of the candidates cores will be similarly limited in accuracy, thus for the purposes of comparison we use the maximum delay of the limited participants. 3 A timeout of twice the maximum round trip time is used to determine the end of a round. See <ref> [4] </ref> for a description of the round trip time discovery. Participation To estimate bandwidth, we assume that each responding participant serves as a "proxy" for the participants that have not responded.
Reference: [5] <author> Kenneth L. Calvert, Ellen W. Zegura, and Michael J. Donahoo. </author> <title> Core selection methods for multicast routing. </title> <editor> In Kia Makki and Niki Pissi-nou, editors, </editor> <booktitle> Proceedings of the ICCCN '95, </booktitle> <pages> pages 638-642. </pages> <publisher> IEEE, IEEE Computer Society Press, </publisher> <month> Sept. </month> <year> 1995. </year>
Reference-contexts: Some discussion is given regarding the migration to a different top-level core based on coarse delay information. Both the performance metrics and the migration options are considerably more limited than those we describe. Researchers have recently begun to consider the relationship between performance and core placement <ref> [5, 11, 16] </ref>, but with emphasis on the one-time placement of the core based on some a priori knowledge of the application.
Reference: [6] <author> Stephen Deering, Deborah Estrin, Dino Fari-nacci, Van Jacobson, Ching gung Liu, and Liming Wei. </author> <title> Protocol independent multicast (PIM): Motivation and architecture. </title> <type> Technical Report draft-ietf-idmr-pim-arch-01, </type> <institution> IDMR Working Group, </institution> <month> Jan. </month> <year> 1995. </year>
Reference-contexts: 1 Introduction Core-based multicast routing <ref> [3, 7, 6] </ref> provides a good mechanism for scalable multicasting; however selecting a "good" core is difficult if the make-up of the group changes during the lifetime of the group connection (e.g., Distributed Interactive Simulation (DIS) [12]).
Reference: [7] <author> Stephen Deering, Deborah Estrin, Dino Fari--nacci, Van Jacobson, Ching-Gung Liu, and Liming Wei. </author> <title> An architecture for wide-area multi-cast routing. </title> <booktitle> In Proceedings of SIGCOMM 1994, </booktitle> <pages> pages 126-135. </pages> <publisher> ACM, ACM Press, </publisher> <year> 1994. </year>
Reference-contexts: 1 Introduction Core-based multicast routing <ref> [3, 7, 6] </ref> provides a good mechanism for scalable multicasting; however selecting a "good" core is difficult if the make-up of the group changes during the lifetime of the group connection (e.g., Distributed Interactive Simulation (DIS) [12]).
Reference: [8] <author> Stephen Deering, Deborah Estrin, Dino Fari-nacci, Van Jacobson, Ching-Gung Liu, Liming Wei, Puneet Sharma, and Ahmed Helmy. </author> <title> Protocol independent multicast sparse mode (PIM-SM): Protocol specification. </title> <type> Technical report, </type> <institution> IETF-IDMR, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: Changes in these types of applications are not predictable a priori since movement occurs in response to evolving situations. 1.1 Related Work Current core-based multicast routing protocols (CBT [2] and PIM <ref> [8] </ref>) do not adequately address the issue of performance-based core choice, assuming an administrative decision. Work is in progress on a scheme to organize candidate cores into a multi-level global hierarchy [13]. Some discussion is given regarding the migration to a different top-level core based on coarse delay information. <p> Each candidate core computes the upper bound and sends this as an estimate of bandwidth to the current core. If the current core decides to perform core migration, this occurs using a core change protocol, such as in PIM <ref> [8] </ref>. We evaluate the effectiveness of this method by inspecting the ratio of our estimated multicast bandwidth to the actual multicast bandwidth over randomly generated instances. Figure 1 shows the ratio as a function of the number of receivers.
Reference: [9] <author> Matthew Doar and Ian Leslie. </author> <booktitle> How bad is naive multicast routing? In Proceedings of INFOCOM 1993, </booktitle> <pages> pages 82-9, </pages> <year> 1993. </year>
Reference-contexts: In [14, 17, 18], the authors consider the use of dynamic Steiner trees to handle dynamic multicast routing, but these algorithms are not well suited for large networks or distributed implementation. Several other authors <ref> [9, 15] </ref> have investigated incremental changes to multicast routing trees to accommodate changes in receivers. 1.2 Contributions Our contributions include the following: * A flexible model of dynamic applications, capturing the essential behavior that impacts routing algorithms. * A scalable method for selecting and evaluating candidate cores for migration. <p> In Section 6 we bring together the details of each step into a complete version of the algorithm, and explore the performance with all components working together. 3 Modeling Previous work in multicast routing relies on very simple specifications of group activity <ref> [9, 18, 17] </ref>. We extend the concept of group activity specification to allow evaluation of our algorithm in the contexts of various "real-world" scenario simulations. We use the term scenario to describe a time-dependent characterization of an application's behavior.
Reference: [10] <author> Michael J. Donahoo and Ellen W. Zegura. </author> <title> Core migration for dynamic multicast routing. </title> <type> Technical Report GIT-CC-95-28, </type> <institution> Georgia Institute of Technology, </institution> <year> 1995. </year>
Reference-contexts: In this paper, however, we focus on a general algorithm that contains some adaptation based on online observations. See <ref> [10] </ref> for a complete description of the scenarios. We characterize a scenario by the following parameters: Migration Probability The probability that a new participant is generated in the domain that is not represented by the current set of participants. <p> Further investigation reveals that when the group has a small number of receivers and sources concentrated in a single stub domain, the optimal core tends to be a stub node, specifically a node from the domain with all the participants. See <ref> [10] </ref> for a detailed analysis. We now propose the following candidate selection policy which attempts to exploit the previous observations regarding core location and performance: one candidate core is chosen from each transit domain. <p> Note that to use router distance infor designated routers for the sources and receivers). Thus we propose augmenting the control messages that are part of the multicast protocol to include messages that facilitate core migration (See <ref> [10] </ref> for message details). This allows a candidate core to know the hop count from itself to each participant in the group. 2 Each candidate core then evaluates and reports its cost to the current core. <p> Our analysis demonstrates that the expected first response round and probability of implosion for our technique is similar to Bolot's results. See <ref> [10] </ref> for analysis of expected first response round and probability of implosion. 5.2.2 Estimating Performance with Limited Participation Each candidate core must estimate performance given data about the unicast routes between itself and a limited set of group participants. <p> This approach is conservative about increasing the frequency of core evaluation, and quick to back off if core evaluations do not result in mi gration. 7 Conclusion We evaluate the performance of our core migration algorithm on each of the four scenarios described earlier (See <ref> [10] </ref> for detailed simulation description). Figure 3 shows the ratio of the bandwidth, average delay, and maximum delay performance with no migration to our core migration scheme for scenarios RC (left) and scenario SM (right). Results for the other scenarios are similar. See [10]. <p> of the four scenarios described earlier (See <ref> [10] </ref> for detailed simulation description). Figure 3 shows the ratio of the bandwidth, average delay, and maximum delay performance with no migration to our core migration scheme for scenarios RC (left) and scenario SM (right). Results for the other scenarios are similar. See [10]. The migration decisions are based exclusively on the bandwidth metric. The B/W (Amortized) plot is the ratio of the non-migration bandwidth to the sum of the migration bandwidth and the amortized core evaluation overhead (amortized over the all multicasts during the same interval).
Reference: [11] <author> Deborah Estrin. </author> <title> Draft note on RP selection for PIM-SM. </title> <address> IETF-IDMR, </address> <month> Mar </month> <year> 1994. </year>
Reference-contexts: Some discussion is given regarding the migration to a different top-level core based on coarse delay information. Both the performance metrics and the migration options are considerably more limited than those we describe. Researchers have recently begun to consider the relationship between performance and core placement <ref> [5, 11, 16] </ref>, but with emphasis on the one-time placement of the core based on some a priori knowledge of the application.
Reference: [12] <author> Institute for Simulation and Training. </author> <title> Standard for Distributed Interactive Simulation | application protocols (version 2.0.4 draft IEEE standard). </title> <type> Technical Report IST-CR-94-50, </type> <institution> University of Central Florida, </institution> <month> March </month> <year> 1994. </year>
Reference-contexts: 1 Introduction Core-based multicast routing [3, 7, 6] provides a good mechanism for scalable multicasting; however selecting a "good" core is difficult if the make-up of the group changes during the lifetime of the group connection (e.g., Distributed Interactive Simulation (DIS) <ref> [12] </ref>). Changes in these types of applications are not predictable a priori since movement occurs in response to evolving situations. 1.1 Related Work Current core-based multicast routing protocols (CBT [2] and PIM [8]) do not adequately address the issue of performance-based core choice, assuming an administrative decision.
Reference: [13] <author> M. Handley, J. Crowcroft, and I. Wakeman. </author> <title> Hierarchical protocol independent multicast (HPIM). </title> <institution> Technical Report http://www.cs.ucl.ac.uk/staff/M.Handley/hpim.ps, University College London and University of Sus-sex, </institution> <year> 1995. </year> <title> Work in progress. </title>
Reference-contexts: Work is in progress on a scheme to organize candidate cores into a multi-level global hierarchy <ref> [13] </ref>. Some discussion is given regarding the migration to a different top-level core based on coarse delay information. Both the performance metrics and the migration options are considerably more limited than those we describe.
Reference: [14] <author> Makoto Imase and Bernard M. Waxman. </author> <title> Dynamic Steiner tree problem. </title> <journal> SIAM Journal Disc. Math, </journal> <volume> 4(3) </volume> <pages> 369-84, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: Researchers have recently begun to consider the relationship between performance and core placement [5, 11, 16], but with emphasis on the one-time placement of the core based on some a priori knowledge of the application. In <ref> [14, 17, 18] </ref>, the authors consider the use of dynamic Steiner trees to handle dynamic multicast routing, but these algorithms are not well suited for large networks or distributed implementation.
Reference: [15] <author> James Kadirire and Graham Knight. </author> <title> Comparison of dynamic multicast routing algorithms for wide-area packet switched (Asynchronous Transfer Mode) networks. </title> <booktitle> In Proceedings of INFOCOM 1995, </booktitle> <pages> pages 212-219, </pages> <year> 1995. </year>
Reference-contexts: In [14, 17, 18], the authors consider the use of dynamic Steiner trees to handle dynamic multicast routing, but these algorithms are not well suited for large networks or distributed implementation. Several other authors <ref> [9, 15] </ref> have investigated incremental changes to multicast routing trees to accommodate changes in receivers. 1.2 Contributions Our contributions include the following: * A flexible model of dynamic applications, capturing the essential behavior that impacts routing algorithms. * A scalable method for selecting and evaluating candidate cores for migration.
Reference: [16] <author> D.G. Thaler and C.V. Ravishankar. </author> <title> Distributed center-location algorithms: Proposals and comparisons. </title> <booktitle> In IEEE Infocom '96. IEEE, </booktitle> <month> March </month> <year> 1996. </year>
Reference-contexts: Some discussion is given regarding the migration to a different top-level core based on coarse delay information. Both the performance metrics and the migration options are considerably more limited than those we describe. Researchers have recently begun to consider the relationship between performance and core placement <ref> [5, 11, 16] </ref>, but with emphasis on the one-time placement of the core based on some a priori knowledge of the application. <p> Maximum Degree We note that Thaler and Ravishankar <ref> [16] </ref> also give a method to estimate bandwidth from information on distances to receivers.
Reference: [17] <author> Bernard M. Waxman. </author> <title> Routing of multipoint connections. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 6(9) </volume> <pages> 1617-22, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: Researchers have recently begun to consider the relationship between performance and core placement [5, 11, 16], but with emphasis on the one-time placement of the core based on some a priori knowledge of the application. In <ref> [14, 17, 18] </ref>, the authors consider the use of dynamic Steiner trees to handle dynamic multicast routing, but these algorithms are not well suited for large networks or distributed implementation. <p> In Section 6 we bring together the details of each step into a complete version of the algorithm, and explore the performance with all components working together. 3 Modeling Previous work in multicast routing relies on very simple specifications of group activity <ref> [9, 18, 17] </ref>. We extend the concept of group activity specification to allow evaluation of our algorithm in the contexts of various "real-world" scenario simulations. We use the term scenario to describe a time-dependent characterization of an application's behavior.
Reference: [18] <author> Bernard M. Waxman. </author> <title> Performance evaluation of multipoint routing algorithms. </title> <booktitle> In Proceedings of INFOCOM 1993, </booktitle> <volume> volume 3, </volume> <pages> pages 980-6, </pages> <month> March </month> <year> 1993. </year>
Reference-contexts: Researchers have recently begun to consider the relationship between performance and core placement [5, 11, 16], but with emphasis on the one-time placement of the core based on some a priori knowledge of the application. In <ref> [14, 17, 18] </ref>, the authors consider the use of dynamic Steiner trees to handle dynamic multicast routing, but these algorithms are not well suited for large networks or distributed implementation. <p> In Section 6 we bring together the details of each step into a complete version of the algorithm, and explore the performance with all components working together. 3 Modeling Previous work in multicast routing relies on very simple specifications of group activity <ref> [9, 18, 17] </ref>. We extend the concept of group activity specification to allow evaluation of our algorithm in the contexts of various "real-world" scenario simulations. We use the term scenario to describe a time-dependent characterization of an application's behavior.
References-found: 18

