URL: http://www.cs.brown.edu/research/graphics/research/pub/papers/presence3.4-lag.ps
Refering-URL: http://www.cs.brown.edu/research/graphics/research/pub/
Root-URL: http://www.cs.brown.edu
Email: mmw@cs.brown.edu  
Title: Lag in Multiprocessor Virtual Reality  
Author: Matthias M. Wloka 
Address: Providence, RI 02912  
Affiliation: Computer Science Department Brown University  
Abstract: Lag in virtual reality (VR), i.e., the delay between performing an action and seeing the result of that action, is critical when trying to achieve immersion. While multiple, networked processors have been used to increase through-put, we concentrate on using multiple processors to reduce lag. To that end, we present a complete list of all possible lag sources in VR applications, review available lag reduction techniques, and investigate how these reduction techniques interrelate. We also introduce a new process-synchronization scheme that reduces lag. We evaluate the effectiveness of this synchronization scheme both by software simulation, as well as by actual lag measurements in our sample application. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Adelstein, B. D., Johnston, E. R., & Ellis, S. R. </author> <year> (1992). </year> <title> A testbed for characterizing dynamic response of virtual environment spatial sensors. </title> <booktitle> 1992 UIST Proceedings, </booktitle> <pages> 15-22. </pages>
Reference-contexts: He omits synchronization delay as a source of lag and fails to generalize his characterization of the other sources. Most of his report concentrates on measuring user input device delays. And while Adelstein et al <ref> (Adelstein, Johnston, & Ellis, 1992) </ref> also quantify delays of 3 user input devices, their results have only limited impact on total end-to-end lag in VR applications, because they describe lag of user input devices in isolation.
Reference: <author> Appino, P. A., Lewis, J. B., Koved, L., Ling, D. T., Rabenhorst, D. A., & Codella, C. F. </author> <year> (1992). </year> <title> An architecture for virtual worlds. </title> <journal> Presence, </journal> <volume> 1(1), </volume> <pages> 1-17. </pages>
Reference-contexts: All these systems use asynchronous or other ad hoc process communication (except for left- and right-eye view rendering). Yet asynchronous communication maximizes throughput but is suboptimal for reducing lag. While Appino et al <ref> (Appino, Lewis, Koved, Ling, Rabenhorst, & Codella, 1992) </ref> mention the possibility of "just-in-time" synchronization schemes, they do not actually detail or implement any such schemes. <p> First, assign processors to user input devices. While previous work <ref> (Appino, Lewis, Koved, Ling, Rabenhorst, & Codella, 1992) </ref> recommends one processor per user input device, we modify this recommendation. Since serving a user input device has low overhead (we only need to read the serial port every 20ms and predict), one processor suffices to serve several user input devices.
Reference: <author> Bishop, G., & Fuchs, H., </author> <title> et al (1992). Research Directions in Virtual Environments: Report of an NSF Invitational Workshop, </title> <address> March 23-24, </address> <year> 1992, </year> <institution> at UNC Chapel Hill. Computer Graphics, </institution> <month> 26(3), </month> <pages> 153-177. </pages>
Reference: <author> Blaire-Benson, K. </author> <year> (1986). </year> <title> Television Engineering Handbook, chapter 1. </title> <publisher> McGraw Hill. </publisher>
Reference: <author> Brooks, Jr., F. P. </author> <year> (1988). </year> <title> Grasping reality through illusion interactive graphics serving science. </title> <booktitle> In Human Factors in Computing Systems, </booktitle> <pages> 1-11. </pages> <note> Special Issue of the SIGCHI Bulletin. </note>
Reference: <author> Bryson, S., & Levitt, C. </author> <year> (1991). </year> <title> The virtual windtunnel: An environment for the exploration of three-dimensional unsteady flows. </title> <booktitle> In Visualization '91, </booktitle> <pages> 17-24. </pages>
Reference-contexts: Processing can be as simple as transforming the data from the device format to the rendering format, i.e., the application echoes the user input device position to the virtual environment. Other more complicated application processes are common, for example, interactive streamline computations for virtual wind-tunnels <ref> (Bryson & Levitt, 1991) </ref>. Processing lag is highly application-dependent and thus highly variable. The simple echoing scheme above is the lower bound; today's workstations perform these data transformations in one millisecond or less. The upper bound is harder to characterize.
Reference: <author> Codella, C. F., Jalili, R., Koved, L., & Lewis, J. B. </author> <year> (1993). </year> <title> A toolkit for developing multi-user, distributed virtual environments. </title> <booktitle> In IEEE Virtual Reality Annual International Symposium, </booktitle> <pages> 401-407. </pages>
Reference: <author> Deering, M. </author> <year> (1992). </year> <title> High resolution virtual reality. </title> <booktitle> Computer Graphics (SIGGRAPH '92 Proceedings), </booktitle> <volume> 26(2), </volume> <pages> 195-202. </pages> <note> 16 Friedmann, </note> <author> M., Starner, T., & Pentland, A. </author> <year> (1992). </year> <title> Device synchronization using an optimal linear filter. </title> <booktitle> Computer Graphics (1992 Symposium on Interactive 3D Graphics), </booktitle> <volume> 25(2), </volume> <pages> 57-62. </pages>
Reference-contexts: Other researchers describe methods to reduce lag, such as prediction, time-critical computing, and use of parallelism. In particular, Liang et al (Liang, Shaw, & Green, 1991), Friedman et al (Friedmann, Starner, & Pentland, 1992), and Deering <ref> (Deering, 1992) </ref> propose prediction of user input data as a way to reduce and even eliminate perceived lag. Deering implements linear extrapolation, while the others apply a Kalman filter which provides the best least squares predictor in the presence of Gaussian noise.
Reference: <author> Fuchs, H., Poulton, J., Eyles, J., Greer, T., Goldfeather, J., Ellsworth, D., Molnar, S., Turk, G., Tebbs, B., & Israel, L. </author> <year> (1989). </year> <title> Pixel-planes 5: A heterogeneous multiprocessor graphics system using processor-enhanced memories. </title> <booktitle> Computer Graphics (SIGGRAPH '89 Proceedings), </booktitle> <volume> 23(3), </volume> <pages> 79-88. </pages>
Reference: <author> Funkhouser, T. A. & Sequin, C. H. </author> <year> (1993). </year> <title> Adaptive display algorithm for interactive frame rates during visualization of complex virtual environments. </title> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <pages> 247-254. </pages>
Reference: <author> Gobbetti, E., Balaguer, J.-F., & Thalmann, D. </author> <year> (1993). </year> <title> VB2: An architecture for interaction in synthetic worlds. </title> <booktitle> In 1993 UIST Proceedings, </booktitle> <pages> 167-178. </pages> <publisher> ACM SIGGRAPH, Addison-Wesley. </publisher>
Reference: <author> Gossweiler, R. </author> <year> (1993). </year> <title> Time-critical rendering in an immersive virtual environment. </title> <type> Thesis Proposal, </type> <note> available from author on request. </note>
Reference: <author> Held, R., & Durlach, N. </author> <year> (1991). </year> <title> Telepresence, time delay and adaptation. </title> <editor> In Stephen R. Ellis, editor, </editor> <title> Pictorial Communication in Virtual and Real Environments, chapter 14. </title> <publisher> Taylor and Francis. </publisher>
Reference-contexts: Even worse, if lag exceeds 300ms, humans start to dissociate their movements from the displayed effects, thus destroying any immersive effect <ref> (Held & Durlach, 1991) </ref>. This sensitivity to lag requires that we minimize lag for general applications to increase interactivity. <p> VR applications in particular demand lag times of less than 300ms to uphold immersion. (We base this conclusion on the above cited results.) The most critical are augmented reality applications: for virtual objects in a see-through, head-mounted display to seem realistic, perceived lag must be less than 30ms <ref> (Held & Durlach, 1991) </ref>. Throughput measurements cannot substitute for lag measurements in assessing the interactivity of an application, since lag and throughput measure different quantities: lag measures how long a computation process delays data, and throughput measures how frequently a computation process delivers a result.
Reference: <author> Holloway, R. L. </author> <year> (1991). </year> <title> Viper: A quasi-real-time virtual worlds application. </title> <type> Technical Report TR92-004, </type> <institution> University of North Carolina, Chapel Hill. </institution>
Reference: <author> Lewis, J. B., Koved, L., & Ling, D. T. </author> <year> (1991). </year> <title> Dialogue structures for virtual worlds. </title> <booktitle> Proceedings of CHI'91, </booktitle> <pages> 131-136. </pages>
Reference: <author> Liang, J., Shaw, C., & Green, M. </author> <year> (1991). </year> <title> On temporal-spatial realism in the virtual reality environment. </title> <booktitle> Proceedings of the 1991 User Interface Software Technology, </booktitle> <pages> 19-25. </pages>
Reference-contexts: And while Adelstein et al (Adelstein, Johnston, & Ellis, 1992) also quantify delays of 3 user input devices, their results have only limited impact on total end-to-end lag in VR applications, because they describe lag of user input devices in isolation. Liang et al <ref> (Liang, Shaw, & Green, 1991) </ref> claim to measure user input device delay, even though they actually measure end-to-end lag (albeit for an virtual environment with very simple graphics). <p> Nonetheless, due to the focus of their work, the same criticism applies: they attempt to isolate lag of user input devices and disregard other sources of lag. Other researchers describe methods to reduce lag, such as prediction, time-critical computing, and use of parallelism. In particular, Liang et al <ref> (Liang, Shaw, & Green, 1991) </ref>, Friedman et al (Friedmann, Starner, & Pentland, 1992), and Deering (Deering, 1992) propose prediction of user input data as a way to reduce and even eliminate perceived lag.
Reference: <author> Liu, A., Tharp, G., French, L., Lai, S., & Stark, L. </author> <year> (1993). </year> <title> Some of what one needs to know about using head-mounted displays to improve teleoperator performance. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 9(5), </volume> <pages> 638-648. </pages>
Reference-contexts: 1 Introduction Virtual reality (VR) applications strive to immerse users in artificial environments. To do this, common knowledge dictates a minimum frame rate of 10 frames per second. However, frame rate is only one of the important parameters that determine immersion: lag is equally important <ref> (Liu, Tharp, French, Lai, & Stark, 1993) </ref>. <p> To be safe we assume i perc to be equal to 5ms. This model successfully combines end-to-end lag and frame-rate-induced lag, while also being consistent with the test results of others <ref> (Liu, Tharp, French, Lai, & Stark, 1993) </ref>. <p> Finally, just as in the asynchronous case, just-in-time synchronization lets us "short-circuit" (see Section 4.3) the application. However, just-in-time synchronization has disadvantages. It lowers the frame rate slightly. However, Liu et al <ref> (Liu, Tharp, French, Lai, & Stark, 1993) </ref> argue that such a performance degradation is insignificant.
Reference: <author> Mine, M. R.. </author> <year> (1993). </year> <title> Characterization of end-to-end delays in head-mounted display systems. </title> <type> Technical Report TR93-001, </type> <institution> University of North Carolina at Chapel Hill. </institution>
Reference-contexts: Finally, we draw conclusions from our experiments and suggest possible future work in Section 7. 2 Previous Work So far, most research in parallel VR systems aims at increasing throughput, not decreasing lag. A report by Mark Mine <ref> (Mine, 1993) </ref> is an exception. However, while Mine realizes the importance of lag in head-mounted display systems, his description of its sources is insufficient. He omits synchronization delay as a source of lag and fails to generalize his characterization of the other sources. <p> The maximum rendering lag is longer if the rendering hardware is heavily pipelined. For instance, the 1,000,000 polygons/sec Pixel-Planes 5 architecture (Fuchs, Poulton, Eyles, Greer, Goldfeather, Ellsworth, Molnar, Turk, Tebbs, & Israel, 1989) renders a single polygon in 54ms <ref> (Mine, 1993) </ref>. (However, Pixel-Planes 5 can be reconfigured to allow for shorter lag at the expense of throughput.) Our measurements indicate that conventional graphics cards (in particular, the Sun ZX graphics boards) do not exhibit this anomaly. <p> Thus, we ensure that the operating system never swaps out any of our application tasks. 5 We measure end-to-end lag of our implementation in a setup practically identical to that described by Mine <ref> (Mine, 1993) </ref>: we use an oscilloscope to determine the time difference between when the Logitech tracker crosses a fixed boundary and when the computer graphically acknowledges the crossing by displaying a white triangle.
Reference: <author> Shaw, C., Liang, J., Green, M., & Sun, Y. </author> <year> (1992). </year> <title> The decoupled simulation model for virtual reality systems. </title> <booktitle> Proceedings of CHI'92, </booktitle> <pages> 321-328. </pages>
Reference: <author> Wang, C. P., Koved, L., & Dukach, S. </author> <year> (1990). </year> <title> Design for interactive performance in a virtual laboratory. </title> <booktitle> Computer Graphics (1990 Symposium on Interactive 3D Graphics), </booktitle> <volume> 24(2), </volume> <pages> 39-40. </pages>

References-found: 20

