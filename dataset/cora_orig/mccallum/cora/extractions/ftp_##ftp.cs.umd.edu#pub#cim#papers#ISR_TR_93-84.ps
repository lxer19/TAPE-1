URL: ftp://ftp.cs.umd.edu/pub/cim/papers/ISR_TR_93-84.ps
Refering-URL: http://www.cs.umd.edu/users/nau/imacs/IMACS.html
Root-URL: 
Title: Building MRSEV Models for CAM Applications  
Author: Satyandra K. Gupta Thomas R. Kramer Dana S. Nau William C. Regli yz Guangming Zhang 
Keyword: Design Critiquing, CAD/CAM Integration, Feature Recognition.  
Web: CS-TR-3331, UMIACS-94-97, ISR-TR93-84.  
Note: Accepted for publication in Advances in Engineering Software. Also available as  
Address: College Park, MD 20742  College Park, MD 20742  College Park, MD 20742  Gaithersburg, MD 20899  
Affiliation: Department of Mechanical Engineering and Institute for Systems Research University of Maryland  Department of Computer Science and Institute for Systems Research University of Maryland  Institute for Advanced Computer Studies University of Maryland  Manufacturing Engineering Laboratory National Institute of Standards and Technology  
Abstract: In integrating CAD and CAM applications, one major problem is how to interpret CAD information in a manner that makes sense for CAM. Our goal is to develop a general approach that can be used with a variety of CAD and CAM applications for the manufacture of machined parts. In particular, we present a methodology for taking a CAD model, extracting alternative interpretations of the model as collections of MRSEVs (Material Removal Shape Element Volumes, a STEP-based library of machining features), and evaluating these interpretations to determine which one is optimal. The evaluation criteria may be defined by the user, in order to select the best interpretation for the particular application at hand. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Thomas R. Kramer. </author> <title> A library of material removal shape element volumes (MRSEVs). </title> <type> Technical Report NISTIR 4809, </type> <institution> The National Institute of Standards and Technology, Gaithersburg, MD 20899, </institution> <month> March </month> <year> 1992. </year>
Reference-contexts: Moreover, no standard schemes are used for representing features, therefore output of these systems cannot be directly used in downstream computer aided manufacturing applications. To address this problem, we use a class of features that are expressible as MRSEVs (Material Removal Shape Element Volumes) <ref> [1] </ref>. MRSEVs are volumetric features corresponding to machining operations on 3-axis milling machines. MRSEVs can be defined using EXPRESS (the official STEP information modeling language) and STEP form features. <p> The EXPRESS model defines the data entities that describe the class of objects in the domain. 3.2.2 The MRSEV Hierarchy Kramer <ref> [1, 46] </ref> developed a library of material removal shape element volumes (MRSEVs) as a means of categorizing the shapes of volumes to be removed by machining operations on a 3-axis machining center. MRSEVs can be defined using the EXPRESS modeling language and STEP form features.
Reference: [2] <author> Jami J. Shah. </author> <title> Assessment of features technology. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 23(5) </volume> <pages> 331-343, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: Section 7 describes our current implementation. Section 8 describes proposed future extensions of our research. Section 9 contains concluding remarks. 2 Related Work Feature-based approaches have been very popular in a variety of CAD/CAM implementations, but different people have used the term to mean different things <ref> [2, 3, 4, 5] </ref>. Significant amounts 3 of work have been directed towards defining sets of form features to serve as a communication medium between design and manufacturing|but at present, most researchers are convinced that a single set of features cannot satisfy the requirements of both of these domains.
Reference: [3] <author> K. E. Hummel. </author> <title> The role of features in computer-aided process planning. </title> <booktitle> In Proceedings of Feature Symposium, </booktitle> <address> Woburn, Boston, MA, </address> <month> August </month> <year> 1990. </year>
Reference-contexts: Section 7 describes our current implementation. Section 8 describes proposed future extensions of our research. Section 9 contains concluding remarks. 2 Related Work Feature-based approaches have been very popular in a variety of CAD/CAM implementations, but different people have used the term to mean different things <ref> [2, 3, 4, 5] </ref>. Significant amounts 3 of work have been directed towards defining sets of form features to serve as a communication medium between design and manufacturing|but at present, most researchers are convinced that a single set of features cannot satisfy the requirements of both of these domains.
Reference: [4] <author> A. Klien. </author> <title> A solid groove feature based programming of parts. </title> <journal> Mechanical Engineering, </journal> <month> March </month> <year> 1988. </year>
Reference-contexts: Section 7 describes our current implementation. Section 8 describes proposed future extensions of our research. Section 9 contains concluding remarks. 2 Related Work Feature-based approaches have been very popular in a variety of CAD/CAM implementations, but different people have used the term to mean different things <ref> [2, 3, 4, 5] </ref>. Significant amounts 3 of work have been directed towards defining sets of form features to serve as a communication medium between design and manufacturing|but at present, most researchers are convinced that a single set of features cannot satisfy the requirements of both of these domains.
Reference: [5] <author> N.N.Z. Gindy. </author> <title> A hierarchical structure for form features. </title> <journal> Int. J. Prod. Res., </journal> <volume> 27(12) </volume> <pages> 2089-2103, </pages> <year> 1989. </year>
Reference-contexts: Section 7 describes our current implementation. Section 8 describes proposed future extensions of our research. Section 9 contains concluding remarks. 2 Related Work Feature-based approaches have been very popular in a variety of CAD/CAM implementations, but different people have used the term to mean different things <ref> [2, 3, 4, 5] </ref>. Significant amounts 3 of work have been directed towards defining sets of form features to serve as a communication medium between design and manufacturing|but at present, most researchers are convinced that a single set of features cannot satisfy the requirements of both of these domains.
Reference: [6] <author> Leila De Floriani. </author> <title> Feature extraction from boundary models of three-dimensional objects. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 11(8), </volume> <month> August </month> <year> 1989. </year>
Reference-contexts: The approaches of <ref> [6, 7] </ref> based on graph algorithms address a domain of polyhedral parts and features. The graph-grammar methods of [8, 9] and some approaches based on subgraph-matching may be prone to combinatorial difficulties for larger problems [10].
Reference: [7] <author> S. Joshi and T. C. Chang. </author> <title> Graph-based heuristics for recognition of machined features from a 3D solid model. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 20(2) </volume> <pages> 58-66, </pages> <month> March </month> <year> 1988. </year>
Reference-contexts: The approaches of <ref> [6, 7] </ref> based on graph algorithms address a domain of polyhedral parts and features. The graph-grammar methods of [8, 9] and some approaches based on subgraph-matching may be prone to combinatorial difficulties for larger problems [10]. <p> The work of Dong [21] included the formalization of a feature description language and employed frame-based reasoning algorithms to extract machining features for computer aided process planning. An approach handling feature interactions and intersections was done by Marefat [22]. The work built on the representation scheme of <ref> [7] </ref> and used a novel combination of expert system and hypothesis testing techniques to extract surface features from polyhedral objects. Perhaps the most comprehensive approach to date for recognizing features and handling their interactions has been that of Vandenbrande [23].
Reference: [8] <author> J. Miguel Pinilla, Susan Finger, and Friedrich B. Prinz. </author> <title> Shape feature description using an augmented topology graph grammar. </title> <booktitle> In Proceedings NSF Engineering Design Research Conference, </booktitle> <pages> pages 285-300. </pages> <institution> National Science Foundation, </institution> <month> June </month> <year> 1989. </year> <month> 30 </month>
Reference-contexts: The approaches of [6, 7] based on graph algorithms address a domain of polyhedral parts and features. The graph-grammar methods of <ref> [8, 9] </ref> and some approaches based on subgraph-matching may be prone to combinatorial difficulties for larger problems [10]. The recent work in [11] describes promising techniques that combat combinatorial problems by abstracting an approximation of the geometric and topological information in a solid model and finding features in the approximation.
Reference: [9] <author> Scott A. Safier and Susan Finger. </author> <title> Parsing features in solid geometric models. </title> <booktitle> In European Conference on Artificial Intelligence, </booktitle> <year> 1990. </year>
Reference-contexts: The approaches of [6, 7] based on graph algorithms address a domain of polyhedral parts and features. The graph-grammar methods of <ref> [8, 9] </ref> and some approaches based on subgraph-matching may be prone to combinatorial difficulties for larger problems [10]. The recent work in [11] describes promising techniques that combat combinatorial problems by abstracting an approximation of the geometric and topological information in a solid model and finding features in the approximation.
Reference: [10] <author> Thomas J. Peters. </author> <title> Mechanical design heuristics to reduce the combinatorial complexity for feature recognition. </title> <booktitle> Research In Engineering Design, </booktitle> <volume> 4 </volume> <pages> 195-201, </pages> <year> 1993. </year>
Reference-contexts: The approaches of [6, 7] based on graph algorithms address a domain of polyhedral parts and features. The graph-grammar methods of [8, 9] and some approaches based on subgraph-matching may be prone to combinatorial difficulties for larger problems <ref> [10] </ref>. The recent work in [11] describes promising techniques that combat combinatorial problems by abstracting an approximation of the geometric and topological information in a solid model and finding features in the approximation.
Reference: [11] <author> R. Gadh and F. B. Prinz. </author> <title> Recognition of geometric forms using the differential depth filter. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 24(11) </volume> <pages> 583-598, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: The approaches of [6, 7] based on graph algorithms address a domain of polyhedral parts and features. The graph-grammar methods of [8, 9] and some approaches based on subgraph-matching may be prone to combinatorial difficulties for larger problems [10]. The recent work in <ref> [11] </ref> describes promising techniques that combat combinatorial problems by abstracting an approximation of the geometric and topological information in a solid model and finding features in the approximation. Corney and Clark [12, 13] have had success extending the capabilities of graph-based algorithms to more general 2 1 2 -dimensional parts.
Reference: [12] <author> J. Corney and D. E. R. Clark. </author> <title> Face based feature recognition: Generalizing special cases. </title> <journal> International Journal of Computer Integrated Manufacturing, </journal> <volume> 6(1 </volume> & 2):39-50, 1993. 
Reference-contexts: The recent work in [11] describes promising techniques that combat combinatorial problems by abstracting an approximation of the geometric and topological information in a solid model and finding features in the approximation. Corney and Clark <ref> [12, 13] </ref> have had success extending the capabilities of graph-based algorithms to more general 2 1 2 -dimensional parts. Kramer [14] has presented a method for extracting non-intersecting features for a class of 2 1 2 -dimensional parts with planar or cylindrical surfaces.
Reference: [13] <author> J. Corney and D. E. R. Clark. </author> <title> Method for finding holes and pockets that connect multiple faces in 2 1 2 D objects. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 23(10) </volume> <pages> 658-668, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: The recent work in [11] describes promising techniques that combat combinatorial problems by abstracting an approximation of the geometric and topological information in a solid model and finding features in the approximation. Corney and Clark <ref> [12, 13] </ref> have had success extending the capabilities of graph-based algorithms to more general 2 1 2 -dimensional parts. Kramer [14] has presented a method for extracting non-intersecting features for a class of 2 1 2 -dimensional parts with planar or cylindrical surfaces.
Reference: [14] <author> Thomas R. Kramer. </author> <title> A parser that converts a boundary representation into a features representation. </title> <journal> International Journal of Computer Integrated Manufacturing, </journal> <volume> 2(3):154 163, </volume> <year> 1989. </year>
Reference-contexts: Corney and Clark [12, 13] have had success extending the capabilities of graph-based algorithms to more general 2 1 2 -dimensional parts. Kramer <ref> [14] </ref> has presented a method for extracting non-intersecting features for a class of 2 1 2 -dimensional parts with planar or cylindrical surfaces. Sakurai [15] employs graph-based feature recognition techniques in combination with support for user-defined feature types.
Reference: [15] <author> Hiroshi Sakurai and David C. Gossard. </author> <title> Recognizing shape features in solid models. </title> <journal> IEEE Computer Graphics & Applications, </journal> <month> September </month> <year> 1990. </year>
Reference-contexts: Corney and Clark [12, 13] have had success extending the capabilities of graph-based algorithms to more general 2 1 2 -dimensional parts. Kramer [14] has presented a method for extracting non-intersecting features for a class of 2 1 2 -dimensional parts with planar or cylindrical surfaces. Sakurai <ref> [15] </ref> employs graph-based feature recognition techniques in combination with support for user-defined feature types.
Reference: [16] <author> Hiroshi Sakurai and Chia-Wei Chin. </author> <title> Defining and recognizing cavity and protrusion by volumes. </title> <editor> In Fatih Kinoglu, editor, </editor> <booktitle> ASME Computers in Engineering Conference, </booktitle> <pages> pages 59-65, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: Kramer [14] has presented a method for extracting non-intersecting features for a class of 2 1 2 -dimensional parts with planar or cylindrical surfaces. Sakurai [15] employs graph-based feature recognition techniques in combination with support for user-defined feature types. In more recent work, Sakurai and Chin <ref> [16] </ref> propose an algorithm for recognizing very general protrusions and cavities through "spatial decomposition and composition." The work of Henderson [17] was seminal in employing expert systems on the feature recognition problem.
Reference: [17] <author> Mark R. Henderson. </author> <title> Extraction of Feature Information from Three-Dimensional CAD Data. </title> <type> PhD thesis, </type> <institution> Purdue University, West Lafayette, IN, USA, </institution> <year> 1984. </year>
Reference-contexts: Sakurai [15] employs graph-based feature recognition techniques in combination with support for user-defined feature types. In more recent work, Sakurai and Chin [16] propose an algorithm for recognizing very general protrusions and cavities through "spatial decomposition and composition." The work of Henderson <ref> [17] </ref> was seminal in employing expert systems on the feature recognition problem. In one of the early efforts on feature extraction, Woo [18] proposed a method for finding general depression and protrusion features on a part through decomposing the convex hull of the solid model.
Reference: [18] <author> Tony C. Woo. </author> <title> Feature extraction by volume decomposition. </title> <booktitle> In Conference on CAD/CAM Technology in Mechanical Engineering, </booktitle> <pages> pages 76-94, </pages> <month> March </month> <year> 1982. </year>
Reference-contexts: In more recent work, Sakurai and Chin [16] propose an algorithm for recognizing very general protrusions and cavities through "spatial decomposition and composition." The work of Henderson [17] was seminal in employing expert systems on the feature recognition problem. In one of the early efforts on feature extraction, Woo <ref> [18] </ref> proposed a method for finding general depression and protrusion features on a part through decomposing the convex hull of the solid model. The approach had several problems, including being confined to polyhedral models and the existence of certain pathological cases in which the procedure would not converge.
Reference: [19] <author> Y. S. Kim. </author> <title> Recognition of form features using convex decomposition. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 24(9) </volume> <pages> 461-476, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: The approach had several problems, including being confined to polyhedral models and the existence of certain pathological cases in which the procedure would not converge. The non-convergence of Woo's approach has been solved in recent work by Kim <ref> [19, 20] </ref>. Kim's approach uses convex volume decompositions to produce alternating sums of volumes and techniques for partitioning the solid to avoid non-convergence. Kim further improved the approach by performing additional mapping of the volumes found to feature templates.
Reference: [20] <author> Yong Se Kim and D. J. Wilde. </author> <title> A convergent convex decomposition of polyhedral objects. </title> <journal> Transactions of the ASME, </journal> <volume> 114 </volume> <pages> 468-476, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: The approach had several problems, including being confined to polyhedral models and the existence of certain pathological cases in which the procedure would not converge. The non-convergence of Woo's approach has been solved in recent work by Kim <ref> [19, 20] </ref>. Kim's approach uses convex volume decompositions to produce alternating sums of volumes and techniques for partitioning the solid to avoid non-convergence. Kim further improved the approach by performing additional mapping of the volumes found to feature templates.
Reference: [21] <author> Xin Dong. </author> <title> Geometric Feature Extraction for Computer-Aided Process Planning. </title> <type> PhD thesis, </type> <institution> Rensselaer Polytechnic Institute, </institution> <address> Troy, NY, USA, </address> <year> 1988. </year>
Reference-contexts: Kim further improved the approach by performing additional mapping of the volumes found to feature templates. The ability to handle interacting features has become an informal benchmark for feature recognition systems and has been the focus of numerous research efforts. The work of Dong <ref> [21] </ref> included the formalization of a feature description language and employed frame-based reasoning algorithms to extract machining features for computer aided process planning. An approach handling feature interactions and intersections was done by Marefat [22]. <p> He presents a set of feature classes and recognition "hints" for each class. Hints are extracted from the solid model and classified as to their potential for building feature instances. Like Dong <ref> [21] </ref>, a frame-based reasoning system then acts on the hints and attempts to complete a feature frame with information needed to make a maximal instance of a feature and represent its interaction with other features.
Reference: [22] <author> M. Marefat and R. L. Kashyap. </author> <title> Geometric reasoning for recognition of three-dimensional object features. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 12(10) </volume> <pages> 949-965, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: The work of Dong [21] included the formalization of a feature description language and employed frame-based reasoning algorithms to extract machining features for computer aided process planning. An approach handling feature interactions and intersections was done by Marefat <ref> [22] </ref>. The work built on the representation scheme of [7] and used a novel combination of expert system and hypothesis testing techniques to extract surface features from polyhedral objects. Perhaps the most comprehensive approach to date for recognizing features and handling their interactions has been that of Vandenbrande [23].
Reference: [23] <author> J. H. Vandenbrande and A. A. G. Requicha. </author> <title> Spatial reasoning for the automatic recognition of machinable features in solid models. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 15(12):1269, </volume> <month> December </month> <year> 1993. </year> <month> 31 </month>
Reference-contexts: The work built on the representation scheme of [7] and used a novel combination of expert system and hypothesis testing techniques to extract surface features from polyhedral objects. Perhaps the most comprehensive approach to date for recognizing features and handling their interactions has been that of Vandenbrande <ref> [23] </ref>. Their method is capable of finding some alternative feature interpretations and is described in the next section. <p> Since the techniques are heuristic in nature, it is not entirely clear when alternative interpretations will be produced. Vandenbrande <ref> [23] </ref> provides a framework for recognizing a significant class of realistic machining features of interest in process planning using artificial intelligence techniques in combination with queries to a solid modeler. He presents a set of feature classes and recognition "hints" for each class.
Reference: [24] <author> S. Meeran and M. J. Pratt. </author> <title> Automated feature recognition from 2d drawings. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 25(1) </volume> <pages> 7-17, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Perhaps the most comprehensive approach to date for recognizing features and handling their interactions has been that of Vandenbrande [23]. Their method is capable of finding some alternative feature interpretations and is described in the next section. Other recent work includes feature recognition from 2D engineering drawings <ref> [24] </ref>, via neural network techniques [25], for sheet-metal components [26], and feature modeling by incremental 4 recognition [27]. 2.2 Generating Alternative Feature Models The AMPS process planning system [28] includes a "feature refinement" step, in which heuristic techniques are used to combine a set of features into a more complex feature,
Reference: [25] <author> S. Prabhakar and M. R. Henderson. </author> <title> Automatic form-feature recognition using neural-network-based techniques on boundary representations of solid models. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 24(7) </volume> <pages> 381-393, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Their method is capable of finding some alternative feature interpretations and is described in the next section. Other recent work includes feature recognition from 2D engineering drawings [24], via neural network techniques <ref> [25] </ref>, for sheet-metal components [26], and feature modeling by incremental 4 recognition [27]. 2.2 Generating Alternative Feature Models The AMPS process planning system [28] includes a "feature refinement" step, in which heuristic techniques are used to combine a set of features into a more complex feature, or split a feature into
Reference: [26] <author> D. H. Lentz and R. Sowerby. </author> <title> Feature extraction of concave and convex regions and their intersections. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 25(7) </volume> <pages> 421-437, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: Their method is capable of finding some alternative feature interpretations and is described in the next section. Other recent work includes feature recognition from 2D engineering drawings [24], via neural network techniques [25], for sheet-metal components <ref> [26] </ref>, and feature modeling by incremental 4 recognition [27]. 2.2 Generating Alternative Feature Models The AMPS process planning system [28] includes a "feature refinement" step, in which heuristic techniques are used to combine a set of features into a more complex feature, or split a feature into two or more features.
Reference: [27] <author> Timo Laakko and Martti Mantyla. </author> <title> Feature modelling by incremental feature recognition. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 25(8) </volume> <pages> 479-492, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: Their method is capable of finding some alternative feature interpretations and is described in the next section. Other recent work includes feature recognition from 2D engineering drawings [24], via neural network techniques [25], for sheet-metal components [26], and feature modeling by incremental 4 recognition <ref> [27] </ref>. 2.2 Generating Alternative Feature Models The AMPS process planning system [28] includes a "feature refinement" step, in which heuristic techniques are used to combine a set of features into a more complex feature, or split a feature into two or more features.
Reference: [28] <author> Tien-Chien Chang. </author> <title> Expert Process Planning for Manufacturing. </title> <publisher> Addison-Wesley Publishing Co., </publisher> <year> 1990. </year>
Reference-contexts: Other recent work includes feature recognition from 2D engineering drawings [24], via neural network techniques [25], for sheet-metal components [26], and feature modeling by incremental 4 recognition [27]. 2.2 Generating Alternative Feature Models The AMPS process planning system <ref> [28] </ref> includes a "feature refinement" step, in which heuristic techniques are used to combine a set of features into a more complex feature, or split a feature into two or more features. Since the techniques are heuristic in nature, it is not entirely clear when alternative interpretations will be produced. <p> Extensive research has been done on different aspects of evaluation of operation plans. Mechanistic models have been developed to provide quantitative mappings from machining parameters to various performance measures, such as surface finish and dimensional accuracy <ref> [30, 28, 31, 32] </ref>. Research on machining economics has produced quantitative models for evaluating time and costs related to machining operations [33, 34]. Researchers have developed several different approaches to evaluate manufacturability [35, 36, 37, 38, 39]. <p> the workpiece W i = S fl (m 1 [ fl : : : [ fl m i1 ). let N = fn 1 ; n 2 ; : : : ; n n g calculate P T (N ) // using formula described below. return P T (N ) <ref> [30, 28] </ref> describe various types of precedence constraints resulting from machining considera tions.
Reference: [29] <author> R. R. Karinthi and D. S. Nau. </author> <title> An algebraic approach to feature interactions. </title> <journal> IEEE Trans. Pattern Analysis and Machine Intelligence, </journal> <volume> 14(4) </volume> <pages> 469-484, </pages> <month> April </month> <year> 1992. </year>
Reference-contexts: Further, the number of alternative feature decompositions produced is not controled. The first systematic work in the direction of generation of alternative interpretations was done by Karinthi and Nau <ref> [29] </ref>. They described an approach for producing alternative interpretations of the same object as different collections of volumetric features as the result of algebraic operations on the features, and a system for generating alternative interpretations by performing these algebraic operations.
Reference: [30] <author> James G. Bralla, </author> <title> editor. Handbook of Product Design for Manufacturing. </title> <publisher> McGraw Hill Book Company, </publisher> <year> 1986. </year>
Reference-contexts: Extensive research has been done on different aspects of evaluation of operation plans. Mechanistic models have been developed to provide quantitative mappings from machining parameters to various performance measures, such as surface finish and dimensional accuracy <ref> [30, 28, 31, 32] </ref>. Research on machining economics has produced quantitative models for evaluating time and costs related to machining operations [33, 34]. Researchers have developed several different approaches to evaluate manufacturability [35, 36, 37, 38, 39]. <p> the workpiece W i = S fl (m 1 [ fl : : : [ fl m i1 ). let N = fn 1 ; n 2 ; : : : ; n n g calculate P T (N ) // using formula described below. return P T (N ) <ref> [30, 28] </ref> describe various types of precedence constraints resulting from machining considera tions.
Reference: [31] <editor> Thomas J. Drozda, editor. Machining, </editor> <booktitle> volume 1 of Tool and Manufacturing Engineers Handbook. Society of Manufacturing Engineers, fourth edition, </booktitle> <year> 1983. </year>
Reference-contexts: Extensive research has been done on different aspects of evaluation of operation plans. Mechanistic models have been developed to provide quantitative mappings from machining parameters to various performance measures, such as surface finish and dimensional accuracy <ref> [30, 28, 31, 32] </ref>. Research on machining economics has produced quantitative models for evaluating time and costs related to machining operations [33, 34]. Researchers have developed several different approaches to evaluate manufacturability [35, 36, 37, 38, 39].
Reference: [32] <author> H.P. Wang and J.K. Li. </author> <title> Computer Aided Process Planning. </title> <publisher> Elsevier Science Publishers, </publisher> <year> 1991. </year>
Reference-contexts: Extensive research has been done on different aspects of evaluation of operation plans. Mechanistic models have been developed to provide quantitative mappings from machining parameters to various performance measures, such as surface finish and dimensional accuracy <ref> [30, 28, 31, 32] </ref>. Research on machining economics has produced quantitative models for evaluating time and costs related to machining operations [33, 34]. Researchers have developed several different approaches to evaluate manufacturability [35, 36, 37, 38, 39].
Reference: [33] <author> W. Winchell. </author> <title> Realistic Cost Estimating for Manufacturing. </title> <booktitle> Society of Manufacturing Engineers, </booktitle> <year> 1989. </year>
Reference-contexts: Mechanistic models have been developed to provide quantitative mappings from machining parameters to various performance measures, such as surface finish and dimensional accuracy [30, 28, 31, 32]. Research on machining economics has produced quantitative models for evaluating time and costs related to machining operations <ref> [33, 34] </ref>. Researchers have developed several different approaches to evaluate manufacturability [35, 36, 37, 38, 39]. Some of these have been developed for specific application domains, while others have been developed for general domains. <p> machining centers, m is the cardinality of the set f~o (n) : n 2 N g, where ~o (n) is the unit orientation vector for MRSEV n); T (n) = the machining time associated with MRSEV n (ways to estimate the machining time for various machining operations are described in <ref> [58, 59, 33, 60] </ref>); fi = an estimate of the auxiliary time as a fraction of the machining time (we use fi = 0:2).
Reference: [34] <author> G. M. Zhang and S. C-Y. Lu. </author> <title> An expert system framework for economic evaluation of machining operation planning. </title> <journal> Journal of Operational Research Society, </journal> <volume> 41(5) </volume> <pages> 391-404, </pages> <year> 1990. </year>
Reference-contexts: Mechanistic models have been developed to provide quantitative mappings from machining parameters to various performance measures, such as surface finish and dimensional accuracy [30, 28, 31, 32]. Research on machining economics has produced quantitative models for evaluating time and costs related to machining operations <ref> [33, 34] </ref>. Researchers have developed several different approaches to evaluate manufacturability [35, 36, 37, 38, 39]. Some of these have been developed for specific application domains, while others have been developed for general domains.
Reference: [35] <editor> R. Bakerjian, editor. </editor> <booktitle> Design for Manufacturability, volume 6 of Tool and Manufacturing Engineers Handbook. Society of Manufacturing Engineers, </booktitle> <year> 1992. </year>
Reference-contexts: Research on machining economics has produced quantitative models for evaluating time and costs related to machining operations [33, 34]. Researchers have developed several different approaches to evaluate manufacturability <ref> [35, 36, 37, 38, 39] </ref>. Some of these have been developed for specific application domains, while others have been developed for general domains.
Reference: [36] <author> R. Gadh, E.L. Gursoz, M.A. Hall, F.B. Prinz, and A.M. Sudhalkar. </author> <title> Feature abstraction in a knowledge-based critique of design. </title> <journal> Manufacturing Review, </journal> <volume> 4(2) </volume> <pages> 115-125, </pages> <year> 1991. </year>
Reference-contexts: Research on machining economics has produced quantitative models for evaluating time and costs related to machining operations [33, 34]. Researchers have developed several different approaches to evaluate manufacturability <ref> [35, 36, 37, 38, 39] </ref>. Some of these have been developed for specific application domains, while others have been developed for general domains.
Reference: [37] <author> G. Harhalakis, A. Kinsey, I. Minis, and H. Rathbun. </author> <title> Manufacturability evaluation of electronic products using group technology. </title> <booktitle> In NSF design and manufacturing systems grantees conference, </booktitle> <address> Charlotte, North Carolina, </address> <year> 1993. </year>
Reference-contexts: Research on machining economics has produced quantitative models for evaluating time and costs related to machining operations [33, 34]. Researchers have developed several different approaches to evaluate manufacturability <ref> [35, 36, 37, 38, 39] </ref>. Some of these have been developed for specific application domains, while others have been developed for general domains.
Reference: [38] <author> C.C. Jara-Almonte and S. Krishnamorrthi. </author> <title> Evaluation of the manufacturability of machined components using axiomatic design principles. </title> <booktitle> In NSF design and manufacturing systems grantees conference, </booktitle> <address> Austin, TX, </address> <year> 1991. </year> <month> 32 </month>
Reference-contexts: Research on machining economics has produced quantitative models for evaluating time and costs related to machining operations [33, 34]. Researchers have developed several different approaches to evaluate manufacturability <ref> [35, 36, 37, 38, 39] </ref>. Some of these have been developed for specific application domains, while others have been developed for general domains.
Reference: [39] <author> S. R. Shanker and D. G. Jansson. </author> <title> A generalized methodology for evaluating manufactura--bility. </title> <editor> In W. G. Sullivan and H. R. Parsaei, editors, </editor> <booktitle> Concurrent Engineering, Contemporary Issues and Modern Design Tools, </booktitle> <pages> pages 248-263. </pages> <publisher> Chapman and Hall, </publisher> <year> 1993. </year>
Reference-contexts: Research on machining economics has produced quantitative models for evaluating time and costs related to machining operations [33, 34]. Researchers have developed several different approaches to evaluate manufacturability <ref> [35, 36, 37, 38, 39] </ref>. Some of these have been developed for specific application domains, while others have been developed for general domains.
Reference: [40] <author> Aristides A. G. Requicha. </author> <title> Representation for rigid solids: Theory, methods, </title> <journal> and systems. Computing Surveys, </journal> <volume> 12(4) </volume> <pages> 437-464, </pages> <month> December </month> <year> 1980. </year>
Reference-contexts: approaches are rule-based: design characteristics which improve or degrade the manufacturability are represented as rules, which are applied to a given design in order to estimate its manufacturability. 5 (a): stock (before machining) (b): part (after machining) 3 Definitions and Notation 3.1 Basic Concepts A solid is a manifold r-set <ref> [40] </ref> with analytic bounding surfaces. If R is any solid, then b (R) is the boundary of R, and (R) is the interior of R. Note that R = (R) [ b (R) and that (R) " b (R) = ;.
Reference: [41] <author> D. Schenck. </author> <title> Exchange of product model data part 11: The EXPRESS language. Technical Report ISO TC184/SC4 Document N64, International Organization for Standardization, </title> <year> 1990. </year> <month> July. </month>
Reference-contexts: The organizations involved with PDES comprise many corporate, government, and standards development entities. Describing data in STEP is handled by defining an information model in the EXPRESS data modeling language <ref> [41, 42] </ref> for each type of data required. Once an information model is defined, data for representing a specific product can be represented by using the STEP rules for mapping EXPRESS to a physical file [43, 44, 45].
Reference: [42] <author> P. Spiby. </author> <title> Exchange of product model data part 11: The EXPRESS language. Technical Report ISO TC184/SC4 Document N14, International Organization for Standardization, </title> <year> 1991. </year> <month> April. </month>
Reference-contexts: The organizations involved with PDES comprise many corporate, government, and standards development entities. Describing data in STEP is handled by defining an information model in the EXPRESS data modeling language <ref> [41, 42] </ref> for each type of data required. Once an information model is defined, data for representing a specific product can be represented by using the STEP rules for mapping EXPRESS to a physical file [43, 44, 45].
Reference: [43] <author> J. Altemueller. </author> <title> The STEP file structure. Technical Report ISO TC184/SC4 Document N279, International Organization for Standardization, </title> <year> 1988. </year> <month> September. </month>
Reference-contexts: Once an information model is defined, data for representing a specific product can be represented by using the STEP rules for mapping EXPRESS to a physical file <ref> [43, 44, 45] </ref>.
Reference: [44] <author> J. Altemueller. </author> <title> Mapping from EXPRESS to physical file structure. Technical Report ISO TC184/SC4 Document N280, International Organization for Standardization, </title> <year> 1988. </year> <month> September. </month>
Reference-contexts: Once an information model is defined, data for representing a specific product can be represented by using the STEP rules for mapping EXPRESS to a physical file <ref> [43, 44, 45] </ref>.
Reference: [45] <author> J. Van Maanen. </author> <title> Product data representation and exchange part 21: Clear text encoding of the exchange structure. Technical Report ISO TC184/SC4 Document N78, International Organization for Standardization, </title> <year> 1991. </year> <month> March. </month>
Reference-contexts: Once an information model is defined, data for representing a specific product can be represented by using the STEP rules for mapping EXPRESS to a physical file <ref> [43, 44, 45] </ref>.
Reference: [46] <author> Thomas R. Kramer. </author> <title> Issues regarding material removal shape element volumes (MRSEVs). </title> <type> Technical Report NISTIR 4804, </type> <institution> The National Institute of Standards and Technology, Gaithersburg, MD 20899, </institution> <month> March </month> <year> 1992. </year>
Reference-contexts: The EXPRESS model defines the data entities that describe the class of objects in the domain. 3.2.2 The MRSEV Hierarchy Kramer <ref> [1, 46] </ref> developed a library of material removal shape element volumes (MRSEVs) as a means of categorizing the shapes of volumes to be removed by machining operations on a 3-axis machining center. MRSEVs can be defined using the EXPRESS modeling language and STEP form features.
Reference: [47] <author> Michael J. Pratt. </author> <title> Tutorial paper on advanced topics in solid modeling: Form features and their application in solid modeling. </title> <booktitle> In SIGGRAPH 1987. The Association for Computing Machinery, </booktitle> <publisher> ACM Press, </publisher> <year> 1987. </year>
Reference-contexts: Kramer has written such definitions for a subset of the MRSEV library, and has defined the rest of the MRSEV library using an EXPRESS-like language. MRSEVs features are volumetric, some of the benefits of which have been explained in <ref> [47] </ref>. The MRSEV hierarchy provides a framework for describing a large class of volumetric entities of interest to machining. Each entity type has a number of required and optional attributes. MRSEV instances have been used for applications such as process planning and NC-program generation [48].
Reference: [48] <author> Thomas R. Kramer. </author> <title> An express schema for machining plugged into ALPS4. </title> <type> Technical report, </type> <institution> The National Institute of Standards and Technology, Gaithersburg, MD 20899, </institution> <month> January </month> <year> 1991. </year>
Reference-contexts: The MRSEV hierarchy provides a framework for describing a large class of volumetric entities of interest to machining. Each entity type has a number of required and optional attributes. MRSEV instances have been used for applications such as process planning and NC-program generation <ref> [48] </ref>. Kramer's main MRSEV types include linear swept features, edge-cut features, ramps, and rotational pockets.
Reference: [49] <author> Christoph M. Hoffman. </author> <title> Geometric and Solid Modeling: An Introduction. </title> <publisher> Morgan Kauf-mann Publishers Incorporated, </publisher> <address> CA, </address> <year> 1989. </year>
Reference-contexts: We start with a solid model of the part P and construct all instances of primary MRSEVs that can be built from the geometric and topological information contained in the boundary-representation <ref> [49] </ref> of P .
Reference: [50] <author> William C. Regli and Dana S. Nau. </author> <title> Building a general approach to feature recognition of material removal shape element volumes (MRSEVs). </title> <editor> In Jaroslaw Rossignac and Joshua Turner, editors, </editor> <booktitle> Second Symposium on Solid Modeling Foundations and CAD/CAM Applications, </booktitle> <address> New York, NY 10036, USA, May 19-21, Montreal, Canada 1993. </address> <publisher> ACM SIG-GRAPH, ACM Press. </publisher> <pages> 33 </pages>
Reference-contexts: As space does not permit full elaboration on the geometric details of constructing primary MRSEVs, we present pseudo-code outlines of the structure of these algorithms, as their implementation will depend greatly on the functionality of the modeling system being employed <ref> [50, 51] </ref>. Recognize Holes: Recognizing hole MRSEVs is straightforward: an instance of a hole can be found from its end surface face or a portion of its cylindrical side face (as shown in Figure 10 (a)). For non-through hole features, only one feature instance exists. <p> Also being employed in our development efforts are Ithaca Software's HOOPS c fl Graphics System and the Tcl/Tk embeddable command language and user interface toolkit developed at the University of California at Berkeley. The current MRSEV recognizer constructs instances of hole and pocket MRSEVs as outlined in <ref> [50, 51] </ref> with the exception some cases of through pockets. Implementation for general through pockets was restricted by the current version of the ACIS c fl application procedural interface which, at the time of this writing, we are extending to provide the needed functionality.
Reference: [51] <author> William C. Regli and Dana S. Nau. </author> <title> Recognition of volumetric features from CAD models: Problem formalization and algorithms. </title> <type> Technical Report TR 93-41, </type> <institution> The University of Maryland, Institute for Systems Research, College Park, MD 20742, USA, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: As space does not permit full elaboration on the geometric details of constructing primary MRSEVs, we present pseudo-code outlines of the structure of these algorithms, as their implementation will depend greatly on the functionality of the modeling system being employed <ref> [50, 51] </ref>. Recognize Holes: Recognizing hole MRSEVs is straightforward: an instance of a hole can be found from its end surface face or a portion of its cylindrical side face (as shown in Figure 10 (a)). For non-through hole features, only one feature instance exists. <p> Also being employed in our development efforts are Ithaca Software's HOOPS c fl Graphics System and the Tcl/Tk embeddable command language and user interface toolkit developed at the University of California at Berkeley. The current MRSEV recognizer constructs instances of hole and pocket MRSEVs as outlined in <ref> [50, 51] </ref> with the exception some cases of through pockets. Implementation for general through pockets was restricted by the current version of the ACIS c fl application procedural interface which, at the time of this writing, we are extending to provide the needed functionality. <p> Our approach to recognizing MRSEVs is complete over a significant class of realistic parts, even if the features intersect with each other <ref> [51] </ref>. Knowing the limits on completeness is useful in domains such as manufacturability evaluation, in which estimating the manufac-turability of a design may require trying many alternative MRSEV models to find which is best. 3. Our approach handles hole, pocket, and through-pocket MRSEVs and their associated accessibility constraints.
Reference: [52] <author> T. H. Corman, C. E. Leiserson, and R. L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> MIT Press/McGraw Hill, </publisher> <year> 1990. </year>
Reference-contexts: Each such set cover corresponds to one or more MRSEV mod els. Generate Models For each of the irredundant covers found by Find Covers, this algorithm finds one or more MRSEV Models M such that 2 The set covering problem is a well known combinatorial problem <ref> [52] </ref>. There are several different variations of this problem; the one that is most appropriate for our purposes is the following [53, 54]. Let S be a set, and S = fS 1 ; : : : ; S n g be a family of sets.
Reference: [53] <author> J. A. Reggia, D. S. Nau, and P. Y. Wang. </author> <title> A formal model of diagnostic inference. II. algorithmic solution and applications. </title> <journal> Information Sciences, </journal> <volume> 37 </volume> <pages> 257-285, </pages> <year> 1985. </year>
Reference-contexts: There are several different variations of this problem; the one that is most appropriate for our purposes is the following <ref> [53, 54] </ref>. Let S be a set, and S = fS 1 ; : : : ; S n g be a family of sets.
Reference: [54] <author> Yun Peng and James A. Reggia. </author> <title> Diagnostic problem-solving with causal chaining. </title> <journal> International Journal of Intelligent Systems, </journal> <volume> 2 </volume> <pages> 265-302, </pages> <year> 1987. </year>
Reference-contexts: There are several different variations of this problem; the one that is most appropriate for our purposes is the following <ref> [53, 54] </ref>. Let S be a set, and S = fS 1 ; : : : ; S n g be a family of sets.
Reference: [55] <author> D. S. Nau, G. Zhang, and S. K. Gupta. </author> <title> Generation and evaluation of alternative operation sequences. </title> <editor> In A. R. Thangaraj, A. Bagchi, M. Ajanappa, and D. K. Anand, editors, </editor> <title> Quality Assurance through Integration of Manufacturing Processes and Systems, </title> <booktitle> ASME Winter Annual Meeting, </booktitle> <volume> volume PED-Vol. 56, </volume> <pages> pages 93-108, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: For the sake of brevity we will not describe tolerance estimation in this paper. For details on our work on tolerance estimation, readers are referred to <ref> [55, 56] </ref>. It is also worth noticing that MRSEVs in a MRSEV model cannot necessarily be machined in any arbitrary order. Instead, accessibility [56], tolerance-datum dependencies, setup [57] and other types of interactions among them will introduce precedence constraints requiring that some of them be machined before or after others.
Reference: [56] <author> S.K. Gupta and D.S. Nau. </author> <title> A systematic approach for analyzing the manufacturability of machined parts. </title> <booktitle> Computer Aided Design, </booktitle> <year> 1994. </year>
Reference-contexts: For the sake of brevity we will not describe tolerance estimation in this paper. For details on our work on tolerance estimation, readers are referred to <ref> [55, 56] </ref>. It is also worth noticing that MRSEVs in a MRSEV model cannot necessarily be machined in any arbitrary order. Instead, accessibility [56], tolerance-datum dependencies, setup [57] and other types of interactions among them will introduce precedence constraints requiring that some of them be machined before or after others. <p> For the sake of brevity we will not describe tolerance estimation in this paper. For details on our work on tolerance estimation, readers are referred to [55, 56]. It is also worth noticing that MRSEVs in a MRSEV model cannot necessarily be machined in any arbitrary order. Instead, accessibility <ref> [56] </ref>, tolerance-datum dependencies, setup [57] and other types of interactions among them will introduce precedence constraints requiring that some of them be machined before or after others. Discussing various types of precedence constraints is out of the scope of this paper. <p> Discussing various types of precedence constraints is out of the scope of this paper. Our work on identifying precedence constraints can be found in <ref> [56] </ref>. In most CAM applications, a general evaluation framework will require following three steps: 1. Perform pre-processing of the MRSEV model to identify precedence constraints on the MRSEVs in the model. 2. Verify that the MRSEV model satisfies the domain specific constraints. 3.
Reference: [57] <author> C. C. Hayes and P. Wright. </author> <title> Automatic process planning: using feature interaction to guide search. </title> <journal> Journal of Manufacturing Systems, </journal> <volume> 8(1) </volume> <pages> 1-15, </pages> <year> 1989. </year>
Reference-contexts: For details on our work on tolerance estimation, readers are referred to [55, 56]. It is also worth noticing that MRSEVs in a MRSEV model cannot necessarily be machined in any arbitrary order. Instead, accessibility [56], tolerance-datum dependencies, setup <ref> [57] </ref> and other types of interactions among them will introduce precedence constraints requiring that some of them be machined before or after others. Discussing various types of precedence constraints is out of the scope of this paper. Our work on identifying precedence constraints can be found in [56].
Reference: [58] <institution> Machinability Data Center. Machining Data Handbook. Metcut Research Associates, Cincinnati, Ohio, </institution> <address> third edition, </address> <year> 1980. </year>
Reference-contexts: machining centers, m is the cardinality of the set f~o (n) : n 2 N g, where ~o (n) is the unit orientation vector for MRSEV n); T (n) = the machining time associated with MRSEV n (ways to estimate the machining time for various machining operations are described in <ref> [58, 59, 33, 60] </ref>); fi = an estimate of the auxiliary time as a fraction of the machining time (we use fi = 0:2).
Reference: [59] <author> F.W. Wilson and P.D. Harvey. </author> <title> Manufacturing Planning and Estimating Handbook. </title> <publisher> Mc-Graw Hill Book Company, </publisher> <year> 1963. </year>
Reference-contexts: machining centers, m is the cardinality of the set f~o (n) : n 2 N g, where ~o (n) is the unit orientation vector for MRSEV n); T (n) = the machining time associated with MRSEV n (ways to estimate the machining time for various machining operations are described in <ref> [58, 59, 33, 60] </ref>); fi = an estimate of the auxiliary time as a fraction of the machining time (we use fi = 0:2). <p> To compute P T (N ), we approximate the quantity P m i=1 T si by using m fi T s , where T s is the average setup time, estimated using information from handbooks such as <ref> [59] </ref>. 27 6.2 Pruning Heuristic h (N; V ) for Estimating Lower Bound on Production Time We define the heuristic function h (N; V ) to give the lower bound on the required setup and machining time for any operation plan resulting from MRSEVs in N .
Reference: [60] <author> G. Zhang, D. Nau, W. Ko, and S. Gupta. </author> <title> Economic evaluation of alternative machining operation plans. </title> <booktitle> In NSF Design and Manufacturing Grantees Meeting, </booktitle> <month> January </month> <year> 1994. </year> <month> 34 </month>
Reference-contexts: machining centers, m is the cardinality of the set f~o (n) : n 2 N g, where ~o (n) is the unit orientation vector for MRSEV n); T (n) = the machining time associated with MRSEV n (ways to estimate the machining time for various machining operations are described in <ref> [58, 59, 33, 60] </ref>); fi = an estimate of the auxiliary time as a fraction of the machining time (we use fi = 0:2).
References-found: 60

