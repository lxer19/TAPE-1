URL: http://www.cs.duke.edu/CGC/workshop97/abstracts/motwani2.ps
Refering-URL: http://www.cs.duke.edu/CGC/workshop97/schedule.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: E-mail: moses@cs.stanford.edu.  E-mail: danha@math.tau.ac.il.  E-mail: rajeev@cs.stanford.edu.  
Title: The Dynamic Servers Problem  
Author: MOSES CHARIKAR DAN HALPERIN RAJEEV MOTWANI 
Note: Supported by an ARO MURI Grant DAAH04-96-1-0007 and NSF Award CCR-9357849, with matching funds from IBM, Schlum-berger Foundation, Shell Foundation, and Xerox Corporation.  Supported by an Alon Fellowship.  Supported by an Alfred P. Sloan Research Fellowship, an IBM Faculty Partnership Award, an ARO MURI Grant DAAH04-96-1-0007, and NSF Young Investigator Award CCR-9357849, with matching funds from IBM, Mitsubishi, Schlumberger Foundation, Shell Foundation, and Xerox Corporation.  
Address: Stanford, CA 94305-9045.  69978, Israel.  Stanford, CA 94305-2140.  
Affiliation: Stanford University  Tel Aviv University  Stanford University Department of Computer Science, Stanford University,  Department of Computer Science, Tel Aviv University, Tel Aviv  Department of Computer Science, Stanford University,  
Abstract: Introduction. We introduce the dynamic servers problem, a generalization of the k-server problem [11]. This problem is a simultaneous abstraction for problems arising in a variety of applications described below and appears to be of theoretical significance as a natural new paradigm in online algorithms. We study both the offline and online versions of this problem. Our results are based on a geometric reformulation of the dynamic servers problem that leads to interesting connections with Steiner trees and geometric partitioning problems, and our results may be of independent interest in that context. The k-server problem is the following: coordinate the movement of k mobile servers in a metric space, so as to process a sequence of requests at the points of the metric space, where a request is processed by moving a server to its location. The goal is to minimize the total distance traveled by the servers. In the online setting, the performance of an algorithm is measured via the competitive ratio [11]. Informally, the dynamic servers problem is a generalization of the k-server problem where the number of servers is not fixed at k; instead, the number of servers can be increased or decreased at will, the only catch being that the algorithm has to pay rental cost proportional to the number of servers active during any given period. We consider two possible models one where the algorithm pays for deleting servers and another where deleting servers is free. Both of these are relevant to different applications as described below. Motivation and Applications. Our motivating application is the design of data structures and algorithms for the maintainence of kinematic structures, as described by Halperin, Latombe, and Motwani [10]. Such structures are used to maintain conformations of molecules in computational biology [6, 10, 7], motion planning in robotics [4, 8, 19] and computer animation [12]. Consider a collection of rigid bodies moving in 3-dimensional space and hinged together in a kinematic structure. We model these objects as a graph (typically, a path or a tree) whose vertices are the rigid bodies and edges are the linkages. The problem is to maintain data structures that capture the 3-dimensional shape as it evolves, and that support operations such as range queries or queries concerning possible self-collisions. Halperin, Latombe, and Motwani [10] proposed a model for this family of problems which is essentially the dynamic server problem, although their results were only applicable to the offline setting. Another application of our model is to the information delivery problem for video-on-demand of Papadi-mitriou, Ramanathan, and Rangan [15, 16, 17]. For home entertainment channels, it is required to deliver personalized video programs across communication networks [14]. The same data must be delivered to different sites and different times. It is cached at intermediate locations to minimize communication costs. In 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. ALON AND Y. AZAR. </author> <title> On-line Steiner trees in the Euclidean plane. Discrete & Computational Geometry, </title> <booktitle> 10 (1993), </booktitle> <pages> pp. 113-121. </pages>
Reference-contexts: In fact, the solution to the dynamic servers problem can be interpreted as a combination of an upward monotone tree and a downward monotone tree. We point out connections to past work on Steiner trees <ref> [1, 3] </ref> and exploit the geometric reformulation to obtain an O (minflog n; log g)-approximation to the offline problem with n requests in a metric space, where , the normalized diameter, denotes the ratio of the maximum to the minimum distance amongst the requested points.
Reference: [2] <author> P. BERMAN AND C. COULSTON. </author> <title> On-line Algorithms for Steiner Tree Problems. </title> <booktitle> In Proceedings of the 29th ACM Symposium on Theory of Computing, </booktitle> <year> 1997, </year> <pages> pp. 344-353. </pages>
Reference-contexts: The special case of dynamic servers without deletion costs and on the line turns out to be the same as the Online Symmetric Rectilinear Arborescence problem studied by Berman and Coulston <ref> [2] </ref>. For this very special case of the general dynamic server problem, they gave an O (log n) competitive algorithm. Our Results. We consider the product of the metric space with the time axis.
Reference: [3] <author> M. BERN AND D. EPPSTEIN. </author> <title> Approximation algorithms for geometric problems. In: D.S. Hochbaum, editor, Approximation Algorithms for NP-Hard Problems. </title> <publisher> PWS Publishing Company, </publisher> <year> 1996. </year>
Reference-contexts: Papadimitriou et al [17] demonstrate the NP-hardness of their problem, connect it to Steiner trees <ref> [3] </ref>, and thereby provide a 2-competitive online algorithm for the special case of paths when customer requests appear only at one endpoint. <p> In fact, the solution to the dynamic servers problem can be interpreted as a combination of an upward monotone tree and a downward monotone tree. We point out connections to past work on Steiner trees <ref> [1, 3] </ref> and exploit the geometric reformulation to obtain an O (minflog n; log g)-approximation to the offline problem with n requests in a metric space, where , the normalized diameter, denotes the ratio of the maximum to the minimum distance amongst the requested points.
Reference: [4] <author> G.S. CHIRIKJIAN AND J.W. BURDICK. </author> <title> Kinematics of Hyper-Redundant Manipulators. </title> <booktitle> In Proceedings of the 2nd International Workshop on Advances in Robot Kinematics, </booktitle> <year> 1990, </year> <pages> pp. 392-399. </pages>
Reference-contexts: Motivation and Applications. Our motivating application is the design of data structures and algorithms for the maintainence of kinematic structures, as described by Halperin, Latombe, and Motwani [10]. Such structures are used to maintain conformations of molecules in computational biology [6, 10, 7], motion planning in robotics <ref> [4, 8, 19] </ref> and computer animation [12]. Consider a collection of rigid bodies moving in 3-dimensional space and hinged together in a kinematic structure. We model these objects as a graph (typically, a path or a tree) whose vertices are the rigid bodies and edges are the linkages.
Reference: [5] <author> D.-Z. DU, L.-Q. PAN, AND M.-T. SHING. </author> <title> Minimum Edge Length Guillotine Rectangular Partition. </title> <type> Technical Report MSRI 02418-86, </type> <institution> MSRI, Berkeley, </institution> <year> 1986. </year>
Reference-contexts: We obtain a 3-approximation algorithm for the monotone steiner tree problem for the plane. This gives us a 6-approximation algorithm for the offline problem on the line. We also obtain an improvement for the video-on-demand application. Further, the 3-approximation algorithm can also be applied to to geometric partitioning <ref> [5, 9, 13] </ref>. Consider the following monotone rectilinear partitioning problem: given an axis-parallel rectangle A in the plane with n point holes inside it, partition A into monotone rectilinear polygonswhose total edge length is minimal such that the point holes all lie on the boundaries of the partitioning polygons.
Reference: [6] <author> P. FINN, D. HALPERIN, L. KAVRAKI, J-C. LATOMBE, R. MOTWANI, C. SHELTON, AND S. VENKATASUB-RAMANIAN. </author> <title> Geometric Manipulation of Flexible Molecules. </title> <booktitle> In Proceedings of the ACM Workshop on Applied Computational Geometry, </booktitle> <year> 1996. </year>
Reference-contexts: Motivation and Applications. Our motivating application is the design of data structures and algorithms for the maintainence of kinematic structures, as described by Halperin, Latombe, and Motwani [10]. Such structures are used to maintain conformations of molecules in computational biology <ref> [6, 10, 7] </ref>, motion planning in robotics [4, 8, 19] and computer animation [12]. Consider a collection of rigid bodies moving in 3-dimensional space and hinged together in a kinematic structure.
Reference: [7] <author> P. FINN, L.E. KAVRAKI, J-C. LATOMBE, R. MOTWANI, C. SHELTON, S. VENKATASUBRAMANIAN AND A. YAO. </author> <title> RAPID: Randomized Pharmacophore Identification in Drug Design. </title> <booktitle> to appear in Proceedings of 13th Annual ACM Symposium on Computational Geometry, </booktitle> <year> 1997. </year>
Reference-contexts: Motivation and Applications. Our motivating application is the design of data structures and algorithms for the maintainence of kinematic structures, as described by Halperin, Latombe, and Motwani [10]. Such structures are used to maintain conformations of molecules in computational biology <ref> [6, 10, 7] </ref>, motion planning in robotics [4, 8, 19] and computer animation [12]. Consider a collection of rigid bodies moving in 3-dimensional space and hinged together in a kinematic structure.
Reference: [8] <author> T. FUKUDA AND S. NAKAGAWA. </author> <title> Dynamically Reconfigurable Robotic Systems. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <year> 1988, </year> <pages> pp. 1581-1586. </pages>
Reference-contexts: Motivation and Applications. Our motivating application is the design of data structures and algorithms for the maintainence of kinematic structures, as described by Halperin, Latombe, and Motwani [10]. Such structures are used to maintain conformations of molecules in computational biology [6, 10, 7], motion planning in robotics <ref> [4, 8, 19] </ref> and computer animation [12]. Consider a collection of rigid bodies moving in 3-dimensional space and hinged together in a kinematic structure. We model these objects as a graph (typically, a path or a tree) whose vertices are the rigid bodies and edges are the linkages.
Reference: [9] <author> T. GONZALEZ, M. RAZZAZI, AND S.-I. ZHENG. </author> <title> An Efficient Divide-and-Conquer Approximation for Hy-perrectangular Partitions. </title> <booktitle> In Proceedings of the 2nd Canadian Conference on Computational Geometry, </booktitle> <year> 1990, </year> <pages> pp. 214-217. </pages>
Reference-contexts: We obtain a 3-approximation algorithm for the monotone steiner tree problem for the plane. This gives us a 6-approximation algorithm for the offline problem on the line. We also obtain an improvement for the video-on-demand application. Further, the 3-approximation algorithm can also be applied to to geometric partitioning <ref> [5, 9, 13] </ref>. Consider the following monotone rectilinear partitioning problem: given an axis-parallel rectangle A in the plane with n point holes inside it, partition A into monotone rectilinear polygonswhose total edge length is minimal such that the point holes all lie on the boundaries of the partitioning polygons.
Reference: [10] <author> D. HALPERIN, J.-C. LATOMBE, AND R. MOTWANI. </author> <title> Dynamic Maintenance of Kinematic Structures. </title> <editor> In: J.P. Laumond and M. Overmars, editors, </editor> <booktitle> Algorithmic Foundations of Robotics. A.K. </booktitle> <publisher> Peters Publishing, </publisher> <year> 1996. </year> <booktitle> Preliminary version in Proceedings of the 2nd International Workshop on the Algorithmic Foundations of Robotics, </booktitle> <address> Toulouse, France, </address> <year> 1996. </year>
Reference-contexts: Both of these are relevant to different applications as described below. Motivation and Applications. Our motivating application is the design of data structures and algorithms for the maintainence of kinematic structures, as described by Halperin, Latombe, and Motwani <ref> [10] </ref>. Such structures are used to maintain conformations of molecules in computational biology [6, 10, 7], motion planning in robotics [4, 8, 19] and computer animation [12]. Consider a collection of rigid bodies moving in 3-dimensional space and hinged together in a kinematic structure. <p> Motivation and Applications. Our motivating application is the design of data structures and algorithms for the maintainence of kinematic structures, as described by Halperin, Latombe, and Motwani [10]. Such structures are used to maintain conformations of molecules in computational biology <ref> [6, 10, 7] </ref>, motion planning in robotics [4, 8, 19] and computer animation [12]. Consider a collection of rigid bodies moving in 3-dimensional space and hinged together in a kinematic structure. <p> The problem is to maintain data structures that capture the 3-dimensional shape as it evolves, and that support operations such as range queries or queries concerning possible self-collisions. Halperin, Latombe, and Motwani <ref> [10] </ref> proposed a model for this family of problems which is essentially the dynamic server problem, although their results were only applicable to the offline setting. Another application of our model is to the information delivery problem for video-on-demand of Papadi-mitriou, Ramanathan, and Rangan [15, 16, 17]. <p> There is a storage cost associated with storing an object at a node. The problem can be modeled as a dynamic server problem (without deletion costs) for each object. Previous Work. In the offline setting, Halperin, Latombe, and Motwani <ref> [10] </ref> showed that even in the case of paths, devising the best strategy is NP-hard. They also presented an O (log n)-approximation algorithm for paths, where n is the total number of updates.
Reference: [11] <author> S. IRANI AND A. KARLIN. </author> <title> Online Computation. In: D.S. Hochbaum, editor, Approximation Algorithms for NP-Hard Problems. </title> <publisher> PWS Publishing Company, </publisher> <year> 1996. </year>
Reference-contexts: Introduction. We introduce the dynamic servers problem, a generalization of the k-server problem <ref> [11] </ref>. This problem is a simultaneous abstraction for problems arising in a variety of applications described below and appears to be of theoretical significance as a natural new paradigm in online algorithms. We study both the offline and online versions of this problem. <p> The goal is to minimize the total distance traveled by the servers. In the online setting, the performance of an algorithm is measured via the competitive ratio <ref> [11] </ref>.
Reference: [12] <author> Y. KOGA, K. KONDO, J. KUFFNER, AND J-C. LATOMBE. </author> <title> Planning Motions with Intentions. </title> <booktitle> In Proceedings of SIGGRAPH'94, </booktitle> <year> 1994, </year> <pages> pp 395-408. </pages>
Reference-contexts: Such structures are used to maintain conformations of molecules in computational biology [6, 10, 7], motion planning in robotics [4, 8, 19] and computer animation <ref> [12] </ref>. Consider a collection of rigid bodies moving in 3-dimensional space and hinged together in a kinematic structure. We model these objects as a graph (typically, a path or a tree) whose vertices are the rigid bodies and edges are the linkages.
Reference: [13] <author> A. LINGAS, R.Y. PINTER, R.L. RIVEST, AND A. SHAMIR. </author> <title> Minimum Edge Length Partitioning of Rectilinear Polygons. </title> <booktitle> In Proceedings of the 20th Annual Allerton Conference on Communication, Control, and Computing, </booktitle> <year> 1985, </year> <pages> pp. 53-63. </pages>
Reference-contexts: We obtain a 3-approximation algorithm for the monotone steiner tree problem for the plane. This gives us a 6-approximation algorithm for the offline problem on the line. We also obtain an improvement for the video-on-demand application. Further, the 3-approximation algorithm can also be applied to to geometric partitioning <ref> [5, 9, 13] </ref>. Consider the following monotone rectilinear partitioning problem: given an axis-parallel rectangle A in the plane with n point holes inside it, partition A into monotone rectilinear polygonswhose total edge length is minimal such that the point holes all lie on the boundaries of the partitioning polygons.
Reference: [14] <author> S. LOEB. </author> <title> Architecting Personalized Delivery of Multimedia Information. </title> <journal> Communications of the ACM, </journal> <volume> 35 (1992), </volume> <pages> pp. 39-48. </pages>
Reference-contexts: Another application of our model is to the information delivery problem for video-on-demand of Papadi-mitriou, Ramanathan, and Rangan [15, 16, 17]. For home entertainment channels, it is required to deliver personalized video programs across communication networks <ref> [14] </ref>. The same data must be delivered to different sites and different times. It is cached at intermediate locations to minimize communication costs. In fl Department of Computer Science, Stanford University, Stanford, CA 94305-9045. E-mail: moses@cs.stanford.edu.
Reference: [15] <author> C.H. PAPADIMITRIOU, S. RAMANATHAN, AND P.V. RANGAN. </author> <title> Information Caching for Delivery of Personalized Video Programs for Home Entertainment Channels. </title> <booktitle> In Proceedings of the IEEE International Conference on Multimedia Computing and Systems, </booktitle> <year> 1994, </year> <pages> pp. 214-223. </pages>
Reference-contexts: Halperin, Latombe, and Motwani [10] proposed a model for this family of problems which is essentially the dynamic server problem, although their results were only applicable to the offline setting. Another application of our model is to the information delivery problem for video-on-demand of Papadi-mitriou, Ramanathan, and Rangan <ref> [15, 16, 17] </ref>. For home entertainment channels, it is required to deliver personalized video programs across communication networks [14]. The same data must be delivered to different sites and different times. It is cached at intermediate locations to minimize communication costs.
Reference: [16] <author> C.H. PAPADIMITRIOU, S. RAMANATHAN, P.V. RANGAN, AND S. SAMPATHKUMAR. </author> <title> Multimedia Information Caching for Personalized Video-on-Demand. </title> <journal> Computer Communications, </journal> <volume> 18 (1995), </volume> <pages> pp. 204-216. </pages>
Reference-contexts: Halperin, Latombe, and Motwani [10] proposed a model for this family of problems which is essentially the dynamic server problem, although their results were only applicable to the offline setting. Another application of our model is to the information delivery problem for video-on-demand of Papadi-mitriou, Ramanathan, and Rangan <ref> [15, 16, 17] </ref>. For home entertainment channels, it is required to deliver personalized video programs across communication networks [14]. The same data must be delivered to different sites and different times. It is cached at intermediate locations to minimize communication costs.
Reference: [17] <author> C.H. PAPADIMITRIOU, S. RAMANATHAN, AND P.V. RANGAN. </author> <title> Optimal Information Delivery. </title> <booktitle> In Proceedings of the 6th Annual International Symposium on Algorithms and Computation, </booktitle> <year> 1995, </year> <pages> pp. 181-187. </pages>
Reference-contexts: Halperin, Latombe, and Motwani [10] proposed a model for this family of problems which is essentially the dynamic server problem, although their results were only applicable to the offline setting. Another application of our model is to the information delivery problem for video-on-demand of Papadi-mitriou, Ramanathan, and Rangan <ref> [15, 16, 17] </ref>. For home entertainment channels, it is required to deliver personalized video programs across communication networks [14]. The same data must be delivered to different sites and different times. It is cached at intermediate locations to minimize communication costs. <p> Papadimitriou et al <ref> [17] </ref> demonstrate the NP-hardness of their problem, connect it to Steiner trees [3], and thereby provide a 2-competitive online algorithm for the special case of paths when customer requests appear only at one endpoint.
Reference: [18] <author> S.K. RAO, P. SADAYAPPAN, F.K. HWANG, AND P.W. SHOR. </author> <title> The Rectilinear Steiner Arborescence Problem. </title> <journal> Algorithmica, </journal> <volume> 7 (1992), </volume> <pages> pp. 277-288. </pages>
Reference-contexts: Our Results. We consider the product of the metric space with the time axis. Placing the request points in the product space, the solution to the offline dynamic servers problem turns into a variant of the rectilinear Steiner arborescence problem studied earlier by Rao, Sadayappan, Hwang, and Shor <ref> [18] </ref>. The problem reduces to that of constructing a monotone tree spanning the request points in this product space. Here, a monotone tree is the union of monotone paths (w.r.t. the time axis) in the product space connecting the root to each of the request points.
Reference: [19] <author> M. YIM. </author> <title> Locomotion with a Unit-Modular Reconfigurable Robot. </title> <type> PhD thesis, Stanford Technical Report STAN-CS-94-1536, </type> <institution> Department of Computer Science, Stanford University, </institution> <year> 1994. </year> <note> i </note>
Reference-contexts: Motivation and Applications. Our motivating application is the design of data structures and algorithms for the maintainence of kinematic structures, as described by Halperin, Latombe, and Motwani [10]. Such structures are used to maintain conformations of molecules in computational biology [6, 10, 7], motion planning in robotics <ref> [4, 8, 19] </ref> and computer animation [12]. Consider a collection of rigid bodies moving in 3-dimensional space and hinged together in a kinematic structure. We model these objects as a graph (typically, a path or a tree) whose vertices are the rigid bodies and edges are the linkages.
References-found: 19

