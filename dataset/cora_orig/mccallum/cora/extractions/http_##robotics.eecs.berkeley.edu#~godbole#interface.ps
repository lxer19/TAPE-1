URL: http://robotics.eecs.berkeley.edu/~godbole/interface.ps
Refering-URL: http://robotics.eecs.berkeley.edu/~godbole/interface.html
Root-URL: 
Email: lygeros@robotics.eecs.berkeley.edu godbole@robotics.eecs.berkeley.edu  
Title: An Interface between Continuous Discrete-Event Controllers for Vehicle Automation  
Author: John Lygeros and Datta N. Godbole 
Address: Berkeley, CA 94720  
Affiliation: Intelligent Machines and Robotics Laboratory Department of Electrical Engineering and Computer Sciences University of California, Berkeley  
Abstract: The work presented here is part of a bigger effort to design an automated highway system to improve the capacity and safety of the current highways. Automation of highways and in particular platooning of vehicles raises a number of control issues. In the design proposed in [1] these issues are addressed by a hierarchical structure consisting of both discrete event and continuous time controllers. The work presented here is an attempt to construct a consistent interface between these two types of controllers. The design proposed is in the form of a set of finite state machines that interact with the discrete controllers through discrete commands and flags and with the continuous controllers by issuing commands that get translated to inputs for the vehicle actuators. The operation of the proposed design is verified using COSPAN and tested in simulation. By virtue of the fact that the interface touches on both the discrete and continuous worlds, the design might provide insight to interesting problems related to the hybrid nature of the system.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Varaiya, </author> <title> "Smart cars on smart roads: problems of control," </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> vol. AC-38, no. 2, </volume> <pages> pp. 195-207, </pages> <year> 1993. </year>
Reference-contexts: 1 Introduction The work presented here was carried out with the particular Automated Highway System (AHS) structure of <ref> [1, 2, 3] </ref> in mind. In this context, it is assumed that traffic on the highway is organized in platoons of tightly spaced vehicles. This is done in an attempt to maximize the capacity and the throughput of the highway, while avoiding exposing the passengers to additional risk. <p> Finally, the scheme requires a controller that monitors the conditions of the entire highway and decides on a long term strategy aimed at maximizing capacity. The control structure suggested in <ref> [1] </ref> consists of four layers (Figure 1). The top layer, called the network layer, is responsible for the flow of traffic on the entire highway system. Its task is to prevent congestion, maximize throughput and minimize travel times by dynamic routing of traffic.
Reference: [2] <author> P. Varaiya and S. E. Shladover, </author> <title> "Sketch of an IVHS systems architecture," </title> <type> Tech. Rep. </type> <institution> UCB-ITS-PRR-91-3, Institute of Transportation Studies, University of California, Berke-ley, </institution> <year> 1991. </year>
Reference-contexts: 1 Introduction The work presented here was carried out with the particular Automated Highway System (AHS) structure of <ref> [1, 2, 3] </ref> in mind. In this context, it is assumed that traffic on the highway is organized in platoons of tightly spaced vehicles. This is done in an attempt to maximize the capacity and the throughput of the highway, while avoiding exposing the passengers to additional risk.
Reference: [3] <author> S. Shladover, C. Desoer, J. Hedrick, M. Tomizuka, J. Walrand, W. Zhang, D. McMahon, H. Peng, S. Sheikholeslam, and N. McKeown, </author> <title> "Automatic vehicle control developments in the PATH program," </title> <journal> IEEE Transactions on Vehicular Technology, </journal> <volume> vol. 40, no. 1, </volume> <pages> pp. 114-130, </pages> <year> 1991. </year>
Reference-contexts: 1 Introduction The work presented here was carried out with the particular Automated Highway System (AHS) structure of <ref> [1, 2, 3] </ref> in mind. In this context, it is assumed that traffic on the highway is organized in platoons of tightly spaced vehicles. This is done in an attempt to maximize the capacity and the throughput of the highway, while avoiding exposing the passengers to additional risk. <p> These factors impose bounds on the acceleration and the jerk produced by the engine and the brakes; typically the acceleration has to lie in the range <ref> [5; 3] </ref>ms 2 while the jerk in the range [5; 5]ms 3 , but the bounds may be even tighter in adverse conditions (e.g., rain). As discussed above, the trajectories designed for the various maneuvers are chosen so that they lie well within these bounds.
Reference: [4] <author> B. S. Y. Rao and P. Varaiya, </author> <title> "Roadside intelligence for flow control in an IVHS," </title> <journal> Transportation Research - C, </journal> <volume> vol. 2, no. 1, </volume> <pages> pp. 49-72, </pages> <year> 1994. </year>
Reference-contexts: The design proposed in <ref> [4] </ref> makes use of flow equations to model the traffic in the given section. The next level of hierarchy is the coordination layer. Its task is to coordinate the operation of platoons with their neighbors.
Reference: [5] <author> A. Hsu, F. Eskafi, S. Sachs, and P. Varaiya, </author> <title> "Protocol design for an automated highway system," Discrete Event Dynamic Systems, </title> <journal> vol. </journal> <volume> 2, no. 1, </volume> <pages> pp. 183-206, </pages> <year> 1994. </year>
Reference-contexts: The design proposed in <ref> [5] </ref> uses protocols, in the form of finite state machines, to organize the maneuvers in a systematic way. They receive the commands of the link layer and aggregated sensor information from the individual vehicles (of the form "there is a vehicle in the adjacent 2 lane"). <p> The physical layer also includes the sensors that provide sampled information about the state to be used by the control algorithms. The work presented here focuses on the interface between the regulation and coordination layers. <ref> [5] </ref> describes how the coordination layer protocols were designed and tested. A great deal of work has also been done on continuous time control algorithms that the regulation layer uses to carry out the various maneuvers ([6, 7, 8, 9]). <p> It is assumed that the vehicles are equipped with communication devices that allow them to exchange messages and coordinate maneuvers in order to form and break up platoons and move vehicles between the lanes. The coordination layer design proposed in <ref> [5] </ref> uses only three such maneuvers: merge, split and lane change. The reason behind the small number of maneuvers is to keep the design as simple as possible. <p> Finally the current design requires that each platoon will be involved in at most one maneuver at a time. We will now briefly describe the actions involved in each one of the coordination layer maneuvers of <ref> [5] </ref>. The merge maneuver is used to join two platoons in the same lane and form a single platoon. The following platoon requests the leading platoon permission to merge. <p> of the lane change is carried out. 1 In the context of platooning each vehicle will be either a leader (first vehicle of the platoon), a follower or a free agent (single vehicle platoon). 4 The coordination required in order to carry out these maneuvers in safety was spec-ified in <ref> [5] </ref> by a structured set of communication messages, in the form of protocols. <p> These factors impose bounds on the acceleration and the jerk produced by the engine and the brakes; typically the acceleration has to lie in the range <ref> [5; 3] </ref>ms 2 while the jerk in the range [5; 5]ms 3 , but the bounds may be even tighter in adverse conditions (e.g., rain). As discussed above, the trajectories designed for the various maneuvers are chosen so that they lie well within these bounds. <p> These factors impose bounds on the acceleration and the jerk produced by the engine and the brakes; typically the acceleration has to lie in the range [5; 3]ms 2 while the jerk in the range <ref> [5; 5] </ref>ms 3 , but the bounds may be even tighter in adverse conditions (e.g., rain). As discussed above, the trajectories designed for the various maneuvers are chosen so that they lie well within these bounds. <p> Work in both these directions is currently underway for the coordination layer design proposed in <ref> [5] </ref>. The interaction with the continuous time control laws is more challenging. Unlike the interaction with the coordination layer, which can be easily investigated using standard FSM tools, the interaction of the interface state machine with the continuous domain is much more complicated.
Reference: [6] <author> J. K. Hedrick, D.McMahon, V. Narendran, and D. Swaroop, </author> <title> "Longitudinal vehicle controller design for IVHS system," </title> <booktitle> in American Control Conference, </booktitle> <pages> pp. 3107-3112, </pages> <year> 1991. </year>
Reference-contexts: It also has the advantage that the vehicles within a platoon are connected via an infrared communication link, so they have access to information about their neighbors other than that provided by their sensors. <ref> [6, 8] </ref> provide details of possible designs of the follower control law.
Reference: [7] <author> H. Peng and M. Tomizuka, </author> <title> "Vehicle lateral control for highway automation," </title> <booktitle> in American Control Conference, </booktitle> <pages> pp. 788-794, </pages> <year> 1990. </year>
Reference-contexts: The current design uses magnets placed at regular intervals along the center of the lane and magnetometers mounted on the vehicle to obtain deviations from the center of the lane. A frequency shaped LQ optimal controller is designed in <ref> [7] </ref> to achieve the lane keeping objective. 3 Interface Design Assumptions & Requirements The interface structure and its interactions with the surrounding controllers are outlined in more detail in Figure 3. <p> Finally the engine and brake inputs act on the third derivative of position ("jerk") [9] and are applied to the engine directly from the controllers (without the intervention of the interface). The steering input affects the second derivative of the lateral position and orientation of the vehicle <ref> [7] </ref>. It is also applied directly to the actuators by the relevant control laws. For the purpose of simulations, the vehicle dynamics were approximated by a 7 th order continuous time model.
Reference: [8] <author> S. Sheikholeslam and C. A. Desoer, </author> <title> "Longitudinal control of a platoon of vehicles," </title> <booktitle> in American Control Conference, </booktitle> <pages> pp. 291-297, </pages> <year> 1990. </year>
Reference-contexts: It also has the advantage that the vehicles within a platoon are connected via an infrared communication link, so they have access to information about their neighbors other than that provided by their sensors. <ref> [6, 8] </ref> provide details of possible designs of the follower control law.
Reference: [9] <author> D. N. Godbole and J. Lygeros, </author> <title> "Longitudinal control of the lead car of a platoon," </title> <journal> IEEE Transactions on Vehicular Technology, </journal> <volume> vol. 43, no. 4, </volume> <pages> pp. 1125-1135, </pages> <year> 1994. </year>
Reference-contexts: The different control laws needed for normal operation of the regulation layer are summarized below: Lead Control: The primary goal of the lead control law is to maintain safe spacing between platoons. In the design of <ref> [9] </ref> the safe spacing is calculated according to the formula: D = a x + v _x + p where _x and x denote the velocity and acceleration of the platoon. For normal operation, the values a = 0; v = 1sec; p = 10m are currently used. <p> The whole maneuver should be carried out as fast as possible but without pushing the engine or the brakes to their limits (thus compromising safety) and without affecting passenger comfort. A continuous time feedback controller that fulfills the above requirements was designed and is presented in <ref> [9] </ref>. It is based on the calculation of a desired trajectory at the beginning of the maneuver. Feedback from the sensors is then used to keep the actual vehicle trajectory as close as possible to the desired one. <p> The design is very similar to the one for the merge maneuver: a trajectory that carries out the desired task 5 and does not violate any limits is calculated and then feedback is added to guarantee tracking <ref> [9] </ref>. Decel to Change: A controller capable of carrying out the longitudinal actions expected by Decel to Change (refer to Figure 2) is presented in [9]. The general principle is again very similar to that of the merge maneuver. Move: The move control law involves lateral motion. <p> a trajectory that carries out the desired task 5 and does not violate any limits is calculated and then feedback is added to guarantee tracking <ref> [9] </ref>. Decel to Change: A controller capable of carrying out the longitudinal actions expected by Decel to Change (refer to Figure 2) is presented in [9]. The general principle is again very similar to that of the merge maneuver. Move: The move control law involves lateral motion. Again the design should be such that the required input does not force the actuators close to their limits or makes the passengers uncomfortable. <p> For this reason, the interface should first carry out some form of initialization. For the control algorithms presented in <ref> [9] </ref>, the initialization involves: * Setting the state of the controller to the right initial condition (for controllers which are dynamic, such as the lead controller). * Updating parameter values that might have changed since the controller was last invoked (e.g., the optimum velocity). * Calculating the desired trajectories used by <p> The safety checks make sure that the gap exists throughout the maneuver. Given the bounds on the capabilities of the vehicles, we calculate the region of the state space from which the lead controller <ref> [9] </ref> can safely take the state of the vehicle to the desired inter-platoon spacing. <p> The sensors are assumed to operate perfectly (there is no fault detection in our design so far) and provide samples of the states at fixed intervals. Finally the engine and brake inputs act on the third derivative of position ("jerk") <ref> [9] </ref> and are applied to the engine directly from the controllers (without the intervention of the interface). The steering input affects the second derivative of the lateral position and orientation of the vehicle [7]. It is also applied directly to the actuators by the relevant control laws.
Reference: [10] <author> W. Chee and M. Tomizuka, </author> <title> "Lane change maneuver of automobiles for the intelligent vehicle and highway systems (IVHS)," </title> <booktitle> in American Control Conference, </booktitle> <pages> pp. 3586-3587, </pages> <year> 1994. </year>
Reference-contexts: Move: The move control law involves lateral motion. Again the design should be such that the required input does not force the actuators close to their limits or makes the passengers uncomfortable. A design satisfying these requirements is presented in <ref> [10] </ref>. Lane Follow: The lateral control law that maintains lane position is required to keep the vehicle at the center of the lane.
Reference: [11] <author> F. Eskafi, D. Khorramabadi, and P. Varaiya, "SmartPath: </author> <title> An automated highway system simulator." </title> <type> PATH Technical Report UCB-ITS-94-4. </type> <institution> Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1994. </year>
Reference-contexts: It is assumed that in an actual implementation of the control scheme, reg request and reg response will use interrupt lines. In the current implementation within the framework of the SmartPath simulator <ref> [11] </ref>, the communication channels are modeled by "events" in the C-Sim programming language, which can be thought of as a form of software interrupts. <p> As a further test the interface was implemented in C together with the continuous time control laws described in the references. It was then introduced in the SmartPath simulation platform <ref> [11] </ref>. For the purpose of SmartPath, the 14 reg request and reg response interrupts were modeled by software "events" (in the C-Sim pro-gramming language) and parameters (commands and flags) were passed via global variables.
Reference: [12] <author> J. Lygeros, D. N. Godbole, and M. E. Broucke, </author> <title> "Design of an extended architecture for degraded modes of operation of AHS." </title> <note> PATH Working Paper, </note> <institution> UCB-ITS-PWP-95-3, Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1995. </year>
Reference-contexts: Formalizing such safety checks can be difficult, as the number of possible malfunctions is large and the way they affect the system is diverse. In <ref> [12] </ref> and extensive list of malfunctions is presented. A predicate hierarchy is introduced to model the system capability 2 . The levels of the predicate hierarchy reflect the levels of the control hierarchy and the values of the higher level predicates depend on those of the lower level ones.
Reference: [13] <author> J. Lygeros, D. N. Godbole, and M. E. Broucke, </author> <title> "Design of an extended architecture for degraded modes of operation of IVHS," </title> <booktitle> in American Control Conference, </booktitle> <year> 1995. </year> <note> To Appear. </note>
Reference-contexts: If the predicate returns zero the control law is incapacitated because of some malfunction and the interface has to abort the maneuver and select a different law. In <ref> [13] </ref> an extension of the control architecture is proposed to guarantee that at least one control law is operational in any situation. * Safety checks that deal with the constraints imposed upon the state of the vehicles by road conditions, engine capabilities and the need for passenger comfort.
Reference: [14] <author> Z. Har'El and R. Kurshan, </author> <title> Cospan User's Guide. </title> <institution> AT&T Bell Laboratories, </institution> <year> 1987. </year> <month> 16 </month>
Reference-contexts: It transitions from NR to R whenever there is a need to notify the coordination layer and back when the coordination layer has taken note of the message (COORD: read). 4.3 Automatic Verification The design described above was verified automatically using COSPAN <ref> [14] </ref>. COSPAN is a verification tool that works by symbolically analyzing a given set of FSM to make sure that their performance satisfies certain requirements specified by the user.
Reference: [15] <author> D. N. Godbole, J. Lygeros, and S. Sastry, </author> <title> "Hierarchical hybrid control: An IVHS case study," </title> <booktitle> in IEEE Control and Decision Conference, </booktitle> <pages> pp. 1592-1597, </pages> <year> 1994. </year>
Reference-contexts: The results indicate good performance in most traffic situations. Moreover, they highlight the problems that may be encountered when dealing with multilayered, hybrid control systems like this. These issues are discussed further in <ref> [15] </ref>. It should be noted that the automatic verification described above depends on the underlying assumption that the coordination layer behaves like the abstraction of Figure 15, at least as far as the regulation layer is concerned.
Reference: [16] <author> R. Alur, C. Courcoubetis, and D. Dill, </author> <title> "Model checking for real-time systems," </title> <booktitle> Logic in Computer Science, </booktitle> <pages> pp. 414-425, </pages> <year> 1990. </year> <month> 17 </month>
Reference-contexts: There are no tools yet to perform automatic verification on hybrid systems like this. Some tools exist for verification of timed FSM, that is FSM that have "clocks" associated with each state, based on the work of Alur, Courcoubetis and Dill <ref> [16] </ref>. However the dynamics of our system are a lot more complicated than the simple _x = 1 dynamics of clocks. Therefore attempts to directly use such verification techniques on our system soon run into trouble.
References-found: 16

