URL: http://www.inferenzsysteme.informatik.tu-darmstadt.de/~scholz/Base/Planning/Papers/aaai98.ps
Refering-URL: http://www.inferenzsysteme.informatik.tu-darmstadt.de/~scholz/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: fscholz,stuetzle,mitg@informatik.tu-darmstadt.de  
Title: Constraint Based Planning by Stochastic Search  
Author: Ulrich Scholz and Thomas Stutzle and Michael Thielscher 
Address: Alexanderstr.10 D-64289 Darmstadt, Germany  
Affiliation: Technische Universitat Darmstadt Fachgebiet Intellektik  
Abstract: Planning by incomplete stochastic search offers a promising alternative to classical, complete planning methods. The success of this approach is documented by recent performance results obtained by transforming planning tasks into propositional sat-isfiability problems and using existing efficient local search methods to solve them. On the other hand, we argue that these results can still be improved if local search is employed directly to planning problems, i.e., without making the detour via propositional logic. To this end we introduce a general-purpose planning structure which is amenable to stochastic search methods. The core of this structure is formed by constraints, which represent a planning problem and at the same time determine the objective function to be minimized by local search. Adapting the planning structure on the basis of a pre-processing by domain analysis may furthermore significantly reduce the number of constraints and so speed up the following search. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Bayardo, R. J., and Schrag, R. C. </author> <year> 1997. </year> <title> Using CSP Look-Back Techniques to Solve Real-World SAT Instances. </title> <booktitle> In AAAI'97, </booktitle> <pages> 203-208. </pages> <publisher> AAAI Press. </publisher>
Reference-contexts: It is important to note that the resulting SAT-formulae can also be solved by complete algorithms for SAT. For example, in <ref> (Bayardo & Schrag 1997) </ref> with an enhanced Davis Putnam version, significantly better results than with earlier implementation could be obtained, for some problems even outperforming WSAT. Our work differs in that we apply local search to a more direct representation of planning problems.
Reference: <author> Blum, A. L., and Furst, M. L. </author> <year> 1995. </year> <title> Fast Planning through Planning Graph Analysis. </title> <booktitle> In IJCAI'95, </booktitle> <pages> 1636-1642. </pages> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Additionally, for every proposition between two time points there is a variable denoting whether it is active (true) or inactive (false). This configuration structure can be further extended by other variables which denote additional features of the chosen representation, for example `dummy'- actions in the spirit of Graphplan <ref> (Blum & Furst 1995) </ref>. The set of constraints has to ensure that every valid assignment to V corresponds to a solution of the planning problem. Such a set can be found by using a fixed set of axioms. <p> Our work differs in that we apply local search to a more direct representation of planning problems. The planning structure we use for the local search is inspired by the planning graph representation used in Graphplan <ref> (Blum & Furst 1995) </ref>. Both representations differ in their generality. Whereas in the Graphplan approach the planner and the planning graph are strongly related, our representation is more general in that it does, for example, not require that the problem has to be represented by a leveled graph.
Reference: <author> Bylander, T. </author> <year> 1994. </year> <title> The Computational Complexity of Propositional STRIPS Planning. </title> <booktitle> Artificial Intelligence 69 </booktitle> <pages> 165-204. </pages>
Reference-contexts: A planning problem is the task of finding a conflict free (partially ordered) set of actions (a plan) by which some initial state is transferred into some goal state. It has been shown in <ref> (Bylander 1994) </ref> that optimal planning in domains of this expressiveness is at least N P-complete, so that we expect any complete planner to need exponential time in the average case.
Reference: <author> Ernst, M. D.; Millstein, T. D.; and Weld, D. S. </author> <year> 1997. </year> <title> Automatic SAT-Compilation of Planning Problems. </title> <booktitle> In IJCAI'97, </booktitle> <pages> 1169-1176. </pages> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: At the beginnings of this line of research, some of the best SAT encodings were hand-made, hence tailored to the following local search, but in following-up papers several ways to automate this step have been proposed, e.g. <ref> (Ernst, Millstein, & Weld 1997) </ref>. Despite the ongoing success of this so-called SatPlan approach, there is more to planning by sto chastic search than appealing to SAT encodings. In particular, as we will show in this paper, local search can be more directly applied to planning problems. <p> If a satisfying assignment is found, the solution is translated back to a solution of the actual planning problem. A crucial problem of SatPlan is to find the optimal SAT encoding of the planning problem. This issue is addressed, for example, in <ref> (Ernst, Millstein, & Weld 1997) </ref>. The authors of (Kautz & Selman 1996) state that their results appear to be the first convincing evidence that stochastic local search is indeed a powerful technique for planning. <p> For any planning structure V , C, S, P P , l max , (V; C) is a constraint satisfaction problem. Conjunctive normal form is a special case of CSP, so the planning structure is usable similar to planners based on CNF. <ref> (Ernst, Millstein, & Weld 1997) </ref>, for instance, describe several ways of automatically encoding planning problems in CNF by using different axiomatiza-tions. Graphplan uses a different approach. It builds a representation structure called planning graph, which is searched by a special purpose algorithm. <p> In this way, it is easier to analyze the effects of a design decision. An example for this observation is the notion of conflict exclusion used by <ref> (Ernst, Millstein, & Weld 1997) </ref> to prevent conflicting actions to simultaneously being contained in a plan. Following the definition of conflict, they add a constraint for every pair of parallel actions if one of them deletes a precondition of the other one. the logistics domain (see (Kautz & Selman 1996)). <p> The time per flip was .9 msec for the tailored representation of the largest instance, while it was 1.06 msec for the axiomatization-based representation. of variables and the size of the formulas. <ref> (Ernst, Mill-stein, & Weld 1997) </ref> investigate the automatic compilation of planning problems in SAT and analyze the influence of various axiomatizations and simplification procedures on the solution of the resulting formulas. It is important to note that the resulting SAT-formulae can also be solved by complete algorithms for SAT.
Reference: <author> Fikes, R., and Nilsson, N. </author> <year> 1971. </year> <title> STRIPS: A New Approach to the Application of Theorem Proving to Problem Solving. </title> <booktitle> Artificial Intelligence 2 </booktitle> <pages> 189-208. </pages>
Reference-contexts: The authors of (Kautz & Selman 1996) state that their results appear to be the first convincing evidence that stochastic local search is indeed a powerful technique for planning. Representation of Planning Problems The class of planning problems we address in this paper is that of propositional STRIPS domains <ref> (Fikes & Nilsson 1971) </ref>. Any such domain consists in a fixed, finite set of binary propositions and a finite set of action specifications.
Reference: <author> Glover, F. </author> <year> 1989. </year> <title> Tabu Search Part I. </title> <journal> ORSA Journal on Computing 1(3) </journal> <pages> 190-206. </pages>
Reference: <author> Goldberg, D. E. </author> <year> 1989. </year> <title> Genetic Algorithms in Search, Optimization, and Machine Learning. </title> <publisher> Addison-Wesley Publishing Company Inc. </publisher>
Reference-contexts: Hansen & Jaumard 1990), and Genetic Algorithms <ref> (Goldberg 1989) </ref>. The efficiency of the local search algorithm and the methods to overcome local minima depends on the problem at hand. In the AI community the interest in local search algorithms has risen enormously in recent years due to their great success in solving N P-complete problems.
Reference: <author> Hansen, P., and Jaumard, B. </author> <year> 1990. </year> <title> Algorithms for the Maximum Satisfiability Problem. </title> <booktitle> Computing 44 </booktitle> <pages> 279-303. </pages>
Reference: <author> Kautz, H., and Selman, B. </author> <year> 1992. </year> <note> Planning as Satisfi-ability. In ECAI'92, 359-363. </note>
Reference-contexts: Using the corresponding constraints with the planning structure causes a significant increase of performance, as demonstrated in Figure 5. Strategies like MPS are based on an analysis of the relations between actions of a domain. It seems difficult to appropriately extend an axiomatization, as suggested in <ref> (Kautz & Selman 1992) </ref>, so that the resulting set of constraints is the same as given by the planning structure approach. The constraint definition process would have to be split into several parts. <p> The reported success is mainly due to two reasons. One reason is that with WSAT (Selman, Kautz, & Cohen 1994) a considerably more efficient local search procedure than in an earlier paper <ref> (Kautz & Selman 1992) </ref> is applied. The other is that for most problems better encodings resulting in a faster search and smaller CNF-formulae, could be found.
Reference: <author> Kautz, H., and Selman, B. </author> <year> 1996. </year> <title> Pushing the Envelope: Planning, Propositional Logic, and Stochastic Search. </title> <booktitle> In AAAI'96, </booktitle> <volume> volume 2, </volume> <pages> 1194-1201. </pages> <publisher> MIT Press. </publisher>
Reference-contexts: Introduction Solving planning problems by incomplete, stochastic search provides a promising alternative to both classical (i.e., purely deductive) AI planning and the use of complete special-purpose planning algorithms. Feasibility and success of this approach have been documented by recent performance results described in <ref> (Kautz & Selman 1996) </ref> and subsequent papers. The approach taken there was to first transform planning problems into a propositional satisfiability problem (SAT) and then to apply to the latter efficient local search algorithms like WSAT (Selman, Kautz, & Co-hen 1994). <p> The objective function is the number of unsatisfied clauses and a SAT-formula is satisfiable if all clauses can be satisfied. Similar progress also has been made by the min-conflicts heuristic for the more general Constraint Satisfaction Problem (CSP) (Minton et al. 1992). In <ref> (Kautz & Selman 1996) </ref> it was shown that local search algorithms like WSAT can be used to solve large, nontrivial planning problems and even outperform specialized planners on some domains. <p> A crucial problem of SatPlan is to find the optimal SAT encoding of the planning problem. This issue is addressed, for example, in (Ernst, Millstein, & Weld 1997). The authors of <ref> (Kautz & Selman 1996) </ref> state that their results appear to be the first convincing evidence that stochastic local search is indeed a powerful technique for planning. Representation of Planning Problems The class of planning problems we address in this paper is that of propositional STRIPS domains (Fikes & Nilsson 1971). <p> Following the definition of conflict, they add a constraint for every pair of parallel actions if one of them deletes a precondition of the other one. the logistics domain (see <ref> (Kautz & Selman 1996) </ref>). The problem sizes range from 3 to 8, the solution length of all problems is 9; the number of variables is similar in both representations. The larger part of these constraints are already covered by action implication and frame axiom constraints. <p> Another example for the advantage of thinking about the objective function in terms of constraints instead of axioms, is the power of constraints not evolving from standard axiomatization. Constraints added by hand <ref> (Kautz & Selman 1996) </ref> or found by using domain analysis (Scholz 1998) cause a significant reduction in flips and planning time. <p> ProbaPla is able to solve the fixit-problem, problems of the domains D m S 2 , and others without any search at all, as opposed to existing SatPlan approaches. Related Work Our approach is motivated by the fact that in <ref> (Kautz & Selman 1996) </ref> it was shown that local search can be an efficient method to solve non-toy planning problems, even outperforming specialized planners on a range of benchmark problems. The reported success is mainly due to two reasons. <p> The other is that for most problems better encodings resulting in a faster search and smaller CNF-formulae, could be found. In <ref> (Kautz, McAllester, & Selman 1996) </ref> several possible ways of SAT-encodings of planning problems are compared analyzing the size complexity w.r.t. the number smaller with the tailored representation. <p> An advantage of the planning structure representation is that the results of a domain analysis can easily be used to alter the representation. By the domain analysis we could even solve planning problems for which <ref> (Kautz & Selman 1996) </ref> report a bad performance of their SatPlan, like the D 1 S 1 domain, without any search at all.
Reference: <author> Kautz, H.; McAllester, D.; and Selman, B. </author> <year> 1996. </year> <title> Encoding Plans in Propositional Logic. </title> <booktitle> In KR'96, </booktitle> <pages> 374-384. </pages>
Reference-contexts: Introduction Solving planning problems by incomplete, stochastic search provides a promising alternative to both classical (i.e., purely deductive) AI planning and the use of complete special-purpose planning algorithms. Feasibility and success of this approach have been documented by recent performance results described in <ref> (Kautz & Selman 1996) </ref> and subsequent papers. The approach taken there was to first transform planning problems into a propositional satisfiability problem (SAT) and then to apply to the latter efficient local search algorithms like WSAT (Selman, Kautz, & Co-hen 1994). <p> The objective function is the number of unsatisfied clauses and a SAT-formula is satisfiable if all clauses can be satisfied. Similar progress also has been made by the min-conflicts heuristic for the more general Constraint Satisfaction Problem (CSP) (Minton et al. 1992). In <ref> (Kautz & Selman 1996) </ref> it was shown that local search algorithms like WSAT can be used to solve large, nontrivial planning problems and even outperform specialized planners on some domains. <p> A crucial problem of SatPlan is to find the optimal SAT encoding of the planning problem. This issue is addressed, for example, in (Ernst, Millstein, & Weld 1997). The authors of <ref> (Kautz & Selman 1996) </ref> state that their results appear to be the first convincing evidence that stochastic local search is indeed a powerful technique for planning. Representation of Planning Problems The class of planning problems we address in this paper is that of propositional STRIPS domains (Fikes & Nilsson 1971). <p> Following the definition of conflict, they add a constraint for every pair of parallel actions if one of them deletes a precondition of the other one. the logistics domain (see <ref> (Kautz & Selman 1996) </ref>). The problem sizes range from 3 to 8, the solution length of all problems is 9; the number of variables is similar in both representations. The larger part of these constraints are already covered by action implication and frame axiom constraints. <p> Another example for the advantage of thinking about the objective function in terms of constraints instead of axioms, is the power of constraints not evolving from standard axiomatization. Constraints added by hand <ref> (Kautz & Selman 1996) </ref> or found by using domain analysis (Scholz 1998) cause a significant reduction in flips and planning time. <p> ProbaPla is able to solve the fixit-problem, problems of the domains D m S 2 , and others without any search at all, as opposed to existing SatPlan approaches. Related Work Our approach is motivated by the fact that in <ref> (Kautz & Selman 1996) </ref> it was shown that local search can be an efficient method to solve non-toy planning problems, even outperforming specialized planners on a range of benchmark problems. The reported success is mainly due to two reasons. <p> The other is that for most problems better encodings resulting in a faster search and smaller CNF-formulae, could be found. In <ref> (Kautz, McAllester, & Selman 1996) </ref> several possible ways of SAT-encodings of planning problems are compared analyzing the size complexity w.r.t. the number smaller with the tailored representation. <p> An advantage of the planning structure representation is that the results of a domain analysis can easily be used to alter the representation. By the domain analysis we could even solve planning problems for which <ref> (Kautz & Selman 1996) </ref> report a bad performance of their SatPlan, like the D 1 S 1 domain, without any search at all.
Reference: <author> Kirkpatrick, S.; Gelatt, C.; and Vecchi, M. </author> <year> 1983. </year> <title> Optimization by Simulated Annealing. </title> <booktitle> Science 220 </booktitle> <pages> 671-680. </pages>
Reference-contexts: To cope with that problem, several techniques have been proposed, the most basic of these being to restart the algorithm from a new randomly chosen point if no better solutions can be found. More sophisticated possibilities to overcome local minima are Simulated Annealing <ref> (Kirkpatrick, Gelatt, & Vecchi 1983) </ref>, Tabu Search (Glover 1989; 1 It is common to define objective functions in terms of `cost' of a solution, which is why better solutions are assigned lower values. Hansen & Jaumard 1990), and Genetic Algorithms (Goldberg 1989).
Reference: <author> Mackworth, A. </author> <year> 1977. </year> <title> Consistency in Networks of Relations. </title> <booktitle> Artificial Intelligence 8 </booktitle> <pages> 99-118. </pages>
Reference-contexts: To demonstrate the usefulness of local search on the planning structure, we implemented a prototypical planner, called ProbaPla. 3 After choosing a bound for the maximal plan length, ProbaPla creates the planning structure. The simplification is done by enforcing node- and arc-consistency which are methods known from constraint propagation <ref> (Mackworth 1977) </ref>. Additionally a domain analysis is performed before starting the search. Note, that a domain analysis only has to be done once for a given problem domain and is in principle independent of the given planning instance. The resulting constraint satisfaction problem is searched by a local search procedure.
Reference: <author> McAllester, D.; Selman, B.; and Kautz, H. </author> <year> 1997. </year> <title> Evidence for Iinvariants in Local Search. </title> <booktitle> In AAAI'97, </booktitle> <pages> 321-326. </pages>
Reference-contexts: In the AI community the interest in local search algorithms has risen enormously in recent years due to their great success in solving N P-complete problems. For example, GSAT (Selman, Levesque, & Mitchell 1992) and its extensions WSAT (Selman, Kautz, & Cohen 1994) and R-Novelty <ref> (McAllester, Selman, & Kautz 1997) </ref> allow to solve much larger hard SAT-instances than can be dealt with by complete search algorithms. GSAT and its variants operate on the space of all possible truth assignments to n variables of a given formula in conjunctive normal form (CNF).
Reference: <author> Minton, S.; Johnston, M.; Philips, A.; and Laird, P. </author> <year> 1992. </year> <title> Minimizing Conflicts: A Heuristic Repair Method for Constraint Satisfaction and Scheduling Problems. </title> <booktitle> Artificial Intelligence 52 </booktitle> <pages> 161-205. </pages>
Reference-contexts: The objective function is the number of unsatisfied clauses and a SAT-formula is satisfiable if all clauses can be satisfied. Similar progress also has been made by the min-conflicts heuristic for the more general Constraint Satisfaction Problem (CSP) <ref> (Minton et al. 1992) </ref>. In (Kautz & Selman 1996) it was shown that local search algorithms like WSAT can be used to solve large, nontrivial planning problems and even outperform specialized planners on some domains. <p> Future work will involve the implementation of a more efficient local search strategy based on a local repair strategy more similar to the one used by the min conflicts heuristic <ref> (Minton et al. 1992) </ref>. We will also address the influence of the neighborhood on the efficiency of the local search in case of planning problems.
Reference: <author> Scholz, U. </author> <year> 1998. </year> <title> Restraining and Complete Refinement Planning. </title> <note> Submitted to AIPS-98. </note>
Reference-contexts: An example is an algorithmic definition, which can create different objective functions (sets of constraints) depending on the specific problem. Constraints representing dependencies found by domain analysis <ref> (Scholz 1998) </ref> can be added to the planning structure, as well as constraints found dynamically during the search similar to the memorization of Graphplan. All constraints are found in a single process, so each constraint can be influenced by all other constraints. <p> Another example for the advantage of thinking about the objective function in terms of constraints instead of axioms, is the power of constraints not evolving from standard axiomatization. Constraints added by hand (Kautz & Selman 1996) or found by using domain analysis <ref> (Scholz 1998) </ref> cause a significant reduction in flips and planning time.
Reference: <author> Selman, B.; Kautz, H. A.; and Cohen, B. </author> <year> 1994. </year> <title> Noise Strategies for Improving Local Search. </title> <booktitle> In AAAI'94, </booktitle> <pages> 337-343. </pages> <publisher> MIT press. </publisher>
Reference-contexts: The approach taken there was to first transform planning problems into a propositional satisfiability problem (SAT) and then to apply to the latter efficient local search algorithms like WSAT <ref> (Selman, Kautz, & Co-hen 1994) </ref>. This method proved capable of solving large, non-toy planning problems and outperformed specialized planning systems on a number of domains. <p> In the AI community the interest in local search algorithms has risen enormously in recent years due to their great success in solving N P-complete problems. For example, GSAT (Selman, Levesque, & Mitchell 1992) and its extensions WSAT <ref> (Selman, Kautz, & Cohen 1994) </ref> and R-Novelty (McAllester, Selman, & Kautz 1997) allow to solve much larger hard SAT-instances than can be dealt with by complete search algorithms. <p> Thus, we have sacrificed to some extent run time efficiency vs. a more flexible implementation. to perform a move, that decreases most the objective function value. To overcome local minima we combine random walk, similar to the GWSAT extension of GSAT <ref> (Selman, Kautz, & Cohen 1994) </ref>, and Tabu Search (Glover 1989; Hansen & Jaumard 1990). In case of the random walk strategy with a fixed probability p some variable involved in a conflict changes its value, otherwise we perform a greedy local search step. <p> The reported success is mainly due to two reasons. One reason is that with WSAT <ref> (Selman, Kautz, & Cohen 1994) </ref> a considerably more efficient local search procedure than in an earlier paper (Kautz & Selman 1992) is applied. The other is that for most problems better encodings resulting in a faster search and smaller CNF-formulae, could be found.
Reference: <author> Selman, B.; Levesque, H.; and Mitchell, D. </author> <year> 1992. </year> <title> A New Method for Solving Hard Satisfiability Problems. </title> <booktitle> In AAAI'92, </booktitle> <pages> 440-446. </pages> <publisher> MIT press. </publisher>
Reference-contexts: The efficiency of the local search algorithm and the methods to overcome local minima depends on the problem at hand. In the AI community the interest in local search algorithms has risen enormously in recent years due to their great success in solving N P-complete problems. For example, GSAT <ref> (Selman, Levesque, & Mitchell 1992) </ref> and its extensions WSAT (Selman, Kautz, & Cohen 1994) and R-Novelty (McAllester, Selman, & Kautz 1997) allow to solve much larger hard SAT-instances than can be dealt with by complete search algorithms. <p> Using the corresponding constraints with the planning structure causes a significant increase of performance, as demonstrated in Figure 5. Strategies like MPS are based on an analysis of the relations between actions of a domain. It seems difficult to appropriately extend an axiomatization, as suggested in <ref> (Kautz & Selman 1992) </ref>, so that the resulting set of constraints is the same as given by the planning structure approach. The constraint definition process would have to be split into several parts. <p> The reported success is mainly due to two reasons. One reason is that with WSAT (Selman, Kautz, & Cohen 1994) a considerably more efficient local search procedure than in an earlier paper <ref> (Kautz & Selman 1992) </ref> is applied. The other is that for most problems better encodings resulting in a faster search and smaller CNF-formulae, could be found.
References-found: 18

