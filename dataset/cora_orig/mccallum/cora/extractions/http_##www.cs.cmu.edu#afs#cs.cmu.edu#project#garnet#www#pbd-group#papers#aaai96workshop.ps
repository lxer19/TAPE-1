URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/project/garnet/www/pbd-group/papers/aaai96workshop.ps
Refering-URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/project/garnet/www/pbd-group/pbd-papers.html
Root-URL: 
Email: bam@cs.cmu.edu  
Title: The Demonstrational Interfaces Project at CMU  
Author: Brad A. Myers, Francesmary Modugno, Rich McDaniel, David Kosbie, Andrew Werth, Rob Miller, John Pane, James Landay, Jade Goldstein, and Matthew A. Goldberg 
Date: October 27, 1995  
Web: http://www.cs.cmu.edu/~bydemo  
Address: Pittsburgh, PA 15213  
Affiliation: Human Computer Interaction Institute School of Computer Science Carnegie Mellon University  
Abstract: The Demonstrational Interfaces Project at CMU has been investigating various aspects of demonstrational interfaces for the last eight years. During this time, we have created six interactive software building tools that use demonstrational techniques, as well as an architecture to support demonstrational programming in general. In addition, we have created a demonstrational Visual Shell (iconic interface to a file system, like the Macintosh Finder), a demonstrational text formatter, and a demonstrational charting tool. There are three fundamental research questions we explore through these tools: how to give the user appropriate feedback and control over inferencing, appropriate algorithms for inferencing, and which domains are appropriate for demonstrational techniques. This paper summarizes our activities, approach and lessons learned. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Martin R. Frank. </author> <title> Model-Based User Interface Design by Demonstration and by Interview. </title> <type> Ph.D. </type> <institution> Th., College of Computing, Georgia Institute of Technology, </institution> <year> 1995. </year> <note> In progress. </note>
Reference-contexts: As the user demonstrates events that cause an action (the ``stimulus''), Marquise drops icons on the window showing where the events occurred. The user can then refer to these icons directly when demonstrating the response. This technique was subsequently used in Grizzly Bear <ref> [1] </ref>, and will be substantially generalized The Demonstrational Interfaces Project at CMU - 3 in our new Gamut system. Marquise also invented a new form of feedback for inferences where phrases in textual sentences serve as buttons that pop up alternative options. branch.
Reference: 2. <author> Daniel C. Halbert. </author> <title> Programming by Example. </title> <type> Ph.D. </type> <institution> Th., Computer Science Division, Dept. of EE&CS, University of California, Berkeley, </institution> <address> CA, </address> <year> 1984. </year> <note> Also: </note> <institution> Xerox Office Systems Division, Systems Development Department, TR OSD-T8402, </institution> <month> December, </month> <year> 1984. </year>
Reference-contexts: We also wrote a number of general papers about Demonstrational Interfaces [16, 11]. All of our demonstrational systems have used heuristics to try to automatically generalize from the user's examples, unlike systems such as SmallStar <ref> [2] </ref> and KidSim [20].
Reference: 3. <author> Osamu Hashimoto and Brad A. Myers. </author> <title> Graphical Styles for Building User Interfaces By Demonstration. </title> <booktitle> ACM SIGGRAPH Symposium on User Interface Software and Technology, Proceedings UIST'92, </booktitle> <address> Monterey, CA, </address> <month> Nov., </month> <year> 1992, </year> <pages> pp. 117-124. </pages>
Reference-contexts: Gilt is an interface builder that provides widget layout. Two demonstrational additions were made to Gilt. First, Gilt will infer graphical styles from an example dialog box, including the placement of objects and the properties to use <ref> [3] </ref>. The placement was based on graphical tab stops which provide a direct way to manipulate the alignment. The second demonstrational component was a technique for eliminating ``call back procedures'' which are used to connect widgets to applications [14].
Reference: 4. <author> David Kosbie. </author> <title> Hierarchical Event Histories in Graphical User Interfaces. </title> <type> Ph.D. </type> <institution> Th., Computer Science Department, Carnegie Mellon University, </institution> <year> 1996. </year> <title> In progress. The Demonstrational Interfaces Project at CMU - 7 </title>
Reference-contexts: Formal human factors experiments showed that the language and system were successful and usable. Katie is the PhD thesis of David Kosbie, and is an architecture for supporting script-based demonstrational programs <ref> [9, 4] </ref>. An important innovation in Katie is the support for ``aggregate events'' which means that user's actions are recorded at multiple levels: the low level event stream as well as the higher-level actions resulting from these events.
Reference: 5. <author> James Landay and Brad A. Myers. </author> <title> Interactive Sketching for the Early Stages of User Interface Design. </title> <booktitle> Human Factors in Computing Systems, Proceedings SIGCHI'95, </booktitle> <address> Denver, CO, </address> <month> May, </month> <year> 1995, </year> <pages> pp. 43-50. </pages>
Reference-contexts: Graphical ``link boxes'' show the inferred association of the graphics to the spreadsheet. Silk is the PhD research of James Landay, and it allows graphic designers to sketch an interface with a pen on a computer tablet <ref> [5, 6] </ref>. Silk recognizes the widgets as they are drawn and allows the interface to be exercised for testing. Storyboards can be sketched to show the temporal behavior of the interface.
Reference: 6. <author> James Landay. </author> <title> Interactive Sketching for the Early Stages of User Interface Design. </title> <type> Ph.D. </type> <institution> Th., Computer Science Department, Carnegie Mellon University, </institution> <year> 1996. </year> <note> In progress. </note>
Reference-contexts: Graphical ``link boxes'' show the inferred association of the graphics to the spreadsheet. Silk is the PhD research of James Landay, and it allows graphic designers to sketch an interface with a pen on a computer tablet <ref> [5, 6] </ref>. Silk recognizes the widgets as they are drawn and allows the interface to be exercised for testing. Storyboards can be sketched to show the temporal behavior of the interface.
Reference: 7. <author> Francesmary Modugno and Brad A. Myers. </author> <title> A State-Based Visual Language for a Demonstrational Visual Shell. </title> <booktitle> 1994 IEEE Workshop on Visual Languages, IEEE Computer Society, </booktitle> <address> St. Louis, MO, </address> <month> Oct., </month> <year> 1994, </year> <pages> pp. 304-311. </pages>
Reference-contexts: Pursuit was the PhD thesis of Francesmary Modugno, and is a visual shell (an iconic interface to a file system, like the Macintosh finder) <ref> [10, 7, 8] </ref>. As the user demonstrates a program by executing example commands, Pursuit builds a visual language representation of operations and inferences.
Reference: 8. <author> Francesmary Modugno, T.R.G. Green and Brad A. Myers. </author> <title> Visual Programming in a Visual Domain: </title>
Reference-contexts: Pursuit was the PhD thesis of Francesmary Modugno, and is a visual shell (an iconic interface to a file system, like the Macintosh finder) <ref> [10, 7, 8] </ref>. As the user demonstrates a program by executing example commands, Pursuit builds a visual language representation of operations and inferences.
References-found: 8

