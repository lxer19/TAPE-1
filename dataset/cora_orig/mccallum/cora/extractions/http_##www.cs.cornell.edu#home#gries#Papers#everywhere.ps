URL: http://www.cs.cornell.edu/home/gries/Papers/everywhere.ps
Refering-URL: http://www.cs.cornell.edu/home/gries/Logic/Articles.html
Root-URL: http://www.cs.cornell.edu
Title: Adding the Everywhere Operator to Propositional Logic  
Author: David Gries and Fred B. Schneider 
Date: May 1, 1996  
Address: Ithaca, New York 14853 USA  
Affiliation: Computer Science Department, Cornell University  
Abstract: A sound and complete modal propositional logic S5c is presented in which 2P has the interpretation " P is true in all states". S5c illustrates that the two following approaches to axiomatizing a logic need not be equivalent: (i) give axiom schemes that denote an infinite number of axioms and (ii) write a finite number of axioms in terms of propositional variables and introduce a substitution inference rule.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Dijkstra, </author> <title> E.W. A Discipline of Programming. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, </address> <year> 1976. </year>
Reference-contexts: It can be used to formalize the Hoare triple fP g S fQg , with the meaning "execution of statement S begun in a state in which P is true is guaranteed to terminate in a state in which Q is true ." [7]. Using weakest-precondition predicate transformer wp <ref> [1] </ref>, we define: fP g S fQg : 2 (P ) wp (S; Q)) : Modal logic 2 S5 includes 2P among its formulas.
Reference: [2] <author> Dijkstra, </author> <title> E.W. The everywhere operator once more. </title> <address> EWD1086, </address> <month> 26 November </month> <year> 1990. </year>
Reference-contexts: The use of the everywhere operator 2P was introduced by Dijkstra (using the notation [P ] ) in the early 1980's (see e.g. <ref> [3, 2] </ref>) and has since been used by researchers in the formal development of programs.
Reference: [3] <author> Dijkstra, </author> <title> E.W., and C.S. Scholten. Predicate Calculus and Program Semantics. </title> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: The use of the everywhere operator 2P was introduced by Dijkstra (using the notation [P ] ) in the early 1980's (see e.g. <ref> [3, 2] </ref>) and has since been used by researchers in the formal development of programs.
Reference: [4] <author> Gries, D., and F.B. Schneider. </author> <title> A Logical Approach to Discrete Math. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: Textual Substitution and all the inference rules of S5 preserve S5c-validity. Also, the axioms of S5 are S5c-valid. Therefore, logic S5c is sound with respect to S5c-validity. To illustrate S5c, we prove that :2p is a theorem. We use a calculational style of proof |see <ref> [4] </ref> or [5]. The first formula is an S5c-theorem.
Reference: [5] <author> Gries, D., and F.B. Schneider. </author> <title> Equational propositional logic. </title> <booktitle> IPL 53 (1995), </booktitle> <pages> 145-152. </pages>
Reference-contexts: Textual Substitution and all the inference rules of S5 preserve S5c-validity. Also, the axioms of S5 are S5c-valid. Therefore, logic S5c is sound with respect to S5c-validity. To illustrate S5c, we prove that :2p is a theorem. We use a calculational style of proof |see [4] or <ref> [5] </ref>. The first formula is an S5c-theorem.
Reference: [6] <author> Halpern, Y.J., and Kapron, B. </author> <title> Zero-one laws for modal logic. </title> <booktitle> Annals of Pure and Applied Logic 69 (1994), </booktitle> <pages> 157-193. </pages>
Reference-contexts: Lemma (7) now holds trivially, and we can prove completeness with respect to S5c-validity in the same way that we proved completeness of 10 S5c. This general approach is mentioned in <ref> [6] </ref>. This axiomatization appeared unsatisfactory to us because it refers to the semantic concept of satisfiability. However, in private communications with us, both Rob Goldblatt and Joe Halpern explained how this semantic concept can be eliminated, leading to a complete (syntactic) axiomatization.
Reference: [7] <author> C.A.R. Hoare. </author> <title> An axiomatic basis for computer programming. </title> <journal> Comm. ACM 12 (Oc-tober 1969), </journal> <pages> 576-580, 583. </pages>
Reference-contexts: It can be used to formalize the Hoare triple fP g S fQg , with the meaning "execution of statement S begun in a state in which P is true is guaranteed to terminate in a state in which Q is true ." <ref> [7] </ref>. Using weakest-precondition predicate transformer wp [1], we define: fP g S fQg : 2 (P ) wp (S; Q)) : Modal logic 2 S5 includes 2P among its formulas.
Reference: [8] <author> Hughes, G.E., and M.J. Cresswell. </author> <title> An Introduction to Modal Logic. </title> <publisher> Mehuen and Co., </publisher> <address> New York, </address> <year> 1968. </year> <month> 11 </month>
Reference-contexts: We first write S5c using axiom schemes that represent an infinite number of axioms. Later, we present a logic that has a finite number of axioms. 1 We use for equality over the booleans and = for equality over any type. 2 See Hughes and Cresswell <ref> [8] </ref> for an introduction to modal logic. 2 2 Preliminaries Let VP be a set of propositional variables. We use lower-case letters p; q; r; : : : for elements of VP . <p> S5 is sound and complete with respect to S5-validity <ref> [8] </ref>. 3 Table 2: Schematic PM, S5, and S5c PM: Modus Ponens: ` ff; ` (ff ) fi) ! ` fi Axiom scheme A1: ff _ ff ) ff Axiom scheme A2: ff ) ff _ fi Axiom scheme A3: ff _ fi ) fi _ ff Axiom scheme A4: (fi <p> Since S5c is an extension of S5, in this proof, we can use S5-theorems presented in Hughes and Cresswell <ref> [8] </ref> as S5c-theorems. Also, we rely on the following lemma, which follows directly from the definition of b V (2ff; w) . Lemma. For formula ff , either j= S5c 2ff or j= S5c :2ff .(4) Hughes and Cresswell define ordered modal conjunctive normal form (ordered MCNF). <p> The rest of this proof is similar to the proof of the first case, using Lemma (6) instead of (7). Hughes and Cresswell <ref> [8, p. 117] </ref> prove the following theorem. Ordered MCNF Theorem.
References-found: 8

