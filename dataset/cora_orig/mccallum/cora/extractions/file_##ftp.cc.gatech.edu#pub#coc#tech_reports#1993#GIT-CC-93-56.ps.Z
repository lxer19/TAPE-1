URL: file://ftp.cc.gatech.edu/pub/coc/tech_reports/1993/GIT-CC-93-56.ps.Z
Refering-URL: http://www.cs.gatech.edu/fac/Mostafa.Ammar/MP.html
Root-URL: 
Email: rjc@cc.gatech.edu  
Title: On the Use of Directory Services to Support Multi-Protocol Inter-operability  
Author: Russell J. Clark Kenneth L. Calvert Mostafa H. Ammar 
Note: This research is supported by a grant from the National Science Foundation (NCR-9305115) and the TRANSOPEN project of the Army Research Lab (formerly AIRMICS) under contract number DAKF11-91-D-0004.  
Address: Atlanta, GA 30332-0280  
Affiliation: College of Computing Georgia Institute of Technology  
Date: September 20, 1993  
Pubnum: GIT-CC-93/56  
Abstract: Multi-protocol systems are a vital tool for achieving inter-operability in today's heterogeneous communication networks. An important aspect of these systems is the need to determine which of the multiple available protocols will be used to carry out a given communication task; an uninformed choice can result in failure to communicate when communication should be possible. In this paper we consider ways to make information about hosts' supported protocol configurations available through directory services. We discuss various representation approaches, and describe a working implementation of a multi-protocol application exemplifying our approach. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Braden. </author> <title> Requirements for internet hosts application and support. </title> <type> RFC 1123, </type> <month> October </month> <year> 1989. </year>
Reference-contexts: The question of accuracy of the DNS entries has been raised in the Internet community. Indeed the Internet host requirements document <ref> [1] </ref> specifically warns that a host should not rely on the WKS entries to provide accurate information regarding the services available from another host. These concerns over accuracy lead to the likelihood that the directory service itself may not be enough to provide up-to-date information about a network host.
Reference: [2] <author> R. W. Callon. </author> <title> TCP and UDP with bigger addresses (TUBA), a simple proposal for internet addressing and routing. </title> <type> RFC 1347, </type> <month> June </month> <year> 1992. </year>
Reference-contexts: In earlier versions of Berkeley UNIX, for example, the use of IP as a network protocol was hardwired into the TCP implementation; such implementations do not support the use of CLNP by TCP, even though conventions for such use have been defined <ref> [2] </ref>. In some cases, this constraint can be overcome by the addition of a switching capability to the implementation, in the form of a pseudo PE that binds references to the actual lower-level PEs, and hides minor differences between their interfaces. <p> This is the additional data that must be provided to indicate the uses-lists of the WKS PEs. We assume that the tcp implementation supports either ip or clnp <ref> [2] </ref>. We also assume that the TP4 protocol iso-tp4 uses either CLNP or IP. If this is not the case, another entry could be added with an assigned name such as in-tp4 to identify a TP4 implementation that uses only IP.
Reference: [3] <author> R. J. Clark, M. H. Ammar, and K. L. Calvert. </author> <title> Multi-protocol architectures as a paradigm for achieving inter-operability. </title> <booktitle> In Proceedings of IEEE INFOCOM, </booktitle> <month> April </month> <year> 1993. </year>
Reference-contexts: Radical growth in the number of interconnected systems has accompanied this proliferation of protocol suites. As a result of these two facts, there is an ever-increasing need to interconnect systems that do not currently use the same communication protocols. In a previous paper <ref> [3] </ref> we discussed support for multiple protocol suites as a method of achieving inter-operability in current and future networks. Such an approach is based upon the observation that universal support for any single architecture or even protocol is unlikely.
Reference: [4] <author> R. J. Cypser. </author> <title> Evolution of an open communications architecture. </title> <journal> IBM Systems Journal, </journal> <volume> 31(2) </volume> <pages> 161-188, </pages> <year> 1992. </year>
Reference-contexts: The basic idea is to embrace heterogeneity by developing frameworks for dealing with it. This paper presents one element of such a framework, namely a method enabling hosts to obtain information about the protocols supported by other hosts. Multi-protocol networking has sparked research in several areas. Cypser <ref> [4] </ref> describes three main locations for protocol switching in systems supporting multiple protocols. Ogle et al. [11] are developing a TCP/IP and SNA system that performs protocol selection below the socket level interface.
Reference: [5] <author> P. Janson, R. Molva, and S. Zatti. </author> <title> Architectural directions for opening IBM networks: The case of OSI. </title> <journal> IBM Systems Journal, </journal> <volume> 31(2) </volume> <pages> 313-335, </pages> <year> 1992. </year>
Reference-contexts: Multi-protocol networking has sparked research in several areas. Cypser [4] describes three main locations for protocol switching in systems supporting multiple protocols. Ogle et al. [11] are developing a TCP/IP and SNA system that performs protocol selection below the socket level interface. Janson et al. <ref> [5] </ref> consider options for inter-operability between OSI and SNA networks, and analyze the addressing issues arising when these protocols are combined in a single network. Instead of an architecture-specific solution, however, we seek an approach general enough for problems involving future architectures as well as today's.
Reference: [6] <author> B. Manning. </author> <title> DNS NSAP RRs. </title> <type> RFC 1348, </type> <month> July </month> <year> 1992. </year>
Reference-contexts: In this case it is a Sun Microsystems Sparc 1 workstation running the SunOS operating system version 4.1. The third line is an NSAP type record providing an OSI-format address. This format is described in <ref> [6] </ref> and is currently being updated [7]. The remaining five lines of the sample DNS data are the WKS entries used to describe this host's protocol graph.
Reference: [7] <author> B. Manning and R. Colella. </author> <title> DNS NSAP Resource Records. </title> <type> Internet Draft, </type> <month> May </month> <year> 1993. </year>
Reference-contexts: In this case it is a Sun Microsystems Sparc 1 workstation running the SunOS operating system version 4.1. The third line is an NSAP type record providing an OSI-format address. This format is described in [6] and is currently being updated <ref> [7] </ref>. The remaining five lines of the sample DNS data are the WKS entries used to describe this host's protocol graph.
Reference: [8] <author> B. Meandzija. </author> <title> Integration through meta-communication. </title> <booktitle> In Proceedings of IEEE INFOCOM, </booktitle> <pages> pages 702-709, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: Among others considering the general inter-operability problem, Tschudin has described a generic protocol [18] allowing communicating systems to exchange descriptions of arbitrary protocols before using them to communicate. Similar in philosophy is the meta-protocol concept proposed by Meandzija <ref> [8] </ref>. In contrast, one of the explicit goals of our work is to minimize the number of things (including protocols) that must be universally agreed upon or supported. This paper considers the use of directory services to provide information about the various protocols that hosts support.
Reference: [9] <author> P. Mockapetris. </author> <title> Domain names concepts and facilities. </title> <type> RFC 1034, </type> <month> November </month> <year> 1987. </year>
Reference-contexts: Using directory services to provide this information at runtime is a natural extension of the primary use of these services today, i.e. mapping names to address information. We describe a generic approach, along with a working implementation based on a widely-used directory service, the Internet Domain Name System <ref> [9, 10] </ref>. The paper proceeds as follows. In the next section, we describe the problem in more detail, along with the basic idea of the solution. In Section 3, we consider possible methods of encoding the required information in a directory database. <p> While this approach would give us more flexibility to define new host information records, the ubiquity of DNS in the current Internet makes it more suitable for providing a system which could be deployed today. 5.1 An Overview of DNS The DNS, described in <ref> [9] </ref> and [10], provides a hierarchically distributed database of network host information. It is used primarily to provide hostname to network address resolution. The two main components of the DNS are the domain server and the resolver. The domain server provides name service within a DNS domain. <p> The RR type A is used for 32-bit IP addresses only. An interesting aspect of the original design of DNS is the inclusion of a CLASS field in each resource record. This attribute is reserved for specifying information 13 about the supported protocol family of a host <ref> [9] </ref>. The most natural extension of DNS to the multi-protocol environment is to use the CLASS field to designate which protocol architectures are supported. For instance, a class could be defined to indicate use of the OSI protocols.
Reference: [10] <author> P. Mockapetris. </author> <title> Domain names implementation and specification. </title> <type> RFC 1035, </type> <month> November </month> <year> 1987. </year>
Reference-contexts: Using directory services to provide this information at runtime is a natural extension of the primary use of these services today, i.e. mapping names to address information. We describe a generic approach, along with a working implementation based on a widely-used directory service, the Internet Domain Name System <ref> [9, 10] </ref>. The paper proceeds as follows. In the next section, we describe the problem in more detail, along with the basic idea of the solution. In Section 3, we consider possible methods of encoding the required information in a directory database. <p> While this approach would give us more flexibility to define new host information records, the ubiquity of DNS in the current Internet makes it more suitable for providing a system which could be deployed today. 5.1 An Overview of DNS The DNS, described in [9] and <ref> [10] </ref>, provides a hierarchically distributed database of network host information. It is used primarily to provide hostname to network address resolution. The two main components of the DNS are the domain server and the resolver. The domain server provides name service within a DNS domain. <p> This approach provides the most flexibility in encoding and presents the least danger of conflicting with current implementation and usage. One issue to note is that while the TXT RRs are defined in the specification <ref> [10] </ref> from 1987, they are not supported by all DNS implementations. The version of named found in the 4.3 Reno release of BSD UNIX includes support for TXT but the older BSD version that provides the basis for Sun OS 4.1.3 does not.
Reference: [11] <author> D. M. Ogle, K. M. Tracey, R. A. Floyd, and G. Bollella. </author> <title> Dynamically selecting protocols for socket applications. </title> <journal> IEEE Network, </journal> <volume> 7(3) </volume> <pages> 48-57, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: This paper presents one element of such a framework, namely a method enabling hosts to obtain information about the protocols supported by other hosts. Multi-protocol networking has sparked research in several areas. Cypser [4] describes three main locations for protocol switching in systems supporting multiple protocols. Ogle et al. <ref> [11] </ref> are developing a TCP/IP and SNA system that performs protocol selection below the socket level interface. Janson et al. [5] consider options for inter-operability between OSI and SNA networks, and analyze the addressing issues arising when these protocols are combined in a single network.
Reference: [12] <author> S. W. O'Malley and L. L. Peterson. </author> <title> A dynamic network architecture. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 10(2) </volume> <pages> 110-143, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: The distinction is immaterial here.) The sequence of PEs associated with a session is here called a path. While in most architectures every message associated with a session is handled by the same path, this need not always be the case. In the architecture of <ref> [12] </ref>, for example, the PE structure associated with a user session is actually a graph, and different messages can traverse different paths through this subgraph. <p> While current network hosts change protocol architectures no more frequently than they change addresses, recent research suggests that this may not always be the case in the future <ref> [12, 18] </ref>. The question of accuracy of the DNS entries has been raised in the Internet community. Indeed the Internet host requirements document [1] specifically warns that a host should not rely on the WKS entries to provide accurate information regarding the services available from another host.
Reference: [13] <author> J. Reynolds and J. Postel. </author> <title> Assigned numbers. </title> <type> RFC 1340, </type> <month> July </month> <year> 1992. </year>
Reference-contexts: These well known service numbers are used as port identifiers in the TCP and UDP protocols. For example, if FTP is supported then bit 21 is set since FTP uses port 21 of TCP. The protocol and well known service numbers are defined in the Internet Assigned Numbers document <ref> [13] </ref>. The standard interpretation of the protocol field in the WKS record is that it represents a transport layer protocol such as TCP. The service bitmap represents direct users of the transport layer. <p> The entry iso-tp0 represents the RFC-1006 mechanism for implementing TP0 over TCP [15]. Since TP0 and TP4 provide a similar interface, we assume that FTAM and VT can use either one. The identifiers ftam and vt are the only assigned names in this example not currently defined in <ref> [13] </ref>. Using both the WKS entry and PE definitions, a communication subsystem can build a protocol graph describing the available paths on the host of interest. The capabilities of this approach are the same as for the previous approach.
Reference: [14] <author> M. T. Rose. </author> <title> The ISO Development Environment User's Manual Version 7.0. </title> <booktitle> Performance Systems International, </booktitle> <month> July </month> <year> 1991. </year>
Reference-contexts: The changes we propose have no impact on systems that currently use the DNS directory services. An alternative approach to using DNS would be to extend an X.500 implementation such as QUIPU, which is available with the ISO Development Environment (ISODE) <ref> [14] </ref>. <p> In our implementation, this task is performed by the Transport Switch mechanism provided by the ISODE <ref> [14] </ref>. The Transport Switch provides a mechanism to select among protocol stacks based on address information. For each transport connection, it associates a separate structure of function pointers to transport layer functions. In turn, these particular transport functions invoke specific network layer functions.
Reference: [15] <author> M. T. Rose and D. E. Cass. </author> <title> ISO Transport Services on top of the TCP. </title> <type> RFC 1006, </type> <month> May </month> <year> 1987. </year>
Reference-contexts: If this is not the case, another entry could be added with an assigned name such as in-tp4 to identify a TP4 implementation that uses only IP. The entry iso-tp0 represents the RFC-1006 mechanism for implementing TP0 over TCP <ref> [15] </ref>. Since TP0 and TP4 provide a similar interface, we assume that FTAM and VT can use either one. The identifiers ftam and vt are the only assigned names in this example not currently defined in [13].
Reference: [16] <author> R. Rosenbaum. </author> <title> Using the domain name system to store arbitrary string attributes. </title> <type> Internet Draft, </type> <month> April </month> <year> 1993. </year> <month> 22 </month>
Reference-contexts: The entries are grouped by the protocol layer described. This grouping has no semantic meaning for the system and is strictly for the convenience of the person reading the file. 2 Rosenbaum has proposed a new mechanism for using TXT fields for arbitrary string attributes <ref> [16] </ref>.
Reference: [17] <author> IEEE Communications Society. </author> <title> Special issue: The future of the Internet Pro--tocol. </title> <journal> IEEE Network, </journal> <volume> 7(3), </volume> <month> May </month> <year> 1993. </year>
Reference-contexts: Current proposals for the next generation Internet protocols all involve some sort of transition strategy where both current and future protocols will need to co-exist <ref> [17] </ref>. Our proposed architecture is an appropriate solution to this multi-protocol co-existence problem. The use of a directory service to solve this problem has some potential drawbacks that should be addressed. The usefulness of the directory service is limited by the accuracy of the directory information.
Reference: [18] <author> C. Tschudin. </author> <title> Flexible protocol stacks. </title> <booktitle> In Computer Communication Review, </booktitle> <pages> pages 197-205. </pages> <publisher> ACM Press, </publisher> <month> September </month> <year> 1991. </year> <month> 23 </month>
Reference-contexts: Instead of an architecture-specific solution, however, we seek an approach general enough for problems involving future architectures as well as today's. Among others considering the general inter-operability problem, Tschudin has described a generic protocol <ref> [18] </ref> allowing communicating systems to exchange descriptions of arbitrary protocols before using them to communicate. Similar in philosophy is the meta-protocol concept proposed by Meandzija [8]. <p> While current network hosts change protocol architectures no more frequently than they change addresses, recent research suggests that this may not always be the case in the future <ref> [12, 18] </ref>. The question of accuracy of the DNS entries has been raised in the Internet community. Indeed the Internet host requirements document [1] specifically warns that a host should not rely on the WKS entries to provide accurate information regarding the services available from another host.
References-found: 18

