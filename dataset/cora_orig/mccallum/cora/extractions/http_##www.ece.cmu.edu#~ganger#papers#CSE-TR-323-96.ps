URL: http://www.ece.cmu.edu/~ganger/papers/CSE-TR-323-96.ps
Refering-URL: http://www.ece.cmu.edu/~ganger/disksim/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: On-Line Extraction of SCSI Disk Drive Parameters  
Author: Bruce L. Worthington, Gregory R. Ganger, Yale N. Patt, and John Wilkes 
Address: Room 3402, EECS Building  Ann Arbor, Michigan 48109-2122  
Affiliation: Computer Science and Engineering Division  Department of Electrical Engineering and Computer Science The University of Michigan,  
Date: December 19, 1996  
Pubnum: CSE-TR-323-96  
Abstract-found: 0
Intro-found: 1
Reference: [Clegg86] <author> F. Clegg, G. Ho, S. Kusmer, J. Sontag, </author> <title> "The HP-UX operating system on HP Precision Architecture computers", </title> <journal> Hewlett-Packard Journal, </journal> <volume> Vol. 37, No. 12, </volume> <month> December </month> <year> 1986, </year> <pages> pp. 4-22. </pages>
Reference-contexts: This is left as future work. 3 Extraction environment The described extraction methodology requires a host computer system with direct, low-level SCSI access (bypassing any file system or other translation/caching) and a high-resolution timer to measure the service times of individual disk requests. Some systems (such as HP-UX <ref> [Clegg86] </ref>) have built-in trace-points that provide the necessary timing capability. In other cases, the extraction techniques may require access to the OS source code, a device driver development environment, or an I/O card that can be directly controlled by an application program (e.g., on a machine running MS/DOS 2 ).
Reference: [HP93] <author> Hewlett-Packard Company, </author> <title> "HP C2490A 3.5-inch SCSI-2 Disk Drives, Technical Reference Manual", Part Number 5961-4359, Boise, ID, </title> <address> Edition 3, </address> <month> September </month> <year> 1993. </year>
Reference-contexts: Although the algorithms produce valid results in the presence of timing noise (e.g., additional CPU load and bus contention), they take longer to do so. The extraction techniques were developed and tested using four different disk drives: a Seagate ST41601N [Seagate92, Seagate92a], a DEC RZ26, an HP C2490A <ref> [HP93] </ref>, and an HP C3323A [HP94]. <p> They indicate how full a read cache segment should be and how empty a write cache segment should be before the disk attempts reconnection to the host. However, some disks utilize adaptive algorithms when these values are set to 0x00 <ref> [HP93, HP94] </ref>. To determine if this is the case, set the Buffer Full Ratio to 0x00 and compute MTBRC (1-sector write, segment-sized read) for the outermost zone. Repeat the extraction with Buffer Full Ratio set to 0x01.
Reference: [HP94] <author> Hewlett-Packard Company, </author> <title> "HP C3323A 3.5-inch SCSI-2 Disk Drives, Technical Reference Manual", Part Number 5962-6452, Boise, ID, </title> <address> Edition 2, </address> <month> April </month> <year> 1994. </year>
Reference-contexts: The extraction techniques were developed and tested using four different disk drives: a Seagate ST41601N [Seagate92, Seagate92a], a DEC RZ26, an HP C2490A [HP93], and an HP C3323A <ref> [HP94] </ref>. <p> They indicate how full a read cache segment should be and how empty a write cache segment should be before the disk attempts reconnection to the host. However, some disks utilize adaptive algorithms when these values are set to 0x00 <ref> [HP93, HP94] </ref>. To determine if this is the case, set the Buffer Full Ratio to 0x00 and compute MTBRC (1-sector write, segment-sized read) for the outermost zone. Repeat the extraction with Buffer Full Ratio set to 0x01.
Reference: [Jacobson91] <author> D. Jacobson, J. Wilkes, </author> <title> "Disk scheduling algorithms based on rotational position", </title> <type> Hewlett-Packard Technical Report, </type> <address> HPL-CSP-91-7, Palo Alto, CA, </address> <month> February 26, </month> <year> 1991. </year>
Reference-contexts: Given the growing disparity between processor and disk speeds, achieving high system performance requires that disk drives be used intelligently. Previous work has demonstrated that aggressive disk request scheduling algorithms can significantly reduce seek and rotational latency delays <ref> [Jacobson91, Seltzer90] </ref>, and scheduling algorithms that exploit on-board disk caches can further boost performance [Worthington94]. Such algorithms require detailed knowledge of disk characteristics, including mechanical delays, on-board caching and prefetching algorithms, command processing and protocol overheads, and logical-to-physical data block mappings.
Reference: [Ruemmler94] <author> C. Ruemmler, J. Wilkes, </author> <title> "An Introduction to Disk Drive Modeling", </title> <journal> IEEE Computer, </journal> <volume> Vol. 27, No. 3, </volume> <month> March </month> <year> 1994, </year> <pages> pp. </pages> <month> 17-28. </month> <title> [SCSI93] "Small Computer System Interface-2", ANSI X3T9.2, Draft Revision 10k, </title> <address> March 17, </address> <year> 1993. </year>
Reference-contexts: Such algorithms require detailed knowledge of disk characteristics, including mechanical delays, on-board caching and prefetching algorithms, command processing and protocol overheads, and logical-to-physical data block mappings. Accurate disk models utilized in storage subsystem research require similar levels of detail <ref> [Ruemmler94] </ref>. Information about disk drives can be obtained by reading technical reference manuals, by directly monitoring disk activity at the hardware level, or by talking directly to the drive firmware developers and mechanical engineers. <p> When using the extracted parameter values, detailed disk simulation closely matches real disk behavior. The remainder of this report is organized as follows. Section 2 contains a brief description of modern SCSI disk drives. For a more detailed discussion, the reader is referred to <ref> [Ruemmler94] </ref>. Section 3 identifies the system facilities needed for parameter extraction and describes the experimental setup. Sections 4 and 5 describe interrogative and empirical extraction techniques, respectively. Section 6 validates the extraction techniques. Section 7 discusses how disk request schedulers can utilize extracted data. <p> In each case, the mean service time reported by the simulator was within 1% of the value observed for the actual disk (servicing the same workload). Greater insight can be achieved by comparing the service time distributions for the disk simulator and the actual disk <ref> [Ruemmler94] </ref>.
Reference: [Seagate92] <author> Seagate Technology, Inc., </author> <title> "SCSI Interface Specification, Small Computer System Interface (SCSI), Elite Product Family", Document #64721702, Revision D, </title> <month> March </month> <year> 1992. </year>
Reference-contexts: Although the algorithms produce valid results in the presence of timing noise (e.g., additional CPU load and bus contention), they take longer to do so. The extraction techniques were developed and tested using four different disk drives: a Seagate ST41601N <ref> [Seagate92, Seagate92a] </ref>, a DEC RZ26, an HP C2490A [HP93], and an HP C3323A [HP94].
Reference: [Seagate92a] <author> Seagate Technology, Inc., </author> <title> "Seagate Product Specification, ST41600N and ST41601N Elite Disc Drive, SCSI Interface", Document #64403103, Revision G, </title> <month> October </month> <year> 1992. </year>
Reference-contexts: Although the algorithms produce valid results in the presence of timing noise (e.g., additional CPU load and bus contention), they take longer to do so. The extraction techniques were developed and tested using four different disk drives: a Seagate ST41601N <ref> [Seagate92, Seagate92a] </ref>, a DEC RZ26, an HP C2490A [HP93], and an HP C3323A [HP94].
Reference: [Seltzer90] <author> M. Seltzer, P. Chen, J. Ousterhout, </author> <title> "Disk Scheduling Revisited", </title> <booktitle> Winter USENIX Proceedings, </booktitle> <address> Wash-ington, D.C., </address> <month> January </month> <year> 1990, </year> <pages> pp. 313-324. </pages>
Reference-contexts: Given the growing disparity between processor and disk speeds, achieving high system performance requires that disk drives be used intelligently. Previous work has demonstrated that aggressive disk request scheduling algorithms can significantly reduce seek and rotational latency delays <ref> [Jacobson91, Seltzer90] </ref>, and scheduling algorithms that exploit on-board disk caches can further boost performance [Worthington94]. Such algorithms require detailed knowledge of disk characteristics, including mechanical delays, on-board caching and prefetching algorithms, command processing and protocol overheads, and logical-to-physical data block mappings.
Reference: [Worthington94] <author> B. Worthington, G. Ganger, Y. Patt, </author> <title> "Scheduling Algorithms for Modern Disk Drives", </title> <booktitle> SIGMETRICS, </booktitle> <address> Nashville, KY, </address> <month> May </month> <year> 1994, </year> <pages> pp. 241-251. </pages> <note> [An extended version was published as: "Scheduling for Modern Disk Drives and Non-Random Workloads", </note> <institution> University of Michigan, </institution> <type> Technical Report CSE-TR-194-94, </type> <address> Ann Arbor, MI, </address> <month> March </month> <year> 1994.] </year> <month> 24 </month>
Reference-contexts: Previous work has demonstrated that aggressive disk request scheduling algorithms can significantly reduce seek and rotational latency delays [Jacobson91, Seltzer90], and scheduling algorithms that exploit on-board disk caches can further boost performance <ref> [Worthington94] </ref>. Such algorithms require detailed knowledge of disk characteristics, including mechanical delays, on-board caching and prefetching algorithms, command processing and protocol overheads, and logical-to-physical data block mappings. Accurate disk models utilized in storage subsystem research require similar levels of detail [Ruemmler94]. <p> The described extraction methodology relies heavily on the read defect data command and the translate address form of the send/receive diagnostic commands. 4.1.1 read defect data Previous work has shown that scheduling algorithms and disk models can ignore reallocated defects in most cases <ref> [Worthington94] </ref>. Slipped defects, on the other hand, can cause major data layout perturbations, especially in 4 In this report, hexadecimal values are prefixed with "0x", byte offsets are prefixed with "B", and bit offsets are prefixed with "b". <p> Command processing and completion overheads can depend on the type of command (read or write), the state of the cache (hit or miss), and the immediately previous request's characteristics <ref> [Worthington94] </ref>. Overhead values can be approximated by solving multiple linear equations obtained from MTBRC extractions for the various unknown values. For disk models, the level of detail desired determines the number of different MTBRC extractions necessary. For disk schedulers, combined quantities can be used directly (see section 7). <p> Some scheduling algorithms sort disk requests based on their starting LBNs, thus requiring little or no disk-specific knowledge. Such algorithms depend on a strong correlation between the logical "distance" separating two disk requests and the physical distance separating the cylinders containing the two requests' data <ref> [Worthington94] </ref>. These simple scheduling algorithms attempt to reduce mean seek times by reducing mean seek distances. <p> If a scheduler has access to extracted cache parameters, it can give precedence to requests that will hit in the cache and further reduce mean service times <ref> [Worthington94] </ref>. 8 Conclusions Aggressive disk scheduling and accurate performance modeling of disk subsystems both require thorough, quantified understanding of disk drive behavior. This report documents a set of general techniques for efficiently gathering the necessary information from modern SCSI disk drives.
References-found: 9

