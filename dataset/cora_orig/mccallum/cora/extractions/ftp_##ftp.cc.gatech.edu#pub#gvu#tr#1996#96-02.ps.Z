URL: ftp://ftp.cc.gatech.edu/pub/gvu/tr/1996/96-02.ps.Z
Refering-URL: http://www.cs.gatech.edu/gvu/reports/1996/
Root-URL: 
Title: Real-Time, Continuous Level of Detail Rendering of Height Fields  
Author: Peter Lindstrom, David Koller, William Ribarsky, Larry F. Hodges Nick Faust Gregory Turner 
Affiliation: College of Computing and Graphics, Visualization, and Usability Center Georgia Institute of Technology  Center for GIS and Spatial Analysis Technologies and Georgia Tech Research Institute Georgia Institute of Technology  Information Processing Branch Army Research Laboratory  
Abstract: We present an algorithm for real-time level of detail reduction and display of high-complexity polygonal surface data. The algorithm uses a compact and efficient regular grid representation, and employs a variable screen-space threshold to bound the maximum error of the projected image. The appropriate level of detail is computed and generated dynamically in real-time, allowing for smooth changes of resolution across areas of the surface. The algorithm has been implemented for approximating and rendering digital terrain models and other height fields, and consistently performs at interactive frame rates with high image quality. Typically, the number of rendered polygons per frame can be reduced by two orders of magnitude while maintaining image quality such that less than 5% of the resulting pixels differ from a full resolution image. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Kurt Akeley. </author> <title> RealityEngine graphics. </title> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <volume> 27 </volume> <pages> 109-116, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: The height field data used comes from a 2 fi 2 meter uniform resolution digital elevation model of the Hunter-Liggett military base in California, with discrete elevation values at one meter height resolution. All 24-bit images were generated on a two-processor, 150 MHz SGI Onyx RealityEngine 2 <ref> [1] </ref>, and have dimensions 1024 fi 768 pixels unless otherwise specified. We first examine the amount of polygon reduction as a function of the threshold t .
Reference: [2] <author> Michael A. Cosman, Allen E. Mathisen, and John A. Robinson. </author> <title> A new visual system to support advanced requirements. </title> <booktitle> In Proceedings, IMAGE V Conference, </booktitle> <pages> pages 370-380, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: However, the algorithms required to create TIN models are generally computationally expensive, prohibiting use of dynamically created TINs at interactive rates. Regular grid surface polygonalizations have also been implemented as terrain and general surface approximations <ref> [2, 6] </ref>. Such a uniform polygonalization generally produces many more polygons than a TIN for a given level of approximation, but the grid representation is typically more compact. Regular grid representations also have the advantage of allowing for easier construction of a multiple level of detail hierarchy.
Reference: [3] <author> Leila De Floriani. </author> <title> A pyramidal data structure for triangle-based surface description. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 9(2) </volume> <pages> 67-78, </pages> <month> March </month> <year> 1989. </year>
Reference-contexts: Much of the previous work on polygonalization of terrain-like surfaces has concentrated on triangulated irregular networks (TINs). A number of different approaches have been developed to create TINs from height fields using Delaunay and other triangulations <ref> [8, 3, 17, 19, 18, 10] </ref>. TINs allow variable spacing between vertices of the triangular mesh, approximating a surface at any desired level of accuracy with fewer polygons than other representations.
Reference: [4] <author> David H. Douglas. </author> <title> Experiments to locate ridges and channels to create a new type of digital elevation model. </title> <booktitle> Cartographica, </booktitle> <pages> 23(4)29-61, </pages> <year> 1986. </year>
Reference-contexts: Simply subsampling grid elevation values produces a coarser level of detail model, whereas TIN models generally require complete retrian-gulation in order to generate multiple levels of detail. Other surface approximation representations include hybrids of these techniques, and Douglas's "richline" model. Douglas <ref> [4] </ref> located specific terrain features such as ridges and channels in a terrain surface data set, representing the surface with line segments from these "information rich" lines. This method generates only a single surface approximation, however, and is not easily adapted to produce multiresolution models. <p> Examples of such algorithms include TIN simplification [8], feature (e.g. peaks, ridges, and valleys) identification and preservation <ref> [21, 4] </ref>, and frequency analysis/transforms such as wavelet simplification [5, 12]. These algorithms do, in general, not provide enough information to derive a tight bound on the maximum error in the projected image.
Reference: [5] <author> Matthias Eck, Tony DeRose, Tom Duchamp, Hugues Hoppe, Michael Lounsbery, and Werner Stuet-zle. </author> <title> Multiresolution analysis of arbitrary meshes. </title> <booktitle> Computer Graphics (SIGGRAPH '95 Proceedings), </booktitle> <volume> 29 </volume> <pages> 173-182, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: Examples of such algorithms include TIN simplification [8], feature (e.g. peaks, ridges, and valleys) identification and preservation [21, 4], and frequency analysis/transforms such as wavelet simplification <ref> [5, 12] </ref>. These algorithms do, in general, not provide enough information to derive a tight bound on the maximum error in the projected image.
Reference: [6] <author> John S. Falby, Michael J. Zyda, David R. Pratt, and Randy L. Mackey. NPSNET: </author> <title> Hierarchical data structures for real-time three-dimensional visual simulation. </title> <journal> Computers & Graphics, </journal> <volume> 17(1) </volume> <pages> 65-69, </pages> <year> 1993. </year>
Reference-contexts: However, the algorithms required to create TIN models are generally computationally expensive, prohibiting use of dynamically created TINs at interactive rates. Regular grid surface polygonalizations have also been implemented as terrain and general surface approximations <ref> [2, 6] </ref>. Such a uniform polygonalization generally produces many more polygons than a TIN for a given level of approximation, but the grid representation is typically more compact. Regular grid representations also have the advantage of allowing for easier construction of a multiple level of detail hierarchy.
Reference: [7] <author> R.L. Ferguson, R. </author> <title> Economy, W.A. Kelly, and P.P. Ramos. Continuous terrain level of detail for visual simulation. </title> <booktitle> In Proceedings, IMAGE V Conference, </booktitle> <pages> pages 144-151, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: Many visual simulation systems handle transitions between multiple levels of detail by alpha blending two models during the transition period. Ferguson <ref> [7] </ref> claims that such blending techniques between adjacent levels of detail may be visually distracting, and discusses a method of Delaunay triangulation and triangle subdivision which smoothly matches edges across areas of different level of detail. 3 Motivation The algorithm presented in this paper is a powerful hybrid of algorithms that <p> densities- the resolution within a block may vary; screen-space error-driven LOD selection-a single threshold determines the image quality; and continuous level of detail, which will be discussed in the following section. 3.1 Continuous Level of Detail Continuous level of detail has recently been used to describe a variety of properties <ref> [7, 17, 22] </ref>, some of which will be described below. As mentioned in (iii) and (iv) above, 3 it is important that the complexity changes smoothly be-tween consecutive frames, and that the simplified geometry doesn't lead to gaps or popping in the mesh.
Reference: [8] <author> Robert J. Fowler and James J. Little. </author> <title> Automatic extraction of irregular network digital terrain models. </title> <booktitle> Computer Graphics (SIGGRAPH '79 Proceedings), </booktitle> <volume> 13(2) </volume> <pages> 199-207, </pages> <month> August </month> <year> 1979. </year>
Reference-contexts: Much of the previous work on polygonalization of terrain-like surfaces has concentrated on triangulated irregular networks (TINs). A number of different approaches have been developed to create TINs from height fields using Delaunay and other triangulations <ref> [8, 3, 17, 19, 18, 10] </ref>. TINs allow variable spacing between vertices of the triangular mesh, approximating a surface at any desired level of accuracy with fewer polygons than other representations. <p> TINs allow variable spacing between vertices of the triangular mesh, approximating a surface at any desired level of accuracy with fewer polygons than other representations. Fowler and Little <ref> [8] </ref> construct TINs characterized by certain "surface specific" points and critical lines, allowing the TIN representation to closely match important terrain features. However, the algorithms required to create TIN models are generally computationally expensive, prohibiting use of dynamically created TINs at interactive rates. <p> Rather, these algorithms are used to characterize the data with a small set of parameters that, in conjunction with viewpoint distance and view angle, may be used to select what could be deemed appropriate levels of detail. Examples of such algorithms include TIN simplification <ref> [8] </ref>, feature (e.g. peaks, ridges, and valleys) identification and preservation [21, 4], and frequency analysis/transforms such as wavelet simplification [5, 12]. These algorithms do, in general, not provide enough information to derive a tight bound on the maximum error in the projected image.
Reference: [9] <author> T.A. Funkhouser and C.H. Sequin. </author> <title> Adaptive display algorithm for interactive frame rates during visualization of complex virtual environments. </title> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <volume> 27 </volume> <pages> 247-254, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: Note that this type of continuity does not explicitly imply that the polygon distribution over R 2 changes smoothly with v, e.g. if modeled as a knapsack problem where the number of polygons rendered is (near) constant, the "polygon density" may vary rapidly over a given area <ref> [9] </ref>. (iv) The "polygon density" or polygon distribution function n (v; A), where A is any fixed subset of R 2 . For a given area A, the number of polygons used to describe that area is continuous with respect to the viewpoint v.
Reference: [10] <author> Michael Garland and Paul S. Heckbert. </author> <title> Fast polygonal approximation of terrains and height fields. </title> <type> Technical Report CMU-CS-95-181, </type> <institution> CS Dept., Carnegie Mellon U., </institution> <year> 1995. </year>
Reference-contexts: Much of the previous work on polygonalization of terrain-like surfaces has concentrated on triangulated irregular networks (TINs). A number of different approaches have been developed to create TINs from height fields using Delaunay and other triangulations <ref> [8, 3, 17, 19, 18, 10] </ref>. TINs allow variable spacing between vertices of the triangular mesh, approximating a surface at any desired level of accuracy with fewer polygons than other representations.
Reference: [11] <institution> Graphics Library Programming Guide, Silicon Graphics Computer Systems, Mountain View, Calif., </institution> <year> 1991. </year>
Reference-contexts: This mesh is defined by recursively bisecting right triangles, 8 stopping when the enabled attribute of a base vertex is false. To efficiently render the mesh, a triangle mesh graphics primitive, such as the one supported by IRIS GL and OpenGL <ref> [11, 20] </ref>, may be used. For each specified vertex v, the previous two vertices and v form the next triangle in the mesh. At certain points, the previous two vertices must be swapped via a swaptmesh () call (IRIS GL), or a v3f () call (OpenGL).
Reference: [12] <author> M.H. Gross, R. Gatti, and O. Staadt. </author> <title> Fast multires--olution surface meshing. </title> <booktitle> In Proceedings of Visualization '95, </booktitle> <pages> pages 135-142, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: Douglas [4] located specific terrain features such as ridges and channels in a terrain surface data set, representing the surface with line segments from these "information rich" lines. This method generates only a single surface approximation, however, and is not easily adapted to produce multiresolution models. Gross et al. <ref> [12] </ref> use a wavelet transform to produce adaptive surface meshing from uniform grid data, allowing for local control of the surface level of detail. The issue of "continuous" level of detail representations for models has been addressed both for surfaces and more general modeling. <p> Examples of such algorithms include TIN simplification [8], feature (e.g. peaks, ridges, and valleys) identification and preservation [21, 4], and frequency analysis/transforms such as wavelet simplification <ref> [5, 12] </ref>. These algorithms do, in general, not provide enough information to derive a tight bound on the maximum error in the projected image.
Reference: [13] <author> Paul S. Heckbert and Michael Garland. </author> <title> Multireso-lution modeling for fast rendering. </title> <booktitle> In Proceedings of Graphics Interface '94, </booktitle> <pages> pages 1-8, </pages> <year> 1994. </year>
Reference-contexts: In order to accommodate such complex surface models while still maintaining real-time display rates, meth ods for approximating the polygonal surfaces and using multiresolution models have been proposed <ref> [13] </ref>. Approximation algorithms can be used to generate multiple surface models at varying levels of detail, and techniques are employed by the display system to select the appropriate level of detail and render it appropriately.
Reference: [14] <author> Paul S. Heckbert and Michael Garland. </author> <title> Survey of surface approximation algorithms. </title> <type> Technical Report CMU-CS-95-194, </type> <institution> CS Dept., Carnegie Mellon U., </institution> <year> 1995. </year>
Reference-contexts: We conclude the paper by empirically evaluating the algorithm with results from its use in a typical application. 2 Related Work A large number of researchers have developed algorithms for approximating terrains and other height fields using polygonal meshes. Heckbert and Garland <ref> [14] </ref> review many of these surface simplification methods, categorizing the algorithms into several groups, including uniform grid methods (which use a regular grid of height samples), hierarchical subdivision methods, and general triangulation methods (such as those that employ Delaunay triangulation techniques).
Reference: [15] <author> J. Rohlf and J. Helman. IRIS Performer: </author> <title> a high performance multiprocessing toolkit for real-time 3D graphics. </title> <booktitle> Computer Graphics (SIGGRAPH '94 Proceedings), </booktitle> <volume> 28(3) </volume> <pages> 381-394, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: This problem may be alleviated by reducing the overall complexity and applying temporal blending, or morphing, between different levels of detail to avoid "popping" in the mesh <ref> [15, 22] </ref>. Common to typical TIN and regular grid LOD algorithms is the discreteness of the levels of detail. Often, only a relatively small number of models for a given area are defined, and the difference in the number of polygons in successive levels of detail may be quite large.
Reference: [16] <author> Hanan Samet. </author> <title> The quadtree and related hierarchical data structures. </title> <journal> ACM Computing Surveys, </journal> <volume> 16(2) </volume> <pages> 187-260, </pages> <month> June </month> <year> 1984. </year>
Reference-contexts: Depending on the implementation, these blocks could, for instance, represent the quadnodes in a quadtree <ref> [16] </ref>. All blocks have the same vertex dimensions (i.e. they contain the same number of vertices), but may differ in resolution and area. Adjacent blocks share the vertices that lie on the block edges.
Reference: [17] <author> Lori L. Scarlatos. </author> <title> A refined triangulation hierarchy for multiple levels of terrain detail. </title> <booktitle> In Proceedings, IMAGE V Conference, </booktitle> <pages> pages 114-122, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: Much of the previous work on polygonalization of terrain-like surfaces has concentrated on triangulated irregular networks (TINs). A number of different approaches have been developed to create TINs from height fields using Delaunay and other triangulations <ref> [8, 3, 17, 19, 18, 10] </ref>. TINs allow variable spacing between vertices of the triangular mesh, approximating a surface at any desired level of accuracy with fewer polygons than other representations. <p> densities- the resolution within a block may vary; screen-space error-driven LOD selection-a single threshold determines the image quality; and continuous level of detail, which will be discussed in the following section. 3.1 Continuous Level of Detail Continuous level of detail has recently been used to describe a variety of properties <ref> [7, 17, 22] </ref>, some of which will be described below. As mentioned in (iii) and (iv) above, 3 it is important that the complexity changes smoothly be-tween consecutive frames, and that the simplified geometry doesn't lead to gaps or popping in the mesh.
Reference: [18] <author> Florian Schroder and Patrick Rossbach. </author> <title> Managing the complexity of digital terrain models. </title> <journal> Computers & Graphics, </journal> <volume> 18(6) </volume> <pages> 775-783, </pages> <year> 1994. </year>
Reference-contexts: Much of the previous work on polygonalization of terrain-like surfaces has concentrated on triangulated irregular networks (TINs). A number of different approaches have been developed to create TINs from height fields using Delaunay and other triangulations <ref> [8, 3, 17, 19, 18, 10] </ref>. TINs allow variable spacing between vertices of the triangular mesh, approximating a surface at any desired level of accuracy with fewer polygons than other representations.
Reference: [19] <author> William J. Schroeder, Jonathon A. Zarge, and William E. Lorenson. </author> <title> Decimation of triangle meshes. </title> <booktitle> Computer Graphics (SIGGRAPH '92 Proceedings), </booktitle> <volume> 26(2) </volume> <pages> 65-70, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Much of the previous work on polygonalization of terrain-like surfaces has concentrated on triangulated irregular networks (TINs). A number of different approaches have been developed to create TINs from height fields using Delaunay and other triangulations <ref> [8, 3, 17, 19, 18, 10] </ref>. TINs allow variable spacing between vertices of the triangular mesh, approximating a surface at any desired level of accuracy with fewer polygons than other representations.
Reference: [20] <author> Mark Segal and Kurt Akeley. </author> <title> The OpenGL Graphics System: A Specification, Silicon Graphics, </title> <publisher> Inc., </publisher> <year> 1992. </year>
Reference-contexts: This mesh is defined by recursively bisecting right triangles, 8 stopping when the enabled attribute of a base vertex is false. To efficiently render the mesh, a triangle mesh graphics primitive, such as the one supported by IRIS GL and OpenGL <ref> [11, 20] </ref>, may be used. For each specified vertex v, the previous two vertices and v form the next triangle in the mesh. At certain points, the previous two vertices must be swapped via a swaptmesh () call (IRIS GL), or a v3f () call (OpenGL).
Reference: [21] <author> David A. Southard. </author> <title> Piecewise planar surface models from sampled data. </title> <booktitle> Scientific Visualization of Physical Phenomena, </booktitle> <pages> pages 667-680, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: Examples of such algorithms include TIN simplification [8], feature (e.g. peaks, ridges, and valleys) identification and preservation <ref> [21, 4] </ref>, and frequency analysis/transforms such as wavelet simplification [5, 12]. These algorithms do, in general, not provide enough information to derive a tight bound on the maximum error in the projected image.
Reference: [22] <author> David C. Taylor and William A. Barret. </author> <title> An algorithm for continuous resolution polygonalizations of a discrete surface. </title> <booktitle> In Proceedings of Graphics Interface '94, </booktitle> <pages> pages 33-42, </pages> <year> 1994. </year> <month> 14 </month>
Reference-contexts: The issue of "continuous" level of detail representations for models has been addressed both for surfaces and more general modeling. Taylor and Barret <ref> [22] </ref> give an algorithm for surface polygonalization at multiple levels of detail, and use "TIN morphing" to provide for visually continuous change from one resolution to another. Many visual simulation systems handle transitions between multiple levels of detail by alpha blending two models during the transition period. <p> This problem may be alleviated by reducing the overall complexity and applying temporal blending, or morphing, between different levels of detail to avoid "popping" in the mesh <ref> [15, 22] </ref>. Common to typical TIN and regular grid LOD algorithms is the discreteness of the levels of detail. Often, only a relatively small number of models for a given area are defined, and the difference in the number of polygons in successive levels of detail may be quite large. <p> densities- the resolution within a block may vary; screen-space error-driven LOD selection-a single threshold determines the image quality; and continuous level of detail, which will be discussed in the following section. 3.1 Continuous Level of Detail Continuous level of detail has recently been used to describe a variety of properties <ref> [7, 17, 22] </ref>, some of which will be described below. As mentioned in (iii) and (iv) above, 3 it is important that the complexity changes smoothly be-tween consecutive frames, and that the simplified geometry doesn't lead to gaps or popping in the mesh. <p> This function is used to morph (blend) the geometries of two discrete levels of detail defined on the same area, resulting in a virtually continuous change in level of detail over time, or distance from the viewpoint to the mesh <ref> [22] </ref>. (ii) The elevation function z (x; y) with domain R 2 . The function z is defined piecewise on a per block basis.
References-found: 22

