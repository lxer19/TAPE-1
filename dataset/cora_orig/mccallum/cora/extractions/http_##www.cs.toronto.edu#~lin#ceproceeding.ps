URL: http://www.cs.toronto.edu/~lin/ceproceeding.ps
Refering-URL: http://www.cs.toronto.edu/~lin/
Root-URL: 
Email: email: -jlin, msf, taner-@ie.utoronto.ca  
Phone: tel: +1-416-978-6823; fax: +1-416-971-2479;  
Title: A Requirement Ontology for Engineering Design  
Author: Jinxin Lin, Mark S. Fox and Taner Bilgic 
Address: Toronto, Toronto, Canada M5S 3G9  
Affiliation: Enterprise Integration Laboratory, Dept. of Industrial Engineering University of  
Abstract: We present an ontology for representing requirements that supports a generic requirements management process in engineering design domain. The requirement ontology we propose is a part of a more general ontology to capture engineering design knowledge. Objects included in the ontology are parts, features, requirements, and constraints. We define a generic requirements management process and raise issues that the ontology must address like communication, traceability, completeness, consistency, document creation, and managing change. We use first-order logic to define the objects and their attributes, and identify the axioms capturing the constraints and relationships among the objects. We show how the axioms can be used in answering many of these issues. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bilgic, T and Fox, M. S. </author> <title> Constraint-based retrieval of engineering design cases: </title> <note> context as constraints (1996) to appear in J. </note> <editor> Gero and F. </editor> <booktitle> Sudweeks (eds) Artificial Intelligence in Design 96, </booktitle> <publisher> Kluwer Academic Publishers. </publisher> <address> http:// www.ie.utoronto.ca/EIL/public/ aid96/cbret1.html </address>
Reference-contexts: We are developing a Knowledge Aided Design (KAD) system to address many issues that arise in that particular setting <ref> [1] </ref> [9] [10]. A major issue in concurrent engineering or collaborative design is the creation and maintenance of a suitable representation for design knowledge that will be shared by many design engineers. This knowledge includes many concepts such as component structure, features, parameters, constraints, requirements, and more.
Reference: [2] <author> Black, J. E. </author> <title> AI assistance for requirements management. </title> <booktitle> Concurrent Engineering: Research and Applications (1994) 2, </booktitle> <pages> 255-264. </pages>
Reference: [3] <author> Borgida, A., Greenspan, S. and Mylopoulos, J. </author> <title> Knowledge Representation as the Basis for Requirements Specification IEEE Computer, </title> <booktitle> 18 </booktitle> <pages> 82-91, </pages> <year> 1985. </year>
Reference: [4] <author> Dixon J.R., Cunningham J.J., </author> <title> Simmons M.K., Research in designing with features, in Intelligent CAD I, </title> <editor> eds. Yoshikawa H., Gossard D., </editor> <booktitle> Proc. IFIP TC 5/ WG 5.2 workshop on intelligent CAD, </booktitle> <publisher> Elsevier, </publisher> <year> 1987, </year> <pages> 137-148. </pages>
Reference-contexts: of p 2 and there is no p such that p 1 is a component of p and p is a component of p 2 . 4.2 Features There are different kinds of features associated with a part, e.g., geometrical features, functional features, assembly features, mating features, physical features, etc. <ref> [4] </ref> [18]. We focus on geometrical and functional features. Examples of geometrical features are hole, slot, channel, groove, boss, pad, etc.; these are also called form features. Designers usually have in mind the purposes that they want these features to serve.
Reference: [5] <author> Dym, Clive L. </author> <title> Engineering Design: A Synthesis of Views. </title> <publisher> Cambridge University Press, </publisher> <year> 1994. </year>
Reference: [6] <author> Fox, M., Chionglo, J.F., and Fadel, </author> <title> F.G. A Common Sense Model of the Enterprise, </title> <booktitle> Proceedings of the 2nd Industrial Engineering Research Conference, </booktitle> <pages> pp. 425-429, </pages> <address> Norcross GA: </address> <institution> Institute for Industrial Engineers. </institution> <address> http://www.ie.utor-onto.ca/EIL/papers/ abstracts/14.html </address>
Reference-contexts: As in <ref> [6] </ref>, we are interested in a formal and rigorous approach to the representation of knowledge. We adopt the first-order logic in developing the ontology. Our approach is: To provide a terminology for design that can be shared by all the engineers involved.
Reference: [7] <author> Fox, M.S., Finger, S., Gardner, E., Navin chandra, D., Safier, S.A., and Shaw, M., </author> <title> Design Fusion: An Architecture for Concurrent Design, in Knowledge-aided Design, </title> <publisher> Academic Press Ltd., </publisher> <address> London, UK, </address> <booktitle> edited by Green, M., </booktitle> <pages> pp. 157-195, </pages> <year> 1992. </year>
Reference: [8] <author> Fox, </author> <title> M.S., Salustri, F.A. A One-Off Systems Engineering Model, </title> <booktitle> AAAI Workshop on Artificial Intelligence and Systems Engineering, </booktitle> <month> August </month> <year> 1994, </year> <institution> Seattle, </institution> <address> Washington. http://www.ie.utoronto.ca/EIL/papers/abstracts/33.html </address>
Reference-contexts: Authors of requirements use different terminology and hence the same term is applied to different concepts and different terms are used to denoted the same entity. Requirements are also changed frequently during the design process due to the changes of technology and customer's objectives <ref> [8] </ref>. Documents have to be maintained about requirements detailing: (i) decisions made on the scope of the requirements, (ii) resolution of ambiguous statements, and traceability links between requirements and the system specification and owners and approvers. Requirements are usually constructed in accordance with legislation and standards. <p> These notions, together with the ontology described in the earlier sections constitute tools for reasoning about requirements and hence addressing issues raised. In Section 7, we give some example queries to show how the issues are tackled within our formalism. Section 8 concludes the paper. 2 Motivation In <ref> [8] </ref>, Fox and Salustri present a model of systems engineering suitable for the design of complex artifacts. The artifact is usually composed of many sub-systems which in turn composed of other sub-systems or components. Customer requirements are decomposed into requirements for the various sub-systems.
Reference: [9] <author> Gupta, L., J. Chionglo, and M. S. </author> <title> Fox (1996) A Constraint Based Model of Coordination in Concurrent Design Projects, </title> <note> to appear in the proceedings of WET-ICE96. http://www.ie.utoronto.ca/EIL/DITL/WET-ICE96/Project-Coordination/WETICE96_ProjectCoordination.fm.html </note>
Reference-contexts: We are developing a Knowledge Aided Design (KAD) system to address many issues that arise in that particular setting [1] <ref> [9] </ref> [10]. A major issue in concurrent engineering or collaborative design is the creation and maintenance of a suitable representation for design knowledge that will be shared by many design engineers. This knowledge includes many concepts such as component structure, features, parameters, constraints, requirements, and more.
Reference: [10] <author> Gwizdka, J., L. Louie, and M. S. </author> <title> Fox (1996), EEN: A Pen-based Electronic Notebook for Unintrusive Acquisition of Engineering Design Knowledge, </title> <note> to appear in the proceedings of WET-ICE96. http://www.ie.utoronto.ca/EIL/DITL/ WET-ICE96/ EEN/EEN_WetIce96.html </note>
Reference-contexts: We are developing a Knowledge Aided Design (KAD) system to address many issues that arise in that particular setting [1] [9] <ref> [10] </ref>. A major issue in concurrent engineering or collaborative design is the creation and maintenance of a suitable representation for design knowledge that will be shared by many design engineers. This knowledge includes many concepts such as component structure, features, parameters, constraints, requirements, and more.
Reference: [11] <editor> Green, M. (Ed.) </editor> <booktitle> Knowledge-aided Design. </booktitle> <address> London UK: </address> <publisher> Academic Press Ltd. </publisher> <year> 1992. </year>
Reference: [12] <author> Gruninger, M., and Fox, M.S., </author> <year> (1994), </year> <title> The Design and Evaluation of Ontologies for Enterprise Engineering, </title> <booktitle> Workshop on Implemented Ontologies, European Conference on Artificial Intelligence (ECAI) 1994, </booktitle> <address> Amsterdam, NL. http://www.ie.utoronto.ca/EIL/ public/onto_ecai94.ps </address>
Reference-contexts: We also designed a symbology for depicting the objects of the ontology in a graphical context deployed in the engineering interface. 3.1 Competency of the Ontology We follow the methodology for the design and evaluation of ontologies as described in <ref> [12] </ref>. We first identify the problems in the domain that the ontology is trying to address. These problems are given in the forms of questions which the ontology is intended to answer. This group of questions is called competency of the ontology.
Reference: [13] <author> Hoffman, D. </author> <title> A overview of concurrent engineering. </title> <booktitle> Tutorial Notes of 1994 Annual Reliability and Maintainability Symposium, </booktitle> <address> California, </address> <month> January </month> <year> 1994. </year>
Reference-contexts: 1 Introduction Requirements Management is one of the key elements that must be addressed by concurrent engineering (CE) <ref> [13] </ref>. Yet the representation and management of requirements is problematic in CE. Requirements are often ambiguous, incomplete and redundant in a CE environment. There is a lack of traceability of the requirements and insufficient decomposition of requirements [14].
Reference: [14] <author> Kott, A. and Peasant, J. L. </author> <title> Representation and management of requirements: The RAPID-WS project. Concurrent Engineering: </title> <journal> Research and Applications. </journal> <volume> Vol. No. 2. </volume> <pages> Pages 93-106. </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: Yet the representation and management of requirements is problematic in CE. Requirements are often ambiguous, incomplete and redundant in a CE environment. There is a lack of traceability of the requirements and insufficient decomposition of requirements <ref> [14] </ref>. Requirements generated by different members in a concurrent engineering team may be contradictory since different authors may have different perspectives on the system [19].
Reference: [15] <author> Morris, P., Masera, M. & Wilikens, M. </author> <title> Industrial workshop on requirements engineering: A report on the results obtained. Held on October 16-17 1995, </title> <booktitle> Joint Research Cen-tre, </booktitle> <address> Ispra, Italy. </address>
Reference: [16] <institution> Product Data Representation and Exchange Part 44 - Integrated Resources: Product Structure Configuration, ISO 10303-44, </institution> <year> 1992. </year>
Reference: [17] <author> Roman, G.-C. </author> <title> A taxonomy of current issues in requirement engineering. </title> <booktitle> IEEE Computer, </booktitle> <pages> pp. 14-21, </pages> <month> April </month> <year> 1985. </year>
Reference: [18] <author> Salomons O.W., Houten F.J.A.M. van, Kals H.J.J., </author> <title> Review of research in feature-based design, </title> <journal> Journal of Manufacturing Systems, Vol.12, </journal> <volume> No. 2, </volume> <year> 1993, </year> <pages> 113-132. </pages>
Reference-contexts: p 2 and there is no p such that p 1 is a component of p and p is a component of p 2 . 4.2 Features There are different kinds of features associated with a part, e.g., geometrical features, functional features, assembly features, mating features, physical features, etc. [4] <ref> [18] </ref>. We focus on geometrical and functional features. Examples of geometrical features are hole, slot, channel, groove, boss, pad, etc.; these are also called form features. Designers usually have in mind the purposes that they want these features to serve.
Reference: [19] <author> Yen, J., Liu, X. and Teh, S. H. </author> <title> A fuzzy logic-based methodology for the acquisition and analysis of imprecise requirements. </title> <booktitle> Concurrent Engineering: Research and Applications (1994) 2, </booktitle> <pages> 265-277. </pages>
Reference-contexts: Requirements are often ambiguous, incomplete and redundant in a CE environment. There is a lack of traceability of the requirements and insufficient decomposition of requirements [14]. Requirements generated by different members in a concurrent engineering team may be contradictory since different authors may have different perspectives on the system <ref> [19] </ref>. Authors of requirements use different terminology and hence the same term is applied to different concepts and different terms are used to denoted the same entity. Requirements are also changed frequently during the design process due to the changes of technology and customer's objectives [8].
References-found: 19

