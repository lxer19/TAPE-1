URL: http://www.cs.cmu.edu/~sanjay/BTPpaper.ps
Refering-URL: http://www.cs.cmu.edu/~sanjay/serious.html
Root-URL: 
Email: Email: sanjay@cs.cmu.edu, svr@iitm.ernet.in  
Phone: Fax: +91 44 235 0509 Phone: +91 44 235 1365 ext 3501  
Title: Fast Techniques for the Optimal Smoothing of Stored Video mation scheme" that produces a schedule
Author: Sanjay G. Rao and S.V.Raghavan 
Note: The author is currently a Doctoral Candidate at the  
Address: Madras 600 036  
Affiliation: Department of Computer Science and Engineering, Indian Institute of Technology,  School of Computer Science, Carnegie Mellon University  
Abstract: In this paper, we examine the practical considerations of heterogeneous and dynamically-variable client buffer sizes, variable worst-case network jitter estimates, and client interactivity. These conditions require on-line computation of the optimal transfer schedule. We focus on techniques for reducing on-line computation time. Specifically, (i) we present an algorithm for precomputing and storing the optimal schedules for all possible client buffer sizes, in a compact manner; (ii) we show that it is theoretically possible to precompute and store compactly the optimal schedules for all possible estimates of worst-case network jitter; (iii) in the context of playback resumption after client interactivity, we show convergence of the recomputed schedule with the original schedule, implying greatly reduced on-line computation time; and (iv) we propose and empirically evaluate an "approxi 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D.Le Gall. </author> <title> "MPEG: A video compression standard for multimedia applications". </title> <journal> CACM, </journal> <volume> vol. 34, </volume> <month> Apr </month> <year> 1991, </year> <pages> pp 46-58. </pages>
Reference-contexts: For each video, we fixed the block-size g to be equal to the GOP of that video. The GOP of a video is the number of frames between consecutive I-pictures in its compression pattern <ref> [1] </ref>. The GOP of Starwars is 12, of Advertisements 6, of Jurassic 12, of MTV 12, and of Wizard 15. Let P A,SA and CA (P O,SO,CO) denote respectively the peak, standard deviation and com putation time of the approximate (optimal) schedule.
Reference: [2] <author> J.K.Dey, Subhabrata Sen, J.F.Kurose, Don Towsley and J.D.Salehi. </author> <title> "Playback restart in interactive streaming video applications". </title> <booktitle> IEEE Conference on Multimedia Computing and Systems, </booktitle> <address> Ottawa, Canada, </address> <month> June </month> <year> 1997. </year>
Reference-contexts: Further, their method is not applicable when there is a change 12 in smoothing constraints during the presentation (such as dynamic change of client buffer or worst-case network jitter estimates) when a recomputation of the optimal schedule becomes unavoidable. Dey et al <ref> [2] </ref> have considered the problem of playback restart after an interaction. They propose an algorithm by which the restart latency can be minimized, assuming transfer bounded by a particular peak-rate determined by the original schedule of transfer.
Reference: [3] <author> W.Feng, F.Jahanian and S.Sechrest. </author> <title> "An Optimal Bandwidth Allocation Strategy for the Delivery of Compressed Prerecorded Video." </title> <journal> ACM/Springer-Verlag Multimedia Systems Journal, </journal> <volume> Vol. 5, No. 5, </volume> <month> September </month> <year> 1997, </year> <pages> pp 297-309. </pages>
Reference-contexts: The technique requires that the server compute a schedule of video transfer that ensures the client buffer neither overflows nor underflows. Several algorithms have been suggested for computing the schedule of transfer for a given video <ref> [3] </ref>, [13], [10] (See [5] for a survey). <p> The algorithms differ from one another with respect to the criterion they optimize. [6] minimizes the number of rate increases, <ref> [3] </ref> the total number of rate changes and [10] minimizes client buffer requirements for a constraint on the total number of CBR transmission segments.
Reference: [4] <author> W.Feng, F.Jahnian and S.Sechrest. </author> <title> "Providing VCR functionality in a Constant Quality video-on-demand transportation service". </title> <booktitle> IEEE Multimedia 1996, </booktitle> <address> Hiroshima, Japan, </address> <month> June </month> <year> 1996, </year> <pages> pp 127-135. </pages>
Reference-contexts: Our findings indicate that (i) the speedup achieved is proportional to the block-size, and (ii) in general, larger block-sizes result in poorer approximations, however, exceptions do occur for MPEG-video because of the encoding pattern. See [14] for details. 7 Related Work Feng et al <ref> [4] </ref> have considered the problem of inter-activity in the context of work-ahead smoothing. They introduce the notion of "VCR-window" and demonstrate that for large buffers above 25 MB, most requests for rewind could be handled within the window itself, from the data residing within the smoothing buffer.
Reference: [5] <author> W. Feng and J. Rexford. </author> <title> "A comparison of bandwidth smoothing techniques for the transmission of prerecorded compressed video". </title> <booktitle> IEEE INFOCOM, </booktitle> <address> Kobe, Japan, </address> <month> April </month> <year> 1997, </year> <pages> pp 58-66. </pages>
Reference-contexts: The technique requires that the server compute a schedule of video transfer that ensures the client buffer neither overflows nor underflows. Several algorithms have been suggested for computing the schedule of transfer for a given video [3], [13], [10] (See <ref> [5] </ref> for a survey). Briefly, these algorithms assume a pair of constraints D (t),B (t) which respectively denote the minimum cumulative data which the server must transmit by time t to prevent underflow and the maximum cumulative data which the server may transmit by time t without overflow.
Reference: [6] <author> W. Feng and S. Sechrest. </author> <title> "Critical Bandwidth allocation for delivery of compressed video". </title> <journal> Computer Communications, </journal> <volume> Vol. 18, </volume> <pages> pp 709-717, </pages> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: The algorithms differ from one another with respect to the criterion they optimize. <ref> [6] </ref> minimizes the number of rate increases, [3] the total number of rate changes and [10] minimizes client buffer requirements for a constraint on the total number of CBR transmission segments. <p> f a1 &gt; and &lt; b a2 ; a2; f a2 &gt; of list Q, and an entry already 3 Interestingly, the optimal schedule for infinite client buffer as computed according to the algorithm in [13] is identical to the schedule produced using another smoothing algorithm the Critical Bandwidth Algorithm <ref> [6] </ref> exists in Q 8t; t &lt; a1; t 2 T . Step 7 verifies if 9t 2 T in the interval (a1; a2).
Reference: [7] <author> M. Garrett and W. Willinger. </author> <title> "Analysis, Mod-elling and Generation of Self-Similar VBR Video Traffic." </title> <booktitle> Proc ACM SIGCOMM, </booktitle> <volume> Vol. 24, No. 4, </volume> <month> Aug. </month> <year> 1994, </year> <pages> pp 269-280. </pages>
Reference-contexts: Then, (a) The concave critical points of A2 are a superset of the concave critical 4 All traces were VBR-encoded using an MPEG-1 software encoder. The videos had length as follows (in minutes): Advertisements [8] 9, Jurassic [12] 28, MTV [12] 28, and Wizard [9] 23. Starwars <ref> [7] </ref> was about 2 hours long. points of A1. (b) If A1 has a convex critical point at t, A2 has a convex critical point at t + J 2 J1. The proof is similar to Corollary 1 and is omitted. <p> We thank Jayanta Dey for his encouragement and the anonymous referees of the paper for relevant remarks. The traces we used were obtained from Mark Garrett <ref> [7] </ref>, Ed Knightly [8], Marwan Krunz [9] and Oliver Rose [12].
Reference: [8] <author> E.W.Knightly, D.E.Wrege, J.Liebeherr and H.Zhang. </author> <title> "Fundamental Limits and Tradeoffs of Providing Deterministic Guarantees to VBR Video Traffic". </title> <journal> Proc. ACM SIGMET-RICS, </journal> <volume> Vol. 23, No. 1, </volume> <month> May </month> <year> 1995, </year> <pages> pp 98-107. </pages>
Reference-contexts: Then, (a) The concave critical points of A2 are a superset of the concave critical 4 All traces were VBR-encoded using an MPEG-1 software encoder. The videos had length as follows (in minutes): Advertisements <ref> [8] </ref> 9, Jurassic [12] 28, MTV [12] 28, and Wizard [9] 23. Starwars [7] was about 2 hours long. points of A1. (b) If A1 has a convex critical point at t, A2 has a convex critical point at t + J 2 J1. <p> We thank Jayanta Dey for his encouragement and the anonymous referees of the paper for relevant remarks. The traces we used were obtained from Mark Garrett [7], Ed Knightly <ref> [8] </ref>, Marwan Krunz [9] and Oliver Rose [12].
Reference: [9] <author> M.Krunz and H.Hughes. </author> <title> "A Traffic Model for MPEG-Coded VBR Streams". </title> <booktitle> Proc. ACM SIGMETRICS, </booktitle> <volume> Vol. 23, No. 1, </volume> <month> May </month> <year> 1995, </year> <pages> pp 47-55. </pages>
Reference-contexts: Then, (a) The concave critical points of A2 are a superset of the concave critical 4 All traces were VBR-encoded using an MPEG-1 software encoder. The videos had length as follows (in minutes): Advertisements [8] 9, Jurassic [12] 28, MTV [12] 28, and Wizard <ref> [9] </ref> 23. Starwars [7] was about 2 hours long. points of A1. (b) If A1 has a convex critical point at t, A2 has a convex critical point at t + J 2 J1. The proof is similar to Corollary 1 and is omitted. <p> We thank Jayanta Dey for his encouragement and the anonymous referees of the paper for relevant remarks. The traces we used were obtained from Mark Garrett [7], Ed Knightly [8], Marwan Krunz <ref> [9] </ref> and Oliver Rose [12].
Reference: [10] <author> J.M.McManus and K.W.Ross. </author> <title> "Video on Demand over ATM: Constant Rate Transmission and Transport". </title> <journal> IEEE JSAC, </journal> <volume> Vol. 14, No. 6, </volume> <month> August </month> <year> 1996. </year>
Reference-contexts: The technique requires that the server compute a schedule of video transfer that ensures the client buffer neither overflows nor underflows. Several algorithms have been suggested for computing the schedule of transfer for a given video [3], [13], <ref> [10] </ref> (See [5] for a survey). Briefly, these algorithms assume a pair of constraints D (t),B (t) which respectively denote the minimum cumulative data which the server must transmit by time t to prevent underflow and the maximum cumulative data which the server may transmit by time t without overflow. <p> The algorithms differ from one another with respect to the criterion they optimize. [6] minimizes the number of rate increases, [3] the total number of rate changes and <ref> [10] </ref> minimizes client buffer requirements for a constraint on the total number of CBR transmission segments. In this paper, we base our work on the optimal smoothing algorithm proposed in [13], which produces a schedule that has minimum peak, variance and rate variability. <p> We now describe several situations where the server needs to compute the schedule of transfer on-line. In heterogeneous environments, where users purchase set-top boxes corresponding to their budget and requirements, the client buffer sizes can vary from a few hundred kilobytes to over a gigabyte <ref> [10] </ref>. The work-ahead constraint B (t) varies with client buffer size as B (t) = minfD (t 1) + b; D (N )g, resulting in a variation of the optimal schedule with client buffer size.
Reference: [11] <author> J. Rexford, S. Sen,J. Dey,W. Feng,J. Kurose, J. Stankovic and D. Towsley. </author> <title> "Online Smoothing of Live, Variable-Bit-Rate Video". </title> <booktitle> Proceedings of the International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> St.Louis,MO, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: Again, their technique is not applicable when there is a change of smoothing constraints during the presentation. Rexford et al <ref> [11] </ref> have considered work-ahead smoothing of live video, where there is only a limited knowledge of frame-sizes in the future (made possible by the introduction of delay at the source).
Reference: [12] <author> Oliver Rose. </author> <title> "Statistical properties of MPEG video traffic and their impact on traffic mod-elling in ATM systems". </title> <booktitle> Proceedings of the 20th Annual Conference on Local Computer Networks, </booktitle> <address> Minneapolis, MN, </address> <month> Oct </month> <year> 1995. </year>
Reference-contexts: Then, (a) The concave critical points of A2 are a superset of the concave critical 4 All traces were VBR-encoded using an MPEG-1 software encoder. The videos had length as follows (in minutes): Advertisements [8] 9, Jurassic <ref> [12] </ref> 28, MTV [12] 28, and Wizard [9] 23. Starwars [7] was about 2 hours long. points of A1. (b) If A1 has a convex critical point at t, A2 has a convex critical point at t + J 2 J1. <p> Then, (a) The concave critical points of A2 are a superset of the concave critical 4 All traces were VBR-encoded using an MPEG-1 software encoder. The videos had length as follows (in minutes): Advertisements [8] 9, Jurassic <ref> [12] </ref> 28, MTV [12] 28, and Wizard [9] 23. Starwars [7] was about 2 hours long. points of A1. (b) If A1 has a convex critical point at t, A2 has a convex critical point at t + J 2 J1. The proof is similar to Corollary 1 and is omitted. <p> We thank Jayanta Dey for his encouragement and the anonymous referees of the paper for relevant remarks. The traces we used were obtained from Mark Garrett [7], Ed Knightly [8], Marwan Krunz [9] and Oliver Rose <ref> [12] </ref>.
Reference: [13] <author> J.D.Salehi, Zhi-Li Zhang, J.F.Kurose and Don Towsley. </author> <title> "Supporting Stored Video: Reducing Rate Variability and End-to-End Resource Requirements through Optimal Smoothing". </title> <booktitle> Proc. ACM SIGMETRICS, </booktitle> <month> May </month> <year> 1996, </year> <pages> pp 222-231. </pages> <note> Also, to appear in IEEE/ACM Transactions on Networking. </note>
Reference-contexts: The technique requires that the server compute a schedule of video transfer that ensures the client buffer neither overflows nor underflows. Several algorithms have been suggested for computing the schedule of transfer for a given video [3], <ref> [13] </ref>, [10] (See [5] for a survey). <p> In this paper, we base our work on the optimal smoothing algorithm proposed in <ref> [13] </ref>, which produces a schedule that has minimum peak, variance and rate variability. Section 2 presents an overview of this algorithm. We will refer to the algorithm in [13] as the optimal algorithm and to the resulting schedule as the optimal schedule. <p> In this paper, we base our work on the optimal smoothing algorithm proposed in <ref> [13] </ref>, which produces a schedule that has minimum peak, variance and rate variability. Section 2 presents an overview of this algorithm. We will refer to the algorithm in [13] as the optimal algorithm and to the resulting schedule as the optimal schedule. The model assumed by the above smoothing algorithms is static in the sense that the constraints D; B are assumed fixed throughout the presentation. <p> The reader is referred to <ref> [13] </ref> for the actual algorithm. The complexity is O (N 2 ) but an O (N ) algorithm is also discussed. Points of rate increase or rate decrease are called change points, the former being referred to as convex and the latter as concave. <p> This could potentially result in dynamic variation of the buffer available for smoothing during the presentation, and necessitate on-line schedule recomputation. The client may be connected to the server via a network with highly variable and potentially unbounded jitter, such as Ethernet or the Internet. In <ref> [13] </ref> it is assumed that the server estimates apriori the worst-case end-to-end jitter over the entire length of video playback. <p> Consequently the original schedule cannot be used directly and a new optimal schedule A1 needs to be computed. The optimal off-line algorithm proposed in <ref> [13] </ref> takes roughly 6-8 seconds to smooth a 174000 frame trace on an SGI workstation with a 150 MHz R4400 processor. However, it is conceivable that this overhead may be unacceptably high in an on-line situation. <p> holds: The Pointers First and Second point to adjacent entries &lt; b a1 ; a1; f a1 &gt; and &lt; b a2 ; a2; f a2 &gt; of list Q, and an entry already 3 Interestingly, the optimal schedule for infinite client buffer as computed according to the algorithm in <ref> [13] </ref> is identical to the schedule produced using another smoothing algorithm the Critical Bandwidth Algorithm [6] exists in Q 8t; t &lt; a1; t 2 T . Step 7 verifies if 9t 2 T in the interval (a1; a2). <p> Typically, the very first frame of the video is much larger than its immediately subsequent frames and a start-up latency of s units may be introduced to smooth its transmission <ref> [13] </ref>. However, the approximation scheme results in an increase in the size of the first frame due to aggregation, which offsets the benefits of the start-up latency. Further, with the approximation scheme, no data is transmitted in the last g 1 (g is the block size) frame times. <p> An interesting question that has not been explored is the cumulative costs associated with repeated on-line computation. 8 Summary and Conclusions Work-ahead smoothing is a technique whereby a server transmits stored video to a client in accordance with a computed schedule of transfer. Past work <ref> [13] </ref> established an algorithm that computes a schedule, which optimally minimizes peak, variance and rate-variability of the transmitted stream, under the assumptions of fixed client buffer size, known worst-case network jitter and strict playback of the client video.
Reference: [14] <author> G.Sanjay. </author> <title> "Work-ahead Smoothing of Video Traffic for Interactive Multimedia Applications", </title> <type> Bachelor's Thesis, </type> <institution> Indian Institute of Technology, Madras. May,1997. </institution> <month> 14 </month>
Reference-contexts: For each video, a speedup close to block-size was achieved across all client buffer sizes. (block-size 12) shows around a 12 time speed-up across all client buffer sizes. Finally, in <ref> [14] </ref>, we investigate the impact of varying the block-size on the performance of the approximation scheme. Our findings indicate that (i) the speedup achieved is proportional to the block-size, and (ii) in general, larger block-sizes result in poorer approximations, however, exceptions do occur for MPEG-video because of the encoding pattern. <p> Our findings indicate that (i) the speedup achieved is proportional to the block-size, and (ii) in general, larger block-sizes result in poorer approximations, however, exceptions do occur for MPEG-video because of the encoding pattern. See <ref> [14] </ref> for details. 7 Related Work Feng et al [4] have considered the problem of inter-activity in the context of work-ahead smoothing.
References-found: 14

