URL: http://www.cri.ensmp.fr/doc/A-256.ps.Z
Refering-URL: http://www.cri.ensmp.fr/rapports.html
Root-URL: 
Title: Minimal Data Dependence Abstractions for Loop Transformations  
Author: Yi-Qing Yang Corinne Ancourt Fran~cois Irigoin 
Address: 77305 Fontainebleau Cedex France  
Affiliation: Ecole des Mines de Paris/CRI  
Abstract: Many abstractions of program dependences have already been proposed, such as the Dependence Distance, the Dependence Direction Vector, the Dependence Level or the Dependence Cone. These different abstractions have different precision. The minimal abstraction associated to a transformation is the abstraction that contains the minimal amount of information necessary to decide when such a transformation is legal. The minimal abstractions for loop reordering and unimodular transformations are presented. As an example, the dependence cone, that approximates dependences by a convex cone of the dependence distance vectors, is the minimal abstraction for unimodular transformations. It also contains enough information for legally applying all loop reordering transformations and finding the same set of valid mono- and multi-dimensional linear schedulings than the dependence distance set. 
Abstract-found: 1
Intro-found: 1
Reference: [AlKe87] <author> R. Allen, K. Kennedy, </author> <title> "Automatic Translation of FORTRAN Programs to Vector Form," </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> Vol. 9, No. 4. </volume> <pages> pp. 491-542, </pages> <month> Oct. </month> <year> 1987. </year>
Reference-contexts: Dependence relations are represented by finite dependence abstractions that contain the data flow dependences of the statement set. Many dependence abstractions have already been proposed, such as the Dependence Distance [Mura71], the Dependence Direction Vector [Wolf82], the Dependence Level <ref> [AlKe87] </ref> or the Dependence Cone [IrTr87]. These different abstractions have different precisions. They are presented in Sections 2 and 3. <p> However, transformations such as loop interchange or permutation, that only modify the sign or the order of the iteration set, do not need the actual distance information. So, abstractions like DDV (L) [Wolf82] and DL (L) <ref> [AlKe87] </ref> relating only the sign or the level of dependence vectors have been suggested. q q q q q q q q - - dj Each Dependence Direction Vector element is one of f&lt; ; =; &gt;g. <p> It is represented in Figure 6. 2.6 The Dependence Level The dependence level DL has been introduced by Allen & Kennedy <ref> [AlKe87] </ref> for the vectorization and parallelization of programs. It gives the nest level of the outermost loop l that carries dependences, when dependence vector component is positive. To preserve the program semantics, Loop l must be kept sequential. <p> As such exam ples, the dependence direction vector was proposed by 11 M. Wolfe for loop interchanging [Wolf82] and the de-pendence level by Allen & Kennedy for the vectoriza-tion and the parallelization of programs <ref> [AlKe87] </ref>. The dependence direction vector has been the most popular dependence abstraction, because it has been successfully used for some important transformations such as loop interchanging and loop permutation. Moreover, its computation is easy and its representation in the dependence graph handy.
Reference: [Bane89] <author> U. Banerjee, </author> " <title> A Theory of Loop Permutations," </title> <booktitle> 2nd Workshop on Languages and compilers for parallel computing, </booktitle> <year> 1989 </year>
Reference-contexts: The test of legality associated to the minimal abstraction DL is: legal (Invers k ; L) () k 62 DL (L) () projection (DL (L); k) = ;: 5.2 Loop permutation A loop permutation transformation <ref> [Bane89] </ref> P erm P (L) performs permutation P on the n-dimensional iteration set of the loop nest L = (l 1 ; l 2 ; ::; l n ).
Reference: [Bane90] <author> U. Banerjee, </author> " <title> Unimodular Transformation of Double Loops," </title> <booktitle> 3rd Workshop on Programming Languages and Compilers for Parallel Computing, </booktitle> <address> Irvine, </address> <year> 1990 </year>
Reference-contexts: As for restructuring transformations, when an abstraction Ab different from DI is used, a definition using dependences in function of f DI Ab is derived from Defi nition 4. 4.1.1 Unimodular transformation An unimodular transformation <ref> [Bane90] </ref>, [WoLa91], [LiPi92] is a bijection between two iteration sets I n and I 0 n having the same dimension. It corresponds to an unimodular change of basis M with ~ I 0 = M fi ~ I.
Reference: [Bane93] <author> U. Banerjee, </author> <title> "Loop transformations for restructuring compilers: the foundations," </title> <publisher> Kluwer Academic Editor, </publisher> <year> 1993 </year>
Reference-contexts: The new execution of statement instances must preserve all the loop nest lexico-positive dependences <ref> [Bane93] </ref>.
Reference: [Bern66] <author> A. J. Bernstein, </author> <title> "Analysis of Programs for Parallel Processing," </title> <journal> IEEE Transactions on Electronic Computers, </journal> <volume> Vol. EC-15, No. 5, </volume> <month> Oct. </month> <year> 1966. </year>
Reference: [Dhol89] <author> E. D'hollander, </author> <title> "Partitioning and Labeling of Index Sets in Do Loops with Constant Dependence Vectors," </title> <booktitle> International Conference on Parallel Processing, </booktitle> <year> 1989 </year>
Reference-contexts: The test of legality associated to the minimal abstraction is: legal (T U M ; L) () ^ 1ik (M fi DC i 0) with DC (L) = ([ 1ik DC i ). 5.4 Partitioning A partitioning transformation [KMW67], [Lamp74], [IrTr88a], <ref> [Dhol89] </ref> P art H applied on a n-dimensional loop nest splits the iteration space into p parallel hyper-plans. <p> In this section, we show that the use of the dependence cone abstraction allows to get the same set of valid linear schedulings as the dependence distance vector. However, when the computation of the linear scheduling depends on particular distance vector characteristics (uniform) <ref> [Dhol89] </ref>, the dependence cone that approximates the distance vectors cannot be used for defining the linear scheduling but only for testing its validity. 6.1 One-dimensional linear scheduling The one-dimensional linear scheduling is also called the hyperplane method.
Reference: [DaRo92] <author> A. Darte, Y. Robert, </author> <title> "Scheduling Uniform Loop Nests," </title> <institution> Rapport de Laboratoire de l'informatique du Paralle'lisme, Ecole Normale Sup'erieure de Lyon', </institution> <note> No. 92-10, Fev. 1992. 12 </note>
Reference-contexts: The dependence abstraction is used for computing a valid linear schedule. Most of the algorithms proposed in the literature [Dhol89],[ShFo91] <ref> [DaRo92] </ref> [DaRR92] require that the dependences are uniforms or are approximated by dependence distance vectors. This condition is too restrictive for real programs.
References-found: 7

