URL: ftp://ftp.cc.gatech.edu/pub/gvu/tr/1996/96-18.ps.Z
Refering-URL: http://www.cs.gatech.edu/gvu/reports/1996/
Root-URL: 
Phone: 2  
Title: Do Algorithm Animations Aid Learning?  
Author: Michael D. Byrne Richard Catrambone John T. Stasko 
Address: Atlanta, GA 30332-0170  Atlanta, GA 30332-0280  
Affiliation: 1 School of Psychology Georgia Institute of Technology  College of Computing Georgia Institute of Technology  
Abstract: Technical Report GIT-GVU-96-18 August 1996 Abstract Two experiments examined the general claim that animations can help students learn algorithms more effectively. Animations and instructions that explicitly required learners to predict the behavior of an algorithm were used during training. Post-test problems were designed to measure how well learners could predict algorithm behavior in new situations as well as measure learners' conceptual understanding of the algorithms. In Experiment 1, we found that when learners both viewed an animation and made predictions their performance on novel problems improved compared to a control group's, but the effects of the two manipulations were not distinguishable. In Experiment 2, no effect was found for conceptual measures of learning, but a marginally reliable effect similar to the one seen in Experiment 1 was found for procedural problems. The results from the two experiments suggest that the benefits of animations are not obvious and that in order to determine whether animations can truly aid understanding, teachers and researchers should consider a careful task analysis ahead of time to determine the specific pieces of knowledge that an animation can help a learner acquire and/or practice. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Anderson, J.R. </author> <year> (1993). </year> <title> Rules of the mind. </title> <address> Hillsdale, NJ: </address> <publisher> Erlbaum. </publisher>
Reference-contexts: As previously discussed, there are a number of ways that animations might help learners. Because feedback is a critical element in various psychological theories of how people acquire procedural knowledge <ref> (e.g. Anderson, 1993) </ref>, we decided to concentrate on the "make and test predictions" aspect of algorithm animation. Both of the experiments presented here manipulate whether learners see animations and whether they are asked to make explicit predictions about algorithm behavior (and receive feedback from their predictions).
Reference: <author> Baecker, R., & Small, I. </author> <year> (1990). </year> <title> Animation at the interface. </title> <editor> In B. Laurel (Ed.), </editor> <booktitle> The art of human-computer interface design. </booktitle> <address> Reading, MA: </address> <publisher> Addison-Wesley (251-267). </publisher>
Reference-contexts: Computer scientists use animation to help viewers track patterns and observe relationships (Robertson, Card, & Mackinlay, 1993). Animation has been used to explain principles and laws of motion (Rieber, Boyce, & Assad, 1990), to provide online help with interface tasks (Sukaviriya, 1990), and to help users follow interface operations <ref> (Baecker & Small, 1990) </ref>. Formal studies about the effect of animation on understanding have provided mixed results.
Reference: <author> Brown, M.H. </author> <year> (1988a). </year> <title> Perspectives on algorithm animation. </title> <booktitle> In Proceedings of the ACM SIGCHI '88 Conference on Human Factors in Computing Systems, </booktitle> <pages> 33-38. </pages>
Reference-contexts: Our focus is the use of animation to teach programming and to teach students how algorithms work. This is called algorithm animation <ref> (Brown, 1988a) </ref>, and is one particular instance of software visualization (Price, Baecker, & Small, 1993) which is the use of images, graphics, and animation to illustrate computer algorithms, programs, and processes. The video Sorting Out Sorting, presented at SIGGRAPH '81, is generally credited with initiating the field of algorithm animation.
Reference: <author> Brown, M.H. </author> <year> (1988b). </year> <title> Exploring algorithms using Balsa-II. </title> <journal> Computer, </journal> <volume> 21 (5), </volume> <pages> 14-36. </pages>
Reference: <author> Brown, M.H. </author> <year> (1991). </year> <title> ZEUS: A system for algorithm animation and multi-view editing. </title> <booktitle> In Proceedings of the 1991 IEEE Workshop on Visual Languages, </booktitle> <pages> 4-9. </pages>
Reference: <author> Catrambone, R. </author> <year> (1996). </year> <title> Generalizing solution procedures learned from examples. Journal of Experimental Psychology: Learning, Memory, </title> <journal> and Cognition, </journal> <volume> 22(4), </volume> <pages> 1020-1031. </pages>
Reference: <author> Chi, M.T.H., Bassok, M., Lewis, R., Reimann, P., & Glaser, R. </author> <year> (1989). </year> <title> Self-explanations: How students study and use examples in learning to solve problems. </title> <journal> Cognitive Science, </journal> <volume> 13, </volume> <pages> 145-182. </pages>
Reference: <author> Chi, M.T.H., De Leeuw, N., Mei-Hung, C., & Levancher, C. </author> <year> (1994). </year> <title> Eliciting self explanations. </title> <journal> Cognitive Science, </journal> <volume> 18, </volume> <pages> 439-477. </pages>
Reference: <author> Cohen, J. </author> <year> (1988). </year> <title> Statistical power analysis for the behavioral sciences (2nd ed.). </title> <address> Hillsdale, NJ: </address> <publisher> Erlbaum. </publisher>
Reference-contexts: parentheses. _____________________________________________________________________________ Table 3 Post-test Means for Procedural Questions (Experiment 2) __________________________________________________________________ Animation No Animation ___________________________________ Predict 5.13 (1.30) 4.94 (2.05) 5.03 No Predict 5.00 (1.60) 4.00 (2.19) 4.48 5.07 4.47 Note: Standard deviations are in parentheses. _____________________________________________________________________________ 3 Our power to detect a "large" effect was very good, 87% <ref> (Cohen, 1988) </ref>. Thus, if there really was a large effect, we should have found it.
Reference: <author> Cormen, T. H., Leiserson, C. E., & Rivest, R. L. </author> <year> (1990). </year> <title> Introduction to algorithms. </title> <address> Boston, MA: </address> <publisher> MIT Press. </publisher>
Reference-contexts: Participants were then shown a six-minute videotaped lecture given by one of the authors (JS) that covered depth-first search. After watching the videotape, participants were given a three-page text describing the depth-first search algorithm. This text was adapted from the chapter covering depth-first search in a standard algorithms textbook <ref> (Cormen, Leiserson, & Rivest, 1990) </ref>. Participants in the no-animation/no-prediction condition were given 10 minutes to read the text, all others were given five minutes. <p> But because of the unique way that trees are combined into power of two sizes, only a logarithm of the total size of the heap number of steps is involved. For more details on binomial heaps and their operations, consult any comprehensive computer science algorithms text such as <ref> (Cormen et al., 1990) </ref>. The animation of the binomial heap data structure and algorithm was built using the XTango algorithm animation system (Stasko, 1992) and utilizes the representation of a binomial heap common in algorithms textbooks.
Reference: <author> Gloor, </author> <title> P.A. </title> <booktitle> (1992). AACE-Algorithm animation for computer science education. In Proceedings of the 1992 IEEE Workshop on Visual Languages, </booktitle> <pages> 25-31. </pages>
Reference: <author> Kehoe, C. M., & Stasko, J. T. </author> <year> (1996). </year> <title> Using animations to learn about algorithms: An ethnographic case study. </title> <type> Unpublished manuscript. </type>
Reference-contexts: There is some evidence from 20 ethnographically-motivated work that learners do make use of animations in the learning process <ref> (Kehoe & Stasko, 1996) </ref>. An idea to consider for future research is to allow learners in the different conditions to spend as little or as much time with the different materials as they wish and then to examine performance.
Reference: <author> Lawrence, A.W., Badre, A.M., & Stasko, J.T. </author> <year> (1994). </year> <title> Empirically evaluating the use of animations to teach algorithms. </title> <booktitle> In Proceedings of the 1994 IEEE Symposium on Visual Languages, </booktitle> <pages> 48-54. </pages>
Reference: <author> Mayer, R.E., & Anderson, R.B. </author> <year> (1991). </year> <title> Animations need narrations: An experimental test of a dual-coding hypothesis Journal of Educational Psychology, </title> <type> 83 (4), </type> <pages> 484-490. </pages>
Reference-contexts: Animation initially assisted both accuracy and speed, but after one week had elapsed, the subjects exposed to animations actually had fallen behind the non-animation subjects. Studies by Mayer and Anderson found that animation did help college students learn about mechanical concepts as measured by a creative problem solving post-test <ref> (Mayer & Anderson, 1991, 1992) </ref>. Our focus is the use of animation to teach programming and to teach students how algorithms work.
Reference: <author> Mayer, R.E., & Anderson, R.B. </author> <year> (1992). </year> <title> The instructive animation: Helping students build connections between words and pictures in multimedia learning. </title> <journal> Journal of Educational Psychology, </journal> <volume> 84 (4), </volume> <pages> 444-452. </pages>
Reference: <author> Palmiter, S. </author> <year> (1993). </year> <title> The effectiveness of animated demonstrations for computer-based tasks: A summary, model, </title> <journal> and future research. Journal of Visual Languages and Computing, </journal> <volume> 4 (1), </volume> <pages> 71-89. </pages> <note> 22 Price, B.A., Baecker, R.M., & Small, I.S. </note> <year> (1993). </year> <title> A principled taxonomy of software visualization. </title> <journal> Journal of Visual Languages and Computing, </journal> <volume> 4 (3), </volume> <pages> 211-266. </pages>
Reference: <author> Rieber, </author> <title> L.P. (1990). Effects of animated graphics on student learning. </title> <journal> Journal of Educational Psychology, </journal> <volume> 1, </volume> <pages> 123-321. </pages>
Reference-contexts: Computer scientists use animation to help viewers track patterns and observe relationships (Robertson, Card, & Mackinlay, 1993). Animation has been used to explain principles and laws of motion <ref> (Rieber, Boyce, & Assad, 1990) </ref>, to provide online help with interface tasks (Sukaviriya, 1990), and to help users follow interface operations (Baecker & Small, 1990). Formal studies about the effect of animation on understanding have provided mixed results.
Reference: <author> Rieber, L.P., Boyce, M.J., & Assad, C. </author> <year> (1990). </year> <title> The effects of computer animation on adult learning and retrieval tasks. </title> <journal> Journal of Computer-Based Instruction, </journal> <volume> 17 (2), </volume> <pages> 46-52. </pages>
Reference-contexts: Computer scientists use animation to help viewers track patterns and observe relationships (Robertson, Card, & Mackinlay, 1993). Animation has been used to explain principles and laws of motion <ref> (Rieber, Boyce, & Assad, 1990) </ref>, to provide online help with interface tasks (Sukaviriya, 1990), and to help users follow interface operations (Baecker & Small, 1990). Formal studies about the effect of animation on understanding have provided mixed results.
Reference: <author> Robertson, G.G., Card, S.K., & Mackinlay, J.D. </author> <year> (1993). </year> <title> Information visualization using 3D interactive animation. </title> <journal> Communications of the ACM, </journal> <volume> 36 (4), </volume> <pages> 57-71. </pages>
Reference-contexts: Cinema has used animation to tell a story for over half a century, but computers now are making animations much easier to design and produce. Computer scientists use animation to help viewers track patterns and observe relationships <ref> (Robertson, Card, & Mackinlay, 1993) </ref>. Animation has been used to explain principles and laws of motion (Rieber, Boyce, & Assad, 1990), to provide online help with interface tasks (Sukaviriya, 1990), and to help users follow interface operations (Baecker & Small, 1990).
Reference: <author> Stasko, J.T. </author> <year> (1992). </year> <title> Animating algorithms with XTANGO. </title> <journal> SIGACT News, </journal> <volume> 23 (2), </volume> <pages> 67-71. </pages>
Reference-contexts: For more details on binomial heaps and their operations, consult any comprehensive computer science algorithms text such as (Cormen et al., 1990). The animation of the binomial heap data structure and algorithm was built using the XTango algorithm animation system <ref> (Stasko, 1992) </ref> and utilizes the representation of a binomial heap common in algorithms textbooks. The animation uses three work areas, each of which is indicated by a horizontal red line as illustrated in Figure 2a.
Reference: <author> Stasko, J.T. </author> <year> (1990). </year> <title> TANGO: A framework and system for algorithm animation. </title> <journal> Computer, </journal> <volume> 23 (9), </volume> <pages> 27-39. </pages>
Reference: <author> Stasko, J.T., Badre, A., & Lewis, C. </author> <year> (1993). </year> <title> Do algorithm animations assist learning? An empirical study and analysis. </title> <booktitle> In Proceedings of the INTERCHI '93 Conference on Human Factors in Computing Systems, </booktitle> <pages> 61-66. </pages>
Reference-contexts: If no unexplored edges exist, the search backs up again. This process continues until all vertices have been visited and the search has backed up to the starting vertex. 1 The animation of the depth-first search algorithm was built with the Polka animation system <ref> (Stasko & Kraemer, 1993) </ref> and utilizes the traditional view of a graph as a set of vertices and edges. A frame from an animation on an example graph is shown in Figure 1. The vertices are represented by black squares and identified by a letter label.
Reference: <author> Stasko, J.T., & Kraemer, E. </author> <year> (1993). </year> <title> A methodology for building applicationspecific visualizations of parallel programs. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 18 (2), </volume> <pages> 258-264. </pages>
Reference-contexts: If no unexplored edges exist, the search backs up again. This process continues until all vertices have been visited and the search has backed up to the starting vertex. 1 The animation of the depth-first search algorithm was built with the Polka animation system <ref> (Stasko & Kraemer, 1993) </ref> and utilizes the traditional view of a graph as a set of vertices and edges. A frame from an animation on an example graph is shown in Figure 1. The vertices are represented by black squares and identified by a letter label.
Reference: <author> Sukaviriya, P. </author> <year> (1990). </year> <title> Coupling a UI framework with automatic generation of context-sensitive animated help. </title> <booktitle> In Proceedings of the '90 ACM SIGGRAPH Symposium on User Interface Software and Technology, </booktitle> <pages> 152-166. 23 </pages>
Reference-contexts: Computer scientists use animation to help viewers track patterns and observe relationships (Robertson, Card, & Mackinlay, 1993). Animation has been used to explain principles and laws of motion (Rieber, Boyce, & Assad, 1990), to provide online help with interface tasks <ref> (Sukaviriya, 1990) </ref>, and to help users follow interface operations (Baecker & Small, 1990). Formal studies about the effect of animation on understanding have provided mixed results.
References-found: 24

