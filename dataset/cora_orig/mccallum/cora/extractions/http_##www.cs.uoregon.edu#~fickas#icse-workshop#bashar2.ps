URL: http://www.cs.uoregon.edu/~fickas/icse-workshop/bashar2.ps
Refering-URL: http://www.cs.uoregon.edu/~fickas/icse-workshop/
Root-URL: http://www.cs.uoregon.edu
Email: far3, ban, jkg@doc.ic.ac.uk  
Title: Restructuring Requirements Specifications for Inconsistency Analysis: A Case Study  
Author: Alessandra Russo Bashar Nuseibeh Jeff Kramer 
Address: Gate, London SW7 2BZ, U.K.  
Affiliation: Department of Computing, Imperial College 180 Queen's  
Abstract: This paper describes our experiences in restructuring multi-perspective requirements specifications in order to identify and analyse possible or existing inconsistencies. A partial, heterogeneous and reasonably large requirements specification from a NASA project was analysed and decomposed into a structure of "viewpoints", where each viewpoint encapsulates partial requirements of some system components described in the specification. Relationships between viewpoints were identified which included not only the interactions explicitly stated in the requirements but also some implicit and potentially problematic inter-dependencies. The entire restructuring process and a first informal analysis of the resulting relationships enabled the detection of (potential) inconsistencies and the definition of some interesting domain-dependent consistency rules. We believe that this restructuring into viewpoints also facilitates requirements understanding through partitioning, and requirements maintenance and evolution through explicit identification of the inter-viewpoint relation ships.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Easterbrook and J. Callahan. </author> <title> Formal Methods for V&V of Partial Specifications: An Experience Report, </title> <booktitle> In Proceedings of 3rd International Symposium on Requirements Engineering (RE'97), </booktitle> <pages> 160-168, </pages> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Firstly, the restructuring approach is a helpful tool for identifying inconsistencies. This was supported by the fact that it identified the same inconsistencies identified by other approaches such as the IV&V process deployed by NASA <ref> [1] </ref>. Secondly, the restructuring approach provides a useful tool that facilitates consistent updating and extension of existing requirements specifications. In the above example, inter-viewpoint relationships can guide the requirement developers in checking the STD viewpoint whenever a change is made to a related IOF viewpoint.
Reference: [2] <author> S. Easterbrook, A. Finkelstein, J Kramer and B. Nuseibeh. </author> <title> Co-ordinating Distributed ViewPoints: The anatomy of a consistency check. Concurrent Engineering: </title> <journal> Research and Applications, </journal> <volume> 2(3): </volume> <pages> 209-222, </pages> <institution> CERA Institute West Bloomfield, USA. </institution>
Reference-contexts: A typical example is a relationship between two viewpoints X and Y which states that some of the output of X is used as input data in the viewpoint Y . Relationships of this kind have been widely discussed in <ref> [2, 8] </ref>, where, for the specific case of the IOF template, they are defined as matching the output and destination of one viewpoint X with the input of another viewpoint Y whose domain is equal to that destination in X.
Reference: [3] <author> S. Easterbrook and B. Nuseibeh, </author> <title> Using ViewPoints for Inconsistency Management. </title> <journal> Software Engineering Journal, </journal> <volume> 11(1): </volume> <pages> 31-43, </pages> <month> January </month> <year> 1996, </year> <note> BCS/IEE Press. </note>
Reference-contexts: All these advantages contribute significantly towards addressing the more general problem of detecting and handling inconsistencies <ref> [3, 4, 6] </ref>, not only at a particular stage of the requirements development, but also during its modifications and extensions.
Reference: [4] <author> A. Finkelstein and D. Gabbay and A. Hunter and J. Kramer and B. Nu-seibeh. </author> <title> Inconsistency Handling in Multiperspective Specifications. </title> <journal> Transactions on Software Engineering, </journal> <volume> 20(8): </volume> <pages> 569-578, </pages> <address> August 1994, </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: All these advantages contribute significantly towards addressing the more general problem of detecting and handling inconsistencies <ref> [3, 4, 6] </ref>, not only at a particular stage of the requirements development, but also during its modifications and extensions.
Reference: [5] <author> A. Finkelstein and J. Kramer and B. Nuseibeh and L. Finkelstein and M. Goedicke. </author> <title> Viewpoints: A Framework for Integrating Multiple Perspectives in System Development. </title> <journal> International Journal of Software Engineering and Knowledge Engineering, </journal> <volume> 2(1) </volume> <pages> 31-58, </pages> <address> March 1992, </address> <publisher> World Scientific Publishing Co. </publisher>
Reference-contexts: This paper describes our practical experience in restructuring a partial, reasonably large, multi-perspective requirements specification of a NASA project called International Space Station (ISS). We deploy the Viewpoints approach <ref> [5, 8] </ref> as a restructuring tool. This approach facilitates an explicit separation of the perspectives of the different developers and their representation by "ViewPoints" 1 , allowing the use of different development methods and representation schemes. <p> our investigation provides a useful testbed for investigations into the detection of, and response to, evolutionary changes in multi-perspective requirements specifications. 1 In this paper, we write the term "viewpoint" in lower case throughout, even though we are still referring to our particular form of "ViewPoints" described in earlier work <ref> [5, 8] </ref>. 2 2 The Case Study The case study under consideration is a partial, multi-perspective requirements specification of a NASA project called International Space Station (ISS). The project is an international co-operation programme for the construction and use of a space station orbiting earth. <p> We called the resulting viewpoint a hierarchical tree (HT) viewpoint, where hierarchical tree is the name of the representation style we adopted (or Viewpoints template in the terminology of the Viewpoints framework <ref> [5] </ref>). We then used another two viewpoint representation styles which we call "Data-Flow Tables" (DFT) and "Input-Output Flows" (IOF) to express more detailed requirements specifications for each node in the above tree viewpoint. <p> However, in our case study most of the tabular (IOF) viewpoints have empty sources 3 The term "domain" is used in the Viewpoints framework <ref> [5] </ref> to refer to a Viewpoint's area of concern. 7 and destinations because of missing information in the requirements specific-ations. We addressed this problem by considering pattern-matching between the viewpoints' contexts.
Reference: [6] <author> A. Hunter and B. Nuseibeh. </author> <title> Analysing Inconsistent Specifications. </title> <booktitle> In Proceedings of 3rd International Symposium on Requirements Engineering (RE'97), </booktitle> <pages> 78-86, </pages> <publisher> IEEE Computer Society Press. </publisher> <pages> 11 </pages>
Reference-contexts: All these advantages contribute significantly towards addressing the more general problem of detecting and handling inconsistencies <ref> [3, 4, 6] </ref>, not only at a particular stage of the requirements development, but also during its modifications and extensions.
Reference: [7] <author> G. Mullery. </author> <title> CORE a method for controlled requirements expression. </title> <booktitle> In Proceedings of 4th International Conference on Software Engineering (ICSE-4), </booktitle> <pages> 126-135, </pages> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: The DFT allows the representation of processes, and the input and output data flows between these processes and the external environment. The IOF is similar to the tabular collection representation style used in the CORE method <ref> [7] </ref>, which also includes the "sources" and "destinations" of the inputs and output flows, respectively. 5 To achieve a reasonably fine level of granularity in our decomposition, we allow for primitive and non-primitive processes in a DFT.
Reference: [8] <author> B. Nuseibeh, J. Kramer and A. Finkelstein. </author> <title> A Framework for Expressing the Relationships Between Multiple Views in Requirements Specification. </title> <journal> Transactions on Software Engineering, </journal> <month> 20(10): </month> <pages> 760-773, </pages> <address> October 1994, </address> <publisher> IEEE Computer Society Press. </publisher> <pages> 12 </pages>
Reference-contexts: This paper describes our practical experience in restructuring a partial, reasonably large, multi-perspective requirements specification of a NASA project called International Space Station (ISS). We deploy the Viewpoints approach <ref> [5, 8] </ref> as a restructuring tool. This approach facilitates an explicit separation of the perspectives of the different developers and their representation by "ViewPoints" 1 , allowing the use of different development methods and representation schemes. <p> our investigation provides a useful testbed for investigations into the detection of, and response to, evolutionary changes in multi-perspective requirements specifications. 1 In this paper, we write the term "viewpoint" in lower case throughout, even though we are still referring to our particular form of "ViewPoints" described in earlier work <ref> [5, 8] </ref>. 2 2 The Case Study The case study under consideration is a partial, multi-perspective requirements specification of a NASA project called International Space Station (ISS). The project is an international co-operation programme for the construction and use of a space station orbiting earth. <p> A typical example is a relationship between two viewpoints X and Y which states that some of the output of X is used as input data in the viewpoint Y . Relationships of this kind have been widely discussed in <ref> [2, 8] </ref>, where, for the specific case of the IOF template, they are defined as matching the output and destination of one viewpoint X with the input of another viewpoint Y whose domain is equal to that destination in X.
References-found: 8

