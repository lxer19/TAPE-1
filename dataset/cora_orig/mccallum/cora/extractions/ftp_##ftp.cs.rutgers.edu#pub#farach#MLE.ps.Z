URL: ftp://ftp.cs.rutgers.edu/pub/farach/MLE.ps.Z
Refering-URL: http://www.cs.rutgers.edu/~farach/index.html
Root-URL: http://www.cs.rutgers.edu
Email: kannan@central.cis.upenn.edu;  
Title: Efficient Algorithms for Inverting Evolution  
Author: Martin Farach Sampath Kannan 
Web: http://www.cis.upenn.edu/~kannan/home.html  
Address: Pennsylvania;  
Affiliation: University of  
Note: Rutgers University; farach@cs.rutgers.edu; http://www.cs.rutgers.edu/~farach; Supported by an NSF Ca reer Advancement Award and an Alfred P. Sloan Research Fellowship.  
Date: March 26, 1996  
Abstract: Evolution is a stochastic process which operates on the DNA of species. The evolutionary process leaves tell-tale signs in the DNA which can be used to construct phylogenies, or evolutionary trees, for a set of species. Maximum Likelihood Estimations (MLE) methods seek the evolutionary tree which is most likely to have produced the DNA under consideration. While these methods are widely accepted and intellectually satisfying, they have been computationally intractable. In this paper, we address the intractability of MLE methods as follows. We introduce a metric on stochastic process models of evolution. We show that this metric is meaningful by proving that in order for any algorithm to distinguish between two stochatic models that are close according to this metric, it needs to be given a lot of observations. We complement this result with a simple and efficient algorithm for inverting the stochastic process of evolution, that is, for building the tree from observations on the DNA of the species. Our result can be viewed as a result on the PAC-learnability of the class of distributions produced by tree-like processes. Though there have been many heuristics suggested for this problem, our algorithm is the first one with a guaranteed convergence rate, and further, this rate is within a polynomial of the lower-bound rate we establish. Ours is also the the first polynomial-time algorithm which is guaranteed to converge at all to the correct tree. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Agarwala, V. Bafna, M. Farach, B. Narayanan, M. Paterson, and M. </author> <title> Thorup. On the approximability of numerical taxonomy: Fitting distances by tree metrics. </title> <booktitle> Proc. of the 7th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1996. </year>
Reference-contexts: The problem is to then construct a tree which fits the distances as well as possible. Many heuristics are known for this problem [12] and for some optimization criteria, algorithms exist with provably good performance <ref> [1, 4] </ref>. For a detailed survey of the methods in this class, see [6, 14]. Prima facie it appears that distance-based methods lose information in converting the original sequence data into a matrix of distances. <p> For ease of presentation, we assume that we have two-state characters with states 0 and 1. We will discuss generalizations of this class in the conclusions. A Cavendar-Farris tree (CFT) is a rooted tree where the root has a probability P r 2 <ref> [0; 1] </ref> and each edge e has some probability P e 2 (0; :5). We interpret an n leaf CFT as a random source of vectors from f0; 1g n (referred to in the literature as patterns) as follows. The root gets labeled `1' with probability P r . <p> While we know that T fl is close to being additive we will show that as k increases T fl approaches T S it need not be exactly additive. Use an additive fitting algorithm <ref> [1] </ref> which produces a tree close to T fl . Call this tree ^ T . Invert the edge weights back into probabilities to produce ^ S. <p> Because there is a deterministic function mapping probabilities to times the following lemma is immediate. Lemma 4 With probability at least 1 n 2 , jT S (i; j) T fl (i; j)j ffi for all i; j. The next stage involves application of an additive-fitting method taken from <ref> [1] </ref>. We now describe the problem considered by [1] and the result they obtain. 6 Problem: L 1 -best-fit additive tree. Input: An n fi n matrix M representing pairwise distance estimates among n points. <p> Lemma 4 With probability at least 1 n 2 , jT S (i; j) T fl (i; j)j ffi for all i; j. The next stage involves application of an additive-fitting method taken from <ref> [1] </ref>. We now describe the problem considered by [1] and the result they obtain. 6 Problem: L 1 -best-fit additive tree. Input: An n fi n matrix M representing pairwise distance estimates among n points. <p> Output: An edge-weighted tree T such that max i;j jT [i; j] M [i; j]j is minimized, where T [i; j] represents the distance in the tree between leaves representing species i and j. Let * = min T max i;j jT [i; j] M [i; j]j. In <ref> [1] </ref> it is shown that finding a tree T whose L 1 distance from the given matrix is * is NP-hard. Fortunately, it is also shown that there is an efficient algorithm that finds a tree T 0 such that max i;j jT 0 [i; j] M [i; j]j 3*. <p> In our case, we know that with probability greater than 1 n 2 there is a tree within ffi of T fl . Thus the algorithm of <ref> [1] </ref> will find a tree within 3ffi of the given estimates. We apply the algorithm to compute the tree ^ T . <p> Finally, we show how to apply these lemmas to the non-isomorphic case by showing that S and S 0 are almost isomorphic, in some appropriate sense. 7 Lemma 5 Suppose S and S 0 are two isomorphic CFTs on the leaf set <ref> [1; : : :; n] </ref>. Suppose that every pair of corresponding edges e 2 S and e 0 2 S 0 is such that jP e P e 0 j * for some * &gt; 0. Then V (S; S 0 ) 2n*. <p> There are three factors which give a gap. First, can we remove the dependence on ff? We expect that this may be possible if the tree fitting algorithm of <ref> [1] </ref> can be generalized to deal with varying tolerance, i.e, we want a tree-fitting algorithm that takes as input a distance matrix D and a tolerance matrix E fl and finds a tree, T such that jD [i; j] T [i; j]j *E fl [i; j] and * is as small <p> Clearly finding the best * is again NP-complete, but we would like an approximation algorithm along the lines of <ref> [1] </ref> for this more general question. Second, can the dependence on n be reduced? We expect that our algorithm actually has a sublinear dependence on n, and that the analysis needs tightening.
Reference: [2] <author> J. Cavender. </author> <title> Taxonomy with confidence. </title> <journal> Mathematical Biosciences, </journal> <volume> 40 </volume> <pages> 271-280, </pages> <year> 1978. </year>
Reference-contexts: Parsimony, as well as all its standard variants, are NP-hard [3] but heuristics for parsimony are some of the most widely used tree construction methods. Despite its popularity, parsimony suffers from the fact that it is not a consistent method <ref> [2, 5] </ref>. Informally, a method is consistent if the tree it constructs converges to the true tree as more and more data becomes available, which in the case of phylogeny means as k goes to infinity.
Reference: [3] <author> W.H.E. Day, D.S. Johnson, and D. Sankoff. </author> <title> The computational complexity of inferring rooted phylogenies by parsimony. </title> <journal> Mathematical Biosciences, </journal> <volume> 81 </volume> <pages> 33-42, </pages> <year> 1986. </year>
Reference-contexts: A survey of parsimony and its variants can be found in [6]. In mathematical terms, we get the Steiner Tree Problem under the Hamming metric. Parsimony, as well as all its standard variants, are NP-hard <ref> [3] </ref> but heuristics for parsimony are some of the most widely used tree construction methods. Despite its popularity, parsimony suffers from the fact that it is not a consistent method [2, 5].
Reference: [4] <author> M. Farach, S. Kannan, and T. Warnow. </author> <title> A robust model for finding optimal evolutionary trees. </title> <journal> Algorithmica, </journal> <volume> 13 </volume> <pages> 155-179, </pages> <year> 1993. </year>
Reference-contexts: The problem is to then construct a tree which fits the distances as well as possible. Many heuristics are known for this problem [12] and for some optimization criteria, algorithms exist with provably good performance <ref> [1, 4] </ref>. For a detailed survey of the methods in this class, see [6, 14]. Prima facie it appears that distance-based methods lose information in converting the original sequence data into a matrix of distances.
Reference: [5] <author> J. Felsenstein. </author> <title> Cases in which parsimony or compatibility methods will be positively misleading. </title> <journal> Syst. Zool., </journal> <volume> 22 </volume> <pages> 240-249, </pages> <year> 1978. </year>
Reference-contexts: Parsimony, as well as all its standard variants, are NP-hard [3] but heuristics for parsimony are some of the most widely used tree construction methods. Despite its popularity, parsimony suffers from the fact that it is not a consistent method <ref> [2, 5] </ref>. Informally, a method is consistent if the tree it constructs converges to the true tree as more and more data becomes available, which in the case of phylogeny means as k goes to infinity.
Reference: [6] <author> J. Felsenstein. </author> <title> Numerical methods for inferrinng evolutionary trees. </title> <journal> The Quarterly Review of Biology, </journal> <volume> 57(4), </volume> <year> 1982. </year>
Reference-contexts: The problem is to then construct a tree which fits the distances as well as possible. Many heuristics are known for this problem [12] and for some optimization criteria, algorithms exist with provably good performance [1, 4]. For a detailed survey of the methods in this class, see <ref> [6, 14] </ref>. Prima facie it appears that distance-based methods lose information in converting the original sequence data into a matrix of distances. <p> The most popular character-based criterion, parsimony, seeks to find a phylogentic tree for the species which requires the minimum number of mutations to produce the data set M . A survey of parsimony and its variants can be found in <ref> [6] </ref>. In mathematical terms, we get the Steiner Tree Problem under the Hamming metric. Parsimony, as well as all its standard variants, are NP-hard [3] but heuristics for parsimony are some of the most widely used tree construction methods.
Reference: [7] <author> J. Felsenstein. </author> <title> Statistical inference of phylogenies. </title> <journal> J. R. Statist. Soc. A, </journal> <year> 1983. </year> <month> 10 </month>
Reference-contexts: Broadly, these methods fall into three categories | distance-based methods, character-based methods, and likelihood methods. Excellent surveys of the known methods can be found in <ref> [7, 8, 14] </ref>. Since the early 80's -with the advent of rapid sequencing technology- the data for phylogeny construction methods has primarily been biomolecular sequences such as DNA. Distance methods start by mapping the input DNA into a table of pairwise distances for the species. <p> We assume that we observe k such vectors (which we also call samples or observations) from k independent runs of the same CFT. The model we have described is substantially similar to the model discussed by Felsenstein <ref> [7] </ref> and by Steel, Hendy, and Penny [13], and is the basis for all MLE methods. Given this model the computational problem can be described as below. <p> The state of knowledge with respect to computing the most likely tree is extremely primitive. Kashyap and Subas [9] describe a method for finding the parameters of the most likely tree on 3 species and then describe a heuristic for extending this to more than 3 species. Felsenstein <ref> [7] </ref> describes methods for finding parameters for a fixed topology as well as a computationally expensive heuristic for finding the most likely tree.
Reference: [8] <author> J. Felsenstein. </author> <title> Phylogenies from molecular sequences: inference and reliability. </title> <journal> Annual Review of Genetics, </journal> <volume> 22 </volume> <pages> 521-65, </pages> <year> 1988. </year>
Reference-contexts: Broadly, these methods fall into three categories | distance-based methods, character-based methods, and likelihood methods. Excellent surveys of the known methods can be found in <ref> [7, 8, 14] </ref>. Since the early 80's -with the advent of rapid sequencing technology- the data for phylogeny construction methods has primarily been biomolecular sequences such as DNA. Distance methods start by mapping the input DNA into a table of pairwise distances for the species.
Reference: [9] <author> R.L. Kashyap and S. Subas. </author> <title> Statistical estimation of parameters in a phylogenetic tree using a dynamic model of the substitutional process. </title> <journal> J. theor. Biol., </journal> <volume> 47 </volume> <pages> 74-101, </pages> <year> 1974. </year>
Reference-contexts: This is common in many maximum likelihood estimation problems and, in particular, is standard in phylogeny construction. The state of knowledge with respect to computing the most likely tree is extremely primitive. Kashyap and Subas <ref> [9] </ref> describe a method for finding the parameters of the most likely tree on 3 species and then describe a heuristic for extending this to more than 3 species.
Reference: [10] <author> Michael Kearns, Yishay Mansour, Dana Ron, Ronitt Rubinfeld, Robert E. Schapire, and Linda Sellie. </author> <title> On the learnability of discrete distributions (extended abstract). </title> <booktitle> Proc. of the 26th Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pages 273-282, </pages> <year> 1994. </year>
Reference-contexts: We present a polynomial time algorithm that converges to the true tree at a rate that is at most a polynomial factor slower than the best possible rate that we establish. Our result can be viewed in the setting of PAC-learning of distributions introduced by <ref> [10] </ref>. Viewing S as the target concept, we can show that polynomially many samples are sufficient to produce a hypothesis ^ S from the class of CFTs that is "close" to S with high probability. The rest of this paper is organized as follows.
Reference: [11] <author> Rajeev Motwani and Prabhakar Raghavan. </author> <title> Randomized Algorithms. </title> <publisher> Cambridge University Press, </publisher> <year> 1995. </year>
Reference-contexts: Lemma 3 If k = 6 ln n=t 2 samples are observed then for any i; j, Pr [E fl (i; j) &gt; t] n 4 . Proof: The proof follows from a direct application of the Chernoff bound inequalities <ref> [11] </ref>. As a corollary the probability that E fl (i; j) &gt; t for any i; j, is no more than n 2 . Because there is a deterministic function mapping probabilities to times the following lemma is immediate.
Reference: [12] <author> N. Saitou and M. Nei. </author> <title> The neighbor-joining method: a new method for reconstructing phylo-gentic trees. Mol. </title> <journal> Biol. Evol., </journal> <volume> 4 </volume> <pages> 406-424, </pages> <year> 1987. </year>
Reference-contexts: Distance methods start by mapping the input DNA into a table of pairwise distances for the species. The problem is to then construct a tree which fits the distances as well as possible. Many heuristics are known for this problem <ref> [12] </ref> and for some optimization criteria, algorithms exist with provably good performance [1, 4]. For a detailed survey of the methods in this class, see [6, 14]. Prima facie it appears that distance-based methods lose information in converting the original sequence data into a matrix of distances.
Reference: [13] <author> M. Steel, M.D. Hendy, and D. Penny. </author> <title> A discrete fourier analysis for evolutionary trees. </title> <booktitle> Proceedings of the National Academy of Science, </booktitle> <volume> 91 </volume> <pages> 3339-3343, </pages> <year> 1994. </year>
Reference-contexts: We assume that we observe k such vectors (which we also call samples or observations) from k independent runs of the same CFT. The model we have described is substantially similar to the model discussed by Felsenstein [7] and by Steel, Hendy, and Penny <ref> [13] </ref>, and is the basis for all MLE methods. Given this model the computational problem can be described as below. Problem: MLE construction of evolutionary trees Input: Sample points M = hc 1 ; : : : ; c k i generated from some unknown n-leaf CFT S. <p> Felsenstein [7] describes methods for finding parameters for a fixed topology as well as a computationally expensive heuristic for finding the most likely tree. Steel, Hendy, and Penny <ref> [13] </ref> view the problem as an inverse problem and show that an exponential-sized Hadamard matrix can be used to find exact values of the parameters. It is unreasonable to expect that any algorithm for maximum likelihood estimation can reconstruct the original CFT S exactly from a finite amount of data. <p> We can conclude from the claim that W is unique and efficiently constructible from T S : Fur thermore, we can reconstruct S from W by noting that P e = (1 e w e )=2. This establishes the lemma. A similar lemma is proved in <ref> [13] </ref>. 3 A Simple Distance-Based Method and Its Analysis Lemma 2 suggests the following algorithm. Let H (~x 1 ; ~x 2 ) be the Hamming distance between vectors ~x 1 and~x 2 . Algorithm Outline: 5 1. <p> For four state characters, we would typically assume that there is some (known) Markov process which is proceeding along the edges of the CFT for unknown times. Our algorithm will work if the times can be derived from observations on the outcomes. Steel, Hendy and Penny <ref> [13] </ref> have studied which types of processes are so invertible, though they have not considered in their analysis how tolerances in the probability domain translate into tolerances in the time domain.
Reference: [14] <author> D. L. Swofford and G. J. Olsen. </author> <title> Phylogeny reconstruction. </title> <editor> In D. M. Hillis and C. Moritz, editors, </editor> <booktitle> Molecular Systematics, </booktitle> <pages> pages 411-501. </pages> <publisher> Sinauer Associates Inc., </publisher> <address> Sunderland, MA., </address> <year> 1990. </year> <month> 11 </month>
Reference-contexts: Broadly, these methods fall into three categories | distance-based methods, character-based methods, and likelihood methods. Excellent surveys of the known methods can be found in <ref> [7, 8, 14] </ref>. Since the early 80's -with the advent of rapid sequencing technology- the data for phylogeny construction methods has primarily been biomolecular sequences such as DNA. Distance methods start by mapping the input DNA into a table of pairwise distances for the species. <p> The problem is to then construct a tree which fits the distances as well as possible. Many heuristics are known for this problem [12] and for some optimization criteria, algorithms exist with provably good performance [1, 4]. For a detailed survey of the methods in this class, see <ref> [6, 14] </ref>. Prima facie it appears that distance-based methods lose information in converting the original sequence data into a matrix of distances.
References-found: 14

