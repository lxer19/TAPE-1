URL: http://arti.vub.ac.be/~walter/papers/dagstuhl/dagstuhl.ps
Refering-URL: http://arti.vub.ac.be/~walter/papers/welcome.html
Root-URL: 
Email: Email: walter@arti.vub.ac.be  
Title: Reuse in Cyberspace  
Author: Walter Van de Velde 
Address: Pleinlaan 2, B-1050 Brussels  
Affiliation: Artificial Intelligence Laboratory  
Abstract: This note was first published as the abstract of an after-dinner speach at the Dagstuhl seminar on 'Reusable Problem-Solving Methods', organized by Mark Musen and Rudi Studer, Dagstuhl, Germany, 1995. "Knowledge acquisition goes into cyberspace". This was one of the intentions after the business meeting at KAW-94 in Banff, Canada. It was primarilly meant with respect to the workshop organization and the functioning of the KA research community in general. This EKAW'94 used interactive review forms, paper- and information dissemination, and public paper annotations on the World-Wide Web (see URL http://arti.vub.ac.be/www/ekaw/welcome.html). But it is even more fascinating to explore the implications for knowledge engineering itself. While we are arguing about the 'right' interpretation of propose-test-revise, the 'right' categorisation of ontologies, or the 'right' granularity of reusable components the world of computing is changing in ways that impact the very issues that we are dealing with. Or, to put it positively, there are new opportunities that may give knowledge engineering a new potential, elan and relevance. First we re-examine methods and tools for reuse in light of present evolutions in computing technology and in networking and communication in particular. The most visible evolution in networking is one of scale. Local area networks are being connected up, wide area networks and world-wide networks are being installed at a rapid pace and powerful broadband information highways are being planned with high priority both in Europe and the US. Usage of these networks is more than doubling every year. Internet is commonly used in academia and made accessible for commercial and private users. Its real impact is expected for the comming years followed by an even greater potential of the highways. What are these networks used for? Common uses are rapid transfer of large volumes of data, for dissemination of news and information, and for person-to-person communication (electronic mail). Innovative experiments, for example with digital towns (Amsterdam, others) are met with unexpected enthousiasm by a broad audience. Wireless connections and hand-held computing and communication devices will expand the possibilities even further. The network is becoming the habitat for software agents of all sorts. What is possible and useful can only be guessed right now but that there will be a hugue impact on the practice in research, education, business and everyday life is beyond doubt. Such advanced technology is bound to change the way in which people work, and to influence the kind of tools that they will find necessary or useful. Sticking to unadapted tools and methods will hamper the full potential of the technology to be delivered. If knowledge engineering fails to track these evolutions then it will become increasingly irrelevant to practical demands. Networked environments provide several opportunities for knowledge engineering to use its know how. For example, the amount of information that is available on the net is overwhelming. There are reasonably good browsers and search mechanisms, but goal directed access and use of the information is not well supported. Although related information can be linked using hyperlinks, it is not the case that all necessary links for a particular problem can be foreseen in advanced. Rather information has to be combined in problem-, situation- and user-specific ways, as a complement to index-based information retrieval methods. In knowledge engineering we have developed for years now the methods and techniques to do this. So, we need to consider the way in which these developments influence the kind of systems we build, the way in which they are being used and the way in which they are being constructed. In 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> G. Arango. </author> <title> Domain analysis: From art to engineering discipline. </title> <booktitle> In Proceedings of the 5th Internations Workshop on Software Specification and Design, </booktitle> <pages> pages 152-159, </pages> <month> May </month> <year> 1989. </year>
Reference: 2. <author> G. Arango. </author> <title> Networks and information technology redefine the practice of reuse. </title> <booktitle> In Proceedings of the Annual Conference on Software Reuse, </booktitle> <year> 1993. </year>
Reference: 3. <author> J. A. Breuker, B. J. Wielinga, M. van Someren, R. de Hoog, A. Th. Schreiber, P. de Greef, B. Bredeweg, J. Wielemaker, J. P. Billault, M. Davoodi, and S. A. Hayward. </author> <title> Model Driven Knowledge Acquisition: Interpretation Models. ESPRIT Project P1098 Deliverable D1 (task A1), </title> <institution> University of Amsterdam and STL Ltd, </institution> <year> 1987. </year>
Reference: 4. <author> J. A. Breuker, R. G. F. Winkels, and J. A. C. Sandberg. </author> <title> A shell for intelligent help systems. </title> <booktitle> In Proceedings of the 10th IJCAI, </booktitle> <pages> pages 167-173, </pages> <address> Milano, </address> <year> 1987. </year>
Reference: 5. <author> B. Chandrasekaran. </author> <title> Toward a taxonomy of problem-solving types. </title> <journal> AI Magazine, </journal> <volume> 4(4) </volume> <pages> 9-17, </pages> <year> 1983. </year>
Reference: 6. <author> B. Chandrasekaran. </author> <title> Generic tasks in knowledge-based reasoning: High level building blocks for expert system design. </title> <journal> IEEE Expert, </journal> <volume> 1(3) </volume> <pages> 23-30, </pages> <year> 1986. </year>
Reference: 7. <institution> IBM Reuse Technology Support Center. IBM Reuse Methodology: Domain Analysis, </institution> <month> February </month> <year> 1992. </year>
Reference: 8. <author> K. Kang, S. Cohen, J. Hess, W. Novak, and A. Peterson. </author> <title> Feature-oriented domain analysis (foda) feasibility study. </title> <type> Tech. Rep. </type> <institution> CMU/SEI-90-TR-21, Software Engineering Institute, Carnegie-Mellon University, </institution> <month> November </month> <year> 1990. </year>
Reference: 9. <author> G. Klinker, C. Bhola, G. Dallemagne, D. Marques, and J. McDermott. </author> <title> Usable and reusable programming constructs. </title> <journal> Knowledge Acquisition, </journal> <volume> 3 </volume> <pages> 117-136, </pages> <year> 1991. </year>
Reference: 10. <author> B. Latour and S. Woolgar. </author> <title> Laboratory Life: The Construction of Scientific Facts. </title> <publisher> Princeton University Press, </publisher> <address> Princeton, New Jersey., 2nd edition edition, </address> <year> 1986. </year>
Reference: 11. <author> M. Lubars. </author> <title> Domain analysis and domain engineering in idea. </title> <editor> In R. Prieto-Diaz and G. Arango, editors, </editor> <title> Domain Analysis and Software Systems Modeling. </title> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year>
Reference: 12. <author> M.D. Lubars and N. Iscoe. </author> <title> Frameworks versus libraries: A dichotomy of reuse strategies. </title> <booktitle> In Proceedings of the Sixth Annual Workshop on Software Reuse, </booktitle> <year> 1993. </year>
Reference: 13. <author> S. Marcus. </author> <title> Automating Knowledge Acquisition for Expert Systems. </title> <publisher> Kluwer, </publisher> <address> Amsterdam, </address> <year> 1988. </year>
Reference: 14. <author> J. McDermott. </author> <title> Preliminary steps towards a taxonomy of problem-solving methods. </title> <editor> In S. Marcus, editor, </editor> <booktitle> Automating Knowledge Acquisition for Expert Systems, </booktitle> <pages> pages 225-255. </pages> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1988. </year>
Reference: 15. <author> R. Prieto-Diaz. </author> <title> Domain analysis for reusability. </title> <booktitle> In Proceedings of COMPSAC '87, </booktitle> <pages> pages 23-29, </pages> <year> 1987. </year>
Reference: 16. <author> T. Stockwell. </author> <title> Internet information discovery and retrieval tools cost effective building blocks for asset libraries. </title> <booktitle> In Proceedings of the Annual Workshop on Software Reuse, </booktitle> <year> 1993. </year>
Reference: 17. <author> W. Van de Velde. </author> <title> A constructivist view on knowledge engineering. </title> <editor> In T. Cohn, editor, </editor> <booktitle> Proceedigns of the European Conference on Artificial Intelligence, </booktitle> <pages> pages 729-734. </pages> <publisher> John Wiley and Sons, </publisher> <year> 1994. </year>
Reference: 18. <author> K.P. Yglesias. </author> <title> Progress in reusable parts libraries (or lack thereof). </title> <booktitle> In Proceedings of the Sixth Annual Workshop on Software Reuse, </booktitle> <year> 1993. </year> <title> This article was processed using the L A T E X macro package with LLNCS style </title>
References-found: 18

