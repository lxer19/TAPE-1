URL: ftp://ftp.cs.unc.edu/pub/users/sc/COMP203-S96/L1996-04-02.PS.Z
Refering-URL: http://www.cs.unc.edu/~sc/teaching/COMP203-S1996/lectures.html
Root-URL: http://www.cs.unc.edu
Title: Comp 203: Parallel and Distributed Computing Class notes 2 April 1996. An atomic transaction is
Author: Jason Priebe Lei Wang 
Note: Topic: Transaction 1. Transactions  1. Atomicity: A transaction either completes or it does not happen at all. A transaction has no effect on the  1.2. Implementing Transactions  2. END_TRANSACTION or CLOSE_TRANSACTION: returns COMMIT or ABORT 3. ABORT_TRANSACTION 4. READ  or a computer fails, causing the transaction to abort.  
Abstract: 3. Permanence (durability): Once a transaction commits, changes are permanent. A transaction can commit or abort. If it aborts, the system reverts to the previous state, but if it commits, the results are written to stable storage. (Stable storage is storage that will survive everything short of a nuclear strike.) This addresses the issue of fault tolerance. 
Abstract-found: 1
Intro-found: 1
References-found: 0

