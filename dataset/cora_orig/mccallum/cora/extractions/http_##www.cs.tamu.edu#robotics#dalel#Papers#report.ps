URL: http://www.cs.tamu.edu/robotics/dalel/Papers/report.ps
Refering-URL: http://www.cs.tamu.edu/robotics/dalel/research-stmt.html
Root-URL: http://www.cs.tamu.edu
Title: VuMod A Tcl/Tk Interface for OBPRM  
Author: Lucia K. Dale 
Date: July 22, 1996  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> N. M. Amato and Y. Wu, </author> <title> "A randomized roadmap method for path and manipulation planning," </title> <booktitle> in Proc. IEEE Internat. Conf. </booktitle> <institution> Robot. Autom., Minneapolis, MN, Apr.22-28, </institution> <year> 1996, </year> <note> vol.1, pp.113-120. </note>
Reference-contexts: The approach generally has two steps: roadmap building and then query processing. Roadmaps can be built during preprocessing. Processing each motion planning query consists of connecting its initial and goal configurations to the roadmap and then finding a path between them <ref> [1] </ref>. The main novelty of OBPRM is in the roadmap building stage. When generating roadmap candidate points, the new method attempts to generate candidate points uniformly 2 distributed on the surface of each C-obstacle. An example of a motion planning query using an OBPRM roadmap is shown in Figure 1. <p> As a consequence of this new approach, OBPRM has proven particulary successful over other approaches at * finding paths through long, narrow passages in a crowded C-space and * solving tasks involving contact. Details of OBPRM can be found in <ref> [1] </ref> and [11]. 1.1.3 Results VuMod was developed as an alternate viewing platform for OBPRM's solutions to path queries (previously an Xmotif venue) as well as a sophisticated and interactive path query formulator for OBPRM.
Reference: [2] <author> J. Barraquand, B. Langlois, and J.-C. Latombe, </author> <title> "Numerical potential field techniques for robot path planning," </title> <journal> IEEE Trans. Sys., Man, Cybern., vol.22, no.2, pp.224-241, </journal> <volume> Mar./Apr., </volume> <year> 1992. </year>
Reference-contexts: Many probabilistic methods have been or are currently under development <ref> [2, 3, 4, 6, 7] </ref> and OBPRM is one of them. 1.1.1 Terminology The general problem in motion planning is to get a robot from one position and pose to another position and pose.
Reference: [3] <author> J. Barraquand and J.-C. Latombe, </author> <title> "Robot motion planning: A distributed representation approach," </title> <type> Internat. </type> <institution> J. Robot. Res., vol.10, no.6, pp.628-649, </institution> <month> Dec., </month> <year> 1991. </year>
Reference-contexts: Many probabilistic methods have been or are currently under development <ref> [2, 3, 4, 6, 7] </ref> and OBPRM is one of them. 1.1.1 Terminology The general problem in motion planning is to get a robot from one position and pose to another position and pose.
Reference: [4] <author> B. Faverjon and P. Tournassoud, </author> <title> "A practical approach to motion-planning for manipulators with many degrees of freedom," </title> <booktitle> in Robotics Research 5, </booktitle> <editor> H. Miura and S. Arimoto (eds), </editor> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1990. </year>
Reference-contexts: Many probabilistic methods have been or are currently under development <ref> [2, 3, 4, 6, 7] </ref> and OBPRM is one of them. 1.1.1 Terminology The general problem in motion planning is to get a robot from one position and pose to another position and pose.
Reference: [5] <author> Y. Hwang and N. Ahuja, </author> <title> "Gross motion planning a survey," </title> <journal> ACM Computing Surveys, vol.24, no.3, </journal> <volume> pp.219-291, </volume> <month> Sept., </month> <year> 1992. </year>
Reference-contexts: Among them are robotics, virtual reality systems and computer-aided design. Unfortunately, while many motion planning methods have been proposed, most are impractical because they are computationally prohibitive in all but some restricted cases, e.g., when the robot and/or the workspace are very simplistic <ref> [5, 7] </ref>. With existing technology, the complexity of the problem in more realistic situations can only be overcome through the use of probabilistic or heuristic methods (as opposed to complete methods which are guaranteed to find a solution or determine that none exists) [11]. <p> A position and pose of the robot together are referred to as a configuration of the robot. The degree of freedom (dof ) of a robot is the minimum number of parameters needed to specify a configuration of the robot <ref> [5, 7] </ref>. Using this terminology then, the configuration space (C-space) is the set of all possible configurations of the robot and clearly the complexity of a C-space varies directly with the complexity of a corresponding robot [9, 10]. <p> A C-obstacle is the representation in C-space of an obstacle in the workspace. A path is a series of collision-free configurations of the robot moving in the workspace from an initial configuration towards a goal configuration. More information about motion planning can be found in <ref> [5, 7] </ref>. 1.1.2 Method In the traditional roadmap method a graph, or roadmap, is built in C-space and planning consists of connecting the initial and goal configurations to the roadmap and then finding a path between the two. The approach generally has two steps: roadmap building and then query processing. <p> That is, a robot is simply a group of line segments of various lengths connected in various ways. The degree of freedom (dof ) of a robot is the minimum number of parameters needed to specify a configuration of the robot <ref> [5, 7] </ref>. 3.3.1 File Description These files must follow the naming convention of filename.def enforced by this interface system as well as by OBPRM. The format of the robot definition files is dictated by OBPRM.
Reference: [6] <author> L. Kavraki and J. C. Latombe, </author> <title> "Randomized preprocessing of configuration space for fast path planning," </title> <booktitle> in Proc. IEEE Internat. Conf. Robot. </booktitle> <address> Autom., San Diego, CA, </address> <month> May 8-13, </month> <year> 1994, </year> <month> pp.2138-2145. </month>
Reference-contexts: Many probabilistic methods have been or are currently under development <ref> [2, 3, 4, 6, 7] </ref> and OBPRM is one of them. 1.1.1 Terminology The general problem in motion planning is to get a robot from one position and pose to another position and pose.
Reference: [7] <author> J.-C. Latombe, </author> <title> Robot Motion Planning, </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1991. </year>
Reference-contexts: Among them are robotics, virtual reality systems and computer-aided design. Unfortunately, while many motion planning methods have been proposed, most are impractical because they are computationally prohibitive in all but some restricted cases, e.g., when the robot and/or the workspace are very simplistic <ref> [5, 7] </ref>. With existing technology, the complexity of the problem in more realistic situations can only be overcome through the use of probabilistic or heuristic methods (as opposed to complete methods which are guaranteed to find a solution or determine that none exists) [11]. <p> Many probabilistic methods have been or are currently under development <ref> [2, 3, 4, 6, 7] </ref> and OBPRM is one of them. 1.1.1 Terminology The general problem in motion planning is to get a robot from one position and pose to another position and pose. <p> A position and pose of the robot together are referred to as a configuration of the robot. The degree of freedom (dof ) of a robot is the minimum number of parameters needed to specify a configuration of the robot <ref> [5, 7] </ref>. Using this terminology then, the configuration space (C-space) is the set of all possible configurations of the robot and clearly the complexity of a C-space varies directly with the complexity of a corresponding robot [9, 10]. <p> A C-obstacle is the representation in C-space of an obstacle in the workspace. A path is a series of collision-free configurations of the robot moving in the workspace from an initial configuration towards a goal configuration. More information about motion planning can be found in <ref> [5, 7] </ref>. 1.1.2 Method In the traditional roadmap method a graph, or roadmap, is built in C-space and planning consists of connecting the initial and goal configurations to the roadmap and then finding a path between the two. The approach generally has two steps: roadmap building and then query processing. <p> That is, a robot is simply a group of line segments of various lengths connected in various ways. The degree of freedom (dof ) of a robot is the minimum number of parameters needed to specify a configuration of the robot <ref> [5, 7] </ref>. 3.3.1 File Description These files must follow the naming convention of filename.def enforced by this interface system as well as by OBPRM. The format of the robot definition files is dictated by OBPRM.
Reference: [8] <author> J. K. Ousterhout, </author> <title> Tcl and the Tk Toolkit., </title> <publisher> Addison Wesley Publishing Co., </publisher> <address> Reading, MA, </address> <year> 1994. </year>
Reference-contexts: Ousterhout. Since then Tk, an X11 toolkit based on Tcl, has been added. Tk extends the core Tcl facilities with commands for building user interfaces. The two software packages, Tcl and Tk, together provide a programming system for developing and using graphical user interfaces <ref> [8] </ref>. Because it is interpreted rather than compiled it provides a rapid development environment which was most appreciated during the implementation of VuMod. Tcl is embeddable in C, being written in C itself, and embedding is recommended for faster application performance [8]. <p> programming system for developing and using graphical user interfaces <ref> [8] </ref>. Because it is interpreted rather than compiled it provides a rapid development environment which was most appreciated during the implementation of VuMod. Tcl is embeddable in C, being written in C itself, and embedding is recommended for faster application performance [8].
Reference: [9] <author> T. Lozano-Perez, </author> <title> "Automatic planning of manipulator transfer movements," </title> <journal> IEEE Trans. on Sys. Man, Cybern., vol.11, </journal> <volume> no.10, </volume> <pages> pp. 681-698, </pages> <month> Oct., </month> <year> 1981. </year>
Reference-contexts: Using this terminology then, the configuration space (C-space) is the set of all possible configurations of the robot and clearly the complexity of a C-space varies directly with the complexity of a corresponding robot <ref> [9, 10] </ref>. The workspace is the combination of physical objects and free space about and within which the robot can navigate. A C-obstacle is the representation in C-space of an obstacle in the workspace.
Reference: [10] <author> T. Lozano-Perez, </author> <title> "Spatial Planning: A configuration space approach," </title> <journal> IEEE Trans. on Computers, vol.32, no.2, </journal> <volume> pp.108-120, </volume> <month> Feb., </month> <year> 1983. </year>
Reference-contexts: Using this terminology then, the configuration space (C-space) is the set of all possible configurations of the robot and clearly the complexity of a C-space varies directly with the complexity of a corresponding robot <ref> [9, 10] </ref>. The workspace is the combination of physical objects and free space about and within which the robot can navigate. A C-obstacle is the representation in C-space of an obstacle in the workspace.
Reference: [11] <author> Y. Wu, </author> <title> An obstacle-based probabilistic roadmap method for path planning. </title> <institution> Department of Computer Science Masters Thesis, Texas A&M University, College Station, TX, </institution> <year> 1996. </year> <month> 12 </month>
Reference-contexts: With existing technology, the complexity of the problem in more realistic situations can only be overcome through the use of probabilistic or heuristic methods (as opposed to complete methods which are guaranteed to find a solution or determine that none exists) <ref> [11] </ref>. Many probabilistic methods have been or are currently under development [2, 3, 4, 6, 7] and OBPRM is one of them. 1.1.1 Terminology The general problem in motion planning is to get a robot from one position and pose to another position and pose. <p> As a consequence of this new approach, OBPRM has proven particulary successful over other approaches at * finding paths through long, narrow passages in a crowded C-space and * solving tasks involving contact. Details of OBPRM can be found in [1] and <ref> [11] </ref>. 1.1.3 Results VuMod was developed as an alternate viewing platform for OBPRM's solutions to path queries (previously an Xmotif venue) as well as a sophisticated and interactive path query formulator for OBPRM.
References-found: 11

