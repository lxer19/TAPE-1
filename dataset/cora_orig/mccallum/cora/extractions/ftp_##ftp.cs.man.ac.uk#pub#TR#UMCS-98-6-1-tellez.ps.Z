URL: ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-98-6-1-tellez.ps.Z
Refering-URL: ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-98-6-1.html
Root-URL: http://www.cs.man.ac.uk
Email: (e-mail: tellez@lifo.univ-orleans.fr)  
Title: Set Constraints Validation for Set-Based Specification  
Author: Agnes Tellez-Arenas 
Address: Universite d'Orleans (France)  
Affiliation: LIFO,  
Abstract: Many powerful specification languages are based on set theory, such as Z ([12]) and B ([1]) derived from VDM([6]). To validate a specification developed along such lines at a formal level, one needs tools to manipulate logical formulas on sets. Behavioral properties of modules specified in this manner can be naturally described using intentional sets and constraints on the global state variables of the specification. In this work we propose a method for such purposes of validation, by constructing a logic program meant as a "synthesis" of the behaviour of the state variables under the operations of the specification. The logic program thus constructed admits as a natural model the set of all reachable values of the state variables, after the execution of any sequence of operations. The main interest of such an approach is that it can allow us to prove the properties of a program; in addition, we can also use the logic program as a "prototype" capable of testing if a given value is reachable by the global state variables of the specified module. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J-R. </author> <title> Abrial. The B-Book: Assigning Programs to Meanings. </title> <publisher> Cambridge University Press, </publisher> <year> 1996. </year>
Reference: [2] <author> P. Bruscoli and A. Dovier and E. Pontelli and G. Rossi. </author> <title> Compiling Intensional Sets in CLP. </title> <editor> In P. Van Entenryck, editor, </editor> <booktitle> Logic Programming : Proceedings of the 11 th International Conference on Logic Programming, </booktitle> <pages> pages 647-661. </pages> <publisher> MIT Press, </publisher> <month> june </month> <year> 1994. </year>
Reference-contexts: In this case it is easy to notice the inconsistency. In <ref> [3, 9, 2] </ref>, intensional sets are allowed but they are replaced the corresponding extensional set terms, using enumeration techniques. 3 Assume given to begin with a first order signatures, whose variables are denoted by small roman letters x; y; : : : This signature is enriched with set constructors among the
Reference: [3] <author> A. Dovier, E. Omodeo, E. Pontelli and G. Rossi. </author> <title> flogg : A Language for Programming in Logic with Finite Sets. </title> <journal> Journal of Logic Programming, </journal> <volume> 28(1) </volume> <pages> 1-44, </pages> <month> july </month> <year> 1996. </year>
Reference-contexts: In this case it is easy to notice the inconsistency. In <ref> [3, 9, 2] </ref>, intensional sets are allowed but they are replaced the corresponding extensional set terms, using enumeration techniques. 3 Assume given to begin with a first order signatures, whose variables are denoted by small roman letters x; y; : : : This signature is enriched with set constructors among the
Reference: [4] <author> R. Gilleron, S. Tison and M. Tommasi. </author> <title> Solving systems of set constraints with negated susbset relationships. </title> <type> Technical Report 247, </type> <institution> Laboratoire d'Informatique Fondamentale de Lille, </institution> <year> 1993. </year>
Reference: [5] <author> N. Heintze. </author> <title> Set Based Progam Analysis. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, </institution> <year> 1992. </year>
Reference: [6] <author> C. B. Jones. </author> <title> Systematic Software Development Using VDM. </title> <booktitle> Series in Computer Science. </booktitle> <publisher> Prentice Hall International, </publisher> <year> 1986. </year>
Reference: [7] <author> D. Kozen. </author> <title> Set Constraint and Logic Programming. </title> <booktitle> In Proceedings of CCL95, </booktitle> <year> 1995. </year>
Reference: [8] <author> K. Kunen. </author> <title> Negation in Logic Programming. </title> <journal> J. Logic Programming, </journal> <volume> Vol 4 1987, </volume> <pages> pages. 289-308. </pages>
Reference: [9] <author> B. Legeard and E. Legros. </author> <title> Short overview of the CLPS system. </title> <booktitle> In Proceedings of the 3 rd International Symposium PLILP'91, </booktitle> <pages> pages 431-433, </pages> <year> 1991. </year>
Reference-contexts: In this case it is easy to notice the inconsistency. In <ref> [3, 9, 2] </ref>, intensional sets are allowed but they are replaced the corresponding extensional set terms, using enumeration techniques. 3 Assume given to begin with a first order signatures, whose variables are denoted by small roman letters x; y; : : : This signature is enriched with set constructors among the
Reference: [10] <author> J.W. Lloyd. </author> <title> Foundation of Logic Programming. Springer-Verlag, </title> <booktitle> Symbolic Computation Series, </booktitle> <year> 1987. </year>
Reference: [11] <author> G. Richard, F. Saubion and A. Tellez-Arenas. </author> <title> Intentional Set Constraints. </title> <editor> In M. Falaschi, M. Navarro and A. Polocritti, editors, </editor> <booktitle> Proceedings of the joint conference on declarative programming APIA-GULP-PRODE'97, </booktitle> <pages> pages 479-489, </pages> <address> Grado, Italy, </address> <month> june 16-19 </month> <year> 1997. </year>
Reference: [12] <author> J. M. Spivey. </author> <title> The Z notation : A reference Manual. </title> <booktitle> Series in Computer Science. </booktitle> <publisher> Prentice Hall International, </publisher> <year> 1989. </year>
Reference: [13] <author> A. Tellez-Arenas. </author> <title> Solving Inclusion Constraints between Intentional Sets. </title> <address> Schloss Hagenberg, Aus-tria, </address> <month> November 1 </month> <year> 1997. </year> <booktitle> Third International Workshop on Set Constraints. </booktitle> <pages> 8 </pages>
References-found: 13

