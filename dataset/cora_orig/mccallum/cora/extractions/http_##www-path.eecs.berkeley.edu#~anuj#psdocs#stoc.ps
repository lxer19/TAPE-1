URL: http://www-path.eecs.berkeley.edu/~anuj/psdocs/stoc.ps
Refering-URL: http://www-path.eecs.berkeley.edu/~anuj/papers/papers.html
Root-URL: 
Title: What's Decidable about Hybrid Automata?  
Author: Thomas A. Henzinger Peter W. Kopke Anuj Puri Pravin Varaiya 
Abstract: Hybrid automata model systems with both digital and analog components, such as embedded control programs. Many verification tasks for such programs can be expressed as reachability problems for hybrid automata. By improving on previous decidability and undecidability results, we identify the precise boundary between decidability and undecidability of the reachability problem for hybrid automata. On the positive side, we give an (optimal) PSPACE reachability algorithm for the case of initialized rectangular automata, where all analog variables follow trajectories within piecewise-linear envelopes and are reinitialized whenever the envelope changes. Our algorithm is based on a translation of an initialized rectangular automaton into a timed automaton that defines the same timed language. The translation has practical significance for verification, because it guarantees the termination of symbolic procedures for the reachability analysis of initialized rectangular automata. On the negative side, we show that several slight generalizations of initialized rectangular automata lead to an undecidable reachability problem. In particular, we prove that the reachability problem is undecidable for timed automata with a single stopwatch. 
Abstract-found: 1
Intro-found: 1
Reference: [ACH93] <author> R. Alur, C. Courcoubetis, T.A. Henzinger. </author> <title> Computing accumulated delays in real-time systems. </title> <booktitle> CAV 93, </booktitle> <publisher> Springer LNCS 697, </publisher> <year> 1993, </year> <pages> pp. 181-193. </pages>
Reference-contexts: In [KPSY93], it is shown that reachability is undecidable for timed automata with two three-slope variables and restriction (2). In [Cer92], it is shown that reachability is undecidable for timed automata with three stopwatches and restriction (2). In <ref> [ACH93, BES93, KPSY93, BER94] </ref>, it is shown that, under various strong side conditions, reachability is decidable for timed automata with one stopwatch, but the general problem is left open. We strengthen these results and give a uniform characterization of the undecidability frontier. <p> Since the digitiza-tion technique requires closed preguards and invariants, restrictions 1 and 3 imply that the technique does not generalize beyond very special cases. Many limited decidability results apply to automata with a single stopwatch <ref> [ACH93, BES93, KPSY93, BER94] </ref>. 6 While we have defined timed simulations, our proof shows that Proposition 3.9 also holds for time-abstract simulations. Restriction 4 implies that these results do not generalize beyond very special cases.
Reference: [ACH + 94] <author> R. Alur, C. Courcoubetis, N. Halbwachs, T.A. Henzinger, P.-H. Ho, X. Nicollin, A. Olivero, J. Sifakis, S. Yovine. </author> <title> The algorithmic analysis of hybrid systems. </title> <journal> Theoretical Computer Science, </journal> <volume> 138 </volume> <pages> 3-34, </pages> <year> 1995. </year>
Reference-contexts: Department of Computer Science, Cornell University, Ithaca, NY 14853. 3 Department of Electrical Engineering and Computer Science, University of California, Berkeley, CA 94720. for the analysis of embedded software and hardware, including distributed processes with drifting clocks, real-time schedulers, and protocols for the control of manufacturing plants, vehicles, and robots <ref> [AHH93, NOSY93, BPV94, HH94, HRP94, MV94, PV94b, ACH + 94, MPS95] </ref>. Two problems that are central to the analysis of hybrid automata are the reachability problem and the more general timed language-inclusion problem 4 . <p> Third, the result did not suggest a practical verification algorithm. Fourth, and perhaps most importantly, the result did not imply the termination of existing semi-decision procedures for the reachability problem of hybrid automata, such as those implemented in the HyTech verification tool <ref> [AHH93, ACH + 94] </ref>. Our main decidability result remedies all four of these shortcomings, because its proof is based on a translation of rectangular-activity automata via multirate automata into timed automata.
Reference: [ACH94] <author> R. Alur, C. Courcoubetis, T.A. Henzinger. </author> <title> The observational power of clocks. </title> <booktitle> CONCUR 94, </booktitle> <publisher> Springer LNCS 836, </publisher> <year> 1993, </year> <pages> pp. 162-177. </pages>
Reference-contexts: M (ff M (R)), and Lang M (R) = Lang T M (ff M (R)). 1 The [AD94] definition of timed automata does not allow memory cells, but their results can be extended to our case. 5 We use the notions of timed and time-abstract (bi)- simulations as defined in <ref> [ACH94] </ref> for timed automata. Corollary 3.3 [ACHH93, NOSY93] The reachability problem and the language-inclusion problem for initialized multirate automata are PSPACE-complete. 3.2 Rectangular to Multirate Automata Skewed-clock translation of initialized rectangular automata.
Reference: [ACHH93] <author> R. Alur, C. Courcoubetis, T.A. Henzinger, P.- H. Ho. </author> <title> Hybrid automata: an algorithmic approach to the specification and verification of hybrid systems. Hy brid Systems, </title> <publisher> Springer LNCS 736, </publisher> <year> 1993, </year> <pages> pp. 209-229. </pages>
Reference-contexts: 1 Introduction A hybrid automaton <ref> [ACHH93] </ref> combines the discrete dynamics of a finite automaton with the continuous dynamics of a dynamical system. Hybrid automata thus provide a mathematical model for digital computer systems that interact with an analog environment in real time. <p> Decidability [Section 3]. The first decidability result for hybrid automata was obtained for timed automata, whose reachability and timed language-inclusion problems are PSPACE-complete [AD94]. Under restrictions (1) and (2), that result was later generalized to multirate automata, with variables that run at any constant positive slopes <ref> [ACHH93, NOSY93] </ref>, and to the reachability problem for rectangular-activity automata [PV94a]. The latter result, however, fell short in several respects, because its proof was based on the discretization of time. First, the result applied only to automata with closed rectangular activities. <p> Undecidability [Section 4]. Over the past few years, there have been several ad hoc undecidability results about hybrid automata. A constant-slope variable with slope other than 0 or 1 is called a skewed clock, and a two-slope variable with slopes 0 and 1 is a stopwatch. In <ref> [ACHH93] </ref>, it is shown that reachability is undecidable for timed automata with two skewed clocks. In [KPSY93], it is shown that reachability is undecidable for timed automata with two three-slope variables and restriction (2). <p> to be undecidable for timed automata with slope 0 variables. 2 Rectangular Automata A hybrid automaton of dimension n is an infinite-state machine whose state has a discrete part, which ranges over the vertices of a graph, and a continuous part, which ranges over the n-dimensional euclidean space R n <ref> [ACHH93] </ref>. A run of a hybrid automaton is a sequence of transition steps and time steps. During a transition step, the discrete and continuous states are updated according to a guarded command. <p> Corollary 3.3 <ref> [ACHH93, NOSY93] </ref> The reachability problem and the language-inclusion problem for initialized multirate automata are PSPACE-complete. 3.2 Rectangular to Multirate Automata Skewed-clock translation of initialized rectangular automata.
Reference: [AD94] <author> R. Alur, D.L. Dill. </author> <title> A theory of timed automata. </title> <journal> Theoretical Computer Science, </journal> <volume> 126 </volume> <pages> 183-235, </pages> <year> 1994. </year>
Reference-contexts: While a scattering of previous results show that both problems are decidable in certain special cases, and undecidable in certain general cases, this paper provides a systematic identification of the boundary between decidabil-ity and undecidability. Hybrid automata generalize timed automata. Timed automata <ref> [AD94] </ref> equip finite automata with clocks, which are real-valued variables that follow continuous trajectories with constant slope 1. Hybrid automata equip finite automata with real-valued variables whose trajectories follow more general dynamical laws. For each class of dynamical laws, we obtain a class of hybrid automata. <p> To explain the significance of both results, they must be placed in the context of previous work. Decidability [Section 3]. The first decidability result for hybrid automata was obtained for timed automata, whose reachability and timed language-inclusion problems are PSPACE-complete <ref> [AD94] </ref>. Under restrictions (1) and (2), that result was later generalized to multirate automata, with variables that run at any constant positive slopes [ACHH93, NOSY93], and to the reachability problem for rectangular-activity automata [PV94a]. <p> Given a rectangular automaton A, a rectangular zone R Q A , and a deter-minizable timed automaton T <ref> [AD94, AFH94] </ref> (or a formula T of the temporal logic MITL [AFH91]), is the timed language Lang A (R) contained in the timed language defined by T ? This problem is more general than the reachability problem, and a solution permits the verification of timed and untimed safety requirements for systems <p> We then show that the reacha-bility problem (and therefore language inclusion) is undecidable for very restricted classes of uninitial-ized rectangular automata, and also for initialized automata with slightly generalized invariant, activity, preguard, postguard, or update functions. 3 Decidability We translate initialized rectangular automata into timed automata <ref> [AD94] </ref>. The translation preserves timed languages, and therefore reduces the language-inclusion problem for initialized rectangular automata to the language-inclusion problem for timed automata, which is well understood. The translation proceeds in two steps, which are presented in the following two subsections. 3.1 Multirate To Timed Automata Multirate and timed automata. <p> The multirate automaton A is a timed automaton if each variable of A is either a clock or a memory cell. Every timed automaton is global, and therefore initialized. The reachability problem and the language-inclusion problem are PSPACE-complete for timed automata <ref> [AD94] </ref>. 1 Clock translation of initialized multirate automata. <p> Theorem 3.2 Let M be an initialized multirate automaton. For every zone R Q M , Post fl M (R) = Post fl T M (ff M (R)), Pre fl T M (ff M (R)), and Lang M (R) = Lang T M (ff M (R)). 1 The <ref> [AD94] </ref> definition of timed automata does not allow memory cells, but their results can be extended to our case. 5 We use the notions of timed and time-abstract (bi)- simulations as defined in [ACH94] for timed automata. <p> Theorem 4.5 The reachability problem and the language-inclusion problem for rectangular automata with clock-partition activities are PSPACE-complete. We prove Theorem 4.5 by showing that every rectangular automaton with a clock-partition activity has a finite time-abstract bisimulation, which is a product of region equivalences for timed automata <ref> [AD94] </ref>. Acknowledgement. We thank Howard Wong-Toi for a careful reading.
Reference: [AFH91] <author> R. Alur, T. Feder, T.A. Henzinger. </author> <title> The benefits of relaxing punctuality. </title> <booktitle> 10th ACM PODC, </booktitle> <year> 1991, </year> <pages> pp. 139-152. </pages>
Reference-contexts: Given a rectangular automaton A, a rectangular zone R Q A , and a deter-minizable timed automaton T [AD94, AFH94] (or a formula T of the temporal logic MITL <ref> [AFH91] </ref>), is the timed language Lang A (R) contained in the timed language defined by T ? This problem is more general than the reachability problem, and a solution permits the verification of timed and untimed safety requirements for systems that are modeled as rectangular automata.
Reference: [AFH94] <author> R. Alur, L. Fix, T.A. Henzinger. </author> <title> A determiniz able class of timed automata. </title> <booktitle> CAV 94, </booktitle> <publisher> Springer LNCS 818, </publisher> <year> 1994, </year> <pages> pp. 1-13. </pages>
Reference-contexts: Given a rectangular automaton A, a rectangular zone R Q A , and a deter-minizable timed automaton T <ref> [AD94, AFH94] </ref> (or a formula T of the temporal logic MITL [AFH91]), is the timed language Lang A (R) contained in the timed language defined by T ? This problem is more general than the reachability problem, and a solution permits the verification of timed and untimed safety requirements for systems
Reference: [AHH93] <author> R. Alur, T.A. Henzinger, P.-H. Ho. </author> <title> Automatic symbolic verification of embedded systems. </title> <booktitle> 14th IEEE RTSS, </booktitle> <year> 1993, </year> <pages> pp. 2-11. </pages>
Reference-contexts: Department of Computer Science, Cornell University, Ithaca, NY 14853. 3 Department of Electrical Engineering and Computer Science, University of California, Berkeley, CA 94720. for the analysis of embedded software and hardware, including distributed processes with drifting clocks, real-time schedulers, and protocols for the control of manufacturing plants, vehicles, and robots <ref> [AHH93, NOSY93, BPV94, HH94, HRP94, MV94, PV94b, ACH + 94, MPS95] </ref>. Two problems that are central to the analysis of hybrid automata are the reachability problem and the more general timed language-inclusion problem 4 . <p> We model these two situations by the dynamical laws _x 2 [4; 2] and _x 2 [1; 3]|so-called rectangular activities <ref> [AHH93, PV94a] </ref>|which enforce piecewise-linear envelopes on the water-level trajectories. <p> Third, the result did not suggest a practical verification algorithm. Fourth, and perhaps most importantly, the result did not imply the termination of existing semi-decision procedures for the reachability problem of hybrid automata, such as those implemented in the HyTech verification tool <ref> [AHH93, ACH + 94] </ref>. Our main decidability result remedies all four of these shortcomings, because its proof is based on a translation of rectangular-activity automata via multirate automata into timed automata. <p> Corollary 3.6 The reachability problem and the language-inclusion problem for initialized rectangular automata are PSPACE-complete. The verification tool HyTech contains a semi-decision procedure that attacks the reachability prob lem for hybrid automata by iterating Pre and Post operations on zones <ref> [AHH93] </ref>. The HyTech procedure is known to terminate on timed automata [HNSY94]. We obtain the following corollary, which asserts that the HyTech procedure terminates on all initialized rectangular automata. Corollary 3.7 Let A be an initialized rectangular automaton.
Reference: [AHV93] <author> R. Alur, T.A. Henzinger, M.Y. Vardi. </author> <title> Para metric real-time reasoning. </title> <booktitle> 25th ACM STOC, </booktitle> <year> 1993, </year> <pages> pp. 592-601. </pages>
Reference-contexts: In [MP93], de-cidability and undecidability results are obtained for a deterministic model of hybrid systems with strong side conditions on the discrete dynamics. The hybrid automaton model, by contrast, is nondeterministic and its discrete dynamics is unconstrained. Finally, our results do not cover the case considered in <ref> [AHV93] </ref>, where reachability is shown to be undecidable for timed automata with slope 0 variables. 2 Rectangular Automata A hybrid automaton of dimension n is an infinite-state machine whose state has a discrete part, which ranges over the vertices of a graph, and a continuous part, which ranges over the n-dimensional
Reference: [BER94] <author> A. Bouajjani, R. Echahed, R. Robbana. </author> <title> Verify ing invariance properties of timed systems with dura tion variables. FTRTFT 94, </title> <publisher> Springer LNCS 863, </publisher> <year> 1994, </year> <pages> pp. 193-210. </pages>
Reference-contexts: In [KPSY93], it is shown that reachability is undecidable for timed automata with two three-slope variables and restriction (2). In [Cer92], it is shown that reachability is undecidable for timed automata with three stopwatches and restriction (2). In <ref> [ACH93, BES93, KPSY93, BER94] </ref>, it is shown that, under various strong side conditions, reachability is decidable for timed automata with one stopwatch, but the general problem is left open. We strengthen these results and give a uniform characterization of the undecidability frontier. <p> We use simple automata for our undecidability results. Restrictions 1 and 2 imply that invariants, postguards, and nondeterministic variable updates do not contribute to our undecidability results. Many limited decidability results are based on the digitization of real-numbered delays <ref> [HMP92, BES93, BER94, PV94a] </ref>. Since the digitiza-tion technique requires closed preguards and invariants, restrictions 1 and 3 imply that the technique does not generalize beyond very special cases. <p> Since the digitiza-tion technique requires closed preguards and invariants, restrictions 1 and 3 imply that the technique does not generalize beyond very special cases. Many limited decidability results apply to automata with a single stopwatch <ref> [ACH93, BES93, KPSY93, BER94] </ref>. 6 While we have defined timed simulations, our proof shows that Proposition 3.9 also holds for time-abstract simulations. Restriction 4 implies that these results do not generalize beyond very special cases.
Reference: [BES93] <author> A. Bouajjani, R. Echahed, J. Sifakis. </author> <title> On model checking for real-time properties with durations. </title> <booktitle> 8th IEEE LICS, </booktitle> <year> 1993, </year> <pages> pp. 147-159. </pages>
Reference-contexts: In [KPSY93], it is shown that reachability is undecidable for timed automata with two three-slope variables and restriction (2). In [Cer92], it is shown that reachability is undecidable for timed automata with three stopwatches and restriction (2). In <ref> [ACH93, BES93, KPSY93, BER94] </ref>, it is shown that, under various strong side conditions, reachability is decidable for timed automata with one stopwatch, but the general problem is left open. We strengthen these results and give a uniform characterization of the undecidability frontier. <p> We use simple automata for our undecidability results. Restrictions 1 and 2 imply that invariants, postguards, and nondeterministic variable updates do not contribute to our undecidability results. Many limited decidability results are based on the digitization of real-numbered delays <ref> [HMP92, BES93, BER94, PV94a] </ref>. Since the digitiza-tion technique requires closed preguards and invariants, restrictions 1 and 3 imply that the technique does not generalize beyond very special cases. <p> Since the digitiza-tion technique requires closed preguards and invariants, restrictions 1 and 3 imply that the technique does not generalize beyond very special cases. Many limited decidability results apply to automata with a single stopwatch <ref> [ACH93, BES93, KPSY93, BER94] </ref>. 6 While we have defined timed simulations, our proof shows that Proposition 3.9 also holds for time-abstract simulations. Restriction 4 implies that these results do not generalize beyond very special cases.
Reference: [BPV94] <author> D. Bosscher, I. Polak, F. Vaandrager. </author> <title> Veri fication of an audio-control protocol. FTRTFT 94, </title> <publisher> Springer LNCS 863, </publisher> <year> 1994, </year> <pages> pp. 170-192. </pages>
Reference-contexts: Department of Computer Science, Cornell University, Ithaca, NY 14853. 3 Department of Electrical Engineering and Computer Science, University of California, Berkeley, CA 94720. for the analysis of embedded software and hardware, including distributed processes with drifting clocks, real-time schedulers, and protocols for the control of manufacturing plants, vehicles, and robots <ref> [AHH93, NOSY93, BPV94, HH94, HRP94, MV94, PV94b, ACH + 94, MPS95] </ref>. Two problems that are central to the analysis of hybrid automata are the reachability problem and the more general timed language-inclusion problem 4 .
Reference: [Cer92] <author> K. Cerans. </author> <title> Algorithmic Problems in Analysis of Real-time System Specifications. </title> <type> PhD thesis, </type> <institution> Univ. of Latvia, </institution> <year> 1992. </year>
Reference-contexts: In [ACHH93], it is shown that reachability is undecidable for timed automata with two skewed clocks. In [KPSY93], it is shown that reachability is undecidable for timed automata with two three-slope variables and restriction (2). In <ref> [Cer92] </ref>, it is shown that reachability is undecidable for timed automata with three stopwatches and restriction (2). In [ACH93, BES93, KPSY93, BER94], it is shown that, under various strong side conditions, reachability is decidable for timed automata with one stopwatch, but the general problem is left open. <p> In fig ures we leave these wrapping conditions implicit. We use the following wrapping technique found originally in <ref> [Cer92] </ref>. Wrapping lemma. Let k 1 ; k 2 2 Q &gt;0 , and consider the simple wrapping automaton fragment of Figure 6. <p> Using assignment updates and one skewed clock, or assignment updates and one memory cell, the proof of Theorem 4.1 can be duplicated. The latter gives a new proof of a result from <ref> [Cer92] </ref>. Corollary 4.2 For every slope k 2 Q n f0; 1g, the reachability problem is undecidable for simple initialized automata with one skewed clock of slope k (resp. one memory cell) and assignment updates. Triangular preguards, postguards, invariants.
Reference: [HH94] <author> T.A. Henzinger, P.-H. Ho. </author> <title> Model-checking strate gies for linear hybrid systems. </title> <booktitle> Workshop on Hybrid Systems and Autonomous Control (Ithaca, </booktitle> <address> NY), </address> <year> 1994. </year>
Reference-contexts: Department of Computer Science, Cornell University, Ithaca, NY 14853. 3 Department of Electrical Engineering and Computer Science, University of California, Berkeley, CA 94720. for the analysis of embedded software and hardware, including distributed processes with drifting clocks, real-time schedulers, and protocols for the control of manufacturing plants, vehicles, and robots <ref> [AHH93, NOSY93, BPV94, HH94, HRP94, MV94, PV94b, ACH + 94, MPS95] </ref>. Two problems that are central to the analysis of hybrid automata are the reachability problem and the more general timed language-inclusion problem 4 .
Reference: [HH95] <author> T.A. Henzinger, P.-H. Ho. </author> <title> Algorithmic analysis of nonlinear hybrid systems. </title> <booktitle> CAV 95, </booktitle> <publisher> Springer LNCS, </publisher> <year> 1995. </year>
Reference-contexts: Rectangular-activity automata are interesting from a practical point of view, as they permit the modeling of clocks with bounded drift and the conservative approximation of arbitrary trajectory sets <ref> [OSY94, PV94b, HH95] </ref>, and from a theoretical point of view, as they lie at the boundary of decidability. Our results are twofold.
Reference: [HMP92] <author> T.A. Henzinger, Z. Manna, A. Pnueli. </author> <title> What good are digital clocks? ICALP 92, </title> <publisher> Springer LNCS 623, </publisher> <year> 1992, </year> <pages> pp. 545-558. </pages>
Reference-contexts: We use simple automata for our undecidability results. Restrictions 1 and 2 imply that invariants, postguards, and nondeterministic variable updates do not contribute to our undecidability results. Many limited decidability results are based on the digitization of real-numbered delays <ref> [HMP92, BES93, BER94, PV94a] </ref>. Since the digitiza-tion technique requires closed preguards and invariants, restrictions 1 and 3 imply that the technique does not generalize beyond very special cases.

Reference: [HRP94] <author> N. Halbwachs, P. Raymond, Y.-E. Proy. </author> <title> Ver ification of linear hybrid systems by means of convex approximation. </title> <booktitle> 1st Static Analysis Symp., </booktitle> <year> 1994. </year>
Reference-contexts: Department of Computer Science, Cornell University, Ithaca, NY 14853. 3 Department of Electrical Engineering and Computer Science, University of California, Berkeley, CA 94720. for the analysis of embedded software and hardware, including distributed processes with drifting clocks, real-time schedulers, and protocols for the control of manufacturing plants, vehicles, and robots <ref> [AHH93, NOSY93, BPV94, HH94, HRP94, MV94, PV94b, ACH + 94, MPS95] </ref>. Two problems that are central to the analysis of hybrid automata are the reachability problem and the more general timed language-inclusion problem 4 .
Reference: [KPSY93] <author> Y. Kesten, A. Pnueli, J. Sifakis, S. Yovine. </author> <title> In tegration graphs: a class of decidable hybrid systems. Hybrid Systems, </title> <publisher> Springer LNCS 736, </publisher> <year> 1993, </year> <pages> pp. 179 208. </pages>
Reference-contexts: A constant-slope variable with slope other than 0 or 1 is called a skewed clock, and a two-slope variable with slopes 0 and 1 is a stopwatch. In [ACHH93], it is shown that reachability is undecidable for timed automata with two skewed clocks. In <ref> [KPSY93] </ref>, it is shown that reachability is undecidable for timed automata with two three-slope variables and restriction (2). In [Cer92], it is shown that reachability is undecidable for timed automata with three stopwatches and restriction (2). <p> In [KPSY93], it is shown that reachability is undecidable for timed automata with two three-slope variables and restriction (2). In [Cer92], it is shown that reachability is undecidable for timed automata with three stopwatches and restriction (2). In <ref> [ACH93, BES93, KPSY93, BER94] </ref>, it is shown that, under various strong side conditions, reachability is decidable for timed automata with one stopwatch, but the general problem is left open. We strengthen these results and give a uniform characterization of the undecidability frontier. <p> Since the digitiza-tion technique requires closed preguards and invariants, restrictions 1 and 3 imply that the technique does not generalize beyond very special cases. Many limited decidability results apply to automata with a single stopwatch <ref> [ACH93, BES93, KPSY93, BER94] </ref>. 6 While we have defined timed simulations, our proof shows that Proposition 3.9 also holds for time-abstract simulations. Restriction 4 implies that these results do not generalize beyond very special cases.
Reference: [MP93] <author> O. Maler, A. Pnueli. </author> <title> Reachability analysis of pla nar multi-linear systems. </title> <booktitle> CAV 93, </booktitle> <publisher> Springer LNCS 697, </publisher> <year> 1993, </year> <pages> pp. 194-209. </pages>
Reference-contexts: Other related work. In [OSY94], rectangular-activity automata are translated into more abstract timed automata. Our translation, by contrast, preserves timed languages and therefore leads to exact verification and decidability results. In <ref> [MP93] </ref>, de-cidability and undecidability results are obtained for a deterministic model of hybrid systems with strong side conditions on the discrete dynamics. The hybrid automaton model, by contrast, is nondeterministic and its discrete dynamics is unconstrained.
Reference: [MPS95] <author> O. Maler, A. Pnueli, J. Sifakis. </author> <title> On the synthesis of discrete controllers for timed systems. </title> <booktitle> STACS 95, </booktitle> <publisher> Springer LNCS, </publisher> <year> 1995. </year>
Reference-contexts: Department of Computer Science, Cornell University, Ithaca, NY 14853. 3 Department of Electrical Engineering and Computer Science, University of California, Berkeley, CA 94720. for the analysis of embedded software and hardware, including distributed processes with drifting clocks, real-time schedulers, and protocols for the control of manufacturing plants, vehicles, and robots <ref> [AHH93, NOSY93, BPV94, HH94, HRP94, MV94, PV94b, ACH + 94, MPS95] </ref>. Two problems that are central to the analysis of hybrid automata are the reachability problem and the more general timed language-inclusion problem 4 .
Reference: [MV94] <author> J. McManis, P. Varaiya. </author> <title> Suspension automata: a decidable class of hybrid automata. </title> <booktitle> CAV 94, </booktitle> <publisher> Springer LNCS 818, </publisher> <year> 1994, </year> <pages> pp. 105-117. </pages>
Reference-contexts: Department of Computer Science, Cornell University, Ithaca, NY 14853. 3 Department of Electrical Engineering and Computer Science, University of California, Berkeley, CA 94720. for the analysis of embedded software and hardware, including distributed processes with drifting clocks, real-time schedulers, and protocols for the control of manufacturing plants, vehicles, and robots <ref> [AHH93, NOSY93, BPV94, HH94, HRP94, MV94, PV94b, ACH + 94, MPS95] </ref>. Two problems that are central to the analysis of hybrid automata are the reachability problem and the more general timed language-inclusion problem 4 .
Reference: [NOSY93] <author> X. Nicollin, A. Olivero, J. Sifakis, S. Yovine. </author> <title> An approach to the description and analysis of hybrid systems. Hybrid Systems, </title> <publisher> Springer LNCS 736, </publisher> <year> 1993, </year> <pages> pp. 149-178. </pages>
Reference-contexts: Department of Computer Science, Cornell University, Ithaca, NY 14853. 3 Department of Electrical Engineering and Computer Science, University of California, Berkeley, CA 94720. for the analysis of embedded software and hardware, including distributed processes with drifting clocks, real-time schedulers, and protocols for the control of manufacturing plants, vehicles, and robots <ref> [AHH93, NOSY93, BPV94, HH94, HRP94, MV94, PV94b, ACH + 94, MPS95] </ref>. Two problems that are central to the analysis of hybrid automata are the reachability problem and the more general timed language-inclusion problem 4 . <p> Decidability [Section 3]. The first decidability result for hybrid automata was obtained for timed automata, whose reachability and timed language-inclusion problems are PSPACE-complete [AD94]. Under restrictions (1) and (2), that result was later generalized to multirate automata, with variables that run at any constant positive slopes <ref> [ACHH93, NOSY93] </ref>, and to the reachability problem for rectangular-activity automata [PV94a]. The latter result, however, fell short in several respects, because its proof was based on the discretization of time. First, the result applied only to automata with closed rectangular activities. <p> Corollary 3.3 <ref> [ACHH93, NOSY93] </ref> The reachability problem and the language-inclusion problem for initialized multirate automata are PSPACE-complete. 3.2 Rectangular to Multirate Automata Skewed-clock translation of initialized rectangular automata.
Reference: [OSY94] <author> A. Olivero, J. Sifakis, S. Yovine. </author> <title> Using abstrac tions for the verification of linear hybrid systems. </title> <booktitle> CAV 94, </booktitle> <publisher> Springer LNCS 818, </publisher> <year> 1994, </year> <pages> pp. 81-94. </pages>
Reference-contexts: Rectangular-activity automata are interesting from a practical point of view, as they permit the modeling of clocks with bounded drift and the conservative approximation of arbitrary trajectory sets <ref> [OSY94, PV94b, HH95] </ref>, and from a theoretical point of view, as they lie at the boundary of decidability. Our results are twofold. <p> Second, we prove that any relaxation of restriction (2) leads to the undecidability of the reachability problem for timed automata with a single skewed clock. As a corollary, we obtain the undecidability of the reacha-bility problem for triangular-activity automata, even under restrictions (1) and (2). Other related work. In <ref> [OSY94] </ref>, rectangular-activity automata are translated into more abstract timed automata. Our translation, by contrast, preserves timed languages and therefore leads to exact verification and decidability results. In [MP93], de-cidability and undecidability results are obtained for a deterministic model of hybrid systems with strong side conditions on the discrete dynamics.
Reference: [PV94a] <author> A. Puri, P. Varaiya. </author> <title> Decidability of hybrid sys tems with rectangular differential inclusions. </title> <booktitle> CAV 94, </booktitle> <publisher> Springer LNCS 818, </publisher> <year> 1994, </year> <pages> pp. 95-104. </pages>
Reference-contexts: We model these two situations by the dynamical laws _x 2 [4; 2] and _x 2 [1; 3]|so-called rectangular activities <ref> [AHH93, PV94a] </ref>|which enforce piecewise-linear envelopes on the water-level trajectories. <p> Under restrictions (1) and (2), that result was later generalized to multirate automata, with variables that run at any constant positive slopes [ACHH93, NOSY93], and to the reachability problem for rectangular-activity automata <ref> [PV94a] </ref>. The latter result, however, fell short in several respects, because its proof was based on the discretization of time. First, the result applied only to automata with closed rectangular activities. Second, the result applied only to the reachability problem and not to the timed-language inclusion problem. <p> We use simple automata for our undecidability results. Restrictions 1 and 2 imply that invariants, postguards, and nondeterministic variable updates do not contribute to our undecidability results. Many limited decidability results are based on the digitization of real-numbered delays <ref> [HMP92, BES93, BER94, PV94a] </ref>. Since the digitiza-tion technique requires closed preguards and invariants, restrictions 1 and 3 imply that the technique does not generalize beyond very special cases.

References-found: 24

