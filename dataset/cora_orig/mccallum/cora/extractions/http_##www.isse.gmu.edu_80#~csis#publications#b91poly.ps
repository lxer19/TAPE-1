URL: http://www.isse.gmu.edu:80/~csis/publications/b91poly.ps
Refering-URL: http://www.isse.gmu.edu:80/~csis/publication.html
Root-URL: 
Title: HONEST DATABASES THAT CAN KEEP SECRETS  
Author: Ravi S. Sandhu and Sushil Jajodia 
Date: October 1991, pages 267-282  
Address: D.C.,  Fairfax, VA 22030-4444  
Affiliation: Washington  Center for Secure Information Systems and Department of Information and Software Systems Engineering George Mason University,  
Note: Proc. of the 14th NIST-NCSC National Computer Security Conference,  
Abstract: Polyinstantiation has generated a great deal of controversy lately. Some have argued that polyinstantiation and integrity are fundamentally incompatible, and have proposed alternatives to polyinstantiation. Others have argued about the correct definition of polyinstantiation and its operational semantics. In this paper we provide a fresh analysis of the basic problem that we are trying to solve, i.e., how can a honest database keep secrets? Our analysis leads us to the concept of restricted polyinstantiation wherein we show how to solve this problem without compromising on any of the following requirements: secrecy, integrity, availability-of-service, element-level labeling and high assurance. This is the first solution to meet all these requirements simultaneously. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Burns, R.K. </author> <title> "Referential Secrecy." </title> <booktitle> IEEE Symposium on Security and Privacy, </booktitle> <address> Oakland, Cali-fornia, </address> <month> May </month> <year> 1990, </year> <pages> 133-142. </pages>
Reference-contexts: This caveat is inescapable and absolute. We must reject outright "solutions" which tolerate downward signaling channels. Solutions with such channels, e.g., as proposed in <ref> [1, 9] </ref>, may well be acceptable as an engineering compromise in particular situations. But they are clearly not acceptable as general-purpose solutions. This point needs to be emphasized because security is usually the one to take the first hit in engineering trade-offs. <p> Section 5 discusses how our solution can provide the highest degree of assurance. Section 6 concludes the paper. 2 POLYINSTANTIATION The concept of polyinstantiation was explicitly introduced by Denning et al [3] in connection with the SeaView project. Since then much has been written about this topic <ref> [1, 3, 4, 5, 6, 7, 9, for instance] </ref>. In this paper we will set aside all this previous theory, formalism and debate. Instead we go back to first principles and consider by means of examples how polyinstantiation arises and therefore how it might be controlled.
Reference: [2] <author> Clark, D.D. and Wilson, </author> <title> D.R. "A Comparison of Commercial and Military Computer Security Policies." </title> <booktitle> IEEE Symposium on Security and Privacy, </booktitle> <month> 184-194 </month> <year> (1987). </year>
Reference-contexts: It is obvious that in a high integrity system updates must be carefully controlled even within a single security level. Conventional databases use mechanisms such as well-formed transactions and least privilege for this purpose <ref> [2, 8] </ref>. The DBMS TCB must provide high assurance support for such mechanisms. We do not need any additional mechanisms for multilevel DBMSs.
Reference: [3] <author> Denning, D.E., Lunt, T.F., Schell, R.R., Heckman, M., and Shockley, W.R. </author> <title> "A Multilevel Relational Data Model." </title> <booktitle> IEEE Symposium on Security and Privacy, </booktitle> <month> 220-234 </month> <year> (1987). </year>
Reference-contexts: Section 4 formalizes and precisely defines our solution. It also provides additional examples. Section 5 discusses how our solution can provide the highest degree of assurance. Section 6 concludes the paper. 2 POLYINSTANTIATION The concept of polyinstantiation was explicitly introduced by Denning et al <ref> [3] </ref> in connection with the SeaView project. Since then much has been written about this topic [1, 3, 4, 5, 6, 7, 9, for instance]. In this paper we will set aside all this previous theory, formalism and debate. <p> Section 5 discusses how our solution can provide the highest degree of assurance. Section 6 concludes the paper. 2 POLYINSTANTIATION The concept of polyinstantiation was explicitly introduced by Denning et al [3] in connection with the SeaView project. Since then much has been written about this topic <ref> [1, 3, 4, 5, 6, 7, 9, for instance] </ref>. In this paper we will set aside all this previous theory, formalism and debate. Instead we go back to first principles and consider by means of examples how polyinstantiation arises and therefore how it might be controlled. <p> Our next requirement severely limits polyinstantiation and distinguishes the approach of this paper from previous work on element-level labeling (such as <ref> [3, 4, 5, 6, 7] </ref>).
Reference: [4] <author> Denning D.E. </author> <title> "Lessons Learned from Modeling a Secure Multilevel Relational Database System." In Database Security: Status and Prospects, (Landwehr, </title> <editor> C.E., editor), </editor> <publisher> North-Holland, </publisher> <month> 35-43 </month> <year> (1988). </year>
Reference-contexts: Section 5 discusses how our solution can provide the highest degree of assurance. Section 6 concludes the paper. 2 POLYINSTANTIATION The concept of polyinstantiation was explicitly introduced by Denning et al [3] in connection with the SeaView project. Since then much has been written about this topic <ref> [1, 3, 4, 5, 6, 7, 9, for instance] </ref>. In this paper we will set aside all this previous theory, formalism and debate. Instead we go back to first principles and consider by means of examples how polyinstantiation arises and therefore how it might be controlled. <p> Our next requirement severely limits polyinstantiation and distinguishes the approach of this paper from previous work on element-level labeling (such as <ref> [3, 4, 5, 6, 7] </ref>).
Reference: [5] <author> Jajodia, S. and Sandhu, </author> <title> R.S. "Polyinstantiation Integrity in Multilevel Relations." </title> <booktitle> IEEE Symposium on Security and Privacy, </booktitle> <address> Oakland, California, </address> <month> May </month> <year> 1990, </year> <pages> 104-115. </pages>
Reference-contexts: Section 5 discusses how our solution can provide the highest degree of assurance. Section 6 concludes the paper. 2 POLYINSTANTIATION The concept of polyinstantiation was explicitly introduced by Denning et al [3] in connection with the SeaView project. Since then much has been written about this topic <ref> [1, 3, 4, 5, 6, 7, 9, for instance] </ref>. In this paper we will set aside all this previous theory, formalism and debate. Instead we go back to first principles and consider by means of examples how polyinstantiation arises and therefore how it might be controlled. <p> Our next requirement severely limits polyinstantiation and distinguishes the approach of this paper from previous work on element-level labeling (such as <ref> [3, 4, 5, 6, 7] </ref>). <p> Recall our assumption that cover stories are not to be incorporated by polyinstantiation, so interpretations such as discussed in <ref> [5] </ref> do not apply in this situation. Key integrity does allow instances such as the following where there is polyinstantiation of the key. flfl In practice of course it is desirable to place appropriate upper and lower bounds on each C i . <p> The next property is concerned with consistency between relation instances at different access classes. Here again we depart from the analogous property defined in <ref> [5, 6, 7] </ref>. yy Property 3 [Inter-Instance Integrity] R satisfies inter-instance integrity iff for all c 0 c we have R c 0 = (R c ; c 0 ) where the filter function produces the c 0 -instance R c 0 from R c as follows: 1. <p> We have the following update protocol. yy The definition of the filter function given in <ref> [5, 6, 7] </ref> differs from the one given here in that &lt;restricted,c 0 &gt; is replaced by &lt;null,t [C AK ]&gt;. zz Note that the protocols can be simplified if trusted subjects which are exempted from these properties are allowed in selected situations.
Reference: [6] <author> Jajodia, S., Sandhu, R.S. and Sibley, E. </author> <title> "Update Semantics for Multilevel Relations." </title> <booktitle> Sixth Annual Computer Security Applications Conference, </booktitle> <address> Tucson, Arizona, </address> <month> December </month> <year> 1990, </year> <pages> pages 103-112. </pages>
Reference-contexts: Section 5 discusses how our solution can provide the highest degree of assurance. Section 6 concludes the paper. 2 POLYINSTANTIATION The concept of polyinstantiation was explicitly introduced by Denning et al [3] in connection with the SeaView project. Since then much has been written about this topic <ref> [1, 3, 4, 5, 6, 7, 9, for instance] </ref>. In this paper we will set aside all this previous theory, formalism and debate. Instead we go back to first principles and consider by means of examples how polyinstantiation arises and therefore how it might be controlled. <p> Our next requirement severely limits polyinstantiation and distinguishes the approach of this paper from previous work on element-level labeling (such as <ref> [3, 4, 5, 6, 7] </ref>). <p> The next property is concerned with consistency between relation instances at different access classes. Here again we depart from the analogous property defined in <ref> [5, 6, 7] </ref>. yy Property 3 [Inter-Instance Integrity] R satisfies inter-instance integrity iff for all c 0 c we have R c 0 = (R c ; c 0 ) where the filter function produces the c 0 -instance R c 0 from R c as follows: 1. <p> We have the following update protocol. yy The definition of the filter function given in <ref> [5, 6, 7] </ref> differs from the one given here in that &lt;restricted,c 0 &gt; is replaced by &lt;null,t [C AK ]&gt;. zz Note that the protocols can be simplified if trusted subjects which are exempted from these properties are allowed in selected situations.
Reference: [7] <author> Lunt, T.F., Denning, D.E., Schell, R.R., Heckman, M. and Shockley, W.R. </author> <title> "The SeaView Security Model." </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 16(6) </volume> <month> 593-607 </month> <year> (1990). </year>
Reference-contexts: Section 5 discusses how our solution can provide the highest degree of assurance. Section 6 concludes the paper. 2 POLYINSTANTIATION The concept of polyinstantiation was explicitly introduced by Denning et al [3] in connection with the SeaView project. Since then much has been written about this topic <ref> [1, 3, 4, 5, 6, 7, 9, for instance] </ref>. In this paper we will set aside all this previous theory, formalism and debate. Instead we go back to first principles and consider by means of examples how polyinstantiation arises and therefore how it might be controlled. <p> classification of each non-key data attribute dominates the classification of the apparent key, i.e., A i 62 AK ) t [C i ] t [C AK ] where C AK is the classification of AK. 2 The notions introduced thus far are standard ones first introduced in the SeaView model <ref> [7] </ref>. Our next requirement severely limits polyinstantiation and distinguishes the approach of this paper from previous work on element-level labeling (such as [3, 4, 5, 6, 7]). <p> Our next requirement severely limits polyinstantiation and distinguishes the approach of this paper from previous work on element-level labeling (such as <ref> [3, 4, 5, 6, 7] </ref>). <p> The next property is concerned with consistency between relation instances at different access classes. Here again we depart from the analogous property defined in <ref> [5, 6, 7] </ref>. yy Property 3 [Inter-Instance Integrity] R satisfies inter-instance integrity iff for all c 0 c we have R c 0 = (R c ; c 0 ) where the filter function produces the c 0 -instance R c 0 from R c as follows: 1. <p> We have the following update protocol. yy The definition of the filter function given in <ref> [5, 6, 7] </ref> differs from the one given here in that &lt;restricted,c 0 &gt; is replaced by &lt;null,t [C AK ]&gt;. zz Note that the protocols can be simplified if trusted subjects which are exempted from these properties are allowed in selected situations.
Reference: [8] <author> Sandhu, R.S. and Jajodia, S. </author> <title> "Integrity Mechanisms in Database Management Systems." </title> <booktitle> 13th NIST-NCSC National Computer Security Conference, </booktitle> <address> Washington, D.C., </address> <month> October </month> <year> 1990, </year> <pages> 526-540. </pages>
Reference-contexts: It is obvious that in a high integrity system updates must be carefully controlled even within a single security level. Conventional databases use mechanisms such as well-formed transactions and least privilege for this purpose <ref> [2, 8] </ref>. The DBMS TCB must provide high assurance support for such mechanisms. We do not need any additional mechanisms for multilevel DBMSs. <p> The DBMS TCB must provide high assurance support for such mechanisms. We do not need any additional mechanisms for multilevel DBMSs. The required mechanisms should anyway be available in high-quality single-level DBMSs as discussed in <ref> [8] </ref>. 5.2 Update from Unrestricted to Restricted Assigning a restricted value to a field with classification c requires a check that this field is already restricted at levels below c. This is feasible within the scope of simple security.
Reference: [9] <author> Wiseman, </author> <title> S.R. "On the Problem of Security in Data Bases." In Database Security III: Status and Prospects, (Spooner, D.L. </title> <editor> and Landwehr, C.E., editors), </editor> <publisher> North-Holland, </publisher> <pages> pages 143-150 (1990). </pages> <note> Also available as Royal Signal and Radar Establishment, U.K., Memo 4263. </note>
Reference-contexts: This caveat is inescapable and absolute. We must reject outright "solutions" which tolerate downward signaling channels. Solutions with such channels, e.g., as proposed in <ref> [1, 9] </ref>, may well be acceptable as an engineering compromise in particular situations. But they are clearly not acceptable as general-purpose solutions. This point needs to be emphasized because security is usually the one to take the first hit in engineering trade-offs. <p> Section 5 discusses how our solution can provide the highest degree of assurance. Section 6 concludes the paper. 2 POLYINSTANTIATION The concept of polyinstantiation was explicitly introduced by Denning et al [3] in connection with the SeaView project. Since then much has been written about this topic <ref> [1, 3, 4, 5, 6, 7, 9, for instance] </ref>. In this paper we will set aside all this previous theory, formalism and debate. Instead we go back to first principles and consider by means of examples how polyinstantiation arises and therefore how it might be controlled.
References-found: 9

