URL: ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-97-4-1-astroem.ps.Z
Refering-URL: ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-97-4-1.html
Root-URL: http://www.cs.man.ac.uk
Email: tom@ida.his.se  
Title: Robot Navigation using the Connectionist Navigational Map  
Author: Emil Astrom Tom Ziemke 
Address: Box 408, 54128 Skovde, Sweden  
Affiliation: Connectionist Research Group Dept. of Computer Science University of Skovde  
Abstract: This paper presents a number of robot navigation experiments with the Connectionist Navigational Map (CNM), originally proposed by Chrisley. The CNM is trained to map current internal state and action to sensor readings, using data collected during an exploration phase. During navigation this mapping is inverted, i.e. a desired goal state/location (but no sensory input) is mapped to the action most appropriate to reach this goal. A number of experiments in 'pointing out' goal locations and multi-step navigation on a simulated Nomad 200 robot are documented and evaluated. Results show that reasonable performance is achieved under benign conditions, but the CNM in its current form does not scale up to realistic robot navigation scenarios. 
Abstract-found: 1
Intro-found: 1
Reference: [ Ast96] <author> E. Astrom. </author> <title> A Connectionist Architecture for High-Level Robot Navigation. </title> <type> Master's thesis, </type> <institution> Department of Computer Science, University of Skovde, Sweden, </institution> <year> 1996. </year>
Reference-contexts: A theoretical discussion of possible implementations can be found in [Chr90] and <ref> [ Ast96] </ref>, the Orienting System has however neither been implemented/used in navigation experiments in the work presented here, nor in earlier work on the CNM [Chr90, Chr93, CH95]. 2.2 Operation The CNM basically works as follows: * Exploration: The robot is guided on an exploration path through its environment, and sensor <p> It is possible to have hidden layers in the D mapping for example, without violating the principles discussed here. 2 For a more detailed discussion of the issue of state representation see [Chr90] or <ref> [ Ast96] </ref>. It should be noted that during navigation the CNM actually does not make use of its current sensor readings, but of its internal world model (of the relation between state representations and actions) only. <p> Hence, the major goal of this study (mostly based on <ref> [ Ast96] </ref>) has been to investigate in how far the CNM architecture could scale up to more realistic robot navigation scenarios, in particular the use of realistic sensors. 3 Experiments 3.1 Robot Simulator All experiments documented in this paper have been carried out using data from a simulated Nomad 200 mobile <p> the action vector to decrease the difference between them 7 such that the most appropriate action was found, i.e. the action that, according to the T mapping, would take the robot closest to its goal. 4 For a more detailed description of how the obstacle avoidance behaviour was 'constructed' see <ref> [ Ast96] </ref>. 5 This if of course somewhat unrealistic, since on the real Nomad 200, due to wheel slippage, etc., the orientation probably could not be kept constant over a long period of time 6 Experiments with different number of units indicate that the exact number is not critical. 7 For <p> course somewhat unrealistic, since on the real Nomad 200, due to wheel slippage, etc., the orientation probably could not be kept constant over a long period of time 6 Experiments with different number of units indicate that the exact number is not critical. 7 For a more detailed description see <ref> [ Ast96] </ref>.
Reference: [Bro86] <author> R.A. Brooks. </author> <title> A robust layered control system for a mobile robot. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 1 </volume> <pages> 14-23, </pages> <year> 1986. </year>
Reference-contexts: That means the CNM could, for example, be used in a sub-sumption architecture (see <ref> [Bro86] </ref>) in combination with other mechanisms/behaviours providing obstacle avoidance behaviour and landmark-based navigation (note that the CNM could in fact be used to find such landmarks). 2.3 Previous work In Chrisley's (and Holland's) own work [Chr90, Chr93, CH95] the CNM has only been used in simulated grid-worlds in which each position/location
Reference: [CH95] <author> R.L. Chrisley and A. Holland. </author> <title> Connectionist Synthetic Epistemology: Requirements for the Development of Objectivity. In L.F. </title> <editor> Niklasson and M.B. Boden, editors, </editor> <booktitle> Current Trends in Connectionism, Proceedings of the 1995 Swedish Conference on Connectionism, </booktitle> <pages> pages 283-309. </pages> <publisher> Lawrence Erlbaum Associates, </publisher> <year> 1995. </year>
Reference-contexts: A theoretical discussion of possible implementations can be found in [Chr90] and [ Ast96], the Orienting System has however neither been implemented/used in navigation experiments in the work presented here, nor in earlier work on the CNM <ref> [Chr90, Chr93, CH95] </ref>. 2.2 Operation The CNM basically works as follows: * Exploration: The robot is guided on an exploration path through its environment, and sensor readings and actions (robot movements) are collected. * Training: The Predictive Map is trained using the data collected during the exploration phase. * Navigation: A <p> That means the CNM could, for example, be used in a sub-sumption architecture (see [Bro86]) in combination with other mechanisms/behaviours providing obstacle avoidance behaviour and landmark-based navigation (note that the CNM could in fact be used to find such landmarks). 2.3 Previous work In Chrisley's (and Holland's) own work <ref> [Chr90, Chr93, CH95] </ref> the CNM has only been used in simulated grid-worlds in which each position/location was given a rather arbitrary, binary `sensory' signature (cf. of representation rather than realistic robot navigation.
Reference: [Chr90] <author> R.L. Chrisley. </author> <title> Cognitive Map Construction and Use: A Parallel Distributed Processing Approach. </title> <editor> In D.S. Touretzky, G. Hinton, and T. Sejnowski, editors, </editor> <booktitle> The Proceedings of the 1990 Connectionist Models Summer School. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction The Connectionist Navigational Map (CNM) architecture was originally proposed by Chrisley <ref> [Chr90] </ref>. The CNM differs from most other robot navigation architectures in the sense that during navigation sensor readings are actually ignored. <p> A theoretical discussion of possible implementations can be found in <ref> [Chr90] </ref> and [ Ast96], the Orienting System has however neither been implemented/used in navigation experiments in the work presented here, nor in earlier work on the CNM [Chr90, Chr93, CH95]. 2.2 Operation The CNM basically works as follows: * Exploration: The robot is guided on an exploration path through its environment, <p> A theoretical discussion of possible implementations can be found in [Chr90] and [ Ast96], the Orienting System has however neither been implemented/used in navigation experiments in the work presented here, nor in earlier work on the CNM <ref> [Chr90, Chr93, CH95] </ref>. 2.2 Operation The CNM basically works as follows: * Exploration: The robot is guided on an exploration path through its environment, and sensor readings and actions (robot movements) are collected. * Training: The Predictive Map is trained using the data collected during the exploration phase. * Navigation: A <p> It is possible to have hidden layers in the D mapping for example, without violating the principles discussed here. 2 For a more detailed discussion of the issue of state representation see <ref> [Chr90] </ref> or [ Ast96]. It should be noted that during navigation the CNM actually does not make use of its current sensor readings, but of its internal world model (of the relation between state representations and actions) only. <p> That means the CNM could, for example, be used in a sub-sumption architecture (see [Bro86]) in combination with other mechanisms/behaviours providing obstacle avoidance behaviour and landmark-based navigation (note that the CNM could in fact be used to find such landmarks). 2.3 Previous work In Chrisley's (and Holland's) own work <ref> [Chr90, Chr93, CH95] </ref> the CNM has only been used in simulated grid-worlds in which each position/location was given a rather arbitrary, binary `sensory' signature (cf. of representation rather than realistic robot navigation.
Reference: [Chr93] <author> R.L. Chrisley. </author> <title> Connectionism, Cognitive Maps and the Development of Objectivity. </title> <journal> Artificial Intelligence Review, </journal> <volume> 7 </volume> <pages> 329-354, </pages> <year> 1993. </year>
Reference-contexts: A theoretical discussion of possible implementations can be found in [Chr90] and [ Ast96], the Orienting System has however neither been implemented/used in navigation experiments in the work presented here, nor in earlier work on the CNM <ref> [Chr90, Chr93, CH95] </ref>. 2.2 Operation The CNM basically works as follows: * Exploration: The robot is guided on an exploration path through its environment, and sensor readings and actions (robot movements) are collected. * Training: The Predictive Map is trained using the data collected during the exploration phase. * Navigation: A <p> That means the CNM could, for example, be used in a sub-sumption architecture (see [Bro86]) in combination with other mechanisms/behaviours providing obstacle avoidance behaviour and landmark-based navigation (note that the CNM could in fact be used to find such landmarks). 2.3 Previous work In Chrisley's (and Holland's) own work <ref> [Chr90, Chr93, CH95] </ref> the CNM has only been used in simulated grid-worlds in which each position/location was given a rather arbitrary, binary `sensory' signature (cf. of representation rather than realistic robot navigation.
Reference: [Elm90] <author> J.L. Elman. </author> <title> Finding Structure in Time. </title> <journal> Cognitive Science, </journal> <volume> 14 </volume> <pages> 179-211, </pages> <year> 1990. </year>
Reference-contexts: Hence, the resulting architecture of the Predictive Map (cf. Figure 1 1 ) is very similar to Elman's Simple Recurrent Network <ref> [Elm90] </ref>. Current state Action Predicted state Predicted sensation D mapping T mapping In the input layer of the network there are nodes both for the current state and for the action to take.
Reference: [SJ94] <author> N.E. Sharkey and S. Jackson. </author> <title> An internal report for connectionists. </title> <editor> In R. Sun and L. Bookman, editors, </editor> <booktitle> Computational architectures integrating neural and symbolic processes, </booktitle> <pages> pages 223-244. </pages> <publisher> Kluwer Academic Press, </publisher> <address> Boston, USA, </address> <year> 1994. </year>
Reference-contexts: That is not necessarily a problem when applying the T mapping, since two state representations can perfectly well be functionally equivalent (i.e. lead to the same sensor predictions), without necessarily being close in Euclidean space (see <ref> [SJ94] </ref> for an extensive discussion of the difference between functional and Euclidean equivalence).
References-found: 7

