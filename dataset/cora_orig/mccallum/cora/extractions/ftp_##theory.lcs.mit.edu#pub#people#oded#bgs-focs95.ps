URL: ftp://theory.lcs.mit.edu/pub/people/oded/bgs-focs95.ps
Refering-URL: http://theory.lcs.mit.edu/~oded/bgs.html
Root-URL: 
Author: MIHIR BELLARE ODED GOLDREICH MADHU SUDAN 
Note: In honor of Shimon Even's 60th Birthday  
Abstract: Free Bits, PCPs and Non-Approximability Towards Tight Results Abstract The first part of this paper presents new proof systems and improved non-approximability results. In particular we present a proof system for NP using logarithmic randomness and two amortized free bits, so that Max Clique is hard within N 1=3 and Chromatic Number within N 1=5 . We also show hardness of 38=37 for Max-3-SAT, 27=26 for Vertex Cover, 82=81 for Max-Cut, and 94=93 for Max-2-SAT. The second part of this paper presents a reverse of the FGLSS connection by showing that an NP-hardness result for the approximation of Max Clique to within a factor of N 1=(g+1) would imply a probabilistic verifier for NP with logarithmic randomness and amortized free-bit complexity g. We also show that existing techniques won't yield proof systems of less than two bits in amortized free bit complexity. Finally, we initiate a comprehensive study of PCP and FPCP parameters, proving several triviality results and providing several useful transformations. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. ARORA. </author> <title> Reductions, Codes, </title> <journal> PCPs and Inapproxima-bility. </journal> <note> FOCS 1995. </note>
Reference-contexts: all of Max-SNP [31].) The above mentioned works [7, 19, 9] have found increasingly larger values for the Max-3-SAT non-approximability factor *. 1.3 Related work Following the presentation of our results of Sections 3 and 4, Arora has also investigated the limitations of proof checking techniques in proving non-approximability results <ref> [1] </ref>. Like in our free-bit lower bound result, he tries to assess the limitations of current techniques by making some assumptions about these techniques and then showing a lower bound. His focus is on the reductions, which he assumes are code like. <p> It is convenient to let MaxClique (G) = MaxClique (G)=N be the fraction of nodes in a maximum clique of G. As a direct consequence of Theorem 4.2, we get Corollary 4.4 For functions c; s mapping Z + to <ref> [0; 1] </ref> we have Gap-Clique c;s 2 FPCP c;s [log; 0]. This corollary transforms the gap in the promise problem into a gap in a pcp system. However, the accepting probabilities in this pcp system are very low (also on yes-instances). <p> We remark that there exist an alternative transformation, 4 using only logarithmically many coins, and guranteeing only Pr [ w (H) (1 *) L ] &lt; L=(*C), for every * 2 <ref> [0; 1] </ref>, provided w (G) C. Combining Theorem 4.3 and Proposition 4.5, we obtain Proposition 4.6 (Inverse of FGLSS-reduction): For any polynomial-time computable functions c; s; * of Z + to [0; 1], the promise problem Gap-Clique c;s is randomly (Karp-) reducible to FPCP 1;s 0 [log; f 0 ], where <p> many coins, and guranteeing only Pr [ w (H) (1 *) L ] &lt; L=(*C), for every * 2 <ref> [0; 1] </ref>, provided w (G) C. Combining Theorem 4.3 and Proposition 4.5, we obtain Proposition 4.6 (Inverse of FGLSS-reduction): For any polynomial-time computable functions c; s; * of Z + to [0; 1], the promise problem Gap-Clique c;s is randomly (Karp-) reducible to FPCP 1;s 0 [log; f 0 ], where f 0 (N ) = log 2 (1=c (N )) + log 2 log 2 (N ) + 2 s (N ) : Namely, Gap-Clique c;s has a pcp system with <p> the amortized free-bit complexity of T is at least 2 O ( 1 f + F minfK;Mg ). 6 Complexity of PCP and FPCP In the rest of this extended abstract, unless stated differently, r, l, p, q and k are integer functions, c; s; * : Z + ! <ref> [0; 1] </ref> and f : Z + ! R + Proposition 6.1 (pcp systems with at most 3 queries): (1) 8 c; s so that s is strictly less than c, PCP c;s [log; 1] = P. (2) 8 s strictly less than 1, PCP 1;s [log; 2] = P. <p> differently, r, l, p, q and k are integer functions, c; s; * : Z + ! [0; 1] and f : Z + ! R + Proposition 6.1 (pcp systems with at most 3 queries): (1) 8 c; s so that s is strictly less than c, PCP c;s <ref> [log; 1] </ref> = P. (2) 8 s strictly less than 1, PCP 1;s [log; 2] = P. In contrast, for some constants 0 &lt; s &lt; c &lt; 1, PCP c;s [log; 2] = NP. (3) PCP 1;0:9 [log; 3] = NP. <p> Corollary 6.4 8 c &gt; 0, PCP c <ref> [ log; 1 ] </ref> = P. Before turning to free-bit complexity, we comment that results analogous to Proposition 6.1, where PSPACE plays the role of P and NEXP the role of NP, can be derived for the classes PCP ; (poly; ). <p> Furthermore, for all functions c; s so that c (n) &gt; s (n) + 1= poly (n), we obtain PCP c;s <ref> [poly; 1] </ref> AM. In light of the last item of Proposition 6.5, this result may be hard to strengthen. Proposition 6.5 8s strictly smaller than 1: (1) FPCP 1;s [log; 1] = P. <p> In light of the last item of Proposition 6.5, this result may be hard to strengthen. Proposition 6.5 8s strictly smaller than 1: (1) FPCP 1;s <ref> [log; 1] </ref> = P. In contrast, NP equals the classes FPCP 0:5;0:45 [log; 1], FPCP 0:25;0:22 [log; 0], and FPCP 1;0:95 [log; f ] for f = log 2 3. (2) FPCP 1;s [poly; 0] coNP and FPCP 1;s [poly; 1] PSPACE. (3) Graph Non-Isomorphism and Quadratic Non-Residousity have pcp systems, <p> In light of the last item of Proposition 6.5, this result may be hard to strengthen. Proposition 6.5 8s strictly smaller than 1: (1) FPCP 1;s <ref> [log; 1] </ref> = P. In contrast, NP equals the classes FPCP 0:5;0:45 [log; 1], FPCP 0:25;0:22 [log; 0], and FPCP 1;0:95 [log; f ] for f = log 2 3. (2) FPCP 1;s [poly; 0] coNP and FPCP 1;s [poly; 1] PSPACE. (3) Graph Non-Isomorphism and Quadratic Non-Residousity have pcp systems, with perfect completeness, soundness error 1 2 , query complexity 1 and <p> Proposition 6.5 8s strictly smaller than 1: (1) FPCP 1;s [log; 1] = P. In contrast, NP equals the classes FPCP 0:5;0:45 [log; 1], FPCP 0:25;0:22 [log; 0], and FPCP 1;0:95 [log; f ] for f = log 2 3. (2) FPCP 1;s [poly; 0] coNP and FPCP 1;s <ref> [poly; 1] </ref> PSPACE. (3) Graph Non-Isomorphism and Quadratic Non-Residousity have pcp systems, with perfect completeness, soundness error 1 2 , query complexity 1 and 0 free-bits. The last item follows from [27, 26]. <p> Such efficiency under query complexity, amortized query complexity, and (non-amortized) free bit complexity is ruled out because PCP 1;1=2 [ log; 2 ] P , PCP <ref> [ log; 1 ] </ref> P , and FPCP 1;1=2 [ log; 1] P . 7 Transformations of FPCP Systems In this section we show several useful transformations which can be applied to pcp systems. <p> Such efficiency under query complexity, amortized query complexity, and (non-amortized) free bit complexity is ruled out because PCP 1;1=2 [ log; 2 ] P , PCP [ log; 1 ] P , and FPCP 1;1=2 <ref> [ log; 1] </ref> P . 7 Transformations of FPCP Systems In this section we show several useful transformations which can be applied to pcp systems.
Reference: [2] <author> S. ARORA, C. LUND, R. MOTWANI, M. SUDAN AND M. SZEGEDY. </author> <title> Proof verification and intractability of approximation problems. FOCS 1992. 6 In a typical application, r = O(log n) and one sets k to be a large multiple of r. The FGLSS-graph corresponding to the resulting pcp system will have size N = 2 (r+k+O(1))+kf and a gap in clique size of factor 2 k , which can be rewritten as N 1=(1+f+*) where * = r=k. </title>
Reference-contexts: It has lead us to a variety of different kinds of investigations and results. Let us begin with a high level overview. 1.1 Overview of main results NEW PROOF SYSTEMS AND NON-APPROXIMABILITY RESULTS. We continue previous work <ref> [4, 18, 3, 2, 7, 19, 9] </ref> by constructing new proof systems of improved complexity. They are based on a new error correcting code called the long code. <p> The indication of higher factors, and results for other problems, had to wait for the interactive proof approach which began with [18]. The works of <ref> [18, 3, 2] </ref> culminated in the proof that there is a constant * &gt; 0 for which approximating Max Clique within N * is NP-hard. This was based on the characterization NP = PCP 1;1=2 [log; O (1)]. <p> The last built new proof systems achieving amortized free-bit complexity three, implying a N 1=4 hardness for Max Clique assuming NP 6 coR e P. Arora et. al. <ref> [2] </ref> showed that there exists a constant * &gt; 1 such that approximating Max-3-SAT within * is NP-hard. (This implied the same for all of Max-SNP [31].) The above mentioned works [7, 19, 9] have found increasingly larger values for the Max-3-SAT non-approximability factor *. 1.3 Related work Following the presentation <p> It relates the non-approximability factor of Max Clique to proof checking complexity. The basic reduction is that of [18], used today in slightly tighter randomized form due to [11, 34]. The sequence of works <ref> [18, 3, 2, 7, 19, 9] </ref> lead us through a sequence of parameters: query complexity, free bit complexity and, finally, for the best known results, amortized free bit complexity. <p> Theorem 3.1 Let * &gt; 0 be arbitrary. Then NP is contained in each of the following (1) FPCP [ log; 2 + * ]. (2) FPCP 1;s <ref> [log; 2] </ref> for s = 0:884464. (3) PCP 1;1=2 [ coins = log ; queries = 19 ; queries av = 15:58 ] where queries av is the average number of queries. (4) PCP 1;s [log; 3] for s = 0:8999. <p> We then show that checking that the oracle is close Problem Approx Non-Approx Factor Due to New Factor Previous Factor Assumption Max-3-SAT 1:319 [33, 24, 25] 1:027 1 + 1 Max-E3-SAT 1 + 1 7 folklore 1 + 1 37 unspecified <ref> [2] </ref> P 6= NP Max-2-SAT 1:075 [25, 17] 1:010 1 + 1 504 (implied [9]) P 6= NP MAX CUT 1:139 [25] 1:012 unspecified [2] P 6= NP Min-VC 2 o (1) [5, 30] 1 + 1 26 unspecified [2] P 6= NP Max-Clique N 1o (1) [14] N 1 N <p> to New Factor Previous Factor Assumption Max-3-SAT 1:319 [33, 24, 25] 1:027 1 + 1 Max-E3-SAT 1 + 1 7 folklore 1 + 1 37 unspecified <ref> [2] </ref> P 6= NP Max-2-SAT 1:075 [25, 17] 1:010 1 + 1 504 (implied [9]) P 6= NP MAX CUT 1:139 [25] 1:012 unspecified [2] P 6= NP Min-VC 2 o (1) [5, 30] 1 + 1 26 unspecified [2] P 6= NP Max-Clique N 1o (1) [14] N 1 N 3 N 5 coRP 6= NP N 4 N 6 [9] P 6= NP Chromatic N 1o (1) [14] N 1 Number N 1 <p> Max-E3-SAT 1 + 1 7 folklore 1 + 1 37 unspecified <ref> [2] </ref> P 6= NP Max-2-SAT 1:075 [25, 17] 1:010 1 + 1 504 (implied [9]) P 6= NP MAX CUT 1:139 [25] 1:012 unspecified [2] P 6= NP Min-VC 2 o (1) [5, 30] 1 + 1 26 unspecified [2] P 6= NP Max-Clique N 1o (1) [14] N 1 N 3 N 5 coRP 6= NP N 4 N 6 [9] P 6= NP Chromatic N 1o (1) [14] N 1 Number N 1 1 13 coRP 6= NP N 7 N 14 [9] P 6= NP (Non-Approx). to <p> : Z + ! [0; 1] and f : Z + ! R + Proposition 6.1 (pcp systems with at most 3 queries): (1) 8 c; s so that s is strictly less than c, PCP c;s [log; 1] = P. (2) 8 s strictly less than 1, PCP 1;s <ref> [log; 2] </ref> = P. In contrast, for some constants 0 &lt; s &lt; c &lt; 1, PCP c;s [log; 2] = NP. (3) PCP 1;0:9 [log; 3] = NP. <p> with at most 3 queries): (1) 8 c; s so that s is strictly less than c, PCP c;s [log; 1] = P. (2) 8 s strictly less than 1, PCP 1;s <ref> [log; 2] </ref> = P. In contrast, for some constants 0 &lt; s &lt; c &lt; 1, PCP c;s [log; 2] = NP. (3) PCP 1;0:9 [log; 3] = NP. In contrast, 8s 0:299, naPCP 1;s [log; 3] = P, where naPCP is a restriction of PCP in which the verifier is required to be non-adaptive. Item (2) is folklore. <p> In consequence of the above, we note that both the freeness and the amortization are key to going as low as two amortized free bits. Such efficiency under query complexity, amortized query complexity, and (non-amortized) free bit complexity is ruled out because PCP 1;1=2 <ref> [ log; 2 ] </ref> P , PCP [ log; 1 ] P , and FPCP 1;1=2 [ log; 1] P . 7 Transformations of FPCP Systems In this section we show several useful transformations which can be applied to pcp systems.
Reference: [3] <author> S. ARORA AND S. SAFRA. </author> <title> Probabilistic checking of proofs: a new characterization of NP. </title> <booktitle> FOCS 1992. </booktitle>
Reference-contexts: It has lead us to a variety of different kinds of investigations and results. Let us begin with a high level overview. 1.1 Overview of main results NEW PROOF SYSTEMS AND NON-APPROXIMABILITY RESULTS. We continue previous work <ref> [4, 18, 3, 2, 7, 19, 9] </ref> by constructing new proof systems of improved complexity. They are based on a new error correcting code called the long code. <p> The indication of higher factors, and results for other problems, had to wait for the interactive proof approach which began with [18]. The works of <ref> [18, 3, 2] </ref> culminated in the proof that there is a constant * &gt; 0 for which approximating Max Clique within N * is NP-hard. This was based on the characterization NP = PCP 1;1=2 [log; O (1)]. <p> It relates the non-approximability factor of Max Clique to proof checking complexity. The basic reduction is that of [18], used today in slightly tighter randomized form due to [11, 34]. The sequence of works <ref> [18, 3, 2, 7, 19, 9] </ref> lead us through a sequence of parameters: query complexity, free bit complexity and, finally, for the best known results, amortized free bit complexity. <p> each of the following (1) FPCP [ log; 2 + * ]. (2) FPCP 1;s [log; 2] for s = 0:884464. (3) PCP 1;1=2 [ coins = log ; queries = 19 ; queries av = 15:58 ] where queries av is the average number of queries. (4) PCP 1;s <ref> [log; 3] </ref> for s = 0:8999. The first result above improves the result of [9] showing that NP FPCP [ log; 3 + * ] for every * &gt; 0. The second minimizes the soundness error one can get using only two free (non-amortized) bits. <p> Thus, verification in it amounts to checking that the first answer satisfies some predicate and that the second answer equals the value obtained from the first answer. Following the proof composition paradigm of Arora and Safra <ref> [3] </ref>, we will encode the answers of the two provers under a suitable code and then, recursively, check these encodings. As usual, we will check both that these encodings are valid and that they correspond to answers which would have been accepted by the original verifier. <p> In contrast, for some constants 0 &lt; s &lt; c &lt; 1, PCP c;s [log; 2] = NP. (3) PCP 1;0:9 <ref> [log; 3] </ref> = NP. In contrast, 8s 0:299, naPCP 1;s [log; 3] = P, where naPCP is a restriction of PCP in which the verifier is required to be non-adaptive. Item (2) is folklore. <p> In contrast, for some constants 0 &lt; s &lt; c &lt; 1, PCP c;s [log; 2] = NP. (3) PCP 1;0:9 <ref> [log; 3] </ref> = NP. In contrast, 8s 0:299, naPCP 1;s [log; 3] = P, where naPCP is a restriction of PCP in which the verifier is required to be non-adaptive. Item (2) is folklore. <p> Proposition 6.2 (mip systems with at most 3 queries): (1) 8c; s; r; p, MIP c;s [r; p] MIP c;2s [r; p 1]. 2 , MIP 1;s <ref> [log; 3] </ref> = P.
Reference: [4] <author> L. BABAI, L. FORTNOW, L. LEVIN, AND M. SZEGEDY. </author> <title> Checking computations in polylogarithmic time. </title> <note> STOC 1991. </note>
Reference-contexts: It has lead us to a variety of different kinds of investigations and results. Let us begin with a high level overview. 1.1 Overview of main results NEW PROOF SYSTEMS AND NON-APPROXIMABILITY RESULTS. We continue previous work <ref> [4, 18, 3, 2, 7, 19, 9] </ref> by constructing new proof systems of improved complexity. They are based on a new error correcting code called the long code. <p> It has oracle access to a poly (n) length string describing the proof: to access a bit it writes a O (log n) bit address and is 1 An analogous discussion can be carried out also using the model of transparent proofs due to Babai et. al. <ref> [4] </ref>. returned the corresponding bit of the proof. Following its com-putation it will either accept or reject its input x. The accepting probability is the maximum, over all , of the probability (over R) that V accepts x on coins R and proof string .
Reference: [5] <author> R. BAR-YEHUDA AND S. </author> <title> EVEN. A local ratio theorem for approximating the weighted vertex cover problem. In Analysis and Design of Algorithms for Combinatorial Problems Vol. 25 of Annals of Discrete Math, </title> <publisher> Elsevier, </publisher> <year> 1985. </year>
Reference-contexts: [33, 24, 25] 1:027 1 + 1 Max-E3-SAT 1 + 1 7 folklore 1 + 1 37 unspecified [2] P 6= NP Max-2-SAT 1:075 [25, 17] 1:010 1 + 1 504 (implied [9]) P 6= NP MAX CUT 1:139 [25] 1:012 unspecified [2] P 6= NP Min-VC 2 o (1) <ref> [5, 30] </ref> 1 + 1 26 unspecified [2] P 6= NP Max-Clique N 1o (1) [14] N 1 N 3 N 5 coRP 6= NP N 4 N 6 [9] P 6= NP Chromatic N 1o (1) [14] N 1 Number N 1 1 13 coRP 6= NP N 7 N
Reference: [6] <author> M. BELLARE, D. COPPERSMITH, J. H ASTAD, M. KIWI AND M. SUDAN. </author> <title> Linearity testing in characteristic two. </title> <booktitle> FOCS 1995. </booktitle>
Reference-contexts: For the former we can use the standard linearity test of [13], and benefit from the recent analysis of <ref> [6] </ref>. The latter is new, and, although the the test itself is simple, its analysis is not. We also need a projection test to make sure that the oracle encodes an answer of the second prover which matches the enconding of the answer of the first prover.
Reference: [7] <author> M. BELLARE, S. GOLDWASSER, C. LUND AND A. RUS-SELL. </author> <title> Efficient probabilistically checkable proofs and applications to approximation. </title> <note> STOC 1993. </note>
Reference-contexts: It has lead us to a variety of different kinds of investigations and results. Let us begin with a high level overview. 1.1 Overview of main results NEW PROOF SYSTEMS AND NON-APPROXIMABILITY RESULTS. We continue previous work <ref> [4, 18, 3, 2, 7, 19, 9] </ref> by constructing new proof systems of improved complexity. They are based on a new error correcting code called the long code. <p> This was based on the characterization NP = PCP 1;1=2 [log; O (1)]. The work on improving the value of * progressed by looking a new complexity parameters and constructing new proof systems to minimize them. Thus <ref> [7] </ref> looked at the average number of query bits; [19] looked at free bits; and finally [9] looked at amortized free bits. The last built new proof systems achieving amortized free-bit complexity three, implying a N 1=4 hardness for Max Clique assuming NP 6 coR e P. <p> Arora et. al. [2] showed that there exists a constant * &gt; 1 such that approximating Max-3-SAT within * is NP-hard. (This implied the same for all of Max-SNP [31].) The above mentioned works <ref> [7, 19, 9] </ref> have found increasingly larger values for the Max-3-SAT non-approximability factor *. 1.3 Related work Following the presentation of our results of Sections 3 and 4, Arora has also investigated the limitations of proof checking techniques in proving non-approximability results [1]. <p> It relates the non-approximability factor of Max Clique to proof checking complexity. The basic reduction is that of [18], used today in slightly tighter randomized form due to [11, 34]. The sequence of works <ref> [18, 3, 2, 7, 19, 9] </ref> lead us through a sequence of parameters: query complexity, free bit complexity and, finally, for the best known results, amortized free bit complexity. <p> This contrast may perhaps provide a testing ground to separate PCP from MIP, a question raised by <ref> [7] </ref>. Below, MIP ; [; p] denotes the class of languages accepted by a one round p-prover protocol in which is prover answer is a single bit.
Reference: [8] <author> M. BELLARE, O. GOLDREICH AND M. SUDAN. </author> <title> Free Bits, PCPs and Non-Approximability Towards Tight Results. </title> <note> August 1995 (replacing previous version of May 1995). Available from ECCC, Electronic Colloquium on Computational Complexity, via WWW using http://www.eccc.uni-trier.de/eccc/. </note>
Reference-contexts: VERSIONS. This extended abstract is a very abridged version of our full paper, with almost no proofs. The latest (100+ page) version of our full paper is <ref> [8] </ref>. It contains complete definitions, proofs, and history. WHAT FOLLOWS. In later sections we will detail the results sketched here more precisely. <p> Loosely 4 This alternative transformation is used for presenting an alternative inverse of the FGLSS-reduction. See our technical report <ref> [8] </ref>. 5 Here `close' means closer than half the distance of the code.
Reference: [9] <author> M. BELLARE AND M. SUDAN. </author> <title> Improved non-approximability results. </title> <note> STOC 1994. </note>
Reference-contexts: It has lead us to a variety of different kinds of investigations and results. Let us begin with a high level overview. 1.1 Overview of main results NEW PROOF SYSTEMS AND NON-APPROXIMABILITY RESULTS. We continue previous work <ref> [4, 18, 3, 2, 7, 19, 9] </ref> by constructing new proof systems of improved complexity. They are based on a new error correcting code called the long code. <p> The work on improving the value of * progressed by looking a new complexity parameters and constructing new proof systems to minimize them. Thus [7] looked at the average number of query bits; [19] looked at free bits; and finally <ref> [9] </ref> looked at amortized free bits. The last built new proof systems achieving amortized free-bit complexity three, implying a N 1=4 hardness for Max Clique assuming NP 6 coR e P. <p> Arora et. al. [2] showed that there exists a constant * &gt; 1 such that approximating Max-3-SAT within * is NP-hard. (This implied the same for all of Max-SNP [31].) The above mentioned works <ref> [7, 19, 9] </ref> have found increasingly larger values for the Max-3-SAT non-approximability factor *. 1.3 Related work Following the presentation of our results of Sections 3 and 4, Arora has also investigated the limitations of proof checking techniques in proving non-approximability results [1]. <p> It relates the non-approximability factor of Max Clique to proof checking complexity. The basic reduction is that of [18], used today in slightly tighter randomized form due to [11, 34]. The sequence of works <ref> [18, 3, 2, 7, 19, 9] </ref> lead us through a sequence of parameters: query complexity, free bit complexity and, finally, for the best known results, amortized free bit complexity. <p> The first result above improves the result of <ref> [9] </ref> showing that NP FPCP [ log; 3 + * ] for every * &gt; 0. The second minimizes the soundness error one can get using only two free (non-amortized) bits. Both these have applications to approximation. <p> The Max Clique hardness result is of course a direct consequence of the first part of Theorem 3.1. Via the recent reduction of Furer [21], which in turn builds upon the previous reductions presented in <ref> [29, 28, 9] </ref>, we get the improved Chromatic number result. The result on Vertex Cover is a consequence of the second part of Theorem 3.1. The other Max-SNP results exploit Proposition 3.2. <p> that the oracle is close Problem Approx Non-Approx Factor Due to New Factor Previous Factor Assumption Max-3-SAT 1:319 [33, 24, 25] 1:027 1 + 1 Max-E3-SAT 1 + 1 7 folklore 1 + 1 37 unspecified [2] P 6= NP Max-2-SAT 1:075 [25, 17] 1:010 1 + 1 504 (implied <ref> [9] </ref>) P 6= NP MAX CUT 1:139 [25] 1:012 unspecified [2] P 6= NP Min-VC 2 o (1) [5, 30] 1 + 1 26 unspecified [2] P 6= NP Max-Clique N 1o (1) [14] N 1 N 3 N 5 coRP 6= NP N 4 N 6 [9] P 6= NP <p> 1 504 (implied <ref> [9] </ref>) P 6= NP MAX CUT 1:139 [25] 1:012 unspecified [2] P 6= NP Min-VC 2 o (1) [5, 30] 1 + 1 26 unspecified [2] P 6= NP Max-Clique N 1o (1) [14] N 1 N 3 N 5 coRP 6= NP N 4 N 6 [9] P 6= NP Chromatic N 1o (1) [14] N 1 Number N 1 1 13 coRP 6= NP N 7 N 14 [9] P 6= NP (Non-Approx). to a codeword amounts to two tests a linearity test and a multiplication, or RMB (respect of monomial basis) test. <p> 1 + 1 26 unspecified [2] P 6= NP Max-Clique N 1o (1) [14] N 1 N 3 N 5 coRP 6= NP N 4 N 6 <ref> [9] </ref> P 6= NP Chromatic N 1o (1) [14] N 1 Number N 1 1 13 coRP 6= NP N 7 N 14 [9] P 6= NP (Non-Approx). to a codeword amounts to two tests a linearity test and a multiplication, or RMB (respect of monomial basis) test. For the former we can use the standard linearity test of [13], and benefit from the recent analysis of [6]. <p> Proposition 4.6 shows that the well-known method of obtaining clique-approximation results from efficient pcp systems (cf., <ref> [18, 19, 9] </ref>) is complete in the sense that if clique-approximation to within some factor can be shown NP-hard then this can be done via the pcp method.
Reference: [10] <author> M. BEN-OR, S. GOLDWASSER, J. KILIAN AND A. WIGDER-SON. </author> <title> Multi-Prover interactive proofs: How to remove intractability assumptions. </title> <note> STOC 1988. </note>
Reference: [11] <author> P. BERMAN AND G. SCHNITGER. </author> <title> On the complexity of approximating the independent set problem. </title> <booktitle> Information and Computation 96, </booktitle> <month> 77-94 </month> <year> (1992). </year>
Reference-contexts: THE FORWARD CONNECTION. To explain our reverse connection for Max Clique it will help to recall the forward connection. It relates the non-approximability factor of Max Clique to proof checking complexity. The basic reduction is that of [18], used today in slightly tighter randomized form due to <ref> [11, 34] </ref>. The sequence of works [18, 3, 2, 7, 19, 9] lead us through a sequence of parameters: query complexity, free bit complexity and, finally, for the best known results, amortized free bit complexity.
Reference: [12] <author> A. BLUM. </author> <title> Algorithms for approximate graph coloring. </title> <type> Ph. D Thesis, </type> <institution> MIT, </institution> <year> 1991. </year>
Reference-contexts: An additional motivation for investigating whether there exist even weak approximation algorithms for Max Clique was suggested by Blum <ref> [12] </ref>: he shows that a factor N 1* factor approximation algorithm for some constant * &gt; 0 would imply an algorithm for coloring a 3-colorable graph with O (log N ) colors, which is significantly fewer colors than known algorithms use. GAPS IN CLIQUE SIZE.
Reference: [13] <author> M. BLUM, M. LUBY AND R. RUBINFELD. </author> <title> Self-testing/correcting with applications to numerical problems. </title> <journal> JCSS Vol. </journal> <volume> 47, </volume> <pages> pp. 549-595, </pages> <year> 1993. </year>
Reference-contexts: For the former we can use the standard linearity test of <ref> [13] </ref>, and benefit from the recent analysis of [6]. The latter is new, and, although the the test itself is simple, its analysis is not.
Reference: [14] <author> R. BOPPANA AND M. HALD ORSSON. </author> <title> Approximating maximum independent sets by excluding subgraphs. </title> <journal> BIT Vol. </journal> <volume> 32, No. 2, </volume> <year> 1992. </year>
Reference-contexts: For a minimization problem it is required that A (w) is at most ff times the optimum and at least the optimum. MAX CLIQUE APPROXIMATION. Recall the best known polynomial time approximation algorithm for Max Clique achieves a factor of only N 1o (1) <ref> [14] </ref>, scarcely better than the trivial factor of N . (Throughout the paper, when discussing the Max Clique problem, N denotes the number of vertices in the graph.) There is not even a heuristic algorithm that is conjectured to do better. (The Lovasz Theta function had been conjectured to ap proximate <p> 1 37 unspecified [2] P 6= NP Max-2-SAT 1:075 [25, 17] 1:010 1 + 1 504 (implied [9]) P 6= NP MAX CUT 1:139 [25] 1:012 unspecified [2] P 6= NP Min-VC 2 o (1) [5, 30] 1 + 1 26 unspecified [2] P 6= NP Max-Clique N 1o (1) <ref> [14] </ref> N 1 N 3 N 5 coRP 6= NP N 4 N 6 [9] P 6= NP Chromatic N 1o (1) [14] N 1 Number N 1 1 13 coRP 6= NP N 7 N 14 [9] P 6= NP (Non-Approx). to a codeword amounts to two tests a linearity <p> CUT 1:139 [25] 1:012 unspecified [2] P 6= NP Min-VC 2 o (1) [5, 30] 1 + 1 26 unspecified [2] P 6= NP Max-Clique N 1o (1) <ref> [14] </ref> N 1 N 3 N 5 coRP 6= NP N 4 N 6 [9] P 6= NP Chromatic N 1o (1) [14] N 1 Number N 1 1 13 coRP 6= NP N 7 N 14 [9] P 6= NP (Non-Approx). to a codeword amounts to two tests a linearity test and a multiplication, or RMB (respect of monomial basis) test.
Reference: [15] <author> S. EVEN, A. SELMAN AND Y. YACOBI. </author> <title> The complexity of promise problems with applications to public-key cryptography. </title> <journal> Information and Control Vol. </journal> <volume> 2, </volume> <pages> 159-173, </pages> <year> 1984. </year>
Reference-contexts: While the task is typically language recognition, we will, more generally, consider promise problems (A; B) consisting of a set A of positive instances and a set B of negative instances <ref> [15] </ref>. (Languages are a special case of promise problems; a language L is represented by the promise problem (L; L).) Of interest in the applications are various parameters of the system.
Reference: [16] <author> U. FEIGE. </author> <title> Randomized graph products, chromatic numbers, and the Lovasz theta function. </title> <note> STOC 1995. </note>
Reference-contexts: Max Clique problem, N denotes the number of vertices in the graph.) There is not even a heuristic algorithm that is conjectured to do better. (The Lovasz Theta function had been conjectured to ap proximate the Max Clique size within N 1=2 , but this conjecture was disproved by Feige <ref> [16] </ref>.) The same situation holds for the chromatic number.
Reference: [17] <author> U. FEIGE AND M. GOEMANS. </author> <title> Approximating the value of two prover proof systems, with application to Max-2SAT and Max-DICUT. </title> <month> ISTCS </month> <year> 1995. </year>
Reference-contexts: We then show that checking that the oracle is close Problem Approx Non-Approx Factor Due to New Factor Previous Factor Assumption Max-3-SAT 1:319 [33, 24, 25] 1:027 1 + 1 Max-E3-SAT 1 + 1 7 folklore 1 + 1 37 unspecified [2] P 6= NP Max-2-SAT 1:075 <ref> [25, 17] </ref> 1:010 1 + 1 504 (implied [9]) P 6= NP MAX CUT 1:139 [25] 1:012 unspecified [2] P 6= NP Min-VC 2 o (1) [5, 30] 1 + 1 26 unspecified [2] P 6= NP Max-Clique N 1o (1) [14] N 1 N 3 N 5 coRP 6= NP
Reference: [18] <author> U. FEIGE, S. GOLDWASSER, L. LOV ASZ, S. SAFRA, AND M. SZEGEDY. </author> <title> Approximating clique is almost NP-complete. </title> <booktitle> FOCS 1991. </booktitle>
Reference-contexts: It has lead us to a variety of different kinds of investigations and results. Let us begin with a high level overview. 1.1 Overview of main results NEW PROOF SYSTEMS AND NON-APPROXIMABILITY RESULTS. We continue previous work <ref> [4, 18, 3, 2, 7, 19, 9] </ref> by constructing new proof systems of improved complexity. They are based on a new error correcting code called the long code. <p> The indication of higher factors, and results for other problems, had to wait for the interactive proof approach which began with <ref> [18] </ref>. The works of [18, 3, 2] culminated in the proof that there is a constant * &gt; 0 for which approximating Max Clique within N * is NP-hard. This was based on the characterization NP = PCP 1;1=2 [log; O (1)]. <p> The indication of higher factors, and results for other problems, had to wait for the interactive proof approach which began with [18]. The works of <ref> [18, 3, 2] </ref> culminated in the proof that there is a constant * &gt; 0 for which approximating Max Clique within N * is NP-hard. This was based on the characterization NP = PCP 1;1=2 [log; O (1)]. <p> A probabilistic proof system <ref> [20, 18] </ref> 1 is described by a probabilistic, polynomial time verifier V . It takes an input x of length n and tosses coins R. <p> From now on, we discuss approximation in terms of these gap problems. THE FORWARD CONNECTION. To explain our reverse connection for Max Clique it will help to recall the forward connection. It relates the non-approximability factor of Max Clique to proof checking complexity. The basic reduction is that of <ref> [18] </ref>, used today in slightly tighter randomized form due to [11, 34]. The sequence of works [18, 3, 2, 7, 19, 9] lead us through a sequence of parameters: query complexity, free bit complexity and, finally, for the best known results, amortized free bit complexity. <p> It relates the non-approximability factor of Max Clique to proof checking complexity. The basic reduction is that of [18], used today in slightly tighter randomized form due to [11, 34]. The sequence of works <ref> [18, 3, 2, 7, 19, 9] </ref> lead us through a sequence of parameters: query complexity, free bit complexity and, finally, for the best known results, amortized free bit complexity. <p> Proposition 4.6 shows that the well-known method of obtaining clique-approximation results from efficient pcp systems (cf., <ref> [18, 19, 9] </ref>) is complete in the sense that if clique-approximation to within some factor can be shown NP-hard then this can be done via the pcp method.
Reference: [19] <author> U. FEIGE AND J. KILIAN. </author> <title> Two prover protocols Low error at affordable rates. </title> <note> STOC 1994. </note>
Reference-contexts: It has lead us to a variety of different kinds of investigations and results. Let us begin with a high level overview. 1.1 Overview of main results NEW PROOF SYSTEMS AND NON-APPROXIMABILITY RESULTS. We continue previous work <ref> [4, 18, 3, 2, 7, 19, 9] </ref> by constructing new proof systems of improved complexity. They are based on a new error correcting code called the long code. <p> This was based on the characterization NP = PCP 1;1=2 [log; O (1)]. The work on improving the value of * progressed by looking a new complexity parameters and constructing new proof systems to minimize them. Thus [7] looked at the average number of query bits; <ref> [19] </ref> looked at free bits; and finally [9] looked at amortized free bits. The last built new proof systems achieving amortized free-bit complexity three, implying a N 1=4 hardness for Max Clique assuming NP 6 coR e P. <p> Arora et. al. [2] showed that there exists a constant * &gt; 1 such that approximating Max-3-SAT within * is NP-hard. (This implied the same for all of Max-SNP [31].) The above mentioned works <ref> [7, 19, 9] </ref> have found increasingly larger values for the Max-3-SAT non-approximability factor *. 1.3 Related work Following the presentation of our results of Sections 3 and 4, Arora has also investigated the limitations of proof checking techniques in proving non-approximability results [1]. <p> It relates the non-approximability factor of Max Clique to proof checking complexity. The basic reduction is that of [18], used today in slightly tighter randomized form due to [11, 34]. The sequence of works <ref> [18, 3, 2, 7, 19, 9] </ref> lead us through a sequence of parameters: query complexity, free bit complexity and, finally, for the best known results, amortized free bit complexity. <p> Proposition 4.6 shows that the well-known method of obtaining clique-approximation results from efficient pcp systems (cf., <ref> [18, 19, 9] </ref>) is complete in the sense that if clique-approximation to within some factor can be shown NP-hard then this can be done via the pcp method.
Reference: [20] <author> L. FORTNOW, J. ROMPEL AND M. SIPSER. </author> <title> On the power of multiprover interactive protocols. </title> <note> Structures 1988. </note>
Reference-contexts: A probabilistic proof system <ref> [20, 18] </ref> 1 is described by a probabilistic, polynomial time verifier V . It takes an input x of length n and tosses coins R.
Reference: [21] <author> M. FURER. </author> <title> Improved hardness results for approximating the chromatic number. </title> <booktitle> FOCS 1995. </booktitle>
Reference-contexts: The Max Clique hardness result is of course a direct consequence of the first part of Theorem 3.1. Via the recent reduction of Furer <ref> [21] </ref>, which in turn builds upon the previous reductions presented in [29, 28, 9], we get the improved Chromatic number result. The result on Vertex Cover is a consequence of the second part of Theorem 3.1. The other Max-SNP results exploit Proposition 3.2.
Reference: [22] <author> M. GAREY AND D. JOHNSON. </author> <title> The complexity of near optimal graph coloring. </title> <journal> Journal of the ACM Vol. </journal> <volume> 23, No. 1, </volume> <pages> 43-49, </pages> <year> 1976. </year>
Reference-contexts: It contains complete definitions, proofs, and history. WHAT FOLLOWS. In later sections we will detail the results sketched here more precisely. First, however, we provide some history, then some definitions. 1.2 History of non-approximability Early work in non-approximability includes that of Garey and Johnson <ref> [22] </ref> showing that it is NP-hard to approximate the chromatic factor within a factor less than two. The indication of higher factors, and results for other problems, had to wait for the interactive proof approach which began with [18].
Reference: [23] <author> M. GAREY, D. JOHNSON AND L. STOCKMEYER. </author> <title> Some simplified NP-complete graph problems. </title> <journal> TCS 1, </journal> <pages> pp. 237-267, </pages> <year> 1976. </year>
Reference: [24] <author> M. GOEMANS AND D. WILLIAMSON. </author> <title> New 3/4-approximation algorithm for MAX SAT. </title> <booktitle> Proceedings of the 3rd Mathematical Programming Society Conference on Integer Programming and Combinatorial Optimization, </booktitle> <year> 1993. </year>
Reference-contexts: We then show that checking that the oracle is close Problem Approx Non-Approx Factor Due to New Factor Previous Factor Assumption Max-3-SAT 1:319 <ref> [33, 24, 25] </ref> 1:027 1 + 1 Max-E3-SAT 1 + 1 7 folklore 1 + 1 37 unspecified [2] P 6= NP Max-2-SAT 1:075 [25, 17] 1:010 1 + 1 504 (implied [9]) P 6= NP MAX CUT 1:139 [25] 1:012 unspecified [2] P 6= NP Min-VC 2 o (1) [5,
Reference: [25] <author> M. GOEMANS AND D. WILLIAMSON. </author> <title> :878 approximation algorithms for Max-CUT and Max-2SAT. </title> <note> STOC 1994. </note>
Reference-contexts: We then show that checking that the oracle is close Problem Approx Non-Approx Factor Due to New Factor Previous Factor Assumption Max-3-SAT 1:319 <ref> [33, 24, 25] </ref> 1:027 1 + 1 Max-E3-SAT 1 + 1 7 folklore 1 + 1 37 unspecified [2] P 6= NP Max-2-SAT 1:075 [25, 17] 1:010 1 + 1 504 (implied [9]) P 6= NP MAX CUT 1:139 [25] 1:012 unspecified [2] P 6= NP Min-VC 2 o (1) [5, <p> We then show that checking that the oracle is close Problem Approx Non-Approx Factor Due to New Factor Previous Factor Assumption Max-3-SAT 1:319 [33, 24, 25] 1:027 1 + 1 Max-E3-SAT 1 + 1 7 folklore 1 + 1 37 unspecified [2] P 6= NP Max-2-SAT 1:075 <ref> [25, 17] </ref> 1:010 1 + 1 504 (implied [9]) P 6= NP MAX CUT 1:139 [25] 1:012 unspecified [2] P 6= NP Min-VC 2 o (1) [5, 30] 1 + 1 26 unspecified [2] P 6= NP Max-Clique N 1o (1) [14] N 1 N 3 N 5 coRP 6= NP <p> Non-Approx Factor Due to New Factor Previous Factor Assumption Max-3-SAT 1:319 [33, 24, 25] 1:027 1 + 1 Max-E3-SAT 1 + 1 7 folklore 1 + 1 37 unspecified [2] P 6= NP Max-2-SAT 1:075 [25, 17] 1:010 1 + 1 504 (implied [9]) P 6= NP MAX CUT 1:139 <ref> [25] </ref> 1:012 unspecified [2] P 6= NP Min-VC 2 o (1) [5, 30] 1 + 1 26 unspecified [2] P 6= NP Max-Clique N 1o (1) [14] N 1 N 3 N 5 coRP 6= NP N 4 N 6 [9] P 6= NP Chromatic N 1o (1) [14] N 1
Reference: [26] <author> O. GOLDREICH, S. MICALI, AND A. WIGDERSON. </author> <title> Proofs that yield nothing but their validity and a methodology of cryptographic protocol design. </title> <booktitle> FOCS 1986. </booktitle>
Reference-contexts: The last item follows from <ref> [27, 26] </ref>. In consequence of the above, we note that both the freeness and the amortization are key to going as low as two amortized free bits.
Reference: [27] <author> S. GOLDWASSER, S. MICALI, AND C. RACKOFF. </author> <title> The knowledge complexity of interactive proofs. </title> <journal> SIAM J. </journal> <volume> Computing Vol 18, No. 1, </volume> <pages> 186-208, </pages> <year> 1989. </year>
Reference-contexts: The last item follows from <ref> [27, 26] </ref>. In consequence of the above, we note that both the freeness and the amortization are key to going as low as two amortized free bits.
Reference: [28] <author> S. KHANNA, N. LINIAL AND S. SAFRA. </author> <title> On the hardness of approximating the chromatic number. </title> <month> ISTCS </month> <year> 1993. </year>
Reference-contexts: The Max Clique hardness result is of course a direct consequence of the first part of Theorem 3.1. Via the recent reduction of Furer [21], which in turn builds upon the previous reductions presented in <ref> [29, 28, 9] </ref>, we get the improved Chromatic number result. The result on Vertex Cover is a consequence of the second part of Theorem 3.1. The other Max-SNP results exploit Proposition 3.2.
Reference: [29] <author> C. LUND AND M. YANNAKAKIS. </author> <title> On the hardness of approximating minimization problems. </title> <note> STOC 1993. </note>
Reference-contexts: The Max Clique hardness result is of course a direct consequence of the first part of Theorem 3.1. Via the recent reduction of Furer [21], which in turn builds upon the previous reductions presented in <ref> [29, 28, 9] </ref>, we get the improved Chromatic number result. The result on Vertex Cover is a consequence of the second part of Theorem 3.1. The other Max-SNP results exploit Proposition 3.2.
Reference: [30] <author> MONIEN AND SPECKENMEYER. </author> <title> Some further approximation algorithms for the vertex cover problem. </title> <booktitle> Proceedings of CAAP 83, Lecure Notes in Computer Science Vol. </booktitle> <volume> 159, </volume> <publisher> Springer-Verlag, </publisher> <year> 1983. </year>
Reference-contexts: [33, 24, 25] 1:027 1 + 1 Max-E3-SAT 1 + 1 7 folklore 1 + 1 37 unspecified [2] P 6= NP Max-2-SAT 1:075 [25, 17] 1:010 1 + 1 504 (implied [9]) P 6= NP MAX CUT 1:139 [25] 1:012 unspecified [2] P 6= NP Min-VC 2 o (1) <ref> [5, 30] </ref> 1 + 1 26 unspecified [2] P 6= NP Max-Clique N 1o (1) [14] N 1 N 3 N 5 coRP 6= NP N 4 N 6 [9] P 6= NP Chromatic N 1o (1) [14] N 1 Number N 1 1 13 coRP 6= NP N 7 N
Reference: [31] <author> C. PAPADIMITRIOU AND M. YANNAKAKIS. </author> <title> Optimization, approximation, and complexity classes. </title> <journal> JCSS 43, </journal> <pages> pp. 425-440, </pages> <year> 1991. </year>
Reference-contexts: Arora et. al. [2] showed that there exists a constant * &gt; 1 such that approximating Max-3-SAT within * is NP-hard. (This implied the same for all of Max-SNP <ref> [31] </ref>.) The above mentioned works [7, 19, 9] have found increasingly larger values for the Max-3-SAT non-approximability factor *. 1.3 Related work Following the presentation of our results of Sections 3 and 4, Arora has also investigated the limitations of proof checking techniques in proving non-approximability results [1].
Reference: [32] <author> R. RAZ. </author> <title> A parallel repetition theorem. </title> <note> STOC 1995. </note>
Reference-contexts: We will now provide only some very brief intuition. The starting point for all our proof systems is a two-prover proof system achieving arbitrarily small but fixed constant error with logarithmic randomness and constant answer size, as provided by Raz <ref> [32] </ref>. This proof system has the property that the answer of the second prover is supposed to be a predetermined function of the answer of the first prover.
Reference: [33] <author> M. YANNAKAKIS. </author> <title> On the approximation of maximum satisfiability. </title> <booktitle> SODA 1992. </booktitle>
Reference-contexts: We then show that checking that the oracle is close Problem Approx Non-Approx Factor Due to New Factor Previous Factor Assumption Max-3-SAT 1:319 <ref> [33, 24, 25] </ref> 1:027 1 + 1 Max-E3-SAT 1 + 1 7 folklore 1 + 1 37 unspecified [2] P 6= NP Max-2-SAT 1:075 [25, 17] 1:010 1 + 1 504 (implied [9]) P 6= NP MAX CUT 1:139 [25] 1:012 unspecified [2] P 6= NP Min-VC 2 o (1) [5,
Reference: [34] <author> D. ZUCKERMAN. </author> <title> NP-Complete Problems have a version that is hard to Approximate. </title> <note> Structures 1993. </note>
Reference-contexts: THE FORWARD CONNECTION. To explain our reverse connection for Max Clique it will help to recall the forward connection. It relates the non-approximability factor of Max Clique to proof checking complexity. The basic reduction is that of [18], used today in slightly tighter randomized form due to <ref> [11, 34] </ref>. The sequence of works [18, 3, 2, 7, 19, 9] lead us through a sequence of parameters: query complexity, free bit complexity and, finally, for the best known results, amortized free bit complexity.
References-found: 34

