URL: http://www.cs.dartmouth.edu/~gdavis/papers/dcc97.ps.gz
Refering-URL: http://www.cs.dartmouth.edu/~gdavis/
Root-URL: http://www.cs.dartmouth.edu
Email: fgdavis,chawlag@cs.dartmouth.edu  
Title: Image Coding Using Optimized Significance Tree Quantization  
Author: Geoffrey M. Davis and Sumit Chawla 
Keyword: JPEG for standard test images.  
Address: College, Hanover, NH 03755  
Affiliation: Math, Computer Science Departments Dartmouth  
Abstract: A number of recent embedded transform coders, including Shapiro's EZW scheme, Said and Pearlman's SPIHT scheme, and Xiong et al.'s EZDCT scheme employ a common algorithm called significance tree quantization (STQ). Each of these coders have been selected from a large family of significance tree quantizers based on empirical work and a priori knowledge about transform coefficient behavior. We describe an algorithm for selecting a particular form of STQ that is optimized for a given class of images. We apply our optimization procedure to the task of quantizing 8x8 DCT blocks. Our algorithm yields a fully embedded, low-complexity coder with performances from 0.6 to 1.9 dB better than baseline 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Bell, J. G. Cleary, and I. H. Witten. </author> <title> Text Compression. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1990. </year>
Reference-contexts: We can compress this output using an adaptive arithmetic coder of some kind <ref> [1] </ref>, or for low complexity applications the output can be used as is. We now describe an em bedded procedure for quantizing coefficients once their magnitudes have been specified. 2.2 Embedded Scalar Quantization The above procedure generates an embedded significance map for the coefficients. <p> g which we will write as [r 1 ; r 2 ; 1 ; 2 ]. 4 Results Our goal is to find an optimal significance tree for the AC coefficients of a DCT block, i.e. we seek to find an optimal tree for mapping the coefficients in the rectangle <ref> [1; 7; 0; 2 ] </ref>. Finding this optimal tree requires that we solve a set of subproblems, each of which consists of finding an optimal tree for mapping coefficients in a rectangle [r 1 ; r 2 ; 1 ; 2 ].
Reference: [2] <author> W. B. Pennebaker and J. L. Mitchell. </author> <title> JPEG Still Image Data Compression Standard. </title> <publisher> Van Nostrand Reinhold, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: We will restrict our attention to "rectangular" partitions in this polar coordinate system of the form f (r; ) : r 1 r r 2 ; 1 2 g which we will write as <ref> [r 1 ; r 2 ; 1 ; 2 ] </ref>. 4 Results Our goal is to find an optimal significance tree for the AC coefficients of a DCT block, i.e. we seek to find an optimal tree for mapping the coefficients in the rectangle [1; 7; 0; 2 ]. <p> g which we will write as [r 1 ; r 2 ; 1 ; 2 ]. 4 Results Our goal is to find an optimal significance tree for the AC coefficients of a DCT block, i.e. we seek to find an optimal tree for mapping the coefficients in the rectangle <ref> [1; 7; 0; 2 ] </ref>. Finding this optimal tree requires that we solve a set of subproblems, each of which consists of finding an optimal tree for mapping coefficients in a rectangle [r 1 ; r 2 ; 1 ; 2 ]. <p> Finding this optimal tree requires that we solve a set of subproblems, each of which consists of finding an optimal tree for mapping coefficients in a rectangle <ref> [r 1 ; r 2 ; 1 ; 2 ] </ref>. We optimize the significance tree for [r 1 ; r 2 ; 1 ; 2 ] by finding the lowest cost partition into children of the form [r 1 ; r; 1 ; ], [r 1 ; r; ; 2 ], <p> Finding this optimal tree requires that we solve a set of subproblems, each of which consists of finding an optimal tree for mapping coefficients in a rectangle <ref> [r 1 ; r 2 ; 1 ; 2 ] </ref>. We optimize the significance tree for [r 1 ; r 2 ; 1 ; 2 ] by finding the lowest cost partition into children of the form [r 1 ; r; 1 ; ], [r 1 ; r; ; 2 ], [r; r 2 ; 1 ; ], and [r; r 2 ; ; 2 ]. <p> We optimize the significance tree for [r 1 ; r 2 ; 1 ; 2 ] by finding the lowest cost partition into children of the form [r 1 ; r; 1 ; ], <ref> [r 1 ; r; ; 2 ] </ref>, [r; r 2 ; 1 ; ], and [r; r 2 ; ; 2 ]. Each subproblem involves testing partitions for values of r between r 1 and r 2 and for values of between 1 and 2 . <p> We optimize the significance tree for [r 1 ; r 2 ; 1 ; 2 ] by finding the lowest cost partition into children of the form [r 1 ; r; 1 ; ], [r 1 ; r; ; 2 ], [r; r 2 ; 1 ; ], and <ref> [r; r 2 ; ; 2 ] </ref>. Each subproblem involves testing partitions for values of r between r 1 and r 2 and for values of between 1 and 2 . <p> The cost of coding the particular significance tree structure used, roughly 80 bytes, is included in the overall image cost. For comparison, we have included PSNR's for similar DCT-based schemes, including baseline JPEG <ref> [2] </ref>, improved JPEG [5], and EZDCT without arithmetic coding [6]. We have optimized our significance trees for the case of no entropy coding, and the results shown in the table make no use of entropy coding. We note that arithmetic coding improves the EZDCT results by roughly 1 dB. <p> Lena Barb. Lena Barb. Lena Barb. Lena Barb. Lena 0.25 25.2 31.6 26.0 31.9 25.4 30.7 25.9 31.2 26.4 32.3 0.75 31.0 36.6 33.0 37.5 32.5 37.1 32.1 37.0 32.3 37.2 Table 1: PSNR's for baseline JPEG <ref> [2] </ref>, improved JPEG [5], EZDCT with no arithmetic coding [6], and our significance tree quantization scheme. 5 Conclusion Significance tree quantization provides an effective mechanism for exploiting coefficient interdependencies in both DCT-based and wavelet-based coders. This performance can be enhanced significantly by optimized significance tree design.
Reference: [3] <author> A. Said and W. A. Pearlman. </author> <title> A new, fast, and efficient image codec based on set partitioning in hierarchichal trees. </title> <journal> IEEE Trans. Circuits and Systems for Video Technology, </journal> <volume> 6(3) </volume> <pages> 243-250, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: 1 Introduction A number of recent image coding schemes, including Shapiro's embedded zerotree wavelet scheme (EZW) [4], Said and Pearlman's set partitioning in hierarchical trees scheme (SPIHT) <ref> [3] </ref>, and Xiong et al.'s EZDCT scheme [6], all employ an embedded significance mapping and quantization technique that we refer to as significance tree quantization (STQ). The EZW, SPIHT, and EZDCT schemes are members of a large, general family of embedded, tree-structured significance mapping schemes. <p> In practice, however, we do not have knowledge of all the conditional probabilities we require. Moreover, the number of context probabilities we need is exponential in the number of variables, and it becomes difficult to obtain accurate estimates of them. The SPIHT coder of Said and Pearlman <ref> [3] </ref> uses an adaptive conditioning scheme similar to the one described above for determining the significance of sets of 5 variables, but it is difficult to extend much beyond this without the estimation becoming impractical. <p> In the next section we describe an algorithm for optimizing these trees for a given image or ensemble of images. 3 Optimized Significance Tree Selection Test images compressed with the SPIHT coder <ref> [3] </ref> have PSNR's on the order of 1 dB higher than those reported for Shapiro's EZW coder [4]. <p> The reason for the relative decline in performance of these schemes at low rates is that the coding of DC values is very inefficient. In our experiments we have optimized significance trees only for the AC coefficients. DC coefficients have been coded using a significance tree based on <ref> [3] </ref> following [6]. At low bit rates this inefficiency in the DC coefficients is particularly pronounced and results in poor performance. The final column shows the result of performing a Haar transform on the DC values and coding the values using the coder of [3] with no entropy coding. <p> using a significance tree based on <ref> [3] </ref> following [6]. At low bit rates this inefficiency in the DC coefficients is particularly pronounced and results in poor performance. The final column shows the result of performing a Haar transform on the DC values and coding the values using the coder of [3] with no entropy coding. This more effective coding of the DC values yields a substantial performance improvement at low rates. Our optimization is fairly robust to significance tree mismatch.
Reference: [4] <author> J. Shapiro. </author> <title> Embedded image coding using zerotrees of wavelet coefficients. </title> <journal> IEEE Transactions on Signal Processing, </journal> <volume> 41(12) </volume> <pages> 3445-3462, </pages> <month> Dec. </month> <year> 1993. </year>
Reference-contexts: 1 Introduction A number of recent image coding schemes, including Shapiro's embedded zerotree wavelet scheme (EZW) <ref> [4] </ref>, Said and Pearlman's set partitioning in hierarchical trees scheme (SPIHT) [3], and Xiong et al.'s EZDCT scheme [6], all employ an embedded significance mapping and quantization technique that we refer to as significance tree quantization (STQ). <p> In the next section we describe an algorithm for optimizing these trees for a given image or ensemble of images. 3 Optimized Significance Tree Selection Test images compressed with the SPIHT coder [3] have PSNR's on the order of 1 dB higher than those reported for Shapiro's EZW coder <ref> [4] </ref>. The SPIHT coder makes minor improvements in EZW in a number of areas: it uses a slightly more effective filter set, it makes better use of context-based conditioning in its entropy coder, and it minimizes coefficient ordering effects.
Reference: [5] <author> S. Wu and A. Gersho. </author> <title> Rate-constrained picture adaptive quantization for JPEG baseline coders. </title> <booktitle> In Proc. ICASSP, </booktitle> <volume> volume 5, </volume> <pages> pages 389-392, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: We employ our optimization procedure for 8x8 DCT blocks and obtain a fully embedded, low-complexity scheme that yields substantial improvements in PSNR over baseline JPEG. Without using any entropy coding, our scheme also outperforms optimized JPEG <ref> [5] </ref> and a version of EZDCT that uses no entropy coding. 2 Significance Tree Quantization 2.1 Significance Trees Significance tree quantization is a simple scheme for quantizing an n-vector X = (X 1 ; X 2 ; : : : ; X n ) of coefficients using a tree-structured significance map. <p> The cost of coding the particular significance tree structure used, roughly 80 bytes, is included in the overall image cost. For comparison, we have included PSNR's for similar DCT-based schemes, including baseline JPEG [2], improved JPEG <ref> [5] </ref>, and EZDCT without arithmetic coding [6]. We have optimized our significance trees for the case of no entropy coding, and the results shown in the table make no use of entropy coding. We note that arithmetic coding improves the EZDCT results by roughly 1 dB. <p> Lena Barb. Lena Barb. Lena Barb. Lena Barb. Lena 0.25 25.2 31.6 26.0 31.9 25.4 30.7 25.9 31.2 26.4 32.3 0.75 31.0 36.6 33.0 37.5 32.5 37.1 32.1 37.0 32.3 37.2 Table 1: PSNR's for baseline JPEG [2], improved JPEG <ref> [5] </ref>, EZDCT with no arithmetic coding [6], and our significance tree quantization scheme. 5 Conclusion Significance tree quantization provides an effective mechanism for exploiting coefficient interdependencies in both DCT-based and wavelet-based coders. This performance can be enhanced significantly by optimized significance tree design.
Reference: [6] <author> Z. Xiong, O. Guleryuz, and M. T. Orchard. </author> <title> A DCT-based embedded image coder. </title> <journal> IEEE Signal Processing Letters, </journal> <month> Nov. </month> <year> 1996. </year> <month> 10 </month>
Reference-contexts: 1 Introduction A number of recent image coding schemes, including Shapiro's embedded zerotree wavelet scheme (EZW) [4], Said and Pearlman's set partitioning in hierarchical trees scheme (SPIHT) [3], and Xiong et al.'s EZDCT scheme <ref> [6] </ref>, all employ an embedded significance mapping and quantization technique that we refer to as significance tree quantization (STQ). The EZW, SPIHT, and EZDCT schemes are members of a large, general family of embedded, tree-structured significance mapping schemes. <p> An intriguing experiment by Xiong et al.<ref> [6] </ref> has shown that a SPIHT-style quantization is quite effective for the discrete cosine transform, yielding some of the best PSNR's in the literature for DCT-based coders. Although the zerotrees in [6] have been modified slightly to fit the structure of the DCT, they are still rather arbitrary, especially considering that the trees were originally designed for a wavelet transform. What are suitable zerotrees for the DCT? Our experiments below give optimized trees for particular images. <p> We then describe a family of significance trees suitable for a DCT-based coder and we optimize our partitioning over this family. Our optimized zerotree encoder yields significant gains over that of <ref> [6] </ref>. 6 3.1 Zerotree Optimization Suppose we have a set of coefficients that we want to quantize using STQ. The set could be an 8 fi 8 DCT block, for example, or a wavelet subtree of a fixed depth. <p> The cost of coding the particular significance tree structure used, roughly 80 bytes, is included in the overall image cost. For comparison, we have included PSNR's for similar DCT-based schemes, including baseline JPEG [2], improved JPEG [5], and EZDCT without arithmetic coding <ref> [6] </ref>. We have optimized our significance trees for the case of no entropy coding, and the results shown in the table make no use of entropy coding. We note that arithmetic coding improves the EZDCT results by roughly 1 dB. <p> In our experiments we have optimized significance trees only for the AC coefficients. DC coefficients have been coded using a significance tree based on [3] following <ref> [6] </ref>. At low bit rates this inefficiency in the DC coefficients is particularly pronounced and results in poor performance. The final column shows the result of performing a Haar transform on the DC values and coding the values using the coder of [3] with no entropy coding. <p> Lena Barb. Lena Barb. Lena Barb. Lena Barb. Lena 0.25 25.2 31.6 26.0 31.9 25.4 30.7 25.9 31.2 26.4 32.3 0.75 31.0 36.6 33.0 37.5 32.5 37.1 32.1 37.0 32.3 37.2 Table 1: PSNR's for baseline JPEG [2], improved JPEG [5], EZDCT with no arithmetic coding <ref> [6] </ref>, and our significance tree quantization scheme. 5 Conclusion Significance tree quantization provides an effective mechanism for exploiting coefficient interdependencies in both DCT-based and wavelet-based coders. This performance can be enhanced significantly by optimized significance tree design.
References-found: 6

