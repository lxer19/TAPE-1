URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1994/1994-55.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: e-mail: hansz@cs.ruu.nl  
Title: Total termination of term rewriting is undecidable  
Author: Hans Zantema 
Address: P.O. box 80.089, 3508 TB Utrecht, The Netherlands  
Affiliation: Utrecht University, Department of Computer Science,  
Abstract: Usually termination of term rewriting systems (TRS's) is proved by means of a monotonic well-founded order. If this order is total on ground terms, the TRS is called totally terminating. In this paper we prove that total termination is an undecidable property of finite term rewriting sys tems. The proof is given by means of Post's Correspondence Problem.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Caron, A. C. </author> <title> Linear bounded automata and rewrite systems: influence of initial configurations on decision properties. </title> <booktitle> In Proceedings of the Colloquium on Trees in Algebra and Programming (1991), vol. 493 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <pages> pp. 74-89. </pages>
Reference-contexts: This proves that simple termination is undecidable. For people not familiar with the undecidability of uniform termination of linear bounded automata this undecidability proof of simple termination is much simpler than the proof given in <ref> [1] </ref>. It can even be simplified further: for simple termination there is no need to distinguish between a and a.
Reference: [2] <author> Dauchet, M. </author> <title> Simulation of Turing machines by a regular rewrite rule. </title> <booktitle> Theoretical Computer Science 103, 2 (1992), </booktitle> <pages> 409-420. </pages> <booktitle> Appeared before in Proceedings of RTA89, Lecture Notes in Computer Science 355, </booktitle> <publisher> Springer, </publisher> <year> 1989. </year>
Reference: [3] <author> Ferreira, M. C. F., and Zantema, H. </author> <title> Well-foundedness of term or--derings. </title> <booktitle> Fourth International Workshop on Conditional Term Rewriting Systems, </booktitle> <address> Jerusalem, </address> <month> July </month> <year> 1994, </year> <note> to appear in Lecture Notes in Computer Science, Springer. </note>
Reference-contexts: As remarked above every terminating TRS is compatible with a monotonic well-founded order. On the other hand, using this result and Zorn's lemma it is possible to show that every terminating TRS is compatible with a total well-founded order, see <ref> [3] </ref>. Hence it is the combination of totality and monotonicity that makes the notion of total termination stronger than termination. The following well-known proposition (see e.g. [16], proposition 2.3.4) states that the well-foundedness condition may be replaced by the subterm property.
Reference: [4] <author> Ferreira, M. C. F., and Zantema, H. </author> <title> Total termination of term rewriting. </title> <booktitle> In Proceedings of the 5th Conference on Rewriting Techniques and Applications (1993), </booktitle> <editor> C. Kirchner, Ed., </editor> <volume> vol. </volume> <booktitle> 690 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <pages> pp. 213-227. </pages>
Reference-contexts: Hence the above example is not totally terminating, while all TRS's of which termination can be proved by means of standard orders are totally terminating. Total termination was introduced in [18, 20] in a more semantical way. An extensive examination of total termination has been given in <ref> [4, 5, 6] </ref>, including the proof that the semantical definition and the order definition are equivalent. 1 It is well-known that termination is an undecidable property of finite TRS's. The first proof was given in [8].
Reference: [5] <author> Ferreira, M. C. F., and Zantema, H. </author> <title> Syntactical analysis of total termination. </title> <booktitle> In Proceedings of the 4th International Conference on Algebraic and Logic Programming (1994), </booktitle> <editor> G. Levi and M. Rodrguez-Artalejo, Eds., </editor> <volume> vol. </volume> <booktitle> 850 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <pages> pp. 204-222. </pages>
Reference-contexts: Hence the above example is not totally terminating, while all TRS's of which termination can be proved by means of standard orders are totally terminating. Total termination was introduced in [18, 20] in a more semantical way. An extensive examination of total termination has been given in <ref> [4, 5, 6] </ref>, including the proof that the semantical definition and the order definition are equivalent. 1 It is well-known that termination is an undecidable property of finite TRS's. The first proof was given in [8].
Reference: [6] <author> Ferreira, M. C. F., and Zantema, H. </author> <title> Total termination of term rewriting. </title> <journal> Journal of Applicable Algebra in Engineering, Communication and Computing (1995). </journal> <note> To appear. </note>
Reference-contexts: Hence the above example is not totally terminating, while all TRS's of which termination can be proved by means of standard orders are totally terminating. Total termination was introduced in [18, 20] in a more semantical way. An extensive examination of total termination has been given in <ref> [4, 5, 6] </ref>, including the proof that the semantical definition and the order definition are equivalent. 1 It is well-known that termination is an undecidable property of finite TRS's. The first proof was given in [8].
Reference: [7] <author> Gallier, J. </author> <title> What's so special about Kruskal's theorem and the ordinal 0 ? A survey of some results in proof theory. </title> <booktitle> Annals of Pure and Applied Logic 53 (1991), </booktitle> <pages> 199-260. </pages>
Reference: [8] <author> Huet, G., and Lankford, D. S. </author> <title> On the uniform halting problem for term rewriting systems. </title> <note> Rapport Laboria 283, INRIA, </note> <year> 1978. </year>
Reference-contexts: An extensive examination of total termination has been given in [4, 5, 6], including the proof that the semantical definition and the order definition are equivalent. 1 It is well-known that termination is an undecidable property of finite TRS's. The first proof was given in <ref> [8] </ref>. It has even been proved ([2, 11]) that termination is an undecidable property of single rewrite rules. A TRS is called simply terminating if it is compatible with a simplification order, i.e., a well-founded monotonic order possessing the subterm property.
Reference: [9] <author> Kamin, S., and L evy, J. J. </author> <title> Two generalizations of the recursive path ordering. </title> <institution> University of Illinois, </institution> <year> 1980. </year>
Reference-contexts: The TRS f (a) ! f (b) is simply terminating since it is length preserving, but not totally terminating since a and b are incomparable. In our order construction we will use the lexicographic path order, a well-known variant of the recursive path order introduced in <ref> [9] </ref>. It is defined recursively as follows. Let be any order on the signature F .
Reference: [10] <author> Kruskal, J. </author> <title> Well-quasi-ordering, the tree theorem, and Vazsonyi's conjecture. </title> <journal> Trans. American Mathematical Society 95 (1960), </journal> <pages> 210-225. </pages>
Reference: [11] <author> Lescanne, P. </author> <title> On termination of one rule rewrite systems. </title> <booktitle> Theoretical Computer Science 132 (1994), </booktitle> <pages> 395-401. </pages>
Reference-contexts: Simple termination is stronger than termination, but weaker than total termination. Simple termination has been proved to be undecidable ([1]), even for single rewrite rules ([12]). In this paper we prove that total termination is undecidable too 1 . As in <ref> [11] </ref> we give a transformation from an arbitrary instance of Post's Correspondence Problem to a TRS. It is a rather straightforward observation that the TRS is terminating if and only if it is simply terminating, if and only if the instance of Post's Correspondence Problem has no solution.
Reference: [12] <author> Middeldorp, A., and Gramlich, B. </author> <title> Simple termination is difficult. </title> <booktitle> In Proceedings of the 5th Conference on Rewriting Techniques and Applications (1993), </booktitle> <editor> C. Kirchner, Ed., </editor> <booktitle> Lecture Notes in Computer Science, </booktitle> <publisher> Springer. </publisher>
Reference: [13] <author> Middeldorp, A., and Zantema, H. </author> <title> Simple termination revisited. </title> <booktitle> In Proceedings of the 12th International Conference on Automated Deduction (CADE12) (1994), </booktitle> <editor> A. Bundy, Ed., </editor> <volume> vol. </volume> <booktitle> 814 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <pages> pp. 451-465. </pages>
Reference-contexts: A direct consequence of Kruskal's theorem ([10, 7]) is that any simplification order over a finite signature is well-founded. A TRS over a finite signature is called simply terminating if it is compatible with a simplification order. In <ref> [13] </ref> it is described how simplification orders extend to infinite signatures. A TRS is called length-preserving if jl j = jr j for all rules l ! r and all ground substitutions . Here jtj denotes the number of operation symbols.
Reference: [14] <author> Post, E. </author> <title> A variant of a recursively unsolvable problem. </title> <journal> Bulletin of the American Mathematical Society 52 (1946). </journal> <volume> 17 </volume>
Reference: [15] <author> Rozenberg, G., and Salomaa, A. </author> <title> Cornerstones of Undecidability. </title> <publisher> Pren--tice Hall, </publisher> <year> 1994. </year>
Reference-contexts: It originates from Emil Post ([14]); an extensive recent investigation can be found in <ref> [15] </ref>.
Reference: [16] <author> Rubio, A. </author> <title> Automated Deduction with Constrained Clauses. </title> <type> PhD thesis, </type> <institution> Polytechnical University Catalony, Barcelona, </institution> <year> 1994. </year>
Reference-contexts: Hence it is the combination of totality and monotonicity that makes the notion of total termination stronger than termination. The following well-known proposition (see e.g. <ref> [16] </ref>, proposition 2.3.4) states that the well-foundedness condition may be replaced by the subterm property. Proposition 2 Let &gt; be any monotonic total order on ground terms over a finite signature. Then &gt; is well-founded if and only if it has the subterm property.
Reference: [17] <author> Steinbach, J. </author> <title> Extensions and comparison of simplification orderings. </title> <booktitle> In Proceedings of the 3rd Conference on Rewriting Techniques and Applications (1989), </booktitle> <editor> N. Dershowitz, Ed., </editor> <volume> vol. </volume> <booktitle> 355 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <pages> pp. 434-448. </pages>
Reference-contexts: In many cases the order is monotonic, and it suffices to prove that l &gt; r for all rewrite rules l ! r and all ground substitutions . Standard techniques following this approach include recursive path order and Knuth-Bendix order, see for example <ref> [17] </ref>. It is an interesting question whether these orders are total or can be extended to a total monotonic order, or are essentially non-total.
Reference: [18] <author> Zantema, H. </author> <title> Termination of term rewriting by interpretation. In Conditional Term Rewriting Systems, </title> <booktitle> proceedings third international workshop CTRS-92 (1993), </booktitle> <editor> M. Rusinowitch and J. Remy, Eds., </editor> <volume> vol. </volume> <booktitle> 656 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <pages> pp. 155-167. </pages>
Reference-contexts: A TRS is called totally terminating if it is compatible with a monotonic well-founded total order on ground terms. Hence the above example is not totally terminating, while all TRS's of which termination can be proved by means of standard orders are totally terminating. Total termination was introduced in <ref> [18, 20] </ref> in a more semantical way. An extensive examination of total termination has been given in [4, 5, 6], including the proof that the semantical definition and the order definition are equivalent. 1 It is well-known that termination is an undecidable property of finite TRS's.
Reference: [19] <author> Zantema, H. </author> <title> Type removal in term rewriting. In Conditional Term Rewriting Systems, </title> <booktitle> proceedings third international workshop CTRS-92 (1993), </booktitle> <editor> M. Rusinowitch and J. Remy, Eds., </editor> <volume> vol. </volume> <booktitle> 656 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <pages> pp. 148-154. </pages>
Reference-contexts: All rules of R P are well-typed, i.e., there are no type clashes and each left hand side has the same type as the corresponding right hand side. The type elimination result from <ref> [19, 20] </ref> states that if the TRS does not contain both collapsing and duplicating rules, then the many-sorted version terminates if and only if the one-sorted version terminates. Since R P contains neither collapsing nor duplicating rules, this result applies here.
Reference: [20] <author> Zantema, H. </author> <title> Termination of term rewriting: interpretation and type elimination. </title> <journal> Journal of Symbolic Computation 17 (1994), </journal> <pages> 23-50. 18 </pages>
Reference-contexts: A TRS is called totally terminating if it is compatible with a monotonic well-founded total order on ground terms. Hence the above example is not totally terminating, while all TRS's of which termination can be proved by means of standard orders are totally terminating. Total termination was introduced in <ref> [18, 20] </ref> in a more semantical way. An extensive examination of total termination has been given in [4, 5, 6], including the proof that the semantical definition and the order definition are equivalent. 1 It is well-known that termination is an undecidable property of finite TRS's. <p> All rules of R P are well-typed, i.e., there are no type clashes and each left hand side has the same type as the corresponding right hand side. The type elimination result from <ref> [19, 20] </ref> states that if the TRS does not contain both collapsing and duplicating rules, then the many-sorted version terminates if and only if the one-sorted version terminates. Since R P contains neither collapsing nor duplicating rules, this result applies here.
References-found: 20

