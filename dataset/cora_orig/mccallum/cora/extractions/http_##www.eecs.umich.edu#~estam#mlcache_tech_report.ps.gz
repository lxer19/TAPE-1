URL: http://www.eecs.umich.edu/~estam/mlcache_tech_report.ps.gz
Refering-URL: http://www.eecs.umich.edu/~estam/research.html
Root-URL: http://www.eecs.umich.edu
Email: -estam,jrivers,davidson-@eecs.umich.edu 1  
Title: Flexible Timing Simulation of Multiple-Cache Configurations 1 Flexible Timing Simulation of Multiple-Cache Configurations  
Author: Edward S. Tam, Jude A. Rivers, and Edward S. Davidson 
Keyword: cache timing simulation model evaluation  
Address: Ann Arbor, MI. 48109-2122  
Affiliation: Advanced Computer Architecture Laboratory Electrical Engineering and Computer Science Department The University of Michigan  
Abstract: As the gap between processor and memory speeds increases, cache performance becomes more critical to overall system performance. Behavioral cache simulation is typically used early in the design cycle of new processor/cache configurations to determine the performance of proposed cache configurations on target workloads. However, behavioral cache simulation does not account for the latency seen by each memory access. The Latency-Effects (LE) cache model presented in this paper accounts this nominal latency as well as the additional latencies due to trailing-edge effects, bus width considerations, port conflicts, and the number of outstanding accesses that a cache allows before it blocks. We also extend the LE cache model to handle the latency effects of moving data among multiple caches. mlcache, a new, easily configurable and extensible tool, has been built based on the extended LE model. We show the use of mlcache in estimating the performance of traditional and novel cache configurations, including odd/even, 2-level, Assist, Victim, and NTS caches. We also show how the LE cache timing model provides more useful, realistic performance estimates than other possible behavioral-level cache timing models. 
Abstract-found: 1
Intro-found: 1
Reference: [Baer88] <author> J-L. Baer and W-H. Wang, </author> <title> "On the Inclusion Properties for MultiLevel Cache Hierarchies," </title> <booktitle> Proceedings of ISCA-15, </booktitle> <month> May </month> <year> 1988. </year>
Reference-contexts: Also, some configurations, e.g. a smaller or less associative cache "backing" a larger or more associative (possibly multilateral) cache can potentially violate the multilevel inclusion principle <ref> [Baer88] </ref>; the potential for this violation is common in such caches and has not been addressed in our current studies.
Reference: [Bakoglu90] <author> H. B. Bakoglu and T. Whiteside, </author> <title> "RISC System/6000 Hardware Overview," </title> <institution> IBM RISC System/6000 Technology SA23-2619, International Business Machines Corporation, </institution> <year> 1990. </year> <pages> pp. 8 - 15. </pages>
Reference-contexts: RCM_brisc simulates the execution of instructions fed to it in the form of a trace of the programs execution on an actual machine, which in this study is an IBM RS/6000 <ref> [Bakoglu90] </ref>. The RCM_brisc tool by itself simulates the execution of all instructions but assumes a perfect cache model, where all data from memory is available in a constant, prespecified amount of time.
Reference: [Bedichek95] <author> R. C. Bedicheck, "Talisman: </author> <title> Fast and Accurate Multicomputer Simulation," </title> <booktitle> Proceedings of the 1995 ACM SIGMETRICS Conference, </booktitle> <year> 1995. </year>
Reference-contexts: Thus, all of the cache configurations we describe in this paper represent the data cache configurations of the processor/cache combinations that we evaluate. The mlcache simulator could easily have been combined with any other currently available instruction-level simulators such as Talisman <ref> [Bedichek95] </ref>, SimICS [Magnusson95], and others. This is possible because mlcache maintains the state of the caches itself and does not take into ______________________________________________________________________________ Flexible Timing Simulation of Multiple-Cache Configurations 10 account virtual memory or TLB effects.
Reference: [Chatterjee93] <author> A. Chatterjee and J. Volakis, </author> <title> "Application of Edge-based Finite Elements and ABCs to 3-D Scattering," </title> <journal> IEEE Transactions on Antennas and Propagation, </journal> <year> 1993. </year>
Reference-contexts: The seventh benchmark, FEMC <ref> [Chatterjee93] </ref>, is a floating point code developed and in use at the University of Michigan Radiation Laboratory for evaluating electromagnetic backscatter from a distant object.
Reference: [Gallivan90] <author> K. Gallivan et al., </author> <title> "Experimentally Characterizing the Behavior of Multiprocessor Memory Systems: A Case Study," </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> vol. 16, </volume> <month> February, </month> <year> 1990, </year> <pages> pp. 216-223. </pages>
Reference: [Hill85] <author> M. D. Hill, </author> <title> DineroIII Documentation, </title> <institution> Unpublished UNIX-style Man Page, University of California, Berkeley, </institution> <month> October </month> <year> 1985. </year>
Reference-contexts: Miss ratio has been used to indicate the potential performance of a system using a given cache when running target workloads. Miss ratios are easily obtained using behavioral simulators such as DineroIII <ref> [Hill85] </ref>, Tycho [Hill93], ACS [PARL95], and others. While a lower miss ratio usually indicates higher performance, the effect of the cache on overall processor/machine performance is difficult to quantify using behavioral simulators. <p> M E M O R Y a) Single-level cache b) 2-level cache c) Assist cache 4 . 2 mlcache - an easily configurable tool In our previous work, our implementation of the LE cache model for single caches (the LE cache simulator) was built by modifying the DineroIII cache simulator <ref> [Hill85] </ref>. Using the concept of delayed update of the cache state in conjunction with consideration of the latency-adding effects, we were able to create a tracedriven cache timing simulator.
Reference: [Hill93] <author> M. D. Hill et al., </author> <title> "Wisconsin Architectural Research Tool Set," </title> <journal> Computer Architecture News, </journal> <volume> vol. 21 No. 4, </volume> <month> September, </month> <year> 1993, </year> <pages> pp. 8-10. </pages>
Reference-contexts: Miss ratio has been used to indicate the potential performance of a system using a given cache when running target workloads. Miss ratios are easily obtained using behavioral simulators such as DineroIII [Hill85], Tycho <ref> [Hill93] </ref>, ACS [PARL95], and others. While a lower miss ratio usually indicates higher performance, the effect of the cache on overall processor/machine performance is difficult to quantify using behavioral simulators.
Reference: [Jouppi90] <author> N. P. Jouppi, </author> <title> "Improving direct-mapped cache performance by the addition of a small fully-associative cache and prefetch buffers," </title> <booktitle> Proceedings of the 17th Annual ISCA Conference, </booktitle> <address> Los Alamitos, CA, </address> <month> May </month> <year> 1990, </year> <pages> pp. 364-373. </pages>
Reference-contexts: In addition to multiple levels of caches, we also evaluated multilateral L1 caches, i.e. parallel L1 caches Multilateral cache designs include the Assist Cache, as used in the HP PA-RISC 7200 [Kurpanek94][Rashid94], the NTS Cache [Rivers96], and the Victim Cache <ref> [Jouppi90] </ref>. With multiple caches, access latencies now depend not only on the cacheto-processor and cacheto-memory interactions, but must now include cacheto-cache interactions. <p> Multiple-cache configurations that incorporate prefetching, as with a streaming buffer <ref> [Jouppi90] </ref>, cannot be dealt with because hardware prefetching has not been included in the current implementation.
Reference: [Kurpanchek94] <author> G. Kurpanchek et al, "PA-7200: </author> <title> A PA-RISC Processor with Integrated High Performance MP Bus Interface." </title> <booktitle> COMPCON Digest of Papers, </booktitle> <month> February </month> <year> 1994. </year>
Reference: [Lebeck95] <author> A. R. Lebeck and D. A. Wood, </author> <title> "Active Memory: A New Abstraction for Memory-System Simulation," </title> <booktitle> Proceedings of the 1995 ACM SIGMETRICS Conference, </booktitle> <month> May, </month> <year> 1995. </year>
Reference: [Magnusson95] <author> P. Magnusson and B. Werner, </author> <title> "Efficient Memory Simulation in SimICS," </title> <booktitle> Proceedings of the 28th Annual Simulation Symposium, </booktitle> <month> April, </month> <year> 1995. </year>
Reference-contexts: Thus, all of the cache configurations we describe in this paper represent the data cache configurations of the processor/cache combinations that we evaluate. The mlcache simulator could easily have been combined with any other currently available instruction-level simulators such as Talisman [Bedichek95], SimICS <ref> [Magnusson95] </ref>, and others. This is possible because mlcache maintains the state of the caches itself and does not take into ______________________________________________________________________________ Flexible Timing Simulation of Multiple-Cache Configurations 10 account virtual memory or TLB effects.
Reference: [PARL95] <institution> Parallel Architecture Research Lab, README file, New Mexico State University, </institution> <address> New Mexico, </address> <year> 1995. </year> ______________________________________________________________________________ <title> Flexible Timing Simulation of Multiple-Cache Configurations 16 </title>
Reference-contexts: Miss ratio has been used to indicate the potential performance of a system using a given cache when running target workloads. Miss ratios are easily obtained using behavioral simulators such as DineroIII [Hill85], Tycho [Hill93], ACS <ref> [PARL95] </ref>, and others. While a lower miss ratio usually indicates higher performance, the effect of the cache on overall processor/machine performance is difficult to quantify using behavioral simulators.
Reference: [Rashid94] <author> E. Rashid et al, </author> <title> "A CMOS RISC CPU with On-Chip Parallel Cache," </title> <booktitle> ISSCC Digest of Papers, </booktitle> <month> February </month> <year> 1994. </year>
Reference: [Rivers96] <author> J. A. Rivers and E. S. Davidson, </author> <title> "Reducing Conflicts in Direct-Mapped Caches with a Temporality-Based Design," </title> <booktitle> Proceedings of the 1996 ICPP, </booktitle> <volume> vol. </volume> <editor> I., Bloomingdale, </editor> <address> IL, </address> <month> August 12-16, </month> <year> 1996, </year> <pages> pp. 151 - 160. </pages>
Reference-contexts: In addition to multiple levels of caches, we also evaluated multilateral L1 caches, i.e. parallel L1 caches Multilateral cache designs include the Assist Cache, as used in the HP PA-RISC 7200 [Kurpanek94][Rashid94], the NTS Cache <ref> [Rivers96] </ref>, and the Victim Cache [Jouppi90]. With multiple caches, access latencies now depend not only on the cacheto-processor and cacheto-memory interactions, but must now include cacheto-cache interactions.
Reference: [Rivers97] <author> J. A. Rivers, E. S. Tam, and E. S. Davidson, </author> <title> "On Effective Data Supply for Multi-Issue Processors," </title> <note> to appear in the Proceedings of the 1997 ICCD. </note>
Reference-contexts: This research was funded in part by a gift from IBM. ______________________________________________________________________________ Flexible Timing Simulation of Multiple-Cache Configurations 2 While our previous work concentrated on single, traditional caches [Tam96] and two multilateral caches <ref> [Rivers97] </ref>, the LE cache model is easily extended to incorporate other novel cache designs. <p> Adapting the original LE cache simulator [Tam96] to model multiple caches involved substantial low-level changes to the source code to achieve the desired effects and interactions for a system containing two caches, a processor, and memory <ref> [Rivers97] </ref>. Furthermore, latencies for elements moving between two caches were not taken into account in the hand-modified multiple-cache LE cache simulator. With these shortcomings, we felt the need to make the tool both more easily retargetable and more accurate in representing the timing of the target configuration. <p> These numbers are needed for determining the Relative Cache Effect Ratio, as defined in <ref> [Rivers97] </ref>, which is: CycleCount X - CycleCount PERFECT CycleCount DM:8K - CycleCount PERFECT RCR X = This ratio provides the finite cache penalty of a given cache configuration relative to the base 8K direct-mapped cache penalty.
Reference: [Tam96] <author> E. S. Tam and E. S. Davidson, </author> <title> "Early Design Cycle Timing Simulation of Caches," </title> <type> Technical Report CSE-TR-317-96, </type> <institution> University of Michigan, </institution> <month> November </month> <year> 1996. </year>
Reference-contexts: The issue of providing more useful cache timing simulation analysis early in the design cycle has been addressed by the Latency-Effects (LE) cache model <ref> [Tam96] </ref>, which incorporates latency-adding effects into a behavioral-level simulation, particularly trailing-edge effects, bus width considerations, the effects of port conflicts, and the number of outstanding accesses that a cache can handle before blocking. <p> This research was funded in part by a gift from IBM. ______________________________________________________________________________ Flexible Timing Simulation of Multiple-Cache Configurations 2 While our previous work concentrated on single, traditional caches <ref> [Tam96] </ref> and two multilateral caches [Rivers97], the LE cache model is easily extended to incorporate other novel cache designs. <p> Circuit-level simulators are thus not suitable for evaluating many different, potentially novel, cache designs early in the design cycle. The Latency-Effects (LE) cache model <ref> [Tam96] </ref> splits the difference between these two extreme approaches to cache simulation and performance evaluation. The LE cache model and its implementation incorporate the flexibility and speed provided by a behavioral simulator while providing results that are more useful, akin to the performance estimates provided by circuit-level simulators. <p> These latency-adding effects will be incorporated in future refinements of the LE model. The effects of TLB misses, page faults, etc. could also be added. However, we chose to concentrate on the modeling of multiple cache systems first, as described below. In our past work <ref> [Tam96] </ref>, we used the LE cache model for performance evaluations of "traditional" single level caches backed by main memory. However, in todays machines an on-chip L1 (first level) cache is generally backed by a L2 (second level) cache, and often an L3 cache, before reaching main memory. <p> The use of a delayed update of the cache state allows behavioral cache simulators to more accurately represent each access latency. Adapting the original LE cache simulator <ref> [Tam96] </ref> to model multiple caches involved substantial low-level changes to the source code to achieve the desired effects and interactions for a system containing two caches, a processor, and memory [Rivers97]. <p> Thus, we integrated our cache simulator with the RCM_brisc instruction-level processor simulator [Wellman95], as was done with the LE simulator in <ref> [Tam96] </ref>. RCM_brisc simulates the execution of instructions fed to it in the form of a trace of the programs execution on an actual machine, which in this study is an IBM RS/6000 [Bakoglu90].
Reference: [Wellman95] <author> J-D Wellman and E. S. Davidson, </author> <title> "The Resource Conflict Methodology for Early-Stage Design Space Exploration of Superscalar RISC Processors," </title> <booktitle> Proceedings of the 1995 ICCD, </booktitle> <address> Austin, Texas, </address> <month> October 2-4, </month> <year> 1995. </year> <pages> pp. 110-115. </pages>
Reference-contexts: The latencies used for the timing simulation of these caches are shown in Table 2. 5 . 1 Simulation environment A timing simulation of caches is of limited use without considering the latency-masking effects of processor execution. Thus, we integrated our cache simulator with the RCM_brisc instruction-level processor simulator <ref> [Wellman95] </ref>, as was done with the LE simulator in [Tam96]. RCM_brisc simulates the execution of instructions fed to it in the form of a trace of the programs execution on an actual machine, which in this study is an IBM RS/6000 [Bakoglu90]. <p> The RCM_brisc tool was chosen for convenience since the LE cache model was implemented in the same spirit using the Resource Conflict Methodology <ref> [Wellman95] </ref> model. 5 . 2 Target benchmarks To evaluate the performance of the caches, we chose from a variety of scientific, floating-point codes and memory-intensive integer benchmarks. The selected benchmarks and their descriptions are shown in Table 3. <p> We also extended the LE cache model to handle multiple caches and the latencies between them. An easily configurable, extensible multiple-cache simulator, mlcache, was developed based on the extended LE cache model. We used mlcache, combined with the RCM_brisc instruction-level processor simulator <ref> [Wellman95] </ref>, to determine the performance of six different cache configurations: the baseline 8K direct-mapped cache; a larger, 16K direct-mapped cache; an odd/even interleaved cache; a 2-level cache; and several novel, cache-and-buffer configurations: Assist cache, Victim cache, and NTS cache.
References-found: 17

