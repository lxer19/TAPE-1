URL: http://www.genetic-programming.com/ASILIMOAR97.ps
Refering-URL: http://www.genetic-programming.com/jkpubs97.html
Root-URL: http://www.genetic-programming.com/jkpubs97.html
Email: koza@cs.stanford.edu  forrest@evolute.com  hutch@Convergent-Design.com  bade@Convergent-Design.com  makeane@ix.netcom.com  dandre@cs.berkeley.edu  
Title: Evolving Sorting Networks using Genetic Programming and the Rapidly Reconfigurable Xilinx 6216 Field-Programmable Gate Array
Author: John R. Koza Forrest H Bennett III Jeffrey L. Hutchings E. Hollyhock Stephen L. Bade Martin A. Keane David Andre 
Web: http://www-cs faculty.stanford.edu/~koza/  
Address: Stanford, California 94305-9020  Stanford, California 94305  Salt Lake City, UT 84121  379 North, 900 East Orem, UT, 84097  5733 West Grover Chicago, Illinois 60630  Berkeley, California  
Affiliation: Computer Science Dept. Stanford University  Visiting Scholar Computer Science Dept. Stanford University  Hill  Convergent Design, L.L.C.  Martin Keane Inc.  Computer Science Division University of California  
Abstract: This paper describes how the massive parallelism of the rapidly reconfigurable Xilinx XC6216 FPGA (in conjunction with Virtual Computing Corporation's H.O.T. Works board) can be exploited to accelerate the computationally burdensome fitness measurement task of genetic algorithms and genetic programming. This acceleration is accomplished by embodying each individual of the evolving population i n t o hardware in order to perform this time-consuming fitness measurement task. A 16-step sorting network for seven items was evolved that has two fewer steps than the sorting network described in the 1962 O'Connor and Nelson patent on sorting networks (and the same number of steps as a 7-sorter that was devised by Floyd and Knuth subsequent to the patent and that is now known to be minimal). 
Abstract-found: 1
Intro-found: 1
Reference: <editor> Angeline, Peter J. and Kinnear, Kenneth E. Jr. (editors). </editor> <booktitle> 1996. Advances in Genetic Programming 2. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference: <author> Banzhaf, Wolfgang, Nordin, Peter, Keller, Robert E., and Francone, Frank D. </author> <year> 1997. </year> <title> Genetic Programming An Introduction. </title> <address> San Francisco, CA: </address> <publisher> Morgan Kaufmann and Heidelberg: dpunkt. </publisher>
Reference-contexts: Additional information about genetic programming can be found in books <ref> (Banzhaf, Nordin, Keller, and Francone 1997) </ref>, edited collections of papers (Kinnear 1994, Angeline and Kinnear 1996), conference proceedings (Koza et al. 1996, 1997), and www.genetic-programming.org.
Reference: <author> Higuchi, Tetsuya, Niwa, Tatsuya, Tanaka, Toshio, Iba, Hitoshi, de Garis, Hugo, and Furuya, Tatsumi. </author> <year> 1993. </year> <editor> In Meyer, Jean-Arcady, Roitblat, Herbert L. and Wilson, Stewart W. (editors). </editor> <booktitle> From Animals to Animats 2: Proceedings of the Second International Conference on Simulation of Adaptive Behavior. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher> <year> 1993. </year> <pages> Pages 417 424. </pages> <editor> Higuchi, Tetsuya (editor). </editor> <booktitle> 1997. Proceedings of International Conference on Evolvable Systems: From Biology to Hardware (ICES-96). Lecture Notes in Computer Science. </booktitle> <volume> Volume 1259. </volume> <publisher> Berlin: Springer-Verlag. </publisher>
Reference: <author> Hillis, W. Daniel. </author> <year> 1990. </year> <title> Coevolving parasites improve simulated evolution as an optimization procedure. </title> <editor> In Forrest, Stephanie (editor). </editor> <title> Emergent Computation: Self-Organizing, Collective, </title> <booktitle> and Cooperative Computing Networks. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference: <author> Hillis, W. Daniel. </author> <year> 1992. </year> <title> Coevolving parasites improve simulated evolution as an optimization procedure. </title> <editor> In Langton, Christopher, Taylor, Charles, Farmer, J. Doyne, and Rasmussen, Steen (editors). </editor> <booktitle> Artificial Life II, SFI Studies in the Sciences of Complexity. Volume X. </booktitle> <address> Redwood City, CA: </address> <publisher> Addison-Wesley. </publisher> <pages> Pages 313-324. </pages>
Reference: <author> Holland, John H. </author> <year> 1975. </year> <booktitle> Adaptation in Natural and Artificial Systems. </booktitle> <address> Ann Arbor, MI: </address> <publisher> University of Michigan Press. </publisher>
Reference-contexts: 1. Introduction Field-programmable gate arrays (FPGAs) are often used to facilitate rapid prototyping of new electronic products particularly those for which time-to-market considerations preclude the design and fabrication of a custom application-specific integrated circuit. Genetic programming (GP) is an extension to the genetic algorithm <ref> (Holland 1975) </ref> that automatically creates a computer program to solve a problem using a simulated evolutionary process (Koza 1992, 1994a, 1994b; Koza and Rice 1992).
Reference: <author> Juille, Hugues. </author> <year> 1995. </year> <title> Evolution of nondeterministic incremental algorithms as a new approach for search in state spaces. </title> <editor> In Eshelman, L. J. (editor). </editor> <booktitle> Proceedings of the Sixth International Conference on Genetic Algorithms. </booktitle> <address> San Francisco, CA: </address> <publisher> Morgan Kaufmann. </publisher> <pages> 351 358. </pages>
Reference-contexts: Hillis (1990, 1992) used a genetic algorithm to evolve 16-sorters with 65 and 61 steps. In this work, Hillis incorporated the first 32 steps of Green's 60-step 16-sorter as a fixed beginning for all sorters <ref> (Juille 1995) </ref>. Juille (1995) used an evolutionary algorithm to evolve a 13-sorter with 45 steps thereby improving on the 13-sorter with 46 steps presented in Knuth (1973).
Reference: <author> Juille, Hugues. </author> <year> 1997. </year> <type> Personal communication. </type>
Reference: <editor> Kinnear, Kenneth E. Jr. (editor). </editor> <booktitle> 1994. Advances in Genetic Programming. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference-contexts: Additional information about genetic programming can be found in books (Banzhaf, Nordin, Keller, and Francone 1997), edited collections of papers <ref> (Kinnear 1994, Angeline and Kinnear 1996) </ref>, conference proceedings (Koza et al. 1996, 1997), and www.genetic-programming.org.
Reference: <author> Knuth, Donald E. </author> <year> 1973. </year> <booktitle> The Art of Computer Programming. Volume 3. </booktitle> <address> Reading, MA: </address> <publisher> Addison-Wesley. </publisher>
Reference-contexts: The correctly sorted output appears at the right. A fivestep network is known to be minimal for four items. There is considerable interest in sorting networks with a minimum number of comparison-exchange operations. There has been a lively search over the years for smaller sorting networks <ref> (Knuth 1973) </ref>. In U. S. patent 3,029,413, O'Connor and Nelson (1962) described sorting networks for 4, 5, 6, 7, and 8 items using 5, 9, 12, 18, and 19 comparison-exchange operations, respectively. During the l960s, Floyd and Knuth devised a 16-step sevensorter and proved it to be a minimal sevensorter. <p> A sorting network can be exhaustively tested for validity by testing all n ! permutations of n distinct numbers. However, thanks to the "zero-one principle" <ref> (Knuth 1973, page 224) </ref>, if a sorting network for n items correctly sorts n bits into nondecreasing order (i.e., all the 0's ahead of all the 1's) for all 2 n sequences of n bits, it necessarily will correctly sort any set of n distinct numbers into nondecreasing order. <p> This genetically evolved 7-sorter has the same number of steps as the 7-sorter that was devised by Floyd and Knuth.subsequent to the patent and has been proven to be minimal <ref> (Knuth 1973) </ref>. Using a population size of 60,000, a 19-step 8-sorter was evolved on generation 58. Using a population size of 100,000, a 25-step 9-sorter was evolved on generation 105. Both of these number of steps are known to be minimal for these two additional problems (Knuth 1973). <p> proven to be minimal <ref> (Knuth 1973) </ref>. Using a population size of 60,000, a 19-step 8-sorter was evolved on generation 58. Using a population size of 100,000, a 25-step 9-sorter was evolved on generation 105. Both of these number of steps are known to be minimal for these two additional problems (Knuth 1973). Acknowledgments Phillip Freidin of Silicon Spice provided invaluable information concerning FPGAs and helpful comments on this paper. Stefan Ludwig of DEC and Steve Casselman and John Schewel of Virtual Computer Corporation provided assistance concerning operation of the XC6216.
Reference: <author> Koza, John R. </author> <year> 1992. </year> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R. </author> <year> 1994a. </year> <title> Genetic Programming II: Automatic Discovery of Reusable Programs. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R. </author> <year> 1994b. </year> <title> Genetic Programming II Videotape: The Next Generation. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <editor> Koza, John R., Deb, Kalyanmoy, Dorigo, Marco, Fogel, David B., Garzon, Max, Iba, Hitoshi, and Riolo, Rick L. (editors). </editor> <booktitle> 1997. Genetic Programming 1997: Proceedings of the Second Annual Conference, </booktitle> <month> July 1316, </month> <year> 1997, </year> <institution> Stanford University. </institution> <address> San Francisco, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <editor> Koza, John R., Goldberg, David E., Fogel, David B., and Riolo, Rick L. (editors). </editor> <booktitle> 1996. Genetic Programming 1996: Proceedings of the First Annual Conference, </booktitle> <month> July 28-31, </month> <year> 1996, </year> <institution> Stanford University. </institution> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference-contexts: Additional information about genetic programming can be found in books (Banzhaf, Nordin, Keller, and Francone 1997), edited collections of papers (Kinnear 1994, Angeline and Kinnear 1996), conference proceedings <ref> (Koza et al. 1996, 1997) </ref>, and www.genetic-programming.org.
Reference: <author> Koza, John R., and Rice, James P. </author> <year> 1992. </year> <title> G e n e t i c Programming: The Movie. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> O'Connor, Daniel G. and Nelson, Raymond J. </author> <year> 1962. </year> <title> Sorting System with N-Line Sorting Switch. United States Patent number 3,029,413. Issued April 10, 1962. </title> <editor> Sanchez, Eduardo and Tomassini, Marco (editors). </editor> <year> 1996. </year> <title> Towards Evolvable Hardware. </title> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> Volume 1062. </volume> <publisher> Berlin: Springer-Verlag. </publisher>

References-found: 17

