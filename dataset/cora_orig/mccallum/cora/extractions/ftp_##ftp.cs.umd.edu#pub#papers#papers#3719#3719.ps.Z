URL: ftp://ftp.cs.umd.edu/pub/papers/papers/3719/3719.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Email: dwelch@cs.umd.edu  purtilo@cs.umd.edu  
Title: Interconnecting Distributed Legacy Systems: Virtual Environment Domain Example  
Author: Donald J. Welch Jr. James M. Purtilo 
Date: October 1, 1996  
Affiliation: Department of Computer Science University of Maryland  Institute for Advanced Computer Studies and Department of Computer Science University of Maryland  
Abstract: As the power and utility of virtual reality environments increases, so do the potential benefits found from combinding several such environments. But doing so presents the developer with a host of difficult distributed systems issues. This paper explores what some of these issues are within the VE domain, relates our successes to date in overcoming these problems by means of various automated tools, and suggests ways to apply our results other target domains. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Peter Astheimer, Wolfgang Felger, and Stefan Muller. </author> <title> Virtual Design: A generic VR System for Industrial Applications. </title> <journal> Computers and Graphics, </journal> <volume> 17(6) </volume> <pages> 671-677, </pages> <month> November/December </month> <year> 1993. </year>
Reference: [2] <author> Flavio DePaoli and Francesco Tisato. </author> <title> Cooper ative systems configuration in CSDL. </title> <booktitle> In Proceedings of the International Conference on Dis-trubuted Computing Systems, </booktitle> <pages> pages 304-311, </pages> <address> Poz-nan, Poland, </address> <month> June 21-24 </month> <year> 1994. </year>
Reference: [3] <author> James W. Duff, James Purtilo, Michael Capps, and David Stotts. </author> <booktitle> Software engineering of distributed simulation environments. In Proceedings of the Conference on Configurable Distributed Systems, </booktitle> <pages> pages 202-209, </pages> <institution> Annapolis, Maryland, </institution> <year> 1996. </year> <journal> IEEE Computer Society Technical Com-mitte on Distributed Processing. </journal>
Reference: [4] <author> Mark Green. </author> <title> Environment Manager. </title> <type> Technical report, </type> <institution> Department of Computing Science, University of Alberta, </institution> <month> February </month> <year> 1994. </year>
Reference-contexts: The EM toolkit and DIVE environment are two of the best known systems that provide an environment for building the entire distributed VE.[13] <ref> [4] </ref> Virtual Design is another complete VE software engineering environment that also focuses on using a wide array of input data and hardware.[1] DGPSE+ is an experimental environment supporting distributed graphics support.[9] None of these systems supports the reuse of legacy VEs.
Reference: [5] <author> Mark Green. </author> <title> Shared Virtual Environments: The Implications for Tool Builders. </title> <journal> Computers and Graphics, </journal> <volume> 20(2) </volume> <pages> 185-189, </pages> <month> March/April </month> <year> 1996. </year>
Reference-contexts: If our tank tries to move an obstacle that another tank is already moving the Isthmus will not allow it. The Isthmus is not sophisticated enough to handle simultaneous manipulation of virtual objects. This is a hard problem with no universally accepted solution.[12] <ref> [5] </ref> Since each component VE has its own coordinate system, locations must be translated before they are received by the legacy VEs. Where this translation takes place is a performance decision. By placing the translation burden on the Isthmus, the component VEs are spared this interconnection overhead.
Reference: [6] <author> Michael R. Macedonia, Michael J. Zyda, David R. Pratt, Donald P. Brutzman, and Paul T. Barham. </author> <title> Exploiting reality with multicast groups: A network architecture for large-scale virtual environments. </title> <booktitle> In Proceedings of the IEEE Virtual Reality Annual International Symposium, </booktitle> <pages> pages 2-10, </pages> <address> Research Triangle Park, NC, </address> <month> March 11-15 </month> <year> 1995. </year>
Reference: [7] <author> Micheal Macedonia and Micheal Zyda. </author> <title> A taxon omy for networked virtual environments. </title> <booktitle> In Pro-11 ceedings of the 1995 workshop on Networked Realities, </booktitle> <address> Boston, MA, </address> <month> October 26-28 </month> <year> 1995. </year>
Reference: [8] <author> Hafedh Mili, Fatma Mili, and Ali Mili. </author> <title> Reusing Software: Issues and Research Directions. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 21(6) </volume> <pages> 528-561, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: The interconnection generator is similar to application generators that allow reuse of processes in domain specific applications built from scratch. The difference is, of course, that the whole application is not being built, but merely the software that glues together the legacy applications. <ref> [8] </ref> We have an experimental interconnection generator called Zubin for this domain that uses our domain specific description language dubbed VIDL to generate the source code for the Isthmus and interface modules. Zubin uses the Isthmus core runtime and adds customized services to it as needed.
Reference: [9] <author> Zhigeng Pan, Jiaoying Shi, and Mingmin Zhang. </author> <title> Distributed Graphics Support for Virtual Environments. </title> <journal> Computers and Graphics, </journal> <volume> 20(2) </volume> <pages> 191-197, </pages> <month> March/April </month> <year> 1996. </year>
Reference: [10] <author> Przemyslaw Pardyak and Brian N. Bershad. </author> <title> A group structuring mechanism for a distributed object-oriented language. </title> <booktitle> In Proceedings of the International Conference on Distrubuted Computing Systems, </booktitle> <pages> pages 312-319, </pages> <address> Poznan, Poland, </address> <month> June 21-24 </month> <year> 1994. </year>
Reference-contexts: It must be customizable to meet the requirements of the specific IVE, and must support completely transparent grouping of virtual objects. <ref> [10] </ref> * Interfaces Since the legacy VEs will usually be writ ten in different programming languages and run on different systems the interconnection software must include interfaces that minimize changes to the legacy software.
Reference: [11] <author> James M. Purtilo. </author> <title> The POLYLITH Software Bus. </title> <journal> ACM Transactions on Programming Languages, </journal> <volume> 16 </volume> <pages> 151-174, </pages> <month> January </month> <year> 1994. </year>
Reference: [12] <author> Gurminder Singh, Luis Serra, Willie Png, Audrey Wong, and Hern Ng. BrickNet: </author> <title> Sharing Object Behavoirs on the Net. </title> <booktitle> In Proceedings of the IEEE Virtual Reality Annual International Symposium, </booktitle> <pages> pages 19-25, </pages> <address> Research Triangle Park, NC, </address> <month> March 11-15 </month> <year> 1995. </year>
Reference: [13] <author> Qunjie Wang, Mark Green, and Chris Shaw. </author> <title> EM An Environment Manager For Building Networked Virtual Environments. </title> <booktitle> In Proceedings of the IEEE Virtual Reality Annual International Symposium, </booktitle> <pages> pages 11-18, </pages> <address> Research Triangle Park, NC, </address> <month> March 11-15 </month> <year> 1995. </year> <month> 12 </month>
References-found: 13

