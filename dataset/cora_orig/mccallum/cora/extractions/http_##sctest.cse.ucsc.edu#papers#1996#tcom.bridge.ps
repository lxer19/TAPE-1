URL: http://sctest.cse.ucsc.edu/papers/1996/tcom.bridge.ps
Refering-URL: http://www.cse.ucsc.edu/~larrabee/publications.html
Root-URL: http://www.cse.ucsc.edu
Title: Logic Testing of Bridging Faults in CMOS Integrated Circuits  
Author: Brian Chess Student Member, IEEE and Tracy Larrabee Member, IEEE 
Abstract: We describe a system for simulating and generating accurate tests for bridging faults in CMOS ICs. After introducing the Primitive Bridge Function, a characteristic function describing the behavior of a bridging fault, we present the Test Guarantee Theorem, which allows for accurate test generation for feedback bridging faults via topological analysis of the feedback-influenced region of the faulty circuit. We present a bridging fault simulation strategy superior to previously published strategies, describe the new test pattern generation system in detail, and report on the system's performance, which is comparable to that of a single stuck-at ATPG system. The paper reports fault coverage as well as defect coverage for the MCNC layouts of the ISCAS-85 benchmark circuits.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Abramovici and P. R. Menon. </author> <title> A practical approach to fault simulation and test generation for bridging faults. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-34:658-663, </volume> <year> 1985. </year>
Reference-contexts: It can be dangerous to assume that the state element introduced by the fault will achieve a stable digital value. As reported by Abramovici and Menon <ref> [1] </ref>, the vast majority of feedback bridging faults can be detected with single combinational tests. When discussing feedback bridging faults, it is useful to refer to the two bridged wires by their locations in the circuit. <p> In the dominant technologies of the time (such as TTL), bridging faults did create wired logic. Abramovici and Menon detailed complete theories and techniques to perform ATPG on bridging faults (including bridging faults that introduced feedback) in combinational circuits exhibiting wired-logic behavior <ref> [1] </ref>. However, wired-logic does not accurately reflect the behavior of bridges in static CMOS circuits [4, 12, 20]. <p> Between 10% and 50% of the realistic bridging faults for the MCNC layouts of the ISCAS-85 circuits are feedback bridging faults. Most approaches to generating tests for feedback bridging faults check for tests invalidated by oscillation or sequential behavior by analyzing the inversion parity between the two bridged wires <ref> [1, 20] </ref>. Because of reconvergent fanout, the inversion parity may change from one input vector to the next. This means that the inversion parity must be recalculated for every input vector, which is inefficient. <p> value on the back wire does not affect the result of the computation of the PBF, then no source of feedback can affect the result of the computation of the PBF, and the PBF correctly models the behavior of the bridge. 2 Like the wired-logic theorems of Abramovici and Menon <ref> [1] </ref>, the Test Guarantee Theorem requires that the feedback loop created by the bridge be broken. <p> After Carafe determines the realistic bridging faults, SPICE simulation is used to determine the PBF for each fault, and then the Nemesis ATPG system [17] generates tests. Figure 7 shows the organization of the total system. 8 3.1 Simulator Unlike the bridging fault simulator of Abramovici and Menon <ref> [1] </ref>, for which pseudocode is given in Figure 8, the Nemesis method of bridging fault simulation, for which pseudocode is given in values representing whether or not an error can be propagated to a primary output [8].
Reference: [2] <author> J. M. Acken. </author> <title> Testing for bridging faults (shorts) in CMOS circuits. </title> <booktitle> In Proceedings of Design Automation Conference, </booktitle> <pages> pages 717-718, </pages> <year> 1983. </year>
Reference-contexts: This paper is primarily concerned with faults that cause changes in the logical function of the circuit, but bridging fault detection by monitoring excess quiescent power supply current (I DDQ testing) is an important adjunct to logic testing <ref> [2] </ref>. I DDQ tests for bridging faults are easy to generate but expensive to apply. The results in Section 4 suggest that it would be appropriate to produce I DDQ test patterns for the bridging faults that are either proved untestable or are aborted. <p> While the number of possible bridging faults is O (n 2 ) where n is the number of nodes in the circuit, the number of realistic bridging faults is a much more manageable O (n) <ref> [2] </ref>. Also, if the PBFs are derived from two component simulation, the number of different PBFs needed for fault block analysis is not prohibitive because only one PBF is needed for each type of fault block (and the number of different types will be small for synthesized layouts).
Reference: [3] <author> J. M. Acken. </author> <title> Deriving Accurate Fault Models. </title> <type> PhD thesis, </type> <institution> Stanford University, Department of Electrical Engineering, </institution> <month> September </month> <year> 1988. </year>
Reference-contexts: This function could be derived in a number of ways|two notable methods are analog simulation [12, 22] and the voting model <ref> [3, 4] </ref>. Deriving the Boolean function by simulating the two components with the bridged outputs works well at modeling the upstream components from the fault site, but fails to take into account the possible sensitive behavior of downstream components.
Reference: [4] <author> J. M. Acken and S. D. Millman. </author> <title> Accurate modeling and simulation of bridging faults. </title> <booktitle> In Proceedings of the Custom Integrated Circuits Conference, </booktitle> <pages> pages 17.4.1-17.4.4, </pages> <year> 1991. </year>
Reference-contexts: Abramovici and Menon detailed complete theories and techniques to perform ATPG on bridging faults (including bridging faults that introduced feedback) in combinational circuits exhibiting wired-logic behavior [1]. However, wired-logic does not accurately reflect the behavior of bridges in static CMOS circuits <ref> [4, 12, 20] </ref>. The wired-logic model (wired-AND or wired-OR) is the easiest model to implement for simulation and test pattern generation; with the exception of feedback, the wired-logic model is almost as easy for an ATPG system to deal with as the single stuck-at model. <p> This function could be derived in a number of ways|two notable methods are analog simulation [12, 22] and the voting model <ref> [3, 4] </ref>. Deriving the Boolean function by simulating the two components with the bridged outputs works well at modeling the upstream components from the fault site, but fails to take into account the possible sensitive behavior of downstream components.
Reference: [5] <author> J. M. Acken and S. D. Millman. </author> <title> Fault model evolution for diagnosis: Accuracy vs precision. </title> <booktitle> In Proceedings of the Custom Integrated Circuits Conference, </booktitle> <year> 1992. </year>
Reference-contexts: The idea that a bridge voltage can be interpreted differently by different downstream gates is known as the Byzantine Generals Problem for bridging faults <ref> [5] </ref>. The EPROOFS simulator [14] implements 3 this via mixed-mode simulation, where a SPICE-like analog simulation of the region around the fault site is incorporated into a digital simulation of the rest of the circuit. <p> Depending on the accuracy required, the fault block may actually have to replace more than two components; it may need to include downstream gates in order to make sure that the outputs of the fault block are digitally resolved <ref> [5] </ref>. Two-component simulation can also model arbitrary bridge resistance values by treating discrete bridge resistances as separate faults. For bridging faults that do not introduce any feedback, the output of the PBF is computed with wire values from the fault-free circuit. <p> We have shown ATPG for realistic bridging faults to be viable and significant. Future experimentation will involve different and more accurate methods for calculating PBFs| methods that address indeterminate logic values and differing downstream gate input thresholds <ref> [5] </ref>. We are also investigating shorts on the inside of the cell [7] and bridging fault diagnosis [10].
Reference: [6] <author> F. Brglez and H. Fujiwara. </author> <title> A neutral netlist of 10 combinatorial benchmark circuits and a target translator in FORTRAN. </title> <booktitle> In International Symposium on Circuits and Systems. IEEE, </booktitle> <month> June </month> <year> 1985. </year>
Reference-contexts: Section 4 will compare numbers of stuck-at faults, realistic bridging faults, and two-component PBFs for the MCNC layouts of the ISCAS-85 circuits <ref> [6] </ref>. Carafe reports the likelihood of occurrence for each fault it extracts. This likelihood indicates how likely the fault is to occur relative to all of the other faults in the list.
Reference: [7] <author> B. Chess, A. Freitas, F. J. Ferguson, and T. Larrabee. </author> <title> Testing CMOS logic gates for realistic shorts. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 395-401. </pages> <publisher> IEEE, </publisher> <year> 1994. </year>
Reference-contexts: This paper is only concerned with Carafe-extracted faults in the interconnect: shorts involving internal cell lines can also be extracted by Carafe, and they present interesting problems <ref> [7] </ref>, but they are beyond the scope of this paper. Previously, bridging fault ATPG was thought to be unwieldy because of the number of feasible bridging faults and the complexity of the bridging fault model. <p> We have shown ATPG for realistic bridging faults to be viable and significant. Future experimentation will involve different and more accurate methods for calculating PBFs| methods that address indeterminate logic values and differing downstream gate input thresholds [5]. We are also investigating shorts on the inside of the cell <ref> [7] </ref> and bridging fault diagnosis [10].
Reference: [8] <author> B. Chess and T. Larrabee. </author> <title> Bridge fault simulation strategies for CMOS integrated circuits. </title> <booktitle> In Proceedings of Design Automation Conference, </booktitle> <pages> pages 458-462, </pages> <year> 1993. </year>
Reference-contexts: total system. 8 3.1 Simulator Unlike the bridging fault simulator of Abramovici and Menon [1], for which pseudocode is given in Figure 8, the Nemesis method of bridging fault simulation, for which pseudocode is given in values representing whether or not an error can be propagated to a primary output <ref> [8] </ref>. After attempting to propagate an error from a wire, a field in the wire's data structure is set to reflect the success or failure of the propagation.
Reference: [9] <author> B. Chess and T. Larrabee. </author> <title> Generating test patterns for bridge faults in CMOS ICs. </title> <booktitle> In Proceedings of European Test Conference, </booktitle> <pages> pages 165-170, </pages> <year> 1994. </year>
Reference-contexts: Each attempt to generate a test for a bridging fault enforces constraints on fault-free values for all wires, on faulty values for wires in between the bridge and a circuit output, and, for feedback bridging faults, on feedback-influenced values <ref> [9] </ref>. Figures 11 through 14 show a sample bridging fault and demonstrate how Nemesis will show that there is no test that will detect the fault. Notice that the inversion parity between the back and front wire can change depending on circuit input values.
Reference: [10] <author> B. Chess, D. B. Lavo, F. J. Ferguson, and T. Larrabee. </author> <title> Diagnosis of realistic bridging faults with single stuck-at information. </title> <booktitle> In Proceedings of International Conference on Computer-Aided Design, </booktitle> <pages> pages 185-192. </pages> <publisher> IEEE, </publisher> <year> 1995. </year>
Reference-contexts: Future experimentation will involve different and more accurate methods for calculating PBFs| methods that address indeterminate logic values and differing downstream gate input thresholds [5]. We are also investigating shorts on the inside of the cell [7] and bridging fault diagnosis <ref> [10] </ref>.
Reference: [11] <author> D. Feltham and W. Maly. </author> <title> Physically realistic fault models for analog CMOS neural networks. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> 26(9) </volume> <pages> 1223-1229, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: Maly, and Ferguson have performed defect simulation experiments showing that the majority of spot defects in MOS technologies cause shorts and opens [13, 23], and Feltham and Maly have shown that the majority of spot defects in current MOS technologies cause changes in the circuit description that result in shorts <ref> [11] </ref>. The single stuck-at fault model was adopted because it is powerful and simple, but it was never meant to represent the manner in which circuits behave in the presence of defects.
Reference: [12] <author> F. J. Ferguson and T. Larrabee. </author> <title> Test pattern generation for realistic bridge faults in CMOS ICs. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 492-499. </pages> <publisher> IEEE, </publisher> <year> 1991. </year>
Reference-contexts: Abramovici and Menon detailed complete theories and techniques to perform ATPG on bridging faults (including bridging faults that introduced feedback) in combinational circuits exhibiting wired-logic behavior [1]. However, wired-logic does not accurately reflect the behavior of bridges in static CMOS circuits <ref> [4, 12, 20] </ref>. The wired-logic model (wired-AND or wired-OR) is the easiest model to implement for simulation and test pattern generation; with the exception of feedback, the wired-logic model is almost as easy for an ATPG system to deal with as the single stuck-at model. <p> A more exact model would assume that the circuit value at the fault site is described in general by a Boolean function of the inputs to the gates driving the bridged wires. This function could be derived in a number of ways|two notable methods are analog simulation <ref> [12, 22] </ref> and the voting model [3, 4]. Deriving the Boolean function by simulating the two components with the bridged outputs works well at modeling the upstream components from the fault site, but fails to take into account the possible sensitive behavior of downstream components. <p> A pessimistic model describes the fault behavior with an incomplete Boolean function, where some of the bridge's behavior falls within a gray region within which the model fails to give an answer <ref> [12] </ref>. Both of these approaches have been implemented in bridging fault simulators and test pattern generators [12, 20]. A more general model assumes that the analog behavior induced by the fault extends for a certain distance beyond the fault site, after which the circuit behavior is digitally resolvable. <p> A pessimistic model describes the fault behavior with an incomplete Boolean function, where some of the bridge's behavior falls within a gray region within which the model fails to give an answer [12]. Both of these approaches have been implemented in bridging fault simulators and test pattern generators <ref> [12, 20] </ref>. A more general model assumes that the analog behavior induced by the fault extends for a certain distance beyond the fault site, after which the circuit behavior is digitally resolvable.
Reference: [13] <author> F. J. Ferguson and J. P. Shen. </author> <title> A CMOS fault extractor for inductive fault analysis. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 7(11) </volume> <pages> 1181-1194, </pages> <month> November </month> <year> 1988. </year>
Reference-contexts: To do this, manufacturers must test for the defects that are likely to occur. Shen, Maly, and Ferguson have performed defect simulation experiments showing that the majority of spot defects in MOS technologies cause shorts and opens <ref> [13, 23] </ref>, and Feltham and Maly have shown that the majority of spot defects in current MOS technologies cause changes in the circuit description that result in shorts [11]. <p> A test set that detects 100% of single stuck-at faults may not detect a high percentage of the manufacturing defects. Ferguson and Shen reported that complete single stuck-at test sets failed to detect up to 10% of the probable shorts in the circuits they examined <ref> [13] </ref>. The need for tests that detect the electrical behavior exhibited by shorts requires a bridging fault model.
Reference: [14] <author> G. Greenstein and J. Patel. EPROOFS: </author> <title> a CMOS bridging fault simulator. </title> <booktitle> In Proceedings of International Conference on Computer-Aided Design, </booktitle> <pages> pages 268-271. </pages> <publisher> IEEE, </publisher> <year> 1992. </year>
Reference-contexts: The idea that a bridge voltage can be interpreted differently by different downstream gates is known as the Byzantine Generals Problem for bridging faults [5]. The EPROOFS simulator <ref> [14] </ref> implements 3 this via mixed-mode simulation, where a SPICE-like analog simulation of the region around the fault site is incorporated into a digital simulation of the rest of the circuit.
Reference: [15] <author> A. Jee. Carafe: </author> <title> An inductive fault analysis tool for CMOS VLSI circuits. </title> <type> Technical Report UCSC-CRL-91-24, </type> <institution> University of California at Santa Cruz, Computer Engineering Department, </institution> <month> February </month> <year> 1991. </year>
Reference-contexts: Carafe considers the layout of the circuit and lists the nodes that are adjacent on the same conducting layer of the circuit or that cross each other on layers separated by a single layer of insulating material <ref> [15, 16] </ref>. This paper is only concerned with Carafe-extracted faults in the interconnect: shorts involving internal cell lines can also be extracted by Carafe, and they present interesting problems [7], but they are beyond the scope of this paper.
Reference: [16] <author> A. Jee and F. J. Ferguson. Carafe: </author> <title> An inductive fault analysis tool for CMOS VLSI circuits. </title> <booktitle> In Proceedings of the IEEE VLSI Test Symposium, </booktitle> <pages> pages 92-98, </pages> <year> 1993. </year>
Reference-contexts: Carafe considers the layout of the circuit and lists the nodes that are adjacent on the same conducting layer of the circuit or that cross each other on layers separated by a single layer of insulating material <ref> [15, 16] </ref>. This paper is only concerned with Carafe-extracted faults in the interconnect: shorts involving internal cell lines can also be extracted by Carafe, and they present interesting problems [7], but they are beyond the scope of this paper.
Reference: [17] <author> T. Larrabee. </author> <title> Test pattern generation using Boolean satisfiability. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <pages> pages 6-22, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: After Carafe determines the realistic bridging faults, SPICE simulation is used to determine the PBF for each fault, and then the Nemesis ATPG system <ref> [17] </ref> generates tests. <p> This makes it crucial to identify both potential oscillation and sequential behavior for the same fault. The Nemesis ATPG system uses Boolean satisfiability, so constraints are not enforced in a particular order <ref> [17] </ref>. However, for illustration of each of the four test generation attempts, first initial constraints are shown, then derived activation, justification, and propagation values, and finally|if they are required|constraints having to do with the feedback-influenced values.
Reference: [18] <author> P. Maxwell and R. C. Aitken. </author> <title> Biased voting: a method for simulating CMOS bridging faults in the presence of variable gate logic thresholds. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 63-72. </pages> <publisher> IEEE, </publisher> <year> 1993. </year>
Reference-contexts: Although EPROOFs is much more accurate than previous simulators, it still may make errors when accurately predicting the behavior of the faulty circuit requires a timing analysis of the digital logic. There are faster simulators that do EPROOFS-like simulation, although they sacrifice some accuracy for speed <ref> [18, 22] </ref>. There is currently no test pattern generator that implements such sophisticated models. A feedback bridging fault may create an asynchronous sequential circuit in a formerly combinational network.
Reference: [19] <author> K. C. Y. Mei. </author> <title> Bridging and stuck-at faults. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-23(7):720-727, </volume> <month> July </month> <year> 1974. </year> <month> 17 </month>
Reference-contexts: It is common for local defects to cause a circuit to behave as if the outputs of two gates, which are not connected in the fault-free circuit, are connected. This model of faulty circuit behavior is the bridging fault model <ref> [19] </ref>. Changes in behavior can be detected as changes in logical function, excess propagation delay, or excess quiescent power supply current (or any combination). <p> If a bridging fault creates a feedback loop, a formerly stable combinational circuit may oscillate or take on sequential characteristics that mask the detection of the fault. It is possible to detect some feedback bridging faults that create sequential behavior with sequences of test vectors <ref> [19] </ref>, but in this case extensive analysis may be required to ensure not only that the feedback element can hold state, but that it is guaranteed to hold state. It can be dangerous to assume that the state element introduced by the fault will achieve a stable digital value.
Reference: [20] <author> S. D. Millman and J. P. Garvey. </author> <title> An accurate bridging fault test pattern generator. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 411-418. </pages> <publisher> IEEE, </publisher> <year> 1991. </year>
Reference-contexts: Abramovici and Menon detailed complete theories and techniques to perform ATPG on bridging faults (including bridging faults that introduced feedback) in combinational circuits exhibiting wired-logic behavior [1]. However, wired-logic does not accurately reflect the behavior of bridges in static CMOS circuits <ref> [4, 12, 20] </ref>. The wired-logic model (wired-AND or wired-OR) is the easiest model to implement for simulation and test pattern generation; with the exception of feedback, the wired-logic model is almost as easy for an ATPG system to deal with as the single stuck-at model. <p> A pessimistic model describes the fault behavior with an incomplete Boolean function, where some of the bridge's behavior falls within a gray region within which the model fails to give an answer [12]. Both of these approaches have been implemented in bridging fault simulators and test pattern generators <ref> [12, 20] </ref>. A more general model assumes that the analog behavior induced by the fault extends for a certain distance beyond the fault site, after which the circuit behavior is digitally resolvable. <p> Between 10% and 50% of the realistic bridging faults for the MCNC layouts of the ISCAS-85 circuits are feedback bridging faults. Most approaches to generating tests for feedback bridging faults check for tests invalidated by oscillation or sequential behavior by analyzing the inversion parity between the two bridged wires <ref> [1, 20] </ref>. Because of reconvergent fanout, the inversion parity may change from one input vector to the next. This means that the inversion parity must be recalculated for every input vector, which is inefficient.
Reference: [21] <author> J. Park, M. Naivar, R. Kapur, M. R. Mercer, and T. W. Williams. </author> <title> Limitations in predicting defect level based on stuck-at fault coverage. </title> <booktitle> In Proceedings of the IEEE VLSI Test Symposium, </booktitle> <pages> pages 186-191. </pages> <publisher> IEEE, </publisher> <year> 1995. </year>
Reference-contexts: of Faults Time Covered Untestable Aborted (Secs.) C0432 548 16 0 13 C0880 966 0 0 8 C1908 1237 9 0 14 C3540 3076 109 0 95 C6288 8697 51 0 310 Table 5: Single stuck-at test pattern generation coverage and 98.94% could make a significant difference in DPM estimation <ref> [21] </ref>. 5 Summary and conclusions The integrated circuit industry changes at a rapid pace, but one element that does not change is the need for quality. The bridging fault model offers additional rigor to the manufacturing test process by modeling the behavior of faults that are likely to occur.
Reference: [22] <author> J. Rearick and J. Patel. </author> <title> Fast and accurate CMOS bridging fault simulation. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 54-62. </pages> <publisher> IEEE, </publisher> <year> 1993. </year>
Reference-contexts: A more exact model would assume that the circuit value at the fault site is described in general by a Boolean function of the inputs to the gates driving the bridged wires. This function could be derived in a number of ways|two notable methods are analog simulation <ref> [12, 22] </ref> and the voting model [3, 4]. Deriving the Boolean function by simulating the two components with the bridged outputs works well at modeling the upstream components from the fault site, but fails to take into account the possible sensitive behavior of downstream components. <p> Although EPROOFs is much more accurate than previous simulators, it still may make errors when accurately predicting the behavior of the faulty circuit requires a timing analysis of the digital logic. There are faster simulators that do EPROOFS-like simulation, although they sacrifice some accuracy for speed <ref> [18, 22] </ref>. There is currently no test pattern generator that implements such sophisticated models. A feedback bridging fault may create an asynchronous sequential circuit in a formerly combinational network.
Reference: [23] <author> J. P. Shen, W. Maly, and F. J. Ferguson. </author> <title> Inductive fault analysis of MOS integrated circuits. </title> <journal> IEEE Design and Test of Computers, </journal> <volume> 2(6) </volume> <pages> 13-26, </pages> <month> December </month> <year> 1985. </year>
Reference-contexts: To do this, manufacturers must test for the defects that are likely to occur. Shen, Maly, and Ferguson have performed defect simulation experiments showing that the majority of spot defects in MOS technologies cause shorts and opens <ref> [13, 23] </ref>, and Feltham and Maly have shown that the majority of spot defects in current MOS technologies cause changes in the circuit description that result in shorts [11].
Reference: [24] <author> J. A. Waicukauski, E. B. Eichelberger, D. O. Forlenza, E. Lindbloom, and T. McCarthy. </author> <title> Fault simulation for structured VLSI. VLSI Design, </title> <address> VI:20-32, </address> <year> 1985. </year>
Reference-contexts: If a bridging fault further down the fault list introduces an error onto the same wire, it can immediately be determined whether or not the fault can be propagated. Nemesis bridging fault simulation is modeled after the Parallel Pattern Single Fault Propagation (PPSFP) simulator of Waicukauski et al. <ref> [24] </ref>. Note that, given the PBF for a bridge, the bridge value for each of the parallel patterns is evaluated in the same fashion as that of any other gate (each of which can perform an arbitrary combinational function).
Reference: [25] <author> T. W. Williams and N. C. Brown. </author> <title> Defect level as a function of fault coverage. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-30(12):987-988, </volume> <month> December </month> <year> 1981. </year>
Reference-contexts: The defect coverage should be much more indicative than the fault coverage when it comes to relating test quality to defects per million parts shipped (DPM) <ref> [25] </ref>. After Carafe determines the realistic bridging faults, SPICE simulation is used to determine the PBF for each fault, and then the Nemesis ATPG system [17] generates tests.
References-found: 25

