URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1992/tr-92-082.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1992.html
Root-URL: http://www.icsi.berkeley.edu
Title: Perfect Zero-Knowledge Arguments for NP Can Be Based on General Complexity Assumptions (extended abstract)  
Author: Moni Naor Rafail Ostrovsky Ramarathnam Venkatesan Moti Yung 
Address: 445 South Street, Morristown, N.J. 07960.  Yorktown Heights, NY 10598.  
Note: Supported by NSF Postdoctoral Fellowship. Part of this work was done while visiting Bellcore, and part  
Affiliation: International Computer Science Institute at Berkeley and University of California at Berkeley.  at IBM T.J. Watson Research Center. Bellcore,  IBM Research, T.J. Watson Research Center,  
Date: December 1992  
Pubnum: TR-92-082  
Abstract: Zero-knowledge arguments" is a fundamental cryptographic primitive which allows one polynomial-time player to convince another polynomial-time player of the validity of an NP statement, without revealing any additional information in the information-theoretic sense. Despite their practical and theoretical importance, it was only known how to implement zero-knowledge arguments based on specific algebraic assumptions; basing them on a general complexity assumption was open since their introduction in 1986 [BCC, BC, CH]. In this paper, we finally show a general construction, which can be based on any one-way permutation. We stress that our scheme is efficient: both players can execute only polynomial-time programs during the protocol. Moreover, the security achieved is on-line: in order to cheat and validate a false theorem, the prover must break a cryptographic assumption fl IBM Research Division, Almaden Research Center, San Jose, CA
Abstract-found: 1
Intro-found: 1
Reference: [BDMP] <author> Blum M., A. DeSantis, S. Micali and G. Persiano, </author> <note> "Non-Interactive Zero-Knowledge" SIAM J.Comp. 91 </note>
Reference-contexts: Further, zero-knowledge proofs and zero-knowledge arguments for non-trivial 1 a trapdoor implies that there is an information which enables easy inversion 2 languages as well as non-interactive zero-knowledge proofs of <ref> [BFM, BDMP] </ref> imply the existence of one-way functions [OW]. In contrast to computational zero-knowledge proofs, the primitive of perfect zero-knowledge arguments for NP was much inferior in this respect: their constructions were known only under specific algebraic assumptions [BCC, BKK, IY, BY, IN].
Reference: [BM] <author> Blum M., and S. </author> <title> Micali "How to Generate Cryptographically Strong Sequences Of PseudoRandom Bits" SIAM J. </title> <journal> on Computing, </journal> <volume> Vol 13, </volume> <year> 1984, </year> <pages> pp. 850-864, </pages> <note> FOCS 82. </note>
Reference-contexts: For example, Naor [N] showed that computationally secure bit commitments (i.e., bit commitments which can be broken off-line given sufficient resources) can be constructed from a pseudo-random generators (a notion originated and first implemented based on a discrete logarithm assumption in <ref> [BM] </ref>). The later, in turn (after a long sequence of papers) can now be based on any one-way function [ILL, H]. Another primitive that can now be based on any one-way function as well is digital-signature [NY, Ro].
Reference: [BFM] <author> Blum M., P. Feldman, and S. </author> <title> Micali "Non-Interactive Zero-Knowledge Proof Systems and Applications" STOC 88. </title>
Reference-contexts: Further, zero-knowledge proofs and zero-knowledge arguments for non-trivial 1 a trapdoor implies that there is an information which enables easy inversion 2 languages as well as non-interactive zero-knowledge proofs of <ref> [BFM, BDMP] </ref> imply the existence of one-way functions [OW]. In contrast to computational zero-knowledge proofs, the primitive of perfect zero-knowledge arguments for NP was much inferior in this respect: their constructions were known only under specific algebraic assumptions [BCC, BKK, IY, BY, IN].
Reference: [BMO] <author> Bellare, M., S. Micali and R. Ostrovsky, </author> <title> "The (True) Complexity of Statistical Zero Knowledge" STOC 90. </title>
Reference: [B] <author> Blum, M., </author> <title> "Coin Flipping over the Telephone," </title> <booktitle> IEEE COMPCON 1982, </booktitle> <pages> pp. 133-137. </pages>
Reference-contexts: In section 4 we present additional applications of our methods. 4 2 Model and Definitions Let Alice (the prover) and Bob (the verifier) be interacting Turing machine <ref> [GMR, B] </ref> which share an access to a security parameter n, and a common communication tapes. Each has a private input and output tapes and a private random tape. <p> For example, another application of the bit commitment above is a "coin-flipping protocol" (introduced by Blum <ref> [B] </ref>), with perfect security, and assuming only a one-way permutations. For practical purposes consider the data encryption standard (DES) [Kon].
Reference: [BKK] <author> J. Boyar, S. Kurtz, and M. </author> <title> Krental A Discrete Logarithm Implementation of Perfect Zero-Knowledge Blobs, </title> <journal> Journal of Cryptology, V. </journal> <volume> 2 N. 2, </volume> <year> 1990, </year> <pages> pp. 63-76, </pages> <publisher> Springer International. </publisher>
Reference-contexts: In contrast to computational zero-knowledge proofs, the primitive of perfect zero-knowledge arguments for NP was much inferior in this respect: their constructions were known only under specific algebraic assumptions <ref> [BCC, BKK, IY, BY, IN] </ref>. Our result gives the first general reduction: zero-knowledge NP-arguments can be constructed given any one-way permutation. Our construction has two stages.
Reference: [BG] <author> Bellare M., and O. Goldreich, </author> <title> "On Defining Proof of Knowledge," </title> <note> CRYPTO 92 (this proceedings). </note>
Reference-contexts: on the parties' random tapes), which Bob fl produces throughout an interaction with Alice. 5 We note that similarly an argument can be prove "a possession of knowledge" in the sense that one formally shows that a machine employing the prover can extract a witness to the claimed NP statement <ref> [FFS, TW, BG] </ref>. (In the next version we describe this as well). <p> If " is non negligible, then this is non negligible as well. This concludes the Proof of Theorem 3. For our applications we need a simulatable bit commitment and commitment of knowledge (to be defined in the full version along the lines of <ref> [BG] </ref>). Theorem 4 There is a perfectly-secure commitment scheme which is simulatable, and is commitment of knowledge. 13 Proof sketch: All actions of S are in polynomial time, so simulatability (generating the same distribution in polynomial time) is given. <p> The perfectly-secure simulatable bit-commitment protocol can be used in the general scheme above. In addition, the general proof system scheme can also be shown to give a "proof of possession of a witness" (i.e., proof of knowledge) as was formalized <ref> [FFS, TW, BG] </ref>. Thus, combining the above, gives our main result: Theorem 6 If any one-way permutation exists, then there exist perfect zero-knowledge arguments for proving language-membership as well as for proving knowledge-of-witness. 4 Discussion There are various other applications to information-theoretically secure bit commitment.
Reference: [BC] <author> G. Brassard, C. Crepeau, </author> <title> "Non-Transitive Transfer of Confidence: A Perfect Zero-Knowledge Interactive Protocol for SAT and Beyond", </title> <booktitle> FOCS 86 pp. </booktitle> <pages> 188-195. </pages>
Reference-contexts: Zero-knowledge arguments <ref> [CH, BC, BCC] </ref>: The verifier can not extract additional information even if he is given infinite time ( i.e., security is perfect); however, the prover (assumed to be polynomial-time) can cheat in his proof only if he manages to break the assumption on-line during the execution of the protocol.
Reference: [BCC] <author> G. Brassard, D. Chaum and C. Crepeau, </author> <title> Minimum Disclosure Proofs of Knowledge, </title> <journal> JCSS, v. </journal> <volume> 37, </volume> <pages> pp 156-189. </pages>
Reference-contexts: Zero-knowledge arguments <ref> [CH, BC, BCC] </ref>: The verifier can not extract additional information even if he is given infinite time ( i.e., security is perfect); however, the prover (assumed to be polynomial-time) can cheat in his proof only if he manages to break the assumption on-line during the execution of the protocol. <p> In contrast to computational zero-knowledge proofs, the primitive of perfect zero-knowledge arguments for NP was much inferior in this respect: their constructions were known only under specific algebraic assumptions <ref> [BCC, BKK, IY, BY, IN] </ref>. Our result gives the first general reduction: zero-knowledge NP-arguments can be constructed given any one-way permutation. Our construction has two stages. <p> The probability that the commitment will be different is negligible assuming the hardness assumption as was shown above. 2 Next, we can state the following known "reduction theorems" present in the works on computational (perfect) zero-knowledge proofs (arguments) <ref> [GMW, BCC, IY] </ref>. Theorem 5 If there is a (perfectly-secure commitment) [commitment] scheme which is simu-latable by an expected probabilistic polynomial-time machine ("interacting" with the receiver) and the receiver is polynomial-time, then there is a (perfect zero-knowledge argument) [compu-tationally zero-knowledge proof] for any statement in NP.
Reference: [BCY] <author> Brassard G., C. Crepeau, and M. Yung, </author> <title> "Everything in NP can be proven in Perfect Zero Knowledge in a bounded number of rounds," </title> <note> ICALP 89. (Also in TCS). </note>
Reference: [BY] <author> Brassard G., and M. Yung, </author> <title> "One-Way Group Action," </title> <booktitle> CRYPTO 90. </booktitle> <pages> 15 </pages>
Reference-contexts: In contrast to computational zero-knowledge proofs, the primitive of perfect zero-knowledge arguments for NP was much inferior in this respect: their constructions were known only under specific algebraic assumptions <ref> [BCC, BKK, IY, BY, IN] </ref>. Our result gives the first general reduction: zero-knowledge NP-arguments can be constructed given any one-way permutation. Our construction has two stages.
Reference: [CH] <author> Chaum, D., </author> <title> "Demonstrating that a public predicate can be satisfied without revealing any information about how", </title> <type> Crypto 86. </type>
Reference-contexts: Zero-knowledge arguments <ref> [CH, BC, BCC] </ref>: The verifier can not extract additional information even if he is given infinite time ( i.e., security is perfect); however, the prover (assumed to be polynomial-time) can cheat in his proof only if he manages to break the assumption on-line during the execution of the protocol.
Reference: [CDG] <author> D. Chaum, I. Damg-ard and J. van de Graaf, </author> <title> Multiparty Computations Ensuring Secrecy of each Party's Input and Correctness of the Output, </title> <booktitle> Proc. of Crypto 87, </booktitle> <pages> pp. 462. </pages>
Reference: [FFS] <author> U. Feige, A. Fiat and A. Shamir, </author> <title> Zero-Knowledge Proofs of Identity, </title> <booktitle> STOC 87, </booktitle> <pages> pp. 210-217. </pages>
Reference-contexts: on the parties' random tapes), which Bob fl produces throughout an interaction with Alice. 5 We note that similarly an argument can be prove "a possession of knowledge" in the sense that one formally shows that a machine employing the prover can extract a witness to the claimed NP statement <ref> [FFS, TW, BG] </ref>. (In the next version we describe this as well). <p> The perfectly-secure simulatable bit-commitment protocol can be used in the general scheme above. In addition, the general proof system scheme can also be shown to give a "proof of possession of a witness" (i.e., proof of knowledge) as was formalized <ref> [FFS, TW, BG] </ref>. Thus, combining the above, gives our main result: Theorem 6 If any one-way permutation exists, then there exist perfect zero-knowledge arguments for proving language-membership as well as for proving knowledge-of-witness. 4 Discussion There are various other applications to information-theoretically secure bit commitment.
Reference: [GILVZ] <author> O. Goldreich, R. Impagliazzo, L. Levin, R. Venkatesan, and D. Zuckerman, </author> <title> Security Preserving Amplification of Hardness, </title> <type> FOCS 90. </type>
Reference-contexts: Its existence is equivalent to the existence of the weaker somewhat one-way function using Yao's amplification technique [Y82] or the more efficient method of <ref> [GILVZ] </ref> (which is applicable only to permutations or regular functions). (A somewhat one-way function has the same definition as above, but the hardness of inversion is smaller, i.e. its probability is inverse polynomially away from 1.) If in addition f is 1-1 then we say the f is a One-Way Permutation. <p> For practical purposes consider the data encryption standard (DES) [Kon]. Given a k-regular [GKL] one-way function (i.e. the number of pre-images of a point is k and is k on a significant fraction), one can transform it into a one-way function which is 1-1 almost everywhere <ref> [GILVZ] </ref>. We apply this to the function DES (k; m) = y (k = key, m= message) 14 where (actual used parameters are) k 2 f0; 1g 56 , m; y 2 f0; 1g 64 .
Reference: [GKL] <author> O. Goldreich, H. Krawczyk, and M. Luby, </author> <title> On the Existence of Pseudo-Random Generators , FOCS 88. </title>
Reference-contexts: For the construction outlined in Section 3 we require a one-way permutation f . (We note that we can also employ k-regular one-way functions in our protocol, since they can be converted into an "almost a permutation" <ref> [GKL] </ref>). 3 Perfectly-Secure Simulatable Bit Commitment We present a perfectly-secure scheme and its proof of security. The polynomial commiter generates a bit encryption which comes from two possible distributions. <p> For example, another application of the bit commitment above is a "coin-flipping protocol" (introduced by Blum [B]), with perfect security, and assuming only a one-way permutations. For practical purposes consider the data encryption standard (DES) [Kon]. Given a k-regular <ref> [GKL] </ref> one-way function (i.e. the number of pre-images of a point is k and is k on a significant fraction), one can transform it into a one-way function which is 1-1 almost everywhere [GILVZ].
Reference: [GMW] <author> S. Goldreich, S. Micali and A. Wigderson, </author> <title> Proofs that Yields Nothing But their Validity, </title> <booktitle> FOCS 86, </booktitle> <pages> pp. 174-187. </pages> <note> (also in JACM). </note>
Reference-contexts: We must make complexity assumptions for implementing the above task since in our setting these protocols imply existence of a one-way function. The assumptions could be used in two different ways: 1. Zero-knowledge proofs <ref> [GMR, GMW] </ref>: The prover can not convince the verifier to accept a false theorem, even if he gets help from an infinitely powerful computation; while the verifier (or anyone overhearing the protocol), if he ever breaks the assumption (say, after 100 years), can extract additional information about the proof (thus, the <p> The probability that the commitment will be different is negligible assuming the hardness assumption as was shown above. 2 Next, we can state the following known "reduction theorems" present in the works on computational (perfect) zero-knowledge proofs (arguments) <ref> [GMW, BCC, IY] </ref>. Theorem 5 If there is a (perfectly-secure commitment) [commitment] scheme which is simu-latable by an expected probabilistic polynomial-time machine ("interacting" with the receiver) and the receiver is polynomial-time, then there is a (perfect zero-knowledge argument) [compu-tationally zero-knowledge proof] for any statement in NP.
Reference: [GMR] <author> S. Goldwasser, S. Micali and C. Rackoff, </author> <title> The Knowledge Complexity of Interactive Proof-Systems, </title> <booktitle> STOC 85, </booktitle> <pages> pp. 291-304. </pages> <note> (also in SIAM J. COMP.) </note>
Reference-contexts: Here we study the problem of secure transfer of the proof of "validity of an NP assertion" in this perspective. We note that the ability to convey proofs for NP in a secure way (i.e., in zero-knowledge (ZK) fashion, as defined by <ref> [GMR] </ref>) has a large variety of applications in cryptography and distributed computing. Informally, proving some fact in zero-knowledge is a way for one player (called "prover") to convince another player (called "verifier") that certain fact is true, while not revealing any additional information. <p> We must make complexity assumptions for implementing the above task since in our setting these protocols imply existence of a one-way function. The assumptions could be used in two different ways: 1. Zero-knowledge proofs <ref> [GMR, GMW] </ref>: The prover can not convince the verifier to accept a false theorem, even if he gets help from an infinitely powerful computation; while the verifier (or anyone overhearing the protocol), if he ever breaks the assumption (say, after 100 years), can extract additional information about the proof (thus, the <p> In section 4 we present additional applications of our methods. 4 2 Model and Definitions Let Alice (the prover) and Bob (the verifier) be interacting Turing machine <ref> [GMR, B] </ref> which share an access to a security parameter n, and a common communication tapes. Each has a private input and output tapes and a private random tape.
Reference: [H] <author> H-astad, J., </author> <title> "Pseudo-Random Generators under Uniform Assumptions", </title> <note> STOC 90 </note> . 
Reference-contexts: The later, in turn (after a long sequence of papers) can now be based on any one-way function <ref> [ILL, H] </ref>. Another primitive that can now be based on any one-way function as well is digital-signature [NY, Ro]. Furthermore these primitives (and primitives derived from them, e.g. identification) were shown to imply a one-way function (thus they are equivalent) [IL]. <p> Concerning secure proofs, Goldreich, Micali and Wigderson showed that zero-knowledge proofs for N P can be done and require secure encryption functions (the results of <ref> [N, ILL, H] </ref> give such functions under any one-way function); this applies to general IP proofs as well [IY].
Reference: [ILL] <author> I. Impagliazzo, L. Levin and M. Luby, </author> <title> Pseudo-random generation from one-way functions, </title> <booktitle> Proc. 21st Symposium on Theory of Computing, </booktitle> <year> 1989, </year> <pages> pp. 12-24. </pages>
Reference-contexts: The later, in turn (after a long sequence of papers) can now be based on any one-way function <ref> [ILL, H] </ref>. Another primitive that can now be based on any one-way function as well is digital-signature [NY, Ro]. Furthermore these primitives (and primitives derived from them, e.g. identification) were shown to imply a one-way function (thus they are equivalent) [IL]. <p> Concerning secure proofs, Goldreich, Micali and Wigderson showed that zero-knowledge proofs for N P can be done and require secure encryption functions (the results of <ref> [N, ILL, H] </ref> give such functions under any one-way function); this applies to general IP proofs as well [IY].
Reference: [IL] <author> R. Impagliazzo and M. Luby, </author> <title> One-way Functions are Essential for Complexity-Based Cryptography FOCS 89, </title> <journal> pp. </journal> <pages> 230-235. </pages>
Reference-contexts: Another primitive that can now be based on any one-way function as well is digital-signature [NY, Ro]. Furthermore these primitives (and primitives derived from them, e.g. identification) were shown to imply a one-way function (thus they are equivalent) <ref> [IL] </ref>. <p> The result of [N] imply that under any one-way function, there is a (Strong-to-Weak) BC from a polynomial-time Commiter to a polynomial-time Receiver (that is, it is an efficient protocol and the underlying assumption in this case is optimal <ref> [IL] </ref>). The work in [OVY2] investigated commitments between a strong and a polynomial-time players where the strong player actually uses its non-polynomial-time power.
Reference: [IN] <author> R. Impagliazzo and M. Naor, </author> <title> Efficient Cryptographic Schemes Provably as Secure as Subset-Sum, </title> <booktitle> Proc. of FOCS 89, </booktitle> <pages> pp. 236-241. </pages>
Reference-contexts: In contrast to computational zero-knowledge proofs, the primitive of perfect zero-knowledge arguments for NP was much inferior in this respect: their constructions were known only under specific algebraic assumptions <ref> [BCC, BKK, IY, BY, IN] </ref>. Our result gives the first general reduction: zero-knowledge NP-arguments can be constructed given any one-way permutation. Our construction has two stages.
Reference: [IR] <author> R. Impagliazzo and S. Rudich, </author> <title> On the Limitations of certain One-Way Permutations , Proc. </title> <booktitle> of STOC 89, </booktitle> <pages> pp. 44-61. </pages>
Reference-contexts: On the other hand, basing the primitive of oblivious transfer on a general one-way permutation which is not a trapdoor 1 was shown to be "a seemingly hard task" <ref> [IR] </ref> when based on black box reductions, it will separate P and NP (on the positive side, a trapdoor permutation is sufficient). <p> In [OVY1] we deal with oblivious transfer and any technique succeeding in allowing a weak sender there, would be quite significant since it would implement oblivious transfer between polynomial time parties using one-way permutations (see <ref> [IR] </ref>). 1.2 Relation to recent work on bit-commitment Recently, models in which parties may have power beyond polynomial-time were investigated; it is worth while pointing out the differences between the current work and the recent one.
Reference: [IY] <author> R. Impagliazzo and M. Yung, </author> <title> Direct Minimum-Knowledge Computations , Proc. </title> <booktitle> of Crypto 87, </booktitle> <publisher> Springer Verlag. </publisher>
Reference-contexts: Concerning secure proofs, Goldreich, Micali and Wigderson showed that zero-knowledge proofs for N P can be done and require secure encryption functions (the results of [N, ILL, H] give such functions under any one-way function); this applies to general IP proofs as well <ref> [IY] </ref>. Further, zero-knowledge proofs and zero-knowledge arguments for non-trivial 1 a trapdoor implies that there is an information which enables easy inversion 2 languages as well as non-interactive zero-knowledge proofs of [BFM, BDMP] imply the existence of one-way functions [OW]. <p> In contrast to computational zero-knowledge proofs, the primitive of perfect zero-knowledge arguments for NP was much inferior in this respect: their constructions were known only under specific algebraic assumptions <ref> [BCC, BKK, IY, BY, IN] </ref>. Our result gives the first general reduction: zero-knowledge NP-arguments can be constructed given any one-way permutation. Our construction has two stages. <p> Then, we apply the reduction of "perfectly-secure simulat-able bit commitment" to "perfect ZK-argument". (A general scheme connecting various commitments to various ZK-systems was given in e.g. <ref> [IY] </ref> and can be used). We note that this work differs from [OVY1] in that there the sender must be able to invert one-way functions, whereas here the sender is efficient (this is the traditional cryptographic model). <p> The probability that the commitment will be different is negligible assuming the hardness assumption as was shown above. 2 Next, we can state the following known "reduction theorems" present in the works on computational (perfect) zero-knowledge proofs (arguments) <ref> [GMW, BCC, IY] </ref>. Theorem 5 If there is a (perfectly-secure commitment) [commitment] scheme which is simu-latable by an expected probabilistic polynomial-time machine ("interacting" with the receiver) and the receiver is polynomial-time, then there is a (perfect zero-knowledge argument) [compu-tationally zero-knowledge proof] for any statement in NP.
Reference: [Kon] <author> A. G. Konheim, </author> <title> Cryptography: a primer , Wiley, </title> <address> New York, </address> <year> 1981. </year>
Reference-contexts: For example, another application of the bit commitment above is a "coin-flipping protocol" (introduced by Blum [B]), with perfect security, and assuming only a one-way permutations. For practical purposes consider the data encryption standard (DES) <ref> [Kon] </ref>. Given a k-regular [GKL] one-way function (i.e. the number of pre-images of a point is k and is k on a significant fraction), one can transform it into a one-way function which is 1-1 almost everywhere [GILVZ].
Reference: [N] <author> M. </author> <title> Naor "Bit Commitment Using Pseudo-Randomness" Crypto-89 pp.123-132. </title>
Reference-contexts: For example, Naor <ref> [N] </ref> showed that computationally secure bit commitments (i.e., bit commitments which can be broken off-line given sufficient resources) can be constructed from a pseudo-random generators (a notion originated and first implemented based on a discrete logarithm assumption in [BM]). <p> Concerning secure proofs, Goldreich, Micali and Wigderson showed that zero-knowledge proofs for N P can be done and require secure encryption functions (the results of <ref> [N, ILL, H] </ref> give such functions under any one-way function); this applies to general IP proofs as well [IY]. <p> By "From Strong to Weak BC", we denote Bit-commitments (BC) protocols, in which even an infinitely-powerful "Commiter" can not cheat, (i.e. change the value of the committed bit) except with negligible probability, but the polynomial-time "Receiver" can "see" the commitment, if he breaks the assumption. The result of <ref> [N] </ref> imply that under any one-way function, there is a (Strong-to-Weak) BC from a polynomial-time Commiter to a polynomial-time Receiver (that is, it is an efficient protocol and the underlying assumption in this case is optimal [IL]). <p> Distributional-NP is defined by Levin in the theory of average-case NP, whereas Distributional-PSPACE is a complete (in Levin's sense) problem for PSPACE under a uniform distribution. Thus, when allowing the commiter to use non-polynomial power this theoretical result relaxes the assumptions in <ref> [N] </ref>. By "from Weak to Strong BC" we denote BC in which even an infinitely-powerful "receiver" can not "see" the commitment, but the polynomial-time commiter can not change the value of the commitment if a complexity assumption holds.
Reference: [NY] <author> M. Naor and M. Yung, </author> <title> Universal One-Way Hash Functions and their Cryptographic Applications, </title> <note> STOC 89. </note>
Reference-contexts: The later, in turn (after a long sequence of papers) can now be based on any one-way function [ILL, H]. Another primitive that can now be based on any one-way function as well is digital-signature <ref> [NY, Ro] </ref>. Furthermore these primitives (and primitives derived from them, e.g. identification) were shown to imply a one-way function (thus they are equivalent) [IL].
Reference: [OVY1] <author> R. Ostrovsky, R. Venkatesan, M. Yung, </author> <title> Fair Games Against an All-Powerful Adversary, Sequences 91, </title> <note> (to appear). </note>
Reference-contexts: Our construction has two stages. First, we show how to design an information-theoretically secure bit commitment between two polynomial-time parties based on any one-way permutation (we employ a technique that can be called "interactive-hashing" introduced initially in a different model involving an all-powerful party <ref> [OVY1] </ref>). Moreover, we do it in such a way that the conversations in the commitment protocol are simulatable (i.e. by an expected polynomial time algorithm). <p> Then, we apply the reduction of "perfectly-secure simulat-able bit commitment" to "perfect ZK-argument". (A general scheme connecting various commitments to various ZK-systems was given in e.g. [IY] and can be used). We note that this work differs from <ref> [OVY1] </ref> in that there the sender must be able to invert one-way functions, whereas here the sender is efficient (this is the traditional cryptographic model). In [OVY1] we deal with oblivious transfer and any technique succeeding in allowing a weak sender there, would be quite significant since it would implement oblivious <p> We note that this work differs from <ref> [OVY1] </ref> in that there the sender must be able to invert one-way functions, whereas here the sender is efficient (this is the traditional cryptographic model). In [OVY1] we deal with oblivious transfer and any technique succeeding in allowing a weak sender there, would be quite significant since it would implement oblivious transfer between polynomial time parties using one-way permutations (see [IR]). 1.2 Relation to recent work on bit-commitment Recently, models in which parties may have power beyond <p> In [OVY2] it is also shown, based on an oblivious transfer protocols among unequal-power players introduced in <ref> [OVY1] </ref> (where interactive hashing was presented), that given any one-way function, there is a (Weak-to-Strong) BC from a polynomial-time Commiter to a (PSPACE) Receiver (and if the receiver is NP, the same holds under a one-way permutation). The main results in [OVY1] yield oblivious transfer under one-way function when players have <p> an oblivious transfer protocols among unequal-power players introduced in <ref> [OVY1] </ref> (where interactive hashing was presented), that given any one-way function, there is a (Weak-to-Strong) BC from a polynomial-time Commiter to a (PSPACE) Receiver (and if the receiver is NP, the same holds under a one-way permutation). The main results in [OVY1] yield oblivious transfer under one-way function when players have unequal power. The cryptographic application of [OVY1] (when both parties are polynomial time), is basing two-party secure computation with one party having information theoretic security under general trapdoor permutation assumption (whereas previously known under specific algebraic trapdoor functions). <p> The main results in <ref> [OVY1] </ref> yield oblivious transfer under one-way function when players have unequal power. The cryptographic application of [OVY1] (when both parties are polynomial time), is basing two-party secure computation with one party having information theoretic security under general trapdoor permutation assumption (whereas previously known under specific algebraic trapdoor functions).
Reference: [OVY2] <author> R. Ostrovsky, R. Venkatesan, M. Yung, </author> <title> Secure Commitment Against A Powerful Adversary, </title> <booktitle> STACS 92, </booktitle> <publisher> Springer Verlag LNCS, </publisher> <year> 1992. </year>
Reference-contexts: The result of [N] imply that under any one-way function, there is a (Strong-to-Weak) BC from a polynomial-time Commiter to a polynomial-time Receiver (that is, it is an efficient protocol and the underlying assumption in this case is optimal [IL]). The work in <ref> [OVY2] </ref> investigated commitments between a strong and a polynomial-time players where the strong player actually uses its non-polynomial-time power. <p> By "from Weak to Strong BC" we denote BC in which even an infinitely-powerful "receiver" can not "see" the commitment, but the polynomial-time commiter can not change the value of the commitment if a complexity assumption holds. In <ref> [OVY2] </ref> it is also shown, based on an oblivious transfer protocols among unequal-power players introduced in [OVY1] (where interactive hashing was presented), that given any one-way function, there is a (Weak-to-Strong) BC from a polynomial-time Commiter to a (PSPACE) Receiver (and if the receiver is NP, the same holds under a
Reference: [OW] <author> R. Ostrovsky and A. Wigderson, </author> <title> One-Way Functions are Essential For Non-Trivial Zero-Knowledge Proofs, </title> <type> (preliminary manuscript). 16 </type>
Reference-contexts: Further, zero-knowledge proofs and zero-knowledge arguments for non-trivial 1 a trapdoor implies that there is an information which enables easy inversion 2 languages as well as non-interactive zero-knowledge proofs of [BFM, BDMP] imply the existence of one-way functions <ref> [OW] </ref>. In contrast to computational zero-knowledge proofs, the primitive of perfect zero-knowledge arguments for NP was much inferior in this respect: their constructions were known only under specific algebraic assumptions [BCC, BKK, IY, BY, IN].
Reference: [Ro] <author> J. </author> <title> Rompel "One-way Functions are Necessary and Sufficient for Secure Signatures" STOC 90. </title>
Reference-contexts: The later, in turn (after a long sequence of papers) can now be based on any one-way function [ILL, H]. Another primitive that can now be based on any one-way function as well is digital-signature <ref> [NY, Ro] </ref>. Furthermore these primitives (and primitives derived from them, e.g. identification) were shown to imply a one-way function (thus they are equivalent) [IL].
Reference: [TW] <author> M. Tompa and H. Woll, </author> <title> Random Self-Reducibility and Zero-Knoweldge Interactive-Proofs of Possession of Information, </title> <booktitle> Proc. of FOCS 1987. </booktitle>
Reference-contexts: on the parties' random tapes), which Bob fl produces throughout an interaction with Alice. 5 We note that similarly an argument can be prove "a possession of knowledge" in the sense that one formally shows that a machine employing the prover can extract a witness to the claimed NP statement <ref> [FFS, TW, BG] </ref>. (In the next version we describe this as well). <p> The perfectly-secure simulatable bit-commitment protocol can be used in the general scheme above. In addition, the general proof system scheme can also be shown to give a "proof of possession of a witness" (i.e., proof of knowledge) as was formalized <ref> [FFS, TW, BG] </ref>. Thus, combining the above, gives our main result: Theorem 6 If any one-way permutation exists, then there exist perfect zero-knowledge arguments for proving language-membership as well as for proving knowledge-of-witness. 4 Discussion There are various other applications to information-theoretically secure bit commitment.
Reference: [Y82] <author> A. C. Yao, </author> <title> Theory and Applications of Trapdoor functions, </title> <booktitle> Proceedings of the 23th Symposium on the Foundation of Computer Science, </booktitle> <year> 1982, </year> <pages> pp 80-91. 17 </pages>
Reference-contexts: We can implement the scheme (with almost-perfect security) based on k-regular one-way functions. One practical implication of our result is that secure arguments can now be based on functions which are DES-like ciphers. 1.1 Background and organization Past successes in establishing basic cryptographic primitives on general assumptions (initiated in <ref> [Y82] </ref>) have shown that various primitives, which were originally based on specific algebraic functions, can be based on the existence of general one-way functions or permutations. <p> Its existence is equivalent to the existence of the weaker somewhat one-way function using Yao's amplification technique <ref> [Y82] </ref> or the more efficient method of [GILVZ] (which is applicable only to permutations or regular functions). (A somewhat one-way function has the same definition as above, but the hardness of inversion is smaller, i.e. its probability is inverse polynomially away from 1.) If in addition f is 1-1 then we
References-found: 33

