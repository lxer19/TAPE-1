URL: http://www.cs.ucl.ac.uk/staff/R.Bordini/Publications/eaSLPMDA600.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/staff/R.Bordini/
Root-URL: http://www.cs.ucl.ac.uk
Email: E-mail: bordini@inf.ufrgs.br  
Phone: Telephone: +55(51) 336-8399 X. 6801 Fax: +55(51) 336-5576  
Title: Linguistic Support for Agent Migration  
Author: Rafael Heitor Bordini Migrac~ao de Agentes Advisor: Prof. Dra. Rosa Maria Viccari Co-advisor: Prof. Dr. Antonio Carlos da Rocha Costa Curso de Pos-Graduac~ao em Ci^encia da Computac~ao 
Address: CP 15.064 Cep 91.501-970 Porto Alegre, RS BRAZIL  
Affiliation: Universidade Federal do Rio Grande do Sul (UFRGS) Instituto de Informatica  
Note: Extended abstract of MSc Dissertation Original title: Suporte Linguistico para  
Abstract: This is a masters dissertation in the area of Distributed Artificial Intelligence (or Multi-agent Systems, in particular). It proposes some linguistic features to support the migration of agents between societies that have different communication mechanisms, that is, it deals with the problem of an agent entering any existing society whose communication means are not previously known. We claim that such features will become increasingly important in the account of complex, heterogeneous, adaptive, evolutionary, continuously running, open systems. Additionally, an important outcome is systems' interoperation, now a major concern in the field. Intuitive ideas concerning the architecture of agents and multi-agent systems where this phenomenon may occur are given. The special agents that are able to migrate are designed to embody the interpreter of a meta-language that can express in a formal way the syntax and semantics of the protocol languages used in the target societies. The dissertation also shows the communication features of a sample society an agent that is to migrate to is supposed to learn via meta-language interpreter. A language for the execution of protocols is proposed. It allows agents to have interactions of complex structure. Formal semantics is given for both a (slightly improved) protocol description language presented in the literature and the protocol execution language proposed. Furthermore, the arriving agents must have access to some minimum meta-protocols allowing them to perform minimal interactions that lead to the learning of the protocols used in each society. For the sample society, two meta-protocols are specified: the first dealing with protocol version mismatches and the second with protocol exchanges among agents. Some discussions are presented concerning: the advantages of using such meta-language approach, the boundary of interaction complexity that migrating agents can reach, and complementary works accounting for further levels of agent adaptation. The implementation of a prototype of the communication sub-agent, which is in charge of adapting (in the level of language and interaction) the agent to the new society, is commented. This dissertation is concluded by examining contributions, further projects and future applications. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> BERTHE, Sabine; DEMAZEAU, Yves & BOISSIER, Olivier. </author> <title> Knowing Each Other Better. </title> <booktitle> In: 11th International Workshop on Distributed Artificial Intelligence. </booktitle> <address> Proceedings... Glen Arbor, </address> <month> February </month> <year> 1992. </year>
Reference-contexts: A very interesting approach to finding suitable partners among agents can also be found in [15, 16]. The more straightforward solution to this problem in the context of this work would be the use of a presentation protocol, like the one presented in <ref> [1] </ref>. If such protocol for agents introducing themselves is available in the target-society, all the immigrant-agent has to do is use the meta-protocol for protocol exchange it already knows for asking such presentation protocol to his new partners, and then execute it.
Reference: [2] <author> BORDINI, Rafael H.; COSTA, A.C. da Rocha; H UBNER, Jomi F. & VICCARI, Rosa M. </author> <title> Linguistic Support for Agent Migration. </title> <booktitle> To be presented at the Poster Session of the First International Conference on Multiagent Systems (ICMAS'95). </booktitle> <address> San Francisco, </address> <month> 12-14 June, </month> <year> 1995. </year>
Reference-contexts: Then the migrant-agent must know about the social roles of each agent in the target-society, being accordingly able to interact with suitable partners: the concern of the second level. Here a solution to the former problem is presented, which full account is in [3] (see also <ref> [2] </ref>). In section 2 we will focus on some architectural issues. In section 3 it is commented the information about communication the society must provide for an agent to adapt to that specific society. Some general discussions that arose from our proposals are embraced in section 4.
Reference: [3] <editor> BORDINI, Rafael H. Suporte Linguistico para Migrac~ao de Agentes. MSc dissertation. Porto Alegre, CPGCC da UFRGS, </editor> <year> 1994. </year>
Reference-contexts: Then the migrant-agent must know about the social roles of each agent in the target-society, being accordingly able to interact with suitable partners: the concern of the second level. Here a solution to the former problem is presented, which full account is in <ref> [3] </ref> (see also [2]). In section 2 we will focus on some architectural issues. In section 3 it is commented the information about communication the society must provide for an agent to adapt to that specific society. Some general discussions that arose from our proposals are embraced in section 4.
Reference: [4] <author> CAMPBELL, John A. & D'INVERNO, Mark P. </author> <title> Knowledge Interchange Protocols. In: Decentralized AI. </title> <editor> DEMAZEAU, Yves & M ULLER, Jean-Pierre, eds. </editor> <publisher> Amsterdam, Elsevier Science Publishers, </publisher> <year> 1990. </year>
Reference-contexts: It is based on the several tones of communication presented in <ref> [4] </ref>. Some improvements in the production rules of its grammar were made. We changed them so that a unique date was assigned to each protocol version (protocol versions are identified by their creation date). We also introduced the possibility of empty transitions.
Reference: [5] <author> CASTELFRANCHI, Cristiano. </author> <title> Social Power. In: Decentralized AI. </title> <editor> DEMAZEAU, Yves & M ULLER, Jean-Pierre, eds. </editor> <publisher> Amsterdam, Elsevier Science Publishers, </publisher> <year> 1990. </year>
Reference-contexts: If a transition is arriving to the agent, TI sends the message content of that transition for the other sub-agents to semantic and pragmatically interpret it (this is the meaning of the arrow directed towards inside the agent). Considering the idea that message interpretation is beyond communication <ref> [5] </ref>, we claim that it is to be done by other sub-agents (e.g., those responsible for planning, belief management, reasoning about the others, etc.). We propose the semantic and pragmatic interpretation of messages to be accomplished using the approach in [19].
Reference: [6] <author> CORR ^ EA, Milton & COELHO, Helder. </author> <title> Around the Architectural Agent Approach to Model Conversations. </title> <booktitle> In: European Workshop on Modelling Autonomous Agents in a Multi-Agent World, </booktitle> <year> 1993. </year> <month> Proceedings... </month>
Reference-contexts: A sub-agent is an autonomous, parallel part of an agent that is in charge of a specific task in the functioning of the agent (e.g., planning, belief review, perception, and so on). We view these sub-agents in a similar way to the parallel components of an agent in <ref> [6] </ref>. The filled circle in an agent representation denotes the Communication Sub-Agent (CSA). This work concentrates in the architecture and functioning of this sub-agent (section 2.2). This figure also shows an agent (in the very middle) that is a migrant-agent (MiAg in the figure).
Reference: [7] <author> COSTA, A.C. da Rocha; H UBNER, Jomi F. & BORDINI, Rafael H. </author> <title> On Entering an Open Society. </title> <booktitle> In: XI Brazilian Symposium on Artificial Intelligence. </booktitle> <institution> Fortaleza, Universidade Federal do Ceara, </institution> <year> 1994. </year>
Reference-contexts: 1 Introduction The particular interest of this project was the study of interaction in Multi-agent Systems (MAS) [9]. In <ref> [7] </ref> it was first commented the concept of agent migration among different societies. That paper introduced the idea that adaptation in such migration process must be carried out in two levels: the level of Language and Interaction, and the level of Knowledge and Performance. <p> The first of them is to become acquainted to every agent in the target-society. Another dissertation related to this presents the approach of trying to infer other agents' social roles by observation <ref> [7, 11] </ref>. A very interesting approach to finding suitable partners among agents can also be found in [15, 16]. The more straightforward solution to this problem in the context of this work would be the use of a presentation protocol, like the one presented in [1].
Reference: [8] <author> COSTA, A.C. da Rocha & COELHO, Helder. </author> <title> On Machine Intelligence and the Ef ficacy of Computing Agents in Functional Conversations. </title> <type> Unpublished manuscript. </type>
Reference-contexts: Another point that has to be understood here is the kind of interaction structures we are interested in providing the agents. Based on the account for complex structures for agent interaction proposed in <ref> [8] </ref>, we claim that an agent may be able to decide to have parallel conversations, as well as may want to interrupt a conversation and start a new one. <p> This corresponds to the agent allow its interlocutor to continue sending information without its intervention. In analogy to human conversations, this is similar to one having nothing to say at some moment. This is also one of the possibilities of interaction structures presented in <ref> [8] </ref>. 3.2 Protocol Execution Language We claim that in some societies it may exist a language used for agents to control the complex execution of the protocols they know, which are specified using the previous kind of language.
Reference: [9] <editor> DEMAZEAU, Yves & M ULLER, Jean-Pierre. </editor> <booktitle> Decentralized Artificial Intelligence. In: Decentral--ized A.I. </booktitle> <editor> DEMAZEAU, Yves & M ULLER, Jean-Pierre, eds. </editor> <publisher> Amsterdam, Elsevier Science Publishers, </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction The particular interest of this project was the study of interaction in Multi-agent Systems (MAS) <ref> [9] </ref>. In [7] it was first commented the concept of agent migration among different societies. That paper introduced the idea that adaptation in such migration process must be carried out in two levels: the level of Language and Interaction, and the level of Knowledge and Performance.
Reference: [10] <author> GENESERETH, Michael R. & KETCHPEL, Steven P. </author> <title> Software Agents. In: </title> <journal> Communications of the ACM, v.37, n.7, </journal> <volume> p.48-53, </volume> <month> July </month> <year> 1994. </year>
Reference-contexts: Besides, it is important to notice that only agents able to migrate must embrace the meta-language interpreter. It is not required to be universally known as the PDL in [14], or the KQML approach to interoperability <ref> [10] </ref> (a brief discussion about this is in the conclusion). However, it is necessary that all specifications on the meta-level are done using the same meta-language (the one the migrant-agents know). Another claim is regarding the complexity of interaction an immigrant-agent can reach. <p> This is a rather complex approach to interoperability (i.e., allowing any programs to exchange features, increasing the power of an overall system). The current major effort on this matter is from the ARPA Knowledge Sharing Effort group, which main contribution is KQML, a high-level language for agent communication <ref> [10] </ref>. In that work, specific protocols used by any program must be translated into that standard form of agent communication.
Reference: [11] <author> H UBNER, Jomi F. Estudo sobre Entrada de agentes em Sistemas Multiagentes Abertos. </author> <note> MSc Dissertation, to appear. Porto Alegre, </note> <author> CPGCC da UFRGS, </author> <year> 1995. </year>
Reference-contexts: The first of them is to become acquainted to every agent in the target-society. Another dissertation related to this presents the approach of trying to infer other agents' social roles by observation <ref> [7, 11] </ref>. A very interesting approach to finding suitable partners among agents can also be found in [15, 16]. The more straightforward solution to this problem in the context of this work would be the use of a presentation protocol, like the one presented in [1].
Reference: [12] <author> MINSKY, Marvin. </author> <booktitle> The Society of Mind. </booktitle> <address> New York, Touchstone, </address> <year> 1986. </year>
Reference-contexts: We, particularly, will use the former terminology. (S1, S2, S3 and S4), each one being composed of four agents. An agent is represented by a circle with four little circles inside it. They are intended to denote the sub-agents that work together to build up the agent's behaviour (resembling <ref> [12] </ref>). A sub-agent is an autonomous, parallel part of an agent that is in charge of a specific task in the functioning of the agent (e.g., planning, belief review, perception, and so on). We view these sub-agents in a similar way to the parallel components of an agent in [6].
Reference: [13] <author> PLOTKIN, Gordon D. </author> <title> A Structural Approach to Operational Semantics. </title> <institution> Aarhus, Computer Science Department - Aarhus University, </institution> <month> September </month> <year> 1981. </year>
Reference-contexts: It seems that the meta-language can be any framework for giving formal semantics. We gave formal semantics to the PDL and to the PEL above using both the denotational framework (the notation used was the one presented in [17]) and the structural approach to operational semantics <ref> [13] </ref>. However, we left for future works the proof that both semantics were equivalent.
Reference: [14] <author> POPULAIRE, Philippe; DEMAZEAU, Yves; BOISSIER, Olivier & SICHMAN, Jaime. </author> <title> Description et Implementation de Protocoles de Communication en Univers Multi-Agents. In: </title> <institution> Journees Francophones sur l'Intelligence Artificielle Distribuee et les Systemes Multi-Agents. Toulouse, AFCET & AFIA, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: The first topic to be clarified is concerned with protocol execution. The protocol description language we used as an example (to be commented in section 3.1) is basically the language presented in <ref> [14] </ref>. That work presents a universal language that can be used to describe a set of protocols. It has proved to be enough generic to describe a number of protocols presented in recent literature. <p> Therefore, different societies starting from the same communication features may arrive to different versions of the protocol languages they use. This means to respect the societies own historical evolution. The PDL in <ref> [14] </ref> also allows the coexistence of different versions of the same protocol. This introduces dynamics to the protocols used in the society, since they can be improved (even though it is still not researched the topic of how an agent can itself propose modifications to the protocols it uses). <p> This section deals with these features. We stress that these are the communication features of one possible society an immigrant-agent (with the abilities presented in the previous section) can learn. 3.1 Protocol Description Language As said before, we basically dealt with the Protocol Description Language (PDL) in <ref> [14] </ref>. It is based on the several tones of communication presented in [4]. Some improvements in the production rules of its grammar were made. We changed them so that a unique date was assigned to each protocol version (protocol versions are identified by their creation date). <p> One to be used in case a protocol version mismatch occurs and the other one to allow the new agent to ask the other agents for the protocols being used in that society. These two (meta) protocols were, as said before, written using the protocol description language. As in <ref> [14] </ref> we used the idea of decentralized management of protocols, that is, each agent has its own copies of the protocols it uses explicitly represented in its internal structure. <p> Besides, it is important to notice that only agents able to migrate must embrace the meta-language interpreter. It is not required to be universally known as the PDL in <ref> [14] </ref>, or the KQML approach to interoperability [10] (a brief discussion about this is in the conclusion). However, it is necessary that all specifications on the meta-level are done using the same meta-language (the one the migrant-agents know). Another claim is regarding the complexity of interaction an immigrant-agent can reach.
Reference: [15] <author> SICHMAN, Jaime S.; DEMAZEAU, Yves; CONTE, Rosaria & CASTELFRANCHI, Cristiano. </author> <title> A Social Reasoning Mechanism Based on Dependence Networks. </title> <booktitle> In: 11st. European Conference on Artificial Intelligence (ECAI94). </booktitle> <address> Proceedings... </address> <publisher> John Wiley & Sons, </publisher> <year> 1994. </year>
Reference-contexts: The first of them is to become acquainted to every agent in the target-society. Another dissertation related to this presents the approach of trying to infer other agents' social roles by observation [7, 11]. A very interesting approach to finding suitable partners among agents can also be found in <ref> [15, 16] </ref>. The more straightforward solution to this problem in the context of this work would be the use of a presentation protocol, like the one presented in [1].
Reference: [16] <author> SICHMAN, Jaime S. & DEMAZEAU, Yves. </author> <title> A First Attempt to Use Dependence Situations as a Decision Criterion for Choosing Partners in Multi-Agent Systems. </title> <booktitle> In: ECAI94 Workshop, </booktitle> <year> 1994. </year>
Reference-contexts: The first of them is to become acquainted to every agent in the target-society. Another dissertation related to this presents the approach of trying to infer other agents' social roles by observation [7, 11]. A very interesting approach to finding suitable partners among agents can also be found in <ref> [15, 16] </ref>. The more straightforward solution to this problem in the context of this work would be the use of a presentation protocol, like the one presented in [1].
Reference: [17] <author> WATT, David A. & THOMAS, Muffy. </author> <title> Programming Language Syntax and Semantics. </title> <address> New York, </address> <publisher> Prentice Hall, </publisher> <year> 1991. </year>
Reference-contexts: It seems that the meta-language can be any framework for giving formal semantics. We gave formal semantics to the PDL and to the PEL above using both the denotational framework (the notation used was the one presented in <ref> [17] </ref>) and the structural approach to operational semantics [13]. However, we left for future works the proof that both semantics were equivalent. <p> ML-Yacc was used for the specification of the syntax and semantics of the languages that must be interpreted by the CSA. The semantics is expressed as ML functions in the semantic actions of the ML-Yacc specifications. This is the reason we used the notation in <ref> [17] </ref> for giving the denotational semantics: it is very similar to ML notation. Accordingly, the denotational semantics previously specified could be directly used in the implementation. <p> Accordingly, the denotational semantics previously specified could be directly used in the implementation. This was done based on the idea that the complete denotational semantics of a language can be viewed as an interpreter for it when used in a suitable functional programming language <ref> [17, 18] </ref>.
Reference: [18] <author> WATT, David A. </author> <title> Executable Semantic Descriptions. In : Software Practice& Experience, </title> <address> v.16, n.1, p.13-43, </address> <month> January </month> <year> 1986. </year> <title> Chichester, </title> <publisher> John Wiley & Sons Ltd. </publisher>
Reference-contexts: Accordingly, the denotational semantics previously specified could be directly used in the implementation. This was done based on the idea that the complete denotational semantics of a language can be viewed as an interpreter for it when used in a suitable functional programming language <ref> [17, 18] </ref>.
Reference: [19] <author> WERNER, Eric. </author> <title> Cooperating Agents: A Unified Theory of Communication and Social Structure. </title> <booktitle> In: Distributed Artificial Intelligence II. </booktitle> <editor> GASSER, Les & HUHNS, Michael, eds. </editor> <publisher> Morgan Kauf-mann, </publisher> <year> 1989. </year>
Reference-contexts: Considering the idea that message interpretation is beyond communication [5], we claim that it is to be done by other sub-agents (e.g., those responsible for planning, belief management, reasoning about the others, etc.). We propose the semantic and pragmatic interpretation of messages to be accomplished using the approach in <ref> [19] </ref>. In case it is Ag's turn of sending a message, then TI checks the current state of that conversation in the Conversations Structure, consult that protocol state in P and finally provide the other sub-agents with the possibilities for continuing the conversation.
References-found: 19

