URL: http://robotics.stanford.edu/~latombe/papers/wafr98/paper.ps.gz
Refering-URL: http://robotics.stanford.edu/~dyhsu/publications.html
Root-URL: http://www.cs.stanford.edu
Title: On Finding Narrow Passages with Probabilistic Roadmap Planners  
Author: David Hsu, Lydia E. Kavraki, Rajeev Motwani, Stephen Sorkin, 
Address: Stanford, CA, USA  Houston, TX, USA Jean-Claude Latombe, Stanford University, Stanford, CA, USA  Stanford, CA, USA  Stanford, CA, USA  
Affiliation: Stanford University,  Rice University,  Stanford University,  Stanford University,  
Abstract: A probabilistic roadmap is a network of simple paths connecting collision-free configurations obtained by sampling a robot's configuration space at random. Several probabilistic roadmap planners have solved unusually difficult path-planning problems, but their efficiency remains disappointing when the free space contains narrow passages. This paper provides foundations for understanding the effect of passages on the connectedness of probabilistic roadmaps. It also proposes a new random sampling scheme for finding such passages. An initial roadmap is built in a "dilated" free space allowing some penetration distance of the robot into the obstacles. This roadmap is then modified by resampling around the links that do not lie in the true free space. Experiments show that this strategy allows relatively small roadmaps to reliably capture the free space connectivity. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Amato, O.B. Bayazit, L.K. Dale, C. Jones, and D. Vallejo. OBPRM: </author> <title> An Obstacle-Based PRM for 3D Workspaces. </title> <booktitle> These proceedings, </booktitle> <year> 1998. </year>
Reference-contexts: Section 5 describes and discusses the new sampling strategy. 2 Basic PRM Let C denote the configuration space of a robot and F the open subset of collision-free configurations, i.e., the free space. For simplification, let C be the Euclidean hyper-cube <ref> [0; 1] </ref> n . We say that two free configurations see each other if they can be connected by a straight-line path in F . The basic PRM is a simplified version of the planner in [16]. <p> Step 1 generates each milestone by picking successive configurations q in C, until one satisfies dist (q) &gt; 0. Every q is obtained by choosing each of its coordinates uniformly at random in <ref> [0; 1] </ref>. Step 2 checks the straight path between every two milestones for collision, by recursively decomposing it into two half segments and invoking dist at each segment endpoint [4]. <p> All three references listed above observe that adding milestones near the free space boundary improves the planners' performance. Various sampling and connection strategies are described and experimentally evaluated in <ref> [1] </ref>. <p> In the n-D version of this example, two hyper-cubes, each having volume W n , are connected by a hyper-parallelepipedic passage that has size w along k dimensions (k 2 <ref> [1; n 1] </ref>) and size W along the n k other dimensions. Each of the parameters *, ff, and fi is on the order of (w=W ) k . <p> Figure 9 shows two examples, where C D. Hsu et al. Example 1 Example 2 Example 1 Example 2 Algorithm #mil. #cdist #mil. #cdist new-roadmap 65 16,812 112 11,035 roadmap 281 67,894 290 70,971 is the square <ref> [0; 1] </ref> 2 . In both examples, we set r to 1, and the maximal penetration distance ffi to 0.075. In Example 1, this penetration distance causes the creation of new passages between obstacles. Each test with one program consisted of performing a sequence of runs. <p> In another series of experiments with new-roadmap we considered the example of Figure 5, with w=W successively set to .1, .01, .001, .0001, and .00001. C was defined as [0; 3] fi <ref> [0; 1] </ref>. The maximal penetration distance was set to 0.45. For each value of w=W , we did the same kind of tests as above. The table of Figure 12 displays the average results over 5 tests.
Reference: [2] <author> N. Amato and Y. Wu. </author> <title> A Randomized Roadmap Method for Path and Manipulation Planning. </title> <booktitle> Proc. IEEE Int. Conf. on Rob. and Aut., Min-neapolis, MN, </booktitle> <pages> pp. 113-120, </pages> <year> 1996. </year>
Reference-contexts: 1 Introduction Probabilistic roadmap planners (PRMs) construct a network of simple paths (usually straight paths in configuration space) connecting collision-free configurations picked at random <ref> [2, 4, 5, 10, 11, 13, 16, 24, 27] </ref>. They have been successful in solving difficult path-planning problems, but their efficiency remains disappointing when the free space contains narrow passages. In [4, 10, 14, 15], we have formally investigated the performance of PRMs. <p> We will see that the sampling strategy proposed in this paper creates a greater density of milestones near the boundary of the free space. Other roadmap planners try to attain this goal using different strategies. In <ref> [2] </ref>, when a configuration q is generated outside F , a number of rays are shot from q along random directions uniformly distributed in C. For each ray, a binary search is used to identify a point near the boundary of F .
Reference: [3] <author> B. Baginski. </author> <title> Local Motion Planning for Manipulators Based on Shrinking and Growing Geometry Models. </title> <booktitle> Proc. IEEE Int. Conf. on Rob. and Aut., </booktitle> <address> Minneapolis, MN, </address> <pages> pp. 3303-3308, </pages> <year> 1996. </year>
Reference-contexts: Preliminary experiments have produced very encouraging results. Path planners using techniques to expand or shrink obstacles and/or robots have previously been proposed <ref> [3, 9] </ref>, but with different planning approaches. Section 2 describes a "basic" PRM. Section 3 surveys other sampling strategies proposed in the literature. Section 4 establishes the relation between the results in [4, 10, 14, 15] and the complexity of the basic PRM in the presence of narrow passages. <p> In another series of experiments with new-roadmap we considered the example of Figure 5, with w=W successively set to .1, .01, .001, .0001, and .00001. C was defined as <ref> [0; 3] </ref> fi [0; 1]. The maximal penetration distance was set to 0.45. For each value of w=W , we did the same kind of tests as above. The table of Figure 12 displays the average results over 5 tests.
Reference: [4] <author> J. Barraquand, L.E. Kavraki, J.C. Latombe, T.Y. Li, R. Motwani, and P. Raghavan. </author> <title> A Random Sampling Scheme for Path Planning. </title> <journal> Int. J. of Rob. Res., </journal> <volume> 16(6) </volume> <pages> 759-774, </pages> <year> 1997. </year>
Reference-contexts: 1 Introduction Probabilistic roadmap planners (PRMs) construct a network of simple paths (usually straight paths in configuration space) connecting collision-free configurations picked at random <ref> [2, 4, 5, 10, 11, 13, 16, 24, 27] </ref>. They have been successful in solving difficult path-planning problems, but their efficiency remains disappointing when the free space contains narrow passages. In [4, 10, 14, 15], we have formally investigated the performance of PRMs. <p> They have been successful in solving difficult path-planning problems, but their efficiency remains disappointing when the free space contains narrow passages. In <ref> [4, 10, 14, 15] </ref>, we have formally investigated the performance of PRMs. The property of *-goodness [15] allows us to determine how well a probabilistic roadmap "covers" the free space, while the properties of expansiveness [10] and path clearance [14] allow us to analyze the connectedness of a roadmap. <p> Path planners using techniques to expand or shrink obstacles and/or robots have previously been proposed [3, 9], but with different planning approaches. Section 2 describes a "basic" PRM. Section 3 surveys other sampling strategies proposed in the literature. Section 4 establishes the relation between the results in <ref> [4, 10, 14, 15] </ref> and the complexity of the basic PRM in the presence of narrow passages. Section 5 describes and discusses the new sampling strategy. 2 Basic PRM Let C denote the configuration space of a robot and F the open subset of collision-free configurations, i.e., the free space. <p> Every q is obtained by choosing each of its coordinates uniformly at random in [0; 1]. Step 2 checks the straight path between every two milestones for collision, by recursively decomposing it into two half segments and invoking dist at each segment endpoint <ref> [4] </ref>. The procedure query (Figure 2) tries to connect each query configuration to a milestone of the roadmap, either directly (Step 1 (a)), or through an intermediate configuration chosen in a neighborhood of the query configuration (Step 1 (b)), using dist to check connections for collision. <p> We relate this number to the extent to which F satisfies desirable geometric properties: *-goodness <ref> [4, 15] </ref>, expansiveness [10], and path clearance [13, 14]. Though not perfect, s is a reasonable measure of the work done by the planner. For any subset S C, (S) denotes its volume. <p> If s is chosen such that: s * 1 + log then roadmap generates a set of milestones that adequately covers F , with probability at least 1 . See <ref> [4, 15] </ref> for a proof of this theorem. Theorem 1 does not allow us to compute s since we do not know the value of *, except for simple spaces.
Reference: [5] <author> J. Barraquand and J.C. Latombe. </author> <title> Robot Motion Planning: A Distributed Representation Approach. </title> <journal> Int. J. of Rob. Res., </journal> <volume> 10(6) </volume> <pages> 628-649, </pages> <year> 1991. </year>
Reference-contexts: 1 Introduction Probabilistic roadmap planners (PRMs) construct a network of simple paths (usually straight paths in configuration space) connecting collision-free configurations picked at random <ref> [2, 4, 5, 10, 11, 13, 16, 24, 27] </ref>. They have been successful in solving difficult path-planning problems, but their efficiency remains disappointing when the free space contains narrow passages. In [4, 10, 14, 15], we have formally investigated the performance of PRMs. <p> In this paper we often use simple illustrative examples of 2-D free spaces, which could easily be handled by other planning techniques. Keep in mind that in practical problems, it is often not realistic to explicitly represent F . 3 Other Sampling Strategies The planner in <ref> [5] </ref> uses a partially random sampling strategy. It deterministically follows the steepest descent of a heuristic potential field defined over C until it reaches a minimum of the potential.
Reference: [6] <author> S.A. Cameron. </author> <title> Enhancing GJK: Computing Minimum and Penetration Distances Between Convex D. </title> <editor> Hsu et al. Polyhedra. </editor> <booktitle> Proc. IEEE Int. Conf. on Rob. and Aut., </booktitle> <address> Albuquerque, NM,pp. 3112-3117, </address> <year> 1997. </year>
Reference-contexts: Let t i be the shortest translation that L i must undergo before it does not collide with any obstacle. The penetration distance dist (q) is max p i=1 ft i g. Techniques for computing this penetration distance are proposed in <ref> [6, 7, 17, 26] </ref> for convex polytopes and in [20] for nonconvex ones. Note that this distance does not correspond to any metric in C. Hence, allowing a penetration distance ffi of the robot into the obstacles does not result in a uniform dilatation of F .
Reference: [7] <author> D.P. Dobkin, J. Hershberger, D.G. Kirkpatrick, and S. Suri. </author> <title> Computing the Intersection Depth of Polyhedra. </title> <journal> Algorithmica, </journal> <volume> 9 </volume> <pages> 518-533, </pages> <year> 1993. </year>
Reference-contexts: The cost of computing an explicit representation of F in a high-dimensional space is prohibitive. Instead, a PRM uses the implicit representation of F provided by dist, which only computes distances in R 2 or R 3 and admits several reasonably efficient implementations (e.g., <ref> [7, 8, 12, 18, 19, 20, 22, 25] </ref>). In this paper we often use simple illustrative examples of 2-D free spaces, which could easily be handled by other planning techniques. <p> Let t i be the shortest translation that L i must undergo before it touches an obstacle. The distance dist (q) is min 1=1 ft i g. As we mentioned in Section 2, a number of techniques have been proposed to implement dist <ref> [7, 8, 12, 18, 19, 20, 22, 25] </ref>. To be usable by new-roadmap, the function dist (q) should be extended to compute the (negated) penetra tion distance of the robot into the obstacles at configurations where q 62 F . <p> Let t i be the shortest translation that L i must undergo before it does not collide with any obstacle. The penetration distance dist (q) is max p i=1 ft i g. Techniques for computing this penetration distance are proposed in <ref> [6, 7, 17, 26] </ref> for convex polytopes and in [20] for nonconvex ones. Note that this distance does not correspond to any metric in C. Hence, allowing a penetration distance ffi of the robot into the obstacles does not result in a uniform dilatation of F .
Reference: [8] <author> E.G. Gilbert, D.W.Johhson, and S.S. </author> <month> Keerthi. </month>
Reference-contexts: The cost of computing an explicit representation of F in a high-dimensional space is prohibitive. Instead, a PRM uses the implicit representation of F provided by dist, which only computes distances in R 2 or R 3 and admits several reasonably efficient implementations (e.g., <ref> [7, 8, 12, 18, 19, 20, 22, 25] </ref>). In this paper we often use simple illustrative examples of 2-D free spaces, which could easily be handled by other planning techniques. <p> Let t i be the shortest translation that L i must undergo before it touches an obstacle. The distance dist (q) is min 1=1 ft i g. As we mentioned in Section 2, a number of techniques have been proposed to implement dist <ref> [7, 8, 12, 18, 19, 20, 22, 25] </ref>. To be usable by new-roadmap, the function dist (q) should be extended to compute the (negated) penetra tion distance of the robot into the obstacles at configurations where q 62 F .
References-found: 8

