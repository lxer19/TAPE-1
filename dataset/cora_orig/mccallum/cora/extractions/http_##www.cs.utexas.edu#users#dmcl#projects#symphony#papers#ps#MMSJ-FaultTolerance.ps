URL: http://www.cs.utexas.edu/users/dmcl/projects/symphony/papers/ps/MMSJ-FaultTolerance.ps
Refering-URL: http://www.cs.utexas.edu/users/dmcl/projects/symphony/results3.3.html
Root-URL: 
Title: Failure Recovery Algorithms for Multimedia Servers  
Author: Prashant J. Shenoy and Harrick M. Vin 
Keyword: Multimedia storage servers, redundant disk arrays, RAID, fault tolerance, video com pression algorithms  
Note: This research was supported in part by an IBM Faculty Development Award, Intel, the National Science Foundation (Research Initiation Award CCR-9409666 and CAREER award CCR-9624757), NASA,  
Address: Taylor Hall 2.124, Austin, Texas 78712-1188, USA  
Affiliation: Distributed Multimedia Computing Laboratory Department of Computer Sciences, University of Texas at Austin  Mitsubishi Electric Research Laboratories (MERL), and Sun Microsystems Inc.  
Email: E-mail: fshenoy,ving@cs.utexas.edu,  
Phone: Telephone: (512) 471-9732, Fax: (512) 471-8885  
Web: URL: http://www.cs.utexas.edu/users/dmcl  
Abstract: In this paper, we present two novel disk failure recovery methods that utilize the inherent characteristics of video streams for efficient recovery. Whereas the first method exploits the inherent redundancy in video streams (rather than error-correcting codes) to approximately reconstruct data stored on failed disks, the second method exploits the sequentiality of video playback to reduce the overhead of online failure recovery in conventional RAID arrays. For the former approach, we present loss-resilient versions of JPEG and MPEG compression algorithms. We present an Inherently Redundant Array of Disks (IRAD) architecture that combines these loss-resilient compression algorithms with techniques for efficient placement of video streams on disk arrays to ensure that on-the-fly recovery does not impose any additional load on the array. Together, they enhance the scalability of multimedia servers by: (1) integrating the recovery process with the decompression of video streams, and thereby distributing the reconstruction process across the clients; and (2) supporting graceful degradation in the quality of recovered images with increase in the number of disk failures. We present analytical and experimental results to show that both schemes significantly reduce the failure recovery overhead in a multimedia server. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S Berson, L Golubchik, and R R. Muntz. </author> <title> Fault Tolerant Design of Multimedia Servers. </title> <booktitle> In Proceedings of SIGMOD Conference, </booktitle> <pages> pages 364-375, </pages> <year> 1995. </year>
Reference-contexts: Furthermore, conventional workloads require good response times but no absolute guarantees, while multimedia workloads, due to their real-time nature, need bounded response times. Recently, several research groups have adapted conventional failure recovery techniques for multimedia servers <ref> [1, 8, 20, 28] </ref>. An admission control algorithm that reserves contingency disk bandwidth to accommodate load increases in the event of a disk failure in a declustered-parity-based multimedia server was presented in [23]. <p> Let us assume that the AC coefficients are numbered from left-to-right in a row-major order and that AC k B i denotes the k th AC coefficient (k 2 <ref> [1; n 2 1] </ref>) of block B i . The scrambling function f assigns AC k B i to be the k th coefficient of block B 0 j where j = (i + k) mod M . <p> Thus, if T denotes the duration of a round, then to ensure continuous playback, the number of images of streams S 1 ; S 2 ; :::; S n retrieved during each round is given by: f i = T fl R i ; 8i 2 <ref> [1; n] </ref>. To access f 1 ; f 2 ; :::; f n images, the server will be required to retrieve k 1 ; k 2 ; :::; k n media blocks, respectively, of streams S 1 ; S 2 ; :::; S n ;. <p> Thus, the overhead of failure recovery on these disks is 1=(C (G 1)). 3.3 Discussion Recently a scheme similar to the lazy recovery algorithm was proposed in <ref> [1] </ref>. In this scheme, on experiencing a disk failure, the cluster with a failed disk switches to the degraded mode with requests reading and buffering entire parity groups at a time. Thus, the entire cluster acts like a single logical disk.
Reference: [2] <author> D. Bitton and J. Gray. </author> <title> Disk Shadowing. </title> <booktitle> In Proceedings of the 14th Conference on Very Large Databases, </booktitle> <pages> pages 331-338, </pages> <year> 1988. </year>
Reference-contexts: Most of these approaches are based on the Redundant Array of Independent Disks (RAID) architecture [7, 24], which achieves fault tolerance either by mirroring or parity encoding. Mirroring (also referred to as RAID level 1) achieves fault tolerance by duplicating data on separate disks <ref> [2, 5, 9] </ref>. Many different mirroring techniques have been proposed: (1) mirrored declustering duplicates each disk onto another disk, (2) interleaved declustering uniformly distributes backup blocks of a disk amongst all the remaining disks, and (3) chained declustering stores backup blocks of disk i on disk i + 1.
Reference: [3] <author> T. C. Bressoud and F. B. Schneider. </author> <title> Hypervisor-based Fault Tolerance. </title> <booktitle> In Proceedings of the Fifteenth ACM Symposium on Operating System Principles, </booktitle> <address> Copper Mountain Resort, Colorado, </address> <pages> pages 1-11, </pages> <month> Decmember </month> <year> 1995. </year>
Reference-contexts: In this paper, we confine our focus to fault-tolerant designs for the I/O subsystem, and assume that existing fault-tolerant techniques will be used for other subsystems (for example, see <ref> [3, 13, 28] </ref>). Due to the immensity of sizes and the data rate requirements of multimedia objects, multimedia servers are founded on disk arrays. Disk arrays connect several disks together, and thereby extend the cost, power, and size advantages of small disks to high capacity configurations [4].
Reference: [4] <author> P. Cao, S. B. Lim, S. Venkatraman, and J. Wilkes. </author> <title> The TickerTAIP parallel RAID architecture. </title> <booktitle> In Proceedings of the 1993 International Symposium on Computer Architecture, </booktitle> <pages> pages 52-63, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Due to the immensity of sizes and the data rate requirements of multimedia objects, multimedia servers are founded on disk arrays. Disk arrays connect several disks together, and thereby extend the cost, power, and size advantages of small disks to high capacity configurations <ref> [4] </ref>. A fundamental tradeoff, though, is that large disk arrays are highly susceptible to disk failures [7]. To illustrate, although the mean time to failure for a single disk is 300,000 hours, an array of 1000 disks will experience a failure every 12 days. <p> Such techniques, however, can easily be extended to other data types such as images and animation sequences. 1.1 Relation to Previous Work Recently several research projects have investigated the design of fault-tolerant storage systems <ref> [4, 18, 33] </ref>. Most of these approaches are based on the Redundant Array of Independent Disks (RAID) architecture [7, 24], which achieves fault tolerance either by mirroring or parity encoding. Mirroring (also referred to as RAID level 1) achieves fault tolerance by duplicating data on separate disks [2, 5, 9].
Reference: [5] <author> M. S. Chen, H. I. Hsiao, C. S. Li, and P. S. Yu. </author> <title> Using Rotational Mirrored Declustering for Replica Placement in a Disk-array-based Video Server. </title> <booktitle> In Proceedings of the Third ACM Conference on Multimedia, </booktitle> <address> San Francisco, California, </address> <pages> pages 121-130, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: Most of these approaches are based on the Redundant Array of Independent Disks (RAID) architecture [7, 24], which achieves fault tolerance either by mirroring or parity encoding. Mirroring (also referred to as RAID level 1) achieves fault tolerance by duplicating data on separate disks <ref> [2, 5, 9] </ref>. Many different mirroring techniques have been proposed: (1) mirrored declustering duplicates each disk onto another disk, (2) interleaved declustering uniformly distributes backup blocks of a disk amongst all the remaining disks, and (3) chained declustering stores backup blocks of disk i on disk i + 1.
Reference: [6] <author> P. M. Chen and E. K. Lee. </author> <title> Striping in a RAID Level 5 Disk Array. </title> <booktitle> In Proceedings of the 1995 ACM SIGMETRICS Conference on Measurement and Modeling of Computer Systems, </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: Several approaches that address this limitation by trading storage capacity for reduced failure recovery overhead have been proposed. In the multiple RAID architecture, an array of D disks is partitioned into clusters of C disks (C D) with each cluster independently computing parity information <ref> [6, 7] </ref>. Whereas a standard RAID array can tolerate a single disk failure, such an architecture can tolerate a failure in each cluster without losing data.
Reference: [7] <author> P. M. Chen, E. K. Lee, G. A. Gibson, R. H. Katz, and D. A. Patterson. </author> <title> RAID: High-Performance, Reliable Secondary Storage. </title> <journal> ACM Computing Surveys, </journal> <pages> pages 145-185, </pages> <month> June </month> <year> 1994. </year> <month> 29 </month>
Reference-contexts: Disk arrays connect several disks together, and thereby extend the cost, power, and size advantages of small disks to high capacity configurations [4]. A fundamental tradeoff, though, is that large disk arrays are highly susceptible to disk failures <ref> [7] </ref>. To illustrate, although the mean time to failure for a single disk is 300,000 hours, an array of 1000 disks will experience a failure every 12 days. <p> Most of these approaches are based on the Redundant Array of Independent Disks (RAID) architecture <ref> [7, 24] </ref>, which achieves fault tolerance either by mirroring or parity encoding. Mirroring (also referred to as RAID level 1) achieves fault tolerance by duplicating data on separate disks [2, 5, 9]. <p> Several approaches that address this limitation by trading storage capacity for reduced failure recovery overhead have been proposed. In the multiple RAID architecture, an array of D disks is partitioned into clusters of C disks (C D) with each cluster independently computing parity information <ref> [6, 7] </ref>. Whereas a standard RAID array can tolerate a single disk failure, such an architecture can tolerate a failure in each cluster without losing data. <p> This is illustrated in Figure 1 (b) where G = 4 and C = D = 5. In summary, several techniques for designing fault-tolerant disk arrays have been recently proposed <ref> [7] </ref>. However, most of the analysis of these failure recovery schemes have presumed a conventional workload consisting of aperiodic reads and writes. In contrast, a multimedia workload is dominated by large reads and infrequent writes, which are periodic and sequential. <p> to data loss (MTTDL) for these architectures is given as M T T DL = D (C 1)M T T R where M T T F is the mean time to failure for an individual disk, and M T T R is the mean time to rebuild a failed disk <ref> [7] </ref>. To illustrate, consider an array of 32 disks and a cluster size of 8. If the M T T R of a disk is 2 hours and its M T T F is 300,000 hours, then the mean time to data loss for the array is about 23,000 years.
Reference: [8] <author> A. Cohen and W. A. Burkhard. </author> <title> Segmented Information Dispersal. </title> <type> Technical Report CS95-444, </type> <institution> Department of Computer Science, University of California, </institution> <address> San Diego, </address> <year> 1995. </year>
Reference-contexts: Furthermore, conventional workloads require good response times but no absolute guarantees, while multimedia workloads, due to their real-time nature, need bounded response times. Recently, several research groups have adapted conventional failure recovery techniques for multimedia servers <ref> [1, 8, 20, 28] </ref>. An admission control algorithm that reserves contingency disk bandwidth to accommodate load increases in the event of a disk failure in a declustered-parity-based multimedia server was presented in [23].
Reference: [9] <author> G. Copeland and T. Keller. </author> <title> A Comparison of High-Availability Media Recovery Techniques. </title> <booktitle> In Proceedings of the ACM Conference on Management of Data, </booktitle> <pages> pages 98-109, </pages> <year> 1989. </year>
Reference-contexts: Most of these approaches are based on the Redundant Array of Independent Disks (RAID) architecture [7, 24], which achieves fault tolerance either by mirroring or parity encoding. Mirroring (also referred to as RAID level 1) achieves fault tolerance by duplicating data on separate disks <ref> [2, 5, 9] </ref>. Many different mirroring techniques have been proposed: (1) mirrored declustering duplicates each disk onto another disk, (2) interleaved declustering uniformly distributes backup blocks of a disk amongst all the remaining disks, and (3) chained declustering stores backup blocks of disk i on disk i + 1.
Reference: [10] <author> J. M. Danskin, G. M. Davies, and X. Song. </author> <title> Fast Lossy Internet Image Transmission. </title> <booktitle> In Proceedings of the Third ACM Conference on Multimedia, </booktitle> <address> San Francisco, California, </address> <pages> pages 321-332, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: a failure recovery scheme that exploits 2 Observe that, to tolerate multiple disk failures, multiple copies of huffman tables and motion vectors would have to be maintained. 3 Several techniques have been proposed which scramble media streams prior to network transmission to enable approximate reconstruction in case of packet losses. <ref> [10, 26] </ref>.
Reference: [11] <author> D. Le Gall. </author> <title> MPEG: A video compression standard for multimedia applications. </title> <journal> Communications of the ACM, </journal> <volume> 34(4) </volume> <pages> 47-58, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: the LRJ algorithm can be mostly attributed to the need for replicating huffman tables and the reduced correlation of successive DC coefficients. 2.4 Loss-Resilient MPEG (LRM) Algorithm The MPEG compression standard exploits the large temporal and spatial redundancies present within an video stream to achieve a high degree of compression <ref> [11, 16] </ref>. MPEG supports three kinds of frames : (1) I frames (intra-coded without any reference to other frames), (2) P frames (predictively coded using an I or P frame), (3) B frames (bidirectionally interpolated from both the previous and the following I and/or P frame).
Reference: [12] <author> G Gibson and D Patterson. </author> <title> Designing Disk Arrays For High Data Reliability. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <pages> pages 4-27, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: A fundamental limitation of mirroring, however, is that it incurs a 100% storage space overhead. Parity encoding techniques, employed in RAID levels 3, 4, and 5, reduce this overhead by employing error correcting codes <ref> [12, 24] </ref>. In a disk array consisting of D disks, parity is computed by an exclusive-or operation over data stored across (D 1) disks, and is stored on another disk [13, 17, 24].
Reference: [13] <author> J. Gray, B. Horst, and M. Walker. </author> <title> Parity Striping of Disc Arrays: Low-Cost Reliable Storage with Acceptable Throughput. </title> <booktitle> In Proceedings of the 16th Very Large Data Bases Conference, </booktitle> <pages> pages 148-160, </pages> <year> 1990. </year>
Reference-contexts: In this paper, we confine our focus to fault-tolerant designs for the I/O subsystem, and assume that existing fault-tolerant techniques will be used for other subsystems (for example, see <ref> [3, 13, 28] </ref>). Due to the immensity of sizes and the data rate requirements of multimedia objects, multimedia servers are founded on disk arrays. Disk arrays connect several disks together, and thereby extend the cost, power, and size advantages of small disks to high capacity configurations [4]. <p> Parity encoding techniques, employed in RAID levels 3, 4, and 5, reduce this overhead by employing error correcting codes [12, 24]. In a disk array consisting of D disks, parity is computed by an exclusive-or operation over data stored across (D 1) disks, and is stored on another disk <ref> [13, 17, 24] </ref>. The parity block together with all the data blocks over which parity is computed are referred to as a parity group. In RAID level 3 or bit-interleaved parity, data is interleaved bit-wise over the data disks and a dedicated disk stores all parity information.
Reference: [14] <author> M. Holland and G. Gibson. </author> <title> Parity Declustering for Continuous Operation in Redundant Disk Arrays. </title> <booktitle> In Proceedings of the 5th International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS-V), </booktitle> <pages> pages 23-35, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: Hence, a fault-tolerant multimedia server must not only provide mechanisms to rapidly recover from a disk failure without losing data, but must also ensure that the recovery process operates without taking the system off-line and has minimal impact on system performance <ref> [14] </ref>. Since video is the most demanding data type (with respect to its data rate and real-time performance requirements), in this paper, we present failure recovery techniques tailored for video. <p> The declustered parity array (also referred to as clustered RAID) further reduces the overhead of failure recovery by constraining the number of blocks protected by parity to (G 1) instead of (C 1), G &lt; C <ref> [14, 19, 21] </ref>. By appropriately distributing the blocks of a parity group across the C disks in a cluster, such a policy ensures that the load on each surviving disk in a cluster increases only by (G 1)=(C 1) instead of (C 1)=(C 1) = 100% for read requests.
Reference: [15] <author> M. Holland, G. Gibson, and D. Siewiorek. </author> <title> Fast, On-line Recovery in Redundant Disk Arrays. </title> <booktitle> In Proceedings of the 23rd International Symposium on Fault Tolerant Computing, </booktitle> <pages> pages 422-431, </pages> <year> 1993. </year>
Reference-contexts: Thus, if the system load is balanced prior to a disk failure, the surviving disks would observe twice as many read requests in the presence of a failure, causing a 100% increase in the load <ref> [15] </ref>. Several approaches that address this limitation by trading storage capacity for reduced failure recovery overhead have been proposed. In the multiple RAID architecture, an array of D disks is partitioned into clusters of C disks (C D) with each cluster independently computing parity information [6, 7]. <p> Alternatively, if parity information is used to rebuild the contents of the failed disk, then on-line rebuild onto a spare disk can proceed simply by issuing low-priority read requests to access media blocks from each of the surviving disks <ref> [15] </ref>. Note that, the array controller still depends on the LRJ/LRM algorithms for online reconstruction of user requested images while the parity information is used for online rebuild of the failed disk.
Reference: [16] <author> International Organization for Standardization (ISO). </author> <title> Information technology Coding of moving pictures and associated audio for digital storage media upto 1,5 Mbits/s, International Standard IS 11172 (MPEG), </title> <year> 1992. </year>
Reference-contexts: the LRJ algorithm can be mostly attributed to the need for replicating huffman tables and the reduced correlation of successive DC coefficients. 2.4 Loss-Resilient MPEG (LRM) Algorithm The MPEG compression standard exploits the large temporal and spatial redundancies present within an video stream to achieve a high degree of compression <ref> [11, 16] </ref>. MPEG supports three kinds of frames : (1) I frames (intra-coded without any reference to other frames), (2) P frames (predictively coded using an I or P frame), (3) B frames (bidirectionally interpolated from both the previous and the following I and/or P frame).
Reference: [17] <author> E.K. Lee and R. Katz. </author> <title> Performance Consequences of Parity Placement in Disk Arrays. </title> <booktitle> In Proceedings of the International Conference on Architectural Support for Programming Languages and Operating Systems, </booktitle> <pages> pages 190-199, </pages> <year> 1991. </year>
Reference-contexts: Parity encoding techniques, employed in RAID levels 3, 4, and 5, reduce this overhead by employing error correcting codes [12, 24]. In a disk array consisting of D disks, parity is computed by an exclusive-or operation over data stored across (D 1) disks, and is stored on another disk <ref> [13, 17, 24] </ref>. The parity block together with all the data blocks over which parity is computed are referred to as a parity group. In RAID level 3 or bit-interleaved parity, data is interleaved bit-wise over the data disks and a dedicated disk stores all parity information.
Reference: [18] <author> J. Menon and J. Cortney. </author> <title> The Architecture of a Fault-Tolerant Cached RAID Controller. </title> <booktitle> In Proceedings of the 20th International Symposium on Computer Architecture, </booktitle> <pages> pages 76-86, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Such techniques, however, can easily be extended to other data types such as images and animation sequences. 1.1 Relation to Previous Work Recently several research projects have investigated the design of fault-tolerant storage systems <ref> [4, 18, 33] </ref>. Most of these approaches are based on the Redundant Array of Independent Disks (RAID) architecture [7, 24], which achieves fault tolerance either by mirroring or parity encoding. Mirroring (also referred to as RAID level 1) achieves fault tolerance by duplicating data on separate disks [2, 5, 9].
Reference: [19] <author> A. Merchant and P. S. Yu. </author> <title> Design and Modeling of Clustered RAID. </title> <booktitle> In Proceedings of the International Symposium on Fault Tolerant Computing, </booktitle> <pages> pages 140-149, </pages> <year> 1992. </year>
Reference-contexts: The declustered parity array (also referred to as clustered RAID) further reduces the overhead of failure recovery by constraining the number of blocks protected by parity to (G 1) instead of (C 1), G &lt; C <ref> [14, 19, 21] </ref>. By appropriately distributing the blocks of a parity group across the C disks in a cluster, such a policy ensures that the load on each surviving disk in a cluster increases only by (G 1)=(C 1) instead of (C 1)=(C 1) = 100% for read requests.
Reference: [20] <author> A. Mourad. </author> <title> Reliable Disk Striping in Video-On-Demand Servers. </title> <type> Technical report, </type> <institution> AT&T Bell Labs, </institution> <year> 1995. </year>
Reference-contexts: Furthermore, conventional workloads require good response times but no absolute guarantees, while multimedia workloads, due to their real-time nature, need bounded response times. Recently, several research groups have adapted conventional failure recovery techniques for multimedia servers <ref> [1, 8, 20, 28] </ref>. An admission control algorithm that reserves contingency disk bandwidth to accommodate load increases in the event of a disk failure in a declustered-parity-based multimedia server was presented in [23].
Reference: [21] <author> R. R. Muntz and J. C.S. Lui. </author> <title> Performance Analysis of Disk Arrays Under Failure. </title> <booktitle> In Proceedings of the 16th Conference on Very Large Databases, </booktitle> <pages> pages 162-173, </pages> <year> 1990. </year>
Reference-contexts: The declustered parity array (also referred to as clustered RAID) further reduces the overhead of failure recovery by constraining the number of blocks protected by parity to (G 1) instead of (C 1), G &lt; C <ref> [14, 19, 21] </ref>. By appropriately distributing the blocks of a parity group across the C disks in a cluster, such a policy ensures that the load on each surviving disk in a cluster increases only by (G 1)=(C 1) instead of (C 1)=(C 1) = 100% for read requests.
Reference: [22] <author> M. N. Nelson, M. Linton, and S. Owicki. </author> <title> A Highly Available, Scalable ITV System. </title> <booktitle> In Proceedings of the Fifteenth ACM Symposium on Operating System Principles, </booktitle> <address> Copper Mountain Resort, Colorado, </address> <pages> pages 54-67, </pages> <month> Decmember </month> <year> 1995. </year> <month> 30 </month>
Reference-contexts: While computer users are accustomed to software failures and operating system crashes, customers of interactive services are not likely to tolerate anything but rare unavailability of these services <ref> [22] </ref>. Consequently, multimedia servers must employ techniques to guarantee high availability of services. A truly fault-tolerant design will support redundancies in all the key components of the server, including the cpu, memory, I/O, and network subsystems, as well as the system software.
Reference: [23] <author> B. Ozden, R. Rastogi, P. J. Shenoy, and A. Silberschatz. </author> <title> Fault-tolerant Architectures for Continuous Media Servers. </title> <booktitle> In Proceedings of the ACM SIGMOD, </booktitle> <address> Montreal, Canada, </address> <month> June </month> <year> 1996. </year>
Reference-contexts: Recently, several research groups have adapted conventional failure recovery techniques for multimedia servers [1, 8, 20, 28]. An admission control algorithm that reserves contingency disk bandwidth to accommodate load increases in the event of a disk failure in a declustered-parity-based multimedia server was presented in <ref> [23] </ref>. Similarly, in the Streaming RAID server [29], a RAID level 3 array is adapted to exploit the periodic nature of video accesses for efficient data retrieval.
Reference: [24] <author> D. Patterson, G. Gibson, and R. Katz. </author> <title> A Case for Redundant Array of Inexpensive Disks (RAID). </title> <booktitle> ACM SIGMOD'88, </booktitle> <pages> pages 109-116, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: Most of these approaches are based on the Redundant Array of Independent Disks (RAID) architecture <ref> [7, 24] </ref>, which achieves fault tolerance either by mirroring or parity encoding. Mirroring (also referred to as RAID level 1) achieves fault tolerance by duplicating data on separate disks [2, 5, 9]. <p> A fundamental limitation of mirroring, however, is that it incurs a 100% storage space overhead. Parity encoding techniques, employed in RAID levels 3, 4, and 5, reduce this overhead by employing error correcting codes <ref> [12, 24] </ref>. In a disk array consisting of D disks, parity is computed by an exclusive-or operation over data stored across (D 1) disks, and is stored on another disk [13, 17, 24]. <p> Parity encoding techniques, employed in RAID levels 3, 4, and 5, reduce this overhead by employing error correcting codes [12, 24]. In a disk array consisting of D disks, parity is computed by an exclusive-or operation over data stored across (D 1) disks, and is stored on another disk <ref> [13, 17, 24] </ref>. The parity block together with all the data blocks over which parity is computed are referred to as a parity group. In RAID level 3 or bit-interleaved parity, data is interleaved bit-wise over the data disks and a dedicated disk stores all parity information.
Reference: [25] <author> W. B. Pennebaker and J. L. Mitchell. </author> <title> JPEG Still Image Data Compression Standard. </title> <publisher> Van Nostrand Reinhold, </publisher> <year> 1993. </year>
Reference-contexts: Within each block, the AC coefficients are quantized to remove high frequency components, scanned in a zig-zag manner to obtain an approximate ordering from lowest to highest frequency, and finally run length and entropy encoded. Figure 3 depicts the main steps involved in the JPEG compression algorithm <ref> [25] </ref>. The motion-JPEG algorithm applies the JPEG algorithm to a sequence of images yielding a compressed video stream. The Loss-Resilient JPEG (LRJ) algorithm is an enhancement of the JPEG compression standard, and uses the partitioning technique presented in the Section 2.2.
Reference: [26] <author> E. J. Posnak, S. P. Gallindo, A. P. Stephens, and H. M. Vin. </author> <title> Techniques for Resilient Transmission of JPEG Video Streams. </title> <booktitle> In Proceedings of Multimedia Computing and Networking, </booktitle> <address> San Jose, CA, </address> <month> February </month> <year> 1995. </year>
Reference-contexts: Since the images are partitioned in the pixel domain (i.e., prior to compression), we refer to the process as pre-compression partitioning. Although conceptually elegant, such pre-compression image partitioning techniques significantly reduce the correlation between the pixels assigned to the same sub-image, and hence adversely affect image compression efficiency <ref> [26, 31] </ref>. The resultant increase in the bit-rate requirement may impose a higher load on each disk even in the fault-free state, and thereby reduce the number of video streams that can be simultaneously retrieved from the server. <p> a failure recovery scheme that exploits 2 Observe that, to tolerate multiple disk failures, multiple copies of huffman tables and motion vectors would have to be maintained. 3 Several techniques have been proposed which scramble media streams prior to network transmission to enable approximate reconstruction in case of packet losses. <ref> [10, 26] </ref>.
Reference: [27] <author> R. Sahner and K. S. Trivedi. SHARPE: </author> <title> Symbolic Hierarchical Automated Reliability/Performance Evaluator, Introduction and Guide for Users. </title> <type> Technical report, </type> <institution> Department of Computer Science, Duke University, </institution> <month> September </month> <year> 1986. </year>
Reference-contexts: The mean time to shutdown can be either computed analytically using the theory of Markov chains [30], or computed numerically using tools such as SHARPE <ref> [27] </ref>. In the simplest case, where the array can tolerate two failures per cluster (i.e., i = 3), M T T S = M T T F 3 =[D (C 1)(C 2)M T T R 2 ].
Reference: [28] <author> R. Tewari, D. Dias, R. Mukherjee, and H. M. Vin. </author> <title> High Availability for Clustered Multimedia Servers. </title> <booktitle> In Proceedings of International Conference on Data Engineering,New Orleans, </booktitle> <month> February </month> <year> 1996. </year>
Reference-contexts: In this paper, we confine our focus to fault-tolerant designs for the I/O subsystem, and assume that existing fault-tolerant techniques will be used for other subsystems (for example, see <ref> [3, 13, 28] </ref>). Due to the immensity of sizes and the data rate requirements of multimedia objects, multimedia servers are founded on disk arrays. Disk arrays connect several disks together, and thereby extend the cost, power, and size advantages of small disks to high capacity configurations [4]. <p> Furthermore, conventional workloads require good response times but no absolute guarantees, while multimedia workloads, due to their real-time nature, need bounded response times. Recently, several research groups have adapted conventional failure recovery techniques for multimedia servers <ref> [1, 8, 20, 28] </ref>. An admission control algorithm that reserves contingency disk bandwidth to accommodate load increases in the event of a disk failure in a declustered-parity-based multimedia server was presented in [23].
Reference: [29] <author> F.A. Tobagi, J. Pang, R. Baird, and M. Gang. </author> <title> Streaming RAID: A Disk Storage System for Video and Audio Files. </title> <booktitle> In Proceedings of ACM Multimedia'93, </booktitle> <address> Anaheim, CA, </address> <pages> pages 393-400, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: An admission control algorithm that reserves contingency disk bandwidth to accommodate load increases in the event of a disk failure in a declustered-parity-based multimedia server was presented in [23]. Similarly, in the Streaming RAID server <ref> [29] </ref>, a RAID level 3 array is adapted to exploit the periodic nature of video accesses for efficient data retrieval.
Reference: [30] <author> K. S. Trivedi. </author> <title> Probability & Statistics With Reliability, Queuing, </title> <booktitle> And Computer Science Applications. </booktitle> <publisher> Prentice-Hall, Inc., </publisher> <year> 1982. </year>
Reference-contexts: Then the IRAD architecture that tolerates i 1 disk failures per cluster can be modeled as an i + 1 state Markov chain as shown in Figure 10. The mean time to shutdown can be either computed analytically using the theory of Markov chains <ref> [30] </ref>, or computed numerically using tools such as SHARPE [27]. In the simplest case, where the array can tolerate two failures per cluster (i.e., i = 3), M T T S = M T T F 3 =[D (C 1)(C 2)M T T R 2 ].
Reference: [31] <author> C.J. Turner and L.L. Peterson. </author> <title> Image Transfer: An End to End Design. </title> <booktitle> In Proceedings of ACM SIGCOMM'92, Baltimore, </booktitle> <pages> pages 258-268, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: Since the images are partitioned in the pixel domain (i.e., prior to compression), we refer to the process as pre-compression partitioning. Although conceptually elegant, such pre-compression image partitioning techniques significantly reduce the correlation between the pixels assigned to the same sub-image, and hence adversely affect image compression efficiency <ref> [26, 31] </ref>. The resultant increase in the bit-rate requirement may impose a higher load on each disk even in the fault-free state, and thereby reduce the number of video streams that can be simultaneously retrieved from the server.
Reference: [32] <author> H. M. Vin, P. J. Shenoy, and S. Rao. </author> <title> Efficient Failure Recovery in Multi-Disk Multimedia Servers. </title> <booktitle> In Proceedings of the 25th International Symposium on Fault Tolerant Computing Systems, </booktitle> <address> Pasadena, CA, </address> <pages> pages 12-21, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: Alternatively, consider a multimedia server that always computes parity over a sequence of (G 1) media blocks from the same video stream <ref> [32] </ref>. That is, all (G 1) media blocks within a parity group are successive blocks of the same video stream.

References-found: 32

