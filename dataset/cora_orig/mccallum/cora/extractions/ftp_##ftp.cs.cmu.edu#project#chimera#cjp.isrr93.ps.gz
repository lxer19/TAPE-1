URL: ftp://ftp.cs.cmu.edu/project/chimera/cjp.isrr93.ps.gz
Refering-URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/project/chimera/www/journal_pages/publications.html
Root-URL: 
Abstract: In this paper, we deal with two important issues in relation to modular reconfigurable manipulators, namely, the determination of the modular assembly configuration optimally suited to perform a specific task and the synthesis of fault tolerant systems. We present a numerical approach yielding an assembly configuration that satisfies four kinematic task requirements: reachability, joint limits, obstacle avoidance and measure of isotropy. Further, because fault tolerance is a must in critical missions that may involve high costs if the mission were to fail due to a failure in the manipulator system, we address the property of fault tolerance in more detail. Initially, no joint limits are considered, in which case we prove the existence of fault tolerant manipulators and develop an analysis tool to determine the fault tolerant work space. We also derive design templates for spatial fault tolerant manipulators. When joint limits are introduced, analytic solutions become infeasible but instead a numerical solution procedure can be used, as is illustrated through an example. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> V.P. Agrawal, V. Kohli, S. Gupta, </author> <title> Computer Aided Robot Selection: the Multiple Attribute Decision Making Approach, </title> <journal> International Journal of Production Research, </journal> <volume> Vol. 29, No. 8, </volume> <pages> pp. 16291644, </pages> <year> 1991. </year>
Reference-contexts: A straightforward extension of this selection process has been the inclusion of the design of new manipulators, optimally suited for a specific application <ref> [1, 24] </ref>. A totally different approach to the robot design problem finds its roots in simulation. A variety of commercial robot simulation packages are currently available [6, 30], providing designers with convenient tools to quickly check the implications of different design decisions.
Reference: [2] <author> W.K.F. Au, C.J.J. Paredis, P.K. Khosla, </author> <title> Kinematic Design of Fault Tolerant Manipulators, </title> <booktitle> in Proceedings of the Allerton Conference, </booktitle> <month> October 2, </month> <year> 1992, </year> <institution> Urbana-Champagne, Illinois. </institution>
Reference-contexts: The approach we propose in this paper differs from the methods listed above, because we are specifically interested in modular manipulators. The interest in modular manipulators has grown steadily over the last decade [9, 32], and several related research issues have been addressed <ref> [2, 3, 12, 18, 22, 26] </ref>. However, the problem of determining the modular configuration optimally suited for one specific task, has never been addressed before to the best of our knowledge. In this paper, we investigate modular design from kinematic task requirements. <p> These restrictions result from our implementation of the inverse kinematics and can be relaxed by using iterative solutions to the inverse kinematics problem, as proposed in <ref> [2] </ref>. Also, the requirement that the robot base be fixed and known, can be relaxed as was shown by Kim [15], who addressed the problem of kinematic synthesis and base position synthesis simultaneously. <p> To set the stage for our development, we define the following properties of fault tolerant manipulators <ref> [2] </ref>: #links ( ) 5 #joints ( ) 3 #jointsoftype0or1 ( ) 16 4 2 1 8 4.4 10 = #wrists ( ) #rel.orient.( ) 5 2700 link# angle# joint# 1 10 4 1 3 3 3 0 5 14 0 Table 1: Module numbers of 7-DOF design. dof 2 0.1
Reference: [3] <author> B. Benhabib, G. Zak, M.G. Lipton, </author> <title> A Generalized Kinematic Modeling Method for Modular Robots, </title> <journal> Journal of Robotic Systems, </journal> <volume> Vol. 6, No. 5, </volume> <pages> pp. 545571, </pages> <year> 1989. </year>
Reference-contexts: The approach we propose in this paper differs from the methods listed above, because we are specifically interested in modular manipulators. The interest in modular manipulators has grown steadily over the last decade [9, 32], and several related research issues have been addressed <ref> [2, 3, 12, 18, 22, 26] </ref>. However, the problem of determining the modular configuration optimally suited for one specific task, has never been addressed before to the best of our knowledge. In this paper, we investigate modular design from kinematic task requirements.
Reference: [4] <author> J.W. Burdick, </author> <title> Kinematic Analysis and Design of Redundant Robot Manipulators, </title> <institution> Stanford Computer Science Report no. STAN-CS-88-1207, </institution> <year> 1988. </year>
Reference-contexts: DOF manipulator. 4.2 Boundary of the Fault Tolerant Work Space In this section, we show that a boundary point of the FTWS is a critical value (A critical value is an end-effector position that can be reached in a singular configuration, i.e., that is the image of a critical point <ref> [4] </ref>). Consider a th order FT planar manipulator, . A boundary point, , of the FTWS has to be an element of the boundary of the work space of at least one ROD, , obtained by freezing joints of . <p> Figure 10 demonstrates that this property also holds for the 5-DOF spatial manipulator considered in this example. The critical value manifolds are computed using the algorithm described in <ref> [4] </ref> and are depicted in a solid line. The bold part of the critical value manifolds is the boundary of the FTWS. As a second example, consider an 8-DOF manipulator, with D-H parameters listed in Table 4.
Reference: [5] <author> J. Denavit, </author> <title> R.S. Hartenberg, A Kinematic Notation for 2k Lower-Pair Mechanisms Based on Matrices, </title> <journal> Journal of Applied Mechanics, </journal> <volume> Vol. 22, No. 2, </volume> <pages> pp. 215221, </pages> <month> June </month> <year> 1955. </year>
Reference: [6] <author> P. Fanghella, C. Gellatti, E. Giannotti, </author> <title> Computer-Aided Modeling and Simulation of Mechanisms and Manipulators, </title> <booktitle> Computer Aided Design, </booktitle> <volume> Vol. 21, No. 9, </volume> <pages> pp. 577583, </pages> <month> Nov. </month> <year> 1989. </year>
Reference-contexts: A straightforward extension of this selection process has been the inclusion of the design of new manipulators, optimally suited for a specific application [1, 24]. A totally different approach to the robot design problem finds its roots in simulation. A variety of commercial robot simulation packages are currently available <ref> [6, 30] </ref>, providing designers with convenient tools to quickly check the implications of different design decisions. In general, however, these simulation packages still require a human to make the design decisions.
Reference: [7] <author> R. Fletcher, C. Xu, </author> <title> Hybrid Methods for Nonlinear Least Squares, </title> <journal> IMA Journal of Numerical Analysis, </journal> <volume> Vol. 7, No. 3, </volume> <pages> pp. 371389, </pages> <month> July </month> <year> 1987. </year>
Reference-contexts: For this class of problems, the Newton-Raphson scheme (or Gauss-Newton algorithm) converges slowly and is outperformed by the BFGS algorithm (Broyden-Fletcher-Goldfarb-Shanno [8]). As shown by Fletcher and Xu <ref> [7] </ref>, W p j x j y j z j J j j j y j , , , , ,( )= -= min min P post taskpoints DH postures min max min P post [ ] j 1= taskpoints DH q j q i r max 0 q i q
Reference: [8] <author> R. Fletcher, </author> <title> Practical Methods of Optimization, Second Edition, </title> <publisher> John Wiley & Sons, </publisher> <address> New York, </address> <year> 1987. </year> <title> [9] .T. </title> <editor> Fukuda et al., </editor> <title> A Study on Dynamically Reconfigurable Robotic Systems. Assembling, Disassembling and Reconfiguration of Cellular Manipulator by Cooperation of Two Robot Manipulators, </title> <booktitle> in Proceedings of the IEEE/RSJ International Workshop on Intelligent Robots and Systems, IROS '91, </booktitle> <pages> pp. 11841189, </pages> <address> Osaka, Japan, Nov. 35, </address> <year> 1991. </year>
Reference-contexts: However, it is possible that a task point is outside the reach of the manipulator, in which case the minimization becomes a large residual problem. For this class of problems, the Newton-Raphson scheme (or Gauss-Newton algorithm) converges slowly and is outperformed by the BFGS algorithm (Broyden-Fletcher-Goldfarb-Shanno <ref> [8] </ref>).
Reference: [10] <author> B.A. Gardone, R.K. Ragade, IREX: </author> <title> An Expert System for the Selection of Industrial Robots and its Implementation in Two Environments, </title> <booktitle> Proceedings of the Third International Conference on Industrial and Engineering Applications of Artificial Intelligence and Expert Systems (IEA/AIE 90), </booktitle> <volume> Vol. 2, </volume> <pages> pp. 10861095, </pages> <address> Charleston, SC, USA, </address> <month> July 1518, </month> <year> 1990. </year> <note> ACM. </note>
Reference: [11] <author> A. Groch, L.M. Vidigal, </author> <title> S.W. Director, A New Global Optimization Method for Electronic Circuit Design, </title> <journal> IEEE Transactions on Circuits and Systems, </journal> <volume> Vol. 32, No. 2, </volume> <pages> pp. 160169, </pages> <month> February </month> <year> 1985. </year>
Reference: [12] <author> L. Kelmar, Pradeep K. Khosla, </author> <title> Automatic Generation of Forward and Inverse Kinematics for a Reconfigurable Modular Manipulator System, </title> <journal> Journal of Robotic Systems, </journal> <volume> Vol. 7, No. 4, </volume> <pages> pp. 599619, </pages> <year> 1990. </year>
Reference-contexts: The approach we propose in this paper differs from the methods listed above, because we are specifically interested in modular manipulators. The interest in modular manipulators has grown steadily over the last decade [9, 32], and several related research issues have been addressed <ref> [2, 3, 12, 18, 22, 26] </ref>. However, the problem of determining the modular configuration optimally suited for one specific task, has never been addressed before to the best of our knowledge. In this paper, we investigate modular design from kinematic task requirements. <p> It has been shown by Kelmar and Khosla <ref> [12] </ref> that this conversion can be achieved for modules of arbitrary geometry. The actual number of different modules considered for the design can be far larger than six, due to variations in the parametrized dimensions and our design method is general enough to allow for this.
Reference: [13] <author> P.K. Khosla, </author> <title> C.P. Neuman, F.B. Prinz, An Algorithm for Seam Tracking Applications, </title> <journal> The International Journal of Robotics Research, </journal> <volume> Vol. 4, No. 1, </volume> <pages> pp. 2741, </pages> <month> Spring </month> <year> 1985. </year>
Reference-contexts: A second part, penalizes the joint limit violations. This penalty is equal to . (13) The resulting minimization is thus a nonlinear least squares (NLLS) problem, and is commonly solved in robotics applications using a Newton-Raphson scheme <ref> [13] </ref> (cfr. numerical inverse kinematics literature). This scheme converges very quickly when the penalty at the optimum is zero, i.e., for a zero residual NLLS problem.
Reference: [14] <author> J.-O. Kim, P.K. Khosla, </author> <title> Dexterity Measures for Design and Control of Manipulators, </title> <booktitle> in Proceedings of IROS91: International Workshop on Intelligent Robots and Systems, </booktitle> <pages> pp. 758763, </pages> <address> Osaka, Japan, Nov. 35, </address> <year> 1991. </year>
Reference-contexts: The measure of isotropy, , is defined as <ref> [14] </ref>: , (14) with the number of Cartesian coordinates. For a singular Jacobian, is zero. Consequently, a minimization over leads to regions where the penalty is possibly positive.
Reference: [15] <author> J.-O. Kim, </author> <title> Task Based Kinematic Design of Robot Manipulators, </title> <type> Ph.D. thesis, Robotics Ph.D. </type> <institution> Program, Carnegie Mellon University, </institution> <address> Pittsburgh, PA, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: These restrictions result from our implementation of the inverse kinematics and can be relaxed by using iterative solutions to the inverse kinematics problem, as proposed in [2]. Also, the requirement that the robot base be fixed and known, can be relaxed as was shown by Kim <ref> [15] </ref>, who addressed the problem of kinematic synthesis and base position synthesis simultaneously. Finally, we would like to point out that this design problem can possibly have more than one solution.
Reference: [16] <author> S. Kirkpatrick, C.D. Gelatt Jr., </author> <title> M.P. Vecchi, Optimization by Simulated Annealing, </title> <journal> Science, </journal> <volume> Vol. 220, No. 4598, </volume> <pages> pp. 671680, </pages> <month> May </month> <year> 1983. </year>
Reference-contexts: This corresponds to a local minimum in optimization terminology. To overcome this inadequacy, we have to employ a search method that allows for local hill climbing, such as simulated annealing. Simulated annealing was first proposed by Kirkpatrick <ref> [16] </ref> as a combinatorial optimization algorithm.
Reference: [17] <author> D. Kohli, M.-S. Hsu, </author> <title> The Jacobian Analysis of Work--spaces of Mechanical Manipulators, </title> <journal> Mechanism and Machine Theory, </journal> <volume> Vol. 22, No. 3, </volume> <pages> pp. 265275, </pages> <year> 1987. </year>
Reference-contexts: The key observation is that when the desired point is outside the reach of the manipulator, the innermost minimization algorithm always gets stuck at the boundary of the work space of the manipulator, where the Jacobian matrix of the manipulator loses rank <ref> [17] </ref>. The measure of isotropy, , is defined as [14]: , (14) with the number of Cartesian coordinates. For a singular Jacobian, is zero. Consequently, a minimization over leads to regions where the penalty is possibly positive.
Reference: [18] <author> A. Krishnan, P.K. Khosla, </author> <title> A Methodology for Determining the Dynamic Configuration of a Reconfigurable Manipulator System, </title> <booktitle> in Proceedings of the 5th Annual Aerospace Applications of AI Conference, </booktitle> <address> Dayton, Ohio, </address> <month> October 2327 </month> <year> 1989, </year> <note> also in Proceedings of the 1990 ISMCR, </note> <institution> Houston, Texas, </institution> <month> June </month> <year> 1990. </year>
Reference-contexts: The approach we propose in this paper differs from the methods listed above, because we are specifically interested in modular manipulators. The interest in modular manipulators has grown steadily over the last decade [9, 32], and several related research issues have been addressed <ref> [2, 3, 12, 18, 22, 26] </ref>. However, the problem of determining the modular configuration optimally suited for one specific task, has never been addressed before to the best of our knowledge. In this paper, we investigate modular design from kinematic task requirements. <p> Examples of dynamic requirements are maximum payload, maximum joint velocities, and maximum joint accelerations. Just as task requirements can be classified as kinematic or dynamic requirements, the design procedure can also be split into two parts: kinematic design and dynamic design <ref> [18] </ref>. Kinematic design determines the kinematic structure of the manipulator, while dynamic design determines the dynamic configuration. However, the dynamic design may require a change in kinematic structure, and thus a few iterations may be necessary to find a manipulator that satisfies both kinematic and dynamic requirements. <p> L 1 L 1 L 2 ,( ) problem of determining the modular configuration, given some kinematic task specifications. The problem can be interpreted as a mapping from task specifications into constraints in the modular configuration space, as is shown in complexity of the task specifications. Krishnan <ref> [18] </ref>, therefore, suggested to solve the inverse problem first, namely, to analyze which task requirements are satisfied by a given modular configuration. This information is stored in lookup tables, which can then be used in a search procedure.
Reference: [19] <author> C.L. Lewis, A.A. Maciejewski, </author> <title> Dexterity Optimization of Kinematically Redundant Manipulators in the Presence of Joint Failures, </title> <note> to appear in Computers and Electrical Engineering, </note> <year> 1993. </year>
Reference-contexts: A numerical procedure is proposed which determines a modular assembly configuration that meets all the requirements. In the second part, we focus our attention on one additional requirement, namely, fault tolerance. Recently, fault tolerant (or failure tolerant) robotics has been the subject of several publications <ref> [19, 31] </ref>, in which different aspects of the problem are addressed. Visinsky et al. [31] propose a framework to include failure detection in fault tolerant robot systems. Lewis and Maciejewski [19], on the other hand, discuss the importance of the controller and the redundancy resolution. <p> Recently, fault tolerant (or failure tolerant) robotics has been the subject of several publications [19, 31], in which different aspects of the problem are addressed. Visinsky et al. [31] propose a framework to include failure detection in fault tolerant robot systems. Lewis and Maciejewski <ref> [19] </ref>, on the other hand, discuss the importance of the controller and the redundancy resolution. In this paper, the stress is on design of fault tolerant manipulators. We define fault tolerance as the ability to continue the performance of a task even after immobilization of a joint due to failure.
Reference: [20] <author> A.A. Maciejewski, </author> <title> Fault Tolerant Properties of Kinematically Redundant Manipulators, </title> <booktitle> in Proceedings of the 1990 IEEE International Conference on Robotics and Automation, </booktitle> <address> Cincinnati, </address> <publisher> Ohio, </publisher> <pages> pp. 638642, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: Fault Tolerant Work Space (FTWS): The fault tolerant work space of an -th order FT -DOF manipulator is the set of points reachable by all possi ble DOF reduced order derivatives. These definitions differ from the concept of fault tolerance as proposed Maciejewski <ref> [20] </ref>. Instead of attributing the property of fault tolerance to a manipulator, he quantifies a measure of fault tolerance for a manipulator posture and describes a technique to determine the optimal FT posture, based on the singular value decomposition of the Jacobian matrix.
Reference: [21] <author> S. Manoochehri, A.A. Seireg, </author> <title> A Computer-Based Methodology for the Form Synthesis and Optimal Design of Robot Manipulators, </title> <journal> Journal of Mechanical Design, </journal> <volume> Vol. 112, </volume> <pages> pp. 501508, </pages> <month> Dec. </month> <year> 1990. </year>
Reference-contexts: In general, however, these simulation packages still require a human to make the design decisions. Finally, a third way of dealing with the problem of robot design, has grown out of the field of mechanism design <ref> [21, 27] </ref>. Unlike the rule based expert systems, these programs are algorithmic in nature. Commonly, the design process is subdivided in two stages: form synthesis and dimensional synthesis.
Reference: [22] <author> S. Murthy, P.K. Khosla, S. Talukdar, </author> <title> Designing Manipulators From Task Requirements: An Asynchronous Team Approach, </title> <booktitle> in Proceedings of the 1st WWW Workshop on Multiple Distributed Robotic Systems, </booktitle> <address> July, 1993, Nagoya, Japan. </address>
Reference-contexts: The approach we propose in this paper differs from the methods listed above, because we are specifically interested in modular manipulators. The interest in modular manipulators has grown steadily over the last decade [9, 32], and several related research issues have been addressed <ref> [2, 3, 12, 18, 22, 26] </ref>. However, the problem of determining the modular configuration optimally suited for one specific task, has never been addressed before to the best of our knowledge. In this paper, we investigate modular design from kinematic task requirements.
Reference: [23] <author> O.F. Offodile, B.K. Lambert, R.A. Dudek, </author> <title> Development of a Computer Aided Robot Selection Procedure (CARSP), </title> <journal> International Journal of Production Research, </journal> <volume> Vol. 25, </volume> <pages> pp. 11091121, </pages> <year> 1987. </year>
Reference-contexts: In order to support the current practice of picking the best configuration amongst available robots, several expert systems have been built to aid the user or the applications development engineer <ref> [23] </ref>. A straightforward extension of this selection process has been the inclusion of the design of new manipulators, optimally suited for a specific application [1, 24]. A totally different approach to the robot design problem finds its roots in simulation.
Reference: [24] <author> O.F. Offodile, W.M. Marcy, S.L. Johnson, </author> <title> Knowledge Base Design for Flexible Assembly Robots, </title> <journal> International Journal of Production Research, </journal> <volume> Vol. 29, No. 2, </volume> <pages> pp. 317328, </pages> <year> 1991. </year>
Reference-contexts: A straightforward extension of this selection process has been the inclusion of the design of new manipulators, optimally suited for a specific application <ref> [1, 24] </ref>. A totally different approach to the robot design problem finds its roots in simulation. A variety of commercial robot simulation packages are currently available [6, 30], providing designers with convenient tools to quickly check the implications of different design decisions.
Reference: [25] <author> C.J.J. Paredis, </author> <title> An Approach for Mapping Kinematic Task Specifications into a Manipulator Design, M.S. </title> <type> Thesis, </type> <institution> Electrical and Computer Engineering Department, Carnegie Mellon University, </institution> <month> September </month> <year> 1990. </year>
Reference-contexts: Also, adding a new module requires that all the lookup tables be updated. A different approach is to first design a manipulator defined by a set of continuously varying D-H parameters, a point of the D-H configuration space, as proposed in <ref> [25] </ref>, and then transform this design into a modular configuration. The main problem here is the discretization of the continuous solution. As is known from integer programming, simply taking the discrete configuration nearest to the continuous solution might result in an infeasible solution. <p> The penalty for such a posture should be defined such that, if any single requirement is not satisfied, the penalty for the posture is positive. This can be achieved by defining a non-negative penalty for each task requirement, as described in <ref> [25] </ref>, and summing these penalties for a posture: (3) The task penalty is now defined as the minimum over all the posture penalties, so that it is zero when all the task requirements are satisfied for at least one posture: (4) Finally, the total penalty of a manipulator configuration is given
Reference: [26] <author> C.J.J. Paredis, P.K. Khosla, </author> <title> Kinematic Design of Serial Link Manipulators from Task Specifications, </title> <journal> The International Journal of Robotics Research, </journal> <volume> Vol. 12, No. 3, </volume> <pages> pp. 274287, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: The approach we propose in this paper differs from the methods listed above, because we are specifically interested in modular manipulators. The interest in modular manipulators has grown steadily over the last decade [9, 32], and several related research issues have been addressed <ref> [2, 3, 12, 18, 22, 26] </ref>. However, the problem of determining the modular configuration optimally suited for one specific task, has never been addressed before to the best of our knowledge. In this paper, we investigate modular design from kinematic task requirements.
Reference: [27] <author> V. Potkonjak, M Vukobratovic, </author> <title> Computer-Aided Design of Manipulation Robots via Multi-Parameter Optimization, </title> <journal> Mechanism and Machine Theory, </journal> <volume> Vol. 18, No. 6, </volume> <pages> pp. 431438, </pages> <year> 1983. </year>
Reference-contexts: In general, however, these simulation packages still require a human to make the design decisions. Finally, a third way of dealing with the problem of robot design, has grown out of the field of mechanism design <ref> [21, 27] </ref>. Unlike the rule based expert systems, these programs are algorithmic in nature. Commonly, the design process is subdivided in two stages: form synthesis and dimensional synthesis.
Reference: [28] <author> E. Rich, K. Knight, </author> <booktitle> Artificial Intelligence, Second Edition, McGraw-Hill series in artificial intelligence, </booktitle> <publisher> McGraw-Hill Inc., </publisher> <address> New York, </address> <year> 1989. </year>
Reference-contexts: This approach is usually referred to as a heuristic search technique <ref> [28] </ref>, because in general, it is impossible to compute the badness, or the distance to the nearest solution, exactly. The heuristic function only estimates this distance so that it is possible that, locally, the heuristic decreases even though the actual distance to a solution increases.
Reference: [29] <author> D.E. Schmitz, P.K. Khosla, T. Kanade, </author> <title> The CMU Reconfigurable Modular Manipulator System, </title> <booktitle> in Proceedings of the 19-th International Symposium and Exposition on Robots (ISIR), </booktitle> <address> Australia, </address> <year> 1988. </year> <month> ISIR. </month>
Reference-contexts: Our past work has addressed the development of the modules and the technology for the RMMS <ref> [29] </ref>. The RMMS has many potential applications in both hazardous and industrial environments. It puts forth the idea of designing a specific manipulator for a task and also the notion of the user writing device (or manipulator) independent code.
Reference: [30] <author> A.A. Tseng, </author> <title> Software for Robotic Simulation, </title> <booktitle> Advances in Engineering Software, </booktitle> <volume> Vol 11, No. 1, </volume> <pages> pp. 2636, </pages> <month> Jan. </month> <year> 1989. </year>
Reference-contexts: A straightforward extension of this selection process has been the inclusion of the design of new manipulators, optimally suited for a specific application [1, 24]. A totally different approach to the robot design problem finds its roots in simulation. A variety of commercial robot simulation packages are currently available <ref> [6, 30] </ref>, providing designers with convenient tools to quickly check the implications of different design decisions. In general, however, these simulation packages still require a human to make the design decisions.
Reference: [31] <author> M.L. Visinsky, I.D. Walker, and J.R. Cavallaro, </author> <title> Layered Dynamic Fault Detection and Tolerance for Robots, </title> <booktitle> in Proceedings of the 1993 IEEE International Conference on Robotics and Automation, Atlanta, Georgia, </booktitle> <pages> pp. 180-187, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: A numerical procedure is proposed which determines a modular assembly configuration that meets all the requirements. In the second part, we focus our attention on one additional requirement, namely, fault tolerance. Recently, fault tolerant (or failure tolerant) robotics has been the subject of several publications <ref> [19, 31] </ref>, in which different aspects of the problem are addressed. Visinsky et al. [31] propose a framework to include failure detection in fault tolerant robot systems. Lewis and Maciejewski [19], on the other hand, discuss the importance of the controller and the redundancy resolution. <p> In the second part, we focus our attention on one additional requirement, namely, fault tolerance. Recently, fault tolerant (or failure tolerant) robotics has been the subject of several publications [19, 31], in which different aspects of the problem are addressed. Visinsky et al. <ref> [31] </ref> propose a framework to include failure detection in fault tolerant robot systems. Lewis and Maciejewski [19], on the other hand, discuss the importance of the controller and the redundancy resolution. In this paper, the stress is on design of fault tolerant manipulators.
Reference: [32] <author> R.H. Weston, R. Harrison, A.H. Booth, P.R. Moore, </author> <title> Universal Machine Control System Primitives for Modular Distributed Manipulator Systems, </title> <journal> International Journal of Production Research, </journal> <volume> Vol. 27, No. 3, </volume> <pages> pp. 395410, </pages> <year> 1989. </year>
Reference-contexts: The approach we propose in this paper differs from the methods listed above, because we are specifically interested in modular manipulators. The interest in modular manipulators has grown steadily over the last decade <ref> [9, 32] </ref>, and several related research issues have been addressed [2, 3, 12, 18, 22, 26]. However, the problem of determining the modular configuration optimally suited for one specific task, has never been addressed before to the best of our knowledge.
Reference: [33] <author> E. Wu, M. Diftler, J. Hwang, J. Chladek, </author> <title> A Fault Tolerant Joint Drive System for the Space Shuttle Remote Manipulator System, </title> <booktitle> in Proceedings of the 1991 IEEE International Conference on Robotics and Automation, Sacramento, California, </booktitle> <pages> pp. 25042509, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: An obvious way to make this manipulator FT is to design every joint with a redundant actuator <ref> [33] </ref>, as is shown in FT manipulator were to fail, the redundant actuator could take over and the manipulator would still be functional.
Reference: [34] <author> A. Zilinskas, </author> <title> Optimization of One-Dimensional Multimodal Functions, Algorithm AS 133, </title> <journal> Applied Statistics, </journal> <volume> Vol. 23, </volume> <pages> pp. 367375, </pages> <year> 1978. </year>
Reference-contexts: As one can see in Figure 13, however, the measure of isotropy is a multimodal function of . Because there is only one optimization variable, an efficient global optimization algorithm, such as the algorithm developed by Zilinskas <ref> [34] </ref>, can be used. is a combination of a one-stage Bayesian algorithm and Brents local minimization resulting in smart global coverage and accurate local refinement.
References-found: 33

