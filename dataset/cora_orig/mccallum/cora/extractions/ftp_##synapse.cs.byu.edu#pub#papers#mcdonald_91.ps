URL: ftp://synapse.cs.byu.edu/pub/papers/mcdonald_91.ps
Refering-URL: ftp://synapse.cs.byu.edu/pub/papers/details.html
Root-URL: 
Title: A Connectionist Method for Adaptive Real-Time Network Routing  
Author: Kelly C. McDonald Tony R. Martinez Douglas M. Campbell 
Address: Provo, Utah 84602  
Affiliation: Department of Computer Science Brigham Young University,  
Note: In 4th International Symposium on Artificial Intelligence, pp. 371-377, 1991.  
Abstract: This paper proposes a connectionist mechanism to support adaptive real-time routing in computer networks. In particular, an Adaptive Self-Organizing Concurrent System (ASOCS) model is used as the basic network router. ASOCS are connectionist models which achieve learning and processing in a parallel and self-organizing fashion. By exploiting parallel processing the ASOCS network router addresses the increased speed and complexity in computer networks. By using the ASOCS adaptive learning paradigm, a network router can utilize more flexible routing algorithms. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Backes, F. </author> <year> (1988). </year> <title> Transparent Bridges for Interconnection of IEEE 802 LANS, </title> <journal> IEEE Network, </journal> <volume> 2, </volume> <pages> 5-9. </pages>
Reference-contexts: Inconsistencies cause routing loops and prevent reliable operation. A processing element that can 3 easily adapt to changes in the network would help alleviate human intervention for changes to the routing database. An address recognition technique has recently been used by bridges in local area networks <ref> (Backes, 1988) </ref> to address this need for adaptability. The bridge "learns" the location of stations by observing the source address as a data packet arrives. In this way a bridge creates its own routing database that describes the network topology. <p> As in the original learning bridge algorithm <ref> (Backes, 1988) </ref>, a router observes the source address in each incoming packet and remembers on which interface it arrived. If the address is later observed as a destination address, then the router forward the packet on the interface on which the address was earlier observed as a source address.
Reference: <author> Benhamou, E. </author> <year> (1988). </year> <title> Integrating Bridges and Routers in a Large Internetwork, </title> <journal> IEEE Network, </journal> <volume> 2, </volume> <pages> 65-71. </pages>
Reference: <author> Comer, D.E. </author> <year> (1988). </year> <title> Internetworking with TCP/IP: Principles, Protocols, and Architecture., </title> <publisher> Prentice-Hall, Inc., </publisher> <address> Englewood Cliffs, New Jersey. </address>
Reference-contexts: Currently, routers exchange this information through special protocols to synchronize their routing databases. International or National Backbones Regional or State Networks Local Networks The routing information for the current Internet consists of a large distributed database <ref> (Comer, 1988) </ref>. As the Internet grows, more human intervention is necessary to reflect network changes in the routing database. These changes increase in frequency as the network grows. Human error during updates are one of the major causes of inconsistencies in the routing database.
Reference: <author> Franceus, Paul. </author> <month> (18 May </month> <year> 1990). </year> <institution> University of Maryland, Discussion of FDDI attributes via electronic newsgroup. Intel Corporation Literature Dept. </institution> <year> (1988). </year> <title> Microsystem Components Handbook, </title> <publisher> Intel Corporation, </publisher> <address> Santa Clara, California. </address>
Reference-contexts: Thus, a packet must be saved in memory for more lengthy processing. The 100 megabit FDDI networks increase the theoretical packet limit of the network segment to over 400,000 packets per second <ref> (Franceus, 1990) </ref>. This means that minimum length packets can arrive at the router interface on an FDDI network every 6.4 microseconds. A 20 MHZ Intel 386 routing processor could only execute 15-20 instructions in that time (Intel, 1988).
Reference: <author> Martinez, T.R. </author> <year> (1986). </year> <title> Adaptive Self-Organizing Logic Networks, </title> <type> PhD Dissertation, </type> <institution> University of California Los Angeles, Los Angeles, California. </institution>
Reference-contexts: Typically, the time delay required to generate the output variable is O (log (n)), where n represents the number of nodes utilized to learn the instance set in the ASOCS system. The reader is referred to <ref> (Martinez, 1986) </ref> for an in-depth discussion of the origin of the instance set and the ASOCS model. 4.0 Network Routing with the Instance Set 5 lines 1 through line n. Routing operation is controlled by routing parameters that govern the retransmission of packets as they are received.
Reference: <author> Martinez, T.R. and Vidal, J.J. </author> <year> (1988). </year> <title> Adaptive Parallel Logic Networks, </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 5, </volume> <pages> 26-58. </pages>
Reference: <author> Martinez, T.R. </author> <year> (1990). </year> <title> Adaptive Self-Organizing Concurrent Systems, </title> <booktitle> Progress in Neural Networks, </booktitle> <volume> vol. 1, Ch. 5, </volume> <pages> 105-126. </pages>
Reference: <author> Martinez, T.R. and Campbell, D. M., </author> <year> (1991). </year> <title> A Self-Adjusting Dynamic Logic Module, </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 11, </volume> <pages> 303-313. </pages>
Reference: <author> Martinez, T. R. and Campbell, D. M., </author> <year> (1991). </year> <title> A Self-Organizing Binary Decision Tree for Incrementally Defined Rule Based Systems, </title> <journal> IEEE Transactions on System, Man, and Cybernetics, </journal> <volume> vol. 21. </volume> <publisher> Proteon Inc. </publisher> <year> (1989). </year> <title> OSPF: The New Dynamic Routing Protocol Standard, </title> <publisher> Techview. </publisher>
Reference: <author> Sincoskie, W.D. and Cotton, C.J. </author> <year> (1988). </year> <title> Extended Bridge Algorithms for Large Networks, </title> <journal> IEEE Network, </journal> <volume> 2, </volume> <pages> 16-23. </pages>
Reference-contexts: Such adaptive learning algorithms have not been applied outside local area network bridging because they are unable to deal with redundant paths between routers. An extension of the bridge learning algorithm for more diverse network topologies has been proposed <ref> (Sincoskie, 1988) </ref>. A network router is needed that can deal with complex routing or bridging algorithms. <p> The input variables of the ASOCS instance represent boolean routing parameters and the output variable represents eligibility for transmission on a given communication line. 4.1 Routing Rules as Instance Variables Sincoskie and Cotton <ref> (Sincoskie, 1988) </ref> have extended the learning bridge algorithm to networks with packet cycles or loops. As in the original learning bridge algorithm (Backes, 1988), a router observes the source address in each incoming packet and remembers on which interface it arrived. <p> During the execution mode, it takes an upper bound of O (log (n)) time to process an instance set, where n is the number of nodes used to represent the instance set. The following represents the algorithm to process each incoming packet with the traditional learning-bridge algorithm: <ref> (Sincoskie, 1988) </ref> loop do receive packet; add &lt;packet.source-addr,input_subnet&gt; to route-list; lookup &lt;packet.dest-addr,output subnet&gt; in route-list; if &lt;packet.dest-addr,*&gt; "is not element of" route-list then transmit packet on all subnetworks except input_subnet;- * else if output_subnet input_subnet then transmit packet on subnetwork output_subnet; end if end loop * (This step could utilize the
Reference: <author> Stallings, W. </author> <year> (1987). </year> <title> Local Networks, </title> <publisher> Macmillan Publishing Company, </publisher> <address> New York, New York. </address>
Reference-contexts: Wide area networks currently operate at speeds of one megabit per second, with recent availability of 45 megabits per second transmission rates. The wide bandwidth of optical fiber cabling promises gigabit transmission speeds in the future <ref> (Stallings, 1987) </ref>. Routers that operate with Ethernet networks switch packets at less than the theoretical 2 packet limit of 14,880 packets per second (Benhamou, 1984). This theoretical limit, for minimum size packets, means that a packet can arrive at the router interface every 51 microseconds.
Reference: <author> Tanenbaum, A.S. </author> <year> (1988). </year> <title> Computer Networks, </title> <publisher> Prentice-Hall, Inc., </publisher> <address> Englewood Cliffs, New Jersey. </address>
Reference-contexts: As little as ten years ago, much of data communications traffic utilized transmission rates below 10,000 bits per second <ref> (Tanenbaum, 1988) </ref>. Todays local area networks typically operate at 10 megabits per second (Ethernet), with 100 megabit per second equipment (FDDI) coming into widespread use. Wide area networks currently operate at speeds of one megabit per second, with recent availability of 45 megabits per second transmission rates.
References-found: 12

