URL: http://alumni.cse.ucsc.edu/~haluk/iccad97.ps
Refering-URL: http://alumni.cse.ucsc.edu/~haluk/publications.html
Root-URL: http://www.cse.ucsc.edu
Email: haluk konuk@hp.com  
Title: Fault Simulation of Interconnect Opens in Digital CMOS Circuits  
Author: Haluk Konuk 
Note: California Design Center-ICBD, Hewlett-Packard Company  
Abstract: We describe a highly accurate but efficient fault simulator for interconnect opens, based on characterizing the standard cell library with SPICE; using transistor charge equations for the site of the open; using logic simulation for the rest of the circuit; taking four different factors, that can affect the voltage of an open, into account; and considering the oscillation and sequential behavior potential of opens. A novel test technique based on controlling the die surface voltage is also described. We present simulation results of ISCAS85 layouts using stuck-at and IDDQ test sets. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C.F. Hawkins, J.M. Soden, A.W. Righter, and F.J. Fer-guson. </author> <title> Defect classes an overdue paradigm for CMOS IC testing. </title> <booktitle> In Proceedings of ITC, </booktitle> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: 1 Introduction Breaks are one of the common types of defects that occur during an IC manufacturing process <ref> [1] </ref>. Breaks fall into different categories depending on their location in a digital CMOS circuit. A break can occur inside a CMOS cell affecting transistor drain and source connections [2, 3, 4, 5]. A break can disconnect a single transistor gate from its driver [6, 7].
Reference: [2] <author> H. Konuk, F.J. Ferguson, and T. Larrabee. </author> <title> Charge-based fault simulation for CMOS network breaks. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <month> Dec. </month> <year> 1996. </year>
Reference-contexts: 1 Introduction Breaks are one of the common types of defects that occur during an IC manufacturing process [1]. Breaks fall into different categories depending on their location in a digital CMOS circuit. A break can occur inside a CMOS cell affecting transistor drain and source connections <ref> [2, 3, 4, 5] </ref>. A break can disconnect a single transistor gate from its driver [6, 7]. Yet another break can disconnect a set of logic-gate inputs from their drivers; thus causing the voltage of these inputs to float. <p> Values of transistor capacitances significantly vary depending on the transistor terminal voltages. For this reason, we use transistor gate charge equations expressed as functions of transistor terminal voltages <ref> [13, 2] </ref> and transistor geometry, rather than using fixed worst case capacitance values. Transistor geometries can be tightly controlled in today's CMOS processes, and transistor capacitances are much less affected by surrounding structures than wiring capacitances are. <p> All the MCNC cells used in the ISCAS85 circuit layouts satisfy this condition. We first determine the L0 th and L1 th values, which denote the maximum voltage that is still logic-0 and the minimum voltage that is still logic-1 for the cell library, respectively <ref> [2] </ref>, which we computed as 1.05V and 1.90V for the MCNC library using HP 0.6 HSPICE level-13 parameters from MOSIS. We define a composite input or a c-input for a cell as either a single cell input or multiple input ports of the same cell tied together. <p> This interpolation-based computation in Equation 1 is an efficient way of approximating the charge on a sensitized c-input with reasonable accuracy. For an unsensitized c-input ci, the charge on the gate of each transistor driven by ci is computed by using Equations 3 and 5 in <ref> [2] </ref>. These gate charges are added up to find Q eqn (ci; V F W ; vec) in Equation 1. <p> Transistor drain/source voltages are determined, when needed, using the algorithm described in <ref> [2] </ref>. With regard to computing Q wire , recall from Section 2.1 that our algorithm uses a range for each wiring capacitance due to the accuracy limitations of extraction tools.
Reference: [3] <author> C. Di and J.A.G. Jess. </author> <title> On accurate modeling and efficient simulation of CMOS opens. </title> <booktitle> In Proceedings of ITC, </booktitle> <year> 1993. </year>
Reference-contexts: 1 Introduction Breaks are one of the common types of defects that occur during an IC manufacturing process [1]. Breaks fall into different categories depending on their location in a digital CMOS circuit. A break can occur inside a CMOS cell affecting transistor drain and source connections <ref> [2, 3, 4, 5] </ref>. A break can disconnect a single transistor gate from its driver [6, 7]. Yet another break can disconnect a set of logic-gate inputs from their drivers; thus causing the voltage of these inputs to float.
Reference: [4] <author> M. Favalli, M. Dalpasso, P. Olivo, and B. Ricco. </author> <title> Modeling of broken connections faults in CMOS ICs. </title> <booktitle> In Proceedings of European Design and Test Conference, </booktitle> <year> 1994. </year>
Reference-contexts: 1 Introduction Breaks are one of the common types of defects that occur during an IC manufacturing process [1]. Breaks fall into different categories depending on their location in a digital CMOS circuit. A break can occur inside a CMOS cell affecting transistor drain and source connections <ref> [2, 3, 4, 5] </ref>. A break can disconnect a single transistor gate from its driver [6, 7]. Yet another break can disconnect a set of logic-gate inputs from their drivers; thus causing the voltage of these inputs to float.
Reference: [5] <author> W.M. Maly, P.K. Nag, and P. Nigh. </author> <title> Testing oriented analysis of CMOS ICs with opens. </title> <booktitle> In Proceedings of ICCAD, </booktitle> <year> 1988. </year>
Reference-contexts: 1 Introduction Breaks are one of the common types of defects that occur during an IC manufacturing process [1]. Breaks fall into different categories depending on their location in a digital CMOS circuit. A break can occur inside a CMOS cell affecting transistor drain and source connections <ref> [2, 3, 4, 5] </ref>. A break can disconnect a single transistor gate from its driver [6, 7]. Yet another break can disconnect a set of logic-gate inputs from their drivers; thus causing the voltage of these inputs to float.
Reference: [6] <author> V.H. Champac, A. Rubio, and J. Figueras. </author> <title> Electrical model of the floating gate defect in CMOS IC's: Implications on IDDQ testing. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <month> March </month> <year> 1994. </year>
Reference-contexts: Breaks fall into different categories depending on their location in a digital CMOS circuit. A break can occur inside a CMOS cell affecting transistor drain and source connections [2, 3, 4, 5]. A break can disconnect a single transistor gate from its driver <ref> [6, 7] </ref>. Yet another break can disconnect a set of logic-gate inputs from their drivers; thus causing the voltage of these inputs to float. In order for this to happen a break needs to occur in the interconnect wiring.
Reference: [7] <author> M. Renovell and G. Cambon. </author> <title> Electrical analysis and modeling of floating-gate fault. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <pages> pages 1450-58, </pages> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: Breaks fall into different categories depending on their location in a digital CMOS circuit. A break can occur inside a CMOS cell affecting transistor drain and source connections [2, 3, 4, 5]. A break can disconnect a single transistor gate from its driver <ref> [6, 7] </ref>. Yet another break can disconnect a set of logic-gate inputs from their drivers; thus causing the voltage of these inputs to float. In order for this to happen a break needs to occur in the interconnect wiring.
Reference: [8] <author> H. Xue, C. Di, and J.A.G. Jess. </author> <title> Probability analysis for CMOS floating gate faults. </title> <booktitle> In Proceedings of European Design and Test Conference, </booktitle> <year> 1994. </year>
Reference-contexts: In today's CMOS ICs with five or more metal layers, interconnect wiring seems to be the most likely place for a break to occur. This is well supported by the critical area analysis by Xue, et al. <ref> [8] </ref>. Also, vias are especially susceptible to breaks [9], and the number of vias is exceeding the number of transistors in some microprocessor designs [10]. We call the fault created by a break in the interconnect wiring an interconnect open.
Reference: [9] <author> D.B.I. Feltham and W. Maly. </author> <title> Physically realistic fault models for analog CMOS neural networks. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <month> Sep. </month> <year> 1991. </year>
Reference-contexts: In today's CMOS ICs with five or more metal layers, interconnect wiring seems to be the most likely place for a break to occur. This is well supported by the critical area analysis by Xue, et al. [8]. Also, vias are especially susceptible to breaks <ref> [9] </ref>, and the number of vias is exceeding the number of transistors in some microprocessor designs [10]. We call the fault created by a break in the interconnect wiring an interconnect open. <p> Besides, contacts are much more susceptible to opens than metal tracks are, according to the defect distribution statistics by Feltham and Maly <ref> [9] </ref>. Also, the increasing number of metal layers in IC processes tends to increase the number of vias per metal layer. In this work, each via, that produces a floating wire when broken, is considered to be a potential interconnect open defect site.
Reference: [10] <author> K.M. Thompson. </author> <title> Intel and the myths of test. In The Keynote Address of ITC, </title> <year> 1995. </year>
Reference-contexts: This is well supported by the critical area analysis by Xue, et al. [8]. Also, vias are especially susceptible to breaks [9], and the number of vias is exceeding the number of transistors in some microprocessor designs <ref> [10] </ref>. We call the fault created by a break in the interconnect wiring an interconnect open. In this paper, we describe a fault simulation algorithm for interconnect opens, that take into account all known factors affecting the voltage of a floating wire created by an interconnect open.
Reference: [11] <author> H. Konuk. </author> <title> Testing for opens in digital CMOS circuits. </title> <type> Ph.D. Thesis, </type> <institution> Computer Eng. Dept., UC Santa Cruz, </institution> <month> Dec. 96. </month>
Reference-contexts: The following subsections describe four such factors. Due to lack of space, we do not cover here how the effect of charge collector diodes can be handled, which is described in Chapter 4 in <ref> [11] </ref>. 2.1 Wiring Capacitances the total wiring capacitance from floating wire F W to the n-wells and to the V DD supply wires. C 6 is the total wiring capacitance from F W to the substrate and to the GND supply wires.
Reference: [12] <author> A.J. van Genderen and N.P. van der Meijs. </author> <title> Space3d Capacitance Extraction User's Manual. </title> <institution> Delft University of Technology, </institution> <year> 1997. </year>
Reference-contexts: For example; consider the capacitance between two parallel metal-2 wires A and B in Figure 2. Both wires are 0.9 by 60.0 separated by 0.9. Using a three-dimensional capacitance extraction program, called SPACE3D <ref> [12] </ref>, and wire height and silicon-dioxide thickness parameters for an HP 0.6 process, we obtained 3.45fF when there are no other wires in the surroundings, as shown in part (a) of Figure 2.
Reference: [13] <author> B.J. Sheu, W.-J. Hsu, and P.K. Ko. </author> <title> An MOS transistor charge model for VLSI design. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <pages> pages 520-527, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: Values of transistor capacitances significantly vary depending on the transistor terminal voltages. For this reason, we use transistor gate charge equations expressed as functions of transistor terminal voltages <ref> [13, 2] </ref> and transistor geometry, rather than using fixed worst case capacitance values. Transistor geometries can be tightly controlled in today's CMOS processes, and transistor capacitances are much less affected by surrounding structures than wiring capacitances are.
Reference: [14] <author> S. Johnson. </author> <title> Residual charge on the faulty floating gate MOS transistors. </title> <booktitle> In Proceedings of ITC, </booktitle> <month> October </month> <year> 1994. </year>
Reference-contexts: Transistor geometries can be tightly controlled in today's CMOS processes, and transistor capacitances are much less affected by surrounding structures than wiring capacitances are. Therefore, we do not use a value range for a transistor capacitance as we do for a wiring capacitance. 2.3 Trapped Charge Experiments by Johnson <ref> [14] </ref> and Konuk and Fergu-son [15] showed that the trapped charge deposited during fabrication can build up a voltage from -4.0V to 2.3V on floating gates with poly extensions, and -1.0V to 1.0V on floating gates connected to metal wires.
Reference: [15] <author> H. Konuk and F.J. Ferguson. </author> <title> An unexpected factor in testing for CMOS opens: The die surface. </title> <booktitle> In IEEE VLSI Test Symposium, </booktitle> <year> 1996. </year>
Reference-contexts: Therefore, we do not use a value range for a transistor capacitance as we do for a wiring capacitance. 2.3 Trapped Charge Experiments by Johnson [14] and Konuk and Fergu-son <ref> [15] </ref> showed that the trapped charge deposited during fabrication can build up a voltage from -4.0V to 2.3V on floating gates with poly extensions, and -1.0V to 1.0V on floating gates connected to metal wires. <p> We are not aware of any technique to predict the amount of trapped charge on a particular interconnect open. Therefore, our fault simulator makes no assumptions for the amount of the trapped charge. 2.4 The Die Surface Konuk and Ferguson <ref> [15] </ref> reported an experimental observation that the die surface acted as an RC interconnect, capacitively coupling the floating wire to almost all other signals in a chip. The die surface resistance for this phenomenon to occur is in the tera-Ohms range.
Reference: [16] <author> A.D. Singh, H. Rasheed, and W.W. Weber. </author> <title> IDDQ testing of CMOS opens: An experimental study. </title> <booktitle> In Proceedings of ITC, </booktitle> <year> 1995. </year>
Reference-contexts: Q L0;g;ci denotes the total electrical charge on the transistor gates that are driven by ci, when the voltage on ci is V L0;g;ci with g's output sensitized to ci. V L1;g;ci and Q L1;g;ci are similarly defined. For IDDQ testing <ref> [16] </ref>, a threshold current I ddq;th needs to be determined such that a quiescent power supply current larger than I ddq;th indicates a defective chip. V iddq0;g;ci denotes the logic-0 voltage on c-input ci such that I ddq;th flows through cell g.
Reference: [17] <author> J.A. Waicukauski, E.B. Eichelberger, D.O. Forlenza, E. Lindbloom, and Th. McCarthy. </author> <title> Fault simulation for structured VLSI. </title> <booktitle> In VLSI Systems Design, </booktitle> <month> Dec. </month> <year> 1985. </year>
Reference-contexts: The V iddq0 , V L0 , V L1 , and V iddq1 points are marked using I ddq;th = 50A. 4 Fault Simulation Algorithm The top level structure of our algorithm is as follows: FOREACH 32-vector DO FOREACH interconnect open DO Perform parallel pattern single fault propagation <ref> [17] </ref> after flipping the fault-free logic value on the floating wire. FOR vector 1 THROUGH 32 DO IF vector can detect the open THEN Compute the range of trapped charge for this vector to detect the open, and add this range to the detection ranges computed from previous vectors.
Reference: [18] <author> H. Konuk and F.J. Ferguson. </author> <title> Oscillation and sequential behavior caused by interconnect opens in digital CMOS circuits. </title> <booktitle> In Proceedings of ITC, </booktitle> <year> 1997. </year>
Reference-contexts: However, this is not always true due to the potential sequential behavior of interconnect opens, due to feedback capacitive coupling, as described by Konuk and Ferguson <ref> [18] </ref>. For this reason, we re-compute the trapped charge by using V L0;F W;vec with still vec applied to the circuit, but this time with logic-1 on F W propagated to all circuit nodes that are sensitized to F W . We call this computed charge Q 1 . <p> In other words, the detection range for vector vec is (1, Q trapped;max;sa0 ). In addition to sequential behavior, an interconnect open can also oscillate under certain conditions <ref> [18] </ref>. The way we compute Q trapped;max;sa0 guarantees that neither sequential behavior nor oscillation can invalidate our results. 4.2 Current sensing (IDDQ detection) For IDDQ detection, we first check whether the given vector vec and a logic-0 on F W create any sensitized c-input driven by F W . <p> Then, the IDDQ detection range for vec is (Q trapped;min;iddq0 , Q trapped;max;iddq1 ). Oscillation <ref> [18] </ref> is possible within this detection range; however, we assume that if oscillation occurs, it will draw sufficient IDDQ current so that the open will still be detected.
Reference: [19] <author> A. Jee and F.J. Ferguson. Carafe: </author> <title> An inductive fault analysis tool for CMOS VLSI circuits. </title> <booktitle> In Proceedings of the IEEE VLSI Test Symposium, </booktitle> <year> 1993. </year>
Reference-contexts: Since we consider each via (the contact between metal 1 and 2) as an interconnect open site, we process each layout with a program that is an extended version of Carafe <ref> [19] </ref> to analyze each via to find out whether a floating wire is created if the via is broken. The program removes each via, that can create a floating wire, from the layout, and labels the wire pieces in a systematic fashion.
Reference: [20] <author> T. Larrabee. </author> <title> Test pattern generation using Boolean satis-fiability. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <month> January </month> <year> 1992. </year>
Reference-contexts: The numbers of breaks corresponding to these vias are listed in the first column of Table 1. The remaining via-breaks are considered to create "long" floating wires (l-F W ), and are listed in the second column. The IDDQ and stuck-at vectors are generated by Nemesis <ref> [20] </ref>. The pseudo-stuck-at fault model is used for IDDQ ATPG.
References-found: 20

