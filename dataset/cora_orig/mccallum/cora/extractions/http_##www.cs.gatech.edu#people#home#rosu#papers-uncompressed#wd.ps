URL: http://www.cs.gatech.edu/people/home/rosu/papers-uncompressed/wd.ps
Refering-URL: http://www.cs.gatech.edu/people/home/rosu/cv/cv.html
Root-URL: 
Email: rosu@cc.gatech.edu  
Title: An Optimal Early-Stopping TRB Protocol for General-Omission Failures  
Author: Marcel-Catalin Ro~su 
Address: 1  
Affiliation: College of Computing, Georgia Institute of Technology  
Abstract: This paper introduces an early-stopping Terminating Reliable Broadcast (TRB) protocol for the round-based model of synchronous computation in the presence of general-omission failures. The most interesting characteristic of this protocol is the stopping time: all running processes decide and halt by the second consecutive failure-free round. In contrast to existing early-stopping TRB protocols for the same computation and failure models, this protocol does not assume an upper bound on the number of faulty processes in the system. The worst-case round complexity of the protocol is optimal.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Berman, J. Garay, and K. Perry, </author> <title> "Towards Optimal Distributed Consensus", </title> <booktitle> In Proc. 30th Annual IEEE Symposium on Foundations of Computer Science 1989, </booktitle> <pages> 410-415. </pages>
Reference-contexts: In our protocol a processor delivers and halts in the second consecutive failure-free round irrespective of how many failures occur previously. Also, we don't assume an upper bound on the number of faulty processes in the system. Several interesting techniques were developed <ref> [1, 11, 17] </ref> for solving the Byzantine Agreement [15] problem.
Reference: [2] <author> D. Dolev and R. </author> <title> Strong, "Requirements for Agreement in a Distributed System", </title> <editor> In H. J. Schneider, editor, </editor> <booktitle> Distributed Data Bases, </booktitle> <pages> 115-129, </pages> <publisher> North-Holland, </publisher> <year> 1982. </year>
Reference-contexts: The number of messages used by the protocol can be reduced by having a process communicate only with the nodes in its lcn (M T ) set. 5 Previous Work Many of the previously published papers on early-stopping protocols <ref> [2, 3, 6, 7] </ref> report worst-case round complexities in terms of both tolerated and actual number of failures, or consider simpler failure models. In our protocol a processor delivers and halts in the second consecutive failure-free round irrespective of how many failures occur previously.
Reference: [3] <author> D. Dolev, R. Reischuk, and R. </author> <title> Strong, "'Eventual' is Earlier than 'Immediate"', </title> <booktitle> In Proc. of the 23th FOCS, </booktitle> <year> 1982, </year> <pages> 196-203. </pages>
Reference-contexts: The number of messages used by the protocol can be reduced by having a process communicate only with the nodes in its lcn (M T ) set. 5 Previous Work Many of the previously published papers on early-stopping protocols <ref> [2, 3, 6, 7] </ref> report worst-case round complexities in terms of both tolerated and actual number of failures, or consider simpler failure models. In our protocol a processor delivers and halts in the second consecutive failure-free round irrespective of how many failures occur previously.
Reference: [4] <author> C. Dwork and Y. Moses, </author> <title> "Knowledge and Common Knowledge in a Byzantine Environment: Crash Failures", </title> <booktitle> In Information and Computation 88, </booktitle> <pages> 156-186, </pages> <year> 1990. </year>
Reference-contexts: Our work proves that, when processors don't exhibit arbitrary failures, no such bound is necessary to develop a fast-stopping TRB protocol. The application of knowledge theory [5] in distributed computing led to many interesting results related to the topic of this paper <ref> [4, 8, 9, 12, 10, 14] </ref>. From a knowledge theory perspective, we extended the concept of clean rounds [4] to systems with general-omission failures and consider a weaker condition for cleanness, as a locally clean round provides as much knowledge as a systemwide clean one. <p> The application of knowledge theory [5] in distributed computing led to many interesting results related to the topic of this paper [4, 8, 9, 12, 10, 14]. From a knowledge theory perspective, we extended the concept of clean rounds <ref> [4] </ref> to systems with general-omission failures and consider a weaker condition for cleanness, as a locally clean round provides as much knowledge as a systemwide clean one.
Reference: [5] <author> R. Fagin, J. Halpern, Y. Moses, and M. Vardi, </author> <title> "Reasoning about knowledge", </title> <publisher> The MIT Press, </publisher> <year> 1995. </year>
Reference-contexts: Our work proves that, when processors don't exhibit arbitrary failures, no such bound is necessary to develop a fast-stopping TRB protocol. The application of knowledge theory <ref> [5] </ref> in distributed computing led to many interesting results related to the topic of this paper [4, 8, 9, 12, 10, 14].
Reference: [6] <author> V. Hadzilacos, </author> <title> "Byzantine Agreement under Restricted Types of Failures", </title> <institution> Harvard University Technical Report TR-19-83. </institution>
Reference-contexts: The number of messages used by the protocol can be reduced by having a process communicate only with the nodes in its lcn (M T ) set. 5 Previous Work Many of the previously published papers on early-stopping protocols <ref> [2, 3, 6, 7] </ref> report worst-case round complexities in terms of both tolerated and actual number of failures, or consider simpler failure models. In our protocol a processor delivers and halts in the second consecutive failure-free round irrespective of how many failures occur previously.
Reference: [7] <author> V. Hadzilacos, </author> <title> "A Lower Bound for Byzantine Agreement with Fail-Stop Processors", </title> <institution> Harvard University Technical Report TR-21-83. </institution>
Reference-contexts: The number of messages used by the protocol can be reduced by having a process communicate only with the nodes in its lcn (M T ) set. 5 Previous Work Many of the previously published papers on early-stopping protocols <ref> [2, 3, 6, 7] </ref> report worst-case round complexities in terms of both tolerated and actual number of failures, or consider simpler failure models. In our protocol a processor delivers and halts in the second consecutive failure-free round irrespective of how many failures occur previously.
Reference: [8] <author> J. Halpern, Y. Moses, and O. Waarts, </author> <title> "A Characterization of Eventual Byzantine Agreement", </title> <booktitle> In Proc. of the 9th PODC, </booktitle> <pages> 333-346, </pages> <year> 1990. </year>
Reference-contexts: Our work proves that, when processors don't exhibit arbitrary failures, no such bound is necessary to develop a fast-stopping TRB protocol. The application of knowledge theory [5] in distributed computing led to many interesting results related to the topic of this paper <ref> [4, 8, 9, 12, 10, 14] </ref>. From a knowledge theory perspective, we extended the concept of clean rounds [4] to systems with general-omission failures and consider a weaker condition for cleanness, as a locally clean round provides as much knowledge as a systemwide clean one.
Reference: [9] <author> S. Katz and G. Taubenfeld, </author> <title> "What Processes Know: Definitions and Proof Methods", </title> <booktitle> In In Proc. of the 5th PODC, </booktitle> <pages> 249-262, </pages> <year> 1986. </year>
Reference-contexts: Our work proves that, when processors don't exhibit arbitrary failures, no such bound is necessary to develop a fast-stopping TRB protocol. The application of knowledge theory [5] in distributed computing led to many interesting results related to the topic of this paper <ref> [4, 8, 9, 12, 10, 14] </ref>. From a knowledge theory perspective, we extended the concept of clean rounds [4] to systems with general-omission failures and consider a weaker condition for cleanness, as a locally clean round provides as much knowledge as a systemwide clean one.
Reference: [10] <author> Y. Moses and O. Kislev, </author> <title> "Knowledge-Oriented Programming", </title> <booktitle> In In Proc. of the 12th PODC, </booktitle> <pages> 261-270, </pages> <year> 1993. </year>
Reference-contexts: Our work proves that, when processors don't exhibit arbitrary failures, no such bound is necessary to develop a fast-stopping TRB protocol. The application of knowledge theory [5] in distributed computing led to many interesting results related to the topic of this paper <ref> [4, 8, 9, 12, 10, 14] </ref>. From a knowledge theory perspective, we extended the concept of clean rounds [4] to systems with general-omission failures and consider a weaker condition for cleanness, as a locally clean round provides as much knowledge as a systemwide clean one.
Reference: [11] <author> Y. Moses and O. Waarts, </author> <title> "Coordinated Traversal: (t+1)-Round Byzantine Agreement in Polynomial Time", </title> <booktitle> In Proc. 29th Annual IEEE Symposium on Foundations of Computer Science 1988, </booktitle> <pages> 246-255. </pages>
Reference-contexts: In our protocol a processor delivers and halts in the second consecutive failure-free round irrespective of how many failures occur previously. Also, we don't assume an upper bound on the number of faulty processes in the system. Several interesting techniques were developed <ref> [1, 11, 17] </ref> for solving the Byzantine Agreement [15] problem.
Reference: [12] <author> Y. Moses and M. Tuttle, </author> <title> "Programming Simultaneous Actions using Common Knowledge", </title> <booktitle> In Algorithmica 3, </booktitle> <pages> 121-169, </pages> <year> 1988. </year>
Reference-contexts: Our work proves that, when processors don't exhibit arbitrary failures, no such bound is necessary to develop a fast-stopping TRB protocol. The application of knowledge theory [5] in distributed computing led to many interesting results related to the topic of this paper <ref> [4, 8, 9, 12, 10, 14] </ref>. From a knowledge theory perspective, we extended the concept of clean rounds [4] to systems with general-omission failures and consider a weaker condition for cleanness, as a locally clean round provides as much knowledge as a systemwide clean one.
Reference: [13] <author> G. Neiger and S. Toueg, </author> <title> "Simulating Synchronized Clocks and Common Knowledge in Distributed Systems", </title> <journal> In Journal of the Association of Computing Machinery, </journal> <volume> Vol. 40, No. 3, </volume> <month> April </month> <year> 1993, </year> <pages> 334-367. 15 </pages>
Reference: [14] <author> G. Neiger and R. Bazzi, </author> <title> "Using Knowledge to Optimally Achieve Coordination in Distributed Systems", </title> <booktitle> In Proc. of the 4th Conference on Theoretical Aspects of Reasoning about Knowledge. </booktitle>
Reference-contexts: Our work proves that, when processors don't exhibit arbitrary failures, no such bound is necessary to develop a fast-stopping TRB protocol. The application of knowledge theory [5] in distributed computing led to many interesting results related to the topic of this paper <ref> [4, 8, 9, 12, 10, 14] </ref>. From a knowledge theory perspective, we extended the concept of clean rounds [4] to systems with general-omission failures and consider a weaker condition for cleanness, as a locally clean round provides as much knowledge as a systemwide clean one.
Reference: [15] <author> M. Pease, R. Shostak, and L. Lamport, </author> <title> "Reaching agreement in the presence of faults", </title> <journal> In Journal of the Association of Computing Machinery, </journal> <volume> Vol. 27, No. 2, </volume> <month> April </month> <year> 1980, </year> <pages> 228-234. </pages>
Reference-contexts: Also, we don't assume an upper bound on the number of faulty processes in the system. Several interesting techniques were developed [1, 11, 17] for solving the Byzantine Agreement <ref> [15] </ref> problem. With such techniques, one can derive a TRB protocol for the failure model considered in this paper and with stopping time similar to ours but it will require the a priori knowledge of the upper bound on the number of faulty processes.
Reference: [16] <author> K. Perry and S. Toueg, </author> <title> "Distributed Agreement in the Presence of Processor and Communication Faults", </title> <journal> In IEEE Transactions on Software Engineering, </journal> <volume> Vol. SE-12, No. 3, </volume> <month> March </month> <year> 1986, </year> <pages> 477-482. </pages>
Reference-contexts: In each round, a process sends messages, then it receives messages and modifies its local state. All the messages sent in a round are received in the same round. Processes communicate only by message passing via point-to-point reliable channels. In the general-omission failure model <ref> [16] </ref>, a faulty process crashes (i.e. stops before normal termination and remains stopped (stopping is undetectable by the other processes in the system), or it intermittently omits to receive or to send messages. A process is called correct if it is not faulty.
Reference: [17] <author> A. Zamsky, A. Israeli, and S. Pinter, </author> <title> "Optimal time Byzantine Agreement for t &lt; n=8 with linear-messages", </title> <booktitle> In Distributed Computing, </booktitle> <month> October </month> <year> 1995, </year> <pages> 95-108. 16 </pages>
Reference-contexts: In our protocol a processor delivers and halts in the second consecutive failure-free round irrespective of how many failures occur previously. Also, we don't assume an upper bound on the number of faulty processes in the system. Several interesting techniques were developed <ref> [1, 11, 17] </ref> for solving the Byzantine Agreement [15] problem.
References-found: 17

