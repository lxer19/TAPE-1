URL: http://www-icparc.doc.ic.ac.uk/papers/a_planning_architecture_using_temporal_c.ps
Refering-URL: http://www-icparc.doc.ic.ac.uk/papers.html
Root-URL: 
Title: A Planning Architecture using Temporal Constraint Solving  
Author: Jonathan Lever Barry Richards 
Address: London SW7 2AZ England  
Affiliation: IC-Parc, Imperial College, 180 Queen's Gate,  
Date: 12 January 1993  
Abstract: In this report we describe a generic planning architecture developed in the context of Constraint Logic Programming. Constraint-solving is used to handle both temporal and non-temporal reasoning tasks that arise in planning. The architecture allows considerable sophistication in problem specification, and naturally produces plans with a high degree of concurrency in action execution. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Allen. </author> <title> Maintaining knowledge about temporal intervals. </title> <journal> Communications of the ACM, </journal> <volume> 11(26) </volume> <pages> 832-843, </pages> <year> 1983. </year>
Reference-contexts: In <ref> [1] </ref>, Allen defined an algorithm that renders an interval network path consistent, and this algorithm has been used as the basic temporal inference engine of an interval-based planning strategy developed by Allen and Koomen [3]. However, the algorithm runs on a completely connected interval network.
Reference: [2] <author> J. Allen. </author> <title> Towards a general theory of action and time. </title> <journal> Artificial Intelligence, </journal> <volume> 23:123, </volume> <year> 1984. </year>
Reference-contexts: operation is likely to be has yet to be determined. 5.2 The Interval Network The interval network is composed of constraints of the form: -[x,y] [z,w] where R is a domain variable whose domain is a subset of the set of 13 possible relations between intervals specified by Allen in <ref> [2] </ref>: fbefore, after, meets, met by, starts, started by, finishes, finished by, overlaps, overlapped by, during, contains, equalsg D4.1.2 Version 1 Page 31 ESPRIT CONSTRAINT HANDLING IN COMMERCIAL EP5291 INDUSTRY AND COMMERCE IN CONFIDENCE The domain of R consists of the possible interval relations between [x,y] and [z,w].
Reference: [3] <author> J. Allen and J. Koomen. </author> <title> Planning using a temporal world model. </title> <booktitle> In Proceedings of the 2nd IJCAI, </booktitle> <address> Karlsruhe, </address> <year> 1983. </year>
Reference-contexts: In [1], Allen defined an algorithm that renders an interval network path consistent, and this algorithm has been used as the basic temporal inference engine of an interval-based planning strategy developed by Allen and Koomen <ref> [3] </ref>. However, the algorithm runs on a completely connected interval network. Completing the interval network introduces a very significant overhead into the planning process as the number of constraints in a complete network of n nodes is of the order of n 2 . <p> Thus in a planning problem in which, say, 20 properties or actions are involved in interval constraints, the interval network will contain in the region of 400 nodes. In an implementation of the planning strategy defined in <ref> [3] </ref> the interval reasoning component proved to be a major bottleneck [9]. Attempts to carve up the interval network into more manageable portions [11] did not improve matters to any great extent.
Reference: [4] <author> D. Chapman. </author> <title> Planning for conjunctive goals. </title> <journal> Artificial Intelligence, </journal> <volume> 32 </volume> <pages> 333-377, </pages> <year> 1987. </year>
Reference-contexts: Another treatment of conflict resolution as a constraint-satisfaction problem in the context of a different planning architecture|Chapman's TWEAK system <ref> [4] </ref>| has recently appeared [26]. Finally, we discuss the ask operation as it applies to interval constraints.
Reference: [5] <author> H. Choi and E. B. Richards. </author> <title> A planning architecture for parallel action execution. </title> <type> Technical report, </type> <institution> Planning Group, Imperial College, </institution> <month> September </month> <year> 1992. </year> <note> Submitted to IJCAI-93. </note>
Reference: [6] <author> K. Currie and A. Tate. O-plan: </author> <title> control in the open planning architecture. </title> <booktitle> In Proc. of the BCS Expert Systems 85 Conf., Warwick, 1985. </booktitle> <publisher> Cambridge University Press. </publisher>
Reference: [7] <author> R. Dechter, I. Meiri, and J. Pearl. </author> <title> Temporal constraint networks. </title> <journal> Artificial Intelligence, </journal> <volume> 49 </volume> <pages> 61-95, </pages> <year> 1991. </year> <title> D4.1.2 Version 1 Page 44 ESPRIT CONSTRAINT HANDLING IN COMMERCIAL EP5291 INDUSTRY AND COMMERCE IN CONFIDENCE </title>
Reference-contexts: This process is described in detail in Section 5.2. Much work on networks of point constraints has focused on constructing the minimal network corresponding to a network of binary inequality constraints on time points (e.g <ref> [7] </ref>). In order to do so it is necessary to complete the network by adding constraints between all pairs of variables. In the context of planning it is not necessary to construct and maintain the minimal network.
Reference: [8] <author> R. Fikes and N. Nilsson. </author> <title> STRIPS: A new approach to the application of theorem proving to problem solving. </title> <journal> Artificial Intelligence, </journal> <volume> 2 </volume> <pages> 189-208, </pages> <year> 1971. </year>
Reference: [9] <author> J. C. Hogge. Tplan: </author> <title> a temporal interval-based planner with novel extensions. </title> <type> Technical Report UIUCDCS-R-87-1367, </type> <institution> University of Illinois at Urbana-Champaign, </institution> <month> September </month> <year> 1987. </year>
Reference-contexts: Thus in a planning problem in which, say, 20 properties or actions are involved in interval constraints, the interval network will contain in the region of 400 nodes. In an implementation of the planning strategy defined in [3] the interval reasoning component proved to be a major bottleneck <ref> [9] </ref>. Attempts to carve up the interval network into more manageable portions [11] did not improve matters to any great extent.
Reference: [10] <author> H. A. Kautz and P. B. Ladkin. </author> <title> Integrating metric and qualitative temporal reasoning. </title> <booktitle> In Proceedings AAAI-91, </booktitle> <pages> pages 241-246, </pages> <address> Anaheim, CA, </address> <year> 1991. </year>
Reference: [11] <author> J. A. G. M. Koomen. </author> <title> Localizing temporal constraint propagation. </title> <booktitle> In Proceedings of the Ist International Conference on Principles of Knowledge Represntation and Reasoning, </booktitle> <pages> pages 198-202, </pages> <address> Toronto, Canada, </address> <year> 1989. </year>
Reference-contexts: In an implementation of the planning strategy defined in [3] the interval reasoning component proved to be a major bottleneck [9]. Attempts to carve up the interval network into more manageable portions <ref> [11] </ref> did not improve matters to any great extent. There is a sense in which completing the interval network associated with a planning problem renders the size of the problem|i.e. the number of property or action intervals a solution must contain|more computationally significant than the intrinsic hardness of the problem.
Reference: [12] <author> T. Le Provost and M. Wallace. </author> <title> Domain independent propagation. </title> <booktitle> In Proceedings of the International Conference on Fifth Generation Computer Systems, </booktitle> <pages> pages 1004-1011, </pages> <year> 1992. </year>
Reference-contexts: It is also possible for propagation in the constraint network to generate new constraints between time points which are then added to the point network. This particular process can be seen as an application of Generalised Propagation <ref> [12] </ref>, in which the interval constraints are used as propagation constraints and the point constraints are basic constraints that may be derived through propagation. <p> When the possible interval relations have changed, the minimal set of point constraints implied by the interval relations are added to the point network. This relationship between the point network and interval network can be seen as an instance of Generalised Propagation <ref> [12] </ref>. In Generalised Propagation, a set of constraints of a certain kind are treated as propagation constraints, and propagation over among these constraints produces a set of basic constraints.
Reference: [13] <author> J. M. Lever, E. B. Richards, and R. Hirsch. </author> <title> Temporal reasoning and constraint solving. CHIC Deliverable D4.1.1, Planning Group, </title> <institution> Imperial College, </institution> <month> January </month> <year> 1992. </year>
Reference-contexts: This representation of interval constraints is similar to the one that we described in <ref> [13] </ref>, but here explicit reference to the endpoints of the intervals has been added.
Reference: [14] <author> M. J. Maher. </author> <title> Logical semantics for a class of committed-choice programs. </title> <booktitle> In Proceedings of the Fourth International Conference on Logic Programming, </booktitle> <pages> pages 858-876, </pages> <address> Melbourne, Australia, </address> <year> 1987. </year>
Reference-contexts: This example also illustrates a point of relevance to the ask operation. In [22], Van Hen-tenryck et al. describe implementation of this operation in a CLP framework using the notion of arc-entailment that originated in concurrent constraint programming <ref> [14] </ref>. A constraint c (x1,...,xn) is arc-entailed by the domains D1,...,Dn of its variables if-and-only-if the constraint holds for all combinations of values from the domains.
Reference: [15] <author> I. Meiri. </author> <title> Combining qualitative and quantitative constraints in temporal reasoning. </title> <booktitle> In Proceedings AAAI-91, </booktitle> <pages> pages 260-267, </pages> <address> Anaheim, CA, </address> <year> 1991. </year>
Reference: [16] <author> E. D. Sacerdoti. </author> <title> A structure for plans and behaviour. </title> <publisher> American Elsevier, </publisher> <address> New York, </address> <year> 1977. </year>
Reference: [17] <author> V. A. Saraswat. </author> <title> Concurrent constraint programming languages. </title> <type> PhD thesis, </type> <institution> Carnegie-Mellon University, Pittsburg, </institution> <address> PA, </address> <year> 1989. </year>
Reference: [18] <author> M. Stefik. </author> <title> Planning with constraints (MOLGEN: Part 1). </title> <journal> Artificial Intelligence, </journal> <volume> 16(2) </volume> <pages> 111-139, </pages> <year> 1981. </year>
Reference: [19] <author> G. J. Sussman. </author> <title> A computer model of skill acquisition. </title> <type> Technical Report AI-TR-297, </type> <institution> MIT AI Laboratory Memo, </institution> <address> Cambridge, MA, </address> <year> 1973. </year>
Reference-contexts: D4.1.2 Version 1 Page 36 ESPRIT CONSTRAINT HANDLING IN COMMERCIAL EP5291 INDUSTRY AND COMMERCE IN CONFIDENCE 6 A Worked Example We show the planner in action on a variant of a traditional problem of the AI planning literature|the Sussman Anomaly <ref> [19] </ref>. Three blocks are arranged as shown below on a limited table. There are two positions on which blocks can be placed, table1 and table2.
Reference: [20] <author> A. Tate. </author> <title> Generating project networks. </title> <booktitle> In Proc. of IJCAI-77, </booktitle> <address> Boston, MA, </address> <year> 1977. </year>
Reference: [21] <author> P. Van Hentenryck. </author> <title> Constraint satisfaction in logic programming. </title> <publisher> MIT Press, </publisher> <year> 1989. </year>
Reference-contexts: The non-temporal constraints may be equalities, inequalities and disequalities on variables that represent objects other than time points. Propagation among these constraints is handling using the techniques available in the current CHIP system, namely, partial lookahead for equality and inequality constraints, and forward-checking for disequalities <ref> [21] </ref>. There are also unary constraints which|like unary constraints on time points|are expressed simply by the domains associated with the variables. Constraints of type 3 and 4 can be thought of as forming two networks of binary constraints| a point network and an interval network. <p> Inequality and equality constraints are handled by partial lookahead, and disequality constraints are evaluated using forward checking. Full descriptions of these techniques can be found in <ref> [21] </ref>.
Reference: [22] <author> P. Van Hentenryck, H. Simonis, and M. Dincbas. </author> <title> Constraint satisfaction using constraint logic programming. </title> <journal> Artificial Intelligence, </journal> <volume> 58 </volume> <pages> 113-159, </pages> <year> 1992. </year>
Reference-contexts: From the domains of x and z alone it is impossible to recover the information that the distance between the two time points must be less than 15, as is implied by the other two constraints. This example also illustrates a point of relevance to the ask operation. In <ref> [22] </ref>, Van Hen-tenryck et al. describe implementation of this operation in a CLP framework using the notion of arc-entailment that originated in concurrent constraint programming [14].
Reference: [23] <author> S. A. Vere. </author> <title> Splicing plans to achieve misordered goals. </title> <booktitle> In Proc. of IJCAI-85, </booktitle> <pages> pages 1016-1021, </pages> <year> 1985. </year> <title> D4.1.2 Version 1 Page 45 ESPRIT CONSTRAINT HANDLING IN COMMERCIAL EP5291 INDUSTRY AND COMMERCE IN CONFIDENCE </title>
Reference: [24] <author> M. Vilain and H. Kautz. </author> <title> Constraint propagation algorithms for temporal reasoning. </title> <booktitle> In Proceedings of AAAI-86, </booktitle> <pages> pages 377-382, </pages> <year> 1986. </year>
Reference: [25] <author> D. E. Wilkins. </author> <title> Domain independent planning: representation and plan generation. </title> <journal> Artificial Intelligence, </journal> <volume> 22 </volume> <pages> 269-301, </pages> <year> 1984. </year>
Reference: [26] <author> Q. Yang. </author> <title> A theory of conflict resolution in planning. </title> <journal> Artificial Intelligence, </journal> <volume> 58 </volume> <pages> 361-392, </pages> <year> 1992. </year> <note> D4.1.2 Version 1 Page 46 </note>
Reference-contexts: Another treatment of conflict resolution as a constraint-satisfaction problem in the context of a different planning architecture|Chapman's TWEAK system [4]| has recently appeared <ref> [26] </ref>. Finally, we discuss the ask operation as it applies to interval constraints.
References-found: 26

