URL: ftp://ftp.db.toronto.edu/pub/papers/sigmod97.ps
Refering-URL: http://www.cs.toronto.edu/~mendel/papers.html
Root-URL: 
Email: drafiei@db.toronto.edu  mendel@db.toronto.edu  
Title: Similarity-Based Queries for Time Series Data  
Author: Davood Rafiei Alberto Mendelzon 
Address: Toronto  
Affiliation: Department of Computer Science University of Toronto  Department of Computer Science University of  
Abstract: We study a set of linear transformations on the Fourier series representation of a sequence that can be used as the basis for similarity queries on time-series data. We show that our set of transformations is rich enough to formulate operations such as moving average and time warping. We present a query processing algorithm that uses the underlying R-tree index of a multidimensional data set to answer similarity queries efficiently. Our experiments show that the performance of this algorithm is competitive to that of processing ordinary (exact match) queries using the index, and much faster than sequential scanning. We relate our transformations to the general framework for similarity queries of Jagadish et al. 
Abstract-found: 1
Intro-found: 1
Reference: [AFS93] <author> Rakesh Agrawal, Christos Faloutsos, and Arun Swami. </author> <title> Efficient similarity search in sequence databases. </title> <booktitle> In Foundations Of Data Organizations and algorithms (FODO) conference, </booktitle> <month> October </month> <year> 1993. </year>
Reference-contexts: This has the advantage that spatial indexing techniques can be used to index time sequences by viewing them as tuples of Fourier series coefficients, that is, points in a low-dimensional space <ref> [AFS93, FRM94] </ref>. A problem with this approach is that the user has no control over the meaning of similarity other than providing a threshold. <p> The inverse Fourier transform of ~ X gives the original signal, i.e., x t = p n1 X X f e n t = 0; 1; ; n 1 (2) Following the convention of <ref> [AFS93, FRM94] </ref>, we have 1= n in the front of both Equations 1 and 2. <p> Thus using the first few coefficients for in dexing introduces few false hits, and no false dismissals. 1.2 Related Work There has been some work on access methods for similarity queries. For example, Agrawal et al. <ref> [AFS93] </ref> propose an efficient index structure to retrieve time sequences similar to a given one. They map time sequences into the frequency domain using the Fourier transform and keep the first few coefficients in the index. <p> We consider three kinds of queries: range queries, all-pair queries, and nearest neighbor queries, and we allow our transformations to be used in those queries. We show how to use the indexing method in <ref> [AFS93] </ref> to test for similarity under a general class of transformations. 1 This is called e t in [JMM95]. Our work generalizes Goldin et al. [GK95] where transformations are limited to shifts and positive scales. <p> For non-point objects, we assume there is a mapping function that maps every object to a point in the md-space. Such a function is developed in many domains where multidimensional indexing has been used. For example, Fourier transform for time-series <ref> [AFS93] </ref>, and minimum bounding rectangle for shapes [Jag91] are some instances of the mapping function. A transformation in an n-dimensional space, denoted by (~a; ~ b), is a pair of n fi 1 vectors where ~a specifies a stretch and ~ b represents a translation (Figure 6). <p> This allows us to use one index for many transformations. An indexing method for time series data is described in <ref> [AFS93] </ref>. This method requires a cut-off point for the number of Fourier coefficients kept in the index. We denote this cut-off point by k and call the index built on the first k Fourier coefficients `k-index'. <p> Equations (13,14) imply that ( f=0 2 1 Therefore, keeping the first k coefficients introduces no false dismissals. This is a generalization of the result of <ref> [AFS93] </ref> for k-index enhanced with transformations. 8 5 Experiments We implemented our method on top of Norbert Beck-mann's Version 2 implementation of the R*-tree [BKSS90]. We ran experiments on both stock prices data obtained from the FTP site "ftp.ai.mit.edu/pub/stocks/results/" and synthetic sequences.
Reference: [ALSS95] <author> Rakesh Agrawal, King-Ip Lin, Harpreet S. Sawhney, and Kyuseok Shim. </author> <title> Fast similarity search in the presence of noise, scaling, and translation in time-series databases. </title> <booktitle> In Proceedings of the 21st VLDB Conference, </booktitle> <pages> pages 490-501, </pages> <address> Zurich, Switzerland, </address> <year> 1995. </year>
Reference-contexts: A time series is a sequence of real numbers, each number representing a value at a time point. For example, the sequence could represent stock or commodity prices, sales, exchange rates, weather data, biomedical measurements, etc. We are often interested in similarity queries on time-series data <ref> [APWZ95, ALSS95] </ref>. For example, we may want to find stocks that behave in approximately the same way (or approximately the opposite way, for hedging); or stocks that increased linearly up to October 1987, and then crashed; or years when the temperature patterns in two regions of the world were similar.
Reference: [APWZ95] <author> R. Agrawal, G. Psaila, E. L. Wimmers, and M. Zait. </author> <title> Querying shapes of histories. </title> <booktitle> In Proceedings of the 21st VLDB Conference, </booktitle> <pages> pages 502-514, </pages> <address> Zurich, Switzerland, </address> <year> 1995. </year>
Reference-contexts: A time series is a sequence of real numbers, each number representing a value at a time point. For example, the sequence could represent stock or commodity prices, sales, exchange rates, weather data, biomedical measurements, etc. We are often interested in similarity queries on time-series data <ref> [APWZ95, ALSS95] </ref>. For example, we may want to find stocks that behave in approximately the same way (or approximately the opposite way, for hedging); or stocks that increased linearly up to October 1987, and then crashed; or years when the temperature patterns in two regions of the world were similar. <p> In addition, we drop the restriction to positive scales. Some advantages of these extensions are shown within the next section. There are other related works on time series data. Agrawal et al. <ref> [APWZ95] </ref> describe a pattern language called SDL to encode queries about "shapes" found in time series. The language allows a kind of blurry matching where the user specifies the overall shape instead of the specific details, but it does not support any operations or transformations on the time series.
Reference: [BKSS90] <author> N. Beckmann, H.-P. Kriegel, R. Schneider, and B. Seeger. </author> <title> The R* tree: an efficient and robust index method for points and rectangles. </title> <booktitle> In ACM SIGMOD Conf. on the Management Of Data, </booktitle> <pages> pages 322-331. </pages> <publisher> ACM, </publisher> <year> 1990. </year>
Reference-contexts: This is a generalization of the result of [AFS93] for k-index enhanced with transformations. 8 5 Experiments We implemented our method on top of Norbert Beck-mann's Version 2 implementation of the R*-tree <ref> [BKSS90] </ref>. We ran experiments on both stock prices data obtained from the FTP site "ftp.ai.mit.edu/pub/stocks/results/" and synthetic sequences.
Reference: [EM69] <author> R. D. Edwards and J. Magee. </author> <title> Technical analysis of stock trends. </title> <publisher> John Magee, </publisher> <address> Springfield, Massachsetts, </address> <year> 1969. </year>
Reference-contexts: However, if we look at the three-day moving averages of the two sequences (Figure 1 (c),(d)), they do look quite similar. The Eu-clidean distance between the three-day moving averages of two sequences is 0:47. Moving averages are widely used in stock data analysis (for example, see <ref> [EM69] </ref>). Their primary use is to smooth out short term fluctuations and depict the underlying trend of a stock.
Reference: [FJMM95] <author> C. Faloutsos, H. V. Jagadish, A. O. Mendel-zon, and T. Milo. </author> <title> A signature technique for similarity-based queries. </title> <type> technical report 112530-951110-16TM, </type> <institution> AT&T, </institution> <address> Murray Hill, NJ, </address> <month> November </month> <year> 1995. </year>
Reference-contexts: A specialization of this work to real-valued sequences where the search is performed over sequence signatures instead of the original sequences is described in <ref> [FJMM95] </ref>. In this paper, we describe an efficient implementation of a special case of [JMM95] for time-series data. We only study the trivial pattern language where a pattern expression specifies either a given constant data object, or every object in the database.
Reference: [FRM94] <author> C. Faloutsos, M. Ranganathan, and Y. Manolopoulos. </author> <title> Fast subsequence matching in time-series databases. </title> <booktitle> In Intl. Conf. on Management of Data - SIGMOD 94, </booktitle> <pages> pages 419-429, </pages> <address> Minneapolis, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: This has the advantage that spatial indexing techniques can be used to index time sequences by viewing them as tuples of Fourier series coefficients, that is, points in a low-dimensional space <ref> [AFS93, FRM94] </ref>. A problem with this approach is that the user has no control over the meaning of similarity other than providing a threshold. <p> The inverse Fourier transform of ~ X gives the original signal, i.e., x t = p n1 X X f e n t = 0; 1; ; n 1 (2) Following the convention of <ref> [AFS93, FRM94] </ref>, we have 1= n in the front of both Equations 1 and 2.
Reference: [GK95] <author> D. Q. Goldin and P. C. Kanellakis. </author> <title> On similarity queries for time-series data: constraint specification and implementation. </title> <booktitle> In 1st Intl. Conf. on the Principles and Practice of Constraint Programming, </booktitle> <pages> pages 137-153. </pages> <note> LNCS 976, </note> <month> Sept. </month> <year> 1995. </year>
Reference-contexts: We show how to use the indexing method in [AFS93] to test for similarity under a general class of transformations. 1 This is called e t in [JMM95]. Our work generalizes Goldin et al. <ref> [GK95] </ref> where transformations are limited to shifts and positive scales. Our extension allows shifts and scales in every dimension of a multidimensional feature space, as well as more complex transformations such as moving average. In addition, we drop the restriction to positive scales. <p> The closing price of ZTR fluctuates in a smaller range than that of BBA; the standard deviation for ZTR is 0.10 while the standard deviation for BBA is 1.18. We scale both series by the inverse of their standard deviation. The resulting series in <ref> [GK95] </ref> are called normal forms of the original series. <p> We think the normal form of <ref> [GK95] </ref> is a useful representation for time series data, but it allows only a small fraction of similarity queries. Our similarity transformations allow more general queries, but for simple shifting and scaling, the indexing method in [GK95] is faster because no transformation needs to be performed on the index. <p> We think the normal form of <ref> [GK95] </ref> is a useful representation for time series data, but it allows only a small fraction of similarity queries. Our similarity transformations allow more general queries, but for simple shifting and scaling, the indexing method in [GK95] is faster because no transformation needs to be performed on the index. Our indexing technique can be easily built on top of [GK95] as we did in our experiments, allowing both simple shifts and scales and more general transformations to be applied efficiently. <p> Our similarity transformations allow more general queries, but for simple shifting and scaling, the indexing method in <ref> [GK95] </ref> is faster because no transformation needs to be performed on the index. Our indexing technique can be easily built on top of [GK95] as we did in our experiments, allowing both simple shifts and scales and more general transformations to be applied efficiently. Acknowledgments We would like to thank Christos Faloutsos for his help in providing us with stock data and his comments on a preliminary version of this paper.
Reference: [Gut84] <author> Antonin Guttman. R-trees: </author> <title> a dynamic index structure for spatial searching. </title> <booktitle> In ACM SIGMOD Conf. on the Management Of Data, </booktitle> <pages> pages 47-57. </pages> <publisher> ACM, </publisher> <year> 1984. </year>
Reference-contexts: This operation is usually called time warping (for example, see [SK83]). We propose a class of transformations that can be used in a query language to express similarity in a fairly general way, handling cases like the two examples above. Given an R-tree index <ref> [Gut84] </ref> constructed on a data set, we describe a fast query processing algorithm that uses the index to filter out unrelated data from the answer set of a similarity query.
Reference: [Jag91] <author> H. V. Jagadish. </author> <title> A retrieval technique for similar shapes. </title> <booktitle> In ACM SIGMOD Symp. on the Management Of Data, </booktitle> <pages> pages 208-217, </pages> <year> 1991. </year>
Reference-contexts: For non-point objects, we assume there is a mapping function that maps every object to a point in the md-space. Such a function is developed in many domains where multidimensional indexing has been used. For example, Fourier transform for time-series [AFS93], and minimum bounding rectangle for shapes <ref> [Jag91] </ref> are some instances of the mapping function. A transformation in an n-dimensional space, denoted by (~a; ~ b), is a pair of n fi 1 vectors where ~a specifies a stretch and ~ b represents a translation (Figure 6).
Reference: [JMM95] <author> H. V. Jagadish, A. O. Mendelzon, and T. Milo. </author> <title> Similarity-based queries. </title> <booktitle> PODS, </booktitle> <year> 1995. </year>
Reference-contexts: A specialization of this work to real-valued sequences where the search is performed over sequence signatures instead of the original sequences is described in [FJMM95]. In this paper, we describe an efficient implementation of a special case of <ref> [JMM95] </ref> for time-series data. We only study the trivial pattern language where a pattern expression specifies either a given constant data object, or every object in the database. <p> We show how to use the indexing method in [AFS93] to test for similarity under a general class of transformations. 1 This is called e t in <ref> [JMM95] </ref>. Our work generalizes Goldin et al. [GK95] where transformations are limited to shifts and positive scales. Our extension allows shifts and scales in every dimension of a multidimensional feature space, as well as more complex transformations such as moving average. In addition, we drop the restriction to positive scales. <p> Each one of these operations may reduce the distance between two series, but two series that have dissimilar trends still look different. It is obvious that if we keep taking the moving average, two series eventually will be the same, i.e., two flat straight lines. However, we assume, following <ref> [JMM95] </ref>, that each operation has a cost, and we are limited by an upper bound on the total cost. This upper bound, for example, could be proportional to the Euclidean distance between the two original series.
Reference: [OS75] <author> A. V. Oppenheim and R. W. Schafer. </author> <title> Digital Signal Processing. </title> <publisher> Prentice-Hall, </publisher> <address> Engle-wood Cliffs, N.J., </address> <year> 1975. </year>
Reference-contexts: This convolution is usually called circular convolution. Equations 3 and 4 are unchanged in the frequency domain. The following properties of DFT can be found in any signal processing textbook (for example, see <ref> [OS75] </ref>). The symbol , denotes a DFT pair.
Reference: [RKV95] <author> N. Roussopoulos, S. Kelley, and F. Vincent. </author> <title> Nearest neighbor queries. </title> <booktitle> In Proceedings of the ACM SIGMOD Annual Conference, </booktitle> <address> San Jose, CA, </address> <year> 1995. </year>
Reference-contexts: For a nearest neighbor query, the search starts from the root and proceeds down the tree. As we go down the tree, we apply T to all entries of the node we visit. We can then use any kind of metric (such as MINDIST or MINMAXDIST discussed in <ref> [RKV95] </ref>) for pruning the search. The only thing left to show is that this search scheme used with a k-index misses no object from the answer set. Lemma 1 The k-index approach enhanced with transformations always returns a superset of the answer set.
Reference: [Rot93] <author> William G. Roth. MIMSY: </author> <title> A system for analyzing time series data in the stock market domain. </title> <institution> University of Wisconsin, Madison, </institution> <year> 1993. </year> <type> Master Thesis. </type>
Reference-contexts: The language allows a kind of blurry matching where the user specifies the overall shape instead of the specific details, but it does not support any operations or transformations on the time series. A query language for time series data in the stock market domain is described in <ref> [Rot93] </ref>.
Reference: [RS92] <author> Raghu Ramakrishnan and Divesh Srivas-tava. </author> <title> CORAL: Control, relations and logic. </title> <booktitle> In Proceedings of the Int. Conf. on VLDB, </booktitle> <year> 1992. </year>
Reference-contexts: A query language for time series data in the stock market domain is described in [Rot93]. The language is built on top of CORAL <ref> [RS92] </ref>, and every query is translated into a sequence of CORAL rules. 2 Examples from Stock Data Analysis In this section we demonstrate how our transformations can be used to eliminate noise or short-term fluctuations and shift or scale the data before computing Eu-clidean distances.
Reference: [SK83] <author> David Sankoff and Joseph B. Kruskal. </author> <title> Time Warps, String Edits, and Macromolecules: The Theory and Practice of Sequence Comparison. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1983. </year> <month> 11 </month>
Reference-contexts: If the time dimension of ~p is scaled by 2, i.e., every value "v i " is replaced by "v i ; v i ", the resulting sequence will be identical to ~s. This operation is usually called time warping (for example, see <ref> [SK83] </ref>). We propose a class of transformations that can be used in a query language to express similarity in a fairly general way, handling cases like the two examples above.
References-found: 16

