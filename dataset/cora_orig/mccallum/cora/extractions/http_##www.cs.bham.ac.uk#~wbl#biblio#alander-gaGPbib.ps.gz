URL: http://www.cs.bham.ac.uk/~wbl/biblio/alander-gaGPbib.ps.gz
Refering-URL: http://www.cs.bham.ac.uk/~wbl/biblio/README.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: An Indexed Bibliography of Genetic Programming compiled by  
Author: Jarmo T. Alander 
Note: DRAFT  
Address: P.O. Box 700 FIN-65101 Vaasa Finland  
Affiliation: Department of Information Technology and Production Economics University of Vaasa  
Pubnum: Report Series No. 94-1-GP  
Email: e-mail: jal@uwasa.fi  
Phone: phone: 358-61-3248 444 fax: 358-61-3248 467  
Date: May 18, 1995  
Web: www: http://www.uwasa.fi/~ jal  
Abstract-found: 0
Intro-found: 0
Reference: [1] <author> John H. Holland. </author> <title> Genetic algorithms. </title> <journal> Scientific American, </journal> <volume> 267(1) </volume> <pages> 44-50, </pages> <year> 1992. </year> <month> ga:Holland92a. </month>
Reference: [2] <author> Jarmo T. Alander. </author> <title> An indexed bibliography of genetic algorithms: </title> <type> Years 1957-1993. </type> <institution> Art of CAD Ltd., Vaasa (Finland), </institution> <year> 1994. </year> <title> (over 3000 GA references). </title>
Reference: [3] <author> David E. Goldberg, Kelsey Milman, and Christina Tidd. </author> <title> Genetic algorithms: A bibliography. </title> <type> IlliGAL Report 92008, </type> <institution> University of Illinois at Urbana-Champaign, </institution> <year> 1992. </year> <month> ga:Goldberg92f. </month>
Reference: [4] <author> N. Saravanan and David B. Fogel. </author> <title> A bibliography of evolutionary computation & applications. </title> <type> Technical Report FAU-ME-93-100, </type> <institution> Florida Atlantic University, Department of Mechanical Engineering, </institution> <year> 1993. </year> <note> (available via anonymous ftp cite magenta.me.fau.edu directory /pub/ep-list/bib file EC-ref.ps.Z) ga:Fogel93c. </note>
Reference: [5] <author> Thomas Back. </author> <title> Genetic algorithms, evolutionary programming, and evolutionary strategies bibliographic database entries. </title> <type> (personal communication) ga:Back93bib, </type> <year> 1993. </year>
Reference: [6] <editor> Thomas Back, Frank Hoffmeister, and Hans-Paul Schwefel. </editor> <title> Applications of evolutionary algorithms. </title> <type> Technical Report SYS-2/92, </type> <institution> University of Dortmund, Department of Computer Science, </institution> <year> 1992. </year> <month> ga:Schwefel92d. </month>
Reference: [7] <editor> Kenneth E. Kinnear, Jr., editor. </editor> <booktitle> Advances in Genetic Programming. </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA, 1994. y(Koza) ga94AGP. </address>
Reference: [8] <author> Karl Sims. </author> <title> Evolving images. </title> <address> Paris, 1993. y(Koza) ga:Sims93b. </address>
Reference-contexts: using gen. prog. [151] Generality and difficulty in gen. prog. : * a sort [146] * a computer prog. to generate random numbers using the gen. prog. paradigm [157] * a sort: Lessons in gen. prog. [181] * co-operation in autonomous robotic syst. [113] * data structures using gen. prog. <ref> [8] </ref> * images [104] * the architecture of a multi-part prog. in gen. prog. [118] * turing-complete prog. for a register machine with self modifying code [185] * visual routines [111] Strongly typed gen. prog. in * cooperation strategies [73] execution Experiments with a coroutine * model for gen. prog. [163] <p> syst. [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. * [34] Solving* problems by structured GAs [242] image Gen. generation of "dendritic trees" for * classi fication [155] - Gen. prog. for feature discovery and * discrimination <ref> [8] </ref> images Evolving * [91] Exploring the underlying structure of nat. * through gen. prog. [77] implications The unique * of brood sel. for gen. prog. [208] impulse response Finding an * function using gen. prog. [166] independently-acting Evol. and coevol. of computer prog. to cntr. * agents [78] indexed Turing
Reference: [9] <author> John R. Koza. </author> <title> Genetic Programming II, Automatic Discovery of Reusable Programs. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, 1994. y(Koza) ga94gKoza. </address>
Reference-contexts: robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, <ref> [9] </ref> theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table gives references to the contri butions published annually. 1981, [16] 1986, [187, 24] 1989, [217] <p> * learning of a detector for ff-helices in protein sequences via gen. prog. [68] * learning of a detector for the cores of ff-helices in pro tein sequences via gen. prog. [24] automatic Appl. of the GA to * prog. generation [170] Criticism, culture, and the * generation of artworks <ref> [9] </ref> - Gen. Prog. <p> acyclic graph to represent a pop. of computer prog. [117] discovering Two ways of * the size and shape of a com puter prog. to solve a problem Permuted title index 19 [212] discovery Automated * of detectors and iteration-performing calculations to recognize patterns in protein sequences using gen. prog. <ref> [9] </ref> - Gen. Prog. <p> L-syst. * <ref> [9] </ref> - Gen. * II, Automatic Discovery of Reusable Prog. [13] - Gen. * with C++ [19] - Gen. prog. as a means for * computers by nat. sel. [10] - Gen. Prog. : On * Computers by Means of Nat. <p> and hill climbing [121, 37] representations Coevolving high-level * [45] - Gen. prog. with adaptive * [76] Learning by adapting * in gen. prog. [71] retrieval The use of gen. prog. to build queries for info * [229] reusable Discovery of a main prog. and * subroutines using gen. prog. <ref> [9] </ref> - Gen. Prog.
Reference: [10] <author> John R. Koza. </author> <title> Genetic Programming: On Programming Computers by Means of Natural Selection and Genetics. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1992. </year> <month> ga:Koza92book. </month>
Reference-contexts: pop. of cntr. strategy prog. [42] - Gen. prog. : A paradigm for * breeding pop. of computer prog. to solve problems [218] * breeding pop. of computer prog. to solve problems in artificial intelligence [225] The gen. prog. paradigm: * breeding pop. of compu ter prog. to solve problems <ref> [10] </ref> Genetics Gen. Prog. : On Prog. ming Computers by Means of Nat. <p> * and reusable subrou tines using gen. prog. [62] mapmaking Evol. of * Learning, planning, and me mory using gen. prog. [116] mating The * pool: A testbed for experiments in the evol. of symbol syst. [19] means Gen. prog. as a * for prog. ming computers by nat. sel. <ref> [10] </ref> - Gen. Prog. : On Prog. ming Computers by * of Nat. <p> prog. in gen. prog. [134] multiplexer A hierarchical appr. to learning the Boo lean * function [59] Myths Gen. prog. : * and facts [91] natural Exploring the underlying structure of * images through gen. prog. [19] - Gen. prog. as a means for prog. ming computers by * sel. <ref> [10] </ref> Natural Selection Gen. <p> L-syst. * [9] - Gen. * II, Automatic Discovery of Reusable Prog. [13] - Gen. * with C++ [19] - Gen. prog. as a means for * computers by nat. sel. <ref> [10] </ref> - Gen. Prog. : On * Computers by Means of Nat.
Reference: [11] <author> John R. Koza, James P. Rice, and Jonathan Roughgarden. </author> <title> Evolution of food foraging strategies for the Caribbean anolis lizard using genetic programming. </title> <booktitle> Adaptive Behavior, </booktitle> <volume> 1(2) </volume> <pages> 47-74, </pages> <year> 1992. </year> <note> y([10]) ga:Koza92h. </note>
Reference-contexts: [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, <ref> [11, 39] </ref> software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table <p> agents The evol. of * that build mental models and create simple plans using gen. prog. [239] AI Gen. prog. and * planning syst. [195] analysis Gen. prog. : A new paradigm for cntr. and * [72] analyzing Appl. of gen. prog. in * multiple steady states of dynamical syst. <ref> [11, 39] </ref> Anolis Evol. of food foraging strategies for the Carib bean * lizard using gen. prog. [65] application A gen. prog. * in virtual reality [63] Learning monitoring strategies: a difficult gen. prog. * [72] * of gen. prog. in analyzing multiple steady states of dynamical syst. [176] * of <p> Gen. prog. with * [212] calculations Automated discovery of detectors and iteration-performing * to recognize patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using iteration-performing * in gen. prog. [100] cardiac Detector design by gen. prog. for automated border definition in * magnetic resonance images <ref> [11, 39] </ref> Caribbean Evol. of food foraging strategies for the * Anolis lizard using gen. prog. [206] Cart centering and broom balancing by gen. breeding pop. of cntr. strategy prog. [109] Causality in gen. prog. [125] cell Gen. synthesis of Boolean neural networks with a * rewriting developmental process [32, 15] <p> of dynamical syst. [238, 20] Interactive* of equations for procedural models [166] * and coevol. of computer prog. to cntr. independently acting agents [99] * by gen. prog. of a spatial robot juggling cntr. alg. [189] * of autonomous robot cntr. architectures [93] * of damage-immune prog. using gen. prog. <ref> [11, 39] </ref> * of food foraging strategies for the Caribbean Anolis lizard using gen. prog. [62] * of mapmaking: Learning, planning, and memory using gen. prog. [216] * of subsumption architecture that perform a wall fol lowing task for an autonomous mobile robot via gen. prog. [127] * of subsumption using <p> * discovery and image discrimi nation [35] filtering Signal * and data processing for laser rheo metry [51] fit Non-linear GAs for solving problems by finding a * composition of functions [69] Fitness landscapes and difficulty in gen. prog. [95] flattening Terrain * by autonomous robot: A gen. prog. appl. <ref> [11, 39] </ref> food Evol. of * foraging strategies for the Caribbean Anolis lizard using gen. prog. 20 [11, 39] foraging Evol. of food * strategies for the Caribbean Anolis lizard using gen. prog. [161] formation Concept * and decision tree induction using the gen. prog. paradigm [134] function A hierarchical appr. <p> [51] fit Non-linear GAs for solving problems by finding a * composition of functions [69] Fitness landscapes and difficulty in gen. prog. [95] flattening Terrain * by autonomous robot: A gen. prog. appl. <ref> [11, 39] </ref> food Evol. of * foraging strategies for the Caribbean Anolis lizard using gen. prog. 20 [11, 39] foraging Evol. of food * strategies for the Caribbean Anolis lizard using gen. prog. [161] formation Concept * and decision tree induction using the gen. prog. paradigm [134] function A hierarchical appr. to learning the Boolean multiplexer * [230, 22] A hierarchical gen. syst. for symbolic * ident. [205] <p> gen. prog. using automatic function definition [87, 38] length Prog. search with a hierarchical variable * Rep. : Gen. prog. , simulated annealing and hill climbing [157] Lessons Evolving a sort: * in gen. prog. [144] Lisp Using the GA to generate * source code to solve the prisoner's dilemma <ref> [11, 39] </ref> lizard Evol. of food foraging strategies for the Carib bean Anolis * using gen. prog. [89, 33] local Gen. prog. with * hill-climbing [29] locales Apprentissage de strategies * pour architechtu res reactives distribuees par prog. mation genetique [132] Looping as a means to survival: playing Russian rou lette <p> * for laser rheo metry [112] Temporal data * using gen. prog. [29] programmation genetique Apprentissage de strategies locales pour architechtures reactives distribuees par * [27] Programmierung Verbesserung des Simulated Annealing unter Anwendung Genetischer * am Beispiel des Diskreten Quadratischen Layoutproblems [226] programming Automatic * of robots using gen. prog. <ref> [11, 39] </ref> - Evol. of food foraging strategies for the Caribbean Anolis lizard using gen. * [201] - Geneettinen ohjelmointi [Gen. * by Koza] [86] - Gen. <p> dynamical syst. [130] Steerable Gennets The gen. prog. of steerable be haviors in Gennets [130] - Steerable Gennets The gen. prog. of * behaviors in Gennets [101] Stock price time series prediction using gen. prog. [29] strategies Apprentissage de * locales pour architechtu res reactives distribuees par prog. mation genetique <ref> [11, 39] </ref> strategies Evol. of food foraging * for the Caribbean Anolis lizard using gen. prog. [94] - Evol. of trade * using GAs and gen. prog. [187] - Evol. learning * [219, 207] - Gen. breeding of non-linear opt. cntr. * for broom balancing 24 [179] Learning distr. reactive *
Reference: [12] <author> John Cona. </author> <title> Developing a genetic programming system. </title> <journal> AI Expert, </journal> <volume> ?(?):20-29, </volume> <month> February </month> <year> 1995. </year> <month> ga95aCona. </month>
Reference-contexts: calculations to recognize patterns in protein sequences using gen. prog. [152] Simultaneous discovery of reusable * and subroutines using gen. prog. [159] Simultaneous discovery of * and a way of using the * via gen. prog. [102] deterministic Context-free language induction by evol. of * push-down automata using gen. prog. <ref> [12] </ref> Developing a gen. prog. syst. [32, 15] development Adding learning to the cellular * process: a comparative study [125] developmental Gen. synthesis of Boolean neural networks with a cell rewriting * process [164] Differentiable chromosomes The gen. prog. of switc hable shape-genes [81] directed On the use of a *
Reference: [13] <author> Andy Singleton. </author> <title> Genetic programming with C++. </title> <journal> BYTE, </journal> <volume> 19(2) </volume> <pages> 171-176, </pages> <month> February </month> <year> 1994. </year> <month> ga94aSingleton. </month>
Reference-contexts: [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, <ref> [209, 13] </ref> Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, <p> prog. paradigm: Gen. * pop. of computer prog. to solve problems [77] brood The unique implications of * sel. for gen. prog. [206] broom balancing Cart centering and * by gen. bree ding pop. of cntr. strategy prog. [219, 207] - Gen. breeding of non-linear opt. cntr. strategies for * <ref> [13] </ref> C++ Gen. prog. with * [212] calculations Automated discovery of detectors and iteration-performing * to recognize patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using iteration-performing * in gen. prog. [100] cardiac Detector design by gen. prog. for automated border definition in * magnetic resonance <p> L-syst. * [9] - Gen. * II, Automatic Discovery of Reusable Prog. <ref> [13] </ref> - Gen. * with C++ [19] - Gen. prog. as a means for * computers by nat. sel. [10] - Gen. Prog. : On * Computers by Means of Nat.
Reference: [14] <author> Karl Sims. </author> <title> Artificial evolution for computer graphics. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 319-328, </pages> <month> July </month> <year> 1991. </year> <month> ga:Sims91. </month>
Reference-contexts: regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, <ref> [14] </ref> induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, <p> [100] images processing, [91] implementation C++, [209, 13] Connection Machine, <ref> [14] </ref> induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic <p> weights and * for a neural network [41] Architecture-altering operations for evolving the architecture of a multipart prog. in gen. prog. [189] architectures Evol. of autonomous robot cntr. * [192] artificial Artificial embryology: The gen. prog. of an * embryo [192] * embryology: The gen. prog. of an artificial embryo <ref> [14] </ref> * evol. for computer graphics [184] * morality and gen. prog. [25] On the origin of effective procedures by means of * sel. [223] artificial intelligence A gen. appr. to * [218] - Gen. breeding pop. of computer prog. to solve problems in * [170] artworks Criticism, culture, and the <p> self-improving * [132] environment Looping as a means to survival: playing Russian roulette in a harsh * [98] environments Distr. gen. prog. for on-line prediction in changing * [238, 20] equations Interactive evol. of * for procedural mo dels [246] etsinta Satunnaistajan * [Gen. prog. random number generator by Koza] <ref> [14] </ref> evolution Artificial * for computer graphics [138] - Co-evolving parasites improve simulated * as an opt. procedure [115] Complexity compression and * [97] Concurrent* of territory-defining behavior in birds using gen. prog. [102] Context-free language induction by * of deterministic push-down automata using gen. prog. [123] - Gen. * and <p> [130] Gennets Steerable * The gen. prog. of steerable be haviors in * [88] Genotype-phenotype-mapping and neutral varia tion A case study in gen. prog. [81] graph On the use of a directed acyclic * to represent a pop. of computer prog. [194] graph grammar Cellular encoding as a * <ref> [14] </ref> graphics Artificial evol. for computer * [168] group An evolved vision-based behavioral model of coordinated * motion [244] halting Gen. prog. , indexed memory, the * problem, and other curiosities [132] harsh Looping as a means to survival: playing Russian roulette in a * environment [134] hierarchical A * appr.
Reference: [15] <author> Frederic C. Gruau and Darrell Whitley. </author> <title> Adding learning to the cellular development process: a comparative study. </title> <journal> Evolutionary Computation, </journal> <volume> 1(3) </volume> <pages> 213-233, </pages> <year> 1993. </year> <note> y(Koza) ga:Gruau93d. </note>
Reference-contexts: images [11, 39] Caribbean Evol. of food foraging strategies for the * Anolis lizard using gen. prog. [206] Cart centering and broom balancing by gen. breeding pop. of cntr. strategy prog. [109] Causality in gen. prog. [125] cell Gen. synthesis of Boolean neural networks with a * rewriting developmental process <ref> [32, 15] </ref> cellular Adding learning to the * development process: a comparative study [21] Neural network synthesis using * encoding and the GA [194] * encoding as a graph grammar [31] * encoding of gen. neural networks [98] changing Distr. gen. prog. for on-line prediction in * environments [164] chromosomes Differentiable <p> prog. to cntr. independently-acting agents [123] co-evolution Gen. evol. and * of computer prog. [121, 37] Coevolving high-level Rep. [138] Co-evolving parasites improve simulated evol. as an opt. procedure [55] - Non-linear gen. process for use with plural * pop. [54] - Non-linear gen. process for use with * pop. <ref> [32, 15] </ref> comparative Adding learning to the cellular develop ment process: a * study [110] complex Solving * problems with GAs [115] Complexity compression and evol. [51] composition Non-linear GAs for solving problems by finding a fit * of functions [115] compression Complexity * and evol. [161] Concept formation and decision <p> sequences using gen. prog. [152] Simultaneous discovery of reusable * and subroutines using gen. prog. [159] Simultaneous discovery of * and a way of using the * via gen. prog. [102] deterministic Context-free language induction by evol. of * push-down automata using gen. prog. [12] Developing a gen. prog. syst. <ref> [32, 15] </ref> development Adding learning to the cellular * process: a comparative study [125] developmental Gen. synthesis of Boolean neural networks with a cell rewriting * process [164] Differentiable chromosomes The gen. prog. of switc hable shape-genes [81] directed On the use of a * acyclic graph to represent a pop. <p> [35] laser Signal filtering and data processing for * rheometry [27] Layoutproblems Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beis piel des Diskreten Quadratischen * [177, 44] learn Gen. prog. to * an agent's monitoring strategy [134] learning A hierarchical appr. to * the Boolean mul tiplexer function <ref> [32, 15] </ref> Adding* to the cellular development process: a com parative study [150] Automated* of a detector for ff-helices in protein sequences via gen. prog. [68] Automated* of a detector for the cores of ff-helices in protein sequences via gen. prog. [85] Dynamic training subset sel. for supervised * in gen. <p> as an opt. * [25] procedures On the origin of effective * by means of artificial sel. [48] process A non-linear gen. * for data encoding and for solving problems using automatically defined functions [49] A non-linear gen. * for problem solving using sponta neously emergent self-replicating and self-improving entities <ref> [32, 15] </ref> Adding learning to the cellular development * a com parative study [125] - Gen. synthesis of Boolean neural networks with a cell rewriting developmental * [52] - Non-linear gen. * for data encoding and for solving problems using automatically defined functions [53] - Non-linear gen. * for problem solving
Reference: [16] <author> Richard S. Forsyth. </author> <title> Beagle a Darwinian approach to pattern recognition. </title> <journal> Kybernetes, </journal> <volume> 10(3) </volume> <pages> 159-166, </pages> <year> 1981. </year> <note> y ga:Forsyth81. </note>
Reference-contexts: [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, <ref> [16, 159, 155, 96] </ref> protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random <p> system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table gives references to the contri butions published annually. 1981, <ref> [16] </ref> 1986, [187, 24] 1989, [217] 51, 207, 54, 55] 127, 123, 134, 223, 224, 46, 14, 129, 130, 191] 225, 226, 10, 227, 228, 136, 48, 49, 11, 39, 47, 53, 52, 163, 1993, [177, 44, 29, 179, 148, 36, 17, 168, 132, 152, 208, 229, 43, 28, 153, 35, <p> task for an * mobile robot via gen. prog. [189] - Evol. of * robot cntr. architectures [181] Evolving co-operation in * robotic syst. [95] Terrain flattening by * robot: A gen. prog. appl. [228] back A gen. appr. to finding a cntr. to * up a tractor trailed truck <ref> [16] </ref> Beagle A Darwinian appr. to pattern recognition [97] behavior Concurrent evol. of territory-defining * in birds using gen. prog. [168] behavioral An evolved vision-based * model of coordi nated group motion [169] behaviors Evol. learning of predatory * based on struc tured classifiers 17 18 [130] - Steerable Gennets The <p> of artworks [66] crossover Context preserving * in gen. prog. [170] culture Criticism, * and the automatic generation of artworks [244] curiosities Gen. prog. , indexed memory, the halting problem, and other * [58] current Gen. prog. : A * snapshot [93] damage-immune Evol. of * prog. using gen. prog. <ref> [16] </ref> Darwinian Beagle A* appr. to pattern recognition [161] decision Concept formation and * tree induction using the gen. prog. paradigm [48] defined A non-linear gen. process for data encoding and for solving problems using automatically * functions [52] - Non-linear gen. process for data encoding and for sol ving problems <p> of computer prog. to solve problems [225] The gen. prog. * Gen. breeding pop. of computer prog. to solve problems [138] parasites Co-evolving * improve simulated evol. as an opt. procedure [96] pattern Feasibility of evolving self-learned * recognition appl. toward the solution of a constrained syst. using gen. prog. <ref> [16] </ref> Beagle- A Darwinian appr. to * recognition [212] patterns Automated discovery of detectors and iteration-performing calculations to recognize * in protein sequences using gen. prog. [70] Recognizing* in protein sequences using iteration performing calculations in gen. prog. [148, 36] pedestrians Gen. prog. for * [216] perform Evol. of subsumption architecture <p> Occam's * [179] reactive Learning distr. * strategies by gen. prog. for the general job shop problem [178] Learning distributive * strategies by gen. prog. for the general job shop problem [96] recognition Feasibility of evolving self-learned pattern * appl. toward the solution of a constrained syst. using gen. prog. <ref> [16] </ref> Beagle- A Darwinian appr. to pattern * [212] recognize Automated discovery of detectors and iteration-performing calculations to * patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using iteration-performing calculations in gen. prog. [23] Recombination sel. , and the gen. construction of computer prog.
Reference: [17] <author> Nick Beard. </author> <title> The joy of genetic programming. </title> <booktitle> Personal Computer World, </booktitle> <volume> 16(6) </volume> <pages> 471-472, </pages> <month> June </month> <year> 1993. </year> <note> y(CTI 9307739) ga:Beard93a. </note>
Reference-contexts: * calculations to recognize patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using * calculations in gen. prog. [179] job shop problem Learning distr. reactive strategies by gen. prog. for the general * [178] Learning distributive reactive strategies by gen. prog. for the general * <ref> [17, 18] </ref> joy The * of gen. prog. [99] juggling Evol. by gen. prog. of a spatial robot * cntr. alg. [188] knowledge Putting INK into a BIRo: A discussion of problem domain * for evol. robotics [201] Koza Geneettinen ohjelmointi [Gen. prog. by * [246] - Satunnaistajan etsinta [Gen. prog.
Reference: [18] <author> Nick Beard. </author> <title> The joy of genetic programming. </title> <booktitle> Personal Computer World, </booktitle> <volume> 16(6) </volume> <pages> 471-472, </pages> <month> June </month> <year> 1993. </year> <month> ga:PCW93/6a. </month>
Reference-contexts: * calculations to recognize patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using * calculations in gen. prog. [179] job shop problem Learning distr. reactive strategies by gen. prog. for the general * [178] Learning distributive reactive strategies by gen. prog. for the general * <ref> [17, 18] </ref> joy The * of gen. prog. [99] juggling Evol. by gen. prog. of a spatial robot * cntr. alg. [188] knowledge Putting INK into a BIRo: A discussion of problem domain * for evol. robotics [201] Koza Geneettinen ohjelmointi [Gen. prog. by * [246] - Satunnaistajan etsinta [Gen. prog.
Reference: [19] <author> John R. Koza. </author> <title> Genetic programming as a means for programming computers by natural selection. </title> <journal> Stat. Comput. (UK), </journal> <volume> 4(2) </volume> <pages> 87-112, </pages> <month> June </month> <year> 1994. </year> <note> y(CCA 55502) ga94dKoza. </note>
Reference-contexts: prog. for automated border definition in cardiac * [229] main program Discovery of a * and reusable subrou tines using gen. prog. [62] mapmaking Evol. of * Learning, planning, and me mory using gen. prog. [116] mating The * pool: A testbed for experiments in the evol. of symbol syst. <ref> [19] </ref> means Gen. prog. as a * for prog. ming computers by nat. sel. [10] - Gen. Prog. : On Prog. ming Computers by * of Nat. <p> a * prog. in gen. prog. [104] multi-part Evolving the architecture of a * prog. in gen. prog. [134] multiplexer A hierarchical appr. to learning the Boo lean * function [59] Myths Gen. prog. : * and facts [91] natural Exploring the underlying structure of * images through gen. prog. <ref> [19] </ref> - Gen. prog. as a means for prog. ming computers by * sel. [10] Natural Selection Gen. <p> L-syst. * [9] - Gen. * II, Automatic Discovery of Reusable Prog. [13] - Gen. * with C++ <ref> [19] </ref> - Gen. prog. as a means for * computers by nat. sel. [10] - Gen. Prog. : On * Computers by Means of Nat. <p> * of a new learning rule for neural networks [143] On using GAs to * prog. spaces [87, 38] - Prog. * with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and hill climbing [85] selection Dynamic training subset * for supervised lear ning in gen. prog. <ref> [19] </ref> - Gen. prog. as a means for prog. ming computers by nat. * [25] On the origin of effective procedures by means of arti ficial * [23] Recombination,* and the gen. construction of compu ter prog. [77] The unique implications of brood * for gen. prog. [49] self-improving A non-linear
Reference: [20] <author> Karl Sims. </author> <title> Interactive evolution of equations for procedural models. </title> <journal> The Visual Computer, </journal> 9(?):466-476, 1993. y(Koza) ga:Sims93a. 
Reference-contexts: using spontaneously emergent self-replicating and self improving * [53] - Non-linear gen. process for problem solving using spon taneously emergent self-replicating and self-improving * [132] environment Looping as a means to survival: playing Russian roulette in a harsh * [98] environments Distr. gen. prog. for on-line prediction in changing * <ref> [238, 20] </ref> equations Interactive evol. of * for procedural mo dels [246] etsinta Satunnaistajan * [Gen. prog. random number generator by Koza] [14] evolution Artificial * for computer graphics [138] - Co-evolving parasites improve simulated * as an opt. procedure [115] Complexity compression and * [97] Concurrent* of territory-defining behavior in <p> improve simulated * as an opt. procedure [115] Complexity compression and * [97] Concurrent* of territory-defining behavior in birds using gen. prog. [102] Context-free language induction by * of deterministic push-down automata using gen. prog. [123] - Gen. * and co-evol. of computer prog. [237, 128] Interactive* of dynamical syst. <ref> [238, 20] </ref> Interactive* of equations for procedural models [166] * and coevol. of computer prog. to cntr. independently acting agents [99] * by gen. prog. of a spatial robot juggling cntr. alg. [189] * of autonomous robot cntr. architectures [93] * of damage-immune prog. using gen. prog. [11, 39] * of <p> of subroutines [106] inductive logic An adaptive * prog. syst. using gen. prog. ming [71] information The use of gen. prog. to build queries for * retrieval [188] INK Putting * into a BIRo: A discussion of problem domain knowledge for evol. robotics [237, 128] Interactive evol. of dynamical syst. <ref> [238, 20] </ref> * evol. of equations for procedural models [227] inter-twined spiral problem A gen. appr. to the truck backer upper problem and the * [212] iteration-performing Automated discovery of detectors and * calculations to recognize patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using * <p> automatically defined functions [198] The gen. planner: The automatic generation of plans for a * via genetic prog. [168] model An evolved vision-based behavioral * of coordi nated group motion [73] Experiments with a coroutine execution * for gen. prog. [220, 221, 222] modeling A gen. appr. to econometric * <ref> [238, 20] </ref> models Interactive evol. of equations for procedural * [245] Learning mental * [149] modular Gen. synthesis of * neural networks [177, 44] monitoring Gen. prog. to learn an agent's * stra tegy [63] Learning* strategies: a difficult gen. prog. appl. [184] morality Artificial * and gen. prog. [168] motion <p> - Non-linear GAs for solving * [52] - Non-linear gen. process for data encoding and for sol ving * using automatically defined functions [110] Solving complex * with GAs [34] Solving ident. * by structured GAs [225] The gen. prog. paradigm: Gen. breeding pop. of computer prog. to solve * <ref> [238, 20] </ref> procedural Interactive evol. of equations for * mo dels [138] procedure Co-evolving parasites improve simulated evol. as an opt. * [25] procedures On the origin of effective * by means of artificial sel. [48] process A non-linear gen. * for data encoding and for solving problems using automatically defined
Reference: [21] <author> Frederic C. Gruau. </author> <title> Neural network synthesis using cellular encoding and the genetic algorithm. </title> <type> PhD thesis, </type> <institution> Ecole Normale Superieure de Lyon, Laboratoire de l'Informatique du Parallilisme, </institution> <year> 1994. </year> <note> y(LAngdon/bib) ga94bGruau. </note>
Reference-contexts: [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, <ref> [198, 199, 188, 189, 21] </ref> autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, <p> 60, 9, 213, 214, 215, 41, 216, 120] 114, 115, 105, 106, 116, 117, 118] 3.10 Geographical index The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France <ref> [30, 31, 29, 179, 149, 183, 21] </ref> * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, <p> lizard using gen. prog. [206] Cart centering and broom balancing by gen. breeding pop. of cntr. strategy prog. [109] Causality in gen. prog. [125] cell Gen. synthesis of Boolean neural networks with a * rewriting developmental process [32, 15] cellular Adding learning to the * development process: a comparative study <ref> [21] </ref> Neural network synthesis using * encoding and the GA [194] * encoding as a graph grammar [31] * encoding of gen. neural networks [98] changing Distr. gen. prog. for on-line prediction in * environments [164] chromosomes Differentiable * The gen. prog. of switchable shape-genes [92] Circuit synthesis through gen. prog. <p> * self-replicating and self-improving entities [43] emergent properties Microbehaviors and dynamical syst. : Economic routines as * of adaptive syst. s [48] encoding A non-linear gen. process for data * and for solving problems using automatically defined functions [194] Cellular* as a graph grammar [31] Cellular* of gen. neural networks <ref> [21] </ref> Neural network synthesis using cellular * and the GA [52] - Non-linear gen. process for data * and for solving problems using automatically defined functions [182] engine IC * misfire detection alg. generation using gen. prog. [75] enrichment The effect of pop. * in gen. prog. [49] entities A non-linear <p> Prog. : On Prog. ming Computers by Means of * and Gen. [153] neural nets Gen. prog. of minimal * using Occam's razor [224] neural network Gen. generation of both the weights and architecture for a * [30] - Gen. prog. appl. to * design <ref> [21] </ref> * synthesis using cellular encoding and the GA [31] neural networks Cellular encoding of gen. * [125] - Gen. synthesis of Boolean * with a cell rewriting deve lopmental process [149] - Gen. synthesis of modular * [64] - Gen. prog. for the search of a new learning rule for <p> - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of * syst. ident. [92] synthesis Circuit * through gen. prog. [125] - Gen. * of Boolean neural networks with a cell rewriting developmental process [149] - Gen. * of modular neural networks <ref> [21] </ref> Neural network * using cellular encoding and the GA [112] Temporal data processing using gen. prog. [95] Terrain flattening by autonomous robot: A gen. prog. appl. [97] territory-defining Concurrent evol. of * behavior in birds using gen. prog. [116] testbed The mating pool: A * for experiments in the evol.
Reference: [22] <author> Minga Jiang. </author> <title> A hierarchical genetic system for symbolic function identification. </title> <type> PhD thesis, </type> <institution> University of Montana, </institution> <year> 1992. </year> <note> y(Langdon/bib) ga:JiangThesis. </note>
Reference-contexts: strategies for the Caribbean Anolis lizard using gen. prog. 20 [11, 39] foraging Evol. of food * strategies for the Caribbean Anolis lizard using gen. prog. [161] formation Concept * and decision tree induction using the gen. prog. paradigm [134] function A hierarchical appr. to learning the Boolean multiplexer * <ref> [230, 22] </ref> A hierarchical gen. syst. for symbolic * ident. [205] An adaptive * ident. syst. [208] Finding an impulse response * using gen. prog. [136] Hierarchical automatic * definition in gen. prog. [60] Scalable learning in gen. prog. using automatic * definition [48] functions A non-linear gen. process for data <p> group An evolved vision-based behavioral model of coordinated * motion [244] halting Gen. prog. , indexed memory, the * problem, and other curiosities [132] harsh Looping as a means to survival: playing Russian roulette in a * environment [134] hierarchical A * appr. to learning the Boolean mul tiplexer function <ref> [230, 22] </ref> A* gen. syst. for symbolic function ident. [136] * automatic function definition in gen. prog. [217] * GAs operating on pop. of computer prog. [180] * selforganization in gen. prog. [87, 38] - Prog. search with a * variable length Rep. : Gen. prog. , simulated annealing and hill <p> , simulated annealing and hill climbing [121, 37] high-level Coevolving * Rep. [87, 38] hill climbing Prog. search with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and * [89, 33] hill-climbing Gen. prog. with local * [182] IC engine misfire detection alg. generation using gen. prog. <ref> [230, 22] </ref> identification A hierarchical gen. syst. for symbolic function * [205] An adaptive function * syst. [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. * [34] Solving* problems by structured GAs [242] image Gen. generation of "dendritic <p> training subset sel. for * learning in gen. prog. [132] survival Looping as a means to * playing Russian rou lette in a harsh environment [164] switchable Differentiable chromosomes The gen. prog. of * shape-genes [116] symbol The mating pool: A testbed for experiments in the evol. of * syst. <ref> [230, 22] </ref> symbolic A hierarchical gen. syst. for * function ident. [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of * syst. ident. [92] synthesis Circuit * through gen. prog. [125] - Gen. * of Boolean neural networks with a cell
Reference: [23] <author> Walter Alden Tackett. </author> <title> Recombination, selection, and the genetic construction of computer programs. </title> <type> PhD thesis, </type> <institution> University of Southern California, Department of Electrical Engineering Systems, </institution> <year> 1994. </year> <note> y(Langdon/bib) ga94dTackett. </note>
Reference-contexts: of functions [115] compression Complexity * and evol. [161] Concept formation and decision tree induction using the gen. prog. paradigm [97] Concurrent evol. of territory-defining behavior in birds using gen. prog. [96] constrained Feasibility of evolving self-learned pattern recognition appl. toward the solution of a * syst. using gen. prog. <ref> [23] </ref> construction Recombination, sel. , and the gen. * of computer prog. [66] Context preserving crossover in gen. prog. [102] Context-free language induction by evol. of determi nistic push-down automata using gen. prog. [206] control Cart centering and broom balancing by gen. breeding pop. of * strategy prog. [166] - Evol. <p> * appl. toward the solution of a constrained syst. using gen. prog. [16] Beagle- A Darwinian appr. to pattern * [212] recognize Automated discovery of detectors and iteration-performing calculations to * patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using iteration-performing calculations in gen. prog. <ref> [23] </ref> Recombination sel. , and the gen. construction of computer prog. <p> Rep. : Gen. prog. , simulated annealing and hill climbing [85] selection Dynamic training subset * for supervised lear ning in gen. prog. [19] - Gen. prog. as a means for prog. ming computers by nat. * [25] On the origin of effective procedures by means of arti ficial * <ref> [23] </ref> Recombination,* and the gen. construction of compu ter prog. [77] The unique implications of brood * for gen. prog. [49] self-improving A non-linear gen. process for problem solving using spontaneously emergent self-replicating and * en tities [53] - Non-linear gen. process for problem solving using spon taneously emergent self-replicating and
Reference: [24] <author> Joseph F. Hicklin. </author> <title> Application of the genetic algorithm to automatic program generation. </title> <type> Master's thesis, </type> <institution> University of Idaho, Department of Computer Science, Moscow, </institution> <year> 1986. </year> <note> y([10]) ga:HicklinMSThesis. </note>
Reference-contexts: [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table gives references to the contri butions published annually. 1981, [16] 1986, <ref> [187, 24] </ref> 1989, [217] 51, 207, 54, 55] 127, 123, 134, 223, 224, 46, 14, 129, 130, 191] 225, 226, 10, 227, 228, 136, 48, 49, 11, 39, 47, 53, 52, 163, 1993, [177, 44, 29, 179, 148, 36, 17, 168, 132, 152, 208, 229, 43, 28, 153, 35, 18, 37, <p> using gen. prog. [65] application A gen. prog. * in virtual reality [63] Learning monitoring strategies: a difficult gen. prog. * [72] * of gen. prog. in analyzing multiple steady states of dynamical syst. [176] * of search methods to sch. problem in plastics forming plant: A binary Rep. appr. <ref> [24] </ref> * of the GA to automatic prog. generation [95] Terrain flattening by autonomous robot: A gen. prog. * [96] applied Feasibility of evolving self-learned pattern recognition * toward the solution of a constrained syst. using gen. prog. [30] - Gen. prog. * to neural network design [158] - Perf. improvement <p> images [212] * discovery of detectors and iteration-performing calculations to recognize patterns in protein sequences using gen. prog. [150] * learning of a detector for ff-helices in protein sequences via gen. prog. [68] * learning of a detector for the cores of ff-helices in pro tein sequences via gen. prog. <ref> [24] </ref> automatic Appl. of the GA to * prog. generation [170] Criticism, culture, and the * generation of artworks [9] - Gen. Prog. <p> Geneettinen ohjelmointi [Gen. prog. by Koza] [146] generate Evolving a computer prog. to * random num bers using the gen. prog. paradigm [144] Using the GA to * Lisp source code to solve the priso ner's dilemma [140] generation A Rep. for the adaptive * of simple sequen tial prog. <ref> [24] </ref> - Appl. of the GA to automatic prog. * [154] Automatic* of prog. for crawling and walking [170] Criticism, culture, and the automatic * of artworks [224] - Gen. * of both the weights and architecture for a neural network [242] - Gen. * of "dendritic trees" for image classification
Reference: [25] <author> Steven Self. </author> <title> On the origin of effective procedures by means of artificial selection. </title> <type> Master's thesis, </type> <institution> University of London, Birkbeck College, </institution> <year> 1992. </year> <note> y(Langdon/bib) ga:SelfMSthesis. </note>
Reference-contexts: of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom <ref> [26, 25, 132, 113] </ref> * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, 221, 222, 146, 127, 123, 134, 228, 136, 48, 49, 11, 39, 47, 53, 52, 40, 128, 238, 44, 35, 20, 8, 154, 155, 234, 235, 62, 173, 63, 91, <p> the architecture of a multipart prog. in gen. prog. [189] architectures Evol. of autonomous robot cntr. * [192] artificial Artificial embryology: The gen. prog. of an * embryo [192] * embryology: The gen. prog. of an artificial embryo [14] * evol. for computer graphics [184] * morality and gen. prog. <ref> [25] </ref> On the origin of effective procedures by means of * sel. [223] artificial intelligence A gen. appr. to * [218] - Gen. breeding pop. of computer prog. to solve problems in * [170] artworks Criticism, culture, and the automatic genera tion of * [102] automata Context-free language induction by evol. <p> Prog. : On Prog. ming Computers by * of Nat. Sel. and Gen. [132] Looping as a * to survival: playing Russian roulette in a harsh environment <ref> [25] </ref> On the origin of effective procedures by * of artificial sel. [62] memory Evol. of mapmaking: Learning, planning, and * using gen. prog. [78] - Turing completeness in the language of gen. prog. with indexed * [245] mental Learning * models [108] mental models The evol. of agents that build <p> operating Hierarchical GAs * on pop. of computer prog. [41] operations Architecture-altering * for evolving the arc hitecture of a multipart prog. in gen. prog. [219, 207] optimal Gen. breeding of non-linear * cntr. strate gies for broom balancing [138] optimization Co-evolving parasites improve simulated evol. as an * procedure <ref> [25] </ref> origin On the * of effective procedures by means of ar tificial sel. [161] paradigm Concept formation and decision tree induc tion using the gen. prog. * [146] Evolving a computer prog. to generate random num bers using the gen. prog. * [195] - Gen. prog. : A new * <p> functions [110] Solving complex * with GAs [34] Solving ident. * by structured GAs [225] The gen. prog. paradigm: Gen. breeding pop. of computer prog. to solve * [238, 20] procedural Interactive evol. of equations for * mo dels [138] procedure Co-evolving parasites improve simulated evol. as an opt. * <ref> [25] </ref> procedures On the origin of effective * by means of artificial sel. [48] process A non-linear gen. * for data encoding and for solving problems using automatically defined functions [49] A non-linear gen. * for problem solving using sponta neously emergent self-replicating and self-improving entities [32, 15] Adding learning to <p> * prog. spaces [87, 38] - Prog. * with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and hill climbing [85] selection Dynamic training subset * for supervised lear ning in gen. prog. [19] - Gen. prog. as a means for prog. ming computers by nat. * <ref> [25] </ref> On the origin of effective procedures by means of arti ficial * [23] Recombination,* and the gen. construction of compu ter prog. [77] The unique implications of brood * for gen. prog. [49] self-improving A non-linear gen. process for problem solving using spontaneously emergent self-replicating and * en tities [53]
Reference: [26] <author> A. Jones. </author> <title> Writing programs using genetic algorithms. </title> <type> Master's thesis, </type> <institution> University of Manchester, Department of Computer Science, </institution> <year> 1991. </year> <journal> y(Langdon/bib) ga:AJonesMSthesis. </journal> <volume> 25 26 </volume>
Reference-contexts: of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom <ref> [26, 25, 132, 113] </ref> * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, 221, 222, 146, 127, 123, 134, 228, 136, 48, 49, 11, 39, 47, 53, 52, 40, 128, 238, 44, 35, 20, 8, 154, 155, 234, 235, 62, 173, 63, 91, <p> task Evol. of subsumption architecture that perform a * for an autonomous mobile robot via gen. prog. [117] ways Two * of discovering the size and shape of a com puter prog. to solve a problem [224] weights Gen. generation of both the * and architecture for a neural network <ref> [26] </ref> Writing prog. using GAs [129] Zoo The computer * - evol. in a box
Reference: [27] <author> Ulrich Wilhelm Thonemann. </author> <title> Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beispiel des Diskreten Quadratischen Layoutproblems. </title> <type> Master's thesis, </type> <institution> University of Paderborn, Germany, </institution> <year> 1992. </year> <note> y(Koza) ga:ThonemannMSThesis. </note>
Reference-contexts: [159] Simultaneous* of detectors and a way of using the detectors via gen. prog. [152] Simultaneous* of reusable detectors and subroutines using gen. prog. [155] discrimination Gen. prog. for feature discovery and image * [188] discussion Putting INK into a BIRo: A * of problem domain knowledge for evol. robotics <ref> [27] </ref> Diskreten Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beispiel des * Quadratischen Layoutproblems [29] distribuees Apprentissage de strategies locales pour architechtures reactives * par prog. mation genetique [179] distributed Learning * reactive strategies by gen. prog. for the general job shop problem [98] * gen. prog. for on-line <p> [246] - Satunnaistajan etsinta [Gen. prog. random number generator by * [102] language Context-free * induction by evol. of determi nistic push-down automata using gen. prog. [78] - Turing completeness in the * of gen. prog. with in dexed memory [35] laser Signal filtering and data processing for * rheometry <ref> [27] </ref> Layoutproblems Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beis piel des Diskreten Quadratischen * [177, 44] learn Gen. prog. to * an agent's monitoring strategy [134] learning A hierarchical appr. to * the Boolean mul tiplexer function [32, 15] Adding* to the cellular development process: a com parative <p> Non-linear gen. * for use with co-evolving pop. [55] - Non-linear gen. * for use with plural co-evolving pop. [35] processing Signal filtering and data * for laser rheo metry [112] Temporal data * using gen. prog. [29] programmation genetique Apprentissage de strategies locales pour architechtures reactives distribuees par * <ref> [27] </ref> Programmierung Verbesserung des Simulated Annealing unter Anwendung Genetischer * am Beispiel des Diskreten Quadratischen Layoutproblems [226] programming Automatic * of robots using gen. prog. [11, 39] - Evol. of food foraging strategies for the Caribbean Anolis lizard using gen. * [201] - Geneettinen ohjelmointi [Gen. * by Koza] [86] - <p> cores of ff helices in * via gen. prog. [70] Recognizing patterns in * using iteration-performing calculations in gen. prog. [102] push-down Context-free language induction by evol. of deterministic * automata using gen. prog. [188] Putting INK into a BIRo: A discussion of problem do main knowledge for evol. robotics <ref> [27] </ref> Quadratischen Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beispiel des Diskreten * Layoutproblems [71] queries The use of gen. prog. to build * for info ret rieval [246] random number generator Satunnaistajan etsinta [Gen. prog. * by Koza] [146] random numbers Evolving a computer prog. to gene rate <p> * [35] Signal filtering and data processing for laser rheometry [138] simulated Co-evolving parasites improve * evol. as an opt. procedure [79] simulated annealing Finding improved * schedules with gen. prog. [87, 38] - Prog. search with a hierarchical variable length Rep. : Gen. prog. , * and hill climbing <ref> [27] </ref> Simulated Annealing Verbesserung des * unter Anwendung Genetischer Programmierung am Beispiel des Dis kreten Quadratischen Layoutproblems [159] Simultaneous discovery of detectors and a way of using the detectors via gen. prog. [152] * discovery of reusable detectors and subroutines using gen. prog. [117] size Two ways of discovering the * <p> brood sel. for gen. prog. [80] upgrading Learning and * rules for an OCR syst. using gen. prog. [87, 38] variable Prog. search with a hierarchical * length Rep. : Gen. prog. , simulated annealing and hill climbing [88] variation Genotype-phenotype-mapping and neutral * A case study in gen. prog. <ref> [27] </ref> Verbesserung des Simulated Annealing unter Anwen-dung Genetischer Programmierung am Beispiel des Diskreten Quadratischen Layoutproblems [215] video Gen. prog.
Reference: [28] <author> David J. Montana. </author> <title> Strongly typed genetic programming. </title> <type> BBN Technical Report #7866, </type> <institution> Bolt Beranek and Newman, Inc., </institution> <year> 1993. </year> <note> (available via anonymous ftp cite ftp.cc.utexas.edu directory /pub/genetic-programming/papers file stgp.ps.Z) ga:Montana93a. </note>
Reference-contexts: typed gen. prog. in evolving cooperation * [186] The evol. of sporting * [206] strategy Cart centering and broom balancing by gen. breeding pop. of cntr. * prog. [177, 44] - Gen. prog. to learn an agent's monitoring * [203] - Meta-level * learning for GA based on structured Rep. <ref> [28] </ref> Strongly typed gen. prog. [111] * typed gen. prog. in evolving cooperation strategies [91] structure Exploring the underlying * of nat. images through gen. prog. [169] structured Evol. learning of predatory behaviors based on * classifiers [203] - Meta-level strategy learning for GA based on * Rep. [34] Solving ident. <p> finding a cntr. to back up a tractor-trailed * [227] truck backer upper problem A gen. appr. to the * and the inter-twined spiral problem [78] Turing completeness in the language of gen. prog. with indexed memory [118] turing-complete Evolving * prog. for a register mac hine with self-modifying code <ref> [28] </ref> typed Strongly * gen. prog. [111] Strongly* gen. prog. in evolving cooperation strate gies [91] underlying Exploring the * structure of nat. images through gen. prog. [77] unique The * implications of brood sel. for gen. prog. [80] upgrading Learning and * rules for an OCR syst. using gen. prog.
Reference: [29] <author> Laurent Atlan and Jerome Bonnet. </author> <title> Apprentissage de strategies locales pour architechtures reactives distribuees par programmation genetique. </title> <type> Technical Report TR MN-93-4, </type> <institution> Dassault-Aviation, DGT/DEA/IA2, Laboratoire d'intelligence artificielle et informatique avancee, 78 Quai Marcel Dassault - 92214 Saint Cloud, France, </institution> <year> 1993. </year> <note> y([179]) ga:Atlan93a. </note>
Reference-contexts: 60, 9, 213, 214, 215, 41, 216, 120] 114, 115, 105, 106, 116, 117, 118] 3.10 Geographical index The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France <ref> [30, 31, 29, 179, 149, 183, 21] </ref> * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, <p> [96] applied Feasibility of evolving self-learned pattern recognition * toward the solution of a constrained syst. using gen. prog. [30] - Gen. prog. * to neural network design [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as * to a problem of symbolic syst. ident. <ref> [29] </ref> Apprentissage de strategies locales pour architechtu res reactives distribuees par prog. mation genetique [29] architechtures Apprentissage de strategies locales pour * reactives distribuees par prog. mation genetique [41] architecture Architecture-altering operations for evol ving the * of a multipart prog. in gen. prog. [216] - Evol. of subsumption * that <p> constrained syst. using gen. prog. [30] - Gen. prog. * to neural network design [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as * to a problem of symbolic syst. ident. <ref> [29] </ref> Apprentissage de strategies locales pour architechtu res reactives distribuees par prog. mation genetique [29] architechtures Apprentissage de strategies locales pour * reactives distribuees par prog. mation genetique [41] architecture Architecture-altering operations for evol ving the * of a multipart prog. in gen. prog. [216] - Evol. of subsumption * that perform a wall following task for an autonomous mobile robot via gen. prog. [104] <p> of reusable detectors and subroutines using gen. prog. [155] discrimination Gen. prog. for feature discovery and image * [188] discussion Putting INK into a BIRo: A * of problem domain knowledge for evol. robotics [27] Diskreten Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beispiel des * Quadratischen Layoutproblems <ref> [29] </ref> distribuees Apprentissage de strategies locales pour architechtures reactives * par prog. mation genetique [179] distributed Learning * reactive strategies by gen. prog. for the general job shop problem [98] * gen. prog. for on-line prediction in changing environ ments [178] distributive Learning * reactive strategies by gen. prog. for the <p> climbing [157] Lessons Evolving a sort: * in gen. prog. [144] Lisp Using the GA to generate * source code to solve the prisoner's dilemma [11, 39] lizard Evol. of food foraging strategies for the Carib bean Anolis * using gen. prog. [89, 33] local Gen. prog. with * hill-climbing <ref> [29] </ref> locales Apprentissage de strategies * pour architechtu res reactives distribuees par prog. mation genetique [132] Looping as a means to survival: playing Russian rou lette in a harsh environment [86] L-system Gen. * prog. [118] machine Evolving turing-complete prog. for a register * with self-modifying code [158] machine learning Perf. <p> for problem solving using sponta neously emergent self-replicating and self-improving entities [54] - Non-linear gen. * for use with co-evolving pop. [55] - Non-linear gen. * for use with plural co-evolving pop. [35] processing Signal filtering and data * for laser rheo metry [112] Temporal data * using gen. prog. <ref> [29] </ref> programmation genetique Apprentissage de strategies locales pour architechtures reactives distribuees par * [27] Programmierung Verbesserung des Simulated Annealing unter Anwendung Genetischer * am Beispiel des Diskreten Quadratischen Layoutproblems [226] programming Automatic * of robots using gen. prog. [11, 39] - Evol. of food foraging strategies for the Caribbean Anolis lizard <p> gen. prog. [72] steady states Appl. of gen. prog. in analyzing mul tiple * of dynamical syst. [130] Steerable Gennets The gen. prog. of steerable be haviors in Gennets [130] - Steerable Gennets The gen. prog. of * behaviors in Gennets [101] Stock price time series prediction using gen. prog. <ref> [29] </ref> strategies Apprentissage de * locales pour architechtu res reactives distribuees par prog. mation genetique [11, 39] strategies Evol. of food foraging * for the Caribbean Anolis lizard using gen. prog. [94] - Evol. of trade * using GAs and gen. prog. [187] - Evol. learning * [219, 207] - Gen.
Reference: [30] <editor> Laurent Atlan and Jean-Arcady Meyer. </editor> <title> Genetic programming applied to neural network design. </title> <type> Technical Report BioInfo 91-01, </type> <institution> Ecole Normale Superiore, Groupe de BioInformatique, </institution> <year> 1991. </year> <note> y(Meyer) ga:JAMeyer91b. </note>
Reference-contexts: 60, 9, 213, 214, 215, 41, 216, 120] 114, 115, 105, 106, 116, 117, 118] 3.10 Geographical index The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France <ref> [30, 31, 29, 179, 149, 183, 21] </ref> * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, <p> methods to sch. problem in plastics forming plant: A binary Rep. appr. [24] * of the GA to automatic prog. generation [95] Terrain flattening by autonomous robot: A gen. prog. * [96] applied Feasibility of evolving self-learned pattern recognition * toward the solution of a constrained syst. using gen. prog. <ref> [30] </ref> - Gen. prog. * to neural network design [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as * to a problem of symbolic syst. ident. [29] Apprentissage de strategies locales pour architechtu res reactives distribuees par prog. mation genetique [29] architechtures Apprentissage de strategies locales <p> cardiac magnetic resonance images [136] Hierarchical automatic function * in gen. prog. [60] Scalable learning in gen. prog. using automatic func tion * [242] dendritic Gen. generation of * trees" for image classi fication [100] design Detector * by gen. prog. for automated border definition in cardiac magnetic resonance images <ref> [30] </ref> - Gen. prog. appl. to neural network * [182] detection IC engine misfire * alg. generation using gen. prog. [150] detector Automated learning of a * for ff-helices in pro tein sequences via gen. prog. [68] Automated learning of a * for the cores of ff-helices in protein sequences via <p> Prog. : On Prog. ming Computers by Means of * and Gen. [153] neural nets Gen. prog. of minimal * using Occam's razor [224] neural network Gen. generation of both the weights and architecture for a * <ref> [30] </ref> - Gen. prog. appl. to * design [21] * synthesis using cellular encoding and the GA [31] neural networks Cellular encoding of gen. * [125] - Gen. synthesis of Boolean * with a cell rewriting deve lopmental process [149] - Gen. synthesis of modular * [64] - Gen. prog. for
Reference: [31] <author> Frederic C. Gruau. </author> <title> Cellular encoding of genetic neural networks. </title> <type> Technical Report Technical Report 92-21, </type> <institution> Ecole Normale Superieure de Lyon, Laboratoire de l'Informatique du Parallelisme, </institution> <year> 1992. </year> <note> y(McGregor93a Koza) ga:Gruau92a. </note>
Reference-contexts: 60, 9, 213, 214, 215, 41, 216, 120] 114, 115, 105, 106, 116, 117, 118] 3.10 Geographical index The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France <ref> [30, 31, 29, 179, 149, 183, 21] </ref> * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, <p> prog. [109] Causality in gen. prog. [125] cell Gen. synthesis of Boolean neural networks with a * rewriting developmental process [32, 15] cellular Adding learning to the * development process: a comparative study [21] Neural network synthesis using * encoding and the GA [194] * encoding as a graph grammar <ref> [31] </ref> * encoding of gen. neural networks [98] changing Distr. gen. prog. for on-line prediction in * environments [164] chromosomes Differentiable * The gen. prog. of switchable shape-genes [92] Circuit synthesis through gen. prog. [242] classification Gen. generation of "dendritic trees" for image * [169] classifiers Evol. learning of predatory behaviors <p> for problem solving using spon taneously * self-replicating and self-improving entities [43] emergent properties Microbehaviors and dynamical syst. : Economic routines as * of adaptive syst. s [48] encoding A non-linear gen. process for data * and for solving problems using automatically defined functions [194] Cellular* as a graph grammar <ref> [31] </ref> Cellular* of gen. neural networks [21] Neural network synthesis using cellular * and the GA [52] - Non-linear gen. process for data * and for solving problems using automatically defined functions [182] engine IC * misfire detection alg. generation using gen. prog. [75] enrichment The effect of pop. * in <p> ming Computers by Means of * and Gen. [153] neural nets Gen. prog. of minimal * using Occam's razor [224] neural network Gen. generation of both the weights and architecture for a * [30] - Gen. prog. appl. to * design [21] * synthesis using cellular encoding and the GA <ref> [31] </ref> neural networks Cellular encoding of gen. * [125] - Gen. synthesis of Boolean * with a cell rewriting deve lopmental process [149] - Gen. synthesis of modular * [64] - Gen. prog. for the search of a new learning rule for * [88] neutral Genotype-phenotype-mapping and * variation - A
Reference: [32] <author> Frederic C. Gruau and Darrell Whitley. </author> <title> Adding learning to the cellular development process: a comparative study. </title> <type> Technical Report RR93-04, </type> <institution> Ecole Normale Superieure de Lyon, Laboratoire de l'Informatique du Parallelisme, </institution> <year> 1993. </year> <note> y(Koza) ga:Gruau93c. </note>
Reference-contexts: images [11, 39] Caribbean Evol. of food foraging strategies for the * Anolis lizard using gen. prog. [206] Cart centering and broom balancing by gen. breeding pop. of cntr. strategy prog. [109] Causality in gen. prog. [125] cell Gen. synthesis of Boolean neural networks with a * rewriting developmental process <ref> [32, 15] </ref> cellular Adding learning to the * development process: a comparative study [21] Neural network synthesis using * encoding and the GA [194] * encoding as a graph grammar [31] * encoding of gen. neural networks [98] changing Distr. gen. prog. for on-line prediction in * environments [164] chromosomes Differentiable <p> prog. to cntr. independently-acting agents [123] co-evolution Gen. evol. and * of computer prog. [121, 37] Coevolving high-level Rep. [138] Co-evolving parasites improve simulated evol. as an opt. procedure [55] - Non-linear gen. process for use with plural * pop. [54] - Non-linear gen. process for use with * pop. <ref> [32, 15] </ref> comparative Adding learning to the cellular develop ment process: a * study [110] complex Solving * problems with GAs [115] Complexity compression and evol. [51] composition Non-linear GAs for solving problems by finding a fit * of functions [115] compression Complexity * and evol. [161] Concept formation and decision <p> sequences using gen. prog. [152] Simultaneous discovery of reusable * and subroutines using gen. prog. [159] Simultaneous discovery of * and a way of using the * via gen. prog. [102] deterministic Context-free language induction by evol. of * push-down automata using gen. prog. [12] Developing a gen. prog. syst. <ref> [32, 15] </ref> development Adding learning to the cellular * process: a comparative study [125] developmental Gen. synthesis of Boolean neural networks with a cell rewriting * process [164] Differentiable chromosomes The gen. prog. of switc hable shape-genes [81] directed On the use of a * acyclic graph to represent a pop. <p> [35] laser Signal filtering and data processing for * rheometry [27] Layoutproblems Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beis piel des Diskreten Quadratischen * [177, 44] learn Gen. prog. to * an agent's monitoring strategy [134] learning A hierarchical appr. to * the Boolean mul tiplexer function <ref> [32, 15] </ref> Adding* to the cellular development process: a com parative study [150] Automated* of a detector for ff-helices in protein sequences via gen. prog. [68] Automated* of a detector for the cores of ff-helices in protein sequences via gen. prog. [85] Dynamic training subset sel. for supervised * in gen. <p> as an opt. * [25] procedures On the origin of effective * by means of artificial sel. [48] process A non-linear gen. * for data encoding and for solving problems using automatically defined functions [49] A non-linear gen. * for problem solving using sponta neously emergent self-replicating and self-improving entities <ref> [32, 15] </ref> Adding learning to the cellular development * a com parative study [125] - Gen. synthesis of Boolean neural networks with a cell rewriting developmental * [52] - Non-linear gen. * for data encoding and for solving problems using automatically defined functions [53] - Non-linear gen. * for problem solving
Reference: [33] <author> Hitoshi Iba and Taisuke Sato. </author> <title> Genetic programming with local hill-climbing. </title> <type> Technical Report ETL-TR-94-4, </type> <institution> Elect-rotechnical Laboratory, </institution> <year> 1994. </year> <note> (also as [89])y(Langdon/bib) ga94cHIba. </note>
Reference-contexts: The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) [153, 232, 115, 118] * Japan <ref> [176, 33, 83, 112] </ref> * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, 221, 222, 146, 127, 123, 134, 228, 136, 48, 49, 11, 39, 47, 53, 52, 40, 128, 238, <p> selforganization in gen. prog. [87, 38] - Prog. search with a * variable length Rep. : Gen. prog. , simulated annealing and hill climbing [121, 37] high-level Coevolving * Rep. [87, 38] hill climbing Prog. search with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and * <ref> [89, 33] </ref> hill-climbing Gen. prog. with local * [182] IC engine misfire detection alg. generation using gen. prog. [230, 22] identification A hierarchical gen. syst. for symbolic function * [205] An adaptive function * syst. [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to <p> : Gen. prog. , simulated annealing and hill climbing [157] Lessons Evolving a sort: * in gen. prog. [144] Lisp Using the GA to generate * source code to solve the prisoner's dilemma [11, 39] lizard Evol. of food foraging strategies for the Carib bean Anolis * using gen. prog. <ref> [89, 33] </ref> local Gen. prog. with * hill-climbing [29] locales Apprentissage de strategies * pour architechtu res reactives distribuees par prog. mation genetique [132] Looping as a means to survival: playing Russian rou lette in a harsh environment [86] L-system Gen. * prog. [118] machine Evolving turing-complete prog. for a register
Reference: [34] <author> Hitoshi Iba, Hugo de Garis, and Taisuke Sato. </author> <title> Solving identification problems by structured genetic algorithms. </title> <type> Technical Report ETL-TR-93-17, </type> <institution> Electrotechnical Laboratory, </institution> <address> Japan, 1993. y(Koza) ga:deGaris93g. </address>
Reference-contexts: * [182] IC engine misfire detection alg. generation using gen. prog. [230, 22] identification A hierarchical gen. syst. for symbolic function * [205] An adaptive function * syst. [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. * <ref> [34] </ref> Solving* problems by structured GAs [242] image Gen. generation of "dendritic trees" for * classi fication [155] - Gen. prog. for feature discovery and * discrimination [8] images Evolving * [91] Exploring the underlying structure of nat. * through gen. prog. [77] implications The unique * of brood sel. for <p> computer prog. to solve * [51] - Non-linear GAs for solving * by finding a fit composi tion of functions [50] - Non-linear GAs for solving * [52] - Non-linear gen. process for data encoding and for sol ving * using automatically defined functions [110] Solving complex * with GAs <ref> [34] </ref> Solving ident. * by structured GAs [225] The gen. prog. paradigm: Gen. breeding pop. of computer prog. to solve * [238, 20] procedural Interactive evol. of equations for * mo dels [138] procedure Co-evolving parasites improve simulated evol. as an opt. * [25] procedures On the origin of effective * <p> prog. to * a problem [144] Using the GA to generate Lisp source code to * the prisoner's dilemma [46, 47] solving A non-linear GAs for * problems [48] A non-linear gen. process for data encoding and for * problems using automatically defined functions [110] * complex problems with GAs <ref> [34] </ref> * ident. problems by structured GAs [51] - Non-linear GAs for * problems by finding a fit compo sition of functions [50] - Non-linear GAs for * problems [52] - Non-linear gen. process for data encoding and for * problems using automatically defined functions [157] sort Evolving a * Lessons <p> structured Rep. [28] Strongly typed gen. prog. [111] * typed gen. prog. in evolving cooperation strategies [91] structure Exploring the underlying * of nat. images through gen. prog. [169] structured Evol. learning of predatory behaviors based on * classifiers [203] - Meta-level strategy learning for GA based on * Rep. <ref> [34] </ref> Solving ident. problems by * GAs [142] Tree* rules in GAs [229] subroutines Discovery of a main prog. and reusable * using gen. prog. [152] Simultaneous discovery of reusable detectors and * using gen. prog. [175] The evol. induction of * [85] subset Dynamic training * sel. for supervised learning
Reference: [35] <author> E. H. N. Oakley. </author> <title> Signal filtering and data processing for laser rheometry. </title> <institution> Technical report ?, Institute of Naval Medicine, </institution> <year> 1993. </year> <note> y(Langdon/bib) ga:Oakley93a. </note>
Reference-contexts: [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, <ref> [35] </ref> parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, <p> random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, <ref> [35, 182] </ref> filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic <p> discovery of * functions as appl. to a problem of symbolic syst. ident. [59] facts Gen. prog. : Myths and * [96] Feasibility of evolving self-learned pattern recognition appl. toward the solution of a constrained syst. using gen. prog. [155] feature Gen. prog. for * discovery and image discrimi nation <ref> [35] </ref> filtering Signal * and data processing for laser rheo metry [51] fit Non-linear GAs for solving problems by finding a * composition of functions [69] Fitness landscapes and difficulty in gen. prog. [95] flattening Terrain * by autonomous robot: A gen. prog. appl. [11, 39] food Evol. of * foraging <p> evol. robotics [201] Koza Geneettinen ohjelmointi [Gen. prog. by * [246] - Satunnaistajan etsinta [Gen. prog. random number generator by * [102] language Context-free * induction by evol. of determi nistic push-down automata using gen. prog. [78] - Turing completeness in the * of gen. prog. with in dexed memory <ref> [35] </ref> laser Signal filtering and data processing for * rheometry [27] Layoutproblems Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beis piel des Diskreten Quadratischen * [177, 44] learn Gen. prog. to * an agent's monitoring strategy [134] learning A hierarchical appr. to * the Boolean mul tiplexer function [32, <p> gen. * for data encoding and for solving problems using automatically defined functions [53] - Non-linear gen. * for problem solving using sponta neously emergent self-replicating and self-improving entities [54] - Non-linear gen. * for use with co-evolving pop. [55] - Non-linear gen. * for use with plural co-evolving pop. <ref> [35] </ref> processing Signal filtering and data * for laser rheo metry [112] Temporal data * using gen. prog. [29] programmation genetique Apprentissage de strategies locales pour architechtures reactives distribuees par * [27] Programmierung Verbesserung des Simulated Annealing unter Anwendung Genetischer * am Beispiel des Diskreten Quadratischen Layoutproblems [226] programming Automatic * <p> Prog. II, Automatic Discovery of * Prog. [152] Simultaneous discovery of * detectors and subroutines using gen. prog. [125] rewriting Gen. synthesis of Boolean neural networks with a cell * developmental process <ref> [35] </ref> rheometry Signal filtering and data processing for laser * [99] robot Evol. by gen. prog. of a spatial * juggling cntr. alg. [189] - Evol. of autonomous * cntr. architectures [95] Terrain flattening by autonomous * A gen. prog. appl. [181] robotic Evolving co-operation in autonomous * syst. [188] robotics <p> of * and evol. arily self improving computer prog. [140] sequential A Rep. for the adaptive generation of simple * prog. [117] shape Two ways of discovering the size and * of a com puter prog. to solve a problem [164] shape-genes Differentiable chromosomes The gen. prog. of switchable * <ref> [35] </ref> Signal filtering and data processing for laser rheometry [138] simulated Co-evolving parasites improve * evol. as an opt. procedure [79] simulated annealing Finding improved * schedules with gen. prog. [87, 38] - Prog. search with a hierarchical variable length Rep. : Gen. prog. , * and hill climbing [27] Simulated
Reference: [36] <editor> Wolfgang Banzhaf. </editor> <title> Genetic programming for pedestrians. </title> <type> Technical Report 93-03, </type> <institution> Mitsubishi Electric Research Laboratories, Cambridge Research Center, </institution> <year> 1993. </year> <note> (also as [148]; available via anonymous ftp cite ftp.cc.utexas.edu directory /pub/genetic-programming/papers file GenProg forPed.ps.Z) ga:Banzhaf93aa. </note>
Reference-contexts: recognition appl. toward the solution of a constrained syst. using gen. prog. [16] Beagle- A Darwinian appr. to * recognition [212] patterns Automated discovery of detectors and iteration-performing calculations to recognize * in protein sequences using gen. prog. [70] Recognizing* in protein sequences using iteration performing calculations in gen. prog. <ref> [148, 36] </ref> pedestrians Gen. prog. for * [216] perform Evol. of subsumption architecture that * a wall following task for an autonomous mobile robot via gen. prog. 22 [158] Performance improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. ident. [163] perspective
Reference: [37] <author> Peter J. Angeline and Jordan B. Pollack. </author> <title> Coevolving high-level representations. </title> <type> Technical Report 92-PA-COEVOLVE, </type> <institution> Ohio State University, Laboratory for Artificial Intelligence, </institution> <year> 1993. </year> <note> y(Koza) ga:Pollack93b. </note>
Reference-contexts: "dendritic trees" for image * [169] classifiers Evol. learning of predatory behaviors based on structured * [118] code Evolving turing-complete prog. for a register mac hine with self-modifying * [166] coevolution Evol. and * of computer prog. to cntr. independently-acting agents [123] co-evolution Gen. evol. and * of computer prog. <ref> [121, 37] </ref> Coevolving high-level Rep. [138] Co-evolving parasites improve simulated evol. as an opt. procedure [55] - Non-linear gen. process for use with plural * pop. [54] - Non-linear gen. process for use with * pop. [32, 15] comparative Adding learning to the cellular develop ment process: a * study [110] <p> A* gen. syst. for symbolic function ident. [136] * automatic function definition in gen. prog. [217] * GAs operating on pop. of computer prog. [180] * selforganization in gen. prog. [87, 38] - Prog. search with a * variable length Rep. : Gen. prog. , simulated annealing and hill climbing <ref> [121, 37] </ref> high-level Coevolving * Rep. [87, 38] hill climbing Prog. search with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and * [89, 33] hill-climbing Gen. prog. with local * [182] IC engine misfire detection alg. generation using gen. prog. [230, 22] identification A hierarchical gen. syst. <p> sequential prog. [176] - Appl. of search methods to sch. problem in plastics forming plant: A binary * appr. [203] - Meta-level strategy learning for GA based on structu red * [87, 38] - Prog. search with a hierarchical variable length * Gen. prog. , simulated annealing and hill climbing <ref> [121, 37] </ref> representations Coevolving high-level * [45] - Gen. prog. with adaptive * [76] Learning by adapting * in gen. prog. [71] retrieval The use of gen. prog. to build queries for info * [229] reusable Discovery of a main prog. and * subroutines using gen. prog. [9] - Gen.
Reference: [38] <author> Una-May O'Reilly and Franz Oppacher. </author> <title> Program search with a hierarchical variable length representation: Genetic programming, simulated annealing and hill climbing. </title> <type> Technical Report 94-04-021, </type> <institution> Santa Fe Institute, </institution> <year> 1994. </year> <note> y(Langdon/bib) ga94bOReilly. </note>
Reference-contexts: Russian roulette in a * environment [134] hierarchical A * appr. to learning the Boolean mul tiplexer function [230, 22] A* gen. syst. for symbolic function ident. [136] * automatic function definition in gen. prog. [217] * GAs operating on pop. of computer prog. [180] * selforganization in gen. prog. <ref> [87, 38] </ref> - Prog. search with a * variable length Rep. : Gen. prog. , simulated annealing and hill climbing [121, 37] high-level Coevolving * Rep. [87, 38] hill climbing Prog. search with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and * [89, 33] hill-climbing Gen. prog. <p> ident. [136] * automatic function definition in gen. prog. [217] * GAs operating on pop. of computer prog. [180] * selforganization in gen. prog. <ref> [87, 38] </ref> - Prog. search with a * variable length Rep. : Gen. prog. , simulated annealing and hill climbing [121, 37] high-level Coevolving * Rep. [87, 38] hill climbing Prog. search with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and * [89, 33] hill-climbing Gen. prog. with local * [182] IC engine misfire detection alg. generation using gen. prog. [230, 22] identification A hierarchical gen. syst. for symbolic function * [205] An <p> [179] * distr. reactive strategies by gen. prog. for the general job shop problem [178] * distributive reactive strategies by gen. prog. for the general job shop problem [245] * mental models [63] * monitoring strategies: a difficult gen. prog. appl. [60] Scalable* in gen. prog. using automatic function definition <ref> [87, 38] </ref> length Prog. search with a hierarchical variable * Rep. : Gen. prog. , simulated annealing and hill climbing [157] Lessons Evolving a sort: * in gen. prog. [144] Lisp Using the GA to generate * source code to solve the prisoner's dilemma [11, 39] lizard Evol. of food foraging <p> acyclic graph to * a pop. of computer prog. [140] representation A * for the adaptive generation of simple sequential prog. [176] - Appl. of search methods to sch. problem in plastics forming plant: A binary * appr. [203] - Meta-level strategy learning for GA based on structu red * <ref> [87, 38] </ref> - Prog. search with a hierarchical variable length * Gen. prog. , simulated annealing and hill climbing [121, 37] representations Coevolving high-level * [45] - Gen. prog. with adaptive * [76] Learning by adapting * in gen. prog. [71] retrieval The use of gen. prog. to build queries for <p> * problem in plastics forming plant: A binary Rep. appr. [176] search Appl. of * methods to sch. problem in plastics forming plant: A binary Rep. appr. [64] - Gen. prog. for the * of a new learning rule for neural networks [143] On using GAs to * prog. spaces <ref> [87, 38] </ref> - Prog. * with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and hill climbing [85] selection Dynamic training subset * for supervised lear ning in gen. prog. [19] - Gen. prog. as a means for prog. ming computers by nat. * [25] On the origin <p> * of a com puter prog. to solve a problem [164] shape-genes Differentiable chromosomes The gen. prog. of switchable * [35] Signal filtering and data processing for laser rheometry [138] simulated Co-evolving parasites improve * evol. as an opt. procedure [79] simulated annealing Finding improved * schedules with gen. prog. <ref> [87, 38] </ref> - Prog. search with a hierarchical variable length Rep. : Gen. prog. , * and hill climbing [27] Simulated Annealing Verbesserung des * unter Anwendung Genetischer Programmierung am Beispiel des Dis kreten Quadratischen Layoutproblems [159] Simultaneous discovery of detectors and a way of using the detectors via gen. prog. <p> typed Strongly * gen. prog. [111] Strongly* gen. prog. in evolving cooperation strate gies [91] underlying Exploring the * structure of nat. images through gen. prog. [77] unique The * implications of brood sel. for gen. prog. [80] upgrading Learning and * rules for an OCR syst. using gen. prog. <ref> [87, 38] </ref> variable Prog. search with a hierarchical * length Rep. : Gen. prog. , simulated annealing and hill climbing [88] variation Genotype-phenotype-mapping and neutral * A case study in gen. prog. [27] Verbesserung des Simulated Annealing unter Anwen-dung Genetischer Programmierung am Beispiel des Diskreten Quadratischen Layoutproblems [215] video Gen. prog.
Reference: [39] <author> John R. Koza, James P. Rice, and Jonathan Roughgarden. </author> <title> Evolution of food foraging strategies for the Caribbean anolis lizard using genetic programming. </title> <note> Working Paper 92-06-028, </note> <institution> Santa Fe Institute, </institution> <year> 1992. </year> <month> ga:Koza92hh. </month>
Reference-contexts: [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, <ref> [11, 39] </ref> software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table <p> agents The evol. of * that build mental models and create simple plans using gen. prog. [239] AI Gen. prog. and * planning syst. [195] analysis Gen. prog. : A new paradigm for cntr. and * [72] analyzing Appl. of gen. prog. in * multiple steady states of dynamical syst. <ref> [11, 39] </ref> Anolis Evol. of food foraging strategies for the Carib bean * lizard using gen. prog. [65] application A gen. prog. * in virtual reality [63] Learning monitoring strategies: a difficult gen. prog. * [72] * of gen. prog. in analyzing multiple steady states of dynamical syst. [176] * of <p> Gen. prog. with * [212] calculations Automated discovery of detectors and iteration-performing * to recognize patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using iteration-performing * in gen. prog. [100] cardiac Detector design by gen. prog. for automated border definition in * magnetic resonance images <ref> [11, 39] </ref> Caribbean Evol. of food foraging strategies for the * Anolis lizard using gen. prog. [206] Cart centering and broom balancing by gen. breeding pop. of cntr. strategy prog. [109] Causality in gen. prog. [125] cell Gen. synthesis of Boolean neural networks with a * rewriting developmental process [32, 15] <p> of dynamical syst. [238, 20] Interactive* of equations for procedural models [166] * and coevol. of computer prog. to cntr. independently acting agents [99] * by gen. prog. of a spatial robot juggling cntr. alg. [189] * of autonomous robot cntr. architectures [93] * of damage-immune prog. using gen. prog. <ref> [11, 39] </ref> * of food foraging strategies for the Caribbean Anolis lizard using gen. prog. [62] * of mapmaking: Learning, planning, and memory using gen. prog. [216] * of subsumption architecture that perform a wall fol lowing task for an autonomous mobile robot via gen. prog. [127] * of subsumption using <p> * discovery and image discrimi nation [35] filtering Signal * and data processing for laser rheo metry [51] fit Non-linear GAs for solving problems by finding a * composition of functions [69] Fitness landscapes and difficulty in gen. prog. [95] flattening Terrain * by autonomous robot: A gen. prog. appl. <ref> [11, 39] </ref> food Evol. of * foraging strategies for the Caribbean Anolis lizard using gen. prog. 20 [11, 39] foraging Evol. of food * strategies for the Caribbean Anolis lizard using gen. prog. [161] formation Concept * and decision tree induction using the gen. prog. paradigm [134] function A hierarchical appr. <p> [51] fit Non-linear GAs for solving problems by finding a * composition of functions [69] Fitness landscapes and difficulty in gen. prog. [95] flattening Terrain * by autonomous robot: A gen. prog. appl. <ref> [11, 39] </ref> food Evol. of * foraging strategies for the Caribbean Anolis lizard using gen. prog. 20 [11, 39] foraging Evol. of food * strategies for the Caribbean Anolis lizard using gen. prog. [161] formation Concept * and decision tree induction using the gen. prog. paradigm [134] function A hierarchical appr. to learning the Boolean multiplexer * [230, 22] A hierarchical gen. syst. for symbolic * ident. [205] <p> gen. prog. using automatic function definition [87, 38] length Prog. search with a hierarchical variable * Rep. : Gen. prog. , simulated annealing and hill climbing [157] Lessons Evolving a sort: * in gen. prog. [144] Lisp Using the GA to generate * source code to solve the prisoner's dilemma <ref> [11, 39] </ref> lizard Evol. of food foraging strategies for the Carib bean Anolis * using gen. prog. [89, 33] local Gen. prog. with * hill-climbing [29] locales Apprentissage de strategies * pour architechtu res reactives distribuees par prog. mation genetique [132] Looping as a means to survival: playing Russian rou lette <p> * for laser rheo metry [112] Temporal data * using gen. prog. [29] programmation genetique Apprentissage de strategies locales pour architechtures reactives distribuees par * [27] Programmierung Verbesserung des Simulated Annealing unter Anwendung Genetischer * am Beispiel des Diskreten Quadratischen Layoutproblems [226] programming Automatic * of robots using gen. prog. <ref> [11, 39] </ref> - Evol. of food foraging strategies for the Caribbean Anolis lizard using gen. * [201] - Geneettinen ohjelmointi [Gen. * by Koza] [86] - Gen. <p> dynamical syst. [130] Steerable Gennets The gen. prog. of steerable be haviors in Gennets [130] - Steerable Gennets The gen. prog. of * behaviors in Gennets [101] Stock price time series prediction using gen. prog. [29] strategies Apprentissage de * locales pour architechtu res reactives distribuees par prog. mation genetique <ref> [11, 39] </ref> strategies Evol. of food foraging * for the Caribbean Anolis lizard using gen. prog. [94] - Evol. of trade * using GAs and gen. prog. [187] - Evol. learning * [219, 207] - Gen. breeding of non-linear opt. cntr. * for broom balancing 24 [179] Learning distr. reactive *
Reference: [40] <author> Una-May O'Reilly and Franz Oppacher. </author> <title> The troubling aspects of a building block hypothesis for genetic programming. </title> <note> Working Paper 94-02-001, </note> <institution> Santa Fe Institute, </institution> <year> 1992. </year> <note> y(Langdon/bib) ga:Oppacher92b. </note>
Reference-contexts: of * strategies using GAs and gen. prog. [85] training Dynamic * subset sel. for supervised learning in gen. prog. [161] tree Concept formation and decision * induction using the gen. prog. paradigm [142] * structured rules in GAs [242] trees Gen. generation of "dendritic * for image classi fication <ref> [40] </ref> troubling The * aspects of a building block hypothesis for gen. prog. [228] truck A gen. appr. to finding a cntr. to back up a tractor-trailed * [227] truck backer upper problem A gen. appr. to the * and the inter-twined spiral problem [78] Turing completeness in the language of
Reference: [41] <author> John R. Koza. </author> <title> Architecture-altering operations for evolving the architecture of a multipart program in genetic programming. </title> <type> Technical Report STAN-CS-94-1528, </type> <institution> Stanford University, Department of Computer Science, </institution> <year> 1994. </year> <note> y(Langdon/bib) ga94kKoza. </note>
Reference-contexts: [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as * to a problem of symbolic syst. ident. [29] Apprentissage de strategies locales pour architechtu res reactives distribuees par prog. mation genetique [29] architechtures Apprentissage de strategies locales pour * reactives distribuees par prog. mation genetique <ref> [41] </ref> architecture Architecture-altering operations for evol ving the * of a multipart prog. in gen. prog. [216] - Evol. of subsumption * that perform a wall following task for an autonomous mobile robot via gen. prog. [104] Evolving the * of a multi-part prog. in gen. prog. [224] - Gen. generation <p> multipart prog. in gen. prog. [216] - Evol. of subsumption * that perform a wall following task for an autonomous mobile robot via gen. prog. [104] Evolving the * of a multi-part prog. in gen. prog. [224] - Gen. generation of both the weights and * for a neural network <ref> [41] </ref> Architecture-altering operations for evolving the architecture of a multipart prog. in gen. prog. [189] architectures Evol. of autonomous robot cntr. * [192] artificial Artificial embryology: The gen. prog. of an * embryo [192] * embryology: The gen. prog. of an artificial embryo [14] * evol. for computer graphics [184] * <p> based on structured classifiers [187] * learning strategies [188] Putting INK into a BIRo: A discussion of problem do main knowledge for * robotics [175] The* induction of subroutines [57] evolvability The evol. of * in gen. prog. [168] evolved An * vision-based behavioral model of coordi nated group motion <ref> [41] </ref> evolving Architecture-altering operations for * the arc hitecture of a multipart prog. in gen. prog. [96] Feasibility of * self-learned pattern recognition appl. toward the solution of a constrained syst. using gen. prog. [151] Generality and difficulty in gen. prog. : * a sort [146] * a computer prog. to <p> [245] Learning mental * [149] modular Gen. synthesis of * neural networks [177, 44] monitoring Gen. prog. to learn an agent's * stra tegy [63] Learning* strategies: a difficult gen. prog. appl. [184] morality Artificial * and gen. prog. [168] motion An evolved vision-based behavioral model of coordinated group * <ref> [41] </ref> multipart Architecture-altering operations for evolving the architecture of a * prog. in gen. prog. [104] multi-part Evolving the architecture of a * prog. in gen. prog. [134] multiplexer A hierarchical appr. to learning the Boo lean * function [59] Myths Gen. prog. : * and facts [91] natural Exploring the <p> prog. of minimal neural nets using * razor [80] OCR Learning and upgrading rules for an * syst. using gen. prog. [201] ohjelmointi Geneettinen * [Gen. prog. by Koza] [98] on-line Distr. gen. prog. for * prediction in changing environments [217] operating Hierarchical GAs * on pop. of computer prog. <ref> [41] </ref> operations Architecture-altering * for evolving the arc hitecture of a multipart prog. in gen. prog. [219, 207] optimal Gen. breeding of non-linear * cntr. strate gies for broom balancing [138] optimization Co-evolving parasites improve simulated evol. as an * procedure [25] origin On the * of effective procedures by means
Reference: [42] <author> John R. Koza. </author> <title> Genetic programming: A paradigm for genetically breeding populations of computer programs to solve problems. </title> <type> Technical Report STAN-CS-90-1314, </type> <institution> Stanford University, Computer Science Department, </institution> <month> June </month> <year> 1990. </year> <month> ga:Koza90b. </month>
Reference-contexts: The computer Zoo - evol. in a * [206] breeding Cart centering and broom balancing by gen. * pop. of cntr. strategy prog. [219, 207] - Gen. * of non-linear opt. cntr. strategies for broom balancing [218] - Gen. * pop. of computer prog. to solve problems in artificial intelligence <ref> [42] </ref> - Gen. prog. : A paradigm for gen. * pop. of computer prog. to solve problems [225] The gen. prog. paradigm: Gen. * pop. of computer prog. to solve problems [77] brood The unique implications of * sel. for gen. prog. [206] broom balancing Cart centering and * by gen. <p> planner The automatic * of plans for a mobile robot via genetic prog. with automatically defined func tions [198] The gen. planner: The automatic * of plans for a mo bile robot via genetic prog. [206] genetically Cart centering and broom balancing by * breeding pop. of cntr. strategy prog. <ref> [42] </ref> - Gen. prog. : A paradigm for * breeding pop. of computer prog. to solve problems [218] * breeding pop. of computer prog. to solve problems in artificial intelligence [225] The gen. prog. paradigm: * breeding pop. of compu ter prog. to solve problems [10] Genetics Gen. <p> of effective procedures by means of ar tificial sel. [161] paradigm Concept formation and decision tree induc tion using the gen. prog. * [146] Evolving a computer prog. to generate random num bers using the gen. prog. * [195] - Gen. prog. : A new * for cntr. and analysis <ref> [42] </ref> - Gen. prog. : A * for gen. breeding pop. of computer prog. to solve problems [225] The gen. prog. * Gen. breeding pop. of computer prog. to solve problems [138] parasites Co-evolving * improve simulated evol. as an opt. procedure [96] pattern Feasibility of evolving self-learned * recognition appl. <p> prog. [75] The effect of * enrichment in gen. prog. [183] Using a double-based GA on a * of computer prog. [206] populations Cart centering and broom balancing by gen. breeding * of cntr. strategy prog. [218] - Gen. breeding * of computer prog. to solve problems in artificial intelligence <ref> [42] </ref> - Gen. prog. : A paradigm for gen. breeding * of computer prog. to solve problems [217] Hierarchical GAs operating on * of computer prog. [54] - Non-linear gen. process for use with co-evolving * [55] - Non-linear gen. process for use with plural co-evolving * [225] The gen. prog. <p> gen. process for * using spontaneously emergent self-replicating and self-improving entities [46, 47] problems A non-linear GAs for solving * [48] A non-linear gen. process for data encoding and for solving * using automatically defined functions [218] - Gen. breeding pop. of computer prog. to solve * in artificial intelligence <ref> [42] </ref> - Gen. prog. : A paradigm for gen. breeding pop. of computer prog. to solve * [51] - Non-linear GAs for solving * by finding a fit composi tion of functions [50] - Non-linear GAs for solving * [52] - Non-linear gen. process for data encoding and for sol ving <p> of a com puter prog. to solve a problem [58] snapshot Gen. prog. : A current * [96] solution Feasibility of evolving self-learned pattern recognition appl. toward the * of a constrained syst. using gen. prog. [218] solve Gen. breeding pop. of computer prog. to * problems in artificial intelligence <ref> [42] </ref> - Gen. prog. : A paradigm for gen. breeding pop. of computer prog. to * problems [225] The gen. prog. paradigm: Gen. breeding pop. of computer prog. to * problems [117] Two ways of discovering the size and shape of a com puter prog. to * a problem [144] Using
Reference: [43] <author> G. Dosi, Luigi Marengo, A. Bassanini, and M. Valente. </author> <title> Microbehaviors and dynamical systems: Economic routines as emergent properties of adaptive systems. </title> <type> Ccc working paper, </type> <institution> University of California at Berkeley, Center for Research in Management, </institution> <year> 1993. </year> <note> y(Marengo) ga:Marengo93a. </note>
Reference-contexts: represent a pop. of computer prog. [76] adapting Learning by * Rep. in gen. prog. [140] adaptive A Rep. for the * generation of simple sequen tial prog. [205] An* function ident. syst. [106] An* inductive logic prog. syst. using gen. prog. ming [45] - Gen. prog. with * Rep. <ref> [43] </ref> - Microbehaviors and dynamical syst. : Economic routi nes as emergent properties of * syst. s [166] agents Evol. and coevol. of computer prog. to cntr. independently-acting * [177, 44] agent's Gen. prog. to learn an * monitoring strategy [108] agents The evol. of * that build mental models and <p> problem * knowledge for evol. robotics [183] double-based Using a * GA on a pop. of computer prog. [85] Dynamic training subset sel. for supervised learning in gen. prog. [72] dynamical Appl. of gen. prog. in analyzing multiple steady states of * syst. [237, 128] Interactive evol. of * syst. <ref> [43] </ref> - Microbehaviors and * syst. : Economic routines as emergent properties of adaptive syst. s [220, 221, 222] econometric A gen. appr. to * modeling [43] Economic Microbehaviors and dynamical syst. : * rou tines as emergent properties of adaptive syst. s [192] embryo Artificial embryology: The gen. prog. of <p> in gen. prog. [72] dynamical Appl. of gen. prog. in analyzing multiple steady states of * syst. [237, 128] Interactive evol. of * syst. <ref> [43] </ref> - Microbehaviors and * syst. : Economic routines as emergent properties of adaptive syst. s [220, 221, 222] econometric A gen. appr. to * modeling [43] Economic Microbehaviors and dynamical syst. : * rou tines as emergent properties of adaptive syst. s [192] embryo Artificial embryology: The gen. prog. of an artificial * [192] embryology Artificial * The gen. prog. of an artificial embryo [120] emergence Spontaneous * of self-replicating and evol. arily self-improving computer prog. <p> gen. prog. of an artificial embryo [120] emergence Spontaneous * of self-replicating and evol. arily self-improving computer prog. [49] emergent A non-linear gen. process for problem solving using spontaneously * self-replicating and self-improving entities [53] - Non-linear gen. process for problem solving using spon taneously * self-replicating and self-improving entities <ref> [43] </ref> emergent properties Microbehaviors and dynamical syst. : Economic routines as * of adaptive syst. s [48] encoding A non-linear gen. process for data * and for solving problems using automatically defined functions [194] Cellular* as a graph grammar [31] Cellular* of gen. neural networks [21] Neural network synthesis using cellular <p> [245] mental Learning * models [108] mental models The evol. of agents that build * and create simple plans using gen. prog. [203] Meta-level strategy learning for GA based on structu red Rep. [176] methods Appl. of search * to sch. problem in plastics forming plant: A binary Rep. appr. <ref> [43] </ref> Microbehaviors and dynamical syst. : Economic rou tines as emergent properties of adaptive syst. s [153] minimal Gen. prog. of * neural nets using Occam's razor [182] misfire IC engine * detection alg. generation using gen. prog. [216] mobile robot Evol. of subsumption architecture that perform a wall following task <p> architectures [95] Terrain flattening by autonomous * A gen. prog. appl. [181] robotic Evolving co-operation in autonomous * syst. [188] robotics Putting INK into a BIRo: A discussion of problem domain knowledge for evol. * [226] robots Automatic prog. of * using gen. prog. ming [185] routines Evolving visual * <ref> [43] </ref> - Microbehaviors and dynamical syst. : Economic * as emergent properties of adaptive syst. s [82] roving The difficulty of * eyes [64] rule Gen. prog. for the search of a new learning * for neural networks [80] rules Learning and upgrading * for an OCR syst. using gen. prog.
Reference: [44] <author> Marc C. Atkin and Paul R. Cohen. </author> <title> Genetic programming to learn an agent's monitoring strategy. </title> <type> Technical report TR-93-26, </type> <institution> University of Massachusetts, Amherst, </institution> <year> 1993. </year> <note> y(Langdon) ga:Atkin93b. </note>
Reference-contexts: simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, <ref> [187, 44, 158] </ref> genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, <p> An* function ident. syst. [106] An* inductive logic prog. syst. using gen. prog. ming [45] - Gen. prog. with * Rep. [43] - Microbehaviors and dynamical syst. : Economic routi nes as emergent properties of * syst. s [166] agents Evol. and coevol. of computer prog. to cntr. independently-acting * <ref> [177, 44] </ref> agent's Gen. prog. to learn an * monitoring strategy [108] agents The evol. of * that build mental models and create simple plans using gen. prog. [239] AI Gen. prog. and * planning syst. [195] analysis Gen. prog. : A new paradigm for cntr. and * [72] analyzing Appl. <p> evol. of determi nistic push-down automata using gen. prog. [78] - Turing completeness in the * of gen. prog. with in dexed memory [35] laser Signal filtering and data processing for * rheometry [27] Layoutproblems Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beis piel des Diskreten Quadratischen * <ref> [177, 44] </ref> learn Gen. prog. to * an agent's monitoring strategy [134] learning A hierarchical appr. to * the Boolean mul tiplexer function [32, 15] Adding* to the cellular development process: a com parative study [150] Automated* of a detector for ff-helices in protein sequences via gen. prog. [68] Automated* of <p> vision-based behavioral * of coordi nated group motion [73] Experiments with a coroutine execution * for gen. prog. [220, 221, 222] modeling A gen. appr. to econometric * [238, 20] models Interactive evol. of equations for procedural * [245] Learning mental * [149] modular Gen. synthesis of * neural networks <ref> [177, 44] </ref> monitoring Gen. prog. to learn an agent's * stra tegy [63] Learning* strategies: a difficult gen. prog. appl. [184] morality Artificial * and gen. prog. [168] motion An evolved vision-based behavioral model of coordinated group * [41] multipart Architecture-altering operations for evolving the architecture of a * prog. in <p> reactive * by gen. prog. for the general job shop problem [63] Learning monitoring * a difficult gen. prog. appl. [111] Strongly typed gen. prog. in evolving cooperation * [186] The evol. of sporting * [206] strategy Cart centering and broom balancing by gen. breeding pop. of cntr. * prog. <ref> [177, 44] </ref> - Gen. prog. to learn an agent's monitoring * [203] - Meta-level * learning for GA based on structured Rep. [28] Strongly typed gen. prog. [111] * typed gen. prog. in evolving cooperation strategies [91] structure Exploring the underlying * of nat. images through gen. prog. [169] structured Evol.
Reference: [45] <author> Justinian P. Rosca and Dana H. Ballard. </author> <title> Genetic programming with adaptive representations. </title> <type> Technical Report TR 489, </type> <institution> University of Rochester, Computer Science Department, </institution> <year> 1994. </year> <note> y(Langdon/bib) ga94bRosca. </note>
Reference-contexts: use of a directed * graph to represent a pop. of computer prog. [76] adapting Learning by * Rep. in gen. prog. [140] adaptive A Rep. for the * generation of simple sequen tial prog. [205] An* function ident. syst. [106] An* inductive logic prog. syst. using gen. prog. ming <ref> [45] </ref> - Gen. prog. with * Rep. [43] - Microbehaviors and dynamical syst. : Economic routi nes as emergent properties of * syst. s [166] agents Evol. and coevol. of computer prog. to cntr. independently-acting * [177, 44] agent's Gen. prog. to learn an * monitoring strategy [108] agents The evol. <p> search methods to sch. problem in plastics forming plant: A binary * appr. [203] - Meta-level strategy learning for GA based on structu red * [87, 38] - Prog. search with a hierarchical variable length * Gen. prog. , simulated annealing and hill climbing [121, 37] representations Coevolving high-level * <ref> [45] </ref> - Gen. prog. with adaptive * [76] Learning by adapting * in gen. prog. [71] retrieval The use of gen. prog. to build queries for info * [229] reusable Discovery of a main prog. and * subroutines using gen. prog. [9] - Gen. Prog.
Reference: [46] <author> John R. Koza. </author> <title> A non-linear genetic algorithms for solving problems, 1991. </title> <journal> (Australian patent 611,350. </journal> <note> Issued Sep. 21 1991)y([10]) ga:Koza91h. </note>
Reference-contexts: processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, <ref> [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] </ref> pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] <p> gen. * [125] - Gen. synthesis of Boolean * with a cell rewriting deve lopmental process [149] - Gen. synthesis of modular * [64] - Gen. prog. for the search of a new learning rule for * [88] neutral Genotype-phenotype-mapping and * variation - A case study in gen. prog. <ref> [46, 47] </ref> non-linear A * GAs for solving problems [48] A* gen. process for data encoding and for solving problems using automatically defined functions [49] A* gen. process for problem solving using sponta neously emergent self-replicating and self-improving entities [219, 207] - Gen. breeding of * opt. cntr. strategies for broom <p> robotics [117] Two ways of discovering the size and shape of a com puter prog. to solve a * [49] problem solving A non-linear gen. process for * using spontaneously emergent self-replicating and self-improving en tities [53] - Non-linear gen. process for * using spontaneously emergent self-replicating and self-improving entities <ref> [46, 47] </ref> problems A non-linear GAs for solving * [48] A non-linear gen. process for data encoding and for solving * using automatically defined functions [218] - Gen. breeding pop. of computer prog. to solve * in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding pop. of <p> prog. to * problems [225] The gen. prog. paradigm: Gen. breeding pop. of computer prog. to * problems [117] Two ways of discovering the size and shape of a com puter prog. to * a problem [144] Using the GA to generate Lisp source code to * the prisoner's dilemma <ref> [46, 47] </ref> solving A non-linear GAs for * problems [48] A non-linear gen. process for data encoding and for * problems using automatically defined functions [110] * complex problems with GAs [34] * ident. problems by structured GAs [51] - Non-linear GAs for * problems by finding a fit compo sition
Reference: [47] <author> John R. Koza. </author> <title> A non-linear genetic algorithms for solving problems, 1992. </title> <journal> (Canadian patent 1,311,561. </journal> <note> Issued Dec. 15 1992)y([10]) ga:Koza92i. </note>
Reference-contexts: processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, <ref> [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] </ref> pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] <p> gen. * [125] - Gen. synthesis of Boolean * with a cell rewriting deve lopmental process [149] - Gen. synthesis of modular * [64] - Gen. prog. for the search of a new learning rule for * [88] neutral Genotype-phenotype-mapping and * variation - A case study in gen. prog. <ref> [46, 47] </ref> non-linear A * GAs for solving problems [48] A* gen. process for data encoding and for solving problems using automatically defined functions [49] A* gen. process for problem solving using sponta neously emergent self-replicating and self-improving entities [219, 207] - Gen. breeding of * opt. cntr. strategies for broom <p> robotics [117] Two ways of discovering the size and shape of a com puter prog. to solve a * [49] problem solving A non-linear gen. process for * using spontaneously emergent self-replicating and self-improving en tities [53] - Non-linear gen. process for * using spontaneously emergent self-replicating and self-improving entities <ref> [46, 47] </ref> problems A non-linear GAs for solving * [48] A non-linear gen. process for data encoding and for solving * using automatically defined functions [218] - Gen. breeding pop. of computer prog. to solve * in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding pop. of <p> prog. to * problems [225] The gen. prog. paradigm: Gen. breeding pop. of computer prog. to * problems [117] Two ways of discovering the size and shape of a com puter prog. to * a problem [144] Using the GA to generate Lisp source code to * the prisoner's dilemma <ref> [46, 47] </ref> solving A non-linear GAs for * problems [48] A non-linear gen. process for data encoding and for * problems using automatically defined functions [110] * complex problems with GAs [34] * ident. problems by structured GAs [51] - Non-linear GAs for * problems by finding a fit compo sition
Reference: [48] <author> John R. Koza and James P. Rice. </author> <title> A non-linear genetic process for data encoding and for solving problems using automatically defined functions, 1992. </title> <type> (U.S. </type> <note> patent application filed May 11 1992)y([10]) ga:Koza92f. </note>
Reference-contexts: processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, <ref> [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] </ref> pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] <p> planner The* generation of plans for a mobile robot via genetic prog. with automatically defined func tions [198] The gen. planner: The * generation of plans for a mobile robot via genetic prog. [197, 199] The* generation of plans for a mobile robot via gen. prog. with automatically defined functions <ref> [48] </ref> automatically A non-linear gen. process for data enco ding and for solving problems using * defined functions [52] - Non-linear gen. process for data encoding and for sol ving problems using * defined functions [197, 199] The automatic generation of plans for a mobile ro bot via gen. prog. with <p> curiosities Gen. prog. , indexed memory, the halting problem, and other * [58] current Gen. prog. : A * snapshot [93] damage-immune Evol. of * prog. using gen. prog. [16] Darwinian Beagle A* appr. to pattern recognition [161] decision Concept formation and * tree induction using the gen. prog. paradigm <ref> [48] </ref> defined A non-linear gen. process for data encoding and for solving problems using automatically * functions [52] - Non-linear gen. process for data encoding and for sol ving problems using automatically * functions [197, 199] The automatic generation of plans for a mobile ro bot via gen. prog. with automatically <p> computer prog. [49] emergent A non-linear gen. process for problem solving using spontaneously * self-replicating and self-improving entities [53] - Non-linear gen. process for problem solving using spon taneously * self-replicating and self-improving entities [43] emergent properties Microbehaviors and dynamical syst. : Economic routines as * of adaptive syst. s <ref> [48] </ref> encoding A non-linear gen. process for data * and for solving problems using automatically defined functions [194] Cellular* as a graph grammar [31] Cellular* of gen. neural networks [21] Neural network synthesis using cellular * and the GA [52] - Non-linear gen. process for data * and for solving problems <p> appr. to learning the Boolean multiplexer * [230, 22] A hierarchical gen. syst. for symbolic * ident. [205] An adaptive * ident. syst. [208] Finding an impulse response * using gen. prog. [136] Hierarchical automatic * definition in gen. prog. [60] Scalable learning in gen. prog. using automatic * definition <ref> [48] </ref> functions A non-linear gen. process for data encoding and for solving problems using automatically defined * [105] - Gen. prog. exploratory power and the discovery of * [51] - Non-linear GAs for solving problems by finding a fit composition of * [52] - Non-linear gen. process for data encoding and <p> with a cell rewriting deve lopmental process [149] - Gen. synthesis of modular * [64] - Gen. prog. for the search of a new learning rule for * [88] neutral Genotype-phenotype-mapping and * variation - A case study in gen. prog. [46, 47] non-linear A * GAs for solving problems <ref> [48] </ref> A* gen. process for data encoding and for solving problems using automatically defined functions [49] A* gen. process for problem solving using sponta neously emergent self-replicating and self-improving entities [219, 207] - Gen. breeding of * opt. cntr. strategies for broom balancing [51] * GAs for solving problems by finding <p> shape of a com puter prog. to solve a * [49] problem solving A non-linear gen. process for * using spontaneously emergent self-replicating and self-improving en tities [53] - Non-linear gen. process for * using spontaneously emergent self-replicating and self-improving entities [46, 47] problems A non-linear GAs for solving * <ref> [48] </ref> A non-linear gen. process for data encoding and for solving * using automatically defined functions [218] - Gen. breeding pop. of computer prog. to solve * in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding pop. of computer prog. to solve * [51] - Non-linear GAs <p> GAs [225] The gen. prog. paradigm: Gen. breeding pop. of computer prog. to solve * [238, 20] procedural Interactive evol. of equations for * mo dels [138] procedure Co-evolving parasites improve simulated evol. as an opt. * [25] procedures On the origin of effective * by means of artificial sel. <ref> [48] </ref> process A non-linear gen. * for data encoding and for solving problems using automatically defined functions [49] A non-linear gen. * for problem solving using sponta neously emergent self-replicating and self-improving entities [32, 15] Adding learning to the cellular development * a com parative study [125] - Gen. synthesis of <p> Gen. breeding pop. of computer prog. to * problems [117] Two ways of discovering the size and shape of a com puter prog. to * a problem [144] Using the GA to generate Lisp source code to * the prisoner's dilemma [46, 47] solving A non-linear GAs for * problems <ref> [48] </ref> A non-linear gen. process for data encoding and for * problems using automatically defined functions [110] * complex problems with GAs [34] * ident. problems by structured GAs [51] - Non-linear GAs for * problems by finding a fit compo sition of functions [50] - Non-linear GAs for * problems
Reference: [49] <author> John R. Koza and James P. Rice. </author> <title> A non-linear genetic process for problem solving using spontaneously emergent self-replicating and self-improving entities, 1992. </title> <type> (U.S. </type> <note> patent application filed June 16 1992)y([10]) ga:Koza92g. </note>
Reference-contexts: processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, <ref> [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] </ref> pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] <p> Economic Microbehaviors and dynamical syst. : * rou tines as emergent properties of adaptive syst. s [192] embryo Artificial embryology: The gen. prog. of an artificial * [192] embryology Artificial * The gen. prog. of an artificial embryo [120] emergence Spontaneous * of self-replicating and evol. arily self-improving computer prog. <ref> [49] </ref> emergent A non-linear gen. process for problem solving using spontaneously * self-replicating and self-improving entities [53] - Non-linear gen. process for problem solving using spon taneously * self-replicating and self-improving entities [43] emergent properties Microbehaviors and dynamical syst. : Economic routines as * of adaptive syst. s [48] encoding A <p> gen. neural networks [21] Neural network synthesis using cellular * and the GA [52] - Non-linear gen. process for data * and for solving problems using automatically defined functions [182] engine IC * misfire detection alg. generation using gen. prog. [75] enrichment The effect of pop. * in gen. prog. <ref> [49] </ref> entities A non-linear gen. process for problem solving using spontaneously emergent self-replicating and self improving * [53] - Non-linear gen. process for problem solving using spon taneously emergent self-replicating and self-improving * [132] environment Looping as a means to survival: playing Russian roulette in a harsh * [98] environments Distr. <p> - Gen. prog. for the search of a new learning rule for * [88] neutral Genotype-phenotype-mapping and * variation - A case study in gen. prog. [46, 47] non-linear A * GAs for solving problems [48] A* gen. process for data encoding and for solving problems using automatically defined functions <ref> [49] </ref> A* gen. process for problem solving using sponta neously emergent self-replicating and self-improving entities [219, 207] - Gen. breeding of * opt. cntr. strategies for broom balancing [51] * GAs for solving problems by finding a fit composition of functions [50] * GAs for solving problems [52] * gen. process <p> machine learning via automatic discovery of facilitating functions as appl. to a * of symbolic syst. ident. [188] Putting INK into a BIRo: A discussion of * domain knowledge for evol. robotics [117] Two ways of discovering the size and shape of a com puter prog. to solve a * <ref> [49] </ref> problem solving A non-linear gen. process for * using spontaneously emergent self-replicating and self-improving en tities [53] - Non-linear gen. process for * using spontaneously emergent self-replicating and self-improving entities [46, 47] problems A non-linear GAs for solving * [48] A non-linear gen. process for data encoding and for solving <p> procedural Interactive evol. of equations for * mo dels [138] procedure Co-evolving parasites improve simulated evol. as an opt. * [25] procedures On the origin of effective * by means of artificial sel. [48] process A non-linear gen. * for data encoding and for solving problems using automatically defined functions <ref> [49] </ref> A non-linear gen. * for problem solving using sponta neously emergent self-replicating and self-improving entities [32, 15] Adding learning to the cellular development * a com parative study [125] - Gen. synthesis of Boolean neural networks with a cell rewriting developmental * [52] - Non-linear gen. * for data encoding <p> in gen. prog. [19] - Gen. prog. as a means for prog. ming computers by nat. * [25] On the origin of effective procedures by means of arti ficial * [23] Recombination,* and the gen. construction of compu ter prog. [77] The unique implications of brood * for gen. prog. <ref> [49] </ref> self-improving A non-linear gen. process for problem solving using spontaneously emergent self-replicating and * en tities [53] - Non-linear gen. process for problem solving using spon taneously emergent self-replicating and * entities [120] Spontaneous emergence of self-replicating and evol. arily * computer prog. [96] self-learned Feasibility of evolving * pattern <p> entities [120] Spontaneous emergence of self-replicating and evol. arily * computer prog. [96] self-learned Feasibility of evolving * pattern recognition appl. toward the solution of a constrained syst. using gen. prog. [118] self-modifying Evolving turing-complete prog. for a register machine with * code [180] selforganization Hierarchical * in gen. prog. <ref> [49] </ref> self-replicating A non-linear gen. process for problem solving using spontaneously emergent * and self-improving en tities [53] - Non-linear gen. process for problem solving using spon taneously emergent * and self-improving entities [120] Spontaneous emergence of * and evol. arily self improving computer prog. [140] sequential A Rep. for the <p> a * [144] source code Using the GA to generate Lisp * to solve the prisoner's dilemma [143] spaces On using GAs to search prog. * [99] spatial Evol. by gen. prog. of a * robot juggling cntr. alg. [120] Spontaneous emergence of self-replicating and evol. arily self-improving computer prog. <ref> [49] </ref> spontaneously A non-linear gen. process for problem solving using * emergent self-replicating and self-improving en tities [53] - Non-linear gen. process for problem solving using * emergent self-replicating and self-improving entities [186] sporting The evol. of * strategies [74] Stack-based gen. prog. [72] steady states Appl. of gen. prog. in
Reference: [50] <author> John R. Koza. </author> <title> Non-linear genetic algorithms for solving problems, 1990. </title> <editor> (U. S. </editor> <volume> patent no. </volume> <month> 4,935,877. </month> <note> Filed May 20 1988 and issued june 19 1990)y ga:Koza90e. </note>
Reference-contexts: processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, <ref> [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] </ref> pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] <p> mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, <ref> [50, 55, 53, 52] </ref> program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] <p> encoding and for solving problems using automatically defined functions [49] A* gen. process for problem solving using sponta neously emergent self-replicating and self-improving entities [219, 207] - Gen. breeding of * opt. cntr. strategies for broom balancing [51] * GAs for solving problems by finding a fit composition of functions <ref> [50] </ref> * GAs for solving problems [52] * gen. process for data encoding and for solving problems using automatically defined functions [53] * gen. process for problem solving using spontaneously emergent self-replicating and self-improving entities [54] * gen. process for use with co-evolving pop. [55] * gen. process for use with <p> using automatically defined functions [218] - Gen. breeding pop. of computer prog. to solve * in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding pop. of computer prog. to solve * [51] - Non-linear GAs for solving * by finding a fit composi tion of functions <ref> [50] </ref> - Non-linear GAs for solving * [52] - Non-linear gen. process for data encoding and for sol ving * using automatically defined functions [110] Solving complex * with GAs [34] Solving ident. * by structured GAs [225] The gen. prog. paradigm: Gen. breeding pop. of computer prog. to solve * <p> A non-linear GAs for * problems [48] A non-linear gen. process for data encoding and for * problems using automatically defined functions [110] * complex problems with GAs [34] * ident. problems by structured GAs [51] - Non-linear GAs for * problems by finding a fit compo sition of functions <ref> [50] </ref> - Non-linear GAs for * problems [52] - Non-linear gen. process for data encoding and for * problems using automatically defined functions [157] sort Evolving a * Lessons in gen. prog. [151] Generality and difficulty in gen. prog. : evolving a * [144] source code Using the GA to generate
Reference: [51] <author> John R. Koza. </author> <title> Non-linear genetic algorithms for solving problems by finding a fit composition of functions, 1990. (U.S. patent application filed Mar. </title> <address> 28 1990)y([10]) ga:Koza90i. </address>
Reference-contexts: processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, <ref> [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] </ref> pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] <p> an opt. procedure [55] - Non-linear gen. process for use with plural * pop. [54] - Non-linear gen. process for use with * pop. [32, 15] comparative Adding learning to the cellular develop ment process: a * study [110] complex Solving * problems with GAs [115] Complexity compression and evol. <ref> [51] </ref> composition Non-linear GAs for solving problems by finding a fit * of functions [115] compression Complexity * and evol. [161] Concept formation and decision tree induction using the gen. prog. paradigm [97] Concurrent evol. of territory-defining behavior in birds using gen. prog. [96] constrained Feasibility of evolving self-learned pattern recognition <p> syst. ident. [59] facts Gen. prog. : Myths and * [96] Feasibility of evolving self-learned pattern recognition appl. toward the solution of a constrained syst. using gen. prog. [155] feature Gen. prog. for * discovery and image discrimi nation [35] filtering Signal * and data processing for laser rheo metry <ref> [51] </ref> fit Non-linear GAs for solving problems by finding a * composition of functions [69] Fitness landscapes and difficulty in gen. prog. [95] flattening Terrain * by autonomous robot: A gen. prog. appl. [11, 39] food Evol. of * foraging strategies for the Caribbean Anolis lizard using gen. prog. 20 [11, <p> * using gen. prog. [136] Hierarchical automatic * definition in gen. prog. [60] Scalable learning in gen. prog. using automatic * definition [48] functions A non-linear gen. process for data encoding and for solving problems using automatically defined * [105] - Gen. prog. exploratory power and the discovery of * <ref> [51] </ref> - Non-linear GAs for solving problems by finding a fit composition of * [52] - Non-linear gen. process for data encoding and for sol ving problems using automatically defined * [158] - Perf. improvement of machine learning via automatic discovery of facilitating * as appl. to a problem of symbolic <p> non-linear A * GAs for solving problems [48] A* gen. process for data encoding and for solving problems using automatically defined functions [49] A* gen. process for problem solving using sponta neously emergent self-replicating and self-improving entities [219, 207] - Gen. breeding of * opt. cntr. strategies for broom balancing <ref> [51] </ref> * GAs for solving problems by finding a fit composition of functions [50] * GAs for solving problems [52] * gen. process for data encoding and for solving problems using automatically defined functions [53] * gen. process for problem solving using spontaneously emergent self-replicating and self-improving entities [54] * gen. <p> for solving * [48] A non-linear gen. process for data encoding and for solving * using automatically defined functions [218] - Gen. breeding pop. of computer prog. to solve * in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding pop. of computer prog. to solve * <ref> [51] </ref> - Non-linear GAs for solving * by finding a fit composi tion of functions [50] - Non-linear GAs for solving * [52] - Non-linear gen. process for data encoding and for sol ving * using automatically defined functions [110] Solving complex * with GAs [34] Solving ident. * by structured <p> the GA to generate Lisp source code to * the prisoner's dilemma [46, 47] solving A non-linear GAs for * problems [48] A non-linear gen. process for data encoding and for * problems using automatically defined functions [110] * complex problems with GAs [34] * ident. problems by structured GAs <ref> [51] </ref> - Non-linear GAs for * problems by finding a fit compo sition of functions [50] - Non-linear GAs for * problems [52] - Non-linear gen. process for data encoding and for * problems using automatically defined functions [157] sort Evolving a * Lessons in gen. prog. [151] Generality and difficulty
Reference: [52] <author> John R. Koza and James P. Rice. </author> <title> Non-linear genetic process for data encoding and for solving problems using automatically defined functions, 1992. </title> <editor> (U. S. </editor> <title> patent Application. </title> <note> Filed May 11 1992)y ga:Koza92k. Bibliography 27 </note>
Reference-contexts: processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, <ref> [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] </ref> pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] <p> mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, <ref> [50, 55, 53, 52] </ref> program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] <p> The gen. planner: The * generation of plans for a mobile robot via genetic prog. [197, 199] The* generation of plans for a mobile robot via gen. prog. with automatically defined functions [48] automatically A non-linear gen. process for data enco ding and for solving problems using * defined functions <ref> [52] </ref> - Non-linear gen. process for data encoding and for sol ving problems using * defined functions [197, 199] The automatic generation of plans for a mobile ro bot via gen. prog. with * defined functions [200] The gen. planner The automatic generation of plans for a mobile robot via genetic <p> A * snapshot [93] damage-immune Evol. of * prog. using gen. prog. [16] Darwinian Beagle A* appr. to pattern recognition [161] decision Concept formation and * tree induction using the gen. prog. paradigm [48] defined A non-linear gen. process for data encoding and for solving problems using automatically * functions <ref> [52] </ref> - Non-linear gen. process for data encoding and for sol ving problems using automatically * functions [197, 199] The automatic generation of plans for a mobile ro bot via gen. prog. with automatically * functions [200] The gen. planner The automatic generation of plans for a mobile robot via genetic <p> dynamical syst. : Economic routines as * of adaptive syst. s [48] encoding A non-linear gen. process for data * and for solving problems using automatically defined functions [194] Cellular* as a graph grammar [31] Cellular* of gen. neural networks [21] Neural network synthesis using cellular * and the GA <ref> [52] </ref> - Non-linear gen. process for data * and for solving problems using automatically defined functions [182] engine IC * misfire detection alg. generation using gen. prog. [75] enrichment The effect of pop. * in gen. prog. [49] entities A non-linear gen. process for problem solving using spontaneously emergent self-replicating and <p> learning in gen. prog. using automatic * definition [48] functions A non-linear gen. process for data encoding and for solving problems using automatically defined * [105] - Gen. prog. exploratory power and the discovery of * [51] - Non-linear GAs for solving problems by finding a fit composition of * <ref> [52] </ref> - Non-linear gen. process for data encoding and for sol ving problems using automatically defined * [158] - Perf. improvement of machine learning via automatic discovery of facilitating * as appl. to a problem of symbolic syst. ident. [197, 199] The automatic generation of plans for a mobile ro bot <p> automatically defined functions [49] A* gen. process for problem solving using sponta neously emergent self-replicating and self-improving entities [219, 207] - Gen. breeding of * opt. cntr. strategies for broom balancing [51] * GAs for solving problems by finding a fit composition of functions [50] * GAs for solving problems <ref> [52] </ref> * gen. process for data encoding and for solving problems using automatically defined functions [53] * gen. process for problem solving using spontaneously emergent self-replicating and self-improving entities [54] * gen. process for use with co-evolving pop. [55] * gen. process for use with plural co-evolving pop. [153] Occam's Gen. <p> breeding pop. of computer prog. to solve * in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding pop. of computer prog. to solve * [51] - Non-linear GAs for solving * by finding a fit composi tion of functions [50] - Non-linear GAs for solving * <ref> [52] </ref> - Non-linear gen. process for data encoding and for sol ving * using automatically defined functions [110] Solving complex * with GAs [34] Solving ident. * by structured GAs [225] The gen. prog. paradigm: Gen. breeding pop. of computer prog. to solve * [238, 20] procedural Interactive evol. of equations <p> for solving problems using automatically defined functions [49] A non-linear gen. * for problem solving using sponta neously emergent self-replicating and self-improving entities [32, 15] Adding learning to the cellular development * a com parative study [125] - Gen. synthesis of Boolean neural networks with a cell rewriting developmental * <ref> [52] </ref> - Non-linear gen. * for data encoding and for solving problems using automatically defined functions [53] - Non-linear gen. * for problem solving using sponta neously emergent self-replicating and self-improving entities [54] - Non-linear gen. * for use with co-evolving pop. [55] - Non-linear gen. * for use with plural <p> A non-linear gen. process for data encoding and for * problems using automatically defined functions [110] * complex problems with GAs [34] * ident. problems by structured GAs [51] - Non-linear GAs for * problems by finding a fit compo sition of functions [50] - Non-linear GAs for * problems <ref> [52] </ref> - Non-linear gen. process for data encoding and for * problems using automatically defined functions [157] sort Evolving a * Lessons in gen. prog. [151] Generality and difficulty in gen. prog. : evolving a * [144] source code Using the GA to generate Lisp * to solve the prisoner's dilemma
Reference: [53] <author> John R. Koza and James P. Rice. </author> <title> Non-linear genetic process for problem solving using spontaneously emergent self-replicating and self-improving entities, 1992. </title> <editor> (U. S. </editor> <booktitle> patent Application. </booktitle> <month> Filed Jun. 16 </month> <year> 1992)y </year> <month> ga:Koza92j. </month>
Reference-contexts: processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, <ref> [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] </ref> pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] <p> mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, <ref> [50, 55, 53, 52] </ref> program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] <p> [192] embryo Artificial embryology: The gen. prog. of an artificial * [192] embryology Artificial * The gen. prog. of an artificial embryo [120] emergence Spontaneous * of self-replicating and evol. arily self-improving computer prog. [49] emergent A non-linear gen. process for problem solving using spontaneously * self-replicating and self-improving entities <ref> [53] </ref> - Non-linear gen. process for problem solving using spon taneously * self-replicating and self-improving entities [43] emergent properties Microbehaviors and dynamical syst. : Economic routines as * of adaptive syst. s [48] encoding A non-linear gen. process for data * and for solving problems using automatically defined functions [194] Cellular* <p> process for data * and for solving problems using automatically defined functions [182] engine IC * misfire detection alg. generation using gen. prog. [75] enrichment The effect of pop. * in gen. prog. [49] entities A non-linear gen. process for problem solving using spontaneously emergent self-replicating and self improving * <ref> [53] </ref> - Non-linear gen. process for problem solving using spon taneously emergent self-replicating and self-improving * [132] environment Looping as a means to survival: playing Russian roulette in a harsh * [98] environments Distr. gen. prog. for on-line prediction in changing * [238, 20] equations Interactive evol. of * for procedural <p> and self-improving entities [219, 207] - Gen. breeding of * opt. cntr. strategies for broom balancing [51] * GAs for solving problems by finding a fit composition of functions [50] * GAs for solving problems [52] * gen. process for data encoding and for solving problems using automatically defined functions <ref> [53] </ref> * gen. process for problem solving using spontaneously emergent self-replicating and self-improving entities [54] * gen. process for use with co-evolving pop. [55] * gen. process for use with plural co-evolving pop. [153] Occam's Gen. prog. of minimal neural nets using * razor [80] OCR Learning and upgrading rules for <p> [188] Putting INK into a BIRo: A discussion of * domain knowledge for evol. robotics [117] Two ways of discovering the size and shape of a com puter prog. to solve a * [49] problem solving A non-linear gen. process for * using spontaneously emergent self-replicating and self-improving en tities <ref> [53] </ref> - Non-linear gen. process for * using spontaneously emergent self-replicating and self-improving entities [46, 47] problems A non-linear GAs for solving * [48] A non-linear gen. process for data encoding and for solving * using automatically defined functions [218] - Gen. breeding pop. of computer prog. to solve * in <p> sponta neously emergent self-replicating and self-improving entities [32, 15] Adding learning to the cellular development * a com parative study [125] - Gen. synthesis of Boolean neural networks with a cell rewriting developmental * [52] - Non-linear gen. * for data encoding and for solving problems using automatically defined functions <ref> [53] </ref> - Non-linear gen. * for problem solving using sponta neously emergent self-replicating and self-improving entities [54] - Non-linear gen. * for use with co-evolving pop. [55] - Non-linear gen. * for use with plural co-evolving pop. [35] processing Signal filtering and data * for laser rheo metry [112] Temporal data <p> [25] On the origin of effective procedures by means of arti ficial * [23] Recombination,* and the gen. construction of compu ter prog. [77] The unique implications of brood * for gen. prog. [49] self-improving A non-linear gen. process for problem solving using spontaneously emergent self-replicating and * en tities <ref> [53] </ref> - Non-linear gen. process for problem solving using spon taneously emergent self-replicating and * entities [120] Spontaneous emergence of self-replicating and evol. arily * computer prog. [96] self-learned Feasibility of evolving * pattern recognition appl. toward the solution of a constrained syst. using gen. prog. [118] self-modifying Evolving turing-complete prog. <p> * pattern recognition appl. toward the solution of a constrained syst. using gen. prog. [118] self-modifying Evolving turing-complete prog. for a register machine with * code [180] selforganization Hierarchical * in gen. prog. [49] self-replicating A non-linear gen. process for problem solving using spontaneously emergent * and self-improving en tities <ref> [53] </ref> - Non-linear gen. process for problem solving using spon taneously emergent * and self-improving entities [120] Spontaneous emergence of * and evol. arily self improving computer prog. [140] sequential A Rep. for the adaptive generation of simple * prog. [117] shape Two ways of discovering the size and * of <p> [143] spaces On using GAs to search prog. * [99] spatial Evol. by gen. prog. of a * robot juggling cntr. alg. [120] Spontaneous emergence of self-replicating and evol. arily self-improving computer prog. [49] spontaneously A non-linear gen. process for problem solving using * emergent self-replicating and self-improving en tities <ref> [53] </ref> - Non-linear gen. process for problem solving using * emergent self-replicating and self-improving entities [186] sporting The evol. of * strategies [74] Stack-based gen. prog. [72] steady states Appl. of gen. prog. in analyzing mul tiple * of dynamical syst. [130] Steerable Gennets The gen. prog. of steerable be haviors
Reference: [54] <author> John R. Koza and James P. Rice. </author> <title> Non-linear genetic process for use with co-evolving populations, 1990. (U.S. patent application filed Sep. </title> <address> 18 1990)y([10]) ga:Koza90k. </address>
Reference-contexts: processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, <ref> [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] </ref> pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] <p> with self-modifying * [166] coevolution Evol. and * of computer prog. to cntr. independently-acting agents [123] co-evolution Gen. evol. and * of computer prog. [121, 37] Coevolving high-level Rep. [138] Co-evolving parasites improve simulated evol. as an opt. procedure [55] - Non-linear gen. process for use with plural * pop. <ref> [54] </ref> - Non-linear gen. process for use with * pop. [32, 15] comparative Adding learning to the cellular develop ment process: a * study [110] complex Solving * problems with GAs [115] Complexity compression and evol. [51] composition Non-linear GAs for solving problems by finding a fit * of functions [115] <p> broom balancing [51] * GAs for solving problems by finding a fit composition of functions [50] * GAs for solving problems [52] * gen. process for data encoding and for solving problems using automatically defined functions [53] * gen. process for problem solving using spontaneously emergent self-replicating and self-improving entities <ref> [54] </ref> * gen. process for use with co-evolving pop. [55] * gen. process for use with plural co-evolving pop. [153] Occam's Gen. prog. of minimal neural nets using * razor [80] OCR Learning and upgrading rules for an * syst. using gen. prog. [201] ohjelmointi Geneettinen * [Gen. prog. by Koza] <p> broom balancing by gen. breeding * of cntr. strategy prog. [218] - Gen. breeding * of computer prog. to solve problems in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding * of computer prog. to solve problems [217] Hierarchical GAs operating on * of computer prog. <ref> [54] </ref> - Non-linear gen. process for use with co-evolving * [55] - Non-linear gen. process for use with plural co-evolving * [225] The gen. prog. paradigm: Gen. breeding * of compu ter prog. to solve problems [105] power Gen. prog. exploratory * and the discovery of functions [169] predatory Evol. learning <p> a com parative study [125] - Gen. synthesis of Boolean neural networks with a cell rewriting developmental * [52] - Non-linear gen. * for data encoding and for solving problems using automatically defined functions [53] - Non-linear gen. * for problem solving using sponta neously emergent self-replicating and self-improving entities <ref> [54] </ref> - Non-linear gen. * for use with co-evolving pop. [55] - Non-linear gen. * for use with plural co-evolving pop. [35] processing Signal filtering and data * for laser rheo metry [112] Temporal data * using gen. prog. [29] programmation genetique Apprentissage de strategies locales pour architechtures reactives distribuees par
Reference: [55] <author> John R. Koza and James P. Rice. </author> <title> Non-linear genetic process for use with plural co-evolving populations, 1990. </title> <editor> (U. S. patent 5,148,513. </editor> <month> Filed Sep. 18 </month> <year> 1990. </year> <note> Issued Sep. 15 1992)y ga:Koza90l. </note>
Reference-contexts: processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, <ref> [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] </ref> pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] <p> mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, <ref> [50, 55, 53, 52] </ref> program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] <p> * [118] code Evolving turing-complete prog. for a register mac hine with self-modifying * [166] coevolution Evol. and * of computer prog. to cntr. independently-acting agents [123] co-evolution Gen. evol. and * of computer prog. [121, 37] Coevolving high-level Rep. [138] Co-evolving parasites improve simulated evol. as an opt. procedure <ref> [55] </ref> - Non-linear gen. process for use with plural * pop. [54] - Non-linear gen. process for use with * pop. [32, 15] comparative Adding learning to the cellular develop ment process: a * study [110] complex Solving * problems with GAs [115] Complexity compression and evol. [51] composition Non-linear GAs <p> finding a fit composition of functions [50] * GAs for solving problems [52] * gen. process for data encoding and for solving problems using automatically defined functions [53] * gen. process for problem solving using spontaneously emergent self-replicating and self-improving entities [54] * gen. process for use with co-evolving pop. <ref> [55] </ref> * gen. process for use with plural co-evolving pop. [153] Occam's Gen. prog. of minimal neural nets using * razor [80] OCR Learning and upgrading rules for an * syst. using gen. prog. [201] ohjelmointi Geneettinen * [Gen. prog. by Koza] [98] on-line Distr. gen. prog. for * prediction in <p> plant Appl. of search methods to sch. problem in plas tics forming * A binary Rep. appr. [176] plastics forming Appl. of search methods to sch. problem in * plant: A binary Rep. appr. [132] playing Looping as a means to survival: * Russian rou lette in a harsh environment <ref> [55] </ref> plural Non-linear gen. process for use with * co-evolving pop. [116] pool The mating * A testbed for experiments in the evol. of symbol syst. [81] population On the use of a directed acyclic graph to represent a * of computer prog. [75] The effect of * enrichment in gen. <p> [218] - Gen. breeding * of computer prog. to solve problems in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding * of computer prog. to solve problems [217] Hierarchical GAs operating on * of computer prog. [54] - Non-linear gen. process for use with co-evolving * <ref> [55] </ref> - Non-linear gen. process for use with plural co-evolving * [225] The gen. prog. paradigm: Gen. breeding * of compu ter prog. to solve problems [105] power Gen. prog. exploratory * and the discovery of functions [169] predatory Evol. learning of * behaviors based on struc tured classifiers [98] prediction <p> neural networks with a cell rewriting developmental * [52] - Non-linear gen. * for data encoding and for solving problems using automatically defined functions [53] - Non-linear gen. * for problem solving using sponta neously emergent self-replicating and self-improving entities [54] - Non-linear gen. * for use with co-evolving pop. <ref> [55] </ref> - Non-linear gen. * for use with plural co-evolving pop. [35] processing Signal filtering and data * for laser rheo metry [112] Temporal data * using gen. prog. [29] programmation genetique Apprentissage de strategies locales pour architechtures reactives distribuees par * [27] Programmierung Verbesserung des Simulated Annealing unter Anwendung Genetischer
Reference: [56] <editor> A. V. Sebald and Lawrence J. Fogel, editors. </editor> <booktitle> Proceedings of the Fourth Annual Conference on Evolutionary Programming (EP94), </booktitle> <address> San Diego, CA, 24.-26. </address> <month> February </month> <year> 1994. </year> ? <note> y(Fogel) ga94EP. </note>
Reference: [57] <author> Lee Altenberg. </author> <title> The evolution of evolvability in genetic programming. </title> <note> In Sebald and Fogel [56], page ? y(conf.prog) ga94bAltenberg. </note>
Reference-contexts: gen. prog. [94] * of trade strategies using GAs and gen. prog. [129] The computer Zoo - * in a box [116] The mating pool: A testbed for experiments in the * of symbol syst. [108] The* of agents that build mental models and create simple plans using gen. prog. <ref> [57] </ref> The* of evolvability in gen. prog. [186] The* of sporting strategies [120] evolutionarily Spontaneous emergence of self replicating and * self-improving computer prog. [169] Evolutionary learning of predatory behaviors based on structured classifiers [187] * learning strategies [188] Putting INK into a BIRo: A discussion of problem do main knowledge <p> of sporting strategies [120] evolutionarily Spontaneous emergence of self replicating and * self-improving computer prog. [169] Evolutionary learning of predatory behaviors based on structured classifiers [187] * learning strategies [188] Putting INK into a BIRo: A discussion of problem do main knowledge for * robotics [175] The* induction of subroutines <ref> [57] </ref> evolvability The evol. of * in gen. prog. [168] evolved An * vision-based behavioral model of coordi nated group motion [41] evolving Architecture-altering operations for * the arc hitecture of a multipart prog. in gen. prog. [96] Feasibility of * self-learned pattern recognition appl. toward the solution of a constrained
Reference: [58] <author> Peter J. Angeline. </author> <title> Genetic programming: A current snapshot. </title> <note> In Sebald and Fogel [56], page ? y(Langdon) ga94bAngeline. </note>
Reference-contexts: crawling Automatic generation of prog. for * and wal king [170] Criticism culture, and the automatic generation of artworks [66] crossover Context preserving * in gen. prog. [170] culture Criticism, * and the automatic generation of artworks [244] curiosities Gen. prog. , indexed memory, the halting problem, and other * <ref> [58] </ref> current Gen. prog. : A * snapshot [93] damage-immune Evol. of * prog. using gen. prog. [16] Darwinian Beagle A* appr. to pattern recognition [161] decision Concept formation and * tree induction using the gen. prog. paradigm [48] defined A non-linear gen. process for data encoding and for solving problems <p> des Dis kreten Quadratischen Layoutproblems [159] Simultaneous discovery of detectors and a way of using the detectors via gen. prog. [152] * discovery of reusable detectors and subroutines using gen. prog. [117] size Two ways of discovering the * and shape of a com puter prog. to solve a problem <ref> [58] </ref> snapshot Gen. prog. : A current * [96] solution Feasibility of evolving self-learned pattern recognition appl. toward the * of a constrained syst. using gen. prog. [218] solve Gen. breeding pop. of computer prog. to * problems in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding
Reference: [59] <author> Peter J. Angeline. </author> <title> Genetic programming: Myths and facts. </title> <note> In Sebald and Fogel [56], page ? y(conf.prog) ga94cAngeline. </note>
Reference-contexts: introduction, [213] L-systems, [86] learning, [214] locality, [66] machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, <ref> [59] </ref> robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job <p> Gen. prog. * power and the discovery of functions [91] Exploring the underlying structure of nat. images th rough gen. prog. [82] eyes The difficulty of roving * [158] facilitating Perf. improvement of machine learning via automatic discovery of * functions as appl. to a problem of symbolic syst. ident. <ref> [59] </ref> facts Gen. prog. : Myths and * [96] Feasibility of evolving self-learned pattern recognition appl. toward the solution of a constrained syst. using gen. prog. [155] feature Gen. prog. for * discovery and image discrimi nation [35] filtering Signal * and data processing for laser rheo metry [51] fit Non-linear <p> [168] motion An evolved vision-based behavioral model of coordinated group * [41] multipart Architecture-altering operations for evolving the architecture of a * prog. in gen. prog. [104] multi-part Evolving the architecture of a * prog. in gen. prog. [134] multiplexer A hierarchical appr. to learning the Boo lean * function <ref> [59] </ref> Myths Gen. prog. : * and facts [91] natural Exploring the underlying structure of * images through gen. prog. [19] - Gen. prog. as a means for prog. ming computers by * sel. [10] Natural Selection Gen.
Reference: [60] <author> John R. Koza. </author> <title> Scalable learning in genetic programming using automatic function definition. </title> <note> In Sebald and Fogel [56], page ? y(conf.prog) ga94fKoza. </note>
Reference-contexts: of Reusable Prog. [136] Hierarchical* function definition in gen. prog. [154] * generation of prog. for crawling and walking [226] * prog. of robots using gen. prog. ming [158] - Perf. improvement of machine learning via * discovery of facilitating functions as appl. to a problem of symbolic syst. ident. <ref> [60] </ref> Scalable learning in gen. prog. using * function defi nition [200] The gen. planner The* generation of plans for a mobile robot via genetic prog. with automatically defined func tions [198] The gen. planner: The * generation of plans for a mobile robot via genetic prog. [197, 199] The* generation <p> with automatically * functions [200] The gen. planner The automatic generation of plans for a mobile robot via genetic prog. with automatically * func tions [100] definition Detector design by gen. prog. for automa ted border * in cardiac magnetic resonance images [136] Hierarchical automatic function * in gen. prog. <ref> [60] </ref> Scalable learning in gen. prog. using automatic func tion * [242] dendritic Gen. generation of * trees" for image classi fication [100] design Detector * by gen. prog. for automated border definition in cardiac magnetic resonance images [30] - Gen. prog. appl. to neural network * [182] detection IC engine <p> induction using the gen. prog. paradigm [134] function A hierarchical appr. to learning the Boolean multiplexer * [230, 22] A hierarchical gen. syst. for symbolic * ident. [205] An adaptive * ident. syst. [208] Finding an impulse response * using gen. prog. [136] Hierarchical automatic * definition in gen. prog. <ref> [60] </ref> Scalable learning in gen. prog. using automatic * definition [48] functions A non-linear gen. process for data encoding and for solving problems using automatically defined * [105] - Gen. prog. exploratory power and the discovery of * [51] - Non-linear GAs for solving problems by finding a fit composition of <p> 21 [76] * by adapting Rep. in gen. prog. [179] * distr. reactive strategies by gen. prog. for the general job shop problem [178] * distributive reactive strategies by gen. prog. for the general job shop problem [245] * mental models [63] * monitoring strategies: a difficult gen. prog. appl. <ref> [60] </ref> Scalable* in gen. prog. using automatic function definition [87, 38] length Prog. search with a hierarchical variable * Rep. : Gen. prog. , simulated annealing and hill climbing [157] Lessons Evolving a sort: * in gen. prog. [144] Lisp Using the GA to generate * source code to solve the <p> new learning * for neural networks [80] rules Learning and upgrading * for an OCR syst. using gen. prog. [142] Tree structured * in GAs [132] Russian roulette Looping as a means to survival: playing * in a harsh environment [246] Satunnaistajan etsinta [Gen. prog. random number generator by Koza] <ref> [60] </ref> Scalable learning in gen. prog. using automatic func tion definition [79] schedules Finding improved simulated annealing * with gen. prog. [176] scheduling Appl. of search methods to * problem in plastics forming plant: A binary Rep. appr. [176] search Appl. of * methods to sch. problem in plastics forming plant:
Reference: [61] <editor> IEEE. </editor> <booktitle> Proceedings of the First IEEE Conference on Evolutionary Computation, volume 1, </booktitle> <address> Orlando, FL, 27.-29. </address> <month> June </month> <year> 1994. </year> <note> IEEE. ga94ICCIEC1. </note>
Reference: [62] <author> David Andre. </author> <title> Evolution of mapmaking: Learning, planning, and memory using genetic programming. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 250-255. </pages> <month> ga94aAndre. </month>
Reference-contexts: introduction, [213] L-systems, [86] learning, [214] locality, [66] machine code, [232] maps, <ref> [62] </ref> modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system <p> identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, <ref> [62] </ref> medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, <p> of computer prog. to cntr. independently acting agents [99] * by gen. prog. of a spatial robot juggling cntr. alg. [189] * of autonomous robot cntr. architectures [93] * of damage-immune prog. using gen. prog. [11, 39] * of food foraging strategies for the Caribbean Anolis lizard using gen. prog. <ref> [62] </ref> * of mapmaking: Learning, planning, and memory using gen. prog. [216] * of subsumption architecture that perform a wall fol lowing task for an autonomous mobile robot via gen. prog. [127] * of subsumption using gen. prog. [94] * of trade strategies using GAs and gen. prog. [129] The computer <p> Adding* to the cellular development process: a com parative study [150] Automated* of a detector for ff-helices in protein sequences via gen. prog. [68] Automated* of a detector for the cores of ff-helices in protein sequences via gen. prog. [85] Dynamic training subset sel. for supervised * in gen. prog. <ref> [62] </ref> - Evol. of mapmaking: * planning, and memory using gen. prog. [169] - Evol. * of predatory behaviors based on structured classifiers [187] - Evol. * strategies [64] - Gen. prog. for the search of a new * rule for neural networks [203] - Meta-level strategy * for GA based <p> learning Perf. improvement of * via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. ident. [100] magnetic resonance images Detector design by gen. prog. for automated border definition in cardiac * [229] main program Discovery of a * and reusable subrou tines using gen. prog. <ref> [62] </ref> mapmaking Evol. of * Learning, planning, and me mory using gen. prog. [116] mating The * pool: A testbed for experiments in the evol. of symbol syst. [19] means Gen. prog. as a * for prog. ming computers by nat. sel. [10] - Gen. <p> Prog. : On Prog. ming Computers by * of Nat. Sel. and Gen. [132] Looping as a * to survival: playing Russian roulette in a harsh environment [25] On the origin of effective procedures by * of artificial sel. <ref> [62] </ref> memory Evol. of mapmaking: Learning, planning, and * using gen. prog. [78] - Turing completeness in the language of gen. prog. with indexed * [245] mental Learning * models [108] mental models The evol. of agents that build * and create simple plans using gen. prog. [203] Meta-level strategy learning <p> problem of symbolic syst. ident. [163] perspective An experimental * on gen. prog. [200] planner The gen. * The automatic generation of plans for a mobile robot via genetic prog. with automatically defined functions [198] The gen. * The automatic generation of plans for a mobile robot via genetic prog. <ref> [62] </ref> planning Evol. of mapmaking: Learning, * and me mory using gen. prog. [239] - Gen. prog. and AI * syst. [197, 199] plans The automatic generation of * for a mobile robot via gen. prog. with automatically defined functions [108] The evol. of agents that build mental models and create
Reference: [63] <author> Marc C. Atkin and Paul R. Cohen. </author> <title> Learning monitoring strategies: a difficult genetic programming application. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], pages 328-332a. </booktitle> <address> ga94aAtkin. </address>
Reference-contexts: introduction, [213] L-systems, [86] learning, [214] locality, [66] machine code, [232] maps, [62] modelling, [73] monitoring strategies, <ref> [63] </ref> natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] <p> Gen. prog. : A new paradigm for cntr. and * [72] analyzing Appl. of gen. prog. in * multiple steady states of dynamical syst. [11, 39] Anolis Evol. of food foraging strategies for the Carib bean * lizard using gen. prog. [65] application A gen. prog. * in virtual reality <ref> [63] </ref> Learning monitoring strategies: a difficult gen. prog. * [72] * of gen. prog. in analyzing multiple steady states of dynamical syst. [176] * of search methods to sch. problem in plastics forming plant: A binary Rep. appr. [24] * of the GA to automatic prog. generation [95] Terrain flattening by <p> Permuted title index 21 [76] * by adapting Rep. in gen. prog. [179] * distr. reactive strategies by gen. prog. for the general job shop problem [178] * distributive reactive strategies by gen. prog. for the general job shop problem [245] * mental models <ref> [63] </ref> * monitoring strategies: a difficult gen. prog. appl. [60] Scalable* in gen. prog. using automatic function definition [87, 38] length Prog. search with a hierarchical variable * Rep. : Gen. prog. , simulated annealing and hill climbing [157] Lessons Evolving a sort: * in gen. prog. [144] Lisp Using the <p> coroutine execution * for gen. prog. [220, 221, 222] modeling A gen. appr. to econometric * [238, 20] models Interactive evol. of equations for procedural * [245] Learning mental * [149] modular Gen. synthesis of * neural networks [177, 44] monitoring Gen. prog. to learn an agent's * stra tegy <ref> [63] </ref> Learning* strategies: a difficult gen. prog. appl. [184] morality Artificial * and gen. prog. [168] motion An evolved vision-based behavioral model of coordinated group * [41] multipart Architecture-altering operations for evolving the architecture of a * prog. in gen. prog. [104] multi-part Evolving the architecture of a * prog. in <p> and gen. prog. [187] - Evol. learning * [219, 207] - Gen. breeding of non-linear opt. cntr. * for broom balancing 24 [179] Learning distr. reactive * by gen. prog. for the general job shop problem [178] Learning distributive reactive * by gen. prog. for the general job shop problem <ref> [63] </ref> Learning monitoring * a difficult gen. prog. appl. [111] Strongly typed gen. prog. in evolving cooperation * [186] The evol. of sporting * [206] strategy Cart centering and broom balancing by gen. breeding pop. of cntr. * prog. [177, 44] - Gen. prog. to learn an agent's monitoring * [203]
Reference: [64] <author> Samy Bengio, Yoshua Bengio, and Jocelyn Cloutier. </author> <title> Genetic programming for the search of a new learning rule for neural networks. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 324-327. </pages> <month> ga94aBengio. </month>
Reference-contexts: introduction, [213] L-systems, [86] learning, [214] locality, [66] machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, <ref> [64, 193] </ref> performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, <p> 183, 21, 89, 81, 210, 244, 190, 19, 23, 174, 212, 60, 9, 213, 214, 215, 41, 216, 120] 114, 115, 105, 106, 116, 117, 118] 3.10 Geographical index The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada <ref> [64, 184] </ref> * Denmark [129] * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, <p> for the cores of ff-helices in protein sequences via gen. prog. [85] Dynamic training subset sel. for supervised * in gen. prog. [62] - Evol. of mapmaking: * planning, and memory using gen. prog. [169] - Evol. * of predatory behaviors based on structured classifiers [187] - Evol. * strategies <ref> [64] </ref> - Gen. prog. for the search of a new * rule for neural networks [203] - Meta-level strategy * for GA based on structured Rep. [80] * and upgrading rules for an OCR syst. using gen. prog. <p> architecture for a * [30] - Gen. prog. appl. to * design [21] * synthesis using cellular encoding and the GA [31] neural networks Cellular encoding of gen. * [125] - Gen. synthesis of Boolean * with a cell rewriting deve lopmental process [149] - Gen. synthesis of modular * <ref> [64] </ref> - Gen. prog. for the search of a new learning rule for * [88] neutral Genotype-phenotype-mapping and * variation - A case study in gen. prog. [46, 47] non-linear A * GAs for solving problems [48] A* gen. process for data encoding and for solving problems using automatically defined functions <p> into a BIRo: A discussion of problem domain knowledge for evol. * [226] robots Automatic prog. of * using gen. prog. ming [185] routines Evolving visual * [43] - Microbehaviors and dynamical syst. : Economic * as emergent properties of adaptive syst. s [82] roving The difficulty of * eyes <ref> [64] </ref> rule Gen. prog. for the search of a new learning * for neural networks [80] rules Learning and upgrading * for an OCR syst. using gen. prog. [142] Tree structured * in GAs [132] Russian roulette Looping as a means to survival: playing * in a harsh environment [246] Satunnaistajan <p> prog. using automatic func tion definition [79] schedules Finding improved simulated annealing * with gen. prog. [176] scheduling Appl. of search methods to * problem in plastics forming plant: A binary Rep. appr. [176] search Appl. of * methods to sch. problem in plastics forming plant: A binary Rep. appr. <ref> [64] </ref> - Gen. prog. for the * of a new learning rule for neural networks [143] On using GAs to * prog. spaces [87, 38] - Prog. * with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and hill climbing [85] selection Dynamic training subset * for supervised
Reference: [65] <author> Sumit Das, Terry Franguiadakis, Michael Papka, Thomas A. DeFanti, and Daniel J. Sandin. </author> <title> A genetic programming application in virtual reality. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 480-484. </pages> <month> ga94aDas. </month>
Reference-contexts: [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, <ref> [65] </ref> GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile <p> filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, <ref> [65] </ref> VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table gives references to the contri butions published annually. 1981, [16] 1986, [187, 24] 1989, [217] 51, 207, 54, 55] 127, 123, 134, 223, 224, 46, 14, 129, 130, 191] 225, 226, 10, 227, 228, 136, 48, 49, 11, <p> AI Gen. prog. and * planning syst. [195] analysis Gen. prog. : A new paradigm for cntr. and * [72] analyzing Appl. of gen. prog. in * multiple steady states of dynamical syst. [11, 39] Anolis Evol. of food foraging strategies for the Carib bean * lizard using gen. prog. <ref> [65] </ref> application A gen. prog. * in virtual reality [63] Learning monitoring strategies: a difficult gen. prog. * [72] * of gen. prog. in analyzing multiple steady states of dynamical syst. [176] * of search methods to sch. problem in plastics forming plant: A binary Rep. appr. [24] * of the <p> II * <ref> [65] </ref> virtual reality A gen. prog. appl. in * [168] vision-based An evolved * behavioral model of coordi nated group motion [185] visual Evolving * routines [154] walking Automatic generation of prog. for crawling and * [216] wall following task Evol. of subsumption architecture that perform a * for an autonomous
Reference: [66] <author> Patrik D'haeseleer. </author> <title> Context preserving crossover in genetic programming. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 256-261. </pages> <month> ga94aDhaeseleer. </month>
Reference-contexts: introduction, [213] L-systems, [86] learning, [214] locality, <ref> [66] </ref> machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, <p> decision tree induction using the gen. prog. paradigm [97] Concurrent evol. of territory-defining behavior in birds using gen. prog. [96] constrained Feasibility of evolving self-learned pattern recognition appl. toward the solution of a * syst. using gen. prog. [23] construction Recombination, sel. , and the gen. * of computer prog. <ref> [66] </ref> Context preserving crossover in gen. prog. [102] Context-free language induction by evol. of determi nistic push-down automata using gen. prog. [206] control Cart centering and broom balancing by gen. breeding pop. of * strategy prog. [166] - Evol. and coevol. of computer prog. to * independently-acting agents [99] - Evol. <p> [68] cores Automated learning of a detector for the * of ff helices in protein sequences via gen. prog. [73] coroutine Experiments with a * execution model for gen. prog. [154] crawling Automatic generation of prog. for * and wal king [170] Criticism culture, and the automatic generation of artworks <ref> [66] </ref> crossover Context preserving * in gen. prog. [170] culture Criticism, * and the automatic generation of artworks [244] curiosities Gen. prog. , indexed memory, the halting problem, and other * [58] current Gen. prog. : A * snapshot [93] damage-immune Evol. of * prog. using gen. prog. [16] Darwinian Beagle <p> of compu ter prog. to solve problems [105] power Gen. prog. exploratory * and the discovery of functions [169] predatory Evol. learning of * behaviors based on struc tured classifiers [98] prediction Distr. gen. prog. for on-line * in changing environments [101] Stock price time series * using gen. prog. <ref> [66] </ref> preserving Context * crossover in gen. prog. [144] prisoner's dilemma Using the GA to generate Lisp source code to solve the * [176] problem Appl. of search methods to sch. * in plastics forming plant: A binary Rep. appr. [244] - Gen. prog. , indexed memory, the halting * and
Reference: [67] <author> Bertrand Daniel Dunay, Frederick E. Petry, and Bill P. Buckles. </author> <title> Regular language induction with genetic programming. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 396-400. </pages> <month> ga94aDunay. </month>
Reference-contexts: introduction, [213] L-systems, [86] learning, [214] locality, [66] machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, <ref> [67] </ref> review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, <p> pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, <ref> [67] </ref> representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated <p> completeness in the language of gen. prog. with * memory [244] indexed memory Gen. prog. , * the halting problem, and other curiosities [161] induction Concept formation and decision tree * using the gen. prog. paradigm [102] Context-free language * by evol. of deterministic push down automata using gen. prog. <ref> [67] </ref> Regular language * with gen. prog. [175] The evol. * of subroutines [106] inductive logic An adaptive * prog. syst. using gen. prog. ming [71] information The use of gen. prog. to build queries for * retrieval [188] INK Putting * into a BIRo: A discussion of problem domain knowledge <p> Permuted title index 23 [118] register Evolving turing-complete prog. for a * machine with self-modifying code <ref> [67] </ref> Regular language induction with gen. prog. [114] replication Accurate * in gen. prog. [81] represent On the use of a directed acyclic graph to * a pop. of computer prog. [140] representation A * for the adaptive generation of simple sequential prog. [176] - Appl. of search methods to sch.
Reference: [68] <author> Simon G. Handley. </author> <title> Automated learning of a detector for the cores of ff-helices in protein sequences via genetic programming. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 474-479. </pages> <month> ga94aHandley. </month>
Reference-contexts: introduction, [213] L-systems, [86] learning, [214] locality, [66] machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, <ref> [68] </ref> proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation <p> [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, <ref> [68] </ref> protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] <p> using gen. prog. [100] automated Detector design by gen. prog. for * border definition in cardiac magnetic resonance images [212] * discovery of detectors and iteration-performing calculations to recognize patterns in protein sequences using gen. prog. [150] * learning of a detector for ff-helices in protein sequences via gen. prog. <ref> [68] </ref> * learning of a detector for the cores of ff-helices in pro tein sequences via gen. prog. [24] automatic Appl. of the GA to * prog. generation [170] Criticism, culture, and the * generation of artworks [9] - Gen. Prog. <p> new paradigm for * and analysis [228] controller A gen. appr. to finding a * to back up a tractor-trailed truck [181] co-operation Evolving * in autonomous robotic syst. [111] cooperation Strongly typed gen. prog. in evolving * strategies [168] coordinated An evolved vision-based behavioral model of * group motion <ref> [68] </ref> cores Automated learning of a detector for the * of ff helices in protein sequences via gen. prog. [73] coroutine Experiments with a * execution model for gen. prog. [154] crawling Automatic generation of prog. for * and wal king [170] Criticism culture, and the automatic generation of artworks [66] <p> Detector * by gen. prog. for automated border definition in cardiac magnetic resonance images [30] - Gen. prog. appl. to neural network * [182] detection IC engine misfire * alg. generation using gen. prog. [150] detector Automated learning of a * for ff-helices in pro tein sequences via gen. prog. <ref> [68] </ref> Automated learning of a * for the cores of ff-helices in protein sequences via gen. prog. [100] * design by gen. prog. for automated border definition in cardiac magnetic resonance images [212] detectors Automated discovery of * and iteration-performing calculations to recognize patterns in protein sequences using gen. prog. [152] <p> Quadratischen * [177, 44] learn Gen. prog. to * an agent's monitoring strategy [134] learning A hierarchical appr. to * the Boolean mul tiplexer function [32, 15] Adding* to the cellular development process: a com parative study [150] Automated* of a detector for ff-helices in protein sequences via gen. prog. <ref> [68] </ref> Automated* of a detector for the cores of ff-helices in protein sequences via gen. prog. [85] Dynamic training subset sel. for supervised * in gen. prog. [62] - Evol. of mapmaking: * planning, and memory using gen. prog. [169] - Evol. * of predatory behaviors based on structured classifiers [187] <p> Sel. and Gen. [106] programming system An adaptive inductive logic * using gen. prog. [212] protein sequences Automated discovery of detectors and iteration-performing calculations to recognize patterns in * using gen. prog. [150] Automated learning of a detector for ff-helices in * via gen. prog. <ref> [68] </ref> Automated learning of a detector for the cores of ff helices in * via gen. prog. [70] Recognizing patterns in * using iteration-performing calculations in gen. prog. [102] push-down Context-free language induction by evol. of deterministic * automata using gen. prog. [188] Putting INK into a BIRo: A discussion of
Reference: [69] <author> Kenneth E. Kinnear, Jr. </author> <title> Fitness landscapes and difficulty in genetic programming. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 142-147. </pages> <month> ga94aKinnear. </month>
Reference-contexts: self-learned pattern recognition appl. toward the solution of a constrained syst. using gen. prog. [155] feature Gen. prog. for * discovery and image discrimi nation [35] filtering Signal * and data processing for laser rheo metry [51] fit Non-linear GAs for solving problems by finding a * composition of functions <ref> [69] </ref> Fitness landscapes and difficulty in gen. prog. [95] flattening Terrain * by autonomous robot: A gen. prog. appl. [11, 39] food Evol. of * foraging strategies for the Caribbean Anolis lizard using gen. prog. 20 [11, 39] foraging Evol. of food * strategies for the Caribbean Anolis lizard using gen.
Reference: [70] <author> John R. Koza. </author> <title> Recognizing patterns in protein sequences using iteration-performing calculations in genetic programming. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 244-249. </pages> <month> ga94aKoza. </month>
Reference-contexts: introduction, [213] L-systems, [86] learning, [214] locality, [66] machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, <ref> [70] </ref> random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, <p> parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, <ref> [150, 70] </ref> genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, <p> 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, <ref> [70, 212] </ref> transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] <p> balancing Cart centering and * by gen. bree ding pop. of cntr. strategy prog. [219, 207] - Gen. breeding of non-linear opt. cntr. strategies for * [13] C++ Gen. prog. with * [212] calculations Automated discovery of detectors and iteration-performing * to recognize patterns in protein sequences using gen. prog. <ref> [70] </ref> Recognizing patterns in protein sequences using iteration-performing * in gen. prog. [100] cardiac Detector design by gen. prog. for automated border definition in * magnetic resonance images [11, 39] Caribbean Evol. of food foraging strategies for the * Anolis lizard using gen. prog. [206] Cart centering and broom balancing by <p> [237, 128] Interactive evol. of dynamical syst. [238, 20] * evol. of equations for procedural models [227] inter-twined spiral problem A gen. appr. to the truck backer upper problem and the * [212] iteration-performing Automated discovery of detectors and * calculations to recognize patterns in protein sequences using gen. prog. <ref> [70] </ref> Recognizing patterns in protein sequences using * calculations in gen. prog. [179] job shop problem Learning distr. reactive strategies by gen. prog. for the general * [178] Learning distributive reactive strategies by gen. prog. for the general * [17, 18] joy The * of gen. prog. [99] juggling Evol. by <p> evol. as an opt. procedure [96] pattern Feasibility of evolving self-learned * recognition appl. toward the solution of a constrained syst. using gen. prog. [16] Beagle- A Darwinian appr. to * recognition [212] patterns Automated discovery of detectors and iteration-performing calculations to recognize * in protein sequences using gen. prog. <ref> [70] </ref> Recognizing* in protein sequences using iteration performing calculations in gen. prog. [148, 36] pedestrians Gen. prog. for * [216] perform Evol. of subsumption architecture that * a wall following task for an autonomous mobile robot via gen. prog. 22 [158] Performance improvement of machine learning via automatic discovery of facilitating <p> gen. prog. [212] protein sequences Automated discovery of detectors and iteration-performing calculations to recognize patterns in * using gen. prog. [150] Automated learning of a detector for ff-helices in * via gen. prog. [68] Automated learning of a detector for the cores of ff helices in * via gen. prog. <ref> [70] </ref> Recognizing patterns in * using iteration-performing calculations in gen. prog. [102] push-down Context-free language induction by evol. of deterministic * automata using gen. prog. [188] Putting INK into a BIRo: A discussion of problem do main knowledge for evol. robotics [27] Quadratischen Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung <p> the general job shop problem [96] recognition Feasibility of evolving self-learned pattern * appl. toward the solution of a constrained syst. using gen. prog. [16] Beagle- A Darwinian appr. to pattern * [212] recognize Automated discovery of detectors and iteration-performing calculations to * patterns in protein sequences using gen. prog. <ref> [70] </ref> Recognizing patterns in protein sequences using iteration-performing calculations in gen. prog. [23] Recombination sel. , and the gen. construction of computer prog.
Reference: [71] <author> Donald H. Kraft, Frederick E. Petry, Bill P. Buckles, and Thyagarajan Sadasivan. </author> <title> The use of genetic programming to build queries for information retrieval. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 468-473. </pages> <month> ga94aKraft. </month>
Reference-contexts: Concept formation and decision tree * using the gen. prog. paradigm [102] Context-free language * by evol. of deterministic push down automata using gen. prog. [67] Regular language * with gen. prog. [175] The evol. * of subroutines [106] inductive logic An adaptive * prog. syst. using gen. prog. ming <ref> [71] </ref> information The use of gen. prog. to build queries for * retrieval [188] INK Putting * into a BIRo: A discussion of problem domain knowledge for evol. robotics [237, 128] Interactive evol. of dynamical syst. [238, 20] * evol. of equations for procedural models [227] inter-twined spiral problem A gen. <p> calculations in gen. prog. [102] push-down Context-free language induction by evol. of deterministic * automata using gen. prog. [188] Putting INK into a BIRo: A discussion of problem do main knowledge for evol. robotics [27] Quadratischen Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beispiel des Diskreten * Layoutproblems <ref> [71] </ref> queries The use of gen. prog. to build * for info ret rieval [246] random number generator Satunnaistajan etsinta [Gen. prog. * by Koza] [146] random numbers Evolving a computer prog. to gene rate * using the gen. prog. paradigm [153] razor Gen. prog. of minimal neural nets using Occam's <p> Meta-level strategy learning for GA based on structu red * [87, 38] - Prog. search with a hierarchical variable length * Gen. prog. , simulated annealing and hill climbing [121, 37] representations Coevolving high-level * [45] - Gen. prog. with adaptive * [76] Learning by adapting * in gen. prog. <ref> [71] </ref> retrieval The use of gen. prog. to build queries for info * [229] reusable Discovery of a main prog. and * subroutines using gen. prog. [9] - Gen. Prog.
Reference: [72] <author> Ming-Yi Lay. </author> <title> Application of genetic programming in analyzing multiple steady states of dynamical systems. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], pages 333-336b. </booktitle> <address> ga94aLay. </address>
Reference-contexts: independently-acting * [177, 44] agent's Gen. prog. to learn an * monitoring strategy [108] agents The evol. of * that build mental models and create simple plans using gen. prog. [239] AI Gen. prog. and * planning syst. [195] analysis Gen. prog. : A new paradigm for cntr. and * <ref> [72] </ref> analyzing Appl. of gen. prog. in * multiple steady states of dynamical syst. [11, 39] Anolis Evol. of food foraging strategies for the Carib bean * lizard using gen. prog. [65] application A gen. prog. * in virtual reality [63] Learning monitoring strategies: a difficult gen. prog. * [72] * <p> * <ref> [72] </ref> analyzing Appl. of gen. prog. in * multiple steady states of dynamical syst. [11, 39] Anolis Evol. of food foraging strategies for the Carib bean * lizard using gen. prog. [65] application A gen. prog. * in virtual reality [63] Learning monitoring strategies: a difficult gen. prog. * [72] * of gen. prog. in analyzing multiple steady states of dynamical syst. [176] * of search methods to sch. problem in plastics forming plant: A binary Rep. appr. [24] * of the GA to automatic prog. generation [95] Terrain flattening by autonomous robot: A gen. prog. * [96] applied Feasibility <p> reactive strategies by gen. prog. for the general job shop problem [188] domain Putting INK into a BIRo: A discussion of problem * knowledge for evol. robotics [183] double-based Using a * GA on a pop. of computer prog. [85] Dynamic training subset sel. for supervised learning in gen. prog. <ref> [72] </ref> dynamical Appl. of gen. prog. in analyzing multiple steady states of * syst. [237, 128] Interactive evol. of * syst. [43] - Microbehaviors and * syst. : Economic routines as emergent properties of adaptive syst. s [220, 221, 222] econometric A gen. appr. to * modeling [43] Economic Microbehaviors and <p> self-replicating and evol. arily self-improving computer prog. [49] spontaneously A non-linear gen. process for problem solving using * emergent self-replicating and self-improving en tities [53] - Non-linear gen. process for problem solving using * emergent self-replicating and self-improving entities [186] sporting The evol. of * strategies [74] Stack-based gen. prog. <ref> [72] </ref> steady states Appl. of gen. prog. in analyzing mul tiple * of dynamical syst. [130] Steerable Gennets The gen. prog. of steerable be haviors in Gennets [130] - Steerable Gennets The gen. prog. of * behaviors in Gennets [101] Stock price time series prediction using gen. prog. [29] strategies Apprentissage
Reference: [73] <author> III Sidney R. Maxwell. </author> <title> Experiments with a coroutine execution model for genetic programming. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], pages 413-417a. </booktitle> <address> ga94aMaxwell. </address>
Reference-contexts: introduction, [213] L-systems, [86] learning, [214] locality, [66] machine code, [232] maps, [62] modelling, <ref> [73] </ref> monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] <p> tractor-trailed truck [181] co-operation Evolving * in autonomous robotic syst. [111] cooperation Strongly typed gen. prog. in evolving * strategies [168] coordinated An evolved vision-based behavioral model of * group motion [68] cores Automated learning of a detector for the * of ff helices in protein sequences via gen. prog. <ref> [73] </ref> coroutine Experiments with a * execution model for gen. prog. [154] crawling Automatic generation of prog. for * and wal king [170] Criticism culture, and the automatic generation of artworks [66] crossover Context preserving * in gen. prog. [170] culture Criticism, * and the automatic generation of artworks [244] curiosities <p> in autonomous robotic syst. [113] * data structures using gen. prog. [8] * images [104] * the architecture of a multi-part prog. in gen. prog. [118] * turing-complete prog. for a register machine with self modifying code [185] * visual routines [111] Strongly typed gen. prog. in * cooperation strategies <ref> [73] </ref> execution Experiments with a coroutine * model for gen. prog. [163] experimental An * perspective on gen. prog. [73] Experiments with a coroutine execution model for gen. prog. [116] The mating pool: A testbed for * in the evol. of symbol syst. [105] exploratory Gen. prog. * power and the <p> a multi-part prog. in gen. prog. [118] * turing-complete prog. for a register machine with self modifying code [185] * visual routines [111] Strongly typed gen. prog. in * cooperation strategies <ref> [73] </ref> execution Experiments with a coroutine * model for gen. prog. [163] experimental An * perspective on gen. prog. [73] Experiments with a coroutine execution model for gen. prog. [116] The mating pool: A testbed for * in the evol. of symbol syst. [105] exploratory Gen. prog. * power and the discovery of functions [91] Exploring the underlying structure of nat. images th rough gen. prog. [82] eyes The difficulty <p> with automatically defined functions [200] The gen. planner The automatic generation of plans for a * via genetic prog. with automatically defined functions [198] The gen. planner: The automatic generation of plans for a * via genetic prog. [168] model An evolved vision-based behavioral * of coordi nated group motion <ref> [73] </ref> Experiments with a coroutine execution * for gen. prog. [220, 221, 222] modeling A gen. appr. to econometric * [238, 20] models Interactive evol. of equations for procedural * [245] Learning mental * [149] modular Gen. synthesis of * neural networks [177, 44] monitoring Gen. prog. to learn an agent's
Reference: [74] <author> Timothy Perkis. </author> <title> Stack-based genetic programming. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 148-153. </pages> <month> ga94aPerkis. </month>
Reference-contexts: maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, <ref> [74] </ref> system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] <p> [120] Spontaneous emergence of self-replicating and evol. arily self-improving computer prog. [49] spontaneously A non-linear gen. process for problem solving using * emergent self-replicating and self-improving en tities [53] - Non-linear gen. process for problem solving using * emergent self-replicating and self-improving entities [186] sporting The evol. of * strategies <ref> [74] </ref> Stack-based gen. prog. [72] steady states Appl. of gen. prog. in analyzing mul tiple * of dynamical syst. [130] Steerable Gennets The gen. prog. of steerable be haviors in Gennets [130] - Steerable Gennets The gen. prog. of * behaviors in Gennets [101] Stock price time series prediction using gen.
Reference: [75] <author> John E. Perry. </author> <title> The effect of population enrichment in genetic programming. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 456-461. </pages> <month> ga94aPerry. </month>
Reference-contexts: introduction, [213] L-systems, [86] learning, [214] locality, [66] machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, <ref> [75] </ref> protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images <p> [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, <ref> [75] </ref> prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] <p> functions [194] Cellular* as a graph grammar [31] Cellular* of gen. neural networks [21] Neural network synthesis using cellular * and the GA [52] - Non-linear gen. process for data * and for solving problems using automatically defined functions [182] engine IC * misfire detection alg. generation using gen. prog. <ref> [75] </ref> enrichment The effect of pop. * in gen. prog. [49] entities A non-linear gen. process for problem solving using spontaneously emergent self-replicating and self improving * [53] - Non-linear gen. process for problem solving using spon taneously emergent self-replicating and self-improving * [132] environment Looping as a means to survival: <p> Russian rou lette in a harsh environment [55] plural Non-linear gen. process for use with * co-evolving pop. [116] pool The mating * A testbed for experiments in the evol. of symbol syst. [81] population On the use of a directed acyclic graph to represent a * of computer prog. <ref> [75] </ref> The effect of * enrichment in gen. prog. [183] Using a double-based GA on a * of computer prog. [206] populations Cart centering and broom balancing by gen. breeding * of cntr. strategy prog. [218] - Gen. breeding * of computer prog. to solve problems in artificial intelligence [42] -
Reference: [76] <author> Justinian P. Rosca and Dana H. Ballard. </author> <title> Learning by adapting representations in genetic programming. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 407-412. </pages> <month> ga94aRosca. </month>
Reference-contexts: planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, <ref> [76] </ref> robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, <p> The other abbreviation used to compress titles are shown in appendix A. [114] Accurate replication in gen. prog. [81] acyclic On the use of a directed * graph to represent a pop. of computer prog. <ref> [76] </ref> adapting Learning by * Rep. in gen. prog. [140] adaptive A Rep. for the * generation of simple sequen tial prog. [205] An* function ident. syst. [106] An* inductive logic prog. syst. using gen. prog. ming [45] - Gen. prog. with * Rep. [43] - Microbehaviors and dynamical syst. : <p> Permuted title index 21 <ref> [76] </ref> * by adapting Rep. in gen. prog. [179] * distr. reactive strategies by gen. prog. for the general job shop problem [178] * distributive reactive strategies by gen. prog. for the general job shop problem [245] * mental models [63] * monitoring strategies: a difficult gen. prog. appl. [60] Scalable* <p> forming plant: A binary * appr. [203] - Meta-level strategy learning for GA based on structu red * [87, 38] - Prog. search with a hierarchical variable length * Gen. prog. , simulated annealing and hill climbing [121, 37] representations Coevolving high-level * [45] - Gen. prog. with adaptive * <ref> [76] </ref> Learning by adapting * in gen. prog. [71] retrieval The use of gen. prog. to build queries for info * [229] reusable Discovery of a main prog. and * subroutines using gen. prog. [9] - Gen. Prog.
Reference: [77] <author> Walter Alden Tackett and Aviram Carmi. </author> <title> The unique implications of brood selection for genetic programming. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 160-165. </pages> <month> ga94aTackett. </month>
Reference-contexts: introduction, [213] L-systems, [86] learning, [214] locality, [66] machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, <ref> [77] </ref> Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, <p> [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, <ref> [77] </ref> shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video <p> cntr. strategies for broom balancing [218] - Gen. * pop. of computer prog. to solve problems in artificial intelligence [42] - Gen. prog. : A paradigm for gen. * pop. of computer prog. to solve problems [225] The gen. prog. paradigm: Gen. * pop. of computer prog. to solve problems <ref> [77] </ref> brood The unique implications of * sel. for gen. prog. [206] broom balancing Cart centering and * by gen. bree ding pop. of cntr. strategy prog. [219, 207] - Gen. breeding of non-linear opt. cntr. strategies for * [13] C++ Gen. prog. with * [212] calculations Automated discovery of detectors <p> appl. to a problem of symbolic syst. * [34] Solving* problems by structured GAs [242] image Gen. generation of "dendritic trees" for * classi fication [155] - Gen. prog. for feature discovery and * discrimination [8] images Evolving * [91] Exploring the underlying structure of nat. * through gen. prog. <ref> [77] </ref> implications The unique * of brood sel. for gen. prog. [208] impulse response Finding an * function using gen. prog. [166] independently-acting Evol. and coevol. of computer prog. to cntr. * agents [78] indexed Turing completeness in the language of gen. prog. with * memory [244] indexed memory Gen. prog. <p> [85] selection Dynamic training subset * for supervised lear ning in gen. prog. [19] - Gen. prog. as a means for prog. ming computers by nat. * [25] On the origin of effective procedures by means of arti ficial * [23] Recombination,* and the gen. construction of compu ter prog. <ref> [77] </ref> The unique implications of brood * for gen. prog. [49] self-improving A non-linear gen. process for problem solving using spontaneously emergent self-replicating and * en tities [53] - Non-linear gen. process for problem solving using spon taneously emergent self-replicating and * entities [120] Spontaneous emergence of self-replicating and evol. arily <p> completeness in the language of gen. prog. with indexed memory [118] turing-complete Evolving * prog. for a register mac hine with self-modifying code [28] typed Strongly * gen. prog. [111] Strongly* gen. prog. in evolving cooperation strate gies [91] underlying Exploring the * structure of nat. images through gen. prog. <ref> [77] </ref> unique The * implications of brood sel. for gen. prog. [80] upgrading Learning and * rules for an OCR syst. using gen. prog. [87, 38] variable Prog. search with a hierarchical * length Rep. : Gen. prog. , simulated annealing and hill climbing [88] variation Genotype-phenotype-mapping and neutral * A
Reference: [78] <author> Astro Teller. </author> <title> Turing completeness in the language of genetic programming with indexed memory. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 136-141. </pages> <month> ga94aTeller. </month>
Reference-contexts: [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, <ref> [78] </ref> time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table gives references to the contri butions published annually. 1981, [16] 1986, [187, 24] 1989, [217] 51, 207, <p> shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, <ref> [78] </ref> time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table gives references to the contri butions published annually. 1981, [16] 1986, [187, 24] 1989, [217] 51, 207, 54, 55] 127, 123, 134, 223, 224, 46, 14, <p> * discrimination [8] images Evolving * [91] Exploring the underlying structure of nat. * through gen. prog. [77] implications The unique * of brood sel. for gen. prog. [208] impulse response Finding an * function using gen. prog. [166] independently-acting Evol. and coevol. of computer prog. to cntr. * agents <ref> [78] </ref> indexed Turing completeness in the language of gen. prog. with * memory [244] indexed memory Gen. prog. , * the halting problem, and other curiosities [161] induction Concept formation and decision tree * using the gen. prog. paradigm [102] Context-free language * by evol. of deterministic push down automata using <p> [188] knowledge Putting INK into a BIRo: A discussion of problem domain * for evol. robotics [201] Koza Geneettinen ohjelmointi [Gen. prog. by * [246] - Satunnaistajan etsinta [Gen. prog. random number generator by * [102] language Context-free * induction by evol. of determi nistic push-down automata using gen. prog. <ref> [78] </ref> - Turing completeness in the * of gen. prog. with in dexed memory [35] laser Signal filtering and data processing for * rheometry [27] Layoutproblems Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beis piel des Diskreten Quadratischen * [177, 44] learn Gen. prog. to * an agent's monitoring <p> Sel. and Gen. [132] Looping as a * to survival: playing Russian roulette in a harsh environment [25] On the origin of effective procedures by * of artificial sel. [62] memory Evol. of mapmaking: Learning, planning, and * using gen. prog. <ref> [78] </ref> - Turing completeness in the language of gen. prog. with indexed * [245] mental Learning * models [108] mental models The evol. of agents that build * and create simple plans using gen. prog. [203] Meta-level strategy learning for GA based on structu red Rep. [176] methods Appl. of search <p> "dendritic * for image classi fication [40] troubling The * aspects of a building block hypothesis for gen. prog. [228] truck A gen. appr. to finding a cntr. to back up a tractor-trailed * [227] truck backer upper problem A gen. appr. to the * and the inter-twined spiral problem <ref> [78] </ref> Turing completeness in the language of gen. prog. with indexed memory [118] turing-complete Evolving * prog. for a register mac hine with self-modifying code [28] typed Strongly * gen. prog. [111] Strongly* gen. prog. in evolving cooperation strate gies [91] underlying Exploring the * structure of nat. images through gen.
Reference: [79] <author> Ulrich Wilhelm Thonemann. </author> <title> Finding improved simulated annealing schedules with genetic programming. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 391-395. </pages> <month> ga94aThonemann. </month>
Reference-contexts: locality, [66] machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, <ref> [79] </ref> sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] <p> robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, <ref> [79] </ref> simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The <p> * for an OCR syst. using gen. prog. [142] Tree structured * in GAs [132] Russian roulette Looping as a means to survival: playing * in a harsh environment [246] Satunnaistajan etsinta [Gen. prog. random number generator by Koza] [60] Scalable learning in gen. prog. using automatic func tion definition <ref> [79] </ref> schedules Finding improved simulated annealing * with gen. prog. [176] scheduling Appl. of search methods to * problem in plastics forming plant: A binary Rep. appr. [176] search Appl. of * methods to sch. problem in plastics forming plant: A binary Rep. appr. [64] - Gen. prog. for the * <p> prog. [117] shape Two ways of discovering the size and * of a com puter prog. to solve a problem [164] shape-genes Differentiable chromosomes The gen. prog. of switchable * [35] Signal filtering and data processing for laser rheometry [138] simulated Co-evolving parasites improve * evol. as an opt. procedure <ref> [79] </ref> simulated annealing Finding improved * schedules with gen. prog. [87, 38] - Prog. search with a hierarchical variable length Rep. : Gen. prog. , * and hill climbing [27] Simulated Annealing Verbesserung des * unter Anwendung Genetischer Programmierung am Beispiel des Dis kreten Quadratischen Layoutproblems [159] Simultaneous discovery of detectors
Reference: [80] <author> David Andre. </author> <title> Learning and upgrading rules for an OCR system using genetic programming. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 462-467. </pages> <address> ga94bAndre. </address> <month> 28 </month>
Reference-contexts: [86] learning, [214] locality, [66] machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, <ref> [80] </ref> simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, <p> [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, <ref> [80] </ref> optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, <p> programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, <ref> [80] </ref> simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, <p> mapmaking: * planning, and memory using gen. prog. [169] - Evol. * of predatory behaviors based on structured classifiers [187] - Evol. * strategies [64] - Gen. prog. for the search of a new * rule for neural networks [203] - Meta-level strategy * for GA based on structured Rep. <ref> [80] </ref> * and upgrading rules for an OCR syst. using gen. prog. <p> solving problems using automatically defined functions [53] * gen. process for problem solving using spontaneously emergent self-replicating and self-improving entities [54] * gen. process for use with co-evolving pop. [55] * gen. process for use with plural co-evolving pop. [153] Occam's Gen. prog. of minimal neural nets using * razor <ref> [80] </ref> OCR Learning and upgrading rules for an * syst. using gen. prog. [201] ohjelmointi Geneettinen * [Gen. prog. by Koza] [98] on-line Distr. gen. prog. for * prediction in changing environments [217] operating Hierarchical GAs * on pop. of computer prog. [41] operations Architecture-altering * for evolving the arc hitecture <p> prog. of * using gen. prog. ming [185] routines Evolving visual * [43] - Microbehaviors and dynamical syst. : Economic * as emergent properties of adaptive syst. s [82] roving The difficulty of * eyes [64] rule Gen. prog. for the search of a new learning * for neural networks <ref> [80] </ref> rules Learning and upgrading * for an OCR syst. using gen. prog. [142] Tree structured * in GAs [132] Russian roulette Looping as a means to survival: playing * in a harsh environment [246] Satunnaistajan etsinta [Gen. prog. random number generator by Koza] [60] Scalable learning in gen. prog. using <p> turing-complete Evolving * prog. for a register mac hine with self-modifying code [28] typed Strongly * gen. prog. [111] Strongly* gen. prog. in evolving cooperation strate gies [91] underlying Exploring the * structure of nat. images through gen. prog. [77] unique The * implications of brood sel. for gen. prog. <ref> [80] </ref> upgrading Learning and * rules for an OCR syst. using gen. prog. [87, 38] variable Prog. search with a hierarchical * length Rep. : Gen. prog. , simulated annealing and hill climbing [88] variation Genotype-phenotype-mapping and neutral * A case study in gen. prog. [27] Verbesserung des Simulated Annealing unter
Reference: [81] <author> Simon G. Handley. </author> <title> On the use of a directed acyclic graph to represent a population of computer programs. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 154-159. </pages> <month> ga94bHandley. </month>
Reference-contexts: The other abbreviation used to compress titles are shown in appendix A. [114] Accurate replication in gen. prog. <ref> [81] </ref> acyclic On the use of a directed * graph to represent a pop. of computer prog. [76] adapting Learning by * Rep. in gen. prog. [140] adaptive A Rep. for the * generation of simple sequen tial prog. [205] An* function ident. syst. [106] An* inductive logic prog. syst. using <p> of * push-down automata using gen. prog. [12] Developing a gen. prog. syst. [32, 15] development Adding learning to the cellular * process: a comparative study [125] developmental Gen. synthesis of Boolean neural networks with a cell rewriting * process [164] Differentiable chromosomes The gen. prog. of switc hable shape-genes <ref> [81] </ref> directed On the use of a * acyclic graph to represent a pop. of computer prog. [117] discovering Two ways of * the size and shape of a com puter prog. to solve a problem Permuted title index 19 [212] discovery Automated * of detectors and iteration-performing calculations to recognize <p> Prog. : On Prog. ming Computers by Means of Nat. Sel. and * [130] Gennets Steerable * The gen. prog. of steerable be haviors in * [88] Genotype-phenotype-mapping and neutral varia tion A case study in gen. prog. <ref> [81] </ref> graph On the use of a directed acyclic * to represent a pop. of computer prog. [194] graph grammar Cellular encoding as a * [14] graphics Artificial evol. for computer * [168] group An evolved vision-based behavioral model of coordinated * motion [244] halting Gen. prog. , indexed memory, the <p> problem in * plant: A binary Rep. appr. [132] playing Looping as a means to survival: * Russian rou lette in a harsh environment [55] plural Non-linear gen. process for use with * co-evolving pop. [116] pool The mating * A testbed for experiments in the evol. of symbol syst. <ref> [81] </ref> population On the use of a directed acyclic graph to represent a * of computer prog. [75] The effect of * enrichment in gen. prog. [183] Using a double-based GA on a * of computer prog. [206] populations Cart centering and broom balancing by gen. breeding * of cntr. strategy <p> Permuted title index 23 [118] register Evolving turing-complete prog. for a * machine with self-modifying code [67] Regular language induction with gen. prog. [114] replication Accurate * in gen. prog. <ref> [81] </ref> represent On the use of a directed acyclic graph to * a pop. of computer prog. [140] representation A * for the adaptive generation of simple sequential prog. [176] - Appl. of search methods to sch. problem in plastics forming plant: A binary * appr. [203] - Meta-level strategy learning
Reference: [82] <author> Craig W. Reynolds. </author> <title> The difficulty of roving eyes. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 262-267. </pages> <month> ga94bReynolds. </month>
Reference-contexts: on gen. prog. [73] Experiments with a coroutine execution model for gen. prog. [116] The mating pool: A testbed for * in the evol. of symbol syst. [105] exploratory Gen. prog. * power and the discovery of functions [91] Exploring the underlying structure of nat. images th rough gen. prog. <ref> [82] </ref> eyes The difficulty of roving * [158] facilitating Perf. improvement of machine learning via automatic discovery of * functions as appl. to a problem of symbolic syst. ident. [59] facts Gen. prog. : Myths and * [96] Feasibility of evolving self-learned pattern recognition appl. toward the solution of a constrained <p> autonomous * syst. [188] robotics Putting INK into a BIRo: A discussion of problem domain knowledge for evol. * [226] robots Automatic prog. of * using gen. prog. ming [185] routines Evolving visual * [43] - Microbehaviors and dynamical syst. : Economic * as emergent properties of adaptive syst. s <ref> [82] </ref> roving The difficulty of * eyes [64] rule Gen. prog. for the search of a new learning * for neural networks [80] rules Learning and upgrading * for an OCR syst. using gen. prog. [142] Tree structured * in GAs [132] Russian roulette Looping as a means to survival: playing
Reference: [83] <author> Hitoshi Iba, Taisuke Sato, and Hugo de Garis. </author> <title> System identification approach to genetic programming. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation [61], </booktitle> <pages> pages 401-406. </pages> <month> ga94cIba. </month>
Reference-contexts: [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, <ref> [83] </ref> virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine <p> The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) [153, 232, 115, 118] * Japan <ref> [176, 33, 83, 112] </ref> * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, 221, 222, 146, 127, 123, 134, 228, 136, 48, 49, 11, 39, 47, 53, 52, 40, 128, 238,
Reference: [84] <editor> Yuval Davidor, Hans-Paul Schwefel, and Reinhard Manner, editors. </editor> <booktitle> Parallel Problem Solving from Nature - PPSN III, volume 866 of Lecture Notes in Computer Science, </booktitle> <address> Jerusalem,Israel, 9.-14. October 1994. </address> <publisher> Springer-Verlag, </publisher> <address> Berlin. y ga94PPSN3. </address>
Reference: [85] <author> C. Gathercole and P. Ross. </author> <title> Dynamic training subset selection for supervised learning in genetic programming. </title> <editor> In Davidor et al. </editor> <address> [84], </address> <institution> page ? y(conf. prog.) ga94aGathercole. </institution>
Reference-contexts: [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, <ref> [85] </ref> mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] <p> for on-line prediction in changing environ ments [178] distributive Learning * reactive strategies by gen. prog. for the general job shop problem [188] domain Putting INK into a BIRo: A discussion of problem * knowledge for evol. robotics [183] double-based Using a * GA on a pop. of computer prog. <ref> [85] </ref> Dynamic training subset sel. for supervised learning in gen. prog. [72] dynamical Appl. of gen. prog. in analyzing multiple steady states of * syst. [237, 128] Interactive evol. of * syst. [43] - Microbehaviors and * syst. : Economic routines as emergent properties of adaptive syst. s [220, 221, 222] <p> hierarchical appr. to * the Boolean mul tiplexer function [32, 15] Adding* to the cellular development process: a com parative study [150] Automated* of a detector for ff-helices in protein sequences via gen. prog. [68] Automated* of a detector for the cores of ff-helices in protein sequences via gen. prog. <ref> [85] </ref> Dynamic training subset sel. for supervised * in gen. prog. [62] - Evol. of mapmaking: * planning, and memory using gen. prog. [169] - Evol. * of predatory behaviors based on structured classifiers [187] - Evol. * strategies [64] - Gen. prog. for the search of a new * rule <p> plastics forming plant: A binary Rep. appr. [64] - Gen. prog. for the * of a new learning rule for neural networks [143] On using GAs to * prog. spaces [87, 38] - Prog. * with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and hill climbing <ref> [85] </ref> selection Dynamic training subset * for supervised lear ning in gen. prog. [19] - Gen. prog. as a means for prog. ming computers by nat. * [25] On the origin of effective procedures by means of arti ficial * [23] Recombination,* and the gen. construction of compu ter prog. [77] <p> strategy learning for GA based on * Rep. [34] Solving ident. problems by * GAs [142] Tree* rules in GAs [229] subroutines Discovery of a main prog. and reusable * using gen. prog. [152] Simultaneous discovery of reusable detectors and * using gen. prog. [175] The evol. induction of * <ref> [85] </ref> subset Dynamic training * sel. for supervised learning in gen. prog. [216] subsumption Evol. of * architecture that perform a wall following task for an autonomous mobile robot via gen. prog. [127] - Evol. of * using gen. prog. [85] supervised Dynamic training subset sel. for * learning in gen. <p> * using gen. prog. [175] The evol. induction of * <ref> [85] </ref> subset Dynamic training * sel. for supervised learning in gen. prog. [216] subsumption Evol. of * architecture that perform a wall following task for an autonomous mobile robot via gen. prog. [127] - Evol. of * using gen. prog. [85] supervised Dynamic training subset sel. for * learning in gen. prog. [132] survival Looping as a means to * playing Russian rou lette in a harsh environment [164] switchable Differentiable chromosomes The gen. prog. of * shape-genes [116] symbol The mating pool: A testbed for experiments in the evol. of <p> testbed The mating pool: A * for experiments in the evol. of symbol syst. [101] time series Stock price * prediction using gen. prog. [228] tractor-trailed A gen. appr. to finding a cntr. to back up a * truck [94] trade Evol. of * strategies using GAs and gen. prog. <ref> [85] </ref> training Dynamic * subset sel. for supervised learning in gen. prog. [161] tree Concept formation and decision * induction using the gen. prog. paradigm [142] * structured rules in GAs [242] trees Gen. generation of "dendritic * for image classi fication [40] troubling The * aspects of a building block
Reference: [86] <author> C. Jacob. </author> <title> Genetic L-system programming. </title> <editor> In Davidor et al. </editor> <address> [84], </address> <institution> page ? y(conf. prog.) ga94aJacob. </institution>
Reference-contexts: introduction, [213] L-systems, <ref> [86] </ref> learning, [214] locality, [66] machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] <p> Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, <ref> [86] </ref> learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] <p> food foraging strategies for the Carib bean Anolis * using gen. prog. [89, 33] local Gen. prog. with * hill-climbing [29] locales Apprentissage de strategies * pour architechtu res reactives distribuees par prog. mation genetique [132] Looping as a means to survival: playing Russian rou lette in a harsh environment <ref> [86] </ref> L-system Gen. * prog. [118] machine Evolving turing-complete prog. for a register * with self-modifying code [158] machine learning Perf. improvement of * via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. ident. [100] magnetic resonance images Detector design by gen. prog. for automated border <p> * [27] Programmierung Verbesserung des Simulated Annealing unter Anwendung Genetischer * am Beispiel des Diskreten Quadratischen Layoutproblems [226] programming Automatic * of robots using gen. prog. [11, 39] - Evol. of food foraging strategies for the Caribbean Anolis lizard using gen. * [201] - Geneettinen ohjelmointi [Gen. * by Koza] <ref> [86] </ref> - Gen. L-syst. * [9] - Gen. * II, Automatic Discovery of Reusable Prog. [13] - Gen. * with C++ [19] - Gen. prog. as a means for * computers by nat. sel. [10] - Gen. Prog. : On * Computers by Means of Nat.
Reference: [87] <author> Una-May O'Reilly and Franz Oppacher. </author> <title> Program search with a hierarchical variable length representation: Genetic programming, simulated annealing and hill climbing. </title> <editor> In Davidor et al. </editor> <address> [84], </address> <institution> page ? y(conf. prog.) ga94aO'Reilly. </institution>
Reference-contexts: Russian roulette in a * environment [134] hierarchical A * appr. to learning the Boolean mul tiplexer function [230, 22] A* gen. syst. for symbolic function ident. [136] * automatic function definition in gen. prog. [217] * GAs operating on pop. of computer prog. [180] * selforganization in gen. prog. <ref> [87, 38] </ref> - Prog. search with a * variable length Rep. : Gen. prog. , simulated annealing and hill climbing [121, 37] high-level Coevolving * Rep. [87, 38] hill climbing Prog. search with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and * [89, 33] hill-climbing Gen. prog. <p> ident. [136] * automatic function definition in gen. prog. [217] * GAs operating on pop. of computer prog. [180] * selforganization in gen. prog. <ref> [87, 38] </ref> - Prog. search with a * variable length Rep. : Gen. prog. , simulated annealing and hill climbing [121, 37] high-level Coevolving * Rep. [87, 38] hill climbing Prog. search with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and * [89, 33] hill-climbing Gen. prog. with local * [182] IC engine misfire detection alg. generation using gen. prog. [230, 22] identification A hierarchical gen. syst. for symbolic function * [205] An <p> [179] * distr. reactive strategies by gen. prog. for the general job shop problem [178] * distributive reactive strategies by gen. prog. for the general job shop problem [245] * mental models [63] * monitoring strategies: a difficult gen. prog. appl. [60] Scalable* in gen. prog. using automatic function definition <ref> [87, 38] </ref> length Prog. search with a hierarchical variable * Rep. : Gen. prog. , simulated annealing and hill climbing [157] Lessons Evolving a sort: * in gen. prog. [144] Lisp Using the GA to generate * source code to solve the prisoner's dilemma [11, 39] lizard Evol. of food foraging <p> acyclic graph to * a pop. of computer prog. [140] representation A * for the adaptive generation of simple sequential prog. [176] - Appl. of search methods to sch. problem in plastics forming plant: A binary * appr. [203] - Meta-level strategy learning for GA based on structu red * <ref> [87, 38] </ref> - Prog. search with a hierarchical variable length * Gen. prog. , simulated annealing and hill climbing [121, 37] representations Coevolving high-level * [45] - Gen. prog. with adaptive * [76] Learning by adapting * in gen. prog. [71] retrieval The use of gen. prog. to build queries for <p> * problem in plastics forming plant: A binary Rep. appr. [176] search Appl. of * methods to sch. problem in plastics forming plant: A binary Rep. appr. [64] - Gen. prog. for the * of a new learning rule for neural networks [143] On using GAs to * prog. spaces <ref> [87, 38] </ref> - Prog. * with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and hill climbing [85] selection Dynamic training subset * for supervised lear ning in gen. prog. [19] - Gen. prog. as a means for prog. ming computers by nat. * [25] On the origin <p> * of a com puter prog. to solve a problem [164] shape-genes Differentiable chromosomes The gen. prog. of switchable * [35] Signal filtering and data processing for laser rheometry [138] simulated Co-evolving parasites improve * evol. as an opt. procedure [79] simulated annealing Finding improved * schedules with gen. prog. <ref> [87, 38] </ref> - Prog. search with a hierarchical variable length Rep. : Gen. prog. , * and hill climbing [27] Simulated Annealing Verbesserung des * unter Anwendung Genetischer Programmierung am Beispiel des Dis kreten Quadratischen Layoutproblems [159] Simultaneous discovery of detectors and a way of using the detectors via gen. prog. <p> typed Strongly * gen. prog. [111] Strongly* gen. prog. in evolving cooperation strate gies [91] underlying Exploring the * structure of nat. images through gen. prog. [77] unique The * implications of brood sel. for gen. prog. [80] upgrading Learning and * rules for an OCR syst. using gen. prog. <ref> [87, 38] </ref> variable Prog. search with a hierarchical * length Rep. : Gen. prog. , simulated annealing and hill climbing [88] variation Genotype-phenotype-mapping and neutral * A case study in gen. prog. [27] Verbesserung des Simulated Annealing unter Anwen-dung Genetischer Programmierung am Beispiel des Diskreten Quadratischen Layoutproblems [215] video Gen. prog.
Reference: [88] <editor> Wolfgang Banzhaf. </editor> <title> Genotype-phenotype-mapping and neutral variation a case study in genetic programming. </title> <editor> In Davidor et al. </editor> <address> [84], </address> <institution> page ? y(conf. prog.) ga94bBanzhaf. </institution>
Reference-contexts: selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, <ref> [88] </ref> video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table gives references to the contri butions published annually. 1981, [16] 1986, [187, 24] 1989, [217] 51, 207, 54, 55] 127, 123, 134, 223, 224, 46, 14, 129, 130, <p> Prog. : On Prog. ming Computers by Means of Nat. Sel. and * [130] Gennets Steerable * The gen. prog. of steerable be haviors in * <ref> [88] </ref> Genotype-phenotype-mapping and neutral varia tion A case study in gen. prog. [81] graph On the use of a directed acyclic * to represent a pop. of computer prog. [194] graph grammar Cellular encoding as a * [14] graphics Artificial evol. for computer * [168] group An evolved vision-based behavioral model <p> synthesis using cellular encoding and the GA [31] neural networks Cellular encoding of gen. * [125] - Gen. synthesis of Boolean * with a cell rewriting deve lopmental process [149] - Gen. synthesis of modular * [64] - Gen. prog. for the search of a new learning rule for * <ref> [88] </ref> neutral Genotype-phenotype-mapping and * variation - A case study in gen. prog. [46, 47] non-linear A * GAs for solving problems [48] A* gen. process for data encoding and for solving problems using automatically defined functions [49] A* gen. process for problem solving using sponta neously emergent self-replicating and self-improving <p> of nat. images through gen. prog. [77] unique The * implications of brood sel. for gen. prog. [80] upgrading Learning and * rules for an OCR syst. using gen. prog. [87, 38] variable Prog. search with a hierarchical * length Rep. : Gen. prog. , simulated annealing and hill climbing <ref> [88] </ref> variation Genotype-phenotype-mapping and neutral * A case study in gen. prog. [27] Verbesserung des Simulated Annealing unter Anwen-dung Genetischer Programmierung am Beispiel des Diskreten Quadratischen Layoutproblems [215] video Gen. prog.
Reference: [89] <author> Hitoshi Iba, Hugo de Garis, and Taisuke Sato. </author> <title> Genetic programming with local hill-climbing. </title> <editor> In Davidor et al. </editor> <address> [84], </address> <institution> page ? y(conf. prog.) ga94bHIba. </institution>
Reference-contexts: selforganization in gen. prog. [87, 38] - Prog. search with a * variable length Rep. : Gen. prog. , simulated annealing and hill climbing [121, 37] high-level Coevolving * Rep. [87, 38] hill climbing Prog. search with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and * <ref> [89, 33] </ref> hill-climbing Gen. prog. with local * [182] IC engine misfire detection alg. generation using gen. prog. [230, 22] identification A hierarchical gen. syst. for symbolic function * [205] An adaptive function * syst. [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to <p> : Gen. prog. , simulated annealing and hill climbing [157] Lessons Evolving a sort: * in gen. prog. [144] Lisp Using the GA to generate * source code to solve the prisoner's dilemma [11, 39] lizard Evol. of food foraging strategies for the Carib bean Anolis * using gen. prog. <ref> [89, 33] </ref> local Gen. prog. with * hill-climbing [29] locales Apprentissage de strategies * pour architechtu res reactives distribuees par prog. mation genetique [132] Looping as a means to survival: playing Russian rou lette in a harsh environment [86] L-system Gen. * prog. [118] machine Evolving turing-complete prog. for a register
Reference: [90] <editor> John R. Koza, editor. </editor> <booktitle> Genetic Algorithms at Stanford 1994, </booktitle> <address> Stanford, CA, Fall 1994. </address> <publisher> Stanford Bookstore. y(Koza) ga94Stanford. </publisher>
Reference: [91] <author> Benjamin M. Gordon. </author> <title> Exploring the underlying structure of natural images through genetic programming. </title> <note> In Koza [90], page ? y(conf.prog) ga94aBMGordon. </note>
Reference-contexts: sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, <ref> [91] </ref> implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, <p> a coroutine * model for gen. prog. [163] experimental An * perspective on gen. prog. [73] Experiments with a coroutine execution model for gen. prog. [116] The mating pool: A testbed for * in the evol. of symbol syst. [105] exploratory Gen. prog. * power and the discovery of functions <ref> [91] </ref> Exploring the underlying structure of nat. images th rough gen. prog. [82] eyes The difficulty of roving * [158] facilitating Perf. improvement of machine learning via automatic discovery of * functions as appl. to a problem of symbolic syst. ident. [59] facts Gen. prog. : Myths and * [96] Feasibility <p> improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. * [34] Solving* problems by structured GAs [242] image Gen. generation of "dendritic trees" for * classi fication [155] - Gen. prog. for feature discovery and * discrimination [8] images Evolving * <ref> [91] </ref> Exploring the underlying structure of nat. * through gen. prog. [77] implications The unique * of brood sel. for gen. prog. [208] impulse response Finding an * function using gen. prog. [166] independently-acting Evol. and coevol. of computer prog. to cntr. * agents [78] indexed Turing completeness in the language <p> coordinated group * [41] multipart Architecture-altering operations for evolving the architecture of a * prog. in gen. prog. [104] multi-part Evolving the architecture of a * prog. in gen. prog. [134] multiplexer A hierarchical appr. to learning the Boo lean * function [59] Myths Gen. prog. : * and facts <ref> [91] </ref> natural Exploring the underlying structure of * images through gen. prog. [19] - Gen. prog. as a means for prog. ming computers by * sel. [10] Natural Selection Gen. <p> strategy Cart centering and broom balancing by gen. breeding pop. of cntr. * prog. [177, 44] - Gen. prog. to learn an agent's monitoring * [203] - Meta-level * learning for GA based on structured Rep. [28] Strongly typed gen. prog. [111] * typed gen. prog. in evolving cooperation strategies <ref> [91] </ref> structure Exploring the underlying * of nat. images through gen. prog. [169] structured Evol. learning of predatory behaviors based on * classifiers [203] - Meta-level strategy learning for GA based on * Rep. [34] Solving ident. problems by * GAs [142] Tree* rules in GAs [229] subroutines Discovery of a <p> gen. appr. to the * and the inter-twined spiral problem [78] Turing completeness in the language of gen. prog. with indexed memory [118] turing-complete Evolving * prog. for a register mac hine with self-modifying code [28] typed Strongly * gen. prog. [111] Strongly* gen. prog. in evolving cooperation strate gies <ref> [91] </ref> underlying Exploring the * structure of nat. images through gen. prog. [77] unique The * implications of brood sel. for gen. prog. [80] upgrading Learning and * rules for an OCR syst. using gen. prog. [87, 38] variable Prog. search with a hierarchical * length Rep. : Gen. prog. ,
Reference: [92] <author> Brett W. Coon. </author> <title> Circuit synthesis through genetic programming. </title> <note> In Koza [90], page ? y(conf.prog) ga94aCoon. </note>
Reference-contexts: programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, <ref> [92] </ref> ZOO, [129] 16 3.9 Annual index The following table gives references to the contri butions published annually. 1981, [16] 1986, [187, 24] 1989, [217] 51, 207, 54, 55] 127, 123, 134, 223, 224, 46, 14, 129, 130, 191] 225, 226, 10, 227, 228, 136, 48, 49, 11, 39, 47, 53, <p> development process: a comparative study [21] Neural network synthesis using * encoding and the GA [194] * encoding as a graph grammar [31] * encoding of gen. neural networks [98] changing Distr. gen. prog. for on-line prediction in * environments [164] chromosomes Differentiable * The gen. prog. of switchable shape-genes <ref> [92] </ref> Circuit synthesis through gen. prog. [242] classification Gen. generation of "dendritic trees" for image * [169] classifiers Evol. learning of predatory behaviors based on structured * [118] code Evolving turing-complete prog. for a register mac hine with self-modifying * [166] coevolution Evol. and * of computer prog. to cntr. independently-acting <p> * shape-genes [116] symbol The mating pool: A testbed for experiments in the evol. of * syst. [230, 22] symbolic A hierarchical gen. syst. for * function ident. [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of * syst. ident. <ref> [92] </ref> synthesis Circuit * through gen. prog. [125] - Gen. * of Boolean neural networks with a cell rewriting developmental process [149] - Gen. * of modular neural networks [21] Neural network * using cellular encoding and the GA [112] Temporal data processing using gen. prog. [95] Terrain flattening by autonomous
Reference: [93] <author> Andrew Dickinson. </author> <title> Evolution of damage-immune programs using genetic programming. </title> <note> In Koza [90], page ? y(conf.prog) ga94aDickinson. </note>
Reference-contexts: wal king [170] Criticism culture, and the automatic generation of artworks [66] crossover Context preserving * in gen. prog. [170] culture Criticism, * and the automatic generation of artworks [244] curiosities Gen. prog. , indexed memory, the halting problem, and other * [58] current Gen. prog. : A * snapshot <ref> [93] </ref> damage-immune Evol. of * prog. using gen. prog. [16] Darwinian Beagle A* appr. to pattern recognition [161] decision Concept formation and * tree induction using the gen. prog. paradigm [48] defined A non-linear gen. process for data encoding and for solving problems using automatically * functions [52] - Non-linear gen. <p> and co-evol. of computer prog. [237, 128] Interactive* of dynamical syst. [238, 20] Interactive* of equations for procedural models [166] * and coevol. of computer prog. to cntr. independently acting agents [99] * by gen. prog. of a spatial robot juggling cntr. alg. [189] * of autonomous robot cntr. architectures <ref> [93] </ref> * of damage-immune prog. using gen. prog. [11, 39] * of food foraging strategies for the Caribbean Anolis lizard using gen. prog. [62] * of mapmaking: Learning, planning, and memory using gen. prog. [216] * of subsumption architecture that perform a wall fol lowing task for an autonomous mobile robot
Reference: [94] <author> Brian Lent. </author> <title> Evolution of trade strategies using genetic algorithms and genetic programming. </title> <note> In Koza [90], page ? y(conf.prog) ga94aLent. </note>
Reference-contexts: of food foraging strategies for the Caribbean Anolis lizard using gen. prog. [62] * of mapmaking: Learning, planning, and memory using gen. prog. [216] * of subsumption architecture that perform a wall fol lowing task for an autonomous mobile robot via gen. prog. [127] * of subsumption using gen. prog. <ref> [94] </ref> * of trade strategies using GAs and gen. prog. [129] The computer Zoo - * in a box [116] The mating pool: A testbed for experiments in the * of symbol syst. [108] The* of agents that build mental models and create simple plans using gen. prog. [57] The* of <p> Steerable Gennets The gen. prog. of * behaviors in Gennets [101] Stock price time series prediction using gen. prog. [29] strategies Apprentissage de * locales pour architechtu res reactives distribuees par prog. mation genetique [11, 39] strategies Evol. of food foraging * for the Caribbean Anolis lizard using gen. prog. <ref> [94] </ref> - Evol. of trade * using GAs and gen. prog. [187] - Evol. learning * [219, 207] - Gen. breeding of non-linear opt. cntr. * for broom balancing 24 [179] Learning distr. reactive * by gen. prog. for the general job shop problem [178] Learning distributive reactive * by gen. <p> Concurrent evol. of * behavior in birds using gen. prog. [116] testbed The mating pool: A * for experiments in the evol. of symbol syst. [101] time series Stock price * prediction using gen. prog. [228] tractor-trailed A gen. appr. to finding a cntr. to back up a * truck <ref> [94] </ref> trade Evol. of * strategies using GAs and gen. prog. [85] training Dynamic * subset sel. for supervised learning in gen. prog. [161] tree Concept formation and decision * induction using the gen. prog. paradigm [142] * structured rules in GAs [242] trees Gen. generation of "dendritic * for image
Reference: [95] <author> Christopher G. Lott. </author> <title> Terrain flattening by autonomous robot: A genetic programming application. </title> <note> In Koza [90], page ? y(conf.prog) ga94aLott. </note>
Reference-contexts: population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, <ref> [95] </ref> robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, <p> in virtual reality [63] Learning monitoring strategies: a difficult gen. prog. * [72] * of gen. prog. in analyzing multiple steady states of dynamical syst. [176] * of search methods to sch. problem in plastics forming plant: A binary Rep. appr. [24] * of the GA to automatic prog. generation <ref> [95] </ref> Terrain flattening by autonomous robot: A gen. prog. * [96] applied Feasibility of evolving self-learned pattern recognition * toward the solution of a constrained syst. using gen. prog. [30] - Gen. prog. * to neural network design [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions <p> automatic generation of plans for a mobile robot via genetic prog. with * defined functions [216] autonomous Evol. of subsumption architecture that perform a wall following task for an * mobile robot via gen. prog. [189] - Evol. of * robot cntr. architectures [181] Evolving co-operation in * robotic syst. <ref> [95] </ref> Terrain flattening by * robot: A gen. prog. appl. [228] back A gen. appr. to finding a cntr. to * up a tractor trailed truck [16] Beagle A Darwinian appr. to pattern recognition [97] behavior Concurrent evol. of territory-defining * in birds using gen. prog. [168] behavioral An evolved vision-based <p> a constrained syst. using gen. prog. [155] feature Gen. prog. for * discovery and image discrimi nation [35] filtering Signal * and data processing for laser rheo metry [51] fit Non-linear GAs for solving problems by finding a * composition of functions [69] Fitness landscapes and difficulty in gen. prog. <ref> [95] </ref> flattening Terrain * by autonomous robot: A gen. prog. appl. [11, 39] food Evol. of * foraging strategies for the Caribbean Anolis lizard using gen. prog. 20 [11, 39] foraging Evol. of food * strategies for the Caribbean Anolis lizard using gen. prog. [161] formation Concept * and decision tree <p> and subroutines using gen. prog. [125] rewriting Gen. synthesis of Boolean neural networks with a cell * developmental process [35] rheometry Signal filtering and data processing for laser * [99] robot Evol. by gen. prog. of a spatial * juggling cntr. alg. [189] - Evol. of autonomous * cntr. architectures <ref> [95] </ref> Terrain flattening by autonomous * A gen. prog. appl. [181] robotic Evolving co-operation in autonomous * syst. [188] robotics Putting INK into a BIRo: A discussion of problem domain knowledge for evol. * [226] robots Automatic prog. of * using gen. prog. ming [185] routines Evolving visual * [43] - <p> of * syst. ident. [92] synthesis Circuit * through gen. prog. [125] - Gen. * of Boolean neural networks with a cell rewriting developmental process [149] - Gen. * of modular neural networks [21] Neural network * using cellular encoding and the GA [112] Temporal data processing using gen. prog. <ref> [95] </ref> Terrain flattening by autonomous robot: A gen. prog. appl. [97] territory-defining Concurrent evol. of * behavior in birds using gen. prog. [116] testbed The mating pool: A * for experiments in the evol. of symbol syst. [101] time series Stock price * prediction using gen. prog. [228] tractor-trailed A gen.
Reference: [96] <author> Shermann L. Min. </author> <title> Feasibility of evolving self-learned pattern recognition applied toward the solution of a constrained system using genetic programming. </title> <note> In Koza [90], page ? y(conf.prog) ga94aMin. </note>
Reference-contexts: [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, <ref> [16, 159, 155, 96] </ref> protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random <p> prog. * [72] * of gen. prog. in analyzing multiple steady states of dynamical syst. [176] * of search methods to sch. problem in plastics forming plant: A binary Rep. appr. [24] * of the GA to automatic prog. generation [95] Terrain flattening by autonomous robot: A gen. prog. * <ref> [96] </ref> applied Feasibility of evolving self-learned pattern recognition * toward the solution of a constrained syst. using gen. prog. [30] - Gen. prog. * to neural network design [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as * to a problem of symbolic syst. ident. [29] <p> with GAs [115] Complexity compression and evol. [51] composition Non-linear GAs for solving problems by finding a fit * of functions [115] compression Complexity * and evol. [161] Concept formation and decision tree induction using the gen. prog. paradigm [97] Concurrent evol. of territory-defining behavior in birds using gen. prog. <ref> [96] </ref> constrained Feasibility of evolving self-learned pattern recognition appl. toward the solution of a * syst. using gen. prog. [23] construction Recombination, sel. , and the gen. * of computer prog. [66] Context preserving crossover in gen. prog. [102] Context-free language induction by evol. of determi nistic push-down automata using gen. <p> of problem do main knowledge for * robotics [175] The* induction of subroutines [57] evolvability The evol. of * in gen. prog. [168] evolved An * vision-based behavioral model of coordi nated group motion [41] evolving Architecture-altering operations for * the arc hitecture of a multipart prog. in gen. prog. <ref> [96] </ref> Feasibility of * self-learned pattern recognition appl. toward the solution of a constrained syst. using gen. prog. [151] Generality and difficulty in gen. prog. : * a sort [146] * a computer prog. to generate random numbers using the gen. prog. paradigm [157] * a sort: Lessons in gen. prog. <p> functions [91] Exploring the underlying structure of nat. images th rough gen. prog. [82] eyes The difficulty of roving * [158] facilitating Perf. improvement of machine learning via automatic discovery of * functions as appl. to a problem of symbolic syst. ident. [59] facts Gen. prog. : Myths and * <ref> [96] </ref> Feasibility of evolving self-learned pattern recognition appl. toward the solution of a constrained syst. using gen. prog. [155] feature Gen. prog. for * discovery and image discrimi nation [35] filtering Signal * and data processing for laser rheo metry [51] fit Non-linear GAs for solving problems by finding a * <p> : A new * for cntr. and analysis [42] - Gen. prog. : A * for gen. breeding pop. of computer prog. to solve problems [225] The gen. prog. * Gen. breeding pop. of computer prog. to solve problems [138] parasites Co-evolving * improve simulated evol. as an opt. procedure <ref> [96] </ref> pattern Feasibility of evolving self-learned * recognition appl. toward the solution of a constrained syst. using gen. prog. [16] Beagle- A Darwinian appr. to * recognition [212] patterns Automated discovery of detectors and iteration-performing calculations to recognize * in protein sequences using gen. prog. [70] Recognizing* in protein sequences using <p> prog. to gene rate * using the gen. prog. paradigm [153] razor Gen. prog. of minimal neural nets using Occam's * [179] reactive Learning distr. * strategies by gen. prog. for the general job shop problem [178] Learning distributive * strategies by gen. prog. for the general job shop problem <ref> [96] </ref> recognition Feasibility of evolving self-learned pattern * appl. toward the solution of a constrained syst. using gen. prog. [16] Beagle- A Darwinian appr. to pattern * [212] recognize Automated discovery of detectors and iteration-performing calculations to * patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences <p> of brood * for gen. prog. [49] self-improving A non-linear gen. process for problem solving using spontaneously emergent self-replicating and * en tities [53] - Non-linear gen. process for problem solving using spon taneously emergent self-replicating and * entities [120] Spontaneous emergence of self-replicating and evol. arily * computer prog. <ref> [96] </ref> self-learned Feasibility of evolving * pattern recognition appl. toward the solution of a constrained syst. using gen. prog. [118] self-modifying Evolving turing-complete prog. for a register machine with * code [180] selforganization Hierarchical * in gen. prog. [49] self-replicating A non-linear gen. process for problem solving using spontaneously emergent * <p> of detectors and a way of using the detectors via gen. prog. [152] * discovery of reusable detectors and subroutines using gen. prog. [117] size Two ways of discovering the * and shape of a com puter prog. to solve a problem [58] snapshot Gen. prog. : A current * <ref> [96] </ref> solution Feasibility of evolving self-learned pattern recognition appl. toward the * of a constrained syst. using gen. prog. [218] solve Gen. breeding pop. of computer prog. to * problems in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding pop. of computer prog. to * problems [225]
Reference: [97] <author> Julie Segal. </author> <title> Concurrent evolution of territory-defining behavior in birds using genetic programming. </title> <note> In Koza [90], page ? y(conf.prog) ga94aSegal. </note>
Reference-contexts: prog. [189] - Evol. of * robot cntr. architectures [181] Evolving co-operation in * robotic syst. [95] Terrain flattening by * robot: A gen. prog. appl. [228] back A gen. appr. to finding a cntr. to * up a tractor trailed truck [16] Beagle A Darwinian appr. to pattern recognition <ref> [97] </ref> behavior Concurrent evol. of territory-defining * in birds using gen. prog. [168] behavioral An evolved vision-based * model of coordi nated group motion [169] behaviors Evol. learning of predatory * based on struc tured classifiers 17 18 [130] - Steerable Gennets The gen. prog. of steerable * in Gennets [176] <p> model of coordi nated group motion [169] behaviors Evol. learning of predatory * based on struc tured classifiers 17 18 [130] - Steerable Gennets The gen. prog. of steerable * in Gennets [176] binary Appl. of search methods to sch. problem in plas tics forming plant: A * Rep. appr. <ref> [97] </ref> birds Concurrent evol. of territory-defining behavior in * using gen. prog. [188] BIRo Putting INK into a * A discussion of problem do main knowledge for evol. robotics [134] Boolean A hierarchical appr. to learning the * mul tiplexer function [125] - Gen. synthesis of * neural networks with a <p> develop ment process: a * study [110] complex Solving * problems with GAs [115] Complexity compression and evol. [51] composition Non-linear GAs for solving problems by finding a fit * of functions [115] compression Complexity * and evol. [161] Concept formation and decision tree induction using the gen. prog. paradigm <ref> [97] </ref> Concurrent evol. of territory-defining behavior in birds using gen. prog. [96] constrained Feasibility of evolving self-learned pattern recognition appl. toward the solution of a * syst. using gen. prog. [23] construction Recombination, sel. , and the gen. * of computer prog. [66] Context preserving crossover in gen. prog. [102] Context-free <p> on-line prediction in changing * [238, 20] equations Interactive evol. of * for procedural mo dels [246] etsinta Satunnaistajan * [Gen. prog. random number generator by Koza] [14] evolution Artificial * for computer graphics [138] - Co-evolving parasites improve simulated * as an opt. procedure [115] Complexity compression and * <ref> [97] </ref> Concurrent* of territory-defining behavior in birds using gen. prog. [102] Context-free language induction by * of deterministic push-down automata using gen. prog. [123] - Gen. * and co-evol. of computer prog. [237, 128] Interactive* of dynamical syst. [238, 20] Interactive* of equations for procedural models [166] * and coevol. of <p> prog. [125] - Gen. * of Boolean neural networks with a cell rewriting developmental process [149] - Gen. * of modular neural networks [21] Neural network * using cellular encoding and the GA [112] Temporal data processing using gen. prog. [95] Terrain flattening by autonomous robot: A gen. prog. appl. <ref> [97] </ref> territory-defining Concurrent evol. of * behavior in birds using gen. prog. [116] testbed The mating pool: A * for experiments in the evol. of symbol syst. [101] time series Stock price * prediction using gen. prog. [228] tractor-trailed A gen. appr. to finding a cntr. to back up a *
Reference: [98] <author> Steven Spitz. </author> <title> Distributed genetic programming for on-line prediction in changing environments. </title> <note> In Koza [90], page ? y(conf.prog) ga94aSpitz. </note>
Reference-contexts: [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, <ref> [98] </ref> prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, <p> cell Gen. synthesis of Boolean neural networks with a * rewriting developmental process [32, 15] cellular Adding learning to the * development process: a comparative study [21] Neural network synthesis using * encoding and the GA [194] * encoding as a graph grammar [31] * encoding of gen. neural networks <ref> [98] </ref> changing Distr. gen. prog. for on-line prediction in * environments [164] chromosomes Differentiable * The gen. prog. of switchable shape-genes [92] Circuit synthesis through gen. prog. [242] classification Gen. generation of "dendritic trees" for image * [169] classifiers Evol. learning of predatory behaviors based on structured * [118] code Evolving <p> domain knowledge for evol. robotics [27] Diskreten Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beispiel des * Quadratischen Layoutproblems [29] distribuees Apprentissage de strategies locales pour architechtures reactives * par prog. mation genetique [179] distributed Learning * reactive strategies by gen. prog. for the general job shop problem <ref> [98] </ref> * gen. prog. for on-line prediction in changing environ ments [178] distributive Learning * reactive strategies by gen. prog. for the general job shop problem [188] domain Putting INK into a BIRo: A discussion of problem * knowledge for evol. robotics [183] double-based Using a * GA on a pop. <p> gen. prog. [49] entities A non-linear gen. process for problem solving using spontaneously emergent self-replicating and self improving * [53] - Non-linear gen. process for problem solving using spon taneously emergent self-replicating and self-improving * [132] environment Looping as a means to survival: playing Russian roulette in a harsh * <ref> [98] </ref> environments Distr. gen. prog. for on-line prediction in changing * [238, 20] equations Interactive evol. of * for procedural mo dels [246] etsinta Satunnaistajan * [Gen. prog. random number generator by Koza] [14] evolution Artificial * for computer graphics [138] - Co-evolving parasites improve simulated * as an opt. procedure <p> * gen. process for use with co-evolving pop. [55] * gen. process for use with plural co-evolving pop. [153] Occam's Gen. prog. of minimal neural nets using * razor [80] OCR Learning and upgrading rules for an * syst. using gen. prog. [201] ohjelmointi Geneettinen * [Gen. prog. by Koza] <ref> [98] </ref> on-line Distr. gen. prog. for * prediction in changing environments [217] operating Hierarchical GAs * on pop. of computer prog. [41] operations Architecture-altering * for evolving the arc hitecture of a multipart prog. in gen. prog. [219, 207] optimal Gen. breeding of non-linear * cntr. strate gies for broom balancing <p> * [55] - Non-linear gen. process for use with plural co-evolving * [225] The gen. prog. paradigm: Gen. breeding * of compu ter prog. to solve problems [105] power Gen. prog. exploratory * and the discovery of functions [169] predatory Evol. learning of * behaviors based on struc tured classifiers <ref> [98] </ref> prediction Distr. gen. prog. for on-line * in changing environments [101] Stock price time series * using gen. prog. [66] preserving Context * crossover in gen. prog. [144] prisoner's dilemma Using the GA to generate Lisp source code to solve the * [176] problem Appl. of search methods to sch.
Reference: [99] <author> Stewart N. Taylor. </author> <title> Evolution by genetic programming of a spatial robot juggling control algorithm. </title> <note> In Koza [90], page ? y(conf.prog) ga94aTaylor. </note>
Reference-contexts: [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, <ref> [99] </ref> mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] <p> computer prog. [66] Context preserving crossover in gen. prog. [102] Context-free language induction by evol. of determi nistic push-down automata using gen. prog. [206] control Cart centering and broom balancing by gen. breeding pop. of * strategy prog. [166] - Evol. and coevol. of computer prog. to * independently-acting agents <ref> [99] </ref> - Evol. by gen. prog. of a spatial robot juggling * alg. [189] - Evol. of autonomous robot * architectures [219, 207] - Gen. breeding of non-linear opt. * strategies for broom balancing [195] - Gen. prog. : A new paradigm for * and analysis [228] controller A gen. appr. <p> gen. prog. [102] Context-free language induction by * of deterministic push-down automata using gen. prog. [123] - Gen. * and co-evol. of computer prog. [237, 128] Interactive* of dynamical syst. [238, 20] Interactive* of equations for procedural models [166] * and coevol. of computer prog. to cntr. independently acting agents <ref> [99] </ref> * by gen. prog. of a spatial robot juggling cntr. alg. [189] * of autonomous robot cntr. architectures [93] * of damage-immune prog. using gen. prog. [11, 39] * of food foraging strategies for the Caribbean Anolis lizard using gen. prog. [62] * of mapmaking: Learning, planning, and memory using <p> using gen. prog. [70] Recognizing patterns in protein sequences using * calculations in gen. prog. [179] job shop problem Learning distr. reactive strategies by gen. prog. for the general * [178] Learning distributive reactive strategies by gen. prog. for the general * [17, 18] joy The * of gen. prog. <ref> [99] </ref> juggling Evol. by gen. prog. of a spatial robot * cntr. alg. [188] knowledge Putting INK into a BIRo: A discussion of problem domain * for evol. robotics [201] Koza Geneettinen ohjelmointi [Gen. prog. by * [246] - Satunnaistajan etsinta [Gen. prog. random number generator by * [102] language Context-free <p> Prog. II, Automatic Discovery of * Prog. [152] Simultaneous discovery of * detectors and subroutines using gen. prog. [125] rewriting Gen. synthesis of Boolean neural networks with a cell * developmental process [35] rheometry Signal filtering and data processing for laser * <ref> [99] </ref> robot Evol. by gen. prog. of a spatial * juggling cntr. alg. [189] - Evol. of autonomous * cntr. architectures [95] Terrain flattening by autonomous * A gen. prog. appl. [181] robotic Evolving co-operation in autonomous * syst. [188] robotics Putting INK into a BIRo: A discussion of problem domain <p> * problems using automatically defined functions [157] sort Evolving a * Lessons in gen. prog. [151] Generality and difficulty in gen. prog. : evolving a * [144] source code Using the GA to generate Lisp * to solve the prisoner's dilemma [143] spaces On using GAs to search prog. * <ref> [99] </ref> spatial Evol. by gen. prog. of a * robot juggling cntr. alg. [120] Spontaneous emergence of self-replicating and evol. arily self-improving computer prog. [49] spontaneously A non-linear gen. process for problem solving using * emergent self-replicating and self-improving en tities [53] - Non-linear gen. process for problem solving using *
Reference: [100] <author> Daniel R. Thedens. </author> <title> Detector design by genetic programming for automated border definition in cardiac magnetic resonance images. </title> <note> In Koza [90], page ? y(conf.prog) ga94aThedens. </note>
Reference-contexts: 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, <ref> [100] </ref> magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] <p> populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, <ref> [100] </ref> magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] <p> reality, [65] GENNETS, [130] image processing, [242] border detector, <ref> [100] </ref> magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, <p> means of * sel. [223] artificial intelligence A gen. appr. to * [218] - Gen. breeding pop. of computer prog. to solve problems in * [170] artworks Criticism, culture, and the automatic genera tion of * [102] automata Context-free language induction by evol. of deterministic push-down * using gen. prog. <ref> [100] </ref> automated Detector design by gen. prog. for * border definition in cardiac magnetic resonance images [212] * discovery of detectors and iteration-performing calculations to recognize patterns in protein sequences using gen. prog. [150] * learning of a detector for ff-helices in protein sequences via gen. prog. [68] * learning of <p> behavior in * using gen. prog. [188] BIRo Putting INK into a * A discussion of problem do main knowledge for evol. robotics [134] Boolean A hierarchical appr. to learning the * mul tiplexer function [125] - Gen. synthesis of * neural networks with a cell rewri ting developmental process <ref> [100] </ref> border Detector design by gen. prog. for automated * definition in cardiac magnetic resonance images [129] box The computer Zoo - evol. in a * [206] breeding Cart centering and broom balancing by gen. * pop. of cntr. strategy prog. [219, 207] - Gen. * of non-linear opt. cntr. strategies <p> strategy prog. [219, 207] - Gen. breeding of non-linear opt. cntr. strategies for * [13] C++ Gen. prog. with * [212] calculations Automated discovery of detectors and iteration-performing * to recognize patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using iteration-performing * in gen. prog. <ref> [100] </ref> cardiac Detector design by gen. prog. for automated border definition in * magnetic resonance images [11, 39] Caribbean Evol. of food foraging strategies for the * Anolis lizard using gen. prog. [206] Cart centering and broom balancing by gen. breeding pop. of cntr. strategy prog. [109] Causality in gen. prog. <p> encoding and for sol ving problems using automatically * functions [197, 199] The automatic generation of plans for a mobile ro bot via gen. prog. with automatically * functions [200] The gen. planner The automatic generation of plans for a mobile robot via genetic prog. with automatically * func tions <ref> [100] </ref> definition Detector design by gen. prog. for automa ted border * in cardiac magnetic resonance images [136] Hierarchical automatic function * in gen. prog. [60] Scalable learning in gen. prog. using automatic func tion * [242] dendritic Gen. generation of * trees" for image classi fication [100] design Detector * <p> * func tions <ref> [100] </ref> definition Detector design by gen. prog. for automa ted border * in cardiac magnetic resonance images [136] Hierarchical automatic function * in gen. prog. [60] Scalable learning in gen. prog. using automatic func tion * [242] dendritic Gen. generation of * trees" for image classi fication [100] design Detector * by gen. prog. for automated border definition in cardiac magnetic resonance images [30] - Gen. prog. appl. to neural network * [182] detection IC engine misfire * alg. generation using gen. prog. [150] detector Automated learning of a * for ff-helices in pro tein sequences via gen. <p> prog. appl. to neural network * [182] detection IC engine misfire * alg. generation using gen. prog. [150] detector Automated learning of a * for ff-helices in pro tein sequences via gen. prog. [68] Automated learning of a * for the cores of ff-helices in protein sequences via gen. prog. <ref> [100] </ref> * design by gen. prog. for automated border definition in cardiac magnetic resonance images [212] detectors Automated discovery of * and iteration-performing calculations to recognize patterns in protein sequences using gen. prog. [152] Simultaneous discovery of reusable * and subroutines using gen. prog. [159] Simultaneous discovery of * and a <p> means to survival: playing Russian rou lette in a harsh environment [86] L-system Gen. * prog. [118] machine Evolving turing-complete prog. for a register * with self-modifying code [158] machine learning Perf. improvement of * via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. ident. <ref> [100] </ref> magnetic resonance images Detector design by gen. prog. for automated border definition in cardiac * [229] main program Discovery of a * and reusable subrou tines using gen. prog. [62] mapmaking Evol. of * Learning, planning, and me mory using gen. prog. [116] mating The * pool: A testbed for
Reference: [101] <author> Mark A. Warren. </author> <title> Stock price time series prediction using genetic programming. </title> <note> In Koza [90], page ? y(conf.prog) ga94aWarren. </note>
Reference-contexts: [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, <ref> [101] </ref> Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table gives references to the contri butions published annually. 1981, [16] 1986, [187, 24] 1989, [217] 51, 207, 54, 55] 127, 123, <p> * [225] The gen. prog. paradigm: Gen. breeding * of compu ter prog. to solve problems [105] power Gen. prog. exploratory * and the discovery of functions [169] predatory Evol. learning of * behaviors based on struc tured classifiers [98] prediction Distr. gen. prog. for on-line * in changing environments <ref> [101] </ref> Stock price time series * using gen. prog. [66] preserving Context * crossover in gen. prog. [144] prisoner's dilemma Using the GA to generate Lisp source code to solve the * [176] problem Appl. of search methods to sch. * in plastics forming plant: A binary Rep. appr. [244] - <p> [186] sporting The evol. of * strategies [74] Stack-based gen. prog. [72] steady states Appl. of gen. prog. in analyzing mul tiple * of dynamical syst. [130] Steerable Gennets The gen. prog. of steerable be haviors in Gennets [130] - Steerable Gennets The gen. prog. of * behaviors in Gennets <ref> [101] </ref> Stock price time series prediction using gen. prog. [29] strategies Apprentissage de * locales pour architechtu res reactives distribuees par prog. mation genetique [11, 39] strategies Evol. of food foraging * for the Caribbean Anolis lizard using gen. prog. [94] - Evol. of trade * using GAs and gen. prog. <p> using cellular encoding and the GA [112] Temporal data processing using gen. prog. [95] Terrain flattening by autonomous robot: A gen. prog. appl. [97] territory-defining Concurrent evol. of * behavior in birds using gen. prog. [116] testbed The mating pool: A * for experiments in the evol. of symbol syst. <ref> [101] </ref> time series Stock price * prediction using gen. prog. [228] tractor-trailed A gen. appr. to finding a cntr. to back up a * truck [94] trade Evol. of * strategies using GAs and gen. prog. [85] training Dynamic * subset sel. for supervised learning in gen. prog. [161] tree Concept
Reference: [102] <author> Afra Zomorodian. </author> <title> Context-free language induction by evolution of deterministic push-down automata using genetic programming. </title> <note> In Koza [90], page ? y(conf.prog) ga94aZomorodian. </note>
Reference-contexts: review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, <ref> [102] </ref> job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, <p> [184] * morality and gen. prog. [25] On the origin of effective procedures by means of * sel. [223] artificial intelligence A gen. appr. to * [218] - Gen. breeding pop. of computer prog. to solve problems in * [170] artworks Criticism, culture, and the automatic genera tion of * <ref> [102] </ref> automata Context-free language induction by evol. of deterministic push-down * using gen. prog. [100] automated Detector design by gen. prog. for * border definition in cardiac magnetic resonance images [212] * discovery of detectors and iteration-performing calculations to recognize patterns in protein sequences using gen. prog. [150] * learning of <p> paradigm [97] Concurrent evol. of territory-defining behavior in birds using gen. prog. [96] constrained Feasibility of evolving self-learned pattern recognition appl. toward the solution of a * syst. using gen. prog. [23] construction Recombination, sel. , and the gen. * of computer prog. [66] Context preserving crossover in gen. prog. <ref> [102] </ref> Context-free language induction by evol. of determi nistic push-down automata using gen. prog. [206] control Cart centering and broom balancing by gen. breeding pop. of * strategy prog. [166] - Evol. and coevol. of computer prog. to * independently-acting agents [99] - Evol. by gen. prog. of a spatial robot <p> definition in cardiac magnetic resonance images [212] detectors Automated discovery of * and iteration-performing calculations to recognize patterns in protein sequences using gen. prog. [152] Simultaneous discovery of reusable * and subroutines using gen. prog. [159] Simultaneous discovery of * and a way of using the * via gen. prog. <ref> [102] </ref> deterministic Context-free language induction by evol. of * push-down automata using gen. prog. [12] Developing a gen. prog. syst. [32, 15] development Adding learning to the cellular * process: a comparative study [125] developmental Gen. synthesis of Boolean neural networks with a cell rewriting * process [164] Differentiable chromosomes The <p> of * for procedural mo dels [246] etsinta Satunnaistajan * [Gen. prog. random number generator by Koza] [14] evolution Artificial * for computer graphics [138] - Co-evolving parasites improve simulated * as an opt. procedure [115] Complexity compression and * [97] Concurrent* of territory-defining behavior in birds using gen. prog. <ref> [102] </ref> Context-free language induction by * of deterministic push-down automata using gen. prog. [123] - Gen. * and co-evol. of computer prog. [237, 128] Interactive* of dynamical syst. [238, 20] Interactive* of equations for procedural models [166] * and coevol. of computer prog. to cntr. independently acting agents [99] * by <p> independently-acting Evol. and coevol. of computer prog. to cntr. * agents [78] indexed Turing completeness in the language of gen. prog. with * memory [244] indexed memory Gen. prog. , * the halting problem, and other curiosities [161] induction Concept formation and decision tree * using the gen. prog. paradigm <ref> [102] </ref> Context-free language * by evol. of deterministic push down automata using gen. prog. [67] Regular language * with gen. prog. [175] The evol. * of subroutines [106] inductive logic An adaptive * prog. syst. using gen. prog. ming [71] information The use of gen. prog. to build queries for * <p> gen. prog. [99] juggling Evol. by gen. prog. of a spatial robot * cntr. alg. [188] knowledge Putting INK into a BIRo: A discussion of problem domain * for evol. robotics [201] Koza Geneettinen ohjelmointi [Gen. prog. by * [246] - Satunnaistajan etsinta [Gen. prog. random number generator by * <ref> [102] </ref> language Context-free * induction by evol. of determi nistic push-down automata using gen. prog. [78] - Turing completeness in the * of gen. prog. with in dexed memory [35] laser Signal filtering and data processing for * rheometry [27] Layoutproblems Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beis <p> calculations to recognize patterns in * using gen. prog. [150] Automated learning of a detector for ff-helices in * via gen. prog. [68] Automated learning of a detector for the cores of ff helices in * via gen. prog. [70] Recognizing patterns in * using iteration-performing calculations in gen. prog. <ref> [102] </ref> push-down Context-free language induction by evol. of deterministic * automata using gen. prog. [188] Putting INK into a BIRo: A discussion of problem do main knowledge for evol. robotics [27] Quadratischen Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beispiel des Diskreten * Layoutproblems [71] queries The use of
Reference: [103] <editor> David B. Fogel, editor. </editor> <booktitle> Proceedings of the Fourth Annual Conference on Evolutionary Programming (EP95), </booktitle> <address> San Diego, CA, 1.-3. </address> <month> March </month> <year> 1995. </year> ? <note> y(Fogel) ga95EP. </note>
Reference: [104] <author> John R. Koza. </author> <title> Evolving the architecture of a multi-part program in genetic programming. </title> <note> In Fogel [103], page ? y(conf.prog) ga95aKoza. </note>
Reference-contexts: [29] architechtures Apprentissage de strategies locales pour * reactives distribuees par prog. mation genetique [41] architecture Architecture-altering operations for evol ving the * of a multipart prog. in gen. prog. [216] - Evol. of subsumption * that perform a wall following task for an autonomous mobile robot via gen. prog. <ref> [104] </ref> Evolving the * of a multi-part prog. in gen. prog. [224] - Gen. generation of both the weights and * for a neural network [41] Architecture-altering operations for evolving the architecture of a multipart prog. in gen. prog. [189] architectures Evol. of autonomous robot cntr. * [192] artificial Artificial embryology: <p> [151] Generality and difficulty in gen. prog. : * a sort [146] * a computer prog. to generate random numbers using the gen. prog. paradigm [157] * a sort: Lessons in gen. prog. [181] * co-operation in autonomous robotic syst. [113] * data structures using gen. prog. [8] * images <ref> [104] </ref> * the architecture of a multi-part prog. in gen. prog. [118] * turing-complete prog. for a register machine with self modifying code [185] * visual routines [111] Strongly typed gen. prog. in * cooperation strategies [73] execution Experiments with a coroutine * model for gen. prog. [163] experimental An * <p> Gen. prog. to learn an agent's * stra tegy [63] Learning* strategies: a difficult gen. prog. appl. [184] morality Artificial * and gen. prog. [168] motion An evolved vision-based behavioral model of coordinated group * [41] multipart Architecture-altering operations for evolving the architecture of a * prog. in gen. prog. <ref> [104] </ref> multi-part Evolving the architecture of a * prog. in gen. prog. [134] multiplexer A hierarchical appr. to learning the Boo lean * function [59] Myths Gen. prog. : * and facts [91] natural Exploring the underlying structure of * images through gen. prog. [19] - Gen. prog. as a means
Reference: [105] <author> Justinian P. Rosca. </author> <title> Genetic programming exploratory power and the discovery of functions. </title> <note> In Fogel [103], page ? y(conf.prog) ga95aRosca. </note>
Reference-contexts: Prog. II, Automatic * of Reusable Prog. <ref> [105] </ref> - Gen. prog. exploratory power and the * of functions [155] - Gen. prog. for feature * and image discrimination [229] * of a main prog. and reusable subroutines using gen. prog. [158] - Perf. improvement of machine learning via automatic * of facilitating functions as appl. to a problem <p> typed gen. prog. in * cooperation strategies [73] execution Experiments with a coroutine * model for gen. prog. [163] experimental An * perspective on gen. prog. [73] Experiments with a coroutine execution model for gen. prog. [116] The mating pool: A testbed for * in the evol. of symbol syst. <ref> [105] </ref> exploratory Gen. prog. * power and the discovery of functions [91] Exploring the underlying structure of nat. images th rough gen. prog. [82] eyes The difficulty of roving * [158] facilitating Perf. improvement of machine learning via automatic discovery of * functions as appl. to a problem of symbolic syst. <p> [205] An adaptive * ident. syst. [208] Finding an impulse response * using gen. prog. [136] Hierarchical automatic * definition in gen. prog. [60] Scalable learning in gen. prog. using automatic * definition [48] functions A non-linear gen. process for data encoding and for solving problems using automatically defined * <ref> [105] </ref> - Gen. prog. exploratory power and the discovery of * [51] - Non-linear GAs for solving problems by finding a fit composition of * [52] - Non-linear gen. process for data encoding and for sol ving problems using automatically defined * [158] - Perf. improvement of machine learning via automatic <p> computer prog. to solve problems [217] Hierarchical GAs operating on * of computer prog. [54] - Non-linear gen. process for use with co-evolving * [55] - Non-linear gen. process for use with plural co-evolving * [225] The gen. prog. paradigm: Gen. breeding * of compu ter prog. to solve problems <ref> [105] </ref> power Gen. prog. exploratory * and the discovery of functions [169] predatory Evol. learning of * behaviors based on struc tured classifiers [98] prediction Distr. gen. prog. for on-line * in changing environments [101] Stock price time series * using gen. prog. [66] preserving Context * crossover in gen. prog.
Reference: [106] <author> M. L. Wong and K. S. Leung. </author> <title> An adaptive inductive logic programming system using genetic programming. </title> <note> In Fogel [103], page ? y(conf.prog) ga95aWong. </note>
Reference-contexts: [114] Accurate replication in gen. prog. [81] acyclic On the use of a directed * graph to represent a pop. of computer prog. [76] adapting Learning by * Rep. in gen. prog. [140] adaptive A Rep. for the * generation of simple sequen tial prog. [205] An* function ident. syst. <ref> [106] </ref> An* inductive logic prog. syst. using gen. prog. ming [45] - Gen. prog. with * Rep. [43] - Microbehaviors and dynamical syst. : Economic routi nes as emergent properties of * syst. s [166] agents Evol. and coevol. of computer prog. to cntr. independently-acting * [177, 44] agent's Gen. prog. <p> Gen. prog. , * the halting problem, and other curiosities [161] induction Concept formation and decision tree * using the gen. prog. paradigm [102] Context-free language * by evol. of deterministic push down automata using gen. prog. [67] Regular language * with gen. prog. [175] The evol. * of subroutines <ref> [106] </ref> inductive logic An adaptive * prog. syst. using gen. prog. ming [71] information The use of gen. prog. to build queries for * retrieval [188] INK Putting * into a BIRo: A discussion of problem domain knowledge for evol. robotics [237, 128] Interactive evol. of dynamical syst. [238, 20] * <p> L-syst. * [9] - Gen. * II, Automatic Discovery of Reusable Prog. [13] - Gen. * with C++ [19] - Gen. prog. as a means for * computers by nat. sel. [10] - Gen. Prog. : On * Computers by Means of Nat. Sel. and Gen. <ref> [106] </ref> programming system An adaptive inductive logic * using gen. prog. [212] protein sequences Automated discovery of detectors and iteration-performing calculations to recognize patterns in * using gen. prog. [150] Automated learning of a detector for ff-helices in * via gen. prog. [68] Automated learning of a detector for the cores
Reference: [107] <author> Robert Elliot Smith, </author> <title> editor. </title> <booktitle> Proceedings of the Sixth International Conference on Genetic Algorithms, </booktitle> <address> Pittsburgh, PA, 15.-19. </address> <month> July </month> <year> 1995. </year> ? <note> (to appear)y(prog) ga95ICGA. </note>
Reference: [108] <author> David Andre. </author> <title> The evolution of agents that build mental models and create simple plans using genetic programming. </title> <note> In Smith [107], page ? y(prog) ga95aAndre. </note>
Reference-contexts: gen. prog. ming [45] - Gen. prog. with * Rep. [43] - Microbehaviors and dynamical syst. : Economic routi nes as emergent properties of * syst. s [166] agents Evol. and coevol. of computer prog. to cntr. independently-acting * [177, 44] agent's Gen. prog. to learn an * monitoring strategy <ref> [108] </ref> agents The evol. of * that build mental models and create simple plans using gen. prog. [239] AI Gen. prog. and * planning syst. [195] analysis Gen. prog. : A new paradigm for cntr. and * [72] analyzing Appl. of gen. prog. in * multiple steady states of dynamical syst. <p> lowing task for an autonomous mobile robot via gen. prog. [127] * of subsumption using gen. prog. [94] * of trade strategies using GAs and gen. prog. [129] The computer Zoo - * in a box [116] The mating pool: A testbed for experiments in the * of symbol syst. <ref> [108] </ref> The* of agents that build mental models and create simple plans using gen. prog. [57] The* of evolvability in gen. prog. [186] The* of sporting strategies [120] evolutionarily Spontaneous emergence of self replicating and * self-improving computer prog. [169] Evolutionary learning of predatory behaviors based on structured classifiers [187] * <p> survival: playing Russian roulette in a harsh environment [25] On the origin of effective procedures by * of artificial sel. [62] memory Evol. of mapmaking: Learning, planning, and * using gen. prog. [78] - Turing completeness in the language of gen. prog. with indexed * [245] mental Learning * models <ref> [108] </ref> mental models The evol. of agents that build * and create simple plans using gen. prog. [203] Meta-level strategy learning for GA based on structu red Rep. [176] methods Appl. of search * to sch. problem in plastics forming plant: A binary Rep. appr. [43] Microbehaviors and dynamical syst. : <p> generation of plans for a mobile robot via genetic prog. [62] planning Evol. of mapmaking: Learning, * and me mory using gen. prog. [239] - Gen. prog. and AI * syst. [197, 199] plans The automatic generation of * for a mobile robot via gen. prog. with automatically defined functions <ref> [108] </ref> The evol. of agents that build mental models and create simple * using gen. prog. [200] The gen. planner The automatic generation of * for a mobile robot via genetic prog. with automatically defined functions [198] The gen. planner: The automatic generation of * for a mobile robot via genetic
Reference: [109] <author> Dana H. Ballard and Justinian P. </author> <note> Rosca. Causality in genetic programming. In Smith [107], page ? y(prog) ga95aBallard. </note>
Reference-contexts: * in gen. prog. [100] cardiac Detector design by gen. prog. for automated border definition in * magnetic resonance images [11, 39] Caribbean Evol. of food foraging strategies for the * Anolis lizard using gen. prog. [206] Cart centering and broom balancing by gen. breeding pop. of cntr. strategy prog. <ref> [109] </ref> Causality in gen. prog. [125] cell Gen. synthesis of Boolean neural networks with a * rewriting developmental process [32, 15] cellular Adding learning to the * development process: a comparative study [21] Neural network synthesis using * encoding and the GA [194] * encoding as a graph grammar [31] *
Reference: [110] <author> Bertrand Daniel Dunay and Frederick E. Petry. </author> <title> Solving complex problems with genetic algorithms. </title> <note> In Smith [107], page ? y(prog) ga95aDunay. Bibliography 29 </note>
Reference-contexts: [121, 37] Coevolving high-level Rep. [138] Co-evolving parasites improve simulated evol. as an opt. procedure [55] - Non-linear gen. process for use with plural * pop. [54] - Non-linear gen. process for use with * pop. [32, 15] comparative Adding learning to the cellular develop ment process: a * study <ref> [110] </ref> complex Solving * problems with GAs [115] Complexity compression and evol. [51] composition Non-linear GAs for solving problems by finding a fit * of functions [115] compression Complexity * and evol. [161] Concept formation and decision tree induction using the gen. prog. paradigm [97] Concurrent evol. of territory-defining behavior in <p> paradigm for gen. breeding pop. of computer prog. to solve * [51] - Non-linear GAs for solving * by finding a fit composi tion of functions [50] - Non-linear GAs for solving * [52] - Non-linear gen. process for data encoding and for sol ving * using automatically defined functions <ref> [110] </ref> Solving complex * with GAs [34] Solving ident. * by structured GAs [225] The gen. prog. paradigm: Gen. breeding pop. of computer prog. to solve * [238, 20] procedural Interactive evol. of equations for * mo dels [138] procedure Co-evolving parasites improve simulated evol. as an opt. * [25] procedures <p> and shape of a com puter prog. to * a problem [144] Using the GA to generate Lisp source code to * the prisoner's dilemma [46, 47] solving A non-linear GAs for * problems [48] A non-linear gen. process for data encoding and for * problems using automatically defined functions <ref> [110] </ref> * complex problems with GAs [34] * ident. problems by structured GAs [51] - Non-linear GAs for * problems by finding a fit compo sition of functions [50] - Non-linear GAs for * problems [52] - Non-linear gen. process for data encoding and for * problems using automatically defined functions
Reference: [111] <author> Thoms Haynes, Roger L. Wainwright, Sandip Sen, and Dale A. Schoenefeld. </author> <title> Strongly typed genetic programming in evolving cooperation strategies. </title> <note> In Smith [107], page ? y(prog) ga95aHaynes. </note>
Reference-contexts: * architectures [219, 207] - Gen. breeding of non-linear opt. * strategies for broom balancing [195] - Gen. prog. : A new paradigm for * and analysis [228] controller A gen. appr. to finding a * to back up a tractor-trailed truck [181] co-operation Evolving * in autonomous robotic syst. <ref> [111] </ref> cooperation Strongly typed gen. prog. in evolving * strategies [168] coordinated An evolved vision-based behavioral model of * group motion [68] cores Automated learning of a detector for the * of ff helices in protein sequences via gen. prog. [73] coroutine Experiments with a * execution model for gen. prog. <p> a sort: Lessons in gen. prog. [181] * co-operation in autonomous robotic syst. [113] * data structures using gen. prog. [8] * images [104] * the architecture of a multi-part prog. in gen. prog. [118] * turing-complete prog. for a register machine with self modifying code [185] * visual routines <ref> [111] </ref> Strongly typed gen. prog. in * cooperation strategies [73] execution Experiments with a coroutine * model for gen. prog. [163] experimental An * perspective on gen. prog. [73] Experiments with a coroutine execution model for gen. prog. [116] The mating pool: A testbed for * in the evol. of symbol <p> 207] - Gen. breeding of non-linear opt. cntr. * for broom balancing 24 [179] Learning distr. reactive * by gen. prog. for the general job shop problem [178] Learning distributive reactive * by gen. prog. for the general job shop problem [63] Learning monitoring * a difficult gen. prog. appl. <ref> [111] </ref> Strongly typed gen. prog. in evolving cooperation * [186] The evol. of sporting * [206] strategy Cart centering and broom balancing by gen. breeding pop. of cntr. * prog. [177, 44] - Gen. prog. to learn an agent's monitoring * [203] - Meta-level * learning for GA based on structured <p> cooperation * [186] The evol. of sporting * [206] strategy Cart centering and broom balancing by gen. breeding pop. of cntr. * prog. [177, 44] - Gen. prog. to learn an agent's monitoring * [203] - Meta-level * learning for GA based on structured Rep. [28] Strongly typed gen. prog. <ref> [111] </ref> * typed gen. prog. in evolving cooperation strategies [91] structure Exploring the underlying * of nat. images through gen. prog. [169] structured Evol. learning of predatory behaviors based on * classifiers [203] - Meta-level strategy learning for GA based on * Rep. [34] Solving ident. problems by * GAs [142] <p> a tractor-trailed * [227] truck backer upper problem A gen. appr. to the * and the inter-twined spiral problem [78] Turing completeness in the language of gen. prog. with indexed memory [118] turing-complete Evolving * prog. for a register mac hine with self-modifying code [28] typed Strongly * gen. prog. <ref> [111] </ref> Strongly* gen. prog. in evolving cooperation strate gies [91] underlying Exploring the * structure of nat. images through gen. prog. [77] unique The * implications of brood sel. for gen. prog. [80] upgrading Learning and * rules for an OCR syst. using gen. prog. [87, 38] variable Prog. search with
Reference: [112] <author> Hitoshi Iba, Hugo de Garis, and Taisuke Sato. </author> <title> Temporal data processing using genetic programming. </title> <note> In Smith [107], page ? y(prog) ga95aIba. </note>
Reference-contexts: The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) [153, 232, 115, 118] * Japan <ref> [176, 33, 83, 112] </ref> * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, 221, 222, 146, 127, 123, 134, 228, 136, 48, 49, 11, 39, 47, 53, 52, 40, 128, 238, <p> defined functions [53] - Non-linear gen. * for problem solving using sponta neously emergent self-replicating and self-improving entities [54] - Non-linear gen. * for use with co-evolving pop. [55] - Non-linear gen. * for use with plural co-evolving pop. [35] processing Signal filtering and data * for laser rheo metry <ref> [112] </ref> Temporal data * using gen. prog. [29] programmation genetique Apprentissage de strategies locales pour architechtures reactives distribuees par * [27] Programmierung Verbesserung des Simulated Annealing unter Anwendung Genetischer * am Beispiel des Diskreten Quadratischen Layoutproblems [226] programming Automatic * of robots using gen. prog. [11, 39] - Evol. of food <p> facilitating functions as appl. to a problem of * syst. ident. [92] synthesis Circuit * through gen. prog. [125] - Gen. * of Boolean neural networks with a cell rewriting developmental process [149] - Gen. * of modular neural networks [21] Neural network * using cellular encoding and the GA <ref> [112] </ref> Temporal data processing using gen. prog. [95] Terrain flattening by autonomous robot: A gen. prog. appl. [97] territory-defining Concurrent evol. of * behavior in birds using gen. prog. [116] testbed The mating pool: A * for experiments in the evol. of symbol syst. [101] time series Stock price * prediction
Reference: [113] <author> William B. Langdon. </author> <title> Evolving data structures using genetic programming. </title> <note> In Smith [107], page ? y(prog) ga95aLangdon. </note>
Reference-contexts: of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom <ref> [26, 25, 132, 113] </ref> * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, 221, 222, 146, 127, 123, 134, 228, 136, 48, 49, 11, 39, 47, 53, 52, 40, 128, 238, 44, 35, 20, 8, 154, 155, 234, 235, 62, 173, 63, 91, <p> toward the solution of a constrained syst. using gen. prog. [151] Generality and difficulty in gen. prog. : * a sort [146] * a computer prog. to generate random numbers using the gen. prog. paradigm [157] * a sort: Lessons in gen. prog. [181] * co-operation in autonomous robotic syst. <ref> [113] </ref> * data structures using gen. prog. [8] * images [104] * the architecture of a multi-part prog. in gen. prog. [118] * turing-complete prog. for a register machine with self modifying code [185] * visual routines [111] Strongly typed gen. prog. in * cooperation strategies [73] execution Experiments with a
Reference: [114] <author> Nicholas Freitag McPhee and Justin Darwin Miller. </author> <title> Accurate replication in genetic programming. </title> <note> In Smith [107], page ? y(prog) ga95aMcPhee. </note>
Reference-contexts: The key word is shown by a disk (*) in the title field with the exception that it is omitted when ap pearing as the first word of the title after shown keyword. The other abbreviation used to compress titles are shown in appendix A. <ref> [114] </ref> Accurate replication in gen. prog. [81] acyclic On the use of a directed * graph to represent a pop. of computer prog. [76] adapting Learning by * Rep. in gen. prog. [140] adaptive A Rep. for the * generation of simple sequen tial prog. [205] An* function ident. syst. [106] <p> Permuted title index 23 [118] register Evolving turing-complete prog. for a * machine with self-modifying code [67] Regular language induction with gen. prog. <ref> [114] </ref> replication Accurate * in gen. prog. [81] represent On the use of a directed acyclic graph to * a pop. of computer prog. [140] representation A * for the adaptive generation of simple sequential prog. [176] - Appl. of search methods to sch. problem in plastics forming plant: A binary
Reference: [115] <author> Peter Nordin and Wolfgang Banzhaf. </author> <title> Complexity compression and evolution. </title> <note> In Smith [107], page ? y(prog) ga95aNordin. </note>
Reference-contexts: 116, 117, 118] 3.10 Geographical index The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) <ref> [153, 232, 115, 118] </ref> * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, 221, 222, 146, 127, 123, 134, 228, 136, 48, 49, 11, 39, <p> the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden <ref> [232, 115, 118] </ref> * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, 221, 222, 146, 127, 123, 134, 228, 136, 48, 49, 11, 39, 47, 53, 52, 40, 128, 238, 44, 35, 20, 8, 154, 155, <p> parasites improve simulated evol. as an opt. procedure [55] - Non-linear gen. process for use with plural * pop. [54] - Non-linear gen. process for use with * pop. [32, 15] comparative Adding learning to the cellular develop ment process: a * study [110] complex Solving * problems with GAs <ref> [115] </ref> Complexity compression and evol. [51] composition Non-linear GAs for solving problems by finding a fit * of functions [115] compression Complexity * and evol. [161] Concept formation and decision tree induction using the gen. prog. paradigm [97] Concurrent evol. of territory-defining behavior in birds using gen. prog. [96] constrained Feasibility <p> [54] - Non-linear gen. process for use with * pop. [32, 15] comparative Adding learning to the cellular develop ment process: a * study [110] complex Solving * problems with GAs <ref> [115] </ref> Complexity compression and evol. [51] composition Non-linear GAs for solving problems by finding a fit * of functions [115] compression Complexity * and evol. [161] Concept formation and decision tree induction using the gen. prog. paradigm [97] Concurrent evol. of territory-defining behavior in birds using gen. prog. [96] constrained Feasibility of evolving self-learned pattern recognition appl. toward the solution of a * syst. using gen. prog. [23] construction Recombination, <p> environments Distr. gen. prog. for on-line prediction in changing * [238, 20] equations Interactive evol. of * for procedural mo dels [246] etsinta Satunnaistajan * [Gen. prog. random number generator by Koza] [14] evolution Artificial * for computer graphics [138] - Co-evolving parasites improve simulated * as an opt. procedure <ref> [115] </ref> Complexity compression and * [97] Concurrent* of territory-defining behavior in birds using gen. prog. [102] Context-free language induction by * of deterministic push-down automata using gen. prog. [123] - Gen. * and co-evol. of computer prog. [237, 128] Interactive* of dynamical syst. [238, 20] Interactive* of equations for procedural models
Reference: [116] <author> Lawrence Davis and David Orvosh. </author> <title> The mating pool: A testbed for experiments in the evolution of symbol systems. </title> <note> In Smith [107], page ? y(prog) ga95bDavis. </note>
Reference-contexts: memory using gen. prog. [216] * of subsumption architecture that perform a wall fol lowing task for an autonomous mobile robot via gen. prog. [127] * of subsumption using gen. prog. [94] * of trade strategies using GAs and gen. prog. [129] The computer Zoo - * in a box <ref> [116] </ref> The mating pool: A testbed for experiments in the * of symbol syst. [108] The* of agents that build mental models and create simple plans using gen. prog. [57] The* of evolvability in gen. prog. [186] The* of sporting strategies [120] evolutionarily Spontaneous emergence of self replicating and * self-improving <p> for a register machine with self modifying code [185] * visual routines [111] Strongly typed gen. prog. in * cooperation strategies [73] execution Experiments with a coroutine * model for gen. prog. [163] experimental An * perspective on gen. prog. [73] Experiments with a coroutine execution model for gen. prog. <ref> [116] </ref> The mating pool: A testbed for * in the evol. of symbol syst. [105] exploratory Gen. prog. * power and the discovery of functions [91] Exploring the underlying structure of nat. images th rough gen. prog. [82] eyes The difficulty of roving * [158] facilitating Perf. improvement of machine learning <p> to a problem of symbolic syst. ident. [100] magnetic resonance images Detector design by gen. prog. for automated border definition in cardiac * [229] main program Discovery of a * and reusable subrou tines using gen. prog. [62] mapmaking Evol. of * Learning, planning, and me mory using gen. prog. <ref> [116] </ref> mating The * pool: A testbed for experiments in the evol. of symbol syst. [19] means Gen. prog. as a * for prog. ming computers by nat. sel. [10] - Gen. Prog. : On Prog. ming Computers by * of Nat. <p> forming * A binary Rep. appr. [176] plastics forming Appl. of search methods to sch. problem in * plant: A binary Rep. appr. [132] playing Looping as a means to survival: * Russian rou lette in a harsh environment [55] plural Non-linear gen. process for use with * co-evolving pop. <ref> [116] </ref> pool The mating * A testbed for experiments in the evol. of symbol syst. [81] population On the use of a directed acyclic graph to represent a * of computer prog. [75] The effect of * enrichment in gen. prog. [183] Using a double-based GA on a * of computer <p> robot via gen. prog. [127] - Evol. of * using gen. prog. [85] supervised Dynamic training subset sel. for * learning in gen. prog. [132] survival Looping as a means to * playing Russian rou lette in a harsh environment [164] switchable Differentiable chromosomes The gen. prog. of * shape-genes <ref> [116] </ref> symbol The mating pool: A testbed for experiments in the evol. of * syst. [230, 22] symbolic A hierarchical gen. syst. for * function ident. [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of * syst. ident. [92] synthesis Circuit <p> rewriting developmental process [149] - Gen. * of modular neural networks [21] Neural network * using cellular encoding and the GA [112] Temporal data processing using gen. prog. [95] Terrain flattening by autonomous robot: A gen. prog. appl. [97] territory-defining Concurrent evol. of * behavior in birds using gen. prog. <ref> [116] </ref> testbed The mating pool: A * for experiments in the evol. of symbol syst. [101] time series Stock price * prediction using gen. prog. [228] tractor-trailed A gen. appr. to finding a cntr. to back up a * truck [94] trade Evol. of * strategies using GAs and gen. prog.
Reference: [117] <author> John R. Koza. </author> <title> Two ways of discovering the size and shape of a computer program to solve a problem. </title> <note> In Smith [107], page ? y(prog) ga95bKoza. </note>
Reference-contexts: learning to the cellular * process: a comparative study [125] developmental Gen. synthesis of Boolean neural networks with a cell rewriting * process [164] Differentiable chromosomes The gen. prog. of switc hable shape-genes [81] directed On the use of a * acyclic graph to represent a pop. of computer prog. <ref> [117] </ref> discovering Two ways of * the size and shape of a com puter prog. to solve a problem Permuted title index 19 [212] discovery Automated * of detectors and iteration-performing calculations to recognize patterns in protein sequences using gen. prog. [9] - Gen. Prog. <p> [244] - Gen. prog. , indexed memory, the halting * and other curiosities [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a * of symbolic syst. ident. [188] Putting INK into a BIRo: A discussion of * domain knowledge for evol. robotics <ref> [117] </ref> Two ways of discovering the size and shape of a com puter prog. to solve a * [49] problem solving A non-linear gen. process for * using spontaneously emergent self-replicating and self-improving en tities [53] - Non-linear gen. process for * using spontaneously emergent self-replicating and self-improving entities [46, 47] <p> problem solving using spontaneously emergent * and self-improving en tities [53] - Non-linear gen. process for problem solving using spon taneously emergent * and self-improving entities [120] Spontaneous emergence of * and evol. arily self improving computer prog. [140] sequential A Rep. for the adaptive generation of simple * prog. <ref> [117] </ref> shape Two ways of discovering the size and * of a com puter prog. to solve a problem [164] shape-genes Differentiable chromosomes The gen. prog. of switchable * [35] Signal filtering and data processing for laser rheometry [138] simulated Co-evolving parasites improve * evol. as an opt. procedure [79] simulated <p> Gen. prog. , * and hill climbing [27] Simulated Annealing Verbesserung des * unter Anwendung Genetischer Programmierung am Beispiel des Dis kreten Quadratischen Layoutproblems [159] Simultaneous discovery of detectors and a way of using the detectors via gen. prog. [152] * discovery of reusable detectors and subroutines using gen. prog. <ref> [117] </ref> size Two ways of discovering the * and shape of a com puter prog. to solve a problem [58] snapshot Gen. prog. : A current * [96] solution Feasibility of evolving self-learned pattern recognition appl. toward the * of a constrained syst. using gen. prog. [218] solve Gen. breeding pop. <p> constrained syst. using gen. prog. [218] solve Gen. breeding pop. of computer prog. to * problems in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding pop. of computer prog. to * problems [225] The gen. prog. paradigm: Gen. breeding pop. of computer prog. to * problems <ref> [117] </ref> Two ways of discovering the size and shape of a com puter prog. to * a problem [144] Using the GA to generate Lisp source code to * the prisoner's dilemma [46, 47] solving A non-linear GAs for * problems [48] A non-linear gen. process for data encoding and for <p> appl. in * [168] vision-based An evolved * behavioral model of coordi nated group motion [185] visual Evolving * routines [154] walking Automatic generation of prog. for crawling and * [216] wall following task Evol. of subsumption architecture that perform a * for an autonomous mobile robot via gen. prog. <ref> [117] </ref> ways Two * of discovering the size and shape of a com puter prog. to solve a problem [224] weights Gen. generation of both the * and architecture for a neural network [26] Writing prog. using GAs [129] Zoo The computer * - evol. in a box
Reference: [118] <author> Peter Nordin and Wolfgang Banzhaf. </author> <title> Evolving turing-complete programs for a register machine with self-modifying code. </title> <note> In Smith [107], page ? y(prog) ga95bNordin. </note>
Reference-contexts: 116, 117, 118] 3.10 Geographical index The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) <ref> [153, 232, 115, 118] </ref> * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, 221, 222, 146, 127, 123, 134, 228, 136, 48, 49, 11, 39, <p> the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden <ref> [232, 115, 118] </ref> * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, 221, 222, 146, 127, 123, 134, 228, 136, 48, 49, 11, 39, 47, 53, 52, 40, 128, 238, 44, 35, 20, 8, 154, 155, <p> neural networks [98] changing Distr. gen. prog. for on-line prediction in * environments [164] chromosomes Differentiable * The gen. prog. of switchable shape-genes [92] Circuit synthesis through gen. prog. [242] classification Gen. generation of "dendritic trees" for image * [169] classifiers Evol. learning of predatory behaviors based on structured * <ref> [118] </ref> code Evolving turing-complete prog. for a register mac hine with self-modifying * [166] coevolution Evol. and * of computer prog. to cntr. independently-acting agents [123] co-evolution Gen. evol. and * of computer prog. [121, 37] Coevolving high-level Rep. [138] Co-evolving parasites improve simulated evol. as an opt. procedure [55] - <p> [146] * a computer prog. to generate random numbers using the gen. prog. paradigm [157] * a sort: Lessons in gen. prog. [181] * co-operation in autonomous robotic syst. [113] * data structures using gen. prog. [8] * images [104] * the architecture of a multi-part prog. in gen. prog. <ref> [118] </ref> * turing-complete prog. for a register machine with self modifying code [185] * visual routines [111] Strongly typed gen. prog. in * cooperation strategies [73] execution Experiments with a coroutine * model for gen. prog. [163] experimental An * perspective on gen. prog. [73] Experiments with a coroutine execution model <p> Carib bean Anolis * using gen. prog. [89, 33] local Gen. prog. with * hill-climbing [29] locales Apprentissage de strategies * pour architechtu res reactives distribuees par prog. mation genetique [132] Looping as a means to survival: playing Russian rou lette in a harsh environment [86] L-system Gen. * prog. <ref> [118] </ref> machine Evolving turing-complete prog. for a register * with self-modifying code [158] machine learning Perf. improvement of * via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. ident. [100] magnetic resonance images Detector design by gen. prog. for automated border definition in cardiac * [229] <p> Permuted title index 23 <ref> [118] </ref> register Evolving turing-complete prog. for a * machine with self-modifying code [67] Regular language induction with gen. prog. [114] replication Accurate * in gen. prog. [81] represent On the use of a directed acyclic graph to * a pop. of computer prog. [140] representation A * for the adaptive generation <p> and * en tities [53] - Non-linear gen. process for problem solving using spon taneously emergent self-replicating and * entities [120] Spontaneous emergence of self-replicating and evol. arily * computer prog. [96] self-learned Feasibility of evolving * pattern recognition appl. toward the solution of a constrained syst. using gen. prog. <ref> [118] </ref> self-modifying Evolving turing-complete prog. for a register machine with * code [180] selforganization Hierarchical * in gen. prog. [49] self-replicating A non-linear gen. process for problem solving using spontaneously emergent * and self-improving en tities [53] - Non-linear gen. process for problem solving using spon taneously emergent * and self-improving <p> a building block hypothesis for gen. prog. [228] truck A gen. appr. to finding a cntr. to back up a tractor-trailed * [227] truck backer upper problem A gen. appr. to the * and the inter-twined spiral problem [78] Turing completeness in the language of gen. prog. with indexed memory <ref> [118] </ref> turing-complete Evolving * prog. for a register mac hine with self-modifying code [28] typed Strongly * gen. prog. [111] Strongly* gen. prog. in evolving cooperation strate gies [91] underlying Exploring the * structure of nat. images through gen. prog. [77] unique The * implications of brood sel. for gen. prog.
Reference: [119] <editor> C. G. Langton, C. Taylor, J. Doyne Farmer, and S. Rasmussen, editors. </editor> <booktitle> Artificial Life III, volume XVII of SFI Studies in the Science of Complexity, </booktitle> <address> Santa Fe, NM, 15.-19. June 1993. </address> <publisher> Addison-Wesley, </publisher> <address> Redwood City, CA. y ga:ALifeIII. </address>
Reference: [120] <author> John R. Koza. </author> <title> Spontaneous emergence of self-replicating and evolutionarily self-improving computer programs. </title> <editor> In Langton et al. </editor> <volume> [119], </volume> <pages> pages 225-262. </pages> <address> y(Langdon/bib) ga94mKoza. </address>
Reference-contexts: s [220, 221, 222] econometric A gen. appr. to * modeling [43] Economic Microbehaviors and dynamical syst. : * rou tines as emergent properties of adaptive syst. s [192] embryo Artificial embryology: The gen. prog. of an artificial * [192] embryology Artificial * The gen. prog. of an artificial embryo <ref> [120] </ref> emergence Spontaneous * of self-replicating and evol. arily self-improving computer prog. [49] emergent A non-linear gen. process for problem solving using spontaneously * self-replicating and self-improving entities [53] - Non-linear gen. process for problem solving using spon taneously * self-replicating and self-improving entities [43] emergent properties Microbehaviors and dynamical syst. <p> [129] The computer Zoo - * in a box [116] The mating pool: A testbed for experiments in the * of symbol syst. [108] The* of agents that build mental models and create simple plans using gen. prog. [57] The* of evolvability in gen. prog. [186] The* of sporting strategies <ref> [120] </ref> evolutionarily Spontaneous emergence of self replicating and * self-improving computer prog. [169] Evolutionary learning of predatory behaviors based on structured classifiers [187] * learning strategies [188] Putting INK into a BIRo: A discussion of problem do main knowledge for * robotics [175] The* induction of subroutines [57] evolvability The evol. <p> the gen. construction of compu ter prog. [77] The unique implications of brood * for gen. prog. [49] self-improving A non-linear gen. process for problem solving using spontaneously emergent self-replicating and * en tities [53] - Non-linear gen. process for problem solving using spon taneously emergent self-replicating and * entities <ref> [120] </ref> Spontaneous emergence of self-replicating and evol. arily * computer prog. [96] self-learned Feasibility of evolving * pattern recognition appl. toward the solution of a constrained syst. using gen. prog. [118] self-modifying Evolving turing-complete prog. for a register machine with * code [180] selforganization Hierarchical * in gen. prog. [49] self-replicating <p> Evolving turing-complete prog. for a register machine with * code [180] selforganization Hierarchical * in gen. prog. [49] self-replicating A non-linear gen. process for problem solving using spontaneously emergent * and self-improving en tities [53] - Non-linear gen. process for problem solving using spon taneously emergent * and self-improving entities <ref> [120] </ref> Spontaneous emergence of * and evol. arily self improving computer prog. [140] sequential A Rep. for the adaptive generation of simple * prog. [117] shape Two ways of discovering the size and * of a com puter prog. to solve a problem [164] shape-genes Differentiable chromosomes The gen. prog. of <p> gen. prog. [151] Generality and difficulty in gen. prog. : evolving a * [144] source code Using the GA to generate Lisp * to solve the prisoner's dilemma [143] spaces On using GAs to search prog. * [99] spatial Evol. by gen. prog. of a * robot juggling cntr. alg. <ref> [120] </ref> Spontaneous emergence of self-replicating and evol. arily self-improving computer prog. [49] spontaneously A non-linear gen. process for problem solving using * emergent self-replicating and self-improving en tities [53] - Non-linear gen. process for problem solving using * emergent self-replicating and self-improving entities [186] sporting The evol. of * strategies [74]
Reference: [121] <author> Peter J. Angeline and Jordan B. Pollack. </author> <title> Coevolving high-level representations. </title> <editor> In Langton et al. </editor> <month> [119], </month> <note> page ? y(Langdon) ga:Angeline91a. </note>
Reference-contexts: "dendritic trees" for image * [169] classifiers Evol. learning of predatory behaviors based on structured * [118] code Evolving turing-complete prog. for a register mac hine with self-modifying * [166] coevolution Evol. and * of computer prog. to cntr. independently-acting agents [123] co-evolution Gen. evol. and * of computer prog. <ref> [121, 37] </ref> Coevolving high-level Rep. [138] Co-evolving parasites improve simulated evol. as an opt. procedure [55] - Non-linear gen. process for use with plural * pop. [54] - Non-linear gen. process for use with * pop. [32, 15] comparative Adding learning to the cellular develop ment process: a * study [110] <p> A* gen. syst. for symbolic function ident. [136] * automatic function definition in gen. prog. [217] * GAs operating on pop. of computer prog. [180] * selforganization in gen. prog. [87, 38] - Prog. search with a * variable length Rep. : Gen. prog. , simulated annealing and hill climbing <ref> [121, 37] </ref> high-level Coevolving * Rep. [87, 38] hill climbing Prog. search with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and * [89, 33] hill-climbing Gen. prog. with local * [182] IC engine misfire detection alg. generation using gen. prog. [230, 22] identification A hierarchical gen. syst. <p> sequential prog. [176] - Appl. of search methods to sch. problem in plastics forming plant: A binary * appr. [203] - Meta-level strategy learning for GA based on structu red * [87, 38] - Prog. search with a hierarchical variable length * Gen. prog. , simulated annealing and hill climbing <ref> [121, 37] </ref> representations Coevolving high-level * [45] - Gen. prog. with adaptive * [76] Learning by adapting * in gen. prog. [71] retrieval The use of gen. prog. to build queries for info * [229] reusable Discovery of a main prog. and * subroutines using gen. prog. [9] - Gen.
Reference: [122] <editor> Christopher G. Langton, Charles Taylor, J. Doyne Farmer, and Steen Rasmussen, editors. </editor> <booktitle> Artificial Life II, Proceedings of the Workshop on Artificial Life Held February, </booktitle> <address> 1990 in Santa Fe, New Mexico, </address> <booktitle> Proceedings Volume X, Santa Fe Institute Studies in the Sciences of Complexity. </booktitle> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1992. </year> <month> ga:ALifeII. </month>
Reference: [123] <author> John R. Koza. </author> <title> Genetic evolution and co-evolution of computer programs. </title> <editor> In Langton et al. </editor> <volume> [122], </volume> <pages> pages 603-629. </pages> <month> ga:Koza91d. </month>
Reference-contexts: synthesis through gen. prog. [242] classification Gen. generation of "dendritic trees" for image * [169] classifiers Evol. learning of predatory behaviors based on structured * [118] code Evolving turing-complete prog. for a register mac hine with self-modifying * [166] coevolution Evol. and * of computer prog. to cntr. independently-acting agents <ref> [123] </ref> co-evolution Gen. evol. and * of computer prog. [121, 37] Coevolving high-level Rep. [138] Co-evolving parasites improve simulated evol. as an opt. procedure [55] - Non-linear gen. process for use with plural * pop. [54] - Non-linear gen. process for use with * pop. [32, 15] comparative Adding learning to <p> number generator by Koza] [14] evolution Artificial * for computer graphics [138] - Co-evolving parasites improve simulated * as an opt. procedure [115] Complexity compression and * [97] Concurrent* of territory-defining behavior in birds using gen. prog. [102] Context-free language induction by * of deterministic push-down automata using gen. prog. <ref> [123] </ref> - Gen. * and co-evol. of computer prog. [237, 128] Interactive* of dynamical syst. [238, 20] Interactive* of equations for procedural models [166] * and coevol. of computer prog. to cntr. independently acting agents [99] * by gen. prog. of a spatial robot juggling cntr. alg. [189] * of autonomous
Reference: [124] <editor> J. David Schaffer and Darrell Whitley, editors. COGANN-92, </editor> <booktitle> International Workshop on Combinations of Genetic Algorithms and Neural Networks, </booktitle> <address> Baltimore, MD, 6. June 1992. </address> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> CA. y ga:COGANN92. </address>
Reference: [125] <author> Frederic C. Gruau. </author> <title> Genetic synthesis of Boolean neural networks with a cell rewriting developmental process. </title> <booktitle> In Schaffer and Whitley [124], </booktitle> <pages> pages 55-74. </pages> <address> y(Koza) ga:Gruau92b. </address>
Reference-contexts: in plas tics forming plant: A * Rep. appr. [97] birds Concurrent evol. of territory-defining behavior in * using gen. prog. [188] BIRo Putting INK into a * A discussion of problem do main knowledge for evol. robotics [134] Boolean A hierarchical appr. to learning the * mul tiplexer function <ref> [125] </ref> - Gen. synthesis of * neural networks with a cell rewri ting developmental process [100] border Detector design by gen. prog. for automated * definition in cardiac magnetic resonance images [129] box The computer Zoo - evol. in a * [206] breeding Cart centering and broom balancing by gen. * <p> cardiac Detector design by gen. prog. for automated border definition in * magnetic resonance images [11, 39] Caribbean Evol. of food foraging strategies for the * Anolis lizard using gen. prog. [206] Cart centering and broom balancing by gen. breeding pop. of cntr. strategy prog. [109] Causality in gen. prog. <ref> [125] </ref> cell Gen. synthesis of Boolean neural networks with a * rewriting developmental process [32, 15] cellular Adding learning to the * development process: a comparative study [21] Neural network synthesis using * encoding and the GA [194] * encoding as a graph grammar [31] * encoding of gen. neural networks <p> gen. prog. [159] Simultaneous discovery of * and a way of using the * via gen. prog. [102] deterministic Context-free language induction by evol. of * push-down automata using gen. prog. [12] Developing a gen. prog. syst. [32, 15] development Adding learning to the cellular * process: a comparative study <ref> [125] </ref> developmental Gen. synthesis of Boolean neural networks with a cell rewriting * process [164] Differentiable chromosomes The gen. prog. of switc hable shape-genes [81] directed On the use of a * acyclic graph to represent a pop. of computer prog. [117] discovering Two ways of * the size and shape <p> [153] neural nets Gen. prog. of minimal * using Occam's razor [224] neural network Gen. generation of both the weights and architecture for a * [30] - Gen. prog. appl. to * design [21] * synthesis using cellular encoding and the GA [31] neural networks Cellular encoding of gen. * <ref> [125] </ref> - Gen. synthesis of Boolean * with a cell rewriting deve lopmental process [149] - Gen. synthesis of modular * [64] - Gen. prog. for the search of a new learning rule for * [88] neutral Genotype-phenotype-mapping and * variation - A case study in gen. prog. [46, 47] non-linear <p> means of artificial sel. [48] process A non-linear gen. * for data encoding and for solving problems using automatically defined functions [49] A non-linear gen. * for problem solving using sponta neously emergent self-replicating and self-improving entities [32, 15] Adding learning to the cellular development * a com parative study <ref> [125] </ref> - Gen. synthesis of Boolean neural networks with a cell rewriting developmental * [52] - Non-linear gen. * for data encoding and for solving problems using automatically defined functions [53] - Non-linear gen. * for problem solving using sponta neously emergent self-replicating and self-improving entities [54] - Non-linear gen. * <p> Prog. II, Automatic Discovery of * Prog. [152] Simultaneous discovery of * detectors and subroutines using gen. prog. <ref> [125] </ref> rewriting Gen. synthesis of Boolean neural networks with a cell * developmental process [35] rheometry Signal filtering and data processing for laser * [99] robot Evol. by gen. prog. of a spatial * juggling cntr. alg. [189] - Evol. of autonomous * cntr. architectures [95] Terrain flattening by autonomous * <p> A testbed for experiments in the evol. of * syst. [230, 22] symbolic A hierarchical gen. syst. for * function ident. [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of * syst. ident. [92] synthesis Circuit * through gen. prog. <ref> [125] </ref> - Gen. * of Boolean neural networks with a cell rewriting developmental process [149] - Gen. * of modular neural networks [21] Neural network * using cellular encoding and the GA [112] Temporal data processing using gen. prog. [95] Terrain flattening by autonomous robot: A gen. prog. appl. [97] territory-defining
Reference: [126] <editor> Francisco J. Varela and Paul Bourgine, editors. </editor> <title> Toward a Practice of Autonomous System: </title> <booktitle> Proceedings of the First European Conference on Artificial Life, </booktitle> <address> Paris, 11.-13. December 1991. </address> <publisher> MIT Press, </publisher> <address> Cambridge, MA. ga:ECAL91. </address>
Reference: [127] <author> John R. Koza. </author> <title> Evolution of subsumption using genetic programming. </title> <booktitle> In Varela and Bourgine [126], </booktitle> <pages> pages 110-119. </pages> <month> ga:Koza91c. </month>
Reference-contexts: prog. using gen. prog. [11, 39] * of food foraging strategies for the Caribbean Anolis lizard using gen. prog. [62] * of mapmaking: Learning, planning, and memory using gen. prog. [216] * of subsumption architecture that perform a wall fol lowing task for an autonomous mobile robot via gen. prog. <ref> [127] </ref> * of subsumption using gen. prog. [94] * of trade strategies using GAs and gen. prog. [129] The computer Zoo - * in a box [116] The mating pool: A testbed for experiments in the * of symbol syst. [108] The* of agents that build mental models and create simple <p> prog. [152] Simultaneous discovery of reusable detectors and * using gen. prog. [175] The evol. induction of * [85] subset Dynamic training * sel. for supervised learning in gen. prog. [216] subsumption Evol. of * architecture that perform a wall following task for an autonomous mobile robot via gen. prog. <ref> [127] </ref> - Evol. of * using gen. prog. [85] supervised Dynamic training subset sel. for * learning in gen. prog. [132] survival Looping as a means to * playing Russian rou lette in a harsh environment [164] switchable Differentiable chromosomes The gen. prog. of * shape-genes [116] symbol The mating pool:
Reference: [128] <author> Karl Sims. </author> <title> Interactive evolution of dynamical systems. </title> <booktitle> In Varela and Bourgine [126], </booktitle> <pages> pages 171-178. </pages> <month> ga:Sims92a. </month>
Reference-contexts: INK into a BIRo: A discussion of problem * knowledge for evol. robotics [183] double-based Using a * GA on a pop. of computer prog. [85] Dynamic training subset sel. for supervised learning in gen. prog. [72] dynamical Appl. of gen. prog. in analyzing multiple steady states of * syst. <ref> [237, 128] </ref> Interactive evol. of * syst. [43] - Microbehaviors and * syst. : Economic routines as emergent properties of adaptive syst. s [220, 221, 222] econometric A gen. appr. to * modeling [43] Economic Microbehaviors and dynamical syst. : * rou tines as emergent properties of adaptive syst. s [192] <p> computer graphics [138] - Co-evolving parasites improve simulated * as an opt. procedure [115] Complexity compression and * [97] Concurrent* of territory-defining behavior in birds using gen. prog. [102] Context-free language induction by * of deterministic push-down automata using gen. prog. [123] - Gen. * and co-evol. of computer prog. <ref> [237, 128] </ref> Interactive* of dynamical syst. [238, 20] Interactive* of equations for procedural models [166] * and coevol. of computer prog. to cntr. independently acting agents [99] * by gen. prog. of a spatial robot juggling cntr. alg. [189] * of autonomous robot cntr. architectures [93] * of damage-immune prog. using <p> with gen. prog. [175] The evol. * of subroutines [106] inductive logic An adaptive * prog. syst. using gen. prog. ming [71] information The use of gen. prog. to build queries for * retrieval [188] INK Putting * into a BIRo: A discussion of problem domain knowledge for evol. robotics <ref> [237, 128] </ref> Interactive evol. of dynamical syst. [238, 20] * evol. of equations for procedural models [227] inter-twined spiral problem A gen. appr. to the truck backer upper problem and the * [212] iteration-performing Automated discovery of detectors and * calculations to recognize patterns in protein sequences using gen. prog. [70]
Reference: [129] <author> Jakob Skipper. </author> <title> The computer zoo evolution in a box. </title> <booktitle> In Varela and Bourgine [126], </booktitle> <pages> pages 355-364. </pages> <month> ga:Skipper91a. </month>
Reference-contexts: simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, <ref> [129] </ref> 16 3.9 Annual index The following table gives references to the contri butions published annually. 1981, [16] 1986, [187, 24] 1989, [217] 51, 207, 54, 55] 127, 123, 134, 223, 224, 46, 14, 129, 130, 191] 225, 226, 10, 227, 228, 136, 48, 49, 11, 39, 47, 53, 52, 163, <p> 210, 244, 190, 19, 23, 174, 212, 60, 9, 213, 214, 215, 41, 216, 120] 114, 115, 105, 106, 116, 117, 118] 3.10 Geographical index The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark <ref> [129] </ref> * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, <p> problem do main knowledge for evol. robotics [134] Boolean A hierarchical appr. to learning the * mul tiplexer function [125] - Gen. synthesis of * neural networks with a cell rewri ting developmental process [100] border Detector design by gen. prog. for automated * definition in cardiac magnetic resonance images <ref> [129] </ref> box The computer Zoo - evol. in a * [206] breeding Cart centering and broom balancing by gen. * pop. of cntr. strategy prog. [219, 207] - Gen. * of non-linear opt. cntr. strategies for broom balancing [218] - Gen. * pop. of computer prog. to solve problems in artificial <p> gen. prog. [62] * of mapmaking: Learning, planning, and memory using gen. prog. [216] * of subsumption architecture that perform a wall fol lowing task for an autonomous mobile robot via gen. prog. [127] * of subsumption using gen. prog. [94] * of trade strategies using GAs and gen. prog. <ref> [129] </ref> The computer Zoo - * in a box [116] The mating pool: A testbed for experiments in the * of symbol syst. [108] The* of agents that build mental models and create simple plans using gen. prog. [57] The* of evolvability in gen. prog. [186] The* of sporting strategies [120] <p> that perform a * for an autonomous mobile robot via gen. prog. [117] ways Two * of discovering the size and shape of a com puter prog. to solve a problem [224] weights Gen. generation of both the * and architecture for a neural network [26] Writing prog. using GAs <ref> [129] </ref> Zoo The computer * - evol. in a box
Reference: [130] <author> Hugo de Garis. </author> <title> Steerable gennets the genetic programming of steerable behaviors in gennets. </title> <booktitle> In Varela and Bourgine [126], </booktitle> <pages> pages 272-281. </pages> <month> ga:deGaris91a. </month> <title> [131] ?, editor. Self-organization and life, from simple rules to global complexity, </title> <booktitle> Proceedings of the Second European Conference on Artificial Life, </booktitle> <address> Brussels (Belgium), 24.-26. May 1993. </address> <publisher> MIT Press, </publisher> <address> Cambridge, MA. ga:ECAL93. </address>
Reference-contexts: language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, <ref> [130] </ref> image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, <p> 80, 58, 88, 183, 21, 89, 81, 210, 244, 190, 19, 23, 174, 212, 60, 9, 213, 214, 215, 41, 216, 120] 114, 115, 105, 106, 116, 117, 118] 3.10 Geographical index The following table gives references to the contri butions by the country of the author (s). * Belgium <ref> [130] </ref> * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States <p> a tractor trailed truck [16] Beagle A Darwinian appr. to pattern recognition [97] behavior Concurrent evol. of territory-defining * in birds using gen. prog. [168] behavioral An evolved vision-based * model of coordi nated group motion [169] behaviors Evol. learning of predatory * based on struc tured classifiers 17 18 <ref> [130] </ref> - Steerable Gennets The gen. prog. of steerable * in Gennets [176] binary Appl. of search methods to sch. problem in plas tics forming plant: A * Rep. appr. [97] birds Concurrent evol. of territory-defining behavior in * using gen. prog. [188] BIRo Putting INK into a * A discussion <p> Prog. : On Prog. ming Computers by Means of Nat. Sel. and * <ref> [130] </ref> Gennets Steerable * The gen. prog. of steerable be haviors in * [88] Genotype-phenotype-mapping and neutral varia tion A case study in gen. prog. [81] graph On the use of a directed acyclic * to represent a pop. of computer prog. [194] graph grammar Cellular encoding as a * [14] <p> solving using * emergent self-replicating and self-improving en tities [53] - Non-linear gen. process for problem solving using * emergent self-replicating and self-improving entities [186] sporting The evol. of * strategies [74] Stack-based gen. prog. [72] steady states Appl. of gen. prog. in analyzing mul tiple * of dynamical syst. <ref> [130] </ref> Steerable Gennets The gen. prog. of steerable be haviors in Gennets [130] - Steerable Gennets The gen. prog. of * behaviors in Gennets [101] Stock price time series prediction using gen. prog. [29] strategies Apprentissage de * locales pour architechtu res reactives distribuees par prog. mation genetique [11, 39] strategies <p> gen. process for problem solving using * emergent self-replicating and self-improving entities [186] sporting The evol. of * strategies [74] Stack-based gen. prog. [72] steady states Appl. of gen. prog. in analyzing mul tiple * of dynamical syst. <ref> [130] </ref> Steerable Gennets The gen. prog. of steerable be haviors in Gennets [130] - Steerable Gennets The gen. prog. of * behaviors in Gennets [101] Stock price time series prediction using gen. prog. [29] strategies Apprentissage de * locales pour architechtu res reactives distribuees par prog. mation genetique [11, 39] strategies Evol. of food foraging * for the Caribbean Anolis lizard using gen.
Reference: [132] <author> Robert Davidge. </author> <title> Looping as a means to survival: playing Russian roulette in a harsh environment. </title> <booktitle> In ? [131], </booktitle> <pages> pages 259-273. </pages> <month> ga:Davidge93a. </month>
Reference-contexts: of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom <ref> [26, 25, 132, 113] </ref> * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, 221, 222, 146, 127, 123, 134, 228, 136, 48, 49, 11, 39, 47, 53, 52, 40, 128, 238, 44, 35, 20, 8, 154, 155, 234, 235, 62, 173, 63, 91, <p> misfire detection alg. generation using gen. prog. [75] enrichment The effect of pop. * in gen. prog. [49] entities A non-linear gen. process for problem solving using spontaneously emergent self-replicating and self improving * [53] - Non-linear gen. process for problem solving using spon taneously emergent self-replicating and self-improving * <ref> [132] </ref> environment Looping as a means to survival: playing Russian roulette in a harsh * [98] environments Distr. gen. prog. for on-line prediction in changing * [238, 20] equations Interactive evol. of * for procedural mo dels [246] etsinta Satunnaistajan * [Gen. prog. random number generator by Koza] [14] evolution Artificial <p> a directed acyclic * to represent a pop. of computer prog. [194] graph grammar Cellular encoding as a * [14] graphics Artificial evol. for computer * [168] group An evolved vision-based behavioral model of coordinated * motion [244] halting Gen. prog. , indexed memory, the * problem, and other curiosities <ref> [132] </ref> harsh Looping as a means to survival: playing Russian roulette in a * environment [134] hierarchical A * appr. to learning the Boolean mul tiplexer function [230, 22] A* gen. syst. for symbolic function ident. [136] * automatic function definition in gen. prog. [217] * GAs operating on pop. of <p> to generate * source code to solve the prisoner's dilemma [11, 39] lizard Evol. of food foraging strategies for the Carib bean Anolis * using gen. prog. [89, 33] local Gen. prog. with * hill-climbing [29] locales Apprentissage de strategies * pour architechtu res reactives distribuees par prog. mation genetique <ref> [132] </ref> Looping as a means to survival: playing Russian rou lette in a harsh environment [86] L-system Gen. * prog. [118] machine Evolving turing-complete prog. for a register * with self-modifying code [158] machine learning Perf. improvement of * via automatic discovery of facilitating functions as appl. to a problem of <p> Prog. : On Prog. ming Computers by * of Nat. Sel. and Gen. <ref> [132] </ref> Looping as a * to survival: playing Russian roulette in a harsh environment [25] On the origin of effective procedures by * of artificial sel. [62] memory Evol. of mapmaking: Learning, planning, and * using gen. prog. [78] - Turing completeness in the language of gen. prog. with indexed * <p> The gen. planner: The automatic generation of * for a mobile robot via genetic prog. [176] plant Appl. of search methods to sch. problem in plas tics forming * A binary Rep. appr. [176] plastics forming Appl. of search methods to sch. problem in * plant: A binary Rep. appr. <ref> [132] </ref> playing Looping as a means to survival: * Russian rou lette in a harsh environment [55] plural Non-linear gen. process for use with * co-evolving pop. [116] pool The mating * A testbed for experiments in the evol. of symbol syst. [81] population On the use of a directed acyclic <p> Economic * as emergent properties of adaptive syst. s [82] roving The difficulty of * eyes [64] rule Gen. prog. for the search of a new learning * for neural networks [80] rules Learning and upgrading * for an OCR syst. using gen. prog. [142] Tree structured * in GAs <ref> [132] </ref> Russian roulette Looping as a means to survival: playing * in a harsh environment [246] Satunnaistajan etsinta [Gen. prog. random number generator by Koza] [60] Scalable learning in gen. prog. using automatic func tion definition [79] schedules Finding improved simulated annealing * with gen. prog. [176] scheduling Appl. of search <p> Dynamic training * sel. for supervised learning in gen. prog. [216] subsumption Evol. of * architecture that perform a wall following task for an autonomous mobile robot via gen. prog. [127] - Evol. of * using gen. prog. [85] supervised Dynamic training subset sel. for * learning in gen. prog. <ref> [132] </ref> survival Looping as a means to * playing Russian rou lette in a harsh environment [164] switchable Differentiable chromosomes The gen. prog. of * shape-genes [116] symbol The mating pool: A testbed for experiments in the evol. of * syst. [230, 22] symbolic A hierarchical gen. syst. for * function
Reference: [133] <editor> Gregory J. E. Rawlins, editor. </editor> <booktitle> Foundations of Genetic Algorithms, </booktitle> <address> Indiana University, 15.-18. July 1990 1991. </address> <publisher> Morgan Kaufmann: </publisher> <address> San Mateo, CA. ga:FOGA1. </address>
Reference: [134] <author> John R. Koza. </author> <title> A hierarchical approach to learning the Boolean multiplexer function. </title> <booktitle> In Rawlins [133], </booktitle> <pages> pages 171-192. </pages> <month> ga:Koza91e. </month>
Reference-contexts: signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, <ref> [134] </ref> machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, <p> * in Gennets [176] binary Appl. of search methods to sch. problem in plas tics forming plant: A * Rep. appr. [97] birds Concurrent evol. of territory-defining behavior in * using gen. prog. [188] BIRo Putting INK into a * A discussion of problem do main knowledge for evol. robotics <ref> [134] </ref> Boolean A hierarchical appr. to learning the * mul tiplexer function [125] - Gen. synthesis of * neural networks with a cell rewri ting developmental process [100] border Detector design by gen. prog. for automated * definition in cardiac magnetic resonance images [129] box The computer Zoo - evol. in <p> A gen. prog. appl. [11, 39] food Evol. of * foraging strategies for the Caribbean Anolis lizard using gen. prog. 20 [11, 39] foraging Evol. of food * strategies for the Caribbean Anolis lizard using gen. prog. [161] formation Concept * and decision tree induction using the gen. prog. paradigm <ref> [134] </ref> function A hierarchical appr. to learning the Boolean multiplexer * [230, 22] A hierarchical gen. syst. for symbolic * ident. [205] An adaptive * ident. syst. [208] Finding an impulse response * using gen. prog. [136] Hierarchical automatic * definition in gen. prog. [60] Scalable learning in gen. prog. using <p> encoding as a * [14] graphics Artificial evol. for computer * [168] group An evolved vision-based behavioral model of coordinated * motion [244] halting Gen. prog. , indexed memory, the * problem, and other curiosities [132] harsh Looping as a means to survival: playing Russian roulette in a * environment <ref> [134] </ref> hierarchical A * appr. to learning the Boolean mul tiplexer function [230, 22] A* gen. syst. for symbolic function ident. [136] * automatic function definition in gen. prog. [217] * GAs operating on pop. of computer prog. [180] * selforganization in gen. prog. [87, 38] - Prog. search with a <p> Turing completeness in the * of gen. prog. with in dexed memory [35] laser Signal filtering and data processing for * rheometry [27] Layoutproblems Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beis piel des Diskreten Quadratischen * [177, 44] learn Gen. prog. to * an agent's monitoring strategy <ref> [134] </ref> learning A hierarchical appr. to * the Boolean mul tiplexer function [32, 15] Adding* to the cellular development process: a com parative study [150] Automated* of a detector for ff-helices in protein sequences via gen. prog. [68] Automated* of a detector for the cores of ff-helices in protein sequences via <p> a difficult gen. prog. appl. [184] morality Artificial * and gen. prog. [168] motion An evolved vision-based behavioral model of coordinated group * [41] multipart Architecture-altering operations for evolving the architecture of a * prog. in gen. prog. [104] multi-part Evolving the architecture of a * prog. in gen. prog. <ref> [134] </ref> multiplexer A hierarchical appr. to learning the Boo lean * function [59] Myths Gen. prog. : * and facts [91] natural Exploring the underlying structure of * images through gen. prog. [19] - Gen. prog. as a means for prog. ming computers by * sel. [10] Natural Selection Gen.
Reference: [135] <editor> Darrell Whitley, editor. </editor> <booktitle> Foundations of Genetic Algorithms | 2 (FOGA-92), </booktitle> <address> Vail, CO, 24.-29. July 1992 1993. </address> <publisher> Morgan Kaufmann: </publisher> <address> San Mateo, CA. ga:FOGA92. </address>
Reference: [136] <author> John R. Koza. </author> <title> Hierarchical automatic function definition in genetic programming. </title> <booktitle> In Whitley [135], </booktitle> <pages> pages 297-318. </pages> <month> ga:Koza92e. </month>
Reference-contexts: Prog. II, * Discovery of Reusable Prog. <ref> [136] </ref> Hierarchical* function definition in gen. prog. [154] * generation of prog. for crawling and walking [226] * prog. of robots using gen. prog. ming [158] - Perf. improvement of machine learning via * discovery of facilitating functions as appl. to a problem of symbolic syst. ident. [60] Scalable learning in <p> for a mobile ro bot via gen. prog. with automatically * functions [200] The gen. planner The automatic generation of plans for a mobile robot via genetic prog. with automatically * func tions [100] definition Detector design by gen. prog. for automa ted border * in cardiac magnetic resonance images <ref> [136] </ref> Hierarchical automatic function * in gen. prog. [60] Scalable learning in gen. prog. using automatic func tion * [242] dendritic Gen. generation of * trees" for image classi fication [100] design Detector * by gen. prog. for automated border definition in cardiac magnetic resonance images [30] - Gen. prog. appl. <p> prog. [161] formation Concept * and decision tree induction using the gen. prog. paradigm [134] function A hierarchical appr. to learning the Boolean multiplexer * [230, 22] A hierarchical gen. syst. for symbolic * ident. [205] An adaptive * ident. syst. [208] Finding an impulse response * using gen. prog. <ref> [136] </ref> Hierarchical automatic * definition in gen. prog. [60] Scalable learning in gen. prog. using automatic * definition [48] functions A non-linear gen. process for data encoding and for solving problems using automatically defined * [105] - Gen. prog. exploratory power and the discovery of * [51] - Non-linear GAs for <p> motion [244] halting Gen. prog. , indexed memory, the * problem, and other curiosities [132] harsh Looping as a means to survival: playing Russian roulette in a * environment [134] hierarchical A * appr. to learning the Boolean mul tiplexer function [230, 22] A* gen. syst. for symbolic function ident. <ref> [136] </ref> * automatic function definition in gen. prog. [217] * GAs operating on pop. of computer prog. [180] * selforganization in gen. prog. [87, 38] - Prog. search with a * variable length Rep. : Gen. prog. , simulated annealing and hill climbing [121, 37] high-level Coevolving * Rep. [87, 38]
Reference: [137] <editor> Stephanie Forrest, editor. </editor> <title> Emergent Computation: Self-Organizing, Collective, </title> <booktitle> and Cooperative Phenomena in Natural and Artificial Computing Networks, </booktitle> <address> Cambridge, MA, 1991. </address> <publisher> MIT Press / North-Holland. </publisher> <editor> (also as Physica D, </editor> <volume> Vol. 42) ga:Forrest91book. </volume>
Reference: [138] <author> W. Daniel Hillis. </author> <title> Co-evolving parasites improve simulated evolution as an optimization procedure. </title> <booktitle> In Forrest [137], </booktitle> <pages> pages 228-234. </pages> <address> y([10]) ga:Hillis90. </address>
Reference-contexts: [169] classifiers Evol. learning of predatory behaviors based on structured * [118] code Evolving turing-complete prog. for a register mac hine with self-modifying * [166] coevolution Evol. and * of computer prog. to cntr. independently-acting agents [123] co-evolution Gen. evol. and * of computer prog. [121, 37] Coevolving high-level Rep. <ref> [138] </ref> Co-evolving parasites improve simulated evol. as an opt. procedure [55] - Non-linear gen. process for use with plural * pop. [54] - Non-linear gen. process for use with * pop. [32, 15] comparative Adding learning to the cellular develop ment process: a * study [110] complex Solving * problems with <p> means to survival: playing Russian roulette in a harsh * [98] environments Distr. gen. prog. for on-line prediction in changing * [238, 20] equations Interactive evol. of * for procedural mo dels [246] etsinta Satunnaistajan * [Gen. prog. random number generator by Koza] [14] evolution Artificial * for computer graphics <ref> [138] </ref> - Co-evolving parasites improve simulated * as an opt. procedure [115] Complexity compression and * [97] Concurrent* of territory-defining behavior in birds using gen. prog. [102] Context-free language induction by * of deterministic push-down automata using gen. prog. [123] - Gen. * and co-evol. of computer prog. [237, 128] Interactive* <p> on-line Distr. gen. prog. for * prediction in changing environments [217] operating Hierarchical GAs * on pop. of computer prog. [41] operations Architecture-altering * for evolving the arc hitecture of a multipart prog. in gen. prog. [219, 207] optimal Gen. breeding of non-linear * cntr. strate gies for broom balancing <ref> [138] </ref> optimization Co-evolving parasites improve simulated evol. as an * procedure [25] origin On the * of effective procedures by means of ar tificial sel. [161] paradigm Concept formation and decision tree induc tion using the gen. prog. * [146] Evolving a computer prog. to generate random num bers using the <p> num bers using the gen. prog. * [195] - Gen. prog. : A new * for cntr. and analysis [42] - Gen. prog. : A * for gen. breeding pop. of computer prog. to solve problems [225] The gen. prog. * Gen. breeding pop. of computer prog. to solve problems <ref> [138] </ref> parasites Co-evolving * improve simulated evol. as an opt. procedure [96] pattern Feasibility of evolving self-learned * recognition appl. toward the solution of a constrained syst. using gen. prog. [16] Beagle- A Darwinian appr. to * recognition [212] patterns Automated discovery of detectors and iteration-performing calculations to recognize * in <p> for data encoding and for sol ving * using automatically defined functions [110] Solving complex * with GAs [34] Solving ident. * by structured GAs [225] The gen. prog. paradigm: Gen. breeding pop. of computer prog. to solve * [238, 20] procedural Interactive evol. of equations for * mo dels <ref> [138] </ref> procedure Co-evolving parasites improve simulated evol. as an opt. * [25] procedures On the origin of effective * by means of artificial sel. [48] process A non-linear gen. * for data encoding and for solving problems using automatically defined functions [49] A non-linear gen. * for problem solving using sponta <p> [140] sequential A Rep. for the adaptive generation of simple * prog. [117] shape Two ways of discovering the size and * of a com puter prog. to solve a problem [164] shape-genes Differentiable chromosomes The gen. prog. of switchable * [35] Signal filtering and data processing for laser rheometry <ref> [138] </ref> simulated Co-evolving parasites improve * evol. as an opt. procedure [79] simulated annealing Finding improved * schedules with gen. prog. [87, 38] - Prog. search with a hierarchical variable length Rep. : Gen. prog. , * and hill climbing [27] Simulated Annealing Verbesserung des * unter Anwendung Genetischer Programmierung am
Reference: [139] <editor> John J. Grefenstette, editor. </editor> <booktitle> Proceedings of the First International Conference on Genetic Algorithms and Their Applications, </booktitle> <address> Pittsburgh, PA, 24. - 26. July 1985. </address> <publisher> Lawrence Erlbaum Associates: </publisher> <address> Hillsdale, New Jersey. ga:GA1. </address>
Reference: [140] <author> Nichael Lynn Cramer. </author> <title> A representation for the adaptive generation of simple sequential programs. </title> <booktitle> In Grefenstette [139], </booktitle> <pages> pages 183-187. </pages> <address> ga:Cramer85. </address> <month> 30 </month>
Reference-contexts: The other abbreviation used to compress titles are shown in appendix A. [114] Accurate replication in gen. prog. [81] acyclic On the use of a directed * graph to represent a pop. of computer prog. [76] adapting Learning by * Rep. in gen. prog. <ref> [140] </ref> adaptive A Rep. for the * generation of simple sequen tial prog. [205] An* function ident. syst. [106] An* inductive logic prog. syst. using gen. prog. ming [45] - Gen. prog. with * Rep. [43] - Microbehaviors and dynamical syst. : Economic routi nes as emergent properties of * syst. <p> plans for a mobile robot via genetic prog. with automatically defined * [201] Geneettinen ohjelmointi [Gen. prog. by Koza] [146] generate Evolving a computer prog. to * random num bers using the gen. prog. paradigm [144] Using the GA to * Lisp source code to solve the priso ner's dilemma <ref> [140] </ref> generation A Rep. for the adaptive * of simple sequen tial prog. [24] - Appl. of the GA to automatic prog. * [154] Automatic* of prog. for crawling and walking [170] Criticism, culture, and the automatic * of artworks [224] - Gen. * of both the weights and architecture for <p> Permuted title index 23 [118] register Evolving turing-complete prog. for a * machine with self-modifying code [67] Regular language induction with gen. prog. [114] replication Accurate * in gen. prog. [81] represent On the use of a directed acyclic graph to * a pop. of computer prog. <ref> [140] </ref> representation A * for the adaptive generation of simple sequential prog. [176] - Appl. of search methods to sch. problem in plastics forming plant: A binary * appr. [203] - Meta-level strategy learning for GA based on structu red * [87, 38] - Prog. search with a hierarchical variable length <p> Hierarchical * in gen. prog. [49] self-replicating A non-linear gen. process for problem solving using spontaneously emergent * and self-improving en tities [53] - Non-linear gen. process for problem solving using spon taneously emergent * and self-improving entities [120] Spontaneous emergence of * and evol. arily self improving computer prog. <ref> [140] </ref> sequential A Rep. for the adaptive generation of simple * prog. [117] shape Two ways of discovering the size and * of a com puter prog. to solve a problem [164] shape-genes Differentiable chromosomes The gen. prog. of switchable * [35] Signal filtering and data processing for laser rheometry [138]
Reference: [141] <editor> John J. Grefenstette, editor. </editor> <booktitle> Genetic Algorithms and their Applications: Proceedings of the Second International Conference on Genetic Algorithms and Their Applications, </booktitle> <publisher> MIT, </publisher> <address> Cambridge, MA, 28. - 31. July 1987. </address> <publisher> Lawrence Erlbaum Associates: </publisher> <address> Hillsdale, New Jersey. ga:GA2. </address>
Reference: [142] <author> Arthur S. Bickel and Riva Wenig Bickel. </author> <title> Tree structured rules in genetic algorithms. </title> <booktitle> In Grefenstette [141], </booktitle> <pages> pages 77-81. </pages> <month> ga:Bickel87. </month>
Reference-contexts: 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, <ref> [142] </ref> scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] <p> - Microbehaviors and dynamical syst. : Economic * as emergent properties of adaptive syst. s [82] roving The difficulty of * eyes [64] rule Gen. prog. for the search of a new learning * for neural networks [80] rules Learning and upgrading * for an OCR syst. using gen. prog. <ref> [142] </ref> Tree structured * in GAs [132] Russian roulette Looping as a means to survival: playing * in a harsh environment [246] Satunnaistajan etsinta [Gen. prog. random number generator by Koza] [60] Scalable learning in gen. prog. using automatic func tion definition [79] schedules Finding improved simulated annealing * with gen. <p> [111] * typed gen. prog. in evolving cooperation strategies [91] structure Exploring the underlying * of nat. images through gen. prog. [169] structured Evol. learning of predatory behaviors based on * classifiers [203] - Meta-level strategy learning for GA based on * Rep. [34] Solving ident. problems by * GAs <ref> [142] </ref> Tree* rules in GAs [229] subroutines Discovery of a main prog. and reusable * using gen. prog. [152] Simultaneous discovery of reusable detectors and * using gen. prog. [175] The evol. induction of * [85] subset Dynamic training * sel. for supervised learning in gen. prog. [216] subsumption Evol. of <p> tractor-trailed A gen. appr. to finding a cntr. to back up a * truck [94] trade Evol. of * strategies using GAs and gen. prog. [85] training Dynamic * subset sel. for supervised learning in gen. prog. [161] tree Concept formation and decision * induction using the gen. prog. paradigm <ref> [142] </ref> * structured rules in GAs [242] trees Gen. generation of "dendritic * for image classi fication [40] troubling The * aspects of a building block hypothesis for gen. prog. [228] truck A gen. appr. to finding a cntr. to back up a tractor-trailed * [227] truck backer upper problem A
Reference: [143] <author> Kenneth A. De Jong. </author> <title> On using genetic algorithms to search program spaces. </title> <booktitle> In Grefenstette [141], </booktitle> <pages> pages 210-216. </pages> <month> ga:DeJong87. </month>
Reference-contexts: optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, <ref> [143] </ref> protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] <p> prog. [176] scheduling Appl. of search methods to * problem in plastics forming plant: A binary Rep. appr. [176] search Appl. of * methods to sch. problem in plastics forming plant: A binary Rep. appr. [64] - Gen. prog. for the * of a new learning rule for neural networks <ref> [143] </ref> On using GAs to * prog. spaces [87, 38] - Prog. * with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and hill climbing [85] selection Dynamic training subset * for supervised lear ning in gen. prog. [19] - Gen. prog. as a means for prog. ming <p> - Non-linear gen. process for data encoding and for * problems using automatically defined functions [157] sort Evolving a * Lessons in gen. prog. [151] Generality and difficulty in gen. prog. : evolving a * [144] source code Using the GA to generate Lisp * to solve the prisoner's dilemma <ref> [143] </ref> spaces On using GAs to search prog. * [99] spatial Evol. by gen. prog. of a * robot juggling cntr. alg. [120] Spontaneous emergence of self-replicating and evol. arily self-improving computer prog. [49] spontaneously A non-linear gen. process for problem solving using * emergent self-replicating and self-improving en tities [53]
Reference: [144] <author> Cory Fujiki and John Dickinson. </author> <title> Using the genetic algorithm to generate lisp source code to solve the prisoner's dilemma. </title> <booktitle> In Grefenstette [141], </booktitle> <pages> pages 236-240. </pages> <month> ga:Dickinson87. </month>
Reference-contexts: medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, <ref> [144] </ref> problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, <p> via gen. prog. with automatically defined * [200] The gen. planner The automatic generation of plans for a mobile robot via genetic prog. with automatically defined * [201] Geneettinen ohjelmointi [Gen. prog. by Koza] [146] generate Evolving a computer prog. to * random num bers using the gen. prog. paradigm <ref> [144] </ref> Using the GA to * Lisp source code to solve the priso ner's dilemma [140] generation A Rep. for the adaptive * of simple sequen tial prog. [24] - Appl. of the GA to automatic prog. * [154] Automatic* of prog. for crawling and walking [170] Criticism, culture, and the <p> * mental models [63] * monitoring strategies: a difficult gen. prog. appl. [60] Scalable* in gen. prog. using automatic function definition [87, 38] length Prog. search with a hierarchical variable * Rep. : Gen. prog. , simulated annealing and hill climbing [157] Lessons Evolving a sort: * in gen. prog. <ref> [144] </ref> Lisp Using the GA to generate * source code to solve the prisoner's dilemma [11, 39] lizard Evol. of food foraging strategies for the Carib bean Anolis * using gen. prog. [89, 33] local Gen. prog. with * hill-climbing [29] locales Apprentissage de strategies * pour architechtu res reactives distribuees <p> power Gen. prog. exploratory * and the discovery of functions [169] predatory Evol. learning of * behaviors based on struc tured classifiers [98] prediction Distr. gen. prog. for on-line * in changing environments [101] Stock price time series * using gen. prog. [66] preserving Context * crossover in gen. prog. <ref> [144] </ref> prisoner's dilemma Using the GA to generate Lisp source code to solve the * [176] problem Appl. of search methods to sch. * in plastics forming plant: A binary Rep. appr. [244] - Gen. prog. , indexed memory, the halting * and other curiosities [158] - Perf. improvement of machine <p> intelligence [42] - Gen. prog. : A paradigm for gen. breeding pop. of computer prog. to * problems [225] The gen. prog. paradigm: Gen. breeding pop. of computer prog. to * problems [117] Two ways of discovering the size and shape of a com puter prog. to * a problem <ref> [144] </ref> Using the GA to generate Lisp source code to * the prisoner's dilemma [46, 47] solving A non-linear GAs for * problems [48] A non-linear gen. process for data encoding and for * problems using automatically defined functions [110] * complex problems with GAs [34] * ident. problems by structured <p> finding a fit compo sition of functions [50] - Non-linear GAs for * problems [52] - Non-linear gen. process for data encoding and for * problems using automatically defined functions [157] sort Evolving a * Lessons in gen. prog. [151] Generality and difficulty in gen. prog. : evolving a * <ref> [144] </ref> source code Using the GA to generate Lisp * to solve the prisoner's dilemma [143] spaces On using GAs to search prog. * [99] spatial Evol. by gen. prog. of a * robot juggling cntr. alg. [120] Spontaneous emergence of self-replicating and evol. arily self-improving computer prog. [49] spontaneously A
Reference: [145] <editor> Richard K. Belew and Lashon B. Booker, editors. </editor> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <address> San Diego, 13.-16. July 1991. </address> <publisher> Morgan Kaufmann Publishers. ga:GA4. </publisher>
Reference: [146] <author> John R. Koza. </author> <title> Evolving a computer program to generate random numbers using the genetic programming paradigm. </title> <booktitle> In Belew and Booker [145], </booktitle> <pages> pages 37-44. </pages> <month> ga:Koza91b. </month>
Reference-contexts: 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, <ref> [146, 246] </ref> genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] <p> of coordi nated group motion [41] evolving Architecture-altering operations for * the arc hitecture of a multipart prog. in gen. prog. [96] Feasibility of * self-learned pattern recognition appl. toward the solution of a constrained syst. using gen. prog. [151] Generality and difficulty in gen. prog. : * a sort <ref> [146] </ref> * a computer prog. to generate random numbers using the gen. prog. paradigm [157] * a sort: Lessons in gen. prog. [181] * co-operation in autonomous robotic syst. [113] * data structures using gen. prog. [8] * images [104] * the architecture of a multi-part prog. in gen. prog. [118] <p> of symbolic syst. ident. [197, 199] The automatic generation of plans for a mobile ro bot via gen. prog. with automatically defined * [200] The gen. planner The automatic generation of plans for a mobile robot via genetic prog. with automatically defined * [201] Geneettinen ohjelmointi [Gen. prog. by Koza] <ref> [146] </ref> generate Evolving a computer prog. to * random num bers using the gen. prog. paradigm [144] Using the GA to * Lisp source code to solve the priso ner's dilemma [140] generation A Rep. for the adaptive * of simple sequen tial prog. [24] - Appl. of the GA to <p> Gen. breeding of non-linear * cntr. strate gies for broom balancing [138] optimization Co-evolving parasites improve simulated evol. as an * procedure [25] origin On the * of effective procedures by means of ar tificial sel. [161] paradigm Concept formation and decision tree induc tion using the gen. prog. * <ref> [146] </ref> Evolving a computer prog. to generate random num bers using the gen. prog. * [195] - Gen. prog. : A new * for cntr. and analysis [42] - Gen. prog. : A * for gen. breeding pop. of computer prog. to solve problems [225] The gen. prog. * Gen. breeding <p> discussion of problem do main knowledge for evol. robotics [27] Quadratischen Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beispiel des Diskreten * Layoutproblems [71] queries The use of gen. prog. to build * for info ret rieval [246] random number generator Satunnaistajan etsinta [Gen. prog. * by Koza] <ref> [146] </ref> random numbers Evolving a computer prog. to gene rate * using the gen. prog. paradigm [153] razor Gen. prog. of minimal neural nets using Occam's * [179] reactive Learning distr. * strategies by gen. prog. for the general job shop problem [178] Learning distributive * strategies by gen. prog. for
Reference: [147] <editor> Stephanie Forrest, editor. </editor> <booktitle> Proceedings of the Fifth International Conference on Genetic Algorithms, </booktitle> <address> Urbana-Champaign,IL, 17.-21. July 1993. </address> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA. ga:GA5. </address>
Reference: [148] <editor> Wolfgang Banzhaf. </editor> <title> Genetic programming for pedestrians. </title> <note> In Forrest [147], page 628. (also as [247]; available via anonymous ftp cite ftp.cc.utexas.edu directory /pub/genetic-programming/papers file GenProg forPed.ps.Z) ga:Banzhaf93a. </note>
Reference-contexts: recognition appl. toward the solution of a constrained syst. using gen. prog. [16] Beagle- A Darwinian appr. to * recognition [212] patterns Automated discovery of detectors and iteration-performing calculations to recognize * in protein sequences using gen. prog. [70] Recognizing* in protein sequences using iteration performing calculations in gen. prog. <ref> [148, 36] </ref> pedestrians Gen. prog. for * [216] perform Evol. of subsumption architecture that * a wall following task for an autonomous mobile robot via gen. prog. 22 [158] Performance improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. ident. [163] perspective
Reference: [149] <author> Frederic C. Gruau. </author> <title> Genetic synthesis of modular neural networks. </title> <booktitle> In Forrest [147], </booktitle> <pages> pages 318-325. </pages> <month> ga:Gruau93a. </month>
Reference-contexts: programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, <ref> [149, 176] </ref> job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness <p> 60, 9, 213, 214, 215, 41, 216, 120] 114, 115, 105, 106, 116, 117, 118] 3.10 Geographical index The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France <ref> [30, 31, 29, 179, 149, 183, 21] </ref> * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, <p> * via genetic prog. [168] model An evolved vision-based behavioral * of coordi nated group motion [73] Experiments with a coroutine execution * for gen. prog. [220, 221, 222] modeling A gen. appr. to econometric * [238, 20] models Interactive evol. of equations for procedural * [245] Learning mental * <ref> [149] </ref> modular Gen. synthesis of * neural networks [177, 44] monitoring Gen. prog. to learn an agent's * stra tegy [63] Learning* strategies: a difficult gen. prog. appl. [184] morality Artificial * and gen. prog. [168] motion An evolved vision-based behavioral model of coordinated group * [41] multipart Architecture-altering operations for <p> Gen. generation of both the weights and architecture for a * [30] - Gen. prog. appl. to * design [21] * synthesis using cellular encoding and the GA [31] neural networks Cellular encoding of gen. * [125] - Gen. synthesis of Boolean * with a cell rewriting deve lopmental process <ref> [149] </ref> - Gen. synthesis of modular * [64] - Gen. prog. for the search of a new learning rule for * [88] neutral Genotype-phenotype-mapping and * variation - A case study in gen. prog. [46, 47] non-linear A * GAs for solving problems [48] A* gen. process for data encoding and <p> hierarchical gen. syst. for * function ident. [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of * syst. ident. [92] synthesis Circuit * through gen. prog. [125] - Gen. * of Boolean neural networks with a cell rewriting developmental process <ref> [149] </ref> - Gen. * of modular neural networks [21] Neural network * using cellular encoding and the GA [112] Temporal data processing using gen. prog. [95] Terrain flattening by autonomous robot: A gen. prog. appl. [97] territory-defining Concurrent evol. of * behavior in birds using gen. prog. [116] testbed The mating
Reference: [150] <author> Simon G. Handley. </author> <title> Automated learning of a detector for ff-helices in protein sequences via genetic programming. </title> <booktitle> In Forrest [147], </booktitle> <pages> pages 271-278. </pages> <month> ga:Handley93a. </month>
Reference-contexts: parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, <ref> [150, 70] </ref> genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, <p> tion of * [102] automata Context-free language induction by evol. of deterministic push-down * using gen. prog. [100] automated Detector design by gen. prog. for * border definition in cardiac magnetic resonance images [212] * discovery of detectors and iteration-performing calculations to recognize patterns in protein sequences using gen. prog. <ref> [150] </ref> * learning of a detector for ff-helices in protein sequences via gen. prog. [68] * learning of a detector for the cores of ff-helices in pro tein sequences via gen. prog. [24] automatic Appl. of the GA to * prog. generation [170] Criticism, culture, and the * generation of artworks <p> func tion * [242] dendritic Gen. generation of * trees" for image classi fication [100] design Detector * by gen. prog. for automated border definition in cardiac magnetic resonance images [30] - Gen. prog. appl. to neural network * [182] detection IC engine misfire * alg. generation using gen. prog. <ref> [150] </ref> detector Automated learning of a * for ff-helices in pro tein sequences via gen. prog. [68] Automated learning of a * for the cores of ff-helices in protein sequences via gen. prog. [100] * design by gen. prog. for automated border definition in cardiac magnetic resonance images [212] detectors Automated <p> Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beis piel des Diskreten Quadratischen * [177, 44] learn Gen. prog. to * an agent's monitoring strategy [134] learning A hierarchical appr. to * the Boolean mul tiplexer function [32, 15] Adding* to the cellular development process: a com parative study <ref> [150] </ref> Automated* of a detector for ff-helices in protein sequences via gen. prog. [68] Automated* of a detector for the cores of ff-helices in protein sequences via gen. prog. [85] Dynamic training subset sel. for supervised * in gen. prog. [62] - Evol. of mapmaking: * planning, and memory using gen. <p> Prog. : On * Computers by Means of Nat. Sel. and Gen. [106] programming system An adaptive inductive logic * using gen. prog. [212] protein sequences Automated discovery of detectors and iteration-performing calculations to recognize patterns in * using gen. prog. <ref> [150] </ref> Automated learning of a detector for ff-helices in * via gen. prog. [68] Automated learning of a detector for the cores of ff helices in * via gen. prog. [70] Recognizing patterns in * using iteration-performing calculations in gen. prog. [102] push-down Context-free language induction by evol. of deterministic *
Reference: [151] <author> Kenneth E. Kinnear, Jr. </author> <title> Generality and difficulty in genetic programming: evolving a sort. </title> <booktitle> In Forrest [147], </booktitle> <pages> pages 287-294. </pages> <note> (available via anonymous ftp cite ftp.cc.utexas.edu directory /pub/genetic-programming/papers file kinnear.icga93.ps) ga:Kinnear93b. </note>
Reference-contexts: 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, <ref> [157, 151] </ref> sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table gives references to the contri butions <p> * in gen. prog. [168] evolved An * vision-based behavioral model of coordi nated group motion [41] evolving Architecture-altering operations for * the arc hitecture of a multipart prog. in gen. prog. [96] Feasibility of * self-learned pattern recognition appl. toward the solution of a constrained syst. using gen. prog. <ref> [151] </ref> Generality and difficulty in gen. prog. : * a sort [146] * a computer prog. to generate random numbers using the gen. prog. paradigm [157] * a sort: Lessons in gen. prog. [181] * co-operation in autonomous robotic syst. [113] * data structures using gen. prog. [8] * images [104] <p> by structured GAs [51] - Non-linear GAs for * problems by finding a fit compo sition of functions [50] - Non-linear GAs for * problems [52] - Non-linear gen. process for data encoding and for * problems using automatically defined functions [157] sort Evolving a * Lessons in gen. prog. <ref> [151] </ref> Generality and difficulty in gen. prog. : evolving a * [144] source code Using the GA to generate Lisp * to solve the prisoner's dilemma [143] spaces On using GAs to search prog. * [99] spatial Evol. by gen. prog. of a * robot juggling cntr. alg. [120] Spontaneous emergence
Reference: [152] <author> John R. Koza. </author> <title> Simultaneous discovery of reusable detectors and subroutines using genetic programming. </title> <booktitle> In Forrest [147], </booktitle> <pages> pages 295-302. </pages> <month> ga:Koza93c. </month>
Reference-contexts: [68] Automated learning of a * for the cores of ff-helices in protein sequences via gen. prog. [100] * design by gen. prog. for automated border definition in cardiac magnetic resonance images [212] detectors Automated discovery of * and iteration-performing calculations to recognize patterns in protein sequences using gen. prog. <ref> [152] </ref> Simultaneous discovery of reusable * and subroutines using gen. prog. [159] Simultaneous discovery of * and a way of using the * via gen. prog. [102] deterministic Context-free language induction by evol. of * push-down automata using gen. prog. [12] Developing a gen. prog. syst. [32, 15] development Adding learning <p> image discrimination [229] * of a main prog. and reusable subroutines using gen. prog. [158] - Perf. improvement of machine learning via automatic * of facilitating functions as appl. to a problem of symbolic syst. ident. [159] Simultaneous* of detectors and a way of using the detectors via gen. prog. <ref> [152] </ref> Simultaneous* of reusable detectors and subroutines using gen. prog. [155] discrimination Gen. prog. for feature discovery and image * [188] discussion Putting INK into a BIRo: A * of problem domain knowledge for evol. robotics [27] Diskreten Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beispiel des * Quadratischen <p> Prog. II, Automatic Discovery of * Prog. <ref> [152] </ref> Simultaneous discovery of * detectors and subroutines using gen. prog. [125] rewriting Gen. synthesis of Boolean neural networks with a cell * developmental process [35] rheometry Signal filtering and data processing for laser * [99] robot Evol. by gen. prog. of a spatial * juggling cntr. alg. [189] - Evol. <p> 38] - Prog. search with a hierarchical variable length Rep. : Gen. prog. , * and hill climbing [27] Simulated Annealing Verbesserung des * unter Anwendung Genetischer Programmierung am Beispiel des Dis kreten Quadratischen Layoutproblems [159] Simultaneous discovery of detectors and a way of using the detectors via gen. prog. <ref> [152] </ref> * discovery of reusable detectors and subroutines using gen. prog. [117] size Two ways of discovering the * and shape of a com puter prog. to solve a problem [58] snapshot Gen. prog. : A current * [96] solution Feasibility of evolving self-learned pattern recognition appl. toward the * of <p> through gen. prog. [169] structured Evol. learning of predatory behaviors based on * classifiers [203] - Meta-level strategy learning for GA based on * Rep. [34] Solving ident. problems by * GAs [142] Tree* rules in GAs [229] subroutines Discovery of a main prog. and reusable * using gen. prog. <ref> [152] </ref> Simultaneous discovery of reusable detectors and * using gen. prog. [175] The evol. induction of * [85] subset Dynamic training * sel. for supervised learning in gen. prog. [216] subsumption Evol. of * architecture that perform a wall following task for an autonomous mobile robot via gen. prog. [127] -
Reference: [153] <author> Byoung-Tak Zhang and Heinz Muhlenbein. </author> <title> Genetic programming of minimal neural nets using Occam's razor. </title> <booktitle> In Forrest [147], </booktitle> <pages> pages 342-349. </pages> <month> ga:Muhlenbein93b. </month>
Reference-contexts: 116, 117, 118] 3.10 Geographical index The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) <ref> [153, 232, 115, 118] </ref> * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, 221, 222, 146, 127, 123, 134, 228, 136, 48, 49, 11, 39, <p> create simple plans using gen. prog. [203] Meta-level strategy learning for GA based on structu red Rep. [176] methods Appl. of search * to sch. problem in plastics forming plant: A binary Rep. appr. [43] Microbehaviors and dynamical syst. : Economic rou tines as emergent properties of adaptive syst. s <ref> [153] </ref> minimal Gen. prog. of * neural nets using Occam's razor [182] misfire IC engine * detection alg. generation using gen. prog. [216] mobile robot Evol. of subsumption architecture that perform a wall following task for an autonomous * via gen. prog. [197, 199] The automatic generation of plans for a <p> Prog. : On Prog. ming Computers by Means of * and Gen. <ref> [153] </ref> neural nets Gen. prog. of minimal * using Occam's razor [224] neural network Gen. generation of both the weights and architecture for a * [30] - Gen. prog. appl. to * design [21] * synthesis using cellular encoding and the GA [31] neural networks Cellular encoding of gen. * [125] <p> solving problems [52] * gen. process for data encoding and for solving problems using automatically defined functions [53] * gen. process for problem solving using spontaneously emergent self-replicating and self-improving entities [54] * gen. process for use with co-evolving pop. [55] * gen. process for use with plural co-evolving pop. <ref> [153] </ref> Occam's Gen. prog. of minimal neural nets using * razor [80] OCR Learning and upgrading rules for an * syst. using gen. prog. [201] ohjelmointi Geneettinen * [Gen. prog. by Koza] [98] on-line Distr. gen. prog. for * prediction in changing environments [217] operating Hierarchical GAs * on pop. of <p> Anwendung Genetischer Programmierung am Beispiel des Diskreten * Layoutproblems [71] queries The use of gen. prog. to build * for info ret rieval [246] random number generator Satunnaistajan etsinta [Gen. prog. * by Koza] [146] random numbers Evolving a computer prog. to gene rate * using the gen. prog. paradigm <ref> [153] </ref> razor Gen. prog. of minimal neural nets using Occam's * [179] reactive Learning distr. * strategies by gen. prog. for the general job shop problem [178] Learning distributive * strategies by gen. prog. for the general job shop problem [96] recognition Feasibility of evolving self-learned pattern * appl. toward the
Reference: [154] <author> Graham F. Spencer. </author> <title> Automatic generation of programs for crawling and walking. </title> <note> In Forrest [147], page 654. ga:Spencer93a. </note>
Reference-contexts: Prog. II, * Discovery of Reusable Prog. [136] Hierarchical* function definition in gen. prog. <ref> [154] </ref> * generation of prog. for crawling and walking [226] * prog. of robots using gen. prog. ming [158] - Perf. improvement of machine learning via * discovery of facilitating functions as appl. to a problem of symbolic syst. ident. [60] Scalable learning in gen. prog. using * function defi nition <p> cooperation Strongly typed gen. prog. in evolving * strategies [168] coordinated An evolved vision-based behavioral model of * group motion [68] cores Automated learning of a detector for the * of ff helices in protein sequences via gen. prog. [73] coroutine Experiments with a * execution model for gen. prog. <ref> [154] </ref> crawling Automatic generation of prog. for * and wal king [170] Criticism culture, and the automatic generation of artworks [66] crossover Context preserving * in gen. prog. [170] culture Criticism, * and the automatic generation of artworks [244] curiosities Gen. prog. , indexed memory, the halting problem, and other * <p> computer prog. to * random num bers using the gen. prog. paradigm [144] Using the GA to * Lisp source code to solve the priso ner's dilemma [140] generation A Rep. for the adaptive * of simple sequen tial prog. [24] - Appl. of the GA to automatic prog. * <ref> [154] </ref> Automatic* of prog. for crawling and walking [170] Criticism, culture, and the automatic * of artworks [224] - Gen. * of both the weights and architecture for a neural network [242] - Gen. * of "dendritic trees" for image classification [182] - IC engine misfire detection alg. * using gen. <p> II * [65] virtual reality A gen. prog. appl. in * [168] vision-based An evolved * behavioral model of coordi nated group motion [185] visual Evolving * routines <ref> [154] </ref> walking Automatic generation of prog. for crawling and * [216] wall following task Evol. of subsumption architecture that perform a * for an autonomous mobile robot via gen. prog. [117] ways Two * of discovering the size and shape of a com puter prog. to solve a problem [224] weights
Reference: [155] <author> Walter Alden Tackett. </author> <title> Genetic programming for feature discovery and image discrimination. </title> <booktitle> In Forrest [147], </booktitle> <pages> pages 303-309. </pages> <note> (available via anonymous ftp cite ftp.cc.utexas.edu directory /pub/genetic-programming/papers file GP.feature.discovery.ps.Z) ga:Tackett93a. [156] 1993 IEEE International Conference on Neural Networks, </note> <institution> San Francisco, </institution> <address> CA, 28. March - 1. </address> <month> April </month> <year> 1993. </year> <note> IEEE. ga:IEEENN93. </note>
Reference-contexts: [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, <ref> [16, 159, 155, 96] </ref> protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random <p> Prog. II, Automatic * of Reusable Prog. [105] - Gen. prog. exploratory power and the * of functions <ref> [155] </ref> - Gen. prog. for feature * and image discrimination [229] * of a main prog. and reusable subroutines using gen. prog. [158] - Perf. improvement of machine learning via automatic * of facilitating functions as appl. to a problem of symbolic syst. ident. [159] Simultaneous* of detectors and a way <p> subroutines using gen. prog. [158] - Perf. improvement of machine learning via automatic * of facilitating functions as appl. to a problem of symbolic syst. ident. [159] Simultaneous* of detectors and a way of using the detectors via gen. prog. [152] Simultaneous* of reusable detectors and subroutines using gen. prog. <ref> [155] </ref> discrimination Gen. prog. for feature discovery and image * [188] discussion Putting INK into a BIRo: A * of problem domain knowledge for evol. robotics [27] Diskreten Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beispiel des * Quadratischen Layoutproblems [29] distribuees Apprentissage de strategies locales pour architechtures reactives <p> roving * [158] facilitating Perf. improvement of machine learning via automatic discovery of * functions as appl. to a problem of symbolic syst. ident. [59] facts Gen. prog. : Myths and * [96] Feasibility of evolving self-learned pattern recognition appl. toward the solution of a constrained syst. using gen. prog. <ref> [155] </ref> feature Gen. prog. for * discovery and image discrimi nation [35] filtering Signal * and data processing for laser rheo metry [51] fit Non-linear GAs for solving problems by finding a * composition of functions [69] Fitness landscapes and difficulty in gen. prog. [95] flattening Terrain * by autonomous robot: <p> syst. for symbolic function * [205] An adaptive function * syst. [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. * [34] Solving* problems by structured GAs [242] image Gen. generation of "dendritic trees" for * classi fication <ref> [155] </ref> - Gen. prog. for feature discovery and * discrimination [8] images Evolving * [91] Exploring the underlying structure of nat. * through gen. prog. [77] implications The unique * of brood sel. for gen. prog. [208] impulse response Finding an * function using gen. prog. [166] independently-acting Evol. and coevol.
Reference: [157] <author> Kenneth E. Kinnear, Jr. </author> <title> Evolving a sort: Lessons in genetic programming. </title> <booktitle> In IEEENN93 [156], </booktitle> <pages> pages 881-888. </pages> <note> (available via anonymous ftp cite ftp.cc.utexas.edu directory /pub/genetic-programming file papers/kinnear.iccn93.ps) ga:Kinnear93a. </note>
Reference-contexts: machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, <ref> [157] </ref> stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, <p> 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, <ref> [157, 151] </ref> sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table gives references to the contri butions <p> of a multipart prog. in gen. prog. [96] Feasibility of * self-learned pattern recognition appl. toward the solution of a constrained syst. using gen. prog. [151] Generality and difficulty in gen. prog. : * a sort [146] * a computer prog. to generate random numbers using the gen. prog. paradigm <ref> [157] </ref> * a sort: Lessons in gen. prog. [181] * co-operation in autonomous robotic syst. [113] * data structures using gen. prog. [8] * images [104] * the architecture of a multi-part prog. in gen. prog. [118] * turing-complete prog. for a register machine with self modifying code [185] * visual <p> gen. prog. for the general job shop problem [245] * mental models [63] * monitoring strategies: a difficult gen. prog. appl. [60] Scalable* in gen. prog. using automatic function definition [87, 38] length Prog. search with a hierarchical variable * Rep. : Gen. prog. , simulated annealing and hill climbing <ref> [157] </ref> Lessons Evolving a sort: * in gen. prog. [144] Lisp Using the GA to generate * source code to solve the prisoner's dilemma [11, 39] lizard Evol. of food foraging strategies for the Carib bean Anolis * using gen. prog. [89, 33] local Gen. prog. with * hill-climbing [29] locales <p> * complex problems with GAs [34] * ident. problems by structured GAs [51] - Non-linear GAs for * problems by finding a fit compo sition of functions [50] - Non-linear GAs for * problems [52] - Non-linear gen. process for data encoding and for * problems using automatically defined functions <ref> [157] </ref> sort Evolving a * Lessons in gen. prog. [151] Generality and difficulty in gen. prog. : evolving a * [144] source code Using the GA to generate Lisp * to solve the prisoner's dilemma [143] spaces On using GAs to search prog. * [99] spatial Evol. by gen. prog. of
Reference: [158] <author> John R. Koza, Martin A. Keane, and James P. Rice. </author> <title> Performance improvement of machine learning via automatic discovery of facilitating functions as applied to a problem of symbolic system identification. </title> <booktitle> In IEEENN93 [156], </booktitle> <pages> pages 191-198. </pages> <month> ga:Koza93a. </month>
Reference-contexts: simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, <ref> [187, 44, 158] </ref> genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, <p> binary Rep. appr. [24] * of the GA to automatic prog. generation [95] Terrain flattening by autonomous robot: A gen. prog. * [96] applied Feasibility of evolving self-learned pattern recognition * toward the solution of a constrained syst. using gen. prog. [30] - Gen. prog. * to neural network design <ref> [158] </ref> - Perf. improvement of machine learning via automatic discovery of facilitating functions as * to a problem of symbolic syst. ident. [29] Apprentissage de strategies locales pour architechtu res reactives distribuees par prog. mation genetique [29] architechtures Apprentissage de strategies locales pour * reactives distribuees par prog. mation genetique [41] <p> Prog. II, * Discovery of Reusable Prog. [136] Hierarchical* function definition in gen. prog. [154] * generation of prog. for crawling and walking [226] * prog. of robots using gen. prog. ming <ref> [158] </ref> - Perf. improvement of machine learning via * discovery of facilitating functions as appl. to a problem of symbolic syst. ident. [60] Scalable learning in gen. prog. using * function defi nition [200] The gen. planner The* generation of plans for a mobile robot via genetic prog. with automatically defined <p> Prog. II, Automatic * of Reusable Prog. [105] - Gen. prog. exploratory power and the * of functions [155] - Gen. prog. for feature * and image discrimination [229] * of a main prog. and reusable subroutines using gen. prog. <ref> [158] </ref> - Perf. improvement of machine learning via automatic * of facilitating functions as appl. to a problem of symbolic syst. ident. [159] Simultaneous* of detectors and a way of using the detectors via gen. prog. [152] Simultaneous* of reusable detectors and subroutines using gen. prog. [155] discrimination Gen. prog. for <p> coroutine execution model for gen. prog. [116] The mating pool: A testbed for * in the evol. of symbol syst. [105] exploratory Gen. prog. * power and the discovery of functions [91] Exploring the underlying structure of nat. images th rough gen. prog. [82] eyes The difficulty of roving * <ref> [158] </ref> facilitating Perf. improvement of machine learning via automatic discovery of * functions as appl. to a problem of symbolic syst. ident. [59] facts Gen. prog. : Myths and * [96] Feasibility of evolving self-learned pattern recognition appl. toward the solution of a constrained syst. using gen. prog. [155] feature Gen. <p> and for solving problems using automatically defined * [105] - Gen. prog. exploratory power and the discovery of * [51] - Non-linear GAs for solving problems by finding a fit composition of * [52] - Non-linear gen. process for data encoding and for sol ving problems using automatically defined * <ref> [158] </ref> - Perf. improvement of machine learning via automatic discovery of facilitating * as appl. to a problem of symbolic syst. ident. [197, 199] The automatic generation of plans for a mobile ro bot via gen. prog. with automatically defined * [200] The gen. planner The automatic generation of plans for <p> search with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and * [89, 33] hill-climbing Gen. prog. with local * [182] IC engine misfire detection alg. generation using gen. prog. [230, 22] identification A hierarchical gen. syst. for symbolic function * [205] An adaptive function * syst. <ref> [158] </ref> - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. * [34] Solving* problems by structured GAs [242] image Gen. generation of "dendritic trees" for * classi fication [155] - Gen. prog. for feature discovery and * discrimination [8] images <p> with * hill-climbing [29] locales Apprentissage de strategies * pour architechtu res reactives distribuees par prog. mation genetique [132] Looping as a means to survival: playing Russian rou lette in a harsh environment [86] L-system Gen. * prog. [118] machine Evolving turing-complete prog. for a register * with self-modifying code <ref> [158] </ref> machine learning Perf. improvement of * via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. ident. [100] magnetic resonance images Detector design by gen. prog. for automated border definition in cardiac * [229] main program Discovery of a * and reusable subrou tines using gen. <p> calculations to recognize * in protein sequences using gen. prog. [70] Recognizing* in protein sequences using iteration performing calculations in gen. prog. [148, 36] pedestrians Gen. prog. for * [216] perform Evol. of subsumption architecture that * a wall following task for an autonomous mobile robot via gen. prog. 22 <ref> [158] </ref> Performance improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. ident. [163] perspective An experimental * on gen. prog. [200] planner The gen. * The automatic generation of plans for a mobile robot via genetic prog. with automatically defined functions [198] <p> * crossover in gen. prog. [144] prisoner's dilemma Using the GA to generate Lisp source code to solve the * [176] problem Appl. of search methods to sch. * in plastics forming plant: A binary Rep. appr. [244] - Gen. prog. , indexed memory, the halting * and other curiosities <ref> [158] </ref> - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a * of symbolic syst. ident. [188] Putting INK into a BIRo: A discussion of * domain knowledge for evol. robotics [117] Two ways of discovering the size and shape of a com puter prog. <p> Looping as a means to * playing Russian rou lette in a harsh environment [164] switchable Differentiable chromosomes The gen. prog. of * shape-genes [116] symbol The mating pool: A testbed for experiments in the evol. of * syst. [230, 22] symbolic A hierarchical gen. syst. for * function ident. <ref> [158] </ref> - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of * syst. ident. [92] synthesis Circuit * through gen. prog. [125] - Gen. * of Boolean neural networks with a cell rewriting developmental process [149] - Gen. * of modular neural networks
Reference: [159] <author> John R. Koza. </author> <title> Simultaneous discovery of detectors and a way of using the detectors via genetic programming. </title> <booktitle> In IEEENN93 [156], </booktitle> <pages> pages 1794-1801. </pages> <month> ga:Koza93b. </month>
Reference-contexts: [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, <ref> [16, 159, 155, 96] </ref> protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random <p> in protein sequences via gen. prog. [100] * design by gen. prog. for automated border definition in cardiac magnetic resonance images [212] detectors Automated discovery of * and iteration-performing calculations to recognize patterns in protein sequences using gen. prog. [152] Simultaneous discovery of reusable * and subroutines using gen. prog. <ref> [159] </ref> Simultaneous discovery of * and a way of using the * via gen. prog. [102] deterministic Context-free language induction by evol. of * push-down automata using gen. prog. [12] Developing a gen. prog. syst. [32, 15] development Adding learning to the cellular * process: a comparative study [125] developmental Gen. <p> power and the * of functions [155] - Gen. prog. for feature * and image discrimination [229] * of a main prog. and reusable subroutines using gen. prog. [158] - Perf. improvement of machine learning via automatic * of facilitating functions as appl. to a problem of symbolic syst. ident. <ref> [159] </ref> Simultaneous* of detectors and a way of using the detectors via gen. prog. [152] Simultaneous* of reusable detectors and subroutines using gen. prog. [155] discrimination Gen. prog. for feature discovery and image * [188] discussion Putting INK into a BIRo: A * of problem domain knowledge for evol. robotics [27] <p> as an opt. procedure [79] simulated annealing Finding improved * schedules with gen. prog. [87, 38] - Prog. search with a hierarchical variable length Rep. : Gen. prog. , * and hill climbing [27] Simulated Annealing Verbesserung des * unter Anwendung Genetischer Programmierung am Beispiel des Dis kreten Quadratischen Layoutproblems <ref> [159] </ref> Simultaneous discovery of detectors and a way of using the detectors via gen. prog. [152] * discovery of reusable detectors and subroutines using gen. prog. [117] size Two ways of discovering the * and shape of a com puter prog. to solve a problem [58] snapshot Gen. prog. : A
Reference: [160] <editor> Hans-Paul Schwefel and R. Manner, editors. </editor> <title> Parallel Problem Solving from Nature, </title> <booktitle> volume 496 of Lecture Notes in Computer Science, </booktitle> <address> Dortmund (Germany), 1.-3. October 1991. </address> <publisher> Springer-Verlag, </publisher> <address> Berlin. </address> <booktitle> (Proceedings of the 1st Workshop on Parallel Problem Solving from Nature (PPSN1)) ga:PPSN1. </booktitle>
Reference: [161] <author> John R. Koza. </author> <title> Concept formation and decision tree induction using the genetic programming paradigm. </title> <booktitle> In Schwefel and Manner [160], </booktitle> <pages> pages 124-128. </pages> <month> ga:Koza90c. </month>
Reference-contexts: use with * pop. [32, 15] comparative Adding learning to the cellular develop ment process: a * study [110] complex Solving * problems with GAs [115] Complexity compression and evol. [51] composition Non-linear GAs for solving problems by finding a fit * of functions [115] compression Complexity * and evol. <ref> [161] </ref> Concept formation and decision tree induction using the gen. prog. paradigm [97] Concurrent evol. of territory-defining behavior in birds using gen. prog. [96] constrained Feasibility of evolving self-learned pattern recognition appl. toward the solution of a * syst. using gen. prog. [23] construction Recombination, sel. , and the gen. * <p> gen. prog. [170] culture Criticism, * and the automatic generation of artworks [244] curiosities Gen. prog. , indexed memory, the halting problem, and other * [58] current Gen. prog. : A * snapshot [93] damage-immune Evol. of * prog. using gen. prog. [16] Darwinian Beagle A* appr. to pattern recognition <ref> [161] </ref> decision Concept formation and * tree induction using the gen. prog. paradigm [48] defined A non-linear gen. process for data encoding and for solving problems using automatically * functions [52] - Non-linear gen. process for data encoding and for sol ving problems using automatically * functions [197, 199] The automatic <p> landscapes and difficulty in gen. prog. [95] flattening Terrain * by autonomous robot: A gen. prog. appl. [11, 39] food Evol. of * foraging strategies for the Caribbean Anolis lizard using gen. prog. 20 [11, 39] foraging Evol. of food * strategies for the Caribbean Anolis lizard using gen. prog. <ref> [161] </ref> formation Concept * and decision tree induction using the gen. prog. paradigm [134] function A hierarchical appr. to learning the Boolean multiplexer * [230, 22] A hierarchical gen. syst. for symbolic * ident. [205] An adaptive * ident. syst. [208] Finding an impulse response * using gen. prog. [136] Hierarchical <p> gen. prog. [208] impulse response Finding an * function using gen. prog. [166] independently-acting Evol. and coevol. of computer prog. to cntr. * agents [78] indexed Turing completeness in the language of gen. prog. with * memory [244] indexed memory Gen. prog. , * the halting problem, and other curiosities <ref> [161] </ref> induction Concept formation and decision tree * using the gen. prog. paradigm [102] Context-free language * by evol. of deterministic push down automata using gen. prog. [67] Regular language * with gen. prog. [175] The evol. * of subroutines [106] inductive logic An adaptive * prog. syst. using gen. prog. <p> evolving the arc hitecture of a multipart prog. in gen. prog. [219, 207] optimal Gen. breeding of non-linear * cntr. strate gies for broom balancing [138] optimization Co-evolving parasites improve simulated evol. as an * procedure [25] origin On the * of effective procedures by means of ar tificial sel. <ref> [161] </ref> paradigm Concept formation and decision tree induc tion using the gen. prog. * [146] Evolving a computer prog. to generate random num bers using the gen. prog. * [195] - Gen. prog. : A new * for cntr. and analysis [42] - Gen. prog. : A * for gen. breeding <p> symbol syst. [101] time series Stock price * prediction using gen. prog. [228] tractor-trailed A gen. appr. to finding a cntr. to back up a * truck [94] trade Evol. of * strategies using GAs and gen. prog. [85] training Dynamic * subset sel. for supervised learning in gen. prog. <ref> [161] </ref> tree Concept formation and decision * induction using the gen. prog. paradigm [142] * structured rules in GAs [242] trees Gen. generation of "dendritic * for image classi fication [40] troubling The * aspects of a building block hypothesis for gen. prog. [228] truck A gen. appr. to finding a
Reference: [162] <editor> R. Manner and B. Manderick, editors. </editor> <title> Parallel Problem Solving from Nature, </title> <type> 2, </type> <address> Brussels, 28.-30. September 1992. </address> <publisher> Elsevier Science Publishers, </publisher> <address> Amsterdam. ga:PPSN2. </address>
Reference: [163] <author> Una-May O'Reilly and Franz Oppacher. </author> <title> An experimental perspective on genetic programming. </title> <booktitle> In Manner and Manderick [162], </booktitle> <pages> pages 331-340. </pages> <address> y ga:Oppacher92a. </address>
Reference-contexts: [8] * images [104] * the architecture of a multi-part prog. in gen. prog. [118] * turing-complete prog. for a register machine with self modifying code [185] * visual routines [111] Strongly typed gen. prog. in * cooperation strategies [73] execution Experiments with a coroutine * model for gen. prog. <ref> [163] </ref> experimental An * perspective on gen. prog. [73] Experiments with a coroutine execution model for gen. prog. [116] The mating pool: A testbed for * in the evol. of symbol syst. [105] exploratory Gen. prog. * power and the discovery of functions [91] Exploring the underlying structure of nat. images <p> prog. [148, 36] pedestrians Gen. prog. for * [216] perform Evol. of subsumption architecture that * a wall following task for an autonomous mobile robot via gen. prog. 22 [158] Performance improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. ident. <ref> [163] </ref> perspective An experimental * on gen. prog. [200] planner The gen. * The automatic generation of plans for a mobile robot via genetic prog. with automatically defined functions [198] The gen. * The automatic generation of plans for a mobile robot via genetic prog. [62] planning Evol. of mapmaking: Learning,
Reference: [164] <author> Hugo de Garis, Hitoshi Iba, and Tatsumi Furuya. </author> <title> Differentiable chromosomes the genetic programming of switchable shape-genes. </title> <booktitle> In Manner and Manderick [162], </booktitle> <pages> pages 489-498. </pages> <address> y ga:deGaris92d. </address>
Reference-contexts: number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, <ref> [164] </ref> signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] <p> developmental process [32, 15] cellular Adding learning to the * development process: a comparative study [21] Neural network synthesis using * encoding and the GA [194] * encoding as a graph grammar [31] * encoding of gen. neural networks [98] changing Distr. gen. prog. for on-line prediction in * environments <ref> [164] </ref> chromosomes Differentiable * The gen. prog. of switchable shape-genes [92] Circuit synthesis through gen. prog. [242] classification Gen. generation of "dendritic trees" for image * [169] classifiers Evol. learning of predatory behaviors based on structured * [118] code Evolving turing-complete prog. for a register mac hine with self-modifying * [166] <p> via gen. prog. [102] deterministic Context-free language induction by evol. of * push-down automata using gen. prog. [12] Developing a gen. prog. syst. [32, 15] development Adding learning to the cellular * process: a comparative study [125] developmental Gen. synthesis of Boolean neural networks with a cell rewriting * process <ref> [164] </ref> Differentiable chromosomes The gen. prog. of switc hable shape-genes [81] directed On the use of a * acyclic graph to represent a pop. of computer prog. [117] discovering Two ways of * the size and shape of a com puter prog. to solve a problem Permuted title index 19 [212] <p> spon taneously emergent * and self-improving entities [120] Spontaneous emergence of * and evol. arily self improving computer prog. [140] sequential A Rep. for the adaptive generation of simple * prog. [117] shape Two ways of discovering the size and * of a com puter prog. to solve a problem <ref> [164] </ref> shape-genes Differentiable chromosomes The gen. prog. of switchable * [35] Signal filtering and data processing for laser rheometry [138] simulated Co-evolving parasites improve * evol. as an opt. procedure [79] simulated annealing Finding improved * schedules with gen. prog. [87, 38] - Prog. search with a hierarchical variable length Rep. <p> that perform a wall following task for an autonomous mobile robot via gen. prog. [127] - Evol. of * using gen. prog. [85] supervised Dynamic training subset sel. for * learning in gen. prog. [132] survival Looping as a means to * playing Russian rou lette in a harsh environment <ref> [164] </ref> switchable Differentiable chromosomes The gen. prog. of * shape-genes [116] symbol The mating pool: A testbed for experiments in the evol. of * syst. [230, 22] symbolic A hierarchical gen. syst. for * function ident. [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl.
Reference: [165] <editor> Jean-Arcady Meyer and Stewart W. Wilson, editors. </editor> <booktitle> Proceedings of the First International Conference on Simulation of Adaptive Behavior: From animals to animats, </booktitle> <address> Paris, 24.-28. </address> <month> September </month> <year> 1991. </year> <title> A Bradford Book, </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA. ga:SAB90. </address>
Reference: [166] <author> John R. Koza. </author> <title> Evolution and coevolution of computer programs to control independently-acting agents. </title> <booktitle> In Meyer and Wilson [165], </booktitle> <pages> pages 366-375. </pages> <month> ga:Koza90d. </month>
Reference-contexts: A Rep. for the * generation of simple sequen tial prog. [205] An* function ident. syst. [106] An* inductive logic prog. syst. using gen. prog. ming [45] - Gen. prog. with * Rep. [43] - Microbehaviors and dynamical syst. : Economic routi nes as emergent properties of * syst. s <ref> [166] </ref> agents Evol. and coevol. of computer prog. to cntr. independently-acting * [177, 44] agent's Gen. prog. to learn an * monitoring strategy [108] agents The evol. of * that build mental models and create simple plans using gen. prog. [239] AI Gen. prog. and * planning syst. [195] analysis Gen. <p> [164] chromosomes Differentiable * The gen. prog. of switchable shape-genes [92] Circuit synthesis through gen. prog. [242] classification Gen. generation of "dendritic trees" for image * [169] classifiers Evol. learning of predatory behaviors based on structured * [118] code Evolving turing-complete prog. for a register mac hine with self-modifying * <ref> [166] </ref> coevolution Evol. and * of computer prog. to cntr. independently-acting agents [123] co-evolution Gen. evol. and * of computer prog. [121, 37] Coevolving high-level Rep. [138] Co-evolving parasites improve simulated evol. as an opt. procedure [55] - Non-linear gen. process for use with plural * pop. [54] - Non-linear gen. <p> gen. prog. [23] construction Recombination, sel. , and the gen. * of computer prog. [66] Context preserving crossover in gen. prog. [102] Context-free language induction by evol. of determi nistic push-down automata using gen. prog. [206] control Cart centering and broom balancing by gen. breeding pop. of * strategy prog. <ref> [166] </ref> - Evol. and coevol. of computer prog. to * independently-acting agents [99] - Evol. by gen. prog. of a spatial robot juggling * alg. [189] - Evol. of autonomous robot * architectures [219, 207] - Gen. breeding of non-linear opt. * strategies for broom balancing [195] - Gen. prog. : <p> Complexity compression and * [97] Concurrent* of territory-defining behavior in birds using gen. prog. [102] Context-free language induction by * of deterministic push-down automata using gen. prog. [123] - Gen. * and co-evol. of computer prog. [237, 128] Interactive* of dynamical syst. [238, 20] Interactive* of equations for procedural models <ref> [166] </ref> * and coevol. of computer prog. to cntr. independently acting agents [99] * by gen. prog. of a spatial robot juggling cntr. alg. [189] * of autonomous robot cntr. architectures [93] * of damage-immune prog. using gen. prog. [11, 39] * of food foraging strategies for the Caribbean Anolis lizard <p> for * classi fication [155] - Gen. prog. for feature discovery and * discrimination [8] images Evolving * [91] Exploring the underlying structure of nat. * through gen. prog. [77] implications The unique * of brood sel. for gen. prog. [208] impulse response Finding an * function using gen. prog. <ref> [166] </ref> independently-acting Evol. and coevol. of computer prog. to cntr. * agents [78] indexed Turing completeness in the language of gen. prog. with * memory [244] indexed memory Gen. prog. , * the halting problem, and other curiosities [161] induction Concept formation and decision tree * using the gen. prog. paradigm
Reference: [167] <editor> H. Roitblat, Jean-Arcady Meyer, and Stewart W. Wilson, editors. </editor> <booktitle> From Animals to Animats, Proceedings of the Second International Conference on Simulation of Adaptive Behavior (SAB92), </booktitle> <address> Honolulu, HI, 7.-11. December 1992. </address> <publisher> The MIT Press, </publisher> <address> Cambridge, MA. ga:SAB92. Bibliography 31 </address>
Reference: [168] <author> Craig W. Reynolds. </author> <title> An evolved vision-based behavioral model of coordinated group motion. </title> <editor> In Roitblat et al. </editor> <volume> [167], </volume> <pages> pages 384-392. </pages> <month> ga:CWReynolds93a. </month>
Reference-contexts: in * robotic syst. [95] Terrain flattening by * robot: A gen. prog. appl. [228] back A gen. appr. to finding a cntr. to * up a tractor trailed truck [16] Beagle A Darwinian appr. to pattern recognition [97] behavior Concurrent evol. of territory-defining * in birds using gen. prog. <ref> [168] </ref> behavioral An evolved vision-based * model of coordi nated group motion [169] behaviors Evol. learning of predatory * based on struc tured classifiers 17 18 [130] - Steerable Gennets The gen. prog. of steerable * in Gennets [176] binary Appl. of search methods to sch. problem in plas tics forming <p> * strategies for broom balancing [195] - Gen. prog. : A new paradigm for * and analysis [228] controller A gen. appr. to finding a * to back up a tractor-trailed truck [181] co-operation Evolving * in autonomous robotic syst. [111] cooperation Strongly typed gen. prog. in evolving * strategies <ref> [168] </ref> coordinated An evolved vision-based behavioral model of * group motion [68] cores Automated learning of a detector for the * of ff helices in protein sequences via gen. prog. [73] coroutine Experiments with a * execution model for gen. prog. [154] crawling Automatic generation of prog. for * and wal <p> replicating and * self-improving computer prog. [169] Evolutionary learning of predatory behaviors based on structured classifiers [187] * learning strategies [188] Putting INK into a BIRo: A discussion of problem do main knowledge for * robotics [175] The* induction of subroutines [57] evolvability The evol. of * in gen. prog. <ref> [168] </ref> evolved An * vision-based behavioral model of coordi nated group motion [41] evolving Architecture-altering operations for * the arc hitecture of a multipart prog. in gen. prog. [96] Feasibility of * self-learned pattern recognition appl. toward the solution of a constrained syst. using gen. prog. [151] Generality and difficulty in <p> of steerable be haviors in * [88] Genotype-phenotype-mapping and neutral varia tion A case study in gen. prog. [81] graph On the use of a directed acyclic * to represent a pop. of computer prog. [194] graph grammar Cellular encoding as a * [14] graphics Artificial evol. for computer * <ref> [168] </ref> group An evolved vision-based behavioral model of coordinated * motion [244] halting Gen. prog. , indexed memory, the * problem, and other curiosities [132] harsh Looping as a means to survival: playing Russian roulette in a * environment [134] hierarchical A * appr. to learning the Boolean mul tiplexer function <p> 199] The automatic generation of plans for a * via gen. prog. with automatically defined functions [200] The gen. planner The automatic generation of plans for a * via genetic prog. with automatically defined functions [198] The gen. planner: The automatic generation of plans for a * via genetic prog. <ref> [168] </ref> model An evolved vision-based behavioral * of coordi nated group motion [73] Experiments with a coroutine execution * for gen. prog. [220, 221, 222] modeling A gen. appr. to econometric * [238, 20] models Interactive evol. of equations for procedural * [245] Learning mental * [149] modular Gen. synthesis of <p> * [238, 20] models Interactive evol. of equations for procedural * [245] Learning mental * [149] modular Gen. synthesis of * neural networks [177, 44] monitoring Gen. prog. to learn an agent's * stra tegy [63] Learning* strategies: a difficult gen. prog. appl. [184] morality Artificial * and gen. prog. <ref> [168] </ref> motion An evolved vision-based behavioral model of coordinated group * [41] multipart Architecture-altering operations for evolving the architecture of a * prog. in gen. prog. [104] multi-part Evolving the architecture of a * prog. in gen. prog. [134] multiplexer A hierarchical appr. to learning the Boo lean * function [59] <p> II * [65] virtual reality A gen. prog. appl. in * <ref> [168] </ref> vision-based An evolved * behavioral model of coordi nated group motion [185] visual Evolving * routines [154] walking Automatic generation of prog. for crawling and * [216] wall following task Evol. of subsumption architecture that perform a * for an autonomous mobile robot via gen. prog. [117] ways Two *
Reference: [169] <author> Hitoshi Iba, Hugo de Garis, and Tetsuya Higuchi. </author> <title> Evolutionary learning of predatory behaviors based on structured classifiers. </title> <editor> In Roitblat et al. </editor> <volume> [167], </volume> <pages> pages 356-363. </pages> <month> ga:deGaris93f. </month>
Reference-contexts: prog. appl. [228] back A gen. appr. to finding a cntr. to * up a tractor trailed truck [16] Beagle A Darwinian appr. to pattern recognition [97] behavior Concurrent evol. of territory-defining * in birds using gen. prog. [168] behavioral An evolved vision-based * model of coordi nated group motion <ref> [169] </ref> behaviors Evol. learning of predatory * based on struc tured classifiers 17 18 [130] - Steerable Gennets The gen. prog. of steerable * in Gennets [176] binary Appl. of search methods to sch. problem in plas tics forming plant: A * Rep. appr. [97] birds Concurrent evol. of territory-defining behavior <p> * encoding as a graph grammar [31] * encoding of gen. neural networks [98] changing Distr. gen. prog. for on-line prediction in * environments [164] chromosomes Differentiable * The gen. prog. of switchable shape-genes [92] Circuit synthesis through gen. prog. [242] classification Gen. generation of "dendritic trees" for image * <ref> [169] </ref> classifiers Evol. learning of predatory behaviors based on structured * [118] code Evolving turing-complete prog. for a register mac hine with self-modifying * [166] coevolution Evol. and * of computer prog. to cntr. independently-acting agents [123] co-evolution Gen. evol. and * of computer prog. [121, 37] Coevolving high-level Rep. [138] <p> pool: A testbed for experiments in the * of symbol syst. [108] The* of agents that build mental models and create simple plans using gen. prog. [57] The* of evolvability in gen. prog. [186] The* of sporting strategies [120] evolutionarily Spontaneous emergence of self replicating and * self-improving computer prog. <ref> [169] </ref> Evolutionary learning of predatory behaviors based on structured classifiers [187] * learning strategies [188] Putting INK into a BIRo: A discussion of problem do main knowledge for * robotics [175] The* induction of subroutines [57] evolvability The evol. of * in gen. prog. [168] evolved An * vision-based behavioral model <p> of a detector for ff-helices in protein sequences via gen. prog. [68] Automated* of a detector for the cores of ff-helices in protein sequences via gen. prog. [85] Dynamic training subset sel. for supervised * in gen. prog. [62] - Evol. of mapmaking: * planning, and memory using gen. prog. <ref> [169] </ref> - Evol. * of predatory behaviors based on structured classifiers [187] - Evol. * strategies [64] - Gen. prog. for the search of a new * rule for neural networks [203] - Meta-level strategy * for GA based on structured Rep. [80] * and upgrading rules for an OCR syst. <p> of computer prog. [54] - Non-linear gen. process for use with co-evolving * [55] - Non-linear gen. process for use with plural co-evolving * [225] The gen. prog. paradigm: Gen. breeding * of compu ter prog. to solve problems [105] power Gen. prog. exploratory * and the discovery of functions <ref> [169] </ref> predatory Evol. learning of * behaviors based on struc tured classifiers [98] prediction Distr. gen. prog. for on-line * in changing environments [101] Stock price time series * using gen. prog. [66] preserving Context * crossover in gen. prog. [144] prisoner's dilemma Using the GA to generate Lisp source code <p> * prog. [177, 44] - Gen. prog. to learn an agent's monitoring * [203] - Meta-level * learning for GA based on structured Rep. [28] Strongly typed gen. prog. [111] * typed gen. prog. in evolving cooperation strategies [91] structure Exploring the underlying * of nat. images through gen. prog. <ref> [169] </ref> structured Evol. learning of predatory behaviors based on * classifiers [203] - Meta-level strategy learning for GA based on * Rep. [34] Solving ident. problems by * GAs [142] Tree* rules in GAs [229] subroutines Discovery of a main prog. and reusable * using gen. prog. [152] Simultaneous discovery of
Reference: [170] <author> Lee Spector and Adam Alpern. </author> <title> Criticism, culture, and the automatic generation of artworks. </title> <editor> In ?, editor, </editor> <booktitle> Proceedings of the Tweftth National Conference on Artificial Intelligence, </booktitle> <volume> volume 1, </volume> <pages> pages 3-8, </pages> <address> Seattle, WA, 31. July-4. August 1994. </address> <publisher> AAAI Press / The MIT Press. </publisher> <address> y(EI M025657/94) ga94bSpector. </address>
Reference-contexts: prog. of an artificial embryo [14] * evol. for computer graphics [184] * morality and gen. prog. [25] On the origin of effective procedures by means of * sel. [223] artificial intelligence A gen. appr. to * [218] - Gen. breeding pop. of computer prog. to solve problems in * <ref> [170] </ref> artworks Criticism, culture, and the automatic genera tion of * [102] automata Context-free language induction by evol. of deterministic push-down * using gen. prog. [100] automated Detector design by gen. prog. for * border definition in cardiac magnetic resonance images [212] * discovery of detectors and iteration-performing calculations to recognize <p> recognize patterns in protein sequences using gen. prog. [150] * learning of a detector for ff-helices in protein sequences via gen. prog. [68] * learning of a detector for the cores of ff-helices in pro tein sequences via gen. prog. [24] automatic Appl. of the GA to * prog. generation <ref> [170] </ref> Criticism, culture, and the * generation of artworks [9] - Gen. Prog. <p> An evolved vision-based behavioral model of * group motion [68] cores Automated learning of a detector for the * of ff helices in protein sequences via gen. prog. [73] coroutine Experiments with a * execution model for gen. prog. [154] crawling Automatic generation of prog. for * and wal king <ref> [170] </ref> Criticism culture, and the automatic generation of artworks [66] crossover Context preserving * in gen. prog. [170] culture Criticism, * and the automatic generation of artworks [244] curiosities Gen. prog. , indexed memory, the halting problem, and other * [58] current Gen. prog. : A * snapshot [93] damage-immune Evol. <p> the * of ff helices in protein sequences via gen. prog. [73] coroutine Experiments with a * execution model for gen. prog. [154] crawling Automatic generation of prog. for * and wal king <ref> [170] </ref> Criticism culture, and the automatic generation of artworks [66] crossover Context preserving * in gen. prog. [170] culture Criticism, * and the automatic generation of artworks [244] curiosities Gen. prog. , indexed memory, the halting problem, and other * [58] current Gen. prog. : A * snapshot [93] damage-immune Evol. of * prog. using gen. prog. [16] Darwinian Beagle A* appr. to pattern recognition [161] decision Concept <p> the gen. prog. paradigm [144] Using the GA to * Lisp source code to solve the priso ner's dilemma [140] generation A Rep. for the adaptive * of simple sequen tial prog. [24] - Appl. of the GA to automatic prog. * [154] Automatic* of prog. for crawling and walking <ref> [170] </ref> Criticism, culture, and the automatic * of artworks [224] - Gen. * of both the weights and architecture for a neural network [242] - Gen. * of "dendritic trees" for image classification [182] - IC engine misfire detection alg. * using gen. prog. [197, 199] The automatic * of plans
Reference: [171] <author> Lee Altenberg. </author> <title> Advances in genetic programming. </title> <editor> In Kinnear, Jr. </editor> <title> [7], chapter 3. The evolution of evolvability in genetic programming, </title> <note> page ? (available via anonymous ftp cite amida.zoo.duke.edu directory pub/LEE file LeeEEGP600.ps) ga94cAltenberg. </note>
Reference: [172] <author> David Andre. </author> <title> Advances in genetic programming. </title> <editor> In Kinnear, Jr. </editor> <title> [7], chapter 23. Automatically defined features: The simultaneous evolution of 2-dimensional feature detectors and an algorithm for using them, </title> <note> page ? y(Koza) ga94cAndre. </note>
Reference-contexts: [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, <ref> [202, 172] </ref> planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic
Reference: [173] <author> Martin Andrews and Richard Prager. </author> <title> Advances in genetic programming. </title> <editor> In Kinnear, Jr. </editor> <title> [7], chapter 16. Genetic programming for the acquisition of double auction market strategies, </title> <note> page ? y(Koza) ga94aAndrews. </note>
Reference: [174] <editor> Peter J. Angeline. </editor> <booktitle> Advances in genetic programming. </booktitle> <editor> In Kinnear, Jr. </editor> <booktitle> [7], chapter 4. Genetic programming and emergent intelligence, </booktitle> <institution> page ? y(Koza) ga94eAngeline. </institution>
Reference: [175] <author> Peter J. Angeline and Jordan B. Pollack. </author> <title> The evolutionary induction of subroutines. </title> <editor> In ?, editor, </editor> <booktitle> Proceedings of the Fourteenth Annual Conference of the Cognitive Society, </booktitle> <pages> pages 236-241, </pages> <address> Bloomington, IN, ? 1992. </address> <publisher> Lawrence Earlbaum Associates Inc., </publisher> <address> Hillsdale, NJ. y(Koza) ga:Pollack92a. </address>
Reference-contexts: in gen. prog. [186] The* of sporting strategies [120] evolutionarily Spontaneous emergence of self replicating and * self-improving computer prog. [169] Evolutionary learning of predatory behaviors based on structured classifiers [187] * learning strategies [188] Putting INK into a BIRo: A discussion of problem do main knowledge for * robotics <ref> [175] </ref> The* induction of subroutines [57] evolvability The evol. of * in gen. prog. [168] evolved An * vision-based behavioral model of coordi nated group motion [41] evolving Architecture-altering operations for * the arc hitecture of a multipart prog. in gen. prog. [96] Feasibility of * self-learned pattern recognition appl. toward <p> with * memory [244] indexed memory Gen. prog. , * the halting problem, and other curiosities [161] induction Concept formation and decision tree * using the gen. prog. paradigm [102] Context-free language * by evol. of deterministic push down automata using gen. prog. [67] Regular language * with gen. prog. <ref> [175] </ref> The evol. * of subroutines [106] inductive logic An adaptive * prog. syst. using gen. prog. ming [71] information The use of gen. prog. to build queries for * retrieval [188] INK Putting * into a BIRo: A discussion of problem domain knowledge for evol. robotics [237, 128] Interactive evol. <p> on * classifiers [203] - Meta-level strategy learning for GA based on * Rep. [34] Solving ident. problems by * GAs [142] Tree* rules in GAs [229] subroutines Discovery of a main prog. and reusable * using gen. prog. [152] Simultaneous discovery of reusable detectors and * using gen. prog. <ref> [175] </ref> The evol. induction of * [85] subset Dynamic training * sel. for supervised learning in gen. prog. [216] subsumption Evol. of * architecture that perform a wall following task for an autonomous mobile robot via gen. prog. [127] - Evol. of * using gen. prog. [85] supervised Dynamic training subset
Reference: [176] <author> Hisashi Tamaki, Yoshishige Hasegawa, Junji Kozasa, and Miyuhiko Araki. </author> <title> Application of search methods to scheduling problem in plastics forming plant: A binary representation approach. </title> <booktitle> In Proceedings of the 32nd IEEE Conference on Decision and Control, </booktitle> <volume> volume 4, </volume> <pages> pages 3845-3850, </pages> <address> San Antonio, TX, 15.-17. </address> <month> December </month> <year> 1993. </year> <note> IEEE. y(EI M086345/94) ga:Tamaki93b. </note>
Reference-contexts: programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, <ref> [149, 176] </ref> job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness <p> The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) [153, 232, 115, 118] * Japan <ref> [176, 33, 83, 112] </ref> * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, 221, 222, 146, 127, 123, 134, 228, 136, 48, 49, 11, 39, 47, 53, 52, 40, 128, 238, <p> dynamical syst. [11, 39] Anolis Evol. of food foraging strategies for the Carib bean * lizard using gen. prog. [65] application A gen. prog. * in virtual reality [63] Learning monitoring strategies: a difficult gen. prog. * [72] * of gen. prog. in analyzing multiple steady states of dynamical syst. <ref> [176] </ref> * of search methods to sch. problem in plastics forming plant: A binary Rep. appr. [24] * of the GA to automatic prog. generation [95] Terrain flattening by autonomous robot: A gen. prog. * [96] applied Feasibility of evolving self-learned pattern recognition * toward the solution of a constrained syst. <p> [97] behavior Concurrent evol. of territory-defining * in birds using gen. prog. [168] behavioral An evolved vision-based * model of coordi nated group motion [169] behaviors Evol. learning of predatory * based on struc tured classifiers 17 18 [130] - Steerable Gennets The gen. prog. of steerable * in Gennets <ref> [176] </ref> binary Appl. of search methods to sch. problem in plas tics forming plant: A * Rep. appr. [97] birds Concurrent evol. of territory-defining behavior in * using gen. prog. [188] BIRo Putting INK into a * A discussion of problem do main knowledge for evol. robotics [134] Boolean A hierarchical <p> * using gen. prog. [78] - Turing completeness in the language of gen. prog. with indexed * [245] mental Learning * models [108] mental models The evol. of agents that build * and create simple plans using gen. prog. [203] Meta-level strategy learning for GA based on structu red Rep. <ref> [176] </ref> methods Appl. of search * to sch. problem in plastics forming plant: A binary Rep. appr. [43] Microbehaviors and dynamical syst. : Economic rou tines as emergent properties of adaptive syst. s [153] minimal Gen. prog. of * neural nets using Occam's razor [182] misfire IC engine * detection alg. <p> evol. of agents that build mental models and create simple * using gen. prog. [200] The gen. planner The automatic generation of * for a mobile robot via genetic prog. with automatically defined functions [198] The gen. planner: The automatic generation of * for a mobile robot via genetic prog. <ref> [176] </ref> plant Appl. of search methods to sch. problem in plas tics forming * A binary Rep. appr. [176] plastics forming Appl. of search methods to sch. problem in * plant: A binary Rep. appr. [132] playing Looping as a means to survival: * Russian rou lette in a harsh environment <p> The automatic generation of * for a mobile robot via genetic prog. with automatically defined functions [198] The gen. planner: The automatic generation of * for a mobile robot via genetic prog. <ref> [176] </ref> plant Appl. of search methods to sch. problem in plas tics forming * A binary Rep. appr. [176] plastics forming Appl. of search methods to sch. problem in * plant: A binary Rep. appr. [132] playing Looping as a means to survival: * Russian rou lette in a harsh environment [55] plural Non-linear gen. process for use with * co-evolving pop. [116] pool The mating * A testbed <p> * behaviors based on struc tured classifiers [98] prediction Distr. gen. prog. for on-line * in changing environments [101] Stock price time series * using gen. prog. [66] preserving Context * crossover in gen. prog. [144] prisoner's dilemma Using the GA to generate Lisp source code to solve the * <ref> [176] </ref> problem Appl. of search methods to sch. * in plastics forming plant: A binary Rep. appr. [244] - Gen. prog. , indexed memory, the halting * and other curiosities [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a * of symbolic syst. <p> for a * machine with self-modifying code [67] Regular language induction with gen. prog. [114] replication Accurate * in gen. prog. [81] represent On the use of a directed acyclic graph to * a pop. of computer prog. [140] representation A * for the adaptive generation of simple sequential prog. <ref> [176] </ref> - Appl. of search methods to sch. problem in plastics forming plant: A binary * appr. [203] - Meta-level strategy learning for GA based on structu red * [87, 38] - Prog. search with a hierarchical variable length * Gen. prog. , simulated annealing and hill climbing [121, 37] representations <p> structured * in GAs [132] Russian roulette Looping as a means to survival: playing * in a harsh environment [246] Satunnaistajan etsinta [Gen. prog. random number generator by Koza] [60] Scalable learning in gen. prog. using automatic func tion definition [79] schedules Finding improved simulated annealing * with gen. prog. <ref> [176] </ref> scheduling Appl. of search methods to * problem in plastics forming plant: A binary Rep. appr. [176] search Appl. of * methods to sch. problem in plastics forming plant: A binary Rep. appr. [64] - Gen. prog. for the * of a new learning rule for neural networks [143] On <p> harsh environment [246] Satunnaistajan etsinta [Gen. prog. random number generator by Koza] [60] Scalable learning in gen. prog. using automatic func tion definition [79] schedules Finding improved simulated annealing * with gen. prog. <ref> [176] </ref> scheduling Appl. of search methods to * problem in plastics forming plant: A binary Rep. appr. [176] search Appl. of * methods to sch. problem in plastics forming plant: A binary Rep. appr. [64] - Gen. prog. for the * of a new learning rule for neural networks [143] On using GAs to * prog. spaces [87, 38] - Prog. * with a hierarchical variable length Rep.
Reference: [177] <author> Marc C. Atkin and Paul R. Cohen. </author> <title> Genetic programming to learn an agent's monitoring strategy. </title> <editor> In ?, editor, </editor> <booktitle> AAAI-92 Proceedings Eleventh National Conference on Artificial Intelligence, page ?, ?, ? 1993. </booktitle> <publisher> AAAI Press/ The MIT Press. y(Koza) ga:Atkin93a. </publisher>
Reference-contexts: An* function ident. syst. [106] An* inductive logic prog. syst. using gen. prog. ming [45] - Gen. prog. with * Rep. [43] - Microbehaviors and dynamical syst. : Economic routi nes as emergent properties of * syst. s [166] agents Evol. and coevol. of computer prog. to cntr. independently-acting * <ref> [177, 44] </ref> agent's Gen. prog. to learn an * monitoring strategy [108] agents The evol. of * that build mental models and create simple plans using gen. prog. [239] AI Gen. prog. and * planning syst. [195] analysis Gen. prog. : A new paradigm for cntr. and * [72] analyzing Appl. <p> evol. of determi nistic push-down automata using gen. prog. [78] - Turing completeness in the * of gen. prog. with in dexed memory [35] laser Signal filtering and data processing for * rheometry [27] Layoutproblems Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beis piel des Diskreten Quadratischen * <ref> [177, 44] </ref> learn Gen. prog. to * an agent's monitoring strategy [134] learning A hierarchical appr. to * the Boolean mul tiplexer function [32, 15] Adding* to the cellular development process: a com parative study [150] Automated* of a detector for ff-helices in protein sequences via gen. prog. [68] Automated* of <p> vision-based behavioral * of coordi nated group motion [73] Experiments with a coroutine execution * for gen. prog. [220, 221, 222] modeling A gen. appr. to econometric * [238, 20] models Interactive evol. of equations for procedural * [245] Learning mental * [149] modular Gen. synthesis of * neural networks <ref> [177, 44] </ref> monitoring Gen. prog. to learn an agent's * stra tegy [63] Learning* strategies: a difficult gen. prog. appl. [184] morality Artificial * and gen. prog. [168] motion An evolved vision-based behavioral model of coordinated group * [41] multipart Architecture-altering operations for evolving the architecture of a * prog. in <p> reactive * by gen. prog. for the general job shop problem [63] Learning monitoring * a difficult gen. prog. appl. [111] Strongly typed gen. prog. in evolving cooperation * [186] The evol. of sporting * [206] strategy Cart centering and broom balancing by gen. breeding pop. of cntr. * prog. <ref> [177, 44] </ref> - Gen. prog. to learn an agent's monitoring * [203] - Meta-level * learning for GA based on structured Rep. [28] Strongly typed gen. prog. [111] * typed gen. prog. in evolving cooperation strategies [91] structure Exploring the underlying * of nat. images through gen. prog. [169] structured Evol.
Reference: [178] <author> Laurent Atlan, Jerome Bonnet, and Martine Naillon. </author> <title> Learning distributive reactive strategies by genetic programming for the general job shop problem. </title> <editor> In ?, editor, </editor> <booktitle> Proceedings of the 7th Annual Florida Artificial Intelligence Research Symposium, </booktitle> <address> page ?, Pensacola, FL, ? 1994. </address> <publisher> IEEE Press, </publisher> <address> New York. y(Langdon/bib) ga94aAtlan. </address>
Reference-contexts: selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, <ref> [178] </ref> L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein <p> unter Anwendung Genetischer Programmierung am Beispiel des * Quadratischen Layoutproblems [29] distribuees Apprentissage de strategies locales pour architechtures reactives * par prog. mation genetique [179] distributed Learning * reactive strategies by gen. prog. for the general job shop problem [98] * gen. prog. for on-line prediction in changing environ ments <ref> [178] </ref> distributive Learning * reactive strategies by gen. prog. for the general job shop problem [188] domain Putting INK into a BIRo: A discussion of problem * knowledge for evol. robotics [183] double-based Using a * GA on a pop. of computer prog. [85] Dynamic training subset sel. for supervised learning <p> upper problem and the * [212] iteration-performing Automated discovery of detectors and * calculations to recognize patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using * calculations in gen. prog. [179] job shop problem Learning distr. reactive strategies by gen. prog. for the general * <ref> [178] </ref> Learning distributive reactive strategies by gen. prog. for the general * [17, 18] joy The * of gen. prog. [99] juggling Evol. by gen. prog. of a spatial robot * cntr. alg. [188] knowledge Putting INK into a BIRo: A discussion of problem domain * for evol. robotics [201] Koza <p> Permuted title index 21 [76] * by adapting Rep. in gen. prog. [179] * distr. reactive strategies by gen. prog. for the general job shop problem <ref> [178] </ref> * distributive reactive strategies by gen. prog. for the general job shop problem [245] * mental models [63] * monitoring strategies: a difficult gen. prog. appl. [60] Scalable* in gen. prog. using automatic function definition [87, 38] length Prog. search with a hierarchical variable * Rep. : Gen. prog. , <p> generator Satunnaistajan etsinta [Gen. prog. * by Koza] [146] random numbers Evolving a computer prog. to gene rate * using the gen. prog. paradigm [153] razor Gen. prog. of minimal neural nets using Occam's * [179] reactive Learning distr. * strategies by gen. prog. for the general job shop problem <ref> [178] </ref> Learning distributive * strategies by gen. prog. for the general job shop problem [96] recognition Feasibility of evolving self-learned pattern * appl. toward the solution of a constrained syst. using gen. prog. [16] Beagle- A Darwinian appr. to pattern * [212] recognize Automated discovery of detectors and iteration-performing calculations to <p> Caribbean Anolis lizard using gen. prog. [94] - Evol. of trade * using GAs and gen. prog. [187] - Evol. learning * [219, 207] - Gen. breeding of non-linear opt. cntr. * for broom balancing 24 [179] Learning distr. reactive * by gen. prog. for the general job shop problem <ref> [178] </ref> Learning distributive reactive * by gen. prog. for the general job shop problem [63] Learning monitoring * a difficult gen. prog. appl. [111] Strongly typed gen. prog. in evolving cooperation * [186] The evol. of sporting * [206] strategy Cart centering and broom balancing by gen. breeding pop. of cntr.
Reference: [179] <author> Laurent Atlan, Jerome Bonnet, and Martine Naillon. </author> <title> Learning distributed reactive strategies by genetic programming for the general job shop problem. </title> <editor> In ?, editor, </editor> <booktitle> Proceedings of the Seventh Annual Florida Artificial Intelligence Research Symposium, </booktitle> <address> page ?, ?, ? 1993. </address> ? <note> (to be published; available via anonymous ftp cite ftp.ens.fr directory /pub/reports/biologie file disgajsp.ps.Z) ga:Atlan93b. </note>
Reference-contexts: [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, <ref> [179] </ref> selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, <p> 60, 9, 213, 214, 215, 41, 216, 120] 114, 115, 105, 106, 116, 117, 118] 3.10 Geographical index The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France <ref> [30, 31, 29, 179, 149, 183, 21] </ref> * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, <p> discovery and image * [188] discussion Putting INK into a BIRo: A * of problem domain knowledge for evol. robotics [27] Diskreten Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beispiel des * Quadratischen Layoutproblems [29] distribuees Apprentissage de strategies locales pour architechtures reactives * par prog. mation genetique <ref> [179] </ref> distributed Learning * reactive strategies by gen. prog. for the general job shop problem [98] * gen. prog. for on-line prediction in changing environ ments [178] distributive Learning * reactive strategies by gen. prog. for the general job shop problem [188] domain Putting INK into a BIRo: A discussion of <p> equations for procedural models [227] inter-twined spiral problem A gen. appr. to the truck backer upper problem and the * [212] iteration-performing Automated discovery of detectors and * calculations to recognize patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using * calculations in gen. prog. <ref> [179] </ref> job shop problem Learning distr. reactive strategies by gen. prog. for the general * [178] Learning distributive reactive strategies by gen. prog. for the general * [17, 18] joy The * of gen. prog. [99] juggling Evol. by gen. prog. of a spatial robot * cntr. alg. [188] knowledge Putting <p> Permuted title index 21 [76] * by adapting Rep. in gen. prog. <ref> [179] </ref> * distr. reactive strategies by gen. prog. for the general job shop problem [178] * distributive reactive strategies by gen. prog. for the general job shop problem [245] * mental models [63] * monitoring strategies: a difficult gen. prog. appl. [60] Scalable* in gen. prog. using automatic function definition [87, <p> The use of gen. prog. to build * for info ret rieval [246] random number generator Satunnaistajan etsinta [Gen. prog. * by Koza] [146] random numbers Evolving a computer prog. to gene rate * using the gen. prog. paradigm [153] razor Gen. prog. of minimal neural nets using Occam's * <ref> [179] </ref> reactive Learning distr. * strategies by gen. prog. for the general job shop problem [178] Learning distributive * strategies by gen. prog. for the general job shop problem [96] recognition Feasibility of evolving self-learned pattern * appl. toward the solution of a constrained syst. using gen. prog. [16] Beagle- A <p> par prog. mation genetique [11, 39] strategies Evol. of food foraging * for the Caribbean Anolis lizard using gen. prog. [94] - Evol. of trade * using GAs and gen. prog. [187] - Evol. learning * [219, 207] - Gen. breeding of non-linear opt. cntr. * for broom balancing 24 <ref> [179] </ref> Learning distr. reactive * by gen. prog. for the general job shop problem [178] Learning distributive reactive * by gen. prog. for the general job shop problem [63] Learning monitoring * a difficult gen. prog. appl. [111] Strongly typed gen. prog. in evolving cooperation * [186] The evol. of sporting
Reference: [180] <author> Justinian P. Rosca and Dana H. Ballard. </author> <title> Hierarchical selforganization in genetic programming. </title> <editor> In William W. Cohen and Haym Hirsh, editors, </editor> <booktitle> Machine Learning, Proceedings of the Eleventh International Conference, </booktitle> <pages> pages 251-258, </pages> <address> New Brunswick, NJ, 10.-13. July 1994. </address> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA. ga94cRosca. </address>
Reference-contexts: as a means to survival: playing Russian roulette in a * environment [134] hierarchical A * appr. to learning the Boolean mul tiplexer function [230, 22] A* gen. syst. for symbolic function ident. [136] * automatic function definition in gen. prog. [217] * GAs operating on pop. of computer prog. <ref> [180] </ref> * selforganization in gen. prog. [87, 38] - Prog. search with a * variable length Rep. : Gen. prog. , simulated annealing and hill climbing [121, 37] high-level Coevolving * Rep. [87, 38] hill climbing Prog. search with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and <p> using spon taneously emergent self-replicating and * entities [120] Spontaneous emergence of self-replicating and evol. arily * computer prog. [96] self-learned Feasibility of evolving * pattern recognition appl. toward the solution of a constrained syst. using gen. prog. [118] self-modifying Evolving turing-complete prog. for a register machine with * code <ref> [180] </ref> selforganization Hierarchical * in gen. prog. [49] self-replicating A non-linear gen. process for problem solving using spontaneously emergent * and self-improving en tities [53] - Non-linear gen. process for problem solving using spon taneously emergent * and self-improving entities [120] Spontaneous emergence of * and evol. arily self improving computer
Reference: [181] <author> J. R. Rush, A. P. Fraser, and D. P. Barnes. </author> <title> Evolving co-operation in autonomous robotic systems. </title> <editor> In ?, editor, </editor> <booktitle> Proceedings of the IEE International Conference on Control, </booktitle> <address> page ?, London (England), 21.-24. March 1994. </address> <publisher> IEE, </publisher> <address> London. y(Langdon/bib) ga94aRush. </address>
Reference-contexts: [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, <ref> [181] </ref> mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, <p> defined functions [200] The gen. planner The automatic generation of plans for a mobile robot via genetic prog. with * defined functions [216] autonomous Evol. of subsumption architecture that perform a wall following task for an * mobile robot via gen. prog. [189] - Evol. of * robot cntr. architectures <ref> [181] </ref> Evolving co-operation in * robotic syst. [95] Terrain flattening by * robot: A gen. prog. appl. [228] back A gen. appr. to finding a cntr. to * up a tractor trailed truck [16] Beagle A Darwinian appr. to pattern recognition [97] behavior Concurrent evol. of territory-defining * in birds using <p> * alg. [189] - Evol. of autonomous robot * architectures [219, 207] - Gen. breeding of non-linear opt. * strategies for broom balancing [195] - Gen. prog. : A new paradigm for * and analysis [228] controller A gen. appr. to finding a * to back up a tractor-trailed truck <ref> [181] </ref> co-operation Evolving * in autonomous robotic syst. [111] cooperation Strongly typed gen. prog. in evolving * strategies [168] coordinated An evolved vision-based behavioral model of * group motion [68] cores Automated learning of a detector for the * of ff helices in protein sequences via gen. prog. [73] coroutine Experiments <p> Feasibility of * self-learned pattern recognition appl. toward the solution of a constrained syst. using gen. prog. [151] Generality and difficulty in gen. prog. : * a sort [146] * a computer prog. to generate random numbers using the gen. prog. paradigm [157] * a sort: Lessons in gen. prog. <ref> [181] </ref> * co-operation in autonomous robotic syst. [113] * data structures using gen. prog. [8] * images [104] * the architecture of a multi-part prog. in gen. prog. [118] * turing-complete prog. for a register machine with self modifying code [185] * visual routines [111] Strongly typed gen. prog. in * <p> Boolean neural networks with a cell * developmental process [35] rheometry Signal filtering and data processing for laser * [99] robot Evol. by gen. prog. of a spatial * juggling cntr. alg. [189] - Evol. of autonomous * cntr. architectures [95] Terrain flattening by autonomous * A gen. prog. appl. <ref> [181] </ref> robotic Evolving co-operation in autonomous * syst. [188] robotics Putting INK into a BIRo: A discussion of problem domain knowledge for evol. * [226] robots Automatic prog. of * using gen. prog. ming [185] routines Evolving visual * [43] - Microbehaviors and dynamical syst. : Economic * as emergent properties
Reference: [182] <author> Richard J. Hampo, Bruce D. Bryant, and Kenneth A. Marko. </author> <title> IC engine misfire detection algorithm generation using genetic programming. </title> <booktitle> In Proceedings of the Second European Congress on Intelligent Techniques and Soft Computing (EUFIT'94), </booktitle> <volume> volume 3, </volume> <pages> pages 1674-1578, </pages> <address> Aachen (Germany), 20.-23. </address> <month> September </month> <year> 1994. </year> <note> ELITE-Foundation. ga94aHampo. </note>
Reference-contexts: random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, <ref> [35, 182] </ref> filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic <p> in gen. prog. [60] Scalable learning in gen. prog. using automatic func tion * [242] dendritic Gen. generation of * trees" for image classi fication [100] design Detector * by gen. prog. for automated border definition in cardiac magnetic resonance images [30] - Gen. prog. appl. to neural network * <ref> [182] </ref> detection IC engine misfire * alg. generation using gen. prog. [150] detector Automated learning of a * for ff-helices in pro tein sequences via gen. prog. [68] Automated learning of a * for the cores of ff-helices in protein sequences via gen. prog. [100] * design by gen. prog. for <p> process for data * and for solving problems using automatically defined functions [194] Cellular* as a graph grammar [31] Cellular* of gen. neural networks [21] Neural network synthesis using cellular * and the GA [52] - Non-linear gen. process for data * and for solving problems using automatically defined functions <ref> [182] </ref> engine IC * misfire detection alg. generation using gen. prog. [75] enrichment The effect of pop. * in gen. prog. [49] entities A non-linear gen. process for problem solving using spontaneously emergent self-replicating and self improving * [53] - Non-linear gen. process for problem solving using spon taneously emergent self-replicating <p> - Appl. of the GA to automatic prog. * [154] Automatic* of prog. for crawling and walking [170] Criticism, culture, and the automatic * of artworks [224] - Gen. * of both the weights and architecture for a neural network [242] - Gen. * of "dendritic trees" for image classification <ref> [182] </ref> - IC engine misfire detection alg. * using gen. prog. [197, 199] The automatic * of plans for a mobile robot via gen. prog. with automatically defined functions [200] The gen. planner The automatic * of plans for a mobile robot via genetic prog. with automatically defined func tions [198] <p> search with a * variable length Rep. : Gen. prog. , simulated annealing and hill climbing [121, 37] high-level Coevolving * Rep. [87, 38] hill climbing Prog. search with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and * [89, 33] hill-climbing Gen. prog. with local * <ref> [182] </ref> IC engine misfire detection alg. generation using gen. prog. [230, 22] identification A hierarchical gen. syst. for symbolic function * [205] An adaptive function * syst. [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. * [34] Solving* <p> GA based on structu red Rep. [176] methods Appl. of search * to sch. problem in plastics forming plant: A binary Rep. appr. [43] Microbehaviors and dynamical syst. : Economic rou tines as emergent properties of adaptive syst. s [153] minimal Gen. prog. of * neural nets using Occam's razor <ref> [182] </ref> misfire IC engine * detection alg. generation using gen. prog. [216] mobile robot Evol. of subsumption architecture that perform a wall following task for an autonomous * via gen. prog. [197, 199] The automatic generation of plans for a * via gen. prog. with automatically defined functions [200] The gen.
Reference: [183] <author> Philippe Collard and J.-L. Segapeli. </author> <title> Using a double-based genetic algorithm on a population of computer programs. </title> <editor> In ?, editor, </editor> <booktitle> Proceedings of the 6th IEEE Conference on Tools with Artificial Intelligence (TAI'94), </booktitle> <pages> pages 418-424, </pages> <address> New Orleans, LA, 6.-9. November 1994. </address> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> CA. y(EEA 216/95) ga94bCollard. </address>
Reference-contexts: 60, 9, 213, 214, 215, 41, 216, 120] 114, 115, 105, 106, 116, 117, 118] 3.10 Geographical index The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France <ref> [30, 31, 29, 179, 149, 183, 21] </ref> * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, <p> gen. prog. for the general job shop problem [98] * gen. prog. for on-line prediction in changing environ ments [178] distributive Learning * reactive strategies by gen. prog. for the general job shop problem [188] domain Putting INK into a BIRo: A discussion of problem * knowledge for evol. robotics <ref> [183] </ref> double-based Using a * GA on a pop. of computer prog. [85] Dynamic training subset sel. for supervised learning in gen. prog. [72] dynamical Appl. of gen. prog. in analyzing multiple steady states of * syst. [237, 128] Interactive evol. of * syst. [43] - Microbehaviors and * syst. : <p> Non-linear gen. process for use with * co-evolving pop. [116] pool The mating * A testbed for experiments in the evol. of symbol syst. [81] population On the use of a directed acyclic graph to represent a * of computer prog. [75] The effect of * enrichment in gen. prog. <ref> [183] </ref> Using a double-based GA on a * of computer prog. [206] populations Cart centering and broom balancing by gen. breeding * of cntr. strategy prog. [218] - Gen. breeding * of computer prog. to solve problems in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding *
Reference: [184] <author> Peter Danielson. </author> <booktitle> Artificial morality and genetic programming. In ?, editor, Proceedings of the 7th Annual Cognitive Science Conference, </booktitle> <address> page ?, Vancouver (Canada), 11.-12. </address> <month> February </month> <year> 1994. </year> ? <note> y(prog) ga94aDanielson. </note>
Reference-contexts: 183, 21, 89, 81, 210, 244, 190, 19, 23, 174, 212, 60, 9, 213, 214, 215, 41, 216, 120] 114, 115, 105, 106, 116, 117, 118] 3.10 Geographical index The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada <ref> [64, 184] </ref> * Denmark [129] * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, <p> network [41] Architecture-altering operations for evolving the architecture of a multipart prog. in gen. prog. [189] architectures Evol. of autonomous robot cntr. * [192] artificial Artificial embryology: The gen. prog. of an * embryo [192] * embryology: The gen. prog. of an artificial embryo [14] * evol. for computer graphics <ref> [184] </ref> * morality and gen. prog. [25] On the origin of effective procedures by means of * sel. [223] artificial intelligence A gen. appr. to * [218] - Gen. breeding pop. of computer prog. to solve problems in * [170] artworks Criticism, culture, and the automatic genera tion of * [102] <p> 222] modeling A gen. appr. to econometric * [238, 20] models Interactive evol. of equations for procedural * [245] Learning mental * [149] modular Gen. synthesis of * neural networks [177, 44] monitoring Gen. prog. to learn an agent's * stra tegy [63] Learning* strategies: a difficult gen. prog. appl. <ref> [184] </ref> morality Artificial * and gen. prog. [168] motion An evolved vision-based behavioral model of coordinated group * [41] multipart Architecture-altering operations for evolving the architecture of a * prog. in gen. prog. [104] multi-part Evolving the architecture of a * prog. in gen. prog. [134] multiplexer A hierarchical appr. to
Reference: [185] <author> Michael Patrick Johnson, Pattie Maes, and Trevor Darrell. </author> <title> Evolving visual routines. </title> <editor> In Rodney Brooks and Pattie Maes, editors, </editor> <booktitle> Artificial Life IV, </booktitle> <pages> pages 198-209, </pages> <publisher> MIT, </publisher> <address> Cambridge, MA, 6.-8. July 1994. </address> <publisher> MIT Press. y(News/Tufts) ga94aMPJohnson. </publisher>
Reference-contexts: prog. paradigm [157] * a sort: Lessons in gen. prog. [181] * co-operation in autonomous robotic syst. [113] * data structures using gen. prog. [8] * images [104] * the architecture of a multi-part prog. in gen. prog. [118] * turing-complete prog. for a register machine with self modifying code <ref> [185] </ref> * visual routines [111] Strongly typed gen. prog. in * cooperation strategies [73] execution Experiments with a coroutine * model for gen. prog. [163] experimental An * perspective on gen. prog. [73] Experiments with a coroutine execution model for gen. prog. [116] The mating pool: A testbed for * in <p> Evol. of autonomous * cntr. architectures [95] Terrain flattening by autonomous * A gen. prog. appl. [181] robotic Evolving co-operation in autonomous * syst. [188] robotics Putting INK into a BIRo: A discussion of problem domain knowledge for evol. * [226] robots Automatic prog. of * using gen. prog. ming <ref> [185] </ref> routines Evolving visual * [43] - Microbehaviors and dynamical syst. : Economic * as emergent properties of adaptive syst. s [82] roving The difficulty of * eyes [64] rule Gen. prog. for the search of a new learning * for neural networks [80] rules Learning and upgrading * for an <p> II * [65] virtual reality A gen. prog. appl. in * [168] vision-based An evolved * behavioral model of coordi nated group motion <ref> [185] </ref> visual Evolving * routines [154] walking Automatic generation of prog. for crawling and * [216] wall following task Evol. of subsumption architecture that perform a * for an autonomous mobile robot via gen. prog. [117] ways Two * of discovering the size and shape of a com puter prog. to
Reference: [186] <author> Simon Raik and Bohdan Durnota. </author> <title> The evolution of sporting strategies. </title> <editor> In Russel J. Stonier and Xing Huo Yu, editors, </editor> <booktitle> Complex Systems: Mechanisms of Adaptation, </booktitle> <pages> pages 85-92. </pages> <publisher> IOS Press and OHmsha, </publisher> <address> Amsterdam, 1994. y(Langdon/bib) ga94aRaik. </address>
Reference-contexts: 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, <ref> [186] </ref> system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table gives references to the contri butions published annually. 1981, <p> using GAs and gen. prog. [129] The computer Zoo - * in a box [116] The mating pool: A testbed for experiments in the * of symbol syst. [108] The* of agents that build mental models and create simple plans using gen. prog. [57] The* of evolvability in gen. prog. <ref> [186] </ref> The* of sporting strategies [120] evolutionarily Spontaneous emergence of self replicating and * self-improving computer prog. [169] Evolutionary learning of predatory behaviors based on structured classifiers [187] * learning strategies [188] Putting INK into a BIRo: A discussion of problem do main knowledge for * robotics [175] The* induction of <p> of a * robot juggling cntr. alg. [120] Spontaneous emergence of self-replicating and evol. arily self-improving computer prog. [49] spontaneously A non-linear gen. process for problem solving using * emergent self-replicating and self-improving en tities [53] - Non-linear gen. process for problem solving using * emergent self-replicating and self-improving entities <ref> [186] </ref> sporting The evol. of * strategies [74] Stack-based gen. prog. [72] steady states Appl. of gen. prog. in analyzing mul tiple * of dynamical syst. [130] Steerable Gennets The gen. prog. of steerable be haviors in Gennets [130] - Steerable Gennets The gen. prog. of * behaviors in Gennets [101] <p> for broom balancing 24 [179] Learning distr. reactive * by gen. prog. for the general job shop problem [178] Learning distributive reactive * by gen. prog. for the general job shop problem [63] Learning monitoring * a difficult gen. prog. appl. [111] Strongly typed gen. prog. in evolving cooperation * <ref> [186] </ref> The evol. of sporting * [206] strategy Cart centering and broom balancing by gen. breeding pop. of cntr. * prog. [177, 44] - Gen. prog. to learn an agent's monitoring * [203] - Meta-level * learning for GA based on structured Rep. [28] Strongly typed gen. prog. [111] * typed
Reference: [187] <author> Richard S. Forsyth. </author> <title> Evolutionary learning strategies. </title> <editor> In Richard S. Forsyth and Roy Rada, editors, </editor> <booktitle> Machine Learning Applications in Expert Systems and Information Retrieval, </booktitle> <pages> pages 78-95. </pages> <publisher> Ellis Horwood, Ltd., </publisher> <address> Chichester (UK), </address> <year> 1986. </year> <month> ga:Forsyth86. </month>
Reference-contexts: simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, <ref> [187, 44, 158] </ref> genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, <p> [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table gives references to the contri butions published annually. 1981, [16] 1986, <ref> [187, 24] </ref> 1989, [217] 51, 207, 54, 55] 127, 123, 134, 223, 224, 46, 14, 129, 130, 191] 225, 226, 10, 227, 228, 136, 48, 49, 11, 39, 47, 53, 52, 163, 1993, [177, 44, 29, 179, 148, 36, 17, 168, 132, 152, 208, 229, 43, 28, 153, 35, 18, 37, <p> syst. [108] The* of agents that build mental models and create simple plans using gen. prog. [57] The* of evolvability in gen. prog. [186] The* of sporting strategies [120] evolutionarily Spontaneous emergence of self replicating and * self-improving computer prog. [169] Evolutionary learning of predatory behaviors based on structured classifiers <ref> [187] </ref> * learning strategies [188] Putting INK into a BIRo: A discussion of problem do main knowledge for * robotics [175] The* induction of subroutines [57] evolvability The evol. of * in gen. prog. [168] evolved An * vision-based behavioral model of coordi nated group motion [41] evolving Architecture-altering operations for <p> [68] Automated* of a detector for the cores of ff-helices in protein sequences via gen. prog. [85] Dynamic training subset sel. for supervised * in gen. prog. [62] - Evol. of mapmaking: * planning, and memory using gen. prog. [169] - Evol. * of predatory behaviors based on structured classifiers <ref> [187] </ref> - Evol. * strategies [64] - Gen. prog. for the search of a new * rule for neural networks [203] - Meta-level strategy * for GA based on structured Rep. [80] * and upgrading rules for an OCR syst. using gen. prog. <p> Stock price time series prediction using gen. prog. [29] strategies Apprentissage de * locales pour architechtu res reactives distribuees par prog. mation genetique [11, 39] strategies Evol. of food foraging * for the Caribbean Anolis lizard using gen. prog. [94] - Evol. of trade * using GAs and gen. prog. <ref> [187] </ref> - Evol. learning * [219, 207] - Gen. breeding of non-linear opt. cntr. * for broom balancing 24 [179] Learning distr. reactive * by gen. prog. for the general job shop problem [178] Learning distributive reactive * by gen. prog. for the general job shop problem [63] Learning monitoring *
Reference: [188] <author> A. P. Fraser and J. R. </author> <title> Rush. Putting INK into a BIRo: A discussion of problem domain knowledge for evolutionary robotics. </title> <editor> In ?, editor, </editor> <booktitle> Proceedings of the Workshop on Artificial Intelligence and Simulation of Behaviour Workshop on Evolutionary Computing, volume 1, </booktitle> <address> page ?, ?, April 1994. ? y(Langdon/bib) ga94aFraser. </address>
Reference-contexts: [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, <ref> [198, 199, 188, 189, 21] </ref> autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, <p> * based on struc tured classifiers 17 18 [130] - Steerable Gennets The gen. prog. of steerable * in Gennets [176] binary Appl. of search methods to sch. problem in plas tics forming plant: A * Rep. appr. [97] birds Concurrent evol. of territory-defining behavior in * using gen. prog. <ref> [188] </ref> BIRo Putting INK into a * A discussion of problem do main knowledge for evol. robotics [134] Boolean A hierarchical appr. to learning the * mul tiplexer function [125] - Gen. synthesis of * neural networks with a cell rewri ting developmental process [100] border Detector design by gen. prog. <p> learning via automatic * of facilitating functions as appl. to a problem of symbolic syst. ident. [159] Simultaneous* of detectors and a way of using the detectors via gen. prog. [152] Simultaneous* of reusable detectors and subroutines using gen. prog. [155] discrimination Gen. prog. for feature discovery and image * <ref> [188] </ref> discussion Putting INK into a BIRo: A * of problem domain knowledge for evol. robotics [27] Diskreten Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beispiel des * Quadratischen Layoutproblems [29] distribuees Apprentissage de strategies locales pour architechtures reactives * par prog. mation genetique [179] distributed Learning * reactive <p> locales pour architechtures reactives * par prog. mation genetique [179] distributed Learning * reactive strategies by gen. prog. for the general job shop problem [98] * gen. prog. for on-line prediction in changing environ ments [178] distributive Learning * reactive strategies by gen. prog. for the general job shop problem <ref> [188] </ref> domain Putting INK into a BIRo: A discussion of problem * knowledge for evol. robotics [183] double-based Using a * GA on a pop. of computer prog. [85] Dynamic training subset sel. for supervised learning in gen. prog. [72] dynamical Appl. of gen. prog. in analyzing multiple steady states of <p> agents that build mental models and create simple plans using gen. prog. [57] The* of evolvability in gen. prog. [186] The* of sporting strategies [120] evolutionarily Spontaneous emergence of self replicating and * self-improving computer prog. [169] Evolutionary learning of predatory behaviors based on structured classifiers [187] * learning strategies <ref> [188] </ref> Putting INK into a BIRo: A discussion of problem do main knowledge for * robotics [175] The* induction of subroutines [57] evolvability The evol. of * in gen. prog. [168] evolved An * vision-based behavioral model of coordi nated group motion [41] evolving Architecture-altering operations for * the arc hitecture <p> language * by evol. of deterministic push down automata using gen. prog. [67] Regular language * with gen. prog. [175] The evol. * of subroutines [106] inductive logic An adaptive * prog. syst. using gen. prog. ming [71] information The use of gen. prog. to build queries for * retrieval <ref> [188] </ref> INK Putting * into a BIRo: A discussion of problem domain knowledge for evol. robotics [237, 128] Interactive evol. of dynamical syst. [238, 20] * evol. of equations for procedural models [227] inter-twined spiral problem A gen. appr. to the truck backer upper problem and the * [212] iteration-performing Automated <p> gen. prog. [179] job shop problem Learning distr. reactive strategies by gen. prog. for the general * [178] Learning distributive reactive strategies by gen. prog. for the general * [17, 18] joy The * of gen. prog. [99] juggling Evol. by gen. prog. of a spatial robot * cntr. alg. <ref> [188] </ref> knowledge Putting INK into a BIRo: A discussion of problem domain * for evol. robotics [201] Koza Geneettinen ohjelmointi [Gen. prog. by * [246] - Satunnaistajan etsinta [Gen. prog. random number generator by * [102] language Context-free * induction by evol. of determi nistic push-down automata using gen. prog. [78] <p> Appl. of search methods to sch. * in plastics forming plant: A binary Rep. appr. [244] - Gen. prog. , indexed memory, the halting * and other curiosities [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a * of symbolic syst. ident. <ref> [188] </ref> Putting INK into a BIRo: A discussion of * domain knowledge for evol. robotics [117] Two ways of discovering the size and shape of a com puter prog. to solve a * [49] problem solving A non-linear gen. process for * using spontaneously emergent self-replicating and self-improving en tities [53] <p> detector for ff-helices in * via gen. prog. [68] Automated learning of a detector for the cores of ff helices in * via gen. prog. [70] Recognizing patterns in * using iteration-performing calculations in gen. prog. [102] push-down Context-free language induction by evol. of deterministic * automata using gen. prog. <ref> [188] </ref> Putting INK into a BIRo: A discussion of problem do main knowledge for evol. robotics [27] Quadratischen Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beispiel des Diskreten * Layoutproblems [71] queries The use of gen. prog. to build * for info ret rieval [246] random number generator Satunnaistajan <p> process [35] rheometry Signal filtering and data processing for laser * [99] robot Evol. by gen. prog. of a spatial * juggling cntr. alg. [189] - Evol. of autonomous * cntr. architectures [95] Terrain flattening by autonomous * A gen. prog. appl. [181] robotic Evolving co-operation in autonomous * syst. <ref> [188] </ref> robotics Putting INK into a BIRo: A discussion of problem domain knowledge for evol. * [226] robots Automatic prog. of * using gen. prog. ming [185] routines Evolving visual * [43] - Microbehaviors and dynamical syst. : Economic * as emergent properties of adaptive syst. s [82] roving The difficulty
Reference: [189] <author> R. Ghanea-Hercock and A. P. Fraser. </author> <title> Evolution of autonomous robot control architectures. </title> <editor> In ?, editor, </editor> <booktitle> Proceedings of the Workshop on Artificial Intelligence and Simulation of Behaviour Workshop on Evolutionary Computing, volume 1, </booktitle> <address> page ?, ?, April 1994. ? y(Langdon/bib) ga94aGhaneaHercock. </address> <month> 32 </month>
Reference-contexts: [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, <ref> [198, 199, 188, 189, 21] </ref> autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, <p> wall following task for an autonomous mobile robot via gen. prog. [104] Evolving the * of a multi-part prog. in gen. prog. [224] - Gen. generation of both the weights and * for a neural network [41] Architecture-altering operations for evolving the architecture of a multipart prog. in gen. prog. <ref> [189] </ref> architectures Evol. of autonomous robot cntr. * [192] artificial Artificial embryology: The gen. prog. of an * embryo [192] * embryology: The gen. prog. of an artificial embryo [14] * evol. for computer graphics [184] * morality and gen. prog. [25] On the origin of effective procedures by means of <p> mobile ro bot via gen. prog. with * defined functions [200] The gen. planner The automatic generation of plans for a mobile robot via genetic prog. with * defined functions [216] autonomous Evol. of subsumption architecture that perform a wall following task for an * mobile robot via gen. prog. <ref> [189] </ref> - Evol. of * robot cntr. architectures [181] Evolving co-operation in * robotic syst. [95] Terrain flattening by * robot: A gen. prog. appl. [228] back A gen. appr. to finding a cntr. to * up a tractor trailed truck [16] Beagle A Darwinian appr. to pattern recognition [97] behavior <p> by evol. of determi nistic push-down automata using gen. prog. [206] control Cart centering and broom balancing by gen. breeding pop. of * strategy prog. [166] - Evol. and coevol. of computer prog. to * independently-acting agents [99] - Evol. by gen. prog. of a spatial robot juggling * alg. <ref> [189] </ref> - Evol. of autonomous robot * architectures [219, 207] - Gen. breeding of non-linear opt. * strategies for broom balancing [195] - Gen. prog. : A new paradigm for * and analysis [228] controller A gen. appr. to finding a * to back up a tractor-trailed truck [181] co-operation Evolving <p> using gen. prog. [123] - Gen. * and co-evol. of computer prog. [237, 128] Interactive* of dynamical syst. [238, 20] Interactive* of equations for procedural models [166] * and coevol. of computer prog. to cntr. independently acting agents [99] * by gen. prog. of a spatial robot juggling cntr. alg. <ref> [189] </ref> * of autonomous robot cntr. architectures [93] * of damage-immune prog. using gen. prog. [11, 39] * of food foraging strategies for the Caribbean Anolis lizard using gen. prog. [62] * of mapmaking: Learning, planning, and memory using gen. prog. [216] * of subsumption architecture that perform a wall fol <p> * Prog. [152] Simultaneous discovery of * detectors and subroutines using gen. prog. [125] rewriting Gen. synthesis of Boolean neural networks with a cell * developmental process [35] rheometry Signal filtering and data processing for laser * [99] robot Evol. by gen. prog. of a spatial * juggling cntr. alg. <ref> [189] </ref> - Evol. of autonomous * cntr. architectures [95] Terrain flattening by autonomous * A gen. prog. appl. [181] robotic Evolving co-operation in autonomous * syst. [188] robotics Putting INK into a BIRo: A discussion of problem domain knowledge for evol. * [226] robots Automatic prog. of * using gen. prog.
Reference: [190] <author> Hitoshi Iba, Hugo de Garis, and Taisuke Sato. </author> <title> Advances in genetic programming. </title> <editor> In Kinnear, Jr. </editor> <title> [7], chapter 12. Genetic programming using minimum description length principle, </title> <note> page ? y(Koza) ga94dIba. </note>
Reference: [191] <author> Hugo de Garis. </author> <title> Genetic programming. In Branko Soucek, editor, Neural and Intelligent Systems Integration, chapter 8. </title> <publisher> Joh Wiley & Sons, </publisher> <address> New York, 1991. y ga:deGaris91d. </address>
Reference: [192] <author> Hugo de Garis. </author> <booktitle> Artificial embryology: The genetic programming of an artificial embryo. In Soucek and the IRIS Group [248], chapter 14. </booktitle> <address> y ga:deGaris92a. </address>
Reference-contexts: via gen. prog. [104] Evolving the * of a multi-part prog. in gen. prog. [224] - Gen. generation of both the weights and * for a neural network [41] Architecture-altering operations for evolving the architecture of a multipart prog. in gen. prog. [189] architectures Evol. of autonomous robot cntr. * <ref> [192] </ref> artificial Artificial embryology: The gen. prog. of an * embryo [192] * embryology: The gen. prog. of an artificial embryo [14] * evol. for computer graphics [184] * morality and gen. prog. [25] On the origin of effective procedures by means of * sel. [223] artificial intelligence A gen. appr. <p> in gen. prog. [224] - Gen. generation of both the weights and * for a neural network [41] Architecture-altering operations for evolving the architecture of a multipart prog. in gen. prog. [189] architectures Evol. of autonomous robot cntr. * <ref> [192] </ref> artificial Artificial embryology: The gen. prog. of an * embryo [192] * embryology: The gen. prog. of an artificial embryo [14] * evol. for computer graphics [184] * morality and gen. prog. [25] On the origin of effective procedures by means of * sel. [223] artificial intelligence A gen. appr. to * [218] - Gen. breeding pop. of computer prog. to <p> [237, 128] Interactive evol. of * syst. [43] - Microbehaviors and * syst. : Economic routines as emergent properties of adaptive syst. s [220, 221, 222] econometric A gen. appr. to * modeling [43] Economic Microbehaviors and dynamical syst. : * rou tines as emergent properties of adaptive syst. s <ref> [192] </ref> embryo Artificial embryology: The gen. prog. of an artificial * [192] embryology Artificial * The gen. prog. of an artificial embryo [120] emergence Spontaneous * of self-replicating and evol. arily self-improving computer prog. [49] emergent A non-linear gen. process for problem solving using spontaneously * self-replicating and self-improving entities [53] <p> * syst. : Economic routines as emergent properties of adaptive syst. s [220, 221, 222] econometric A gen. appr. to * modeling [43] Economic Microbehaviors and dynamical syst. : * rou tines as emergent properties of adaptive syst. s <ref> [192] </ref> embryo Artificial embryology: The gen. prog. of an artificial * [192] embryology Artificial * The gen. prog. of an artificial embryo [120] emergence Spontaneous * of self-replicating and evol. arily self-improving computer prog. [49] emergent A non-linear gen. process for problem solving using spontaneously * self-replicating and self-improving entities [53] - Non-linear gen. process for problem solving using spon taneously *
Reference: [193] <author> Frederic C. Gruau. </author> <title> Advances in genetic programming. </title> <editor> In Kinnear, Jr. </editor> <booktitle> [7], chapter 24. Genetic micro programming of neural networks, </booktitle> <institution> page ? y(Koza) ga94aGruau. </institution>
Reference-contexts: introduction, [213] L-systems, [86] learning, [214] locality, [66] machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, <ref> [64, 193] </ref> performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector,
Reference: [194] <author> Frederic C. Gruau. </author> <title> Cellular encoding as a graph grammar. </title> <editor> In ?, editor, </editor> <booktitle> Proceedings of the International Conference on Grammatical Inference: Theory, Applications and Alternatives, </booktitle> <volume> volume Digest No. 1993/092, </volume> <pages> pages 17/1-17/10, </pages> ?, <address> 22.-23. </address> <month> April </month> <year> 1993. </year> ? <note> y(Koza) ga:Gruau93b. </note>
Reference-contexts: by gen. breeding pop. of cntr. strategy prog. [109] Causality in gen. prog. [125] cell Gen. synthesis of Boolean neural networks with a * rewriting developmental process [32, 15] cellular Adding learning to the * development process: a comparative study [21] Neural network synthesis using * encoding and the GA <ref> [194] </ref> * encoding as a graph grammar [31] * encoding of gen. neural networks [98] changing Distr. gen. prog. for on-line prediction in * environments [164] chromosomes Differentiable * The gen. prog. of switchable shape-genes [92] Circuit synthesis through gen. prog. [242] classification Gen. generation of "dendritic trees" for image * <p> entities [53] - Non-linear gen. process for problem solving using spon taneously * self-replicating and self-improving entities [43] emergent properties Microbehaviors and dynamical syst. : Economic routines as * of adaptive syst. s [48] encoding A non-linear gen. process for data * and for solving problems using automatically defined functions <ref> [194] </ref> Cellular* as a graph grammar [31] Cellular* of gen. neural networks [21] Neural network synthesis using cellular * and the GA [52] - Non-linear gen. process for data * and for solving problems using automatically defined functions [182] engine IC * misfire detection alg. generation using gen. prog. [75] enrichment <p> Sel. and * [130] Gennets Steerable * The gen. prog. of steerable be haviors in * [88] Genotype-phenotype-mapping and neutral varia tion A case study in gen. prog. [81] graph On the use of a directed acyclic * to represent a pop. of computer prog. <ref> [194] </ref> graph grammar Cellular encoding as a * [14] graphics Artificial evol. for computer * [168] group An evolved vision-based behavioral model of coordinated * motion [244] halting Gen. prog. , indexed memory, the * problem, and other curiosities [132] harsh Looping as a means to survival: playing Russian roulette in
Reference: [195] <author> Richard J. Hampo. </author> <title> Genetic programming: A new paradigm for control and analysis. </title> <booktitle> In Proceedings of the Winter Annual Meeting of the American Society of Mechanical Engineers, </booktitle> <pages> pages 155-163, </pages> <address> Anaheim, CA, 8.-13. </address> <month> November </month> <year> 1992. </year> <booktitle> ASME, </booktitle> <address> New York. y(EI 043871/93) ga:Hampo92b. </address>
Reference-contexts: syst. s [166] agents Evol. and coevol. of computer prog. to cntr. independently-acting * [177, 44] agent's Gen. prog. to learn an * monitoring strategy [108] agents The evol. of * that build mental models and create simple plans using gen. prog. [239] AI Gen. prog. and * planning syst. <ref> [195] </ref> analysis Gen. prog. : A new paradigm for cntr. and * [72] analyzing Appl. of gen. prog. in * multiple steady states of dynamical syst. [11, 39] Anolis Evol. of food foraging strategies for the Carib bean * lizard using gen. prog. [65] application A gen. prog. * in virtual <p> of * strategy prog. [166] - Evol. and coevol. of computer prog. to * independently-acting agents [99] - Evol. by gen. prog. of a spatial robot juggling * alg. [189] - Evol. of autonomous robot * architectures [219, 207] - Gen. breeding of non-linear opt. * strategies for broom balancing <ref> [195] </ref> - Gen. prog. : A new paradigm for * and analysis [228] controller A gen. appr. to finding a * to back up a tractor-trailed truck [181] co-operation Evolving * in autonomous robotic syst. [111] cooperation Strongly typed gen. prog. in evolving * strategies [168] coordinated An evolved vision-based behavioral <p> improve simulated evol. as an * procedure [25] origin On the * of effective procedures by means of ar tificial sel. [161] paradigm Concept formation and decision tree induc tion using the gen. prog. * [146] Evolving a computer prog. to generate random num bers using the gen. prog. * <ref> [195] </ref> - Gen. prog. : A new * for cntr. and analysis [42] - Gen. prog. : A * for gen. breeding pop. of computer prog. to solve problems [225] The gen. prog. * Gen. breeding pop. of computer prog. to solve problems [138] parasites Co-evolving * improve simulated evol. as
Reference: [196] <author> Simon G. Handley. </author> <title> Advances in genetic programming. </title> <editor> In Kinnear, Jr. </editor> <title> [7], chapter 18. The automatic generation of plans for a mobile robot via genetic programming with automatically defined functions, </title> <note> page ? y(Koza) ga94cHandley. </note>
Reference-contexts: introduction, [213] L-systems, [86] learning, [214] locality, [66] machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, <ref> [196] </ref> selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, <p> [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, <ref> [200, 196] </ref> OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53,
Reference: [197] <author> Simon G. Handley. </author> <title> The automatic generation of plans for a mobile robot via genetic programming with automatically defined functions. </title> <editor> In ?, editor, </editor> <booktitle> Proceedings of the Fifth Workshop on Neural Networks: An International Conference on Computational Intelligence: Neural Networks, Fuzzy Systems, Evolutionary Programming, and Virtual Reality, </booktitle> <address> page ?, ?, ? 1991. ? y(Langdon/bib) ga:Handley91a. </address>
Reference-contexts: folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, <ref> [197] </ref> rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series <p> symbolic syst. ident. [60] Scalable learning in gen. prog. using * function defi nition [200] The gen. planner The* generation of plans for a mobile robot via genetic prog. with automatically defined func tions [198] The gen. planner: The * generation of plans for a mobile robot via genetic prog. <ref> [197, 199] </ref> The* generation of plans for a mobile robot via gen. prog. with automatically defined functions [48] automatically A non-linear gen. process for data enco ding and for solving problems using * defined functions [52] - Non-linear gen. process for data encoding and for sol ving problems using * defined <p> The* generation of plans for a mobile robot via gen. prog. with automatically defined functions [48] automatically A non-linear gen. process for data enco ding and for solving problems using * defined functions [52] - Non-linear gen. process for data encoding and for sol ving problems using * defined functions <ref> [197, 199] </ref> The automatic generation of plans for a mobile ro bot via gen. prog. with * defined functions [200] The gen. planner The automatic generation of plans for a mobile robot via genetic prog. with * defined functions [216] autonomous Evol. of subsumption architecture that perform a wall following task <p> to pattern recognition [161] decision Concept formation and * tree induction using the gen. prog. paradigm [48] defined A non-linear gen. process for data encoding and for solving problems using automatically * functions [52] - Non-linear gen. process for data encoding and for sol ving problems using automatically * functions <ref> [197, 199] </ref> The automatic generation of plans for a mobile ro bot via gen. prog. with automatically * functions [200] The gen. planner The automatic generation of plans for a mobile robot via genetic prog. with automatically * func tions [100] definition Detector design by gen. prog. for automa ted border <p> GAs for solving problems by finding a fit composition of * [52] - Non-linear gen. process for data encoding and for sol ving problems using automatically defined * [158] - Perf. improvement of machine learning via automatic discovery of facilitating * as appl. to a problem of symbolic syst. ident. <ref> [197, 199] </ref> The automatic generation of plans for a mobile ro bot via gen. prog. with automatically defined * [200] The gen. planner The automatic generation of plans for a mobile robot via genetic prog. with automatically defined * [201] Geneettinen ohjelmointi [Gen. prog. by Koza] [146] generate Evolving a computer <p> of prog. for crawling and walking [170] Criticism, culture, and the automatic * of artworks [224] - Gen. * of both the weights and architecture for a neural network [242] - Gen. * of "dendritic trees" for image classification [182] - IC engine misfire detection alg. * using gen. prog. <ref> [197, 199] </ref> The automatic * of plans for a mobile robot via gen. prog. with automatically defined functions [200] The gen. planner The automatic * of plans for a mobile robot via genetic prog. with automatically defined func tions [198] The gen. planner: The automatic * of plans for a mo <p> tines as emergent properties of adaptive syst. s [153] minimal Gen. prog. of * neural nets using Occam's razor [182] misfire IC engine * detection alg. generation using gen. prog. [216] mobile robot Evol. of subsumption architecture that perform a wall following task for an autonomous * via gen. prog. <ref> [197, 199] </ref> The automatic generation of plans for a * via gen. prog. with automatically defined functions [200] The gen. planner The automatic generation of plans for a * via genetic prog. with automatically defined functions [198] The gen. planner: The automatic generation of plans for a * via genetic prog. <p> of plans for a mobile robot via genetic prog. with automatically defined functions [198] The gen. * The automatic generation of plans for a mobile robot via genetic prog. [62] planning Evol. of mapmaking: Learning, * and me mory using gen. prog. [239] - Gen. prog. and AI * syst. <ref> [197, 199] </ref> plans The automatic generation of * for a mobile robot via gen. prog. with automatically defined functions [108] The evol. of agents that build mental models and create simple * using gen. prog. [200] The gen. planner The automatic generation of * for a mobile robot via genetic prog.
Reference: [198] <author> Simon G. Handley. </author> <title> The genetic planner: The automatic generation of plans for a mobile robot via genetic programming. </title> <booktitle> In Proceedings IEEE International Symposium on Intelligent Control, </booktitle> <pages> pages 190-195, </pages> <address> Chicago, IL, 25.-27. </address> <month> August </month> <year> 1993. </year> <booktitle> IEEE, </booktitle> <address> New York. y(Koza EI Feb 94 P59810/94) ga:Handley93b. </address>
Reference-contexts: [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, <ref> [198, 199] </ref> population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot <p> [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, <ref> [198, 199, 188, 189, 21] </ref> autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, <p> improvement of machine learning via * discovery of facilitating functions as appl. to a problem of symbolic syst. ident. [60] Scalable learning in gen. prog. using * function defi nition [200] The gen. planner The* generation of plans for a mobile robot via genetic prog. with automatically defined func tions <ref> [198] </ref> The gen. planner: The * generation of plans for a mobile robot via genetic prog. [197, 199] The* generation of plans for a mobile robot via gen. prog. with automatically defined functions [48] automatically A non-linear gen. process for data enco ding and for solving problems using * defined functions <p> [182] - IC engine misfire detection alg. * using gen. prog. [197, 199] The automatic * of plans for a mobile robot via gen. prog. with automatically defined functions [200] The gen. planner The automatic * of plans for a mobile robot via genetic prog. with automatically defined func tions <ref> [198] </ref> The gen. planner: The automatic * of plans for a mo bile robot via genetic prog. [206] genetically Cart centering and broom balancing by * breeding pop. of cntr. strategy prog. [42] - Gen. prog. : A paradigm for * breeding pop. of computer prog. to solve problems [218] * <p> architecture that perform a wall following task for an autonomous * via gen. prog. [197, 199] The automatic generation of plans for a * via gen. prog. with automatically defined functions [200] The gen. planner The automatic generation of plans for a * via genetic prog. with automatically defined functions <ref> [198] </ref> The gen. planner: The automatic generation of plans for a * via genetic prog. [168] model An evolved vision-based behavioral * of coordi nated group motion [73] Experiments with a coroutine execution * for gen. prog. [220, 221, 222] modeling A gen. appr. to econometric * [238, 20] models Interactive <p> [158] Performance improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. ident. [163] perspective An experimental * on gen. prog. [200] planner The gen. * The automatic generation of plans for a mobile robot via genetic prog. with automatically defined functions <ref> [198] </ref> The gen. * The automatic generation of plans for a mobile robot via genetic prog. [62] planning Evol. of mapmaking: Learning, * and me mory using gen. prog. [239] - Gen. prog. and AI * syst. [197, 199] plans The automatic generation of * for a mobile robot via gen. <p> generation of * for a mobile robot via gen. prog. with automatically defined functions [108] The evol. of agents that build mental models and create simple * using gen. prog. [200] The gen. planner The automatic generation of * for a mobile robot via genetic prog. with automatically defined functions <ref> [198] </ref> The gen. planner: The automatic generation of * for a mobile robot via genetic prog. [176] plant Appl. of search methods to sch. problem in plas tics forming * A binary Rep. appr. [176] plastics forming Appl. of search methods to sch. problem in * plant: A binary Rep. appr.
Reference: [199] <author> Simon G. Handley. </author> <title> The automatic generation of plans for a mobile robot via genetic programming with automatically defined functions. </title> <booktitle> In Proceedings of the 1993 International Simulation Technology Multiconference (SimTec '93), </booktitle> <address> page ?, ?, ? 1993. y(Koza) ga:Handley93c. </address>
Reference-contexts: [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, <ref> [198, 199] </ref> population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot <p> [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, <ref> [198, 199, 188, 189, 21] </ref> autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, <p> symbolic syst. ident. [60] Scalable learning in gen. prog. using * function defi nition [200] The gen. planner The* generation of plans for a mobile robot via genetic prog. with automatically defined func tions [198] The gen. planner: The * generation of plans for a mobile robot via genetic prog. <ref> [197, 199] </ref> The* generation of plans for a mobile robot via gen. prog. with automatically defined functions [48] automatically A non-linear gen. process for data enco ding and for solving problems using * defined functions [52] - Non-linear gen. process for data encoding and for sol ving problems using * defined <p> The* generation of plans for a mobile robot via gen. prog. with automatically defined functions [48] automatically A non-linear gen. process for data enco ding and for solving problems using * defined functions [52] - Non-linear gen. process for data encoding and for sol ving problems using * defined functions <ref> [197, 199] </ref> The automatic generation of plans for a mobile ro bot via gen. prog. with * defined functions [200] The gen. planner The automatic generation of plans for a mobile robot via genetic prog. with * defined functions [216] autonomous Evol. of subsumption architecture that perform a wall following task <p> to pattern recognition [161] decision Concept formation and * tree induction using the gen. prog. paradigm [48] defined A non-linear gen. process for data encoding and for solving problems using automatically * functions [52] - Non-linear gen. process for data encoding and for sol ving problems using automatically * functions <ref> [197, 199] </ref> The automatic generation of plans for a mobile ro bot via gen. prog. with automatically * functions [200] The gen. planner The automatic generation of plans for a mobile robot via genetic prog. with automatically * func tions [100] definition Detector design by gen. prog. for automa ted border <p> GAs for solving problems by finding a fit composition of * [52] - Non-linear gen. process for data encoding and for sol ving problems using automatically defined * [158] - Perf. improvement of machine learning via automatic discovery of facilitating * as appl. to a problem of symbolic syst. ident. <ref> [197, 199] </ref> The automatic generation of plans for a mobile ro bot via gen. prog. with automatically defined * [200] The gen. planner The automatic generation of plans for a mobile robot via genetic prog. with automatically defined * [201] Geneettinen ohjelmointi [Gen. prog. by Koza] [146] generate Evolving a computer <p> of prog. for crawling and walking [170] Criticism, culture, and the automatic * of artworks [224] - Gen. * of both the weights and architecture for a neural network [242] - Gen. * of "dendritic trees" for image classification [182] - IC engine misfire detection alg. * using gen. prog. <ref> [197, 199] </ref> The automatic * of plans for a mobile robot via gen. prog. with automatically defined functions [200] The gen. planner The automatic * of plans for a mobile robot via genetic prog. with automatically defined func tions [198] The gen. planner: The automatic * of plans for a mo <p> tines as emergent properties of adaptive syst. s [153] minimal Gen. prog. of * neural nets using Occam's razor [182] misfire IC engine * detection alg. generation using gen. prog. [216] mobile robot Evol. of subsumption architecture that perform a wall following task for an autonomous * via gen. prog. <ref> [197, 199] </ref> The automatic generation of plans for a * via gen. prog. with automatically defined functions [200] The gen. planner The automatic generation of plans for a * via genetic prog. with automatically defined functions [198] The gen. planner: The automatic generation of plans for a * via genetic prog. <p> of plans for a mobile robot via genetic prog. with automatically defined functions [198] The gen. * The automatic generation of plans for a mobile robot via genetic prog. [62] planning Evol. of mapmaking: Learning, * and me mory using gen. prog. [239] - Gen. prog. and AI * syst. <ref> [197, 199] </ref> plans The automatic generation of * for a mobile robot via gen. prog. with automatically defined functions [108] The evol. of agents that build mental models and create simple * using gen. prog. [200] The gen. planner The automatic generation of * for a mobile robot via genetic prog.
Reference: [200] <author> Simon G. Handley. </author> <title> The genetic planner the automatic generation of plans for a mobile robot via genetic programming with automatically defined functions. </title> <editor> In ?, editor, </editor> <booktitle> Proceedings of the Fifth Workshop on Neural Networks: Academic/Industrial/NASA/Defence, volume SPIE-2204, </booktitle> <pages> pages 73-78, </pages> <address> San Francisco, CA, 7.-10. </address> <month> November </month> <year> 1993. </year> <booktitle> The International Society for Optical Engineering. </booktitle> <address> y(CCA 78847 P59914/94) ga:Handley93d. </address>
Reference-contexts: [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, <ref> [200, 196] </ref> OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, <p> 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, <ref> [200, 216] </ref> robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text <p> * generation of prog. for crawling and walking [226] * prog. of robots using gen. prog. ming [158] - Perf. improvement of machine learning via * discovery of facilitating functions as appl. to a problem of symbolic syst. ident. [60] Scalable learning in gen. prog. using * function defi nition <ref> [200] </ref> The gen. planner The* generation of plans for a mobile robot via genetic prog. with automatically defined func tions [198] The gen. planner: The * generation of plans for a mobile robot via genetic prog. [197, 199] The* generation of plans for a mobile robot via gen. prog. with automatically <p> gen. process for data enco ding and for solving problems using * defined functions [52] - Non-linear gen. process for data encoding and for sol ving problems using * defined functions [197, 199] The automatic generation of plans for a mobile ro bot via gen. prog. with * defined functions <ref> [200] </ref> The gen. planner The automatic generation of plans for a mobile robot via genetic prog. with * defined functions [216] autonomous Evol. of subsumption architecture that perform a wall following task for an * mobile robot via gen. prog. [189] - Evol. of * robot cntr. architectures [181] Evolving co-operation <p> non-linear gen. process for data encoding and for solving problems using automatically * functions [52] - Non-linear gen. process for data encoding and for sol ving problems using automatically * functions [197, 199] The automatic generation of plans for a mobile ro bot via gen. prog. with automatically * functions <ref> [200] </ref> The gen. planner The automatic generation of plans for a mobile robot via genetic prog. with automatically * func tions [100] definition Detector design by gen. prog. for automa ted border * in cardiac magnetic resonance images [136] Hierarchical automatic function * in gen. prog. [60] Scalable learning in gen. <p> and for sol ving problems using automatically defined * [158] - Perf. improvement of machine learning via automatic discovery of facilitating * as appl. to a problem of symbolic syst. ident. [197, 199] The automatic generation of plans for a mobile ro bot via gen. prog. with automatically defined * <ref> [200] </ref> The gen. planner The automatic generation of plans for a mobile robot via genetic prog. with automatically defined * [201] Geneettinen ohjelmointi [Gen. prog. by Koza] [146] generate Evolving a computer prog. to * random num bers using the gen. prog. paradigm [144] Using the GA to * Lisp source <p> * of both the weights and architecture for a neural network [242] - Gen. * of "dendritic trees" for image classification [182] - IC engine misfire detection alg. * using gen. prog. [197, 199] The automatic * of plans for a mobile robot via gen. prog. with automatically defined functions <ref> [200] </ref> The gen. planner The automatic * of plans for a mobile robot via genetic prog. with automatically defined func tions [198] The gen. planner: The automatic * of plans for a mo bile robot via genetic prog. [206] genetically Cart centering and broom balancing by * breeding pop. of cntr. <p> Occam's razor [182] misfire IC engine * detection alg. generation using gen. prog. [216] mobile robot Evol. of subsumption architecture that perform a wall following task for an autonomous * via gen. prog. [197, 199] The automatic generation of plans for a * via gen. prog. with automatically defined functions <ref> [200] </ref> The gen. planner The automatic generation of plans for a * via genetic prog. with automatically defined functions [198] The gen. planner: The automatic generation of plans for a * via genetic prog. [168] model An evolved vision-based behavioral * of coordi nated group motion [73] Experiments with a coroutine <p> [216] perform Evol. of subsumption architecture that * a wall following task for an autonomous mobile robot via gen. prog. 22 [158] Performance improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. ident. [163] perspective An experimental * on gen. prog. <ref> [200] </ref> planner The gen. * The automatic generation of plans for a mobile robot via genetic prog. with automatically defined functions [198] The gen. * The automatic generation of plans for a mobile robot via genetic prog. [62] planning Evol. of mapmaking: Learning, * and me mory using gen. prog. [239] <p> * and me mory using gen. prog. [239] - Gen. prog. and AI * syst. [197, 199] plans The automatic generation of * for a mobile robot via gen. prog. with automatically defined functions [108] The evol. of agents that build mental models and create simple * using gen. prog. <ref> [200] </ref> The gen. planner The automatic generation of * for a mobile robot via genetic prog. with automatically defined functions [198] The gen. planner: The automatic generation of * for a mobile robot via genetic prog. [176] plant Appl. of search methods to sch. problem in plas tics forming * A
Reference: [201] <author> Sauli Harala. </author> <title> Geneettinen ohjelmointi [genetic programming by koza]. </title> <booktitle> In Alander [249], chapter 12, </booktitle> <pages> pages 133-144. </pages> <note> (in Finnish) GA:Harala92. </note>
Reference-contexts: 19, 23, 174, 212, 60, 9, 213, 214, 215, 41, 216, 120] 114, 115, 105, 106, 116, 117, 118] 3.10 Geographical index The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland <ref> [201, 246] </ref> * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, <p> facilitating * as appl. to a problem of symbolic syst. ident. [197, 199] The automatic generation of plans for a mobile ro bot via gen. prog. with automatically defined * [200] The gen. planner The automatic generation of plans for a mobile robot via genetic prog. with automatically defined * <ref> [201] </ref> Geneettinen ohjelmointi [Gen. prog. by Koza] [146] generate Evolving a computer prog. to * random num bers using the gen. prog. paradigm [144] Using the GA to * Lisp source code to solve the priso ner's dilemma [140] generation A Rep. for the adaptive * of simple sequen tial prog. <p> * [178] Learning distributive reactive strategies by gen. prog. for the general * [17, 18] joy The * of gen. prog. [99] juggling Evol. by gen. prog. of a spatial robot * cntr. alg. [188] knowledge Putting INK into a BIRo: A discussion of problem domain * for evol. robotics <ref> [201] </ref> Koza Geneettinen ohjelmointi [Gen. prog. by * [246] - Satunnaistajan etsinta [Gen. prog. random number generator by * [102] language Context-free * induction by evol. of determi nistic push-down automata using gen. prog. [78] - Turing completeness in the * of gen. prog. with in dexed memory [35] laser Signal <p> using spontaneously emergent self-replicating and self-improving entities [54] * gen. process for use with co-evolving pop. [55] * gen. process for use with plural co-evolving pop. [153] Occam's Gen. prog. of minimal neural nets using * razor [80] OCR Learning and upgrading rules for an * syst. using gen. prog. <ref> [201] </ref> ohjelmointi Geneettinen * [Gen. prog. by Koza] [98] on-line Distr. gen. prog. for * prediction in changing environments [217] operating Hierarchical GAs * on pop. of computer prog. [41] operations Architecture-altering * for evolving the arc hitecture of a multipart prog. in gen. prog. [219, 207] optimal Gen. breeding of <p> de strategies locales pour architechtures reactives distribuees par * [27] Programmierung Verbesserung des Simulated Annealing unter Anwendung Genetischer * am Beispiel des Diskreten Quadratischen Layoutproblems [226] programming Automatic * of robots using gen. prog. [11, 39] - Evol. of food foraging strategies for the Caribbean Anolis lizard using gen. * <ref> [201] </ref> - Geneettinen ohjelmointi [Gen. * by Koza] [86] - Gen. L-syst. * [9] - Gen. * II, Automatic Discovery of Reusable Prog. [13] - Gen. * with C++ [19] - Gen. prog. as a means for * computers by nat. sel. [10] - Gen.
Reference: [202] <author> Thang Nguyen and Thomas Huang. </author> <title> Advances in genetic programming. </title> <editor> In Kinnear, Jr. </editor> <title> [7], chapter 22. Evolvable 3D modeling for model-based object recognition systems, </title> <note> page ? y(Koza) ga94aNguyen. </note>
Reference-contexts: [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, <ref> [202, 172] </ref> planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic
Reference: [203] <author> Hitoshi Iba and Taisuke Sato. </author> <title> Meta-level strategy learning for GA based on structured representation. </title> <editor> In ?, editor, </editor> <booktitle> Proceedings of the Second Pacific Rim International Conference on Artificial Intelligence, </booktitle> <pages> pages 548-554, </pages> ?, ? <year> 1992. </year> ? <note> y(Koza) ga:HIba92c. </note>
Reference-contexts: sel. for supervised * in gen. prog. [62] - Evol. of mapmaking: * planning, and memory using gen. prog. [169] - Evol. * of predatory behaviors based on structured classifiers [187] - Evol. * strategies [64] - Gen. prog. for the search of a new * rule for neural networks <ref> [203] </ref> - Meta-level strategy * for GA based on structured Rep. [80] * and upgrading rules for an OCR syst. using gen. prog. <p> of artificial sel. [62] memory Evol. of mapmaking: Learning, planning, and * using gen. prog. [78] - Turing completeness in the language of gen. prog. with indexed * [245] mental Learning * models [108] mental models The evol. of agents that build * and create simple plans using gen. prog. <ref> [203] </ref> Meta-level strategy learning for GA based on structu red Rep. [176] methods Appl. of search * to sch. problem in plastics forming plant: A binary Rep. appr. [43] Microbehaviors and dynamical syst. : Economic rou tines as emergent properties of adaptive syst. s [153] minimal Gen. prog. of * neural <p> * in gen. prog. [81] represent On the use of a directed acyclic graph to * a pop. of computer prog. [140] representation A * for the adaptive generation of simple sequential prog. [176] - Appl. of search methods to sch. problem in plastics forming plant: A binary * appr. <ref> [203] </ref> - Meta-level strategy learning for GA based on structu red * [87, 38] - Prog. search with a hierarchical variable length * Gen. prog. , simulated annealing and hill climbing [121, 37] representations Coevolving high-level * [45] - Gen. prog. with adaptive * [76] Learning by adapting * in gen. <p> [63] Learning monitoring * a difficult gen. prog. appl. [111] Strongly typed gen. prog. in evolving cooperation * [186] The evol. of sporting * [206] strategy Cart centering and broom balancing by gen. breeding pop. of cntr. * prog. [177, 44] - Gen. prog. to learn an agent's monitoring * <ref> [203] </ref> - Meta-level * learning for GA based on structured Rep. [28] Strongly typed gen. prog. [111] * typed gen. prog. in evolving cooperation strategies [91] structure Exploring the underlying * of nat. images through gen. prog. [169] structured Evol. learning of predatory behaviors based on * classifiers [203] - Meta-level <p> monitoring * <ref> [203] </ref> - Meta-level * learning for GA based on structured Rep. [28] Strongly typed gen. prog. [111] * typed gen. prog. in evolving cooperation strategies [91] structure Exploring the underlying * of nat. images through gen. prog. [169] structured Evol. learning of predatory behaviors based on * classifiers [203] - Meta-level strategy learning for GA based on * Rep. [34] Solving ident. problems by * GAs [142] Tree* rules in GAs [229] subroutines Discovery of a main prog. and reusable * using gen. prog. [152] Simultaneous discovery of reusable detectors and * using gen. prog. [175] The evol. induction
Reference: [204] <author> Jan Jannink. </author> <title> Advances in genetic programming. </title> <editor> In Kinnear, Jr. </editor> <month> [7], </month> <note> chapter 20. Cracking and co-evolving randomizers, page ? y(Koza) ga94aJannink. </note>
Reference-contexts: recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, <ref> [204] </ref> random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing,
Reference: [205] <author> Minga Jiang. </author> <title> An adaptive function identification system. In Proceedings of the IEEE/ACM Conference on Developing and Managing Intelligent System Projects, </title> <institution> page ?, Vienna, VA, </institution> <month> March </month> <year> 1993. </year> ? <note> y(Langdon/bib) ga:Jiang93a. </note>
Reference-contexts: are shown in appendix A. [114] Accurate replication in gen. prog. [81] acyclic On the use of a directed * graph to represent a pop. of computer prog. [76] adapting Learning by * Rep. in gen. prog. [140] adaptive A Rep. for the * generation of simple sequen tial prog. <ref> [205] </ref> An* function ident. syst. [106] An* inductive logic prog. syst. using gen. prog. ming [45] - Gen. prog. with * Rep. [43] - Microbehaviors and dynamical syst. : Economic routi nes as emergent properties of * syst. s [166] agents Evol. and coevol. of computer prog. to cntr. independently-acting * <p> [11, 39] foraging Evol. of food * strategies for the Caribbean Anolis lizard using gen. prog. [161] formation Concept * and decision tree induction using the gen. prog. paradigm [134] function A hierarchical appr. to learning the Boolean multiplexer * [230, 22] A hierarchical gen. syst. for symbolic * ident. <ref> [205] </ref> An adaptive * ident. syst. [208] Finding an impulse response * using gen. prog. [136] Hierarchical automatic * definition in gen. prog. [60] Scalable learning in gen. prog. using automatic * definition [48] functions A non-linear gen. process for data encoding and for solving problems using automatically defined * [105] <p> Rep. [87, 38] hill climbing Prog. search with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and * [89, 33] hill-climbing Gen. prog. with local * [182] IC engine misfire detection alg. generation using gen. prog. [230, 22] identification A hierarchical gen. syst. for symbolic function * <ref> [205] </ref> An adaptive function * syst. [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. * [34] Solving* problems by structured GAs [242] image Gen. generation of "dendritic trees" for * classi fication [155] - Gen. prog. for feature
Reference: [206] <author> John R. Koza and Martin A. Keane. </author> <title> Cart centering and broom balancing by genetically breeding populations of control strategy programs. </title> <editor> In Maureen Caudill, editor, </editor> <booktitle> Proceedings of the International Conference on Neural Networks (IJCANN-90-WASH-DC), </booktitle> <volume> volume 1, </volume> <pages> pages 198-201, </pages> <address> Washington, DC, 15.-19. Jan. 1990. </address> <publisher> Lawrence Erlbaum Associates. ga:Koza90a. </publisher>
Reference-contexts: hierarchical appr. to learning the * mul tiplexer function [125] - Gen. synthesis of * neural networks with a cell rewri ting developmental process [100] border Detector design by gen. prog. for automated * definition in cardiac magnetic resonance images [129] box The computer Zoo - evol. in a * <ref> [206] </ref> breeding Cart centering and broom balancing by gen. * pop. of cntr. strategy prog. [219, 207] - Gen. * of non-linear opt. cntr. strategies for broom balancing [218] - Gen. * pop. of computer prog. to solve problems in artificial intelligence [42] - Gen. prog. : A paradigm for gen. <p> computer prog. to solve problems in artificial intelligence [42] - Gen. prog. : A paradigm for gen. * pop. of computer prog. to solve problems [225] The gen. prog. paradigm: Gen. * pop. of computer prog. to solve problems [77] brood The unique implications of * sel. for gen. prog. <ref> [206] </ref> broom balancing Cart centering and * by gen. bree ding pop. of cntr. strategy prog. [219, 207] - Gen. breeding of non-linear opt. cntr. strategies for * [13] C++ Gen. prog. with * [212] calculations Automated discovery of detectors and iteration-performing * to recognize patterns in protein sequences using gen. <p> in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using iteration-performing * in gen. prog. [100] cardiac Detector design by gen. prog. for automated border definition in * magnetic resonance images [11, 39] Caribbean Evol. of food foraging strategies for the * Anolis lizard using gen. prog. <ref> [206] </ref> Cart centering and broom balancing by gen. breeding pop. of cntr. strategy prog. [109] Causality in gen. prog. [125] cell Gen. synthesis of Boolean neural networks with a * rewriting developmental process [32, 15] cellular Adding learning to the * development process: a comparative study [21] Neural network synthesis using <p> Feasibility of evolving self-learned pattern recognition appl. toward the solution of a * syst. using gen. prog. [23] construction Recombination, sel. , and the gen. * of computer prog. [66] Context preserving crossover in gen. prog. [102] Context-free language induction by evol. of determi nistic push-down automata using gen. prog. <ref> [206] </ref> control Cart centering and broom balancing by gen. breeding pop. of * strategy prog. [166] - Evol. and coevol. of computer prog. to * independently-acting agents [99] - Evol. by gen. prog. of a spatial robot juggling * alg. [189] - Evol. of autonomous robot * architectures [219, 207] - <p> plans for a mobile robot via gen. prog. with automatically defined functions [200] The gen. planner The automatic * of plans for a mobile robot via genetic prog. with automatically defined func tions [198] The gen. planner: The automatic * of plans for a mo bile robot via genetic prog. <ref> [206] </ref> genetically Cart centering and broom balancing by * breeding pop. of cntr. strategy prog. [42] - Gen. prog. : A paradigm for * breeding pop. of computer prog. to solve problems [218] * breeding pop. of computer prog. to solve problems in artificial intelligence [225] The gen. prog. paradigm: * <p> The mating * A testbed for experiments in the evol. of symbol syst. [81] population On the use of a directed acyclic graph to represent a * of computer prog. [75] The effect of * enrichment in gen. prog. [183] Using a double-based GA on a * of computer prog. <ref> [206] </ref> populations Cart centering and broom balancing by gen. breeding * of cntr. strategy prog. [218] - Gen. breeding * of computer prog. to solve problems in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding * of computer prog. to solve problems [217] Hierarchical GAs operating on <p> distr. reactive * by gen. prog. for the general job shop problem [178] Learning distributive reactive * by gen. prog. for the general job shop problem [63] Learning monitoring * a difficult gen. prog. appl. [111] Strongly typed gen. prog. in evolving cooperation * [186] The evol. of sporting * <ref> [206] </ref> strategy Cart centering and broom balancing by gen. breeding pop. of cntr. * prog. [177, 44] - Gen. prog. to learn an agent's monitoring * [203] - Meta-level * learning for GA based on structured Rep. [28] Strongly typed gen. prog. [111] * typed gen. prog. in evolving cooperation strategies
Reference: [207] <author> John R. Koza and Martin A. Keane. </author> <title> Genetic breeding of non-linear optimal control strategies for broom balancing. </title> <editor> In A. Bensoussan and J. L. Lions, editors, </editor> <booktitle> Proceedings of the Ninth International Conference on Analysis and Optimization of Systems, </booktitle> <address> page ?, Antibes (France), 12.-15. June 1990. </address> <publisher> Springer-Verlag, </publisher> <address> Berlin. ga:Koza90j. </address>
Reference-contexts: neural networks with a cell rewri ting developmental process [100] border Detector design by gen. prog. for automated * definition in cardiac magnetic resonance images [129] box The computer Zoo - evol. in a * [206] breeding Cart centering and broom balancing by gen. * pop. of cntr. strategy prog. <ref> [219, 207] </ref> - Gen. * of non-linear opt. cntr. strategies for broom balancing [218] - Gen. * pop. of computer prog. to solve problems in artificial intelligence [42] - Gen. prog. : A paradigm for gen. * pop. of computer prog. to solve problems [225] The gen. prog. paradigm: Gen. * <p> gen. * pop. of computer prog. to solve problems [225] The gen. prog. paradigm: Gen. * pop. of computer prog. to solve problems [77] brood The unique implications of * sel. for gen. prog. [206] broom balancing Cart centering and * by gen. bree ding pop. of cntr. strategy prog. <ref> [219, 207] </ref> - Gen. breeding of non-linear opt. cntr. strategies for * [13] C++ Gen. prog. with * [212] calculations Automated discovery of detectors and iteration-performing * to recognize patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using iteration-performing * in gen. prog. [100] cardiac Detector <p> gen. prog. [206] control Cart centering and broom balancing by gen. breeding pop. of * strategy prog. [166] - Evol. and coevol. of computer prog. to * independently-acting agents [99] - Evol. by gen. prog. of a spatial robot juggling * alg. [189] - Evol. of autonomous robot * architectures <ref> [219, 207] </ref> - Gen. breeding of non-linear opt. * strategies for broom balancing [195] - Gen. prog. : A new paradigm for * and analysis [228] controller A gen. appr. to finding a * to back up a tractor-trailed truck [181] co-operation Evolving * in autonomous robotic syst. [111] cooperation Strongly <p> Genotype-phenotype-mapping and * variation - A case study in gen. prog. [46, 47] non-linear A * GAs for solving problems [48] A* gen. process for data encoding and for solving problems using automatically defined functions [49] A* gen. process for problem solving using sponta neously emergent self-replicating and self-improving entities <ref> [219, 207] </ref> - Gen. breeding of * opt. cntr. strategies for broom balancing [51] * GAs for solving problems by finding a fit composition of functions [50] * GAs for solving problems [52] * gen. process for data encoding and for solving problems using automatically defined functions [53] * gen. process <p> * syst. using gen. prog. [201] ohjelmointi Geneettinen * [Gen. prog. by Koza] [98] on-line Distr. gen. prog. for * prediction in changing environments [217] operating Hierarchical GAs * on pop. of computer prog. [41] operations Architecture-altering * for evolving the arc hitecture of a multipart prog. in gen. prog. <ref> [219, 207] </ref> optimal Gen. breeding of non-linear * cntr. strate gies for broom balancing [138] optimization Co-evolving parasites improve simulated evol. as an * procedure [25] origin On the * of effective procedures by means of ar tificial sel. [161] paradigm Concept formation and decision tree induc tion using the gen. <p> using gen. prog. [29] strategies Apprentissage de * locales pour architechtu res reactives distribuees par prog. mation genetique [11, 39] strategies Evol. of food foraging * for the Caribbean Anolis lizard using gen. prog. [94] - Evol. of trade * using GAs and gen. prog. [187] - Evol. learning * <ref> [219, 207] </ref> - Gen. breeding of non-linear opt. cntr. * for broom balancing 24 [179] Learning distr. reactive * by gen. prog. for the general job shop problem [178] Learning distributive reactive * by gen. prog. for the general job shop problem [63] Learning monitoring * a difficult gen. prog. appl.
Reference: [208] <author> Martin A. Keane, John R. Koza, and James P. Rice. </author> <title> Finding an impulse response function using genetic programming. </title> <booktitle> In Proceedings of the 1993 American Control Conference, </booktitle> <volume> volume 3, </volume> <pages> pages 2345-2350, </pages> <address> San Francisco, CA, 2.-4. June 1993. </address> <publisher> IEEE, </publisher> <address> New York. ga:Koza93d. </address>
Reference-contexts: mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, <ref> [208] </ref> text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table gives references to the contri butions published annually. 1981, [16] 1986, [187, <p> * strategies for the Caribbean Anolis lizard using gen. prog. [161] formation Concept * and decision tree induction using the gen. prog. paradigm [134] function A hierarchical appr. to learning the Boolean multiplexer * [230, 22] A hierarchical gen. syst. for symbolic * ident. [205] An adaptive * ident. syst. <ref> [208] </ref> Finding an impulse response * using gen. prog. [136] Hierarchical automatic * definition in gen. prog. [60] Scalable learning in gen. prog. using automatic * definition [48] functions A non-linear gen. process for data encoding and for solving problems using automatically defined * [105] - Gen. prog. exploratory power and <p> by structured GAs [242] image Gen. generation of "dendritic trees" for * classi fication [155] - Gen. prog. for feature discovery and * discrimination [8] images Evolving * [91] Exploring the underlying structure of nat. * through gen. prog. [77] implications The unique * of brood sel. for gen. prog. <ref> [208] </ref> impulse response Finding an * function using gen. prog. [166] independently-acting Evol. and coevol. of computer prog. to cntr. * agents [78] indexed Turing completeness in the language of gen. prog. with * memory [244] indexed memory Gen. prog. , * the halting problem, and other curiosities [161] induction Concept
Reference: [209] <author> Mike J. Keith and Martin C. Martin. </author> <title> Advances in genetic programming. </title> <editor> In Kinnear, Jr. </editor> <booktitle> [7], chapter 13. Genetic programming in C++: Implementation issues, </booktitle> <institution> page ? y(Koza) ga94aKeith. </institution>
Reference-contexts: [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, <ref> [209, 13] </ref> Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46,
Reference: [210] <editor> Kenneth E. Kinnear, Jr. </editor> <booktitle> Advances in genetic programming. In Advances in Genetic Programming [7], </booktitle> <address> chapter 1. </address> <note> A perspective on the work in this book, page ? y(Koza) ga94bKinnear. </note>
Reference: [211] <author> Kenneth E. Kinnear, Jr. </author> <title> Advances in genetic programming. In Advances in Genetic Programming [7], chapter 6. Alternatives in automatic function definition: A comparison of performance, </title> <note> page ? y(Koza) ga94cKinnear. </note>
Reference-contexts: introduction, [213] L-systems, [86] learning, [214] locality, [66] machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, <ref> [211] </ref> populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance,
Reference: [212] <author> John R. Koza. </author> <title> Automated discovery of detectors and iteration-performing calculations to recognize patterns in protein sequences using genetic programming. </title> <booktitle> In Proceedings of the 1994 IEEE Computer Society Conference on Computer Vision and Pattern Recognition, </booktitle> <pages> pages 684-689, </pages> <address> Seattle, WA, 21.-23. June 1994. </address> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> CA. ga94eKoza. </address>
Reference-contexts: [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, <ref> [212] </ref> pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, <p> 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, <ref> [70, 212] </ref> transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] <p> 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, <ref> [212] </ref> pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] <p> pop. of computer prog. to solve problems in * [170] artworks Criticism, culture, and the automatic genera tion of * [102] automata Context-free language induction by evol. of deterministic push-down * using gen. prog. [100] automated Detector design by gen. prog. for * border definition in cardiac magnetic resonance images <ref> [212] </ref> * discovery of detectors and iteration-performing calculations to recognize patterns in protein sequences using gen. prog. [150] * learning of a detector for ff-helices in protein sequences via gen. prog. [68] * learning of a detector for the cores of ff-helices in pro tein sequences via gen. prog. [24] automatic <p> computer prog. to solve problems [77] brood The unique implications of * sel. for gen. prog. [206] broom balancing Cart centering and * by gen. bree ding pop. of cntr. strategy prog. [219, 207] - Gen. breeding of non-linear opt. cntr. strategies for * [13] C++ Gen. prog. with * <ref> [212] </ref> calculations Automated discovery of detectors and iteration-performing * to recognize patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using iteration-performing * in gen. prog. [100] cardiac Detector design by gen. prog. for automated border definition in * magnetic resonance images [11, 39] Caribbean Evol. of <p> gen. prog. [150] detector Automated learning of a * for ff-helices in pro tein sequences via gen. prog. [68] Automated learning of a * for the cores of ff-helices in protein sequences via gen. prog. [100] * design by gen. prog. for automated border definition in cardiac magnetic resonance images <ref> [212] </ref> detectors Automated discovery of * and iteration-performing calculations to recognize patterns in protein sequences using gen. prog. [152] Simultaneous discovery of reusable * and subroutines using gen. prog. [159] Simultaneous discovery of * and a way of using the * via gen. prog. [102] deterministic Context-free language induction by evol. <p> [164] Differentiable chromosomes The gen. prog. of switc hable shape-genes [81] directed On the use of a * acyclic graph to represent a pop. of computer prog. [117] discovering Two ways of * the size and shape of a com puter prog. to solve a problem Permuted title index 19 <ref> [212] </ref> discovery Automated * of detectors and iteration-performing calculations to recognize patterns in protein sequences using gen. prog. [9] - Gen. Prog. <p> * retrieval [188] INK Putting * into a BIRo: A discussion of problem domain knowledge for evol. robotics [237, 128] Interactive evol. of dynamical syst. [238, 20] * evol. of equations for procedural models [227] inter-twined spiral problem A gen. appr. to the truck backer upper problem and the * <ref> [212] </ref> iteration-performing Automated discovery of detectors and * calculations to recognize patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using * calculations in gen. prog. [179] job shop problem Learning distr. reactive strategies by gen. prog. for the general * [178] Learning distributive reactive strategies by <p> gen. prog. * Gen. breeding pop. of computer prog. to solve problems [138] parasites Co-evolving * improve simulated evol. as an opt. procedure [96] pattern Feasibility of evolving self-learned * recognition appl. toward the solution of a constrained syst. using gen. prog. [16] Beagle- A Darwinian appr. to * recognition <ref> [212] </ref> patterns Automated discovery of detectors and iteration-performing calculations to recognize * in protein sequences using gen. prog. [70] Recognizing* in protein sequences using iteration performing calculations in gen. prog. [148, 36] pedestrians Gen. prog. for * [216] perform Evol. of subsumption architecture that * a wall following task for an <p> Prog. : On * Computers by Means of Nat. Sel. and Gen. [106] programming system An adaptive inductive logic * using gen. prog. <ref> [212] </ref> protein sequences Automated discovery of detectors and iteration-performing calculations to recognize patterns in * using gen. prog. [150] Automated learning of a detector for ff-helices in * via gen. prog. [68] Automated learning of a detector for the cores of ff helices in * via gen. prog. [70] Recognizing patterns <p> by gen. prog. for the general job shop problem [178] Learning distributive * strategies by gen. prog. for the general job shop problem [96] recognition Feasibility of evolving self-learned pattern * appl. toward the solution of a constrained syst. using gen. prog. [16] Beagle- A Darwinian appr. to pattern * <ref> [212] </ref> recognize Automated discovery of detectors and iteration-performing calculations to * patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using iteration-performing calculations in gen. prog. [23] Recombination sel. , and the gen. construction of computer prog.
Reference: [213] <editor> John R. Koza. </editor> <booktitle> Advances in genetic programming. </booktitle> <editor> In Kinnear, Jr. </editor> <month> [7], </month> <note> chapter 2. Introduction to genetic programming, page ? y(Koza) ga94hKoza. Bibliography 33 </note>
Reference-contexts: introduction, <ref> [213] </ref> L-systems, [86] learning, [214] locality, [66] machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal
Reference: [214] <editor> John R. Koza. </editor> <booktitle> Advances in genetic programming. </booktitle> <editor> In Kinnear, Jr. </editor> <title> [7], chapter 5. Scalable learning in genetic programming using automatic function definition, </title> <note> page ? y(Koza) ga94iKoza. </note>
Reference-contexts: introduction, [213] L-systems, [86] learning, <ref> [214] </ref> locality, [66] machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, <p> stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, <ref> [214] </ref> training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] optics lasers, [35] parallel GA, [14] patent, [50, 51, 54, 55, 46, 48, 49, 47, 53, 52] pattern recognition, [16, 159, 155, 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75]
Reference: [215] <editor> John R. Koza. </editor> <booktitle> Genetic programming ii video, </booktitle> <year> 1994. </year> <note> (a video tape)y(Koza) ga94jKoza. </note>
Reference-contexts: programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, <ref> [215] </ref> video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table gives references to the contri butions published annually. 1981, [16] 1986, [187, 24] 1989, [217] 51, 207, 54, 55] 127, 123, 134, 223, 224, 46, 14, 129, 130, 191] 225, <p> using gen. prog. [87, 38] variable Prog. search with a hierarchical * length Rep. : Gen. prog. , simulated annealing and hill climbing [88] variation Genotype-phenotype-mapping and neutral * A case study in gen. prog. [27] Verbesserung des Simulated Annealing unter Anwen-dung Genetischer Programmierung am Beispiel des Diskreten Quadratischen Layoutproblems <ref> [215] </ref> video Gen. prog.
Reference: [216] <author> John R. Koza. </author> <title> Evolution of subsumption architecture that perform a wall following task for an autonomous mobile robot via genetic programming. </title> <editor> In Thomas Pesche, editor, </editor> <booktitle> Computational Learning Theory and Natural Learning Systems, </booktitle> <volume> volume 2, </volume> <pages> pages 321-346. </pages> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, 1994. y(Langdon/bib) ga94lKoza. </address>
Reference-contexts: 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, <ref> [200, 216] </ref> robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text <p> a problem of symbolic syst. ident. [29] Apprentissage de strategies locales pour architechtu res reactives distribuees par prog. mation genetique [29] architechtures Apprentissage de strategies locales pour * reactives distribuees par prog. mation genetique [41] architecture Architecture-altering operations for evol ving the * of a multipart prog. in gen. prog. <ref> [216] </ref> - Evol. of subsumption * that perform a wall following task for an autonomous mobile robot via gen. prog. [104] Evolving the * of a multi-part prog. in gen. prog. [224] - Gen. generation of both the weights and * for a neural network [41] Architecture-altering operations for evolving the <p> data encoding and for sol ving problems using * defined functions [197, 199] The automatic generation of plans for a mobile ro bot via gen. prog. with * defined functions [200] The gen. planner The automatic generation of plans for a mobile robot via genetic prog. with * defined functions <ref> [216] </ref> autonomous Evol. of subsumption architecture that perform a wall following task for an * mobile robot via gen. prog. [189] - Evol. of * robot cntr. architectures [181] Evolving co-operation in * robotic syst. [95] Terrain flattening by * robot: A gen. prog. appl. [228] back A gen. appr. to <p> gen. prog. of a spatial robot juggling cntr. alg. [189] * of autonomous robot cntr. architectures [93] * of damage-immune prog. using gen. prog. [11, 39] * of food foraging strategies for the Caribbean Anolis lizard using gen. prog. [62] * of mapmaking: Learning, planning, and memory using gen. prog. <ref> [216] </ref> * of subsumption architecture that perform a wall fol lowing task for an autonomous mobile robot via gen. prog. [127] * of subsumption using gen. prog. [94] * of trade strategies using GAs and gen. prog. [129] The computer Zoo - * in a box [116] The mating pool: A <p> * to sch. problem in plastics forming plant: A binary Rep. appr. [43] Microbehaviors and dynamical syst. : Economic rou tines as emergent properties of adaptive syst. s [153] minimal Gen. prog. of * neural nets using Occam's razor [182] misfire IC engine * detection alg. generation using gen. prog. <ref> [216] </ref> mobile robot Evol. of subsumption architecture that perform a wall following task for an autonomous * via gen. prog. [197, 199] The automatic generation of plans for a * via gen. prog. with automatically defined functions [200] The gen. planner The automatic generation of plans for a * via genetic <p> constrained syst. using gen. prog. [16] Beagle- A Darwinian appr. to * recognition [212] patterns Automated discovery of detectors and iteration-performing calculations to recognize * in protein sequences using gen. prog. [70] Recognizing* in protein sequences using iteration performing calculations in gen. prog. [148, 36] pedestrians Gen. prog. for * <ref> [216] </ref> perform Evol. of subsumption architecture that * a wall following task for an autonomous mobile robot via gen. prog. 22 [158] Performance improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. ident. [163] perspective An experimental * on gen. prog. [200] <p> by * GAs [142] Tree* rules in GAs [229] subroutines Discovery of a main prog. and reusable * using gen. prog. [152] Simultaneous discovery of reusable detectors and * using gen. prog. [175] The evol. induction of * [85] subset Dynamic training * sel. for supervised learning in gen. prog. <ref> [216] </ref> subsumption Evol. of * architecture that perform a wall following task for an autonomous mobile robot via gen. prog. [127] - Evol. of * using gen. prog. [85] supervised Dynamic training subset sel. for * learning in gen. prog. [132] survival Looping as a means to * playing Russian rou <p> II * [65] virtual reality A gen. prog. appl. in * [168] vision-based An evolved * behavioral model of coordi nated group motion [185] visual Evolving * routines [154] walking Automatic generation of prog. for crawling and * <ref> [216] </ref> wall following task Evol. of subsumption architecture that perform a * for an autonomous mobile robot via gen. prog. [117] ways Two * of discovering the size and shape of a com puter prog. to solve a problem [224] weights Gen. generation of both the * and architecture for a
Reference: [217] <author> John R. Koza. </author> <title> Hierarchical genetic algorithms operating on populations of computer programs. </title> <editor> In N. S. Sridharan, editor, </editor> <booktitle> Eleventh International Joint Conference on Artificial Intelligence (IJCAI-89), </booktitle> <pages> pages 768-774, </pages> <address> Detroit, MI, 20.-25. August 1989. </address> <publisher> Morgan Kaufmann, </publisher> <address> Palo Alto, CA. ga:Koza89a. </address>
Reference-contexts: [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table gives references to the contri butions published annually. 1981, [16] 1986, [187, 24] 1989, <ref> [217] </ref> 51, 207, 54, 55] 127, 123, 134, 223, 224, 46, 14, 129, 130, 191] 225, 226, 10, 227, 228, 136, 48, 49, 11, 39, 47, 53, 52, 163, 1993, [177, 44, 29, 179, 148, 36, 17, 168, 132, 152, 208, 229, 43, 28, 153, 35, 18, 37, 20, 8, 154, <p> the * problem, and other curiosities [132] harsh Looping as a means to survival: playing Russian roulette in a * environment [134] hierarchical A * appr. to learning the Boolean mul tiplexer function [230, 22] A* gen. syst. for symbolic function ident. [136] * automatic function definition in gen. prog. <ref> [217] </ref> * GAs operating on pop. of computer prog. [180] * selforganization in gen. prog. [87, 38] - Prog. search with a * variable length Rep. : Gen. prog. , simulated annealing and hill climbing [121, 37] high-level Coevolving * Rep. [87, 38] hill climbing Prog. search with a hierarchical variable <p> process for use with plural co-evolving pop. [153] Occam's Gen. prog. of minimal neural nets using * razor [80] OCR Learning and upgrading rules for an * syst. using gen. prog. [201] ohjelmointi Geneettinen * [Gen. prog. by Koza] [98] on-line Distr. gen. prog. for * prediction in changing environments <ref> [217] </ref> operating Hierarchical GAs * on pop. of computer prog. [41] operations Architecture-altering * for evolving the arc hitecture of a multipart prog. in gen. prog. [219, 207] optimal Gen. breeding of non-linear * cntr. strate gies for broom balancing [138] optimization Co-evolving parasites improve simulated evol. as an * procedure <p> * of computer prog. [206] populations Cart centering and broom balancing by gen. breeding * of cntr. strategy prog. [218] - Gen. breeding * of computer prog. to solve problems in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding * of computer prog. to solve problems <ref> [217] </ref> Hierarchical GAs operating on * of computer prog. [54] - Non-linear gen. process for use with co-evolving * [55] - Non-linear gen. process for use with plural co-evolving * [225] The gen. prog. paradigm: Gen. breeding * of compu ter prog. to solve problems [105] power Gen. prog. exploratory *
Reference: [218] <author> John R. Koza. </author> <title> Genetically breeding populations of computer programs to solve problems in artificial intelligence. </title> <editor> In Apostolos Dollas and Nikolaos G. Bourbakis, editors, </editor> <booktitle> Proceedings of the 1990 IEEE International Conference on Tools with Artificial Intelligence TAI'90, </booktitle> <pages> pages 819-827, </pages> <address> Herndon, VA, 6.-9. November 1990. </address> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> CA. ga:Koza90f. </address>
Reference-contexts: embryology: The gen. prog. of an * embryo [192] * embryology: The gen. prog. of an artificial embryo [14] * evol. for computer graphics [184] * morality and gen. prog. [25] On the origin of effective procedures by means of * sel. [223] artificial intelligence A gen. appr. to * <ref> [218] </ref> - Gen. breeding pop. of computer prog. to solve problems in * [170] artworks Criticism, culture, and the automatic genera tion of * [102] automata Context-free language induction by evol. of deterministic push-down * using gen. prog. [100] automated Detector design by gen. prog. for * border definition in cardiac <p> by gen. prog. for automated * definition in cardiac magnetic resonance images [129] box The computer Zoo - evol. in a * [206] breeding Cart centering and broom balancing by gen. * pop. of cntr. strategy prog. [219, 207] - Gen. * of non-linear opt. cntr. strategies for broom balancing <ref> [218] </ref> - Gen. * pop. of computer prog. to solve problems in artificial intelligence [42] - Gen. prog. : A paradigm for gen. * pop. of computer prog. to solve problems [225] The gen. prog. paradigm: Gen. * pop. of computer prog. to solve problems [77] brood The unique implications of <p> tions [198] The gen. planner: The automatic * of plans for a mo bile robot via genetic prog. [206] genetically Cart centering and broom balancing by * breeding pop. of cntr. strategy prog. [42] - Gen. prog. : A paradigm for * breeding pop. of computer prog. to solve problems <ref> [218] </ref> * breeding pop. of computer prog. to solve problems in artificial intelligence [225] The gen. prog. paradigm: * breeding pop. of compu ter prog. to solve problems [10] Genetics Gen. Prog. : On Prog. ming Computers by Means of Nat. <p> On the use of a directed acyclic graph to represent a * of computer prog. [75] The effect of * enrichment in gen. prog. [183] Using a double-based GA on a * of computer prog. [206] populations Cart centering and broom balancing by gen. breeding * of cntr. strategy prog. <ref> [218] </ref> - Gen. breeding * of computer prog. to solve problems in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding * of computer prog. to solve problems [217] Hierarchical GAs operating on * of computer prog. [54] - Non-linear gen. process for use with co-evolving * [55] <p> process for * using spontaneously emergent self-replicating and self-improving en tities [53] - Non-linear gen. process for * using spontaneously emergent self-replicating and self-improving entities [46, 47] problems A non-linear GAs for solving * [48] A non-linear gen. process for data encoding and for solving * using automatically defined functions <ref> [218] </ref> - Gen. breeding pop. of computer prog. to solve * in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding pop. of computer prog. to solve * [51] - Non-linear GAs for solving * by finding a fit composi tion of functions [50] - Non-linear GAs for <p> subroutines using gen. prog. [117] size Two ways of discovering the * and shape of a com puter prog. to solve a problem [58] snapshot Gen. prog. : A current * [96] solution Feasibility of evolving self-learned pattern recognition appl. toward the * of a constrained syst. using gen. prog. <ref> [218] </ref> solve Gen. breeding pop. of computer prog. to * problems in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding pop. of computer prog. to * problems [225] The gen. prog. paradigm: Gen. breeding pop. of computer prog. to * problems [117] Two ways of discovering the
Reference: [219] <author> John R. Koza. </author> <title> Genetic breeding of non-linear optimal control strategies for broom balancing. </title> <booktitle> In Proceedings of the Ninth International Conference on Analysis and Optimization of Systems, </booktitle> <pages> pages 47-56, </pages> <address> Antibes (France), June 1990. </address> <publisher> Springer-Verlag, </publisher> <address> Berlin. y ga:Koza90g. </address>
Reference-contexts: neural networks with a cell rewri ting developmental process [100] border Detector design by gen. prog. for automated * definition in cardiac magnetic resonance images [129] box The computer Zoo - evol. in a * [206] breeding Cart centering and broom balancing by gen. * pop. of cntr. strategy prog. <ref> [219, 207] </ref> - Gen. * of non-linear opt. cntr. strategies for broom balancing [218] - Gen. * pop. of computer prog. to solve problems in artificial intelligence [42] - Gen. prog. : A paradigm for gen. * pop. of computer prog. to solve problems [225] The gen. prog. paradigm: Gen. * <p> gen. * pop. of computer prog. to solve problems [225] The gen. prog. paradigm: Gen. * pop. of computer prog. to solve problems [77] brood The unique implications of * sel. for gen. prog. [206] broom balancing Cart centering and * by gen. bree ding pop. of cntr. strategy prog. <ref> [219, 207] </ref> - Gen. breeding of non-linear opt. cntr. strategies for * [13] C++ Gen. prog. with * [212] calculations Automated discovery of detectors and iteration-performing * to recognize patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using iteration-performing * in gen. prog. [100] cardiac Detector <p> gen. prog. [206] control Cart centering and broom balancing by gen. breeding pop. of * strategy prog. [166] - Evol. and coevol. of computer prog. to * independently-acting agents [99] - Evol. by gen. prog. of a spatial robot juggling * alg. [189] - Evol. of autonomous robot * architectures <ref> [219, 207] </ref> - Gen. breeding of non-linear opt. * strategies for broom balancing [195] - Gen. prog. : A new paradigm for * and analysis [228] controller A gen. appr. to finding a * to back up a tractor-trailed truck [181] co-operation Evolving * in autonomous robotic syst. [111] cooperation Strongly <p> Genotype-phenotype-mapping and * variation - A case study in gen. prog. [46, 47] non-linear A * GAs for solving problems [48] A* gen. process for data encoding and for solving problems using automatically defined functions [49] A* gen. process for problem solving using sponta neously emergent self-replicating and self-improving entities <ref> [219, 207] </ref> - Gen. breeding of * opt. cntr. strategies for broom balancing [51] * GAs for solving problems by finding a fit composition of functions [50] * GAs for solving problems [52] * gen. process for data encoding and for solving problems using automatically defined functions [53] * gen. process <p> * syst. using gen. prog. [201] ohjelmointi Geneettinen * [Gen. prog. by Koza] [98] on-line Distr. gen. prog. for * prediction in changing environments [217] operating Hierarchical GAs * on pop. of computer prog. [41] operations Architecture-altering * for evolving the arc hitecture of a multipart prog. in gen. prog. <ref> [219, 207] </ref> optimal Gen. breeding of non-linear * cntr. strate gies for broom balancing [138] optimization Co-evolving parasites improve simulated evol. as an * procedure [25] origin On the * of effective procedures by means of ar tificial sel. [161] paradigm Concept formation and decision tree induc tion using the gen. <p> using gen. prog. [29] strategies Apprentissage de * locales pour architechtu res reactives distribuees par prog. mation genetique [11, 39] strategies Evol. of food foraging * for the Caribbean Anolis lizard using gen. prog. [94] - Evol. of trade * using GAs and gen. prog. [187] - Evol. learning * <ref> [219, 207] </ref> - Gen. breeding of non-linear opt. cntr. * for broom balancing 24 [179] Learning distr. reactive * by gen. prog. for the general job shop problem [178] Learning distributive reactive * by gen. prog. for the general job shop problem [63] Learning monitoring * a difficult gen. prog. appl.
Reference: [220] <author> John R. Koza. </author> <title> A genetic approach to econometric modeling. </title> <booktitle> In Proceedings of the Sixth World Congress of the Econometric Society, </booktitle> <address> page ?, Barcelona (Spain), 27. </address> <month> August </month> <year> 1990. </year> ? <note> y([10]) ga:Koza90h. </note>
Reference-contexts: computer prog. [85] Dynamic training subset sel. for supervised learning in gen. prog. [72] dynamical Appl. of gen. prog. in analyzing multiple steady states of * syst. [237, 128] Interactive evol. of * syst. [43] - Microbehaviors and * syst. : Economic routines as emergent properties of adaptive syst. s <ref> [220, 221, 222] </ref> econometric A gen. appr. to * modeling [43] Economic Microbehaviors and dynamical syst. : * rou tines as emergent properties of adaptive syst. s [192] embryo Artificial embryology: The gen. prog. of an artificial * [192] embryology Artificial * The gen. prog. of an artificial embryo [120] emergence <p> generation of plans for a * via genetic prog. with automatically defined functions [198] The gen. planner: The automatic generation of plans for a * via genetic prog. [168] model An evolved vision-based behavioral * of coordi nated group motion [73] Experiments with a coroutine execution * for gen. prog. <ref> [220, 221, 222] </ref> modeling A gen. appr. to econometric * [238, 20] models Interactive evol. of equations for procedural * [245] Learning mental * [149] modular Gen. synthesis of * neural networks [177, 44] monitoring Gen. prog. to learn an agent's * stra tegy [63] Learning* strategies: a difficult gen. prog.
Reference: [221] <author> John R. Koza. </author> <title> A genetic approach to econometric modeling. </title> <booktitle> In Proceedings of the 2nd International Conference on Economics and Artificial Intelligence, </booktitle> <institution> page ?, ?, ? 1991. ? y ga:Koza91a. </institution>
Reference-contexts: computer prog. [85] Dynamic training subset sel. for supervised learning in gen. prog. [72] dynamical Appl. of gen. prog. in analyzing multiple steady states of * syst. [237, 128] Interactive evol. of * syst. [43] - Microbehaviors and * syst. : Economic routines as emergent properties of adaptive syst. s <ref> [220, 221, 222] </ref> econometric A gen. appr. to * modeling [43] Economic Microbehaviors and dynamical syst. : * rou tines as emergent properties of adaptive syst. s [192] embryo Artificial embryology: The gen. prog. of an artificial * [192] embryology Artificial * The gen. prog. of an artificial embryo [120] emergence <p> generation of plans for a * via genetic prog. with automatically defined functions [198] The gen. planner: The automatic generation of plans for a * via genetic prog. [168] model An evolved vision-based behavioral * of coordi nated group motion [73] Experiments with a coroutine execution * for gen. prog. <ref> [220, 221, 222] </ref> modeling A gen. appr. to econometric * [238, 20] models Interactive evol. of equations for procedural * [245] Learning mental * [149] modular Gen. synthesis of * neural networks [177, 44] monitoring Gen. prog. to learn an agent's * stra tegy [63] Learning* strategies: a difficult gen. prog.
Reference: [222] <author> John R. Koza. </author> <title> A genetic approach to econometric modeling. </title> <editor> In Paul Bourgine and Bernard Walliser, editors, </editor> <booktitle> Economics and Cognitive Science, </booktitle> <pages> pages 57-75. </pages> <publisher> Pergamon Press, Oxford, </publisher> <year> 1991. </year> <month> ga:Koza91aa. </month>
Reference-contexts: computer prog. [85] Dynamic training subset sel. for supervised learning in gen. prog. [72] dynamical Appl. of gen. prog. in analyzing multiple steady states of * syst. [237, 128] Interactive evol. of * syst. [43] - Microbehaviors and * syst. : Economic routines as emergent properties of adaptive syst. s <ref> [220, 221, 222] </ref> econometric A gen. appr. to * modeling [43] Economic Microbehaviors and dynamical syst. : * rou tines as emergent properties of adaptive syst. s [192] embryo Artificial embryology: The gen. prog. of an artificial * [192] embryology Artificial * The gen. prog. of an artificial embryo [120] emergence <p> generation of plans for a * via genetic prog. with automatically defined functions [198] The gen. planner: The automatic generation of plans for a * via genetic prog. [168] model An evolved vision-based behavioral * of coordi nated group motion [73] Experiments with a coroutine execution * for gen. prog. <ref> [220, 221, 222] </ref> modeling A gen. appr. to econometric * [238, 20] models Interactive evol. of equations for procedural * [245] Learning mental * [149] modular Gen. synthesis of * neural networks [177, 44] monitoring Gen. prog. to learn an agent's * stra tegy [63] Learning* strategies: a difficult gen. prog.
Reference: [223] <author> John R. Koza and James P. Rice. </author> <title> A genetic approach to artificial intelligence, </title> <note> 1991. (video tape) ga:Koza91f. </note>
Reference-contexts: [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, <ref> [223] </ref> virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table gives references to the contri butions published annually. 1981, [16] 1986, [187, 24] 1989, [217] 51, 207, 54, 55] 127, 123, 134, 223, 224, 46, 14, 129, 130, 191] 225, 226, 10, 227, <p> of autonomous robot cntr. * [192] artificial Artificial embryology: The gen. prog. of an * embryo [192] * embryology: The gen. prog. of an artificial embryo [14] * evol. for computer graphics [184] * morality and gen. prog. [25] On the origin of effective procedures by means of * sel. <ref> [223] </ref> artificial intelligence A gen. appr. to * [218] - Gen. breeding pop. of computer prog. to solve problems in * [170] artworks Criticism, culture, and the automatic genera tion of * [102] automata Context-free language induction by evol. of deterministic push-down * using gen. prog. [100] automated Detector design by
Reference: [224] <author> John R. Koza and James P. Rice. </author> <title> Genetic generation of both the weights and architecture for a neural network. </title> <booktitle> In Proceedings of International Joint Conference on Neural Networks, </booktitle> <volume> volume II, </volume> <pages> pages 397-404, </pages> <address> Seattle, WA, 8.-12. July 1991. </address> <publisher> IEEE Press. * ga:Koza91g. </publisher>
Reference-contexts: prog. mation genetique [41] architecture Architecture-altering operations for evol ving the * of a multipart prog. in gen. prog. [216] - Evol. of subsumption * that perform a wall following task for an autonomous mobile robot via gen. prog. [104] Evolving the * of a multi-part prog. in gen. prog. <ref> [224] </ref> - Gen. generation of both the weights and * for a neural network [41] Architecture-altering operations for evolving the architecture of a multipart prog. in gen. prog. [189] architectures Evol. of autonomous robot cntr. * [192] artificial Artificial embryology: The gen. prog. of an * embryo [192] * embryology: The <p> * Lisp source code to solve the priso ner's dilemma [140] generation A Rep. for the adaptive * of simple sequen tial prog. [24] - Appl. of the GA to automatic prog. * [154] Automatic* of prog. for crawling and walking [170] Criticism, culture, and the automatic * of artworks <ref> [224] </ref> - Gen. * of both the weights and architecture for a neural network [242] - Gen. * of "dendritic trees" for image classification [182] - IC engine misfire detection alg. * using gen. prog. [197, 199] The automatic * of plans for a mobile robot via gen. prog. with automatically <p> Prog. : On Prog. ming Computers by Means of * and Gen. [153] neural nets Gen. prog. of minimal * using Occam's razor <ref> [224] </ref> neural network Gen. generation of both the weights and architecture for a * [30] - Gen. prog. appl. to * design [21] * synthesis using cellular encoding and the GA [31] neural networks Cellular encoding of gen. * [125] - Gen. synthesis of Boolean * with a cell rewriting deve <p> routines [154] walking Automatic generation of prog. for crawling and * [216] wall following task Evol. of subsumption architecture that perform a * for an autonomous mobile robot via gen. prog. [117] ways Two * of discovering the size and shape of a com puter prog. to solve a problem <ref> [224] </ref> weights Gen. generation of both the * and architecture for a neural network [26] Writing prog. using GAs [129] Zoo The computer * - evol. in a box
Reference: [225] <author> John R. Koza. </author> <title> The genetic programming paradigm: Genetically breeding populations of computer programs to solve problems. </title> <booktitle> In Soucek and the IRIS Group [248], </booktitle> <pages> pages 203-321. </pages> <month> ga:Koza92a. </month>
Reference-contexts: * pop. of cntr. strategy prog. [219, 207] - Gen. * of non-linear opt. cntr. strategies for broom balancing [218] - Gen. * pop. of computer prog. to solve problems in artificial intelligence [42] - Gen. prog. : A paradigm for gen. * pop. of computer prog. to solve problems <ref> [225] </ref> The gen. prog. paradigm: Gen. * pop. of computer prog. to solve problems [77] brood The unique implications of * sel. for gen. prog. [206] broom balancing Cart centering and * by gen. bree ding pop. of cntr. strategy prog. [219, 207] - Gen. breeding of non-linear opt. cntr. strategies <p> bile robot via genetic prog. [206] genetically Cart centering and broom balancing by * breeding pop. of cntr. strategy prog. [42] - Gen. prog. : A paradigm for * breeding pop. of computer prog. to solve problems [218] * breeding pop. of computer prog. to solve problems in artificial intelligence <ref> [225] </ref> The gen. prog. paradigm: * breeding pop. of compu ter prog. to solve problems [10] Genetics Gen. Prog. : On Prog. ming Computers by Means of Nat. <p> tion using the gen. prog. * [146] Evolving a computer prog. to generate random num bers using the gen. prog. * [195] - Gen. prog. : A new * for cntr. and analysis [42] - Gen. prog. : A * for gen. breeding pop. of computer prog. to solve problems <ref> [225] </ref> The gen. prog. * Gen. breeding pop. of computer prog. to solve problems [138] parasites Co-evolving * improve simulated evol. as an opt. procedure [96] pattern Feasibility of evolving self-learned * recognition appl. toward the solution of a constrained syst. using gen. prog. [16] Beagle- A Darwinian appr. to * <p> in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding * of computer prog. to solve problems [217] Hierarchical GAs operating on * of computer prog. [54] - Non-linear gen. process for use with co-evolving * [55] - Non-linear gen. process for use with plural co-evolving * <ref> [225] </ref> The gen. prog. paradigm: Gen. breeding * of compu ter prog. to solve problems [105] power Gen. prog. exploratory * and the discovery of functions [169] predatory Evol. learning of * behaviors based on struc tured classifiers [98] prediction Distr. gen. prog. for on-line * in changing environments [101] Stock <p> Non-linear GAs for solving * by finding a fit composi tion of functions [50] - Non-linear GAs for solving * [52] - Non-linear gen. process for data encoding and for sol ving * using automatically defined functions [110] Solving complex * with GAs [34] Solving ident. * by structured GAs <ref> [225] </ref> The gen. prog. paradigm: Gen. breeding pop. of computer prog. to solve * [238, 20] procedural Interactive evol. of equations for * mo dels [138] procedure Co-evolving parasites improve simulated evol. as an opt. * [25] procedures On the origin of effective * by means of artificial sel. [48] process <p> [96] solution Feasibility of evolving self-learned pattern recognition appl. toward the * of a constrained syst. using gen. prog. [218] solve Gen. breeding pop. of computer prog. to * problems in artificial intelligence [42] - Gen. prog. : A paradigm for gen. breeding pop. of computer prog. to * problems <ref> [225] </ref> The gen. prog. paradigm: Gen. breeding pop. of computer prog. to * problems [117] Two ways of discovering the size and shape of a com puter prog. to * a problem [144] Using the GA to generate Lisp source code to * the prisoner's dilemma [46, 47] solving A non-linear
Reference: [226] <author> John R. Koza and James P. Rice. </author> <title> Automatic programming of robots using genetic programming. </title> <booktitle> In AAAI-92 Proceedings Tenth National Conference on Artificial Intelligence, </booktitle> <pages> pages 194-201, </pages> <address> Jan Jose, California, 12. - 16. July 1992. </address> <publisher> AAAI Press/ The MIT Press. ga:Koza92b. </publisher>
Reference-contexts: [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, <ref> [226] </ref> robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, <p> Prog. II, * Discovery of Reusable Prog. [136] Hierarchical* function definition in gen. prog. [154] * generation of prog. for crawling and walking <ref> [226] </ref> * prog. of robots using gen. prog. ming [158] - Perf. improvement of machine learning via * discovery of facilitating functions as appl. to a problem of symbolic syst. ident. [60] Scalable learning in gen. prog. using * function defi nition [200] The gen. planner The* generation of plans for <p> plural co-evolving pop. [35] processing Signal filtering and data * for laser rheo metry [112] Temporal data * using gen. prog. [29] programmation genetique Apprentissage de strategies locales pour architechtures reactives distribuees par * [27] Programmierung Verbesserung des Simulated Annealing unter Anwendung Genetischer * am Beispiel des Diskreten Quadratischen Layoutproblems <ref> [226] </ref> programming Automatic * of robots using gen. prog. [11, 39] - Evol. of food foraging strategies for the Caribbean Anolis lizard using gen. * [201] - Geneettinen ohjelmointi [Gen. * by Koza] [86] - Gen. <p> prog. of a spatial * juggling cntr. alg. [189] - Evol. of autonomous * cntr. architectures [95] Terrain flattening by autonomous * A gen. prog. appl. [181] robotic Evolving co-operation in autonomous * syst. [188] robotics Putting INK into a BIRo: A discussion of problem domain knowledge for evol. * <ref> [226] </ref> robots Automatic prog. of * using gen. prog. ming [185] routines Evolving visual * [43] - Microbehaviors and dynamical syst. : Economic * as emergent properties of adaptive syst. s [82] roving The difficulty of * eyes [64] rule Gen. prog. for the search of a new learning * for
Reference: [227] <author> John R. Koza. </author> <title> A genetic approach to the truck backer upper problem and the inter-twined spiral problem. </title> <booktitle> In Proceedings of the IJCNN International Joint Conference on Neural Networks, volume IV, </booktitle> <pages> pages 310-318, </pages> <address> Baltimore, MD, 7.-11. June 1992. </address> <publisher> IEEE, </publisher> <address> New York. ga:Koza92c. </address>
Reference-contexts: syst. using gen. prog. ming [71] information The use of gen. prog. to build queries for * retrieval [188] INK Putting * into a BIRo: A discussion of problem domain knowledge for evol. robotics [237, 128] Interactive evol. of dynamical syst. [238, 20] * evol. of equations for procedural models <ref> [227] </ref> inter-twined spiral problem A gen. appr. to the truck backer upper problem and the * [212] iteration-performing Automated discovery of detectors and * calculations to recognize patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using * calculations in gen. prog. [179] job shop problem Learning <p> using the gen. prog. paradigm [142] * structured rules in GAs [242] trees Gen. generation of "dendritic * for image classi fication [40] troubling The * aspects of a building block hypothesis for gen. prog. [228] truck A gen. appr. to finding a cntr. to back up a tractor-trailed * <ref> [227] </ref> truck backer upper problem A gen. appr. to the * and the inter-twined spiral problem [78] Turing completeness in the language of gen. prog. with indexed memory [118] turing-complete Evolving * prog. for a register mac hine with self-modifying code [28] typed Strongly * gen. prog. [111] Strongly* gen. prog.
Reference: [228] <author> John R. Koza. </author> <title> A genetic approach to finding a controller to back up a tractor-trailed truck. </title> <booktitle> In Proceedings of the 1992 American Control Conference, </booktitle> <volume> volume 3, </volume> <pages> pages 2307-2311, </pages> <address> Chicago, Illinois, 24. -26. </address> <month> June </month> <year> 1992. </year> <title> Amarican Automatic Control Council. </title> <publisher> ga:Koza92d. </publisher>
Reference-contexts: prog. with * defined functions [216] autonomous Evol. of subsumption architecture that perform a wall following task for an * mobile robot via gen. prog. [189] - Evol. of * robot cntr. architectures [181] Evolving co-operation in * robotic syst. [95] Terrain flattening by * robot: A gen. prog. appl. <ref> [228] </ref> back A gen. appr. to finding a cntr. to * up a tractor trailed truck [16] Beagle A Darwinian appr. to pattern recognition [97] behavior Concurrent evol. of territory-defining * in birds using gen. prog. [168] behavioral An evolved vision-based * model of coordi nated group motion [169] behaviors Evol. <p> to * independently-acting agents [99] - Evol. by gen. prog. of a spatial robot juggling * alg. [189] - Evol. of autonomous robot * architectures [219, 207] - Gen. breeding of non-linear opt. * strategies for broom balancing [195] - Gen. prog. : A new paradigm for * and analysis <ref> [228] </ref> controller A gen. appr. to finding a * to back up a tractor-trailed truck [181] co-operation Evolving * in autonomous robotic syst. [111] cooperation Strongly typed gen. prog. in evolving * strategies [168] coordinated An evolved vision-based behavioral model of * group motion [68] cores Automated learning of a detector <p> using gen. prog. [95] Terrain flattening by autonomous robot: A gen. prog. appl. [97] territory-defining Concurrent evol. of * behavior in birds using gen. prog. [116] testbed The mating pool: A * for experiments in the evol. of symbol syst. [101] time series Stock price * prediction using gen. prog. <ref> [228] </ref> tractor-trailed A gen. appr. to finding a cntr. to back up a * truck [94] trade Evol. of * strategies using GAs and gen. prog. [85] training Dynamic * subset sel. for supervised learning in gen. prog. [161] tree Concept formation and decision * induction using the gen. prog. paradigm <p> sel. for supervised learning in gen. prog. [161] tree Concept formation and decision * induction using the gen. prog. paradigm [142] * structured rules in GAs [242] trees Gen. generation of "dendritic * for image classi fication [40] troubling The * aspects of a building block hypothesis for gen. prog. <ref> [228] </ref> truck A gen. appr. to finding a cntr. to back up a tractor-trailed * [227] truck backer upper problem A gen. appr. to the * and the inter-twined spiral problem [78] Turing completeness in the language of gen. prog. with indexed memory [118] turing-complete Evolving * prog. for a register
Reference: [229] <author> John R. Koza. </author> <title> Discovery of a main program and reusable subroutines using genetic programming. </title> <editor> In ?, editor, </editor> <booktitle> Proceedings of the Fifth Workshop on Neural Networks: Academic/Industrial/NASA/Defence, volume SPIE-2204, </booktitle> <pages> pages 109-118, </pages> <address> San Francisco, CA, 7.-10. </address> <month> November </month> <year> 1993. </year> <booktitle> The International Society for Optical Engineering. </booktitle> * <address> ga:Koza93e. </address>
Reference-contexts: robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, <ref> [229] </ref> sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI design, [92] ZOO, [129] 16 3.9 Annual index The following table gives references to the <p> Prog. II, Automatic * of Reusable Prog. [105] - Gen. prog. exploratory power and the * of functions [155] - Gen. prog. for feature * and image discrimination <ref> [229] </ref> * of a main prog. and reusable subroutines using gen. prog. [158] - Perf. improvement of machine learning via automatic * of facilitating functions as appl. to a problem of symbolic syst. ident. [159] Simultaneous* of detectors and a way of using the detectors via gen. prog. [152] Simultaneous* of <p> [118] machine Evolving turing-complete prog. for a register * with self-modifying code [158] machine learning Perf. improvement of * via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. ident. [100] magnetic resonance images Detector design by gen. prog. for automated border definition in cardiac * <ref> [229] </ref> main program Discovery of a * and reusable subrou tines using gen. prog. [62] mapmaking Evol. of * Learning, planning, and me mory using gen. prog. [116] mating The * pool: A testbed for experiments in the evol. of symbol syst. [19] means Gen. prog. as a * for prog. <p> Prog. search with a hierarchical variable length * Gen. prog. , simulated annealing and hill climbing [121, 37] representations Coevolving high-level * [45] - Gen. prog. with adaptive * [76] Learning by adapting * in gen. prog. [71] retrieval The use of gen. prog. to build queries for info * <ref> [229] </ref> reusable Discovery of a main prog. and * subroutines using gen. prog. [9] - Gen. Prog. <p> in evolving cooperation strategies [91] structure Exploring the underlying * of nat. images through gen. prog. [169] structured Evol. learning of predatory behaviors based on * classifiers [203] - Meta-level strategy learning for GA based on * Rep. [34] Solving ident. problems by * GAs [142] Tree* rules in GAs <ref> [229] </ref> subroutines Discovery of a main prog. and reusable * using gen. prog. [152] Simultaneous discovery of reusable detectors and * using gen. prog. [175] The evol. induction of * [85] subset Dynamic training * sel. for supervised learning in gen. prog. [216] subsumption Evol. of * architecture that perform a
Reference: [230] <author> Minga Liang and Alden H. Wright. </author> <title> A hierarchical genetic system for symbolic function identification. </title> <editor> In ?, editor, </editor> <booktitle> Proceedings of the 24th Symposium on the Interface: </booktitle> <institution> Computing Science and Statistics, volume ?, page ?, College Station, TX, </institution> <month> March </month> <year> 1992. </year> ? <note> y(Langdon/bib) ga:Jiang92a. </note>
Reference-contexts: strategies for the Caribbean Anolis lizard using gen. prog. 20 [11, 39] foraging Evol. of food * strategies for the Caribbean Anolis lizard using gen. prog. [161] formation Concept * and decision tree induction using the gen. prog. paradigm [134] function A hierarchical appr. to learning the Boolean multiplexer * <ref> [230, 22] </ref> A hierarchical gen. syst. for symbolic * ident. [205] An adaptive * ident. syst. [208] Finding an impulse response * using gen. prog. [136] Hierarchical automatic * definition in gen. prog. [60] Scalable learning in gen. prog. using automatic * definition [48] functions A non-linear gen. process for data <p> group An evolved vision-based behavioral model of coordinated * motion [244] halting Gen. prog. , indexed memory, the * problem, and other curiosities [132] harsh Looping as a means to survival: playing Russian roulette in a * environment [134] hierarchical A * appr. to learning the Boolean mul tiplexer function <ref> [230, 22] </ref> A* gen. syst. for symbolic function ident. [136] * automatic function definition in gen. prog. [217] * GAs operating on pop. of computer prog. [180] * selforganization in gen. prog. [87, 38] - Prog. search with a * variable length Rep. : Gen. prog. , simulated annealing and hill <p> , simulated annealing and hill climbing [121, 37] high-level Coevolving * Rep. [87, 38] hill climbing Prog. search with a hierarchical variable length Rep. : Gen. prog. , simulated annealing and * [89, 33] hill-climbing Gen. prog. with local * [182] IC engine misfire detection alg. generation using gen. prog. <ref> [230, 22] </ref> identification A hierarchical gen. syst. for symbolic function * [205] An adaptive function * syst. [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. * [34] Solving* problems by structured GAs [242] image Gen. generation of "dendritic <p> training subset sel. for * learning in gen. prog. [132] survival Looping as a means to * playing Russian rou lette in a harsh environment [164] switchable Differentiable chromosomes The gen. prog. of * shape-genes [116] symbol The mating pool: A testbed for experiments in the evol. of * syst. <ref> [230, 22] </ref> symbolic A hierarchical gen. syst. for * function ident. [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of * syst. ident. [92] synthesis Circuit * through gen. prog. [125] - Gen. * of Boolean neural networks with a cell
Reference: [231] <author> Brij Masand. </author> <title> Advances in genetic programming. </title> <editor> In Kinnear, Jr. </editor> <title> [7], chapter 21. Optimizing confidence of text classification by evolution of symbolic expressions, </title> <note> page ? y(Koza) ga94aMasand. </note>
Reference: [232] <author> Peter Nordin. </author> <title> Advances in genetic programming. </title> <editor> In Kinnear, Jr. </editor> <title> [7], chapter 14. A compiling genetic programming system that directly manipulates the machine code, </title> <address> pages 311-331. y(Back) ga94aNordin. </address>
Reference-contexts: introduction, [213] L-systems, [86] learning, [214] locality, [66] machine code, <ref> [232] </ref> maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, <p> 116, 117, 118] 3.10 Geographical index The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) <ref> [153, 232, 115, 118] </ref> * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, 221, 222, 146, 127, 123, 134, 228, 136, 48, 49, 11, 39, <p> the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland [201, 246] * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden <ref> [232, 115, 118] </ref> * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, 54, 55, 121, 161, 221, 222, 146, 127, 123, 134, 228, 136, 48, 49, 11, 39, 47, 53, 52, 40, 128, 238, 44, 35, 20, 8, 154, 155,
Reference: [233] <author> Howard Oakley. </author> <title> Advances in genetic programming. </title> <editor> In Kinnear, Jr. </editor> <title> [7], chapter 17. Two scientific applications of genetic programming: Stack filters and non-linear equation fitting to chaotic data, </title> <note> page ? y(Koza) ga94aOakley. </note>
Reference-contexts: [146, 246] genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, <ref> [233] </ref> genetic programming, [80] simulated annealing fine tuning schedules, [79] simulation, [11, 39] software reuse, [229] sorting, [157, 151] sport, [186] system identification, [208] text book, [9] theory, [78] time series prediction, [101] Turing completeness genetic programming, [78] variation, [88] video, [215] video tape, [223] virtual reality genetic programming, [65] VLSI
Reference: [234] <author> Craig W. Reynolds. </author> <title> Advances in genetic programming. </title> <editor> In Kinnear, Jr. </editor> <title> [7], chapter 10. Evolution of obstacle avoidance behavior: Using noise to promote robust solutions, </title> <note> page ? y(Koza) ga94Reynolds. </note>
Reference: [235] <author> Conor Ryan. </author> <title> Advances in genetic programming. </title> <editor> In Kinnear, Jr. </editor> <title> [7], </title> <type> chapter 11. </type> <institution> Pygmies and civil servants, page ? y(Koza) ga94Ryan. </institution>
Reference: [236] <author> Eric V. Siegel. </author> <title> Advances in genetic programming. </title> <editor> In Kinnear, Jr. </editor> <title> [7], chapter 19. Competitively evolving decision trees against fixed training cases for natural language processing, </title> <note> page ? y(Koza) ga94aSiegel. </note>
Reference-contexts: introduction, [213] L-systems, [86] learning, [214] locality, [66] machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, <ref> [236] </ref> neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing,
Reference: [237] <author> Karl Sims. </author> <title> Interactive evolution of dynamical systems. In ?, editor, Toward a Practise of Autonomous Systems: </title> <booktitle> Proceedings of the First European Conference on Artificial Life, page ?, ?, ? 1994. </booktitle> <publisher> The MIT Press. y(Langdon/bib) ga94aSims. </publisher>
Reference-contexts: INK into a BIRo: A discussion of problem * knowledge for evol. robotics [183] double-based Using a * GA on a pop. of computer prog. [85] Dynamic training subset sel. for supervised learning in gen. prog. [72] dynamical Appl. of gen. prog. in analyzing multiple steady states of * syst. <ref> [237, 128] </ref> Interactive evol. of * syst. [43] - Microbehaviors and * syst. : Economic routines as emergent properties of adaptive syst. s [220, 221, 222] econometric A gen. appr. to * modeling [43] Economic Microbehaviors and dynamical syst. : * rou tines as emergent properties of adaptive syst. s [192] <p> computer graphics [138] - Co-evolving parasites improve simulated * as an opt. procedure [115] Complexity compression and * [97] Concurrent* of territory-defining behavior in birds using gen. prog. [102] Context-free language induction by * of deterministic push-down automata using gen. prog. [123] - Gen. * and co-evol. of computer prog. <ref> [237, 128] </ref> Interactive* of dynamical syst. [238, 20] Interactive* of equations for procedural models [166] * and coevol. of computer prog. to cntr. independently acting agents [99] * by gen. prog. of a spatial robot juggling cntr. alg. [189] * of autonomous robot cntr. architectures [93] * of damage-immune prog. using <p> with gen. prog. [175] The evol. * of subroutines [106] inductive logic An adaptive * prog. syst. using gen. prog. ming [71] information The use of gen. prog. to build queries for * retrieval [188] INK Putting * into a BIRo: A discussion of problem domain knowledge for evol. robotics <ref> [237, 128] </ref> Interactive evol. of dynamical syst. [238, 20] * evol. of equations for procedural models [227] inter-twined spiral problem A gen. appr. to the truck backer upper problem and the * [212] iteration-performing Automated discovery of detectors and * calculations to recognize patterns in protein sequences using gen. prog. [70]
Reference: [238] <author> Karl Sims. </author> <title> Interactive evolution of equations for procedural models. In Proceedings of IMAGINA Conference, page ?, Monte Carlo, </title> <address> 29.-30. </address> <month> January </month> <year> 1992. </year> ? <note> y([10]) ga:Sims92b. 34 </note>
Reference-contexts: using spontaneously emergent self-replicating and self improving * [53] - Non-linear gen. process for problem solving using spon taneously emergent self-replicating and self-improving * [132] environment Looping as a means to survival: playing Russian roulette in a harsh * [98] environments Distr. gen. prog. for on-line prediction in changing * <ref> [238, 20] </ref> equations Interactive evol. of * for procedural mo dels [246] etsinta Satunnaistajan * [Gen. prog. random number generator by Koza] [14] evolution Artificial * for computer graphics [138] - Co-evolving parasites improve simulated * as an opt. procedure [115] Complexity compression and * [97] Concurrent* of territory-defining behavior in <p> improve simulated * as an opt. procedure [115] Complexity compression and * [97] Concurrent* of territory-defining behavior in birds using gen. prog. [102] Context-free language induction by * of deterministic push-down automata using gen. prog. [123] - Gen. * and co-evol. of computer prog. [237, 128] Interactive* of dynamical syst. <ref> [238, 20] </ref> Interactive* of equations for procedural models [166] * and coevol. of computer prog. to cntr. independently acting agents [99] * by gen. prog. of a spatial robot juggling cntr. alg. [189] * of autonomous robot cntr. architectures [93] * of damage-immune prog. using gen. prog. [11, 39] * of <p> of subroutines [106] inductive logic An adaptive * prog. syst. using gen. prog. ming [71] information The use of gen. prog. to build queries for * retrieval [188] INK Putting * into a BIRo: A discussion of problem domain knowledge for evol. robotics [237, 128] Interactive evol. of dynamical syst. <ref> [238, 20] </ref> * evol. of equations for procedural models [227] inter-twined spiral problem A gen. appr. to the truck backer upper problem and the * [212] iteration-performing Automated discovery of detectors and * calculations to recognize patterns in protein sequences using gen. prog. [70] Recognizing patterns in protein sequences using * <p> automatically defined functions [198] The gen. planner: The automatic generation of plans for a * via genetic prog. [168] model An evolved vision-based behavioral * of coordi nated group motion [73] Experiments with a coroutine execution * for gen. prog. [220, 221, 222] modeling A gen. appr. to econometric * <ref> [238, 20] </ref> models Interactive evol. of equations for procedural * [245] Learning mental * [149] modular Gen. synthesis of * neural networks [177, 44] monitoring Gen. prog. to learn an agent's * stra tegy [63] Learning* strategies: a difficult gen. prog. appl. [184] morality Artificial * and gen. prog. [168] motion <p> - Non-linear GAs for solving * [52] - Non-linear gen. process for data encoding and for sol ving * using automatically defined functions [110] Solving complex * with GAs [34] Solving ident. * by structured GAs [225] The gen. prog. paradigm: Gen. breeding pop. of computer prog. to solve * <ref> [238, 20] </ref> procedural Interactive evol. of equations for * mo dels [138] procedure Co-evolving parasites improve simulated evol. as an opt. * [25] procedures On the origin of effective * by means of artificial sel. [48] process A non-linear gen. * for data encoding and for solving problems using automatically defined
Reference: [239] <author> Lee Spector. </author> <title> Genetic programming and AI planning systems. </title> <editor> In ?, editor, </editor> <booktitle> Proceedings of the Tweftth National Conference on Artificial Intelligence, </booktitle> <volume> volume 2, </volume> <pages> pages 1329-1334, </pages> <address> Seattle, WA, 31. July-4. August 1994. </address> <publisher> AAAI Press / The MIT Press. </publisher> <address> y(EI M017995/95) ga94aSpector. </address>
Reference-contexts: Economic routi nes as emergent properties of * syst. s [166] agents Evol. and coevol. of computer prog. to cntr. independently-acting * [177, 44] agent's Gen. prog. to learn an * monitoring strategy [108] agents The evol. of * that build mental models and create simple plans using gen. prog. <ref> [239] </ref> AI Gen. prog. and * planning syst. [195] analysis Gen. prog. : A new paradigm for cntr. and * [72] analyzing Appl. of gen. prog. in * multiple steady states of dynamical syst. [11, 39] Anolis Evol. of food foraging strategies for the Carib bean * lizard using gen. prog. <p> [200] planner The gen. * The automatic generation of plans for a mobile robot via genetic prog. with automatically defined functions [198] The gen. * The automatic generation of plans for a mobile robot via genetic prog. [62] planning Evol. of mapmaking: Learning, * and me mory using gen. prog. <ref> [239] </ref> - Gen. prog. and AI * syst. [197, 199] plans The automatic generation of * for a mobile robot via gen. prog. with automatically defined functions [108] The evol. of agents that build mental models and create simple * using gen. prog. [200] The gen. planner The automatic generation of
Reference: [240] <author> Graham F. Spencer. </author> <title> Advances in genetic programming. </title> <editor> In Kinnear, Jr. </editor> <title> [7], chapter 15. Automatic generation of programs for crawling and walking, </title> <note> page ? y(Koza) ga94aSpencer. </note>
Reference: [241] <author> Walter Alden Tackett. </author> <title> Advances in genetic programming. </title> <editor> In Kinnear, Jr. </editor> <title> [7], chapter 7. The donut problem: Scalability, generalization and breeding policies in genetic programming, </title> <note> page ? y(Koza) ga94cTackett. </note>
Reference: [242] <author> Walter Alden Tackett. </author> <title> Genetic generation of "dendritic trees" for image classification. </title> <booktitle> In Proceedings of the World Congress on Neural Networks - WCNN '93, volume IV, </booktitle> <pages> pages 646-649, </pages> <address> Portland, OR, 11.-15. July 1993. </address> <publisher> Lawrence Erlbaum Ass., Inc., </publisher> <address> Hillsdale, NJ. ga:Tackett93b. </address>
Reference-contexts: neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, [246] regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, <ref> [242] </ref> border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, [14] induction context-free languages, [102] job shop problem, [178] L-System, [86] learning multiplexer, [134] machine learning, [187, 44, 158] genetic programming, [214] training, [85] mapmaking, [62] medicine cardiology, [100] mobile robots, [200, 196] OCR, [80] <p> Neural network synthesis using * encoding and the GA [194] * encoding as a graph grammar [31] * encoding of gen. neural networks [98] changing Distr. gen. prog. for on-line prediction in * environments [164] chromosomes Differentiable * The gen. prog. of switchable shape-genes [92] Circuit synthesis through gen. prog. <ref> [242] </ref> classification Gen. generation of "dendritic trees" for image * [169] classifiers Evol. learning of predatory behaviors based on structured * [118] code Evolving turing-complete prog. for a register mac hine with self-modifying * [166] coevolution Evol. and * of computer prog. to cntr. independently-acting agents [123] co-evolution Gen. evol. and <p> of plans for a mobile robot via genetic prog. with automatically * func tions [100] definition Detector design by gen. prog. for automa ted border * in cardiac magnetic resonance images [136] Hierarchical automatic function * in gen. prog. [60] Scalable learning in gen. prog. using automatic func tion * <ref> [242] </ref> dendritic Gen. generation of * trees" for image classi fication [100] design Detector * by gen. prog. for automated border definition in cardiac magnetic resonance images [30] - Gen. prog. appl. to neural network * [182] detection IC engine misfire * alg. generation using gen. prog. [150] detector Automated learning <p> for the adaptive * of simple sequen tial prog. [24] - Appl. of the GA to automatic prog. * [154] Automatic* of prog. for crawling and walking [170] Criticism, culture, and the automatic * of artworks [224] - Gen. * of both the weights and architecture for a neural network <ref> [242] </ref> - Gen. * of "dendritic trees" for image classification [182] - IC engine misfire detection alg. * using gen. prog. [197, 199] The automatic * of plans for a mobile robot via gen. prog. with automatically defined functions [200] The gen. planner The automatic * of plans for a mobile <p> alg. generation using gen. prog. [230, 22] identification A hierarchical gen. syst. for symbolic function * [205] An adaptive function * syst. [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a problem of symbolic syst. * [34] Solving* problems by structured GAs <ref> [242] </ref> image Gen. generation of "dendritic trees" for * classi fication [155] - Gen. prog. for feature discovery and * discrimination [8] images Evolving * [91] Exploring the underlying structure of nat. * through gen. prog. [77] implications The unique * of brood sel. for gen. prog. [208] impulse response Finding <p> a cntr. to back up a * truck [94] trade Evol. of * strategies using GAs and gen. prog. [85] training Dynamic * subset sel. for supervised learning in gen. prog. [161] tree Concept formation and decision * induction using the gen. prog. paradigm [142] * structured rules in GAs <ref> [242] </ref> trees Gen. generation of "dendritic * for image classi fication [40] troubling The * aspects of a building block hypothesis for gen. prog. [228] truck A gen. appr. to finding a cntr. to back up a tractor-trailed * [227] truck backer upper problem A gen. appr. to the * and
Reference: [243] <author> Astro Teller. </author> <title> Advances in genetic programming. </title> <editor> In Kinnear, Jr. </editor> <title> [7], chapter 9. The evolution of mental models, </title> <note> page ? y(Koza) ga94bTeller. </note>
Reference: [244] <author> Astro Teller. </author> <title> Genetic programming, indexed memory, the halting problem, </title> <editor> and other curiosities. In ?, editor, </editor> <booktitle> Proceedings of the 7th Annual Florida Artificial Intelligence Research Symposium, </booktitle> <address> page ?, Pensacola, FL, ? 1994. </address> <publisher> IEEE Press, </publisher> <address> New York. y(Langdon/bib) ga94cTeller. </address>
Reference-contexts: prog. [73] coroutine Experiments with a * execution model for gen. prog. [154] crawling Automatic generation of prog. for * and wal king [170] Criticism culture, and the automatic generation of artworks [66] crossover Context preserving * in gen. prog. [170] culture Criticism, * and the automatic generation of artworks <ref> [244] </ref> curiosities Gen. prog. , indexed memory, the halting problem, and other * [58] current Gen. prog. : A * snapshot [93] damage-immune Evol. of * prog. using gen. prog. [16] Darwinian Beagle A* appr. to pattern recognition [161] decision Concept formation and * tree induction using the gen. prog. paradigm <p> tion A case study in gen. prog. [81] graph On the use of a directed acyclic * to represent a pop. of computer prog. [194] graph grammar Cellular encoding as a * [14] graphics Artificial evol. for computer * [168] group An evolved vision-based behavioral model of coordinated * motion <ref> [244] </ref> halting Gen. prog. , indexed memory, the * problem, and other curiosities [132] harsh Looping as a means to survival: playing Russian roulette in a * environment [134] hierarchical A * appr. to learning the Boolean mul tiplexer function [230, 22] A* gen. syst. for symbolic function ident. [136] * <p> * through gen. prog. [77] implications The unique * of brood sel. for gen. prog. [208] impulse response Finding an * function using gen. prog. [166] independently-acting Evol. and coevol. of computer prog. to cntr. * agents [78] indexed Turing completeness in the language of gen. prog. with * memory <ref> [244] </ref> indexed memory Gen. prog. , * the halting problem, and other curiosities [161] induction Concept formation and decision tree * using the gen. prog. paradigm [102] Context-free language * by evol. of deterministic push down automata using gen. prog. [67] Regular language * with gen. prog. [175] The evol. * <p> environments [101] Stock price time series * using gen. prog. [66] preserving Context * crossover in gen. prog. [144] prisoner's dilemma Using the GA to generate Lisp source code to solve the * [176] problem Appl. of search methods to sch. * in plastics forming plant: A binary Rep. appr. <ref> [244] </ref> - Gen. prog. , indexed memory, the halting * and other curiosities [158] - Perf. improvement of machine learning via automatic discovery of facilitating functions as appl. to a * of symbolic syst. ident. [188] Putting INK into a BIRo: A discussion of * domain knowledge for evol. robotics [117]
Reference: [245] <author> Astro Teller. </author> <title> Learning mental models. </title> <editor> In ?, editor, </editor> <booktitle> Proceedings of the Fifth Workshop on Neural Networks: An International Conference on Computational Intelligence: Neural Networks, Fuzzy Systems, Evolutionary Programming, and Virtual Reality, </booktitle> <address> page ?, ?, ? 1993. ? y(Langdon/bib) ga:Teller93a. </address>
Reference-contexts: Permuted title index 21 [76] * by adapting Rep. in gen. prog. [179] * distr. reactive strategies by gen. prog. for the general job shop problem [178] * distributive reactive strategies by gen. prog. for the general job shop problem <ref> [245] </ref> * mental models [63] * monitoring strategies: a difficult gen. prog. appl. [60] Scalable* in gen. prog. using automatic function definition [87, 38] length Prog. search with a hierarchical variable * Rep. : Gen. prog. , simulated annealing and hill climbing [157] Lessons Evolving a sort: * in gen. prog. <p> Looping as a * to survival: playing Russian roulette in a harsh environment [25] On the origin of effective procedures by * of artificial sel. [62] memory Evol. of mapmaking: Learning, planning, and * using gen. prog. [78] - Turing completeness in the language of gen. prog. with indexed * <ref> [245] </ref> mental Learning * models [108] mental models The evol. of agents that build * and create simple plans using gen. prog. [203] Meta-level strategy learning for GA based on structu red Rep. [176] methods Appl. of search * to sch. problem in plastics forming plant: A binary Rep. appr. [43] <p> of plans for a * via genetic prog. [168] model An evolved vision-based behavioral * of coordi nated group motion [73] Experiments with a coroutine execution * for gen. prog. [220, 221, 222] modeling A gen. appr. to econometric * [238, 20] models Interactive evol. of equations for procedural * <ref> [245] </ref> Learning mental * [149] modular Gen. synthesis of * neural networks [177, 44] monitoring Gen. prog. to learn an agent's * stra tegy [63] Learning* strategies: a difficult gen. prog. appl. [184] morality Artificial * and gen. prog. [168] motion An evolved vision-based behavioral model of coordinated group * [41]
Reference: [246] <author> Petri Yllo. </author> <title> Satunnaistajan etsinta [genetic programming random number generator by koza]. </title> <booktitle> In Alander [249], chapter 13, </booktitle> <pages> pages 145-152. </pages> <note> (in Finnish) GA:Yllo92. </note>
Reference-contexts: introduction, [213] L-systems, [86] learning, [214] locality, [66] machine code, [232] maps, [62] modelling, [73] monitoring strategies, [63] natural language processing, [236] neural networks, [64, 193] performance, [211] populations, [75] protein sequences, [68] proteins, [70] random numbers, <ref> [246] </ref> regular language induction, [67] review, [59] robotics, [196] selection, [77] Subject index 15 signal processing, [80] simulated annealing, [79] sorting, [157] stack based, [74] system identification, [83] virtual reality, [65] GENNETS, [130] image processing, [242] border detector, [100] magnetic resonance, [100] images processing, [91] implementation C++, [209, 13] Connection Machine, <p> 96] protein sequences, [212] pattern recognition?, [202, 172] planning, [198, 199] population genetic programming, [75] prediction, [98] prisoner's dilemma, [144] problem solving, [50, 55, 53, 52] program space, [143] protein folding, [150, 70] genetic programming, [68] protein sequences, [70, 212] transmembrane domain, [212] random number generation, [204] random number generators, <ref> [146, 246] </ref> genetic programming, [67] representation genetic programming, [76] robot autonomous, [95] robot programming, [226] robotics, [198, 199, 188, 189, 21] autonomous, [181] mobile, [200, 216] robots juggling, [99] mobile, [197] rules, [142] scheduling, [149, 176] job shop, [179] selection genetic programming, [77] shape-genes, [164] signal processing, [35, 182] filters, [233] <p> 19, 23, 174, 212, 60, 9, 213, 214, 215, 41, 216, 120] 114, 115, 105, 106, 116, 117, 118] 3.10 Geographical index The following table gives references to the contri butions by the country of the author (s). * Belgium [130] * Canada [64, 184] * Denmark [129] * Finland <ref> [201, 246] </ref> * France [30, 31, 29, 179, 149, 183, 21] * Germany (inluding former DDR) [153, 232, 115, 118] * Japan [176, 33, 83, 112] * Sweden [232, 115, 118] * United Kingdom [26, 25, 132, 113] * United States [217, 206, 42, 166, 50, 218, 219, 220, 51, 207, <p> gen. process for problem solving using spon taneously emergent self-replicating and self-improving * [132] environment Looping as a means to survival: playing Russian roulette in a harsh * [98] environments Distr. gen. prog. for on-line prediction in changing * [238, 20] equations Interactive evol. of * for procedural mo dels <ref> [246] </ref> etsinta Satunnaistajan * [Gen. prog. random number generator by Koza] [14] evolution Artificial * for computer graphics [138] - Co-evolving parasites improve simulated * as an opt. procedure [115] Complexity compression and * [97] Concurrent* of territory-defining behavior in birds using gen. prog. [102] Context-free language induction by * of <p> prog. for the general * [17, 18] joy The * of gen. prog. [99] juggling Evol. by gen. prog. of a spatial robot * cntr. alg. [188] knowledge Putting INK into a BIRo: A discussion of problem domain * for evol. robotics [201] Koza Geneettinen ohjelmointi [Gen. prog. by * <ref> [246] </ref> - Satunnaistajan etsinta [Gen. prog. random number generator by * [102] language Context-free * induction by evol. of determi nistic push-down automata using gen. prog. [78] - Turing completeness in the * of gen. prog. with in dexed memory [35] laser Signal filtering and data processing for * rheometry [27] <p> automata using gen. prog. [188] Putting INK into a BIRo: A discussion of problem do main knowledge for evol. robotics [27] Quadratischen Verbesserung des Simulated Annealing unter Anwendung Genetischer Programmierung am Beispiel des Diskreten * Layoutproblems [71] queries The use of gen. prog. to build * for info ret rieval <ref> [246] </ref> random number generator Satunnaistajan etsinta [Gen. prog. * by Koza] [146] random numbers Evolving a computer prog. to gene rate * using the gen. prog. paradigm [153] razor Gen. prog. of minimal neural nets using Occam's * [179] reactive Learning distr. * strategies by gen. prog. for the general job <p> eyes [64] rule Gen. prog. for the search of a new learning * for neural networks [80] rules Learning and upgrading * for an OCR syst. using gen. prog. [142] Tree structured * in GAs [132] Russian roulette Looping as a means to survival: playing * in a harsh environment <ref> [246] </ref> Satunnaistajan etsinta [Gen. prog. random number generator by Koza] [60] Scalable learning in gen. prog. using automatic func tion definition [79] schedules Finding improved simulated annealing * with gen. prog. [176] scheduling Appl. of search methods to * problem in plastics forming plant: A binary Rep. appr. [176] search Appl.
Reference: [247] <author> Takashi Iwamoto, Wolfgang Banzhaf, and Kazuo Kyuma. </author> <title> Topological aspects of genetic algorithms. </title> <note> In Forrest [147], page 638. ga:Banzhaf93b. </note>
Reference: [248] <editor> Branco Soucek and the IRIS Group, editors. </editor> <booktitle> Dynamic, Genetic, and Chaotic Programming. Sixth Generation Computer Technologies. </booktitle> <publisher> John Wiley & Sons, </publisher> <address> New York, </address> <year> 1992. </year> <month> ga:GACP. </month>

References-found: 246

