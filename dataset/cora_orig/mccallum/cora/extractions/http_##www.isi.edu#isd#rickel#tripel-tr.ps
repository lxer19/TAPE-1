URL: http://www.isi.edu/isd/rickel/tripel-tr.ps
Refering-URL: http://www.isi.edu/isd/rickel/index.html
Root-URL: http://www.isi.edu
Title: by  
Author: Jeffrey Walter Rickel 
Date: 1995  
Note: Copyright  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> L. Acker, J. Lester, A. Souther, and B. Porter. </author> <title> Generating coherent explanations to answer students' questions. </title> <editor> In H. Burns and J. Parlett, editors, </editor> <booktitle> Intelligent Tutoring Systems: Evolutions in Design. </booktitle> <publisher> Lawrence Erlbaum Associates, </publisher> <address> Hillsdale, NJ, </address> <year> 1990. </year>
Reference-contexts: However, while the bkb can provide the knowledge tripel needs, we soon discovered a number of errors in its knowledge. The bkb has been used to support a variety of research projects, including machine learning [63, 64], explanation generation <ref> [1, 2, 57] </ref>, and natural language generation [9]. However, none of these projects required the types of knowledge that tripel needs, so the knowledge grew without being tested, and errors accumulated over the years.
Reference: [2] <author> Liane Acker and Bruce Porter. </author> <title> Extracting viewpoints from knowledge bases. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI-94), </booktitle> <pages> pages 547-552, </pages> <address> Menlo Park, CA, 1994. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: However, while the bkb can provide the knowledge tripel needs, we soon discovered a number of errors in its knowledge. The bkb has been used to support a variety of research projects, including machine learning [63, 64], explanation generation <ref> [1, 2, 57] </ref>, and natural language generation [9]. However, none of these projects required the types of knowledge that tripel needs, so the knowledge grew without being tested, and errors accumulated over the years.
Reference: [3] <author> S. Addanki, R. Cremonini, and J.S. Penberthy. </author> <title> Graphs of models. </title> <journal> Artificial Intelligence, </journal> <volume> 51 </volume> <pages> 145-177, </pages> <year> 1991. </year>
Reference-contexts: While each of these is similar to adequacy constraint 13, our particular formulation is novel. For prediction questions, the requirement of differential influence paths is crucial. 5.5 Other Related Work Some previous automated modeling programs address tasks in which the correct behavior of the variables of interest is known <ref> [3, 84] </ref>. In these programs, a model is adequate only if its predictions match the correct behavior (within a specified tolerance). Because a prediction question does not provide the correct behavior, we do not use such an adequacy constraint. <p> Finally, for the textbook physics problems mecho solves, a much simpler criterion for choosing exogenous variables is sufficient; a variable can be exogenous if and only if its value is given. Several people have explored an approach to model construction called "discrepancy-driven refinement" <ref> [3, 5, 84] </ref>. After constructing an initial model, the modeler compares its predictions against the known behavior of the system. Discrepancies suggest refinements to the model, and the process is repeated until a sufficiently close match is obtained. <p> In tutoring, a student might be told that a physical system behaves in a certain way (e.g., "When a plant begins to wilt, aba builds up in its guard cells") and the student may ask why. There has been a lot of important work on answering explanation questions <ref> [3, 5, 37, 84] </ref>. The most common technique is called "discrepancy-driven refinement." In this technique, the modeler constructs an initial model of the scenario and compares its predictions against the known behavior of the variables of interest. Discrepancies suggest particular changes to the model that will reduce or eliminate them.
Reference: [4] <author> T.F.H. Allen and T.B. Starr. </author> <title> Hierarchy. </title> <publisher> University of Chicago Press, </publisher> <address> Chicago, </address> <year> 1982. </year>
Reference-contexts: In addition to previous work in automated modeling, our research has been guided by the practices of human modelers in biology, ecology, economics, and engineering. While human modelers rarely offer operational advice for automating their task, their textbooks (e.g., <ref> [4, 14, 31, 34, 45, 49, 59, 75, 76] </ref>) and journal articles (e.g., [32, 38, 39, 40, 50, 69, 78, 79, 82]) often reveal the modeling alternatives they consider and the criteria for their choices. 11 1.10 Summary of Contributions and Results Our research provides three types of contributions. <p> A model can often be greatly simplified when insignificant influences are recognized and omitted. While human modelers use many criteria to determine the significance of influences, knowledge of the time scale of different processes is particularly important. Processes cause significant change on widely disparate time scales <ref> [4, 36, 68, 76, 80] </ref>. For example, in a plant, water flows through membranes on a time scale of seconds, solutes flow through membranes on a time scale of minutes, growth requires hours or days, and surrounding ecological processes may occur on a time scale of months or years. <p> In natural systems, like plants, animals, and ecosystems, modularity arises from the widely disparate time scales at which processes cause change <ref> [4, 53, 68, 76, 80] </ref>. The result is a hierarchy of nearly decomposable subsystems; processes acting within a subsystem cause significant change quickly, while processes acting across subsystems cause change more slowly [4, 53, 68, 82]. <p> The result is a hierarchy of nearly decomposable subsystems; processes acting within a subsystem cause significant change quickly, while processes acting across subsystems cause change more slowly <ref> [4, 53, 68, 82] </ref>. The time scale of interest filters out influences that are significant only on slower time scales, thus isolating the variables of interest in their own nearly decomposable subsystem. <p> These modeling techniques are useful, and often necessary, to achieve conceptual clarity, to enable analytic solutions to a model's equations, and even to enable practical numerical or qualitative simulation. The techniques are widely used in many fields, including economics [82], biology [34, 45, 77, 80, 88], ecology <ref> [4, 46, 68, 79] </ref> and many areas of engineering [14, 50, 78]. However, a person asking a prediction question cannot be expected to provide the time scale of interest.
Reference: [5] <author> Jonathan Amsterdam. </author> <title> Automated Qualitative Modeling of Dynamic Physical Systems. </title> <type> PhD thesis, </type> <institution> Artificial Intelligence Laboratory, Massachusetts Institute of Technology, </institution> <year> 1993. </year> <type> Technical Report 1412. </type>
Reference-contexts: Other programs (e.g., those of Nayak [66] and Iwasaki and Levy [43]) allow some interleaving of scenario elaboration and model construction. Williams's program [85] automatically generates some equations (the building blocks for his models) via algebraic simplification as they are needed during model construction. Finally, Amsterdam's program <ref> [5] </ref> uses a model's deficiencies to enable selected rules for adding elements to the model, effectively interleaving some aspects of scenario elaboration with model construction. 4.4 Summary Scenario elaboration uses the domain knowledge to bridge the gap between the partial scenario description given in a question and the needs of model <p> An assumption class represents a set of modeling alternatives, and one alternative has a lower index if it is simpler. Our representation does not use assumption classes, so this approach is not feasible. Amsterdam <ref> [5] </ref> uses a simplicity criterion very similar to ours. <p> Several people have recognized its importance. However, none of these people require an adequate model to include differential influence paths. Nayak [65] requires an adequate model to provide a causal path linking a single specified driving variable to a single specified variable of interest. Amsterdam <ref> [5] </ref> requires an adequate model to provide "interaction" paths (i.e., not necessarily causal) linking every variable of interest to some driving variable. <p> Finally, for the textbook physics problems mecho solves, a much simpler criterion for choosing exogenous variables is sufficient; a variable can be exogenous if and only if its value is given. Several people have explored an approach to model construction called "discrepancy-driven refinement" <ref> [3, 5, 84] </ref>. After constructing an initial model, the modeler compares its predictions against the known behavior of the system. Discrepancies suggest refinements to the model, and the process is repeated until a sufficiently close match is obtained. <p> In tutoring, a student might be told that a physical system behaves in a certain way (e.g., "When a plant begins to wilt, aba builds up in its guard cells") and the student may ask why. There has been a lot of important work on answering explanation questions <ref> [3, 5, 37, 84] </ref>. The most common technique is called "discrepancy-driven refinement." In this technique, the modeler constructs an initial model of the scenario and compares its predictions against the known behavior of the variables of interest. Discrepancies suggest particular changes to the model that will reduce or eliminate them.
Reference: [6] <author> William E. Boyce and Richard C. DiPrima. </author> <title> Elementary Differential Equations and Boundary Value Problems. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, third edition, </address> <year> 1976. </year>
Reference-contexts: There are already a variety of methods that automate the analysis step. For example, to analyze differential equation models, there are programs for solving the equations analytically (e.g., Mathematica [87]) and there are algorithms for simulating such models (e.g., Runge-Kutta <ref> [6] </ref>). However, the other two steps, modeling and explanation, typically require humans. This dissertation addresses the first of these: automatically constructing models for answering prediction questions.
Reference: [7] <author> J.U. Brackbill and B.I. Cohen, </author> <title> editors. Multiple Time Scales. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: First, it assumes that a single time scale will suffice for answering a question. However, some questions are best answered by combining the results of several models, each with a different time scale <ref> [7, 42, 53, 59] </ref>. Also, the fastest adequate time scale may not be the best one for answering some questions; there may be more important connections between driving variables and variables of interest on slower time scales.
Reference: [8] <author> Bruce G. Buchanon and Edward H. Shortliffe, </author> <title> editors. Rule-Based Expert Systems: The Mycin Experiments of the Stanford Heuristic Programming Project. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1984. </year>
Reference-contexts: In the tutoring task, the main objective is to teach the domain principles that underlie the predictions. Even when the predictions themselves are the main objective, experience with expert systems shows clearly that humans accept the conclusions of computers much more readily when the computer can justify those conclusions <ref> [8] </ref>. Therefore, a computer program for answering prediction questions must be capable of making the desired predictions and explaining them well. 1.2 Modeling Scientists and engineers answer prediction questions by constructing and analyzing a mathematical model of the scenario.
Reference: [9] <author> Charles B. Callaway. </author> <title> Tools for lexical augmentation and verification in large scale knowledge bases. </title> <type> Master's thesis, </type> <institution> Artificial Intelligence Laboratory, University of Texas at Austin, </institution> <year> 1995. </year> <month> 162 </month>
Reference-contexts: However, while the bkb can provide the knowledge tripel needs, we soon discovered a number of errors in its knowledge. The bkb has been used to support a variety of research projects, including machine learning [63, 64], explanation generation [1, 2, 57], and natural language generation <ref> [9] </ref>. However, none of these projects required the types of knowledge that tripel needs, so the knowledge grew without being tested, and errors accumulated over the years. As the first consumer of these types of knowledge, tripel was the first to uncover the errors.
Reference: [10] <author> Catherine A. Catino. </author> <title> Automated Modeling of Chemical Plants with Application to Hazard and Operability Studies. </title> <type> PhD thesis, </type> <institution> University of Pennsylvania, </institution> <year> 1993. </year>
Reference-contexts: First, we chose to use individual influences as model fragments in order to focus the modeler's reasoning at the level of individual phenomena. Influences serve a similar role in a variety of areas of science and engineering <ref> [10, 31, 55, 72, 75] </ref>. Second, we chose to representationally distinguish activity preconditions, significance preconditions, and validity preconditions, since each plays a distinct role in our modeling algorithms.
Reference: [11] <author> Chin-Liang Chang and Richard Char-Tung Lee. </author> <title> Symbolic Logic and Mechanical Theorem Proving. </title> <publisher> Academic Press, </publisher> <address> Boston, MA, </address> <year> 1987. </year>
Reference-contexts: only appear in the domain knowledge, should not be confused with scenario variables, such as the amount of water in a plant, which represent properties of the scenario. 35 If Plant (?p) Then Leaves (leaves (?p)) If Plant (?p) Then Has-Part (?p, leaves (?p)) where leaves is a Skolem function <ref> [11] </ref>. Thus, structural rules can infer structural conditions concerning unstated objects as well as objects mentioned in the question. Clearly, inferring unstated structural conditions is not a simple matter of deduction.
Reference: [12] <author> Eugene Charniak and Drew McDermott. </author> <title> Introduction to Artificial Intelligence. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1984. </year>
Reference-contexts: We show that a standard backward-chaining inference engine <ref> [12] </ref>, coupled with the types of knowledge introduced in Qualitative Process Theory [28], is sufficient. <p> relation). 38 Thus, given any two entities in the scenario description, the modeler can determine whether one encapsulates the other, and given any two influences in the scenario description, the modeler can determine whether one explains the other. 4.3.2 Implementing the Interface Demand-driven scenario elaboration is implemented by backward chaining <ref> [12] </ref> through the inference rules provided by the domain knowledge. For example, suppose a prediction question specifies one structural condition, a plant, and the modeler asks for the influences on the amount of water in the plant.
Reference: [13] <author> David K. Cheng. </author> <title> Field and Wave Electromagnetics. </title> <publisher> Addison Wesley, </publisher> <address> Reading, MA, </address> <year> 1983. </year>
Reference-contexts: Quasi-static approximations are important in many branches of science and engineering [14, 46, 77, 78, 80, 82]. In fact, several branches of engineering, notably circuit theory and equilibrium thermodynamics, rest on such approximations <ref> [13, 83] </ref>. A functional influence that represents a quasi-static approximation is called an equilibrium influence. An equilibrium influence summarizes the net effect of some set of processes on the equilibrium state of the influencee.
Reference: [14] <author> Joe H. Chow, </author> <title> editor. Time-Scale Modeling of Dynamic Networks with Applications to Power Systems. </title> <booktitle> Number 46 in Lecture Notes in Control and Information Sciences. </booktitle> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1982. </year>
Reference-contexts: In addition to previous work in automated modeling, our research has been guided by the practices of human modelers in biology, ecology, economics, and engineering. While human modelers rarely offer operational advice for automating their task, their textbooks (e.g., <ref> [4, 14, 31, 34, 45, 49, 59, 75, 76] </ref>) and journal articles (e.g., [32, 38, 39, 40, 50, 69, 78, 79, 82]) often reveal the modeling alternatives they consider and the criteria for their choices. 11 1.10 Summary of Contributions and Results Our research provides three types of contributions. <p> If the dynamics of this process are irrelevant, the modeler can simply treat the level of water as an instantaneous function of the level of solutes, and this functional dependence can be represented with a functional influence. Quasi-static approximations are important in many branches of science and engineering <ref> [14, 46, 77, 78, 80, 82] </ref>. In fact, several branches of engineering, notably circuit theory and equilibrium thermodynamics, rest on such approximations [13, 83]. A functional influence that represents a quasi-static approximation is called an equilibrium influence. <p> The techniques are widely used in many fields, including economics [82], biology [34, 45, 77, 80, 88], ecology [4, 46, 68, 79] and many areas of engineering <ref> [14, 50, 78] </ref>. However, a person asking a prediction question cannot be expected to provide the time scale of interest. Typically, the person will not know which influences link the driving conditions to the variables of interest, much less the time scales on which the influences operate.
Reference: [15] <author> D.J. Clancy and B.J. Kuipers. </author> <title> Behavior abstraction for tractable simulation. </title> <booktitle> In The Seventh International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pages 57-64, </pages> <address> Orcas Island, Washington, </address> <year> 1993. </year>
Reference-contexts: It is typically difficult to identify the differences among multiple behaviors to determine whether those differences are relevant. To address this issue, I allowed qpc to use a tool developed by Dan Clancy <ref> [15] </ref>. This tool collapses certain differences among behaviors and represents the ambiguity as part of a single behavior (e.g., the 122 symbol l indicates that a variable may be increasing or decreasing).
Reference: [16] <author> A. Collins and D. Gentner. </author> <title> How people construct mental models. </title> <editor> In D. Holland and N. Quinn, editors, </editor> <booktitle> Cultural Models in Thought and Language, </booktitle> <pages> pages 243-265. </pages> <publisher> Cambridge University Press, </publisher> <address> Cambridge, UK, </address> <year> 1987. </year>
Reference-contexts: Similarly, applying knowledge in one domain to questions in another domain may require analogical mapping between structural conditions in the scenario and structural preconditions of influence rules <ref> [16, 22] </ref>. 4.3 Demand-Driven Scenario Elaboration For complex systems such as a plant, exhaustive scenario elaboration is impractical. If all possible structural rules and influence rules were applied to a partial description of a plant, the result would be a full anatomical and physiological description of the plant.
Reference: [17] <author> Thomas H. Cormen, Charles E. Leiserson, and Ronald L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1989. </year>
Reference-contexts: The connectivity matrix is simply the adjacency matrix for the transitive closure of this subgraph. Given the subgraph, the connectivity matrix can be computed efficiently; the Floyd-Warshall algorithm computes it in fi (n 3 ) time, where n is the number of nodes (potentially relevant variables) in the subgraph <ref> [17] </ref>. <p> Second, it uses the Floyd-Warshall transitive closure algorithm to compute a connectivity matrix. The time required to perform the system boundary analysis is dominated by the transitive closure algorithm. The Floyd-Warshall algorithm requires fi (n 3 ) time, where n is the number of potentially relevant variables <ref> [17] </ref>. (Of course, this complexity analysis ignores the cost of scenario elaboration.) One of the biggest surprises during the empirical evaluation was the number of potentially relevant variables tripel found for each of the expert's questions.
Reference: [18] <author> R. Davis. </author> <title> Diagnostic reasoning based on structure and behavior. </title> <journal> Artificial Intelligence, </journal> <volume> 24 </volume> <pages> 347-410, </pages> <year> 1984. </year>
Reference-contexts: Even in engineered systems, designed system boundaries cannot be trusted when considering faults or unintended interactions <ref> [18] </ref>. Reasoning at the level of influences provides more flexibility and overcomes the difficulty of specifying an a priori system decomposition.
Reference: [19] <author> J. de Kleer and J.S. Brown. </author> <title> A qualitative physics based on confluences. </title> <journal> Artificial Intelligence, </journal> <volume> 24 </volume> <pages> 7-83, </pages> <year> 1984. </year>
Reference-contexts: This goal, accuracy, encourages detailed, comprehensive models. However, a model must also be as simple as possible. If the model includes irrelevant information, it will be more difficult to analyze and explain. For example, 2 We show later that the methods are useful for building qualitative models <ref> [19, 28, 52, 54, 72] </ref> as well as quantitative ones. <p> Additional domain knowledge is needed to compose influences into equations. Forbus [28] developed methods for composing influences into qualitative equations, given the sign of the partial derivative of each influence. Such qualitative models <ref> [19, 28, 52, 54, 72] </ref> are useful when quantitative details are unavailable (as is often the case in plant physiology) or irrelevant (as is often the case in tutoring). <p> Therefore, its methods are useful in building qualitative models <ref> [19, 28, 52, 54, 72] </ref> as well as quantitative models.
Reference: [20] <author> Ulf Dieckmann and Colin P. Williams. </author> <title> Model approximation via dimension reduction. </title> <editor> In T. Ellman, editor, </editor> <booktitle> Working Notes of the AAAI Workshop on Approximation and Abstraction of Computational Theories, </booktitle> <pages> pages 146-153, </pages> <address> San Jose, CA, </address> <year> 1992. </year>
Reference-contexts: The modeling algorithm developed by Yip [47] can be viewed as removing insignificant influences based on given scale parameters, including the length, time, and velocity scales of interest. The Extended Adiabatic Elimination method of Dieckmann and Williams <ref> [20] </ref> simplifies a set of differential equations by using quasi-static approximations wherever possible.
Reference: [21] <author> Thomas Ellman, John Keane, and Mark Schwabacher. </author> <title> Intelligent model selection for hillclimbing search in computer-aided design. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence (AAAI-93), </booktitle> <pages> pages 594-599, </pages> <address> Menlo Park, CA, 1993. </address> <publisher> AAAI Press. </publisher> <pages> 163 </pages>
Reference-contexts: However, tripel could be extended to address such questions, in which case this constraint could be added. Section 10.6.2 discusses this issue further. Some previous automated modeling programs assume that the approximate error introduced by different approximations is known or can be estimated <ref> [21, 23, 24, 81] </ref>. In these programs, a model is adequate only if the error in its predictions is within a specified tolerance. In the application domain we explored, plant physiology, the approximate error introduced by approximations is not available, so we excluded this constraint.
Reference: [22] <author> Brian Falkenhainer. </author> <title> A unified approach to explanation and theory formation. </title> <editor> In J. Shrager and P. Langley, editors, </editor> <title> Computational Models of Scientific Discovery and Theory Formation. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1990. </year>
Reference-contexts: Similarly, applying knowledge in one domain to questions in another domain may require analogical mapping between structural conditions in the scenario and structural preconditions of influence rules <ref> [16, 22] </ref>. 4.3 Demand-Driven Scenario Elaboration For complex systems such as a plant, exhaustive scenario elaboration is impractical. If all possible structural rules and influence rules were applied to a partial description of a plant, the result would be a full anatomical and physiological description of the plant. <p> However, this task also fits into the framework described in this dissertation. The new requirement can be satisfied by adding additional sophistication to the scenario elaboration module. For example, rather than simply instantiating general principles, scenario elaboration might generate influences by analogy to other, more familiar domains <ref> [22] </ref>. 10.7 Summary In summary, the methods in this dissertation provide an important foundation for further research in automated modeling. Many valuable improvements can be incorporated into tripel as modular extensions.
Reference: [23] <author> Brian Falkenhainer. </author> <title> Modeling without amnesia: Making experience-sanctioned approximations. </title> <booktitle> In The Sixth International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pages 44-55, </pages> <address> Edinburgh, Scotland, </address> <year> 1992. </year> <institution> Heriot-Watt University. </institution>
Reference-contexts: However, tripel could be extended to address such questions, in which case this constraint could be added. Section 10.6.2 discusses this issue further. Some previous automated modeling programs assume that the approximate error introduced by different approximations is known or can be estimated <ref> [21, 23, 24, 81] </ref>. In these programs, a model is adequate only if the error in its predictions is within a specified tolerance. In the application domain we explored, plant physiology, the approximate error introduced by approximations is not available, so we excluded this constraint.
Reference: [24] <author> Brian Falkenhainer. </author> <title> Ideal physical systems. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence (AAAI-93), </booktitle> <pages> pages 600-605, </pages> <address> Menlo Park, CA, 1993. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: The person encoding the domain knowledge is responsible for ensuring that each compatible combination of model fragments yields an adequate set of influences. Some previous modeling programs are given a complete equation for a dependent variable and they identify and discard negligible terms in the equation <ref> [24, 86, 47] </ref>. This is analogous to identifying an approximately complete set of influences. However, these programs do not consider alternative levels of detail for the elements of the equation. 5.4.4 Entities in a Model A scenario model is a model of selected entities in the scenario. <p> However, tripel could be extended to address such questions, in which case this constraint could be added. Section 10.6.2 discusses this issue further. Some previous automated modeling programs assume that the approximate error introduced by different approximations is known or can be estimated <ref> [21, 23, 24, 81] </ref>. In these programs, a model is adequate only if the error in its predictions is within a specified tolerance. In the application domain we explored, plant physiology, the approximate error introduced by approximations is not available, so we excluded this constraint.
Reference: [25] <author> Brian Falkenhainer and Kenneth D. Forbus. </author> <title> Compositional modeling: Finding the right model for the job. </title> <journal> Artificial Intelligence, </journal> <volume> 51 </volume> <pages> 95-143, </pages> <year> 1991. </year>
Reference-contexts: Thus, the domain knowledge provides the building blocks for models, and the modeler constructs a model by composing relevant building blocks. This approach is called compositional modeling <ref> [25] </ref>. 3 For instance, in the decreasing soil moisture example, the domain knowledge would provide ways of describing all the phenomena governing the plant and soil, including the effects of metabolic processes, mineral transport processes, plant water regulation processes, and soil moisture regulation processes. <p> Our research was particularly influenced by the earlier work of Forbus [28] and Falken-hainer and Forbus <ref> [25] </ref>. Forbus's Qualitative Process (QP) Theory uses influences as the building blocks for models, and it shows how influences can be generated from domain knowledge. However, it does not provide methods for identifying relevant influences; in QP Theory, the complete scenario description is the model. <p> Each entity has associated variables as well as models that describe the behavior of the variables. Our scenario description language was most influenced by the compositional modeling framework of Falkenhainer and Forbus <ref> [25] </ref>, which combines and extends ideas from Forbus's QP Theory and Zeigler's system entity structure. <p> Some programs (e.g., those of Falkenhainer and Forbus <ref> [25] </ref> and Lee [56]) exhaustively elaborate the scenario before starting model construction. Other programs (e.g., those of Nayak [66] and Iwasaki and Levy [43]) allow some interleaving of scenario elaboration and model construction. <p> Falkenhainer and Forbus <ref> [25] </ref> define one model as simpler than another if the first includes fewer scenario entities. If two models include the same number of entities, one is simpler than the other if its sum of indices of assumption class choices is smaller. <p> For instance, his criteria would allow the chosen scenario model to include an exogenous variable that, in the scenario description, is significantly influenced by another variable in the model. The modeling algorithm of Falkenhainer and Forbus <ref> [25] </ref> largely determines the system boundary by determining relevant scenario objects. The algorithm requires, as input, a system decomposition. That is, each scenario object is assumed to be a system, and each object can have component objects that represent its subsystems. <p> If there is an adequate scenario model for the question, the previous paragraph ensures that the first case cannot arise, and it ensures that the model in the second case must be a simplest adequate scenario model. 2 6.7 Related Work Falkenhainer and Forbus <ref> [25] </ref> take a knowledge-based approach to model construction. Each model fragment has associated "assumptions," symbolic labels that characterize the phenomena it represents and its level of detail. <p> Once the model is complete and a causal ordering algorithm assigns causality to the influences, tripel could further simplify the model. 10.2.3 Model Fragments In compositional modeling, models are constructed from building blocks provided by the domain knowledge. The building blocks are often called "model fragments" <ref> [25] </ref>. In tripel, the building blocks are influences. However, some other researchers allow a model fragment to contain multiple influences on a variable, or even a complete equation. It would be simple to extend tripel to handle such model fragments.
Reference: [26] <author> Adam Farquhar. </author> <title> Automated Modeling of Physical Systems in the Presence of Incomplete Knowledge. </title> <type> PhD thesis, </type> <institution> Artificial Intelligence Laboratory, University of Texas, </institution> <year> 1993. </year> <note> Technical Report AI93-207. </note>
Reference-contexts: Such qualitative models [19, 28, 52, 54, 72] are useful when quantitative details are unavailable (as is often the case in plant physiology) or irrelevant (as is often the case in tutoring). Farquhar <ref> [26] </ref> extended the methods to construct quantitative equations, given knowledge of whether each influence is an additive term, a multiplicative term, or some other type of term. <p> Forbus and Falkenhainer [30] have successfully used that approach. Second, each influence can specify how it combines with other influences, such as whether it is an additive term, a multiplicative term, or otherwise. After the model is constructed, equations can be generated using these specifications. Farquhar <ref> [26] </ref> has successfully used this approach for limited types of equations, and it appears feasible for other types as well.
Reference: [27] <author> Adam Farquhar. </author> <title> A qualitative physics compiler. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI-94), </booktitle> <pages> pages 1168-1174, </pages> <address> Menlo Park, CA, 1994. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: Qualitative models are useful when quantitative details are unavailable (as is often the case in plant physiology) or irrelevant (as is often the case in tutoring). tripel has been used to construct qualitative models, which it passes automatically to the Qualitative Process Compiler (qpc) <ref> [27] </ref>, a qualitative simulation program. From tripel's model, qpc generates the desired predictions. 1.11 Reader's Guide The remainder of the dissertation is organized as follows: 13 * Chapter 2 describes the representation language tripel uses to describe sce-narios. <p> For example, when leaf turgor pressure decreases, the rate of aba synthesis increases. * Activity preconditions of influences are not shown. 45 models in this way <ref> [27, 28, 30] </ref>. <p> The issues that tripel addresses are important regardless of the method of analysis. This section describes the result of integrating tripel with one particular analysis program, the Qualitative Process Compiler <ref> [27] </ref>. Integrating tripel with an analysis program serves two purposes. First, it provides further evaluation of the models that tripel constructs. <p> For that task, quantitative details are typically irrelevant. Thus, generating predictions using models constructed from the bkb requires qualitative simulation. Qualitative Simulation To perform qualitative simulations using the models tripel constructs, I integrated tripel with the Qualitative Process Compiler (qpc) <ref> [27] </ref>, a qualitative simulation program. After tripel constructs a scenario model, it passes the model to qpc.
Reference: [28] <author> Kenneth D. Forbus. </author> <title> Qualitative process theory. </title> <journal> Artificial Intelligence, </journal> <volume> 24 </volume> <pages> 85-168, </pages> <year> 1984. </year>
Reference-contexts: This goal, accuracy, encourages detailed, comprehensive models. However, a model must also be as simple as possible. If the model includes irrelevant information, it will be more difficult to analyze and explain. For example, 2 We show later that the methods are useful for building qualitative models <ref> [19, 28, 52, 54, 72] </ref> as well as quantitative ones. <p> An influence is a causal relation between two variables, as in Qualitative Process Theory <ref> [28] </ref>. Each variable represents a property of the scenario (e.g., soil moisture or the plant's transpiration rate). Each influence specifies that a variable, or its rate of change, is a function of another variable. <p> Additional domain knowledge is needed to compose influences into equations. Forbus <ref> [28] </ref> developed methods for composing influences into qualitative equations, given the sign of the partial derivative of each influence. <p> Additional domain knowledge is needed to compose influences into equations. Forbus [28] developed methods for composing influences into qualitative equations, given the sign of the partial derivative of each influence. Such qualitative models <ref> [19, 28, 52, 54, 72] </ref> are useful when quantitative details are unavailable (as is often the case in plant physiology) or irrelevant (as is often the case in tutoring). <p> Our research was particularly influenced by the earlier work of Forbus <ref> [28] </ref> and Falken-hainer and Forbus [25]. Forbus's Qualitative Process (QP) Theory uses influences as the building blocks for models, and it shows how influences can be generated from domain knowledge. However, it does not provide methods for identifying relevant influences; in QP Theory, the complete scenario description is the model. <p> Therefore, its methods are useful in building qualitative models <ref> [19, 28, 52, 54, 72] </ref> as well as quantitative models. <p> We show that a standard backward-chaining inference engine [12], coupled with the types of knowledge introduced in Qualitative Process Theory <ref> [28] </ref>, is sufficient. <p> Our assumption that structural conditions remain constant is a matter of convenience, not necessity. The assumption simplifies presentation and implementation of the key ideas in our research. However, other alternatives are possible. For instance, Qualitative Process Theory <ref> [28] </ref> allows changes in structural conditions to result from changes in behavioral conditions. Section 10.2.4 shows how tripel could be extended to support such a representation. 2.5 Influences As discussed in Chapter 1, the phenomena governing a scenario are represented as influences, which serve as the building blocks for models. <p> While there may be similar relationships among influences with different types or influencees, tripel's modeling criteria and algorithms do not require a representation of these relationships. The explanation relation captures those relationships among influences that are relevant to tripel. 2.8 Related Work Forbus's Qualitative Process (QP) Theory <ref> [28] </ref> provides the basis for our scenario description language. In QP Theory, scenario variables are called "quantities," and quantities are properties of entities. <p> By providing rules for inferring the encapsulates and explanation relations, the domain knowledge can specify relationships among different levels of detail in the scenario description. 4.2.4 Related Work Our approach of generating influences from rules in the domain knowledge is based on Forbus's Qualitative Process Theory <ref> [28] </ref>. <p> For example, when leaf turgor pressure decreases, the rate of aba synthesis increases. * Activity preconditions of influences are not shown. 45 models in this way <ref> [27, 28, 30] </ref>. <p> in another variable in two ways: (1) with a differential influence, a specified value for the influencing variable (along with values for other influencing variables) provides the rate of change of the influenced variable; (2) in contrast, a functional influence can cause change only if the influencing variable is changing <ref> [28] </ref>. <p> As stated in Section 6.5, tripel can incorporate new monotonic constraints without changes in its model construction algorithm. 136 10.2.2 Causality As proposed by Forbus in his Qualitative Process Theory <ref> [28] </ref>, influences in tripel have a fixed causal direction (i.e., a designated influencer and influencee). Assigning causality to influences has proven easy and appropriate in the plant physiology domain, and we expect similar success in many other domains. <p> This assumption simplifies presentation and implementation of the key ideas in tripel. However, it is not an important assumption. Qualitative Process (QP) Theory <ref> [28] </ref> provides a reasonable alternative. In tripel, a structural condition can be inferred from a structural rule whose antecedent is a conjunction of structural conditions. In contrast, QP theory allows the antecedents of structural rules to include behavioral conditions.
Reference: [29] <author> Kenneth D. Forbus. </author> <title> Qualitative physics: Past, present, and future. </title> <editor> In D.S. Weld and J. de Kleer, editors, </editor> <booktitle> Readings in Qualitative Reasoning about Physical Systems, </booktitle> <pages> pages 11-39. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1990. </year>
Reference-contexts: The question of whether influences can be given a causal direction before the scenario model is built is an open question <ref> [29] </ref>. However, our approach has worked well in the plant physiology domain, and we expect similar success in many other domains. <p> Assigning causality to influences has proven easy and appropriate in the plant physiology domain, and we expect similar success in many other domains. However, there is some debate as to when influences can be assigned a causal direction <ref> [29] </ref>. In contrast to Forbus's approach, some researchers believe that influences cannot be given a causal direction until after a model is complete [44].
Reference: [30] <author> Kenneth D. Forbus and Brian Falkenhainer. </author> <title> Self-explanatory simulations: An integration of qualitative and quantitative knowledge. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence (AAAI-90), </booktitle> <pages> pages 380-387, </pages> <address> Menlo Park, CA, 1990. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: For example, when leaf turgor pressure decreases, the rate of aba synthesis increases. * Activity preconditions of influences are not shown. 45 models in this way <ref> [27, 28, 30] </ref>. <p> There are two possible ways to generate numerical equations from influences. First, the domain knowledge can provide a numerical equation for each useful combination of influences on a variable. Forbus and Falkenhainer <ref> [30] </ref> have successfully used that approach. Second, each influence can specify how it combines with other influences, such as whether it is an additive term, a multiplicative term, or otherwise. After the model is constructed, equations can be generated using these specifications.
Reference: [31] <author> Jay W. </author> <title> Forrester. </title> <booktitle> Principles of Systems. </booktitle> <publisher> Wright-Allen Press, </publisher> <address> Cambridge, MA, </address> <year> 1968. </year>
Reference-contexts: In addition to previous work in automated modeling, our research has been guided by the practices of human modelers in biology, ecology, economics, and engineering. While human modelers rarely offer operational advice for automating their task, their textbooks (e.g., <ref> [4, 14, 31, 34, 45, 49, 59, 75, 76] </ref>) and journal articles (e.g., [32, 38, 39, 40, 50, 69, 78, 79, 82]) often reveal the modeling alternatives they consider and the criteria for their choices. 11 1.10 Summary of Contributions and Results Our research provides three types of contributions. <p> First, we chose to use individual influences as model fragments in order to focus the modeler's reasoning at the level of individual phenomena. Influences serve a similar role in a variety of areas of science and engineering <ref> [10, 31, 55, 72, 75] </ref>. Second, we chose to representationally distinguish activity preconditions, significance preconditions, and validity preconditions, since each plays a distinct role in our modeling algorithms.
Reference: [32] <author> R.H. Gardner, W.G. Cale, and R.V. O'Neill. </author> <title> Robust analysis of aggregation error. </title> <journal> Ecology, </journal> <volume> 63(6) </volume> <pages> 1771-1779, </pages> <year> 1982. </year>
Reference-contexts: While human modelers rarely offer operational advice for automating their task, their textbooks (e.g., [4, 14, 31, 34, 45, 49, 59, 75, 76]) and journal articles (e.g., <ref> [32, 38, 39, 40, 50, 69, 78, 79, 82] </ref>) often reveal the modeling alternatives they consider and the criteria for their choices. 11 1.10 Summary of Contributions and Results Our research provides three types of contributions.
Reference: [33] <author> Michael R. Genesereth and Nils J. Nilsson. </author> <booktitle> Logical Foundations of Artificial Intelligence. </booktitle> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, CA, </address> <year> 1986. </year> <month> 164 </month>
Reference-contexts: A process is a mechanism of continuous change. Examples include photosynthesis, osmosis, and growth. The state of a process is represented by its rate property. Entities, properties and variables in tripel's scenario description language are written as ground terms in Predicate Calculus <ref> [33] </ref>. For example, photosynthesis in a plant, which is an entity, can be written as photosynthesis (plant). The rate of photosynthesis in a plant, which is a scenario variable, can be written as rate (photosynthesis (plant)). <p> Any scenario condition that cannot be stated in terms of scenario variables is a structural condition. A structural condition is stated as a ground, atomic formula in Predicate Calculus <ref> [33] </ref>. For example, the formula Surrounded-by (roots,soil) represents the fact that the roots are surrounded by soil. Our work focuses on ode models. ode models predict scenario changes in terms of scenario variables.
Reference: [34] <author> H.J. Gold. </author> <title> Mathematical Modeling of Biological Systems. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1977. </year>
Reference-contexts: In addition to previous work in automated modeling, our research has been guided by the practices of human modelers in biology, ecology, economics, and engineering. While human modelers rarely offer operational advice for automating their task, their textbooks (e.g., <ref> [4, 14, 31, 34, 45, 49, 59, 75, 76] </ref>) and journal articles (e.g., [32, 38, 39, 40, 50, 69, 78, 79, 82]) often reveal the modeling alternatives they consider and the criteria for their choices. 11 1.10 Summary of Contributions and Results Our research provides three types of contributions. <p> These modeling techniques are useful, and often necessary, to achieve conceptual clarity, to enable analytic solutions to a model's equations, and even to enable practical numerical or qualitative simulation. The techniques are widely used in many fields, including economics [82], biology <ref> [34, 45, 77, 80, 88] </ref>, ecology [4, 46, 68, 79] and many areas of engineering [14, 50, 78]. However, a person asking a prediction question cannot be expected to provide the time scale of interest.
Reference: [35] <author> Ira P. Goldstein. Overlays: </author> <title> A theory of modelling for computer-aided instruction. </title> <note> Artificial Intelligence Laboratory Memo 495, </note> <institution> Massachusetts Institute of Technology, </institution> <address> Cambridge, MA, </address> <year> 1977. </year>
Reference-contexts: Although glass-box and black-box entities could be specified explicitly in a question, they might come from a variety of sources. They might come from an overlay user model <ref> [35] </ref>. For example, if a student understands photosynthesis but not its component reactions, photosynthesis can be marked as a black-box entity. They might also come from a discourse history. For example, if a tutor has recently discussed the component reactions of photosynthesis, photosynthesis might be marked as a glass-box entity.
Reference: [36] <author> Arthur C. Guyton. </author> <title> Textbook of Medical Physiology. </title> <publisher> W.B. Saunders, </publisher> <address> Philadel-phia, </address> <year> 1981. </year>
Reference-contexts: A model can often be greatly simplified when insignificant influences are recognized and omitted. While human modelers use many criteria to determine the significance of influences, knowledge of the time scale of different processes is particularly important. Processes cause significant change on widely disparate time scales <ref> [4, 36, 68, 76, 80] </ref>. For example, in a plant, water flows through membranes on a time scale of seconds, solutes flow through membranes on a time scale of minutes, growth requires hours or days, and surrounding ecological processes may occur on a time scale of months or years.
Reference: [37] <author> Walter Hamscher, Luca Console, and Johan de Kleer, </author> <title> editors. Readings in Model-Based Diagnosis. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1992. </year>
Reference-contexts: In tutoring, a student might be told that a physical system behaves in a certain way (e.g., "When a plant begins to wilt, aba builds up in its guard cells") and the student may ask why. There has been a lot of important work on answering explanation questions <ref> [3, 5, 37, 84] </ref>. The most common technique is called "discrepancy-driven refinement." In this technique, the modeler constructs an initial model of the scenario and compares its predictions against the known behavior of the variables of interest. Discrepancies suggest particular changes to the model that will reduce or eliminate them.
Reference: [38] <author> Y. Ijiri. </author> <title> Fundamental queries in aggregation theory. </title> <journal> Journal of the American Statistical Association, </journal> <volume> 66(336) </volume> <pages> 766-782, </pages> <year> 1971. </year>
Reference-contexts: While human modelers rarely offer operational advice for automating their task, their textbooks (e.g., [4, 14, 31, 34, 45, 49, 59, 75, 76]) and journal articles (e.g., <ref> [32, 38, 39, 40, 50, 69, 78, 79, 82] </ref>) often reveal the modeling alternatives they consider and the criteria for their choices. 11 1.10 Summary of Contributions and Results Our research provides three types of contributions.
Reference: [39] <author> Y. Iwasa, V. Andreasen, and S. Levin. </author> <title> Aggregation in model ecosystems. I. perfect aggregation. </title> <journal> Ecological Modelling, </journal> <volume> 37 </volume> <pages> 287-302, </pages> <year> 1987. </year>
Reference-contexts: While human modelers rarely offer operational advice for automating their task, their textbooks (e.g., [4, 14, 31, 34, 45, 49, 59, 75, 76]) and journal articles (e.g., <ref> [32, 38, 39, 40, 50, 69, 78, 79, 82] </ref>) often reveal the modeling alternatives they consider and the criteria for their choices. 11 1.10 Summary of Contributions and Results Our research provides three types of contributions.
Reference: [40] <author> Y. Iwasa, S.A. Levin, and V. Andreasen. </author> <title> Aggregation in model ecosystems. II. approximate aggregation. </title> <journal> IMA Journal of Mathematics Applied in Medicine and Biology, </journal> <volume> 6 </volume> <pages> 1-23, </pages> <year> 1989. </year>
Reference-contexts: While human modelers rarely offer operational advice for automating their task, their textbooks (e.g., [4, 14, 31, 34, 45, 49, 59, 75, 76]) and journal articles (e.g., <ref> [32, 38, 39, 40, 50, 69, 78, 79, 82] </ref>) often reveal the modeling alternatives they consider and the criteria for their choices. 11 1.10 Summary of Contributions and Results Our research provides three types of contributions.
Reference: [41] <author> Y. Iwasaki. </author> <title> Causal ordering in a mixed structure. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence (AAAI-88), </booktitle> <pages> pages 313-318, </pages> <address> San Mateo, CA, 1988. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: The others exploit causality at an earlier stage. Waiting until a model is complete to assign causal directions is overly cautious; most influences can be given a fixed causal direction before a model is constructed. Causal ordering algorithms for mixed sets of differential and algebraic equations <ref> [41, 44, 65] </ref> almost always orient differential influences the way they are causally oriented in tripel. (Iwasaki and Simon [44] discuss some rare exceptions.) Therefore, the only real restriction is tripel's assumption that functional influences have a fixed causal direction. <p> However, Iwasaki <ref> [41] </ref> shows that equilibrium influences should be causally oriented based on their underlying dynamic details. If this is so, the person encoding the domain knowledge can often provide a causal direction for equilibrium influences. Thus, most influences can be given a causal direction in the domain knowledge.
Reference: [42] <author> Yumi Iwasaki. </author> <title> Reasoning with multiple abstraction models. </title> <editor> In Boi Faltings and Peter Struss, editors, </editor> <booktitle> Recent Advances in Qualitative Physics, </booktitle> <pages> pages 67-82. </pages> <publisher> MIT Press, </publisher> <address> Cambridge, </address> <year> 1992. </year>
Reference-contexts: The Extended Adiabatic Elimination method of Dieckmann and Williams [20] simplifies a set of differential equations by using quasi-static approximations wherever possible. Iwasaki <ref> [42] </ref> presents an approach to using time scale that is closest to ours; her modeling algorithm determines the time scale on which each scenario process operates, and it ignores those that are slower than the time scale of interest while treating those that are faster as instantaneous. 2.9 Summary tripel's scenario <p> First, it assumes that a single time scale will suffice for answering a question. However, some questions are best answered by combining the results of several models, each with a different time scale <ref> [7, 42, 53, 59] </ref>. Also, the fastest adequate time scale may not be the best one for answering some questions; there may be more important connections between driving variables and variables of interest on slower time scales. <p> Other times, it may be more practical to infer the time scale from these two pieces of knowledge. The latter approach is especially useful when the level of significant change depends on the question. Iwasaki <ref> [42] </ref> has explored this approach. It does not matter to tripel whether significance preconditions come from influence rules or are inferred from other information. 10.2.6 Building Large Knowledge Bases Our evaluation showed clearly that building large knowledge bases is a difficult, error-prone task.
Reference: [43] <author> Yumi Iwasaki and Alon Y. Levy. </author> <title> Automated model selection for simulation. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI-94), </booktitle> <pages> pages 1183-1190, </pages> <address> Menlo Park, CA, 1994. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: Their methods address the task of constructing the simplest adequate model for answering a question. The objectives of our research are also similar to more recent work that has progressed concurrently with our own, especially the work of Nayak [65] and Iwasaki and Levy <ref> [43] </ref>. Each of these pieces of related work, and many others, addresses a variety of issues. No single description of each previous modeling program can adequately describe the many similarities and differences between that program and ours. <p> To represent the relationships among model fragments, assumptions are organized into "assumption classes"; the assumptions in an assumption class represent mutually incompatible modeling alternatives for an entity or phenomenon. Several researchers <ref> [43, 65] </ref> define interesting variants of this compositional modeling framework, but the basic ideas are widely used. While our early work adopted the representation introduced by Falkenhainer and Forbus, our representation gradually evolved into its current form for several reasons. <p> Some programs (e.g., those of Falkenhainer and Forbus [25] and Lee [56]) exhaustively elaborate the scenario before starting model construction. Other programs (e.g., those of Nayak [66] and Iwasaki and Levy <ref> [43] </ref>) allow some interleaving of scenario elaboration and model construction. Williams's program [85] automatically generates some equations (the building blocks for his models) via algebraic simplification as they are needed during model construction. <p> Nevertheless, the number of variables in a model is a simple measure that correlates well with most other measures of complexity, and it has proven to be an effective heuristic in our experience. Other researchers have proposed different measures of simplicity. Nayak [65] and Iwasaki and Levy <ref> [43] </ref> define one scenario model as simpler than another if, for every model fragment in the first, either that model fragment or a more-detailed alternative is in the second. 1 This is a reasonable criterion when it holds, but it leaves too many models incomparable. <p> Typically, work in automated modeling assumes that either the domain knowledge or the question specifies those variables that can be exogenous. For instance, the modeling algorithms of Williams [85] and Iwasaki and Levy <ref> [43] </ref> require, as input, the variables that can be exogenous for the question. <p> Finally, his proofs currently place restrictions on the use of influences in model fragments, and these restrictions would seriously diminish the advantages of using influences as the building blocks for models. 1 tripel's algorithm for model construction is very similar to the one used by Iwasaki and Levy <ref> [43] </ref>. Their algorithm starts with a partial model consisting of the variables of interest, and it repeatedly extends the model to include the influences on free variables. There are two major differences between the two algorithms. <p> Given a model with non-causal equations, these researchers use a "causal ordering" algorithm to assign a causal direction to the equations (and hence the individual influences that make up the equations) [44, 65]. Thus, modeling algorithms that follow this approach cannot exploit causality until a model is already constructed <ref> [43, 65] </ref>. tripel exploits the causal direction of influences in several ways. During time scale selection, it uses the directions to find causal paths from driving variables to variables of interest. During model construction, it uses the directions to choose adequate sets of influences on free variables. <p> To accomplish this, tripel could allow the activity preconditions of influences to include derivable structural conditions, and it could include in the model those structural rules that can conclude these conditions. This is the approach taken by Iwasaki and Levy <ref> [43] </ref>, and it would be a natural and useful extension to tripel. 10.2.5 Inferring Time Scale of Significance The time scale on which a differential influence is significant bundles two pieces of knowledge: the rates at which the influencing process operates, and the level of change in the influenced variable that
Reference: [44] <author> Yumi Iwasaki and Herbert A. Simon. </author> <title> Causality and model abstraction. </title> <journal> Artificial Intelligence, </journal> <volume> 67(1) </volume> <pages> 143-194, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: This is a natural and useful extension of tripel's approach. * In their representation, influences in the scenario description do not have a causal direction. The direction of causality is only assigned after the model is complete, using a causal ordering algorithm <ref> [44] </ref>. This causes their algorithm to extend models to include all variables that could "possibly influence" the chosen free variable, which will generally result in larger models with more irrelevant phenomena. <p> However, there is some debate as to when influences can be assigned a causal direction [29]. In contrast to Forbus's approach, some researchers believe that influences cannot be given a causal direction until after a model is complete <ref> [44] </ref>. Given a model with non-causal equations, these researchers use a "causal ordering" algorithm to assign a causal direction to the equations (and hence the individual influences that make up the equations) [44, 65]. <p> Given a model with non-causal equations, these researchers use a "causal ordering" algorithm to assign a causal direction to the equations (and hence the individual influences that make up the equations) <ref> [44, 65] </ref>. Thus, modeling algorithms that follow this approach cannot exploit causality until a model is already constructed [43, 65]. tripel exploits the causal direction of influences in several ways. During time scale selection, it uses the directions to find causal paths from driving variables to variables of interest. <p> The others exploit causality at an earlier stage. Waiting until a model is complete to assign causal directions is overly cautious; most influences can be given a fixed causal direction before a model is constructed. Causal ordering algorithms for mixed sets of differential and algebraic equations <ref> [41, 44, 65] </ref> almost always orient differential influences the way they are causally oriented in tripel. (Iwasaki and Simon [44] discuss some rare exceptions.) Therefore, the only real restriction is tripel's assumption that functional influences have a fixed causal direction. <p> Causal ordering algorithms for mixed sets of differential and algebraic equations [41, 44, 65] almost always orient differential influences the way they are causally oriented in tripel. (Iwasaki and Simon <ref> [44] </ref> discuss some rare exceptions.) Therefore, the only real restriction is tripel's assumption that functional influences have a fixed causal direction. However, Iwasaki [41] shows that equilibrium influences should be causally oriented based on their underlying dynamic details.
Reference: [45] <author> J.A. Jacquez. </author> <title> Compartmental Analysis in Biology and Medicine. </title> <publisher> University of Michigan Press, </publisher> <address> Ann Arbor, MI, </address> <year> 1985. </year>
Reference-contexts: In addition to previous work in automated modeling, our research has been guided by the practices of human modelers in biology, ecology, economics, and engineering. While human modelers rarely offer operational advice for automating their task, their textbooks (e.g., <ref> [4, 14, 31, 34, 45, 49, 59, 75, 76] </ref>) and journal articles (e.g., [32, 38, 39, 40, 50, 69, 78, 79, 82]) often reveal the modeling alternatives they consider and the criteria for their choices. 11 1.10 Summary of Contributions and Results Our research provides three types of contributions. <p> As an approximation, a modeler might say that the rate of photosynthesis is functionally influenced by the concentration of carbon dioxide in the leaves. Such an approximation is reasonable when the subpools equilibrate on a time scale much faster than the time scale of interest <ref> [45, 82] </ref>. For example, suppose that diffusion of carbon dioxide throughout the leaves achieves a uniform concentration on a time scale of minutes. <p> These modeling techniques are useful, and often necessary, to achieve conceptual clarity, to enable analytic solutions to a model's equations, and even to enable practical numerical or qualitative simulation. The techniques are widely used in many fields, including economics [82], biology <ref> [34, 45, 77, 80, 88] </ref>, ecology [4, 46, 68, 79] and many areas of engineering [14, 50, 78]. However, a person asking a prediction question cannot be expected to provide the time scale of interest.
Reference: [46] <author> S.E. Jorgenson. </author> <title> Fundamentals of Ecological Modelling. </title> <publisher> Elsevier, </publisher> <address> New York, </address> <year> 1988. </year>
Reference-contexts: If the dynamics of this process are irrelevant, the modeler can simply treat the level of water as an instantaneous function of the level of solutes, and this functional dependence can be represented with a functional influence. Quasi-static approximations are important in many branches of science and engineering <ref> [14, 46, 77, 78, 80, 82] </ref>. In fact, several branches of engineering, notably circuit theory and equilibrium thermodynamics, rest on such approximations [13, 83]. A functional influence that represents a quasi-static approximation is called an equilibrium influence. <p> These modeling techniques are useful, and often necessary, to achieve conceptual clarity, to enable analytic solutions to a model's equations, and even to enable practical numerical or qualitative simulation. The techniques are widely used in many fields, including economics [82], biology [34, 45, 77, 80, 88], ecology <ref> [4, 46, 68, 79] </ref> and many areas of engineering [14, 50, 78]. However, a person asking a prediction question cannot be expected to provide the time scale of interest.
Reference: [47] <author> Kenneth Man kam Yip. </author> <title> Model simplification by asymptotic order of magnitude reasoning. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence (AAAI-93), </booktitle> <pages> pages 634-641, </pages> <address> Menlo Park, CA, 1993. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: Kuipers [53] shows the utility of decomposing models by time scale, and he provides a simulation algorithm for coupling such models, but a human modeler is required to use their knowledge of time scales to decompose the models. The modeling algorithm developed by Yip <ref> [47] </ref> can be viewed as removing insignificant influences based on given scale parameters, including the length, time, and velocity scales of interest. The Extended Adiabatic Elimination method of Dieckmann and Williams [20] simplifies a set of differential equations by using quasi-static approximations wherever possible. <p> The person encoding the domain knowledge is responsible for ensuring that each compatible combination of model fragments yields an adequate set of influences. Some previous modeling programs are given a complete equation for a dependent variable and they identify and discard negligible terms in the equation <ref> [24, 86, 47] </ref>. This is analogous to identifying an approximately complete set of influences. However, these programs do not consider alternative levels of detail for the elements of the equation. 5.4.4 Entities in a Model A scenario model is a model of selected entities in the scenario. <p> Next, the modeler drops terms whose order of magnitude is very small. Finally, the modeler solves the equations and checks whether the discarded terms are in fact negligible. Yip <ref> [47] </ref> has designed an automated modeling program that uses these methods. Yip's program does not address many of the issues addressed by tripel, so a combination of the two programs would be worth exploring. 1 Roughly speaking, the apoplast of a plant is its network of dead parts.
Reference: [48] <author> D.C. Karnopp, D.L. Margolis, and R.C. Rosenberg. </author> <title> System Dynamics: A Unified Approach. </title> <publisher> Wiley-Interscience, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: An assumption class represents a set of modeling alternatives, and one alternative has a lower index if it is simpler. Our representation does not use assumption classes, so this approach is not feasible. Amsterdam [5] uses a simplicity criterion very similar to ours. Bond graph elements <ref> [48] </ref> are the building blocks for his models, and he defines one model as simpler than another if it contains fewer elements. 5.4 Adequate Scenario Model Intuitively, a scenario model is adequate for answering a given prediction question if it can make the desired predictions with sufficient accuracy.
Reference: [49] <author> Stephen J. Kline. </author> <title> Similitude and Approximation Theory. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1965. </year>
Reference-contexts: In addition to previous work in automated modeling, our research has been guided by the practices of human modelers in biology, ecology, economics, and engineering. While human modelers rarely offer operational advice for automating their task, their textbooks (e.g., <ref> [4, 14, 31, 34, 45, 49, 59, 75, 76] </ref>) and journal articles (e.g., [32, 38, 39, 40, 50, 69, 78, 79, 82]) often reveal the modeling alternatives they consider and the criteria for their choices. 11 1.10 Summary of Contributions and Results Our research provides three types of contributions. <p> Similar comments apply to the problem of determining whether an influence is valid. Applied mathematicians have developed some formal (albeit heuristic) methods for recognizing insignificant terms (i.e., influences) in equations <ref> [49, 59] </ref>. These methods are interesting because they combine the considerations mentioned above.
Reference: [50] <author> P.V. Kokotovic, R.E. O'Malley, Jr., and P. Sannuti. </author> <title> Singular perturbations and order reduction in control theory | an overview. </title> <journal> Automatica, </journal> <volume> 12 </volume> <pages> 123-132, </pages> <year> 1976. </year>
Reference-contexts: While human modelers rarely offer operational advice for automating their task, their textbooks (e.g., [4, 14, 31, 34, 45, 49, 59, 75, 76]) and journal articles (e.g., <ref> [32, 38, 39, 40, 50, 69, 78, 79, 82] </ref>) often reveal the modeling alternatives they consider and the criteria for their choices. 11 1.10 Summary of Contributions and Results Our research provides three types of contributions. <p> Functional influences, being instantaneous, are significant regardless of the time scale of interest, so their significance preconditions are always empty. In addition to biological and ecological domains, this type of time scale knowledge appears useful in engineering domains as well. Kokotovic, O'Malley, and San-nuti <ref> [50] </ref> and Saksena, O'Reilly, and Kokotovic [78] survey hundreds of applications, in many different engineering fields, in which models are simplified using knowledge of the disparate time scales of processes. 2.6.3 Validity Preconditions Many influences are approximations of the phenomena they represent, and these approximations typically have a limited range of <p> The techniques are widely used in many fields, including economics [82], biology [34, 45, 77, 80, 88], ecology [4, 46, 68, 79] and many areas of engineering <ref> [14, 50, 78] </ref>. However, a person asking a prediction question cannot be expected to provide the time scale of interest. Typically, the person will not know which influences link the driving conditions to the variables of interest, much less the time scales on which the influences operate.
Reference: [51] <author> H.J. Kook and G.S. Novak, Jr. </author> <title> Representation of models for expert problem solving in physics. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 3(1) </volume> <pages> 48-54, </pages> <year> 1991. </year>
Reference-contexts: For instance, to construct models for solving textbook physics problems, Kook and Novak <ref> [51] </ref> propose model fragments called "physical models." Physical models can be viewed as inference rules whose antecedent consists of structural preconditions and whose consequent is a single principle or law of physics.
Reference: [52] <author> Benjamin Kuipers. </author> <title> Qualitative simulation. </title> <journal> Artificial Intelligence, </journal> <volume> 29 </volume> <pages> 289-338, </pages> <year> 1986. </year>
Reference-contexts: This goal, accuracy, encourages detailed, comprehensive models. However, a model must also be as simple as possible. If the model includes irrelevant information, it will be more difficult to analyze and explain. For example, 2 We show later that the methods are useful for building qualitative models <ref> [19, 28, 52, 54, 72] </ref> as well as quantitative ones. <p> Additional domain knowledge is needed to compose influences into equations. Forbus [28] developed methods for composing influences into qualitative equations, given the sign of the partial derivative of each influence. Such qualitative models <ref> [19, 28, 52, 54, 72] </ref> are useful when quantitative details are unavailable (as is often the case in plant physiology) or irrelevant (as is often the case in tutoring). <p> Therefore, its methods are useful in building qualitative models <ref> [19, 28, 52, 54, 72] </ref> as well as quantitative models. <p> Starting from the initial state of the specified scenario, qpc identifies the active influences in the scenario model (i.e., those influences whose activity preconditions are satisfied), and it uses them to generate a set of qualitative differential equations (qdes). qpc simulates the equations using the qsim program <ref> [52, 54] </ref>. As the state of the scenario changes during simulation, the set of active influences in the scenario model may change, so qpc repeatedly formulates a set of qdes and simulates them until simulation is complete. Qualitative differential equations are an abstraction of ordinary differential equations.
Reference: [53] <author> Benjamin Kuipers. </author> <title> Abstraction by time scale in qualitative simulation. </title> <booktitle> In Proceedings of the Sixth National Conference on Artificial Intelligence (AAAI-87), </booktitle> <pages> pages 621-625, </pages> <address> Los Altos, CA, 1987. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Throughout areas of science and engineering, time scale is used to determine significance of phenomena and validity of approximations. Yet few researchers in automated modeling have exploited knowledge of time scales. Kuipers <ref> [53] </ref> shows the utility of decomposing models by time scale, and he provides a simulation algorithm for coupling such models, but a human modeler is required to use their knowledge of time scales to decompose the models. <p> In natural systems, like plants, animals, and ecosystems, modularity arises from the widely disparate time scales at which processes cause change <ref> [4, 53, 68, 76, 80] </ref>. The result is a hierarchy of nearly decomposable subsystems; processes acting within a subsystem cause significant change quickly, while processes acting across subsystems cause change more slowly [4, 53, 68, 82]. <p> The result is a hierarchy of nearly decomposable subsystems; processes acting within a subsystem cause significant change quickly, while processes acting across subsystems cause change more slowly <ref> [4, 53, 68, 82] </ref>. The time scale of interest filters out influences that are significant only on slower time scales, thus isolating the variables of interest in their own nearly decomposable subsystem. <p> First, it assumes that a single time scale will suffice for answering a question. However, some questions are best answered by combining the results of several models, each with a different time scale <ref> [7, 42, 53, 59] </ref>. Also, the fastest adequate time scale may not be the best one for answering some questions; there may be more important connections between driving variables and variables of interest on slower time scales.
Reference: [54] <author> Benjamin Kuipers. </author> <title> Qualitative Reasoning: Modeling and Simulation with Incomplete Knowledge. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1994. </year>
Reference-contexts: This goal, accuracy, encourages detailed, comprehensive models. However, a model must also be as simple as possible. If the model includes irrelevant information, it will be more difficult to analyze and explain. For example, 2 We show later that the methods are useful for building qualitative models <ref> [19, 28, 52, 54, 72] </ref> as well as quantitative ones. <p> Additional domain knowledge is needed to compose influences into equations. Forbus [28] developed methods for composing influences into qualitative equations, given the sign of the partial derivative of each influence. Such qualitative models <ref> [19, 28, 52, 54, 72] </ref> are useful when quantitative details are unavailable (as is often the case in plant physiology) or irrelevant (as is often the case in tutoring). <p> Therefore, its methods are useful in building qualitative models <ref> [19, 28, 52, 54, 72] </ref> as well as quantitative models. <p> Starting from the initial state of the specified scenario, qpc identifies the active influences in the scenario model (i.e., those influences whose activity preconditions are satisfied), and it uses them to generate a set of qualitative differential equations (qdes). qpc simulates the equations using the qsim program <ref> [52, 54] </ref>. As the state of the scenario changes during simulation, the set of active influences in the scenario model may change, so qpc repeatedly formulates a set of qdes and simulates them until simulation is complete. Qualitative differential equations are an abstraction of ordinary differential equations.
Reference: [55] <author> S.A. Lapp and G.J. </author> <title> Powers. Computer-aided synthesis of fault trees. </title> <journal> IEEE Transactions on Reliability, </journal> <month> April </month> <year> 1977. </year>
Reference-contexts: First, we chose to use individual influences as model fragments in order to focus the modeler's reasoning at the level of individual phenomena. Influences serve a similar role in a variety of areas of science and engineering <ref> [10, 31, 55, 72, 75] </ref>. Second, we chose to representationally distinguish activity preconditions, significance preconditions, and validity preconditions, since each plays a distinct role in our modeling algorithms.
Reference: [56] <author> Xiang-Seng Lee. </author> <title> Temporal and Spatial Analysis in Knowledge-Based Physics Problem Solving. </title> <type> PhD thesis, </type> <institution> Artificial Intelligence Laboratory, University of Texas, Austin, TX, </institution> <month> December </month> <year> 1992. </year> <note> Technical Report AI93-205. </note>
Reference-contexts: Some programs (e.g., those of Falkenhainer and Forbus [25] and Lee <ref> [56] </ref>) exhaustively elaborate the scenario before starting model construction. Other programs (e.g., those of Nayak [66] and Iwasaki and Levy [43]) allow some interleaving of scenario elaboration and model construction.
Reference: [57] <author> James Lester. </author> <title> Generating Natural Language Explanations from Large-Scale Knowledge Bases. </title> <type> PhD thesis, </type> <institution> University of Texas at Austin, </institution> <year> 1994. </year>
Reference-contexts: However, while the bkb can provide the knowledge tripel needs, we soon discovered a number of errors in its knowledge. The bkb has been used to support a variety of research projects, including machine learning [63, 64], explanation generation <ref> [1, 2, 57] </ref>, and natural language generation [9]. However, none of these projects required the types of knowledge that tripel needs, so the knowledge grew without being tested, and errors accumulated over the years.
Reference: [58] <author> Alon Y. Levy. </author> <title> Irrelevance Reasoning in Knowledge Based Systems. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Stanford University, </institution> <month> July </month> <year> 1993. </year> <note> Report No. STAN-CS-93-1482. </note>
Reference-contexts: In contrast, our modeling algorithm is designed to ensure that. * Their algorithm is guaranteed to run in time polynomial in the size of the scenario description <ref> [58] </ref>. However, that result does not apply to our task since it relies on the same assumptions as the similar result of Nayak [65] discussed earlier. The mecho program for solving physics problems [61] is also similar to tripel's model constructor.
Reference: [59] <author> C.C. Lin and L.A. Segal. </author> <title> Mathematics Applied to Deterministic Problems in the Natural Sciences. </title> <publisher> Macmillan, </publisher> <address> New York, </address> <year> 1974. </year> <month> 166 </month>
Reference-contexts: In addition to previous work in automated modeling, our research has been guided by the practices of human modelers in biology, ecology, economics, and engineering. While human modelers rarely offer operational advice for automating their task, their textbooks (e.g., <ref> [4, 14, 31, 34, 45, 49, 59, 75, 76] </ref>) and journal articles (e.g., [32, 38, 39, 40, 50, 69, 78, 79, 82]) often reveal the modeling alternatives they consider and the criteria for their choices. 11 1.10 Summary of Contributions and Results Our research provides three types of contributions. <p> First, it assumes that a single time scale will suffice for answering a question. However, some questions are best answered by combining the results of several models, each with a different time scale <ref> [7, 42, 53, 59] </ref>. Also, the fastest adequate time scale may not be the best one for answering some questions; there may be more important connections between driving variables and variables of interest on slower time scales. <p> Similar comments apply to the problem of determining whether an influence is valid. Applied mathematicians have developed some formal (albeit heuristic) methods for recognizing insignificant terms (i.e., influences) in equations <ref> [49, 59] </ref>. These methods are interesting because they combine the considerations mentioned above.
Reference: [60] <author> Zheng-Yang Liu and Arthur M. Farley. </author> <title> Shifting ontological perspectives in reasoning about physical systems. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence (AAAI-90), </booktitle> <pages> pages 395-400, </pages> <address> Menlo Park, 1990. </address> <publisher> AAAI Press. </publisher>
Reference: [61] <author> G.F. Luger. </author> <title> Mathematical model building in the solution of mechanics problems: Human protocols and the MECHO trace. </title> <journal> Cognitive Science, </journal> <volume> 5 </volume> <pages> 55-77, </pages> <year> 1981. </year>
Reference-contexts: However, that result does not apply to our task since it relies on the same assumptions as the similar result of Nayak [65] discussed earlier. The mecho program for solving physics problems <ref> [61] </ref> is also similar to tripel's model constructor. It starts with the unknowns of the problem (analogous to the variables of interest) and searches backward through alternative equations until it finds an adequate model.
Reference: [62] <author> Sanjay Mittal and Brian Falkenhainer. </author> <title> Dynamic constraint satisfaction problems. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence (AAAI-90), </booktitle> <pages> pages 25-32, </pages> <address> Menlo Park, 1990. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: In their modeling task, a question specifies terms (e.g., variables) of interest. Their objective is to find a minimal set of assumptions that satisfy all the domain constraints and ensure that the model includes the terms of interest. They accomplish this with a constraint satisfaction algorithm ("dynamic constraint satisfaction" <ref> [62] </ref>). In their framework, most criteria for model adequacy are specified in the domain knowledge. Their model fragments are analogous to influences, and their assumption classes are similar to tripel's encapsulates and explanation relations.
Reference: [63] <author> Kenneth S. Murray. KI: </author> <title> An experiment in automating knowledge integration. </title> <type> Technical report, </type> <institution> Artificial Intelligence Laboratory, University of Texas at Austin, </institution> <year> 1988. </year> <note> Technical Report AI88-90. </note>
Reference-contexts: However, while the bkb can provide the knowledge tripel needs, we soon discovered a number of errors in its knowledge. The bkb has been used to support a variety of research projects, including machine learning <ref> [63, 64] </ref>, explanation generation [1, 2, 57], and natural language generation [9]. However, none of these projects required the types of knowledge that tripel needs, so the knowledge grew without being tested, and errors accumulated over the years.
Reference: [64] <author> Kenneth S. Murray and Bruce W. Porter. </author> <title> Controlling search for the consequences of new information during knowledge integration. </title> <booktitle> In Proceedings of the Machine Learning Workshop, </booktitle> <pages> pages 290-295, </pages> <address> Palo Alto, CA, 1989. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: However, while the bkb can provide the knowledge tripel needs, we soon discovered a number of errors in its knowledge. The bkb has been used to support a variety of research projects, including machine learning <ref> [63, 64] </ref>, explanation generation [1, 2, 57], and natural language generation [9]. However, none of these projects required the types of knowledge that tripel needs, so the knowledge grew without being tested, and errors accumulated over the years. <p> However, more fundamentally, the knowledge base must take a more active role in its development. It must relate each new piece of knowledge to existing knowledge, including identifying inferential consequences of new knowledge that conflict with existing knowledge. There has been some important work in this area <ref> [64] </ref>, but much work remains. The evaluation described in Chapter 9 suggests that tripel itself might be a valuable tool for debugging a knowledge base.
Reference: [65] <author> P. Pandurang Nayak. </author> <title> Causal approximations. </title> <journal> Artificial Intelligence, </journal> <volume> 70 </volume> <pages> 277-334, </pages> <year> 1994. </year>
Reference-contexts: Their methods address the task of constructing the simplest adequate model for answering a question. The objectives of our research are also similar to more recent work that has progressed concurrently with our own, especially the work of Nayak <ref> [65] </ref> and Iwasaki and Levy [43]. Each of these pieces of related work, and many others, addresses a variety of issues. No single description of each previous modeling program can adequately describe the many similarities and differences between that program and ours. <p> To represent the relationships among model fragments, assumptions are organized into "assumption classes"; the assumptions in an assumption class represent mutually incompatible modeling alternatives for an entity or phenomenon. Several researchers <ref> [43, 65] </ref> define interesting variants of this compositional modeling framework, but the basic ideas are widely used. While our early work adopted the representation introduced by Falkenhainer and Forbus, our representation gradually evolved into its current form for several reasons. <p> Nevertheless, the number of variables in a model is a simple measure that correlates well with most other measures of complexity, and it has proven to be an effective heuristic in our experience. Other researchers have proposed different measures of simplicity. Nayak <ref> [65] </ref> and Iwasaki and Levy [43] define one scenario model as simpler than another if, for every model fragment in the first, either that model fragment or a more-detailed alternative is in the second. 1 This is a reasonable criterion when it holds, but it leaves too many models incomparable. <p> Ellipses indicate connections to the remainder of the scenario variables and influences. Alternative levels of detail are not shown. (B) The simplest adequate scenario model for answering the question. 52 variables automatically. For complex systems, this approach is impractical. The modeling algorithm of Nayak <ref> [65] </ref> can choose exogenous variables, but it does not have special criteria for doing so. His adequacy criteria are suitable for his modeling task, explaining a specified causal relation, but they are too weak for prediction questions. <p> Related Work The requirement that a scenario model relate driving variables to variables of interest is not new. Several people have recognized its importance. However, none of these people require an adequate model to include differential influence paths. Nayak <ref> [65] </ref> requires an adequate model to provide a causal path linking a single specified driving variable to a single specified variable of interest. Amsterdam [5] requires an adequate model to provide "interaction" paths (i.e., not necessarily causal) linking every variable of interest to some driving variable. <p> Yip's modeling algorithm starts with a detailed model and repeatedly simplifies it by removing insignificant terms in the equations (analogous to eliminating insignificant influences). Nayak's modeling algorithm <ref> [65] </ref> starts with a detailed model and repeatedly simplifies it by (1) eliminating irrelevant phenomena or (2) replacing one model fragment with another that represents a "causal approximation" of it (typically, this corresponds to omitting some of the influences in the original model 87 fragment). <p> Second, the simplification operators must be fine-grained enough not to skip over the simplest adequate model, but if they are too fine-grained it will take a long time to reach the simplest adequate model. Nayak <ref> [65] </ref> proves that his algorithm will reach the simplest adequate model in time polynomial in the size of the scenario description. However, his results do not apply to our task, for several reasons. <p> There are two major differences between the two algorithms. First, they have no method for automatically choosing exogenous variables. (Chapter 7 describes our method.) Second, like Nayak <ref> [65] </ref>, their simplicity criteria leave many 1 Nayak (personal communication) believes that the proofs could be extended to accommodate our use of influences. 88 models incomparable, even though some of these models are intuitively much simpler than others. <p> However, that result does not apply to our task since it relies on the same assumptions as the similar result of Nayak <ref> [65] </ref> discussed earlier. The mecho program for solving physics problems [61] is also similar to tripel's model constructor. It starts with the unknowns of the problem (analogous to the variables of interest) and searches backward through alternative equations until it finds an adequate model. <p> Given a model with non-causal equations, these researchers use a "causal ordering" algorithm to assign a causal direction to the equations (and hence the individual influences that make up the equations) <ref> [44, 65] </ref>. Thus, modeling algorithms that follow this approach cannot exploit causality until a model is already constructed [43, 65]. tripel exploits the causal direction of influences in several ways. During time scale selection, it uses the directions to find causal paths from driving variables to variables of interest. <p> Given a model with non-causal equations, these researchers use a "causal ordering" algorithm to assign a causal direction to the equations (and hence the individual influences that make up the equations) [44, 65]. Thus, modeling algorithms that follow this approach cannot exploit causality until a model is already constructed <ref> [43, 65] </ref>. tripel exploits the causal direction of influences in several ways. During time scale selection, it uses the directions to find causal paths from driving variables to variables of interest. During model construction, it uses the directions to choose adequate sets of influences on free variables. <p> The others exploit causality at an earlier stage. Waiting until a model is complete to assign causal directions is overly cautious; most influences can be given a fixed causal direction before a model is constructed. Causal ordering algorithms for mixed sets of differential and algebraic equations <ref> [41, 44, 65] </ref> almost always orient differential influences the way they are causally oriented in tripel. (Iwasaki and Simon [44] discuss some rare exceptions.) Therefore, the only real restriction is tripel's assumption that functional influences have a fixed causal direction.
Reference: [66] <author> P.P. Nayak. </author> <title> Automated Modeling of Physical Systems. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Stanford University, </institution> <month> September </month> <year> 1992. </year> <note> Report No. STAN-CS-92-1443. </note>
Reference-contexts: Some programs (e.g., those of Falkenhainer and Forbus [25] and Lee [56]) exhaustively elaborate the scenario before starting model construction. Other programs (e.g., those of Nayak <ref> [66] </ref> and Iwasaki and Levy [43]) allow some interleaving of scenario elaboration and model construction. Williams's program [85] automatically generates some equations (the building blocks for his models) via algebraic simplification as they are needed during model construction.
Reference: [67] <author> G.S. Novak, Jr. </author> <title> Representations of knowledge in a program for solving physics problems. </title> <booktitle> In Proceedings of IJCAI-77, </booktitle> <pages> pages 286-291, </pages> <address> Cambridge, MA, </address> <year> 1977. </year>
Reference-contexts: However, the structural preconditions are stated in terms of "canonical objects" <ref> [67] </ref> (e.g., a point mass or an ideal spring), and additional knowledge is used to map scenario entities to appropriate canonical objects.
Reference: [68] <author> R.V. O'Neill, D.L. DeAngelis, J.B. Waide, and T.F.H. Allen. </author> <title> A Hierarchical Concept of Ecosystems. </title> <publisher> Princeton University Press, </publisher> <address> Princeton, NJ, </address> <year> 1986. </year>
Reference-contexts: A model can often be greatly simplified when insignificant influences are recognized and omitted. While human modelers use many criteria to determine the significance of influences, knowledge of the time scale of different processes is particularly important. Processes cause significant change on widely disparate time scales <ref> [4, 36, 68, 76, 80] </ref>. For example, in a plant, water flows through membranes on a time scale of seconds, solutes flow through membranes on a time scale of minutes, growth requires hours or days, and surrounding ecological processes may occur on a time scale of months or years. <p> Their approach has several limitations. While their modeling algorithm requires a system decomposition for the scenario, our criteria for choosing a system boundary only require knowledge of the influences. Furthermore, Falkenhainer and Forbus assume that the system decomposition is based on partonomic structure; however, O'Neill et al. <ref> [68] </ref> argue that approximate system boundaries in natural systems arise from differences in process rates (i.e., their time scales) and that these boundaries may not correspond to standard structural decompositions. Even in engineered systems, designed system boundaries cannot be trusted when considering faults or unintended interactions [18]. <p> In natural systems, like plants, animals, and ecosystems, modularity arises from the widely disparate time scales at which processes cause change <ref> [4, 53, 68, 76, 80] </ref>. The result is a hierarchy of nearly decomposable subsystems; processes acting within a subsystem cause significant change quickly, while processes acting across subsystems cause change more slowly [4, 53, 68, 82]. <p> The result is a hierarchy of nearly decomposable subsystems; processes acting within a subsystem cause significant change quickly, while processes acting across subsystems cause change more slowly <ref> [4, 53, 68, 82] </ref>. The time scale of interest filters out influences that are significant only on slower time scales, thus isolating the variables of interest in their own nearly decomposable subsystem. <p> These modeling techniques are useful, and often necessary, to achieve conceptual clarity, to enable analytic solutions to a model's equations, and even to enable practical numerical or qualitative simulation. The techniques are widely used in many fields, including economics [82], biology [34, 45, 77, 80, 88], ecology <ref> [4, 46, 68, 79] </ref> and many areas of engineering [14, 50, 78]. However, a person asking a prediction question cannot be expected to provide the time scale of interest.
Reference: [69] <author> R.V. O'Neill and B. Rust. </author> <title> Aggregation error in ecological models. </title> <journal> Ecological Modelling, </journal> <volume> 7 </volume> <pages> 91-105, </pages> <year> 1979. </year>
Reference-contexts: While human modelers rarely offer operational advice for automating their task, their textbooks (e.g., [4, 14, 31, 34, 45, 49, 59, 75, 76]) and journal articles (e.g., <ref> [32, 38, 39, 40, 50, 69, 78, 79, 82] </ref>) often reveal the modeling alternatives they consider and the criteria for their choices. 11 1.10 Summary of Contributions and Results Our research provides three types of contributions.
Reference: [70] <author> Judea Pearl. </author> <title> Heuristics: Intelligent Search Strategies for Computer Problem Solving. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1984. </year>
Reference-contexts: Therefore, it is not possible for any two partial models in the search graph to have a common descendant. 2 Thus, Find-adequate-model is a version of the well-known "split and prune" search algorithm <ref> [70] </ref>, and the search graph it constructs is a tree. 6.6.2 The Model Construction Algorithm Always Terminates Conceptually, Find-adequate-model operates by repeatedly pruning parts of the search space from consideration. <p> A search algorithm is admissible if it is guaranteed to return an optimal solution whenever a solution exists <ref> [70] </ref>. Find-adequate-model is admissible because it is guaranteed to return a simplest adequate scenario model whenever an adequate scenario model exists.
Reference: [71] <author> B. Porter, J. Lester, K. Murray, K. Pittman, A. Souther, L. Acker, and T. Jones. </author> <title> AI research in the context of a multifunctional knowledge base: The botany 167 knowledge base project. </title> <type> Technical Report AI88-88, </type> <institution> University of Texas at Austin, </institution> <year> 1988. </year>
Reference-contexts: Specifically, our methods were developed to handle large scenario descriptions that include many phenomena and many levels of detail. Therefore, to empirically evaluate these methods, we require domain knowledge capable of creating such extensive scenario descriptions. For this purpose, we used the Botany 104 Knowledge Base (bkb) <ref> [71] </ref>. The bkb is an ideal test bed for evaluating tripel for three reasons. First, its knowledge is extensive. The knowledge base currently contains about 200,000 facts covering plant anatomy, physiology, and development. Its knowledge ranges over many phenomena and levels of detail.
Reference: [72] <author> C.J. Puccia and R. Levins. </author> <title> Qualitative Modeling of Complex Systems. </title> <publisher> Harvard University Press, </publisher> <address> Cambridge, MA, </address> <year> 1985. </year>
Reference-contexts: This goal, accuracy, encourages detailed, comprehensive models. However, a model must also be as simple as possible. If the model includes irrelevant information, it will be more difficult to analyze and explain. For example, 2 We show later that the methods are useful for building qualitative models <ref> [19, 28, 52, 54, 72] </ref> as well as quantitative ones. <p> Additional domain knowledge is needed to compose influences into equations. Forbus [28] developed methods for composing influences into qualitative equations, given the sign of the partial derivative of each influence. Such qualitative models <ref> [19, 28, 52, 54, 72] </ref> are useful when quantitative details are unavailable (as is often the case in plant physiology) or irrelevant (as is often the case in tutoring). <p> Therefore, its methods are useful in building qualitative models <ref> [19, 28, 52, 54, 72] </ref> as well as quantitative models. <p> First, we chose to use individual influences as model fragments in order to focus the modeler's reasoning at the level of individual phenomena. Influences serve a similar role in a variety of areas of science and engineering <ref> [10, 31, 55, 72, 75] </ref>. Second, we chose to representationally distinguish activity preconditions, significance preconditions, and validity preconditions, since each plays a distinct role in our modeling algorithms.
Reference: [73] <author> Jeff Rickel and Bruce Porter. </author> <title> Automated modeling for answering prediction questions: Exploiting interaction paths. </title> <booktitle> In The Sixth International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pages 82-95, </pages> <address> Edinburgh, Scotland, </address> <year> 1992. </year> <institution> Heriot-Watt University. </institution>
Reference-contexts: Finally, adequacy constraint 13 would only require interaction paths, rather than influence paths, relating driving variables and variables of interest. In order to handle non-causal prediction questions, an earlier version of tripel took this approach <ref> [73] </ref>. The approach showed great promise, but it was less effective than the current version of tripel in two areas. First, it tended to include more irrelevant elements in models, because more variables are related by interaction paths than by causal influence paths.
Reference: [74] <author> Jeff Rickel and Bruce Porter. </author> <title> Automated modeling for answering prediction questions: Selecting the time scale and system boundary. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI-94), </booktitle> <pages> pages 1191-1198, </pages> <address> Menlo Park, CA, 1994. </address> <publisher> AAAI Press. </publisher>
Reference: [75] <author> Nancy Roberts, David Andersen, Ralph Deal, Michael Garet, and William Shaffer. </author> <title> Introduction to Computer Simulation. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1983. </year>
Reference-contexts: In addition to previous work in automated modeling, our research has been guided by the practices of human modelers in biology, ecology, economics, and engineering. While human modelers rarely offer operational advice for automating their task, their textbooks (e.g., <ref> [4, 14, 31, 34, 45, 49, 59, 75, 76] </ref>) and journal articles (e.g., [32, 38, 39, 40, 50, 69, 78, 79, 82]) often reveal the modeling alternatives they consider and the criteria for their choices. 11 1.10 Summary of Contributions and Results Our research provides three types of contributions. <p> First, we chose to use individual influences as model fragments in order to focus the modeler's reasoning at the level of individual phenomena. Influences serve a similar role in a variety of areas of science and engineering <ref> [10, 31, 55, 72, 75] </ref>. Second, we chose to representationally distinguish activity preconditions, significance preconditions, and validity preconditions, since each plays a distinct role in our modeling algorithms.
Reference: [76] <editor> T. Rosswall, R.G. Woodmansee, and P.G. Risser, editors. </editor> <title> Scales and Global Change: Spatial and Temporal Variability in Biospheric Processes. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1988. </year>
Reference-contexts: In addition to previous work in automated modeling, our research has been guided by the practices of human modelers in biology, ecology, economics, and engineering. While human modelers rarely offer operational advice for automating their task, their textbooks (e.g., <ref> [4, 14, 31, 34, 45, 49, 59, 75, 76] </ref>) and journal articles (e.g., [32, 38, 39, 40, 50, 69, 78, 79, 82]) often reveal the modeling alternatives they consider and the criteria for their choices. 11 1.10 Summary of Contributions and Results Our research provides three types of contributions. <p> A model can often be greatly simplified when insignificant influences are recognized and omitted. While human modelers use many criteria to determine the significance of influences, knowledge of the time scale of different processes is particularly important. Processes cause significant change on widely disparate time scales <ref> [4, 36, 68, 76, 80] </ref>. For example, in a plant, water flows through membranes on a time scale of seconds, solutes flow through membranes on a time scale of minutes, growth requires hours or days, and surrounding ecological processes may occur on a time scale of months or years. <p> In natural systems, like plants, animals, and ecosystems, modularity arises from the widely disparate time scales at which processes cause change <ref> [4, 53, 68, 76, 80] </ref>. The result is a hierarchy of nearly decomposable subsystems; processes acting within a subsystem cause significant change quickly, while processes acting across subsystems cause change more slowly [4, 53, 68, 82].
Reference: [77] <author> S.I. Rubinow. </author> <title> Introduction to Mathematical Biology. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1975. </year>
Reference-contexts: If the dynamics of this process are irrelevant, the modeler can simply treat the level of water as an instantaneous function of the level of solutes, and this functional dependence can be represented with a functional influence. Quasi-static approximations are important in many branches of science and engineering <ref> [14, 46, 77, 78, 80, 82] </ref>. In fact, several branches of engineering, notably circuit theory and equilibrium thermodynamics, rest on such approximations [13, 83]. A functional influence that represents a quasi-static approximation is called an equilibrium influence. <p> These modeling techniques are useful, and often necessary, to achieve conceptual clarity, to enable analytic solutions to a model's equations, and even to enable practical numerical or qualitative simulation. The techniques are widely used in many fields, including economics [82], biology <ref> [34, 45, 77, 80, 88] </ref>, ecology [4, 46, 68, 79] and many areas of engineering [14, 50, 78]. However, a person asking a prediction question cannot be expected to provide the time scale of interest.
Reference: [78] <author> V.R. Saksena, J. O'Reilly, and P.V. Kokotovic. </author> <title> Singular perturbations and time-scale methods in control theory: Survey 1976-1983. </title> <journal> Automatica, </journal> <volume> 20(3) </volume> <pages> 273-293, </pages> <year> 1984. </year>
Reference-contexts: While human modelers rarely offer operational advice for automating their task, their textbooks (e.g., [4, 14, 31, 34, 45, 49, 59, 75, 76]) and journal articles (e.g., <ref> [32, 38, 39, 40, 50, 69, 78, 79, 82] </ref>) often reveal the modeling alternatives they consider and the criteria for their choices. 11 1.10 Summary of Contributions and Results Our research provides three types of contributions. <p> If the dynamics of this process are irrelevant, the modeler can simply treat the level of water as an instantaneous function of the level of solutes, and this functional dependence can be represented with a functional influence. Quasi-static approximations are important in many branches of science and engineering <ref> [14, 46, 77, 78, 80, 82] </ref>. In fact, several branches of engineering, notably circuit theory and equilibrium thermodynamics, rest on such approximations [13, 83]. A functional influence that represents a quasi-static approximation is called an equilibrium influence. <p> In addition to biological and ecological domains, this type of time scale knowledge appears useful in engineering domains as well. Kokotovic, O'Malley, and San-nuti [50] and Saksena, O'Reilly, and Kokotovic <ref> [78] </ref> survey hundreds of applications, in many different engineering fields, in which models are simplified using knowledge of the disparate time scales of processes. 2.6.3 Validity Preconditions Many influences are approximations of the phenomena they represent, and these approximations typically have a limited range of validity. <p> The techniques are widely used in many fields, including economics [82], biology [34, 45, 77, 80, 88], ecology [4, 46, 68, 79] and many areas of engineering <ref> [14, 50, 78] </ref>. However, a person asking a prediction question cannot be expected to provide the time scale of interest. Typically, the person will not know which influences link the driving conditions to the variables of interest, much less the time scales on which the influences operate.
Reference: [79] <author> W.M. Schaffer. </author> <title> Ecological abstraction: The consequences of reduced dimensionality in ecological models. </title> <journal> Ecological Monographs, </journal> <volume> 51(4) </volume> <pages> 383-401, </pages> <year> 1981. </year>
Reference-contexts: While human modelers rarely offer operational advice for automating their task, their textbooks (e.g., [4, 14, 31, 34, 45, 49, 59, 75, 76]) and journal articles (e.g., <ref> [32, 38, 39, 40, 50, 69, 78, 79, 82] </ref>) often reveal the modeling alternatives they consider and the criteria for their choices. 11 1.10 Summary of Contributions and Results Our research provides three types of contributions. <p> These modeling techniques are useful, and often necessary, to achieve conceptual clarity, to enable analytic solutions to a model's equations, and even to enable practical numerical or qualitative simulation. The techniques are widely used in many fields, including economics [82], biology [34, 45, 77, 80, 88], ecology <ref> [4, 46, 68, 79] </ref> and many areas of engineering [14, 50, 78]. However, a person asking a prediction question cannot be expected to provide the time scale of interest.
Reference: [80] <author> L.A. Segal, </author> <title> editor. Mathematical Models in Molecular and Cellular Biology, chapter 3. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1980. </year>
Reference-contexts: If the dynamics of this process are irrelevant, the modeler can simply treat the level of water as an instantaneous function of the level of solutes, and this functional dependence can be represented with a functional influence. Quasi-static approximations are important in many branches of science and engineering <ref> [14, 46, 77, 78, 80, 82] </ref>. In fact, several branches of engineering, notably circuit theory and equilibrium thermodynamics, rest on such approximations [13, 83]. A functional influence that represents a quasi-static approximation is called an equilibrium influence. <p> A model can often be greatly simplified when insignificant influences are recognized and omitted. While human modelers use many criteria to determine the significance of influences, knowledge of the time scale of different processes is particularly important. Processes cause significant change on widely disparate time scales <ref> [4, 36, 68, 76, 80] </ref>. For example, in a plant, water flows through membranes on a time scale of seconds, solutes flow through membranes on a time scale of minutes, growth requires hours or days, and surrounding ecological processes may occur on a time scale of months or years. <p> In natural systems, like plants, animals, and ecosystems, modularity arises from the widely disparate time scales at which processes cause change <ref> [4, 53, 68, 76, 80] </ref>. The result is a hierarchy of nearly decomposable subsystems; processes acting within a subsystem cause significant change quickly, while processes acting across subsystems cause change more slowly [4, 53, 68, 82]. <p> These modeling techniques are useful, and often necessary, to achieve conceptual clarity, to enable analytic solutions to a model's equations, and even to enable practical numerical or qualitative simulation. The techniques are widely used in many fields, including economics [82], biology <ref> [34, 45, 77, 80, 88] </ref>, ecology [4, 46, 68, 79] and many areas of engineering [14, 50, 78]. However, a person asking a prediction question cannot be expected to provide the time scale of interest.
Reference: [81] <author> Mark Shirley and Brian Falkenhainer. </author> <title> Explicit reasoning about accuracy for approximating physical systems. </title> <editor> In T. Ellman, R. Keller, and J. Mostow, editors, </editor> <booktitle> Working Notes of the AAAI Workshop on Automatic Generation of Approximations and Abstractions, </booktitle> <pages> pages 153-162, </pages> <year> 1990. </year>
Reference-contexts: However, tripel could be extended to address such questions, in which case this constraint could be added. Section 10.6.2 discusses this issue further. Some previous automated modeling programs assume that the approximate error introduced by different approximations is known or can be estimated <ref> [21, 23, 24, 81] </ref>. In these programs, a model is adequate only if the error in its predictions is within a specified tolerance. In the application domain we explored, plant physiology, the approximate error introduced by approximations is not available, so we excluded this constraint.
Reference: [82] <author> H.A. Simon and A. Ando. </author> <title> Aggregation of variables in dynamic systems. </title> <journal> Econo-metrica, </journal> <volume> 29 </volume> <pages> 111-138, </pages> <year> 1961. </year> <month> 168 </month>
Reference-contexts: While human modelers rarely offer operational advice for automating their task, their textbooks (e.g., [4, 14, 31, 34, 45, 49, 59, 75, 76]) and journal articles (e.g., <ref> [32, 38, 39, 40, 50, 69, 78, 79, 82] </ref>) often reveal the modeling alternatives they consider and the criteria for their choices. 11 1.10 Summary of Contributions and Results Our research provides three types of contributions. <p> If the dynamics of this process are irrelevant, the modeler can simply treat the level of water as an instantaneous function of the level of solutes, and this functional dependence can be represented with a functional influence. Quasi-static approximations are important in many branches of science and engineering <ref> [14, 46, 77, 78, 80, 82] </ref>. In fact, several branches of engineering, notably circuit theory and equilibrium thermodynamics, rest on such approximations [13, 83]. A functional influence that represents a quasi-static approximation is called an equilibrium influence. <p> As an approximation, a modeler might say that the rate of photosynthesis is functionally influenced by the concentration of carbon dioxide in the leaves. Such an approximation is reasonable when the subpools equilibrate on a time scale much faster than the time scale of interest <ref> [45, 82] </ref>. For example, suppose that diffusion of carbon dioxide throughout the leaves achieves a uniform concentration on a time scale of minutes. <p> The result is a hierarchy of nearly decomposable subsystems; processes acting within a subsystem cause significant change quickly, while processes acting across subsystems cause change more slowly <ref> [4, 53, 68, 82] </ref>. The time scale of interest filters out influences that are significant only on slower time scales, thus isolating the variables of interest in their own nearly decomposable subsystem. <p> These modeling techniques are useful, and often necessary, to achieve conceptual clarity, to enable analytic solutions to a model's equations, and even to enable practical numerical or qualitative simulation. The techniques are widely used in many fields, including economics <ref> [82] </ref>, biology [34, 45, 77, 80, 88], ecology [4, 46, 68, 79] and many areas of engineering [14, 50, 78]. However, a person asking a prediction question cannot be expected to provide the time scale of interest.
Reference: [83] <author> K. Wark. </author> <title> Thermodynamics. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1983. </year>
Reference-contexts: Quasi-static approximations are important in many branches of science and engineering [14, 46, 77, 78, 80, 82]. In fact, several branches of engineering, notably circuit theory and equilibrium thermodynamics, rest on such approximations <ref> [13, 83] </ref>. A functional influence that represents a quasi-static approximation is called an equilibrium influence. An equilibrium influence summarizes the net effect of some set of processes on the equilibrium state of the influencee.
Reference: [84] <author> Daniel S. Weld. </author> <title> Reasoning about model accuracy. </title> <journal> Artificial Intelligence, </journal> <volume> 56 </volume> <pages> 255-300, </pages> <year> 1992. </year>
Reference-contexts: While each of these is similar to adequacy constraint 13, our particular formulation is novel. For prediction questions, the requirement of differential influence paths is crucial. 5.5 Other Related Work Some previous automated modeling programs address tasks in which the correct behavior of the variables of interest is known <ref> [3, 84] </ref>. In these programs, a model is adequate only if its predictions match the correct behavior (within a specified tolerance). Because a prediction question does not provide the correct behavior, we do not use such an adequacy constraint. <p> Finally, for the textbook physics problems mecho solves, a much simpler criterion for choosing exogenous variables is sufficient; a variable can be exogenous if and only if its value is given. Several people have explored an approach to model construction called "discrepancy-driven refinement" <ref> [3, 5, 84] </ref>. After constructing an initial model, the modeler compares its predictions against the known behavior of the system. Discrepancies suggest refinements to the model, and the process is repeated until a sufficiently close match is obtained. <p> In tutoring, a student might be told that a physical system behaves in a certain way (e.g., "When a plant begins to wilt, aba builds up in its guard cells") and the student may ask why. There has been a lot of important work on answering explanation questions <ref> [3, 5, 37, 84] </ref>. The most common technique is called "discrepancy-driven refinement." In this technique, the modeler constructs an initial model of the scenario and compares its predictions against the known behavior of the variables of interest. Discrepancies suggest particular changes to the model that will reduce or eliminate them.
Reference: [85] <author> B.C. Williams. </author> <title> Critical abstraction: Generating simplest models for causal explanation. </title> <booktitle> In The Fifth International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pages 77-92, </pages> <address> Austin, TX, </address> <year> 1991. </year> <institution> University of Texas at Austin. </institution>
Reference-contexts: Some programs (e.g., those of Falkenhainer and Forbus [25] and Lee [56]) exhaustively elaborate the scenario before starting model construction. Other programs (e.g., those of Nayak [66] and Iwasaki and Levy [43]) allow some interleaving of scenario elaboration and model construction. Williams's program <ref> [85] </ref> automatically generates some equations (the building blocks for his models) via algebraic simplification as they are needed during model construction. <p> Related Work Despite its importance, no previous work in automated modeling has provided explicit criteria for choosing exogenous variables. Typically, work in automated modeling assumes that either the domain knowledge or the question specifies those variables that can be exogenous. For instance, the modeling algorithms of Williams <ref> [85] </ref> and Iwasaki and Levy [43] require, as input, the variables that can be exogenous for the question. <p> Amsterdam [5] requires an adequate model to provide "interaction" paths (i.e., not necessarily causal) linking every variable of interest to some driving variable. Williams's method for generating a "critical abstraction" <ref> [85] </ref> is designed to ensure that the chosen scenario model causally links the driving variables (in his framework, the exogenous variables of the system) to the variables of interest. While each of these is similar to adequacy constraint 13, our particular formulation is novel. <p> Removing the need for modeling knowledge has been a driving motivation for our work. A second approach to model construction is to start with a detailed model and repeatedly simplify it. Williams's method for generating a "critical abstraction" <ref> [85] </ref> starts with a detailed model of the scenario and simplifies it in three ways: (1) the method removes influences on which the variables of interest do not causally depend (such influences are never introduced into a scenario model by our algorithm), (2) the method algebraically eliminates certain intermediate variables if
Reference: [86] <author> Brian C. Williams and Olivier Raiman. </author> <title> Decompositional modeling through caricatural reasoning. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI-94), </booktitle> <pages> pages 1199-1204, </pages> <address> Menlo Park, CA, 1994. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: The person encoding the domain knowledge is responsible for ensuring that each compatible combination of model fragments yields an adequate set of influences. Some previous modeling programs are given a complete equation for a dependent variable and they identify and discard negligible terms in the equation <ref> [24, 86, 47] </ref>. This is analogous to identifying an approximately complete set of influences. However, these programs do not consider alternative levels of detail for the elements of the equation. 5.4.4 Entities in a Model A scenario model is a model of selected entities in the scenario.
Reference: [87] <author> Stephen Wolfram. </author> <title> Mathematica: A System for Doing Mathematics by Computer. </title> <publisher> Addison-Wesley, </publisher> <year> 1988. </year>
Reference-contexts: There are already a variety of methods that automate the analysis step. For example, to analyze differential equation models, there are programs for solving the equations analytically (e.g., Mathematica <ref> [87] </ref>) and there are algorithms for simulating such models (e.g., Runge-Kutta [6]). However, the other two steps, modeling and explanation, typically require humans. This dissertation addresses the first of these: automatically constructing models for answering prediction questions.
Reference: [88] <author> Bernard P. Zeigler. </author> <title> Simplification of biochemical reaction systems. In L.A. Se-gal, editor, Mathematical Models in Molecular and Cellular Biology. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1980. </year>
Reference-contexts: These modeling techniques are useful, and often necessary, to achieve conceptual clarity, to enable analytic solutions to a model's equations, and even to enable practical numerical or qualitative simulation. The techniques are widely used in many fields, including economics [82], biology <ref> [34, 45, 77, 80, 88] </ref>, ecology [4, 46, 68, 79] and many areas of engineering [14, 50, 78]. However, a person asking a prediction question cannot be expected to provide the time scale of interest.

References-found: 88

