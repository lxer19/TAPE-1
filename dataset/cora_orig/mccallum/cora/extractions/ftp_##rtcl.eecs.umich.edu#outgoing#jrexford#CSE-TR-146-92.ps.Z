URL: ftp://rtcl.eecs.umich.edu/outgoing/jrexford/CSE-TR-146-92.ps.Z
Refering-URL: http://www.eecs.umich.edu/RTCL/routing/
Root-URL: http://www.cs.umich.edu
Title: Shortest-path Routing in Homogeneous Point-to-Point Networks With Virtual Cut-Through Switching  
Author: Jennifer Rexford and Kang G. Shin 
Address: Ann Arbor, MI 48109-2122 CSE-TR-146-92  
Affiliation: Computer Science and Engineering Division Department of Electrical Engineering and Computer Science The University of Michigan  
Abstract: Much research in recent years has focused on various routing strategies for supporting efficient communication in point-to-point networks. Other research has emphasized novel switching techniques, such as virtual cut-through and wormhole switching. However, little attention has been paid to the subtle interplay between routing and switching schemes. It is desirable to select routing strategies that best exploit the chosen switching scheme. In particular, this paper presents an analysis of various shortest-path routing strategies in wrapped meshes, in the context of virtual cut-through switching. Routing strategies are compared, based on the cut-through probability and the packet delivery-time distribution, using both analytical modeling and simulation. Adaptive routing schemes that can dynamically select from multiple shortest-path links are shown to best capitalize on cut-through switching, particularly in the presence of "hot-spot" network traffic. Simulation results illustrate how inter-node dependencies impact the cut-through probability and packet delivery time. Implementation details are also discussed. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Kermani and L. Kleinrock, </author> <title> "Virtual cut-through: A new computer communication switching technique," </title> <journal> Computer Networks, </journal> <volume> vol. 3, no. 4, </volume> <pages> pp. 267-286, </pages> <month> September </month> <year> 1979. </year>
Reference-contexts: Even in a network free of other traffic, the packet delivery time depends on the product of the packet length and the number of hops between the source and destination. This severely limits the scalability of applications on multicomputers. Virtual cut-through switching, first proposed by Kermani and Kleinrock in <ref> [1] </ref>, can significantly improve delivery time in a message-passing system. This is accomplished by avoiding unnecessary packet buffering at nodes between the source and destination. Several hardware routing controllers designed in recent years have supported some sort of cut-through switching [2-5]. <p> Packet length is regenerated at each node in the packet's route. 4. Packets are delayed by time t at each node before a routing/buffering decision is made. The first three assumptions are necessary for tractability and are compatible with the analytical work in <ref> [1] </ref>. Assumption 3 provides independence between the nodes and is shown in [11, 12] to be reasonable. Assumptions 3 and 4 are relaxed in the simulator. Since time is normalized to the time to transmit a byte across a link, the service rate of the links is 1=`. <p> The diag scheme further enhances packet delivery time by increasing P [n two-choice intermediate nodes] for larger n. 4.3 Combining the Delays Since packet length is independent from node to node (by Assumption 3), the transmission and waiting delays are independent and can be combined by convolving the distributions <ref> [1] </ref>: F L+W (t) = P (L + W t) = 0 with the integration over [0; t], since L and W take on only positive values. The integration can be performed using the expressions for F L and f W , and simplified.
Reference: [2] <author> W. J. Dally and C. L. Seitz, </author> <title> "The torus routing chip," </title> <journal> Journal of Distributed Computing, </journal> <volume> vol. 1, no. 3, </volume> <pages> pp. 187-196, </pages> <year> 1986. </year>
Reference-contexts: Many controllers employ some type of crossbar switch, with buffering, between the input and output ports of each node <ref> [2, 4, 6] </ref>. Such a scheme is shown in Figure 4. To support cut-through switching, each input port has hardware to inspect the header byte (s) of an incoming packet and make a routing decision.
Reference: [3] <author> J. W. Dolter, P. Ramanathan, and K. G. Shin, </author> <title> "A microprogrammable VLSI routing con 20 troller for HARTS," </title> <booktitle> in International Conference on Computer Design: VLSI in Computers, </booktitle> <pages> pp. 160-163, </pages> <month> October </month> <year> 1989. </year>
Reference-contexts: If the link is unavailable, the packet is directed to a queue. Several buffering schemes (such as output buffering, input buffering, and other variations) are possible [6]. Another approach separates the buffering from the packet transmission/reception by providing a separate, shared memory for buffered packets <ref> [3, 15] </ref>. This allows for larger packet sizes and greater flexibility, at the expense of providing an efficient, shared interface between the transmitters/receivers and the memory. This decoupling of the buffers and the router increases the penalty for buffering, making a high cut-through probability even more valuable. <p> In the meantime, a few more bytes of the packet can arrive from the previous node, so a slightly larger online buffer may be necessary to hold these incoming bytes until the final routing decision is made. In existing routing controllers <ref> [3, 6] </ref>, around four bytes are sufficient for a one-choice scheme. An eight byte on-line buffer, then, should suffice for the schemes that consider an alternate transmitter. If the cut-through is established through the alternate link, additional cycles are also required to make the second routing decision.
Reference: [4] <author> S. Konstantinidou and L. Snyder, </author> <title> "Chaos router: Architecture and performance," </title> <booktitle> in Proc. Int'l Symposium on Computer Architecture, </booktitle> <pages> pp. 212-221, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: This scheme is similar to a technique suggested in [10] for avoiding failures. 3 The above classification indicates how the router selects among the shortest path options at each node. This does not preclude the use of misrouting <ref> [4, 8] </ref>, if all outgoing links along shortest paths are busy, although we will not specifically address this issue. 3 Cut-Through Probability To compare the performance of the three routing schemes, it is necessary to determine p c , the probability of cut-through, for each scheme. <p> Many controllers employ some type of crossbar switch, with buffering, between the input and output ports of each node <ref> [2, 4, 6] </ref>. Such a scheme is shown in Figure 4. To support cut-through switching, each input port has hardware to inspect the header byte (s) of an incoming packet and make a routing decision.
Reference: [5] <author> A. L. Davis, "Mayfly: </author> <title> A general-purpose, scalable, </title> <booktitle> parallel processing architecture," Lisp and Symbolic Computation, </booktitle> <volume> vol. 5, no. 1/2, </volume> <pages> pp. 7-47, </pages> <month> May </month> <year> 1992. </year>
Reference: [6] <author> Y. Tamir and G. Frazier, </author> <title> "High-performance multi-queue buffers for VLSI communication switches," </title> <booktitle> in Proc. Int'l Symposium on Computer Architecture, </booktitle> <pages> pp. 343-354, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: In a cut-through scheme, if an appropriate link is free at an intermediate node, then the incoming packet can proceed to the next node with only a few machine cycles of delay (four cycles, for example, in the scheme discussed in <ref> [6] </ref>). Upon reception of the packet header, the router can determine which direction the packet should travel and attempt to reserve the appropriate link. Once the link is reserved, the routing controller sends the updated packet header, followed by the remainder of the packet. <p> Many controllers employ some type of crossbar switch, with buffering, between the input and output ports of each node <ref> [2, 4, 6] </ref>. Such a scheme is shown in Figure 4. To support cut-through switching, each input port has hardware to inspect the header byte (s) of an incoming packet and make a routing decision. <p> The updated header (and the rest of the packet) can then proceed to the next node. If the link is unavailable, the packet is directed to a queue. Several buffering schemes (such as output buffering, input buffering, and other variations) are possible <ref> [6] </ref>. Another approach separates the buffering from the packet transmission/reception by providing a separate, shared memory for buffered packets [3, 15]. This allows for larger packet sizes and greater flexibility, at the expense of providing an efficient, shared interface between the transmitters/receivers and the memory. <p> In the meantime, a few more bytes of the packet can arrive from the previous node, so a slightly larger online buffer may be necessary to hold these incoming bytes until the final routing decision is made. In existing routing controllers <ref> [3, 6] </ref>, around four bytes are sufficient for a one-choice scheme. An eight byte on-line buffer, then, should suffice for the schemes that consider an alternate transmitter. If the cut-through is established through the alternate link, additional cycles are also required to make the second routing decision. <p> The simulator models each node as a 5 fi 5 switch with input-queueing with fully-connected buffers <ref> [6] </ref>. That is, each input port has four queues associated with it, one for each of the three outgoing links (not including the link that is paired with the incoming link) and one for the node itself (for packets reaching their destination node).
Reference: [7] <author> A. Tanenbaum, </author> <title> Computer Networks, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, N.J., </address> <year> 1989. </year>
Reference-contexts: Section 5 investigates hardware implementation issues. A simulator and numerical results with it are presented in Section 6. Section 7 concludes the paper, suggesting possible areas for future work. 2 Routing Schemes A wide variety of routing schemes for multicomputer networks have been considered in recent years <ref> [7, 8] </ref>. These schemes can be classified by the type of network information they consider, the type of routes they allow, and how these routes are chosen. Routing can be local or global. In local routing, nodes do not exchange explicit routing and traffic information.
Reference: [8] <author> S. Felperin, L. Gravano, G. Pirarre, and J. Sanz, </author> <title> "Routing techniques for massively parallel communication," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 79, no. 4, </volume> <pages> pp. 488-503, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: Section 5 investigates hardware implementation issues. A simulator and numerical results with it are presented in Section 6. Section 7 concludes the paper, suggesting possible areas for future work. 2 Routing Schemes A wide variety of routing schemes for multicomputer networks have been considered in recent years <ref> [7, 8] </ref>. These schemes can be classified by the type of network information they consider, the type of routes they allow, and how these routes are chosen. Routing can be local or global. In local routing, nodes do not exchange explicit routing and traffic information. <p> In non-minimal routing, packets can be misrouted (or deflected) in the hope of finding a less congested path. This increased flexibility can improve performance, but can result in more complex routers and the possibility of livelock, where a packet may never arrive at its destination <ref> [8, 9] </ref>. Routing strategies are also classified as either deterministic or adaptive. In deterministic (or static) routing, there is a single path between each source and destination node. <p> This scheme is similar to a technique suggested in [10] for avoiding failures. 3 The above classification indicates how the router selects among the shortest path options at each node. This does not preclude the use of misrouting <ref> [4, 8] </ref>, if all outgoing links along shortest paths are busy, although we will not specifically address this issue. 3 Cut-Through Probability To compare the performance of the three routing schemes, it is necessary to determine p c , the probability of cut-through, for each scheme.
Reference: [9] <author> A. A. Chien and J. H. Kim, </author> <title> "Planar-adaptive routing: Low-cost adaptive networks for multiprocessors," </title> <booktitle> in Proc. Int'l Symposium on Computer Architecture, </booktitle> <pages> pp. 268-277, </pages> <address> Australia, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: In non-minimal routing, packets can be misrouted (or deflected) in the hope of finding a less congested path. This increased flexibility can improve performance, but can result in more complex routers and the possibility of livelock, where a packet may never arrive at its destination <ref> [8, 9] </ref>. Routing strategies are also classified as either deterministic or adaptive. In deterministic (or static) routing, there is a single path between each source and destination node. <p> In other topologies the packet router may be able to select from more than two outgoing links. In this situation, the 13 controller can be extended to consider additional links. Or, to minimize complexity and overhead, the router could still consider at most two links, as in planar-adaptive routing <ref> [9] </ref>. 6 Simulation Results The analytical expressions in Sections 3 and 4 provide an estimate for the performance of the routing schemes in a cut-through switching environment. However, some lower-level design decisions and inter-node dependencies are difficult to model mathematically.
Reference: [10] <author> H. G. Badr and S. Podar, </author> <title> "An optimal shortest-path routing policy for network computers with regular mesh-connected topologies," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. C-38, no. 10, </volume> <pages> pp. 1362-1370, </pages> <month> October </month> <year> 1989. </year>
Reference-contexts: The scheme attempts to keep packets close to the diagonal to allow more of the later nodes in the route to have two choices for routing decisions. This increases the probability of cut-throughs in the remainder of the path. This scheme is similar to a technique suggested in <ref> [10] </ref> for avoiding failures. 3 The above classification indicates how the router selects among the shortest path options at each node. <p> Any node (i; j) with non-zero i and j has two outgoing links along shortest paths; these nodes are called internal nodes. At the border nodes, with i = 0 or j = 0, only one outgoing link lies along a shortest path <ref> [10] </ref>. Thus, P 2 depends on the probability of being at internal nodes during the journey. Let S (x;y);n be the probability that a packet starting at node (x; y) encounters n two-choice nodes in its route, including the source node.
Reference: [11] <author> L. Kleinrock, </author> <title> Queueing systems, volume I: Theory, </title> <publisher> John Wiley & Sons, </publisher> <year> 1975. </year>
Reference-contexts: Packets are delayed by time t at each node before a routing/buffering decision is made. The first three assumptions are necessary for tractability and are compatible with the analytical work in [1]. Assumption 3 provides independence between the nodes and is shown in <ref> [11, 12] </ref> to be reasonable. Assumptions 3 and 4 are relaxed in the simulator. Since time is normalized to the time to transmit a byte across a link, the service rate of the links is 1=`. <p> This must be generalized to incorporate the other two schemes. When a packet is unable to cut through a node, it enters a FIFO queue at the node and awaits service. Jackson's theorem <ref> [11] </ref> indicates that the collection of queues, subject to the assumptions above, has a product form solution. Each server, then, acts as an M/M/1 queue. An h-hop packet incurs waiting delay at the source node and it may also be buffered at any of the h 1 intermediate nodes. <p> The family of Erlang distributions is described by two parameters (; k); the density function f X (x) = (k 1)! measures the time needed for k events to occur from a Poisson process with rate <ref> [11] </ref>. The d-node waiting delay can then be described by ERL ((1 ); d + 1), where is the service rate for the links.
Reference: [12] <author> L. Kleinrock, </author> <title> Communication Nets: Stochastic Message Flow and Delay, </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1964. </year>
Reference-contexts: Packets are delayed by time t at each node before a routing/buffering decision is made. The first three assumptions are necessary for tractability and are compatible with the analytical work in [1]. Assumption 3 provides independence between the nodes and is shown in <ref> [11, 12] </ref> to be reasonable. Assumptions 3 and 4 are relaxed in the simulator. Since time is normalized to the time to transmit a byte across a link, the service rate of the links is 1=`.
Reference: [13] <author> J. W. Dolter, P. Ramanathan, and K. G. Shin, </author> <title> "Performance analysis of virtual cut-through switching in HARTS: A hexagonal mesh multicomputer," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. 40, no. 6, </volume> <pages> pp. 669-680, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: The one-choice scheme results in fewer cut-throughs, so packets spend more time in queues. The one-choice with alternate and diag schemes alleviate this. The derivation of the waiting delay distribution follows the approach in <ref> [13] </ref>, which presents the distribution for what is effectively the one-choice scheme. This must be generalized to incorporate the other two schemes. When a packet is unable to cut through a node, it enters a FIFO queue at the node and awaits service. <p> Thus, P [W t] = d=0 " d X T i t P [packet buffered at d intermediate nodes] : Since the T i are exponentially distributed, iid random variables, the term P [ P d corresponds to an Erlang distribution <ref> [13] </ref>. The family of Erlang distributions is described by two parameters (; k); the density function f X (x) = (k 1)! measures the time needed for k events to occur from a Poisson process with rate [11].
Reference: [14] <author> L. Kleinrock, </author> <title> Queueing Systems Volume II: Computer Applications, </title> <publisher> John Wiley & Sons, </publisher> <address> New York, </address> <year> 1976. </year>
Reference-contexts: If a packet gets buffered, it spends time T i at the node. Since arrival and service times are exponential, with rates and , respectively, the T i are exponentially distributed random variables with rate (1 ) <ref> [14] </ref>. When an h-hop packet is buffered at d intermediate nodes, the total time spent buffered at nodes is W = P d i=0 T i .
Reference: [15] <author> O. Menzilcioglu and S. Schlick, "Nectar CAB: </author> <title> A high-speed network processor," </title> <booktitle> in Proc. Int. Conf. on Distributed Computer Systems, </booktitle> <pages> pp. 508-515, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: If the link is unavailable, the packet is directed to a queue. Several buffering schemes (such as output buffering, input buffering, and other variations) are possible [6]. Another approach separates the buffering from the packet transmission/reception by providing a separate, shared memory for buffered packets <ref> [3, 15] </ref>. This allows for larger packet sizes and greater flexibility, at the expense of providing an efficient, shared interface between the transmitters/receivers and the memory. This decoupling of the buffers and the router increases the penalty for buffering, making a high cut-through probability even more valuable.
Reference: [16] <author> A. Agarwal, </author> <title> "Limits on interconnection network performance," </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <volume> vol. 2, no. 4, </volume> <pages> pp. 398-412, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: E-cube vs. Random Link Selection Another interesting feature of the graphs is the difference in performance between the random one-choice and e-cube one-choice scheme in Figure 8 (a); the e-cube scheme results in faster packet delivery. This phenomenon has also been observed in <ref> [16, 17] </ref>. In e-cube routing, a packet entering a node in one direction tends to depart that node traveling in the same dimension. So, packets arriving on different incoming links are less likely to go through the same outgoing link, 17 thus decreasing the likelihood of contention.
Reference: [17] <author> S. Abraham and K. Padmanabhan, </author> <title> "Performace of the direct binary n-cube network for multiprocessors," </title> <journal> IEEE Trans. Computers, </journal> <year> 1987. </year>
Reference-contexts: E-cube vs. Random Link Selection Another interesting feature of the graphs is the difference in performance between the random one-choice and e-cube one-choice scheme in Figure 8 (a); the e-cube scheme results in faster packet delivery. This phenomenon has also been observed in <ref> [16, 17] </ref>. In e-cube routing, a packet entering a node in one direction tends to depart that node traveling in the same dimension. So, packets arriving on different incoming links are less likely to go through the same outgoing link, 17 thus decreasing the likelihood of contention.
Reference: [18] <author> G. Pfister and V. Norton, </author> <title> "`Hot-spot' contention and combining in multistage interconnection networks," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. C-34, no. 10, </volume> <pages> pp. 943-948, </pages> <month> October </month> <year> 1985. </year>
Reference-contexts: The more flexible routing schemes allow packets to route around heavily-loaded links. The diag scheme is particularly useful here, since it maximally allows two routing choices, even as the packet gets close to the hot node. Hot-spot contention has been studied extensively for shared-memory systems <ref> [18] </ref>, but the impact of non-uniform communication in message-passing environments is just beginning to receive attention [19, 20].
Reference: [19] <author> S. Dandamudi and D. Eager, </author> <title> "Hot-spot contention in binary hypercube networks," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. 41, no. 2, </volume> <pages> pp. 239-244, </pages> <month> February </month> <year> 1992. </year> <month> 21 </month>
Reference-contexts: The diag scheme is particularly useful here, since it maximally allows two routing choices, even as the packet gets close to the hot node. Hot-spot contention has been studied extensively for shared-memory systems [18], but the impact of non-uniform communication in message-passing environments is just beginning to receive attention <ref> [19, 20] </ref>. These "hot spot" issues warrant further investigation. 18 (a) One-choice scheme (b) One-choice with alternate scheme (c) Diag scheme (d) All three schemes (simulation only) 19 Also, to improve system performance, alternate links can be considered even after a packet has been buffered.
Reference: [20] <author> W. J. Dally, </author> <title> "Performance analysis of k-ary n-cube interconnection networks," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. 39, no. 6, </volume> <pages> pp. 775-785, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: The diag scheme is particularly useful here, since it maximally allows two routing choices, even as the packet gets close to the hot node. Hot-spot contention has been studied extensively for shared-memory systems [18], but the impact of non-uniform communication in message-passing environments is just beginning to receive attention <ref> [19, 20] </ref>. These "hot spot" issues warrant further investigation. 18 (a) One-choice scheme (b) One-choice with alternate scheme (c) Diag scheme (d) All three schemes (simulation only) 19 Also, to improve system performance, alternate links can be considered even after a packet has been buffered.
References-found: 20

