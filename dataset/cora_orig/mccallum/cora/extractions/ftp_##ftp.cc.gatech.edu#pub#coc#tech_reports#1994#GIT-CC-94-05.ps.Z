URL: ftp://ftp.cc.gatech.edu/pub/coc/tech_reports/1994/GIT-CC-94-05.ps.Z
Refering-URL: http://www.cs.gatech.edu/tech_reports/index.94.html
Root-URL: 
Email: e-mail rimli@cc.gatech.edu  
Title: A Lower Bound for Noncommutative Monotone Arithmetic Circuits (Extended Abstract)  
Author: Rimli Sengupta 
Note: This work was supported by NSF grant CCR-9200878.  
Date: November, 1993  
Address: Atlanta, GA 30332-0280  Atlanta, Georgia 30332-0280  
Affiliation: College of Computing Georgia Institute of Technology  College of Computing Georgia Institute of Technology  
Pubnum: GIT-ICS-94/05  
Abstract: We consider arithmetic circuits over the semiring ( fl ; min; concat) and show that such circuits require super-polynomial size to compute the lexicographically minimum perfect matching of a bipartite graph. By defining monotone analogues of optimization classes such as OptP, OptL and OptSAC 1 using the monotone analogues of their arithmetic circuit characterizations [13, 1], our lower bound implies that this problem is not in monotone OptSAC 1 . But we show that this problem is in monotone OptP, leading to a separation between these two classes. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Allender and J. Jiao, </author> <title> Depth reduction for non-commutative arithmetic circuits, </title> <booktitle> Proc. 25th annual ACM Symposium on Theory of Computing, </booktitle> <year> 1993, </year> <pages> 515-522. </pages>
Reference-contexts: By defining monotone analogues of optimization classes such as OptP, OptL and OptSAC 1 using the monotone analogues of their arithmetic circuit characterizations <ref> [13, 1] </ref>, our lower bound implies that this problem is not in monotone OptSAC 1 . But we show that this problem is in monotone OptP, leading to a separation between these two classes. <p> Subsequently, Alvarez and Jenner [2] studied OptL, the class defined analogously for a logspace bounded non-deterministic transducer. The corresponding class for logspace, polynomial time non-deterministic auxilliary pushdown automata was called OptSAC 1 and studied by Vinay in [13]. In <ref> [1] </ref>, Allender and Jiao observe that using the techniques developed in [2, 12], OptL (OptP) can be characterized as all those functions computable within polynomial size (depth, resp.), by uniform families of arithmetic circuits, in which each concat gate has at most one non-leaf input. <p> The circuit families we consider are uniform with respect to U D -uniformity, defined by Ruzzo [10]. That is, the direct connection language of an arithmetic circuit is recognizable by a deterministic Turing machine within time logarithmic in the size of the circuit. As was observed in <ref> [1] </ref>, the techniques in [12] can be used to prove the following characterizations: Proposition 2.1 OptL (OptP) is the class of function families ff n j n 1g, computable by uniform families of skew non-monotone arithmetic circuits fC n j n 1g over MAX or MIN, such that for all n <p> A circuit characterization of OptSAC 1 was given in <ref> [1] </ref>, also using the techniques of [12].
Reference: [2] <author> A. Alvarez and B. Jenner, </author> <title> A very hard logspace counting class, </title> <booktitle> Proc. 5th annual IEEE Conference on Structure in Complexity Theory, </booktitle> <year> 1990, </year> <pages> 154-168. </pages>
Reference-contexts: Krentel [5] introduced OptP to be the class of functions f , such that f (x) is the lexicographically optimum amongst all the strings produced along computation paths of a non-deterministic polynomial time transducer, on input x. Subsequently, Alvarez and Jenner <ref> [2] </ref> studied OptL, the class defined analogously for a logspace bounded non-deterministic transducer. The corresponding class for logspace, polynomial time non-deterministic auxilliary pushdown automata was called OptSAC 1 and studied by Vinay in [13]. <p> The corresponding class for logspace, polynomial time non-deterministic auxilliary pushdown automata was called OptSAC 1 and studied by Vinay in [13]. In [1], Allender and Jiao observe that using the techniques developed in <ref> [2, 12] </ref>, OptL (OptP) can be characterized as all those functions computable within polynomial size (depth, resp.), by uniform families of arithmetic circuits, in which each concat gate has at most one non-leaf input.
Reference: [3] <author> R. Greenlaw, </author> <title> Ordered vertex removal and subgraph problems, </title> <journal> JCSS, </journal> <month> 39-3 </month> <year> (1989), </year> <pages> 323-341. </pages>
Reference-contexts: Similarly, lexicograph 1 ically maximum versions of monotone Boolean functions are computable naturally with circuits over ( fl ; max; concat). * Lexicographically optimum versions of natural problems have attracted significant attention in the past <ref> [5, 6, 3, 7, 11] </ref>. Our lower bound helps determine the circuit complexity of one such problem. 2 Preliminaries A semiring is an algebra with two operations + and fi, satisfying the usual ring axioms, but not necessarily having additive inverses.
Reference: [4] <author> M. Grigni and M. Sipser, </author> <title> Monotone separation of Logspace from NC 1 , Proc. </title> <booktitle> 6th annual IEEE Conference on Structure in Complexity Theory, </booktitle> <year> 1991, </year> <pages> 294-298. </pages>
Reference-contexts: lower bound for computing the determinant in a non-commutative ring. * There is considerable interest in studying monotone analogues of complexity classes due to the success in obtaining separations between these classes, such as, the separation of monotone P from monotone NP [9] and monotone L from monotone NC 1 <ref> [4] </ref>. Our separation of mOptSAC 1 from mOptP has a similar flavor. We note that many of these monotone classes may not have natural Turing machine analogues. * We provide a natural circuit setting for studying lexicographically optimum versions of monotone Boolean functions.
Reference: [5] <author> M. Krentel, </author> <title> The complexity of optimization problems, </title> <journal> JCSS, </journal> <volume> 36 (1988), </volume> <pages> 490-509. </pages>
Reference-contexts: But we show that this problem is in monotone OptP, leading to a separation between these two classes. Krentel <ref> [5] </ref> introduced OptP to be the class of functions f , such that f (x) is the lexicographically optimum amongst all the strings produced along computation paths of a non-deterministic polynomial time transducer, on input x. <p> Similarly, lexicograph 1 ically maximum versions of monotone Boolean functions are computable naturally with circuits over ( fl ; max; concat). * Lexicographically optimum versions of natural problems have attracted significant attention in the past <ref> [5, 6, 3, 7, 11] </ref>. Our lower bound helps determine the circuit complexity of one such problem. 2 Preliminaries A semiring is an algebra with two operations + and fi, satisfying the usual ring axioms, but not necessarily having additive inverses. <p> It seems clear that there are functions that a monotone arithmetic circuit cannot compute, for instance, the function that computes the lexicographically minimum satisfying assignment of an input CNF formula <ref> [5] </ref>. But even in the context of computing only the lexicographically optimum versions of monotone Boolean functions, it is meaningful to ask 4 whether non-monotone circuits can perform the computation within less resources.
Reference: [6] <author> S. Miyano, </author> <title> p 2 -complete lexicographically first maximal subgraph problems, </title> <booktitle> Mathematical Foundations of Computer Science, LNCS (1988), </booktitle> <pages> 454-462. </pages>
Reference-contexts: Similarly, lexicograph 1 ically maximum versions of monotone Boolean functions are computable naturally with circuits over ( fl ; max; concat). * Lexicographically optimum versions of natural problems have attracted significant attention in the past <ref> [5, 6, 3, 7, 11] </ref>. Our lower bound helps determine the circuit complexity of one such problem. 2 Preliminaries A semiring is an algebra with two operations + and fi, satisfying the usual ring axioms, but not necessarily having additive inverses.
Reference: [7] <author> S. Miyano, </author> <title> The lexicographically first maximal subgraph problems: P-completeness and NC algorithms, </title> <journal> Math. Systems Theory, </journal> <volume> 22 (1989), </volume> <pages> 47-73. </pages>
Reference-contexts: Similarly, lexicograph 1 ically maximum versions of monotone Boolean functions are computable naturally with circuits over ( fl ; max; concat). * Lexicographically optimum versions of natural problems have attracted significant attention in the past <ref> [5, 6, 3, 7, 11] </ref>. Our lower bound helps determine the circuit complexity of one such problem. 2 Preliminaries A semiring is an algebra with two operations + and fi, satisfying the usual ring axioms, but not necessarily having additive inverses.
Reference: [8] <author> N. Nisan, </author> <title> Lower bounds for non-commutative computation, </title> <booktitle> Proc. 23rd annual ACM Symposium on Theory of Computing, </booktitle> <year> 1991, </year> <pages> 410-418. </pages>
Reference-contexts: The following are some of the interesting aspects of the results in this paper : * To our knowledge, this is the first non-trivial circuit size lower bound for computation in a non-commutative semiring. In <ref> [8] </ref>, Nisan proved an exponential formula size lower bound, or equivalently, a linear depth lower bound for computing the determinant in a non-commutative ring. * There is considerable interest in studying monotone analogues of complexity classes due to the success in obtaining separations between these classes, such as, the separation of
Reference: [9] <author> A. A. Razborov, </author> <title> A lower bound on the monotone network complexity of the logical permanent, </title> <journal> Mathematischi Zametki, </journal> <volume> 37 (1985), </volume> <pages> pp. 887-900. </pages>
Reference-contexts: Our main result is that a natural function, namely lexicographically minimum bipartite perfect matching, is not in mOptSAC 1 , but is in mOptP. We show this by proving a super-polynomial size lower bound for monotone arithmetic circuits that compute this function. Our result uses Razborov's <ref> [9] </ref> lower bound for monotone Boolean circuits that decide whether a bipartite graph has a perfect matching. <p> size lower bound, or equivalently, a linear depth lower bound for computing the determinant in a non-commutative ring. * There is considerable interest in studying monotone analogues of complexity classes due to the success in obtaining separations between these classes, such as, the separation of monotone P from monotone NP <ref> [9] </ref> and monotone L from monotone NC 1 [4]. Our separation of mOptSAC 1 from mOptP has a similar flavor. <p> Proof: Suppose there is a monotone arithmetic circuit C m that computes LMBPM m within size s = o (m logm ). Then, by the theorem above, there exists a monotone Boolean circuit B m that computes BP M m within size s. But by <ref> [9] </ref>, B m must have size (m logm ), giving the desired contradiction. 2 The above corollary implies that LMBPM does not belong to the class defined by polynomial size monotone arithmetic circuits. Therefore, LMBPM 62 mOptSAC 1 . However, we show that it does belong to mOptP.
Reference: [10] <author> W. L. Ruzzo, </author> <title> On uniform circuit complexity, </title> <journal> JCSS, </journal> <volume> 22 (1981), </volume> <pages> 365-383. </pages>
Reference-contexts: The circuit families we consider are uniform with respect to U D -uniformity, defined by Ruzzo <ref> [10] </ref>. That is, the direct connection language of an arithmetic circuit is recognizable by a deterministic Turing machine within time logarithmic in the size of the circuit.
Reference: [11] <author> S. </author> <title> Toda, The complexity of finding medians, </title> <booktitle> Proc. 30th annual IEEE Symposium on Foundation of Computer Science, </booktitle> <year> 1990, </year> <pages> 778-787. </pages>
Reference-contexts: Similarly, lexicograph 1 ically maximum versions of monotone Boolean functions are computable naturally with circuits over ( fl ; max; concat). * Lexicographically optimum versions of natural problems have attracted significant attention in the past <ref> [5, 6, 3, 7, 11] </ref>. Our lower bound helps determine the circuit complexity of one such problem. 2 Preliminaries A semiring is an algebra with two operations + and fi, satisfying the usual ring axioms, but not necessarily having additive inverses.
Reference: [12] <author> H. Venkateswaran, </author> <title> Circuit definitions of non-deterministic complexity classes, </title> <journal> SIAM J. Comput. </journal> <volume> 21 (1992), </volume> <pages> 655-670. </pages>
Reference-contexts: The corresponding class for logspace, polynomial time non-deterministic auxilliary pushdown automata was called OptSAC 1 and studied by Vinay in [13]. In [1], Allender and Jiao observe that using the techniques developed in <ref> [2, 12] </ref>, OptL (OptP) can be characterized as all those functions computable within polynomial size (depth, resp.), by uniform families of arithmetic circuits, in which each concat gate has at most one non-leaf input. <p> That is, the direct connection language of an arithmetic circuit is recognizable by a deterministic Turing machine within time logarithmic in the size of the circuit. As was observed in [1], the techniques in <ref> [12] </ref> can be used to prove the following characterizations: Proposition 2.1 OptL (OptP) is the class of function families ff n j n 1g, computable by uniform families of skew non-monotone arithmetic circuits fC n j n 1g over MAX or MIN, such that for all n 1, C n computes <p> A circuit characterization of OptSAC 1 was given in [1], also using the techniques of <ref> [12] </ref>. <p> Finally, we note that using an approach very similar to the one in this paper, we can obtain a separation between the monotone analogues of the counting classes ]LOGCFL and ]P. Such classes are defined using arithmetic circuits over (+; fi), with the inputs being 0 or 1 <ref> [13, 12] </ref>. Acknowledgements The author would like to thank Eric Allender for clarifying several points and H. Venkateswaran for numerous discussions that led to this paper.
Reference: [13] <author> V. Vinay, </author> <title> Counting auxilliary pushdown automata and semi-unbounded arithmetic circuits, </title> <booktitle> Proc. 6th annual IEEE Conference on Structure in Complexity Theory, </booktitle> <year> 1991, </year> <pages> 270-284. 5 </pages>
Reference-contexts: By defining monotone analogues of optimization classes such as OptP, OptL and OptSAC 1 using the monotone analogues of their arithmetic circuit characterizations <ref> [13, 1] </ref>, our lower bound implies that this problem is not in monotone OptSAC 1 . But we show that this problem is in monotone OptP, leading to a separation between these two classes. <p> Subsequently, Alvarez and Jenner [2] studied OptL, the class defined analogously for a logspace bounded non-deterministic transducer. The corresponding class for logspace, polynomial time non-deterministic auxilliary pushdown automata was called OptSAC 1 and studied by Vinay in <ref> [13] </ref>. In [1], Allender and Jiao observe that using the techniques developed in [2, 12], OptL (OptP) can be characterized as all those functions computable within polynomial size (depth, resp.), by uniform families of arithmetic circuits, in which each concat gate has at most one non-leaf input. <p> Finally, we note that using an approach very similar to the one in this paper, we can obtain a separation between the monotone analogues of the counting classes ]LOGCFL and ]P. Such classes are defined using arithmetic circuits over (+; fi), with the inputs being 0 or 1 <ref> [13, 12] </ref>. Acknowledgements The author would like to thank Eric Allender for clarifying several points and H. Venkateswaran for numerous discussions that led to this paper.
References-found: 13

