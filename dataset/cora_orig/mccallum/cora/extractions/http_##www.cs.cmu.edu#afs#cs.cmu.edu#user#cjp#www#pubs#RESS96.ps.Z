URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/user/cjp/www/pubs/RESS96.ps.Z
Refering-URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/user/cjp/www/pubs/pubs.html
Root-URL: 
Title: Fault Tolerant Task Execution Through Global Trajectory Planning  Fault Tolerant Task Execution through Global Trajectory Planning  
Author: Christiaan J.J. Paredis and Pradeep K. Khosla, Christiaan J. J. Paredis Pradeep K. Khosla 
Address: Pittsburgh, Pennsylvania 15213.  
Affiliation: Department of Electrical and Computer Engineering and The Robotics Institute, Carnegie Mellon University,  
Date: December 1996.  
Note: to appear in Reliability Engineering and System Safety,  
Abstract: Whether a task can be completed after a failure of one of the degrees-of-freedom of a redundant manipulator depends on the joint angle at which the failure takes place. It is possible to achieve fault tolerance by globally planning a trajectory that avoids unfavorable joint positions before a failure occurs. In this article, we present a trajectory planning algorithm that guarantees fault tolerance while simultaneously satisfying joint limit and obstacle avoidance requirements. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. W. Burdick, </author> <title> Kinematic Analysis and Design of Redundant Robot Manipulators, </title> <institution> Stanford Computer Science Report no. STAN-CS-88-1207, </institution> <year> 1988. </year>
Reference-contexts: This preimage is a set of -dimensional manifolds, 3 where is the degree-of redundancy of the manipulator. 3. An exception is the preimage of a critical value, which is not a manifold but a bouquet of tori <ref> [1] </ref>. q J x I J J ( )F += q t j t * , ,( ) S p f q ( )= p S p ( ) q T n f q ( ) p= -= f Christiaan J.J. Paredis and Pradeep K. <p> Unfortunately, we cannot demonstrate this graphically as we did for the previous example. Because the topology of the preimage changes at the points where the path crosses the critical value manifolds of the manipulator <ref> [1] </ref>, the preimage of the path cannot be unfolded into a 2-dimensional graph such as Figure 8. 7 Comparison In this section, we compare our algorithm for global fault tolerant trajectory planning with the approaches for fault tolerant task execution described in [6], [7], and [11].
Reference: [2] <author> G. H. Golub and C. F. Van Loan, </author> <title> Matrix Computations (second edition), </title> <publisher> Baltimore: The Johns Hopkins University Press, </publisher> <year> 1989. </year>
Reference-contexts: A drawback of the method is that it requires the computation of the gradient of the kfm, which in turn requires the computation of the full singular value decomposition of ; the computational complexity for the singular value decomposition of an matrix is approximately <ref> [2] </ref> . (11) Although this is quite computationally intensive for an on-line algorithm, it does not suffer from exponential complexity in the degree-of-redundancy, , so that this method could be used to achieve local fault tolerance even in highly redundant manipulators.
Reference: [3] <author> L. Kelmar and P. K. Khosla, </author> <title> Automatic Generation of Forward and Inverse Kinematics for a Reconfigurable Modular Manipulator System, </title> <journal> Journal of Robotic Systems, </journal> <volume> Vol. 7, No. 4, </volume> <pages> pp. 599619, </pages> <year> 1990. </year>
Reference-contexts: Paredis and Pradeep K. Khosla, Fault Tolerant Task Execution Through Global Trajectory Planning to appear in Reliability Engineering and System Safety, December 1996. to-VME-adaptor. We use a damped least-squares kinematic controller with null-space optimization: , (8) where is the singularity robust Jacobian inverse <ref> [3] </ref>, is the desired Cartesian path, and is the fault tolerant trajectory. The null-space optimization component of the controller ensures that the manipulator follows the desired fault tolerant joint space trajectory closely before a failure occurs, as is shown in Figure 12.
Reference: [4] <author> J.-O. Kim and P. K. Khosla, </author> <title> Dexterity Measures for Design and Control of Manipulators, </title> <booktitle> in Proceedings of the IEEE/RSJ International Workshop on Intelligent Robots and Systems (IROS91), </booktitle> <pages> pp. 758763, </pages> <address> Osaka, Japan, </address> <month> November </month> <year> 1991. </year>
Reference-contexts: The primary requirement is to follow the path . In the problem definition, we included joint limits and obstacles as secondary requirements, but one can include any other kinematic requirement that only depends on the current posture. For instance, all the dexterity measures enumerated in <ref> [4] </ref> depend only on the current joint position and could thus be included as secondary requirements. We call the set of postures that satisfy all the secondary task requirements the set .
Reference: [5] <author> S. Kotosaka et al., </author> <title> Fault Tolerance of a Functionally Adaptive and Robust Manipulator, </title> <booktitle> in Proceedings of the 1993 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS93), </booktitle> <pages> pp. 294300, </pages> <address> Yokohama, Japan, </address> <month> July 2630, </month> <year> 1993. </year>
Reference-contexts: This trend has spawned a research effort in fault tolerant robotics, covering topics ranging from fault detection and identification [16] to design [11, 13], control <ref> [5, 15] </ref>, and redundancy resolution [6] of fault tolerant manipulators. Fault tolerance is the ability of a system to continue normal operation despite the presence of failures in subsystems. This can be achieved by adding redundancy at different levels of the system. <p> The redundancy provisions needed for fault tolerance can be incorporated only at the price of increased complexity. This drawback can be overcome by a modular and structured design philosophy, as is advocated in <ref> [5, 10, 14] </ref>. Modularity in hardware and software has the advantage of facilitating testing during the design phase and therefore reducing the chances for unanticipated faults. Modules also constitute natural boundaries to which faults can be confined.
Reference: [6] <author> C. L. Lewis and A. A. Maciejewski, </author> <title> Dexterity Optimization of Kinematically Redundant Manipulators in the Presence of Joint Failures, </title> <journal> Computers and Electrical Engineering, </journal> <volume> Vol. 20, No. 3, </volume> <pages> pp. 273288, </pages> <year> 1994. </year>
Reference-contexts: This trend has spawned a research effort in fault tolerant robotics, covering topics ranging from fault detection and identification [16] to design [11, 13], control [5, 15], and redundancy resolution <ref> [6] </ref> of fault tolerant manipulators. Fault tolerance is the ability of a system to continue normal operation despite the presence of failures in subsystems. This can be achieved by adding redundancy at different levels of the system. <p> The basic idea that we exploit in this article is to achieve fault tolerance by avoiding unfavorable joint positions before failure. This idea was first proposed in <ref> [6] </ref> where the null-space component of a redundant manipulator was used to locally minimize the kinematic fault tolerance measure (kfm) 1 . The authors showed that, for a particular test path, a manipulator with kfm minimization is more likely to be fault tolerant than a 1. <p> crosses the critical value manifolds of the manipulator [1], the preimage of the path cannot be unfolded into a 2-dimensional graph such as Figure 8. 7 Comparison In this section, we compare our algorithm for global fault tolerant trajectory planning with the approaches for fault tolerant task execution described in <ref> [6] </ref>, [7], and [11]. In [6], the authors propose a local redundancy resolution algorithm which maximizes the kinematic fault tolerance measure, kfm 5 . <p> of the manipulator [1], the preimage of the path cannot be unfolded into a 2-dimensional graph such as Figure 8. 7 Comparison In this section, we compare our algorithm for global fault tolerant trajectory planning with the approaches for fault tolerant task execution described in <ref> [6] </ref>, [7], and [11]. In [6], the authors propose a local redundancy resolution algorithm which maximizes the kinematic fault tolerance measure, kfm 5 . <p> On the contrary, in our global trajectory planning algorithm, is not an acceptable posture because a failure of joint one would result in the redundancy resolution algorithm getting stuck at a singularity. Another disadvantage of the method described in [7] is that, just like in <ref> [6] </ref>, secondary requirements are not taken into account. Also, the algorithm requires the computation of the preimage manifolds which is, as we have shown before, exponential in the degree-of-redundancy, ; this limits the usefulness of the algorithm to manipulators with or .
Reference: [7] <author> C. L. Lewis and A. A. Maciejewski, </author> <title> An Example of Failure Tolerant Operation of a Kinematically Redundant Manipulator, </title> <booktitle> in Proceedings of the 1994 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pp 13801387, </pages> <address> San Diego, California, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: Christiaan J.J. Paredis and Pradeep K. Khosla, Fault Tolerant Task Execution Through Global Trajectory Planning to appear in Reliability Engineering and System Safety, December 1996. manipulator with traditional pseudoinverse control. However, due to the local nature of the kfm, fault tolerance could not be guaranteed globally <ref> [7] </ref>. In this article, we present a trajectory planning algorithm that guarantees fault tolerance on a global scale, while avoiding any violations of secondary kinematic requirements such as joint limits and obstacles. <p> To achieve this global result, we have to consider the topology of the self-motion manifolds, as has been previously suggested in <ref> [7, 8] </ref>. The redundancy provisions needed for fault tolerance can be incorporated only at the price of increased complexity. This drawback can be overcome by a modular and structured design philosophy, as is advocated in [5, 10, 14]. <p> the critical value manifolds of the manipulator [1], the preimage of the path cannot be unfolded into a 2-dimensional graph such as Figure 8. 7 Comparison In this section, we compare our algorithm for global fault tolerant trajectory planning with the approaches for fault tolerant task execution described in [6], <ref> [7] </ref>, and [11]. In [6], the authors propose a local redundancy resolution algorithm which maximizes the kinematic fault tolerance measure, kfm 5 . <p> In <ref> [7] </ref>, Lewis and Maciejewski acknowledge the local nature of the kfm approach and propose a global method for fault tolerant task execution. For every critical task point (a point that needs to be reachable after joint failure), a bounding box of the preimage manifold is computed. <p> On the contrary, in our global trajectory planning algorithm, is not an acceptable posture because a failure of joint one would result in the redundancy resolution algorithm getting stuck at a singularity. Another disadvantage of the method described in <ref> [7] </ref> is that, just like in [6], secondary requirements are not taken into account. Also, the algorithm requires the computation of the preimage manifolds which is, as we have shown before, exponential in the degree-of-redundancy, ; this limits the usefulness of the algorithm to manipulators with or .
Reference: [8] <author> C. L. Lck and S. Lee, </author> <title> Global Path Planning of Redundant Manipulators Based on Self Christiaan J.J. </title> <editor> Paredis and Pradeep K. Khosla, </editor> <title> Fault Tolerant Task Execution Through Global Trajectory Planning to appear in Reliability Engineering and System Safety, </title> <month> December </month> <year> 1996. </year> <title> Motion Topology, </title> <booktitle> in Proceedings of the 1994 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pp. 372377, </pages> <address> San Diego, California, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: To achieve this global result, we have to consider the topology of the self-motion manifolds, as has been previously suggested in <ref> [7, 8] </ref>. The redundancy provisions needed for fault tolerance can be incorporated only at the price of increased complexity. This drawback can be overcome by a modular and structured design philosophy, as is advocated in [5, 10, 14].
Reference: [9] <author> D. N. Nenchev, </author> <title> Redundancy Resolution through Local Optimization: A Review, </title> <journal> Journal of Robotic Systems, </journal> <volume> Vol. 6, No. 6, </volume> <pages> pp. 769798, </pages> <year> 1989. </year>
Reference-contexts: This assumption is satisfied for commonly used Jacobian-based algorithms of the form: . (1) Readers unfamiliar with this kind of redundancy resolution algorithms are referred to <ref> [9] </ref> for a detailed overview; an example is also given in Section 6 of this article. Because the choice of the redundancy resolution algorithm fully determines the alternate trajectories, it also inuences the solution of the trajectory planning problem.
Reference: [10] <author> C. J. J. Paredis et al., </author> <title> A Rapidly Deployable Fault Tolerant Manipulator System, </title> <booktitle> in Proceedings of the Workshop on Some Critical Issues in Robotics, </booktitle> <address> Singapore, </address> <month> 23 October, </month> <year> 1995. </year>
Reference-contexts: The redundancy provisions needed for fault tolerance can be incorporated only at the price of increased complexity. This drawback can be overcome by a modular and structured design philosophy, as is advocated in <ref> [5, 10, 14] </ref>. Modularity in hardware and software has the advantage of facilitating testing during the design phase and therefore reducing the chances for unanticipated faults. Modules also constitute natural boundaries to which faults can be confined. <p> Such a modular design philosophy is embodied in the Reconfigurable Modular Manipulator System (RMMS) developed in the Advanced Manipulators Laboratory at Carnegie Mellon University <ref> [10] </ref>. The RMMS utilizes a stock of interchangeable link modules of different lengths and shapes, and joint modules of various sizes and performance specifications. By combining these general purpose modules, a wide range of manipulator configurations can be assembled.
Reference: [11] <author> C. J. J. Paredis and P. K. Khosla, </author> <title> Mapping Tasks into Fault Tolerant Manipulators, </title> <booktitle> in Proceedings of the 1994 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pp. 696703, </pages> <address> San Diego, California, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: 1 Introduction Reliability is becoming an essential attribute of robot manipulators in a growing range of applications, such as space missions, nuclear waste retrieval, and medical robotics. This trend has spawned a research effort in fault tolerant robotics, covering topics ranging from fault detection and identification [16] to design <ref> [11, 13] </ref>, control [5, 15], and redundancy resolution [6] of fault tolerant manipulators. Fault tolerance is the ability of a system to continue normal operation despite the presence of failures in subsystems. This can be achieved by adding redundancy at different levels of the system. <p> In this article, we propose a method to achieve fault tolerance using redundant DOFs (Level 3). We define a manipulator to be 1-fault tolerant if it can complete its task even if one of its joints fails and is immobilized <ref> [11] </ref>. This definition is based on the following scenario: A fault detection and identification algorithm monitors the proper functioning of each degree-of-freedom (DOF) of a redundant manipulator. <p> Khosla, Fault Tolerant Task Execution Through Global Trajectory Planning to appear in Reliability Engineering and System Safety, December 1996. Because of the exponential dependency on , the algorithm is only practical for or . Fortunately, two degrees-of-redundancy are sufficient to achieve fault tolerance in most practical applications <ref> [11] </ref>. 5 Illustrative example In this section, we illustrate the use of the fault tolerant trajectory planning algorithm with an example of a 3-DOF planar manipulator. This simple example enables us to describe graphically how a fault tolerant trajectory is selected. <p> value manifolds of the manipulator [1], the preimage of the path cannot be unfolded into a 2-dimensional graph such as Figure 8. 7 Comparison In this section, we compare our algorithm for global fault tolerant trajectory planning with the approaches for fault tolerant task execution described in [6], [7], and <ref> [11] </ref>. In [6], the authors propose a local redundancy resolution algorithm which maximizes the kinematic fault tolerance measure, kfm 5 . <p> Also, the algorithm requires the computation of the preimage manifolds which is, as we have shown before, exponential in the degree-of-redundancy, ; this limits the usefulness of the algorithm to manipulators with or . A third approach to fault tolerant task execution is described in <ref> [11] </ref>. This approach is different because it does not make any assumptions about the redundancy resolution algorithm used at run-time. Instead, fault tolerance is achieved at the design stage.
Reference: [12] <author> C. J. J. Paredis and P. K. Khosla, </author> <title> Design of Modular Fault Tolerant Manipulators, to appear in The Algorithmic Foundations of Robotics, </title> <editor> eds. K. Goldberg et al., </editor> <address> Boston, Massachusetts: </address> <publisher> A.K. Peters, </publisher> <year> 1995. </year>
Reference-contexts: Whether a task can be completed after a joint failure depends not only on the structure of the manipulator <ref> [12] </ref>, but also on the specific joint angle at which the failure occurs. In general, failures at a fully extended or folded back position of a joint are most detrimental to the remaining capabilities of the manipulator.
Reference: [13] <author> D. Sreevijayan, </author> <title> On the Design of Fault-Tolerant Robotic Manipulator Systems, M.S. </title> <type> Thesis, </type> <institution> Mechanical Engineering Department, The University of Texas at Austin, </institution> <month> June </month> <year> 1992. </year>
Reference-contexts: 1 Introduction Reliability is becoming an essential attribute of robot manipulators in a growing range of applications, such as space missions, nuclear waste retrieval, and medical robotics. This trend has spawned a research effort in fault tolerant robotics, covering topics ranging from fault detection and identification [16] to design <ref> [11, 13] </ref>, control [5, 15], and redundancy resolution [6] of fault tolerant manipulators. Fault tolerance is the ability of a system to continue normal operation despite the presence of failures in subsystems. This can be achieved by adding redundancy at different levels of the system. <p> Fault tolerance is the ability of a system to continue normal operation despite the presence of failures in subsystems. This can be achieved by adding redundancy at different levels of the system. Sreevijayan <ref> [13] </ref> proposed a four-level subsumptive architecture for actuation redundancy in fault tolerant robot manipulators: Level 1: Dual actuatorsextra actuators per joint, Level 2: Parallel structuresextra joints per DOF, Christiaan J.J. Paredis and Pradeep K.
Reference: [14] <author> D. Tesar and M. S. Butler, </author> <title> A Generalized Modular Architecture for Robot Structures, </title> <journal> Manufacturing Review, </journal> <volume> Vol 2, No. 2, </volume> <pages> pp. 91118, </pages> <year> 1989. </year>
Reference-contexts: The redundancy provisions needed for fault tolerance can be incorporated only at the price of increased complexity. This drawback can be overcome by a modular and structured design philosophy, as is advocated in <ref> [5, 10, 14] </ref>. Modularity in hardware and software has the advantage of facilitating testing during the design phase and therefore reducing the chances for unanticipated faults. Modules also constitute natural boundaries to which faults can be confined.
Reference: [15] <author> Y. Ting, S. Tosunoglu, and D. Tesar, </author> <title> Control Algorithms for Fault-Tolerant Robots, </title> <booktitle> in Proceedings of the 1994 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pp. 910915, </pages> <address> San Diego, California, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: This trend has spawned a research effort in fault tolerant robotics, covering topics ranging from fault detection and identification [16] to design [11, 13], control <ref> [5, 15] </ref>, and redundancy resolution [6] of fault tolerant manipulators. Fault tolerance is the ability of a system to continue normal operation despite the presence of failures in subsystems. This can be achieved by adding redundancy at different levels of the system.
Reference: [16] <author> M. L. Visinsky, I. D. Walker, and J. R. Cavallaro, </author> <title> New Dynamic Model-Based Fault Christiaan J.J. </title> <editor> Paredis and Pradeep K. Khosla, </editor> <title> Fault Tolerant Task Execution Through Global Trajectory Planning to appear in Reliability Engineering and System Safety, </title> <month> December </month> <year> 1996. </year> <title> Detection Thresholds for Robot Manipulators, </title> <booktitle> in Proceedings of the 1994 IEEE International Conference on Robotics and Automation, </booktitle> <address> San Diego, California, </address> <pages> pp. 1388 1395, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: 1 Introduction Reliability is becoming an essential attribute of robot manipulators in a growing range of applications, such as space missions, nuclear waste retrieval, and medical robotics. This trend has spawned a research effort in fault tolerant robotics, covering topics ranging from fault detection and identification <ref> [16] </ref> to design [11, 13], control [5, 15], and redundancy resolution [6] of fault tolerant manipulators. Fault tolerance is the ability of a system to continue normal operation despite the presence of failures in subsystems. This can be achieved by adding redundancy at different levels of the system.
Reference: [17] <author> E. C. Wu, J. C. Hwang, and J. T. Chladek, </author> <title> Fault-Tolerant Joint Development for the Space Shuttle Remote Manipulator System: Analysis and Experiment, </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> Vol. 9, No. 5, </volume> <pages> pp. 675684, </pages> <year> 1995. </year>
Reference-contexts: Level 3: Redundant manipulatorsextra DOFs per manipulator arm, Level 4: Multiple armsextra arms per manipulator system. A system designed with redundancies at all four levels can possibly sustain multiple simultaneous faults. An example of a fault tolerant design for the space shuttle manipulator is described in <ref> [17] </ref>. Fault tolerance is here guaranteed by using a differential gear train with dual input actuators for every DOFan implementation of the first level of the four-level subsumptive architecture. In this article, we propose a method to achieve fault tolerance using redundant DOFs (Level 3).
References-found: 17

