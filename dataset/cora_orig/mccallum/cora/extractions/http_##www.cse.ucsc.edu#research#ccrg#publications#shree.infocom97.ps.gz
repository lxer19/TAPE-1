URL: http://www.cse.ucsc.edu/research/ccrg/publications/shree.infocom97.ps.gz
Refering-URL: http://www.cse.ucsc.edu/research/ccrg/publications.html
Root-URL: http://www.cse.ucsc.edu
Title: Loop-Free Internet Routing Using Hierarchical Routing Trees  
Author: Shree Murthy J.J. Garcia-Luna-Aceves 
Address: 2550 Garcia Avenue  Mountain View, CA 94043 Santa Cruz, CA 95064  
Affiliation: Sun Microsystems, Inc. Computer Engineering Department  University of California  
Abstract: We present a new hierarchical routing algorithm that combines the loop-free path-finding algorithm (LPA) with the area-based hierarchical routing scheme first proposed by McQuillan for distance-vector algorithms. The new algorithm, which we call the Hierarchical Information Path-based Routing (HIPR) algorithm, accommodates an arbitrary number of aggregation levels and can be viewed as a distributed version of Dijkstra's algorithm running over a hierarchical graph. HIPR is verified to be loop-free and correct. Simulations are used to show that HIPR is much more efficient than OSPF in terms of speed, communication and processing overhead required to converge to correct routing tables. HIPR constitutes the basis for future Internet routing protocols that are as simple as RIPv2, but with no looping and better performance than protocols based on link-states. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A.E. Baratz and J.M. Jaffe, </author> <title> "Establishing virtual circuits in large computer networks", </title> <booktitle> Proc. IEEE INFOCOM 83, </booktitle> <month> April </month> <year> 1983, </year> <pages> pp. 311-318 </pages>
Reference-contexts: There have been several subsequent proposals for hierarchical routing, which vary in the way in which the nodes are organized (addressing scheme) and the routing algorithms used <ref> [1] </ref>, [15], [4], [8], [16]. With very few exceptions [5], prior proposals for hierarchical routing have assumed variants of the Distributed Bellman-Ford (DBF) algorithm or topology-broadcast algorithms.
Reference: [2] <author> C. Cheng, R. Riley, S.P.R. Kumar and J.J. Garcia-Luna-Aceves, </author> <title> "A loop-free extended Bellman-Ford Routing Protocol without Bouncing Effect", </title> <booktitle> ACM SIGCOMM 89, </booktitle> <month> Sept. </month> <year> 1989, </year> <pages> pp. 224-236. </pages>
Reference-contexts: scheme for hierarchical routing used in OSPF [11], a network is divided into areas connected by a backbone. 1 This work was supported by the Defense Advanced Research Projects Agency (DARPA) under contract DAAB07-95-C-D157 2 This work was done at UC Santa Cruz A number of algorithms have been proposed <ref> [2] </ref>, [6], [13], [14] that eliminate the counting-to-infinity problem of DBF and eliminate loops altogether [3]. These algorithms are based on the maintenance and incremental exchange of shortest-path routing trees.
Reference: [3] <author> J.J. Garcia-Luna-Aceves and Shree Murthy, </author> <title> "A PathFinding Algorithm for Loop-Free Routing", </title> <journal> IEEE/ACM Trans. Networking, </journal> <month> Feb. </month> <year> 1997. </year>
Reference-contexts: by a backbone. 1 This work was supported by the Defense Advanced Research Projects Agency (DARPA) under contract DAAB07-95-C-D157 2 This work was done at UC Santa Cruz A number of algorithms have been proposed [2], [6], [13], [14] that eliminate the counting-to-infinity problem of DBF and eliminate loops altogether <ref> [3] </ref>. These algorithms are based on the maintenance and incremental exchange of shortest-path routing trees. These can be viewed as distributed implementation of Dijkstra's shortest path algorithm, where as link-state algorithms require a router to have a topology map over which it runs Dijkstra's algorithm. <p> These can be viewed as distributed implementation of Dijkstra's shortest path algorithm, where as link-state algorithms require a router to have a topology map over which it runs Dijkstra's algorithm. A few of these shortest-path-tree-based algorithms have been shown to outperform link-state algorithms <ref> [3] </ref>, [13]. However, because they rely on each router knowing the shortest path tree to every destination, they force a router to know more "host routes" (corresponding to individual routers) than would be necessary if DBF were used. <p> We call this algorithm the Hierarchical Information Path-based Routing (HIPR) algorithm. The main idea of HIPR is to provide a distributed implementation of Dijkstra's shortest path algorithm running over a hierarchical graph organized in areas according to McQuillan's scheme for hierarchical routing. The loop-free path-finding algorithm (LPA) <ref> [3] </ref> is extended for this purpose. HIPR, which implements a distributed version of Dijkstra's algorithm, is compared with OSPF, which is based on replicated implementation of Dijkstra's algorithm. <p> After initialization, router i sends updates containing the distance to itself to all its neighbors. 3.4 Distance Table Updating The procedures used in HIPR to update the entries of the routing tables are similar to the procedures used in LPA <ref> [3] </ref>. The key difference is that, a border node at level k supports hierarchical routing by making sure that no routing information regarding destinations in its own 1-area or any (k 1)-areas in its own k-area percolates to a neighbor border node in another k-area. <p> Because HIPR is the same as LPA within an area, the proof that HIPR is loop-free for case (a) follows from the proof that LPA is loop-free <ref> [3] </ref>. Because all areas in the network form a virtual heter archical network, and each area is viewed as a single router/destination from a local node, case (b) reduces to case (a). Therefore, the successor graph is loop-free for case (b) also. <p> This proves Theorem 1. 2 To prove that HIPR converges to correct routing table entries, we assume that after a finite time T c , no more resource changes (link-cost change or topology change) occur. We extrapolate the correctness properties of LPA <ref> [3] </ref> to prove that HIPR converges to correct routing tables. Theorem 2: HIPR is live. Proof: Consider the case when the network topology is stable. <p> Also, assume that destination j is reachable through every router. By the inductive proof for an heterarchical network <ref> [3] </ref>, the result is true for HIPR within an area. Each router maintains information about all areas and a routing table entry for a area is treated similar to an entry of a local router/destination. <p> This forms a virtual network where each node in the network is an area and this can be viewed as a heterarchical virtual network. The rest of the proof consists of applying a similar inductive proof as in <ref> [3] </ref> to this virtual network. 2 Theorem 4: A finite time after t, no new update messages are being transmitted or processed by routers in G, and all entries in distance and routing tables are correct.
Reference: [4] <author> J.J. Garcia-Luna-Aceves and N. Shacham, </author> <title> "Analysis of Routing strategies for packet radio networks", </title> <booktitle> Proc. IEEE INFOCOM 85, </booktitle> <month> March </month> <year> 1985, </year> <pages> pp. 292-302. </pages>
Reference-contexts: There have been several subsequent proposals for hierarchical routing, which vary in the way in which the nodes are organized (addressing scheme) and the routing algorithms used [1], [15], <ref> [4] </ref>, [8], [16]. With very few exceptions [5], prior proposals for hierarchical routing have assumed variants of the Distributed Bellman-Ford (DBF) algorithm or topology-broadcast algorithms.
Reference: [5] <author> J.J. Garcia-Luna-Aceves and William T. Zaumen, </author> <title> "Area-Based Loop-Free Internet Routing", </title> <booktitle> Proc. IEEE INFO-COM 94, </booktitle> <month> April </month> <year> 1994, </year> <pages> pp. 1000-1008. </pages>
Reference-contexts: There have been several subsequent proposals for hierarchical routing, which vary in the way in which the nodes are organized (addressing scheme) and the routing algorithms used [1], [15], [4], [8], [16]. With very few exceptions <ref> [5] </ref>, prior proposals for hierarchical routing have assumed variants of the Distributed Bellman-Ford (DBF) algorithm or topology-broadcast algorithms.
Reference: [6] <author> P.A. Humblet, </author> <title> "Another Adaptive Shortest-Path Algorithm", </title> <journal> IEEE Trans. Commun., </journal> <volume> Vol. 39, No. 6, </volume> <month> June </month> <year> 1991, </year> <pages> pp. 995-1003. </pages>
Reference-contexts: for hierarchical routing used in OSPF [11], a network is divided into areas connected by a backbone. 1 This work was supported by the Defense Advanced Research Projects Agency (DARPA) under contract DAAB07-95-C-D157 2 This work was done at UC Santa Cruz A number of algorithms have been proposed [2], <ref> [6] </ref>, [13], [14] that eliminate the counting-to-infinity problem of DBF and eliminate loops altogether [3]. These algorithms are based on the maintenance and incremental exchange of shortest-path routing trees.
Reference: [7] <author> F. Kamoun, </author> <title> "Design Considerations for Large Computer Communications Network", </title> <type> PhD Thesis, </type> <institution> University of California, </institution> <address> Los Angeles, </address> <year> 1976. </year>
Reference-contexts: Accordingly, aggregation of routing information becomes a necessity in any type of routing protocol. Hierarchical routing for data-gram computer networks was first proposed by Mc-Quillan [10]. According to this scheme (analyzed by Kamoun and Kleinrock <ref> [7] </ref>), the nodes in the network are organized into clusters or areas by grouping (clus tering) together the nodes which are close by. Each of these areas are single addressable entities from the point of view of higher level areas.
Reference: [8] <author> G.S. Lauer, </author> <title> "Hierarchical routing design for SURAN", </title> <booktitle> Proc. IEEE ICC 86, </booktitle> <month> June </month> <year> 1986, </year> <pages> pp. 93-102. </pages>
Reference-contexts: There have been several subsequent proposals for hierarchical routing, which vary in the way in which the nodes are organized (addressing scheme) and the routing algorithms used [1], [15], [4], <ref> [8] </ref>, [16]. With very few exceptions [5], prior proposals for hierarchical routing have assumed variants of the Distributed Bellman-Ford (DBF) algorithm or topology-broadcast algorithms.
Reference: [9] <author> G, Malkin, </author> <note> "RIP Version 2 Carrying Additional Information", RFC 1723, </note> <month> Nov. </month> <year> 1994. </year>
Reference-contexts: The simulation results clearly show that HIPR is far superior to OSPF in terms of number of steps, overhead traffic, and processing load required to update routing tables. HIPR constitutes the basis for new internet routing protocols that are as simple as RIPv2 <ref> [9] </ref> and is much more efficient than OSPF or any other routing protocol based on topology broadcast. 2.
Reference: [10] <author> J. McQuillan, </author> <title> "Adaptive Routing algorithms for distributed computer networks", Bolt Beranek and Newman, </title> <type> BBN Report 2831, </type> <year> 1974. </year>
Reference-contexts: In a flat routing architecture, the size of the routing tables grows linearly with the number of destinations in the network. Accordingly, aggregation of routing information becomes a necessity in any type of routing protocol. Hierarchical routing for data-gram computer networks was first proposed by Mc-Quillan <ref> [10] </ref>. According to this scheme (analyzed by Kamoun and Kleinrock [7]), the nodes in the network are organized into clusters or areas by grouping (clus tering) together the nodes which are close by. Each of these areas are single addressable entities from the point of view of higher level areas.
Reference: [11] <author> J. Moy, </author> <note> "OSPF version 2", RFC 1247, </note> <month> Aug. </month> <year> 1992. </year>
Reference-contexts: With very few exceptions [5], prior proposals for hierarchical routing have assumed variants of the Distributed Bellman-Ford (DBF) algorithm or topology-broadcast algorithms. In the backbone scheme for hierarchical routing used in OSPF <ref> [11] </ref>, a network is divided into areas connected by a backbone. 1 This work was supported by the Defense Advanced Research Projects Agency (DARPA) under contract DAAB07-95-C-D157 2 This work was done at UC Santa Cruz A number of algorithms have been proposed [2], [6], [13], [14] that eliminate the counting-to-infinity
Reference: [12] <author> Shree Murthy, </author> <title> "Routing in Packet-Switched Networks Using Path-Finding Algorithms", </title> <type> PhD Thesis, </type> <institution> University of California, Santa Cruz, </institution> <year> 1996. </year>
Reference-contexts: This is done by the path traversal on the predecessor entries reported by the router <ref> [12] </ref>. In the specification of HIPR, the successor to a destination j for any router is simply referred to as the successor of the router. Same reference applies to other information maintained by the router. Similarly, updates, queries and replies refer to destination j unless otherwise stated. <p> The simulation ensures that all packets at a given simulation time are processed before the new updates are generated. The discrete-event simulation language called Drama [18] was used in this work. Simulations were performed for both well-known and randomly generated topologies <ref> [12] </ref>; similar results were obtained in all cases. The topology for which we present simulation results has ten areas and each area has ten nodes in it. Each area has at most 3 border nodes and a border node connects two or more areas.
Reference: [13] <author> Shree Murthy and J.J. Garcia-Luna-Aceves, </author> <title> "A More Efficient Path-Finding Algorithm", </title> <booktitle> 28th Asilomar Conference, </booktitle> <month> Nov. </month> <year> 1994, </year> <pages> pp. 229-233. </pages>
Reference-contexts: hierarchical routing used in OSPF [11], a network is divided into areas connected by a backbone. 1 This work was supported by the Defense Advanced Research Projects Agency (DARPA) under contract DAAB07-95-C-D157 2 This work was done at UC Santa Cruz A number of algorithms have been proposed [2], [6], <ref> [13] </ref>, [14] that eliminate the counting-to-infinity problem of DBF and eliminate loops altogether [3]. These algorithms are based on the maintenance and incremental exchange of shortest-path routing trees. <p> These can be viewed as distributed implementation of Dijkstra's shortest path algorithm, where as link-state algorithms require a router to have a topology map over which it runs Dijkstra's algorithm. A few of these shortest-path-tree-based algorithms have been shown to outperform link-state algorithms [3], <ref> [13] </ref>. However, because they rely on each router knowing the shortest path tree to every destination, they force a router to know more "host routes" (corresponding to individual routers) than would be necessary if DBF were used.
Reference: [14] <author> B. Rajagopalan and M. Faiman, </author> <title> "A new responsive distributed shortest path routing algorithm", </title> <booktitle> ACM SIG-COMM 89, </booktitle> <month> Sept. </month> <year> 1989, </year> <pages> pp. 237-246. </pages>
Reference-contexts: routing used in OSPF [11], a network is divided into areas connected by a backbone. 1 This work was supported by the Defense Advanced Research Projects Agency (DARPA) under contract DAAB07-95-C-D157 2 This work was done at UC Santa Cruz A number of algorithms have been proposed [2], [6], [13], <ref> [14] </ref> that eliminate the counting-to-infinity problem of DBF and eliminate loops altogether [3]. These algorithms are based on the maintenance and incremental exchange of shortest-path routing trees.
Reference: [15] <author> C.V. Ramamoorthy and W. Tsai, </author> <title> "An adaptive hierarchical routing algorithm", </title> <booktitle> Proc. IEEE COMPSAC 83, </booktitle> <month> Nov. </month> <year> 1983, </year> <pages> pp. 93-104. </pages>
Reference-contexts: There have been several subsequent proposals for hierarchical routing, which vary in the way in which the nodes are organized (addressing scheme) and the routing algorithms used [1], <ref> [15] </ref>, [4], [8], [16]. With very few exceptions [5], prior proposals for hierarchical routing have assumed variants of the Distributed Bellman-Ford (DBF) algorithm or topology-broadcast algorithms.
Reference: [16] <author> J. Seeger and A. Khanna, </author> <title> "Reducing routing overhead in a growing DDN", </title> <booktitle> Proc. IEEE MILCOM 86, </booktitle> <month> Oct. </month> <year> 1986, </year> <pages> pp. </pages> <month> 15.3.1-15.3.13. </month>
Reference-contexts: There have been several subsequent proposals for hierarchical routing, which vary in the way in which the nodes are organized (addressing scheme) and the routing algorithms used [1], [15], [4], [8], <ref> [16] </ref>. With very few exceptions [5], prior proposals for hierarchical routing have assumed variants of the Distributed Bellman-Ford (DBF) algorithm or topology-broadcast algorithms.
Reference: [17] <author> B.M. Waxman, </author> <title> "Routing of multipoint connections", </title> <journal> IEEE J. Selected Areas in Commun., </journal> <volume> Vol. 6, No. 9, </volume> <year> 1988, </year> <pages> pp. 1617-1622. </pages>
Reference-contexts: The interconnection among areas is based on McQuillan's approach to hierarchical routing. To generate backbone-based areas, we generated a random graph for each subnet; the backbone is also a random graph interconnecting these subnets. The random graphs are generated using Waxman's model <ref> [17] </ref>. Our simulation network has 100 nodes and 124 links. To obtain the average figures, the simulation makes each link (router) in the network fail and recover, and count the steps and messages needed for each algorithm to converge.
Reference: [18] <author> W.T. Zaumen, </author> <title> "Simulations in Drama", Network Information System Center, </title> <booktitle> SRI International, </booktitle> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: If a link fails, the packets in transit are dropped. The redundant packets in the network are removed from the queue. The simulation ensures that all packets at a given simulation time are processed before the new updates are generated. The discrete-event simulation language called Drama <ref> [18] </ref> was used in this work. Simulations were performed for both well-known and randomly generated topologies [12]; similar results were obtained in all cases. The topology for which we present simulation results has ten areas and each area has ten nodes in it.
References-found: 18

