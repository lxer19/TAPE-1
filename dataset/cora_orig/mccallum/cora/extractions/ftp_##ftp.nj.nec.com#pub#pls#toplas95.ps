URL: ftp://ftp.nj.nec.com/pub/pls/toplas95.ps
Refering-URL: http://www.cnri.reston.va.us/home/koe/bib/mobile-abs.bib.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Higher-Order Distributed Objects  
Author: HENRY CEJTIN, SURESH JAGANNATHAN, and RICHARD KELSEY 
Keyword: Categories and Subject Descriptors: D.1.3 [Programming Techniques]: Concurrent Programming|distributed programming; D.3.2 [Programming Languages]: Language Classifications| applicative languages; extensible languages; D.3.3 [Programming Languages]: Language Constructs and Features|concurrent programming structures General Terms: Experimentation, Languages Additional Key Words and Phrases: Concurrency, continuations, higher-order languages, message-passing  
Affiliation: NEC Research Institute  
Abstract: We describe a distributed implementation of Scheme that permits efficient transmission of higher-order objects such as closures and continuations. The integration of distributed communication facilities within a higher-order programming language engenders a number of new abstractions and paradigms for distributed computing. Among these are user-specified load-balancing and migration policies for threads, incrementally linked distributed computations, and parameterized client-server applications. To our knowledge, this is the first distributed dialect of Scheme (or a related language) that addresses lightweight communication abstractions for higher-order objects. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Andrews, G. </author> <year> 1991. </year> <title> Concurrent Programming: </title> <booktitle> Principles and Practice. </booktitle> <address> Benjamin-Cummings, Menlo Park, Calif. </address>
Reference: <author> Arvind, Nikhil, R., and Pingali, K. </author> <year> 1989. </year> <title> I-structures: Data structures for parallel computing. </title> <journal> ACM Trans. Program. Lang. Sys. </journal> <volume> 11, 4, </volume> <pages> 598-632. </pages>
Reference: <author> Birrell, A., Evers, D., Nelson, G., Owicki, S., and Wobber, E. </author> <year> 1993. </year> <title> Distributed garbage collection for network objects. </title> <type> Tech. Rep. </type> <institution> Digital SRC Research Rep. 116, Digitial Equipment Corp., Palo Alto, Calif. </institution>
Reference: <author> Birrell, A., Nelson, G., Owicki, S., and Wobber, E. </author> <year> 1994. </year> <title> Network objects. </title> <type> Tech. Rep. </type> <institution> Digital SRC Research Rep. 115, Digitial Equipment Corp., Palo Alto, Calif. </institution>
Reference: <author> Birrell, A. D. and Nelson, B. </author> <year> 1984. </year> <title> Implementing remote procedure call. </title> <journal> ACM Trans. Comput. Syst. </journal> <volume> 2, 1, </volume> <pages> 39-59. </pages>
Reference: <author> Cardelli, L. </author> <year> 1995. </year> <title> A language with distributed scope. </title> <booktitle> In Proceedings of the 22nd ACM Symposium on Principles of Programming Languages. ACM, </booktitle> <address> New York, </address> <pages> 286-298. </pages>
Reference: <author> Carriero, N. and Gelernter, D. </author> <year> 1990. </year> <title> How to Write Parallel Programs: A Guide to the Perplexed. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Mass. </address>
Reference: <author> Carriero, N., Gelernter, D., Jourdenais, M., and Kaminsky, D. </author> <year> 1995. </year> <title> Piranha scheduling: Strategies and their implementation. </title> <booktitle> Int. J. Parallel Program. </booktitle> <volume> 23, 1, </volume> <pages> 5-35. </pages>
Reference: <author> Clinger, W. and Rees, J. </author> <year> 1991. </year> <title> Revised 4 report on the algorithmic language Scheme. </title> <booktitle> ACM Lisp Pointers 4, </booktitle> <month> 3 (July), </month> <pages> 1-55. </pages>
Reference: <author> Cox, A., Dwarkadas, S., Keleher, P., Lu, H., Rajamony, R., and Zwaenepoel, W. </author> <year> 1994. </year> <title> Software versus hardware shared-memory implementation: A case study. </title> <booktitle> In Proceedings of the 21st Annual International Symposium on Computer Architecture. IEEE, </booktitle> <address> New York, </address> <pages> 106-119. </pages>
Reference: <author> Culler, D., Dusseau, A., Seth Copen, G., Krishnamurthy, A., Lumetta, S., Thorsten Von, E., and Yelick, K. </author> <year> 1993. </year> <title> Parallel programming in Split-C. </title> <booktitle> In Proceedings of the 1993 ACM Symposium on Supercomputing. ACM, </booktitle> <address> New York. </address>
Reference: <author> Curtis, P. </author> <year> 1992. </year> <title> Mudding: Social phenonmena in text-based virtual realities. </title> <type> Tech. Rep. </type> <institution> CSL-92-4, Xerox Palo Alto Research Center, Palo Alto, Calif. </institution>
Reference: <author> Giacalone, A., Mishra, P., and Prasad, S. </author> <year> 1990. </year> <title> Facile: A symmetric integration of concurrent and functional programming. </title> <booktitle> Int. J. Parallel Program. </booktitle> <volume> 18, </volume> <pages> 2. </pages>
Reference: <author> Haynes, C. and Friedman, D. </author> <year> 1987. </year> <title> Embedding continuations in procedural objects. </title> <journal> ACM Trans. Program. Lang. Syst. </journal> <volume> 9, 4, </volume> <pages> 582-598. </pages>
Reference: <author> Hsieh, W., Wang, P., and Weihl, W. </author> <year> 1993. </year> <title> Computation migration: Enhancing locality for distributed-memory parallel systems. </title> <booktitle> In The 4th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming. ACM, </booktitle> <address> New York, </address> <pages> 239-249. </pages>
Reference: <author> Jagannathan, S. and Philbin, J. </author> <year> 1992. </year> <title> A foundation for an efficient multi-threaded scheme system. </title> <booktitle> In Proceedings of the 1992 Conference on Lisp and Functional Programming. ACM, </booktitle> <address> New York, </address> <pages> 345-357. </pages>
Reference: <author> Jagannathan, S. and Wright, A. </author> <year> 1995. </year> <title> Effective flow-analysis for avoiding runtime checks. </title> <booktitle> In Proceedings of the International Static Analysis Symposium, Lecture Notes in Computer Science, </booktitle> <volume> vol. 983. </volume> <publisher> Springer-Verlag, Berlin, </publisher> <pages> 207-224. </pages>
Reference: <author> Kamada, T., Matsuoka, S., and Yonezawa, A. </author> <year> 1994. </year> <title> Efficient parallel garbage collection on massively parallel computers. </title> <booktitle> In Proceedings of the 1994 IEEE Supercomputing Conference. IEEE, </booktitle> <address> New York, </address> <pages> 79-88. </pages>
Reference: <author> Kelsey, R. </author> <year> 1992. </year> <title> Tail-recursive stack disciplines for an interpreter. </title> <type> Tech. Rep. </type> <institution> NU-CCS-93-03, Northeastern Univ., College of Computer Science, </institution> <address> Boston, Mass. </address>
Reference: <author> Kelsey, R. and Rees, J. </author> <year> 1994. </year> <title> A tractable scheme implementation. Lisp Symbol. </title> <journal> Comput. </journal> <volume> 7, 2, </volume> <pages> 315-335. </pages>
Reference: <author> Kranz, D., Johnson, K., Agarwal, A., Kubiatowicz, J., and Lim, B.-H. </author> <year> 1993. </year> <title> Integrating message-passing and shared-memory: Early experience. </title> <booktitle> In Proceedings of the 4th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming. ACM, </booktitle> <address> New York, </address> <pages> 54-63. </pages>
Reference: <author> Kranz, D., Kelsey, R., Rees, J., Hudak, P., Philbin, J., and Adams, N. </author> <year> 1986. </year> <title> ORBIT: An optimizing compiler for Scheme. </title> <journal> ACM SIGPLAN Not. </journal> <volume> 21, </volume> <month> 7 (July), </month> <pages> 219-233. </pages>
Reference: <author> Lang, B., Queinnec, C., and Piquer, J. </author> <year> 1992. </year> <title> Garbage collecting the world. </title> <booktitle> In Proceedings of the 19th ACM Symposium on Principles of Programming Languages. ACM, </booktitle> <address> New York, </address> <pages> 39-50. </pages>
Reference: <author> Li, K. and Hudak, P. </author> <year> 1989. </year> <title> Memory coherence in shared virtual memory systems. </title> <journal> ACM Trans. Comput. Syst. </journal> <volume> 7, 4, </volume> <pages> 321-359. </pages>
Reference: <author> Milner, R. </author> <year> 1989. </year> <title> Communication and Concurrency. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, N.J. </address>
Reference: <author> Milner, R., Tofte, M., and Harper, R. </author> <year> 1990. </year> <title> The Definition of Standard ML. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Mass. </address>
Reference: <author> Morrisett, J. G. and Tolmach, A. </author> <year> 1993. </year> <title> Procs and Locks: A portable multiprocessing platform for Standard ML of New Jersey. </title> <booktitle> In The 4th ACM Symposium on Principles and Practice of Parallel Programming. ACM, </booktitle> <address> New York, </address> <pages> 198-207. </pages>
Reference: <author> Mullender, S., Ed. </author> <year> 1993. </year> <title> Distributed Systems. </title> <address> Addison-Welsey, Reading, Mass. </address>
Reference: <author> Powell, M. and Miller, B. </author> <year> 1983. </year> <title> Process migration in demos/mp. </title> <booktitle> In Proceedings of the 9th ACM Symposium on Operating Systems Principles. ACM, </booktitle> <address> New York, </address> <pages> 110-119. </pages>
Reference: <author> Reinhold, M. </author> <year> 1994. </year> <title> Cache performance of garbage-collected programs. </title> <booktitle> In Proceedings of the ACM Symposium on Programming Language Design and Implementation. ACM, </booktitle> <address> New York, </address> <pages> 206-217. </pages>
Reference: <author> Reppy, J. </author> <year> 1991. </year> <title> CML: A higher-order concurrent language. </title> <booktitle> In Proceedings of the SIGPLAN'91 Conference on Programming Language Design and Implementation. ACM, </booktitle> <address> New York, </address> <pages> 293-306. </pages>
Reference: <author> Schroder, M. and Burrows, M. </author> <year> 1990. </year> <title> Performance of firefly rpc. </title> <journal> ACM Trans. Comput. Syst. </journal> <volume> 8, 1, </volume> <month> 1-17. </month> <title> Sun Microsystems 1990. NeWS 2.1 Programmer's Guide. </title> <institution> Sun Microsystems, Mountain View, Calif. Sun Microsystems, Inc. </institution> <year> 1995. </year> <title> The Java Language Specification. </title> <institution> Sun Microsystems, Inc., Mountain View, Calif. </institution>
Reference: <author> Sunderam, V. </author> <year> 1990. </year> <title> Pvm: A framework for parallel distributed computing. </title> <journal> Concurrency: Pract. Exper. </journal> <volume> 2, </volume> <pages> 4. </pages>
Reference: <author> Venkatasubramanian, N., Agha, G., and Talcott, C. </author> <year> 1992. </year> <title> Scalable distributed garbage collection for systems of active objects. </title> <booktitle> In Memory Management, Lecture Notes in Computer Science, </booktitle> <volume> vol. 637. </volume> <publisher> Springer-Verlag, Berlin, </publisher> <pages> 134-147. </pages>
Reference: <author> Wright, A. and Cartwright, R. </author> <year> 1994. </year> <title> A practical soft type system for scheme. </title> <booktitle> In Proceedings of the ACM Symposium on Lisp and Functional Programming. ACM, </booktitle> <address> New York, 250-262. </address> <note> Received April 1995; revised July 1995; accepted September 1995 </note>
References-found: 35

