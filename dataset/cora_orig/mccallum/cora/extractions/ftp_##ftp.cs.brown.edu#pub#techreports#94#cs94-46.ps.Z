URL: ftp://ftp.cs.brown.edu/pub/techreports/94/cs94-46.ps.Z
Refering-URL: http://www.cs.brown.edu/publications/techreports/reports/CS-94-46.html
Root-URL: http://www.cs.brown.edu/
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> P. Bertolazzi, R. F. Cohen, G. Di Battista, R. Tamassia, and I. G. Tollis. </author> <title> How to draw a series-parallel digraph. </title> <booktitle> In Proc. 3rd Scand. Workshop Algorithm Theory, volume 621 of Lecture Notes in Computer Science, </booktitle> <pages> pages 272-283. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Tamassia and Vitter [32] show that the above drawing algorithms can be efficiently parallelized. Upward planar drawings of trees and series-parallel digraphs are studied in [29, 31, 6, 13, 15] and <ref> [1, 2] </ref>, respectively. In [8] it is shown that for the special case of bipartite digraphs, upward planarity is equivalent to planarity. In [3, 4] a polynomial time algorithm is given for testing the upward planarity of digraphs with a prescribed embedding.
Reference: [2] <author> P. Bertolazzi, R. F. Cohen, G. Di Battista, R. Tamassia, and I. G. Tollis. </author> <title> How to draw a series-parallel digraph. </title> <journal> Internat. J. Comput. Geom. Appl., </journal> <note> to appear. </note>
Reference-contexts: Tamassia and Vitter [32] show that the above drawing algorithms can be efficiently parallelized. Upward planar drawings of trees and series-parallel digraphs are studied in [29, 31, 6, 13, 15] and <ref> [1, 2] </ref>, respectively. In [8] it is shown that for the special case of bipartite digraphs, upward planarity is equivalent to planarity. In [3, 4] a polynomial time algorithm is given for testing the upward planarity of digraphs with a prescribed embedding.
Reference: [3] <author> P. Bertolazzi and G. Di Battista. </author> <title> On upward drawing testing of triconnected digraphs. </title> <booktitle> In Proc. 7th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 272-280, </pages> <year> 1991. </year>
Reference-contexts: Upward planar drawings of trees and series-parallel digraphs are studied in [29, 31, 6, 13, 15] and [1, 2], respectively. In [8] it is shown that for the special case of bipartite digraphs, upward planarity is equivalent to planarity. In <ref> [3, 4] </ref> a polynomial time algorithm is given for testing the upward planarity of digraphs with a prescribed embedding. Thomassen [33] characterizes the upward planarity of single-source digraphs in terms of forbidden circuits. <p> We also review the SPQR-tree, introduced in [10, 11], and the combinatorial characterization of upward planarity for embedded planar digraphs, shown in <ref> [3, 4] </ref>. We assume familiarity with planar graphs. 2.1 Drawings and Embeddings A drawing of a graph maps each vertex to a distinct point of the plane and each edge (u; v) to a simple Jordan curve with endpoints u and v. <p> the external face; in skeleton (), replace virtual edge e with the above drawing of H minus edge e. 4 2.3 Upward Planarity Testing of Embedded Digraphs In the rest of this section we recall the combinatorial characterization of upward planarity for planar digraphs with a fixed embedding, given in <ref> [3, 4] </ref>, which will be extensively used in this paper. In [3, 4], the problem of testing whether an embedded planar digraph G admits a planar upward drawing is formulated as a perfect c-matching problem on a bipartite graph derived from G. <p> the above drawing of H minus edge e. 4 2.3 Upward Planarity Testing of Embedded Digraphs In the rest of this section we recall the combinatorial characterization of upward planarity for planar digraphs with a fixed embedding, given in <ref> [3, 4] </ref>, which will be extensively used in this paper. In [3, 4], the problem of testing whether an embedded planar digraph G admits a planar upward drawing is formulated as a perfect c-matching problem on a bipartite graph derived from G. To introduce this formulation, we need some notation and definitions. <p> Informally speaking, t (s) is assigned to f if it "penetrates" into face f . Clearly, each sink (source) can be assigned only to one face, while an internal vertex is not assigned to any face. In <ref> [3, 4] </ref>, it is shown that the number of vertices assigned to a face f in any upward drawing is equal to the capacity c (f ) of the face itself, which is defined as follows. Let 2n f be the number of sink-switches and source-switches of f . <p> A solution of this c-matching problem is called an upward consistent assignment of the variables x vf and is denoted by A. The equations of the first set are called capacity equations. Lemma 1 <ref> [3, 4] </ref> Let G be a digraph with a candidate planar embedding . Then is an upward embedding of G if and only if the c-matching problem associated with G and admits an upward consistent assignment. <p> Since both P K and P H are homeomorphic to a valley, then both K and H are in case 4.2: thus s (G) 2 K ffi and s (G) 2 H ffi , a contradiction. The proof of next lemma can be found in <ref> [3, 4] </ref>. Lemma 14 Let G be digraph, let G be a candidate planar embedding of G and let face ffi 2 G . Finally, let A be an assignment of the sinks and the sources of G to the faces of G .
Reference: [4] <author> P. Bertolazzi, G. Di Battista, G. Liotta, and C. Mannino. </author> <title> Upward drawings of triconnected digraphs. </title> <journal> Algorithmica, </journal> <note> to appear. </note>
Reference-contexts: Upward planar drawings of trees and series-parallel digraphs are studied in [29, 31, 6, 13, 15] and [1, 2], respectively. In [8] it is shown that for the special case of bipartite digraphs, upward planarity is equivalent to planarity. In <ref> [3, 4] </ref> a polynomial time algorithm is given for testing the upward planarity of digraphs with a prescribed embedding. Thomassen [33] characterizes the upward planarity of single-source digraphs in terms of forbidden circuits. <p> We also review the SPQR-tree, introduced in [10, 11], and the combinatorial characterization of upward planarity for embedded planar digraphs, shown in <ref> [3, 4] </ref>. We assume familiarity with planar graphs. 2.1 Drawings and Embeddings A drawing of a graph maps each vertex to a distinct point of the plane and each edge (u; v) to a simple Jordan curve with endpoints u and v. <p> the external face; in skeleton (), replace virtual edge e with the above drawing of H minus edge e. 4 2.3 Upward Planarity Testing of Embedded Digraphs In the rest of this section we recall the combinatorial characterization of upward planarity for planar digraphs with a fixed embedding, given in <ref> [3, 4] </ref>, which will be extensively used in this paper. In [3, 4], the problem of testing whether an embedded planar digraph G admits a planar upward drawing is formulated as a perfect c-matching problem on a bipartite graph derived from G. <p> the above drawing of H minus edge e. 4 2.3 Upward Planarity Testing of Embedded Digraphs In the rest of this section we recall the combinatorial characterization of upward planarity for planar digraphs with a fixed embedding, given in <ref> [3, 4] </ref>, which will be extensively used in this paper. In [3, 4], the problem of testing whether an embedded planar digraph G admits a planar upward drawing is formulated as a perfect c-matching problem on a bipartite graph derived from G. To introduce this formulation, we need some notation and definitions. <p> Informally speaking, t (s) is assigned to f if it "penetrates" into face f . Clearly, each sink (source) can be assigned only to one face, while an internal vertex is not assigned to any face. In <ref> [3, 4] </ref>, it is shown that the number of vertices assigned to a face f in any upward drawing is equal to the capacity c (f ) of the face itself, which is defined as follows. Let 2n f be the number of sink-switches and source-switches of f . <p> A solution of this c-matching problem is called an upward consistent assignment of the variables x vf and is denoted by A. The equations of the first set are called capacity equations. Lemma 1 <ref> [3, 4] </ref> Let G be a digraph with a candidate planar embedding . Then is an upward embedding of G if and only if the c-matching problem associated with G and admits an upward consistent assignment. <p> Since both P K and P H are homeomorphic to a valley, then both K and H are in case 4.2: thus s (G) 2 K ffi and s (G) 2 H ffi , a contradiction. The proof of next lemma can be found in <ref> [3, 4] </ref>. Lemma 14 Let G be digraph, let G be a candidate planar embedding of G and let face ffi 2 G . Finally, let A be an assignment of the sinks and the sources of G to the faces of G .
Reference: [5] <author> R. Cole and U. Vishkin. </author> <title> Approximate and exact parallel scheduling with applications to list, tree, and graph problems. </title> <booktitle> In Proc. 27th IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 478-491, </pages> <year> 1986. </year>
Reference-contexts: Proof: The correctness of the algorithm follows directly from Theorem 1. All the steps can be performed sequentially in O (n) time with straightforward methods. Regarding the parallel complexity, Steps 1 and 3 take O (log n) time on a CREW PRAM with n= log n processors, using list-ranking <ref> [5] </ref>. Step 2 can be executed by computing a spanning forest of the face-sink graph, which takes O (log n) time on a CRCW PRAM with nff (n)= log n processors [5], and thus determines the parallel time complexity. 4 Upward Planarity and SPQR-Trees Let G be a biconnected single-source-digraph. <p> 1 and 3 take O (log n) time on a CREW PRAM with n= log n processors, using list-ranking <ref> [5] </ref>. Step 2 can be executed by computing a spanning forest of the face-sink graph, which takes O (log n) time on a CRCW PRAM with nff (n)= log n processors [5], and thus determines the parallel time complexity. 4 Upward Planarity and SPQR-Trees Let G be a biconnected single-source-digraph.
Reference: [6] <author> P. Crescenzi, G. Di Battista, and A. Piperno. </author> <title> A note on optimal area algorithms for upward drawings of binary trees. </title> <journal> Comput. Geom. Theory Appl., </journal> <volume> 2 </volume> <pages> 187-200, </pages> <year> 1992. </year>
Reference-contexts: Di Battista, Tamassia, and Tollis [9, 12] give algorithms for constructing upward planar drawings of st-digraphs, and investigate area bounds and symmetry display. Tamassia and Vitter [32] show that the above drawing algorithms can be efficiently parallelized. Upward planar drawings of trees and series-parallel digraphs are studied in <ref> [29, 31, 6, 13, 15] </ref> and [1, 2], respectively. In [8] it is shown that for the special case of bipartite digraphs, upward planarity is equivalent to planarity. In [3, 4] a polynomial time algorithm is given for testing the upward planarity of digraphs with a prescribed embedding.
Reference: [7] <author> G. Di Battista, P. Eades, R. Tamassia, and I. G. Tollis. </author> <title> Algorithms for drawing graphs: an annotated bibliography. </title> <type> Preprint, </type> <institution> Dept. Comput. Sci., Brown Univ., Providence, RI, </institution> <month> Nov. </month> <year> 1993. </year> <note> To appear in Comput. Geom. Theory Appl. Preliminary version available via anonymous ftp from wilma.cs.brown.edu, gdbiblio.tex.Z and gdbiblio.ps.Z in /pub/papers/compgeo. </note>
Reference-contexts: Namely, the orders defined by the transitive closure of upward planar single-source digraphs have bounded dimension [34], so that they can be compactly represented. A survey on algorithms for planarity testing and graph drawing can be found in <ref> [7] </ref>. Previous work on upward planarity is as follows. Combinatorial results on upward planarity for covering digraphs of lattices were first given in [22, 26]. Further results on the interplay between upward planarity and ordered sets are surveyed by Rival [30].
Reference: [8] <author> G. Di Battista, W. P. Liu, and I. </author> <title> Rival. Bipartite graphs upward drawings and planarity. </title> <journal> Inform. Process. Lett., </journal> <volume> 36 </volume> <pages> 317-322, </pages> <year> 1990. </year>
Reference-contexts: Tamassia and Vitter [32] show that the above drawing algorithms can be efficiently parallelized. Upward planar drawings of trees and series-parallel digraphs are studied in [29, 31, 6, 13, 15] and [1, 2], respectively. In <ref> [8] </ref> it is shown that for the special case of bipartite digraphs, upward planarity is equivalent to planarity. In [3, 4] a polynomial time algorithm is given for testing the upward planarity of digraphs with a prescribed embedding.
Reference: [9] <author> G. Di Battista and R. Tamassia. </author> <title> Algorithms for plane representations of acyclic digraphs. </title> <journal> Theoret. Comput. Sci., </journal> <volume> 61 </volume> <pages> 175-198, </pages> <year> 1988. </year>
Reference-contexts: Further results on the interplay between upward planarity and ordered sets are surveyed by Rival [30]. Lempel, Even, and Cederbaum [23] relate the planarity of biconnected undirected graphs to the upward planarity of st-digraphs. A combinatorial characterization of upward planar digraphs is provided in <ref> [21, 9] </ref>: namely, a digraph is upward planar if and only if it is a subgraph of a planar st-digraph. Di Battista, Tamassia, and Tollis [9, 12] give algorithms for constructing upward planar drawings of st-digraphs, and investigate area bounds and symmetry display. <p> A combinatorial characterization of upward planar digraphs is provided in [21, 9]: namely, a digraph is upward planar if and only if it is a subgraph of a planar st-digraph. Di Battista, Tamassia, and Tollis <ref> [9, 12] </ref> give algorithms for constructing upward planar drawings of st-digraphs, and investigate area bounds and symmetry display. Tamassia and Vitter [32] show that the above drawing algorithms can be efficiently parallelized. <p> A digraph is upward planar if it admits a planar upward drawing. Note that a planar acyclic digraph does not necessarily have a planar upward drawing, as shown in Fig. 1.b. An upward planar digraph also admits a planar upward straight-line drawing <ref> [21, 9] </ref>. A planar st-digraph is a planar digraph with exactly one source s and one sink t, connected by edge (s; t). A digraph is upward planar if and only if it is a subgraph of a planar st-digraph [21, 9]. <p> upward planar digraph also admits a planar upward straight-line drawing <ref> [21, 9] </ref>. A planar st-digraph is a planar digraph with exactly one source s and one sink t, connected by edge (s; t). A digraph is upward planar if and only if it is a subgraph of a planar st-digraph [21, 9]. If a digraph has a single source, then it is upward planar if and only if its biconnected components are upward planar [19]. A planar embedding of a digraph is candidate if the incoming (outgoing) edges around each vertex are consecutive. <p> To introduce this formulation, we need some notation and definitions. Let be a planar straight-line upward drawing of an embedded upward planar digraph G. (As shown in <ref> [21, 9] </ref>, every upward planar digraph admits a planar upward straight-line drawing.) We say that a sink t (source s) of G is assigned to a face f of if the angle defined by the two edges of f incident on t (s) is greater than .
Reference: [10] <author> G. Di Battista and R. Tamassia. </author> <title> On-line graph algorithms with spqr-trees. </title> <booktitle> In Automata, Languages and Programming (Proc. 17th ICALP), volume 442 of Lecture Notes in Computer Science, </booktitle> <pages> pages 598-611, </pages> <year> 1990. </year>
Reference-contexts: The complete upward planarity testing algorithm for single-source digraphs is presented in Section 7. 2 Preliminaries In this section we recall some terminology and basic results on upward planarity. We also review the SPQR-tree, introduced in <ref> [10, 11] </ref>, and the combinatorial characterization of upward planarity for embedded planar digraphs, shown in [3, 4]. <p> For more details, see <ref> [10, 11] </ref>. SPQR-trees are closely related to the classical decomposition of biconnected graphs into triconnected components [17]. Let G be a biconnected graph. A split pair of G is either a separation-pair or a pair of adjacent vertices.
Reference: [11] <author> G. Di Battista and R. Tamassia. </author> <title> On-line maintenance of triconnected components with spqr-trees. </title> <journal> Algorithmica, </journal> <note> to appear. Preprint: Technical Report CS-92-40, </note> <institution> Comput. Sci. Dept., Brown Univ. </institution> <year> (1992). </year>
Reference-contexts: The complete upward planarity testing algorithm for single-source digraphs is presented in Section 7. 2 Preliminaries In this section we recall some terminology and basic results on upward planarity. We also review the SPQR-tree, introduced in <ref> [10, 11] </ref>, and the combinatorial characterization of upward planarity for embedded planar digraphs, shown in [3, 4]. <p> For more details, see <ref> [10, 11] </ref>. SPQR-trees are closely related to the classical decomposition of biconnected graphs into triconnected components [17]. Let G be a biconnected graph. A split pair of G is either a separation-pair or a pair of adjacent vertices.
Reference: [12] <author> G. Di Battista, R. Tamassia, and I. G. Tollis. </author> <title> Area requirement and symmetry display of planar upward drawings. </title> <journal> Discrete Comput. Geom., </journal> <volume> 7 </volume> <pages> 381-401, </pages> <year> 1992. </year>
Reference-contexts: A combinatorial characterization of upward planar digraphs is provided in [21, 9]: namely, a digraph is upward planar if and only if it is a subgraph of a planar st-digraph. Di Battista, Tamassia, and Tollis <ref> [9, 12] </ref> give algorithms for constructing upward planar drawings of st-digraphs, and investigate area bounds and symmetry display. Tamassia and Vitter [32] show that the above drawing algorithms can be efficiently parallelized. <p> Hence, by applying the planar polyline upward drawing algorithm of Di Battista, Tamassia and Tollis <ref> [12] </ref> to G 0 and then removing the vertices and edges of G 0 that are not in G, we obtain a planar polyline upward drawing of G. Theorem 8 Algorithm Test can be extended so that it constructs a planar polyline upward drawing if the digraph is upward planar.
Reference: [13] <author> P. Eades, T. Lin, and X. Lin. </author> <title> Minimum size h-v drawings. </title> <booktitle> In Advanced Visual Interfaces (Proceedings of AVI '92), volume 36 of World Scientific Series in Computer Science, </booktitle> <pages> pages 386-394, </pages> <year> 1992. </year>
Reference-contexts: Di Battista, Tamassia, and Tollis [9, 12] give algorithms for constructing upward planar drawings of st-digraphs, and investigate area bounds and symmetry display. Tamassia and Vitter [32] show that the above drawing algorithms can be efficiently parallelized. Upward planar drawings of trees and series-parallel digraphs are studied in <ref> [29, 31, 6, 13, 15] </ref> and [1, 2], respectively. In [8] it is shown that for the special case of bipartite digraphs, upward planarity is equivalent to planarity. In [3, 4] a polynomial time algorithm is given for testing the upward planarity of digraphs with a prescribed embedding.
Reference: [14] <author> D. Fussell, V. Ramachandran, and R. Thurimella. </author> <title> Finding triconnected components by local replacements. </title> <booktitle> In Automata, Languages and Programming (Proc. 16th ICALP), volume 372 of Lecture Notes in Computer Science, </booktitle> <pages> pages 379-393, </pages> <year> 1989. </year>
Reference-contexts: By applying the result of Theorem 6 and various parallel techniques (in particular <ref> [14, 28, 27] </ref>) we can efficiently parallelize Algorithm Test: Theorem 7 Upward planarity testing of a single-source-digraph with n vertices can be done in in O (log n) time on a CRCW PRAM with n log log n= log n processors, using O (n) space.
Reference: [15] <author> A. Garg, M. T. Goodrich, and R. Tamassia. </author> <title> Area-efficient upward tree drawings. </title> <booktitle> In Proc. 9th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 359-368, </pages> <year> 1993. </year> <month> 25 </month>
Reference-contexts: Di Battista, Tamassia, and Tollis [9, 12] give algorithms for constructing upward planar drawings of st-digraphs, and investigate area bounds and symmetry display. Tamassia and Vitter [32] show that the above drawing algorithms can be efficiently parallelized. Upward planar drawings of trees and series-parallel digraphs are studied in <ref> [29, 31, 6, 13, 15] </ref> and [1, 2], respectively. In [8] it is shown that for the special case of bipartite digraphs, upward planarity is equivalent to planarity. In [3, 4] a polynomial time algorithm is given for testing the upward planarity of digraphs with a prescribed embedding.
Reference: [16] <author> A. Garg and R. Tamassia. </author> <title> On the computational complexity of upward and rectilinear planarity testing. </title> <type> Report CS-94-10, </type> <institution> Comput. Sci. Dept., Brown Univ., Providence, RI, </institution> <year> 1994. </year>
Reference-contexts: Hutton and Lubiw [19] combine Thomassen's characterization with a decomposition scheme to test the upward planarity of an n-vertex single-source digraph in O (n 2 ) time. Very recently, Papakostas [25] has given a polynomial-time algorithm for upward planarity testing of outerplanar digraphs, and Garg and Tamassia <ref> [16] </ref> have shown that upward planarity testing is NP-complete for general digraphs. In this paper we investigate upward planarity testing of single-source digraphs.
Reference: [17] <author> J. Hopcroft and R. E. Tarjan. </author> <title> Dividing a graph into triconnected components. </title> <journal> SIAM J. Computing., </journal> <volume> 2 </volume> <pages> 135-158, </pages> <year> 1973. </year>
Reference-contexts: For more details, see [10, 11]. SPQR-trees are closely related to the classical decomposition of biconnected graphs into triconnected components <ref> [17] </ref>. Let G be a biconnected graph. A split pair of G is either a separation-pair or a pair of adjacent vertices. <p> Planarity testing in Step 2 can also be done in O (n) time [18]. The construction of the SPQR-tree and the skeletons of its nodes (Step 4) takes time O (n) using a variation of the algorithm of <ref> [17] </ref>. The preprocessing of Step 5 consists essentially of a visit of T , and can be done in O (n) time. Let n be the number of vertices of the skeleton of .
Reference: [18] <author> J. Hopcroft and R. E. Tarjan. </author> <title> Efficient planarity testing. </title> <journal> J. ACM, </journal> <volume> 21(4) </volume> <pages> 549-568, </pages> <year> 1974. </year>
Reference-contexts: Theorem 4 Upward planarity testing of a single-source-digraph with n vertices can be done in O (n) time using O (n) space. Proof: Steps 1 and 3 can be trivially performed in O (n) time. Planarity testing in Step 2 can also be done in O (n) time <ref> [18] </ref>. The construction of the SPQR-tree and the skeletons of its nodes (Step 4) takes time O (n) using a variation of the algorithm of [17]. The preprocessing of Step 5 consists essentially of a visit of T , and can be done in O (n) time.
Reference: [19] <author> M. D. Hutton and A. Lubiw. </author> <title> Upward planar drawing of single source acyclic digraphs. </title> <booktitle> In Proc. 2nd ACM-SIAM Sympos. Discrete Algorithms, </booktitle> <pages> pages 203-211, </pages> <year> 1991. </year>
Reference-contexts: In [3, 4] a polynomial time algorithm is given for testing the upward planarity of digraphs with a prescribed embedding. Thomassen [33] characterizes the upward planarity of single-source digraphs in terms of forbidden circuits. Hutton and Lubiw <ref> [19] </ref> combine Thomassen's characterization with a decomposition scheme to test the upward planarity of an n-vertex single-source digraph in O (n 2 ) time. <p> The algorithm also constructs an upward planar drawing if the test is successful. Our algorithm improves over the previous best result <ref> [19] </ref> by an O (n) factor in the time complexity. * We efficiently parallelize the above algorithm to achieve O (log n) time on a CRCW PRAM with n log log n= log n processors. Hence, we provide the first efficient parallel algorithm for upward planarity testing. <p> A digraph is upward planar if and only if it is a subgraph of a planar st-digraph [21, 9]. If a digraph has a single source, then it is upward planar if and only if its biconnected components are upward planar <ref> [19] </ref>. A planar embedding of a digraph is candidate if the incoming (outgoing) edges around each vertex are consecutive. The planar embedding underlying an upward drawing is candidate. <p> We say that vertices x and y are incomparable in G, denoted by x k y, if neither there exists in G a path x ! y, nor a path x ! y. Lemma 3 <ref> [19] </ref> If G is an sT -digraph with u k v in G, then there exists in G a subgraph homeomorphic to a valley, with a u and b v. Lemma 4 [19] Let G be a connected acyclic digraph with exactly two sources u and v. <p> Lemma 3 <ref> [19] </ref> If G is an sT -digraph with u k v in G, then there exists in G a subgraph homeomorphic to a valley, with a u and b v. Lemma 4 [19] Let G be a connected acyclic digraph with exactly two sources u and v. Then there exists in G a subgraph homeomorphic to a peak, with a u and b v. Fact 5 Let G be a biconnected digraph and let fu; vg be a separation pair of G. <p> Lemma 6 <ref> [19] </ref> Let G be a digraph, let (u; v) be an edge of G, and let vertex u (v) have out-degree (in-degree) 1 in G.
Reference: [20] <author> M.-Y. Kao and G. E. Shannon. </author> <title> Local reorientations, global order, and planar topology. </title> <booktitle> In Proc. 30th IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 286-296, </pages> <year> 1989. </year>
Reference-contexts: Finally, Step 8 consists of a visit of T and takes O (n) time. To parallelize Algorithm Test, we need an efficient way of testing in parallel whether a planar single-source-digraph with n vertices is acyclic. For this purpose, we can use the algorithm of <ref> [20] </ref>, which runs in O (log 3 n) time on a CRCW PRAM with n processors. However, the particular structure of planar single-source-digraphs allows us to perform this test optimally. The following characterization is inspired by some ideas in [20]. Let G be an embedded expanded planar single-source-digraph. <p> For this purpose, we can use the algorithm of <ref> [20] </ref>, which runs in O (log 3 n) time on a CRCW PRAM with n processors. However, the particular structure of planar single-source-digraphs allows us to perform this test optimally. The following characterization is inspired by some ideas in [20]. Let G be an embedded expanded planar single-source-digraph. The clockwise subgraph of G is obtained by taking the first incoming edge of each internal vertex, in the clockwise order.
Reference: [21] <author> D. Kelly. </author> <title> Fundamentals of planar ordered sets. </title> <journal> Discrete Math., </journal> <volume> 63 </volume> <pages> 197-216, </pages> <year> 1987. </year>
Reference-contexts: Further results on the interplay between upward planarity and ordered sets are surveyed by Rival [30]. Lempel, Even, and Cederbaum [23] relate the planarity of biconnected undirected graphs to the upward planarity of st-digraphs. A combinatorial characterization of upward planar digraphs is provided in <ref> [21, 9] </ref>: namely, a digraph is upward planar if and only if it is a subgraph of a planar st-digraph. Di Battista, Tamassia, and Tollis [9, 12] give algorithms for constructing upward planar drawings of st-digraphs, and investigate area bounds and symmetry display. <p> A digraph is upward planar if it admits a planar upward drawing. Note that a planar acyclic digraph does not necessarily have a planar upward drawing, as shown in Fig. 1.b. An upward planar digraph also admits a planar upward straight-line drawing <ref> [21, 9] </ref>. A planar st-digraph is a planar digraph with exactly one source s and one sink t, connected by edge (s; t). A digraph is upward planar if and only if it is a subgraph of a planar st-digraph [21, 9]. <p> upward planar digraph also admits a planar upward straight-line drawing <ref> [21, 9] </ref>. A planar st-digraph is a planar digraph with exactly one source s and one sink t, connected by edge (s; t). A digraph is upward planar if and only if it is a subgraph of a planar st-digraph [21, 9]. If a digraph has a single source, then it is upward planar if and only if its biconnected components are upward planar [19]. A planar embedding of a digraph is candidate if the incoming (outgoing) edges around each vertex are consecutive. <p> To introduce this formulation, we need some notation and definitions. Let be a planar straight-line upward drawing of an embedded upward planar digraph G. (As shown in <ref> [21, 9] </ref>, every upward planar digraph admits a planar upward straight-line drawing.) We say that a sink t (source s) of G is assigned to a face f of if the angle defined by the two edges of f incident on t (s) is greater than .
Reference: [22] <author> D. Kelly and I. </author> <title> Rival. Planar lattices. </title> <journal> Canad. J. Math., </journal> <volume> 27(3) </volume> <pages> 636-665, </pages> <year> 1975. </year>
Reference-contexts: A survey on algorithms for planarity testing and graph drawing can be found in [7]. Previous work on upward planarity is as follows. Combinatorial results on upward planarity for covering digraphs of lattices were first given in <ref> [22, 26] </ref>. Further results on the interplay between upward planarity and ordered sets are surveyed by Rival [30]. Lempel, Even, and Cederbaum [23] relate the planarity of biconnected undirected graphs to the upward planarity of st-digraphs.
Reference: [23] <author> A. Lempel, S. Even, and I. Cederbaum. </author> <title> An algorithm for planarity testing of graphs. In Theory of Graphs: </title> <booktitle> Internat. Symposium (Rome 1966), </booktitle> <pages> pages 215-232, </pages> <address> New York, 1967. </address> <publisher> Gordon and Breach. </publisher>
Reference-contexts: Previous work on upward planarity is as follows. Combinatorial results on upward planarity for covering digraphs of lattices were first given in [22, 26]. Further results on the interplay between upward planarity and ordered sets are surveyed by Rival [30]. Lempel, Even, and Cederbaum <ref> [23] </ref> relate the planarity of biconnected undirected graphs to the upward planarity of st-digraphs. A combinatorial characterization of upward planar digraphs is provided in [21, 9]: namely, a digraph is upward planar if and only if it is a subgraph of a planar st-digraph.
Reference: [24] <author> L. Lovasz and M. D. Plummer. </author> <title> Matching Theory, </title> <booktitle> volume 29 of Annals of Discrete Mathematics. </booktitle> <publisher> North Holland, </publisher> <year> 1986. </year>
Reference-contexts: This intuitive idea of assignment of vertices to faces can be formally expressed as a perfect c-matching problem <ref> [24] </ref>.
Reference: [25] <author> A. Papakostas. </author> <title> Upward planarity testing of outerplanar dags. </title> <booktitle> In Proc. Graph Drawing '94, </booktitle> <year> 1994. </year>
Reference-contexts: Thomassen [33] characterizes the upward planarity of single-source digraphs in terms of forbidden circuits. Hutton and Lubiw [19] combine Thomassen's characterization with a decomposition scheme to test the upward planarity of an n-vertex single-source digraph in O (n 2 ) time. Very recently, Papakostas <ref> [25] </ref> has given a polynomial-time algorithm for upward planarity testing of outerplanar digraphs, and Garg and Tamassia [16] have shown that upward planarity testing is NP-complete for general digraphs. In this paper we investigate upward planarity testing of single-source digraphs.
Reference: [26] <author> C. Platt. </author> <title> Planar lattices and planar graphs. </title> <journal> J. Combin. Theory Ser. B, </journal> <volume> 21 </volume> <pages> 30-39, </pages> <year> 1976. </year>
Reference-contexts: A survey on algorithms for planarity testing and graph drawing can be found in [7]. Previous work on upward planarity is as follows. Combinatorial results on upward planarity for covering digraphs of lattices were first given in <ref> [22, 26] </ref>. Further results on the interplay between upward planarity and ordered sets are surveyed by Rival [30]. Lempel, Even, and Cederbaum [23] relate the planarity of biconnected undirected graphs to the upward planarity of st-digraphs.
Reference: [27] <author> V. Ramachandran and J. Reif. </author> <title> Planarity testing in parallel. </title> <type> Technical Report TR-90-15, </type> <institution> Department of Computer Science, Univerity of Texas at Austin, </institution> <year> 1990. </year>
Reference-contexts: Hence, we provide the first efficient parallel algorithm for upward planarity testing. Our parallel time complexity is the same as the one of the best parallel algorithm for planarity testing <ref> [28, 27] </ref>. * Finally, as a side effect, we provide an optimal parallel algorithm for testing acyclicity of a planar n-vertex single-source-digraph in O (log n) time with n= log n processors on an EREW PRAM. <p> By applying the result of Theorem 6 and various parallel techniques (in particular <ref> [14, 28, 27] </ref>) we can efficiently parallelize Algorithm Test: Theorem 7 Upward planarity testing of a single-source-digraph with n vertices can be done in in O (log n) time on a CRCW PRAM with n log log n= log n processors, using O (n) space.
Reference: [28] <author> V. Ramachandran and J. H. Reif. </author> <title> An optimal parallel algorithm for graph planarity. </title> <booktitle> In Proc. 30th Annu. IEEE Sympos. Found. Comput. Sci., </booktitle> <pages> pages 282-293, </pages> <year> 1989. </year>
Reference-contexts: Hence, we provide the first efficient parallel algorithm for upward planarity testing. Our parallel time complexity is the same as the one of the best parallel algorithm for planarity testing <ref> [28, 27] </ref>. * Finally, as a side effect, we provide an optimal parallel algorithm for testing acyclicity of a planar n-vertex single-source-digraph in O (log n) time with n= log n processors on an EREW PRAM. <p> By applying the result of Theorem 6 and various parallel techniques (in particular <ref> [14, 28, 27] </ref>) we can efficiently parallelize Algorithm Test: Theorem 7 Upward planarity testing of a single-source-digraph with n vertices can be done in in O (log n) time on a CRCW PRAM with n log log n= log n processors, using O (n) space.
Reference: [29] <author> E. Reingold and J. Tilford. </author> <title> Tidier drawing of trees. </title> <journal> IEEE Trans. Softw. Eng., </journal> <volume> SE-7(2):223-228, </volume> <year> 1981. </year>
Reference-contexts: Di Battista, Tamassia, and Tollis [9, 12] give algorithms for constructing upward planar drawings of st-digraphs, and investigate area bounds and symmetry display. Tamassia and Vitter [32] show that the above drawing algorithms can be efficiently parallelized. Upward planar drawings of trees and series-parallel digraphs are studied in <ref> [29, 31, 6, 13, 15] </ref> and [1, 2], respectively. In [8] it is shown that for the special case of bipartite digraphs, upward planarity is equivalent to planarity. In [3, 4] a polynomial time algorithm is given for testing the upward planarity of digraphs with a prescribed embedding.
Reference: [30] <author> I. </author> <title> Rival. Reading, drawing, and order. </title> <editor> In I. G. Rosenberg and G. Sabidussi, editors, </editor> <booktitle> Algebras and Orders, </booktitle> <pages> pages 359-404. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1993. </year>
Reference-contexts: Previous work on upward planarity is as follows. Combinatorial results on upward planarity for covering digraphs of lattices were first given in [22, 26]. Further results on the interplay between upward planarity and ordered sets are surveyed by Rival <ref> [30] </ref>. Lempel, Even, and Cederbaum [23] relate the planarity of biconnected undirected graphs to the upward planarity of st-digraphs. A combinatorial characterization of upward planar digraphs is provided in [21, 9]: namely, a digraph is upward planar if and only if it is a subgraph of a planar st-digraph.
Reference: [31] <author> K. J. Supowit and E. M. Reingold. </author> <title> The complexity of drawing trees nicely. </title> <journal> Acta Inform., </journal> <volume> 18 </volume> <pages> 377-392, </pages> <year> 1983. </year>
Reference-contexts: Di Battista, Tamassia, and Tollis [9, 12] give algorithms for constructing upward planar drawings of st-digraphs, and investigate area bounds and symmetry display. Tamassia and Vitter [32] show that the above drawing algorithms can be efficiently parallelized. Upward planar drawings of trees and series-parallel digraphs are studied in <ref> [29, 31, 6, 13, 15] </ref> and [1, 2], respectively. In [8] it is shown that for the special case of bipartite digraphs, upward planarity is equivalent to planarity. In [3, 4] a polynomial time algorithm is given for testing the upward planarity of digraphs with a prescribed embedding.
Reference: [32] <author> R. Tamassia and J. S. Vitter. </author> <title> Parallel transitive closure and point location in planar structures. </title> <journal> SIAM J. Comput., </journal> <volume> 20(4) </volume> <pages> 708-725, </pages> <year> 1991. </year>
Reference-contexts: Di Battista, Tamassia, and Tollis [9, 12] give algorithms for constructing upward planar drawings of st-digraphs, and investigate area bounds and symmetry display. Tamassia and Vitter <ref> [32] </ref> show that the above drawing algorithms can be efficiently parallelized. Upward planar drawings of trees and series-parallel digraphs are studied in [29, 31, 6, 13, 15] and [1, 2], respectively. In [8] it is shown that for the special case of bipartite digraphs, upward planarity is equivalent to planarity.
Reference: [33] <author> C. Thomassen. </author> <title> Planar acyclic oriented graphs. </title> <booktitle> Order, </booktitle> <volume> 5(4) </volume> <pages> 349-361, </pages> <year> 1989. </year>
Reference-contexts: In [8] it is shown that for the special case of bipartite digraphs, upward planarity is equivalent to planarity. In [3, 4] a polynomial time algorithm is given for testing the upward planarity of digraphs with a prescribed embedding. Thomassen <ref> [33] </ref> characterizes the upward planarity of single-source digraphs in terms of forbidden circuits. Hutton and Lubiw [19] combine Thomassen's characterization with a decomposition scheme to test the upward planarity of an n-vertex single-source digraph in O (n 2 ) time.
Reference: [34] <author> W. T. Trotter and J. Moore. </author> <title> The dimension of planar posets. </title> <journal> J. Combin. Theory Ser. B., </journal> <volume> 22 </volume> <pages> 54-67, </pages> <year> 1977. </year>
Reference-contexts: Also, upward planarity of single-source digraphs has deep combinatorial implications in the theory of ordered sets. Namely, the orders defined by the transitive closure of upward planar single-source digraphs have bounded dimension <ref> [34] </ref>, so that they can be compactly represented. A survey on algorithms for planarity testing and graph drawing can be found in [7]. Previous work on upward planarity is as follows. Combinatorial results on upward planarity for covering digraphs of lattices were first given in [22, 26].
References-found: 34

