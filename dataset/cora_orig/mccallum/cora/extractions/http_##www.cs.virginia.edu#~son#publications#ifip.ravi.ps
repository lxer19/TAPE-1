URL: http://www.cs.virginia.edu/~son/publications/ifip.ravi.ps
Refering-URL: http://www.cs.virginia.edu/~son/publications.html
Root-URL: http://www.cs.virginia.edu
Abstract-found: 0
Intro-found: 1
Reference: <author> Abbott, R. K. and Garcia-Molina, H. </author> <title> (1992) Scheduling Real-Time Transactions: A Performance Evaluation. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 17, </volume> <pages> 513-60. </pages>
Reference: <author> Ammann, P. and Jajodia, S. </author> <title> (1992) A Timestamp Ordering Algorithm for Secure, Single-version, Multi-level Databases. in Database Security, V: Status and Prospects, </title> <editor> (ed. </editor> <publisher> C.E. </publisher>
Reference-contexts: In this paper, we concern ourselves with concurrency control mechanisms that have to satisfy both security and real-time requirements. In particular, we deal with database security that allows read-down (Simple security property) but does not allow write-up <ref> (Ammann et al 1992) </ref>. In other words, (1) A transaction T cannot read a data object d unless level (T )level (d). (2) Transaction T cannot write a data object d unless level (T )=level (d).
Reference: <author> Landwehr and S. </author> <title> Jajodia), </title> <publisher> Elsevier Science Publishers B.V., </publisher> <pages> 191-202. </pages>
Reference: <author> Bell, D.E. and LaPadula, L.J. </author> <title> (1976) Secure Computer Systems: Unified Exposition and Multics Interpretation. </title> <institution> The Mitre Corp. Bernstein, P.A., </institution> <note> Hadzilacos, </note> <author> V., and Goodman, N. </author> <title> (1987) Concurrency Control and Recovery in Database Systems. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA. </address>
Reference-contexts: 1 INTRODUCTION Database security is concerned with the ability of a database management system to enforce a security policy governing the disclosure, modification or destruction of information. Most secure database systems use an access control mechanism based on the Bell-LaPadula model <ref> (Bell and LaPadula, 1976) </ref>. This model is stated in terms of subjects and objects. An object is understood to be a data file, record or a field within a record. A subject is an active process that requests access to objects.
Reference: <author> David, R. and Son, S.H. </author> <title> (1993) A Secure Two Phase Locking Protocol. </title> <booktitle> Proc. the 12th Symposium on Reliable Distributed Systems, </booktitle> <address> Princeton, NJ. </address>
Reference-contexts: As advances in multilevel security take place, MLS/DBMSs are also required to support real-time requirements. As more and more of such systems are in use, one cannot avoid the need for integrating real-time transaction processing techniques into MLS/DBMSs. In <ref> (Son 1993 and David 1995) </ref>, the security impact on real-time database systems is studied, but to the best of our knowledge, no work has been reported on developing DBMSs that are multilevel secure and that support real-time requirements. <p> For a more detailed description of the problem of concurrency control in secure databases, the reader is referred to <ref> (David and Son 1993, David et al 1995) </ref>. In this paper, we concern ourselves with concurrency control mechanisms that have to satisfy both security and real-time requirements. In particular, we deal with database security that allows read-down (Simple security property) but does not allow write-up (Ammann et al 1992).
Reference: <author> David, R., Son, S.H., and Mukkamala, R. </author> <title> (1995) Supporting Security Requirements in Multilevel Real-time Databases. </title> <booktitle> Proc. 1995 IEEE Symp. Security and Privacy, </booktitle> <pages> 199-210, </pages> <address> Oakland, California. </address>
Reference: <author> Goguen, J.A. and Meseguer, J. </author> <title> (1982) Security Policy and Security Models. </title> <booktitle> Proc. the IEEE Symposium on Security and Privacy, </booktitle> <pages> 11-20. </pages>
Reference-contexts: The notion of non-interference has been proposed as a simple and intuitively satisfying definition of what it means for a system to be secure <ref> (Goguen and J. Meseguer 1982) </ref>. The property of non-interference states that the output as seen by a subject must be unaffected by the inputs of another subject at a higher-level.
Reference: <author> Jajodia, S. and Atluri, V. </author> <title> (1992) Alternative Correctness Criteria for Concurrent Execution of Transactions in Multilevel Secure Databases. </title> <booktitle> Proc. the IEEE Symposium on Security and Privacy, </booktitle> <address> Oakland, CA, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: It is also possible to bound the size of the update queue, however, at the expense of possible covert-channels. * Incorporate alternate correctness criteria such as the one in <ref> (Jajodia and Atluri 1992) </ref> and thereby more efficiently meeting the real-time and noninterference conditions.
Reference: <author> Kao, B. and Garcia-Molina, H. </author> <title> (1994) An Overview of Real-Time Database Systems, in Real-Time Computing, </title> <editor> (eds: W.A. Halang and A.D. </editor> <booktitle> Stoyenko) NATO ASI Series F, </booktitle> <volume> 127, </volume> <publisher> Springer-Verlag, </publisher> <pages> 261-82. </pages>
Reference-contexts: Accordingly, we concentrate only on these problems, and let the other resource allocation problems (i.e., CPU and I/O scheduling) be handled using existing methods <ref> (Kao and Garcia-Molina 1994, Rajkumar et al 1995) </ref>. 6.1 Data Object Representation A key aspect of our protocol is the method used to represent the data objects so as to meet objectives (1)-(4) stated in Section 1. <p> Clearly, there is no data contention problem between T 1 and T 2 . However, there may be an interference due to I/O or CPU scheduling. But other existing scheduling algorithms may be used to resolve such problems <ref> (Kao and Garcia-Molina 1994, Rajkumar et al 1995) </ref>. Thus, Case 1 cannot result in blocking or delay of T 1 by T 2 . Case 2: Level (T 1 ) = Level (T 2 ). Suppose they both access data object x.
Reference: <author> Keefe, T.F., Tsai, W.T., and Srivastava, J. </author> <title> (1990) Multilevel Secure Database Concur-rency Control. </title> <booktitle> Proc. the Sixth International Conference on Data Engineering, </booktitle> <pages> 337-44, </pages> <address> Los Angeles, CA. Lampson, </address> <month> B.W. </month> <title> (1973) A Note on the Confinement Problem. </title> <journal> Communications of the ACM, </journal> <volume> 16, </volume> <pages> 613-5. </pages>
Reference-contexts: system in response to an input sequence including actions from a higher level fl Here, the term level is used to refer to the security classification and priority to refer to the real-time classification. subject and an input sequence in which all inputs at a higher level have been removed <ref> (Keefe et al 1990) </ref>. An extensive analysis of the possible covert channels in a secure concurrency control mechanism and the necessary and sufficient conditions for a secure, interference-free scheduler are given in (Keefe et al 1990). <p> real-time classification. subject and an input sequence in which all inputs at a higher level have been removed <ref> (Keefe et al 1990) </ref>. An extensive analysis of the possible covert channels in a secure concurrency control mechanism and the necessary and sufficient conditions for a secure, interference-free scheduler are given in (Keefe et al 1990). Three of these properties are of relevance to the real-time secure two phase locking protocol discussed in this paper. <p> Even these schedulers, however, can reach a state from which they cannot continue without aborting one or more transactions. For simplicity, these two conditions are lumped together and called as deadlock <ref> (Keefe et al 1990) </ref>. The concurrency control protocol discussed in this paper satisfies all the three properties. The details are presented in Section 7. 3 SECURITY AND REAL-TIME REQUIREMENTS The property of non-interference has the unfortunate effect of degrading performance for transactions at a higher level. <p> The priority usually reflects how close the transaction is to missing its deadline. Priority-based scheduling of real-time transactions, however, interacts with the property of non-interference which has to be satisfied by secure schedulers <ref> (Keefe et al 1990) </ref>.
Reference: <author> Lee, J. and Son, S.H. </author> <title> (1995) Concurrency Control Algorithms for Real-Time Database Systems, in Performance of Concurrency Control Mechanisms in Centralized Database Systems (ed. </title> <editor> Vijay Kumar), </editor> <publisher> Prentice Hall, </publisher> <pages> 429-60. </pages>
Reference: <author> Rajkumar, R., Sha, L., Lehoczky, J.P., and Ramamritham, K. </author> <title> (1995) An Optimal Priority Inheritance Policy for Synchronization, </title> <booktitle> in Advances in Real-Time Systems, </booktitle> <publisher> (ed. S.H. </publisher>
Reference-contexts: If it is unlock or readlock, then grant the lock. (Some complex real-time concurrency protocols such as OMP <ref> (Rajkumar et al 1995) </ref> make further checks prior to granting the lock to T i .) If the status is writelock, then enqueue the request, abort the request, or abort the current holder depending on the real-time scheduling policy. (For example, if T i has an earlier deadline than the current
Reference: <author> Son), </author> <booktitle> Prentice-Hall, </booktitle> <pages> 249-71. </pages>
Reference: <author> Sha, L., Rajkumar, R., and Lehoczky, J.P. </author> <title> (1990) Priority Inheritance Protocol: An Approach to Real-time Synchronization. </title> <journal> IEEE Trans. Computers, </journal> <pages> 1175-85. </pages>
Reference: <author> Son, S.H., Lee, J., and Lin, Y. </author> <title> (1992) Hybrid Protocols Using Dynamic Adjustment of Serialization Order for Real-Time Concurrency Control. </title> <journal> Real-Time Systems Journal, </journal> <volume> 4, </volume> <pages> 269-76. </pages>
Reference-contexts: While the basic 2PL lets the requester wait until the lock is released, it is an unacceptable solution for real-time systems. For this reason, alternate versions of 2PL such as Hybrid 2PL <ref> (Son et al 1992) </ref> have been suggested to handle the problem.
Reference: <author> Son, S.H. and Thuraisingham, B. </author> <title> (1993) Towards a Multilevel Secure Database Manage ment System for Real-Time Applications. </title> <booktitle> Proc. IEEE Workshop on Real-Time Applica--tions, </booktitle> <address> New York, NY. 11 BIOGRAPHY </address>
Reference-contexts: As advances in multilevel security take place, MLS/DBMSs are also required to support real-time requirements. As more and more of such systems are in use, one cannot avoid the need for integrating real-time transaction processing techniques into MLS/DBMSs. In <ref> (Son 1993 and David 1995) </ref>, the security impact on real-time database systems is studied, but to the best of our knowledge, no work has been reported on developing DBMSs that are multilevel secure and that support real-time requirements. <p> For a more detailed description of the problem of concurrency control in secure databases, the reader is referred to <ref> (David and Son 1993, David et al 1995) </ref>. In this paper, we concern ourselves with concurrency control mechanisms that have to satisfy both security and real-time requirements. In particular, we deal with database security that allows read-down (Simple security property) but does not allow write-up (Ammann et al 1992).
References-found: 16

