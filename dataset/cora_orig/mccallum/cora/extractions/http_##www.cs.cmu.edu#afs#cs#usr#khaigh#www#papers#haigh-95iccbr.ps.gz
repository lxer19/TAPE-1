URL: http://www.cs.cmu.edu/afs/cs/usr/khaigh/www/papers/haigh-95iccbr.ps.gz
Refering-URL: http://www.cs.cmu.edu/afs/cs/usr/khaigh/www/papers/haigh-95iccbr.abstract.html
Root-URL: http://www.cs.cmu.edu
Email: khaigh@cs.cmu.edu, mmv@cs.cmu.edu  
Title: Route Planning by Analogy  
Author: Karen Zita Haigh and Manuela Veloso 
Address: Pittsburgh PA 15213-3891  
Affiliation: School of Computer Science Carnegie Mellon University  
Abstract: There have been several efforts to create and use real maps in computer applications that automatically find good map routes. In general, online map representations do not include information that may be relevant for the purpose of generating good realistic routes, including for example traffic patterns, construction, or number of lanes. Furthermore, the notion of a good route is dependent on a variety of factors, such as the time of the day, and may also be user dependent. This motivation leads to our work on the accumulation and reuse of previously traversed routes as cases. In this paper, we demonstrate our route planning method which retrieves and reuses multiple past routing cases that collectively form a good basis for generating a new routing plan. We briefly present our similarity metric for retrieving a set of similar routes. The metric effectively takes into account the geometric and continuous-valued characteristics of a city map. We then present the replay mechanism and how the planner produces the route plan by analogizing from the retrieved similar past routes. We discuss in particular the strategy used to merge a set of cases and generate the new route. We use illustrative examples and show some empirical results from a detailed online map of the city of Pittsburgh containing over 18,000 intersections and 25,000 street segments.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Jaime G. </author> <title> Car bon ell, and the PRODIGY Research Group. PRODIGY4.0: The manual and tutorial. </title> <type> Technical Report CMU-CS-92-150, </type> <institution> School of Computer Science, Carnegie Mellon University, </institution> <month> June </month> <year> 1992. </year>
Reference-contexts: Section 4 presents the analogical reuse of the multiple cases. Section 5 discusses empirical results and Section 6 describes related work. Finally, Section 7 draws conclusions on this work. 2 Representation of the Map Domain Our current implementation uses the prodigy planner <ref> [1] </ref> and its analogical reasoning capabilities [11].
Reference: [2] <author> Ashok Goel and et al. </author> <title> Multistrategy adaptive path planning. </title> <journal> IEEE Expert, </journal> <volume> 6(6) </volume> <pages> 57-65, </pages> <month> December </month> <year> 1994. </year>
Reference-contexts: Router (developed by Goel et. al <ref> [2] </ref>) and R-Finder (developed by Liu et. al [6]) are the only other case-based route-planning systems the authors are aware of. However they both have extremely simple retrieval and modification algorithms, considerably reducing the transfer rate of prior experience.
Reference: [3] <author> Richard Goodwin and Reid Simmons. </author> <title> Rational handling of multiple goals for mobile robots. </title> <editor> In J. Hendler, editor, </editor> <booktitle> Artificial Intelligence Planning Systems: Proceedings of the First International Conference (AIPS92), </booktitle> <month> June </month> <year> 1992. </year>
Reference-contexts: With the learning methods described previously (see [5]), the map information and the knowledge about the quality of each case improves with experience. 6 Related Work Most robotics path planners (e.g. Dyna [7], columbus [9], Xavier <ref> [3] </ref>, NavLab [8]) don't remember paths or their quality, and typically use shortest path, dynamic programming or decision theoretic algorithms to determine routes.
Reference: [4] <author> Karen Zita Haigh and Jon athan Richard Shewchuk. </author> <title> Geometric similarity metrics for case-based reasoning. In Case-Based Reasoning: </title> <booktitle> Working Notes from the AAAI-94 Workshop, </booktitle> <pages> pages 182-187, </pages> <address> Seattle, WA, </address> <month> August </month> <year> 1994. </year> <note> AAAI Press. </note>
Reference-contexts: In previous papers, we presented several aspects of this project, including the similarity metric which effectively takes into account the natural geometric and continuous-valued characteristics of the map domain <ref> [4] </ref>, and a discussion of the learning opportunities potentially offered by the real execution of the proposed planned routes [5]. The main focus of this paper is on presenting how the planning algorithm reuses the multiple similar retrieved cases. The paper is organized as follows. <p> The following subsections describe our method for storing and retrieving routes. More detailed information regarding case retrieval (including run-time and efficiency results) can be found in a previous paper <ref> [4] </ref>. 3.1 Case Representation and Indexing When prodigy generates a plan, the detailed derivational trace of the successful planning episode is stored as a single case that can be multiply-indexed. Failed search decisions are annotated to be avoided at reuse time. <p> Finding a similarity metric that is both effective and fast is a difficult task for the researcher. It is sufficiently difficult that many existing CBR systems identify neither multiple cases nor partial cases at all. The metric developed by Haigh and Shewchuk <ref> [4] </ref> effectively takes into account the geometric and continuous-valued characteristics of a city map, and can generate multiple and partial cases. Suppose we undertake to plan a route on our map from some initial location i to some goal location g.
Reference: [5] <author> Karen Zita Haigh, Jon athan Richard Shewchuk, and Manuela M. Veloso. </author> <title> Route planning and learning from execution. </title> <booktitle> In Working notes from the AAAI Fall Symposium "Planning and Learning: On to Real Applications", </booktitle> <pages> pages 58-64, </pages> <address> New Orleans, LA, </address> <month> November </month> <year> 1994. </year> <note> AAAI Press. </note>
Reference-contexts: In previous papers, we presented several aspects of this project, including the similarity metric which effectively takes into account the natural geometric and continuous-valued characteristics of the map domain [4], and a discussion of the learning opportunities potentially offered by the real execution of the proposed planned routes <ref> [5] </ref>. The main focus of this paper is on presenting how the planning algorithm reuses the multiple similar retrieved cases. The paper is organized as follows. <p> An equivalent search process is performed if a case step becomes invalidated, for example, in a situation where the past case uses a segment (e.g. a bridge) that is not available in the current map. The map is updated by executions to reflect the change (see <ref> [5] </ref>) while the past cases still refer to the unavailable segment. We do not alter the cases since it could be computationally expensive in a large case library; instead we modify the fi values of the case to reflect its poor quality. <p> With the learning methods described previously (see <ref> [5] </ref>), the map information and the knowledge about the quality of each case improves with experience. 6 Related Work Most robotics path planners (e.g.
Reference: [6] <author> Bing Liu and et al. </author> <title> Integrating case-based reasoning, knowledge-based approach and Dijkstra algorithm for route finding. </title> <booktitle> In Proceedings of the Tenth Conference on Artificial Intelligence for Applications, </booktitle> <pages> pages 149-55, </pages> <address> San Antonia, TX, </address> <month> March </month> <year> 1994. </year>
Reference-contexts: The experiments here are focused on the topic of this paper and do not address the complete goal of our work. It has been claimed that complex adaptation strategies can be dangerous because it is difficult to guarantee a good final solution <ref> [6] </ref>. Our goal in these experiments, therefore, was to show that our method of selecting similar cases and subsequently merging them produces reasonable routes to new problems. The experiments we describe have been performed on a portion of the real map of Pittsburgh with approximately 18,000 intersections. <p> Router (developed by Goel et. al [2]) and R-Finder (developed by Liu et. al <ref> [6] </ref>) are the only other case-based route-planning systems the authors are aware of. However they both have extremely simple retrieval and modification algorithms, considerably reducing the transfer rate of prior experience.
Reference: [7] <author> Richard S. Sutton. </author> <title> Planning by incremental dynamic programming. </title> <booktitle> In Machine Learning: Proceedings of the 8 th International Workshop, </booktitle> <pages> pages 353-357. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference-contexts: With the learning methods described previously (see [5]), the map information and the knowledge about the quality of each case improves with experience. 6 Related Work Most robotics path planners (e.g. Dyna <ref> [7] </ref>, columbus [9], Xavier [3], NavLab [8]) don't remember paths or their quality, and typically use shortest path, dynamic programming or decision theoretic algorithms to determine routes.
Reference: [8] <editor> Charles E. Thorpe, editor. </editor> <address> The CMU Navlab. </address> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1990. </year>
Reference-contexts: With the learning methods described previously (see [5]), the map information and the knowledge about the quality of each case improves with experience. 6 Related Work Most robotics path planners (e.g. Dyna [7], columbus [9], Xavier [3], NavLab <ref> [8] </ref>) don't remember paths or their quality, and typically use shortest path, dynamic programming or decision theoretic algorithms to determine routes.
Reference: [9] <author> Sebastian B. Thrun. </author> <title> Exploration and model building in mobile robot domains. </title> <booktitle> In Proceedings of the IEEE International Conference on Neural Networks, </booktitle> <address> San Francisco, CA, </address> <month> March </month> <year> 1993. </year>
Reference-contexts: With the learning methods described previously (see [5]), the map information and the knowledge about the quality of each case improves with experience. 6 Related Work Most robotics path planners (e.g. Dyna [7], columbus <ref> [9] </ref>, Xavier [3], NavLab [8]) don't remember paths or their quality, and typically use shortest path, dynamic programming or decision theoretic algorithms to determine routes.
Reference: [10] <author> Manuela M. Veloso. </author> <title> Automatic storage, retrieval, and replay of multiple cases. In Preprints of the AAAI 1992 Spring Symposium Series, Workshop on Computational Considerations in Supporting Incremental Modification and Reuse, </title> <publisher> Stanford University, </publisher> <address> CA, </address> <month> March </month> <year> 1992. </year>
Reference-contexts: The general prodigy/analogy replay algorithm is domain-independent and is designed to replay multiple cases, and is capable of merging cases in several different manners. (Merge modes include sequential, interleaved, guided and random. <ref> [10] </ref>.) The replay procedure provides guidance to the general choice points of the planner. In this domain, the retrieval procedure returns a list of cases, C 1 ; : : : ; C n , ordered according to the sequence in which the metric believes they should be reused.
Reference: [11] <author> Manuela M. Veloso. </author> <title> Planning and Learning by Analogical Reasoning. </title> <publisher> Springer Verlag, </publisher> <month> December </month> <year> 1994. </year>
Reference-contexts: Section 4 presents the analogical reuse of the multiple cases. Section 5 discusses empirical results and Section 6 describes related work. Finally, Section 7 draws conclusions on this work. 2 Representation of the Map Domain Our current implementation uses the prodigy planner [1] and its analogical reasoning capabilities <ref> [11] </ref>. <p> Go to step 2. 23. Return the plan P . Table 1: Sketch of Serial Analogical Replay of a Sequence of Cases. 4 Route Planning by Analogy We follow the analogical replay strategy developed by Veloso <ref> [11] </ref> in prodigy/ analogy. The replay technique involves a closely coupled interaction between planning using the domain theory (operators and other static knowledge of the world) and modification of a set of similar cases. <p> In this sense, the use of multiple cases in this domain 1 A single problem can consist of multiple goals, but the similarity metric is only called for a single source/goal pair. differs from the use of multiple cases in other planning domains where different cases cover different top-level goals <ref> [11] </ref>. In the route planning domain, prodigy/analogy is set to use a sequential merging strategy to combine the cases. Because of the partial match between the cases and the new situation, the replay algorithm is prepared to do any needed extra planning.
References-found: 11

