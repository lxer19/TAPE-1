URL: ftp://ftpipr.ira.uka.de/pub/projects/BRA7274_B-Learn_II/papers/ewlr95mn.ps.gz
Refering-URL: http://wwwipr.ira.uka.de/~kaiser/events/ewlr3/ewlr3prog.html
Root-URL: 
Title: LEARNING APPROACHES TO CONTACT ESTIMATION IN ASSEMBLY TASKS WITH ROBOTS  
Author: M. Nuttin J. Rosell flfl R. Suarez flfl H. Van Brussel L. Basa~nez flfl and J. Hao 
Keyword: Key Words. Exemplar based Learning, Robotic Assembly, Fine-motion Planning, Contact States.  
Address: Celestijnenlaan 300 B, B-3001 Heverlee, BELGIUM.  (UPC-CSIC), Diagonal 647, 08028 Barcelona, SPAIN.  
Affiliation: K.U.Leuven-PMA,  flfl Instituto de Cibernetica  
Abstract: Fast and accurate contact estimation during assembly operations is an important requirement to guarantee successful executions using fine-motion planners. In this context, learning methods provide an attractive alternative to complicated analytical approaches. In order to generate examples of correct contact classifications for the learning process, a method has been developed. Then, starting from a data base of examples, three inductive learning approaches have been followed: backpropagation nets, radial basis function nets and classification trees. The comparison between the approaches is made based on the following criteria: accuracy, convergence speed, on-line estimation speed, compactness of representation, ease of use, and the possibility of interpretation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Baroglio, A. Giordana and R. Piola, </author> <title> "Learn ing control functions for industrial robots", </title> <booktitle> Proceedings of the "Workshop on Robotics", Machine Learning Conference, </booktitle> <address> New Brunswick, New Jersey. </address> <year> 1994. </year>
Reference-contexts: For a fair comparison, the training set used for the ANN approach must still be split up into a training set and a pruning set for the tree approach. Refer to [3] and <ref> [1] </ref> for details on the algorithms used. Results with classification trees Using the classification tree approach, (without any tuning of parameters), an accuracy of 98% is obtained on the training set, and an accuracy of 84% on the test set.
Reference: [2] <author> L. Basa~nez and R. </author> <title> Suarez, "Uncertainty Mod elling in Configuration Space for Robotic Motion Planning", </title> <booktitle> Proc. of the SYROCO'91, Vi-enna, Austria, </booktitle> <pages> pp. 675-680, </pages> <year> 1991. </year>
Reference-contexts: The exact configurations in which each situation can be reached depend on the deviations of geometric characteristics: object shape and size, robot positioning, and undesired slippings of the object in the robot gripper. The effect of these sources of geometric uncertainty on the contact configurations has been modeled in <ref> [2] </ref>, and the effect produced on the possible reaction forces is analyzed in [28].
Reference: [3] <author> L. Breiman, J. H. Friedman, R. A. Olshen, and C. J. Stone, </author> <title> Classification And Regression Trees, The Wadsworth Statistics/Probability Series, </title> <publisher> Wadsworth, </publisher> <year> 1984. </year>
Reference-contexts: A test, based on a single feature vector, is associated to every non-terminal node. This test is also called the split criterion. Each terminal node is associated with a target class. Algorithms to build the trees from data are described in <ref> [3] </ref> which solve the following problems: (1) how to find good splits, (2) when to stop splitting and (3) how to assign a class to a terminal node. A tree is built by repeated splitting of a data set into subtrees. <p> For a fair comparison, the training set used for the ANN approach must still be split up into a training set and a pruning set for the tree approach. Refer to <ref> [3] </ref> and [1] for details on the algorithms used. Results with classification trees Using the classification tree approach, (without any tuning of parameters), an accuracy of 98% is obtained on the training set, and an accuracy of 84% on the test set.
Reference: [4] <author> D. S. Broomhead and D. </author> <title> Lowe (1988), "Mul tivariable functional interpolation and adaptive networks," Complex Systems, Vol.2, </title> <publisher> pp.321-355. </publisher>
Reference-contexts: The classifications are reported in percentages. A Radial Basis Function (RBF) net is yet another feedforward type of neural net and is attracting more and more attention from researchers for its unique properties in solving problems like function approximation, prediction and classification. A RBF neural net <ref> [4] </ref> is a two-layer feedforward network with the first layer of RBF neurons and the second layer of linear neurons as shown in figure 5. Adjustable weights among the neurons only exist from the neurons in the first layer to those in the second layer.
Reference: [5] <author> S.J. Buckley, </author> <title> "Planning and Teaching Compli ant Motion Strategies", MIT Artificial Intelligence Lab., </title> <type> report AI-TR-936 (Ph.D Thesis), </type> <year> 1987. </year>
Reference-contexts: These two problems are not completely disjoint; in fact, there exist some approaches (e.g. reactive control [10] [21] and specific compliance matrix generation [26] [12]) including the strategy in the controller behaviour level. On the other hand, several approaches build a plan independently of the control solution [15] <ref> [5] </ref> [7] [29], determining a proper robot command to proceed the assembly from any task state.
Reference: [6] <author> S. Chen, C.F.N. Cowan and P.M. Grant, </author> <title> "Or thogonal least squares learning algorithm for radial basis function networks," </title> <journal> IEEE Trans. Neural Networks, Vol.2, No.2, </journal> <volume> pp.302-309, </volume> <year> 1991. </year>
Reference-contexts: The other class of algorithms integrates the determination of the structural parameters and the weight matrix in one process. Examples of these type of algorithms are the Orthogonal Least Squares (OLS) learning algorithm <ref> [6] </ref> and the Resource-Allocating Network (RAN)[23]. In this work, the OLS learning algorithm (Appendix B) has been adopted for the RBF net. Results with RBF nets The only design parameter as input of the algorithm described above, is the spread parameter i in equation 3. <p> APPENDIX B: OLS LEARNING ALGORITHM The Orthogonal Least Squares learning algorithm integrates the determination of the structural parameters and the weight matrix in one process <ref> [6] </ref>.
Reference: [7] <author> G. Dakin, </author> <title> "Fine-motion planning for robotic assembly in local contact space". </title> <type> Ph.D. Thesis, </type> <institution> Univerity of Massachusetts, </institution> <address> Amherst, MA, </address> <year> 1994. </year>
Reference-contexts: These two problems are not completely disjoint; in fact, there exist some approaches (e.g. reactive control [10] [21] and specific compliance matrix generation [26] [12]) including the strategy in the controller behaviour level. On the other hand, several approaches build a plan independently of the control solution [15] [5] <ref> [7] </ref> [29], determining a proper robot command to proceed the assembly from any task state.
Reference: [8] <author> H. Demuth and M. Beale. </author> <title> Neural Network Tool box. The Math Works Inc., Cochituate Place, 24 Prime Park Way, </title> <address> Natick, Massachusetts 01760, </address> <year> 1994. </year>
Reference-contexts: The classical backpropagation algorithm was used, modified with momentum and a variable learning rate [33]. The networks were initialized with the Nguyen-Widrow initialization method [19]. Network with various number of hidden neurons were trained in order to find a network with the best generalization capability. MATLAB's neural toolbox <ref> [8] </ref> was used for this part of the experiment. Best results on the test set were obtained using a single layer, 15 hidden neurons with hyperbolic tangent activation function, and linear output neurons. In this case, the misclassification rate on an independent test set was 3.2%.
Reference: [9] <author> R.S. Desai and R.A. </author> <title> Volz "Identification and verification of termination conditions in fine-motion in presence of sensor errors and geometric uncertainties", </title> <booktitle> Proceedings of the 1989 IEEE International Conference on Robotics and Automation, </booktitle> <address> Arizona, USA, </address> <pages> pp. 800-807. </pages>
Reference-contexts: Previous works in this line are mainly based on the on-line execution of test movements to disambiguate contact situations [27] but they may change the task state in an undesired way, or on geometric reasonings <ref> [9] </ref> [35] by considering the models of the objects and the different sources of uncertainty. A new approach, including learning techniques, has been presented in [31], where its advantages and disadvantages in comparison with an analytical geometric approach are discussed.
Reference: [10] <author> V. Gullapalli, A. G. Barto and R. A. </author> <title> Gru pen, "Learning Admittance Mappings for Force-guided Assembly", </title> <booktitle> Proceedings of the 1994 IEEE International Conference on Robotics and Automation, </booktitle> <address> pp.2633-2638. </address>
Reference-contexts: These two problems are not completely disjoint; in fact, there exist some approaches (e.g. reactive control <ref> [10] </ref> [21] and specific compliance matrix generation [26] [12]) including the strategy in the controller behaviour level. On the other hand, several approaches build a plan independently of the control solution [15] [5] [7] [29], determining a proper robot command to proceed the assembly from any task state.
Reference: [11] <author> J. Hao, S. Tan and J. Vandewalle, </author> <title> "Predictive control of nonlinear systems based on identification by backpropagation networks," </title> <journal> International Journal of Neural Systems, </journal> <note> in press, </note> <year> 1994 </year>
Reference: [12] <author> S. Hirai and K. Iwata, </author> <title> "Derivation of Damp ing Control Parameters Based on Geometric Model", </title> <booktitle> Proceedings of the 1993 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pp. 87-92. </pages>
Reference-contexts: These two problems are not completely disjoint; in fact, there exist some approaches (e.g. reactive control [10] [21] and specific compliance matrix generation [26] <ref> [12] </ref>) including the strategy in the controller behaviour level. On the other hand, several approaches build a plan independently of the control solution [15] [5] [7] [29], determining a proper robot command to proceed the assembly from any task state.
Reference: [13] <author> K. Hornik, M. Stinchcombe and H. White, </author> <title> "Multilayer feedforward networks are universal approximators," Neural Net., </title> <type> Vol.2, </type> <institution> pp.359-366, </institution> <year> 1989. </year>
Reference-contexts: Typical examples for such function are a sigmoid and a hyperbolic tangent function, which are also used in our approach. One of the most important properties of backpropagation nets relevant to the problems of classification and identification is the so-called universal approximation <ref> [13] </ref>, which means that with enough but finite number of hidden neurons there always exist a set of weights such that the network can approximate any nonlinear function to a desired accuracy.
Reference: [14] <author> W.Y. Huang and R.P. Lippmann, </author> <title> "Neural net and traditional classifiers," Neural Information Processing Systems, </title> <editor> Ed. D.Z. Anderson, pp.387-396, </editor> <year> 1988. </year>
Reference-contexts: The backpropagation net is one of the earliest and most extensively studied networks in the artificial neural network field. It has been very successfully used in applications of nonlinear system identification and control [18][11], function approximation and various classification problems <ref> [14] </ref>. The use of a backpropagation net for a particular classification problem, needs a reasonably large set of training data which is composed of inputs and the corresponding desired outputs and a set of test data which is used to validate the network after training.
Reference: [15] <author> T. Lozano Perez, M. Mason and R. Taylor, </author> <title> "Au tomatic Synthesis of Fine-Motion Strategies for Robots", </title> <journal> The Int. Journal of Robotics Research, </journal> <volume> 3 (1), </volume> <pages> pp. 3-24, </pages> <year> 1984. </year>
Reference-contexts: These two problems are not completely disjoint; in fact, there exist some approaches (e.g. reactive control [10] [21] and specific compliance matrix generation [26] [12]) including the strategy in the controller behaviour level. On the other hand, several approaches build a plan independently of the control solution <ref> [15] </ref> [5] [7] [29], determining a proper robot command to proceed the assembly from any task state.
Reference: [16] <author> S. Lee and R.M. Kil, </author> <title> "Multilayer feedforward potential function network," </title> <booktitle> Proc. IEEE Intern. Conf. Neural Net., </booktitle> <volume> Vol. 1, pp.161-171, </volume> <year> 1988. </year>
Reference-contexts: It can be a vector or even a matrix as in [24] <ref> [16] </ref>. [z 1 (x) z 2 (x) z n (x)] T 2 IR n and W 2 IR mfin with w ij being the ijth element of W .
Reference: [17] <author> M. </author> <title> Mason "Compliant Motion". Robot Motion, </title> <editor> M. Brady et al. eds. </editor> <publisher> Cambridge: MIT Press, </publisher> <year> 1983. </year>
Reference-contexts: A first solution to deal with geometric uncertainties in assembly has been the use of passive compliance [34], successfully applied in industrial tasks. A second and more general solution is the use of active compliance, which avoids the lack in flexibility of the passive devices <ref> [17] </ref>.
Reference: [18] <author> K. S. Narendra and K. Parthasarathy, </author> <title> "Identi fication and control of dynamical systems using neural networks," </title> <journal> IEEE Trans. on Neural Networks, Vol.1, </journal> <volume> pp.4-27, </volume> <year> 1990. </year>
Reference: [19] <author> D. Nguyen and B. Widrow, </author> <title> "Improving the learning speed of 2-layer neural networks by choosing initial values of the adaptive weights", </title> <booktitle> International Joint Conference of Neural Networks, </booktitle> <volume> volume 3, </volume> <pages> pages 21-26, </pages> <month> July </month> <year> 1990. </year>
Reference-contexts: The classical backpropagation algorithm was used, modified with momentum and a variable learning rate [33]. The networks were initialized with the Nguyen-Widrow initialization method <ref> [19] </ref>. Network with various number of hidden neurons were trained in order to find a network with the best generalization capability. MATLAB's neural toolbox [8] was used for this part of the experiment.
Reference: [20] <author> M. Nuttin, A. Giordana, M. Kaiser and R. Suarez R. B-learnII, </author> <title> workpackage 2, compliant motion in assembly. Deliverable 203 ESPRIT BRA Project No. </title> <type> 7274, </type> <institution> Sept.1994 </institution>
Reference-contexts: From these models, a three degrees of freedom task simulator has been implemented, with the capability of showing the task evolution in the physical, the configuration and the force spaces simultaneously, considering uncertainty and friction forces <ref> [20] </ref>. state 1 state 2 state 3 state 8 state 7 state 6 state 5 state 4state 9 Generation of training and test sample sets The data sets of training and test data have been generated with the above simulator.
Reference: [21] <author> M. Nuttin, H. Van Brussel, C. Baroglio and R. Piola, </author> <title> "Fuzzy Controller Synthesis in robotic assembly: Procedure and experiments", </title> <booktitle> FUZZ-IEEE94: Third International Conference on Fuzzy Systems, World Congress on Computational Intelligence, </booktitle> <year> 1994. </year>
Reference-contexts: These two problems are not completely disjoint; in fact, there exist some approaches (e.g. reactive control [10] <ref> [21] </ref> and specific compliance matrix generation [26] [12]) including the strategy in the controller behaviour level. On the other hand, several approaches build a plan independently of the control solution [15] [5] [7] [29], determining a proper robot command to proceed the assembly from any task state.
Reference: [22] <author> J. Park and I. W. Sandberg, </author> <title> "Universal approx imation using radial-basis-function networks," Neural Computation, </title> <type> Vol.3, </type> <institution> pp.246-257, </institution> <year> 1990. </year>
Reference-contexts: number of RBF neurons in the first layer and a proper setting of the parameters p i and i , there exists a weight matrix W such that the neural net with W can approximate, to an arbitrary precision, any continuous nonlinear function on a compact set (bounded and closed) <ref> [22] </ref>. This property is seen as a justification for RBF neural nets to be used as a generic model structure for classification problems. Another important feature of RBF nets is their linear-in-the-weights type of structure as shown in (2).
Reference: [23] <author> J. Platt, </author> <title> "A resource-allocation network for functional approximation," </title> <journal> Neural Computation, </journal> <volume> Vol. 3, pp.213-225, </volume> <year> 1991. </year>
Reference: [24] <author> M. Roscheisen et.al, </author> <title> "Incorporating prior knowl edge in parsimonious networks of locally-tuned units," </title> <type> Siemens Technical Report TR-FKI-155-91, </type> <year> 1991. </year>
Reference-contexts: It can be a vector or even a matrix as in <ref> [24] </ref> [16]. [z 1 (x) z 2 (x) z n (x)] T 2 IR n and W 2 IR mfin with w ij being the ijth element of W .
Reference: [25] <author> R. M. Sanner and J. E. Slotine, </author> <title> "Gaussian net works for direct adaptive control," </title> <journal> IEEE Trans. Neural Net., </journal> <volume> Vol. 3, pp.837-863, </volume> <year> 1992. </year>
Reference-contexts: One class of algorithms perform the design task in two steps; first determine the structural parameters in some way (e.g. random selecting from the data points, using a clustering method, or using the spatial Fourier transform theory <ref> [25] </ref>) and then calculate the weight matrix using, e.g., error model based method [32]. The other class of algorithms integrates the determination of the structural parameters and the weight matrix in one process.
Reference: [26] <author> J. M. Schimmels and M. A. </author> <title> Peshkin, "Syn thesis and Validation of Non-Diagonal Accommodation Matrices for Error-Corrective Assembly", </title> <booktitle> Proceedings of the IEEE 1990 International Conference on Robotics and Automation, </booktitle> <address> pp.714-719. </address>
Reference-contexts: These two problems are not completely disjoint; in fact, there exist some approaches (e.g. reactive control [10] [21] and specific compliance matrix generation <ref> [26] </ref> [12]) including the strategy in the controller behaviour level. On the other hand, several approaches build a plan independently of the control solution [15] [5] [7] [29], determining a proper robot command to proceed the assembly from any task state.
Reference: [27] <author> M. </author> <title> Spreng, "A probabilistic Method to Analyze Ambiguous Contacts Situations", </title> <booktitle> Proceedings of the IEEE 1993 International Conference on Robotics and Automation, Atlanta, USA, </booktitle> <volume> Vol. </volume> <pages> 3 pp. 543-548. </pages>
Reference-contexts: Task states are defined here as the different contact situations between the objects to be assembled (i.e. the possible different sets of basic contacts) [30]. Previous works in this line are mainly based on the on-line execution of test movements to disambiguate contact situations <ref> [27] </ref> but they may change the task state in an undesired way, or on geometric reasonings [9] [35] by considering the models of the objects and the different sources of uncertainty.
Reference: [28] <author> R. Suarez, L. Basa~nez and J. Rosell, </author> <title> "Assem bly Contact Force Domains in the Presence of Uncertainty", </title> <booktitle> Proc. of the SYROCO'94, </booktitle> <address> Capri, Italy, </address> <year> 1994. </year>
Reference-contexts: The effect of these sources of geometric uncertainty on the contact configurations has been modeled in [2], and the effect produced on the possible reaction forces is analyzed in <ref> [28] </ref>.
Reference: [29] <author> R. Suarez and L. Basa~nez, </author> <title> "Assembly With Robots in Presence of Uncertainty", </title> <booktitle> Proc. of the 22nd ISIR, </booktitle> <address> Detroit, USA, </address> <pages> pp. 19/1-19/15, </pages> <year> 1991. </year>
Reference-contexts: On the other hand, several approaches build a plan independently of the control solution [15] [5] [7] <ref> [29] </ref>, determining a proper robot command to proceed the assembly from any task state.
Reference: [30] <author> R. Suarez and L. Basa~nez, </author> <title> "Fine Motion Plan ning in Presence of Uncertainty", </title> <booktitle> II European Workshop on Learning Robots, </booktitle> <address> Torino, Italy, pp.143-164 ,1993. </address>
Reference-contexts: Task states are defined here as the different contact situations between the objects to be assembled (i.e. the possible different sets of basic contacts) <ref> [30] </ref>.
Reference: [31] <author> R. Suarez, L. Basa~nez, M. Nuttin, H. Van Brus sel and J. Rosell, </author> <title> "Learning versus Analytical Approach to Contact Estimation in Assembly Tasks with Robots", </title> <type> Technical Report IC-DT 9501, </type> <institution> and KUL-PMA 95R02, </institution> <year> 1995. </year>
Reference-contexts: A new approach, including learning techniques, has been presented in <ref> [31] </ref>, where its advantages and disadvantages in comparison with an analytical geometric approach are discussed. As a further step, in this paper, a comparison of three different learning techniques applied to the estimation of the current contact situation between the objects is presented, including some experimental results. <p> Classification trees are the fastest as they need to evaluate a maximum of 20 inequalities. RBF nets require more time than backpropagation nets, because they have more neurons (120 versus 15). All these learning approaches have better estimation times than the analytical approach <ref> [31] </ref>. This real-time aspect is also related to the compactness of representation. As memory requirement is not a problem for the application, the compactness of representation is only important with respect to the generalization capability. The design of a RBF net is easier than the design of a backpropagation net.
Reference: [32] <author> S. Tan, J. Hao and J. Vandewalle, </author> <title> "Stable and efficient neural network modeling of discrete multi-channel signals," </title> <journal> IEEE Trans. Circuits Syst., </journal> <note> in press, </note> <year> 1994. </year>
Reference-contexts: One class of algorithms perform the design task in two steps; first determine the structural parameters in some way (e.g. random selecting from the data points, using a clustering method, or using the spatial Fourier transform theory [25]) and then calculate the weight matrix using, e.g., error model based method <ref> [32] </ref>. The other class of algorithms integrates the determination of the structural parameters and the weight matrix in one process. Examples of these type of algorithms are the Orthogonal Least Squares (OLS) learning algorithm [6] and the Resource-Allocating Network (RAN)[23].
Reference: [33] <author> T.P. Vogl, J.K. Mangis, A.K. Rigler, W.T. Zink and D.L. Alkon, </author> <title> "Accelerating the convergence of the backpropagation method", </title> <journal> Biological Cybernetics Vol. </journal> <volume> 59, </volume> <pages> pp. 257-263, </pages> <year> 1988. </year>
Reference-contexts: The classical backpropagation algorithm was used, modified with momentum and a variable learning rate <ref> [33] </ref>. The networks were initialized with the Nguyen-Widrow initialization method [19]. Network with various number of hidden neurons were trained in order to find a network with the best generalization capability. MATLAB's neural toolbox [8] was used for this part of the experiment.
Reference: [34] <author> D. Whitney and J. Nevins, </author> <title> "What is the Remote Center of Compliance (RCC) and what can it do?", </title> <booktitle> Proceedings of the 9th International Symposium on Industrial Robots, </booktitle> <address> Washington DC, USA, </address> <pages> pp. 135-152, </pages> <year> 1979. </year>
Reference-contexts: A first solution to deal with geometric uncertainties in assembly has been the use of passive compliance <ref> [34] </ref>, successfully applied in industrial tasks. A second and more general solution is the use of active compliance, which avoids the lack in flexibility of the passive devices [17].
Reference: [35] <author> J. Xiao, </author> <title> "Automatic Determination of Topolog ical Contacts in the Presence of Sensing Uncertainties", </title> <booktitle> Proceedings of the 1993 IEEE International Conference on Robotics and Automation, Atlanta, USA, </booktitle> <volume> Vol. </volume> <pages> 1 pp. 65-70. </pages>
Reference-contexts: Previous works in this line are mainly based on the on-line execution of test movements to disambiguate contact situations [27] but they may change the task state in an undesired way, or on geometric reasonings [9] <ref> [35] </ref> by considering the models of the objects and the different sources of uncertainty. A new approach, including learning techniques, has been presented in [31], where its advantages and disadvantages in comparison with an analytical geometric approach are discussed.
References-found: 35

