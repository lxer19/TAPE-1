URL: ftp://ftp.eecs.umich.edu/people/rundenst/papers/r-95-20.ps
Refering-URL: ftp://ftp.eecs.umich.edu/people/rundenst/papers/INDEX.html
Root-URL: http://www.cs.umich.edu
Email: e-mail: [ywh j jning j rundenst] @eecs.umich.edu  
Title: Hierarchical Path Views: A Model Based on Fragmentation and Transportation Road Types  
Author: Yun-Wu Huangy, Ning Jingz, and Elke A. Rundensteinery 
Address: Ann Arbor, MI48109  Changsha, Hunan, China  
Affiliation: Dept. of Electrical Engineering and Computer Science, Univ. of Michigan,  Dept. of Electrical Engineering, Changsha Institute of Technology,  
Abstract: Efficient path query processing necessary for route guidance has been identified as one of the key requirements for Intelligent Transportation Systems (ITS) applications. While precomputing the view of all shortest paths provides the most efficient path retrieval, the view maintenance and storage costs become unrealistic for large ITS networks. Based on ITS road type classification, we propose a hierarchical path view approach, in which the path view maintenance and storage costs are dramatically reduced at the cost of negligible loss of path optimality. Comparing with the traditional ITS path finding approaches that use A fl or hierarchical A fl , our hierarchical approach is superior in three areas: 1) path search is more efficient, 2) the connecting point from the low-level roads to the high-level roads and vice versa are dynamically determined based on the most recent traffic, 3) within one region, the high-level traffic can be dynamically rerouted through the low-level roads. In this paper, we conduct experiments to gain insight into the performance of our proposed algorithms and model, as well as to contrast the difference in computational resource requirements between the hierarchical path view and the A fl algorithms. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Aho, A. V., Hopcroft, J. E., Ullman, J. D., </author> <title> "The Design and Analysis of Computer Algorithms", </title> <publisher> Addison-Wesley, </publisher> <year> 1974, </year> <pages> pp. 207 - 209. </pages>
Reference-contexts: The color sets GREEN and RED in G c are first created by the 2 Color P aint algorithm. For each node i in the RED set, the T CD algorithm calls the Dijkstra (i) 6 <ref> [1] </ref> to compute the single-source shortest path transitive closure for node i.
Reference: [2] <author> Agrawal, R., Dar, S., and Jagadish, H. V., </author> <title> "Direct Transitive Closure Algorithms: Design and Performance Evaluation," </title> <journal> ACM Transactions on Database Systems, </journal> <volume> Vol. 15, No. 3, </volume> <month> Sep. </month> <year> 1990, </year> <pages> pp. 427 - 458. </pages>
Reference-contexts: It also proves our assumption that high-speed roads are generally preferred for inter-regional traffic. 6 RELATED RESEARCH Recently proposed shortest path closure algorithms <ref> [2, 10] </ref> are disk-based. their performances in time are unacceptable for cyclic graphs such as ITS maps. Taking advantages of the ITS graph characteristics, [5] significantly improves the performance for disk-based computation using a dynamic reordering approach that works for small- and mid-sized ITS maps.
Reference: [3] <author> Carr, B. </author> <title> "Graphs and Networks", </title> <publisher> Clarendon Press, Oxford, </publisher> <address> England, </address> <year> 1979. </year>
Reference-contexts: They are path operators in the path algebra developed by Carre <ref> [3] </ref>, and refined by Rosenthal et al.[12], Agrawal et al.[2], and Ioannidis et al.[10].
Reference: [4] <author> Dijkstra, E. W. </author> <title> "A Note on Two Problems in Connection with Graphs", </title> <journal> Numerische Mathematik, </journal> <month> March, </month> <year> 1959, </year> <pages> pp. 269 - 271. </pages>
Reference-contexts: To answer a path query, the TMCs need only to lookup the path view using the requested O-D pair as the keys. Among the shortest path transitive closure algorithms in the literature <ref> [4, 15] </ref>, the Dijkstra algorithm has one of the best worst-case time complexities of O (n 2 log (n)) for ITS networks 2 .
Reference: [5] <author> Yun-Wu Huang, Ning Jing, and Elke A. Rundensteiner, </author> <title> "An ITS Path View Algorithm: The Dynamic Reordering Approach," </title> <institution> University of Michigan, </institution> <note> RCE ITS Center Technical Report, </note> <year> 1995. </year>
Reference-contexts: It also proves our assumption that high-speed roads are generally preferred for inter-regional traffic. 6 RELATED RESEARCH Recently proposed shortest path closure algorithms [2, 10] are disk-based. their performances in time are unacceptable for cyclic graphs such as ITS maps. Taking advantages of the ITS graph characteristics, <ref> [5] </ref> significantly improves the performance for disk-based computation using a dynamic reordering approach that works for small- and mid-sized ITS maps.
Reference: [6] <author> Yun-Wu Huang, Ning Jing, and Elke A. Rundensteiner, </author> <title> "Hierarchical Path Views: A Model Based on Fragmentation and Transportation Road Types," </title> <institution> University of Michigan, </institution> <type> Technical Report, </type> <year> 1995, </year> <note> in preparation. </note>
Reference-contexts: Proof: Proof of this theorem can be found in <ref> [6] </ref>. The time complexity for the regular Dijkstra all-pair shortest path algorithm is O (n 2 fi log (n)) for ITS networks. If g &gt; r fi log (n), then the time complexity for T CD is O (g fi n) with g &lt; n. <p> In this section, we describe the Hierarchical Path Search (HP S), that retrieves a single-pair path from our hierarchical path view model. A formal presentation of the HP S algorithm can be found in <ref> [6] </ref>. The HP S algorithm conducts forward search from the source node and backward search from the destination node simultaneously in a synchronized fashion. Both forward and backward expansions climb the hierarchy of the network.
Reference: [7] <author> Hustma, M. A. W., Apers, P. M. G., and Schipper, G. L. V., </author> <title> "Data Fragmentation for Parallel Transitive Closure Strategies," </title> <booktitle> Proc. of the 9th Int. Conf. on Data Eng., </booktitle> <year> 1993, </year> <pages> pp. 447 - 456. </pages>
Reference-contexts: We use a center-based greedy algorithm <ref> [7] </ref> to fragment the nodes at the same level into regions of smaller size. Every node of the same level must belong to one and only one region. To create f regions, we first pick f center nodes that are evenly distributed in the network. <p> Their system assumes fixed connection points between local streets and freeways, lacking the flexibility in dynamic selection of the connecting points. As a result, the path accuracy rate in their model would be lower than in the model presented in this paper. <ref> [8, 7] </ref> have focused on the hierarchical structures for query optimization by dividing a relation into fragments. Unlike our approach, the actual query result, in our case the path view, is not materialized.
Reference: [8] <author> Hustma, M. A. W., Cacace, F., and Ceri S., </author> <title> "Parallel Hierarchical Evaluation of Transitive Closure Queries," </title> <booktitle> 1st Int. Conf. on Parallel and Distributed Inf. Sys., </booktitle> <year> 1990, </year> <pages> pp. 130 - 137. </pages>
Reference-contexts: Their system assumes fixed connection points between local streets and freeways, lacking the flexibility in dynamic selection of the connecting points. As a result, the path accuracy rate in their model would be lower than in the model presented in this paper. <ref> [8, 7] </ref> have focused on the hierarchical structures for query optimization by dividing a relation into fragments. Unlike our approach, the actual query result, in our case the path view, is not materialized. <p> Unlike our approach, the actual query result, in our case the path view, is not materialized. The fragmentation however prefers relations acyclic in nature, making it less suited for highly cyclic graphs like ITS maps. <ref> [8] </ref> introduces the hierarchical fragment (i.e., the super-graph) that is sensitive to the update of the base relation, a feature undesirable in ITS networks where all link weights could change rapidly.
Reference: [9] <author> IBM/Laurel, </author> <title> "IVHS architecture requirement document", </title> <year> 1994. </year>
Reference-contexts: China. 1 Recently in the ITS architecture development, the IBM/Loral team has been selected by the U.S. Department of Transportation as one of the two teams to continue development of their proposed centralized ITS architecture <ref> [9] </ref>.
Reference: [10] <author> Ioannidis, Y., Ramakrishnan R., and Winger, L., </author> <title> "Transitive Closure Algorithms Based on Graph Traversal," </title> <journal> ACM Trans. on Database Systems, </journal> <volume> Vol. 18, No. 3, </volume> <month> Sep. </month> <year> 1993, </year> <pages> pp. 512 - 576. </pages>
Reference-contexts: It also proves our assumption that high-speed roads are generally preferred for inter-regional traffic. 6 RELATED RESEARCH Recently proposed shortest path closure algorithms <ref> [2, 10] </ref> are disk-based. their performances in time are unacceptable for cyclic graphs such as ITS maps. Taking advantages of the ITS graph characteristics, [5] significantly improves the performance for disk-based computation using a dynamic reordering approach that works for small- and mid-sized ITS maps.
Reference: [11] <author> Jing, N., Huang, Y.W. and Rundensteiner, E., </author> <title> "Shortest Path Queries: A Hierarchical Graph Model and Evaluation," </title> <institution> University of Michigan, </institution> <note> RCE ITS Center Technical Report, </note> <month> July, </month> <year> 1995. </year>
Reference-contexts: In <ref> [11] </ref>, we also proposed a similar fragmentation method to create hierarchical graphs and to generate a path view for each subgraph. It differs from the work in this paper in that it utilizes no ITS road type information and guarantees the path optimality at the cost of reduced efficiency.
Reference: [12] <author> Rosenthal, A., Heiler, S., Dayal, U., and Manola, F., </author> <title> "Traversal Recursion: A Practical Approach to Supporting Recursive Applications," </title> <booktitle> Proc. ACM-SIGMOD 1986, </booktitle> <pages> pp. 166 - 176. </pages>
Reference: [13] <author> Shekar, S., Kohli, A. and Coyle, M., </author> <title> "Path Computation Algorithms for Advanced Traveller Information Systems," </title> <booktitle> IEEE 9th Int. Conf. on Data Engineering, </booktitle> <year> 1993, </year> <pages> pp. 31 - 39. </pages>
Reference-contexts: The widespread deployment of the beacons guarantees that the guided vehicles will travel along the best paths that are continuously computed en route, based on dynamic traffic conditions. Compared to the vehicle-based path finding that typically invokes the A fl algorithm to find paths <ref> [13, 16] </ref>, the centralized approach has the following advantages: 1) no computation device is needed for ITS vehicles, 2) traffic information for each network link need not be disseminated to ITS vehicles. <p> The re-sultng sum is the proposed best path weight from the source to the destination. Similar to the A fl algorithm <ref> [13] </ref>, the HP S is priority-based and adopts the same heuristics for the untraversed section. Therefore, each expansion in HP S results in three values: actual traversed weight from forward expansion (f ), actual traversed weight from backward expansion (b), and estimated weight for the untraversed section (e). <p> The estimate is the euclidean distance between two nodes times the minimum link weight per unit. In the hierarchical A fl approach modeled after <ref> [13] </ref>, each node in the graph has a fixed entry/exit node onto the high-speed links 8 based on the shortest geographic distance. Once the search reaches the entry node of the source node, it stays on the high-speed links until the exit node for the destination is reached.
Reference: [14] <author> Smith, R., </author> <title> "Presentation at the Seim-Annual ITS-RCE Meeting," </title> <institution> University of Michigan, </institution> <year> 1995. </year>
Reference-contexts: Taking advantages of the ITS graph characteristics, [5] significantly improves the performance for disk-based computation using a dynamic reordering approach that works for small- and mid-sized ITS maps. The hierarchical approach presented in this paper offers a more scalable solution for larger ITS maps. <ref> [14] </ref> describes an ITS route guidance model that, based on historical data, uses hierarchical A fl to materialize frequently queried paths. Path retrieval time for the material ized paths thus requires minimum time.
Reference: [15] <author> Warshall, S. </author> <title> "A Theorem on Boolean Matrices," </title> <journal> JACM, </journal> <volume> 9, 1, </volume> <year> 1962, </year> <pages> pp. 11 - 12 </pages>
Reference-contexts: To answer a path query, the TMCs need only to lookup the path view using the requested O-D pair as the keys. Among the shortest path transitive closure algorithms in the literature <ref> [4, 15] </ref>, the Dijkstra algorithm has one of the best worst-case time complexities of O (n 2 log (n)) for ITS networks 2 . <p> sparse graphs, such as the ITS networks, the Dijkstra algorithm has a worst-case time complexity of O (n 2 fi log (n)), where n is the number of nodes in the network as compared to the O (n 3 ) complexity of other algorithms such as W arshall 0 s <ref> [15] </ref> and Depth-first or Breadth-first search. Because an ITS graph is sparse with uniformly low out-degree for each node, it is possible to assign each node one of the two colors, GREEN and RED, such that every outgoing link of a GREEN node connects to a RED node.
Reference: [16] <author> Yang, T. A., Shekhar, S., Hamidzadeh, B. and Han-cock, P. A., </author> <title> "Path Planning and Evaluation in IVHS Databases," </title> <address> VNIS, </address> <year> 1991, </year> <pages> pp. 283 - 290. </pages>
Reference-contexts: The widespread deployment of the beacons guarantees that the guided vehicles will travel along the best paths that are continuously computed en route, based on dynamic traffic conditions. Compared to the vehicle-based path finding that typically invokes the A fl algorithm to find paths <ref> [13, 16] </ref>, the centralized approach has the following advantages: 1) no computation device is needed for ITS vehicles, 2) traffic information for each network link need not be disseminated to ITS vehicles. <p> In HP S, the intra-regional search utilizes the path view for this region while the inter-regional path finding elevates searches to the next level higher. This approach is superior to the more conventional ITS hierarchical path finding <ref> [16] </ref> in the following three areas: 1) The search is more efficient because, instead of expanding individual links, it expands regional sub-paths stored in the precomputed path views of various levels. <p> This is much more flexible than fixed connecting points based on static distance, which cannot reroute the vehicles if the fixed entry is blocked <ref> [16] </ref>. 3) Within one region, if the high level path has a blockage or slow-down, our model can reroute the vehicles through local streets within this region | should such a local path have a better traffic measurement. 2 In fact, the complexity is O (e fi n fi log (n)), <p> Path retrieval time for the material ized paths thus requires minimum time. The average path inaccuracy rate is about 5%. <ref> [16] </ref> presents an ITS path finding system based on ITS road type hierarchy and the A fl algorithm. Their system assumes fixed connection points between local streets and freeways, lacking the flexibility in dynamic selection of the connecting points. <p> Second, within each region traffic can be rerouted from high-level roads to low-level streets based on the same measurements in the path view. Consequently, our experimental results show that the path inaccuracy rate of our model is smaller than that of the hierarchical A fl <ref> [16] </ref>. In conclusion, our proposed ITS hierarchical path view model can better satisfy the ITS path finding requirements, such as real-time path query, dynamic rerouting, and minimum path inaccuracy rate, than the alternatives.
References-found: 16

