URL: http://www.eecs.umich.edu/techreports/cse/1996/CSE-TR-311-96.ps.gz
Refering-URL: http://www.eecs.umich.edu/home/techreports/cse96.html
Root-URL: http://www.eecs.umich.edu
Email: anica j rundenst@eecs.umich.edu  
Phone: fax: 313-763-1503  
Title: The Dynamic Information Integration Model  
Author: Anisoara Nica and Elke Angelika Rundensteiner 
Keyword: Multi- and Heterogeneous Information Systems, Loosely-Specified Queries, Query Refinement, Query Templates, Planning.  
Note: 0 This research has been funded in part by the joint NSF/ARPA/NASA Digital Libraries Initiative under CERA IRI-9411287, and by NSF under grants RIA #IRI-9309076 and NYI #IRI-9457609.  
Address: 1301 Beal Avenue, Ann Arbor, MI 48109-2122  
Affiliation: Dept. of Elect. Eng. and Computer Science University of Michigan  
Abstract: Challenging issues for processing queries specified over large-scale information spaces (e.g., Digital Libraries or the World Wide Web) include the diversity of the information sources in terms of their structures, query interfaces and search capabilities, as well as the dynamics of sources continuously being added, removed or upgraded. Query processing can no longer be done in a static fashion against a well-defined schema (which assumes high integration). Rather an interactive query processing strategy that adapts its behavior to the system resources at hand is needed. In this paper, we give an innovative solution for query planning in such environments. The foundation of our solution is the Dynamic Information Integration Model (DIIM) which supports the specification of not only content but also capabilities of resources without requiring the establishment of a uniform integration schema. Besides the development of the DIIM model, contributions of this paper include: (1) introduction of the notion of fully specified queries that are semantically equivalent to a loosely-specified query (we show that our concept is a consistent and natural extension to the concept of full disjunction); (2) translation algorithm of a loosely-specified query into a set of semantically equivalent precise query plans that can be executed against the current configuration of available sources; the steps of the translated query plans are consistent with the binding patterns of query templates of the individual sources (capability descriptions in DIIM) and with possible interrelationships between two or more information sources (expressed as join constraints in DIIM); (3) search restriction algorithm for optimizing query processing by pruning the search space into the relevant subspace of a query based on information source descriptions; the search space of the translation algorithm is thus restricted to a query relevant subspace; and (4) the proofs of correctness for both the search restriction and translation algorithms that show that the plans obtained by the query planning process correspond to semantically equivalent query plans. 
Abstract-found: 1
Intro-found: 1
Reference: [ABD + 96] <author> D.E. Atkins, W.P. Birmingham, E.H. Durfee, E. Glover, T. Mullen, E.A. Rundensteiner, E. Soloway, J. Vidal, R. Wallace, and M. Wellman. </author> <title> Toward Inquiry-Based Education Through Interacting Software Agents. </title> <booktitle> IEEE Computer, </booktitle> <month> May </month> <year> 1996. </year>
Reference-contexts: We assume that all information sources in our space, may they be fully structured like an SQL database management system, partially structured like SGML files [Gol91], or even an application program like finger, register their existence as well as a description of their content and capabilities with a knowledge base <ref> [ABD + 96] </ref>. <p> This is true because function SOLUTION in the algorithm is checking exactly this property. 8 Related Work This research is conducted in the general context of a large, interdisciplinary project of constructing a distributed agent-based architecture for UMDL, the University of Michigan Digital Library System <ref> [ABD + 96] </ref>. UMDL assumes a large, decentralized environment of independent agents, including task planners, mediators, and thousands of information sources. <p> Capability Knowledgebase, and (5) the proof of correctness of our algorithms shows that the plans obtained by the query planning process correspond to semantically equivalent query plans. 35 We are in the process of the design and implementation of the first DIIM prototype over the metadata information space in UMDL <ref> [ABD + 96] </ref> having as information sources a conspectus database using Sybase DBMS, a number of controlled vocabulary resources, e.g., Broad System of Ordering, Nasa thesaurus and name authority sources, and some other metadata sources, e.g., author indexes. The planning algorithm has already been tested in isolation with promising performance.
Reference: [BCea95] <author> A. Barrett, D. Christianson, and M. Friedman et al. </author> <title> UCPOP User's Manual. </title> <institution> Computer Science and Engineering, University of Washington, </institution> <type> Tech. Rep., </type> <year> 1995. </year>
Reference-contexts: The predicates ( ?x ?y) will trigger search control rules at the planning time that will add these constraints to the plan constraints (see Step 5.7. in the algorithm DynamicQueryP lanning in Section 7.2 and <ref> [BCea95] </ref>) which must be satisfied at the execution time.
Reference: [BDMS94] <author> C.M. Bowman, P.B. Danzig, U. Manber, and M.F. Schwartz. </author> <title> Scalable Internet Resource Discovery: Research Problems and Approaches. </title> <journal> Communications of the ACM, </journal> <volume> 37(8), </volume> <month> August </month> <year> 1994. </year>
Reference: [BS93] <editor> C. Backstrom and E. Sandewall, editors. </editor> <booktitle> Current Trends in AI Planning- EWSO'93. </booktitle> <publisher> IOS Press, </publisher> <year> 1993. </year>
Reference: [Cat94] <author> R.G.G. Cattell. </author> <title> Object Data Management - Object-Oriented and Extended Relational Database Systems. </title> <year> 1994. </year>
Reference: [CKP94] <author> S. Chaudhuri, R. Krishnamurthy, and S. Potamianos. </author> <title> Optimizing Query with Materialized Views. </title> <institution> HPL-DTD-94-16, Hewlett Packard Research Laboratories, </institution> <address> Palo Alto, CA, </address> <year> 1994. </year>
Reference-contexts: Thus loosely-specified queries (e.g., that don't specify from where the data is to be retrieved) are not handled. However, the query reformulation process is similar to our planning algorithm both considering the query templates of the external information sources. <ref> [CKP94] </ref> relates to our DIIM approach in as much as our information source descriptions, in particular, the query templates along with the source descriptions, can be regarded as view definitions. Our planning algorithm thus effectively constructs and optimizes queries across these `views' as done in [CKP94]. <p> of the external information sources. <ref> [CKP94] </ref> relates to our DIIM approach in as much as our information source descriptions, in particular, the query templates along with the source descriptions, can be regarded as view definitions. Our planning algorithm thus effectively constructs and optimizes queries across these `views' as done in [CKP94]. However, our query planning is more sophisticated because we also incorporate join and integrity constraints. In addition, we establish what constitutes a fully-specified refined query and give necessary conditions for query construction.
Reference: [Cor95a] <author> Infoseek Corporation. InfoSeek. </author> <type> Technical Report, </type> <note> http://www.infoseek.com:80/Home, April 1995. </note>
Reference-contexts: This clearly is not satisfactory for many users. Information-retrieval (IR) based systems, such as WAIS and WWW engines <ref> [Cor95b, Cor95a] </ref>, typically allow specification of vague queries, that is, users can list search terms in subjects they are interested in without having to formulate a precise query.
Reference: [Cor95b] <author> Netscape Communications Corporation. </author> <title> Internet Search. </title> <type> Technical Report, </type> <note> http://home.mcom.com/home/internet-search.html, April 1995. </note>
Reference-contexts: This clearly is not satisfactory for many users. Information-retrieval (IR) based systems, such as WAIS and WWW engines <ref> [Cor95b, Cor95a] </ref>, typically allow specification of vague queries, that is, users can list search terms in subjects they are interested in without having to formulate a precise query.
Reference: [EN94] <author> R. Elmasri and S. B. Navathe. </author> <title> Fundamentals of Database Systems. </title> <publisher> The Benjamin/Cummings Publishing Company, Inc., </publisher> <year> 1994. </year>
Reference: [GL94] <author> C. Galindo-Legaria. </author> <title> Outerjoins as disjunctions . SIGMOD, </title> <year> 1994. </year>
Reference-contexts: A refined query uses join consistencies among sources and at the same time is in agreement with their query interfaces. We introduce the notion of connected relation as a natural extension of the concept of full disjunction <ref> [GL94] </ref>. In the default case when only natural joins are defined in DIIM we show that, the semantics of the two concepts (connected relation and full disjunction) are equivalent. <p> Section 4 defines the overall framework for our approach, namely, the DIIM model. The DIIM query language and semantics are introduced in Section 5 as well as a comparison of our query semantics to the full disjunction <ref> [GL94] </ref> for a set of relations. Sections 6 and 7 describe our proposed algorithms for computing semantically-equivalent query plans for a user query.
Reference: [GMHI + 95] <author> H. Garcia-Molina, J. Hammer, K. Ireland, Y. Papakonstantinou, J. Ullman, and J. Widom. </author> <booktitle> Integrating and Accessing Heterogeneous Information Sources in TSIMMIS . Proc. of the AAAI Spring Symposium on Information Gathering in Distributed Heterogeneous Environments, </booktitle> <address> Stan-ford, California, </address> <month> March </month> <year> 1995. </year>
Reference-contexts: In other systems, the user is typically required to specify his queries directly in the connected rule format and the system just executes them <ref> [PGMU95, PGMW95, GMHI + 95] </ref>.
Reference: [Gol91] <author> C.F. Goldfarb. </author> <title> The SGML Handbook. </title> <publisher> Clarendon Press, Oxford, </publisher> <year> 1991. </year>
Reference-contexts: We assume that all information sources in our space, may they be fully structured like an SQL database management system, partially structured like SGML files <ref> [Gol91] </ref>, or even an application program like finger, register their existence as well as a description of their content and capabilities with a knowledge base [ABD + 96].
Reference: [KLSS95] <author> T. Kirk, A. Y. Levy, Y. Sagiv, and D. Srivastava. </author> <title> The Information Manifold. </title> <booktitle> Proceedings of the AAAI Spring Symposium on Information Gathering in Distributed Heterogeneous Environments, </booktitle> <address> Stanford, California, </address> <month> March </month> <year> 1995. </year>
Reference: [KS91] <author> H. Korth and A. Silberschatz. </author> <title> Database System Concepts. </title> <publisher> McGraw-Hill, Inc., </publisher> <year> 1991. </year> <month> 36 </month>
Reference-contexts: The model used is a combination of the nested relational data model <ref> [KS91] </ref> and the logic-based data model [Ull89]. A relation has a unique name and fixed arity where the attributes are not explicitly named but have the values determined by their positions.
Reference: [LS93] <author> G. F. Luger and W. A. Stubblefield. </author> <title> AI: Structures and Strategies for Complex Problem Solving . Benjamin/Cummings Publishing Co., </title> <publisher> Inc., </publisher> <year> 1993. </year>
Reference-contexts: We now discuss our solution for transforming our given information source descriptions kept in the capability knowledge base (see Figure 1) expressed in DIIM model into a set of parameterized actions that can be used by the planning agent (see [RN95], <ref> [LS93] </ref>) 14 .
Reference: [LSK95] <author> A. Y. Levy, D. Srivastava, and T. Kirk. </author> <title> Data Model and Query Evaluation in Global Information Systems. </title> <journal> Journal of Intelligent Information Systems. </journal> <note> Special Issue on Networked Information Discovery and Retrieval, </note> <year> 1995. </year>
Reference-contexts: In the work of Levy et. al <ref> [LSK95] </ref>, a global information system is designed using the world-view approach where the external information sources are described relative with the unified world-view relations. Put differently, a global unified schema as common for tightly integrated multidatabase systems is constructed.
Reference: [NR95] <author> A. Nica and E. A. Rundensteiner. </author> <title> Uniform Structured Document Handling Using a Constraint-based Object Approach. </title> <booktitle> Advances in Digital Libraries (ADL'95), A Forum on Research and Technology Advances in Digital Libraries, Virginia, book chapter in ADL'95, </booktitle> <publisher> Springer Verlag, </publisher> <month> May </month> <year> 1995. </year>
Reference: [PGMU95] <author> Y. Papakonstantinou, H. Garcia-Molina, and J. Ullman. Medmaker: </author> <title> A Mediation System Based on Declarative Specifications. </title> <note> Available by ftp at db.stanford.edu as the file pub/papakonstantinou/1995/medmaker.ps, </note> <year> 1995. </year>
Reference-contexts: In other systems, the user is typically required to specify his queries directly in the connected rule format and the system just executes them <ref> [PGMU95, PGMW95, GMHI + 95] </ref>. <p> This approach requires the system users to know the definitions of the world-view relations. 34 Papakonstantinou et al. <ref> [PGMW95, PGMU95] </ref> are pursuing a similar goal of information gathering across multiple sources. However, their proposed language OEM assumes queries that explicitly list the source identifiers of the database from which the data is to be taken.
Reference: [PGMW95] <author> Y. Papakonstantinou, H. Garcia-Molina, and J. Widom. </author> <title> Object Exchange Across Heterogeneous Information Sources. </title> <booktitle> IEEE International Conference on Data Engineering, </booktitle> <pages> pages 251-260, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: In other systems, the user is typically required to specify his queries directly in the connected rule format and the system just executes them <ref> [PGMU95, PGMW95, GMHI + 95] </ref>. <p> This approach requires the system users to know the definitions of the world-view relations. 34 Papakonstantinou et al. <ref> [PGMW95, PGMU95] </ref> are pursuing a similar goal of information gathering across multiple sources. However, their proposed language OEM assumes queries that explicitly list the source identifiers of the database from which the data is to be taken.
Reference: [RN95] <author> S. Russell and P. Norvig. </author> <title> Artificial Intelligence: A Modern Approach. </title> <publisher> Prentice Hall, </publisher> <year> 1995. </year>
Reference-contexts: Second, we present the query planning algorithm. The planning algorithm exploits our proposed semantics for query refinement to refine a loosely-specified user query into well-defined fully-specified queries that can be evaluated in the current system configuration. The algorithm based on regression planning algorithm <ref> [RN95] </ref> incrementally finds possible plans (corresponding to refined queries) for the given query. <p> For the process of defining the consistent query plans in the DIIM system we thus use a regression planning algorithm based on the conditional partial-order planning algorithm (CPOP) defined in <ref> [RN95] </ref>. We now discuss our solution for transforming our given information source descriptions kept in the capability knowledge base (see Figure 1) expressed in DIIM model into a set of parameterized actions that can be used by the planning agent (see [RN95], [LS93]) 14 . <p> on the conditional partial-order planning algorithm (CPOP) defined in <ref> [RN95] </ref>. We now discuss our solution for transforming our given information source descriptions kept in the capability knowledge base (see Figure 1) expressed in DIIM model into a set of parameterized actions that can be used by the planning agent (see [RN95], [LS93]) 14 . We start by making the observation that the act of obtaining 14 We use a STRIPS-like language to describe parameterized actions. 25 data from an information source corresponds to a sensing action as defined in [RN95], i.e., we cannot know at the planning time what will be <p> parameterized actions that can be used by the planning agent (see <ref> [RN95] </ref>, [LS93]) 14 . We start by making the observation that the act of obtaining 14 We use a STRIPS-like language to describe parameterized actions. 25 data from an information source corresponds to a sensing action as defined in [RN95], i.e., we cannot know at the planning time what will be the output at the execution time. <p> The algorithm is a regression planning algorithm (<ref> [RN95] </ref>) that incrementally finds possible plans (corresponding to refined queries) for the given query. We have made several modifications to CPOP defined in [RN95] as required for our problem at hand. First, our algorithm performs a breadth-first search with the goal of finding all the plans ordered by the number of total steps 15 . <p> ); R 2 ( X 2 ); : : : ; R n ( X n ); C ( X 0 ) Output: The initial plan plan for DynamicQueryPlanning Algorithm Step 1. 15 In the AI literature, typically finding one single plan is considered sufficient, hence depth-first search is utilized <ref> [RN95] </ref>. For future work we plan to have more efficient ways of finding the set of query plans based on a real cost reflecting the information source transaction costs. <p> The planning algorithm obtains only complete and consistent plans in the sense defined in <ref> [RN95] </ref>. A complete plan is one in which every precondition of every step is achieved by some other step, and no other step can possibly cancel out the condition. <p> A contradiction occurs when both S i OE S j and S j OE S i hold or both v = x and v = y hold with x and y different constants. We have extended the basic CPOP algorithm as described in <ref> [RN95] </ref> to handle the built-in predicate set C that permits query language and information source descriptions to include the conjunctions of built-in predicates. <p> In DIIM, we utilize these query templates as one of the basic building blocks for constructing the parameterized action set and then to generate `good' executable plans given our semantic of query refinement, i.e., connected query rule concept. Our techniques of query planning are based on AI planning techniques <ref> [RN95] </ref>.
Reference: [RSU95] <author> A. Rajaraman, Y. Sagiv, and J.D. Ullman. </author> <title> Answering Queries Using Templates With Binding Patterns. </title> <booktitle> Principles of Database Systems, </booktitle> <pages> pages 105-112, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: However, our query planning is more sophisticated because we also incorporate join and integrity constraints. In addition, we establish what constitutes a fully-specified refined query and give necessary conditions for query construction. The notion of using query templates as part of an information source description is based on <ref> [Ull89, RSU95] </ref>. In DIIM, we utilize these query templates as one of the basic building blocks for constructing the parameterized action set and then to generate `good' executable plans given our semantic of query refinement, i.e., connected query rule concept.
Reference: [RU96] <author> A. Rajaraman and J.D. Ullman. </author> <title> Integrating Information by Outerjoins and Full Disjunctions. </title> <booktitle> Principles of Database Systems, </booktitle> <year> 1996. </year>
Reference-contexts: The relations accept any adornment and the set of join constraints is defined to be all the natural joins. Let R be the "natural" full disjunction ([GL94], <ref> [RU96] </ref>) of the relations R 1 ; R 2 ; : : :; R n . 10 r is a datalog program defining the same intensional relation over the variables V .I.e., if r = fr 1 ; r 2 ; : : : ; r n g then the heads
Reference: [Ull89] <author> J.D. Ullman. </author> <title> Principle of Database and Knowledge-Base Systems. </title> <publisher> Computer Science Press, </publisher> <year> 1989. </year>
Reference-contexts: is to be taken, or the join to be performed to combine different sets of data); 2. develop query semantics that specify the notion of the "correct" meaning and hence "correct" answers for such type of vague queries (clearly, performing pairwise natural joins between all sources ala universal relation semantics <ref> [Ull89] </ref> is neither too meaningful nor too practical in the context of modern information spaces with hundreds of information sources); 3. develop algorithms that map a loosely-specified query into precise well-specified query plans based on defined query refinement semantics (so that the later can be executed against the set of available <p> The model used is a combination of the nested relational data model [KS91] and the logic-based data model <ref> [Ull89] </ref>. A relation has a unique name and fixed arity where the attributes are not explicitly named but have the values determined by their positions. <p> relation, the query templates for E are denoted by a set A E = fff E 2 ; : : : ff E n g of adornments (or binding patterns) with ff E k [i] 2 fb; f g for all i 2 f1; 2; : : :; ng (see <ref> [Ull89] </ref>). If the ith symbol of the adornment ff E k is b then the ith argument of the relation must be bound when a query is asked. <p> To show that one conjunctive query is contained in another conjunctive query, we have the following well known theorem (see <ref> [Ull89] </ref>). Theorem 1 Let r 1 and r 2 be two conjunctive queries with built-in subgoals for which the following holds: 1. There is a containment mapping h from the symbols of r 2 to the symbols of r 1 that satisfies Definition 8. <p> and the capability graph for E ; G E = (N ; D), we define the query capability graph for the query r, G r = (N r ; D r ) and its RelevantSubspace r = (R r ; J C r ) as follows: 12 Ullman defines in <ref> [Ull89] </ref> the adornment set and the partial order relation "" over it as follows: if A is an adornment set and ff; fi 2 A two adornments, we say that ff fi iff fi has b in every position where ff has b. <p> However, our query planning is more sophisticated because we also incorporate join and integrity constraints. In addition, we establish what constitutes a fully-specified refined query and give necessary conditions for query construction. The notion of using query templates as part of an information source description is based on <ref> [Ull89, RSU95] </ref>. In DIIM, we utilize these query templates as one of the basic building blocks for constructing the parameterized action set and then to generate `good' executable plans given our semantic of query refinement, i.e., connected query rule concept.
References-found: 23

