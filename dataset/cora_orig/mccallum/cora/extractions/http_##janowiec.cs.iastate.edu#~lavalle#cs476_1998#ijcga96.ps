URL: http://janowiec.cs.iastate.edu/~lavalle/cs476_1998/ijcga96.ps
Refering-URL: http://janowiec.cs.iastate.edu/~lavalle/cs476_1998/proj3.html
Root-URL: http://www.cs.iastate.edu
Email: fguibas,latombe,lavalle,dlin,rajeevg@cs.stanford.edu  
Title: A Visibility-Based Pursuit-Evasion Problem few bounds are introduced, and a complete algorithm is presented for
Author: Leonidas J. Guibas Jean-Claude Latombe Steven M. LaValle David Lin Rajeev Motwani p 
Note: A  
Address: Stanford, CA 94305  
Affiliation: Computer Science Department Stanford University  
Abstract: This paper addresses the problem of planning the motion of one or more pursuers in a polygonal environment to eventually "see" an evader that is unpredictable, has unknown initial position, and is capable of moving arbitrarily fast. This problem was first introduced by Suzuki and Yamashita. Our study of this problem is motivated in part by robotics applications, such as surveillance with a mobile robot equipped with a camera that must find a moving target in a cluttered workspace. h+lg n) pursuers for a polygon that has n edges and h holes. A set of problems that are solvable by a single pursuer and require a linear number of recontaminations is shown. The complete algorithm searches a finite graph that is constructed on the basis of critical information changes. It has been implemented and computed examples are shown. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Ba~sar and G. J. Olsder. </author> <title> Dynamic Noncooperative Game Theory. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1982. </year>
Reference-contexts: It has also been shown that a graph can be searched monotonically (i.e., without recontamination) in [2, 12]. Pursuit-evasion scenarios in continuous spaces have arisen in a variety of applications 1 such as air traffic control <ref> [1] </ref>, military strategy [11], and trajectory tracking [10]. This has resulted in the formal study of general decision problems in which two decision makers have diametrically opposing interests. Classical pursuit-evasion games express differential motion models for two opponents, and conditions of capture or optimal strategies are sought [11].
Reference: [2] <author> D. Bienstock and P. Seymour. </author> <title> Monotonicity in graph searching. </title> <journal> J. Algorithms, </journal> <volume> 12 </volume> <pages> 239-245, </pages> <year> 1991. </year>
Reference-contexts: The search number of a graph refers to the minimum number of pursuers needed to solve a pursuit-evasion problem, and has been closely related to other graph properties such as cutwidth [16, 18]. It has also been shown that a graph can be searched monotonically (i.e., without recontamination) in <ref> [2, 12] </ref>. Pursuit-evasion scenarios in continuous spaces have arisen in a variety of applications 1 such as air traffic control [1], military strategy [11], and trajectory tracking [10]. This has resulted in the formal study of general decision problems in which two decision makers have diametrically opposing interests. <p> It states that there exist examples that require recontaminating some portion of the free space a linear number of times. This result is surprising because for Parsons' problem it was shown in [12] that no recontamination is necessary (a shorter proof of this appears in <ref> [2] </ref>).
Reference: [3] <author> J. F. Canny. </author> <title> The Complexity of Robot Motion Planning. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1988. </year>
Reference-contexts: It is natural to compare the notion of completeness for this problem to completeness for the basic motion planning problem (i.e., the algorithm will find a collision-free path if such a path exists <ref> [3] </ref>). One important difference, however, is that the minimum number of pursuers is crucial, but does not have a correspondence for the basic path planning problem.
Reference: [4] <author> B. Chazelle. </author> <title> A theorem on polygon cutting with applications. </title> <booktitle> In Proc. 23rd Annu. IEEE Sympos. Found. Comput. Sci., </booktitle> <pages> pages 339-349, </pages> <year> 1982. </year>
Reference-contexts: Recall that for any simple polygon, a pair of vertices can always be connected so that polygon is partitioned into two regions, each with at least one third of the edges of the original polygon <ref> [4] </ref>. This implies that F can be recursively partitioned until a triangulation is constructed, and each triangular region only requires O (lg n) recombinations before F is obtained (i.e., the recursion depth is logarithmic in n).
Reference: [5] <author> W.-P. Chin and S. Ntafos. </author> <title> Optimum watchman routes. </title> <journal> Information Processing Letters, </journal> <volume> 28 </volume> <pages> 39-44, </pages> <year> 1988. </year>
Reference-contexts: Far fewer guards are needed when they are allowed to move and search for an evader; however, the required motion strategies can become quite complex. A closely related art gallery variant is the watchman tour problem <ref> [5] </ref>. In this case a minimum-length closed path is computed such that any point in the polygon is visible from some point along the path.
Reference: [6] <author> D. Crass, I. Suzuki, and M. Yamashita. </author> <title> Searching for a mobile intruder in a corridor the open edge variant of the polygon search problem. </title> <journal> Int. J. Comput. Geom. & Appl., </journal> <volume> 5(4) </volume> <pages> 397-412, </pages> <year> 1995. </year>
Reference-contexts: In our case, however, the pursuers have the additional burden of ensuring that an evader cannot "sneak" to a portion of the environment that has already been explored. The problem that we consider and other variations have been considered previously in <ref> [6, 23] </ref>. It was stated in [22] that it remained an interesting challenge to determine if a polygon is searchable by a single pursuer. Several applications can be envisioned for problems and motion strategies of this type. <p> A similar result is also obtained in <ref> [6] </ref>. It states that there exist examples that require recontaminating some portion of the free space a linear number of times. This result is surprising because for Parsons' problem it was shown in [12] that no recontamination is necessary (a shorter proof of this appears in [2]).
Reference: [7] <author> M. Erdmann. </author> <title> Randomization for robot tasks: Using dynamic programming in the space of knowledge states. </title> <journal> Algorithmica, </journal> <volume> 10 </volume> <pages> 248-291, </pages> <year> 1993. </year>
Reference-contexts: Let = (q; S) represent an information state. The set of all possible information states will be referred to as the information space. The information space is a standard representational tool for problems that have imperfect state information, and has been useful for other motion planning problems <ref> [7, 13] </ref>. Suppose that a strategy is parameterized with a time interval t 2 [0; t f ] for some fixed t f &gt; 0. For a fixed strategy, fl, and an initial set of contaminated points, S (0), a path in the information space is obtained.
Reference: [8] <author> L. Guibas and J. Stolfi. </author> <title> Primitives for the manipulation of general subdivisions and the computation of Voronoi diagrams. </title> <journal> AMC Trans. Graphics, </journal> <volume> 4(2) </volume> <pages> 74-123, </pages> <year> 1985. </year>
Reference-contexts: The computation times and other parameters for several examples are listed in Figure 11. The implementation uses the quad-edge structure from <ref> [8] </ref> to maintain the topological ordering of the regions. The information graph G I is searched using Dijkstra's shortest path algorithm, where the edge cost is taken as the distance between adjacent cell centroids.
Reference: [9] <author> L. J. Guibas, R. Motwani, and P. Raghavan. </author> <title> The robot localization problem. </title> <editor> In K. Gold-berg, D. Halperin, J.-C. Latombe, and R. Wilson, editors, </editor> <booktitle> Proc. 1st Workshop on Algorithmic Foundations of Robotics, </booktitle> <pages> pages 269-282. </pages> <address> A.K. Peters, Wellesley, MA, </address> <year> 1995. </year>
Reference-contexts: Each edge is extended in any direction possible, and each pair of vertices is extended outward only if both directions are free along the line drawn through the pair. A similar decomposition has been used for robot localization in <ref> [9, 24] </ref>, and generates O (n 3 ) regions in the worst case. The following statement yields an important property that will allow us to explore the information space combinatorially: Lemma 4 Each region in D 2 D is conservative.
Reference: [10] <author> O. Hajek. </author> <title> Pursuit Games. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1975. </year>
Reference-contexts: It has also been shown that a graph can be searched monotonically (i.e., without recontamination) in [2, 12]. Pursuit-evasion scenarios in continuous spaces have arisen in a variety of applications 1 such as air traffic control [1], military strategy [11], and trajectory tracking <ref> [10] </ref>. This has resulted in the formal study of general decision problems in which two decision makers have diametrically opposing interests. Classical pursuit-evasion games express differential motion models for two opponents, and conditions of capture or optimal strategies are sought [11].
Reference: [11] <author> R. Isaacs. </author> <title> Differential Games. </title> <publisher> Wiley, </publisher> <address> New York, NY, </address> <year> 1965. </year>
Reference-contexts: It has also been shown that a graph can be searched monotonically (i.e., without recontamination) in [2, 12]. Pursuit-evasion scenarios in continuous spaces have arisen in a variety of applications 1 such as air traffic control [1], military strategy <ref> [11] </ref>, and trajectory tracking [10]. This has resulted in the formal study of general decision problems in which two decision makers have diametrically opposing interests. Classical pursuit-evasion games express differential motion models for two opponents, and conditions of capture or optimal strategies are sought [11]. <p> air traffic control [1], military strategy <ref> [11] </ref>, and trajectory tracking [10]. This has resulted in the formal study of general decision problems in which two decision makers have diametrically opposing interests. Classical pursuit-evasion games express differential motion models for two opponents, and conditions of capture or optimal strategies are sought [11]. For example, in the classical Homicidal Chauffeur game, conditions of inevitable collision can be expressed in terms of the nonholonomic turning-radius constraints of the pursuer and evader. Although interesting decision problems arise through the differential motion models, geometric free-space constraints are usually not considered in classical pursuit-evasion games.
Reference: [12] <author> A. S. Lapaugh. </author> <title> Recontamination does not help to search a graph. </title> <journal> J. ACM, </journal> <volume> 40(2) </volume> <pages> 224-245, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: The search number of a graph refers to the minimum number of pursuers needed to solve a pursuit-evasion problem, and has been closely related to other graph properties such as cutwidth [16, 18]. It has also been shown that a graph can be searched monotonically (i.e., without recontamination) in <ref> [2, 12] </ref>. Pursuit-evasion scenarios in continuous spaces have arisen in a variety of applications 1 such as air traffic control [1], military strategy [11], and trajectory tracking [10]. This has resulted in the formal study of general decision problems in which two decision makers have diametrically opposing interests. <p> For the case of problems in which H (F ) = 1, it is shown that the same region can require recontamination as many as (n) times. This result is surprising because pursuit-evasion in a graph is known not to require any recontaminations <ref> [12] </ref>. In [23] a free space was given that requires two recontaminations, which at least established that recontamination is generally necessary for visibility-based pursuit evasion. Consider the problem of determining the minimum number of pursuers, H (F ), required to find an evader in a given free space F . <p> A similar result is also obtained in [6]. It states that there exist examples that require recontaminating some portion of the free space a linear number of times. This result is surprising because for Parsons' problem it was shown in <ref> [12] </ref> that no recontamination is necessary (a shorter proof of this appears in [2]).
Reference: [13] <author> S. M. LaValle. </author> <title> A Game-Theoretic Framework for Robot Motion Planning. </title> <type> PhD thesis, </type> <institution> University of Illinois, Urbana, IL, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: Let = (q; S) represent an information state. The set of all possible information states will be referred to as the information space. The information space is a standard representational tool for problems that have imperfect state information, and has been useful for other motion planning problems <ref> [7, 13] </ref>. Suppose that a strategy is parameterized with a time interval t 2 [0; t f ] for some fixed t f &gt; 0. For a fixed strategy, fl, and an initial set of contaminated points, S (0), a path in the information space is obtained.
Reference: [14] <author> S. M. LaValle, D. Lin, L. J. Guibas, J.-C. Latombe, and R. Motwani. </author> <title> Finding an unpredictable target in a workspace with obstacles. </title> <booktitle> In Proc. IEEE Int'l Conf. on Robotics and Automation, </booktitle> <pages> pages 737-742, </pages> <year> 1997. </year>
Reference-contexts: Section 4.3 presents a complete algorithm that uses this concept for the case of H (F ) = 1. Assume that a search is performed by a single pursuer; the concepts in this section can be extended to multiple pursuers with minor adaptation <ref> [14] </ref>. Let q 2 F represent the current pursuer position. Let S F represent the set of all contaminated points in F . Let = (q; S) represent an information state. The set of all possible information states will be referred to as the information space.
Reference: [15] <author> R. J. Lipton and R. E. Tarjan. </author> <title> A separator theorem for planar graphs. </title> <journal> SIAM Journal of Applied Mathematics, </journal> <volume> 36 </volume> <pages> 177-189, </pages> <year> 1979. </year>
Reference-contexts: Consider the dual graph of the triangulation, which has O (n) edges and vertices. Take the subgraph induced by taking only the vertices that correspond to trichromatic triangles in the original triangulation. The planar graph separator theorem <ref> [15] </ref> implies that at most O ( h) edges can be chosen to partition the graph into two portions with at least one third of the edges on each side of the partition.
Reference: [16] <author> F. Makedon and I. H. Sudborough. </author> <title> Minimizing width in linear layouts. </title> <booktitle> In Proc. 10th ICALP, Lecture Notes in Computer Science 154, </booktitle> <pages> pages 478-490. </pages> <publisher> Springer-Verlag, </publisher> <year> 1983. </year>
Reference-contexts: The search number of a graph refers to the minimum number of pursuers needed to solve a pursuit-evasion problem, and has been closely related to other graph properties such as cutwidth <ref> [16, 18] </ref>. It has also been shown that a graph can be searched monotonically (i.e., without recontamination) in [2, 12]. Pursuit-evasion scenarios in continuous spaces have arisen in a variety of applications 1 such as air traffic control [1], military strategy [11], and trajectory tracking [10]. <p> Let G k connect vertices v and w by an edge if and only if v adn w are distance 1 apart (i.e., a standard four-neighborhood). The cutwidth of G k is k. It is established in <ref> [16] </ref> that for all graphs G, the search number S (G) is related by S (G) CW (G) bdeg (G)=2c S (G), in which deg (G) is the maximum vertex degree of G. Because deg (G k ) = 4, S (G) k 2S (G).
Reference: [17] <author> N. Megiddo, S. L. Hakimi, M. R. Garey, D. S. Johnson, and C. H. Papadimitriou. </author> <title> The complexity of searching a graph. </title> <journal> J. ACM, </journal> <volume> 35(1) </volume> <pages> 18-44, </pages> <month> January </month> <year> 1988. </year>
Reference-contexts: Interesting results have been obtained for pursuit-evasion in a graph, in which the pursuers and evader can move from vertex to vertex until eventually a pursuer and evader lie in the same vertex <ref> [17, 20] </ref>. The search number of a graph refers to the minimum number of pursuers needed to solve a pursuit-evasion problem, and has been closely related to other graph properties such as cutwidth [16, 18]. <p> Some results from graph searching will first be described and utilized to construct difficult worst-case problem instances. Let Parsons' problem refer to the graph 5 graphs. searching problem presented in <ref> [17, 20] </ref>. The task is to specify the number of pursuers required to find an evader that can execute continuous motions along the edges of a graph. Instead of using visibility, capture is achieved when one of the pursuers "touches" the evader.
Reference: [18] <author> B. Monien and I. H. Sudborough. </author> <title> Min cut is NP-complete for edge weighted graphs. </title> <journal> Theoretical Computer Science, </journal> <volume> 58 </volume> <pages> 209-229, </pages> <year> 1988. </year>
Reference-contexts: The search number of a graph refers to the minimum number of pursuers needed to solve a pursuit-evasion problem, and has been closely related to other graph properties such as cutwidth <ref> [16, 18] </ref>. It has also been shown that a graph can be searched monotonically (i.e., without recontamination) in [2, 12]. Pursuit-evasion scenarios in continuous spaces have arisen in a variety of applications 1 such as air traffic control [1], military strategy [11], and trajectory tracking [10]. <p> The problem becomes most difficult when the minimum number of pursuers is requested. The problem of determining the minimum number of pursuers is intractable if P 6= N P : Theorem 6 Computing H (F ) is NP-hard. Proof: It is shown in <ref> [18] </ref> that Parsons' problem for a planar graph with maximum vertex degree 3 is NP-complete (i.e., computing the search number, S (G) ).
Reference: [19] <author> J. O'Rourke. </author> <title> Art Gallery Theorems and Algorithms. </title> <publisher> Oxford University Press, </publisher> <address> New York, NY, </address> <year> 1987. </year>
Reference-contexts: A moving visibility polygon in a polygonal environment adds geometric information that must be utilized, and also leads to connections with the static art gallery problems <ref> [19, 22] </ref>. In the limiting case, art gallery results serve as a loose upper bound on the number of pursuers by allowing a covering of the free space by static guards, guaranteeing that any evader will be immediately visible.
Reference: [20] <author> T. D. Parsons. </author> <title> Pursuit-evasion in a graph. </title> <editor> In Y. Alani and D. R. Lick, editors, </editor> <booktitle> Theory and Applcation of Graphs, </booktitle> <pages> pages 426-441. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1976. </year> <month> 27 </month>
Reference-contexts: Interesting results have been obtained for pursuit-evasion in a graph, in which the pursuers and evader can move from vertex to vertex until eventually a pursuer and evader lie in the same vertex <ref> [17, 20] </ref>. The search number of a graph refers to the minimum number of pursuers needed to solve a pursuit-evasion problem, and has been closely related to other graph properties such as cutwidth [16, 18]. <p> Some results from graph searching will first be described and utilized to construct difficult worst-case problem instances. Let Parsons' problem refer to the graph 5 graphs. searching problem presented in <ref> [17, 20] </ref>. The task is to specify the number of pursuers required to find an evader that can execute continuous motions along the edges of a graph. Instead of using visibility, capture is achieved when one of the pursuers "touches" the evader. <p> Thus any solution strategy, fl, for F can be used to determine a corresponding solution strategy for G. 2 A theorem from <ref> [20] </ref> will be useful for proving Theorem 2, which provides a logarithmic lower bound on the number of pursuers needed to successfully search a simply-connected free space: Lemma 2 (Parsons) Let G be a tree. <p> Proof: Using Lemma 2, a tree, G, can be constructed recursively that has a constant branching factor of three, height N 1, and requires N pursuers (an example is given in <ref> [20] </ref>). By Lemma 1, an equivalent geometric instance can be constructed for each N . Figure 3 depicts these geometric instances, for which H (F ) = (lg n) 2 Theorem 1 and Theorem 2 together imply a tight logarithmic bound, H (F ) = fi (lg n).
Reference: [21] <author> J. T. Schwartz and M. Sharir. </author> <title> On the piano movers' problem: III. Coordinating the motion of several independent bodies. </title> <journal> Int. J. Robot. Res., </journal> <volume> 2(3) </volume> <pages> 97-140, </pages> <year> 1983. </year>
Reference-contexts: This is inspired in part by a standard approach used in motion planning, which is to preserve completeness by using a decomposition of the configuration space that is constructed by analyzing critical events. For example, in <ref> [21] </ref> a cell decomposition is determined by analyzing the contact manifolds in a composite configuration space that is generated by the positions of several disks in the plane. Section 4.3 presents a complete algorithm that uses this concept for the case of H (F ) = 1.
Reference: [22] <author> T. Shermer. </author> <title> Recent results in art galleries. </title> <journal> Proc. IEEE, </journal> <volume> 80(9) </volume> <pages> 1384-1399, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: A moving visibility polygon in a polygonal environment adds geometric information that must be utilized, and also leads to connections with the static art gallery problems <ref> [19, 22] </ref>. In the limiting case, art gallery results serve as a loose upper bound on the number of pursuers by allowing a covering of the free space by static guards, guaranteeing that any evader will be immediately visible. <p> In our case, however, the pursuers have the additional burden of ensuring that an evader cannot "sneak" to a portion of the environment that has already been explored. The problem that we consider and other variations have been considered previously in [6, 23]. It was stated in <ref> [22] </ref> that it remained an interesting challenge to determine if a polygon is searchable by a single pursuer. Several applications can be envisioned for problems and motion strategies of this type.
Reference: [23] <author> I. Suzuki and M. Yamashita. </author> <title> Searching for a mobile intruder in a polygonal region. </title> <journal> SIAM J. Comput., </journal> <volume> 21(5) </volume> <pages> 863-888, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: In our case, however, the pursuers have the additional burden of ensuring that an evader cannot "sneak" to a portion of the environment that has already been explored. The problem that we consider and other variations have been considered previously in <ref> [6, 23] </ref>. It was stated in [22] that it remained an interesting challenge to determine if a polygon is searchable by a single pursuer. Several applications can be envisioned for problems and motion strategies of this type. <p> For the case of problems in which H (F ) = 1, it is shown that the same region can require recontamination as many as (n) times. This result is surprising because pursuit-evasion in a graph is known not to require any recontaminations [12]. In <ref> [23] </ref> a free space was given that requires two recontaminations, which at least established that recontamination is generally necessary for visibility-based pursuit evasion. Consider the problem of determining the minimum number of pursuers, H (F ), required to find an evader in a given free space F . <p> Consider the problem of determining the minimum number of pursuers, H (F ), required to find an evader in a given free space F . This number will generally depend on both the topological and geometric complexity of F . In <ref> [23] </ref> a class of simple polygons is identified for which a single pursuer suffices (referred to as "hedgehogs"). Some interesting upper and lower bounds on H (F ) are presented in terms of free space properties such as "bushiness" and reflex vertices in [25]. <p> Figures 12-16 show several computed examples. Due to a large number of conservative cells, Figures 14-16 are illustrated with the cell decompositions in separate diagrams from the solution diagrams. Figure 14 shows the hookpin example described in <ref> [23] </ref>. Note that the leftmost pin is recontaminated twice, and the pins are visited in the same order as mentioned in [23]. Figure 15 is an instance of the sequence described in Section 3 that requires a linear number of recontaminations. <p> Figure 14 shows the hookpin example described in <ref> [23] </ref>. Note that the leftmost pin is recontaminated twice, and the pins are visited in the same order as mentioned in [23]. Figure 15 is an instance of the sequence described in Section 3 that requires a linear number of recontaminations. The region near the top of the figure is recontaminated 3 times. <p> The conservative cell and edge-visibility concepts could be applied for the 3-D case, but considerable challenges would be faced to produce an efficient algorithm. Another problem variation is to consider a limited viewing angle, or a set of viewing rays as considered in <ref> [23] </ref>. A limited viewing angle can realistically occur in applications, and the problem can be extended to planning strategies that sweep viewing angles in addition to moving the pursuers.
Reference: [24] <author> R. Talluri and J. K. Aggarwal. </author> <title> Mobile robot self-location using model-image feature correspondence. </title> <journal> IEEE Trans. Robot. & Autom., </journal> <volume> 12(1) </volume> <pages> 63-77, </pages> <month> February </month> <year> 1996. </year>
Reference-contexts: Each edge is extended in any direction possible, and each pair of vertices is extended outward only if both directions are free along the line drawn through the pair. A similar decomposition has been used for robot localization in <ref> [9, 24] </ref>, and generates O (n 3 ) regions in the worst case. The following statement yields an important property that will allow us to explore the information space combinatorially: Lemma 4 Each region in D 2 D is conservative.
Reference: [25] <author> M. Yamashita, H. Unemoto, I. Suzuki, and T. Kameda. </author> <title> Searching for mobile intruders in a polygonal region by a group of mobile searchers. </title> <type> Technical Report TR-96-07-01, </type> <institution> Dept. of Electrical Engineering and Computer Science, University of Wisconsin - Milwaukee, </institution> <month> July </month> <year> 1996. </year> <month> 28 </month>
Reference-contexts: In [23] a class of simple polygons is identified for which a single pursuer suffices (referred to as "hedgehogs"). Some interesting upper and lower bounds on H (F ) are presented in terms of free space properties such as "bushiness" and reflex vertices in <ref> [25] </ref>. For any F that has at least one hole, it is clear that at least two pursuers will be necessary; if a single pursuer is used, the evader could always move so that the hole is between the evader and pursuer. <p> Based on the previous observation and the fact that each triangular region can be trivially searched by a single pursuer, H (F ) = O (lg n). 2 A similar logarithmic bound was also obtained in <ref> [25] </ref>. The remaining question for simply-connected free spaces is whether there actually exist problems that require a logarithmic number of pursuers. Some results from graph searching will first be described and utilized to construct difficult worst-case problem instances.
References-found: 25

