URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-95-28.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Title: Chip and Package Co-Design of Clock Networks  
Author: Qing Zhu Wayne Wei-Ming Dai David Helmbold Martine Schlag Dean 
Degree: A dissertation submitted in partial satisfaction of the requirements for the degree of Doctor of Philosophy in Computer Engineering by  The dissertation of Qing Zhu is approved:  
Date: June 1995  
Affiliation: University of California Santa Cruz  of Graduate Studies and Research  
Abstract-found: 0
Intro-found: 1
Reference: [ABP90] <author> B. Awerbuch, A. Baratz, and D. Peleg. </author> <title> Cost-sensetive analysis of communication protocols. </title> <booktitle> In Proc. ACM Symp. on Principles of Distributed Computing, </booktitle> <pages> pages 177-187, </pages> <year> 1990. </year>
Reference-contexts: A similar approach is also proposed by Awerbuch, Baratz and Peleg <ref> [ABP90] </ref>. Lim, Cheng and Wu [LC92] proposed a modified version of Prim's minimum spanning tree algorithm to control the radius for individual source-sinks connections.
Reference: [AHHK93] <author> C.J. Alpert, T.C. Hu, J.H. Huang, </author> <title> and A.B. Kahng. A direct combination of the prim and dijkstra constructions for improved performance-driven global routing. </title> <booktitle> In Proceedings of IEEE Intl. Symposium on Circuits and Systems, </booktitle> <pages> pages 1869-1872, </pages> <year> 1993. </year>
Reference-contexts: The radius-cost trade-off tree can be viewed as the one constructed between the minimum spanning tree (MST) (or minimum Steiner tree) and the shortest-path tree (SPT); Alpert, Hu, Huang and Kahng proposed a algorithm <ref> [AHHK93] </ref> which makes this MST-SPT combination in the tree construction. Cong, Leung and Zhou [CLZ93] optimized special Steiner arborescences called A-trees to make the MST-SPT trade off.
Reference: [Anc82] <author> F. Anceau. </author> <title> A synchronous approach for clocking vlsi systems. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> SC(17):51-56, </volume> <year> 1982. </year>
Reference-contexts: Meanwhile, the delay and power are also decreased for the clock tree on the package layer due to the far smaller interconnect RC parasitics. 2.6 Related Work The two-level clock distribution approach is suitable for large size systems in VLSI, MCM and WSI. Anceau <ref> [Anc82] </ref>, Friedman and Powell [FP84] and Embabi [BE94] proposed the modular design methodology of clock distribution. They assume the system can be partitioned into modules, and the size of each module has to be small enough so that the 2.
Reference: [Bak87] <author> H. Bakoglu. </author> <title> Circuits, Interconnections, and Packaging for VLSI. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1987. </year>
Reference-contexts: Registers (clock terminals) are assumed to have the unique skew bound 0:05ns (smaller one of positive and negative skew bounds) for testing the benchmarks. All local clock buffers take the uniform 8X 0:6um CMOS inverter with the electrical data derived from <ref> [Bak87] </ref> with the output resistance 396, the input capacitance 80f F and the intrinsic delay 0:035ns. The global driver is 16X inverter size with the output resistance 198. The chip parameters are provided in benchmarks by [Tsa91b, JSK90], the package and solder bump parameters are shown in 2. <p> This chapter shows our research work on other timing critical nets. As feature sizes shrink to 0:5 micron and less, we enter the era of deep-submicron VLSI designs. According to the interconnect scaling theory <ref> [Bak87] </ref>, the interconnect resistance is in proportion to the square of the scaling factor, such that the interconnect resistance becomes comparable to gate on-resistance. Meanwhile, as the gate delays and gate sizes are scaled down, the interconnect delays become more dominant.
Reference: [BBB + 89] <author> S. Boon, S. Butler, R. Byrne, B. Setering, M. Casalanda, and A. Scherf. </author> <title> High performance clock distribution for cmos asics. </title> <booktitle> In IEEE Custom Integrated Circuits Conference, </booktitle> <pages> pages 15.4.1-15.4.5, </pages> <year> 1989. </year>
Reference-contexts: Developing CAD tools for chip and package interconnect co-design is expected. 7.3 Interconnect Electromigration Interconnect electromigration, caused by high current density, needs to be accounted for in the design of a large size clock network <ref> [BBB + 89] </ref>. Electromigration is a wear-out phenomenon, in which the mean time before failure (MTBF) of a metal wire predominantly depends on the current density. The current density of a wire is inversely proportional to the width of a wire.
Reference: [BE94] <author> D.E. Brueske and S.H.K. Embabi. </author> <title> A dynamic clock synchronization technique for large systems. </title> <journal> IEEE Transactions on Components, Packaging, and Manufaturing Technology. Part B: Advanced Packaging, </journal> <volume> 17(3) </volume> <pages> 350-361, </pages> <month> Aug. </month> <year> 1994. </year>
Reference-contexts: Anceau [Anc82], Friedman and Powell [FP84] and Embabi <ref> [BE94] </ref> proposed the modular design methodology of clock distribution. They assume the system can be partitioned into modules, and the size of each module has to be small enough so that the 2.
Reference: [BK92] <author> K.D. Boese and A.B. Kahng. </author> <title> Zero-skew clock routing trees with minimum wirelength. </title> <booktitle> In Proc. 5th IEEE Intl. Conf. on ASIC, </booktitle> <pages> pages 17-21, </pages> <year> 1992. </year>
Reference-contexts: This algorithm can also handle buffered clock trees with variable loading capacitances. This algorithm may need to elongate faster paths via wire "snaking" as necessary. Other algorithms <ref> [CHJ + 92, BK92, Eda93a, CC93, Eda94] </ref> further reduced the total wire length of the clock tree, based on the Elmore delay model. Chao, Hsu and Ho [CHJ + 92] proposed a deferred-merge embedding (DME) method, achieving 10% wire reduction over [Tsa91b]. <p> Other algorithms [CHJ + 92, BK92, Eda93a, CC93, Eda94] further reduced the total wire length of the clock tree, based on the Elmore delay model. Chao, Hsu and Ho [CHJ + 92] proposed a deferred-merge embedding (DME) method, achieving 10% wire reduction over [Tsa91b]. Boese and Kahng <ref> [BK92] </ref> independently developed an algorithm with the identical principle of the DME, achieving 12% wire reduction. Edahiro [Eda93a, Eda94] proposed a greedy DME algorithm based on the neighbor clustering, achieving 17% wire reduction, which is the best result of current zero skew clock routing algorithms.
Reference: [BKMR93] <author> K. D. Boese, A. B. Kahng, B.A. Mccoy, and G. Robins. </author> <title> Near-optimal critical sink routing tree constructions. </title> <type> In technical report TR-930027, UCLA CS Department, </type> <pages> pages 1-43, </pages> <year> 1993. </year>
Reference-contexts: Boese, Kahng, McCoy and Robins have proposed several methods <ref> [BKMR93, BKMR94, BKR93] </ref> to minimize the delays at identified critical sinks; i.e. the optimal tree minimizes the linear combination of sink delays f = P k d (s i ), where ff i (ff i 0) is the the criticality of the sink s i . <p> BB-SORT constructs the near-optimal tree that minimizes the maximal Elmore delay of the interconnect tree. Although BB-SORT-C and BB-SORT have exponential time complexity, they provides the optimal or near-optimal solutions for the empirical analysis of other heuristics. Boese, Kahng and Robins also proposed two heuristics <ref> [BKMR93, BKR93, BKMR94] </ref> for the minimum Elmore delay Steiner trees: SERT and SERT-C. SERT is a modified Prim's algorithm when adding sinks to the tree it minimizes the maximal Elmore delay of the interconnect tree. SERT-C is a modification of SERT that minimizes the delay at a single critical sink.
Reference: [BKMR94] <author> K. D. Boese, A. B. Kahng, B.A. Mccoy, and G. Robins. </author> <title> Rectilinear steiner trees with minimum elmore delay. </title> <booktitle> In Proc. of 31th Design Automation Conf., </booktitle> <pages> pages 381-386, </pages> <year> 1994. </year>
Reference-contexts: Boese, Kahng, McCoy and Robins have proposed several methods <ref> [BKMR93, BKMR94, BKR93] </ref> to minimize the delays at identified critical sinks; i.e. the optimal tree minimizes the linear combination of sink delays f = P k d (s i ), where ff i (ff i 0) is the the criticality of the sink s i . <p> They proposed two branch and bound algorithms BB-SORT-C and BB-SORT. BB-SORT-C constructs the optimal critical sink tree to minimize the linear combination of sink delays, and the optimality is proved based on the observation <ref> [BKMR94] </ref> that the Hanan grid contains all Steiner points of the optimal critical sink tree. BB-SORT constructs the near-optimal tree that minimizes the maximal Elmore delay of the interconnect tree. <p> BB-SORT constructs the near-optimal tree that minimizes the maximal Elmore delay of the interconnect tree. Although BB-SORT-C and BB-SORT have exponential time complexity, they provides the optimal or near-optimal solutions for the empirical analysis of other heuristics. Boese, Kahng and Robins also proposed two heuristics <ref> [BKMR93, BKR93, BKMR94] </ref> for the minimum Elmore delay Steiner trees: SERT and SERT-C. SERT is a modified Prim's algorithm when adding sinks to the tree it minimizes the maximal Elmore delay of the interconnect tree. SERT-C is a modification of SERT that minimizes the delay at a single critical sink. <p> If a max-delay-slack tree still cannot have the non-negative slacks, the locations of the source and sinks or the logic circuits have to be updated. Max-delay-slack tree construction has been proved to be a NP-hard problem <ref> [ZPD94, BKMR94] </ref>. Prasitjutrakul and Kubitz [PK90] proposed a heuristic that constructs a max-delay-slack tree by connecting sinks to the tree in the order of the closeness to the tree. This enforced order based on neighborness will definitely lose the delay optimization [BKR93]. <p> Experimental results are shown in Table 1 and Table 6.2. Since there are no known standard benchmarks, we take the benchmarks originally for the clock nets [Tsa91a, CHJ + 92]. Note that only random examples are used in most of related papers <ref> [CKR + 92, BKR93, BKMR94] </ref>. For the reason of efficiency, we partition every benchmark in multiple nets with on average 15 terminals.
Reference: [BKR93] <author> K. D. Boese, A. B. Kahng, and G. Robins. </author> <title> High-performance routing trees with identified critical sinks. </title> <booktitle> In Proc. of 30th Design Automation Conf., </booktitle> <pages> pages 182-187, </pages> <year> 1993. </year>
Reference-contexts: Boese, Kahng, McCoy and Robins have proposed several methods <ref> [BKMR93, BKMR94, BKR93] </ref> to minimize the delays at identified critical sinks; i.e. the optimal tree minimizes the linear combination of sink delays f = P k d (s i ), where ff i (ff i 0) is the the criticality of the sink s i . <p> BB-SORT constructs the near-optimal tree that minimizes the maximal Elmore delay of the interconnect tree. Although BB-SORT-C and BB-SORT have exponential time complexity, they provides the optimal or near-optimal solutions for the empirical analysis of other heuristics. Boese, Kahng and Robins also proposed two heuristics <ref> [BKMR93, BKR93, BKMR94] </ref> for the minimum Elmore delay Steiner trees: SERT and SERT-C. SERT is a modified Prim's algorithm when adding sinks to the tree it minimizes the maximal Elmore delay of the interconnect tree. SERT-C is a modification of SERT that minimizes the delay at a single critical sink. <p> The minimum Steiner tree is constructed by the 1-Steiner algorithm [KR92] 6. Delay Bounded Routing 94 interconnect trees are as follows: 1-Steiner 41000 m, DBMST 41100 m, SERT 53200 m. and the minimum delay tree by the SERT algorithm <ref> [BKR93] </ref>. Results are summarized in Figure 6.5. The total wire length of DBMST is very close to (0:24% higher) that of 1-Steiner, and is 22:7% less than that of SERT. <p> Prasitjutrakul and Kubitz [PK90] proposed a heuristic that constructs a max-delay-slack tree by connecting sinks to the tree in the order of the closeness to the tree. This enforced order based on neighborness will definitely lose the delay optimization <ref> [BKR93] </ref>. Natural order of sink connections should be related to the delay slacks, instead of the physical closeness, since our goal is to maximize the minimum delay slack and sinks have variable delay bounds. <p> Experimental results are shown in Table 1 and Table 6.2. Since there are no known standard benchmarks, we take the benchmarks originally for the clock nets [Tsa91a, CHJ + 92]. Note that only random examples are used in most of related papers <ref> [CKR + 92, BKR93, BKMR94] </ref>. For the reason of efficiency, we partition every benchmark in multiple nets with on average 15 terminals. <p> Delay Bounded Routing 105 Table 1 lists the result statistics of interconnect trees constructed by DBMST, 1-Steiner [KR92] and SERT <ref> [BKR93] </ref> based on the RC Elmore delay. Besides the delay satisfication for all testing examples, DBMST obtains the total wire length on average 0:9% higher than the total wire length obtained by 1-Steiner.
Reference: [Cay89] <author> A. </author> <title> Cayley. A Theorem on Trees. </title> <journal> Quart. J. Math., </journal> <volume> 23 </volume> <pages> 376-378, 1889. </pages>
Reference-contexts: Based on Cayley's Theorem <ref> [Cay89] </ref>, there are n n2 possible spanning trees on n nodes, where n is the number of nodes in the Hanan grid. The nodes of the clock tree is a subset of total n nodes in the grid. <p> IA constructs an initial Steiner tree and iteratively refines the Steiner tree to get to the global minimum. By Cayley's Theorem <ref> [Cay89] </ref>, there are n n2 possible spanning trees on n nodes; Thus the number of Steiner trees spanning n s nodes (n s n) is then bounded by n n2 . Construct a Markov chain of n n2 states, where each state corresponds to a spanning tree.
Reference: [CC93] <author> Nan-Chi Chou and Chung-Kuan Cheng. </author> <title> Wire length and delay minimization in general clock net routing. </title> <booktitle> Digest of Tech. Papers of IEEE Intl. Conf. on Computer Aided Design, </booktitle> <pages> pages 552-555, </pages> <year> 1993. </year>
Reference-contexts: This algorithm can also handle buffered clock trees with variable loading capacitances. This algorithm may need to elongate faster paths via wire "snaking" as necessary. Other algorithms <ref> [CHJ + 92, BK92, Eda93a, CC93, Eda94] </ref> further reduced the total wire length of the clock tree, based on the Elmore delay model. Chao, Hsu and Ho [CHJ + 92] proposed a deferred-merge embedding (DME) method, achieving 10% wire reduction over [Tsa91b]. <p> Similar idea can also be found in [LM92]. A simulated annealing version of Elmore delay matching algorithm, was proposed by Chou and Cheng <ref> [CC93] </ref>. We proposed the first planar equal path length clock tree construction algorithm based on the motivation that a single-layer clock tree has the advantage of reducing the delay and attenuation through vias as well as the sensitivity to process variation [ZD92]. <p> Table 4.4 shows the total wire length comparison of the proposed two-level clock distribution scheme under tolerable skew constraints and the result obtained by a zero skew clock routing algorithm [Eda93a] which was reported to achieve the smallest total wire length among existing zero skew clock routing algorithms <ref> [Tsa91b, CHJ + 92, CHJ91, CC93] </ref>. The total wire length in the two-level clock distribution scheme includes the refined global clock tree and local clock trees. Making use of tolerable skew concept as in the proposed scheme 4.
Reference: [CHJ91] <author> T.H. Chao, Y.C. Hsu, and J.M.Ho. </author> <title> Zero skew clock net routing. </title> <booktitle> In Proc. of 29th Design Automation Conf., </booktitle> <pages> pages 518-523, </pages> <year> 1991. </year>
Reference-contexts: Table 4.4 shows the total wire length comparison of the proposed two-level clock distribution scheme under tolerable skew constraints and the result obtained by a zero skew clock routing algorithm [Eda93a] which was reported to achieve the smallest total wire length among existing zero skew clock routing algorithms <ref> [Tsa91b, CHJ + 92, CHJ91, CC93] </ref>. The total wire length in the two-level clock distribution scheme includes the refined global clock tree and local clock trees. Making use of tolerable skew concept as in the proposed scheme 4.
Reference: [CHJ + 92] <author> T.H. Chao, Y.C. Hsu, J.M.Ho, Kenneth D. Boese, and Andraw B. Kahng. </author> <title> Zero skew clock net routing. </title> <journal> IEEE Transactions on Circuits and Systems, </journal> <volume> 39(11) </volume> <pages> 799-814, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: On the package layer, the planar equal path length clock tree is very close to the zero skew clock tree (less than 4ps). On the chip layer, the planar equal path length clock tree probably produces a untolerable skew such that RC Elmore delay balance clock routing techniques <ref> [Tsa91b, CHJ + 92] </ref> are necessary. Meanwhile, the delay and power are also decreased for the clock tree on the package layer due to the far smaller interconnect RC parasitics. 2.6 Related Work The two-level clock distribution approach is suitable for large size systems in VLSI, MCM and WSI. <p> This algorithm can also handle buffered clock trees with variable loading capacitances. This algorithm may need to elongate faster paths via wire "snaking" as necessary. Other algorithms <ref> [CHJ + 92, BK92, Eda93a, CC93, Eda94] </ref> further reduced the total wire length of the clock tree, based on the Elmore delay model. Chao, Hsu and Ho [CHJ + 92] proposed a deferred-merge embedding (DME) method, achieving 10% wire reduction over [Tsa91b]. <p> This algorithm may need to elongate faster paths via wire "snaking" as necessary. Other algorithms [CHJ + 92, BK92, Eda93a, CC93, Eda94] further reduced the total wire length of the clock tree, based on the Elmore delay model. Chao, Hsu and Ho <ref> [CHJ + 92] </ref> proposed a deferred-merge embedding (DME) method, achieving 10% wire reduction over [Tsa91b]. Boese and Kahng [BK92] independently developed an algorithm with the identical principle of the DME, achieving 12% wire reduction. <p> Table 4.4 shows the total wire length comparison of the proposed two-level clock distribution scheme under tolerable skew constraints and the result obtained by a zero skew clock routing algorithm [Eda93a] which was reported to achieve the smallest total wire length among existing zero skew clock routing algorithms <ref> [Tsa91b, CHJ + 92, CHJ91, CC93] </ref>. The total wire length in the two-level clock distribution scheme includes the refined global clock tree and local clock trees. Making use of tolerable skew concept as in the proposed scheme 4. <p> optimizing the interconnect has centered on two techniques: one adjusting the interconnect length and the another adjusting the interconnect width. 1 The length adjustment technique moves the balance point or elongates the interconnect length to achieve the skew reduction, and this idea can be found in previous clock routing algorithms <ref> [Tsa91b, Tsa93, CHJ + 92] </ref>. The sizing technique achieves the skew reduction by assigning variable widths for wires. <p> We evaluate the performance of DBMST compared with existing approaches based on 0:35m CMOS technology (Table 6.4). Experimental results are shown in Table 1 and Table 6.2. Since there are no known standard benchmarks, we take the benchmarks originally for the clock nets <ref> [Tsa91a, CHJ + 92] </ref>. Note that only random examples are used in most of related papers [CKR + 92, BKR93, BKMR94]. For the reason of efficiency, we partition every benchmark in multiple nets with on average 15 terminals.
Reference: [CK86] <author> H.H. Chen and E.S. Kuh. Glitter: </author> <title> A gridless variable-width channel router. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 5(4) </volume> <pages> 459-465, </pages> <year> 1986. </year> <note> References 119 </note>
Reference-contexts: The gridless variable width detailed routing algorithms <ref> [CK86] </ref> have been well investigated. t 1 for delay balance. (c) Widening the wire width, such that speeds up t 2 for delay balance. Even through both techniques achieves zero skew, but the sizing technique reduces the path delay, while the wire elongating technique increases the path delay.
Reference: [CKR90] <author> Jason Cong, Andrew B. Kahng, and Gabriel Robins. </author> <title> Matching-based methods for high-performance clock routing. </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> CAD-12(8):1157-1169, </volume> <year> 1990. </year>
Reference-contexts: Kahng, Cong and Robins <ref> [KCR91, CKR90] </ref> proposed an efficient recursive geometric matching (RGM) method, constructing the clock tree in a bottom-up fashion. RGM out-performs MMM on benchmarks in the reduction of the path 3. Planar Equal Path Length Clock Tree Construction 29 length skew and the total wire length. <p> This problem has been proven to be a NP-hard <ref> [KCR91, CKR90] </ref>. We present a novel algorithm to construct a planar equal path length tree. In addition, the path length from the source to destinations is minimized. We construct a planar equal path length rectilinear clock tree in two steps.
Reference: [CKR + 92] <author> J. Cong, A.B. Kahng, G. Robins, M. Sarrafzadeh, and C.K. Wong. </author> <title> Provably good performance-driven global routing. </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> CAD-11(6):739-752, </volume> <year> 1992. </year>
Reference-contexts: Cohoon and Randall [CR91] proposed a heuristic which simultaneously considered the cost and the radius. Cong, Kahng, Robins, Sarrafzadeh and Wong <ref> [CKR + 92] </ref> proposed a generalized formulation using a parameter * to trade-off the radius and cost. They [CKR + 92] proposed a provably good algorithm BRBC, that can always generate a tree in which the path length is bounded by (1 + *)R (R is the source-to-sink radius) and the <p> Cohoon and Randall [CR91] proposed a heuristic which simultaneously considered the cost and the radius. Cong, Kahng, Robins, Sarrafzadeh and Wong <ref> [CKR + 92] </ref> proposed a generalized formulation using a parameter * to trade-off the radius and cost. They [CKR + 92] proposed a provably good algorithm BRBC, that can always generate a tree in which the path length is bounded by (1 + *)R (R is the source-to-sink radius) and the wiring cost is within a factor 2 (1 + (2=*)) of the optimal Steiner tree. <p> Experimental results are shown in Table 1 and Table 6.2. Since there are no known standard benchmarks, we take the benchmarks originally for the clock nets [Tsa91a, CHJ + 92]. Note that only random examples are used in most of related papers <ref> [CKR + 92, BKR93, BKMR94] </ref>. For the reason of efficiency, we partition every benchmark in multiple nets with on average 15 terminals.
Reference: [CL93] <author> Jason Cong and Kwok-Shing Leung. </author> <title> Optimal wiresizing under the distributed elmore delay model. </title> <booktitle> In Digest of Tech. Papers of IEEE Intl. Conf. on Computer Aided Design, </booktitle> <pages> pages 634-639, </pages> <year> 1993. </year>
Reference-contexts: Even through both techniques achieves zero skew, but the sizing technique reduces the path delay, while the wire elongating technique increases the path delay. Relevant wire sizing research has been done <ref> [CLZ93, PMOP94, CLZ92, CL93, Eda93b] </ref>. Cong, Leung and Zhou [CLZ93, CLZ92, CL93] first used the wire sizing technique for the interconnect delay minimization of general nets based on dynamic programming. <p> Even through both techniques achieves zero skew, but the sizing technique reduces the path delay, while the wire elongating technique increases the path delay. Relevant wire sizing research has been done [CLZ93, PMOP94, CLZ92, CL93, Eda93b]. Cong, Leung and Zhou <ref> [CLZ93, CLZ92, CL93] </ref> first used the wire sizing technique for the interconnect delay minimization of general nets based on dynamic programming. Pullela, Menezes and Pillage [PMOP94] used wire sizing for reducing the clock skew caused by the process variation, while Edahiro [Eda93b] for the delay reduction of the clock net.
Reference: [CLR90] <author> T.H. Cormen, C.E. Leiserson, and R.L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> The MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: Those neighbor vertices, which have not been in Q before, are inserted into Q and keyed by their distance estimates. The details of the Dijkstra's algorithm can be found in the textbook <ref> [CLR90] </ref>. Two subtrees T a and T b are disjoint in the graph. In order to find the shortest path from T a (source subtree) to T b (destination subtree), the Dijkstra's algorithm is modified as follows: 1. <p> Then, Dijkstra's algorithm is called that repeatedly selects the vertex in Q with the minimum distance estimate, makes the relaxation of the shortest-path distance estimates to the neighbor vertices, and inserts into Q the neighbor vertices which have not been in Q before <ref> [CLR90] </ref>. 4. Skew Constrained Clock Routing 59 3. The algorithm terminates when any vertex in the destination subtree T b is selected from Q. The subtree-to-subtree shortest path is found in one pass by calling the above version of the Dijkstra's algorithm. <p> The following property is the summary of the above discussion. Property: After a round of cut-and-link refinement, the new tree is planar, skew constrained and has smaller cost. 1 The relaxization procedure in the Dijkstra's algorithm <ref> [CLR90] </ref> will never change the distance estimates of the vertices in T a , because vertices in T a are initialized to have the zero distance estimate. Note that edge costs are non-negative in the graph. 4.
Reference: [CLZ92] <author> Jason Cong, Kwok-Shing Leung, and Dian Zhou. </author> <title> Performance-driven interconnect design based on distributed rc delay model. </title> <type> In Technical Report, </type> <institution> University of California, </institution> <address> Los Angeles, </address> <pages> pages 1-36, </pages> <year> 1992. </year>
Reference-contexts: Even through both techniques achieves zero skew, but the sizing technique reduces the path delay, while the wire elongating technique increases the path delay. Relevant wire sizing research has been done <ref> [CLZ93, PMOP94, CLZ92, CL93, Eda93b] </ref>. Cong, Leung and Zhou [CLZ93, CLZ92, CL93] first used the wire sizing technique for the interconnect delay minimization of general nets based on dynamic programming. <p> Even through both techniques achieves zero skew, but the sizing technique reduces the path delay, while the wire elongating technique increases the path delay. Relevant wire sizing research has been done [CLZ93, PMOP94, CLZ92, CL93, Eda93b]. Cong, Leung and Zhou <ref> [CLZ93, CLZ92, CL93] </ref> first used the wire sizing technique for the interconnect delay minimization of general nets based on dynamic programming. Pullela, Menezes and Pillage [PMOP94] used wire sizing for reducing the clock skew caused by the process variation, while Edahiro [Eda93b] for the delay reduction of the clock net.
Reference: [CLZ93] <author> Jason Cong, Kwok-Shing Leung, and Dian Zhou. </author> <title> Performance-driven interconnect design based on distributed rc delay model. </title> <booktitle> In Proceedings of 30th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 606-611, </pages> <year> 1993. </year>
Reference-contexts: Even through both techniques achieves zero skew, but the sizing technique reduces the path delay, while the wire elongating technique increases the path delay. Relevant wire sizing research has been done <ref> [CLZ93, PMOP94, CLZ92, CL93, Eda93b] </ref>. Cong, Leung and Zhou [CLZ93, CLZ92, CL93] first used the wire sizing technique for the interconnect delay minimization of general nets based on dynamic programming. <p> Even through both techniques achieves zero skew, but the sizing technique reduces the path delay, while the wire elongating technique increases the path delay. Relevant wire sizing research has been done [CLZ93, PMOP94, CLZ92, CL93, Eda93b]. Cong, Leung and Zhou <ref> [CLZ93, CLZ92, CL93] </ref> first used the wire sizing technique for the interconnect delay minimization of general nets based on dynamic programming. Pullela, Menezes and Pillage [PMOP94] used wire sizing for reducing the clock skew caused by the process variation, while Edahiro [Eda93b] for the delay reduction of the clock net. <p> The radius-cost trade-off tree can be viewed as the one constructed between the minimum spanning tree (MST) (or minimum Steiner tree) and the shortest-path tree (SPT); Alpert, Hu, Huang and Kahng proposed a algorithm [AHHK93] which makes this MST-SPT combination in the tree construction. Cong, Leung and Zhou <ref> [CLZ93] </ref> optimized special Steiner arborescences called A-trees to make the MST-SPT trade off. An important problem needed to be addressed is how to turn the delay bounds to the path length bounds or radius, since the delay of an RC tree depends on the topology of 6.
Reference: [CR91] <author> J. P. Cohoon and L. J. Randall. </author> <title> Critical net routing. </title> <booktitle> In Proc. IEEE Intl. Conf. on Computer Design, </booktitle> <pages> pages 174-177, </pages> <year> 1991. </year>
Reference-contexts: One early related work is done by Ho, Lee, Chang and Wong [HLCW89] which investigated the complexity and NP-hardness of finding a bounded-diameter spanning tree or a bounded-diameter Steiner tree in a graph. Cohoon and Randall <ref> [CR91] </ref> proposed a heuristic which simultaneously considered the cost and the radius. Cong, Kahng, Robins, Sarrafzadeh and Wong [CKR + 92] proposed a generalized formulation using a parameter * to trade-off the radius and cost.
Reference: [DF83] <author> D.F.Wann and M.A. Franklin. </author> <title> Asynchronous and clocked control structures of vlsi-based interconnection networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-32(3):284-293, </volume> <month> March </month> <year> 1983. </year>
Reference-contexts: The refinement phase is addressed in the following chapter. 3.1 Related Work H-clock trees are widely used for symmetric distribution of clock terminals with uniform loading capacitances, such as in systolic arrays of processing elements <ref> [DF83, FK85] </ref>. Some algorithms have been proposed to construct zero-skew clock trees for arbitrary (nonsymmetric) distribution of clock terminals. Jackson and Kuh [JSK90] proposed the Method of Means and Medians (MMM), constructing a generalized H-tree in a top-down fashion.
Reference: [DW92] <author> D. Dobberpuhl and R. Witek. </author> <title> A 200mhz 64b dual-issue cmos microprocessor. </title> <booktitle> In Proc. IEEE Intl. Solid-State Circuits Conf., </booktitle> <pages> pages 106-107, </pages> <year> 1992. </year>
Reference: [Eda93a] <author> M. Edahiro. </author> <title> A clustering-based optimization algorithm in zero-skew routings. </title> <booktitle> In Proceedings of 30th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 612-616, </pages> <year> 1993. </year>
Reference-contexts: This algorithm can also handle buffered clock trees with variable loading capacitances. This algorithm may need to elongate faster paths via wire "snaking" as necessary. Other algorithms <ref> [CHJ + 92, BK92, Eda93a, CC93, Eda94] </ref> further reduced the total wire length of the clock tree, based on the Elmore delay model. Chao, Hsu and Ho [CHJ + 92] proposed a deferred-merge embedding (DME) method, achieving 10% wire reduction over [Tsa91b]. <p> Chao, Hsu and Ho [CHJ + 92] proposed a deferred-merge embedding (DME) method, achieving 10% wire reduction over [Tsa91b]. Boese and Kahng [BK92] independently developed an algorithm with the identical principle of the DME, achieving 12% wire reduction. Edahiro <ref> [Eda93a, Eda94] </ref> proposed a greedy DME algorithm based on the neighbor clustering, achieving 17% wire reduction, which is the best result of current zero skew clock routing algorithms. Similar idea can also be found in [LM92]. <p> Table 4.4 shows the total wire length comparison of the proposed two-level clock distribution scheme under tolerable skew constraints and the result obtained by a zero skew clock routing algorithm <ref> [Eda93a] </ref> which was reported to achieve the smallest total wire length among existing zero skew clock routing algorithms [Tsa91b, CHJ + 92, CHJ91, CC93]. The total wire length in the two-level clock distribution scheme includes the refined global clock tree and local clock trees. <p> Initial global clock tree is the planar equal path length tree, and the refined clock tree is obtained under the tolerable skew bound 0:05ns. can significantly reduce the total wire length of the clock trees. <ref> [Eda93a] </ref> Proposed scheme Reduction (m) (m) (on average) r1 1253347 1107112 r3 3193801 2628026 r5 9723726 7782269 primary1 129185 99943 primary2 303994 212923 Table 4.2: Total wire length compared with a zero skew clock routing algo rithm [Eda93a]. The proposed scheme has the tolerable skew 0:05ns. 5. <p> bound 0:05ns. can significantly reduce the total wire length of the clock trees. <ref> [Eda93a] </ref> Proposed scheme Reduction (m) (m) (on average) r1 1253347 1107112 r3 3193801 2628026 r5 9723726 7782269 primary1 129185 99943 primary2 303994 212923 Table 4.2: Total wire length compared with a zero skew clock routing algo rithm [Eda93a]. The proposed scheme has the tolerable skew 0:05ns. 5. Clock Network Sizing 67 CHAPTER 5.
Reference: [Eda93b] <author> M. Edahiro. </author> <title> Delay minimization for zero-skew routing. </title> <booktitle> In Digest of Tech. Papers of IEEE Intl. Conf. on Computer Aided Design, </booktitle> <pages> pages 563-566, </pages> <year> 1993. </year>
Reference-contexts: Even through both techniques achieves zero skew, but the sizing technique reduces the path delay, while the wire elongating technique increases the path delay. Relevant wire sizing research has been done <ref> [CLZ93, PMOP94, CLZ92, CL93, Eda93b] </ref>. Cong, Leung and Zhou [CLZ93, CLZ92, CL93] first used the wire sizing technique for the interconnect delay minimization of general nets based on dynamic programming. <p> Cong, Leung and Zhou [CLZ93, CLZ92, CL93] first used the wire sizing technique for the interconnect delay minimization of general nets based on dynamic programming. Pullela, Menezes and Pillage [PMOP94] used wire sizing for reducing the clock skew caused by the process variation, while Edahiro <ref> [Eda93b] </ref> for the delay reduction of the clock net. These 2 Resistance and capacitance of the interconnect are both increased by the wire length elongating; while the resistance is reduced by the wire width enlarging. 5.
Reference: [Eda94] <author> M. Edahiro. </author> <title> An efficient zero-skew routing algorithm. </title> <booktitle> In to appear on Proceedings of 31th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 1-13, </pages> <year> 1994. </year>
Reference-contexts: This algorithm can also handle buffered clock trees with variable loading capacitances. This algorithm may need to elongate faster paths via wire "snaking" as necessary. Other algorithms <ref> [CHJ + 92, BK92, Eda93a, CC93, Eda94] </ref> further reduced the total wire length of the clock tree, based on the Elmore delay model. Chao, Hsu and Ho [CHJ + 92] proposed a deferred-merge embedding (DME) method, achieving 10% wire reduction over [Tsa91b]. <p> Chao, Hsu and Ho [CHJ + 92] proposed a deferred-merge embedding (DME) method, achieving 10% wire reduction over [Tsa91b]. Boese and Kahng [BK92] independently developed an algorithm with the identical principle of the DME, achieving 12% wire reduction. Edahiro <ref> [Eda93a, Eda94] </ref> proposed a greedy DME algorithm based on the neighbor clustering, achieving 17% wire reduction, which is the best result of current zero skew clock routing algorithms. Similar idea can also be found in [LM92].
Reference: [Elm48] <author> W.C. </author> <title> Elmore. The transient response of damped linear networks with particular regard to wide-band amplifiers. </title> <journal> Journal of Applied Physics, </journal> <volume> 19(1) </volume> <pages> 55-63, </pages> <month> January </month> <year> 1948. </year>
Reference-contexts: They revealed the good fidelity of using Elmore delay model <ref> [Elm48] </ref> to guide a minimal delay interconnect tree compared to being guided by SPICE simulation. They proposed two branch and bound algorithms BB-SORT-C and BB-SORT. <p> The edge-cost function usually evaluates the wiring length or routing congestion. The path-delay function evaluates the delay in the interconnect tree from the source to sinks. Path delays of a RC interconnect tree are evaluated by the Elmore delay model <ref> [Elm48] </ref>. Path delays of a transmission line RLC tree are evaluated using the S-parameter based delay mamcromodels [LDWC93]. <p> A clock tree is modeled as a RC tree as shown in Fig. 8.3 with the line inductance not considered. Elmore delay is the first-order approximation of the response voltages at clock terminals in a RC tree <ref> [Elm48, RPH83] </ref>.
Reference: [Fis90] <author> J. P. Fishburn. </author> <title> Clock skew optimization. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 39(7) </volume> <pages> 945-951, </pages> <year> 1990. </year>
Reference-contexts: The central clock is distributed to every register in the circuit. Clock skew is the difference of clock delays to registers along the clock tree, which possibly makes two logic hazards: double clocking and zero clocking <ref> [Fis90, NF95] </ref>. The two kinds of hazard with the required clock skew limits are described as follows. <p> Hence, to avoid the double clocking <ref> [Fis90] </ref>, we have the positive skew constraint when t j t i : t j t i d min (i; j) H OLD (2:2) Analogously, zero-clocking can be used to designate the case when the data reach the register too late relative to the next clock edge. <p> Hence, to avoid the zero clocking 2. Clock Synthesis Scheme and Skew Constrained Net Clustering 17 <ref> [Fis90] </ref>, we have the negative skew constraint when t j t i : t i t j P d max (i; j) SET U P (2:3) Tolerable skew exists in a synchronous circuit: 1.
Reference: [FK85] <author> Allan L. Fisher and H.T. Kung. </author> <title> Synchronizing large vlsi processor arrays. </title> <journal> IEEE Transactions on Computers, </journal> <volume> c-34(8):734-740, </volume> <month> August </month> <year> 1985. </year>
Reference-contexts: The refinement phase is addressed in the following chapter. 3.1 Related Work H-clock trees are widely used for symmetric distribution of clock terminals with uniform loading capacitances, such as in systolic arrays of processing elements <ref> [DF83, FK85] </ref>. Some algorithms have been proposed to construct zero-skew clock trees for arbitrary (nonsymmetric) distribution of clock terminals. Jackson and Kuh [JSK90] proposed the Method of Means and Medians (MMM), constructing a generalized H-tree in a top-down fashion.
Reference: [FP84] <author> E. G. Friedman and S. Powell. </author> <title> Design and analysis of a hierarchical clock distribution system for synchronous standard cell/macrocell vlsi. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <note> sc-21(2):240-246, 1984. References 120 </note>
Reference-contexts: Meanwhile, the delay and power are also decreased for the clock tree on the package layer due to the far smaller interconnect RC parasitics. 2.6 Related Work The two-level clock distribution approach is suitable for large size systems in VLSI, MCM and WSI. Anceau [Anc82], Friedman and Powell <ref> [FP84] </ref> and Embabi [BE94] proposed the modular design methodology of clock distribution. They assume the system can be partitioned into modules, and the size of each module has to be small enough so that the 2.
Reference: [Fra92] <author> J. Frankle. </author> <title> Iterative and adaptive slack allocation for performance-driven layout and fpga routing. </title> <booktitle> In Proc. of 29th Design Automation Conf., </booktitle> <pages> pages 536-542, </pages> <year> 1992. </year>
Reference-contexts: Therefore, the delay bounds are obtained for the interconnect tree. Methods for the delay bound generation can also be found in <ref> [Luk91, YLS92, Fra92] </ref>. The delay bound assignment process specifies the delay bound for individual interconnect segments in order to guide the timing driven physical layout stage.
Reference: [Fry93] <author> Robert C. </author> <title> Frye. </title> <booktitle> Trends in silicon-on-silicon multichip modules. In IEEE Design & Test of Computers, </booktitle> <pages> pages 8-16, </pages> <year> 1993. </year>
Reference: [Fry94] <author> Robert C. Frye. </author> <title> Physical scaling and interconnection delay in multichip modules. </title> <journal> IEEE Transactions on Components, Packaging, And Manufacturing Technology. Part B: Advanced Packaging, </journal> <volume> 17(1) </volume> <pages> 30-37, </pages> <month> February </month> <year> 1994. </year>
Reference-contexts: An iterative approach is proposed for the delay bounded minimum Steiner tree (DBMST) construction. 8. Appendix: Clock Network Modeling and Delay Analysis 114 CHAPTER 8. Appendix: Clock Network Modeling and Delay Analysis For a multilayer embedded wire <ref> [Fry94] </ref> as shown in Fig. 8.1, the capacitance per unit length (neglecting the sidewall capacitance) is C *w=t i (8:1) where w is the line width, t i the insulator thickness, and * the dielectric permittivity.
Reference: [GFK + 93] <author> T. Gabara, W. Fischer, S. Knauer, R. Frye, K. Tai, and M. Lau. </author> <title> An i/o cmos buffer set for silicon multi chip modules(mcm). </title> <booktitle> In Proceedings of IEEE Multi-Chip Module Conference, </booktitle> <pages> pages 147-152, </pages> <year> 1993. </year>
Reference: [HLCW89] <author> J.M. Ho, D. T. Lee, C. H. Chang, and C. K. Wong. </author> <title> Bounded-diameter spanning tree and related problems. </title> <booktitle> In Proc. ACM Symp. on Computational Geometry, </booktitle> <pages> pages 276-282, </pages> <year> 1989. </year>
Reference-contexts: Therefore, research has been done in recent years on the interconnect tree construction based on the source-to-sink path delay requirement. People construct interconnect trees that trade-off the tree cost and the radius (the longest source-to-sink path length). One early related work is done by Ho, Lee, Chang and Wong <ref> [HLCW89] </ref> which investigated the complexity and NP-hardness of finding a bounded-diameter spanning tree or a bounded-diameter Steiner tree in a graph. Cohoon and Randall [CR91] proposed a heuristic which simultaneously considered the cost and the radius.
Reference: [HNY87] <author> P.S. Hauge, R. Nair, and E.J. Yoffa. </author> <title> Circuit placement for predictable performance. </title> <booktitle> In Digest of Tech. Papers of IEEE Intl. Conf. on Computer Aided Design, </booktitle> <pages> pages 88-91, </pages> <year> 1987. </year>
Reference-contexts: Delay bound for each interconnect segment is determined such that the delay bound D of the entire signal path is guaranteed. Hauge, Nair and Yoffa <ref> [HNY87] </ref> proposed the zero-slack algorithm that computes the maximal allowable delays for individual interconnect segments, based on the 6. Delay Bounded Routing 89 static timing analysis of logic paths.
Reference: [HVW89] <author> J.M. Ho, G. Vijayan, and C.K. Wong. </author> <title> A new approach to the rectilinear steiner tree problem. </title> <booktitle> In Proceedings of 26th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 161-166, </pages> <year> 1989. </year>
Reference-contexts: For each branch e = (v i ; v j ), the bounding box of e is the smallest rectangle which encloses the end points v i and v j as shown in Figure 3.11. Ho, Vijayan and Wong <ref> [HVW89, JHVW90] </ref> proposed a linear time algorithm, that derives an optimal cost rectilinear Steiner tree from a given minimum spanning tree (MST), by using L-shape embedding of branches. The difference here is that the embedding needs to maintain the planarity and equal path lengths of the clock tree.
Reference: [HXK + 93] <author> X. Hong, T. Xue, E.S. Kuh, C.K. Cheng, and J. Huang. </author> <title> Performance-driven steiner tree algorithms for global routing. </title> <booktitle> In Proc. of 30th Design Automation Conf., </booktitle> <year> 1993. </year>
Reference-contexts: SERT is a modified Prim's algorithm when adding sinks to the tree it minimizes the maximal Elmore delay of the interconnect tree. SERT-C is a modification of SERT that minimizes the delay at a single critical sink. While Hong, Xue, Kuh, Cheng and Huang <ref> [HXK + 93] </ref> proposed a modified Dreyfus-Wagner Steiner tree algorithm for minimizing the maximal path delay, Prasitjutrakul and Kubitz [PK90] proposed an algorithm for the minimization of the delay 6. Delay Bounded Routing 88 slacks (i.e., differences between the real delays and the given delay bounds) at sinks.
Reference: [JHVW90] <author> G. J.M. Ho, Vijayan, and C.K. Wong. </author> <title> New algorithms for the rectilinear steiner tree problem. </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> 9 </volume> <pages> 185-193, </pages> <month> Feb. </month> <year> 1990. </year>
Reference-contexts: For each branch e = (v i ; v j ), the bounding box of e is the smallest rectangle which encloses the end points v i and v j as shown in Figure 3.11. Ho, Vijayan and Wong <ref> [HVW89, JHVW90] </ref> proposed a linear time algorithm, that derives an optimal cost rectilinear Steiner tree from a given minimum spanning tree (MST), by using L-shape embedding of branches. The difference here is that the embedding needs to maintain the planarity and equal path lengths of the clock tree.
Reference: [JSK90] <author> M. A. B. Jackson, A. Srinivasan, and E. S. Kuh. </author> <title> Clock routing for high-performance ics. </title> <booktitle> In Proc. of 27th Design Automation Conf., </booktitle> <pages> pages 573-579, </pages> <year> 1990. </year>
Reference-contexts: The clock skew is caused mainly by the difference of interconnect delays in the two-level clock tree. Local clock trees within every cluster are routed with Manhattan minimum spanning trees. We tested benchmarks r1-r5 [Tsa91b] and primary1-primary2 <ref> [JSK90] </ref> to evaluate the performance of the proposed clock synthesis methodology. Registers (clock terminals) are assumed to have the unique skew bound 0:05ns (smaller one of positive and negative skew bounds) for testing the benchmarks. <p> The global driver is 16X inverter size with the output resistance 198. The chip parameters are provided in benchmarks by <ref> [Tsa91b, JSK90] </ref>, the package and solder bump parameters are shown in 2. Clock Synthesis Scheme and Skew Constrained Net Clustering 23 (a) registers. Table 1.1. Table 2.5 shows the results. <p> Some algorithms have been proposed to construct zero-skew clock trees for arbitrary (nonsymmetric) distribution of clock terminals. Jackson and Kuh <ref> [JSK90] </ref> proposed the Method of Means and Medians (MMM), constructing a generalized H-tree in a top-down fashion. MMM recursively partitions a mass of clock terminals into two subclusters, and then connects the center of the mass to the centers of two subclusters. <p> We tested our planar clock routing algorithm (PCR), and compared it to other clock routing algorithms MMM <ref> [JSK90] </ref> and RGM [KCR91] which are based on linear path length delay model. Table 3.7 highlights the comparison of two MCNC benchmarks. The criterion compared are: planarity, path length skew, longest path length, total wire length, and running time. MMM and RGM do not produce equal path length clock trees.
Reference: [KCR91] <author> A. Kahng, J. Cong, and G. Robins. </author> <title> High-performance clock routing based on recursive geometric matching. </title> <booktitle> In Proc. of 28th Design Automation Conf., </booktitle> <pages> pages 322-327, </pages> <year> 1991. </year>
Reference-contexts: Jackson and Kuh [JSK90] proposed the Method of Means and Medians (MMM), constructing a generalized H-tree in a top-down fashion. MMM recursively partitions a mass of clock terminals into two subclusters, and then connects the center of the mass to the centers of two subclusters. As analyzed <ref> [KCR91] </ref>, although the difference in path lengths from clock source to clock terminals is bounded by O ( 1 p n ) on the average case, MMM may produce a clock tree with path length difference as large as half the diameter of the chip. <p> Kahng, Cong and Robins <ref> [KCR91, CKR90] </ref> proposed an efficient recursive geometric matching (RGM) method, constructing the clock tree in a bottom-up fashion. RGM out-performs MMM on benchmarks in the reduction of the path 3. Planar Equal Path Length Clock Tree Construction 29 length skew and the total wire length. <p> RGM always yields a clock tree with equal path lengths for two, three, and four terminals. But no theoretical bound is given for the path length skew in general cases with more than four terminals. Instead of balancing path length in <ref> [KCR91] </ref>, Tsay [Tsa91b, Tsa93] achieves zero-skew based on Elmore delay model. He proposed a linear time algorithm to compute the Elmore delay in a bottom-up order starting from terminals, and the Elmore delay evaluation is simultaneously used to guide the bottom up path matching process. <p> This problem has been proven to be a NP-hard <ref> [KCR91, CKR90] </ref>. We present a novel algorithm to construct a planar equal path length tree. In addition, the path length from the source to destinations is minimized. We construct a planar equal path length rectilinear clock tree in two steps. <p> We tested our planar clock routing algorithm (PCR), and compared it to other clock routing algorithms MMM [JSK90] and RGM <ref> [KCR91] </ref> which are based on linear path length delay model. Table 3.7 highlights the comparison of two MCNC benchmarks. The criterion compared are: planarity, path length skew, longest path length, total wire length, and running time. MMM and RGM do not produce equal path length clock trees.
Reference: [KL70] <author> B. Kernighan and S. Lin. </author> <title> An efficient heuristic procedure for partitioning graphs. </title> <journal> Bell System Technical Journal, </journal> <volume> 49, </volume> <year> 1970. </year>
Reference-contexts: At each stage of m times of tentative cut-and-link, we first try to find a cut-and-link in R b with the maximal gain. If no cut-and-link is allowable in R b due 1 Group migration technique <ref> [KL70] </ref> was used in the bi-partition problem of circuits. 6. Delay Bounded Routing 103 to the delay bound requirement, we continue to find a cut-and-link in R 0 b with the maximal gain using the same algorithm as in Section 4:2.
Reference: [KMB81] <author> L. Kou, G. Markowsky, and L. Berman. </author> <title> A fast algorithm for steiner trees. </title> <journal> Acta Information, </journal> <volume> 15 </volume> <pages> 141-145, </pages> <year> 1981. </year>
Reference-contexts: MDST max-delay-slack tree algorithm proposed in this paper, which is the initial tree in the DBMST DBMST delay bounded minimum Steiner tree algorithm proposed in this paper 1-Steiner Iterative 1-Steiner minimum Steiner tree algorithm [KR92] KMB minimum Steiner tree algorithm based on the minimum spanning tree approach <ref> [KMB81] </ref> Table 6.3: List of Compared Algorithms chip size R b (m=m) C b (fF=m) R d () C t (pF ) 1 m CMOS 10 fi 10 mm 2 30 0.02 100 0.02 0.5 m CMOS 20 fi 20 mm 2 120 0.02 100 0.01 0.3 m CMOS 40 fi
Reference: [KR92] <author> Andrew B. Kahng and G. Robins. </author> <title> A new class of iterative steiner tree heuristics with good performance. </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> 11(7) </volume> <pages> 893-901, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: The final tree is shown in Figure 6.4 (g). We compare the result with two other kinds of tree: minimum Steiner tree and minimum delay tree. The minimum Steiner tree is constructed by the 1-Steiner algorithm <ref> [KR92] </ref> 6. Delay Bounded Routing 94 interconnect trees are as follows: 1-Steiner 41000 m, DBMST 41100 m, SERT 53200 m. and the minimum delay tree by the SERT algorithm [BKR93]. Results are summarized in Figure 6.5. <p> Delay Bounded Routing 105 Table 1 lists the result statistics of interconnect trees constructed by DBMST, 1-Steiner <ref> [KR92] </ref> and SERT [BKR93] based on the RC Elmore delay. Besides the delay satisfication for all testing examples, DBMST obtains the total wire length on average 0:9% higher than the total wire length obtained by 1-Steiner. <p> MDST max-delay-slack tree algorithm proposed in this paper, which is the initial tree in the DBMST DBMST delay bounded minimum Steiner tree algorithm proposed in this paper 1-Steiner Iterative 1-Steiner minimum Steiner tree algorithm <ref> [KR92] </ref> KMB minimum Steiner tree algorithm based on the minimum spanning tree approach [KMB81] Table 6.3: List of Compared Algorithms chip size R b (m=m) C b (fF=m) R d () C t (pF ) 1 m CMOS 10 fi 10 mm 2 30 0.02 100 0.02 0.5 m CMOS 20
Reference: [KT94] <author> A. Kahng and C.-W. A. Tsao. </author> <title> Low-cost single-layer clock trees with exact zero elmore delay skew. </title> <booktitle> In Digest of Tech. Papers of IEEE Intl. Conf. on Computer Aided Design, </booktitle> <pages> pages 213-218, </pages> <year> 1994. </year> <note> References 121 </note>
Reference-contexts: Following our work, 3. Planar Equal Path Length Clock Tree Construction 30 tree. (c) geometrical embedding resulting in a rectilinear clock tree. more recent research on the planar clock routing has been done <ref> [KT94] </ref> which modifies the deferred-merge embedding (DME) method to construct a planar equal path length clock tree. 3.2 Problem Formulation and Overview Planar Equal Path Length Clock (Steiner) Tree Problem: Given a source point s and a set of sinks, find a planar clock (Steiner) tree T , with the minimum
Reference: [Law76] <author> E. Lawler. </author> <title> Combinational Optimization: Networks and Matroids. </title> <publisher> Holt, Rinehart and Winston, </publisher> <year> 1976. </year>
Reference-contexts: This incremental construction of the first shortest path, second shortest path, third shortest path and so forth between T a and T b uses the principle of the k-shortest path construction algorithm <ref> [Law76] </ref>. The nice property of using the above incremental shortest path construction, is that once a shortest path is found satisfying the skew constraints, the path is definitely the skew constrained shortest path between T a and T b . constrained shortest path. <p> The k-shortest path algorithm repeatedly calls the Dijkstra's shortest-path algorithm to find the incremental shortest paths between T a and T b <ref> [Law76] </ref>. Already found shortest paths are eliminated from the consideration in the finding of the further shortest paths. Because the skew constrained shortest path is between two subtrees, a modified Dijkstra's 4. <p> RC delay analysis is still valid for the global clock tree on the package layer since the RC Elmore delay is much more than two times of the time-of-flight delay. 3 Our implementation of the k-shortest path uses the algorithm in <ref> [Law76] </ref> which takes O (kn 3 ). 4. Skew Constrained Clock Routing 65 (a) (b) clock tree. <p> At each iteration, the running time is dominated by finding the delay bounded shortest path which can be done in O (kn 2 ) when using k-shortest path incremental construction <ref> [Law76] </ref>, where k is the number of shortest paths evaluated when the delay bounded one is found.
Reference: [LC92] <author> Andrew Lim and Siu-Wing Cheng. </author> <title> Performance oriented rectilinear steiner trees. </title> <booktitle> In Proc. of 30th Design Automation Conf., </booktitle> <pages> pages 171-176, </pages> <year> 1992. </year>
Reference-contexts: A similar approach is also proposed by Awerbuch, Baratz and Peleg [ABP90]. Lim, Cheng and Wu <ref> [LC92] </ref> proposed a modified version of Prim's minimum spanning tree algorithm to control the radius for individual source-sinks connections.
Reference: [LDWC93] <author> H. Liao, W. Dai, R. Wang, and F.Y. Chang. </author> <title> S-parameter based macro model of distributed-lumped networks using exponentially decayed polynomial function. </title> <booktitle> In Proceedings of 30th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 726-731, </pages> <year> 1993. </year>
Reference-contexts: branch connected to the source, and terminates when the slowest terminal can not be sped up anymore after sizing the leaf branch connected to this slowest terminal. 5.4 Experimental Results The clock network sizing optimization (CNSO) algorithm has been implemented in ANSI C, with the integration of the delay macromodel <ref> [LDWC93] </ref>. <p> The path-delay function evaluates the delay in the interconnect tree from the source to sinks. Path delays of a RC interconnect tree are evaluated by the Elmore delay model [Elm48]. Path delays of a transmission line RLC tree are evaluated using the S-parameter based delay mamcromodels <ref> [LDWC93] </ref>. Finally, DBMST is a NP-hard problem since it is reducible to a minimum Steiner tree problem. 6.3 DBMST Approach The delay bounded minimum Steiner tree (DBMST) is a feasible region optimization problem, where the feasible region consists of delay bounded trees. <p> The time-of-flight delay is t f = v where l is the path length and v the light velocity. When time-of-flight delay is significant, the transmission line phenomena become noticeable; then a generalized delay macromodel <ref> [LDWC93] </ref> is used to do the transmission line delay analysis. This delay macromodel is based on the scattering-parameter (S-parameter) 8. Appendix: Clock Network Modeling and Delay Analysis 117 representation for interconnects, which can handle general networks including capacitive cutsets, arbitrary loops and lossy transmission lines.
Reference: [LM92] <author> Y.M. Li and M.A.Jabri. </author> <title> A zero-skew clock routing scheme for vlsi circuits. </title> <booktitle> In Digest of Tech. Papers of IEEE Intl. Conf. on Computer Aided Design, </booktitle> <pages> pages 458-463, </pages> <year> 1992. </year>
Reference-contexts: Edahiro [Eda93a, Eda94] proposed a greedy DME algorithm based on the neighbor clustering, achieving 17% wire reduction, which is the best result of current zero skew clock routing algorithms. Similar idea can also be found in <ref> [LM92] </ref>. A simulated annealing version of Elmore delay matching algorithm, was proposed by Chou and Cheng [CC93].
Reference: [Lu91] <author> Yizhi Lu. </author> <title> Dynamic constrained delaunay triangulation and application to multi-chip module layout. </title> <type> Master Thesis, </type> <institution> University of California, Santa Cruz, </institution> <year> 1991. </year>
Reference-contexts: The program has been integrated into UC Santa Cruz SURF system [SJDD93] for MCM and package routing. Clock net clustering is accomplished based on the Delaunay triangulation <ref> [Lu91] </ref>. We tested a large industrial mixed standard cell and macrocell chip from LSI Logic Corporation, which has 3879 registers as shown in Figure 2.8. It uses the 0:6m CMOS flip chip technology and plastic package, and the electrical parameters are shown in Table 1.1.
Reference: [Luk91] <author> W. K. Luk. </author> <title> A fast physical constraint generator for timing driven layout. </title> <booktitle> In Proc. of 28th Design Automation Conf., </booktitle> <pages> pages 626-631, </pages> <year> 1991. </year>
Reference-contexts: Therefore, the delay bounds are obtained for the interconnect tree. Methods for the delay bound generation can also be found in <ref> [Luk91, YLS92, Fra92] </ref>. The delay bound assignment process specifies the delay bound for individual interconnect segments in order to guide the timing driven physical layout stage.
Reference: [Mar63] <author> D.W. Marquardt. </author> <title> An algorithm for least-squares estimation of nonlinear parameters. </title> <journal> J. Soc. Indust. Appl. Math., </journal> <volume> 11 </volume> <pages> 431-441, </pages> <year> 1963. </year>
Reference-contexts: On the other hand, we have d s d f m i=1 (d i d f ) =m mffi. 2 Most algorithms for the least-squares estimation of nonlinear parameters have centered about either of two methods <ref> [Mar63] </ref>. In one method, the objective model is expanded as a Taylor series and corrections to parameters which are calculated at each iteration based on the assumption of local linearity. The other method is based on the modifications of the steepest-descent method. <p> While the methods based on Taylor series suffer from the possible divergence of the successive iterates, the steepest-descent based methods may have a very slow convergence of the optimum solution after the first few rapid iterations. The Gauss-Marquardt's method <ref> [Mar63] </ref> tries to perform an optimum interpolation between the Taylor series method and the gradient based method. The optimum search is based upon the maximum neighborhood in which the truncated Taylor series gives an adequate representation of the nonlinear objective model. With the proof [Mar63], Gauss Marquardt's method combines the best <p> The Gauss-Marquardt's method <ref> [Mar63] </ref> tries to perform an optimum interpolation between the Taylor series method and the gradient based method. The optimum search is based upon the maximum neighborhood in which the truncated Taylor series gives an adequate representation of the nonlinear objective model. With the proof [Mar63], Gauss Marquardt's method combines the best features of the previous two methods but hopefully avoids their limitations, which shares with the gradient methods the ability to converge from an initial guess quickly, and the ability of Taylor series method to reach the converged values rapidly after the vicinity of the <p> The strategy of selecting is given in Figure 5.3 <ref> [Mar63] </ref>. We take (0) = 0:02 initially. The above iterative optimization routine is repeated, and the clock skews are monoton 5.
Reference: [NBHY89] <author> R. Nair, C.L. Berman, P.S. Hauge, and E.J. Yoffa. </author> <title> Generation of performance constraints of layout. </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> CAD-8:860-874, </volume> <year> 1989. </year>
Reference-contexts: A signal path is partitioned into a set of interconnect segments between logic cells. The longest (critical) path delay is bounded by D (d path D); D is decided by the required clock frequency and critical path throughput speeds <ref> [NBHY89] </ref>. Delay bound for each interconnect segment is determined such that the delay bound D of the entire signal path is guaranteed. Hauge, Nair and Yoffa [HNY87] proposed the zero-slack algorithm that computes the maximal allowable delays for individual interconnect segments, based on the 6.
Reference: [NF95] <author> Jose Luis Neves and Eby G. Friedman. </author> <title> Design methodology for synthesizing clock distribution networks exploiting non-zero localized clock skew. </title> <note> to appear on IEEE Transactions on VLSI Systems, </note> <year> 1995. </year>
Reference-contexts: The central clock is distributed to every register in the circuit. Clock skew is the difference of clock delays to registers along the clock tree, which possibly makes two logic hazards: double clocking and zero clocking <ref> [Fis90, NF95] </ref>. The two kinds of hazard with the required clock skew limits are described as follows.
Reference: [Oht85] <author> T. Ohtsuki. </author> <title> Gridless routers new wire routing algorithms based on computational geometry. </title> <booktitle> In Proc. of International Conference on Circuits and Systems, </booktitle> <address> China, </address> <year> 1985. </year>
Reference-contexts: The wire length is reduced by kadk, compared to that in topological branches. (b) Bad embedding: the wire length is the same as that of topological branches. We use a modified Ohtsuki's line-search algorithm <ref> [Oht85, Oht86] </ref>, to construct the embedding of each branch, avoiding the intersection to any obstacles including rectilinear 3. Planar Equal Path Length Clock Tree Construction 46 wires and branches except for the sibling branch, such that the planarity of the clock tree is kept.
Reference: [Oht86] <author> T. Ohtsuki. </author> <title> Layout Design and Verification, </title> <booktitle> Advances in CAD for VLSI, </booktitle> <volume> Volume 4, Chapter 9. </volume> <publisher> North-Holland, </publisher> <year> 1986. </year>
Reference-contexts: The wire length is reduced by kadk, compared to that in topological branches. (b) Bad embedding: the wire length is the same as that of topological branches. We use a modified Ohtsuki's line-search algorithm <ref> [Oht85, Oht86] </ref>, to construct the embedding of each branch, avoiding the intersection to any obstacles including rectilinear 3. Planar Equal Path Length Clock Tree Construction 46 wires and branches except for the sibling branch, such that the planarity of the clock tree is kept. <p> So, we have the following Corollary of Theorem 3:1 which shows the correctness of the geometrical embedding. Corollary 3.1: The produced rectilinear clock tree is planar and has equal path lengths. As analyzed <ref> [Oht86] </ref>, for k obstacles in the routing region, Ohtsuki's algorithm takes O (klog 2 k) time to generate the path. Our improved line search algorithm keeps the same 3.
Reference: [PK90] <author> Somchai Prasitjutrakul and William J. Kubitz. </author> <title> A timing-driven global router for custom chip design. </title> <booktitle> In Digest of Tech. Papers of IEEE Intl. Conf. on Computer Aided Design, </booktitle> <pages> pages 48-51, </pages> <year> 1990. </year>
Reference-contexts: SERT-C is a modification of SERT that minimizes the delay at a single critical sink. While Hong, Xue, Kuh, Cheng and Huang [HXK + 93] proposed a modified Dreyfus-Wagner Steiner tree algorithm for minimizing the maximal path delay, Prasitjutrakul and Kubitz <ref> [PK90] </ref> proposed an algorithm for the minimization of the delay 6. Delay Bounded Routing 88 slacks (i.e., differences between the real delays and the given delay bounds) at sinks. <p> If a max-delay-slack tree still cannot have the non-negative slacks, the locations of the source and sinks or the logic circuits have to be updated. Max-delay-slack tree construction has been proved to be a NP-hard problem [ZPD94, BKMR94]. Prasitjutrakul and Kubitz <ref> [PK90] </ref> proposed a heuristic that constructs a max-delay-slack tree by connecting sinks to the tree in the order of the closeness to the tree. This enforced order based on neighborness will definitely lose the delay optimization [BKR93].
Reference: [PMOP94] <author> S. Pullela, N. Menezes, J. Omar, and L.T. Pillage. </author> <title> Skew and delay optimization for reliable buffered clock trees. </title> <booktitle> In Digest of Tech. Papers of IEEE Intl. Conf. on Computer Aided Design, </booktitle> <pages> pages 556-562, </pages> <year> 1994. </year>
Reference-contexts: Even through both techniques achieves zero skew, but the sizing technique reduces the path delay, while the wire elongating technique increases the path delay. Relevant wire sizing research has been done <ref> [CLZ93, PMOP94, CLZ92, CL93, Eda93b] </ref>. Cong, Leung and Zhou [CLZ93, CLZ92, CL93] first used the wire sizing technique for the interconnect delay minimization of general nets based on dynamic programming. <p> Relevant wire sizing research has been done [CLZ93, PMOP94, CLZ92, CL93, Eda93b]. Cong, Leung and Zhou [CLZ93, CLZ92, CL93] first used the wire sizing technique for the interconnect delay minimization of general nets based on dynamic programming. Pullela, Menezes and Pillage <ref> [PMOP94] </ref> used wire sizing for reducing the clock skew caused by the process variation, while Edahiro [Eda93b] for the delay reduction of the clock net.
Reference: [PMP93] <author> Satyamurthy Pullela, Noel Menezes, and Lawrence T. Pillage. </author> <title> Reliable non-zero skew clock trees using wire width optimization. </title> <booktitle> In Proceedings of 30th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 165-170, </pages> <year> 1993. </year>
Reference: [Rhe94] <author> WanSoo T. Rhee. </author> <title> A matching problem and subadditive euclidean functionals. </title> <note> to be appeared in The Annals of Probability, </note> <year> 1994. </year>
Reference: [RPH83] <author> J. Rubinstein, P. Penfield, and M. A. Horowitz. </author> <title> Signal delay in rc tree networks. </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <note> CAD-2(3):202-211, 1983. References 122 </note>
Reference-contexts: A clock tree is modeled as a RC tree as shown in Fig. 8.3 with the line inductance not considered. Elmore delay is the first-order approximation of the response voltages at clock terminals in a RC tree <ref> [Elm48, RPH83] </ref>.
Reference: [RR78] <author> A. Ralston and P. Rabinowitz. </author> <title> First Course in Numerical Analysis. </title> <publisher> McGraw Hill Book Company, </publisher> <address> NewYork, </address> <year> 1978. </year>
Reference-contexts: To obtain J , one needs to get the sensitivity of the delay error g i with respect to branch widths. These sensitivities are computed by the numerical differentiation method <ref> [RR78] </ref>, which is applicable to a general RLC network. fl is a diagonal matrix which takes the diagonal elements of the matrix J T J, i.e. fl nfin = 0 B B B B B P n 0 i=1 (@g i =@w 2 ) 2 0 0 . . . .
Reference: [SJDD93] <author> David Staepelaere, Jeffrey Jue, Tal Dayan, and Wayne W-M Dai. Surf: </author> <title> A rubber-band routing system for multichip modules. </title> <journal> IEEE Design & Test Of Computers, </journal> <volume> 10(4) </volume> <pages> 18-26, </pages> <month> Dec. </month> <year> 1993. </year>
Reference-contexts: Clock Synthesis Scheme and Skew Constrained Net Clustering 22 2.5 Experimental Results We have implemented the chip and package clock co-design methodology in ANSI C with a MOTIF/X-window user interface. The program has been integrated into UC Santa Cruz SURF system <ref> [SJDD93] </ref> for MCM and package routing. Clock net clustering is accomplished based on the Delaunay triangulation [Lu91]. We tested a large industrial mixed standard cell and macrocell chip from LSI Logic Corporation, which has 3879 registers as shown in Figure 2.8.
Reference: [Ste81] <author> J. M. Steele. </author> <title> Subadditive euclidean functionals and nonlinear growth in geometric probability. </title> <journal> The Annals of Probability, </journal> <volume> 9(3) </volume> <pages> 365-376, </pages> <year> 1981. </year>
Reference: [Tsa91a] <author> R.-S. Tsay. </author> <title> Exact zero skew. </title> <booktitle> In Digest of Tech. Papers of IEEE Intl. Conf. on Computer Aided Design, </booktitle> <pages> pages 336-339, </pages> <year> 1991. </year>
Reference-contexts: We evaluate the performance of DBMST compared with existing approaches based on 0:35m CMOS technology (Table 6.4). Experimental results are shown in Table 1 and Table 6.2. Since there are no known standard benchmarks, we take the benchmarks originally for the clock nets <ref> [Tsa91a, CHJ + 92] </ref>. Note that only random examples are used in most of related papers [CKR + 92, BKR93, BKMR94]. For the reason of efficiency, we partition every benchmark in multiple nets with on average 15 terminals.
Reference: [Tsa91b] <author> R.S. Tsay. </author> <title> Exact zero skew. </title> <booktitle> In Digest of Tech. Papers of IEEE Intl. Conf. on Computer Aided Design, </booktitle> <pages> pages 336-339, </pages> <year> 1991. </year>
Reference-contexts: The clock skew is caused mainly by the difference of interconnect delays in the two-level clock tree. Local clock trees within every cluster are routed with Manhattan minimum spanning trees. We tested benchmarks r1-r5 <ref> [Tsa91b] </ref> and primary1-primary2 [JSK90] to evaluate the performance of the proposed clock synthesis methodology. Registers (clock terminals) are assumed to have the unique skew bound 0:05ns (smaller one of positive and negative skew bounds) for testing the benchmarks. <p> The global driver is 16X inverter size with the output resistance 198. The chip parameters are provided in benchmarks by <ref> [Tsa91b, JSK90] </ref>, the package and solder bump parameters are shown in 2. Clock Synthesis Scheme and Skew Constrained Net Clustering 23 (a) registers. Table 1.1. Table 2.5 shows the results. <p> On the package layer, the planar equal path length clock tree is very close to the zero skew clock tree (less than 4ps). On the chip layer, the planar equal path length clock tree probably produces a untolerable skew such that RC Elmore delay balance clock routing techniques <ref> [Tsa91b, CHJ + 92] </ref> are necessary. Meanwhile, the delay and power are also decreased for the clock tree on the package layer due to the far smaller interconnect RC parasitics. 2.6 Related Work The two-level clock distribution approach is suitable for large size systems in VLSI, MCM and WSI. <p> RGM always yields a clock tree with equal path lengths for two, three, and four terminals. But no theoretical bound is given for the path length skew in general cases with more than four terminals. Instead of balancing path length in [KCR91], Tsay <ref> [Tsa91b, Tsa93] </ref> achieves zero-skew based on Elmore delay model. He proposed a linear time algorithm to compute the Elmore delay in a bottom-up order starting from terminals, and the Elmore delay evaluation is simultaneously used to guide the bottom up path matching process. <p> Other algorithms [CHJ + 92, BK92, Eda93a, CC93, Eda94] further reduced the total wire length of the clock tree, based on the Elmore delay model. Chao, Hsu and Ho [CHJ + 92] proposed a deferred-merge embedding (DME) method, achieving 10% wire reduction over <ref> [Tsa91b] </ref>. Boese and Kahng [BK92] independently developed an algorithm with the identical principle of the DME, achieving 12% wire reduction. Edahiro [Eda93a, Eda94] proposed a greedy DME algorithm based on the neighbor clustering, achieving 17% wire reduction, which is the best result of current zero skew clock routing algorithms. <p> Table 4.4 shows the total wire length comparison of the proposed two-level clock distribution scheme under tolerable skew constraints and the result obtained by a zero skew clock routing algorithm [Eda93a] which was reported to achieve the smallest total wire length among existing zero skew clock routing algorithms <ref> [Tsa91b, CHJ + 92, CHJ91, CC93] </ref>. The total wire length in the two-level clock distribution scheme includes the refined global clock tree and local clock trees. Making use of tolerable skew concept as in the proposed scheme 4. <p> optimizing the interconnect has centered on two techniques: one adjusting the interconnect length and the another adjusting the interconnect width. 1 The length adjustment technique moves the balance point or elongates the interconnect length to achieve the skew reduction, and this idea can be found in previous clock routing algorithms <ref> [Tsa91b, Tsa93, CHJ + 92] </ref>. The sizing technique achieves the skew reduction by assigning variable widths for wires. <p> Delay Bounded Routing 87 the tree. In the deep submicron ICs, the delay of the interconnect tree has to be computed by the distributed RC delay model <ref> [Tsa91b] </ref>. The path length is no longer accurate for the estimation of the source-to-sink delay.
Reference: [Tsa93] <author> R.-S. Tsay. </author> <title> An exact zero-skew clock routing algorithm. </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> 12(3) </volume> <pages> 242-249, </pages> <year> 1993. </year>
Reference-contexts: RGM always yields a clock tree with equal path lengths for two, three, and four terminals. But no theoretical bound is given for the path length skew in general cases with more than four terminals. Instead of balancing path length in [KCR91], Tsay <ref> [Tsa91b, Tsa93] </ref> achieves zero-skew based on Elmore delay model. He proposed a linear time algorithm to compute the Elmore delay in a bottom-up order starting from terminals, and the Elmore delay evaluation is simultaneously used to guide the bottom up path matching process. <p> optimizing the interconnect has centered on two techniques: one adjusting the interconnect length and the another adjusting the interconnect width. 1 The length adjustment technique moves the balance point or elongates the interconnect length to achieve the skew reduction, and this idea can be found in previous clock routing algorithms <ref> [Tsa91b, Tsa93, CHJ + 92] </ref>. The sizing technique achieves the skew reduction by assigning variable widths for wires.
Reference: [TT94] <author> M.Y. Mike Tsai and R.S. Tsay. </author> <title> Ic layout shift at deep-submicron level. Electronic Engineering Times, </title> <address> 820:66, </address> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: Designers have to depend on intuition and perform design iterations. In typical deep submicron designs, more than 60 percent of the paths in a timing-critical design are critical <ref> [TT94] </ref>. In the rest of this chapter, we present a new approach for the interconnect tree construction under the given delay bounds. The delay bounds are decided by the static timing analysis of the logic circuits.
Reference: [YLS92] <author> H. Youssef, R.B. Lin, and E. Shragowitz. </author> <title> Bounds on net delays for vlsi circuits. </title> <journal> IEEE Trans. on Circuits and Systems-II: Analog and Digital Signal Processing, </journal> <volume> 39(11) </volume> <pages> 815-824, </pages> <year> 1992. </year>
Reference-contexts: Therefore, the delay bounds are obtained for the interconnect tree. Methods for the delay bound generation can also be found in <ref> [Luk91, YLS92, Fra92] </ref>. The delay bound assignment process specifies the delay bound for individual interconnect segments in order to guide the timing driven physical layout stage.
Reference: [ZD92] <author> Qing Zhu and Wayne W.M. Dai. </author> <title> Perfect-balance planar clock routing with minimal path-length. </title> <booktitle> In Digest of Tech. Papers of IEEE Intl. Conf. on Computer Aided Design, </booktitle> <pages> pages 473-476, </pages> <year> 1992. </year>
Reference-contexts: We proposed the first planar equal path length clock tree construction algorithm based on the motivation that a single-layer clock tree has the advantage of reducing the delay and attenuation through vias as well as the sensitivity to process variation <ref> [ZD92] </ref>. A planar equal path-length global clock tree can be routed on the top thicker layer of the chip or on a package layer with far smaller interconnect RC parasitics. Following our work, 3. <p> Test cases are listed in Table 5.4, which includes a clock mesh and three clock trees with the configurations as shown in planar and equal path lengths, i.e. the path length from the source to clock terminals is exactly the same, constructed by a planar clock routing algorithm <ref> [ZD92] </ref>, where skew still exists due to the unbalanced load capacitances and the unsymmetrical tree structure. We 5. Clock Network Sizing 80 use the wire sizing to further reduce the clock skew.
Reference: [ZDX93] <author> Qing Zhu, Wayne W.M. Dai, and Joe G. </author> <title> Xi. Optimal sizing of high speed clock networks based on distributed rc and transmission line models. </title> <booktitle> In Digest of Tech. Papers of IEEE Intl. Conf. on Computer Aided Design, </booktitle> <pages> pages 628-633, </pages> <year> 1993. </year>
Reference: [Zhu94] <author> Qing Zhu. </author> <title> Techniques for design of high-speed low-power asics. </title> <type> Technical Report, </type> <institution> LSI LOGIC Corporation, </institution> <month> Sep. </month> <year> 1994. </year>
Reference: [ZPD94] <author> Qing Zhu, Mehrdad Parsa, and Wayne W.M. Dai. </author> <title> An iterative approach for delay bounded minimum steiner tree construction. </title> <type> Technical Report, </type> <institution> UCSC-CRL-94-39, University of California, Santa Cruz., </institution> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: If a max-delay-slack tree still cannot have the non-negative slacks, the locations of the source and sinks or the logic circuits have to be updated. Max-delay-slack tree construction has been proved to be a NP-hard problem <ref> [ZPD94, BKMR94] </ref>. Prasitjutrakul and Kubitz [PK90] proposed a heuristic that constructs a max-delay-slack tree by connecting sinks to the tree in the order of the closeness to the tree. This enforced order based on neighborness will definitely lose the delay optimization [BKR93].
Reference: [ZXDS94] <author> Qing Zhu, Joe G. Xi, Wayne W.M. Dai, and Rama Shukla. </author> <title> Low power clock distribution based on area pad technology for multichip modules. </title> <booktitle> In Intl. Workshop on Low Power Design, </booktitle> <pages> pages 87-92, </pages> <year> 1994. </year>
References-found: 75

