URL: http://www.cs.columbia.edu/dcc/classes/E6998-025/Chapter02/chapter02.ps
Refering-URL: http://www.cs.columbia.edu/dcc/classes/E6998-025/syllabus.html
Root-URL: http://www.cs.columbia.edu
Title: Goals: Topics: Do not duplicate without written authorization.  
Author: D Y. Yemini, J. Hellerstein 
Note: 1995 c II. Managing With SNMP  
Abstract-found: 0
Intro-found: 1
Reference: <author> RFC's M. Rose: </author> <title> The Simple Book, 2nd ed., 1993, </title> <publisher> Prentice Hall. </publisher>
Reference: <author> W. Stalling: SNMP, SNMPv2, </author> <title> and CMIP The Practical Guide to Network-Management Standards Addison-Wesley 1993. II-1-2 Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. Hellerstein 1995 c D. </author> <title> Introduction to SNMP Background SNMP overview Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c Overview of Network Mgmt Background Network elements are instrumented collect operations data provide configuration control Mgmt protocol supports remote instrumentation access Platform gathers & displays mgmt data Transport Transport Manager Agent Instrumentation Element NMS Management Protocol II-3-4 Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c Mgmt focus: hardware elements Gather operations data Transfer this to mgmt platform Present data to operations staff Vendor/product-specific Agent, protocol, platform Mgmt style: event-handling E.g., IBM's Netview alert vectors Background The Starting Point: Private Element Mgrs Private Management Protocol (stack) Private Agent Element Manager Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c Background The Challenges of Heterogeneity Unifying the managers managers of managers Unifying the mgmt protocol Syntax of managed information organization Query protocol to access managed information Unifying managed information Standard MIBs Unifying platform API OSF/DME, Xopen, DMTF... II-5-6 Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c Origins of SNMP Background Managing internet router backbones Initially Simple Gateway Monitoring Protocol Simple = Minimize agent's complexity Management as overhead taxing element functionality Elements are assumed to be simple Monitoring = focus on gathering data Define the goal of mgmt as retrieval and presentation of operations data Trap-directed polling Transport Transport Manager Agent Instrumentation Element NMS Management Protocol Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c SNMP At A Glance Instrumentation is organized in MIBs A query protocol used to access MIBs Can use any datagram transport stack (UDP/IP is primary) Overview Transport Transport MIB GET/SET/GET-NEXT TRAP/RESPONSE Manager Agent Instrumentation Element NMS II-7-8 Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. Hellerstein 1995 c A. </author> <title> Organization of Data in MIBs The structure of MIB trees Example: MIB-II The Structure of Managed Information (SMI) Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c The Challenge: Organizing Managed Data How much instrumentation is there? How best to organize data? A directory model? A broader database model? Handling composite entities Handling dynamic entities 1. MIBs Transport Transport MIB GET/SET/GET-NEXT TRAP/RESPONSE Manager Agent Instrumentation Element NMS II-9-10 Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c Trees Provide Directory Structure Data can be stored at leaves Internal nodes provide logical groupings Instances can be stored at respective leaf cells Multi-instance entities are stored as table entries 1. The structure of MIB trees MIBName group1 subgroup1 attribute1 attribute2 subgroup2 subsubgroup1 attribute1 Instances Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 1. The structure of MIB trees The ISO Registration tree A directory of standards Can be extended to provide managed objects directory Various MIBs are registered as tree extensions Root ccitt(0) iso(1) standardsr(0) org(3) dod(6) internet(1) directory(1) mgmt(2) mib-2(1) system(1)interfaces(2) at(3) ip(4) icmp(5) tcp(6) udp(7) egp(8) cmot(9) trans(10) snmp(11) private(4) experimental(3) II-11-12 Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c MIB II: Generic Description of IP Systems Goal:generic MIB for IP gateways Groups System: descriptors of system Interfaces: physical layer Address translation: mapping IP to physical Protocol entities: IP, ICMP, TCP, UDP... 2. Example MIB II mib-2(1) system(1) interfaces(2) ifNumber(1) iftable(2) ifentry(1) ifIndex(1) ifDesc(2) at(3) ip icmp 1.3.6.1.2 Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 3. The SMI SMI Provides a Data Definition Language The challenge: how to describes the syntax of MIB data What needs to be described? The type of data The permitted access modes Status: required/optional Registration on ISO tree ifInErrors Counter read-only mandatory ifTableEntry.16 Syntax: Access: Status: Registration: Name: Template Example II-13-14 Do not duplicate without written authorization. </title>

Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 4. How do agents use MIBs What Do Agents Do With MIBs? MIBs provide unique identification of instrumentation Agents process MIB queries to access instrumentation GET, SET, </title> <note> TRAP directory(1) internet(1) private(4) sysDesc(1) [1.3.6.1....] system(1) (0) (0) interfaces(2) tcp(6) tcpConnTable(13) SysObjectId(2) mib(1) mgmt(2) TcpConnEntry(1) tcpConn State(1) tcpConnLocal Address(2) tcpConnRemote Port(5) II-15-16 Do not duplicate without written authorization. </note>
Reference: <author> Y. Yemini, J. Hellerstein 1995 c B. </author> <title> The SNMP Protocol Protocol Structure & Primitives GET and GET-NEXT SET & TRAP Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 1. Protocol Primitives The Protocol Structure Protocol as a MIB query language Primitives GET/GET-RESPONSE: retrieve data directly GET-NEXT/GET-RESPONSE: retrieve rows from a table SET/GET-RESPONSE: change data TRAP: event notification Frames carry data using variable binding Community string provides minimal protection Community String Op Name Value Variable-binding II-17-18 Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 2. How does GET work Direct Retrieval Via GET How do you identify data on a tree? Data location = x.y x= static identifier of leaf y= identifier of cell For non-tabular cells y=0 For tabular cells y= row identifier = key (index) of row Examples: For ifTable y= value of ifIndex For tcpConnTable y=&lt;tcpConnLclAddrss,tcpConnLclPort,tcpConnRmtAddrss,tcpConnRmtPort&gt; mib-2(1) interfaces(2) ifNumber(1) iftable(2) ifentry(1) ifIndex(1) ifInOctets(10) ifInDiscards(13) ifInErrors(14) x Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 3. Retrieval with GET-NEXT Traversal of Tables Using GET-NEXT Key Idea: retrieve a row at a time using lexicographic order How do you know when to stop? mib-2(1) interfaces(2) ifNumber(1) iftable(2) ifentry(1) ifIndex(1) ifInOctets(10) ifInDiscards(13) ifInErrors(14) x II-19-20 Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 4. How to Use SET SET Is Used For Control Configuration changes via SET Example: partition a port, configure speed Actions as side-effects of a SET Example: reboot, kill a process SET Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 5. How to Use TRAPs TRAPs Are Used For Events Notifications Traps provide minimal event notifications Mgmt paradigm: trap-directed polling Traps included generic IP gateway traps + vendor specific Traps are not confirmed minimize agent's role in communications minimize dependence on agents GET, SET, TRAP II-21-22 Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. Hellerstein 1995 c C. </author> <title> How To Design MIBs Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c A generic PC Processing hardware Storage hardware Interface hardware Operating system Applications A trivial ATM switch Physical layer entities Cell layer entities Signaling entities 1. How to Design MIBs MIB Design Exercises II-23-24 Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 1. How to Design MIBs MIB Architecture Design Design groups A group represents a managed entity Subgroups represent components Static entities involve a single instance per MIB Dynamic entities involve multiple instances Design entities Activity attributes are used for monitoring Configuration attributes are used for control Action attributes For multi-instance entities design a key attribute (index) Entities can represent Hardware/software resources Protocol entity Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 1. How to design MIBs Completing The Details Build agent instrumentation Specify MIB in SMI Compile MIB Build management applications that use the MIB II-25-26 Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. Hellerstein 1995 c D. </author> <title> Notes & Critical Assessment Modeling managed information with MIBs Accessing managed information Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 1. Modeling managed information Summary Review of SNMP The protocol provides access to instrumentation MIBs organize instrumented management functions Tracking activities of managed entities Controlling behaviors of managed entities Unify the syntax of instrumentation access directory(1) internet(1) private(4) sysDesc(1) [1.3.6.1....] system(1) (0) (0) interfaces(2) tcp(6) tcpConnTable(13) SysObjectId(2) mib(1) mgmt(2) TcpConnEntry(1) tcpConn State(1) tcpConnLocal Address(2) tcpConnRemote Port(5) GET GET NEXT SET TRAP II-27-28 Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 1. Modeling with MIBs Complex resources involve Multi-instance entities Complex, possibly dynamic, relationships among them Example: virtual LAN segments & ports Multiple segment entities =&gt; table of segments Multiple port entities =&gt; table of ports How should relationship be modeled? Tables of tables are not permitted Need to introduce relationship tables However, correlated retrieval (join) not available Exercise: Design a MIB to model processes and files that they access Modeling Related Entities in MIBs Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 1. Modeling with MIBs The Problem of Extensible Agents Inserting/Deleting MIBs Example: inserting new media card Example: starting an application (and its MIB) Problem: need to update agents MIB dynamically Maintaining multiple MIB instances Example: two systems with MIB-II inserted in one chassis Problem: an agent can access only a single MIB instance Exercise*: Suggest a modification of SNMP to support retrieval from multiple MIB instances. II-29-30 Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 2. Transacting with MIBs Concurrency & Atomicity Control The problem of atomic retrievals Example: retrieving a router table Race conditions between retrieval & updates can lead to inconsistent data The problem of atomic actions How to ensure concurrency control of configuration setting in a multi-manager environment? Exercise*: Suggest MIB design and access mechanisms to support atomic actions and parameter passing. Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 2. Asynchronous communications model Reliable Event Notifications TRAPs are not confirmed and may be lost Problem: How to accomplish reliable TRAPs Exercise: Suggest MIB design, access mechanisms, and TRAP generation to accomplish reliable event notifications. II-31-32 Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 3. Secure management Security Community string controls agent-manager access Management insecurities may be risky How to ensure secured management access in a multi-manager environment A very difficult problem Can security be accomplished within the framework of a simple agent? Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 4. Extracting information from MIB data Computing Information From MIB Data Example: MIB stores error counters, how to detect excessive error rates? Information needed requires fast polling Problem: how to compute functions over MIBs at agent? Exercise*: Design agent & MIB extensions to support arithmetic-logic computations over MIB data. II-33-34 Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. Hellerstein 1995 c E. </author> <title> Brief Overview of SNMPv.2 SMI extensions Protocol changes Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 0. Overview Issues Addressed by SNMPv.2 Goal: improve SNMP while maintaining "coexistence" Improve retrieval of tables Support a modular security option Support hierarchical organization of managers Extend support of event notifications Simplify transport mapping Simplify administration of complex multi-MIB environments II-35-36 Do not duplicate without written authorization. </title>
Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c 1. SMI extensions Structure of Managed Objects Syntax: New data types:e.g., 64 bits counters/gauges Units spec: e.g., "seconds" Max-Access: New access rights (create/delete) Status: Description: Reference Indexing (identification) for tabular objects Default value Syntax: Access: Status: Registration: Name: References: Syntax: Max-Access: Status: Description: Name: Registration: Units: Index/Augments: Defval: Do not duplicate without written authorization. </title>

Reference: <author> Y. Yemini, J. </author> <title> Hellerstein 1995 c Why does a manager need to create objects? Create a process/thread of activity Example: subscribe to event notifications Example: initiate monitoring of packet traffic (RMON) Example: establish security/access relationships The problems Manager must be able to create/delete objects Agent needs to bind instrumentation to objects Concurrent accesses to table must be resolved Recover from manager/agent failures </title>
References-found: 37

