URL: http://www.eecs.umich.edu/umdes/projects/faildiag/wodes.ps
Refering-URL: http://www.eecs.umich.edu/umdes/projects/faildiag/diagnosis.html
Root-URL: http://www.eecs.umich.edu
Email: fridebouk,stephane,teneketg@eecs.umich.edu;  
Title: A COORDINATED DECENTRALIZED PROTOCOL FOR FAILURE DIAGNOSIS OF DISCRETE EVENT SYSTEMS  
Author: Rami Debouk, Stephane Lafortune and Demosthenis Teneketzis 
Keyword: Failure Diagnosis, Decentralized Information, Diagnostic Protocols.  
Web: www.eecs.umich.edu/umdes  
Address: Ann Arbor, MI 48109-2122, USA  
Affiliation: Department of Electrical Engineering and Computer Science The University of Michigan,  
Abstract: We address the problem of failure diagnosis in discrete event systems with decentralized information. We propose a coordinated decentralized architecture consisting of two local sites communicating with a coordinator that is responsible for diagnosing the failures occurring in the system. We extend the notion of diagnosability, originally introduced in [1] for centralized systems, to the proposed coordinated decentralized architecture. We specify one protocol that realizes the proposed architecture. We analyze the diagnostic properties of this protocol. The key feature of the proposed protocol is that it achieves the same diagnostic performance as the centralized diag-noser. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Sampath, R. Sengupta, S. Lafortune, K. Sin-namohideen, and D. Teneketzis. </author> <title> Diagnosabil-ity of discrete-event systems. </title> <journal> IEEE Trans. Automat. Contr., </journal> <volume> 40(9) </volume> <pages> 1555-1575, </pages> <month> September </month> <year> 1995. </year>
Reference-contexts: 1 Introduction Failure detection and isolation is an important task in the automatic control of large complex systems, and consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree and analytical redundancy methods to discrete event system (DES) approaches <ref> [1, 2, 3, 4, 5] </ref>, model based reasoning and expert systems methods, have been proposed to approach this problem. For a brief description of these methods, the interested reader is referred to [6] and the introduction of [1] and the references therein. <p> For a brief description of these methods, the interested reader is referred to [6] and the introduction of <ref> [1] </ref> and the references therein. Almost all of the abovementioned approaches have been developed for systems where the information used for fault diagnosis is centralized. Only the method of template monitoring [3] is cited to have the advantage of being easily implemented in distributed control architectures. <p> In this paper, we investigate failure diagnosis problems in DES under decentralized information. We extend the notion of diagnosability, introduced in <ref> [1] </ref> for centralized systems, to a coordinated decentralized architecture consisting of two local sites communicating with a coordinator that is responsible for diagnosing the failures occurring in the system. We present a specific protocol that realizes the architecture under consideration. <p> We present and discuss the diagnostic properties of the suggested protocol. The on-line diagnostic process is carried out by a variation of the diagnosers introduced in <ref> [1] </ref>. <p> F i . 2.2 Diagnosability and diagnosers A language is said to be diagnosable with respect to a set of observable events and a failure partition if within a finite delay, the occurrence of any failure can be detected using the history of observable events (we refer the reader to <ref> [1] </ref> for the formal definition). The diagnoser is a deterministic FSM built from the system model G. This machine is at the core of the diagnostic methodology of [1, 7, 8]. <p> The diagnoser is a deterministic FSM built from the system model G. This machine is at the core of the diagnostic methodology of <ref> [1, 7, 8] </ref>. It is used to analyze the diagnosability properties of G and to perform diagnostic when it observes, on-line, the behavior of the system. <p> For more information about the construction of the diagnoser, the reader is referred to <ref> [1] </ref>. The state space Q d is the resulting subset of Q o composed of the states of the diagnoser that are reachable from q 0 under ffi d . <p> Each site is composed of two modules: an observation module and a diagnostic module. The site i, i 2 f1; 2g, locally observes the system based on its available sensing capabilities. Therefore, a projection P i <ref> [1] </ref> is associated with site i, where P i is defined on the set of observable events oi (note here that o1 and o2 need not be disjoint although sites 1 and 2 may be physically apart). <p> The coordinator does not have a model of the system. It has a simple structure; specifically, it has limited memory and limited processing capabilities. 3.2 Definition of diagnosability The definition of diagnosability in <ref> [1] </ref> assumes centralization of the available information; hence it is not directly applicable to coordinated decentralized systems. Moreover, the coordinated decentralized architecture in Figure 1 represents a class of realizations of the same architecture differentiated by the choice of the communication rules and the coordinator's decision rule. <p> aspect that every state of G that appears in a state component of G d is associated with its immediate predecessor state in G 0 (along the sub-trace of events under consideration) and both states carry their labels; these labels are attained following the same label propagation rules as in <ref> [1] </ref>. The state space Q e d is the resulting subset of Q o fi Q o composed of the states of the extended diagnoser that are reachable from q e 0 under ffi e d . By construction, L (G e d ) = L (G d ). <p> the immediate predecessor along s of y 0 s in G 0 , and (iii) s are the failure labels corresponding to y s ; y 0 s , ob tained by propagating the label l 0 k of x 0 k according to the label propagation function defined in <ref> [1] </ref>. The unobservable reach appends to the components of each state of the extended diagnoser G e dj some additional components (along with failure labels and predecessors) that may have been reached following an additional event or a sequence of events that are not observable by the local site j. <p> Yet, if the coordinator has the memory and processing capabilities required by the decision rule described in Section 4.3, it can diagnose the same types of failures as the centralized diagnoser. Consequently, building from the results in <ref> [1] </ref>, the necessary and sufficient conditions for diagnosability with respect to Protocol 1 can be stated with respect to the centralized diagnoser as follows: Theorem 2 A live and prefix-closed language L is diagnosable with respect to Protocol 1, the set of projections P 1 , P 2 and the failure
Reference: [2] <author> F. Lin. </author> <title> Diagnosability of discrete event systems and its application. Discrete Event Dynamic Systems: </title> <journal> Theory and Applications, </journal> <volume> 4(2) </volume> <pages> 197-212, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: 1 Introduction Failure detection and isolation is an important task in the automatic control of large complex systems, and consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree and analytical redundancy methods to discrete event system (DES) approaches <ref> [1, 2, 3, 4, 5] </ref>, model based reasoning and expert systems methods, have been proposed to approach this problem. For a brief description of these methods, the interested reader is referred to [6] and the introduction of [1] and the references therein.
Reference: [3] <author> L. Holloway and S. Chand. </author> <title> Time templates for discrete event fault monitoring in manufacturing systems. </title> <booktitle> In Proc. 1994 American Control Conference, </booktitle> <pages> pages 701-706, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction Failure detection and isolation is an important task in the automatic control of large complex systems, and consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree and analytical redundancy methods to discrete event system (DES) approaches <ref> [1, 2, 3, 4, 5] </ref>, model based reasoning and expert systems methods, have been proposed to approach this problem. For a brief description of these methods, the interested reader is referred to [6] and the introduction of [1] and the references therein. <p> For a brief description of these methods, the interested reader is referred to [6] and the introduction of [1] and the references therein. Almost all of the abovementioned approaches have been developed for systems where the information used for fault diagnosis is centralized. Only the method of template monitoring <ref> [3] </ref> is cited to have the advantage of being easily implemented in distributed control architectures.
Reference: [4] <author> R. Boubour, C. Jard, A. Aghasaryan, E. Fabre, and A. Benveniste. </author> <title> Petri net approach to fault detection and diagnosis in distributed systems: application to telecommunication networks, motivations, and modelling. </title> <booktitle> In Proc. 36th IEEE Conf. on Decision and Control, </booktitle> <address> San Diego, CA, </address> <month> December </month> <year> 1997. </year>
Reference-contexts: 1 Introduction Failure detection and isolation is an important task in the automatic control of large complex systems, and consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree and analytical redundancy methods to discrete event system (DES) approaches <ref> [1, 2, 3, 4, 5] </ref>, model based reasoning and expert systems methods, have been proposed to approach this problem. For a brief description of these methods, the interested reader is referred to [6] and the introduction of [1] and the references therein.
Reference: [5] <author> C.G. Cassandras and S. Lafortune. </author> <title> Discrete event systems: The state of the art and some recent trends. </title> <editor> In B. Datta, editor, </editor> <title> Applied and computational control, signals and circuits. </title> <publisher> Birkhauser, </publisher> <year> 1998. </year>
Reference-contexts: 1 Introduction Failure detection and isolation is an important task in the automatic control of large complex systems, and consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree and analytical redundancy methods to discrete event system (DES) approaches <ref> [1, 2, 3, 4, 5] </ref>, model based reasoning and expert systems methods, have been proposed to approach this problem. For a brief description of these methods, the interested reader is referred to [6] and the introduction of [1] and the references therein.
Reference: [6] <author> A.D. Pouliezos and G.S. Stavrakakis. </author> <title> Real time fault monitoring of industrial processes. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1994. </year>
Reference-contexts: Many schemes ranging from fault-tree and analytical redundancy methods to discrete event system (DES) approaches [1, 2, 3, 4, 5], model based reasoning and expert systems methods, have been proposed to approach this problem. For a brief description of these methods, the interested reader is referred to <ref> [6] </ref> and the introduction of [1] and the references therein. Almost all of the abovementioned approaches have been developed for systems where the information used for fault diagnosis is centralized.
Reference: [7] <author> M. Sampath, R. Sengupta, S. Lafortune, K. Sin-namohideen, and D. Teneketzis. </author> <title> Failure diagnosis using discrete-event models. </title> <journal> IEEE Trans. Contr. Syst. Tech., </journal> <volume> 4(2) </volume> <pages> 105-124, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: The diagnoser is a deterministic FSM built from the system model G. This machine is at the core of the diagnostic methodology of <ref> [1, 7, 8] </ref>. It is used to analyze the diagnosability properties of G and to perform diagnostic when it observes, on-line, the behavior of the system.
Reference: [8] <author> M. Sampath, S. Lafortune, and D. Teneket-zis. </author> <title> Active diagnosis of discrete-event systems. </title> <journal> IEEE Trans. Automat. Contr., </journal> <volume> 43(7), </volume> <month> July </month> <year> 1998. </year>
Reference-contexts: The diagnoser is a deterministic FSM built from the system model G. This machine is at the core of the diagnostic methodology of <ref> [1, 7, 8] </ref>. It is used to analyze the diagnosability properties of G and to perform diagnostic when it observes, on-line, the behavior of the system. <p> This is explained in [10]. Finally, our analysis was based on a set of assumptions, some of which, namely the liveness of the language and the nonexistence of cycles of unobservable events, can be relaxed easily as discussed in <ref> [8] </ref>. However, the assumptions on the order of message reception at the coordinator site are indeed critical. In [10] we present an example where the violation of Assumption 5 (on preserving the global order of reception of messages at the coordinator site) leads to declaring a false positive indefinitely.
Reference: [9] <author> M. Sampath. </author> <note> The extended diagnoser, Novem-ber 1993. Unpublished memorandum. </note>
Reference-contexts: The extended diagnoser for G was first introduced in <ref> [9] </ref>, and it is the FSM d = (Q e d ; q e where Q e d ; o ; ffi e 0 have the usual interpretation of state space, event set, transition function, and initial state.
Reference: [10] <author> R. Debouk, S. Lafortune, and D. Teneketzis. </author> <title> Coordinated decentralized protocols for failure diagnosis of discrete-event systems. </title> <type> Technical Report CGR97-17, </type> <institution> Department of Electrical Engineering and Computer Science, University of Michigan, </institution> <month> September </month> <year> 1997. </year> <month> Revised May </month> <year> 1998. </year>
Reference-contexts: In <ref> [10] </ref> we present another protocol, called Protocol 2, that obeys the above mentioned specifications; however, this protocol does not achieve the same diagnostic capabilities as Protocol 1. <p> Consequently, since the objective of diagnosing all failure types that are diagnosed using the centralized diagnoser cannot be achieved using Protocol 2, one may seek conditions on the system model G un der which this objective can be met. Such conditions do exist as we show in <ref> [10] </ref>. The results of this paper can be extended in a straightforward manner to a coordinated decentralized architecture similar to that of Section 3 and con sisting of m (m &gt; 2) local sites. This is explained in [10]. <p> Such conditions do exist as we show in <ref> [10] </ref>. The results of this paper can be extended in a straightforward manner to a coordinated decentralized architecture similar to that of Section 3 and con sisting of m (m &gt; 2) local sites. This is explained in [10]. Finally, our analysis was based on a set of assumptions, some of which, namely the liveness of the language and the nonexistence of cycles of unobservable events, can be relaxed easily as discussed in [8]. <p> However, the assumptions on the order of message reception at the coordinator site are indeed critical. In <ref> [10] </ref> we present an example where the violation of Assumption 5 (on preserving the global order of reception of messages at the coordinator site) leads to declaring a false positive indefinitely. The example reveals some fundamental limitations of the untimed DES mathematical model that is used.
References-found: 10

