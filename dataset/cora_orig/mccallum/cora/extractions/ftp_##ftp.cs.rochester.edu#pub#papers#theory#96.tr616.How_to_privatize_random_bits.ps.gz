URL: ftp://ftp.cs.rochester.edu/pub/papers/theory/96.tr616.How_to_privatize_random_bits.ps.gz
Refering-URL: http://www.cs.rochester.edu/trs/theory-trs.html
Root-URL: 
Title: How to Privatize Random Bits  
Author: Marius Zimand 
Keyword: one-way function, pseudo-random generator, hard function.  
Note: Supported in part by grant NSF-CCR-8957604, NSF-INT-9116781/JSPS-ENG-207 and NSF-CCR 9322513.  
Date: 616  
Address: Rochester, New York 14627  
Affiliation: The University of Rochester Computer Science Department  
Pubnum: Technical Report  
Abstract: The paper investigates the extent to which a public source of random bits can be used to obtain private random bits that can be safely used in cryptographic protocols. We consider two cases: (a) the case in which the part privatizing random bits is computationally more powerful than the adversary, and (b) the case in which the part privatizing random bits has a small number of private random bits. The first case corresponds to randomized hard functions and the second variant corresponds to randomized pseudo-random generators. We show the existence of strong randomized hard functions and pseudo-random generators. As a side effect, it is shown that relative to a random oracle P=poly is not measurable in EXP in the resource-bounded theoretical sense and a very strong separation between sublinear time and AC 0 is obtained. 
Abstract-found: 1
Intro-found: 1
Reference: [Ajt83] <author> M. Ajtai. </author> <title> 1 1 -formulae on finite structures. </title> <journal> Ann. Pure and Applied Logic, </journal> <volume> 24:1 48, </volume> <year> 1983. </year>
Reference-contexts: But how does DT IM E [O (log n)] relate to AC 0 ? After all, AC 0 is a very weak class itself and it is known from the work of Ajtai <ref> [Ajt83] </ref> that the languages in AC 0 are in a large proportion (of strings at each sufficiently large length n) constant on proper cylinders partitioning the domain (i :e:, n ) and, thus, a machine could, in principle, approximate them without reading the whole input.
Reference: [AS94] <author> E. Allender and M. Strauss. </author> <title> Measure on small complexity classes, with applications for BPP. </title> <booktitle> In Proceedings of the 34th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 807-818, </pages> <year> 1994. </year>
Reference-contexts: Machines working in sub-linear time are defined by allowing random access to the read-only input tape and yield quite respectable complexity classes. For example, Allender and Strauss <ref> [AS94] </ref> consider machines that work in O (log n) time in order to define a meaningful notion of measure inside P.
Reference: [BH89] <author> R. Boppana and R. </author> <title> Hirschfeld. Pseudorandom generators and complexity classes. </title> <editor> In S. Micali, editor, </editor> <booktitle> Advances in Computing Research. Randomness and Compu tation, </booktitle> <pages> pages 1-26. </pages> <publisher> JAI Press Inc., </publisher> <year> 1989. </year>
Reference-contexts: Let us describe formally the main steps in the construction. It is known how to transform a pseudo-random generator with a one bit expansion factor into one pseudo-random generator that doubles the length of the input (see [Gol93] or <ref> [BH89] </ref>) and how to transform the latter into a pseudo-random generator with an exponential expansion factor (see [GGM86]). Therefore the main objective is to get a randomized pseudo-random generator with a one-bit expansion factor. <p> By a standard construction (see [Gol93] or <ref> [BH89] </ref>), the expansion factor can be enlarged to doubling the length of the input.
Reference: [BIS90] <author> D. Barrington, N. Immerman, and H. </author> <title> Straubing. </title> <journal> On uniformity within NC 1 . Journal of Computer and System Sciences, </journal> <volume> 41 </volume> <pages> 274-306, </pages> <year> 1990. </year>
Reference-contexts: For example, Allender and Strauss [AS94] consider machines that work in O (log n) time in order to define a meaningful notion of measure inside P. More relevant to our result, Barrington, Immerman and Straubing <ref> [BIS90] </ref> argue convincingly that machines running in O (log n) time yield the proper, robust, notion of uniformity for polynomial-size, constant-depth circuits (i :e:, AC 0 circuits).
Reference: [Blu84] <author> M. Blum. </author> <title> Independent unbiased coin flips from a correlated biased source: A finite state Markov chain. </title> <booktitle> In Proceedings of the 25th IEEE Symposium on Foun dations of Computer Science, </booktitle> <pages> pages 425-433, </pages> <year> 1984. </year>
Reference-contexts: 1 Introduction It is commonly accepted that random bits are a valuable computational resource. Unfortunately, random bits are hard and expensive to produce. Generating them by special-purpose devices such as Geiger counters or Zener diodes is slow and the outcomes must still be further processed (see [SV86] and <ref> [Blu84] </ref>). One solution to reduce the costs of getting good random bits is to share the random source. We can think of a scenario where there is a public server which provides random bits to anyone requesting them.
Reference: [GGM86] <author> O. Goldreich, S. Goldwasser, and S. Micali. </author> <title> How to construct a random functions. </title> <journal> Journal of the ACM, </journal> <volume> 33(4) </volume> <pages> 792-807, </pages> <year> 1986. </year>
Reference-contexts: It is known how to transform a pseudo-random generator with a one bit expansion factor into one pseudo-random generator that doubles the length of the input (see [Gol93] or [BH89]) and how to transform the latter into a pseudo-random generator with an exponential expansion factor (see <ref> [GGM86] </ref>). Therefore the main objective is to get a randomized pseudo-random generator with a one-bit expansion factor. The natural idea would be to consider random functions R : n ! n+1 and to take as the pseudo-random generator the function f R (x) = R (x). <p> Then the ff 1 : : : ff m (in binary) bit of F R (x) is defined as the first bit of I ff 1 (I ff 2 : : : (I ff m (x)) : : :)). Then the techniques of Goldreich, Goldwasser and Micali <ref> [GGM86] </ref> show that for all R in R 0 and all oracle circuits C of size 2 an j P rob x2 n k (C R (F R (x) = 1)) P rob y2 2 b 5 n (C R (y) = 1) j &lt; 2 (b 4 b 5 )n
Reference: [GL89] <author> O. Goldreich and L. Levin. </author> <title> A hard-core predicate for all one-way functions. </title> <booktitle> In Proceedings of the 21st ACM Symposium on Theory of Computing, </booktitle> <pages> pages 25-32, </pages> <year> 1989. </year>
Reference-contexts: In order to compensate for the loss of length, we take advantage of the result of Im pagliazzo [Imp96] that shows that, with high probability of R in R n , f R is a strong one-way function and thus, by the results of Goldreich and Levin <ref> [GL89] </ref>, f R can be transformed into a function g R that has for any constant d, a hard-core function b : n ! d log n . <p> Let b i (x; s) denote the inner-product mod 2 of the binary vectors x and (s i ; : : :; s i+n1 ), where s = (s 1 ; : : : s 2n ). Then, by the results of Goldreich and Levin <ref> [GL89] </ref>, the function b (x; s) = b 1 (x; s) : : :b l (n) (x; s) is a hard-core function of the function g R , i :e:, there exists a positive constant b 1 such that for any oracle circuit C of size 2 an and any R
Reference: [Gol93] <author> O. Goldreich. </author> <title> Foundations of cryptography (fragments of a book), </title> <month> February </month> <year> 1993. </year> <note> ECCC Technical report, available at http://www.eccc.uni-trier.de/local/ECCC Books/eccc-books.html. </note>
Reference-contexts: We present below the complete construction of a strong randomized pseudo-random generator. Our starting point is also the strong randomized one-way function from [Imp96], but since this one-way function has the feature that is poly-to-1, we can use a simpler strategy following ideas from <ref> [Gol93, Section 3.5.1] </ref>. Let us describe formally the main steps in the construction. <p> Let us describe formally the main steps in the construction. It is known how to transform a pseudo-random generator with a one bit expansion factor into one pseudo-random generator that doubles the length of the input (see <ref> [Gol93] </ref> or [BH89]) and how to transform the latter into a pseudo-random generator with an exponential expansion factor (see [GGM86]). Therefore the main objective is to get a randomized pseudo-random generator with a one-bit expansion factor. <p> By using the hybrid method (see the exposition of Goldreich <ref> [Gol93] </ref>), we derive the existence of a positive constant b 2 such that for any oracle circuit C of size 2 an and any R 2 R 0 j P rob x2 9n 2 (C R (g R (x); b (x)) = 1) P rob x2 9n 2 ;y2 3n (1+2 <p> By a standard construction (see <ref> [Gol93] </ref> or [BH89]), the expansion factor can be enlarged to doubling the length of the input.
Reference: [HILL91] <author> J. Hastad, R. Impagliazzo, L. Levin, and M. Luby. </author> <title> Construction of a pseudorandom generator from any one-way function. </title> <type> Technical Report 91-68, ICSI, </type> <institution> Berkeley, </institution> <year> 1991. </year>
Reference-contexts: Impagliazzo demonstrated the existence of such a randomized pseudo-random generator using the general result of Hastad, Impagliazzo, Levin and Luby <ref> [HILL91] </ref> that shows that the existence of one-way functions is equivalent to the existence of pseudo-random generators. <p> As we are interested here in effective methods for privatizing random bits, we present a complete construction that, taking advantage of some features of the one-way function in [Imp96] is somewhat simpler than the construction implied by <ref> [HILL91] </ref>. The concepts and the proofs in this work are inspired by probability one relativizations. <p> C R n is as in Definition 3.1. Impagliazzo [Imp96] has shown the existence of randomized one-way functions and he inferred from here the existence of strong randomized pseudo-random generators, using the general result of Hastad, Impagliazzo, Levin and Luby <ref> [HILL91] </ref> that states that pseudorandom generators exist if and only if one-way functions exist. We present below the complete construction of a strong randomized pseudo-random generator.
Reference: [ILL89] <author> R. Impagliazzo, L. Levin, and M. Luby. </author> <title> Pseudo-random generation from one-way function. </title> <booktitle> In Proceedings of the 21st ACM Symposium on Theory of Computing, </booktitle> <pages> pages 12-24. </pages> <publisher> ACM Press, </publisher> <year> 1989. </year>
Reference-contexts: We take m n2 log n. The point is that, by a variant of the Leftover Hash Lemma of Impagliazzo, Levin and Luby <ref> [ILL89] </ref>, with high probability of R in R n , (h (f R (x)); h) x2 n ;h2H m n is 2 (n) close to the uniform distribution.
Reference: [Imp96] <author> R. Impagliazzo. </author> <title> Very strong one-way functions and pseudo-random generators exist relative to a random oracle. </title> <type> (manuscript), </type> <month> January </month> <year> 1996. </year>
Reference-contexts: Moreover, every bit of the output is produced in n O (1) time. This holds with probability over the choices of public random bits larger than 1 2 q (n) for any polynomial q. The construction is done by transforming a function built by Impagliazzo <ref> [Imp96] </ref>, which is strongly one 1 way with respect to a random oracle and is safe against non-uniform adversaries, into a randomized pseudo-random generator. <p> As we are interested here in effective methods for privatizing random bits, we present a complete construction that, taking advantage of some features of the one-way function in <ref> [Imp96] </ref> is somewhat simpler than the construction implied by [HILL91]. The concepts and the proofs in this work are inspired by probability one relativizations. <p> C R n is as in Definition 3.1. Impagliazzo <ref> [Imp96] </ref> has shown the existence of randomized one-way functions and he inferred from here the existence of strong randomized pseudo-random generators, using the general result of Hastad, Impagliazzo, Levin and Luby [HILL91] that states that pseudorandom generators exist if and only if one-way functions exist. <p> We present below the complete construction of a strong randomized pseudo-random generator. Our starting point is also the strong randomized one-way function from <ref> [Imp96] </ref>, but since this one-way function has the feature that is poly-to-1, we can use a simpler strategy following ideas from [Gol93, Section 3.5.1]. Let us describe formally the main steps in the construction. <p> In order to compensate for the loss of length, we take advantage of the result of Im pagliazzo <ref> [Imp96] </ref> that shows that, with high probability of R in R n , f R is a strong one-way function and thus, by the results of Goldreich and Levin [GL89], f R can be transformed into a function g R that has for any constant d, a hard-core function b : <p> The next lemma, proved by Impagliazzo <ref> [Imp96] </ref>, summarizes the useful properties of f R . For completeness, we include a full proof. Lemma 4.2 [Imp96] For any polynomial q (n) and constant a &lt; 1=2, there is a positive constant b such that with probability of R in R n at least 1 2 q (n) , <p> The next lemma, proved by Impagliazzo <ref> [Imp96] </ref>, summarizes the useful properties of f R . For completeness, we include a full proof. Lemma 4.2 [Imp96] For any polynomial q (n) and constant a &lt; 1=2, there is a positive constant b such that with probability of R in R n at least 1 2 q (n) , it holds that for all oracle circuits of size 2 an (a) P rob x2 n (f R <p> If P () is a property dependent on oracles A 2 A, we say that P holds relative to a random oracle, if P rob A2A (P (A) is true ) = 1. Impagliazzo <ref> [Imp96] </ref> has shown that strong one-way functions and pseudo-random generators exist relative to a random oracle (or, in an equivalent formulation, for a set of oracles having measure one). Theorem 3.2 easily implies the existence of strong hard functions relative to a random oracle.
Reference: [IZ89] <author> R. Impagliazzo and D. Zuckerman. </author> <title> How to recycle random bits. </title> <booktitle> In Proceedings of the 30th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 248-253. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> October/November </month> <year> 1989. </year>
Reference-contexts: The second term is bounded by the statistical difference between the distributions (h (g R (x)); h) x2 9n 2 ;h2H and (u; h) u2 p ;h2H : This can be evaluated by a relation between the statistical difference and the "collision probability" (see <ref> [IZ89] </ref>).
Reference: [Kah67] <author> D. Kahn. </author> <title> The codebreakers: the story of secret writing. </title> <address> New York, </address> <publisher> MacMillan, </publisher> <year> 1967. </year>
Reference-contexts: However, in some cryptographic protocols one needs private random bits such that the adversary has no means to predict them. Consider for example the perfect encryption system, one-time pad, that was invented in 1917 by Major Joseph Mauborgne and AT & T's Gilbert Vernam <ref> [Kah67] </ref>. In this system both the sender and the receiver have a common key consisting of a long string of random bits, called the one-time pad. Encryption is done by XORing bitwise the message with the one-time pad and decryption is done by XORing the ciphertext with the one-time pad.
Reference: [KM94] <author> S. Kautz and P. Miltersen. </author> <title> Relative to a random oracle, NP is not small. </title> <booktitle> In Proceedings of the 9th Structure in Complexity Theory Conference, </booktitle> <pages> pages 162 174. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1994. </year> <month> 18 </month>
Reference-contexts: An analogue result concerning the measure of NP in EXP has been obtained by Kautz and Miltersen <ref> [KM94] </ref>. Moreover, by employing a similar counting strategy as the one used in the construction of the randomized hard function, we establish a strong separation from sub-linear time. Machines working in sub-linear time are defined by allowing random access to the read-only input tape and yield quite respectable complexity classes.
Reference: [Koz91] <author> D. Kozen. </author> <title> The Design and Analysis of Algorithms. </title> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: There are at least t such functions h 1 ; h 2 ; : : : ; h t , where h i is the function associated as above to the i-th string in dlog te . As it is well-known (see, for example, <ref> [Koz91, pag. 200] </ref>), for each i 2 f1; : : :; tg, the following facts hold true: (a) for each x; y 2 n , P rob (h i (x) = y) = 2 n , and (b) the random variables fh i (x) : x 2 n g are m-wise
Reference: [LS93] <author> J. Lutz and W. Schmidt. </author> <title> Circuit size relative to pseudorandom oracles. </title> <journal> Theoretical Computer Science, </journal> <volume> 107 </volume> <pages> 95-120, </pages> <year> 1993. </year>
Reference-contexts: We also investigate the relation between sets decidable in exponential time (EXP ) and sets accepted by polynomial-size circuits (P=poly) in worlds relativized with random oracles. It is known from the work of Lutz and Schmidt <ref> [LS93] </ref> that, relative to a random oracle A, EXP A is not included in P A =poly (actually their result is stronger in many aspects). Such questions can be investigated more deeply using the apparatus of resource-bounded measure theory.
Reference: [Lut92] <author> J. Lutz. </author> <title> Almost everywhere high nonuniform complexity. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 44 </volume> <pages> 220-258, </pages> <year> 1992. </year>
Reference-contexts: Such questions can be investigated more deeply using the apparatus of resource-bounded measure theory. Lutz has shown in <ref> [Lut92] </ref> that sets that are accepted by circuits of size bounded by n k for a fixed k have measure 0 in EXP . However, nothing is known about the measure of P=poly in EXP . <p> Our next result concerns the resource-bounded measure of P=poly in EXP = DT IM E [2 n O (1) ]. We need to review some basic notions of the theory of resource-bounded measure developed by Lutz <ref> [Lut92] </ref> building on earlier studies of Schnorr [Sch73]. For a comprehensive exposition, see the work of Mayordomo [May94]. <p> If C has neither measure 0 nor measure 1 in EXP , we say that C is not measurable in EXP . For the motivations behind these definitions, the reader could consult one of the following references <ref> [Lut92] </ref>, [May94], [RSC95b], [Zim94]. Lutz [Lut92] showed that P=poly has measure 0 in the larger class DT IM E [2 n log n ] and observed that since there are oracles A that make EXP A P A =poly ([Wil85]), relativizable techniques are not sufficient to prove QP (P=poly " EXP <p> If C has neither measure 0 nor measure 1 in EXP , we say that C is not measurable in EXP . For the motivations behind these definitions, the reader could consult one of the following references <ref> [Lut92] </ref>, [May94], [RSC95b], [Zim94]. Lutz [Lut92] showed that P=poly has measure 0 in the larger class DT IM E [2 n log n ] and observed that since there are oracles A that make EXP A P A =poly ([Wil85]), relativizable techniques are not sufficient to prove QP (P=poly " EXP ) = 0.
Reference: [May94] <author> E. Mayordomo. </author> <title> Contributions to the Study of Resouce-Bounded Measure. </title> <type> PhD thesis, </type> <institution> Universidad Polytecnica de Catalunya, Barcelona, </institution> <month> April </month> <year> 1994. </year>
Reference-contexts: We need to review some basic notions of the theory of resource-bounded measure developed by Lutz [Lut92] building on earlier studies of Schnorr [Sch73]. For a comprehensive exposition, see the work of Mayordomo <ref> [May94] </ref>. A martingale is a function d from fl to the dyadic rationals (i :e:, numbers of the form n=2 r for non-negative integers n; r), which satisfies the relation: for all w 2 fl , d (w) = 1=2 (d (w0) + d (w1)). <p> If C has neither measure 0 nor measure 1 in EXP , we say that C is not measurable in EXP . For the motivations behind these definitions, the reader could consult one of the following references [Lut92], <ref> [May94] </ref>, [RSC95b], [Zim94].
Reference: [RSC95a] <author> K. Regan, D. Sivakumar, and J. Cai. </author> <title> Pseudorandom generators, measure theory, and natural proofs. </title> <booktitle> In Proceedings of the 35th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 26-35. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> October </month> <year> 1995. </year>
Reference-contexts: Lutz has shown in [Lut92] that sets that are accepted by circuits of size bounded by n k for a fixed k have measure 0 in EXP . However, nothing is known about the measure of P=poly in EXP . Using a result of Regan, Sivakumar and Cai <ref> [RSC95a] </ref> and a randomized pseudo-random generator, we show that with respect to a random oracle A, P A =poly does not have measure 0 or 1 in EXP A . An analogue result concerning the measure of NP in EXP has been obtained by Kautz and Miltersen [KM94].
Reference: [RSC95b] <author> K. Regan, D. Sivakumar, and J. Cai. </author> <title> Pseudorandom generators, measure theory, and natural proofs. Technical Report TR95-006, </title> <booktitle> Electronic Colloquium on Computational Complexity, </booktitle> <year> 1995. </year> <note> Available at http://www.eccc.uni-trier.de/eccc/. </note>
Reference-contexts: If C has neither measure 0 nor measure 1 in EXP , we say that C is not measurable in EXP . For the motivations behind these definitions, the reader could consult one of the following references [Lut92], [May94], <ref> [RSC95b] </ref>, [Zim94]. <p> Re-gan, Sivakumar and Cai <ref> [RSC95b] </ref> have established a relation between the resource bounded measure of P=poly in EXP and the existence of strong pseudo-random generators. More precisely, they showed that if there exists strong pseudo-random generators then P=poly is not measurable in EXP . <p> By the above discussion, L A (X) 2 P A =poly. We need the following two results from <ref> [RSC95b] </ref> which, for our purposes, we state in the relativized case. Lemma 5.3 [RSC95b] Let d be an oracle martingale. <p> By the above discussion, L A (X) 2 P A =poly. We need the following two results from <ref> [RSC95b] </ref> which, for our purposes, we state in the relativized case. Lemma 5.3 [RSC95b] Let d be an oracle martingale. Then for every oracle A, for any string u 2 fl , any l 2 N, b 2 R, jfv 2 l : d A (uv) (1 + b 1 ): Lemma 5.4 [RSC95b] Let d be a QP -computable oracle martingale such for <p> Lemma 5.3 <ref> [RSC95b] </ref> Let d be an oracle martingale. Then for every oracle A, for any string u 2 fl , any l 2 N, b 2 R, jfv 2 l : d A (uv) (1 + b 1 ): Lemma 5.4 [RSC95b] Let d be a QP -computable oracle martingale such for some oracle A, P A =poly " EXP A is in S [d A ] (i:e:, martingale d A witnesses that P A =poly has measure 0 in EXP A ). <p> Since A 0 has a strictly positive measure, this contradicts the fact that with probability one F A is a strong pseudo-random generator. Thus, relative to a random oracle, P=poly does not have measure 0 in EXP . It is shown in <ref> [RSC95b] </ref>, how to build from a QP martingale that succeeds on EXP P=poly a QP martingale that succeeds on P=poly " EXP . Since that construction rela tivizes, it follows that relative to a random oracle, P=poly does not have measure 1 in EXP . 6 AC vs.
Reference: [Sch73] <author> C. Schnorr. </author> <title> Process complexity and effective random tests. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 7 </volume> <pages> 376-388, </pages> <year> 1973. </year>
Reference-contexts: Our next result concerns the resource-bounded measure of P=poly in EXP = DT IM E [2 n O (1) ]. We need to review some basic notions of the theory of resource-bounded measure developed by Lutz [Lut92] building on earlier studies of Schnorr <ref> [Sch73] </ref>. For a comprehensive exposition, see the work of Mayordomo [May94].
Reference: [Sho88] <author> V. Shoup. </author> <title> New algorithms for finding irreducible polynomials over finite fields. </title> <booktitle> In Proceedings of the 29th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 283-290. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1988. </year>
Reference-contexts: Finding the irreducible polynomial requires O (n 5 ) time (see <ref> [Sho88] </ref>) and the rest requires O ((ms + 1)mn log n log n) time. It remains to prove Fact 3.3. Proof of Fact 3.3.
Reference: [SSS93] <author> J.P. Schmidt, A. Siegel, and A. Srinivasan. </author> <title> Chernoff-Hoeffding bounds for applications with limited independence. </title> <booktitle> In Proceedings of the ACM/SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 331-340, </pages> <year> 1993. </year>
Reference-contexts: P 2 n i=1 X i . Then the expected value of X is E [X] = 2 n =2. By Fact 3.3, the random variables (X i ) i=1;:::;2 n are m-independent. Using the Chernoff's bounds for 0-1 random variables with limited independence from <ref> [SSS93] </ref>, we obtain that if m dffi 2 E [X]e 1=3 e, then P rob (jX E [X]j ffiE [X]) e bm=2c . We can pick ff (recall that m = 2 ds 1+ff e) and ffi = 2 an such that m dffi 2 2 n1 e 1=3 e.
Reference: [SV86] <author> M. Santha and U. Vazirani. </author> <title> Generating quasi-random sequences from semi-random sources. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 33 </volume> <pages> 75-87, </pages> <year> 1986. </year>
Reference-contexts: 1 Introduction It is commonly accepted that random bits are a valuable computational resource. Unfortunately, random bits are hard and expensive to produce. Generating them by special-purpose devices such as Geiger counters or Zener diodes is slow and the outcomes must still be further processed (see <ref> [SV86] </ref> and [Blu84]). One solution to reduce the costs of getting good random bits is to share the random source. We can think of a scenario where there is a public server which provides random bits to anyone requesting them.
Reference: [Wil85] <author> C. Wilson. </author> <title> Relativized circuit complexity. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 31(2) </volume> <pages> 169-181, </pages> <year> 1985. </year>
Reference: [Zim94] <author> M. Zimand. </author> <title> On the size of classes with weak membership properties. </title> <type> Technical Report 557, </type> <institution> Department of Computer Science, Univ. of Rochester, Rochester, </institution> <address> NY, </address> <year> 1994. </year>
Reference-contexts: If C has neither measure 0 nor measure 1 in EXP , we say that C is not measurable in EXP . For the motivations behind these definitions, the reader could consult one of the following references [Lut92], [May94], [RSC95b], <ref> [Zim94] </ref>.
References-found: 26

