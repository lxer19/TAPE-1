URL: http://www.eecs.umich.edu/~riepe/postscript/design_rules.ACM.ps
Refering-URL: http://www.eecs.umich.edu/~riepe/papers_ps.html
Root-URL: http://www.eecs.umich.edu
Title: The Edge-Based Design Rule Model Revisited  
Author: MICHAEL A. RIEPE and KAREM A. SAKALLAH 
Keyword: Categories and Subject Descriptors: J.6 [Computer Applications]: Computer-Aided Engineering; B.7.2 [Integrated Circuits]: Design-AidsVerification General Terms: Theory, Verification Additional Key Words and Phrases: design rules, design rule checking, layout verification  
Note: 1. The work was supported by the Advanced Research Projects Agency under ARPA/ARO contract number DAAH04-94-G-0327 2. The authors are with the Advanced  
Affiliation: University of Michigan  Computer Architecture Laboratory, Department of Electrical Engineering and Computer Science,  
Abstract: University of Michigan, 1301 Beal Ave. Ann Arbor, MI. 48109-2122. A model for integrated circuit design rules based on rectangle edge constraints has been proposed by K, Jeppson, S. Christensson, and N. Hedenstierna, which we refer to as the JCH model. We review their model and show how it provides insufficient exibility to correctly model the design rules under all conditions. Specifically, their model only allows design rules to be defined between rectangle edges which are adjacent. We introduce a new notation, called an edge path, which allows us to extend their model to allow for constraints between edges separated by an arbitrary number of intervening edges. Using this notation we enumerate all edge paths which are required to correctly model the original design rule macros of the JCH model. We also show how this notation allows us to directly specify rules involving touch edges, as well as conjunctive design rules, which required ad-hoc specification under the JCH model. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Dracula Reference Manual. </author> <title> Cadence Design Systems, </title> <publisher> Inc., </publisher> <address> San Jose, CA. </address> <year> 1994. </year>
Reference-contexts: Since these mask operations are global in nature, acting on all rectangles of a particular mask layer in the layout, we refer to these as mask-based design rule models. Mask-based modeling forms the basis of the commercial design rule checking software package Dracula <ref> [1] </ref>, and has been formalized by Modarres and Lomax [5] through the use of set theoretic methods. We refer to the model of Modarres and Lomax as the ML model for design rules.
Reference: [2] <author> Jeppson, K., Christensson, S., and Hedenstierna, N. </author> <title> Formal definitions of edge-based geometric design rules. IEEE Trans. The Edge-Based Design Rule Model Revisited 17 Computer-Aided Design 12, </title> <month> 1 (January </month> <year> 1993), </year> <month> 5969. </month>
Reference-contexts: Since this notion of design rules is local in extent, with its definition based on individual rectangle edges, we refer to these approaches as edge-based models. This second method has been formalized by K. Jeppson, S. Christensson, and N. Hedenstierna <ref> [2] </ref>, using a modeling approach which we refer to as the JCH model for design rules. The two applications for design rules mentioned above, design rule checking and layout generation, expose two facets to the problem of design rule modeling. <p> In our study of the JCH model we have observed a shortcoming in the model as it was presented in <ref> [2] </ref>. The root of the problem is that, in their exhaustive enumeration of all possible design rules, the authors only examined the case of rules between adjacent edges in the layout. They show one example in which two edges, which should be constrained, are separated by an intermediate edge. <p> Using this grammar we describe the design rule macros of the JCH model and extend these macros to cover design rules which were un-representable in the notation used in <ref> [2] </ref>. 2. Previous WorkThe JCH Model for Design Rules In the VLSI layout environment as defined by Mead and Conway [4], an integrated circuit is represented symbolically by a collection of geometric primitives on several different layout layers. <p> This will eliminate the constraints under which the JCH model will either indicate a false positive or false negative during a design rule check as a result of layout situations like those addressed in <ref> [2] </ref>, and repeated in Figure 2-5. Of course some of these patterns, especially the new EXTENSION edge-paths, may correspond to geometry which should not occur in the layout.
Reference: [3] <author> Lengauer, T. </author> <title> Combinatorial Algorithms for Integrated Circuit Layout. </title> <publisher> John Wiley & Sons, </publisher> <address> New York, NY. </address> <year> 1990. </year>
Reference-contexts: In addition, layout generation tools, such as placement and routing tools, layout compactors, and leafless synthesis tools <ref> [3] </ref>, require detailed information about the design rules so that correct layout can be produced.
Reference: [4] <author> Mead, C. and Conway, L. </author> <title> Introduction to VLSI Systems. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA. </address> <year> 1980. </year>
Reference-contexts: Using this grammar we describe the design rule macros of the JCH model and extend these macros to cover design rules which were un-representable in the notation used in [2]. 2. Previous WorkThe JCH Model for Design Rules In the VLSI layout environment as defined by Mead and Conway <ref> [4] </ref>, an integrated circuit is represented symbolically by a collection of geometric primitives on several different layout layers. The masks used to manufacture the circuit can later be derived from this collection of layout layers 1 . Formally, a layout layer represents a set of geometric primitives.
Reference: [5] <author> Modarres, H. and Lomax, R. </author> <title> A Formal Approach to Design-Rule Checking. </title> <journal> IEEE Trans. Computer-Aided Design 6, </journal> <month> 4 (July </month> <year> 1987), </year> <month> 561572. </month>
Reference-contexts: Mask-based modeling forms the basis of the commercial design rule checking software package Dracula [1], and has been formalized by Modarres and Lomax <ref> [5] </ref> through the use of set theoretic methods. We refer to the model of Modarres and Lomax as the ML model for design rules. The second method developed for the modeling of design rules treats the rules as constraints on the distance between individual edges of rectangles in the layout. <p> Each rectangle has four edges marking its boundaries. Where rectangles overlap, their edges are partitioned into disjoint intervals such that all points in a given interval have the same combination of layers on both sides. The rectangle partitioning operator defined by Modarres and Lomax <ref> [5] </ref> can be used for this purpose. Each edge interval (usually just called an edge) in a rectangle can be assigned a type based on the different layers that it separates.
Reference: [6] <author> Preparata, F. </author> <title> Computational Geometry: An Introduction. </title> <publisher> Springer-Verlag, </publisher> <address> New York, NY. </address> <year> 1985. </year>
Reference-contexts: The global nature of the mask-based model suits this application well, and appears to lead the most naturally to elegant and efficient implementations based on well studied methods on computational geometry <ref> [6] </ref>. However, in the latter application one often requires the capability of making local queries in the layout as a new rectangle is added, to ensure that the rectangle is legally placed with respect to its neighbors.
Reference: [7] <author> Razdan, R. and Strojwas, A. </author> <title> A statistical design rule developer. </title> <journal> IEEE Trans. Computer-Aided Design 5, </journal> <month> 4 (October </month> <year> 1986), </year> <month> 508520. </month>
Reference-contexts: Therefore, this statistical data is commonly codified into a set of much simpler design rules which can be given to the mask designers to guide them in producing a manufacturable layout <ref> [7] </ref>. Integrated circuit design rules abstract away the details of the process technology, and instead impose rules on the sizes and shapes of mask features and the separations and orientations of mask features in relation to one another.
Reference: [8] <editor> Wolf, S. </editor> <booktitle> Silicon Processing, </booktitle> <volume> Vol. 2. </volume> <publisher> Lattice Press, </publisher> <address> Sunset Beach, CA. </address> <year> 1990. </year>
Reference-contexts: 1. Introduction The technology used to manufacture integrated circuits <ref> [8] </ref> imposes certain limits on the sizes and relative positioning of features on the wafer.
Reference: [9] <author> Wolf, W. and Dunlop, A. </author> <title> Symbolic layout and compaction. In Physical Design Automation of VLSI Systems. </title> <publisher> Benjamin/ Cummings, </publisher> <address> Reading MA. </address> <year> 1988. </year> <month> 211281. </month>
Reference-contexts: This conceptual view, in addition to providing a compact summary of the edge-path checks, leads to a direct implementation of the common shadow algorithm used for constraint-generation in one-dimensional compaction, a good summary of which is presented in <ref> [9] </ref>. begin AEB C BEA C C AEB AEB O C done done done done done done done done done done done done done AB AB AB AB AB AB AB AB AB AB AB AB AB AB AB ABABAB AB done AB AB AB AB AB AB AB AB AB
References-found: 9

