URL: http://www.epm.ornl.gov/chammp/docs/loadbal94.ps
Refering-URL: 
Root-URL: 
Title: Load-Balancing Algorithms for Climate Models  
Author: Ian T. Foster and Brian R. Toonen 
Address: Argonne, IL 60439  
Affiliation: Mathematics and Computer Science Division Argonne National Laboratory  
Abstract: Implementations of climate models on scalable parallel computer systems can suffer from load imbalances due to temporal and spatial variations in the amount of computation required for physical parameterizations such as solar radiation and convective adjustment. We have developed specialized techniques for correcting such imbalances. These techniques are incorporated in a general-purpose, programmable load-balancing library that allows the mapping of computation to processors to be specified as a series of maps generated by a programmer-supplied load-balancing module. The communication required to move from one map to another is performed automatically by the library, without programmer intervention. In this paper, we describe the load-balancing problem and the techniques that we have developed to solve it. We also describe specific load-balancing algorithms that we have developed for PCCM2, a scalable parallel implementation of the Community Climate Model, and present experimental results that demonstrate the effectiveness of these algorithms on parallel computers. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Drake, J., Foster, I., Hack, J., Michalakes, J., Semer-aro, B., Toonen, B., Williamson, D., and Worley, P., PCCM2: </author> <title> A GCM Adapted for Scalable Parallel Computers. </title> <booktitle> Proc. AMS Annual Meeting, AMS, </booktitle> <year> 1994. </year>
Reference-contexts: the work reported in this paper is independent of any particular climate model, our implementation work and empirical studies have been performed in the context of PCCM2, a parallel implementation of the National Center for Atmospheric Research (NCAR)'s Community Climate Model (CCM2) developed at Argonne and Oak Ridge national laboratories <ref> [1] </ref>. <p> The parallel implementation uses domain decomposition techniques to decompose these data structures and associated computation in the two horizontal dimensions <ref> [1, 2] </ref>. Some of these data structures are used only by dynamics or only by physics; others are shared by the two components. At each time step, a subset of these data structures are passed between the two components of the model, which are executed one after the other.
Reference: [2] <author> Foster, I., Gropp, W., and Stevens, R., </author> <title> The parallel scalability of the spectral transform method, </title> <journal> Mon. Wea. Rev., </journal> <volume> 125, </volume> <pages> 835-850, </pages> <year> 1992. </year>
Reference-contexts: The parallel implementation uses domain decomposition techniques to decompose these data structures and associated computation in the two horizontal dimensions <ref> [1, 2] </ref>. Some of these data structures are used only by dynamics or only by physics; others are shared by the two components. At each time step, a subset of these data structures are passed between the two components of the model, which are executed one after the other.
Reference: [3] <author> Fox, G., Johnson, M., Lyzenga, G., Otto, S., Salmon, J., and Walker, D., </author> <title> Solving Problems on Concurrent Processors. </title> <publisher> Prentice-Hall. </publisher> <year> 1988. </year>
Reference-contexts: We have used this load-balancing library to apply a range of different load-balancing techniques to a parallel climate model. These include one well-known technique (recursive bisection <ref> [3] </ref>) and others specialized toward the particular requirements of climate models. The specialized algorithms provide significantly better performance.
Reference: [4] <author> J. Hack, B. Boville, B. Briegleb, J. Kiehl, P. Rasch, and D. Williamson, </author> <title> Description of the NCAR Community Climate Model (CCM2), </title> <type> NCAR Tech. </type> <institution> Note TN-382+STR, National Center for Atmospheric Research, Boulder, Colo., </institution> <year> 1992. </year>
Reference-contexts: For example, the National Center for Atmospheric Research (NCAR)'s Community Climate Model (CCM2) performs radiation computations only in grid points that are in sunlight and gravity wave calculations only in grid points that are over land <ref> [4] </ref>. The resulting load imbalances can reduce overall efficiency by 10-20 per cent with current physics and are expected to become more significant in future models [6, 7]. As climate model runs are typically of extremely long duration, solutions to this load-balancing problem are of considerable importance. <p> dynamics are quite inefficient, a fact that of course tends to decrease the impact of load imbalances on performance.) Load distribution (and hence load balancing) within PCCM2 is complicated by the fact that there are three quite different types of physics time step: no radiation, partial radiation, and full radiation <ref> [4] </ref>. In the current model, the time step is 20 simulated minutes. Every time step, various computations concerned with precipitation, gravity wave calculations, convective processes, etc., are performed.
Reference: [5] <editor> Hoffmann, G.-R., and Kauranne, T. (eds.), </editor> <booktitle> Parallel Supercomputing in the Atmospheric Sciences, World Scientific, </booktitle> <year> 1993. </year>
Reference-contexts: 1 Introduction In recent years, several groups have worked to adapt the atmospheric circulation models used for weather and climate modeling for execution on scalable parallel computers (e.g., see <ref> [5] </ref>). Typically, these models use a regular three-dimensional grid to represent the state of the atmosphere, on which are performed distinct "dynamics" and "physics" computations.
Reference: [6] <author> Michalakes, J., </author> <title> Analysis of Workload and Load Balancing Issues in the NCAR Community Climate Model, </title> <institution> ANL/MCS-TM-144. Argonne National Laboratory, Argonne, Illinois, </institution> <year> 1991. </year>
Reference-contexts: The resulting load imbalances can reduce overall efficiency by 10-20 per cent with current physics and are expected to become more significant in future models <ref> [6, 7] </ref>. As climate model runs are typically of extremely long duration, solutions to this load-balancing problem are of considerable importance. Different climate models incorporate a variety of physics modules with different computational load characteristics.
Reference: [7] <author> Michalakes, J., and Nanjundiah, R., </author> <title> Computational Load in Model Physics of the Parallel NCAR Community Climate Model, </title> <institution> ANL/MCS TM-186, Argonne National Laboratory, Argonne, Illinois, </institution> <year> 1994. </year>
Reference-contexts: The resulting load imbalances can reduce overall efficiency by 10-20 per cent with current physics and are expected to become more significant in future models <ref> [6, 7] </ref>. As climate model runs are typically of extremely long duration, solutions to this load-balancing problem are of considerable importance. Different climate models incorporate a variety of physics modules with different computational load characteristics. <p> These may lead to both spatial and temporal imbalances (e.g., land/sea imbalances, seasonal cycle, and weather patterns such as convection over the Indian subcontinent during the monsoon); however, in the current CCM2 the magnitude of these imbalances is quite small <ref> [7] </ref>. Every hour (every 3 time steps) an additional "partial radiation" module is invoked to perform time-consuming shortwave radiation calculations in grid points exposed to sunlight. This produces a significant load imbalance, as illustrated in Fig. 1. <p> This is an extremely time-consuming calculation but involves the same amount of computation at every grid point. It turns out out that in PCCM2, the most significant source of load imbalance is the partial radiation calculation <ref> [7] </ref>. In addition to the strong spatial load variation illustrated in Fig. 1, this suffers from a substantial temporal variation due to the diurnal and seasonal cycles.
Reference: [8] <author> Ponnusamy, R., Saltz, J., and Choudhary, A., </author> <title> Runtime-Compilation Techniques for Data Partitioning and Communication Schedule Reuse, </title> <booktitle> Proc. Supercomputing '93, </booktitle> <year> 1993. </year>
Reference-contexts: The load-balancing library handles automatically the communication required to move from one schema to another. This is effectively a run-time compilation approach to load balancing <ref> [8] </ref>, in that schemas are translated at run time into communication schedules that can then be reused many times. We have used this load-balancing library to apply a range of different load-balancing techniques to a parallel climate model.
References-found: 8

