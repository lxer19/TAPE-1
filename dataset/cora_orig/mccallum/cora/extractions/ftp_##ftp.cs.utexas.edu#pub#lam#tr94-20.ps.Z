URL: ftp://ftp.cs.utexas.edu/pub/lam/tr94-20.ps.Z
Refering-URL: http://www.cs.utexas.edu/users/lam/seminar/mypapers.html
Root-URL: 
Title: Burst Scheduling Networks  
Author: Simon S. Lam and Geoffrey G. Xie 
Keyword: packet scheduling, delay guarantee, firewall property, flow specification, admission control, variable bit rate service, packet switching, ATM block transfer, block transfer delay, block loss rate  
Date: July 29, 1994 October 23, 1996 (3rd revision)  
Address: Austin, Texas 78712-1188  
Affiliation: Department of Computer Sciences The University of Texas at Austin  
Pubnum: TR-94-20  
Abstract: Most application-level data units are too large to be carried in a single packet and must be segmented for network delivery. To an application, the end-to-end delays and loss rate of its data units are more relevant measures of performance than ones specified for individual packets. From this observation, we introduced the concept of a burst (which subsumes the concept of a block in the ATM literature). A flow is modeled as a sequence of bursts, each of which models a sequence of packets that encapsulate an application data unit. We describe an approach towards designing integrated services packet-switching networks that provide QoS guarantees to bursts. We present a burst-based flow specification, an architecture and algorithms for packet scheduling, and tight bounds on end-to-end burst delays. In particular, we illustrate how to exploit the burst-based flow specification to improve implementation efficiency. We describe how burst scheduling networks can be designed to provide a real-time VBR service with no loss and, with burst-based admission control, a real-time VBR service at a specified loss rate. fl Research supported in part by National Science Foundation under grant no. NCR-9506048, the Texas Advanced Research Program grant no. 003658-220, and by an Intel Graduate Fellowship awarded to Geoffrey Xie for the 1995-96 academic year. Xie's current address: Computer Science Department, Naval Postgraduate School, Monterey, CA 93943. An earlier version of this paper appeared in Proceedings INFOCOM '95, April 1995 [7]. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> David Clark, Scott Shenker, and Lixia Zhang. </author> <title> Supporting real-time applications in an integrated services packet network: Architecture and mechanism. </title> <booktitle> In Proceedings of ACM SIGCOMM '92, </booktitle> <pages> pages 14-26, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: Lastly, we envision that future integrated services packet-switching networks will support not only link sharing by multiple service classes but also by multiple administrative classes (e.g., different agencies and organizations) <ref> [1, 3] </ref>. The end-to-end delay upper bound in (17) above has been further generalized to networks with hierarchical link sharing [13]. 17 Loss due to buffer overflow is still possible.
Reference: [2] <author> Alan Demers, Srinivasan Keshav, and Scott Shenker. </author> <title> Analysis and simulation of a fair queuing algorithm. </title> <booktitle> In Proceedings of ACM SIGCOMM '89, </booktitle> <pages> pages 3-12, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: Several rate-based packet scheduling disciplines meet this requirement <ref> [2, 10, 11, 14, 15] </ref>, among others. 3 In Section 4, we choose one and modify it to provide a delay guarantee to bursts with the firewall property. 2 For example, the pictures in a compressed video sequence vary greatly in the number of encoded bits [5]. 3 The FIFO discipline <p> Service is nonpreemptive, i.e., each packet transmission, once begun, will not be preempted by the arrival of a higher-priority packet. There are several packet scheduling disciplines that fit the above description, and provide a delay guarantee with the firewall property <ref> [2, 10, 11, 14, 15] </ref>. The disciplines differ mainly in how packet deadlines are defined. We have chosen the Virtual Clock (VC) algorithm for priority computation [15]. 8 Specifically, a virtual clock value is associated with each packet, and packets are scheduled in increasing order of their virtual clock values.
Reference: [3] <author> Sally Floyd and Van Jacobson. </author> <title> Link-sharing and resource management models for packet networks. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 3(4) </volume> <pages> 365-386, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: Lastly, we envision that future integrated services packet-switching networks will support not only link sharing by multiple service classes but also by multiple administrative classes (e.g., different agencies and organizations) <ref> [1, 3] </ref>. The end-to-end delay upper bound in (17) above has been further generalized to networks with hierarchical link sharing [13]. 17 Loss due to buffer overflow is still possible.
Reference: [4] <author> ITU-T Rec. I.371. </author> <title> Traffic Control and Congestion Control in B-ISDN. </title> <address> Perth, U.K., </address> <month> Nov. </month> <pages> 6-14, </pages> <year> 1995. </year>
Reference-contexts: The concept of a block (burst) already exists in the ATM literature. Specifically, the ATM block transfer (ABT) capability being standardized by ITU-T <ref> [4] </ref> allows a traffic source to dynamically negotiate its bandwidth reservation on the basis of a block of cells. In this paper, we refer to such a reservation method as burst-based rate allocation. <p> However, when an individual burst is admitted, channel capacity must not be exceeded by the aggregate rate allocated. Also, all packets of a burst are admitted or discarded as a whole. Such burst-based admission control is similar to the ATM block transfer (ABT) Immediate Transmission capability <ref> [4] </ref>. To put network design on a sound foundation, tight bounds on the end-to-end delays of bursts must be proved.
Reference: [5] <author> Simon S. Lam, Simon Chow, and David K.Y. Yau. </author> <title> An algorithm for lossless smoothing of MPEG video. </title> <booktitle> In Proceedings of ACM SIGCOMM '94, </booktitle> <pages> pages 281-293, </pages> <address> London, England, </address> <month> August </month> <year> 1994. </year>
Reference-contexts: disciplines meet this requirement [2, 10, 11, 14, 15], among others. 3 In Section 4, we choose one and modify it to provide a delay guarantee to bursts with the firewall property. 2 For example, the pictures in a compressed video sequence vary greatly in the number of encoded bits <ref> [5] </ref>. 3 The FIFO discipline cannot be used because it does not have the firewall property. 2 In our flow model, the rate of a burst is defined to be the burst's size (bits or packets) divided by a source-specified duration for the burst (seconds).
Reference: [6] <author> Simon S. Lam and A. Udaya Shankar. </author> <title> A theory of interfaces and modules I: Composition theorem. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 20(1) </volume> <pages> 55-71, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: Subsequently, we have made progress in addressing several implementation issues. We have also generalized the end-to-end delay guarantee from VC servers to a class of guaranteed-deadline servers. A brief overview follows. 15 For an in-depth treatment of assumptions and guarantees between service providers and consumers, see <ref> [6] </ref>. The scheduler of a VC server (in fact, any priority server) must repeatedly search for the smallest element in a set of priority values (deadlines). For high-speed networks of the future, it is likely that a channel will be shared by hundreds, and perhaps, thousands of flows.
Reference: [7] <author> Simon S. Lam and Geoffrey G. Xie. </author> <title> Burst scheduling networks. </title> <type> Technical Report TR-94-20, </type> <institution> University of Texas at Austin, </institution> <month> July </month> <year> 1994. </year> <note> An abbreviated version in Proceedings of IEEE INFOCOM '95, </note> <month> April </month> <year> 1995. </year>
Reference-contexts: As another example, an email message may be segmented into a sequence of cells for delivery over an ATM network. The delay incurred to deliver the email message is more important than the delays of individual cells. Motivated by the above observation, the concept of a burst was introduced <ref> [7] </ref>. Consider a traffic source that generates a sequence of application data units for network delivery to some destination. An application data unit may be segmented and is encapsulated in one or more packets. The sequence of packets encapsulating an application data unit is called a burst. <p> The objective of this paper is to describe an approach towards designing integrated services packet-switching networks to provide QoS guarantees to bursts rather than individual packets. Our approach is illustrated with the design of a particular class of networks, called burst scheduling networks, first presented in <ref> [7] </ref>. The balance of this paper is organized as follows. In Section 2, our design approach is described. In Section 3, a burst-based flow specification is introduced. <p> to flows and can ensure that the capacity of each of its output channels is not exceeded by the aggregate rate allocated. 6 Extensions and Related Work The design of burst scheduling networks, as described in Section 3-5, was first presented in the 1994 Computer Communications Workshop and published in <ref> [7] </ref>. Subsequently, we have made progress in addressing several implementation issues. We have also generalized the end-to-end delay guarantee from VC servers to a class of guaranteed-deadline servers. A brief overview follows. 15 For an in-depth treatment of assumptions and guarantees between service providers and consumers, see [6].
Reference: [8] <author> Simon S. Lam and Geoffrey G. Xie. </author> <title> Burst Scheduling networks: Flow specification and performance guarantees. </title> <booktitle> In Proceedings of NOSSDAV, </booktitle> <address> Durham, New Hampshire, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: The guarantees are conditional in that the network is not obligated to provide any guarantee to a flow that does not conform to its flow specification. An important objective in network design is the firewall property <ref> [8, 11] </ref>. That is, a flow may misbehave and not conform to its flow specification. <p> However, when a flow, say v, misbehaves (as a result of unreliable packet delivery or source regulator malfunctioning), the network's service guarantees to other flows should be unaffected. Burst scheduling networks inherit such a firewall property from the delay guarantee of a VC server <ref> [8, 11] </ref> under several assumptions. First, switches are reliable. Second, each guaranteed flow is allocated its own buffers in a switch.
Reference: [9] <author> Simon S. Lam and Geoffrey G. Xie. </author> <title> Group priority scheduling. </title> <type> Technical Report TR-95-28, </type> <institution> University of Texas at Austin, </institution> <month> July </month> <year> 1995. </year> <note> Revised, September 1996. An abbreviated version in Proceedings of IEEE INFOCOM '96, </note> <month> March </month> <year> 1996. </year>
Reference-contexts: The reserved rate allocated to a burst is equal to the burst's rate, if it is not less than a minimum rate that depends upon the flow's negotiated QoS parameters (see Section 5 and <ref> [9] </ref>). Burst-based rate allocation has the advantage of allocating a reserved rate that is exactly what a VBR flow needs at all time. <p> The results and specifications to be presented can be modified in a straightforward manner for networks where the packet size is variable, but bounded. (In particular, the end-to-end delay guarantee theorem in <ref> [9] </ref> is applicable to variable-size packets.) Recall that a flow is modeled as a sequence of bursts, each of which is a sequence of packets. <p> The information in the first packet may be the burst's size in lieu of the burst's rate, or both may be included. Some other parameter value for the burst may also be included <ref> [9] </ref>. <p> in the group. (Thus all packets except one in the group have relaxed deadlines.) For each burst, say m, the group size g m is a parameter whose value can be chosen such that the worst-case end-to-end burst delay of a flow is unaffected by the use of group priority <ref> [9] </ref>. Group priority has two advantages. First, the channel scheduler's work is much reduced, particularly when the channel is heavily utilized [12]. This is because the priority of each flow changes only once per group rather than once per packet; hence the scheduler updates its priority data structure less often. <p> Thus a large group size is used for a large burst with a high reserved rate, resulting in relaxed deadlines for many packets in the burst, and better statistical performance at a heavily utilized channel. An end-to-end delay guarantee theorem for guaranteed-deadline (GD) servers is presented in <ref> [9] </ref>. <p> Note that the buffer requirement is very low. We also carried out experiments in which the channel capacity was overbooked to increase channel utilization. The results of some of these experiments can be found in <ref> [9] </ref>. 8 Conclusion We have presented an approach towards designing integrated services packet-switching networks that provide QoS guarantees to application data units. In particular, we have presented a burst-based flow specification.
Reference: [10] <author> Abhay K. Parekh and Robert G. Gallager. </author> <title> A generalized processor sharing approach to flow control in integrated services networks: The single node case. </title> <journal> IEEE/ACM Trans. on Networking, </journal> <volume> 1(3) </volume> <pages> 344-357, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Several rate-based packet scheduling disciplines meet this requirement <ref> [2, 10, 11, 14, 15] </ref>, among others. 3 In Section 4, we choose one and modify it to provide a delay guarantee to bursts with the firewall property. 2 For example, the pictures in a compressed video sequence vary greatly in the number of encoded bits [5]. 3 The FIFO discipline <p> Service is nonpreemptive, i.e., each packet transmission, once begun, will not be preempted by the arrival of a higher-priority packet. There are several packet scheduling disciplines that fit the above description, and provide a delay guarantee with the firewall property <ref> [2, 10, 11, 14, 15] </ref>. The disciplines differ mainly in how packet deadlines are defined. We have chosen the Virtual Clock (VC) algorithm for priority computation [15]. 8 Specifically, a virtual clock value is associated with each packet, and packets are scheduled in increasing order of their virtual clock values.
Reference: [11] <author> Geoffrey G. Xie and Simon S. Lam. </author> <title> Delay guarantee of Virtual Clock server. </title> <journal> IEEE/ACM Trans. on Networking, </journal> <volume> 3(6) </volume> <pages> 683-689, </pages> <month> December </month> <year> 1995. </year> <booktitle> Presented at 9th IEEE Workshop on Computer Communications, </booktitle> <month> October </month> <year> 1994. </year>
Reference-contexts: The guarantees are conditional in that the network is not obligated to provide any guarantee to a flow that does not conform to its flow specification. An important objective in network design is the firewall property <ref> [8, 11] </ref>. That is, a flow may misbehave and not conform to its flow specification. <p> Several rate-based packet scheduling disciplines meet this requirement <ref> [2, 10, 11, 14, 15] </ref>, among others. 3 In Section 4, we choose one and modify it to provide a delay guarantee to bursts with the firewall property. 2 For example, the pictures in a compressed video sequence vary greatly in the number of encoded bits [5]. 3 The FIFO discipline <p> Service is nonpreemptive, i.e., each packet transmission, once begun, will not be preempted by the arrival of a higher-priority packet. There are several packet scheduling disciplines that fit the above description, and provide a delay guarantee with the firewall property <ref> [2, 10, 11, 14, 15] </ref>. The disciplines differ mainly in how packet deadlines are defined. We have chosen the Virtual Clock (VC) algorithm for priority computation [15]. 8 Specifically, a virtual clock value is associated with each packet, and packets are scheduled in increasing order of their virtual clock values. <p> + 1) = maxfP (i); A (i + 1)g + 1 (3) where P (i) is the virtual clock value of packet i, A (i + 1) is the arrival time of packet i + 1, and (f ) denotes the reserved rate of flow f in packets/second. 7 See <ref> [11] </ref> for a formal definition of active flow. 8 We use the terms, priority and deadline interchangeably. <p> It has been shown that a VC server provides the following delay guarantee <ref> [11] </ref> to packets in flow f , L (i + 1) P (i + 1) + fl where L (i + 1) is the departure time of packet i + 1, and fl is the transmission rate in packets/second. <p> Note that Lemma 2 provides a burst delay bound which depends on the length of burst m. From Lemma 1 and the jitter timing constraint, observe that once the first packet of a burst has arrived, its flow will remain continuously active (as defined in <ref> [11] </ref>) until some time after the last packet of the burst arrives. Note that P (m; l) can be computed more efficiently from (5) than from (3). <p> However, when a flow, say v, misbehaves (as a result of unreliable packet delivery or source regulator malfunctioning), the network's service guarantees to other flows should be unaffected. Burst scheduling networks inherit such a firewall property from the delay guarantee of a VC server <ref> [8, 11] </ref> under several assumptions. First, switches are reliable. Second, each guaranteed flow is allocated its own buffers in a switch.
Reference: [12] <author> Geoffrey G. Xie and Simon S. Lam. </author> <title> An efficient adaptive search algorithm for scheduling real-time traffic. </title> <booktitle> In Proceedings of IEEE ICNP '96, </booktitle> <address> Columbus, Ohio, </address> <month> October </month> <year> 1996. </year>
Reference-contexts: Furthermore, each search must be carried out within a time bound, i.e., the search must be finished by the end of the current packet transmission. Otherwise, the channel would be idled, ready packets would incur additional delays, and delay guarantees would not hold. In <ref> [12] </ref>, we present a search algorithm based upon a novel data structure, called adaptive heap, which behaves like a heap most of the time, but adaptively changes its strategy when necessary to satisfy the time bound. <p> Group priority has two advantages. First, the channel scheduler's work is much reduced, particularly when the channel is heavily utilized <ref> [12] </ref>. This is because the priority of each flow changes only once per group rather than once per packet; hence the scheduler updates its priority data structure less often.
Reference: [13] <author> Geoffrey G. Xie and Simon S. Lam. </author> <title> Real-time block transfer under a link sharing hierarchy. </title> <type> Technical Report TR-96-19, </type> <institution> University of Texas at Austin, </institution> <month> June </month> <year> 1996. </year> <note> Available from http://www.cs.utexas.edu/users/lam/NRL/ . To appear in Proc. of IEEE INFOCOM '97. </note>
Reference-contexts: The burst loss rate of flows in this class can be calculated and negotiated at connection setup <ref> [13] </ref>. We also allow burst-based rate allocation such that the reserved rate of a VBR flow is variable, i.e., it changes from one burst to the next. <p> For the class of burst scheduling networks presented in Section 4 below, the end-to-end burst delay bounds can be found in Section 5. A burst admission control algorithm, derived from a generalized central limit theorem, is presented in <ref> [13] </ref>. <p> An algorithm for determining how much overbooking is allowed to achieve a specified loss rate at a switch is presented in <ref> [13] </ref>. Lastly, we envision that future integrated services packet-switching networks will support not only link sharing by multiple service classes but also by multiple administrative classes (e.g., different agencies and organizations) [1, 3]. <p> The end-to-end delay upper bound in (17) above has been further generalized to networks with hierarchical link sharing <ref> [13] </ref>. 17 Loss due to buffer overflow is still possible.
Reference: [14] <author> Hui Zhang and Srinivasan Keshav. </author> <title> Comparison of rate-based service disciplines. </title> <booktitle> In Proceedings of ACM SIGCOMM '91, </booktitle> <pages> pages 113-121, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: Several rate-based packet scheduling disciplines meet this requirement <ref> [2, 10, 11, 14, 15] </ref>, among others. 3 In Section 4, we choose one and modify it to provide a delay guarantee to bursts with the firewall property. 2 For example, the pictures in a compressed video sequence vary greatly in the number of encoded bits [5]. 3 The FIFO discipline <p> Service is nonpreemptive, i.e., each packet transmission, once begun, will not be preempted by the arrival of a higher-priority packet. There are several packet scheduling disciplines that fit the above description, and provide a delay guarantee with the firewall property <ref> [2, 10, 11, 14, 15] </ref>. The disciplines differ mainly in how packet deadlines are defined. We have chosen the Virtual Clock (VC) algorithm for priority computation [15]. 8 Specifically, a virtual clock value is associated with each packet, and packets are scheduled in increasing order of their virtual clock values. <p> The VC algorithm is often classified in the literature as being unfair, i.e., if a VC server has some capacity that has not been allocated to flows being served, such residual capacity is not shared among the flows in proportion to their reserved rates <ref> [14] </ref>. We note that this fairness property is not important to flows that are not greedy, i.e., flows that do not need any more bandwidth than their reserved rates.
Reference: [15] <author> Lixia Zhang. VirtualClock: </author> <title> A new traffic control algorithm for packet switching networks. </title> <booktitle> In Proceedings of ACM SIGCOMM '90, </booktitle> <pages> pages 19-29, </pages> <month> August </month> <year> 1990. </year> <month> 20 </month>
Reference-contexts: Several rate-based packet scheduling disciplines meet this requirement <ref> [2, 10, 11, 14, 15] </ref>, among others. 3 In Section 4, we choose one and modify it to provide a delay guarantee to bursts with the firewall property. 2 For example, the pictures in a compressed video sequence vary greatly in the number of encoded bits [5]. 3 The FIFO discipline <p> Service is nonpreemptive, i.e., each packet transmission, once begun, will not be preempted by the arrival of a higher-priority packet. There are several packet scheduling disciplines that fit the above description, and provide a delay guarantee with the firewall property <ref> [2, 10, 11, 14, 15] </ref>. The disciplines differ mainly in how packet deadlines are defined. We have chosen the Virtual Clock (VC) algorithm for priority computation [15]. 8 Specifically, a virtual clock value is associated with each packet, and packets are scheduled in increasing order of their virtual clock values. <p> There are several packet scheduling disciplines that fit the above description, and provide a delay guarantee with the firewall property [2, 10, 11, 14, 15]. The disciplines differ mainly in how packet deadlines are defined. We have chosen the Virtual Clock (VC) algorithm for priority computation <ref> [15] </ref>. 8 Specifically, a virtual clock value is associated with each packet, and packets are scheduled in increasing order of their virtual clock values. <p> This is a consequence of the delay guarantee in (4) and the assumption of a fixed packet size. With the exception of the first packet of each burst in guaranteed flows, there is no need to store packet arrival times, as suggested in the original proposal <ref> [15] </ref>.
References-found: 15

