URL: http://www.cs.man.ac.uk/~tessaris/DL/docs/misc/calv-lenz-ICDE-94.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~tessaris/DL/papers.html
Root-URL: http://www.cs.man.ac.uk
Email: e-mail: fcalvanese,lenzerinig@assi.dis.uniroma1.it  
Title: On the Interaction Between ISA and Cardinality Constraints  
Author: D. Calvanese, M. Lenzerini 
Address: Via Salaria 113, I-00198 Roma, Italy  
Affiliation: Dipartimento di Informatica e Sistemistica Universita di Roma "La Sapienza"  
Web: ICDE'94  
Note: Appeared in Proc. of  
Abstract: ISA and cardinality constraints are among the most interesting types of constraints in data models. ISA constraints are used to establish several forms of containment among classes, and are receiving great attention in moving to object-oriented data models, where classes are organized in hierarchies based on a generalization/specialization principle. Cardinality constraints impose restrictions on the number of links of a certain type involving every instance of a given class, and can be used for representing several forms of dependencies beteewn classes, including functional and existence dependencies. While the formal properties of each type of constraints are now well understood, little is known of their interaction. The goal of this paper is to present an effective method for reasoning about a set of ISA and cardinality constraints in the context of a simple data model based on the notions of classes and relationships. In particular, the method allows one both to verify the satisfiability of a schema and to check whether a schema implies a given constraint of any of the two kinds. We prove that the method is sound and complete, thus showing that the reasoning problem for ISA and cardinality constraints is decidable. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Maier, </author> <title> The Theory of Relational Databases. </title> <publisher> Computer Science Press, </publisher> <address> Potomac, Maryland, </address> <year> 1983. </year>
Reference-contexts: On the contrary, using ad hoc constructs for expressing specific classes of constraints often makes it possible to develop specialized reasoning methods, as demonstrated by the large body of research in dependency theory within the relational model (see <ref> [1] </ref>). The work reported in this paper has been carried out in the context of the second approach to problem (a) (ad hoc constructs for special classes of constraints), and is concerned with the problem of reasoning about a set of constraints belonging to interesting classes.
Reference: [2] <author> R. Hull and R. King, </author> <title> "Semantic database mod-elling: Survey, applications and research issues," </title> <journal> ACM Computing Surveys, </journal> <volume> vol. 19, </volume> <pages> pp. 201-260, </pages> <month> Sept. </month> <year> 1987. </year> <month> 212 </month>
Reference-contexts: Formal properties of this type of constraints have been the subject of a lot of research efforts in various contexts, ranging from the relational model to conceptual and semantic data models (see for example <ref> [2, 3] </ref>). Cardinality ratio constraints (or simply cardinal-ity constraints) are used to impose restrictions on the number of links of a certain type involving every instance of a given class. They appear in many forms in most of the database models proposed in the last two decades.
Reference: [3] <author> S. Cosmadakis, P. Kanellakis, and M. Vardi, </author> <title> "Polynomial-time implication problems for unary inclusion dependencies," </title> <journal> Journal of the ACM, </journal> <volume> vol. 37, </volume> <pages> pp. 15-46, </pages> <month> Jan. </month> <year> 1990. </year>
Reference-contexts: Formal properties of this type of constraints have been the subject of a lot of research efforts in various contexts, ranging from the relational model to conceptual and semantic data models (see for example <ref> [2, 3] </ref>). Cardinality ratio constraints (or simply cardinal-ity constraints) are used to impose restrictions on the number of links of a certain type involving every instance of a given class. They appear in many forms in most of the database models proposed in the last two decades.
Reference: [4] <author> J. </author> <title> Abrial, "Data semantics," in Data Base Management (J. </title> <editor> Klimbie and K. Koffeman, </editor> <booktitle> eds.), </booktitle> <pages> pp. 1-59, </pages> <publisher> North-Holland Publ. Co., </publisher> <address> Amsterdam, </address> <year> 1974. </year>
Reference-contexts: They appear in many forms in most of the database models proposed in the last two decades. Functional and existence dependencies are examples of cardinality constraints in the relational model. In <ref> [4] </ref>, a binary data model, that inspired most of the conceptual models subsequently proposed, is presented where cardinality constraints can be stated for binary relationships. Cardinality constraints have always been considered as natural constraints to express in Entity-Relationship (ER) schemas.
Reference: [5] <author> C. Batini, S. Ceri, and S. Navathe, </author> <title> Conceptual Database Design, an Entity-Relationship Approach. </title> <publisher> Benjamin and Cummings Publ. Co., </publisher> <address> Menlo Park, California, </address> <year> 1992. </year>
Reference-contexts: In [4], a binary data model, that inspired most of the conceptual models subsequently proposed, is presented where cardinality constraints can be stated for binary relationships. Cardinality constraints have always been considered as natural constraints to express in Entity-Relationship (ER) schemas. For example, the ER model proposed in <ref> [5, 6, 7, 8] </ref> as the target model used in the phase of conceptual database design, includes cardinality constraints in various ways. In [9], a relationship mechanism, together with a form of cardinality constraints, is introduced in the context of the object oriented data model. <p> The basic concepts in this model are those of class and relationship (see <ref> [19, 5] </ref>). A class denotes a set of individuals, called its instances, representing objects of the domain of interest with common properties. A relationship represents associations between individuals. An instance of a relationship denotes an association between instances of classes connected to the relationship.
Reference: [6] <author> J. Ullman, </author> <booktitle> Principles of Database and Knowledge Base Systems, </booktitle> <volume> vol. 1. </volume> <publisher> Computer Science Press, </publisher> <address> Potomac, Maryland, </address> <year> 1988. </year>
Reference-contexts: In [4], a binary data model, that inspired most of the conceptual models subsequently proposed, is presented where cardinality constraints can be stated for binary relationships. Cardinality constraints have always been considered as natural constraints to express in Entity-Relationship (ER) schemas. For example, the ER model proposed in <ref> [5, 6, 7, 8] </ref> as the target model used in the phase of conceptual database design, includes cardinality constraints in various ways. In [9], a relationship mechanism, together with a form of cardinality constraints, is introduced in the context of the object oriented data model.
Reference: [7] <author> H. Korth and A. Silberschatz, </author> <title> Database Systems Concepts. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1986. </year>
Reference-contexts: In [4], a binary data model, that inspired most of the conceptual models subsequently proposed, is presented where cardinality constraints can be stated for binary relationships. Cardinality constraints have always been considered as natural constraints to express in Entity-Relationship (ER) schemas. For example, the ER model proposed in <ref> [5, 6, 7, 8] </ref> as the target model used in the phase of conceptual database design, includes cardinality constraints in various ways. In [9], a relationship mechanism, together with a form of cardinality constraints, is introduced in the context of the object oriented data model.
Reference: [8] <author> R. ElMasri and S. Navathe, </author> <title> Fundamentals of Database Systems. </title> <publisher> Benjamin and Cummings Publ. Co., </publisher> <address> Menlo Park, California, </address> <year> 1988. </year>
Reference-contexts: In [4], a binary data model, that inspired most of the conceptual models subsequently proposed, is presented where cardinality constraints can be stated for binary relationships. Cardinality constraints have always been considered as natural constraints to express in Entity-Relationship (ER) schemas. For example, the ER model proposed in <ref> [5, 6, 7, 8] </ref> as the target model used in the phase of conceptual database design, includes cardinality constraints in various ways. In [9], a relationship mechanism, together with a form of cardinality constraints, is introduced in the context of the object oriented data model.
Reference: [9] <author> A. Albano, G. Ghelli, and R. Orsini, </author> <title> "A relationship mechanism for strongly typed Object-Oriented database programming languages," </title> <booktitle> in Proc. of the 17th Int. Conf. on Very Large Data Bases VLDB-91, (Barcelona), </booktitle> <pages> pp. 565-575, </pages> <year> 1991. </year>
Reference-contexts: Cardinality constraints have always been considered as natural constraints to express in Entity-Relationship (ER) schemas. For example, the ER model proposed in [5, 6, 7, 8] as the target model used in the phase of conceptual database design, includes cardinality constraints in various ways. In <ref> [9] </ref>, a relationship mechanism, together with a form of cardinality constraints, is introduced in the context of the object oriented data model. The use of cardinality constraints is also very common in structured knowledge representation languages (semantic networks and frame-based languages), as pointed out, for example, in [10].
Reference: [10] <author> R. Fikes and T. Kehler, </author> <title> "The role of frame-based representation in reasoning," </title> <journal> Communications of the ACM, </journal> <volume> vol. 28, no. 9, </volume> <pages> pp. 904-920, </pages> <year> 1985. </year>
Reference-contexts: In [9], a relationship mechanism, together with a form of cardinality constraints, is introduced in the context of the object oriented data model. The use of cardinality constraints is also very common in structured knowledge representation languages (semantic networks and frame-based languages), as pointed out, for example, in <ref> [10] </ref>. Formal properties of cardinality constraints are studied in several papers. We already mentioned the work on functional and existence constraints in the relational theory (see [11]).
Reference: [11] <author> S. Cosmadakis and P. Kanellakis, </author> <title> "Functional and inclusion dependencies a graph theoretical approach," </title> <booktitle> in Advances in Computing Research, </booktitle> <volume> Vol. 3 (P. </volume> <editor> Kanellakis and F. Preparata, </editor> <booktitle> eds.), </booktitle> <pages> pp. 163-184, </pages> <publisher> JAI Press, </publisher> <year> 1986. </year>
Reference-contexts: Formal properties of cardinality constraints are studied in several papers. We already mentioned the work on functional and existence constraints in the relational theory (see <ref> [11] </ref>). In [12], a general form of car-dinality constraints (called numerical dependencies), which limit the maximum number of associations between two given sets of attributes, is analyzed in the context of the relational model.
Reference: [12] <author> J. Grant and J. Minker, </author> <title> "Numerical dependencies," in Advances in Database Theory II (H. </title> <editor> Gal-laire, J. Minker, and J.-M. Nicolas, eds.), </editor> <publisher> Plenum Publ. Co., </publisher> <address> New York, </address> <year> 1984. </year>
Reference-contexts: Formal properties of cardinality constraints are studied in several papers. We already mentioned the work on functional and existence constraints in the relational theory (see [11]). In <ref> [12] </ref>, a general form of car-dinality constraints (called numerical dependencies), which limit the maximum number of associations between two given sets of attributes, is analyzed in the context of the relational model.
Reference: [13] <author> M. Lenzerini and G. Santucci, </author> <title> "Cardinality constraints in the entity-relationship model," </title> <booktitle> in Proc. of the Int. Conf. on the Entity-Relationship Approach to Software Engineering (C. </booktitle> <editor> Davis and others, </editor> <booktitle> eds.), </booktitle> <pages> pp. 529-549, </pages> <publisher> North-Holland Publ. Co., </publisher> <address> Amsterdam, </address> <year> 1983. </year>
Reference-contexts: Due to the expressive power of such constraints, it turns out that in the general case there is no finite set of inference rules for reasoning about them. In <ref> [13] </ref>, a uniform framework is proposed for expressing cardinality constraints in the ER model, later extended in [14]. In [15], a method is proposed for reasoning about an ER model with cardinality constraints, but without any form of inclusion dependencies.
Reference: [14] <author> B. Thalheim, </author> <title> "Fundamentals of cardinality constraints," </title> <booktitle> in Proc. of the 11th Int. Conf. on the Entity-Relationship Approach ER-92, </booktitle> <pages> pp. 7-23, </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Due to the expressive power of such constraints, it turns out that in the general case there is no finite set of inference rules for reasoning about them. In [13], a uniform framework is proposed for expressing cardinality constraints in the ER model, later extended in <ref> [14] </ref>. In [15], a method is proposed for reasoning about an ER model with cardinality constraints, but without any form of inclusion dependencies. Finally, cardinality constraints in the context of knowledge representation languages are studied in [16, 17, 18].
Reference: [15] <author> M. Lenzerini and P. Nobili, </author> <title> "On the satisfiability of dependency constraints in entity-relationship schemata," </title> <journal> Information Systems, </journal> <volume> vol. 15, no. 4, </volume> <pages> pp. 453-461, </pages> <year> 1990. </year>
Reference-contexts: Due to the expressive power of such constraints, it turns out that in the general case there is no finite set of inference rules for reasoning about them. In [13], a uniform framework is proposed for expressing cardinality constraints in the ER model, later extended in [14]. In <ref> [15] </ref>, a method is proposed for reasoning about an ER model with cardinality constraints, but without any form of inclusion dependencies. Finally, cardinality constraints in the context of knowledge representation languages are studied in [16, 17, 18]. <p> Our decision procedure is based on the idea of representing the cardinality constraints in terms of a special system of linear disequations, similarly to what is done in <ref> [15] </ref>. However, the presence of ISA con 205 straints makes the problem much harder than the one addressed in [15], and requires a different technique for deriving a suitable system of disequations from the schema. <p> Our decision procedure is based on the idea of representing the cardinality constraints in terms of a special system of linear disequations, similarly to what is done in <ref> [15] </ref>. However, the presence of ISA con 205 straints makes the problem much harder than the one addressed in [15], and requires a different technique for deriving a suitable system of disequations from the schema. The result presented in this paper provides a solution to a long standing problem in the ER model. However, we point out that the method is not merely confined to this model. <p> Moreover, when we talk about interpretations and models, we implicitly refer to finite interpretations and finite models. As pointed out in <ref> [15] </ref>, the notion of satisfiability is not sufficient for capturing the relevant properties of a CR-schema. In fact, it is easy to see that every schema is satisfied by any interpretation that assigns an empty set of instances to every class and every relationship. <p> In particular, a class C is said to be satisfiable in a CR-schema S, if S admits a model I such that C I is nonempty. In this section we present a method for verifying the satisfiability of a class C in a CR-schema. Following <ref> [15] </ref>, we model the cardinality constraints that appear in a CR-schema S by means of an associated system S of linear disequations. <p> Unfortunately, because of classes that may have common instances, it is not possible to simply use one unknown for each class and relationship, as done in <ref> [15] </ref>. We will overcome the problem by introducing the notion of expansion of a CR-schema. The rest of the section is structured as follows.
Reference: [16] <author> F. M. Donini, M. Lenzerini, D. Nardi, and W. Nutt, </author> <title> "The complexity of concept languages," </title> <booktitle> in Proc. of the 2nd Int. Conf. on Principles of Knowledge Representation and Reasoning KR-91 (J. </booktitle> <editor> Allen, R. Fikes, and E. Sandewall, </editor> <booktitle> eds.), </booktitle> <pages> pp. 151-162, </pages> <publisher> Morgan Kaufman, </publisher> <address> Los Altos, </address> <year> 1991. </year>
Reference-contexts: In [15], a method is proposed for reasoning about an ER model with cardinality constraints, but without any form of inclusion dependencies. Finally, cardinality constraints in the context of knowledge representation languages are studied in <ref> [16, 17, 18] </ref>. It is interesting to observe that, while each type of constraints mentioned above is now quite well under C D R H H H 6 stood, we know very little of the interaction between ISA and cardinality constraints.
Reference: [17] <author> M. Buchheit, F. M. Donini, and A. Schaerf, </author> <title> "Decidable reasoning in terminological knowledge representation systems," </title> <booktitle> in Proc. of the 13th Int. Joint Conf. on Artificial Intelligence IJCAI-93, </booktitle> <address> (Chambery, France), </address> <pages> pp. 704-709, </pages> <publisher> Morgan Kauf-man, </publisher> <address> Los Altos, </address> <year> 1993. </year>
Reference-contexts: In [15], a method is proposed for reasoning about an ER model with cardinality constraints, but without any form of inclusion dependencies. Finally, cardinality constraints in the context of knowledge representation languages are studied in <ref> [16, 17, 18] </ref>. It is interesting to observe that, while each type of constraints mentioned above is now quite well under C D R H H H 6 stood, we know very little of the interaction between ISA and cardinality constraints.
Reference: [18] <author> B. Nebel, </author> <title> "Computational complexity of terminological reasoning in BACK," </title> <journal> Artificial Intelligence, </journal> <volume> vol. 34, no. 3, </volume> <pages> pp. 371-383, </pages> <year> 1988. </year>
Reference-contexts: In [15], a method is proposed for reasoning about an ER model with cardinality constraints, but without any form of inclusion dependencies. Finally, cardinality constraints in the context of knowledge representation languages are studied in <ref> [16, 17, 18] </ref>. It is interesting to observe that, while each type of constraints mentioned above is now quite well under C D R H H H 6 stood, we know very little of the interaction between ISA and cardinality constraints.
Reference: [19] <author> P. Chen, </author> <title> "The Entity-Relationship model: Toward a unified view of data," </title> <journal> ACM Trans. on Database Syst., </journal> <volume> vol. 1, </volume> <pages> pp. 9-36, </pages> <month> Mar. </month> <year> 1976. </year>
Reference-contexts: The basic concepts in this model are those of class and relationship (see <ref> [19, 5] </ref>). A class denotes a set of individuals, called its instances, representing objects of the domain of interest with common properties. A relationship represents associations between individuals. An instance of a relationship denotes an association between instances of classes connected to the relationship.
Reference: [20] <author> M. Lenzerini, </author> <title> "Covering and disjointness constraints in type networks," </title> <booktitle> in Proc. of the 3rd IEEE Int. Conf. on Data Engineering, </booktitle> <publisher> (Los An-geles), </publisher> <pages> pp. 386-393, </pages> <publisher> IEEE Computer, </publisher> <year> 1987. </year> <month> 213 </month>
Reference-contexts: The first problem concerns the extension of the method in order to capture more expressive modeling features. Our first investigation shows that we can directly consider an extension which takes into account disjointness statements between classes, covering constraints <ref> [20] </ref>, and qualification conditions which restrict the participation of classes in relationships. The second problem concerns the efficiency of the method. Although we did not discuss this issue in the paper, there are many possible criteria for decreasing the complexity of the method.
References-found: 20

