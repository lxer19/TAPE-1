URL: file://ftp.cis.ohio-state.edu/pub/tech-report/1998/TR15.ps.gz
Refering-URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/TRList.html
Root-URL: 
Title: Design and Verification of a Secure Electronic Auction Protocol  
Author: Srividhya Subramanian 
Keyword: Electronic commerce, auction, security, atomicity, privacy, anonymity, verification, validation.  
Note: I next develop a logic based on the semantics of BAN-style [4] logic. Using this logic, I prove that the above properties are preserved in the presence of an intruder.  
Address: Columbus, OH 43210-1277  
Affiliation: Dept. of Computer and Information Science The Ohio State University,  
Email: E-mail: ssubrama@cis.ohio-state.edu  
Phone: Tel: (614) 292 5813, Fax: (614)-292-2911  
Abstract: Auctions are an important and common form of commerce today. A difficult aspect of auctions is that the bidder must be present at the site of the auction. This reduces the appeal of auction and restricts the number of people who would otherwise participate in it. An auction over an electronic network is, therefore, an attractive way of conducting business. In this paper, I first present a protocol for electronic auctions between an anonymous customers and a merchant whose identity is public. Protocol interrruption by involved parties, passive and active attacks by an intruder, and corruption or loss of messages in the network do not cost the merchant or the customer more than some additional computation. Furthermore, under all circumstances, the transaction is either completed (the right amount of money is exchanged for the right goods) or aborted (there is no transfer of money or goods). In other words, the protocol ensures security, atomicity, and privacy in business transactions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Anderson. </author> <title> Why Cryptosystems Fail. </title> <journal> In Communications of ACM, </journal> <volume> volume 37, </volume> <year> 1994. </year>
Reference-contexts: However, these sites are not backed by a fully automated secure electronic negotiation engine. Several properties have been identified as either required or desirable in protocols for transactions in electronic commerce <ref> [1, 11] </ref>.
Reference: [2] <author> C. Beam, A. Segev, and J. G. Shanthikumar. </author> <title> Electronic Negotiation through Internet-based Auctions. </title> <note> In CITM working paper 96-WP-1016, </note> <institution> Haas School, Berkeley, </institution> <year> 1996. </year>
Reference-contexts: This reduces the appeal of auction and restricts the number of people who would otherwise participate in it. An auction over an electronic network is, therefore, particularly attractive. However, electronic negotiation is very difficult to design <ref> [2] </ref>, and hence, most existing electronic commerce protocols do not handle auctions. When they do, they allow only a very simplified version of auction with no more than one round of bidding [5]. <p> This is due to the inherent difficulties in automated price negotiation <ref> [2] </ref>. While electronic auctions are complex, they are also equally popular and desirable. Consequently, a lot of research has been done in the area of electronic auctions and particularly in electronic negotiations. Negotiation Support Systems (NSS) is a class of 2 computer software systems geared specifically towards situations requiring negotiations. <p> Negotiation Support Systems (NSS) is a class of 2 computer software systems geared specifically towards situations requiring negotiations. While these are powerful tools, they require near-constant human input and are far from being fully automated negotiation engines <ref> [2] </ref>. In [5] a secure and automated auction protocol has been proposed. However, this protocol allows only one round of bidding. 2.2 Methods for Formal Verification Cryptographic protocols, if designed improperly, may have flaws that make them vulnerable to various security attacks.
Reference: [3] <author> A. Bleeker and L. Meertens. </author> <title> A Semantics for BAN Logic. </title> <booktitle> In DIMACS Workshop on Design and Formal Verification of Security Protocols, </booktitle> <year> 1997. </year>
Reference-contexts: The logic I use in this paper is based on a semantics of BAN logic <ref> [3, 4] </ref>. In this section, I will state the language (or syntax), the axioms, and the semantics of this logic. I will also develop some theorems that will be used later to analyze the protocol. 4 4.1 The Language I distinguish between the following sorts: Principal, Key, Message, and Formula. <p> : Y 2 S R implies X 2 O P ; s j= k public key of P if for all R : [X] k 2 S R implies X 2 S P ; It can be proved that the above logic is sound with respect to the given semantics <ref> [3] </ref>. 4.5 Proving properties of the protocol Definition 4 The logic translation of an action a, T (a) is defined as: T (P ! Q : X) := (P once said X ^ Q sees X ^ I sees X) (here, I refers to the intruder) T (;) := ; Intuitively, <p> Theorem 1 If A [ T (P ) is positive, A allows P , and A [ T (P ) ` C, then fR [A]g P fR [C]g. For a proof, see <ref> [3] </ref>.
Reference: [4] <author> M. Burrows, M. Abadi, and R. Needham. </author> <title> A Logic of Authentication. </title> <journal> In ACM Transactions on Computer Systems, </journal> <year> 1990. </year> <month> 21 </month>
Reference-contexts: The use of formal methods to analyze the correctness of cryptographic protocols became prevalent with the development of the BAN logic in 1989 <ref> [4] </ref>. Since then several papers have been published reporting problems with the BAN logic [10, 12, 13] and several others proposing BAN-style logics that overcome many of these limitations [7, 14]. <p> The logic I use in this paper is based on a semantics of BAN logic <ref> [3, 4] </ref>. In this section, I will state the language (or syntax), the axioms, and the semantics of this logic. I will also develop some theorems that will be used later to analyze the protocol. 4 4.1 The Language I distinguish between the following sorts: Principal, Key, Message, and Formula.
Reference: [5] <author> M. Franklin and M. Reiter. </author> <title> The Design and Implementation of a Secure Auction Service. </title> <booktitle> In Proceedings of IEEE Symposium on Security and Privacy, </booktitle> <year> 1995. </year>
Reference-contexts: However, electronic negotiation is very difficult to design [2], and hence, most existing electronic commerce protocols do not handle auctions. When they do, they allow only a very simplified version of auction with no more than one round of bidding <ref> [5] </ref>. Due to the popularity of electronic auctions, a number of electronic auction houses are already established on the web, such as, Onsale, FirstAuction, ZAuction, Dealdeal, and Ubid. However, these sites are not backed by a fully automated secure electronic negotiation engine. <p> Negotiation Support Systems (NSS) is a class of 2 computer software systems geared specifically towards situations requiring negotiations. While these are powerful tools, they require near-constant human input and are far from being fully automated negotiation engines [2]. In <ref> [5] </ref> a secure and automated auction protocol has been proposed. However, this protocol allows only one round of bidding. 2.2 Methods for Formal Verification Cryptographic protocols, if designed improperly, may have flaws that make them vulnerable to various security attacks.
Reference: [6] <author> F. Germeau and G. Leduc. </author> <title> Model-based Design and Verification of Security Protocols using LOTOS. </title> <booktitle> In DIMACS Workshop on Design and Formal Verification of Security Protocols, </booktitle> <year> 1997. </year>
Reference-contexts: However, the concept of an intruder is rarely included in the logic. Some tools such as model checkers and theorem provers are used to automate the proof process. Sometimes, these tools model an intruder <ref> [6] </ref>. However, such implementations are not based on formally verified models and their assumptions need to be checked for their correctness. Also, sometimes the tools make assumptions that, though correct in a general situation, may not be applicable to the specific domain of the problem being solved.
Reference: [7] <author> L. Gong, R. Needham, and R. Yahalom. </author> <title> Reasoning about Beliefs in Cryptographic Protocols. </title> <booktitle> In Proceedings of IEEE Symposium on Research in Security and Privacy, </booktitle> <year> 1990. </year>
Reference-contexts: Since then several papers have been published reporting problems with the BAN logic [10, 12, 13] and several others proposing BAN-style logics that overcome many of these limitations <ref> [7, 14] </ref>. In analysis using BAN logic, a set of participant's final beliefs is generated from a set of initial assumptions and the protocol steps. If these beliefs satisfy the goal of the protocol, then the protocol is validated.
Reference: [8] <author> S. Ketchpel. </author> <title> Transaction Protection for Information Buyers and Sellers. </title> <booktitle> In DAGS95: Electronic Publishing and the Information Superhighway, </booktitle> <year> 1995. </year> <note> Available at http://robotics.stanford.edu/users/ketchpel/dags4.html. </note>
Reference-contexts: Since third parties are expected to act as collection agencies, they must know the customer's true identity. The customers must trust these third parties not to use a customer's identity or other information the customer reveals to the third party <ref> [8, 9] </ref>. Notation for Protocol Description I will use the following notations to describe the protocols throughout the paper. A stands for the customer, Alice, with public key a and private key 1 a .
Reference: [9] <author> S. P. Ketchpel and H. Garcia-Molina. </author> <title> Making Trust Explicit in Distributed Commerce Transactions. </title> <booktitle> In Proceedings of the 16th ICDCS, </booktitle> <year> 1996. </year>
Reference-contexts: Since third parties are expected to act as collection agencies, they must know the customer's true identity. The customers must trust these third parties not to use a customer's identity or other information the customer reveals to the third party <ref> [8, 9] </ref>. Notation for Protocol Description I will use the following notations to describe the protocols throughout the paper. A stands for the customer, Alice, with public key a and private key 1 a .
Reference: [10] <author> C. Meadows. </author> <title> Analyzing the Needham-Schroeder Public Key Protocol: A Comparison of Two Approaches. </title> <booktitle> In Proceedings of ESORICS, </booktitle> <year> 1996. </year>
Reference-contexts: The use of formal methods to analyze the correctness of cryptographic protocols became prevalent with the development of the BAN logic in 1989 [4]. Since then several papers have been published reporting problems with the BAN logic <ref> [10, 12, 13] </ref> and several others proposing BAN-style logics that overcome many of these limitations [7, 14]. In analysis using BAN logic, a set of participant's final beliefs is generated from a set of initial assumptions and the protocol steps.
Reference: [11] <author> B. C. Neuman and G. Medvinsky. </author> <title> Requirements for Network Payment: </title> <booktitle> The NetCheque Perspective. In Proceedings of IEEE COMPCON'95, </booktitle> <year> 1995. </year>
Reference-contexts: However, these sites are not backed by a fully automated secure electronic negotiation engine. Several properties have been identified as either required or desirable in protocols for transactions in electronic commerce <ref> [1, 11] </ref>.
Reference: [12] <author> E. Snekkenes. </author> <title> Exploring the BAN Approach to Protocol Analysis. </title> <booktitle> In Proceedings of IEEE Symposium on Research in Security and Privacy, </booktitle> <year> 1991. </year>
Reference-contexts: The use of formal methods to analyze the correctness of cryptographic protocols became prevalent with the development of the BAN logic in 1989 [4]. Since then several papers have been published reporting problems with the BAN logic <ref> [10, 12, 13] </ref> and several others proposing BAN-style logics that overcome many of these limitations [7, 14]. In analysis using BAN logic, a set of participant's final beliefs is generated from a set of initial assumptions and the protocol steps.
Reference: [13] <author> P. Syverson. </author> <title> Adding Time to a Logic of Authentication. </title> <booktitle> In Proceedings of First ACM Conference on Computer and Communications Security, </booktitle> <year> 1993. </year>
Reference-contexts: The use of formal methods to analyze the correctness of cryptographic protocols became prevalent with the development of the BAN logic in 1989 [4]. Since then several papers have been published reporting problems with the BAN logic <ref> [10, 12, 13] </ref> and several others proposing BAN-style logics that overcome many of these limitations [7, 14]. In analysis using BAN logic, a set of participant's final beliefs is generated from a set of initial assumptions and the protocol steps.
Reference: [14] <author> P. Syverson and P. van Oorschot. </author> <title> On Unifying some Cryptographic Protocol Logics. </title> <booktitle> In Proceedings of IEEE Symposium on Research in Security and Privacy, </booktitle> <year> 1994. </year> <month> 22 </month>
Reference-contexts: Since then several papers have been published reporting problems with the BAN logic [10, 12, 13] and several others proposing BAN-style logics that overcome many of these limitations <ref> [7, 14] </ref>. In analysis using BAN logic, a set of participant's final beliefs is generated from a set of initial assumptions and the protocol steps. If these beliefs satisfy the goal of the protocol, then the protocol is validated.
References-found: 14

