URL: ftp://ams.sunysb.edu/pub/geometry/msi-workshop/95/olariu-full.ps.gz
Refering-URL: http://ams.sunysb.edu/~held/proc_usb_comp_geo-95.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Time-Optimal Nearest-Neighbor Computations on Enhanced Meshes  
Author: S. Olariu I. Stojmenovic 
Address: Norfolk, VA 23529-0162 Ottawa, Ontario, K1N 9B4 U.S.A. Canada  
Affiliation: Department of Computer Science Department of Computer Science Old Dominion University University of Ottawa  
Abstract: The All-Nearest Neighbor problem (ANN, for short) is stated as follows: given a set S of points in the plane, determine for every point in S, a point that lies closest to it. The ANN problem is central to VLSI design, computer graphics, pattern recognition, and image processing, among others. In this paper we propose time-optimal algorithms to solve the ANN problem for an arbitrary set of points in the plane and also for the special case in which the points are vertices of a convex polygon. Both our algorithms run on meshes with multiple broadcasting. We first establish an (log n) time lower bound for the task of solving an arbitrary n-point instance of the ANN problem, even if the points are the vertices of a convex polygon. This lower bound holds for both the CREW-PRAM and for the mesh with multiple broadcasting. Next, we show that the bound is tight by exhibiting algorithms solving the problem in O(log n) time on a mesh with multiple broadcasting of size n fi n. Keywords: all-nearest neighbors, proximity problems, parallel algorithms, pattern recognition, image processing 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Aggarwal, </author> <title> Optimal bounds for finding maximum on array of processors with k global buses, </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-35, </volume> <year> (1986), </year> <pages> 62-64. </pages>
Reference-contexts: However, due to its large communication diameter, the mesh tends to be slow when it comes to handling data transfer operations over long distances. In an attempt to overcome this problem, mesh-connected computers have recently been augmented by the addition of various types of bus systems <ref> [1, 11, 24, 21, 26, 27, 29] </ref>. For example, Aggarwal [1] and Bokhari [11] have considered mesh-connected multiprocessors enhanced by the addition of k global buses. <p> In an attempt to overcome this problem, mesh-connected computers have recently been augmented by the addition of various types of bus systems [1, 11, 24, 21, 26, 27, 29]. For example, Aggarwal <ref> [1] </ref> and Bokhari [11] have considered mesh-connected multiprocessors enhanced by the addition of k global buses. Yet another such system that is commercially available involves enhancing the mesh architecture by the addition of row and column buses (refer to Figure 1). <p> For practical reasons, only one processor is allowed to broadcast on a given bus at any one time. By contrast, all the processors on the bus can simultaneously read the value being broadcast. In accord with other researchers <ref> [1, 4, 11, 13, 21, 29, 33] </ref>, we assume that communications along buses take O (1) time. Although inexact, recent experiments with the DAP [33] and the YUPPIE multiprocessor array system, seem to indicate that this is a reasonable working hypothesis [29].
Reference: [2] <author> S. G. Akl and K. A. Lyons, </author> <title> Parallel Computational Geometry, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1993. </year>
Reference-contexts: The mesh-connected computer architecture has emerged as one of the most natural choices for solving a large number of computational tasks in image processing, pattern recognition, robotics, and computer vision <ref> [2, 20, 28, 30, 31] </ref>. Its regular structure and simple interconnection topology makes the mesh particularly well suited for VLSI implementation [5]. However, due to its large communication diameter, the mesh tends to be slow when it comes to handling data transfer operations over long distances. <p> This problem is known as the All-Nearest Neigh 2 bor problem (ANN, for short) and has been well studied in both sequential and parallel <ref> [2, 10, 15, 17, 20, 28, 30, 35, 37, 38] </ref>. The main contribution of this work is to devise time-optimal algorithms for the ANN problem on meshes with multiple broadcasting. We are interested in solving the ANN problem for an arbitrary collection of points in the plane.
Reference: [3] <author> D. H. Ballard and C. M. Brown, </author> <title> Computer Vision, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1982. </year>
Reference-contexts: The notion of proximity or "closeness" is fundamental in image processing, computer graphics, pattern recognition, and robotics. In image processing, for example, closeness is a simple and important metric for potential similarities of objects in the image space <ref> [3] </ref>. In pattern recognition, closeness appears in clustering, and computing similarities between sets [17]. <p> In pattern recognition, closeness appears in clustering, and computing similarities between sets [17]. One of the recurring problems in computer graphics [34], pattern recognition [12], and image processing <ref> [3, 18] </ref> involves computing for every point in a given set S of planar points, a point in S that is closest to it.
Reference: [4] <author> A. Bar-Noy and D. Peleg, </author> <title> Square meshes are not always optimal, </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-40, </volume> <year> (1991), </year> <pages> 196-204. </pages>
Reference-contexts: Being of theoretical interest as well as commercially available, the mesh with multiple broadcasting has attracted a great deal of well-deserved attention. Applications ranging from image processing [6, 22, 33, 36], to computational morphology and pattern recognition [8, 9, 21, 26, 32], to optimization [14], to other fundamental problems <ref> [4, 6, 7, 13] </ref> have found efficient solutions on this architecture and some of its variants [26]. The notion of proximity or "closeness" is fundamental in image processing, computer graphics, pattern recognition, and robotics. <p> For practical reasons, only one processor is allowed to broadcast on a given bus at any one time. By contrast, all the processors on the bus can simultaneously read the value being broadcast. In accord with other researchers <ref> [1, 4, 11, 13, 21, 29, 33] </ref>, we assume that communications along buses take O (1) time. Although inexact, recent experiments with the DAP [33] and the YUPPIE multiprocessor array system, seem to indicate that this is a reasonable working hypothesis [29]. <p> No such algorithm is known. The straightforward implementation of the classical sequential algorithm [35] runs in O (log 2 n) time which is suboptimal. It would be of interest to devise a simpler time-optimal algorithm for the CP problem. Recently, several authors <ref> [4, 7, 13] </ref> have shown that rectangular meshes sometimes yield faster algorithms than square meshes. It would be interesting to see whether this is also the case for the ANN problem. This promises to be an interesting area for further investigation. 21
Reference: [5] <author> K. E. Batcher, </author> <title> Design of massively parallel processor, </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-29, </volume> <year> (1980), </year> <pages> 836-840. </pages>
Reference-contexts: Its regular structure and simple interconnection topology makes the mesh particularly well suited for VLSI implementation <ref> [5] </ref>. However, due to its large communication diameter, the mesh tends to be slow when it comes to handling data transfer operations over long distances.
Reference: [6] <author> D. Bhagavathi, V. Bokka, H. Gurla, S. Olariu, J. L. Schwing, and I. Stojmenovic, </author> <title> Time-optimal visibility-related problems on meshes with multiple broadcasting, </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <note> to appear 1995. </note>
Reference-contexts: Being of theoretical interest as well as commercially available, the mesh with multiple broadcasting has attracted a great deal of well-deserved attention. Applications ranging from image processing <ref> [6, 22, 33, 36] </ref>, to computational morphology and pattern recognition [8, 9, 21, 26, 32], to optimization [14], to other fundamental problems [4, 6, 7, 13] have found efficient solutions on this architecture and some of its variants [26]. <p> Being of theoretical interest as well as commercially available, the mesh with multiple broadcasting has attracted a great deal of well-deserved attention. Applications ranging from image processing [6, 22, 33, 36], to computational morphology and pattern recognition [8, 9, 21, 26, 32], to optimization [14], to other fundamental problems <ref> [4, 6, 7, 13] </ref> have found efficient solutions on this architecture and some of its variants [26]. The notion of proximity or "closeness" is fundamental in image processing, computer graphics, pattern recognition, and robotics. <p> Our ANN algorithm for a general collection of points in the plane relies on a sampling technique similar to the one described in <ref> [6] </ref>. In [6] the technique is used to solve a number of visibility-related problems on enhanced meshes. In this paper, we demonstrate that the same technique can be used to solve proximity problems. <p> Our ANN algorithm for a general collection of points in the plane relies on a sampling technique similar to the one described in <ref> [6] </ref>. In [6] the technique is used to solve a number of visibility-related problems on enhanced meshes. In this paper, we demonstrate that the same technique can be used to solve proximity problems. <p> Our ANN algorithm for a general collection of points in the plane relies on a sampling technique similar to the one described in <ref> [6] </ref>. In [6] the technique is used to solve a number of visibility-related problems on enhanced meshes. In this paper, we demonstrate that the same technique can be used to solve proximity problems. <p> Our ANN algorithm for a general collection of points in the plane relies on a sampling technique similar to the one described in <ref> [6] </ref>. In [6] the technique is used to solve a number of visibility-related problems on enhanced meshes. In this paper, we demonstrate that the same technique can be used to solve proximity problems.
Reference: [7] <author> D. Bhagavathi, P. J. Looges, S. Olariu, J. L. Schwing, and J. Zhang, </author> <title> A fast selection algorithm on meshes with multiple broadcasting, </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 5, </volume> <year> (1994), </year> <pages> 772-778. </pages>
Reference-contexts: Being of theoretical interest as well as commercially available, the mesh with multiple broadcasting has attracted a great deal of well-deserved attention. Applications ranging from image processing [6, 22, 33, 36], to computational morphology and pattern recognition [8, 9, 21, 26, 32], to optimization [14], to other fundamental problems <ref> [4, 6, 7, 13] </ref> have found efficient solutions on this architecture and some of its variants [26]. The notion of proximity or "closeness" is fundamental in image processing, computer graphics, pattern recognition, and robotics. <p> No such algorithm is known. The straightforward implementation of the classical sequential algorithm [35] runs in O (log 2 n) time which is suboptimal. It would be of interest to devise a simpler time-optimal algorithm for the CP problem. Recently, several authors <ref> [4, 7, 13] </ref> have shown that rectangular meshes sometimes yield faster algorithms than square meshes. It would be interesting to see whether this is also the case for the ANN problem. This promises to be an interesting area for further investigation. 21
Reference: [8] <author> D. Bhagavathi, S. Olariu, W. Shen, and L. Wilson, </author> <title> A Time-Optimal Multiple Search Algorithm on Enhanced Meshes, with Applications, </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 22, </volume> <year> (1994), </year> <pages> 113-120. </pages>
Reference-contexts: Being of theoretical interest as well as commercially available, the mesh with multiple broadcasting has attracted a great deal of well-deserved attention. Applications ranging from image processing [6, 22, 33, 36], to computational morphology and pattern recognition <ref> [8, 9, 21, 26, 32] </ref>, to optimization [14], to other fundamental problems [4, 6, 7, 13] have found efficient solutions on this architecture and some of its variants [26]. The notion of proximity or "closeness" is fundamental in image processing, computer graphics, pattern recognition, and robotics.
Reference: [9] <author> D. Bhagavathi, S. Olariu, J. L. Schwing, W. Shen, L. Wilson, and J.Zhang, </author> <title> Convexity Problems on Meshes with Multiple Broadcasting, </title> <booktitle> Proc. 4th Canadian Computational Geometry Conference, </booktitle> <address> St-Johns, </address> <month> Aug. </month> <year> 1992, </year> <pages> 365-370. </pages>
Reference-contexts: Being of theoretical interest as well as commercially available, the mesh with multiple broadcasting has attracted a great deal of well-deserved attention. Applications ranging from image processing [6, 22, 33, 36], to computational morphology and pattern recognition <ref> [8, 9, 21, 26, 32] </ref>, to optimization [14], to other fundamental problems [4, 6, 7, 13] have found efficient solutions on this architecture and some of its variants [26]. The notion of proximity or "closeness" is fundamental in image processing, computer graphics, pattern recognition, and robotics. <p> To begin, using the algorithm in <ref> [9] </ref> compute the diameter D (P ) of P . Assume, without loss of generality that the diameter is achieved by the pair p u and p v .
Reference: [10] <author> W.-E. Blanz, D. Petkovic, and J. L. C. Sanz, </author> <title> Algorithms and Architectures for Machine Vision, </title> <editor> in C. H. Chen, ed., </editor> <booktitle> Signal Processing Handbook, M. </booktitle> <publisher> Dekker, </publisher> <address> New York, </address> <year> 1989. </year> <month> 22 </month>
Reference-contexts: This problem is known as the All-Nearest Neigh 2 bor problem (ANN, for short) and has been well studied in both sequential and parallel <ref> [2, 10, 15, 17, 20, 28, 30, 35, 37, 38] </ref>. The main contribution of this work is to devise time-optimal algorithms for the ANN problem on meshes with multiple broadcasting. We are interested in solving the ANN problem for an arbitrary collection of points in the plane. <p> The problem is known as the Closest Pair problem (CP, for short). The CP problem has been extensively studied in both sequential and parallel <ref> [10, 12, 17, 38] </ref>. Clearly, our ANN algorithm can solve the CP problem since we can compute the smallest interpoint distance in O (log n) time once the solution to the ANN problem is known.
Reference: [11] <author> S. H. Bokhari, </author> <title> Finding maximum on an array processor with a global bus, </title> <journal> IEEE Trans--actions on Computers C-33, </journal> <year> (1984), </year> <pages> 133-139. </pages>
Reference-contexts: However, due to its large communication diameter, the mesh tends to be slow when it comes to handling data transfer operations over long distances. In an attempt to overcome this problem, mesh-connected computers have recently been augmented by the addition of various types of bus systems <ref> [1, 11, 24, 21, 26, 27, 29] </ref>. For example, Aggarwal [1] and Bokhari [11] have considered mesh-connected multiprocessors enhanced by the addition of k global buses. <p> In an attempt to overcome this problem, mesh-connected computers have recently been augmented by the addition of various types of bus systems [1, 11, 24, 21, 26, 27, 29]. For example, Aggarwal [1] and Bokhari <ref> [11] </ref> have considered mesh-connected multiprocessors enhanced by the addition of k global buses. Yet another such system that is commercially available involves enhancing the mesh architecture by the addition of row and column buses (refer to Figure 1). <p> For practical reasons, only one processor is allowed to broadcast on a given bus at any one time. By contrast, all the processors on the bus can simultaneously read the value being broadcast. In accord with other researchers <ref> [1, 4, 11, 13, 21, 29, 33] </ref>, we assume that communications along buses take O (1) time. Although inexact, recent experiments with the DAP [33] and the YUPPIE multiprocessor array system, seem to indicate that this is a reasonable working hypothesis [29].
Reference: [12] <author> R. Cahn, R. Poulsen, and G. Toussaint, </author> <title> Segmentation of Cervical Cell Images, </title> <journal> Journal of Histochemistry and Cytochemistry, </journal> <volume> 25, </volume> <year> (1977), </year> <pages> 681-688. </pages>
Reference-contexts: In image processing, for example, closeness is a simple and important metric for potential similarities of objects in the image space [3]. In pattern recognition, closeness appears in clustering, and computing similarities between sets [17]. One of the recurring problems in computer graphics [34], pattern recognition <ref> [12] </ref>, and image processing [3, 18] involves computing for every point in a given set S of planar points, a point in S that is closest to it. <p> The problem is known as the Closest Pair problem (CP, for short). The CP problem has been extensively studied in both sequential and parallel <ref> [10, 12, 17, 38] </ref>. Clearly, our ANN algorithm can solve the CP problem since we can compute the smallest interpoint distance in O (log n) time once the solution to the ANN problem is known.
Reference: [13] <author> Y. C. Chen, W. T. Chen, G. H. Chen and J. P. Sheu, </author> <title> Designing efficient parallel algorithms on mesh connected computers with multiple broadcasting, </title> <journal> IEEE Transactions on Parallel and Distributed Systems 1, </journal> <year> (1990), </year> <pages> 241-246. </pages>
Reference-contexts: Being of theoretical interest as well as commercially available, the mesh with multiple broadcasting has attracted a great deal of well-deserved attention. Applications ranging from image processing [6, 22, 33, 36], to computational morphology and pattern recognition [8, 9, 21, 26, 32], to optimization [14], to other fundamental problems <ref> [4, 6, 7, 13] </ref> have found efficient solutions on this architecture and some of its variants [26]. The notion of proximity or "closeness" is fundamental in image processing, computer graphics, pattern recognition, and robotics. <p> For practical reasons, only one processor is allowed to broadcast on a given bus at any one time. By contrast, all the processors on the bus can simultaneously read the value being broadcast. In accord with other researchers <ref> [1, 4, 11, 13, 21, 29, 33] </ref>, we assume that communications along buses take O (1) time. Although inexact, recent experiments with the DAP [33] and the YUPPIE multiprocessor array system, seem to indicate that this is a reasonable working hypothesis [29]. <p> No such algorithm is known. The straightforward implementation of the classical sequential algorithm [35] runs in O (log 2 n) time which is suboptimal. It would be of interest to devise a simpler time-optimal algorithm for the CP problem. Recently, several authors <ref> [4, 7, 13] </ref> have shown that rectangular meshes sometimes yield faster algorithms than square meshes. It would be interesting to see whether this is also the case for the ANN problem. This promises to be an interesting area for further investigation. 21
Reference: [14] <author> Y. C. Chen, W. T. Chen, and G.-H. Chen, </author> <title> Efficient median finding and its application to two-variable linear programming on mesh-connected computers with multiple broadcasting, </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 15, </volume> <year> (1992) </year> <month> 79-84. </month>
Reference-contexts: Being of theoretical interest as well as commercially available, the mesh with multiple broadcasting has attracted a great deal of well-deserved attention. Applications ranging from image processing [6, 22, 33, 36], to computational morphology and pattern recognition [8, 9, 21, 26, 32], to optimization <ref> [14] </ref>, to other fundamental problems [4, 6, 7, 13] have found efficient solutions on this architecture and some of its variants [26]. The notion of proximity or "closeness" is fundamental in image processing, computer graphics, pattern recognition, and robotics.
Reference: [15] <author> R. Cole and M. T. Goodrich, </author> <title> Optimal parallel algorithms for point-set and polygon problems, </title> <journal> Algorithmica, </journal> <volume> 7 (1992), </volume> <pages> 3-23. </pages>
Reference-contexts: This problem is known as the All-Nearest Neigh 2 bor problem (ANN, for short) and has been well studied in both sequential and parallel <ref> [2, 10, 15, 17, 20, 28, 30, 35, 37, 38] </ref>. The main contribution of this work is to devise time-optimal algorithms for the ANN problem on meshes with multiple broadcasting. We are interested in solving the ANN problem for an arbitrary collection of points in the plane. <p> In this paper, we demonstrate that the same technique can be used to solve proximity problems. The resulting algorithm for the ANN problem is significantly simpler than a recent ANN algorithm for the CREW-PRAM reported in <ref> [15] </ref>. The algorithm in [15] involves a nontrivial new application of the cascading divide and conquer strategy. By contrast, we show that the classical divide and conquer is sufficient in the context of meshes with multiple broadcasting. In essence, the algorithm in [15] proceeds in two stages: in the first stage <p> In this paper, we demonstrate that the same technique can be used to solve proximity problems. The resulting algorithm for the ANN problem is significantly simpler than a recent ANN algorithm for the CREW-PRAM reported in <ref> [15] </ref>. The algorithm in [15] involves a nontrivial new application of the cascading divide and conquer strategy. By contrast, we show that the classical divide and conquer is sufficient in the context of meshes with multiple broadcasting. In essence, the algorithm in [15] proceeds in two stages: in the first stage an approximation of the <p> recent ANN algorithm for the CREW-PRAM reported in <ref> [15] </ref>. The algorithm in [15] involves a nontrivial new application of the cascading divide and conquer strategy. By contrast, we show that the classical divide and conquer is sufficient in the context of meshes with multiple broadcasting. In essence, the algorithm in [15] proceeds in two stages: in the first stage an approximation of the nearest neighbor for every point in the input set is determined. In the second stage, this choice is refined into the exact solution. Unlike the algorithm in [15] we do not use Stage 1 to compute an approximate <p> In essence, the algorithm in <ref> [15] </ref> proceeds in two stages: in the first stage an approximation of the nearest neighbor for every point in the input set is determined. In the second stage, this choice is refined into the exact solution. Unlike the algorithm in [15] we do not use Stage 1 to compute an approximate solution to the ANN problem. <p> To avoid tedious details we assume, without loss of generality, that the points in S are in general position, with no two having the same x or y coordinates. We borrow most of our definitions, notations, and terminology from <ref> [15] </ref>. For the sake of completeness we now review the main definitions that will be used in the remainder of the algorithm. <p> We proceed in two stages. Our stages are different from those in <ref> [15] </ref> since we compute different items in each of our stages. Stage 1. Begin by sorting the points in S by increasing x coordinate and let S = (q 1 ; q 2 ; : : : ; q n ) be the resulting sequence. <p> The motivation for defining these labels is provided by the following technical result which is somewhat stronger than Lemma 3.2 in <ref> [15] </ref>. Also, our proof is different. Lemma 5.1. Let v be a node in T with left and right children u and w, respectively, and let q be a point in Y (v). <p> Therefore, the existence of p 2 leads to a contradiction. With this the proof of Lemma 5.1 is complete. As pointed out in <ref> [15] </ref>, the task of updating the labels nw (q), ne (q), sw (q), and se (q) in the transition from u and w to v is easy. <p> Given a set S of points in the plane stored one per processor in the first row of a mesh with multiple broadcasting of size n fi n, for every point q in S, the candidate list C (q) can be computed in O (log n) time. As in <ref> [15] </ref>, we complete our algorithm by a post-processing operation. The purpose of this operation is to remove from each C (q) those points which are not closest neighbors of q. The task specific to the post-processing is carried out as follows. <p> In this paper, we demonstrate that the same technique can be used to solve proximity problems. The resulting algorithm for the ANN problem is significantly simpler than a recent ANN algorithm for the CREW-PRAM reported in <ref> [15] </ref> since no cascading divide and conquer is used. Yet another recurring proximity problem, given a set S of points in the plane, asks for computing a pair of points in S that are closest together. The problem is known as the Closest Pair problem (CP, for short).
Reference: [16] <author> S. A. Cook, C. Dwork, and R. Reischuk, </author> <title> Upper and lower time bounds for parallel random access machines without simultaneous writes, </title> <journal> SIAM Journal on Computing, </journal> <month> 15 </month> <year> (1986) </year> <month> 87-97. </month>
Reference-contexts: This approach is motivated by a recent result of Lin et al. [25] that allows us to extend many lower bound results from the CREW-PRAM to meshes with multiple broadcasting. In preparation for the main result of this section we now state a fundamental result of Cook et al. <ref> [16] </ref> that will lay the foundation of our lower bound argument for the ANN problem on meshes with multiple broadcasting. Proposition 4.1.
Reference: [17] <author> R. O. Duda and P. E. Hart, </author> <title> Pattern Classification and Scene Analysis, </title> <publisher> Wiley and Sons, </publisher> <address> New York, </address> <year> 1973. </year>
Reference-contexts: In image processing, for example, closeness is a simple and important metric for potential similarities of objects in the image space [3]. In pattern recognition, closeness appears in clustering, and computing similarities between sets <ref> [17] </ref>. One of the recurring problems in computer graphics [34], pattern recognition [12], and image processing [3, 18] involves computing for every point in a given set S of planar points, a point in S that is closest to it. <p> This problem is known as the All-Nearest Neigh 2 bor problem (ANN, for short) and has been well studied in both sequential and parallel <ref> [2, 10, 15, 17, 20, 28, 30, 35, 37, 38] </ref>. The main contribution of this work is to devise time-optimal algorithms for the ANN problem on meshes with multiple broadcasting. We are interested in solving the ANN problem for an arbitrary collection of points in the plane. <p> The problem is known as the Closest Pair problem (CP, for short). The CP problem has been extensively studied in both sequential and parallel <ref> [10, 12, 17, 38] </ref>. Clearly, our ANN algorithm can solve the CP problem since we can compute the smallest interpoint distance in O (log n) time once the solution to the ANN problem is known.
Reference: [18] <author> J. A. Gualtieri, J. LeMoigne, and C. V. Packer, </author> <title> Distance between images, </title> <booktitle> Proc. 4th Symposium on Frontiers of Massively Parallel Computation, </booktitle> <address> McLean, Virginia, </address> <month> April </month> <year> 1992, </year> <pages> 216-223. </pages>
Reference-contexts: In pattern recognition, closeness appears in clustering, and computing similarities between sets [17]. One of the recurring problems in computer graphics [34], pattern recognition [12], and image processing <ref> [3, 18] </ref> involves computing for every point in a given set S of planar points, a point in S that is closest to it.
Reference: [19] <author> J. JaJa, </author> <title> An introduction to parallel algorithms, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1991. </year>
Reference-contexts: In accord with other researchers [1, 4, 11, 13, 21, 29, 33], we assume that communications along buses take O (1) time. Although inexact, recent experiments with the DAP [33] and the YUPPIE multiprocessor array system, seem to indicate that this is a reasonable working hypothesis [29]. A PRAM <ref> [19] </ref> consists of synchronous processors, all having unit-time access to a shared memory. At each step, every processor performs the same instruction, with a number of processors masked out. In the CREW-PRAM, a memory location can be simultaneously accessed in reading but not in writing.
Reference: [20] <author> C. S. Jeong and D. T. Lee, </author> <title> Parallel geometric algorithms on a mesh-connected computer, </title> <note> Algorithmica 5 (1990) 155-177. </note>
Reference-contexts: The mesh-connected computer architecture has emerged as one of the most natural choices for solving a large number of computational tasks in image processing, pattern recognition, robotics, and computer vision <ref> [2, 20, 28, 30, 31] </ref>. Its regular structure and simple interconnection topology makes the mesh particularly well suited for VLSI implementation [5]. However, due to its large communication diameter, the mesh tends to be slow when it comes to handling data transfer operations over long distances. <p> This problem is known as the All-Nearest Neigh 2 bor problem (ANN, for short) and has been well studied in both sequential and parallel <ref> [2, 10, 15, 17, 20, 28, 30, 35, 37, 38] </ref>. The main contribution of this work is to devise time-optimal algorithms for the ANN problem on meshes with multiple broadcasting. We are interested in solving the ANN problem for an arbitrary collection of points in the plane.
Reference: [21] <author> V. P. Kumar and C. S. Raghavendra, </author> <title> Array processor with multiple broadcasting, </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 2, </volume> <year> (1987) </year> <month> 173-190. 23 </month>
Reference-contexts: However, due to its large communication diameter, the mesh tends to be slow when it comes to handling data transfer operations over long distances. In an attempt to overcome this problem, mesh-connected computers have recently been augmented by the addition of various types of bus systems <ref> [1, 11, 24, 21, 26, 27, 29] </ref>. For example, Aggarwal [1] and Bokhari [11] have considered mesh-connected multiprocessors enhanced by the addition of k global buses. <p> For example, Aggarwal [1] and Bokhari [11] have considered mesh-connected multiprocessors enhanced by the addition of k global buses. Yet another such system that is commercially available involves enhancing the mesh architecture by the addition of row and column buses (refer to Figure 1). In <ref> [21] </ref> an abstraction of such a system is referred to as mesh with multiple broadcasting. The mesh with multiple broadcasting has proven to be feasible to implement in VLSI, and is used in the DAP family of computers [33, 36]. <p> Being of theoretical interest as well as commercially available, the mesh with multiple broadcasting has attracted a great deal of well-deserved attention. Applications ranging from image processing [6, 22, 33, 36], to computational morphology and pattern recognition <ref> [8, 9, 21, 26, 32] </ref>, to optimization [14], to other fundamental problems [4, 6, 7, 13] have found efficient solutions on this architecture and some of its variants [26]. The notion of proximity or "closeness" is fundamental in image processing, computer graphics, pattern recognition, and robotics. <p> For practical reasons, only one processor is allowed to broadcast on a given bus at any one time. By contrast, all the processors on the bus can simultaneously read the value being broadcast. In accord with other researchers <ref> [1, 4, 11, 13, 21, 29, 33] </ref>, we assume that communications along buses take O (1) time. Although inexact, recent experiments with the DAP [33] and the YUPPIE multiprocessor array system, seem to indicate that this is a reasonable working hypothesis [29].
Reference: [22] <author> V. P. Kumar and D. I. Reisis, </author> <title> Image computations on meshes with multiple broadcast, </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 11, </volume> <year> (1989), </year> <pages> 1194-1201. </pages>
Reference-contexts: Being of theoretical interest as well as commercially available, the mesh with multiple broadcasting has attracted a great deal of well-deserved attention. Applications ranging from image processing <ref> [6, 22, 33, 36] </ref>, to computational morphology and pattern recognition [8, 9, 21, 26, 32], to optimization [14], to other fundamental problems [4, 6, 7, 13] have found efficient solutions on this architecture and some of its variants [26]. <p> Recently, it has been shown that prefix sums can be computed efficiently on meshes with multiple broadcasting. More specifically, it is shown in <ref> [22, 32] </ref> that Proposition 3.0. The prefix sums (also maxima or minima) of a sequence of n real numbers stored in one row of a mesh with multiple broadcasting of size n fi n can be computed in O (log n) time. Furthermore, this is time optimal.
Reference: [23] <author> D. T. Lee and F. P. Preparata, </author> <title> The all nearest neighbor problem for convex polygons, </title> <journal> Information Processing Letters 7, </journal> <year> (1978), </year> <pages> 189-192. </pages>
Reference-contexts: The purpose of the remainder of this work is to show that such an algorithm actually exists. Our algorithm is a non-trivial parallelization of the variant of the algorithm of Lee and Preparata <ref> [23] </ref>. To make our presentation easier to follow we now introduce some terminology. <p> A convex polygon P has the semi-circle property if the following two conditions are satisfied: (i) the diameter D (P ) of P is achieved by an edge; (ii) all vertices of P lie inside a circle with diameter D (P ). The following technical result <ref> [23] </ref> is one of the fundamental ingredients in our algorithm. Proposition 6.1. <p> Proof. All we need do is mandate every processor to find the smallest distance to its neighbors. This is trivially achieved in O (1) time. The second fundamental ingredient is a parallelization of Lemma 3 in <ref> [23] </ref>. Let P = p 0 ; p 1 ; : : : ; p n1 be a convex polygon satisfying property (i) stated above. <p> Clearly, if C k does not intersect L then p k has already found its nearest neighbor in P . Otherwise, let u k and l k be the intersection points between L and C k , with u k above l k . It is easy to see <ref> [23] </ref> that the only candidates that need 18 to be considered to correctly update the nearest neighbor information of p k are those points in P 2 whose projection onto L lie between u k and l k . <p> What makes the problem easy to solve on meshes with multiple broadcasting is the observation that the projection of a point p t in P 2 can only belong to at most four circles <ref> [23] </ref> corresponding to points in P 1 . Furthermore, convexity guarantees that the points corresponding to these circles occur consecutively in P 1 . Let P be an n-vertex convex polygon satisfying property (i).
Reference: [24] <author> H. Li and M. Maresca, </author> <title> Polymorphic-torus network, </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-38, </volume> <year> (1989), </year> <pages> 1345-1351. </pages>
Reference-contexts: However, due to its large communication diameter, the mesh tends to be slow when it comes to handling data transfer operations over long distances. In an attempt to overcome this problem, mesh-connected computers have recently been augmented by the addition of various types of bus systems <ref> [1, 11, 24, 21, 26, 27, 29] </ref>. For example, Aggarwal [1] and Bokhari [11] have considered mesh-connected multiprocessors enhanced by the addition of k global buses.
Reference: [25] <author> R. Lin, S. Olariu, J. L. Schwing, and J. Zhang, </author> <title> Simulating enhanced meshes, with applications, </title> <journal> Parallel Processing Letters, </journal> <volume> 3, </volume> <year> (1993), </year> <pages> 59-70. </pages>
Reference-contexts: This lower bound holds for both the CREW-PRAM and for the mesh with multiple broadcasting. Our optimality arguments will be stated first in the CREW-PRAM. This approach is motivated by a recent result of Lin et al. <ref> [25] </ref> that allows us to extend many lower bound results from the CREW-PRAM to meshes with multiple broadcasting. <p> Proposition 4.1. The time lower bound for computing the OR of n bits on the CREW-PRAM is (log n) no matter how many processors and memory cells are used. 8 In addition, we shall rely on the following result of Lin et al. <ref> [25] </ref>. Proposition 4.2. Any computation that takes O (t (n)) computational steps on an n-processor mesh with multiple broadcasting can be performed in O (t (n)) computational steps on an n-processor CREW-PRAM with O (n) extra memory. <p> In other words, "too fast" an algorithm on the mesh with multiple broadcasting implies "too fast" an algorithm for the CREW-PRAM. This observation is exploited in <ref> [25] </ref> to transfer known computational lower bounds for the PRAM to the mesh with multiple broadcasting. Our first goal in this direction is to establish an (log n) lower bound for the CONVEX ANN problem in the CREW-PRAM model of computation.
Reference: [26] <author> R. Lin, S. Olariu, and J. L. Schwing, </author> <title> An efficient VLSI architecture for digital geometry, </title> <booktitle> Proc. of International IEEE Conference on Application-Specific Array Processors, </booktitle> <address> San Francisco, </address> <month> August </month> <year> 1994, </year> <pages> 392-403. </pages>
Reference-contexts: However, due to its large communication diameter, the mesh tends to be slow when it comes to handling data transfer operations over long distances. In an attempt to overcome this problem, mesh-connected computers have recently been augmented by the addition of various types of bus systems <ref> [1, 11, 24, 21, 26, 27, 29] </ref>. For example, Aggarwal [1] and Bokhari [11] have considered mesh-connected multiprocessors enhanced by the addition of k global buses. <p> Being of theoretical interest as well as commercially available, the mesh with multiple broadcasting has attracted a great deal of well-deserved attention. Applications ranging from image processing [6, 22, 33, 36], to computational morphology and pattern recognition <ref> [8, 9, 21, 26, 32] </ref>, to optimization [14], to other fundamental problems [4, 6, 7, 13] have found efficient solutions on this architecture and some of its variants [26]. The notion of proximity or "closeness" is fundamental in image processing, computer graphics, pattern recognition, and robotics. <p> Applications ranging from image processing [6, 22, 33, 36], to computational morphology and pattern recognition [8, 9, 21, 26, 32], to optimization [14], to other fundamental problems [4, 6, 7, 13] have found efficient solutions on this architecture and some of its variants <ref> [26] </ref>. The notion of proximity or "closeness" is fundamental in image processing, computer graphics, pattern recognition, and robotics. In image processing, for example, closeness is a simple and important metric for potential similarities of objects in the image space [3].
Reference: [27] <editor> H. Li and Q. F. Stout, Eds, </editor> <title> Reconfigurable massively parallel computers, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1991. </year>
Reference-contexts: However, due to its large communication diameter, the mesh tends to be slow when it comes to handling data transfer operations over long distances. In an attempt to overcome this problem, mesh-connected computers have recently been augmented by the addition of various types of bus systems <ref> [1, 11, 24, 21, 26, 27, 29] </ref>. For example, Aggarwal [1] and Bokhari [11] have considered mesh-connected multiprocessors enhanced by the addition of k global buses.
Reference: [28] <author> M. Lu, </author> <title> Constructing the Voronoi diagram on a mesh-connected computer, </title> <booktitle> Proc. of the International Conference on Parallel Processing, </booktitle> <year> (1985), </year> <pages> 806-811. </pages>
Reference-contexts: The mesh-connected computer architecture has emerged as one of the most natural choices for solving a large number of computational tasks in image processing, pattern recognition, robotics, and computer vision <ref> [2, 20, 28, 30, 31] </ref>. Its regular structure and simple interconnection topology makes the mesh particularly well suited for VLSI implementation [5]. However, due to its large communication diameter, the mesh tends to be slow when it comes to handling data transfer operations over long distances. <p> This problem is known as the All-Nearest Neigh 2 bor problem (ANN, for short) and has been well studied in both sequential and parallel <ref> [2, 10, 15, 17, 20, 28, 30, 35, 37, 38] </ref>. The main contribution of this work is to devise time-optimal algorithms for the ANN problem on meshes with multiple broadcasting. We are interested in solving the ANN problem for an arbitrary collection of points in the plane.
Reference: [29] <author> M. Maresca and H. Li, </author> <title> Connection autonomy and SIMD computers: a VLSI implementation, </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 7, </volume> <year> (1989) </year> <month> 302-320. </month>
Reference-contexts: However, due to its large communication diameter, the mesh tends to be slow when it comes to handling data transfer operations over long distances. In an attempt to overcome this problem, mesh-connected computers have recently been augmented by the addition of various types of bus systems <ref> [1, 11, 24, 21, 26, 27, 29] </ref>. For example, Aggarwal [1] and Bokhari [11] have considered mesh-connected multiprocessors enhanced by the addition of k global buses. <p> For practical reasons, only one processor is allowed to broadcast on a given bus at any one time. By contrast, all the processors on the bus can simultaneously read the value being broadcast. In accord with other researchers <ref> [1, 4, 11, 13, 21, 29, 33] </ref>, we assume that communications along buses take O (1) time. Although inexact, recent experiments with the DAP [33] and the YUPPIE multiprocessor array system, seem to indicate that this is a reasonable working hypothesis [29]. <p> In accord with other researchers [1, 4, 11, 13, 21, 29, 33], we assume that communications along buses take O (1) time. Although inexact, recent experiments with the DAP [33] and the YUPPIE multiprocessor array system, seem to indicate that this is a reasonable working hypothesis <ref> [29] </ref>. A PRAM [19] consists of synchronous processors, all having unit-time access to a shared memory. At each step, every processor performs the same instruction, with a number of processors masked out. In the CREW-PRAM, a memory location can be simultaneously accessed in reading but not in writing.
Reference: [30] <author> R. Miller and Q. Stout, </author> <title> Mesh computer algorithms for computational geometry, </title> <journal> IEEE Transaction on Computers, </journal> <volume> 38 (1989), </volume> <pages> 321-340. </pages>
Reference-contexts: The mesh-connected computer architecture has emerged as one of the most natural choices for solving a large number of computational tasks in image processing, pattern recognition, robotics, and computer vision <ref> [2, 20, 28, 30, 31] </ref>. Its regular structure and simple interconnection topology makes the mesh particularly well suited for VLSI implementation [5]. However, due to its large communication diameter, the mesh tends to be slow when it comes to handling data transfer operations over long distances. <p> This problem is known as the All-Nearest Neigh 2 bor problem (ANN, for short) and has been well studied in both sequential and parallel <ref> [2, 10, 15, 17, 20, 28, 30, 35, 37, 38] </ref>. The main contribution of this work is to devise time-optimal algorithms for the ANN problem on meshes with multiple broadcasting. We are interested in solving the ANN problem for an arbitrary collection of points in the plane.
Reference: [31] <author> D. Nassimi and S. Sahni, </author> <title> Finding Connected Components and connected ones on a mesh-connected parallel computer, </title> <journal> SIAM Journal on Computing, </journal> <volume> 9 (1980), </volume> <pages> 744-757. </pages>
Reference-contexts: The mesh-connected computer architecture has emerged as one of the most natural choices for solving a large number of computational tasks in image processing, pattern recognition, robotics, and computer vision <ref> [2, 20, 28, 30, 31] </ref>. Its regular structure and simple interconnection topology makes the mesh particularly well suited for VLSI implementation [5]. However, due to its large communication diameter, the mesh tends to be slow when it comes to handling data transfer operations over long distances.
Reference: [32] <author> S. Olariu, J. L. Schwing, and J. Zhang, </author> <title> Optimal convex hull algorithms on enhanced meshes, </title> <journal> BIT, </journal> <volume> 33, </volume> <year> (1993), </year> <pages> 396-410. </pages>
Reference-contexts: Being of theoretical interest as well as commercially available, the mesh with multiple broadcasting has attracted a great deal of well-deserved attention. Applications ranging from image processing [6, 22, 33, 36], to computational morphology and pattern recognition <ref> [8, 9, 21, 26, 32] </ref>, to optimization [14], to other fundamental problems [4, 6, 7, 13] have found efficient solutions on this architecture and some of its variants [26]. The notion of proximity or "closeness" is fundamental in image processing, computer graphics, pattern recognition, and robotics. <p> Recently, it has been shown that prefix sums can be computed efficiently on meshes with multiple broadcasting. More specifically, it is shown in <ref> [22, 32] </ref> that Proposition 3.0. The prefix sums (also maxima or minima) of a sequence of n real numbers stored in one row of a mesh with multiple broadcasting of size n fi n can be computed in O (log n) time. Furthermore, this is time optimal. <p> Furthermore, this is time optimal. Merging two sorted sequences is one of the fundamental operations in computer science. Recently, Olariu et al. <ref> [32] </ref> have proposed a constant time algorithm to merge two sorted sequences of total length n stored in one row of a mesh with multiple broadcasting of size n fi n. More precisely, the following result was established in [32]. Proposition 3.1. <p> Recently, Olariu et al. <ref> [32] </ref> have proposed a constant time algorithm to merge two sorted sequences of total length n stored in one row of a mesh with multiple broadcasting of size n fi n. More precisely, the following result was established in [32]. Proposition 3.1. <p> The two sequences can be merged into a sorted sequence in O (1) time. Since merging is an important ingredient in our ANN algorithm, we now give the details of the merging algorithm in <ref> [32] </ref>. To begin, using vertical buses, the first row is replicated in all rows of the mesh. Next, in every row i (1 i r), processor P (i; i) broadcasts a i horizontally on the corresponding row bus. <p> Finally, a simple data movement sends every element to its final destination in the first row of the mesh. The simple merging algorithm that we just sketched is the main stepping stone in a time-optimal sorting algorithm developed in <ref> [32] </ref>. This algorithm implements the well-known strategy of sorting by merging. Specifically, in [32] the following result was established. Proposition 3.2. <p> The simple merging algorithm that we just sketched is the main stepping stone in a time-optimal sorting algorithm developed in <ref> [32] </ref>. This algorithm implements the well-known strategy of sorting by merging. Specifically, in [32] the following result was established. Proposition 3.2. An n-element sequence of items from a totally ordered universe stored one item per processor in the first row of a mesh with multiple broadcasting of size n fi n can be sorted in O (log n) time. <p> Furthermore this is time-optimal. 6 Again, to make this paper self contained, we briefly sketch the data movement operations performed in the sorting algorithm in <ref> [32] </ref>. First, the input sequence is divided into a left sub sequence containing the first n 2 items and and a second subsequence containing the remaining n 2 items.
Reference: [33] <author> D. Parkinson, D. J. Hunt, and K. S. MacQueen, </author> <title> The AMT DAP 500, </title> <booktitle> 33 rd IEEE Comp. Soc. International Conf., </booktitle> <year> 1988, </year> <pages> 196-199. </pages>
Reference-contexts: In [21] an abstraction of such a system is referred to as mesh with multiple broadcasting. The mesh with multiple broadcasting has proven to be feasible to implement in VLSI, and is used in the DAP family of computers <ref> [33, 36] </ref>. Being of theoretical interest as well as commercially available, the mesh with multiple broadcasting has attracted a great deal of well-deserved attention. <p> Being of theoretical interest as well as commercially available, the mesh with multiple broadcasting has attracted a great deal of well-deserved attention. Applications ranging from image processing <ref> [6, 22, 33, 36] </ref>, to computational morphology and pattern recognition [8, 9, 21, 26, 32], to optimization [14], to other fundamental problems [4, 6, 7, 13] have found efficient solutions on this architecture and some of its variants [26]. <p> For practical reasons, only one processor is allowed to broadcast on a given bus at any one time. By contrast, all the processors on the bus can simultaneously read the value being broadcast. In accord with other researchers <ref> [1, 4, 11, 13, 21, 29, 33] </ref>, we assume that communications along buses take O (1) time. Although inexact, recent experiments with the DAP [33] and the YUPPIE multiprocessor array system, seem to indicate that this is a reasonable working hypothesis [29]. <p> By contrast, all the processors on the bus can simultaneously read the value being broadcast. In accord with other researchers [1, 4, 11, 13, 21, 29, 33], we assume that communications along buses take O (1) time. Although inexact, recent experiments with the DAP <ref> [33] </ref> and the YUPPIE multiprocessor array system, seem to indicate that this is a reasonable working hypothesis [29]. A PRAM [19] consists of synchronous processors, all having unit-time access to a shared memory. At each step, every processor performs the same instruction, with a number of processors masked out.
Reference: [34] <author> T. Pavlidis, </author> <title> Computer Graphics, </title> <publisher> Computer Science Press, </publisher> <address> Potomac, MD, </address> <year> 1978. </year> <month> 24 </month>
Reference-contexts: In image processing, for example, closeness is a simple and important metric for potential similarities of objects in the image space [3]. In pattern recognition, closeness appears in clustering, and computing similarities between sets [17]. One of the recurring problems in computer graphics <ref> [34] </ref>, pattern recognition [12], and image processing [3, 18] involves computing for every point in a given set S of planar points, a point in S that is closest to it.
Reference: [35] <author> F. P. Preparata and M. I. Shamos, </author> <title> Computational Geometry An Introduction, </title> <publisher> Springer--Verlag, </publisher> <year> 1988. </year>
Reference-contexts: This problem is known as the All-Nearest Neigh 2 bor problem (ANN, for short) and has been well studied in both sequential and parallel <ref> [2, 10, 15, 17, 20, 28, 30, 35, 37, 38] </ref>. The main contribution of this work is to devise time-optimal algorithms for the ANN problem on meshes with multiple broadcasting. We are interested in solving the ANN problem for an arbitrary collection of points in the plane. <p> It is also easy to show that this solution is time-optimal on meshes with multiple broadcasting. However, intuitively, one would expect a much simpler algorithm for the CP problem. No such algorithm is known. The straightforward implementation of the classical sequential algorithm <ref> [35] </ref> runs in O (log 2 n) time which is suboptimal. It would be of interest to devise a simpler time-optimal algorithm for the CP problem. Recently, several authors [4, 7, 13] have shown that rectangular meshes sometimes yield faster algorithms than square meshes.
Reference: [36] <author> S. F. Reddaway, A. Wilson, and A. Horn, </author> <title> Fractal graphics and image compression on a SIMD processor, </title> <booktitle> Proc. 2nd Symp. on Frontiers of Massively Parallel Computation, </booktitle> <address> Fairfax, Virginia, </address> <year> 1988, </year> <pages> 265-274. </pages>
Reference-contexts: In [21] an abstraction of such a system is referred to as mesh with multiple broadcasting. The mesh with multiple broadcasting has proven to be feasible to implement in VLSI, and is used in the DAP family of computers <ref> [33, 36] </ref>. Being of theoretical interest as well as commercially available, the mesh with multiple broadcasting has attracted a great deal of well-deserved attention. <p> Being of theoretical interest as well as commercially available, the mesh with multiple broadcasting has attracted a great deal of well-deserved attention. Applications ranging from image processing <ref> [6, 22, 33, 36] </ref>, to computational morphology and pattern recognition [8, 9, 21, 26, 32], to optimization [14], to other fundamental problems [4, 6, 7, 13] have found efficient solutions on this architecture and some of its variants [26].
Reference: [37] <author> B. Schieber and U. Vishkin, </author> <title> Finding all nearest neighbors for convex polygons in parallel: a new lower bound technique and a matching algorithm, </title> <journal> Discrete Applied Mathematics, </journal> <volume> 39 (1990), 97 - 111. </volume>
Reference-contexts: This problem is known as the All-Nearest Neigh 2 bor problem (ANN, for short) and has been well studied in both sequential and parallel <ref> [2, 10, 15, 17, 20, 28, 30, 35, 37, 38] </ref>. The main contribution of this work is to devise time-optimal algorithms for the ANN problem on meshes with multiple broadcasting. We are interested in solving the ANN problem for an arbitrary collection of points in the plane. <p> This lower bound holds for both the CREW-PRAM and for the mesh with multiple broadcasting. The only lower bound for the ANN problem known to the authors was proved recently by Schieber and Vishkin <ref> [37] </ref> who have established an (log log n) lower bound for the ANN problem for convex n-gons in the CRCW model of computation.
Reference: [38] <author> G. T. Toussaint Ed., </author> <title> Computational Geometry, </title> <publisher> Elsevier Science Publishers, North-Holland, </publisher> <year> 1985. </year> <month> 25 </month>
Reference-contexts: This problem is known as the All-Nearest Neigh 2 bor problem (ANN, for short) and has been well studied in both sequential and parallel <ref> [2, 10, 15, 17, 20, 28, 30, 35, 37, 38] </ref>. The main contribution of this work is to devise time-optimal algorithms for the ANN problem on meshes with multiple broadcasting. We are interested in solving the ANN problem for an arbitrary collection of points in the plane. <p> The problem is known as the Closest Pair problem (CP, for short). The CP problem has been extensively studied in both sequential and parallel <ref> [10, 12, 17, 38] </ref>. Clearly, our ANN algorithm can solve the CP problem since we can compute the smallest interpoint distance in O (log n) time once the solution to the ANN problem is known.
References-found: 38

