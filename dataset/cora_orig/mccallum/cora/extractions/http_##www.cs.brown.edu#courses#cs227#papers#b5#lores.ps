URL: http://www.cs.brown.edu/courses/cs227/papers/b5/lores.ps
Refering-URL: http://www.cs.brown.edu/courses/cs227/readinglist.html
Root-URL: http://www.cs.brown.edu/
Email: fquass,anand,sagiv,ullman,widomg@cs.stanford.edu  
Title: Querying Semistructured Heterogeneous Information  
Author: Dallan Quass, Anand Rajaraman, Yehoshua Sagiv Jeffrey Ullman, Jennifer Widom 
Keyword: object query languages, semistructured data, database integration, object reposi tories  
Address: Stanford, CA 94305-2140  
Affiliation: Department of Computer Science Stanford University  
Abstract: Semistructured data has no absolute schema fixed in advance and its structure may be irregular or incomplete. Such data commonly arises in sources that do not impose a rigid structure (such as the World-Wide Web) and when data is combined from several heterogeneous sources. Data models and query languages designed for well structured data are inappropriate in such environments. Starting with a "lightweight" object model adopted for the TSIMMIS project at Stanford, in this paper we describe a query language and object repository designed specifically for semistructured data. Our language provides meaningful query results in cases where conventional models and languages do not: when some data is absent, when data does not have regular structure, when similar concepts are represented using different types, when heterogeneous sets are present, and when object structure is not fully known. This paper motivates the key concepts behind our approach, describes the language through a series of examples (a complete denotational semantics is in the Appendix), and describes the basic architecture and query processing strategy of the "lightweight" object repository we have developed. 
Abstract-found: 1
Intro-found: 1
Reference: [BCD92] <author> F. Bancilhon, S. Cluet, and C. Delobel. </author> <title> A query language for O 2 . In F. </title> <editor> Bancilhon, C. Delobel, and P. Kanellakis, editors, </editor> <title> Building an Object-Oriented Database System The Story of O 2 , pages 234-255. </title> <publisher> Morgan Kauffmann, </publisher> <year> 1992. </year>
Reference-contexts: In this goal our effort is similar to the work on integrating SGML [ISO86] documents with relational databases [BCK + 94] or integrating SGML documents with object-oriented databases such as OpenODB [YA94] or O 2 [CACS94]. These approaches tend to extend existing data models and languages <ref> [BCD92, F + 89] </ref>. The ideas behind LOREL could instead have been used to extend an existing language. Our choice to design a new language has its advantages and disadvantages, of course. A disadvantage is that we are unable to manage our objects using an existing DBMS. <p> Our approach could easily be built on top of and take advantage of environments such as CORBA and OLE2. We have already shown how LOREL compares to OQL, XSQL, and SQL. LOREL relates in similar ways to a number of other query languages for object-oriented <ref> [BCD92, CDV88, Har94, Zan83] </ref> and nested relational [DKA + 86] systems.
Reference: [BCK + 94] <author> G. Blake, M. Consens, P. Kilpelainen, P. Larson, T. Snider, and F. Tompa. </author> <title> Text / relational database management systems: Harmonizing SQL and SGML. </title> <editor> In W. Litwin and T. Risch, editors, </editor> <booktitle> Applications of Databases: First International Conference, </booktitle> <pages> pages 267-280. </pages> <address> Vadstena, Sweden, </address> <year> 1994. </year>
Reference-contexts: The goal of the TSIMMIS project is to uniformly handle unstructured, semistructured, and well structured data [PGMW95]. In this goal our effort is similar to the work on integrating SGML [ISO86] documents with relational databases <ref> [BCK + 94] </ref> or integrating SGML documents with object-oriented databases such as OpenODB [YA94] or O 2 [CACS94]. These approaches tend to extend existing data models and languages [BCD92, F + 89]. The ideas behind LOREL could instead have been used to extend an existing language.
Reference: [CACS94] <author> V. Christophides, S. Abiteboul, S. Cluet, and M. Scholl. </author> <title> From structured documents to novel query facilties. </title> <booktitle> In Proceedings of the ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 313-324, </pages> <address> Minneapolis, MN, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: OQL does not provide a way to query object structure. XSQL addresses this issue by allowing path expressions to contain wildcards and by allowing certain query variables to range over attribute names. LOREL is similar to XSQL and an extension to O 2 <ref> [CACS94] </ref> in that we allow path expressions to contain wildcards and we allow queries to return attribute labels. Path expressions containing wildcards are useful when part, but not all, of the structure of the data is known. <p> In this goal our effort is similar to the work on integrating SGML [ISO86] documents with relational databases [BCK + 94] or integrating SGML documents with object-oriented databases such as OpenODB [YA94] or O 2 <ref> [CACS94] </ref>. These approaches tend to extend existing data models and languages [BCD92, F + 89]. The ideas behind LOREL could instead have been used to extend an existing language. Our choice to design a new language has its advantages and disadvantages, of course.
Reference: [Cat94] <author> R. Cattel, </author> <title> editor. The Object Database Standard: ODMG-93. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1994. </year>
Reference-contexts: Because LORE implements our query language, we have named our language LOREL, for LORE Language. 1.1 Outline of Paper Section 2 highlights our reasons for developing a new query language, and specifically compares LOREL to three conventional query languages: OQL <ref> [Cat94] </ref>, XSQL [KKS92], and SQL [MS93]. Other related work appears in Section 3. Section 4 describes the data model upon which LOREL is based. An exposition of the novel features of LOREL using a series of examples appears in Section 5. <p> Subqueries with correlation are an extension and generalization of the OID functions available in XSQL [KKS92]; they are more powerful than the construction expressions provided by OQL <ref> [Cat94] </ref> that apply to sets and structures. Appendix B has the details. 6 The Repository We are currently building LORE, a "Lightweight Object REpository" based upon our data model and query language. Recall that the goal of the TSIMMIS project is to integrate data from heterogeneous information sources.
Reference: [CDV88] <author> M. Carey, D. DeWitt, and S. Vandenberg. </author> <title> A data model and query language for Exodus. </title> <booktitle> In Proceedings of the ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 413-423, </pages> <address> Chicago, IL, </address> <month> June </month> <year> 1988. </year>
Reference-contexts: Our approach could easily be built on top of and take advantage of environments such as CORBA and OLE2. We have already shown how LOREL compares to OQL, XSQL, and SQL. LOREL relates in similar ways to a number of other query languages for object-oriented <ref> [BCD92, CDV88, Har94, Zan83] </ref> and nested relational [DKA + 86] systems.
Reference: [CGMH + 94] <author> S. Chawathe, H. Garcia-Molina, J. Hammer, K. Ireland, Y. Papakonstantinou, J. Ull-man, and J. Widom. </author> <title> The TSIMMIS project: Integration of heterogeneous information sources. </title> <booktitle> In Proceedings of the 100th IPSJ, </booktitle> <address> Tokyo, Japan, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: For example, our treatment of range variables generalizes SQL's approach (Section 2.6). Our language has been developed as the unifying query language for the TSIMMIS 1 project at Stanford <ref> [CGMH + 94, PGMW95, PGMU95] </ref>. The goal of the TSIMMIS project is to provide a framework and tools for integrating and accessing data from multiple, heterogeneous data sources. We describe the TSIMMIS data model briefly, only to the extent it is necessary to understand the query language. <p> The entire TSIMMIS framework is explained in <ref> [CGMH + 94] </ref>. Even though the purpose of the TSIMMIS framework is to integrate data from existing information sources, an object repository is useful in several places within the framework. In the figure we highlight four places where LORE is useful: * Storing query results at a client.
Reference: [DKA + 86] <author> P. Dadam, K. Kuespert, F. Andersen, H. Blanken, R. Erbe, J. Guenauer, V. Lum, P. Pistor, and G. Walch. </author> <title> A DBMS prototype to support extended N F 2 relations: An 23 integrated view on flat tables and hierarchies. </title> <booktitle> In Proceedings of the ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 356-367, </pages> <year> 1986. </year>
Reference-contexts: We have already shown how LOREL compares to OQL, XSQL, and SQL. LOREL relates in similar ways to a number of other query languages for object-oriented [BCD92, CDV88, Har94, Zan83] and nested relational <ref> [DKA + 86] </ref> systems.
Reference: [F + 89] <author> D. Fishman et al. </author> <title> Overview of the Iris DBMS. </title> <editor> In W. Kim and F.H. Lochovsky, editors, </editor> <booktitle> Object-Oriented Concepts, Languages, and Applications, </booktitle> <pages> pages 219-250. </pages> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: In this goal our effort is similar to the work on integrating SGML [ISO86] documents with relational databases [BCK + 94] or integrating SGML documents with object-oriented databases such as OpenODB [YA94] or O 2 [CACS94]. These approaches tend to extend existing data models and languages <ref> [BCD92, F + 89] </ref>. The ideas behind LOREL could instead have been used to extend an existing language. Our choice to design a new language has its advantages and disadvantages, of course. A disadvantage is that we are unable to manage our objects using an existing DBMS.
Reference: [Fre94] <author> M. Freedman. </author> <title> WILLOW: </title> <type> Technical overview. </type> <note> Available by anonymous ftp from ftp.cac.washington.edu as the file willow/Tech-Report.ps, </note> <month> September </month> <year> 1994. </year>
Reference-contexts: In particular, systems such as Pegasus [RAK + 92] and UniSQL/M [Kim94] are designed to integrate data in object-oriented and relational databases. At the other end of the spectrum, systems such as GAIA [RJR94], Willow <ref> [Fre94] </ref>, and ACL/KIF [GF94] provide uniform access to data with minimal structure. The goal of the TSIMMIS project is to uniformly handle unstructured, semistructured, and well structured data [PGMW95].
Reference: [GF94] <author> M. Genesereth and R. Fikes. </author> <title> Knowledge interchange format reference manual (version 3.0). </title> <note> Available at the URL http://logic.stanford.edu/sharing/papers/kif.ps, 1994. </note>
Reference-contexts: In particular, systems such as Pegasus [RAK + 92] and UniSQL/M [Kim94] are designed to integrate data in object-oriented and relational databases. At the other end of the spectrum, systems such as GAIA [RJR94], Willow [Fre94], and ACL/KIF <ref> [GF94] </ref> provide uniform access to data with minimal structure. The goal of the TSIMMIS project is to uniformly handle unstructured, semistructured, and well structured data [PGMW95].
Reference: [Har94] <author> C. Harrison. </author> <title> An adaptive query language for object-oriented databases: Automatic navigation through partially specified data structures. </title> <note> Available by anonymous ftp from ftp.ccs.neu.edu as the file pub/people/lieber/adaptive-query-lang.ps, </note> <year> 1994. </year>
Reference-contexts: Our approach could easily be built on top of and take advantage of environments such as CORBA and OLE2. We have already shown how LOREL compares to OQL, XSQL, and SQL. LOREL relates in similar ways to a number of other query languages for object-oriented <ref> [BCD92, CDV88, Har94, Zan83] </ref> and nested relational [DKA + 86] systems.
Reference: [ISO86] <author> ISO 8879. </author> <title> Information processing|text and office systems|Standard Generalized Markup Language (SGML), </title> <year> 1986. </year>
Reference-contexts: The goal of the TSIMMIS project is to uniformly handle unstructured, semistructured, and well structured data [PGMW95]. In this goal our effort is similar to the work on integrating SGML <ref> [ISO86] </ref> documents with relational databases [BCK + 94] or integrating SGML documents with object-oriented databases such as OpenODB [YA94] or O 2 [CACS94]. These approaches tend to extend existing data models and languages [BCD92, F + 89].
Reference: [Kim94] <author> W. Kim. </author> <title> On object oriented database technology. UniSQL product literature, </title> <year> 1994. </year>
Reference-contexts: However, most of the research in heterogeneous database integration has focused on integrating data in well structured databases. In particular, systems such as Pegasus [RAK + 92] and UniSQL/M <ref> [Kim94] </ref> are designed to integrate data in object-oriented and relational databases. At the other end of the spectrum, systems such as GAIA [RJR94], Willow [Fre94], and ACL/KIF [GF94] provide uniform access to data with minimal structure.
Reference: [KKS92] <author> M. Kifer, W. Kim, and Y. Sagiv. </author> <title> Querying object-oriented databases. </title> <booktitle> In Proceedings of the ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 393-402, </pages> <year> 1992. </year>
Reference-contexts: Because LORE implements our query language, we have named our language LOREL, for LORE Language. 1.1 Outline of Paper Section 2 highlights our reasons for developing a new query language, and specifically compares LOREL to three conventional query languages: OQL [Cat94], XSQL <ref> [KKS92] </ref>, and SQL [MS93]. Other related work appears in Section 3. Section 4 describes the data model upon which LOREL is based. An exposition of the novel features of LOREL using a series of examples appears in Section 5. <p> Other conventional query languages also treat single- and set-valued attributes differently. In SQL, all attributes must be single-valued. In XSQL, path expressions resulting in set values require explicit quantifiers when used in predicates, and they cannot always appear in select clauses <ref> [KKS92] </ref>. LOREL treats single- and set-valued attributes uniformly. When attributes in path expressions are found to be set-valued, an implicit existential quantifier is assumed. <p> We have not illustrated their full power here. For example, it is possible for a FOREACH clause to contain more than one path expression, and FOREACH clauses may be nested to any depth. Subqueries with correlation are an extension and generalization of the OID functions available in XSQL <ref> [KKS92] </ref>; they are more powerful than the construction expressions provided by OQL [Cat94] that apply to sets and structures. Appendix B has the details. 6 The Repository We are currently building LORE, a "Lightweight Object REpository" based upon our data model and query language.
Reference: [LMR90] <author> W. Litwin, L. Mark, and N. Roussopoulos. </author> <title> Interoperability of multiple autonomous databases. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(3) </volume> <pages> 267-293, </pages> <year> 1990. </year>
Reference-contexts: The absence of range variables makes LOREL similar in spirit to SQL. 3 Other Related Work Several articles have pointed out the need for new data models and query languages to integrate heterogeneous data sources, e.g., <ref> [LMR90, Qia93] </ref>. However, most of the research in heterogeneous database integration has focused on integrating data in well structured databases. In particular, systems such as Pegasus [RAK + 92] and UniSQL/M [Kim94] are designed to integrate data in object-oriented and relational databases.
Reference: [Mic94] <author> Microsoft Corporation. </author> <title> OLE2 Programmer's Reference. </title> <publisher> Microsoft Press, </publisher> <address> Redmond, WA, </address> <year> 1994. </year>
Reference-contexts: Another language designed for the TSIMMIS project, described in [PGMU95], is used for mediator specification. In contrast, LOREL is intended for inter-component communication in TSIMMIS and for the end user. Environments such as CORBA [OMG92] and OLE2 <ref> [Mic94] </ref> operate at a different level from TSIMMIS and LOREL. These approaches provide a common protocol for passing messages between objects in a distributed object environment. In contrast, TSIMMIS and LOREL provide a common data model and query language.
Reference: [MS93] <author> J. Melton and A.R. Simon. </author> <title> Understanding the New SQL: A Complete Guide. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, California, </address> <year> 1993. </year>
Reference-contexts: Because LORE implements our query language, we have named our language LOREL, for LORE Language. 1.1 Outline of Paper Section 2 highlights our reasons for developing a new query language, and specifically compares LOREL to three conventional query languages: OQL [Cat94], XSQL [KKS92], and SQL <ref> [MS93] </ref>. Other related work appears in Section 3. Section 4 describes the data model upon which LOREL is based. An exposition of the novel features of LOREL using a series of examples appears in Section 5. Section 5 also includes an informal description of the semantics of LOREL. <p> The problem of absent data is addressed in SQL through the introduction of outerjoins and nulls. It is well accepted that outerjoins and nulls are difficult for the casual user to use correctly <ref> [MS93] </ref>: outerjoins are not always associative, and nulls require a three-valued logic. 3 LOREL OQL XSQL SQL tuple/object assignment partial total total total (outerjoins and null-valued attributes allowed) treatment of single- versus set-valued attributes uniform treatment through implicit existential quantification different syntax (y.x versus v in y.x) single-valued and set-valued path
Reference: [OMG92] <author> OMG ORBTF. </author> <title> Common Object Request Broker Architecture. Object Management Group, Framingham, </title> <address> MA, </address> <year> 1992. </year>
Reference-contexts: Another language designed for the TSIMMIS project, described in [PGMU95], is used for mediator specification. In contrast, LOREL is intended for inter-component communication in TSIMMIS and for the end user. Environments such as CORBA <ref> [OMG92] </ref> and OLE2 [Mic94] operate at a different level from TSIMMIS and LOREL. These approaches provide a common protocol for passing messages between objects in a distributed object environment. In contrast, TSIMMIS and LOREL provide a common data model and query language.
Reference: [PGMU95] <author> Y. Papakonstantinou, H. Garcia-Molina, and J. Ullman. MedMaker: </author> <title> A mediation system based on declarative specifications. </title> <note> Available by anonymous ftp from db.stanford.edu as the file pub/papakonstantinou/1995/medmaker.ps, </note> <year> 1995. </year>
Reference-contexts: For example, our treatment of range variables generalizes SQL's approach (Section 2.6). Our language has been developed as the unifying query language for the TSIMMIS 1 project at Stanford <ref> [CGMH + 94, PGMW95, PGMU95] </ref>. The goal of the TSIMMIS project is to provide a framework and tools for integrating and accessing data from multiple, heterogeneous data sources. We describe the TSIMMIS data model briefly, only to the extent it is necessary to understand the query language. <p> An advantage is that we do not have to work around the limitations of a data model and language designed originally for querying well structured data with a fixed schema. Another language designed for the TSIMMIS project, described in <ref> [PGMU95] </ref>, is used for mediator specification. In contrast, LOREL is intended for inter-component communication in TSIMMIS and for the end user. Environments such as CORBA [OMG92] and OLE2 [Mic94] operate at a different level from TSIMMIS and LOREL. <p> Figure 3 illustrates the portion of the TSIMMIS framework relevant to query processing. Queries are posed by the client using LOREL and are sent to mediators, whose purpose is to provide a uniform view of data from one or more information sources. (TSIMMIS mediator specification is described in <ref> [PGMU95] </ref>.) A mediator splits the incoming query into one or more single-source LOREL queries and sends them to translators. (Queries may also be sent directly from the client to translators, but this is not shown in the figure.) A translator converts incoming queries from LOREL to a source-specific query language and
Reference: [PGMW95] <author> Y. Papakonstantinou, H. Garcia-Molina, and J. Widom. </author> <title> Object exchange across heterogeneous information sources. </title> <booktitle> To appear in Proceedings of the International Conference on Data Engineering, </booktitle> <address> Taipei, Taiwan, </address> <month> March </month> <year> 1995. </year>
Reference-contexts: For example, our treatment of range variables generalizes SQL's approach (Section 2.6). Our language has been developed as the unifying query language for the TSIMMIS 1 project at Stanford <ref> [CGMH + 94, PGMW95, PGMU95] </ref>. The goal of the TSIMMIS project is to provide a framework and tools for integrating and accessing data from multiple, heterogeneous data sources. We describe the TSIMMIS data model briefly, only to the extent it is necessary to understand the query language. <p> We describe the TSIMMIS data model briefly, only to the extent it is necessary to understand the query language. A complete description of the data model and its benefits is given in <ref> [PGMW95] </ref>. The architecture of TSIMMIS and how it relates to the work presented here is further discussed in Section 6. In addition to our query language, this paper describes an object repository, LORE (Lightweight Object REpository), 2 that supports our data model and query language. <p> At the other end of the spectrum, systems such as GAIA [RJR94], Willow [Fre94], and ACL/KIF [GF94] provide uniform access to data with minimal structure. The goal of the TSIMMIS project is to uniformly handle unstructured, semistructured, and well structured data <ref> [PGMW95] </ref>. In this goal our effort is similar to the work on integrating SGML [ISO86] documents with relational databases [BCK + 94] or integrating SGML documents with object-oriented databases such as OpenODB [YA94] or O 2 [CACS94]. <p> is that the simplicity of our object model yields many fewer concepts in the query language, resulting in a language that we believe is more appropriate for the casual user. 4 Data Model In the TSIMMIS project we have developed a simple data model called OEM (for Object Exchange Model) <ref> [PGMW95] </ref>, based essentially on tagged values. Every object in our model has an identifier, 7 a label, and a value. The identifier uniquely identifies the object among all objects in the domain of interest. The label is a string (the tag) presumably denoting the "meaning" of the object. <p> Each subobject is labeled l 2 but is otherwise the same as the object to which the corresponding object assignment maps p (or, if p ends in a "*" wildcard, the last object in the path). Here, "the same as" indicates structure and values, not necessarily object identifiers <ref> [PGMW95] </ref>. <p> Instead, for now, in the TSIMMIS context we expect each translator or mediator to supply a "help page" describing the external functions and predicates available <ref> [PGMW95] </ref>. We are working towards the completion of the repository (Version 1.0), and we plan to use it in several places within the TSIMMIS framework, as shown in Figure 3.
Reference: [Qia93] <author> X. Qian. </author> <title> Semantic interoperation via intelligent mediation. </title> <booktitle> In Proceedings of the Third International Workshop on Research Issues in Data Engineering: Interoperability in Multidatabase Systems, </booktitle> <pages> pages 228-231. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> April </month> <year> 1993. </year> <month> 24 </month>
Reference-contexts: The absence of range variables makes LOREL similar in spirit to SQL. 3 Other Related Work Several articles have pointed out the need for new data models and query languages to integrate heterogeneous data sources, e.g., <ref> [LMR90, Qia93] </ref>. However, most of the research in heterogeneous database integration has focused on integrating data in well structured databases. In particular, systems such as Pegasus [RAK + 92] and UniSQL/M [Kim94] are designed to integrate data in object-oriented and relational databases.
Reference: [RAK + 92] <author> A. Rafii, R. Ahmed, M. Ketabchi, P. DeSmedt, and W. Du. </author> <title> Integration strategies in Pegasus object oriented multidatabase system. </title> <booktitle> In Proceedings of the Twenty-Fifth Hawaii International Conference on System Sciences, </booktitle> <volume> Volume II, </volume> <pages> pages 323-334, </pages> <month> Jan-uary </month> <year> 1992. </year>
Reference-contexts: However, most of the research in heterogeneous database integration has focused on integrating data in well structured databases. In particular, systems such as Pegasus <ref> [RAK + 92] </ref> and UniSQL/M [Kim94] are designed to integrate data in object-oriented and relational databases. At the other end of the spectrum, systems such as GAIA [RJR94], Willow [Fre94], and ACL/KIF [GF94] provide uniform access to data with minimal structure.
Reference: [RJR94] <author> R. Rao, B. Janssen, and A. Rajaraman. </author> <title> GAIA technical overview. </title> <type> Technical Report, </type> <institution> Xerox Palo Alto Research Center, </institution> <year> 1994. </year>
Reference-contexts: In particular, systems such as Pegasus [RAK + 92] and UniSQL/M [Kim94] are designed to integrate data in object-oriented and relational databases. At the other end of the spectrum, systems such as GAIA <ref> [RJR94] </ref>, Willow [Fre94], and ACL/KIF [GF94] provide uniform access to data with minimal structure. The goal of the TSIMMIS project is to uniformly handle unstructured, semistructured, and well structured data [PGMW95].
Reference: [SLS + 93] <author> K. Shoens, A. Luniewski, P. Schwarz, J. Stamos, and J. Thomas. </author> <title> The RUFUS system: Information organization for semi-structured data. </title> <booktitle> In Proceedings of the Nineteenth International Conference on Very Large Data Bases, </booktitle> <pages> pages 97-107, </pages> <address> Dublin, Ireland, </address> <month> August </month> <year> 1993. </year>
Reference-contexts: Some data formats (such as structured files) are not well suited for querying. For these formats, it may be best to import the data into a database, especially if the data changes infrequently <ref> [SLS + 93] </ref>.
Reference: [Sto77] <author> J.E. Stoy. </author> <title> Denotational Semantics: The Scott-Strachey Approach to Programming Language Theory. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1977. </year>
Reference-contexts: Section 6 describes the LORE object repository and provides an overview of how queries are executed. Conclusions and future work are given in Section 7. The complete LOREL syntax is in Appendix A. Appendix B contains a complete denotational semantics <ref> [Sto77] </ref> for LOREL. (Incidentally, writing the denotational semantics was very helpful as it helped uncover anomalies that might otherwise have gone unnoticed). 1 As an acronym, TSIMMIS stands for "The Stanford-IBM Manager of Multiple Information Sources." In addition, Tsimmis is a Yiddish word for a stew with "heterogeneous" fruits and vegetables
Reference: [YA94] <author> T. Yan and J. Annevelink. </author> <title> Integrating a structured-text retrieval system with an object-oriented database system. </title> <booktitle> In Proceedings of the Twentieth International Conference on Very Large Data Bases, </booktitle> <address> Santiago, Chile, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: The goal of the TSIMMIS project is to uniformly handle unstructured, semistructured, and well structured data [PGMW95]. In this goal our effort is similar to the work on integrating SGML [ISO86] documents with relational databases [BCK + 94] or integrating SGML documents with object-oriented databases such as OpenODB <ref> [YA94] </ref> or O 2 [CACS94]. These approaches tend to extend existing data models and languages [BCD92, F + 89]. The ideas behind LOREL could instead have been used to extend an existing language. Our choice to design a new language has its advantages and disadvantages, of course.
Reference: [Zan83] <author> C. Zaniolo. </author> <title> The database language GEM. </title> <booktitle> In Proceedings of the ACM SIGMOD International Conference on Management of Data, </booktitle> <address> San Jose, CA, </address> <month> May </month> <year> 1983. </year>
Reference-contexts: Our approach could easily be built on top of and take advantage of environments such as CORBA and OLE2. We have already shown how LOREL compares to OQL, XSQL, and SQL. LOREL relates in similar ways to a number of other query languages for object-oriented <ref> [BCD92, CDV88, Har94, Zan83] </ref> and nested relational [DKA + 86] systems.
References-found: 27

