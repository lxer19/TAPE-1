URL: http://caesar.me.jhu.edu/directory/imme/CANCUN.ps
Refering-URL: http://caesar.me.jhu.edu/publications.html
Root-URL: 
Title: Generation of Binary Manipulator Workspaces and Work Envelopes  
Author: Imme Ebert-Uphoff Gregory S. Chirikjian 
Address: Baltimore, MD 21218  
Affiliation: Department of Mechanical Engineering Johns Hopkins University  
Abstract: A binary manipulator is a discrete manipulator whose actuators have only two states. We present an efficient algorithm for the approximation of workspaces and work envelopes for binary manipulators of highly actuated structure. The approximation describes not only the shape of the workspace, but also its local point density, i.e. the distribution of the number of points per unit area/volume. This characteristic of manipulator workspaces and work envelopes is of great practical importance for binary manipulators for a variety of problems, e.g., inverse kinematics and obstacle avoidance. The method extends naturally to the continuous range-of-motion case for any manipulator that can be approximated as a binary manipulator with a sufficiently large number of bits. This is particularly useful for manipulators with low resolution, since the point density provides a measure for the local positional accuracy of the end-effector. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> G.S. Chirikjian. </author> <title> A binary paradigm for robotic manipulators. </title> <booktitle> In Proceedings of the 1994 IEEE International Conference on Robotics and Automation, </booktitle> <address> San Diego, CA, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: In the history of electronics and computing, digital devices replaced many of their analog counterparts because of higher reliability and lower cost ex fl Graduate Student y Assistant Professor, Presidential Faculty Fellow actly the same reasons for developing a binary paradigm for robotics <ref> [1] </ref>. The goal of this paper is to develop an efficient algorithm for the approximation of binary manipulator workspaces and work envelopes for highly actuated structures. The workspace, W IR N , is the set of all positions reachable by the end-effector.
Reference: [2] <author> J. Rastegar and P. Deravi. </author> <title> The effect of joint motion constraints of the workspace and number of configurations of manipulators. </title> <journal> Mech. Mach. Theory, </journal> <volume> 22(5):401 - 409, </volume> <year> 1987. </year>
Reference-contexts: A work envelope is the boundary of the smallest simply connected subset of IR N which contains the whole manipulator structure undergoing all configurations of the manipulator. The importance of manipulator workspace properties for design considerations is well known, e.g., <ref> [2, 3] </ref>, as is the importance of manipulator work envelopes, especially in the context of obstacle avoidance. In this paper, we explicitly consider binary manipulator workspaces and work envelopes.
Reference: [3] <author> R. G. Selfridge. </author> <title> The reachable workarea of a manipulator. </title> <journal> Mech. Mach. Theory, </journal> <volume> 18(2):131 - 137, </volume> <year> 1983. </year>
Reference-contexts: A work envelope is the boundary of the smallest simply connected subset of IR N which contains the whole manipulator structure undergoing all configurations of the manipulator. The importance of manipulator workspace properties for design considerations is well known, e.g., <ref> [2, 3] </ref>, as is the importance of manipulator work envelopes, especially in the context of obstacle avoidance. In this paper, we explicitly consider binary manipulator workspaces and work envelopes.
Reference: [4] <author> Alok Kumar and Kenneth J. Waldron. </author> <title> Numerical plotting of surfaces of positioning accuracy of manipulators. </title> <journal> Mech. Mach. Theory, </journal> <volume> 16(4):361 - 368, </volume> <year> 1980. </year>
Reference-contexts: Note that the approximation describes not only the shape of the workspace, but also its local point density (precise definition to follow). For manipulators with low resolution this is useful, since the point density provides a measure for the local positional accuracy of the end-effector, in this context see <ref> [4, 5] </ref>. The number of configurations that a binary manipulator can attain is of the form 2 n where n is the number of binary actuators. In order to reach a large number of points n tends to be large for binary manipulators.
Reference: [5] <author> Dibakar Sen and T. S. Mruthyunjaya. </author> <title> A discrete state perspective of manipulator workspaces. </title> <journal> Mech. Mach. Theory, </journal> <volume> 29(4):591 - 605, </volume> <year> 1994. </year>
Reference-contexts: Note that the approximation describes not only the shape of the workspace, but also its local point density (precise definition to follow). For manipulators with low resolution this is useful, since the point density provides a measure for the local positional accuracy of the end-effector, in this context see <ref> [4, 5] </ref>. The number of configurations that a binary manipulator can attain is of the form 2 n where n is the number of binary actuators. In order to reach a large number of points n tends to be large for binary manipulators.
Reference: [6] <author> I. Ebert-Uphoff and G.S. Chirikjian. </author> <title> Efficient workspace generation for binary manipulators with many actuators. </title> <journal> Journal of Robotic Systems, </journal> <note> June 1995 (in press). 7 </note>
Reference-contexts: Subsection 3.2 describes the implementation 3 of one iteration of the algorithm in detail. Further details of the implementation, an analysis of the computational complexity of the algorithm in terms of time and memory and the error resulting from the discretization can be found in <ref> [6] </ref>. 3.1 An Overview of the Algorithm The workspace mapping algorithm determines intermediate workspaces starting at the end-effector and ending at the base. At each step we climb down one module, maintaining an approximation of the intermediate workspace corresponding to the segment of all modules above the current one. <p> The first block in Figure 4 describes the administra-tional part of an iteration: an estimate of size and location of the intermediate workspace to be calcaluted is needed, the resolution has to be chosen and memory has to be allocated accordingly. For details we again refer the reader to <ref> [6] </ref>. To estimate size and location of workspace W I m1 , all 2 J m homogeneous transforms are applied to the eight corners of the density array D I m (four for the planar case). <p> As a result the error grows quadratically in the number of modules B with a very small factor. The amount of required memory is linear in the number of modules as is the time requirement, see <ref> [6] </ref>. 4 Applications and Examples In this section we present examples of workspaces generated using the workspace mapping algorithm, and show how the algorithm has to be altered to generate work envelopes. In these examples the algorithm is applied to a binary truss manipulator.
References-found: 6

