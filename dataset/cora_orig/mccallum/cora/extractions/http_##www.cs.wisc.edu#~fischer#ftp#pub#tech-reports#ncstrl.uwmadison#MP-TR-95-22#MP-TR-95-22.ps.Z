URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/MP-TR-95-22/MP-TR-95-22.ps.Z
Refering-URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/MP-TR-95-22/
Root-URL: http://www.cs.wisc.edu
Title: CRASH TECHNIQUES FOR LARGE-SCALE COMPLEMENTARITY PROBLEMS  
Author: STEVEN P. DIRKSE AND MICHAEL C. FERRIS 
Keyword: Key words. complementarity problems, crash techniques, projected Newton, crossover  
Note: AMS subject classifications. 90C33, 49M15, 49M07  
Abstract: Most Newton-based solvers for complementarity problems converge rapidly to a solution once they are close to the solution point and the correct active set has been found. We discuss the design and implementation of crash techniques that compute a good active set quickly based on projected gradient and projected Newton directions. Computational results obtained using these crash techniques with PATH and SMOOTH, state-of-the-art complementarity solvers, are given, demonstrating in particular the value of the projected Newton technique in this context. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. B. Berkelaar, B. Jansen, K. Roos, and T. Terlaky, </author> <title> Basis and tripartition identification for quadratic programming and linear complementarity problems, </title> <type> tech. rep., </type> <institution> Department of Econometrics and Operations Research, Erasmus University, </institution> <address> Rotterdam, The Netherlands, </address> <year> 1996. </year>
Reference-contexts: Furthermore, some applications exploit the nature of a basic solution. Thus, there is a growing literature in linear programming <ref> [1, 29] </ref> related to "crossover". This is the technique of taking an approximation generated by an interior point method and identifying a "near-optimal" active set for constructing an advanced basis in a pivotal based technique.
Reference: [2] <author> D. P. Bertsekas, </author> <title> On the Goldstein-Levitin-Poljak gradient projection algorithm, </title> <journal> IEEE Transactions on Automatic Control, </journal> <month> AC-21 </month> <year> (1976), </year> <pages> pp. 174-184. </pages>
Reference-contexts: More extensive numerical results can be found in Appendix A. 2. Crash Techniqes. In nonlinear programming, a technique that has been fruitfully applied to identify a good active set is the projected gradient method <ref> [2] </ref>.
Reference: [3] <author> D. P. Bertsekas, </author> <title> Projected Newton methods for optimization problems with simple constraints, </title> <journal> SIAM Journal on Control and Optimization, </journal> <volume> 20 (1982), </volume> <pages> pp. 221-246. </pages>
Reference-contexts: While they were simple and inexpensive to compute, they did not in all cases provide us with a sufficient decrease in kF B ()k or in an adequate change in the current set of active constraints. Motivated by the work of <ref> [3] </ref>, in which similar results are reported, we now describe a technique in which a Newton direction for a reduced system is computed and used in a path search similar to that of (8).
Reference: [4] <author> D. P. Bertsekas and E. M. Gafni, </author> <title> Projection methods for variational inequalities with application to the traffic assignment problem, Mathematical Programming Study, </title> <booktitle> 17 (1982), </booktitle> <pages> pp. 139-159. </pages>
Reference-contexts: Previous work on projected gradient algorithms for solving MCP and NCP includes <ref> [4] </ref>, and sufficient conditions for the convergence of such a method to a solution of an MCP (which include the Lipschitz continuity and strong monotonicity of F ) are given in [5]. These results are based on a contraction argument and require a fixed stepsize ff chosen sufficiently small.
Reference: [5] <author> D. P. Bertsekas and J. N. Tsitsiklis, </author> <title> Parallel and Distributed Computation: Numerical Methods, </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1989. </year>
Reference-contexts: Previous work on projected gradient algorithms for solving MCP and NCP includes [4], and sufficient conditions for the convergence of such a method to a solution of an MCP (which include the Lipschitz continuity and strong monotonicity of F ) are given in <ref> [5] </ref>. These results are based on a contraction argument and require a fixed stepsize ff chosen sufficiently small. Alternative arguments for the affine case based on the notion of forward-backward splitting can be found in [20] and its cited references.
Reference: [6] <author> S. C. Billups, </author> <title> Algorithms for Complementarity Problems and Generalized Equations, </title> <type> PhD thesis, </type> <institution> University of Wisconsin-Madison, Madison, Wisconsin, </institution> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: For example, if x k is obtained from z k as in (10), then this is the case when x k is a local minimizer of kF B ()k, but fl fl fl 6= 0. In <ref> [6] </ref>, Billups shows it may be possible to solve a sequence of linearized problems with a perturbed function CRASH TECHNIQUES 8 F derived from F to obtain a new iterate ^x such that kF B (^x)k &lt; fl fl perturbed function F takes the simple form F := F (x) +
Reference: [7] <author> S. C. Billups, S. P. Dirkse, and M. C. Ferris, </author> <title> A comparison of large scale mixed complementarity problem solvers, </title> <journal> Computational Optimization and Applications, </journal> <volume> forthcoming, </volume> <year> (1996). </year>
Reference-contexts: Practical experience has already shown PATH [17] to be a very robust technique for solving nonlinear MCP's, and to be a reasonably fast one as well <ref> [7] </ref>.
Reference: [8] <author> S. C. Billups and M. C. Ferris, QPCOMP: </author> <title> A quadratic program based solver for mixed complementarity problems, </title> <journal> Mathematical Programming, </journal> <volume> forthcoming, </volume> <year> (1996). </year>
Reference: [9] <author> A. Brooke, D. Kendrick, and A. Meeraus, </author> <title> GAMS: A User's Guide, </title> <publisher> The Scientific Press, </publisher> <address> South San Francisco, CA, </address> <year> 1988. </year>
Reference-contexts: The proximal perturbation strategy used was also identical to that described in Section 2.2. 3. Computational Results. Computational tests of the various crash techniques discussed in this paper have been performed using the GAMS <ref> [9] </ref> modeling system. The models used were taken from the model library distributed with GAMS and from MCPLIB [16], a growing collection of models available via anonymous ftp from ftp.cs.wisc.edu://math-prog/mcplib/. All the codes tested are written in C and linked to GAMS using the CPLIB [18] interface library.
Reference: [10] <author> J. V. Burke and J. J. Mor e, </author> <title> On the identification of active constraints, </title> <journal> SIAM Journal on Numerical Analysis, </journal> <volume> 25 (1988), </volume> <pages> pp. 1197-1211. </pages>
Reference-contexts: Conditions under which this method identifies the active set after a finite number of iterations are given in <ref> [10, 11] </ref>.
Reference: [11] <author> P. H. Calamai and J. J. Mor e, </author> <title> Projected gradient methods for linearly constrained problems, </title> <journal> Mathematical Programming, </journal> <volume> 39 (1987), </volume> <pages> pp. 93-116. </pages>
Reference-contexts: Conditions under which this method identifies the active set after a finite number of iterations are given in <ref> [10, 11] </ref>.
Reference: [12] <author> C. Chen and O. L. Mangasarian, </author> <title> A class of smoothing functions for nonlinear and mixed complementarity problems, </title> <journal> Computational Optimization and Applications, </journal> <volume> 5 (1996), </volume> <pages> pp. 97-138. </pages>
Reference-contexts: Directions based on projected gradient algorithms from nonlinear programming are considered first in Section 2.1. Section 2.2 describes a Newton direction based on a system of reduced size determined by the active constraints, while Section 2.4 describes a modified Newton direction based on a smoothing <ref> [12] </ref> of the original problem. The computational testing of the crash procedures with both PATH and SMOOTH as the Newton method, along with some results and conclusions based on these tests, are described in Section 3. More extensive numerical results can be found in Appendix A. 2. Crash Techniqes. <p> SMOOTH <ref> [12] </ref>, B-DIFF [25], SEMISMOOTH [26]). In spite of this, there are some differences between PN and these methods. While SMOOTH solves a system of order n at each iteration, PN solves a reduced system, as does B-DIFF. <p> Smooth. We first describe the method that is implemented in the code SMOOTH <ref> [12] </ref> in the context of nonlinear complementarity problems and then show in the next section how we modify this to generate a new crash technique for MCP. The algorithm is based on the mapping H defined in (13). Since this mapping is nonsmooth, Newton's method is not directly applicable. <p> The results that are reported under the heading PN (2) are precisely those used in <ref> [12] </ref> and are given below: ff min = 2 12 , = 0:05, n min = 10, k max = 50, ffi max = 1 and min = 0.
Reference: [13] <author> A. R. Conn, N. I. M. Gould, and P. L. Toint, LANCELOT: </author> <title> A Fortran package for Large-Scale Nonlinear Optimization (Release A), no. </title> <booktitle> 17 in Springer Series in Computational Mathematics, </booktitle> <publisher> Springer Verlag, </publisher> <address> Heidelberg, Berlin, </address> <year> 1992. </year>
Reference-contexts: there is potential for a large change in the current active set as a result of a single step CRASH TECHNIQUES 5 in this method, these methods are used in large scale codes to determine an active set quickly, after which a Newton method is applied on the identified face <ref> [13] </ref>. Note that when B is polyhedral, z k+1 (ff) defines a piecewise linear path for ff 2 (0; 1).
Reference: [14] <author> CPLEX Optimization Inc., </author> <title> Using the CPLEX(TM) Linear Optimizer and CPLEX(TM) Mixed Integer Optimizer (Version 2.0), </title> <address> Incline Village, Nevada, </address> <year> 1992. </year>
Reference-contexts: Techniques for accomplishing this cheaply are the subject of this paper and will be referred to as "crash techniques". The underlying idea is closely related to the crash procedures that are now commonplace in production style linear programming codes <ref> [14, 30] </ref>, although we largely ignore the problem of modifying the active set to generate a nonsingular basis. Our crash techniques are iterative in nature and employ a merit function to deal with the nonlinear nature of the problem.
Reference: [15] <author> T. De Luca, F. Facchinei, and C. Kanzow, </author> <title> A semismooth equation approach to the solution of nonlinear complementarity problems, </title> <type> Preprint 93, </type> <institution> Institute of Applied Mathematics, University of Hamburg, Hamburg, Germany, </institution> <year> 1995. </year> <title> CRASH TECHNIQUES 14 </title>
Reference: [16] <author> S. P. Dirkse and M. C. Ferris, MCPLIB: </author> <title> A collection of nonlinear mixed complementarity problems, Optimization Methods and Software, </title> <booktitle> 5 (1995), </booktitle> <pages> pp. </pages> <month> 319-345. </month> <title> [17] , The PATH solver: A non-monotone stabilization scheme for mixed complementarity problems, Optimization Methods and Software, </title> <booktitle> 5 (1995), </booktitle> <pages> pp. 123-156. </pages>
Reference-contexts: Computational Results. Computational tests of the various crash techniques discussed in this paper have been performed using the GAMS [9] modeling system. The models used were taken from the model library distributed with GAMS and from MCPLIB <ref> [16] </ref>, a growing collection of models available via anonymous ftp from ftp.cs.wisc.edu://math-prog/mcplib/. All the codes tested are written in C and linked to GAMS using the CPLIB [18] interface library. Furthermore, the same linear algebra subroutines are used throughout.
Reference: [18] <author> S. P. Dirkse, M. C. Ferris, P. V. Preckel, and T. Rutherford, </author> <title> The GAMS callable program library for variational and complementarity solvers, </title> <type> Mathematical Programming Technical Report 94-07, </type> <institution> Computer Sciences Department, University of Wisconsin, Madison, Wisconsin, </institution> <year> 1994. </year> <note> Available from ftp://ftp.cs.wisc.edu/math-prog/tech-reports/. </note>
Reference-contexts: The models used were taken from the model library distributed with GAMS and from MCPLIB [16], a growing collection of models available via anonymous ftp from ftp.cs.wisc.edu://math-prog/mcplib/. All the codes tested are written in C and linked to GAMS using the CPLIB <ref> [18] </ref> interface library. Furthermore, the same linear algebra subroutines are used throughout. All tests were done using a SUN SPARC 10/51 with 96 Mb of RAM, allowing a meaningful comparison of solution times between algorithms.
Reference: [19] <author> B. C. Eaves, </author> <title> On the basic theorem of complementarity, </title> <journal> Mathematical Programming, </journal> <volume> 1 (1971), </volume> <pages> pp. 68-87. </pages>
Reference-contexts: Once an approximate active set has been identified, we revert to a standard Newton based code to solve the problem. We first describe the reformulation of the MCP as a nonsmooth system of equations using the normal map <ref> [19, 34, 35] </ref> defined below. This will enable us to describe our Newton method based on similar techniques for smooth systems of equations. Definition 1.1 (Normal Map).
Reference: [20] <author> J. Eckstein and M. C. Ferris, </author> <title> Operator splitting methods for monotone linear complementarity problems, </title> <type> TMC 239, </type> <institution> Thinking Machines Corporation, </institution> <address> Cambridge, MA 02142, </address> <year> 1992. </year>
Reference-contexts: These results are based on a contraction argument and require a fixed stepsize ff chosen sufficiently small. Alternative arguments for the affine case based on the notion of forward-backward splitting can be found in <ref> [20] </ref> and its cited references. Results using an Armijo type line search similar to (8) are scarce due to the lack of a good merit function.
Reference: [21] <author> A. Fischer and C. Kanzow, </author> <title> On finite termination of an iterative method for linear complementarity problems, </title> <type> Preprint MATH-NM-10-1994, </type> <institution> Institute for Numerical Mathematics, Technical University of Dresden, </institution> <address> Dresden, Germany, </address> <year> 1994. </year>
Reference: [22] <author> M. Fukushima, </author> <title> Equivalent differentiable optimization problems and descent methods for asymmetric variational inequality problems, </title> <journal> Mathematical Programming, </journal> <volume> 53 (1992), </volume> <pages> pp. 99-110. </pages>
Reference-contexts: Results using an Armijo type line search similar to (8) are scarce due to the lack of a good merit function. Some convergence results for a number of projection methods based on a gap function derived from the corresponding variational inequality are given in <ref> [22, 28] </ref>. In order to perform an Armijo search similar to (8), we require a merit function to minimize, a function of the iterates z 2 B.
Reference: [23] <author> S. A. Gabriel and J. J. Mor e, </author> <title> Smoothing of mixed complementarity problems, </title> <type> Preprint MCS-P541-0995, </type> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, Argonne, Illinois, </institution> <year> 1995. </year>
Reference: [24] <author> C. B. Garcia and W. I. Zangwill, </author> <title> Pathways to Solutions, Fixed Points, and Equilibria, </title> <publisher> Prentice-Hall, Inc, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1981. </year>
Reference-contexts: However, we restrict our attention to this set throughout the paper due to the fact that our implementations exploit the particular structure of B when performing the requisite projections. While simplicial labeling techniques [37] and fixed point schemes <ref> [24, 38] </ref> possess very powerful theoretical properties, Newton based techniques have proven very effective for solving large-scale MCP's [7, 8, 12, 15, 17, 21, 23, 26, 31, 32, 33, 36, 39].
Reference: [25] <author> P. T. Harker and B. Xiao, </author> <title> Newton's method for the nonlinear complementarity problem: A B-differentiable equation approach, </title> <journal> Mathematical Programming, </journal> <volume> 48 (1990), </volume> <pages> pp. 339-358. </pages>
Reference-contexts: SMOOTH [12], B-DIFF <ref> [25] </ref>, SEMISMOOTH [26]). In spite of this, there are some differences between PN and these methods. While SMOOTH solves a system of order n at each iteration, PN solves a reduced system, as does B-DIFF.
Reference: [26] <author> H. Jiang and L. Qi, </author> <title> A new nonsmooth equations approach to nonlinear complementarity problems, </title> <journal> SIAM Journal on Control and Optimization, </journal> <volume> forthcoming, </volume> <year> (1996). </year>
Reference-contexts: SMOOTH [12], B-DIFF [25], SEMISMOOTH <ref> [26] </ref>). In spite of this, there are some differences between PN and these methods. While SMOOTH solves a system of order n at each iteration, PN solves a reduced system, as does B-DIFF.
Reference: [27] <author> N. H. Josephy, </author> <title> Newton's method for generalized equations, </title> <type> Technical Summary Report 1965, </type> <institution> Mathematics Research Center, University of Wisconsin, Madison, Wisconsin, </institution> <year> 1979. </year>
Reference-contexts: One reason PATH represents a significant increase in speed over other pivotal algorithms is that it begins pivoting for each subproblem (6) using the basis determined by the active set at the current point x k , and not the all-slack basis used by the Josephy-Newton algorithm <ref> [27] </ref>, for example. Close to a solution, the basis may change very little from subproblem to subproblem, if at all, so PATH does not need to do any pivoting, and behaves like Newton's method applied to smooth systems of equations.
Reference: [28] <author> T. Larsson and M. Patriksson, </author> <title> A class of gap functions for variational inequalities, </title> <journal> Mathematical Programming, </journal> <volume> 64 (1994), </volume> <pages> pp. 53-79. </pages>
Reference-contexts: Results using an Armijo type line search similar to (8) are scarce due to the lack of a good merit function. Some convergence results for a number of projection methods based on a gap function derived from the corresponding variational inequality are given in <ref> [22, 28] </ref>. In order to perform an Armijo search similar to (8), we require a merit function to minimize, a function of the iterates z 2 B.
Reference: [29] <author> N. Megiddo, </author> <title> On finding primal- and dual-optimal bases, </title> <journal> ORSA Journal on Computing, </journal> <volume> 3 (1991), </volume> <pages> pp. 63-65. </pages>
Reference-contexts: Furthermore, some applications exploit the nature of a basic solution. Thus, there is a growing literature in linear programming <ref> [1, 29] </ref> related to "crossover". This is the technique of taking an approximation generated by an interior point method and identifying a "near-optimal" active set for constructing an advanced basis in a pivotal based technique.
Reference: [30] <author> B. A. Murtagh and M. A. Saunders, </author> <title> MINOS 5.0 user's guide, </title> <type> Technical Report SOL 83.20, </type> <institution> Stanford University, Stanford, California, </institution> <year> 1983. </year>
Reference-contexts: Techniques for accomplishing this cheaply are the subject of this paper and will be referred to as "crash techniques". The underlying idea is closely related to the crash procedures that are now commonplace in production style linear programming codes <ref> [14, 30] </ref>, although we largely ignore the problem of modifying the active set to generate a nonsingular basis. Our crash techniques are iterative in nature and employ a merit function to deal with the nonlinear nature of the problem.
Reference: [31] <author> J. S. Pang, </author> <title> Newton's method for B-differentiable equations, </title> <journal> Mathematics of Operations Research, </journal> <volume> 15 (1990), </volume> <pages> pp. 311-341. </pages>
Reference-contexts: By ignoring the bounds in the computation of the search direction and using them only when projecting, we can make large changes in the active set, while the reduced system makes the factorization involved in the computation of the search direction cheaper to perform. In <ref> [31] </ref>, Pang gives a global convergence result for Newton's method applied to B-differentiable functions, and applies this result to the NCP formulated using the mapping H defined in (13).
Reference: [32] <author> J. S. Pang and S. A. Gabriel, NE/SQP: </author> <title> A robust algorithm for the nonlinear complementarity problem, </title> <journal> Mathematical Programming, </journal> <volume> 60 (1993), </volume> <pages> pp. 295-338. </pages>
Reference: [33] <author> D. Ralph, </author> <title> Global convergence of damped Newton's method for nonsmooth equations, via the path search, </title> <journal> Mathematics of Operations Research, </journal> <volume> 19 (1994), </volume> <pages> pp. 352-389. </pages>
Reference-contexts: The path is known to exist locally under fairly standard assumptions and can be generated using standard pivotal techniques to move from one piece of the piecewise affine map to another. Further details can be found in <ref> [33] </ref>. A Newton method for MCP would accept x k N as a new approximation to the solution and re-linearize at this point.
Reference: [34] <author> S. M. Robinson, </author> <title> Mathematical foundations of nonsmooth embedding methods, </title> <journal> Mathematical Programming, </journal> <volume> 48 (1990), </volume> <pages> pp. </pages> <month> 221-229. </month> <title> [35] , Normal maps induced by linear transformations, </title> <journal> Mathematics of Operations Research, </journal> <volume> 17 (1992), </volume> <pages> pp. 691-714. </pages>
Reference-contexts: Once an approximate active set has been identified, we revert to a standard Newton based code to solve the problem. We first describe the reformulation of the MCP as a nonsmooth system of equations using the normal map <ref> [19, 34, 35] </ref> defined below. This will enable us to describe our Newton method based on similar techniques for smooth systems of equations. Definition 1.1 (Normal Map).
Reference: [36] <author> T. F. Rutherford, MILES: </author> <title> A mixed inequality and nonlinear equation solver. </title> <type> Working Paper, </type> <institution> Department of Economics, University of Colorado, Boulder, </institution> <year> 1993. </year>
Reference-contexts: Close to a solution, the basis may change very little from subproblem to subproblem, if at all, so PATH does not need to do any pivoting, and behaves like Newton's method applied to smooth systems of equations. Even so, pivotal codes for MCP such as MILES <ref> [36] </ref> and PATH [17] may be forced to perform a very large number of pivots in order to solve the initial subproblem. Since these solvers use an active set approach, each pivot corresponds to a variable entering or leaving the set of active constraints.
Reference: [37] <author> H. E. Scarf, </author> <title> The approximation of fixed points of a continuous mapping, </title> <journal> SIAM Journal on Applied Mathematics, </journal> <volume> 15 (1967), </volume> <pages> pp. 1328-1343. </pages>
Reference-contexts: However, we restrict our attention to this set throughout the paper due to the fact that our implementations exploit the particular structure of B when performing the requisite projections. While simplicial labeling techniques <ref> [37] </ref> and fixed point schemes [24, 38] possess very powerful theoretical properties, Newton based techniques have proven very effective for solving large-scale MCP's [7, 8, 12, 15, 17, 21, 23, 26, 31, 32, 33, 36, 39].
Reference: [38] <author> M. J. Todd, </author> <title> Computation of Fixed Points and Applications, </title> <booktitle> vol. 124 of Lecture Notes in Economics and Mathematical Systems, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Heidelberg, </address> <year> 1976. </year>
Reference-contexts: However, we restrict our attention to this set throughout the paper due to the fact that our implementations exploit the particular structure of B when performing the requisite projections. While simplicial labeling techniques [37] and fixed point schemes <ref> [24, 38] </ref> possess very powerful theoretical properties, Newton based techniques have proven very effective for solving large-scale MCP's [7, 8, 12, 15, 17, 21, 23, 26, 31, 32, 33, 36, 39].

References-found: 36

