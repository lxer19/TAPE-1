URL: http://www.cs.bc.edu/~straubin/papers/locred.ps
Refering-URL: http://www.cs.bc.edu/techreps.html
Root-URL: http://www.cs.bc.edu
Title: The Power of Local Self-Reductions  
Author: Richard Beigel 
Address: Boston College  
Affiliation: Yale University Howard Straubing  
Abstract: Identify a string x over f0; 1g with the positive integer whose binary representation is 1x. We say that a self-reduction is k-local if on input x all queries belong to fx 1; : : : ; x kg. We show that all k-locally self-reducible sets belong to PSPACE. However, the power of k-local self-reductions changes drastically between k = 2 and k = 3. Although all 2-locally self-reducible sets belong to MOD 6 PH, some 3-locally self-reducible sets are PSPACE-complete. Furthermore, there exists a 6-locally self-reducible PSPACE-complete set whose self-reduction is an m-reduction (in fact, a permutation). We prove all these results by showing that such languages are equivalent in complexity to the problem of multiplying an exponentially long sequence of uniformly generated elements in a finite monoid, and then exploiting the algebraic structure of the monoid. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. L. Balcazar. </author> <title> Self-reducibility. </title> <journal> JCSS, </journal> <volume> 41, </volume> <year> 1990. </year>
Reference-contexts: 1. Introduction In this paper we identify a string x over f0; 1g with the positive integer whose binary representation is 1x. Thus we do not distinguish between the sets f0; 1g fl and Z + : Balcazar <ref> [1] </ref> introduced lexicographical self-reductions, also called wdq-self-reductions, which on input x query only strings that are less than x. Lexicographical self-reductions are an important tool in unifying certain connections between uniform fl Yale University, Dept. of Computer Science, P.O. Box 208285, New Haven, CT 06520-8285, USA. Email: beigel-richard@cs.yale.edu. <p> National Science Foundation under grant CCR-8958528 and by the Netherlands Organization for Scientific Research (NWO) under Visitors Grant B 62-403. y Computer Science Dept., Boston College, Chestnut Hill, MA 02167, USA. Email: straubin@bcuxs1.bc.edu. Research supported in part by the U.S.A. National Science Foundation under grant CCR-9203208. and nonuniform complexity <ref> [1] </ref>. They are also important in the study of which complexity classes may have sparse complete sets [13]. Goldsmith, Joseph, and Young [9] (independent of Balcazar) introduced near testability, and subsequently Goldsmith, Joseph, Hemachandra, and Young [8] introduced near near-testability. <p> Both notions are special cases of lexicographical self-reductions in which the queried string (if any) is always the immediate predecessor of the input string. The complexity of lexicographically self-reducible sets is well understood: all of them belong to EXP and some of them are p m -complete for EXP <ref> [1] </ref>. The complexity of near-testable sets is also well understood: all of them belong to PARITYP and some of them are p m -complete for PARITYP [8].
Reference: [2] <author> J. L. Balcazar, J. Diaz, and J. Gabarro. </author> <title> Structural Complexity I, </title> <booktitle> volume 11 of EATCS Monographs on Theoretical Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1988. </year>
Reference-contexts: We will also need the following fact about the connection between space used by a Turing machine and circuit depth: Every language in PSPACE is recognized by a uniform polynomial-depth family of circuits <ref> [6, 2] </ref>. In this context, "uniform" means that we can determine in polynomial time from the encoding of a gate whether it is an AND gate, an OR gate, or a leaf, and, if it is a leaf, which bit of the input it queries. Lemma 5.
Reference: [3] <author> D. A. Barrington. </author> <title> Bounded-width polynomial-size branching programs recognize exactly those languages in NC 1 . JCSS, </title> <booktitle> 38(1) </booktitle> <pages> 150-164, </pages> <month> Feb. </month> <year> 1989. </year>
Reference-contexts: We prove these results by reducing questions about the Turing machine complexity of locally self-reducible sets to questions about the circuit complexity of multiplication in finite monoids, and then applying results of Barrington, Immerman, Straubing, and Therien on circuits and monoids <ref> [3, 5, 4] </ref>. This algebraic approach to circuit complexity is proving to be a valuable tool in the study of Turing machine-based complexity classes; see, for example, [7, 11]. 2. <p> It is easy to show that the problem of multiplying n elements of a fixed finite monoid is in NC 1 <ref> [3] </ref>. Thus the multiplication of exponentially many uniformly generated elements of a finite monoid can be carried out by uniform AND-OR circuits of linear depth. Our result then follows from the fact that uniform circuits of polynomial depth can be evaluated in polynomial space. <p> Let S 5 denote the symmetric group of degree 5; that is, the group of all permutations of the set f1; 2; 3; 4; 5g: Let b; c be distinct elements of S 5 ; and let L 2 NC 1 : Barrington <ref> [3] </ref> showed that for each n &gt; 0 there is a function f n : Z + ! Z + ; and for each x 2 f0; 1g fl a sequence ff (x) of elements of S 5 ; such that: * The length of ff (x) depends only on jxj;
Reference: [4] <author> D. A. M. Barrington and D. Therien. </author> <title> Finite monoids and the fine structure of NC 1 . J. </title> <journal> ACM, </journal> <volume> 35(4) </volume> <pages> 941-952, </pages> <month> Oct. </month> <year> 1988. </year>
Reference-contexts: We prove these results by reducing questions about the Turing machine complexity of locally self-reducible sets to questions about the circuit complexity of multiplication in finite monoids, and then applying results of Barrington, Immerman, Straubing, and Therien on circuits and monoids <ref> [3, 5, 4] </ref>. This algebraic approach to circuit complexity is proving to be a valuable tool in the study of Turing machine-based complexity classes; see, for example, [7, 11]. 2. <p> When M is a solvable monoid, all of these composition factors are cyclic groups of prime order. Thus solvable monoids are in a precise sense a semigroup-theoretic analogue of solvable groups. Barrington and Therien <ref> [4] </ref> show that in this case we can compute the product of a sequence of elements of M in ACC (r)|that is, with a constant-depth, polynomial-size (in the length of the sequence) uniform family of unbounded fan-in circuits with AND, OR and MOD r gates|where r is the product of the
Reference: [5] <author> D. Barrington, N. Immerman, and H. Straubing. </author> <booktitle> On Uniformity in NC 1 . JCSS, </booktitle> <volume> 41 </volume> <pages> 274-306, </pages> <year> 1990. </year>
Reference-contexts: We prove these results by reducing questions about the Turing machine complexity of locally self-reducible sets to questions about the circuit complexity of multiplication in finite monoids, and then applying results of Barrington, Immerman, Straubing, and Therien on circuits and monoids <ref> [3, 5, 4] </ref>. This algebraic approach to circuit complexity is proving to be a valuable tool in the study of Turing machine-based complexity classes; see, for example, [7, 11]. 2. <p> (i) th bit of x: * If x 2 L; then Q ff (x); the product in S 5 of the elements of ff (x); is equal to b: If x =2 L; then Q ff (x) = c: Barrington in his original paper, and later Barring-ton, Immerman and Straubing <ref> [5] </ref> studied the complexity of this circuit simulation for uniform NC 1 : For our purposes, we only need the following facts, easily derivable from Barrington's original construction: Suppose we have a fan-in 2 circuit whose underlying graph is the full binary tree of depth d: Thus there are 2 d
Reference: [6] <author> A. Borodin. </author> <title> On relating time and space to size and depth, </title> <journal> SICOMP, </journal> <volume> 6(4) </volume> <pages> 733-743, </pages> <year> 1977. </year>
Reference-contexts: We will also need the following fact about the connection between space used by a Turing machine and circuit depth: Every language in PSPACE is recognized by a uniform polynomial-depth family of circuits <ref> [6, 2] </ref>. In this context, "uniform" means that we can determine in polynomial time from the encoding of a gate whether it is an AND gate, an OR gate, or a leaf, and, if it is a leaf, which bit of the input it queries. Lemma 5.
Reference: [7] <author> J. Cai and M. Furst. </author> <title> PSPACE survives three-bit bottlenecks. </title> <booktitle> International Journal of Foundations of Computer Science, </booktitle> <year> 1990. </year>
Reference-contexts: This algebraic approach to circuit complexity is proving to be a valuable tool in the study of Turing machine-based complexity classes; see, for example, <ref> [7, 11] </ref>. 2. A Connection to Algebra Let A be k-locally self-reducible, so there is a polynomial-time algorithm A that takes x + 1 and O A (x k + 1); : : : ; O A (x) as input and determines O A (x + 1). <p> tially long product in the monoid T k of all maps from f1; : : : ; kg into itself, since in each phase we are, in effect, computing such a map. (Machines for which this map is always a permutation are called permutation bottleneck Turing machines.) Cai and Furst <ref> [7] </ref> used Barrington's completeness result for NC 1 to show that every language in PSPACE is recognized by a width-5 bottleneck Turing machine.
Reference: [8] <author> J. Goldsmith, L. Hemachandra, D. Joseph, and P. Young. </author> <title> Near-testable sets. </title> <journal> SICOMP, </journal> <volume> 20(3) </volume> <pages> 506-523, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: National Science Foundation under grant CCR-9203208. and nonuniform complexity [1]. They are also important in the study of which complexity classes may have sparse complete sets [13]. Goldsmith, Joseph, and Young [9] (independent of Balcazar) introduced near testability, and subsequently Goldsmith, Joseph, Hemachandra, and Young <ref> [8] </ref> introduced near near-testability. Both notions are special cases of lexicographical self-reductions in which the queried string (if any) is always the immediate predecessor of the input string. <p> The complexity of near-testable sets is also well understood: all of them belong to PARITYP and some of them are p m -complete for PARITYP <ref> [8] </ref>. So is the complexity of nearly near-testable sets: all of them belong to PF NP ffiPARITYP and some of them are p m -complete for PF NP ffi PARITYP [10]. <p> This result (and the related result of <ref> [8] </ref>) falls out of our algebraic framework in a nearly mechanical way. We first recall a few definitions. <p> This result is originally due to Gold smith, Hemachandra, Joseph, and Young <ref> [8] </ref>. 6.
Reference: [9] <author> J. Goldsmith, D. Joseph, and P. Young. Self-reducible, p-selective, near-testable, </author> <title> and p-cheatable sets: The effect of internal structure on the complexity of a set. </title> <type> TR 87-06-02, </type> <institution> Dept. of Computer Science, University of Washington, </institution> <address> Seattle, </address> <month> June </month> <year> 1987. </year> <title> An extended abstract appeared in Proc. </title> <booktitle> of the 2nd Annual Conference on Structure in Complexity Theory, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <month> June </month> <year> 1987, </year> <pages> pp. 50-59. </pages>
Reference-contexts: Email: straubin@bcuxs1.bc.edu. Research supported in part by the U.S.A. National Science Foundation under grant CCR-9203208. and nonuniform complexity [1]. They are also important in the study of which complexity classes may have sparse complete sets [13]. Goldsmith, Joseph, and Young <ref> [9] </ref> (independent of Balcazar) introduced near testability, and subsequently Goldsmith, Joseph, Hemachandra, and Young [8] introduced near near-testability. Both notions are special cases of lexicographical self-reductions in which the queried string (if any) is always the immediate predecessor of the input string.
Reference: [10] <author> L. A. Hemachandra and A. Hoene. </author> <title> On sets with efficient implicit membership tests. </title> <journal> SICOMP, </journal> <volume> 20(6) </volume> <pages> 1148-1156, </pages> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: So is the complexity of nearly near-testable sets: all of them belong to PF NP ffiPARITYP and some of them are p m -complete for PF NP ffi PARITYP <ref> [10] </ref>. In order to better understand lexicographical self-reductions, we ask what happens when a self reduction is allowed to look only at the k immediately preceding strings for some constant k. Definition 1. <p> [14] shows that for polynomial-size circuit families, ACC (6) is different from both ACC (3) and ACC (2): The analogous separation for uniform exponential-size families would show that the 2-locally self-reducible sets are not in either MOD 2 PH or MOD 3 PH. 5. 1-Locally Self-Reducible Sets Hemachandra and Hoene <ref> [10] </ref> isolated the complexity of the 1-locally self-reducible sets by showing that they belong to OptP and that some of them are OptP-hard. This result (and the related result of [8]) falls out of our algebraic framework in a nearly mechanical way. We first recall a few definitions.
Reference: [11] <author> U. Hertrampf, C. Lautemann, T. Schwentick, H. Vollmer, and K. Wagner. </author> <title> On the power of polynomial time bit-reductions. </title> <booktitle> In Proc. 8th Structures, </booktitle> <pages> pp. 200-207, </pages> <year> 1993. </year>
Reference-contexts: This algebraic approach to circuit complexity is proving to be a valuable tool in the study of Turing machine-based complexity classes; see, for example, <ref> [7, 11] </ref>. 2. A Connection to Algebra Let A be k-locally self-reducible, so there is a polynomial-time algorithm A that takes x + 1 and O A (x k + 1); : : : ; O A (x) as input and determines O A (x + 1).
Reference: [12] <author> M. </author> <title> Ogihara. </title> <booktitle> On serializable languages. </booktitle> <institution> University of Rochester Technical Report, </institution> <month> June, </month> <year> 1994. </year>
Reference-contexts: As we remarked in the introduction, several other papers in the literature have employed this algebraic approach to Turing machine-based complexity classes. After we completed a preliminary version of this paper, we received a technical report by M. Ogihara <ref> [12] </ref>, which is best understood in terms of this approach. Ogihara studies "bottleneck Turing machines". On inputs of length n; a width-k bottleneck Turing machine runs for 2 n O (1) phases, where each phase takes n O (1) steps. At the end of each phase, the machine is reset.
Reference: [13] <author> M. Ogiwara and A. Lozano. </author> <title> On one query self--reducible sets. </title> <booktitle> In Proc. 6th Structures, </booktitle> <pages> pp. 139-151, </pages> <year> 1991. </year>
Reference-contexts: Email: straubin@bcuxs1.bc.edu. Research supported in part by the U.S.A. National Science Foundation under grant CCR-9203208. and nonuniform complexity [1]. They are also important in the study of which complexity classes may have sparse complete sets <ref> [13] </ref>. Goldsmith, Joseph, and Young [9] (independent of Balcazar) introduced near testability, and subsequently Goldsmith, Joseph, Hemachandra, and Young [8] introduced near near-testability. Both notions are special cases of lexicographical self-reductions in which the queried string (if any) is always the immediate predecessor of the input string.
Reference: [14] <author> R. Smolensky. </author> <title> Algebraic methods in the theory of lower bounds for boolean circuit complexity. </title> <booktitle> In Proc. 19 th ACM STOC, </booktitle> <pages> pp. 77-82, </pages> <year> 1987. </year>
Reference-contexts: A theorem of Smolen-sky <ref> [14] </ref> shows that for polynomial-size circuit families, ACC (6) is different from both ACC (3) and ACC (2): The analogous separation for uniform exponential-size families would show that the 2-locally self-reducible sets are not in either MOD 2 PH or MOD 3 PH. 5. 1-Locally Self-Reducible Sets Hemachandra and Hoene [10]
References-found: 14

