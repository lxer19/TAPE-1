URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/94-01.ps.Z
Refering-URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/README.html
Root-URL: 
Title: A "NATURAL LOGIC" FOR NATURAL LANGUAGE PROCESSING AND KNOWLEDGE REPRESENTATION  
Author: by Syed S. Ali 
Degree: A dissertation submitted to the Faculty of the Graduate School  in partial fulfillment of the requirements for the degree of Doctor of Philosophy  
Date: November 1993  
Affiliation: of State University of New York at Buffalo  
Abstract-found: 0
Intro-found: 1
Reference: [ Ali and Shapiro, 1993 ] <author> Syed S. Ali and Stuart C. Shapiro. </author> <title> Natural Language Processing Using a Propositional Semantic Network with Structured Variables. </title> <journal> Minds and Machines, </journal> <volume> 3(4), </volume> <month> November </month> <year> 1993. </year> <title> Special Issue on Knowledge Representation for Natural Language Processing. </title>
Reference-contexts: The implemented system is called ANALOG. The name ANALOG is also used to refer to the logical system independent of its implementation. We note that portions of this chapter have previously been published in <ref> [ Ali, 1993c; Ali and Shapiro, 1993 ] </ref> in slightly different forms. 56 5.1.1 Semantics Any theory of semantics that ascribes propositional meaning to nodes can be the semantics (augmented with the semantics for structured variables) of ANALOG. <p> We note that portions of this chapter have previously been published in <ref> [ Ali, 1993a; Ali, 1993b; Ali and Shapiro, 1993 ] </ref> . 6.1 Processing Natural Language A parser/generator is one component of the ANALOG system. A generalized augmented transition network grammar [ Shapiro, 1982a ] is used in the natural language demonstrations that follow.
Reference: [ Ali, 1993a ] <author> Syed S. Ali. </author> <title> A Propositional Semantic Network with Structured Variables for Natural Language Processing. </title> <booktitle> In Proceedings of the Sixth Australian Joint Conference on Artificial Intelligence., </booktitle> <month> November 17-19 </month> <year> 1993. </year>
Reference-contexts: We note that portions of this chapter have previously been published in <ref> [ Ali, 1993a; Ali, 1993b; Ali and Shapiro, 1993 ] </ref> . 6.1 Processing Natural Language A parser/generator is one component of the ANALOG system. A generalized augmented transition network grammar [ Shapiro, 1982a ] is used in the natural language demonstrations that follow.
Reference: [ Ali, 1993b ] <author> Syed S. Ali. </author> <title> A Structured Representation for Noun Phrases and Anaphora. </title> <booktitle> In Proceedings of the Fifteenth Annual Conference of the Cognitive Science Society, </booktitle> <pages> pages 197-202, </pages> <address> Hillsdale, NJ, June 1993. </address> <publisher> Lawrence Erlbaum. </publisher>
Reference-contexts: We note that portions of this chapter have previously been published in <ref> [ Ali, 1993a; Ali, 1993b; Ali and Shapiro, 1993 ] </ref> . 6.1 Processing Natural Language A parser/generator is one component of the ANALOG system. A generalized augmented transition network grammar [ Shapiro, 1982a ] is used in the natural language demonstrations that follow.
Reference: [ Ali, 1993c ] <author> Syed S. Ali. </author> <title> Node Subsumption in a Propositional Semantic Network with Structured Variables. </title> <booktitle> In Proceedings of the Sixth Australian Joint Conference on Artificial Intelligence., </booktitle> <month> November 17-19 </month> <year> 1993. </year>
Reference-contexts: The implemented system is called ANALOG. The name ANALOG is also used to refer to the logical system independent of its implementation. We note that portions of this chapter have previously been published in <ref> [ Ali, 1993c; Ali and Shapiro, 1993 ] </ref> in slightly different forms. 56 5.1.1 Semantics Any theory of semantics that ascribes propositional meaning to nodes can be the semantics (augmented with the semantics for structured variables) of ANALOG.
Reference: [ Barwise and Cooper, 1981 ] <author> Jon Barwise and Robin Cooper. </author> <title> Generalized Quantifiers and Natural Language. </title> <journal> Linguistics and Philosophy, </journal> <volume> 4 </volume> <pages> 159-219, </pages> <year> 1981. </year>
Reference-contexts: Montague grammar is significant because it provides strong evidence that the syntax of natural language sentences can itself aid the processing and representational task. A related body of work is that of Barwise and Cooper <ref> [ Barwise and Cooper, 1981 ] </ref> on generalized quantifiers in natural language. They attempt to represent and provide semantics for more general types of quantified natural language sentences (e. g., many, most) and specify a translation of a fragment of English using phrase structure rules.
Reference: [ Barwise, 1979 ] <author> Jon Barwise. </author> <title> On Branching Quantifiers in English. </title> <journal> J. Phil. Logic, </journal> <volume> 8 </volume> <pages> 47-80, </pages> <year> 1979. </year>
Reference-contexts: Additionally, we would like to account for some of the traditionally difficult (for FOPL) types of scoping associated with natural language sentences, described below. 2.3.1 Branching Quantifiers There is a class of natural language sentences that are not expressible in any linear notation <ref> [ Quine, 1969; Quine, 1970; Fauconnier, 1975; Barwise, 1979 ] </ref> . These sentences require a nonlinear quantifier prefix. An example is: (1) Some relative of each villager and some relative of each townsman hate each other.
Reference: [ Beierle et al., 1992 ] <author> C. Beierle, U. Hedtstuck, U. Pletat, P. H. Schmitt, and J. Siekmann. </author> <title> An Order-sorted Logic for Knowledge Representation Systems. </title> <journal> Artificial Intelligence, </journal> <volume> 55(2-3):149-191, </volume> <month> June </month> <year> 1992. </year> <month> 117 </month>
Reference-contexts: Finally, variables of the ABox are still atomic and since sentences of the ABox are FOPL-based, KRYPTON cannot represent branched quantifiers or donkey sentences. A general problem with hybrid systems such as KRYPTON is the potential for inconsistency between reasoning in the TBox and reasoning in the Abox. <ref> [ Beierle et al., 1992 ] </ref> makes the point that hybrid KRR systems distinguish between taxonomical information (T-box) and assertional information (A-box) too rigidly. Thus, while information in the ABox can change, during inference or when new propositions are entered, information in the T-box tends to be static.
Reference: [ Bobrow and Winograd, 1977 ] <author> Daniel G. Bobrow and Terry Winograd. </author> <title> An Overview of KRL, a Knowledge Representation Language. </title> <journal> Cognitive Science, </journal> <volume> 1(1) </volume> <pages> 3-46, </pages> <year> 1977. </year>
Reference: [ Brachman and Schmolze, 1985 ] <author> Ronald J. Brachman and J. Schmolze. </author> <title> An Overview of the KL-ONE Knowledge Representation System. </title> <journal> Cognitive Science, </journal> <volume> 9(2) </volume> <pages> 171-216, </pages> <year> 1985. </year>
Reference: [ Brachman et al., 1983 ] <author> Ronald J. Brachman, Richard E. Fikes, and Hector J. Levesque. </author> <title> KRYPTON: a Functional Approach to Knowledge Representation. </title> <journal> IEEE Computer, </journal> <volume> 16(10) </volume> <pages> 67-73, </pages> <year> 1983. </year>
Reference-contexts: FDLs can represent the descriptions: every boy and a girl in a terminological component and the loves predicate a assertional component that is typically first-order-logic based. This is what is done in the KRYPTON system <ref> [ Brachman et al., 1983; Brachman et al., 1985 ] </ref> . Certainly, these represent productive attempts to address the motivation of natural form (among other motivations). <p> These concepts are then used to restrict suitably variables in the theorem prover. One representative system is the work of Brachman with KRYPTON <ref> [ Brachman et al., 1983; Brachman et al., 1985 ] </ref> . KRYPTON is a KR system that supports (and separates) two kinds of knowledge: terminological (in the TBox) and assertional (in the ABox).
Reference: [ Brachman et al., 1985 ] <author> Ronald J. Brachman, Victoria Pigman Gilbert, and Hector J. Levesque. </author> <title> An Essential Hybrid Reasoning System: Knowledge and Symbol Level Accounts of KRYPTON. </title> <booktitle> Proceedings IJCAI-85, </booktitle> <volume> 1 </volume> <pages> 532-539, </pages> <year> 1985. </year>
Reference-contexts: FDLs can represent the descriptions: every boy and a girl in a terminological component and the loves predicate a assertional component that is typically first-order-logic based. This is what is done in the KRYPTON system <ref> [ Brachman et al., 1983; Brachman et al., 1985 ] </ref> . Certainly, these represent productive attempts to address the motivation of natural form (among other motivations). <p> These concepts are then used to restrict suitably variables in the theorem prover. One representative system is the work of Brachman with KRYPTON <ref> [ Brachman et al., 1983; Brachman et al., 1985 ] </ref> . KRYPTON is a KR system that supports (and separates) two kinds of knowledge: terminological (in the TBox) and assertional (in the ABox).
Reference: [ Brachman, 1979 ] <author> Ronald J. Brachman. </author> <title> On the Epistemological Status of Semantic Networks. </title> <editor> In N. V. Findler, editor, </editor> <title> Associative Networks: Representation and Use of Knowledge in Computers. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: Collections of logical formulas do not seem to capture the intuitive use of concepts by people. This representation for knowledge is unstructured and disorganized. What is missing is that first-order predicate logic does not provide any special assistance in the problem of what Brachman called "knowledge structuring" <ref> [ Brachman, 1979 ] </ref> . That is, the specification of the internal structure of concepts in terms of roles and relations between them as well as the subsumption and inheritance relationships between concepts. Attempts to incorporate knowledge-structuring into the representation language are typified by frames, or frame description languages.
Reference: [ Cercone et al., 1992 ] <author> Nick Cercone, Randy Goebel, John De Haan, and Stephanie Scha-effer. </author> <title> The ECO Family. </title> <journal> Computers and Mathematics with Applications, </journal> <volume> 23(5) </volume> <pages> 95-131, </pages> <year> 1992. </year> <booktitle> Special issue on Semantic Networks in Artificial Intelligence (Part 1). </booktitle>
Reference-contexts: The work suggests that restrictions on variables can be complex (in much the same manner as our research); however, Webber's syntax and semantics are informally presented, and the utility of the logic to the problems addressed in our research is unclear. 28 In the work of Schubert et al. <ref> [ Schubert et al., 1979; Cercone et al., 1992 ] </ref> , which uses a semantic-network-based formalism (lately named ECO), variables are atomic nodes in the network. Type (and other) restrictions are specified by links to the variable nodes. There are no explicit universal or existential quantifiers.
Reference: [ Cho, 1992 ] <author> Sung-Hye Cho. </author> <title> Collections as Intensional Entities and Their Representations in a Semantic Network. </title> <booktitle> In Proceedings of the Second Pacific Rim International Conference on Artificial Intelligence, </booktitle> <pages> pages 388-394, </pages> <year> 1992. </year>
Reference-contexts: This should not be seen as a major shortcoming of this representation as several solutions to the problem are possible. Partitioned semantic networks [ Hendrix, 1977; Hendrix, 1979 ] or a representation for collections <ref> [ Cho, 1992; Franconi, 1993 ] </ref> would allow the representation of all possible quantifier scopings. This issue is discussed in more detail 52 in Chapter 5. 4.4.1 Branching Quantifiers The dependency arcs associated with structured variables form a partial ordering of variables in a formula. <p> This should not be seen as a major shortcoming of this representation as several solutions to the problem are possible. Partitioned semantic networks [ Hendrix, 1977; Hendrix, 1979 ] or a representation for collections <ref> [ Cho, 1992; Cho, 1994 ] </ref> would allow the representation of all possible quantifier scopings. The representations of [ Cho, 1994 ] illustrate how the collective scope readings can be expressed in ANALOG. <p> The current system contains no facility for dealing with these sorts of quantifier scoping. However, the work here is entirely compatible with possible extensions to support reasoning about and using collections <ref> [ Cho, 1992; Franconi, 1993 ] </ref> . The specification of the subsumption and matching procedures would have to be augmented to account for the use of collective terms. As an example, a straightforward extension of the subsumption procedure is to allow subsumption between a collection and any of its subcollections.
Reference: [ Cho, 1994 ] <author> Sung-Hye Cho. </author> <title> Representations of and Reasoning about Collections. </title> <type> PhD thesis, </type> <institution> State University of New York at Buffalo/Computer Science, </institution> <address> Amherst, NY 14260, </address> <year> 1994. </year> <month> Forthcoming. </month>
Reference-contexts: This should not be seen as a major shortcoming of this representation as several solutions to the problem are possible. Partitioned semantic networks [ Hendrix, 1977; Hendrix, 1979 ] or a representation for collections <ref> [ Cho, 1992; Cho, 1994 ] </ref> would allow the representation of all possible quantifier scopings. The representations of [ Cho, 1994 ] illustrate how the collective scope readings can be expressed in ANALOG. <p> Partitioned semantic networks [ Hendrix, 1977; Hendrix, 1979 ] or a representation for collections [ Cho, 1992; Cho, 1994 ] would allow the representation of all possible quantifier scopings. The representations of <ref> [ Cho, 1994 ] </ref> illustrate how the collective scope readings can be expressed in ANALOG. Cho introduces a case frame for atomic collections: f&lt;NecAndSuf; fvg&gt;g where v is a structured variable whose restrictions specify necessary and sufficient conditions on members of this collection. <p> Thus, with this augmentation ANALOG can represent narrow scope readings. The semantics of such collections, however, are not clear (i. e., what subcollection of those papers is still a dissertation?) and are dealt with in <ref> [ Cho, 1994 ] </ref> . In general, an implication whose antecedent and consequent share structured variables is equivalent to a "flat" proposition without the antecedent-consequent rule structure (see Section 5.4.1). In Figure 5.7, a generic antecedent-consequent rule and its propositional form is shown.
Reference: [ Choi and Shapiro, 1991 ] <author> Joongmin Choi and Stuart C. Shapiro. </author> <title> Experience-based deductive learning. </title> <booktitle> In Third International Conference on Tools for Artificial Intelligence TAI '91, </booktitle> <pages> pages 502-503. </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> CA, </address> <year> 1991. </year>
Reference: [ Choi and Shapiro, 1992 ] <author> Joongmin Choi and Stuart C. Shapiro. </author> <title> Efficient implementation of non-standard connectives and quantifiers in deductive reasoning systems. </title> <booktitle> In 118 Proceedings of the Twenty-Fifth Hawaii International Conference on System Sciences, </booktitle> <pages> pages 381-390. </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> CA, </address> <year> 1992. </year>
Reference: [ Dowty et al., 1981 ] <author> David R. Dowty, Robert E. Wall, and Stanley Peters. </author> <title> Introduction to Montague Semantics. </title> <address> D. </address> <publisher> Reidel Publishing Co., </publisher> <address> Boston, </address> <year> 1981. </year>
Reference-contexts: The research described here could be the underlying 32 formal system for DRT with appropriate re-formulation of their construction rules. An important philosophically motivated attempt to represent the semantics of natural language is Montague grammar <ref> [ Dowty et al., 1981; Montague, 1973; Montague, 1974 ] </ref> . Montague grammar is a theory of natural language in that it is a complete formal specification of the syntax, semantics, and knowledge representation for natural language understanding.
Reference: [ Fahlman, 1979 ] <author> Scott E. Fahlman. </author> <title> NETL: A System for Representing and Using Real-World Knowledge. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1979. </year>
Reference-contexts: Thus, it formed a natural starting point for new work. The work presented here builds on SNePS, by augmenting it to address our concerns, and so we defer discussion of SNePS's salient features until Chapters 4 and 5, where they are discussed at length. Fred Fahlman's <ref> [ Fahlman, 1979 ] </ref> work specified two representations for variables. The first representation is as a *TYPE-node that represents the "typical-member" of a set. This approach suffers from the typical inheritance problems (what Fahlman calls the "copy-confusion" problem) associated with such representations [ Shapiro, 1980 ] .
Reference: [ Fauconnier, 1975 ] <author> G. Fauconnier. </author> <title> Do Quantifiers Branch. </title> <journal> Linguistic Inquiry, </journal> <volume> 6(4) </volume> <pages> 555-578, </pages> <year> 1975. </year>
Reference-contexts: Additionally, we would like to account for some of the traditionally difficult (for FOPL) types of scoping associated with natural language sentences, described below. 2.3.1 Branching Quantifiers There is a class of natural language sentences that are not expressible in any linear notation <ref> [ Quine, 1969; Quine, 1970; Fauconnier, 1975; Barwise, 1979 ] </ref> . These sentences require a nonlinear quantifier prefix. An example is: (1) Some relative of each villager and some relative of each townsman hate each other.
Reference: [ Fine, 1983 ] <author> Kit Fine. </author> <title> A Defense of Arbitrary Objects. </title> <booktitle> In Proceedings of the Aristotelian Society, volume supp. LVII, </booktitle> <pages> pages 55-77, </pages> <year> 1983. </year>
Reference-contexts: His use of monotonicity for generalized quantifiers in his language parallels our use of subsumption, described later, although we allow for 34 derived subsumption and he does not. Another philosophically motivated attempt to represent variables is the work of Fine <ref> [ Fine, 1983; Fine, 1985a; Fine, 1985b ] </ref> . He suggests augmenting the ontology of classical models to include arbitrary objects. These arbitrary objects resemble structured variables in that they may have complex constraints on the individual objects in their range. <p> We augment that logic further with arbitrary individuals (for the semantics of structured variables) as defined in the semantic theory of <ref> [ Fine, 1983; Fine, 1985a; Fine, 1985b ] </ref> . We provide the semantics for nodes and case frames as needed. 5.1.2 The Domain of Interpretation ANALOG nodes are terms of a formal language. The interpretation of a node, called an entity, is an object in the domain of interpretation.
Reference: [ Fine, 1985a ] <author> Kit Fine. </author> <title> Natural Deduction and Arbitrary Objects. </title> <journal> Journal of Philosophical Logic, </journal> <volume> 14 </volume> <pages> 57-107, </pages> <year> 1985. </year>
Reference-contexts: His use of monotonicity for generalized quantifiers in his language parallels our use of subsumption, described later, although we allow for 34 derived subsumption and he does not. Another philosophically motivated attempt to represent variables is the work of Fine <ref> [ Fine, 1983; Fine, 1985a; Fine, 1985b ] </ref> . He suggests augmenting the ontology of classical models to include arbitrary objects. These arbitrary objects resemble structured variables in that they may have complex constraints on the individual objects in their range. <p> We augment that logic further with arbitrary individuals (for the semantics of structured variables) as defined in the semantic theory of <ref> [ Fine, 1983; Fine, 1985a; Fine, 1985b ] </ref> . We provide the semantics for nodes and case frames as needed. 5.1.2 The Domain of Interpretation ANALOG nodes are terms of a formal language. The interpretation of a node, called an entity, is an object in the domain of interpretation.
Reference: [ Fine, 1985b ] <author> Kit Fine. </author> <title> Reasoning with Arbitrary Objects. </title> <publisher> Basil Blackwell, Oxford, </publisher> <year> 1985. </year>
Reference-contexts: His use of monotonicity for generalized quantifiers in his language parallels our use of subsumption, described later, although we allow for 34 derived subsumption and he does not. Another philosophically motivated attempt to represent variables is the work of Fine <ref> [ Fine, 1983; Fine, 1985a; Fine, 1985b ] </ref> . He suggests augmenting the ontology of classical models to include arbitrary objects. These arbitrary objects resemble structured variables in that they may have complex constraints on the individual objects in their range. <p> We augment that logic further with arbitrary individuals (for the semantics of structured variables) as defined in the semantic theory of <ref> [ Fine, 1983; Fine, 1985a; Fine, 1985b ] </ref> . We provide the semantics for nodes and case frames as needed. 5.1.2 The Domain of Interpretation ANALOG nodes are terms of a formal language. The interpretation of a node, called an entity, is an object in the domain of interpretation.
Reference: [ Franconi, 1993 ] <author> Enrico Franconi. </author> <title> A Treatment of Plurals and Plural Quantifications Based on a Theory of Collections. </title> <journal> Minds and Machines, </journal> <volume> 3(4), </volume> <month> November </month> <year> 1993. </year> <title> Special Issue on Knowledge Representation for Natural Language Processing. </title> <note> To appear. </note>
Reference-contexts: This should not be seen as a major shortcoming of this representation as several solutions to the problem are possible. Partitioned semantic networks [ Hendrix, 1977; Hendrix, 1979 ] or a representation for collections <ref> [ Cho, 1992; Franconi, 1993 ] </ref> would allow the representation of all possible quantifier scopings. This issue is discussed in more detail 52 in Chapter 5. 4.4.1 Branching Quantifiers The dependency arcs associated with structured variables form a partial ordering of variables in a formula. <p> The current system contains no facility for dealing with these sorts of quantifier scoping. However, the work here is entirely compatible with possible extensions to support reasoning about and using collections <ref> [ Cho, 1992; Franconi, 1993 ] </ref> . The specification of the subsumption and matching procedures would have to be augmented to account for the use of collective terms. As an example, a straightforward extension of the subsumption procedure is to allow subsumption between a collection and any of its subcollections.
Reference: [ Geach, 1962 ] <author> Peter Thomas Geach. </author> <title> Reference and Generality. </title> <publisher> Cornell University Press, </publisher> <address> Ithaca, New York, </address> <year> 1962. </year>
Reference-contexts: other. 9P 9Q 8x 8z [(villager (x) ^ townsman (z)) ) (relative (x; P (x)) ^ relative (z; Q (z)) ^ hates (P (x); Q (z)))] of each townsman hate each other. 2.3.2 Donkey Sentences Another class of sentences that are difficult for first-order logics are the so-called donkey sentences <ref> [ Geach, 1962 ] </ref> .
Reference: [ Givan et al., 1991 ] <author> Robert Givan, David A. McAllester, and Sameer Shalaby. </author> <title> Natural Language Based Inference Procedures Applied to Schubert's Steamroller. </title> <booktitle> In Proceedings of AAAI-91, </booktitle> <pages> pages 915-920, </pages> <year> 1991. </year>
Reference-contexts: In principle, one could represent natural language in Ontic; however, the type system would have to be enriched, and it would still suffer from the disadvantages outlined for KRYPTON. In later work, McAllester has addressed natural language issues explicitly <ref> [ Givan et al., 1991; McAllester and Givan, 1992 ] </ref> . They argue that the syntactic form of language may be a source of inferentially powerful syntax, corresponding to our notion of the natural form constraint.
Reference: [ Grosz and Sidner, 1986 ] <author> B. J. Grosz and C. L. Sidner. </author> <title> Attention, intentions, and the structure of discourse. </title> <journal> Computational Linquistics, </journal> <volume> 12 </volume> <pages> 175-204, </pages> <year> 1986. </year>
Reference-contexts: An interesting question associated with augmenting this work with a discourse model is whether it facilitates the task of maintaining a discourse model. In terms of the tripartite structure of <ref> [ Grosz and Sidner, 1986 ] </ref> , we provide two of their three components: the linguistic structure and the attentional structure. It is not clear, however, how to extend this work to account for their third component, the intentional structure of discourse.
Reference: [ Haller and Ali, 1990 ] <author> Susan M. Haller and Syed S. Ali. </author> <title> Using Focus for Generating Felicitous Locative Expressions. </title> <booktitle> In Proceedings of the Third International Conference on Industrial and Engineering Applications of Artificial Intelligence, </booktitle> <pages> pages 472-477. </pages> <publisher> ACM, </publisher> <year> 1990. </year>
Reference-contexts: We do not, however, provide any well-motivated means to process connected text and determine when terms are being re-used; i. e., we have no discourse model. However, our prior work in generating felicitous descriptions <ref> [ Haller and Ali, 1990 ] </ref> suggests that structured variables are a practical representation for discourse models that use focus lists.
Reference: [ Haller, 1993 ] <author> S. M. Haller. </author> <title> Interactive generation of plan justifications. </title> <booktitle> In Proceedings of the Fourth European Workshop on Natural Language Generation, </booktitle> <pages> pages 79-90, </pages> <year> 1993. </year>
Reference: [ Haller, 1994 ] <author> S. M. Haller. </author> <title> Interactive Generation of Plan Descriptions and Justifications. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, State University of New York at Buffalo, </institution> <year> 1994. </year> <note> In progress. </note>
Reference-contexts: It is not clear, however, how to extend this work to account for their third component, the intentional structure of discourse. Haller <ref> [ Haller, 1994 ] </ref> is extending the SNePS system (which this work augments) to account for this, arguing that this work will facilitate discourse modelling. 112 7.3.5 Distributed Inference The current implementation of inference, while quite powerful, is largely subsumption inference-based.
Reference: [ Halvorsen, 1986 ] <author> Per-Kristian Halvorsen. </author> <title> Natural Language Understanding and Mon-tague Grammar. </title> <journal> Computational Intelligence, </journal> <volume> 2 </volume> <pages> 54-62, </pages> <year> 1986. </year>
Reference-contexts: For instance, we do not provide a theory for processing natural language into representations. However, as a compositional semantic theory based on a higher-order intensional logic, it provides no inherent facility for the description of discourse relations and anaphoric connections <ref> [ Halvorsen, 1986 ] </ref> . Further, it suffers from the same, previously discussed, problems that all logic-based variable representations do. Montague grammar is significant because it provides strong evidence that the syntax of natural language sentences can itself aid the processing and representational task.
Reference: [ Heim, 1990 ] <author> Irene Heim. </author> <title> Discourse Representation Theory, 1990. Tutorial material from ACL-90. </title>
Reference-contexts: In some of them, it had just been installed. Every chess set comes with a spare pawn. It is taped to the top of the box. (examples from <ref> [ Heim, 1990 ] </ref> ). The structures that are being shared in these sentences are the variables corresponding to the italicized noun phrases. Logical repre 13 sentations can only model this "sharing" by combining multiple sentences of natural language into one sentence of logic. <p> In some of them it had just been installed. Every chess set comes with a spare pawn. It is taped to the top of the box. (examples from Heim <ref> [ Heim, 1990 ] </ref> ). Thus these examples cannot actually be mapped into their representations (which may exist) in a way that is consistent with the theory. As DRT is primarily a theory of discourse these objections, springing from knowledge representation goals, are not serious.
Reference: [ Hendrix, 1977 ] <author> Gary G. Hendrix. </author> <title> Expanding the Utility of Semantic Networks through Partitioning. </title> <booktitle> Proc. 4th IJCAI, </booktitle> <year> 1977. </year>
Reference-contexts: The approach is similar to that of Hendrix's partitioned semantic networks but provides computational rules for processing discourse <ref> [ Hendrix, 1977; Hendrix, 1979 ] </ref> . <p> This should not be seen as a major shortcoming of this representation as several solutions to the problem are possible. Partitioned semantic networks <ref> [ Hendrix, 1977; Hendrix, 1979 ] </ref> or a representation for collections [ Cho, 1992; Franconi, 1993 ] would allow the representation of all possible quantifier scopings. <p> This should not be seen as a major shortcoming of this representation as several solutions to the problem are possible. Partitioned semantic networks <ref> [ Hendrix, 1977; Hendrix, 1979 ] </ref> or a representation for collections [ Cho, 1992; Cho, 1994 ] would allow the representation of all possible quantifier scopings. The representations of [ Cho, 1994 ] illustrate how the collective scope readings can be expressed in ANALOG.
Reference: [ Hendrix, 1979 ] <author> Gary G. Hendrix. </author> <title> Encoding Knowledge in Partitioned Networks. </title> <editor> In N. V. Findler, editor, </editor> <booktitle> Associative Networks: The Representation and Use of Knowledge in Computers., </booktitle> <pages> pages 51-92. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: The approach is similar to that of Hendrix's partitioned semantic networks but provides computational rules for processing discourse <ref> [ Hendrix, 1977; Hendrix, 1979 ] </ref> . <p> This should not be seen as a major shortcoming of this representation as several solutions to the problem are possible. Partitioned semantic networks <ref> [ Hendrix, 1977; Hendrix, 1979 ] </ref> or a representation for collections [ Cho, 1992; Franconi, 1993 ] would allow the representation of all possible quantifier scopings. <p> This should not be seen as a major shortcoming of this representation as several solutions to the problem are possible. Partitioned semantic networks <ref> [ Hendrix, 1977; Hendrix, 1979 ] </ref> or a representation for collections [ Cho, 1992; Cho, 1994 ] would allow the representation of all possible quantifier scopings. The representations of [ Cho, 1994 ] illustrate how the collective scope readings can be expressed in ANALOG.
Reference: [ Henkin, 1961 ] <author> L. </author> <title> Henkin. Some Remarks on Infinitely Long Formulas. </title> <booktitle> In Infinitistic Methods, </booktitle> <pages> pages 167-183. </pages> <publisher> Pergamon Press, Oxford, </publisher> <year> 1961. </year>
Reference-contexts: Examples of these types of quantifiers are called branching quantifiers, because expression of their scoping requires a tree-like notation (the Henkin prefix <ref> [ Henkin, 1961 ] </ref> ). For example, (1) could be expressed as in Figure 2.3. Using this augmentation to the logical language, the expression of all partial orderings of quantifiers is possible.
Reference: [ Hobbs and Shieber, 1987 ] <author> J. R. Hobbs and S. M. Shieber. </author> <title> An Algorithm for Generating Quantifier Scopings. </title> <booktitle> Computational Linguistics, </booktitle> <address> 13(1-2):47-63, </address> <year> 1987. </year>
Reference: [ Hull, 1986 ] <author> R. G. Hull. </author> <title> A New Design for SNIP the SNePS Inference Package. </title> <type> SNeRG Technical Note 14, </type> <institution> Department of Computer Science, SUNY at Buffalo, </institution> <year> 1986. </year>
Reference: [ Kamp, 1984 ] <author> Hans Kamp. </author> <title> A Theory of Truth and Semantic Representation. </title> <editor> In Jeroen Groenendijk, Theo M. V. Janssen, and Martin Stokhof, editors, Truth, </editor> <booktitle> Interpretation and Information, </booktitle> <pages> pages 1-41. </pages> <address> Forbis, Cinnaminson, </address> <year> 1984. </year>
Reference-contexts: We will provide a semantics embedded in predicate logic based on Fine's generic semantics for structured variables. 31 An alternative atomic variable representation theory is that of Discourse Representa--tion Theory, due to Kamp <ref> [ Kamp, 1984 ] </ref> . DRT is a semantic theory that (among other things) accords indefinite noun phrases the status of referential terms rather than the standard quantified variables, and accords definite noun phrases the status of anaphoric terms.
Reference: [ Kumar et al., 1988 ] <author> Deepak Kumar, Syed Ali, and Stuart C. Shapiro. </author> <title> Discussing, using and recognizing plans in SNePS preliminary report|SNACTor: An acting system. In P V S Rao and P Sadanandan, </title> <editor> editors, </editor> <booktitle> Modern Trends in Information Technology: 120 Proceedings of the Seventh Biennial Convention of South East Asia Regional Computer Confederation, </booktitle> <pages> pages 177-182. </pages> <publisher> Tata McGraw-Hill, </publisher> <address> New Delhi, India, </address> <year> 1988. </year>
Reference-contexts: This sentence is from an actual NLP system that discusses, uses and recognizes plans <ref> [ Kumar et al., 1988; Shapiro et al., 1989 ] </ref> .
Reference: [ Levesque, 1986 ] <author> Hector J. Levesque. </author> <title> Knowledge Representation and Reasoning. </title> <editor> In Joseph F. Traub, editor, </editor> <booktitle> Annual Review of Computer Science, </booktitle> <volume> volume 1, </volume> <pages> pages 255-287. </pages> <publisher> Annual Reviews Inc., </publisher> <address> Palo Alto, CA, </address> <year> 1986. </year>
Reference-contexts: In retrospect, a good proportion of this research can be seen as the search for useful compromises between expressive power, on the one hand, and tractability of reasoning, on the other. <ref> [ Levesque, 1986 ] </ref> A useful test of any augmentation of a KR system is the extent to which that augmentation compromises the ability of the system to do inference.
Reference: [ Lloyd, 1987 ] <author> J. W. Lloyd. </author> <title> Foundations of Logic Programming. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1987. </year> <note> 2nd Ed. </note>
Reference-contexts: Definition 23: The predicate occurs-in (x; y), where x is a variable, is defined as follows: occurs-in (x; y) () dominate (y; x): occurs-in is used to perform the standard occurs check of the unification algorithm (and is just a more perspicuous naming of dominate) <ref> [ Lloyd, 1987 ] </ref> . It is needed to rule out x subsuming f (x). In ANALOG, we specify subsumption as a binary relation between arbitrary nodes in the network. We define subsumption between two nodes x and y in Figure 5.3.
Reference: [ MacGregor, 1988 ] <author> Robert MacGregor. </author> <title> A deductive pattern matcher. </title> <booktitle> In Proceedings of AAAI-88, The National Conference on Artificial Intelligence, </booktitle> <pages> pages 403-408, </pages> <address> St. Paul, MINN, </address> <month> August </month> <year> 1988. </year> <note> AAAI. </note>
Reference-contexts: As we shall show, our system make no distinction between the two components, everything is terminological, and a propositions belief status is the only assertional operator. A class of systems that attempts to rectify these difficulties are the systems based on "description logic" <ref> [ MacGregor, 1988; Peltason, 1991 ] </ref> . All these systems, like KRYPTON, are descendents of KL-ONE and feature separate assertional and terminological components. The LOOM KR system is a representative example [ MacGregor, 1991 ] .
Reference: [ MacGregor, 1991 ] <author> Robert MacGregor. </author> <title> Inside the LOOM description classifier. </title> <journal> SIGART Bulletin, </journal> <volume> 2(3) </volume> <pages> 88-92, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: A class of systems that attempts to rectify these difficulties are the systems based on "description logic" [ MacGregor, 1988; Peltason, 1991 ] . All these systems, like KRYPTON, are descendents of KL-ONE and feature separate assertional and terminological components. The LOOM KR system is a representative example <ref> [ MacGregor, 1991 ] </ref> . LOOM specifies features for descriptions (which correspond to restrictions on variables) and a 40 description reasoner, called a classifier. The classifier tries to determine the location of descriptions in a description hierarchy in an ongoing and distributed manner.
Reference: [ Maida and Shapiro, 1982 ] <author> A. S. Maida and S. C. Shapiro. </author> <title> Intensional concepts in propositional semantic networks. </title> <journal> Cognitive Science, </journal> <volume> 6(4) </volume> <pages> 291-330, </pages> <year> 1982. </year> <note> Reprinted in R. </note> <editor> J. Brachman and H. J. Levesque, eds. </editor> <booktitle> Readings in Knowledge Representation, </booktitle> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, CA, </address> <year> 1985, </year> <pages> 170-189. </pages>
Reference-contexts: network is represented by a node; 3) each concept represented in the network is represented by a unique node; 4) arcs represent non-conceptual binary relations between nodes; 5) the knowledge represented about each concept is represented by the structure of the entire network connected to the node representing the concept <ref> [ Maida and Shapiro, 1982 ] </ref> . Propositional information is represented by nodes and not arcs, so SNePS is a propositional semantic network. Since the formalism associated with ANALOG builds on SNePS, we make use of some of these same ideas.
Reference: [ McAllester and Givan, 1992 ] <author> David A. McAllester and Robert Givan. </author> <title> Natural Language Syntax and First-order Inference. </title> <journal> Artificial Intelligence, </journal> <volume> 56(1) </volume> <pages> 1-20, </pages> <year> 1992. </year>
Reference-contexts: In principle, one could represent natural language in Ontic; however, the type system would have to be enriched, and it would still suffer from the disadvantages outlined for KRYPTON. In later work, McAllester has addressed natural language issues explicitly <ref> [ Givan et al., 1991; McAllester and Givan, 1992 ] </ref> . They argue that the syntactic form of language may be a source of inferentially powerful syntax, corresponding to our notion of the natural form constraint.
Reference: [ McAllester, 1989 ] <author> David A. McAllester. Ontic: </author> <title> A Knowledge Representation System for Mathematics. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1989. </year>
Reference-contexts: In particular, the language of first-order predicate logic is not the best choice of representation languages (it is probably better suited to a mathematical domain; see <ref> [ McAllester, 1989 ] </ref> for a good example). If we contrast the various goals of researchers in the domains for which these kinds of knowledge are to be used, we may come to the conclusion that the goals differ significantly and, indeed, may conflict. <p> Additionally, branching quantifiers cannot be represented at all. However, because the subsumption mechanism is geared to natural language it may perform better than a general-purpose reasoner, such as the work here proposes. The Ontic system <ref> [ McAllester, 1989 ] </ref> also provides the ability to define structured variables using a combination of type expressions and functions that reify these types into sets. Ontic is a system for verifying mathematical arguments, and, as such, the selection of type expressions and functions is limited to the mathematical domain.
Reference: [ McCarthy, 1980 ] <author> John McCarthy. </author> <title> Circumscription|A Form of Non-monotonic Reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 13(1,2):27-39, </volume> <year> 1980. </year>
Reference-contexts: A fruitful path towards a more natural logic (and one that is compatible with our work) is that of the nonmonotonic logics <ref> [ McCarthy, 1980; McDermott and Doyle, 1980; Reiter, 1980 ] </ref> . These logics attempt to make the reasoning process more "natural" and generally more tractable. They are augmentations of first-order logics that allow processes such as default reasoning and circumscription in inference.
Reference: [ McDermott and Doyle, 1980 ] <author> D. McDermott and D. Doyle. </author> <title> Nonmonotic Logic. </title> <journal> Artificial Intelligence, </journal> <volume> 13(1,2):41-72, </volume> <year> 1980. </year>
Reference-contexts: A fruitful path towards a more natural logic (and one that is compatible with our work) is that of the nonmonotonic logics <ref> [ McCarthy, 1980; McDermott and Doyle, 1980; Reiter, 1980 ] </ref> . These logics attempt to make the reasoning process more "natural" and generally more tractable. They are augmentations of first-order logics that allow processes such as default reasoning and circumscription in inference.
Reference: [ Montague, 1973 ] <author> Richard Montague. </author> <title> The Proper Treatment of Quantification in Ordinary English. </title> <editor> In J. Hintikka, J. Moravcsik, and P. Suppes, editors, </editor> <booktitle> Approaches to Natural Language, </booktitle> <pages> pages 221-242. </pages> <publisher> Reidel, </publisher> <address> Dordrecht, </address> <year> 1973. </year> <note> Also in R. Montague, </note> <year> 1974, </year> <title> 121 Formal Philosophy: Selected Papers of Richard Montague, </title> <editor> ed. by Richard Thomason, </editor> <address> New Haven: </address> <publisher> Yale University Press. </publisher>
Reference-contexts: The research described here could be the underlying 32 formal system for DRT with appropriate re-formulation of their construction rules. An important philosophically motivated attempt to represent the semantics of natural language is Montague grammar <ref> [ Dowty et al., 1981; Montague, 1973; Montague, 1974 ] </ref> . Montague grammar is a theory of natural language in that it is a complete formal specification of the syntax, semantics, and knowledge representation for natural language understanding.
Reference: [ Montague, 1974 ] <author> Richard Montague. </author> <title> English as a Formal Language. </title> <editor> In Richmond H. Thomason, editor, </editor> <booktitle> Formal Philosophy, </booktitle> <pages> pages 188-221. </pages> <publisher> Yale University Press, </publisher> <year> 1974. </year>
Reference-contexts: The research described here could be the underlying 32 formal system for DRT with appropriate re-formulation of their construction rules. An important philosophically motivated attempt to represent the semantics of natural language is Montague grammar <ref> [ Dowty et al., 1981; Montague, 1973; Montague, 1974 ] </ref> . Montague grammar is a theory of natural language in that it is a complete formal specification of the syntax, semantics, and knowledge representation for natural language understanding.
Reference: [ Peltason, 1991 ] <author> Christof Peltason. </author> <title> The back system an overview. </title> <journal> SIGART Bulletin, </journal> <volume> 2(3) </volume> <pages> 114-119, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: As we shall show, our system make no distinction between the two components, everything is terminological, and a propositions belief status is the only assertional operator. A class of systems that attempts to rectify these difficulties are the systems based on "description logic" <ref> [ MacGregor, 1988; Peltason, 1991 ] </ref> . All these systems, like KRYPTON, are descendents of KL-ONE and feature separate assertional and terminological components. The LOOM KR system is a representative example [ MacGregor, 1991 ] .
Reference: [ Purdy, 1991a ] <author> William C. Purdy. </author> <title> A Logic for Natural Language. </title> <journal> Notre Dame Journal of Formal Logic, </journal> <volume> 32(3) </volume> <pages> 409-425, </pages> <year> 1991. </year>
Reference-contexts: There is one category of logics for natural language that is missing from our enumeration, namely a logic without variables. While it may seem counter-intuitive that such a system could be appropriate for the task we are addressing, the work of <ref> [ Purdy, 1991a; Purdy, 1991b ] </ref> attempts to do so. Purdy describes a logical language (which makes use of Barwise and Cooper's work with generalized quantifiers) whose structure mirrors natural language. The language has no variables or individual constants; instead, singular predicates serve in this role.
Reference: [ Purdy, 1991b ] <author> William C. Purdy. </author> <title> Surface Reasoning. </title> <journal> Notre Dame Journal of Formal Logic, </journal> <volume> 33(1) </volume> <pages> 13-36, </pages> <year> 1991. </year>
Reference-contexts: There is one category of logics for natural language that is missing from our enumeration, namely a logic without variables. While it may seem counter-intuitive that such a system could be appropriate for the task we are addressing, the work of <ref> [ Purdy, 1991a; Purdy, 1991b ] </ref> attempts to do so. Purdy describes a logical language (which makes use of Barwise and Cooper's work with generalized quantifiers) whose structure mirrors natural language. The language has no variables or individual constants; instead, singular predicates serve in this role.
Reference: [ Quine, 1969 ] <author> W. V. Quine. </author> <title> Ontological Relativity and Other Essays. </title> <publisher> Columbia University Press, </publisher> <address> London and New York, </address> <year> 1969. </year>
Reference-contexts: Additionally, we would like to account for some of the traditionally difficult (for FOPL) types of scoping associated with natural language sentences, described below. 2.3.1 Branching Quantifiers There is a class of natural language sentences that are not expressible in any linear notation <ref> [ Quine, 1969; Quine, 1970; Fauconnier, 1975; Barwise, 1979 ] </ref> . These sentences require a nonlinear quantifier prefix. An example is: (1) Some relative of each villager and some relative of each townsman hate each other.
Reference: [ Quine, 1970 ] <author> W. V. Quine. </author> <title> Philosophy of Logic. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1970. </year>
Reference-contexts: Additionally, we would like to account for some of the traditionally difficult (for FOPL) types of scoping associated with natural language sentences, described below. 2.3.1 Branching Quantifiers There is a class of natural language sentences that are not expressible in any linear notation <ref> [ Quine, 1969; Quine, 1970; Fauconnier, 1975; Barwise, 1979 ] </ref> . These sentences require a nonlinear quantifier prefix. An example is: (1) Some relative of each villager and some relative of each townsman hate each other.
Reference: [ Rapaport, 1988 ] <author> W. J. Rapaport. </author> <title> Syntactic semantics: Foundations of computational natural-language understanding. </title> <editor> In J. Fetzer, editor, </editor> <booktitle> Aspects of Artificial Intelligence, </booktitle> <pages> pages 81-131. </pages> <publisher> Kluwer Academic Publishers, Dordrecht, Holland, </publisher> <year> 1988. </year>
Reference-contexts: To connect objects of mind to extensional objects in the world, ANALOG uses a case frame with a lex arc from the intensional object to its extension. Additionally, sensory nodes can also make this connection to the external world <ref> [ Shapiro and Rapaport, 1987; Rapaport, 1988 ] </ref> . 5.2.2 The Uniqueness Principle No two nodes in the network represent the same individual, proposition, or rule.
Reference: [ Rapaport, 1991 ] <author> William J. Rapaport. </author> <title> Predication, fiction, </title> <journal> and artificial intelligence. Topoi, </journal> <volume> 10 </volume> <pages> 79-111, </pages> <year> 1991. </year>
Reference-contexts: The ANALOG formalism extends the work to deal with 66 quantified sentences and variables corresponding to an extended first-order logic. The intensional representation, uniqueness principle, and some of the case frame semantics are described more completely in <ref> [ Shapiro and Rapaport, 1987; Rapaport, 1991 ] </ref> . 5.2.1 Intensional Representation For the purposes of modeling a cognitive agent's beliefs and concepts it is necessary to be able to represent intensional rather than extensional entities.
Reference: [ Reiter, 1980 ] <author> R. Reiter. </author> <title> A Logic for Default Reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 13(1,2):81-132, </volume> <year> 1980. </year>
Reference-contexts: A fruitful path towards a more natural logic (and one that is compatible with our work) is that of the nonmonotonic logics <ref> [ McCarthy, 1980; McDermott and Doyle, 1980; Reiter, 1980 ] </ref> . These logics attempt to make the reasoning process more "natural" and generally more tractable. They are augmentations of first-order logics that allow processes such as default reasoning and circumscription in inference.
Reference: [ Rich, 1991 ] <author> Charles Rich, </author> <title> editor. </title> <journal> Special Issue on Inplemented Knowledge Representation and Reasoning Systems, </journal> <volume> volume 2. </volume> <publisher> ACM Press, </publisher> <month> June </month> <year> 1991. </year> <journal> SIGART Bulletin. </journal>
Reference-contexts: Thus, the task of representing and using mathematical, commonsense, visual, language-based, and logical knowledge is "lumped" together under the rubric of KRR (for examples of the diversity of goals of KRR see <ref> [ Rich, 1991 ] </ref> ). We will argue that, in the task of natural language processing and understanding, language syntax, semantics, and pragmatics imposes constraints on any computational formalism. The task of knowledge representation for natural language processing and understanding is a knowledge-intensive one. <p> To understand a natural language sentence, a natural language processing (NLP) system must, minimally, be able to represent the content of the sentence in the language of representation. For the most part, representation languages have been largely unmotivated with respect to the natural language they may be representing. In <ref> [ Rich, 1991 ] </ref> , only six of the twenty-two KRR systems presented are driven by natural language processing concerns. This lack of concern with the natural language that is being represented is typified by Conceptual Dependency (CD) [ Schank, 1972; 9 Schank and Colby, 1973 ] .
Reference: [ Russell, 1920 ] <author> Bertrand Russell. </author> <title> Introduction to Mathematical Philosophy. </title> <publisher> Macmillan, </publisher> <address> New York, </address> <year> 1920. </year> <month> 122 </month>
Reference-contexts: However, more complex examples where the re-translation process would be more difficult are trivial to construct. For brevity, we use this example and provide more interesting examples later. Clearly, the structure of the representation is unnatural, relative to the original language (but see <ref> [ Russell, 1920 ] </ref> Chapter XVI: Descriptions, for an opposing view). In part, this is caused by the separation of the intrinsic type (and other) constraints from the variables and the introduction of explicit quantifier prefixes.
Reference: [ Schank and Colby, 1973 ] <author> Roger C. Schank and K. Colby. </author> <title> Computer Models of Thought and Language. </title> <publisher> Freeman, </publisher> <address> San Francisco, </address> <year> 1973. </year>
Reference: [ Schank, 1972 ] <author> Roger C. Schank. </author> <title> Conceptual Dependency: A Theory of Natural Language Understanding. </title> <journal> Cognitive Psychology, </journal> <volume> 3(4), </volume> <year> 1972. </year>
Reference-contexts: In [ Rich, 1991 ] , only six of the twenty-two KRR systems presented are driven by natural language processing concerns. This lack of concern with the natural language that is being represented is typified by Conceptual Dependency (CD) <ref> [ Schank, 1972; 9 Schank and Colby, 1973 ] </ref> . In CD, the goal is the representation of a language-independent canonical form corresponding to the "meaning" of a sentence.
Reference: [ Schubert and Pelletier, 1982 ] <author> L. K. Schubert and F. J. Pelletier. </author> <title> From English to Logic: Context-free Computation of Conventional Logical Translation. </title> <journal> American Journal of Computational Linguistics, </journal> <volume> 8 </volume> <pages> 165-176, </pages> <year> 1982. </year> <note> Reprinted (with corrections) in B. </note> <editor> J. Grosz, K. Sparck-Jones and B. L. Webber (eds.), </editor> <booktitle> Readings in Natural Language Processing, </booktitle> <pages> 293-311, </pages> <publisher> Morgan Kaufman, </publisher> <year> 1986. </year>
Reference: [ Schubert et al., 1979 ] <author> Lenhart K. Schubert, Randolph G. Goebel, and Nicholas J. Cer-cone. </author> <title> The Structure and Organization of a Semantic Net for Comprehension and Inference. </title> <editor> In N. V. Findler, editor, </editor> <booktitle> Associative Networks: Representation and Use of Knowledge in Computers, </booktitle> <pages> pages 121-175. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: The work suggests that restrictions on variables can be complex (in much the same manner as our research); however, Webber's syntax and semantics are informally presented, and the utility of the logic to the problems addressed in our research is unclear. 28 In the work of Schubert et al. <ref> [ Schubert et al., 1979; Cercone et al., 1992 ] </ref> , which uses a semantic-network-based formalism (lately named ECO), variables are atomic nodes in the network. Type (and other) restrictions are specified by links to the variable nodes. There are no explicit universal or existential quantifiers.
Reference: [ Shapiro and Rapaport, 1987 ] <author> S. C. Shapiro and W. J. Rapaport. </author> <title> SNePS Considered as a Fully Intensional Propositional Semantic Network. </title> <editor> In N. Cercone and G. McCalla, editors, </editor> <booktitle> The Knowledge Frontier, </booktitle> <pages> pages 263-315. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1987. </year>
Reference-contexts: The problem then becomes how to decide when to combine successive sentences when processing natural language text. Additionally, the resulting representations are overly complex relative to the natural language sentences they represent. This difficulty is even more apparent in propositional semantic network representations. Network Processing System (SNePS) <ref> [ Shapiro and Rapaport, 1987 ] </ref> . The node labelled M1! represents the proposition that a plan for piling three blocks is to put the third block on the table, then put the second block on the first block, followed by putting last block on the second block. <p> The semantics of structured variables is an augmented (by the addition of arbitrary individuals) semantic theory based on [ Fine, 1983; Fine, 1985a; Fine, 1985b; Shapiro and Rapaport, 1987 ] . The representations of sentences, shown as examples in this dissertation, are based on the case frames specified by <ref> [ Shapiro and Rapaport, 1987 ] </ref> augmented with structured variables. It is possible to express these representations in a linear notation (and we do so in Chapter 5). However, the resulting representations are not particularly clear. The pictorial networks used in this chapter are clearer and easier to understand. <p> In this dissertation, examples and representations are used that follow the case frame semantics of <ref> [ Shapiro and Rapaport, 1987 ] </ref> which provides a collection of propositional case frames and their associated semantics based on an extended first-order predicate logic. <p> The ANALOG formalism extends the work to deal with 66 quantified sentences and variables corresponding to an extended first-order logic. The intensional representation, uniqueness principle, and some of the case frame semantics are described more completely in <ref> [ Shapiro and Rapaport, 1987; Rapaport, 1991 ] </ref> . 5.2.1 Intensional Representation For the purposes of modeling a cognitive agent's beliefs and concepts it is necessary to be able to represent intensional rather than extensional entities. <p> To connect objects of mind to extensional objects in the world, ANALOG uses a case frame with a lex arc from the intensional object to its extension. Additionally, sensory nodes can also make this connection to the external world <ref> [ Shapiro and Rapaport, 1987; Rapaport, 1988 ] </ref> . 5.2.2 The Uniqueness Principle No two nodes in the network represent the same individual, proposition, or rule. <p> In this dissertation, examples of representations used will follow the syntax and semantics of <ref> [ Shapiro and Rapaport, 1987 ] </ref> , although we augment their semantics to allow for use of structured variables and subsumption. <p> In <ref> [ Shapiro and Rapaport, 1987 ] </ref> , a variety of non-standard rule case frames are defined. In this dissertation we specify how the rules for instantiation, conjunctive implication, and disjunctive implication may be used.
Reference: [ Shapiro and Rapaport, 1991 ] <author> Stuart C. Shapiro and William J. Rapaport. </author> <title> Models and minds: Knowledge representation for natural-language competence. </title> <editor> In Robert Cummins and John Pollock, editors, </editor> <booktitle> Philosophy and AI: Essays at the Interface, </booktitle> <pages> pages 215-259. </pages> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1991. </year>
Reference-contexts: It is useful for discussing the semantics of ANALOG networks to present them in terms of an "agent" who has beliefs and performs actions. This agent is a computational model of a cognitive agent <ref> [ Shapiro and Rapaport, 1991 ] </ref> . ANALOG relations are labelled directed arcs that connect nodes in the network. Particular collections of ANALOG nodes and relations correspond to case frames which express propositions.
Reference: [ Shapiro and Rapaport, 1992 ] <author> S. C. Shapiro and William J. Rapaport. </author> <title> The SNePS Family. </title> <journal> Computers and Mathematics with Applications, </journal> <volume> 23(5) </volume> <pages> 243-275, </pages> <year> 1992. </year> <booktitle> Special issue on Semantic Networks in Artificial Intelligence (Part 1). </booktitle>
Reference: [ Shapiro et al., 1982 ] <author> S. C. Shapiro, J. Martins, and D. McKay. </author> <title> Bi-directional inference. </title> <booktitle> In Proceedings of the Fourth Annual Conference of the Cognitive Science Society, </booktitle> <pages> pages 90-93, </pages> <address> Ann Arbor, MI, </address> <year> 1982. </year> <institution> the Program in Cognitive Science of The University of Chicago and The University of Michigan. </institution> <month> 123 </month>
Reference-contexts: Additionally, the network representation of some types of sentences (such as the donkey sentence) will reflect the re-use of natural language terms expressed by pronouns and other reduced forms. This has additional advantages for inference as described in Section 5.7.2, allowing a form of bi-directional inference <ref> [ Shapiro et al., 1982 ] </ref> . 5.2.3 Case Frame Semantics ANALOG can support any propositional representations that have a consistent syntax and semantics.
Reference: [ Shapiro et al., 1989 ] <author> S. C. Shapiro, D. Kumar, and S. Ali. </author> <title> A propositional network ap-proach to plans and plan recognition. </title> <booktitle> In Proceedings of the 1988 Workshop on Plan Recognition, </booktitle> <pages> page 21, </pages> <address> Los Altos, CA, 1989. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: This sentence is from an actual NLP system that discusses, uses and recognizes plans <ref> [ Kumar et al., 1988; Shapiro et al., 1989 ] </ref> .
Reference: [ Shapiro et al., 1993 ] <author> S. C. Shapiro, W. J. Rapaport, </author> <title> and the SNePS Research Group. A Dictionary of Case Frames, </title> <note> 1993. In preparation. </note>
Reference-contexts: Note that most of the valid reductions of these propositional case frames follow directly from their semantics. More complex networks may be built by recursive application of these case frames. There are numerous other case frames (for a complete dictionary of them, see <ref> [ Shapiro et al., 1993 ] </ref> ), but we will restrict our examples, in this dissertation, to these for simplicity. 5.3 Subsumption Semantic network formalisms provide "links" that relate more general concepts to more specific concepts; this is called a taxonomy.
Reference: [ Shapiro, 1979 ] <author> S. C. Shapiro. </author> <title> The SNePS semantic network processing system. </title> <editor> In N. V. Findler, editor, </editor> <booktitle> Associative Networks: The Representation and Use of Knowledge by Computers, </booktitle> <pages> pages 179-203. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1979. </year>
Reference: [ Shapiro, 1980 ] <author> S. C. Shapiro. </author> <title> Review of Fahlman, Scott NETL: A system for representing and using real-world knowledge. </title> <journal> American Journal of Computational Linguistics, </journal> <volume> 6(3) </volume> <pages> 183-186, </pages> <year> 1980. </year>
Reference-contexts: Fred Fahlman's [ Fahlman, 1979 ] work specified two representations for variables. The first representation is as a *TYPE-node that represents the "typical-member" of a set. This approach suffers from the typical inheritance problems (what Fahlman calls the "copy-confusion" problem) associated with such representations <ref> [ Shapiro, 1980 ] </ref> . The second representation for variables corresponded to universally quantified nodes called *EVERY-NODEs. Restrictions on these nodes can be general type or relative clause restrictions and are directly linked to the *EVERY-NODE.
Reference: [ Shapiro, 1982a ] <author> S. C. Shapiro. </author> <title> Generalized Augmented Transition Network Grammars for Generation from Semantic Networks. </title> <journal> The American Journal of Computational Linguistics, </journal> <volume> 8(1) </volume> <pages> 12-25, </pages> <year> 1982. </year>
Reference-contexts: In general, there is a direct mapping from natural language quantifying expressions into structured variable representations, since structured variables correspond directly to noun phrases with restrictive relative clause complements. The natural language processing subsystem of ANALOG is based on an interpreter for generalized augmented transition network (GATN) grammars <ref> [ Woods, 1970; Shapiro, 1982a ] </ref> . These are networks of nodes and arcs, similar to finite-state machines, in which arcs are labeled by parts of speech or other GATN network names. <p> We note that portions of this chapter have previously been published in [ Ali, 1993a; Ali, 1993b; Ali and Shapiro, 1993 ] . 6.1 Processing Natural Language A parser/generator is one component of the ANALOG system. A generalized augmented transition network grammar <ref> [ Shapiro, 1982a ] </ref> is used in the natural language demonstrations that follow.
Reference: [ Shapiro, 1982b ] <author> S. C. Shapiro. </author> <title> Generalized augmented transition network grammars for generation from semantic networks. </title> <journal> The American Journal of Computational Linguistics, </journal> <volume> 8(1) </volume> <pages> 12-25, </pages> <year> 1982. </year>
Reference-contexts: At this point, we will attempt to illustrate the utility of the system for natural language processing with specific examples of natural language. 94 ANALOG includes a generalized augmented transition network (GATN) natural lan-guage parser and generation component linked up to the knowledge base (based on <ref> [ Shapiro, 1982b ] </ref> ). A GATN grammar specifies the translation/generation of sentences involving complex noun phrases into/from ANALOG structured variable representations. We present four demonstrations of the NLP component of ANALOG. <p> The grammar is an augmented subset of the grammar of <ref> [ Shapiro, 1982b; Shapiro, 1989 ] </ref> . While the portion of the grammar that parses complex noun phrases with restrictive relative clauses is rather robust, the capability of the system to process general natural language sentences is weak.
Reference: [ Shapiro, 1986 ] <author> S. C. Shapiro. </author> <title> Symmetric relations, intensional individuals, and variable binding. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 74(10) </volume> <pages> 1354-1363, </pages> <year> 1986. </year>
Reference-contexts: Note that the metapredicates Believe and Conceive are, with respect to a 63 particular model: Believe (n) n 2 Conceive (n) n 2 M [ R: However, we will continue to use the metapredicates, as they are more perspicuous. 5.1.6 Reduction We follow <ref> [ Shapiro, 1986; Shapiro, 1991 ] </ref> in arguing for a form of reduction inference as being useful and natural, relative to language. <p> A substitution that is not consistent is termed inconsistent. The motivation for the second constraint (called the unique variable binding rule, UVBR) is that in natural language, users seldom want different variables in the same sentence to bind identical objects <ref> [ Shapiro, 1986 ] </ref> . For example, Every elephant hates every elephant has a different interpretation from Every elephant hates himself. Typically, the most acceptable interpretation of the former sentence requires that it not be interpreted as the latter.
Reference: [ Shapiro, 1989 ] <author> S. C. Shapiro. </author> <title> The CASSIE projects: An approach to natural language competence. </title> <booktitle> In Proceedings of the 4th Portugese Conference on Artificial Intelligence, </booktitle> <pages> pages 362-380, </pages> <address> Lisbon, Portugal, 1989. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: The grammar is an augmented subset of the grammar of <ref> [ Shapiro, 1982b; Shapiro, 1989 ] </ref> . While the portion of the grammar that parses complex noun phrases with restrictive relative clauses is rather robust, the capability of the system to process general natural language sentences is weak.
Reference: [ Shapiro, 1991 ] <author> S. C. Shapiro. </author> <title> Cables, Paths, and "Subconscious" Reasoning in Propositional Semantic Networks. </title> <editor> In John F. Sowa, editor, </editor> <booktitle> Principles of Semantic Networks, </booktitle> <pages> pages 137-156. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference-contexts: We call these variables structured variables and we have, informally, presented them in Chapter 4. The syntax and semantics of the logic are specified by a complete definition of a propositional semantic network representation formalism. This formalism is an augmentation of <ref> [ Shapiro, 1991 ] </ref> which defines propositional SNePS, a semantic network KRR formalism without variables. Our formalism, defined here, extends the work of Shapiro to deal with quantified sentences and variables corresponding to an extended first-order logic (it is not strictly first-order as quantification over propositions is possible). <p> In the rest of this explication, the term "node" will be used for ANALOG node, and "relation" for ANALOG relation. 5.1.3 Metapredicates To help formalize this description, we follow Shapiro who introduced the metapredicates Conceive, Believe, and = <ref> [ Shapiro, 1991 ] </ref> . If n; n 1 ; n 2 are metavariables ranging over nodes, and p is a metavariable ranging over proposition nodes, the semantics of these metapredicates are: 57 Conceive (n) Means that the node is actually constructed in the net-work. <p> Note that the metapredicates Believe and Conceive are, with respect to a 63 particular model: Believe (n) n 2 Conceive (n) n 2 M [ R: However, we will continue to use the metapredicates, as they are more perspicuous. 5.1.6 Reduction We follow <ref> [ Shapiro, 1986; Shapiro, 1991 ] </ref> in arguing for a form of reduction inference as being useful and natural, relative to language. <p> This means that ANALOG is not strictly first-order, as variables may quantify over nodes that correspond to propositions rather than individuals. This has useful consequences when processing natural language, particularly in dealing with questions whose answers are propositions rather than individuals. We note that ANALOG is an extension of <ref> [ Shapiro, 1991 ] </ref> which defines propositional SNePS. The ANALOG formalism extends the work to deal with 66 quantified sentences and variables corresponding to an extended first-order logic.
Reference: [ Sommers, 1982 ] <author> Frederic Tamler Sommers. </author> <title> The Logic of Natural Language. </title> <publisher> Oxford University Press, </publisher> <address> New York, </address> <year> 1982. </year> <month> 124 </month>
Reference-contexts: They do not address the same issues of this work, but their work with other natural language quantifiers suggests useful ways to extend our theory. Sommers <ref> [ Sommers, 1982 ] </ref> defines a logical system called TFL which attempts to satisfy the goal of natural form (although he characterizes it as a logic based on natural language).
Reference: [ Sowa, 1984 ] <author> John F. Sowa. </author> <title> Conceptual Structures. </title> <publisher> Addison-Wesley, </publisher> <year> 1984. </year>
Reference-contexts: Moreover, since restrictions on possible fillers for variables appear to be simple type restrictions, there is no representation for noun phrases with restrictive relative clause complements, and consequently no representation for donkey sentences. The work of <ref> [ Sowa, 1984; Sowa, 1992 ] </ref> with conceptual graphs, a form of semantic networks, is similar and has the same difficulties. Sowa does discuss the donkey sentence and his treatment of it resembles the DRS approach, described below.
Reference: [ Sowa, 1992 ] <author> John F. Sowa. </author> <title> Conceptual Graphs as a Universal Knowledge Representation. </title> <journal> Computers and Mathematics with Applications, </journal> <volume> 23(5) </volume> <pages> 75-93, </pages> <year> 1992. </year> <booktitle> Special issue on Semantic Networks in Artificial Intelligence (Part 1). </booktitle>
Reference-contexts: Moreover, since restrictions on possible fillers for variables appear to be simple type restrictions, there is no representation for noun phrases with restrictive relative clause complements, and consequently no representation for donkey sentences. The work of <ref> [ Sowa, 1984; Sowa, 1992 ] </ref> with conceptual graphs, a form of semantic networks, is similar and has the same difficulties. Sowa does discuss the donkey sentence and his treatment of it resembles the DRS approach, described below.
Reference: [ Webber, 1983 ] <editor> Bonnie Lynn Webber. So What Can We Talk About Now? In Michael Brady and Robert C. Berwick, editors, </editor> <booktitle> Computational Models of Discourse, </booktitle> <pages> pages 331-371. </pages> <publisher> MIT Press, </publisher> <year> 1983. </year>
Reference-contexts: Thus, much of it suffers from the previously discussed shortcomings for the representation of natural language. However, some of the atomic variable approaches can address some (but not all) of the difficulties we address in this research. A representative first-order logic-based approach is that of Webber <ref> [ Webber, 1983 ] </ref> , which attempts to specify logical forms for various types of complex descriptions.
Reference: [ Woods and Schmolze, 1992 ] <author> William A. Woods and James G. Schmolze. </author> <title> The KL-ONE Family. </title> <journal> Computers and Mathematics with Applications, </journal> <volume> 23(5) </volume> <pages> 133-177, </pages> <year> 1992. </year> <booktitle> Special issue on Semantic Networks in Artificial Intelligence (Part 1). </booktitle>
Reference: [ Woods, 1970 ] <author> W. A. Woods. </author> <title> Transition network grammars for natural language analysis. </title> <journal> Communications of the ACM, </journal> <volume> 13(10) </volume> <pages> 591-606, </pages> <year> 1970. </year>
Reference-contexts: In general, there is a direct mapping from natural language quantifying expressions into structured variable representations, since structured variables correspond directly to noun phrases with restrictive relative clause complements. The natural language processing subsystem of ANALOG is based on an interpreter for generalized augmented transition network (GATN) grammars <ref> [ Woods, 1970; Shapiro, 1982a ] </ref> . These are networks of nodes and arcs, similar to finite-state machines, in which arcs are labeled by parts of speech or other GATN network names.
Reference: [ Woods, 1978 ] <author> W. A. Woods. </author> <title> Semantics and Quantification in Natural Language Question Answering, volume 17. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1978. </year>
Reference: [ Woods, 1991 ] <author> William A. Woods. </author> <title> Understanding Subsumption and Taxonomy: A Framework for Progress. </title> <editor> In John F. Sowa, editor, </editor> <booktitle> Principles of Semantic Networks, </booktitle> <pages> pages 45-94. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year> <month> 125 </month>
Reference-contexts: This is a form of structural subsumption <ref> [ Woods, 1991 ] </ref> , peculiar to semantic network formalisms, which allows a proposition (say n 1 ) to "reduce" to (logically imply) a proposition (say n 2 ) whose wires are a subset of the wires of the original proposition. <p> In ANALOG, we specify subsumption as a binary relation between arbitrary nodes in the network. We define subsumption between two nodes x and y in Figure 5.3. This definition of subsumption includes subsumption mechanisms that Woods classifies as structural, recorded, axiomatic, and deduced subsumption <ref> [ Woods, 1991 ] </ref> . In Figure 5.3, case (1) corresponds to identical nodes (a node, obviously, subsumes itself ). Case (2) is the reduction inference case discussed in section 5.1.6.
References-found: 85

