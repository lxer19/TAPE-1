URL: http://aleph0.clarku.edu/~fgreen/papers/conpmv.ps
Refering-URL: http://aleph0.clarku.edu/~fgreen/papers/papers.html
Root-URL: http://aleph0.clarku.edu
Title: Complements of Multivalued Functions  
Author: Stephen Fenner Frederic Green Clark University Steven Homer Alan L. Selman Thomas Thierauf Heribert Vollmer k 
Affiliation: University of Southern Maine  Boston University  State University of New York at Buffalo  Universitat Ulm  Universitat Wurzburg  
Abstract: We study the class coNPMV of complements of NPMV functions. Though defined symmetrically to NPMV this class exhibits very different properties. We clarify the complexity of coNPMV by showing that, surprisingly, it is essentially the same as that of NPMV NP . Complete functions for coNPMV are exhibited and central complexity-theoretic properties of this class are studied. We show that computing maximum satisfying assignments can be done in coNPMV, which leads us to a comparison of NPMV and coNPMV with Krentel's classes Max P and Min P. The difference hierarchy for NPMV is related to the query hierarchy for coNPMV. Finally, we examine a functional analogue of Chang and Kadin's relationship between a collapse of the Boolean hierarchy over NP and a collapse of the polynomial time hierarchy. 
Abstract-found: 1
Intro-found: 1
Reference: [BLS84] <author> R. Book and T. Long and A. </author> <title> Sel-man Quantitative relativizations of complexity classes SIAM J. </title> <journal> on Comput., </journal> <volume> 13(3) </volume> <pages> 461-487, </pages> <month> August </month> <year> 1984. </year>
Reference-contexts: If a function f is total, it will always be explicitly noted.) The following classes of partial functions were first defined by Book, Long, and Selman <ref> [BLS84] </ref>. * NPMV is the set of all partial, multivalued functions computed by nondeterministic poly nomial time-bounded transducers; * NPSV is the set of all f 2 NPMV that are single-valued; * FP is the set of all partial functions computed by deterministic polynomial time-bounded transducers.
Reference: [CK90] <author> R. Chang and J. Kadin. </author> <title> The boolean hierarchy and the polynomial hierarchy: a closer connection. </title> <booktitle> In Proceedings of the 5th Annual Conf. on Structure in Complexity Theory, </booktitle> <pages> pages 140-153, </pages> <address> New York, 1990. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Any inclusion in the opposite direction implies coNPMV FP NPMV , which again implies a collapse of the polynomial time hierarchy, by Corollary 5.4. 6. Relationships Between the Func- tional Difference and Polynomial Time Hierarchies Chang and Kadin <ref> [CK90] </ref> showed that if the Boolean hierarchy over NP collapses to the k th level, then the polynomial hierarchy collapses to the k th level of the Boolean hierarchy over NP NP : if NP (k + 1) = NP (k), then PH = NP NP (k). <p> For any k 1, if NPMV (k + 1) = NPMV (k) then MV 3 = NPMV NP (k). Proof. NPMV (k + 1) = NPMV (k) is equivalent with NP (k + 1) = NP (k) [FHOS93], which implies 3 = NP NP (k) <ref> [CK90] </ref> (relativized). <p> Proof. In order to explain how Chang and Kadin's proof gives this result, we recall some of their definitions, with some minor modifications in notation (for greater detail, we refer the reader to their paper <ref> [CK90] </ref>). Denote the p m -complete language for NP (k) (respectively coNP (k)) as L NP (k) (respectively L coNP (k) ). <p> In this case the order of the sequence j is said to be maximal. We can now outline the proof. Chang and Kadin's Lemma 3 <ref> [CK90] </ref> states that, given a maximal hard sequence for an appropriate (polynomially bounded) length, an NP machine can recognize an initial segment of the canonical complete language for NP NP . <p> It follows from Definition 6.3 that the set of hard sequences is in coNP <ref> [CK90] </ref>; hence graph (H) 2 coNP, so that H 2 coNPMV. There fore, we can obtain a maximal hard sequence for the appropriate polynomial length m = p (jxj) by querying a coNPMV oracle for the value of H (m; j) for j varying from 1 to k 1.
Reference: [FHOS93] <author> S. Fenner, S. Homer, M. Ogihara, and A. Selman. </author> <title> On using oracles that compute values. </title> <booktitle> In Proc. 10th Annual Symp. on Theoret. Aspects of Computer Science, Lecture Notes in Computer Science, </booktitle> <volume> volume 665, </volume> <pages> pages 398-407. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: For one example of this phenomena, we prove here that coNPMV is not included in FP NPMV unless the polynomial hierarchy collapses. (This is an extension of a result of Fenner et al. <ref> [FHOS93] </ref>.) Yet, it is obvious that coNPMV can be computed in polynomial time with one query to coNPMV. Thus, a coNPMV oracle provides more information than an NPMV oracle. This is surprising, for function oracles, just as set oracles, provide knowledge about both their domains and their co-domains. <p> upper bound on the complexity of coNPMV, we show that, for any k 2, coNPMV NPMV (2) NPMV (k) NPMV (k + 1) NPMV (n O (1) ) NPMV NP ; where NPMV (k) is the k-th level of the difference hierarchy for NPMV as defined by Fenner et al. <ref> [FHOS93] </ref>. On the other hand, even though there is an infinite hierarchy of complexity classes between coNPMV and NPMV NP (the difference hierarchy over NPMV does not collapse unless the polynomial time hierarchy collapses [FHOS93]), our results suggest that the complexity of coNPMV is essentially the same as the complexity of <p> is the k-th level of the difference hierarchy for NPMV as defined by Fenner et al. <ref> [FHOS93] </ref>. On the other hand, even though there is an infinite hierarchy of complexity classes between coNPMV and NPMV NP (the difference hierarchy over NPMV does not collapse unless the polynomial time hierarchy collapses [FHOS93]), our results suggest that the complexity of coNPMV is essentially the same as the complexity of NPMV NP : we prove in Section 5 that NPMV NP = 1 2 ffi coNPMV (where 1 2 is the projection function that maps a pair of strings to its first component). <p> A function f belongs to NPMV if and only if it is polynomially length-bounded and graph (f ) belongs to NP. The domain of every function in NPMV belongs to NP. An example is sat which maps Boolean formulas to their satisfying assignments. Fenner et al. <ref> [FHOS93] </ref> define the difference hierarchy over NPMV as follows. Let F be a class of partial multivalued functions. <p> If g is a single-valued partial function and M is a deterministic oracle transducer as just described, then we let M [g] denote the single-valued partial function computed by M with oracle g. 2.1 Definition. <ref> [FHOS93] </ref> Let f and g be multi-valued partial functions. f is Turing reducible to g in polynomial time, f P T g, if for some deterministic oracle transducer M , for every single-valued refinement g 0 of g, M [g 0 ] is a single-valued refine ment of f . <p> However, it is quite unlikely that coNPMV is c-closed under this reducibility: otherwise, since sat 2 coNPMV and sat is complete for NPMV, we would get that NPMV c coNPMV. But this seems to be very un likely as the following extension of a result of Fenner et al. <ref> [FHOS93] </ref> shows. 4.2 Theorem. NPMV coNPMV () NPMV c coNPMV () NP = coNP. Proof. We cycle through the implications. The first implication is trivial. For the second, let L 2 NP. <p> This seems to happen again for maxsat, the function that maps a Boolean formula to its lexicographically largest satisfying assignment. Fenner et al. <ref> [FHOS93] </ref> show that maxsat 2 NPMV (2). In fact, it is even in coNPMV. However, we will show that the corresponding classes, namely MaxP or FP NP are unlikely to be contained in coNPMV. 4.5 Theorem. maxsat 2 coNPMV. Proof. <p> Since x 2 L if and only if f (x) = 0, we have L 2 NP. 2 The last two results relativize: analogous results hold for higher levels of the NPMV hierarchy and Krentel's min/max hierarchy <ref> [FHOS93, VW95] </ref>. For the relativized version of Theorem 4.7 one has to use techniques from Krentel [Kre92] and Vollmer and Wagner [VW95]. 5. A Characterization of coNPMV As we have already seen in the preceding section, coNPMV seems to be a more powerful class than NPMV. <p> Fenner et al. <ref> [FHOS93] </ref> have shown that NPMV (2) FP NPMV () p p 2 Note that in contrast for the corresponding language classes we have NP (k) P NP for all k. We can now improve the result of Fenner et al. 5.4 Corollary. coNPMV FP NPMV () p 2 . Proof. <p> Proof. If p p 2 , then coNPMV FP coNPMV = FP NPMV NP = FP p = FP p 2 = FP NP = FP NPMV ; where the last equality is Theorem 1 in <ref> [FHOS93] </ref> and the second follows from the relativized version of the same theorem. Conversely, if coNPMV FP NPMV , then dom (coNPMV) P NP = p 2 , so that p p 5.5 Corollary. <p> But then p 2 , and PH = 2 . For the other inclusions, suppose FP coNPMV [k] = FP coNPMV [k+1] . Then FP NPMV NP [k] = FP NPMV NP [k+1] . By a theorem of Fenner et al. <ref> [FHOS93] </ref>, this implies that FP p 2 [k] = 2 [k+1] , which, by a relativization of Kadin's theorem [Kad88], implies that the polynomial hierarchy collapses. 2 Thus we see, combining Theorems 4.4 and 5.5, that all classes of the difference hierarchy over NPMV are included in the query hierarchy over <p> There are (under reasonable assumptions) no inclusions in the opposite direction. Concerning the relationship between the query hierarchy over NPMV and the difference hierarchy over NPMV, we know from Fenner et al. <ref> [FHOS93] </ref> that all classes of the first hierarchy are included in certain classes of the second hierarchy. Any inclusion in the opposite direction implies coNPMV FP NPMV , which again implies a collapse of the polynomial time hierarchy, by Corollary 5.4. 6. <p> For any k 1, if NPMV (k + 1) = NPMV (k) then MV 3 = NPMV NP (k). Proof. NPMV (k + 1) = NPMV (k) is equivalent with NP (k + 1) = NP (k) <ref> [FHOS93] </ref>, which implies 3 = NP NP (k) [CK90] (relativized). Since p k () MV k+1 = MV k [FHOS93], we get that MV 3 = NPMV NP (k). 2 Since NP NP (k) P NP NP [k] , a consequence of Chang and Kadin's theorem is that if NP (k <p> Proof. NPMV (k + 1) = NPMV (k) is equivalent with NP (k + 1) = NP (k) <ref> [FHOS93] </ref>, which implies 3 = NP NP (k) [CK90] (relativized). Since p k () MV k+1 = MV k [FHOS93], we get that MV 3 = NPMV NP (k). 2 Since NP NP (k) P NP NP [k] , a consequence of Chang and Kadin's theorem is that if NP (k + 1) = NP (k), then p 3 = P NP NP [k] (indeed, they prove this directly in
Reference: [Kad88] <author> J. Kadin. </author> <title> The polynomial time hierarchy collapses if the Boolean hierarchy collapses. </title> <journal> SIAM J. on Comput., </journal> <volume> 17(6) </volume> <pages> 1263-1282, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: We also note that Theorem 4.2 extends to higher levels of the difference hierarchies over NPMV and NP, that is NPMV (k) coNPMV (k) () NPMV (k) c coNPMV (k) () NP (k) = coNP (k). By a result of Kadin <ref> [Kad88] </ref>, a collapse of the Boolean hierarchy implies a collaps of the polynomial time hierarchy. Hence, there is a whole hierarchy between coNPMV and NPMV NP . 4.4 Theorem. <p> Then FP NPMV NP [k] = FP NPMV NP [k+1] . By a theorem of Fenner et al. [FHOS93], this implies that FP p 2 [k] = 2 [k+1] , which, by a relativization of Kadin's theorem <ref> [Kad88] </ref>, implies that the polynomial hierarchy collapses. 2 Thus we see, combining Theorems 4.4 and 5.5, that all classes of the difference hierarchy over NPMV are included in the query hierarchy over coNPMV, in fact already in its first level.
Reference: [Kre88] <author> M. Krentel. </author> <title> The complexity of optimization problems. </title> <journal> J. Comput. System Sci., </journal> <volume> 36 </volume> <pages> 490-509, </pages> <year> 1988. </year>
Reference-contexts: This is surprising, for function oracles, just as set oracles, provide knowledge about both their domains and their co-domains. We will define many-one reductions between mul-tivalued functions, (This will be a straightforward adaptation of the many-one metric reducibility of Krentel <ref> [Kre88] </ref>.). In Section 3, we will consider many-one complete functions for coNPMV. <p> In particular, these definition templates define such classes of multivalued partial functions as FP NPMV , and NPMV NPMV . We will use the following generalization of the many-one metric reducibility of Krentel <ref> [Kre88] </ref> in order to discuss complete functions for classes of multivalued functions. 2.2 Definition. <p> Obviously, f P m g implies f P The classes that we have been considering relate in interesting ways optimization problems. In order to capture the complexity of optimization problems, Krentel <ref> [Kre88] </ref> defined the complexity classes MaxP and MinP as the functions computable by taking the maximum, respectively minimum, over sets of feasible solutions of problems in NP. Further, Krentel extended these classes to hierarchies of classes of optimization functions [Kre92].
Reference: [Kre92] <author> M. Krentel. </author> <title> Generalizations of OptP to the polynomial hierarchy. </title> <journal> Theor. Com. Sci., </journal> <volume> 97 </volume> <pages> 183-198, </pages> <year> 1992. </year>
Reference-contexts: In order to capture the complexity of optimization problems, Krentel [Kre88] defined the complexity classes MaxP and MinP as the functions computable by taking the maximum, respectively minimum, over sets of feasible solutions of problems in NP. Further, Krentel extended these classes to hierarchies of classes of optimization functions <ref> [Kre92] </ref>. Krentel defined these functions using the notion of a metric Turing machine, which we now recall. <p> Otherwise, if y does satisfy ', M guesses another assignment y 0 &gt; y. If y 0 also satisfies ', M outputs y, otherwise M rejects. M outputs every assignment except the maximum satisfying one (if there is one). Hence maxsat 2 coNPMV. 2 Krentel <ref> [Kre92] </ref> showed that FP NP = FP MaxP [1] . Since FP NPMV = FP NP and maxsat is complete for MaxP, we have that FP NPMV FP coNPMV [1] . That is, polynomially many queries of a FP function to NPMV can be replaced by one query to coNPMV. <p> For the relativized version of Theorem 4.7 one has to use techniques from Krentel <ref> [Kre92] </ref> and Vollmer and Wagner [VW95]. 5. A Characterization of coNPMV As we have already seen in the preceding section, coNPMV seems to be a more powerful class than NPMV. This is somewhat surprising in light of the aforementioned symmetry in the definitions of coNPMV and NPMV by their graphs.
Reference: [Pap84] <author> C. Papadimitriou. </author> <title> On the complexity of unique solutions. </title> <journal> J. of the ACM, </journal> <volume> 31 </volume> <pages> 392-400, </pages> <year> 1984. </year>
Reference: [Ram94] <author> J. Ramachandran. </author> <title> The polynomial time function hierarchy. </title> <type> Technical Report no. 94-50, </type> <institution> Department of Computer and Information Sciences, Ohio State Uni-veristy, </institution> <year> 1994. </year>
Reference: [Sel94] <author> A. Selman. </author> <title> A taxonomy of complexity classes of functions. </title> <journal> J. Comput. System Sci., </journal> <volume> 48(2) </volume> <pages> 357-381, </pages> <year> 1994. </year>
Reference-contexts: Similarly, NPMV c MaxP " MinP. The more interesting question is whether these inclusions are strict. This is quite likely. 4.7 Theorem. Max P NPMV () Min P NPMV () NP = coNP. Proof. If NP = coNP, then NPMV = FP NP <ref> [Sel94] </ref>, thus especially NPMV = Max P = Min P. Now suppose Max P NPMV (the case for Min P is analogous). Let L 2 coNP. Define f (x) = 0 if x 2 L 1 otherwise : Then f 2 Max P and hence, by assumption, in NPMV.
Reference: [VW93] <author> H. Vollmer and K. Wagner. </author> <title> The complexity of finding middle elements. </title> <journal> International Journal of Foundations of Computer Science, </journal> <volume> 4 </volume> <pages> 293-307, </pages> <year> 1993. </year>
Reference-contexts: We extend the min and max functions in the obvious way: define max (x; ?) = max (?; x) = x and min (x; ?) = min (?; x) = x, for all x (including ? itself). Vollmer and Wagner <ref> [VW93, VW95] </ref> gave a detailed structural examination of Krentel's hierarchy. Here, we just define class MaxP using an operator-characterization from [VW95]. MinP is defined analogously. h 2 MaxP () 9f; g 2 FP : h (x) = max f (x; y): 3.
Reference: [VW95] <author> H. Vollmer and K. Wagner. </author> <title> Complexity classes of optimization functions. </title> <journal> Information and Computation, </journal> <volume> 120 </volume> <pages> 198-219, </pages> <year> 1995. </year>
Reference-contexts: We extend the min and max functions in the obvious way: define max (x; ?) = max (?; x) = x and min (x; ?) = min (?; x) = x, for all x (including ? itself). Vollmer and Wagner <ref> [VW93, VW95] </ref> gave a detailed structural examination of Krentel's hierarchy. Here, we just define class MaxP using an operator-characterization from [VW95]. MinP is defined analogously. h 2 MaxP () 9f; g 2 FP : h (x) = max f (x; y): 3. <p> Vollmer and Wagner [VW93, VW95] gave a detailed structural examination of Krentel's hierarchy. Here, we just define class MaxP using an operator-characterization from <ref> [VW95] </ref>. MinP is defined analogously. h 2 MaxP () 9f; g 2 FP : h (x) = max f (x; y): 3. Functions Complete for coNPMV NPMV is precisely the class of functions that compute witnesses for NP sets in the following sense. <p> Since x 2 L if and only if f (x) = 0, we have L 2 NP. 2 The last two results relativize: analogous results hold for higher levels of the NPMV hierarchy and Krentel's min/max hierarchy <ref> [FHOS93, VW95] </ref>. For the relativized version of Theorem 4.7 one has to use techniques from Krentel [Kre92] and Vollmer and Wagner [VW95]. 5. A Characterization of coNPMV As we have already seen in the preceding section, coNPMV seems to be a more powerful class than NPMV. <p> For the relativized version of Theorem 4.7 one has to use techniques from Krentel [Kre92] and Vollmer and Wagner <ref> [VW95] </ref>. 5. A Characterization of coNPMV As we have already seen in the preceding section, coNPMV seems to be a more powerful class than NPMV. This is somewhat surprising in light of the aforementioned symmetry in the definitions of coNPMV and NPMV by their graphs.
Reference: [Wag87] <author> K. Wagner. </author> <title> More complicated questions about maxima and minima, and some closures of NP. </title> <journal> Theoret. Comput. Sci., </journal> <volume> 51 </volume> <pages> 53-80, </pages> <year> 1987. </year>
Reference: [Wag90] <author> K. Wagner. </author> <title> Bounded query classes. </title> <journal> SIAM J. Comput., </journal> <volume> 19 </volume> <pages> 833-846, </pages> <year> 1990. </year>
Reference-contexts: Proof. It remains to show the last inclusion. Let f 2 NPMV (n O (1) ). Then the graph of f is in NP (n O (1) ), which is known to be equal to P NP [log] <ref> [Wag90] </ref>. Obviously, f can be computed by an NPMV algorithm with access to a P NP [log] oracle: simply guess an output of f and querying its graph check that the guess is correct.
References-found: 13

