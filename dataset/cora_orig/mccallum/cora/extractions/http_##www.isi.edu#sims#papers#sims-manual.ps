URL: http://www.isi.edu/sims/papers/sims-manual.ps
Refering-URL: http://www.isi.edu/~ambite/
Root-URL: 
Title: The SIMS Manual Version 2.0  
Author: Jose-Luis Ambite Yigal Arens Naveen Ashish Craig A. Knoblock Steven Minton Jay Modi Maria Muslea Andrew Philpot Wei-Min Shen Sheila Tejada Weixiong Zhang 
Date: December 22, 1997  
Address: 4676 Admiralty Way, Marina del Rey, CA 90292, U.S.A.  
Affiliation: Information Sciences Institute and Department of Computer Science University of Southern California  
Abstract: This manual explains how to bring up a SIMS information server in a new application domain. After providing a short overview of relevant features of the SIMS system, it describes the modeling and programming work that has to be performed to support the extension of SIMS to a given collection of information sources in the domain. To aid a user inexperienced with the technological infrastructure underlying SIMS, the manual contains examples structured as a tutorial that can be followed to actually produce a working SIMS system. fl The research reported here was supported in part by Rome Laboratory of the Air Force Systems Command and the Defense Advanced Research Projects Agency under Contracts Number F30602-94-C-0210, F30602-97-2-0352, and F30602-97-2-0238 and in part by a grant from Computing Devices International. The views and conclusions contained in this paper are those of the authors and should not be interpreted as representing the official opinion or policy of RL, DARPA, the U.S. Government, or any person or agency connected with them. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R.J. Brachman and J.G. Schmolze. </author> <title> An overview of the kl-one knowledge representation system. </title> <journal> Cognitive Science, </journal> <volume> 9(2) </volume> <pages> 171-216, </pages> <year> 1985. </year>
Reference-contexts: For details see [6]. 23 main (int argc, char **argv) f CORBA2KQML* anObj = NULL; char *query; if (argc&gt;=2) f query=argv <ref> [1] </ref>; g else f printf ("Usage: client querystring"); exit (1); g TRYf anObj = CORBA2KQML:: bind (":CORBA2KQML","vigor.isi.edu",IT X); g CATCHANYf cout &lt;< "error" &lt;< IT X &lt;< endl; g ENDTRY TRYf c kqml message var answer; char* ptr; char p [100]; int i, n; fprintf ( stderr, "ret send msg =
Reference: [2] <author> Tim Finin, Rich Fritzson, and Don McKay. </author> <title> A language and protocol to support intelligent agent interoperability. </title> <booktitle> In Proceedings of the CE and CALS, </booktitle> <address> Washington, D.C., </address> <month> June </month> <year> 1992. </year>
Reference: [3] <author> Object Management group. </author> <title> The Common Object Request Broker: architecture and specification, volume OMG Document Number 91.12.1. </title> <booktitle> Object Management group, </booktitle> <year> 1991. </year>
Reference-contexts: source servers are of the form: (:ASK-ALL :SENDER &lt;SIMS server&gt; :RECEIVER &lt;info-source server&gt; :REPLY-WITH T :CONTENT (&lt;SQL query&gt;&lt;hostname:dbname&gt;&lt;username&gt;)) while the KQML message sent by a client program must be of the form: (:ASK-ALL :RECEIVER &lt;SIMS server&gt; :REPLY-WITH T :CONTENT (SIMS-RETRIEVE &lt;output args&gt;&lt;query body&gt;)) 5.3 Remote Communication Using CORBA As CORBA <ref> [3] </ref> is supported by virtually all the industry leaders, making SIMS a CORBA-compliant application broadens the area of potential SIMS application. For instance, any CORBA-compliant application is able to act like a SIMS client (i.e., to send queries to SIMS and to use the returned answers).
Reference: [4] <author> Robert MacGregor. </author> <title> A deductive pattern matcher. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence, </booktitle> <address> Saint Paul, Minnesota, </address> <year> 1988. </year>
Reference: [5] <author> Robert MacGregor. </author> <title> The evolving technology of classification-based knowledge representation systems. </title> <editor> In John Sowa, editor, </editor> <booktitle> Principles of Semantic Networks: Explorations in the Representation of Knowledge. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1990. </year>
Reference: [6] <author> Ion Muslea. </author> <title> A guide for making sims a corba-compliant application. </title> <type> Technical Report ISI, </type> <institution> USC, </institution> <year> 1996. </year>
Reference-contexts: One important advantage of the CORBA-to-KQML adapter is that developers of the CORBA clients do not have to know 22 anything about KQML. From their point of view, they are accessing a CORBA server with an easy-to-use interface <ref> [6] </ref>. argument and sends it to the SIMS server named SimsAgent. <p> The message is received by the adapter, which translates it to a sequence of CORBA requests and asks the corresponding CORBA server to execute the resulting sequence of services. For details see <ref> [6] </ref>. 23 main (int argc, char **argv) f CORBA2KQML* anObj = NULL; char *query; if (argc&gt;=2) f query=argv [1]; g else f printf ("Usage: client querystring"); exit (1); g TRYf anObj = CORBA2KQML:: bind (":CORBA2KQML","vigor.isi.edu",IT X); g CATCHANYf cout &lt;< "error" &lt;< IT X &lt;< endl; g ENDTRY TRYf c kqml
Reference: [7] <author> Iona Technologies. </author> <title> Orbix 2.2: Programming Guide. </title> <booktitle> Iona Technologies, </booktitle> <month> March </month> <year> 1997. </year> <month> 45 </month>
Reference-contexts: CORBA defines distributed services for inter-process and inter-platform messaging, and it provides interoperability between applications written in different programming languages, running on different machines in heterogeneous, distributed environments. CORBA is an interoperability standard that has several implementations (e.g., Orbix, ILU, VisiBroker), and we currently support the Orbix 2.2 <ref> [7] </ref> implementation of CORBA. A CORBA-compliant interface is provided to let SIMS act both as a CORBA client (e.g., to access information sources via CORBA wrappers) and a CORBA server (i.e., to receive queries from CORBA-compliant applications).
References-found: 7

