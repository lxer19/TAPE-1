URL: ftp://ftp.eecs.umich.edu/people/jaeho/ijcai95pr-pam.ps
Refering-URL: http://ai.eecs.umich.edu/people/jaeho/jaeho.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: jaeho@eecs.umich.edu  
Title: IJCAI'95 Workshop on the Next Generation of Plan Recognition Systemsp. 72-77 Procedural Agent Model for
Author: Jaeho Lee 
Address: 1101 Beal Avenue Ann Arbor, MI 48109-2110  
Affiliation: Artificial Intelligence Lab The University of Michigan  
Abstract: We propose a formal procedure-based agent model for plan recognition as an alternative to the declarative proposition-based agent model. Our formalism, called the Procedural Agent Model (PAM) allows us to describe procedural plans of agents in a concise and abstract way. Plan recognition uses PAM as a library of plan schemas and applies a graph-based pattern-matching algorithm to the observed events to find a matching PAM. The associated intentions can then be inferred from the goals of matching PAM. We are also investigating the extension of our PAM representation to a probabilistic procedural agent model by incorporating uncertainty in observation and probabilistic state transition.
Abstract-found: 1
Intro-found: 1
Reference: [ Barr and Feigenbaum, 1981 ] <editor> Avron Barr and Edward A. Feigenbaum, editors. </editor> <booktitle> The Handbook of Artificial Intelligence, volume I, chapter IV, </booktitle> <pages> pages 263-267. </pages> <publisher> Addison-Wesley, </publisher> <year> 1981. </year>
Reference-contexts: PAM stems from our Structured Circuit Semantics (SCS) for plan execution systems [ Lee and Durfee, 1994 ] , which has a set of well-defined explicit constructors to represent complex procedural behaviors in a compact way 1 . Note that our PAM formalism looks similar to Augmented Transition Networks <ref> [ Barr and Feigenbaum, 1981 ] </ref> . Both are extensions of a finite state transition diagram, but the distinction between them should be apparent as the purpose and representativeness of our formalism are described further. The basic unit of the PAM syntax is a step.
Reference: [ Cassandra et al., 1994 ] <author> Anthony R. Cassandra, Leslie Pack Kaelbling, and Michael L. Littman. </author> <title> Acting optimally in partially observable stochastic domains. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, </booktitle> <pages> pages 1023-1028, </pages> <address> Seattle, Wash-ington, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: Our approach does not require the sequence of observations to start from the very beginning of a PAM, i.e. partial matching is allowed. PAM, however, does require the observations to be continuous. We are looking into algorithmic methods for Partially Observable Markov Decision Processes (POMDP) <ref> [ Cassandra et al., 1994; Lovejoy, 1991 ] </ref> to handle non-continuous partial observations. Plan projection is another area where we can apply the PAM representation. We regard plan projection as a dual operation of plan recognition. While plan recognition is diagnostic reasoning, plan projection is predictive inference.
Reference: [ Charniak and Goldman, 1993 ] <author> Eugene Charniak and Robert P. Goldman. </author> <title> A Bayesian model of plan recognition. </title> <journal> Artificial Intelligence, </journal> <volume> 64(1) </volume> <pages> 53-79, </pages> <month> November </month> <year> 1993. </year>
Reference: [ Firby, 1992 ] <author> R. James Firby. </author> <title> Building symbolic primitives with continuous control routines. </title> <editor> In James Hendler, editor, </editor> <booktitle> Artificial Intelligence Planning Systems: Proc. of the First International Conference, </booktitle> <pages> pages 62-68, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: Procedures are thus a fundamental source of agent knowledge. The procedural representation of plans is common especially in reactive plan execution systems such as PRS [ Ingrand et al., 1992 ] , Universal Plans [ Schop-pers, 1987 ] , RAPs <ref> [ Firby, 1992 ] </ref> , Teleo-Reactive Programs [ Nilsson, 1994 ] , and the recent SCS [ Lee and Dur-fee, 1994 ] . Although some of the representations are not in direct procedural form, as in Universal Plans, they can be mapped into step by step procedures.
Reference: [ Goodman and Litman, 1990 ] <author> Bradley A. Goodman and Diane J. Litman. </author> <title> Plan recognition for intelligent interfaces. </title> <booktitle> In Proceedings of the Sixth Conference on Artificial Intelligence Applications, </booktitle> <pages> pages 297-303, </pages> <address> Santa Barbara, California, </address> <month> March </month> <year> 1990. </year>
Reference-contexts: Typically, plan recognition needs a library of task-specific plan schemas or an ontology to represent knowledge of agent plans <ref> [ Kautz and Allen, 1986; Goodman and Litman, 1990 ] </ref> . Our plan recognition algorithm also works on task-specific plan schemas, but in the procedural PAM representation. In essence, plan recognition is diagnostic reasoning.
Reference: [ Huber et al., 1994 ] <author> Marcus J. Huber, Edmund H. Dur-fee, and Michael P. Wellman. </author> <title> The automated mapping of plans for plan recognition. </title> <booktitle> In Proceedings of the Tenth Conference on Uncertainty in Artificial Intelligence, </booktitle> <pages> pages 344-351, </pages> <address> Seattle, Washington, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: In particular, his model specifies a semantic relation between inputs and conclusions in the form of event hierarchies. We consider this approach as much a declarative representation scheme as the Bayesian network-based approach <ref> [ Char-niak and Goldman, 1993; Huber et al., 1994 ] </ref> .
Reference: [ Ingrand et al., 1992 ] <author> Francois F. Ingrand, Michael P. Georgeff, and Anand S. Rao. </author> <title> An architecture for real-time reasoning and system control. </title> <journal> IEEE Expert, </journal> <volume> 7(6) </volume> <pages> 34-44, </pages> <month> December </month> <year> 1992. </year>
Reference-contexts: In many domains such as military reconnaissance, agents have explicit, predefined procedural plans. Procedures are thus a fundamental source of agent knowledge. The procedural representation of plans is common especially in reactive plan execution systems such as PRS <ref> [ Ingrand et al., 1992 ] </ref> , Universal Plans [ Schop-pers, 1987 ] , RAPs [ Firby, 1992 ] , Teleo-Reactive Programs [ Nilsson, 1994 ] , and the recent SCS [ Lee and Dur-fee, 1994 ] .
Reference: [ Kanazawa, 1991 ] <author> Keiji Kanazawa. </author> <title> A logic and time nets for probabilistic inference. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence, </booktitle> <pages> pages 360-365, </pages> <address> Anaheim, California, </address> <year> 1991. </year>
Reference-contexts: The conclusions of the Bayesian Network are not dependent on the order of evidence arrival, so if ordering information is important, the temporal relationships or predicates must be explicitly part of the network, which is not trivial <ref> [ Kanazawa, 1991 ] </ref> . The order of events, in general, may provide essential information regarding the goal the agent is pursuing. Suppose A implies A 1 , A 2 , , A n , and B implies B 1 , B 2 , , B m . <p> For example, the Bayesian network approach would need special temporal predicates or temporal attributes <ref> [ Kanazawa, 1991 ] </ref> . Here is a simplified example showing that the order of events is important evidence for plan recognition.
Reference: [ Kautz and Allen, 1986 ] <author> Henry A. Kautz and James F. Allen. </author> <title> Generalized plan recognition. </title> <booktitle> In Proceedings of the Fifth National Conference on Artificial Intelligence, </booktitle> <pages> pages 32-37, </pages> <address> Philadelphia, Pennsylvania, </address> <month> August </month> <year> 1986. </year>
Reference-contexts: Typically, plan recognition needs a library of task-specific plan schemas or an ontology to represent knowledge of agent plans <ref> [ Kautz and Allen, 1986; Goodman and Litman, 1990 ] </ref> . Our plan recognition algorithm also works on task-specific plan schemas, but in the procedural PAM representation. In essence, plan recognition is diagnostic reasoning.
Reference: [ Lee and Durfee, 1994 ] <author> Jaeho Lee and Edmund H. Dur-fee. </author> <title> Structured circuit semantics for reactive plan execution systems. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, </booktitle> <pages> pages 1232-1237, </pages> <address> Seattle, Washington, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: PAM can express various patterns of sequences of actions (in general, any observable event) in a concise, abstract way. PAM stems from our Structured Circuit Semantics (SCS) for plan execution systems <ref> [ Lee and Durfee, 1994 ] </ref> , which has a set of well-defined explicit constructors to represent complex procedural behaviors in a compact way 1 . Note that our PAM formalism looks similar to Augmented Transition Networks [ Barr and Feigenbaum, 1981 ] .
Reference: [ Lewis and Papadimitriou, 1981 ] <author> Harry R. Lewis and Christos H. Papadimitriou. </author> <title> Elements of the Theory of Computation. </title> <publisher> Prentice Hall, </publisher> <year> 1981. </year>
Reference-contexts: The associated state transition diagram 2 is shown in Figure 1. 1 SCS constructors are described in Appendix A 2 The corresponding state transition diagram can be for mally defined as in <ref> [ Lewis and Papadimitriou, 1981 ] </ref> . <p> Figure 6 shows our representation of the associated state transition diagram. 3 For the purpose of this paper, we use the general notion of accept defined in Finite Automata <ref> [ Lewis and Papadimitriou, 1981 ] </ref> This PAM describes a type of plan in which the agent will finish all sequences. As in the case of the parallel-OR PAM, the agent may switch to other sequences until it completes all sequences.
Reference: [ Lovejoy, 1991 ] <author> William S. Lovejoy. </author> <title> A survey of algorithmic methods for partially observed markov decision processes. </title> <journal> Annals of Operations Research, </journal> <volume> 28 </volume> <pages> 47-65, </pages> <year> 1991. </year>
Reference-contexts: Our approach does not require the sequence of observations to start from the very beginning of a PAM, i.e. partial matching is allowed. PAM, however, does require the observations to be continuous. We are looking into algorithmic methods for Partially Observable Markov Decision Processes (POMDP) <ref> [ Cassandra et al., 1994; Lovejoy, 1991 ] </ref> to handle non-continuous partial observations. Plan projection is another area where we can apply the PAM representation. We regard plan projection as a dual operation of plan recognition. While plan recognition is diagnostic reasoning, plan projection is predictive inference.
Reference: [ Nilsson, 1994 ] <author> Nils J. Nilsson. </author> <title> Teleo-reactive programs for agent control. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 1 </volume> <pages> 139-158, </pages> <year> 1994. </year>
Reference-contexts: Procedures are thus a fundamental source of agent knowledge. The procedural representation of plans is common especially in reactive plan execution systems such as PRS [ Ingrand et al., 1992 ] , Universal Plans [ Schop-pers, 1987 ] , RAPs [ Firby, 1992 ] , Teleo-Reactive Programs <ref> [ Nilsson, 1994 ] </ref> , and the recent SCS [ Lee and Dur-fee, 1994 ] . Although some of the representations are not in direct procedural form, as in Universal Plans, they can be mapped into step by step procedures.
Reference: [ Pearl, 1988 ] <author> Judea Pearl. </author> <title> Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1988. </year>
Reference-contexts: With additional user-supplied transition probabilities in the state transition diagram, the PAM representation can be used as an extended Markov chain model. In this model, the plan recognition algorithm can be more selective by suggesting the maximal likelihood match. In this case, explaining away <ref> [ Pearl, 1988 ] </ref> effects 4 could be used to handle uncertainty in observations. Our approach does not require the sequence of observations to start from the very beginning of a PAM, i.e. partial matching is allowed. PAM, however, does require the observations to be continuous.
Reference: [ Schoppers, 1987 ] <author> Marcel J. Schoppers. </author> <title> Universal plans for reactive robots in unpredictable environments. </title> <booktitle> In Proceedings of the Tenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1039-1046, </pages> <address> Mi-lan, Italy, </address> <year> 1987. </year>
Reference: [ Sullivan and Cohen, 1985 ] <author> Michael Sulli-van and Paul R. Cohen. </author> <title> An endorsement-based plan recognition program. </title> <booktitle> In Proceedings of the Ninth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 475-479, </pages> <address> Los Angeles, California, </address> <year> 1985. </year>
References-found: 16

