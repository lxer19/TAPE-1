URL: http://www.iscs.nus.sg/~liub/wkshp/chabrier.ps
Refering-URL: 
Root-URL: 
Email: fjc,vjg@crid.u-bourgogne.fr  
Title: Write shorter to solve faster!  
Author: Jacqueline CHABRIER, Vincent JULIARD C.R.I.D. 
Keyword: SAT, structured SAT problems, boolean constraint language, cardinality constraints.  
Address: 9, Avenue Alain Savary B.P. 400 21011 DIJON Cedex France  
Affiliation: Universite de Bourgogne  
Abstract: The satisfiability problem (SAT) is a fundamental problem in mathematical logic, inference, automated reasoning and computing theory. Classical approaches to experiment and to compare the resolution's methods for SAT problems consist to write at hand or to produce with generators a standard representation of the problem in a conjunctive normal form. Many real problems, however, contain some structures which can be very useful at the representative level to significantly reduce the description of the problem, but also to improve the resolution. In this paper, we present a very high level language called SCORE(FD/B) 1 which supports powerful features to describe concisely structured SAT problems. We also show with several examples that the systematic resolution's method used by the language significantly optimizes the resolution in CPU time and space. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Projet BAHIA "Etude Comparative de Trois Formalismes en Cal-cul Propositionnel, Booleens: Algorithmes et Heuristiques pour l'IA " Journees Nationales PRC-GDR IA, </institution> <address> Nancy, France, </address> <year> 1995. </year>
Reference-contexts: Practically, if these languages approaches permit to describe concisely constraint satisfaction problems on boolean domains, the resolution methods supported are not so efficient than CSAT [8, 9], or other methods based on local search such that G-SAT [13, 14] or TW-SAT [12]. Our proposal SCORE <ref> [1, 3, 4, 2] </ref> is a general framework of constraints system, developed at the Computer Research Center of Dijon to solve constraint satisfaction problems on discrete domains.
Reference: [2] <author> I. Blot, J. Chabrier "SCORE(FD/I)" CNPC'96, </author> <title> Conference Na-tionale sur la resolution pratique des problemes NP-complets, </title> <address> Dijon, France, </address> <year> 1996. </year>
Reference-contexts: Practically, if these languages approaches permit to describe concisely constraint satisfaction problems on boolean domains, the resolution methods supported are not so efficient than CSAT [8, 9], or other methods based on local search such that G-SAT [13, 14] or TW-SAT [12]. Our proposal SCORE <ref> [1, 3, 4, 2] </ref> is a general framework of constraints system, developed at the Computer Research Center of Dijon to solve constraint satisfaction problems on discrete domains. <p> These properties can then be exploited later to prune efficiently the search space and to improve the resolution [6]. The paper concludes with section 5 where we summarize our results. 2 SCORE: a brief overview of the method The SCORE method <ref> [4, 2] </ref> combines advantages of local search and systematic techniques. We will assume that the reader is already familiar with these approaches [15].
Reference: [3] <author> J. Chabrier, J.J. Chabrier, F. </author> <title> Trousset "Resolution Efficace d'un Probleme de Satisfaction de Contraintes: </title> <booktitle> Le Million de Reines" 11th Int. Conf. in Artificial Intelligence, </booktitle> <address> Avignon, France, </address> <year> 1991. </year>
Reference-contexts: Practically, if these languages approaches permit to describe concisely constraint satisfaction problems on boolean domains, the resolution methods supported are not so efficient than CSAT [8, 9], or other methods based on local search such that G-SAT [13, 14] or TW-SAT [12]. Our proposal SCORE <ref> [1, 3, 4, 2] </ref> is a general framework of constraints system, developed at the Computer Research Center of Dijon to solve constraint satisfaction problems on discrete domains.
Reference: [4] <author> J. Chabrier, V. Juliard, J.J. </author> <title> Chabrier "SCORE(FD/B) An Efficient Complete Local-Based Search Method for Satisfiability Problems" CP'95 Workshop on Studying and Solving Really Hard Problems - Cassis, </title> <address> France, </address> <year> 1995. </year>
Reference-contexts: Practically, if these languages approaches permit to describe concisely constraint satisfaction problems on boolean domains, the resolution methods supported are not so efficient than CSAT [8, 9], or other methods based on local search such that G-SAT [13, 14] or TW-SAT [12]. Our proposal SCORE <ref> [1, 3, 4, 2] </ref> is a general framework of constraints system, developed at the Computer Research Center of Dijon to solve constraint satisfaction problems on discrete domains. <p> These properties can then be exploited later to prune efficiently the search space and to improve the resolution [6]. The paper concludes with section 5 where we summarize our results. 2 SCORE: a brief overview of the method The SCORE method <ref> [4, 2] </ref> combines advantages of local search and systematic techniques. We will assume that the reader is already familiar with these approaches [15]. <p> Then, the translation to the input of the resolution's solver SCORE is direct. This representation is specially well adapted for r-SAT CNF instances, ran-domly generated <ref> [4] </ref>. Now, if we are interested to describe structured SAT problems, the CNF representation may be very difficult to use because we need to write, at hand, a lot of constraints. <p> The compiler of SCORE (FD/B) programs has been developed on SPARC Station 10 under SOLARIS 2.5 and on a P166 under LINUX. A graphical environment integrates the compiler with many facilities to test several resolution methods <ref> [4] </ref>.
Reference: [5] <author> J. Chabrier, V. </author> <title> Juliard "Use of SCORE(FD/B) to the design of Field Programmable Gate Arrays in VHLSI design" Submit to publication, </title> <year> 1996. </year>
Reference-contexts: Moreover, these descriptions can be exploited later to improve the efficiency of the resolution's method [6]. Many problems like Ramsey, Queen, Pigeonhole, Schur, : : : or yet the design of a Field Programmable Gate Array in VHLSI design <ref> [5] </ref> are some examples of structured SAT problems. To describe and to solve propositional problems, some recent languages support interesting design features: PROLOGIII [7], CHIP [16], etc : : : and ILOG SOLVER [11].
Reference: [6] <author> J. Chabrier, J.M. Richer, J.J. </author> <title> Chabrier "Resolution of Structured SAT Problems with SCORE(FD/B)" CP'96 Workshop on Constraint Programming Applications Cambridge, </title> <address> MA, USA, </address> <year> 1996. </year>
Reference-contexts: Indeed, we are interested to produce a shorter description which takes account of structures inherent to the problem. Moreover, these descriptions can be exploited later to improve the efficiency of the resolution's method <ref> [6] </ref>. Many problems like Ramsey, Queen, Pigeonhole, Schur, : : : or yet the design of a Field Programmable Gate Array in VHLSI design [5] are some examples of structured SAT problems. <p> For the Ramsey example, we will note another important aspect of the language, the ability to detect some properties (symmetries) of the problem at the compilation phase. These properties can then be exploited later to prune efficiently the search space and to improve the resolution <ref> [6] </ref>. The paper concludes with section 5 where we summarize our results. 2 SCORE: a brief overview of the method The SCORE method [4, 2] combines advantages of local search and systematic techniques. We will assume that the reader is already familiar with these approaches [15]. <p> The Table 3 gives the results for the Ramsey problem with the Form 1 and with the Form 4. Note that an extended version of the compiler of SCORE (FD/B), designed to detect statically symmetries of the problems <ref> [6] </ref>, gives very good results with the Form 4. 5 Conclusion In this paper, we have shown that high level design features of a declarative constraint language as SCORE (DFD/B) contribute significantly to write expressive short structured SAT programs, and also to improve very much the performances in space and CPU
Reference: [7] <author> A. </author> <title> Colmerauer "An introduction to PROLOG III" CACM 33(7), </title> <type> p 69-90, </type> <year> 1990. </year>
Reference-contexts: Many problems like Ramsey, Queen, Pigeonhole, Schur, : : : or yet the design of a Field Programmable Gate Array in VHLSI design [5] are some examples of structured SAT problems. To describe and to solve propositional problems, some recent languages support interesting design features: PROLOGIII <ref> [7] </ref>, CHIP [16], etc : : : and ILOG SOLVER [11].
Reference: [8] <author> O.Dubois, P. Andr e, Y.Boufkhad, J. </author> <title> Carlier "SAT Versus UN-SAT." </title> <booktitle> Proc. of the second DIMACS implementation challenge, DIMACS Series in Discrete Mathematics and Theorical Computer Science, </booktitle> <year> 1993. </year>
Reference-contexts: Practically, if these languages approaches permit to describe concisely constraint satisfaction problems on boolean domains, the resolution methods supported are not so efficient than CSAT <ref> [8, 9] </ref>, or other methods based on local search such that G-SAT [13, 14] or TW-SAT [12]. Our proposal SCORE [1, 3, 4, 2] is a general framework of constraints system, developed at the Computer Research Center of Dijon to solve constraint satisfaction problems on discrete domains.
Reference: [9] <author> O. Dubois, J. </author> <title> Carlier "Probabilistic Approach to the Satisfiability Problem" Theoretical Computer Science 81, </title> <year> 1991. </year>
Reference-contexts: Practically, if these languages approaches permit to describe concisely constraint satisfaction problems on boolean domains, the resolution methods supported are not so efficient than CSAT <ref> [8, 9] </ref>, or other methods based on local search such that G-SAT [13, 14] or TW-SAT [12]. Our proposal SCORE [1, 3, 4, 2] is a general framework of constraints system, developed at the Computer Research Center of Dijon to solve constraint satisfaction problems on discrete domains.
Reference: [10] <author> M.R. Garey, </author> <title> D.S. Johnson "Computers and Intractability: A Guide to the Theory of NP-Completeness" Freeman, </title> <address> San Francisco, </address> <year> 1979. </year>
Reference-contexts: In , each clause c i is a disjunction of literals, and a literal is a variable or a single negation of a variable. SAT is a NP-complete problem considered as a typical case of a large family of computationally intractable problems <ref> [10] </ref>. All the propositional problems can be described in the CNF form.
Reference: [11] <institution> ILOG SOLVER "Reference Manual Version 3.0, </institution> <year> 1995. </year>
Reference-contexts: To describe and to solve propositional problems, some recent languages support interesting design features: PROLOGIII [7], CHIP [16], etc : : : and ILOG SOLVER <ref> [11] </ref>. Practically, if these languages approaches permit to describe concisely constraint satisfaction problems on boolean domains, the resolution methods supported are not so efficient than CSAT [8, 9], or other methods based on local search such that G-SAT [13, 14] or TW-SAT [12].
Reference: [12] <author> B. Mazure, L. Sais, E. </author> <title> Gregoire "Deux approches pour la resolution du probleme SAT" CNPC'96, Conference Nationale sur la resolution pratique des problemes NP-complets, </title> <address> Dijon, France, </address> <year> 1996 </year>
Reference-contexts: Practically, if these languages approaches permit to describe concisely constraint satisfaction problems on boolean domains, the resolution methods supported are not so efficient than CSAT [8, 9], or other methods based on local search such that G-SAT [13, 14] or TW-SAT <ref> [12] </ref>. Our proposal SCORE [1, 3, 4, 2] is a general framework of constraints system, developed at the Computer Research Center of Dijon to solve constraint satisfaction problems on discrete domains.
Reference: [13] <author> B. Selman, H. </author> <title> Kautz "Domain Independent Extensions to G-SAT: Solving Large Structured Satisfaction Problems." </title> <booktitle> IJCAI'93, </booktitle> <address> Cham-bery, France, </address> <year> 1993. </year>
Reference-contexts: Practically, if these languages approaches permit to describe concisely constraint satisfaction problems on boolean domains, the resolution methods supported are not so efficient than CSAT [8, 9], or other methods based on local search such that G-SAT <ref> [13, 14] </ref> or TW-SAT [12]. Our proposal SCORE [1, 3, 4, 2] is a general framework of constraints system, developed at the Computer Research Center of Dijon to solve constraint satisfaction problems on discrete domains.
Reference: [14] <author> B. Selman, H. Levesques, D. </author> <title> Mitchell "A New Method for Solving Hard Satisfiability Problems" AAAI'92, </title> <address> San Jose, CA, USA, </address> <year> 1992. </year>
Reference-contexts: Practically, if these languages approaches permit to describe concisely constraint satisfaction problems on boolean domains, the resolution methods supported are not so efficient than CSAT [8, 9], or other methods based on local search such that G-SAT <ref> [13, 14] </ref> or TW-SAT [12]. Our proposal SCORE [1, 3, 4, 2] is a general framework of constraints system, developed at the Computer Research Center of Dijon to solve constraint satisfaction problems on discrete domains.
Reference: [15] <author> E. </author> <title> Tsang "Foundations of constraint satisfaction" Academic Press, </title> <year> 1993. </year>
Reference-contexts: SAT is a NP-complete problem considered as a typical case of a large family of computationally intractable problems [10]. All the propositional problems can be described in the CNF form. A SAT problem in CNF is also a Constraint Satisfaction Problem (CSP) <ref> [15] </ref> defined as follows: 1 SCORE (FD/B) is the acronym of System of COnstraints and associated REpairs methods for solving constraint satisfaction problems on Finite Domains (FD) restricted to Boolean (B). <p> The paper concludes with section 5 where we summarize our results. 2 SCORE: a brief overview of the method The SCORE method [4, 2] combines advantages of local search and systematic techniques. We will assume that the reader is already familiar with these approaches <ref> [15] </ref>. SCORE can be considered as a local search method: it uses an initial variables configuration and searchs the next one in the neighborhood, until the solution is found.
Reference: [16] <author> P. </author> <title> Van Hentenryck "Constraint Satisfaction in Logic Programming" Logic Programming Series, </title> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1989. </year>
Reference-contexts: Many problems like Ramsey, Queen, Pigeonhole, Schur, : : : or yet the design of a Field Programmable Gate Array in VHLSI design [5] are some examples of structured SAT problems. To describe and to solve propositional problems, some recent languages support interesting design features: PROLOGIII [7], CHIP <ref> [16] </ref>, etc : : : and ILOG SOLVER [11].
Reference: [17] <author> P. Van Hentenryck, Y. </author> <title> Deville "The Cardinality Operator: A New Logical Connective for Constraint Logic Programming" 8th ICLP, </title> <address> Paris, </address> <year> 1991, </year> <title> p 745-759, </title> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, USA, </address> <year> 1991. </year>
Reference-contexts: In order to make shorter the description of structured SAT problems, we have introduced the notion of boolean cardinality constraint derived from <ref> [17] </ref>. The notation used in SCORE (FD/B) for this constraint is the following: #(ff; fi; fx 1 ; x 2 ; :::; x m g) where ff, fi are natural integers, and x i , 1 i m are literals.
References-found: 17

