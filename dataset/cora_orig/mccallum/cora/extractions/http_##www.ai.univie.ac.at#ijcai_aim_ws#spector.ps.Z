URL: http://www.ai.univie.ac.at/ijcai_aim_ws/spector.ps.Z
Refering-URL: http://www.ai.univie.ac.at/ijcai_aim_ws/program.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: flspector, aalperng@hampshire.edu  
Title: Induction and Recapitulation of Deep Musical Structure  
Author: Lee Spector and Adam Alpern U. S. A. 
Address: Amherst, MA 01002  
Affiliation: School of Cognitive Science and Cultural Studies Hampshire College  
Abstract: We describe recent extensions to our framework for the automatic generation of music-making programs. We have previously used genetic programming techniques to produce music-making programs that satisfy user-provided critical criteria. In this paper we describe new work on the use of connectionist techniques to automatically induce musical structure from a corpus. We show how the resulting neural networks can be used as critics that drive our genetic programming system. We argue that this framework can potentially support the induction and recapitulation of deep structural features of music. We present some initial results produced using neural and hybrid symbolic/neural critics, and we discuss directions for future work.
Abstract-found: 1
Intro-found: 1
Reference: [ Baker, 1988 ] <author> Baker, D. </author> <year> 1988. </year> <editor> David Baker's Jazz Improvisation, </editor> <title> Revised Edition. </title> <publisher> Alfred Publishing Co., Inc. </publisher>
Reference-contexts: To demonstrate our framework we produced a system that automatically constructs an interactive jazz improvisation program when presented with a user-provided music critic. We ran the system with a music critic that judged compliance with a small number of rules found in a popular jazz method book <ref> [ Baker, 1988 ] </ref> . The resulting programs performed acceptably but not spectacularly. We attributed the weakness of the constructed jazz musicians to the weakness of the music critics that guided their construction. <p> Each run produced a response melody and each call/response pair was assessed on the basis of a set of critical criteria inspired by those presented in <ref> [ Baker, 1988 ] </ref> . The criteria were TONAL-NOVELTY-BALANCE, RHYTHMIC-NOVELTY-BALANCE, TONAL-RESPONSE-BALANCE, SKIP-BALANCE, and RHYTHMIC-COHERENCE [ Spec-tor and Alpern, 1994 ] . Our genetic programming system produced a response-generating program with behavior that satisfied the provided critic.
Reference: [ Baluja et al., 1994 ] <author> Baluja, S., Dean Pomerleau, and Todd Jochem. </author> <year> 1994. </year> <title> Towards Automated Artificial Evolution for Computer-generated Images. </title> <booktitle> In Connection Science, </booktitle> <volume> Vol. 6, No. 2 & 3, </volume> <pages> 325-354. </pages>
Reference-contexts: We believe that our combination of neural and genetic techniques will allow for the induction and recapitulation of deeper structural features of music than have been captured in previous systems. A similar marriage of neural and genetic techniques has been reported by Baluja et al. <ref> [ Baluja et al., 1994 ] </ref> . Our project differs from theirs in that we are evolving music-making programs while Baluja et al. evolved images.
Reference: [ Cope, 1991 ] <author> Cope, D. </author> <year> 1991. </year> <title> Computers and Musical Style. </title> <address> Madison, Wisconsin: </address> <publisher> A-R Editions, Inc. </publisher>
Reference-contexts: We use the resulting critics to drive the evolution of new music-making programs. Previous work in algorithmic composition has produced programs that induce musical structure from a corpus and then recapitulate that structure in new pieces of music (for example <ref> [ Cope, 1991 ] </ref> and [ Rowe, 1993 ] | Chapter 7 of [ Rowe, 1993 ] contains a good survey of related work). The induced and recapitulated structure generally captures relatively shallow surface features of the input (e.g., frequently occurring interval sequences).
Reference: [ Fahlman, 1988 ] <author> Fahlman, S.E. </author> <year> 1988. </year> <title> An Empirical Study of Learning Speed in Back-Propagation Networks. </title> <booktitle> In Proceedings of the 1988 Connectionist Models Summer School. </booktitle> <publisher> Morgan-Kaufmann. </publisher>
Reference-contexts: Our networks were trained to respond in a positive way only to inputs from the first category; the intention was to train the networks to recognize reasonable continuations to reasonable fragments of jazz melody. We trained the network, using Fahlman's Quickprop algorithm <ref> [ Fahlman, 1988 ] </ref> , to respond with the vector (1 0) to the "good" inputs and (0 1) to the "bad" inputs. We presented a total of 100 input patterns during training and our network rapidly converged to minimal error.
Reference: [ Koza, 1992 ] <editor> Koza, J.R. </editor> <booktitle> 1992. Genetic Programming. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference-contexts: 1 Introduction In previous work we developed a framework for the automatic generation of art-making programs on the basis of user-provided critical criteria [ Spector and Alpern, 1994 ] . Our implementation of this framework used genetic programming technology developed by Koza <ref> [ Koza, 1992 ] </ref> and in principle could be applied to the production of artworks in a variety of arts media. To demonstrate our framework we produced a system that automatically constructs an interactive jazz improvisation program when presented with a user-provided music critic. <p> Instances of our framework take critics and cultural contexts as input and produce constructed artists as output. 3 Genetic Programming of Artists The technology of genetic programming <ref> [ Koza, 1992 ] </ref> provides a straightforward way to implement our framework. Genetic programming is a technique for the automatic generation of computer programs; in our case we can use the technique to automatically generate computer programs that will function as constructed artists. <p> The mutation operator produces one offspring from a single parent by replacing a randomly selected program fragment with a newly generated random fragment. 1 For the work described in this paper we used tournament selection <ref> [ Koza, 1992 ] </ref> with tournament group sizes between 4 and 7. Over many generations of fitness assessment, reproduction, crossover, and mutation, the average fitness of the population may tend to improve, as may the fitness of the best-of-generation individual from each generation. <p> The two-component network outputs were converted into "standardized fitness" values <ref> [ Koza, 1992 ] </ref> , for which lower values are "more fit," by adding the second component to the result of subtracting the first component from 1.0.
Reference: [ Koza, 1994 ] <editor> Koza, J.R. </editor> <booktitle> 1994. Genetic Programming II. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference-contexts: The transposition interval is returned as the value of the function call. The terminal set consists of the integers from 0 to 95 and the loop variable i (which has the value 0 outside of any loop). Each evolving program also includes two automatically defined functions <ref> [ Koza, 1994 ] </ref> , ADF0 and ADF1, each of which takes three arguments, ARG0, ARG1, and ARG2. The function set for the main program therefore also includes ADF0 and ADF1.
Reference: [ Page, 1994 ] <author> Page, M.P.A. </author> <year> 1994. </year> <title> Modelling the Perception of Musical Sequences with Self-organizing Neural Networks. </title> <booktitle> In Connection Science, </booktitle> <volume> Vol. 6, No. 2 & 3, </volume> <pages> 223-246. </pages>
Reference-contexts: It is reasonable to assume that this task would be achieved more easily if divided into subtasks such as pitch structure and rhythm analysis. A wide range of network architectures have been used for related music classification tasks <ref> [ Page, 1994; Todd and Loy, 1991 ] </ref> , and it is clear that even these subtasks are quite difficult.
Reference: [ Rowe, 1993 ] <author> Rowe, R. </author> <year> 1993. </year> <title> Interactive Music Systems: Machine Listening and Composing. </title> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference-contexts: We use the resulting critics to drive the evolution of new music-making programs. Previous work in algorithmic composition has produced programs that induce musical structure from a corpus and then recapitulate that structure in new pieces of music (for example [ Cope, 1991 ] and <ref> [ Rowe, 1993 ] </ref> | Chapter 7 of [ Rowe, 1993 ] contains a good survey of related work). The induced and recapitulated structure generally captures relatively shallow surface features of the input (e.g., frequently occurring interval sequences). <p> Previous work in algorithmic composition has produced programs that induce musical structure from a corpus and then recapitulate that structure in new pieces of music (for example [ Cope, 1991 ] and <ref> [ Rowe, 1993 ] </ref> | Chapter 7 of [ Rowe, 1993 ] contains a good survey of related work). The induced and recapitulated structure generally captures relatively shallow surface features of the input (e.g., frequently occurring interval sequences). We view our current project as an extension of such work to deeper structural levels.
Reference: [ Spector, 1995 ] <author> Spector, L. </author> <year> 1995. </year> <title> Evolving Control Structures with Automatically Defined Macros. </title> <note> Submitted to the 1995 AAAI Fall Symposium on Genetic Programming. </note>
Reference-contexts: We are also experimenting with enhancements to the genetic programming component of our system. For example, we are exploring trade-offs in general vs. special purpose function and terminal sets, and we are examining a possible role for automatically defined macros <ref> [ Spector, 1995 ] </ref> . Acknowledgments Jay Garfield first suggested the use of neural network-based critics in our framework. James Carlson and Garth Zenie provided valuable feedback on the project as it progressed. Wil Bonner and Aaron Culich helped with neural network simulation software and with system integration problems.
Reference: [ Spector and Alpern, 1994 ] <author> Spector, L., and A. Alpern. </author> <year> 1994. </year> <title> Criticism, Culture, and the Automatic Generation of Artworks. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, AAAI-94, </booktitle> <pages> 3-8. </pages> <address> Menlo Park, CA and Cambridge, MA: </address> <publisher> AAAI Press/The MIT Press. </publisher>
Reference-contexts: 1 Introduction In previous work we developed a framework for the automatic generation of art-making programs on the basis of user-provided critical criteria <ref> [ Spector and Alpern, 1994 ] </ref> . Our implementation of this framework used genetic programming technology developed by Koza [ Koza, 1992 ] and in principle could be applied to the production of artworks in a variety of arts media. <p> an example and discuss directions for additional work. 2 Automatic Generation of Artists Our intention in developing a framework for the automatic generation of art-making programs was to separate those components of an AI art-making system to which aesthetic judgement should apply from those to which scientific judgement should apply <ref> [ Spector and Alpern, 1994 ] </ref> . The essential move was to suggest that AI art systems take aesthetic critical criteria as param-eters. Such systems can produce art-making programs to satisfy a range of different aesthetic criteria; we call the resulting programs constructed artists. <p> Genetic programming systems take fitness functions as parameters. Any function that maps programs to fitness values may be used as a fitness function. For the production of constructed musicians we can provide music critics as parameters to the system in the form of fitness functions <ref> [ Spector and Alpern, 1994 ] </ref> . The genetic programming process starts by creating a large initial population of programs that are random combinations of elements from problem-specific function and terminal sets. Each of the programs in the initial population is assessed for fitness. <p> Nor is it an indication that we made improper choices (of function set, terminal set, etc.) in applying the technique; it just means that we should work to improve the critical criteria that we provide as parameters to the system. <ref> [ Spector and Alpern, 1994 ] </ref> The primary goal of our current work is to improve the music critic that drives the evolutionary process. We are using connectionist techniques to automatically induce structural principles underlying a corpus of jazz melodies.
Reference: [ Teller, 1994 ] <author> Teller, A. </author> <year> 1994. </year> <title> The Evolution of Mental Models. </title> <editor> In K. Kinnear, Jr., Ed., </editor> <booktitle> Advances in Genetic Programming, </booktitle> <pages> 199-219. </pages> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference-contexts: In our current work we are using more generic function and terminal sets; our terminals are integers and our functions are numerical operators, control structures, and memory accessors. The call melody is provided in the form of an indexed memory <ref> [ Teller, 1994 ] </ref> ; a program may access the call melody through the use of a CALL-COPY function. Similarly, the response melody is constructed in a separate indexed memory. The case-base of known melodies is represented as arrays of indexed memories accessible through CASE-CALL-COPY and CASE-RESPONSE-COPY.
Reference: [ Todd and Loy, 1991 ] <author> Todd, P.M., and D.G. Loy. </author> <year> 1991. </year> <title> Music and Connectionism. </title> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference-contexts: It is reasonable to assume that this task would be achieved more easily if divided into subtasks such as pitch structure and rhythm analysis. A wide range of network architectures have been used for related music classification tasks <ref> [ Page, 1994; Todd and Loy, 1991 ] </ref> , and it is clear that even these subtasks are quite difficult. <p> One short-term solution to this problem is to augment neural network critics with symbolic critical criteria that help to ensure some degree of "well-formedness." The longer-term solution is to improve the network critics by drawing on the considerable past work on connectionist models of music processing <ref> [ Todd and Loy, 1991 ] </ref> . This is one of our immediate research priorities. As we improve our neural network architectures we also intend to begin working with longer musical fragments.
References-found: 12

