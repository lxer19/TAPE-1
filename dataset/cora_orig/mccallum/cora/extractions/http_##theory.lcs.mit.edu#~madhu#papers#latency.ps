URL: http://theory.lcs.mit.edu/~madhu/papers/latency.ps
Refering-URL: http://theory.lcs.mit.edu/~madhu/papers.html
Root-URL: 
Title: The Minimum Latency Problem  
Author: Avrim Blum Prasad Chalasani Don Coppersmith Bill Pulleyblank Prabhakar Raghavan Madhu Sudan 
Keyword: P n  
Note: Supported in part by NSF National Young Investigator grant CCR-9357793.  
Address: CMU.  
Affiliation: School of Computer Science,  School of Computer Science, CMU. IBM T.J. Watson Research Center.  
Abstract: We are given a set of points p 1 ; : : :; p n and a symmetric distance matrix (d ij ) giving the distance between p i and p j . We wish to construct a tour that minimizes i=1 `(i), where `(i) is the latency of p i , defined to be the distance traveled before first visiting p i . This problem is also known in the literature as the delivery-man problem or the traveling repairman problem. It arises in a number of applications including disk-head scheduling, and turns out to be surprisingly different from the traveling salesman problem in character. We give exact and approximate solutions to a number of cases, including a constant-factor approximation algorithm whenever the distance matrix satisfies the triangle inequality. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. Afrati, S. Cosmadakis, C. Papadimitriou, G. Papageorgiou, N. Papakostantinou. </author> <title> The Complexity of the Traveling Repairman Problem. </title> <journal> Informatique Theorique et Applications (Theoretical Informatics and Applications), </journal> <volume> Vol. 20, No. 1, </volume> <pages> pages 79-87, </pages> <year> 1986. </year> <month> ALMSS </month>
Reference-contexts: Minieka also gives an exponential time algorithm for solving the problem optimally on general trees. In [9] and [5] exponential time algorithms are provided to compute the MLT optimally in general metric spaces. Afrati et al. <ref> [1] </ref> study a version of the problem in which some requests have prescribed deadlines on their latencies. Among other results, they show that the latency problem on the line can be solved in polynomial time by dynamic programming. 1.1. <p> We illustrate this in two cases: when the p i are points on the line, and when they are vertices of a tree of diameter 3. Although Afrati et al. <ref> [1] </ref> have already shown a dynamic programming algorithm for the line, we include here a brief outline for completeness. When the p i are points on the line, a partially complete tour covers an interval of the line that includes the starting point.
Reference: [2] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, and M. Szegedy. </author> <title> Proof verification and the intractability of approximation problems. </title> <booktitle> In Proceedings of the 33rd IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 14-23, </pages> <year> 1992. </year>
Reference-contexts: In conjunction with the MAX SNP-hardness of the TSP (1,2) problem [12] and the non-existence of polynomial N 1 &lt;< N 2 time approximation schemes for MAX SNP-hard problems <ref> [2] </ref> this connection implies that one cannot hope for arbitrarily good approximations to the minimum latency problem on general metric spaces.
Reference: [3] <author> R. Baeza-Yates, J. Culberson and G.J. Rawlins. </author> <title> Searching with Uncertainty. </title> <note> To appear in Information and Computation. </note>
Reference-contexts: We begin with a familiar algorithm on the real line: starting at the origin, we are to reach a point p at an unknown position on the line. Let d be the distance from the origin to p. Baeza-Yates, Culber-son and Rawlins <ref> [3] </ref> have given a simple deterministic "doubling" algorithm that finds p after walking at most a distance 9d.
Reference: [4] <author> D. Bienstock, M. X. Goemans, D. Simchi-Levi, and D. P. Williamson. </author> <title> A note on the prize collecting traveling salesman problem. </title> <journal> Math. Prog., </journal> <volume> 59, </volume> <pages> 413-420, </pages> <year> 1993. </year>
Reference-contexts: We first show how to construct a (3; 6)-TSP-approximator from a 2-approximation algorithm for the "prize-collecting traveling salesman problem" due to Goemans and Williamson [8] (which improves on a 5/2-approximation due to Bien-stock et al. <ref> [4] </ref>). We then describe how the TSP-approximator is used to approximate the latency problem. The prize-collecting traveling salesman problem is the following.
Reference: [5] <author> L. Bianco, A. Mingozzi and S. Ricciardelli. </author> <title> The traveling salesman problem with cumulative costs Networks, </title> <journal> vol.23, no.2, </journal> <pages> pages 81-91, </pages> <month> March </month> <year> 1993. </year>
Reference-contexts: The time-dependent TSP and the MLT problem have been studied earlier, under the names of the deliveryman problem or the traveling repairman problem <ref> [10, 9, 13, 5] </ref>. In [10] and [13] it is shown that any depth-first route is an optimal MLT on a tree with unit edge weights. Minieka also gives an exponential time algorithm for solving the problem optimally on general trees. <p> In [10] and [13] it is shown that any depth-first route is an optimal MLT on a tree with unit edge weights. Minieka also gives an exponential time algorithm for solving the problem optimally on general trees. In [9] and <ref> [5] </ref> exponential time algorithms are provided to compute the MLT optimally in general metric spaces. Afrati et al. [1] study a version of the problem in which some requests have prescribed deadlines on their latencies.
Reference: [6] <author> N. Garg and D. Hochbaum. </author> <title> An O(log k) approximation algorithm for the k minimum spanning tree problem in the plane. </title> <booktitle> To appear in Proceedings of the 26th Annual ACM Symposium on Theory of Computing (These proceedings), </booktitle> <year> 1994. </year>
Reference-contexts: Unfortunately, the task of finding the best i-tree is also NP hard <ref> [6] </ref> for general metric spaces and hence the above inequality does not solve the problem for us. We are able to find an exact algorithm for the i-tree problem for the case of the weighted tree. Garg and Hochbaum [6] also give an O (log i) approximation algorithm for the case <p> the task of finding the best i-tree is also NP hard <ref> [6] </ref> for general metric spaces and hence the above inequality does not solve the problem for us. We are able to find an exact algorithm for the i-tree problem for the case of the weighted tree. Garg and Hochbaum [6] also give an O (log i) approximation algorithm for the case when the metric space is Euclidean in a fixed number of dimensions, and this yields a O (log n) approximation to the MLT in such spaces. <p> The reduction works provided the distances satisfy the triangle inequality. The i-tree problem is NP-hard to solve in general, but can be O (log n)-approximated in Euclidean spaces of fixed dimension <ref> [6] </ref>. To simplify the presentation, let us assume that the distance from the starting point to its nearest neighbor is 1. Renumber the points 1 through n, where the point i is the ith vertex to be visited by the optimal tour.
Reference: [7] <author> M. Goemans and J. </author> <title> Kleinberg. </title> <type> Personal Communication. </type> <year> 1994. </year>
Reference-contexts: Theorem 6 0 : There exists a polynomial time 72-approximation algorithm for the MLT whenever the distances (d ij ) satisfy the triangle inequality. This constant of 72 has been further improved by recent work of Goemans and Kleinberg <ref> [7] </ref> who give a factor of 29 approximation algorithm for the MLT. However the 144 approximation algorithm given by Theorem 6 has some additional properties which we use in the next section. 3.3. <p> Details of this proof will be provided in the full paper. 4. Conclusion Very recently, Goemans and Kleinberg <ref> [7] </ref> have shown that our factor of 72 approximation for the MLT can be improved to a factor slightly less than 29. It remains to be seen whether can be used to improve the constant for the positive-linear TDTSP.
Reference: [8] <author> M. Goemans and D. Williamson. </author> <title> General approximation technique for constrained forest problems. </title> <booktitle> In Proceedings of the 3rd Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 307-315, </pages> <year> 1992. </year>
Reference-contexts: We then use a constant-factor approximation algorithm to the prize-collecting TSP <ref> [8] </ref> to obtain an algorithm extending the above ideas. The solution we find to approximate the MLT also turns out to approximate the TSP simultaneously. <p> Hence in what follows we will sometimes call the approximator with only one of the parameters specified. We first show how to construct a (3; 6)-TSP-approximator from a 2-approximation algorithm for the "prize-collecting traveling salesman problem" due to Goemans and Williamson <ref> [8] </ref> (which improves on a 5/2-approximation due to Bien-stock et al. [4]). We then describe how the TSP-approximator is used to approximate the latency problem. The prize-collecting traveling salesman problem is the following.
Reference: [9] <author> A. Lucena. </author> <title> Time-dependent traveling salesman problem the deliveryman case. Networks, </title> <journal> vol.20, </journal> <volume> no.6, </volume> <pages> pages 753-763, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: The time-dependent TSP and the MLT problem have been studied earlier, under the names of the deliveryman problem or the traveling repairman problem <ref> [10, 9, 13, 5] </ref>. In [10] and [13] it is shown that any depth-first route is an optimal MLT on a tree with unit edge weights. Minieka also gives an exponential time algorithm for solving the problem optimally on general trees. <p> In [10] and [13] it is shown that any depth-first route is an optimal MLT on a tree with unit edge weights. Minieka also gives an exponential time algorithm for solving the problem optimally on general trees. In <ref> [9] </ref> and [5] exponential time algorithms are provided to compute the MLT optimally in general metric spaces. Afrati et al. [1] study a version of the problem in which some requests have prescribed deadlines on their latencies.
Reference: [10] <author> E. Minieka. </author> <title> The delivery man problem on a tree network. </title> <journal> Annals of Operations Research, </journal> <volume> vol. 18, no. </volume> <pages> 1-4, pages 261-266, </pages> <month> February </month> <year> 1989. </year>
Reference-contexts: The time-dependent TSP and the MLT problem have been studied earlier, under the names of the deliveryman problem or the traveling repairman problem <ref> [10, 9, 13, 5] </ref>. In [10] and [13] it is shown that any depth-first route is an optimal MLT on a tree with unit edge weights. Minieka also gives an exponential time algorithm for solving the problem optimally on general trees. <p> The time-dependent TSP and the MLT problem have been studied earlier, under the names of the deliveryman problem or the traveling repairman problem [10, 9, 13, 5]. In <ref> [10] </ref> and [13] it is shown that any depth-first route is an optimal MLT on a tree with unit edge weights. Minieka also gives an exponential time algorithm for solving the problem optimally on general trees. <p> We start by proving that any depth first search tree gives an optimal MLT for the unweighted tree (all edge lengths are 1). This theorem has been proved in the earlier mentioned works of <ref> [10, 13] </ref>, but our proof is simpler. Surprisingly, this theorem does not hold for weighted trees (i.e., depth first search trees are not optimal traversals). We consider a special case of weighted trees | diameter 3 trees | and give a simple dynamic programming algorithm to solve this case optimally. <p> This is described in Sec--tion 3.3. 2. Exact Solutions In this section we give polynomial-time algorithms for computing the MLT in some special cases. 2.1. Unweighted trees and depth-first search Consider the case when the points are vertices of a tree all of whose edges have unit length. Minieka <ref> [10] </ref> and Reynolds [13] have shown that a tour is optimal if and only if it is a depth-first search. Here we give a very simple and succinct proof of this result; we proceed by showing that every depth-first search is optimal, and that optimal tours are depth-first searches.
Reference: [11] <author> C. H. Papadimitriou and M. Yannakakis. </author> <title> Shortest paths without a map. </title> <booktitle> Proc. 16th ICALP, </booktitle> <pages> pages 610-620, </pages> <month> July </month> <year> 1989. </year>
Reference-contexts: One can extend this approach to the case when the p i are vertices of a layered graph, adapting familiar algorithms for layered graph traversal <ref> [11] </ref> to get provably good approximations. We omit these details here. 3.1. Reduction to i-trees Given n points and a distance metric between them, the i-tree problem is the following: we are to find the shortest tree spanning i of the input points.
Reference: [12] <author> C. H. Papadimitriou and M. Yannakakis. </author> <title> The traveling salesman problem with distances one and two. </title> <note> In Mathematics of Operations Research, 1992. To appear. </note>
Reference-contexts: For general metric spaces, it is possible to reduce the TSP where all distances are either 1 or 2 (a metric space) to the MLT. In conjunction with the MAX SNP-hardness of the TSP (1,2) problem <ref> [12] </ref> and the non-existence of polynomial N 1 &lt;< N 2 time approximation schemes for MAX SNP-hard problems [2] this connection implies that one cannot hope for arbitrarily good approximations to the minimum latency problem on general metric spaces.
Reference: [13] <author> R. Reynolds. </author> <type> Personal Communication. </type> <year> 1993. </year>
Reference-contexts: The time-dependent TSP and the MLT problem have been studied earlier, under the names of the deliveryman problem or the traveling repairman problem <ref> [10, 9, 13, 5] </ref>. In [10] and [13] it is shown that any depth-first route is an optimal MLT on a tree with unit edge weights. Minieka also gives an exponential time algorithm for solving the problem optimally on general trees. <p> The time-dependent TSP and the MLT problem have been studied earlier, under the names of the deliveryman problem or the traveling repairman problem [10, 9, 13, 5]. In [10] and <ref> [13] </ref> it is shown that any depth-first route is an optimal MLT on a tree with unit edge weights. Minieka also gives an exponential time algorithm for solving the problem optimally on general trees. <p> We start by proving that any depth first search tree gives an optimal MLT for the unweighted tree (all edge lengths are 1). This theorem has been proved in the earlier mentioned works of <ref> [10, 13] </ref>, but our proof is simpler. Surprisingly, this theorem does not hold for weighted trees (i.e., depth first search trees are not optimal traversals). We consider a special case of weighted trees | diameter 3 trees | and give a simple dynamic programming algorithm to solve this case optimally. <p> Exact Solutions In this section we give polynomial-time algorithms for computing the MLT in some special cases. 2.1. Unweighted trees and depth-first search Consider the case when the points are vertices of a tree all of whose edges have unit length. Minieka [10] and Reynolds <ref> [13] </ref> have shown that a tour is optimal if and only if it is a depth-first search. Here we give a very simple and succinct proof of this result; we proceed by showing that every depth-first search is optimal, and that optimal tours are depth-first searches.
References-found: 13

