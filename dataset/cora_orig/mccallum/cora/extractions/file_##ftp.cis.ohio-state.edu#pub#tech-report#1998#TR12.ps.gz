URL: file://ftp.cis.ohio-state.edu/pub/tech-report/1998/TR12.ps.gz
Refering-URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/TRList.html
Root-URL: 
Email: E-mail: fssubrama,singhalg@cis.ohio-state.edu  
Title: Design and Verification of a Secure, Atomic Transaction Execution Protocol for Electronic Commerce  
Author: Srividhya Subramanian and Mukesh Singhal 
Keyword: Electronic commerce, transaction, security, atomicity, privacy, anonymity, auction, verification, validation.  
Address: Columbus, OH 43210-1277  
Affiliation: Dept. of Computer and Information Science The Ohio State University,  
Abstract: Computer networks are an efficient, inexpensive, convenient and fast mode of communication and information transfer. There is widespread demand for the ability to buy and sell goods, especially electronic, using this medium. Sales over computer networks is also referred to as electronic commerce. A protocol for electronic commerce transactions is the series of steps that two parties must follow in order to transact business successfully. Various issues arise while designing electronic commerce protocols: how can one party be prevented from disappearing with the money/goods in the middle of a transaction? How can a party establish its identity without revealing personal information to unknown and untrusted parties? How can we prevent a third party from "stealing" money from the network? All these and other problems make designing an electronic commerce protocol both challenging and interesting. In this paper, we first present a protocol for electronic commerce transactions between an anonymous customer and a merchant whose identity is public. Protocol interrruption by involved parties, passive and active attacks by an intruder, and corruption or loss of messages in the network do not cost the merchant or the customer more than some additional computation. Furthermore, under all circumstances, the transaction is either completed (the right amount of money is exchanged for the right goods) or aborted (there is no transfer of money or goods). In other words, the protocol ensures anonymity, security, and atomicity in business transactions. Using a BAN-style [5] logic, we prove these properties in the presence of an intruder. We also present a protocol for electronic auctions. The auction protocol has the same properties of anonymity, security, and atomicity as the transaction protocol. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Anderson. </author> <title> Why Cryptosystems Fail. </title> <journal> In Communications of ACM, </journal> <volume> volume 37, </volume> <year> 1994. </year>
Reference-contexts: An electronic commerce transaction is the exchange of goods for money over electronic networks. A protocol in electronic commerce is a series of steps required to successfully complete an electronic commerce transaction. Several properties have been identified as either required or desirable in protocols for transactions in electronic commerce <ref> [1, 18] </ref>.
Reference: [2] <author> M. Bellare, J. A. Garay, R. Hauser, et al. </author> <title> iKP- A Family of Secure Electronic Payment Protocols. </title> <booktitle> In Proceedings of the First USENIX Workshop on Electronic Commerce, </booktitle> <year> 1995. </year>
Reference-contexts: Appendix B describes a protocol for auction over electronic networks. 2 Previous Work In this section we briefly discuss some electronic commerce protocols and methods of formal verification proposed in recent literature. 2.1 Protocols for Electronic Commerce A number of systems <ref> [2, 4, 7, 8, 13, 16, 23] </ref> have been developed that implement some of the important features listed in Section 1. A representative set of such systems is described below. Ecash: Ecash, a system designed by DigiCash [8], emphasizes on privacy and anonymity [6] of the customer. <p> Privacy is enforced by use of a customer "secret" ( like a PIN). If this secret is compromised, so is the privacy. There is a limited form of anonymity. iKP: This family of protocols, designed by IBM <ref> [2] </ref>, emphasizes on the security of transactions. The protocol works as follows: the merchant and customer agree upon the price and the product to be exchanged. The customer digitally signs a purchase request with the price, secures it with the bank's public key, and sends it to the bank.
Reference: [3] <author> A. Bleeker and L. Meertens. </author> <title> A Semantics for BAN Logic. </title> <booktitle> In DIMACS Workshop on Design and Formal Verification of Security Protocols, </booktitle> <year> 1997. </year>
Reference-contexts: The logic we use in this paper is based on a semantics of BAN logic <ref> [3, 5] </ref>. In this section, we will state the language (or syntax), the axioms, and the semantics of this logic. We will also develop some theorems that will be used later to analyze the protocol. 4.1 The Language We distinguish between the following sorts: Principal, Key, Message, and Formula. <p> : Y 2 S R implies X 2 O P ; s j= k public key of P if for all R : [X] k 2 S R implies X 2 S P ; It can be proved that the above logic is sound with respect to the given semantics <ref> [3] </ref>. 4.5 Proving properties of the protocol Definition 4 The logic translation of an action a, T (a) is defined as: T (P ! Q : X) := (P once said X ^ Q sees X ^ I sees X) (here, I refers to the intruder) T (;) := ; 7 <p> Theorem 1 If A [ T (P ) is positive, A allows P , and A [ T (P ) ` C, then fR [A]g P fR [C]g. For a proof, see <ref> [3] </ref>.
Reference: [4] <author> J. P. Boly et al. </author> <title> The ESPRIT Project CAFE High Security Digital Payment Systems. </title> <booktitle> In ESORICS '94, </booktitle> <year> 1994. </year>
Reference-contexts: Appendix B describes a protocol for auction over electronic networks. 2 Previous Work In this section we briefly discuss some electronic commerce protocols and methods of formal verification proposed in recent literature. 2.1 Protocols for Electronic Commerce A number of systems <ref> [2, 4, 7, 8, 13, 16, 23] </ref> have been developed that implement some of the important features listed in Section 1. A representative set of such systems is described below. Ecash: Ecash, a system designed by DigiCash [8], emphasizes on privacy and anonymity [6] of the customer.
Reference: [5] <author> M. Burrows, M. Abadi, and R. Needham. </author> <title> A Logic of Authentication. </title> <journal> In ACM Transactions on Computer Systems, </journal> <year> 1990. </year>
Reference-contexts: The overhead cost is low. 2.2 Methods for Formal Verification Cryptographic protocols, if designed improperly, may have flaws that make them vulnerable to various security attacks. The use of formal methods to analyze the correctness of cryptographic protocols became prevalent with the development of the BAN logic in 1989 <ref> [5] </ref>. Since then several papers have been published reporting problems with the BAN logic [17, 22, 24] and several others proposing BAN-style logics that overcome many of these limitations [12, 25]. <p> The logic we use in this paper is based on a semantics of BAN logic <ref> [3, 5] </ref>. In this section, we will state the language (or syntax), the axioms, and the semantics of this logic. We will also develop some theorems that will be used later to analyze the protocol. 4.1 The Language We distinguish between the following sorts: Principal, Key, Message, and Formula.
Reference: [6] <author> D. Chaum. </author> <title> Achieving Electronic Privacy. </title> <booktitle> In Scientific American, </booktitle> <year> 1992. </year>
Reference-contexts: A representative set of such systems is described below. Ecash: Ecash, a system designed by DigiCash [8], emphasizes on privacy and anonymity <ref> [6] </ref> of the customer. The protocol works as follows: the customer withdraws an ecash coin from the bank. The customer pays a merchant by sending a function of the coin and an arbitrary number provided by the merchant.
Reference: [7] <author> CyberCash. </author> <title> The CyberCash System How it works. </title> <note> Available at http://www.cybercash.com/cybercash/cyber2.html. </note>
Reference-contexts: Appendix B describes a protocol for auction over electronic networks. 2 Previous Work In this section we briefly discuss some electronic commerce protocols and methods of formal verification proposed in recent literature. 2.1 Protocols for Electronic Commerce A number of systems <ref> [2, 4, 7, 8, 13, 16, 23] </ref> have been developed that implement some of the important features listed in Section 1. A representative set of such systems is described below. Ecash: Ecash, a system designed by DigiCash [8], emphasizes on privacy and anonymity [6] of the customer.
Reference: [8] <author> DigiCash. </author> <title> About Ecash. </title> <note> Available at http://www.digicash.com/ecash/ecash-home.html. </note>
Reference-contexts: Privacy, anonymity, and low overhead cost, on the other hand, are desirable features. While many protocols exist for electronic commerce, none has all the five features listed above. Some of them emphasize anonymity and privacy at the cost of atomicity <ref> [8] </ref>, others emphasize atom-icity, but do not provide anonymity [21]. Although, these protocols are suitable for specific situations in the commerce, there is a need for a general protocol that is suitable for most situations. In addition, many proposed protocols have not been formally analyzed for protocol correctness. <p> Appendix B describes a protocol for auction over electronic networks. 2 Previous Work In this section we briefly discuss some electronic commerce protocols and methods of formal verification proposed in recent literature. 2.1 Protocols for Electronic Commerce A number of systems <ref> [2, 4, 7, 8, 13, 16, 23] </ref> have been developed that implement some of the important features listed in Section 1. A representative set of such systems is described below. Ecash: Ecash, a system designed by DigiCash [8], emphasizes on privacy and anonymity [6] of the customer. <p> A representative set of such systems is described below. Ecash: Ecash, a system designed by DigiCash <ref> [8] </ref>, emphasizes on privacy and anonymity [6] of the customer. The protocol works as follows: the customer withdraws an ecash coin from the bank. The customer pays a merchant by sending a function of the coin and an arbitrary number provided by the merchant.
Reference: [9] <author> M. Franklin and M. Reiter. </author> <title> The Design and Implementation of a Secure Auction Service. </title> <booktitle> In Proceedings of IEEE Symposium on Security and Privacy, </booktitle> <year> 1995. </year>
Reference-contexts: Furthermore, most existing electronic commerce protocols do not handle auctions. When they do, they allow only a very simplified version of auction with no more than one round of bidding <ref> [9] </ref>. Auctions are an important and common form of commerce today. A difficult aspect of auctions is that the bidder must be present at the site of the auction. This reduces the appeal of auction and restricts the number of people who would otherwise participate in it. <p> Furthermore, we showed that our protocol incurs nominal charges and can easily be extended to transactions involving non-electronic goods. Very little work has been done towards the design of secure, atomic auction protocols <ref> [9] </ref>. To our best knowledge, there is no published protocol that supports more than one round of bidding. We presented ( in Appendix B) a protocol for electronic auction with multiple rounds of bidding. This protocol is also secure, atomic, anonymous, private, and nominal in cost.
Reference: [10] <author> E. Gabber and A. Silberschatz. </author> <title> Agora: A Minimal Distributed Protocol for Electronic Commerce. </title> <booktitle> In 2nd USENIX Workshop on Electronic Commerce, </booktitle> <year> 1996. </year>
Reference-contexts: Furthermore, there are only five messages exchanged between the customer and the merchant. Therefore, the cost incurred is nominal <ref> [10] </ref>. 5.3.3 Non-Electronic Goods With some minor modifications, the protocol can be extended to non-electronic goods. In Step 3, instead of sending an encrypted product, Bob only acknowledges the receipt of the encrypted payment.
Reference: [11] <author> F. Germeau and G. Leduc. </author> <title> Model-based Design and Verification of Security Protocols using LOTOS. </title> <booktitle> In DIMACS Workshop on Design and Formal Verification of Security Protocols, </booktitle> <year> 1997. </year>
Reference-contexts: However, the concept of an intruder is rarely included in the logic. Some tools such as model checkers and theorem provers are used to automate the proof process. Sometimes, these tools model an intruder <ref> [11] </ref>. However, such implementations are not based on formally verified models and their assumptions need to be checked for their correctness. Also, sometimes the tools make assumptions that, though correct in a general 3 situation, may not be applicable to the specific domain of the problem being solved.
Reference: [12] <author> L. Gong, R. Needham, and R. Yahalom. </author> <title> Reasoning about Beliefs in Cryptographic Protocols. </title> <booktitle> In Proceedings of IEEE Symposium on Research in Security and Privacy, </booktitle> <year> 1990. </year>
Reference-contexts: Since then several papers have been published reporting problems with the BAN logic [17, 22, 24] and several others proposing BAN-style logics that overcome many of these limitations <ref> [12, 25] </ref>. In analysis using BAN logic, a set of participant's final beliefs is generated from a set of initial assumptions and the protocol steps. If these beliefs satisfy the goal of the protocol, then the protocol is validated.
Reference: [13] <author> K. E. B. Hickman. </author> <title> Secure Socket Library. </title> <note> 1995. Available at http://www.mcom.com/info/SSL.html. </note>
Reference-contexts: Appendix B describes a protocol for auction over electronic networks. 2 Previous Work In this section we briefly discuss some electronic commerce protocols and methods of formal verification proposed in recent literature. 2.1 Protocols for Electronic Commerce A number of systems <ref> [2, 4, 7, 8, 13, 16, 23] </ref> have been developed that implement some of the important features listed in Section 1. A representative set of such systems is described below. Ecash: Ecash, a system designed by DigiCash [8], emphasizes on privacy and anonymity [6] of the customer.
Reference: [14] <author> S. Ketchpel. </author> <title> Transaction Protection for Information Buyers and Sellers. </title> <booktitle> In DAGS95: Electronic Publishing and the Information Superhighway, </booktitle> <year> 1995. </year> <note> Available at http://robotics.stanford.edu/users/ketchpel/dags4.html. </note>
Reference-contexts: Since third parties are expected to act as collection agencies, they must know the customer's true identity. The customers must trust these third parties not to use a customer's identity or other information the customer reveals to the third party <ref> [14, 15] </ref>. Notation for Protocol Description We will use the following notations to describe the protocols throughout the paper. A stands for the customer, Alice, with public key a and private key 1 a .
Reference: [15] <author> S. P. Ketchpel and H. Garcia-Molina. </author> <title> Making Trust Explicit in Distributed Commerce Transactions. </title> <booktitle> In Proceedings of the 16th ICDCS, </booktitle> <year> 1996. </year>
Reference-contexts: Since third parties are expected to act as collection agencies, they must know the customer's true identity. The customers must trust these third parties not to use a customer's identity or other information the customer reveals to the third party <ref> [14, 15] </ref>. Notation for Protocol Description We will use the following notations to describe the protocols throughout the paper. A stands for the customer, Alice, with public key a and private key 1 a .
Reference: [16] <author> M. Manasse. </author> <title> The Millicent Protocols for Electronic Commerce. </title> <booktitle> In Proceedings of the First USENIX Workshop on Electronic Commerce, </booktitle> <year> 1995. </year>
Reference-contexts: Appendix B describes a protocol for auction over electronic networks. 2 Previous Work In this section we briefly discuss some electronic commerce protocols and methods of formal verification proposed in recent literature. 2.1 Protocols for Electronic Commerce A number of systems <ref> [2, 4, 7, 8, 13, 16, 23] </ref> have been developed that implement some of the important features listed in Section 1. A representative set of such systems is described below. Ecash: Ecash, a system designed by DigiCash [8], emphasizes on privacy and anonymity [6] of the customer. <p> It also requires the customer to have an account with some funds at the NetBill server. In addition, it does not ensure anonymity, since at least the NetBill server will be aware of all transactions made by the customer. DEC's Millicent: Millicent, a protocol designed at DEC <ref> [16] </ref>, emphasizes on low overhead cost. The protocol works as follows: a piece of "scrip" represents an account the customer has established with a vendor. At any given time, a vendor has outstanding scrip (open accounts) with the recently active customers.
Reference: [17] <author> C. Meadows. </author> <title> Analyzing the Needham-Schroeder Public Key Protocol: A Comparison of Two Approaches. </title> <booktitle> In Proceedings of ESORICS, </booktitle> <year> 1996. </year>
Reference-contexts: The use of formal methods to analyze the correctness of cryptographic protocols became prevalent with the development of the BAN logic in 1989 [5]. Since then several papers have been published reporting problems with the BAN logic <ref> [17, 22, 24] </ref> and several others proposing BAN-style logics that overcome many of these limitations [12, 25]. In analysis using BAN logic, a set of participant's final beliefs is generated from a set of initial assumptions and the protocol steps.
Reference: [18] <author> B. C. Neuman and G. Medvinsky. </author> <title> Requirements for Network Payment: </title> <booktitle> The NetCheque Perspective. In Proceedings of IEEE COMPCON'95, </booktitle> <year> 1995. </year>
Reference-contexts: An electronic commerce transaction is the exchange of goods for money over electronic networks. A protocol in electronic commerce is a series of steps required to successfully complete an electronic commerce transaction. Several properties have been identified as either required or desirable in protocols for transactions in electronic commerce <ref> [1, 18] </ref>.
Reference: [19] <author> R. Rivest, A. Shamir, and L. Adleman. </author> <title> A Method for Obtaining Digital Signatures and Public-Key Cryptosystems. </title> <journal> In Communications of ACM, </journal> <year> 1978. </year> <month> 16 </month>
Reference-contexts: We also show that the protocol incurs nominal overhead charges and can easily be adapted for electronic commerce transactions involving non-electronic goods. 5.1 The Protocol Our protocol is based on public key cryptography <ref> [19, 20] </ref>. Every person can procure unique pairs of public and private keys. The public key is revealed to others and is used to trace a person, if necessary. It is also used to secure confidential messages sent to the person.
Reference: [20] <author> B. Schneider. </author> <booktitle> Applied Cryptography. </booktitle> <year> 1994. </year>
Reference-contexts: We also show that the protocol incurs nominal overhead charges and can easily be adapted for electronic commerce transactions involving non-electronic goods. 5.1 The Protocol Our protocol is based on public key cryptography <ref> [19, 20] </ref>. Every person can procure unique pairs of public and private keys. The public key is revealed to others and is used to trace a person, if necessary. It is also used to secure confidential messages sent to the person.
Reference: [21] <author> M. Sirbu and J. D. Tygar. NetBill: </author> <title> An Internet Commerce System. </title> <booktitle> In IEEE COMPCON, </booktitle> <year> 1995. </year> <note> Available at http://www.ini.cmu.edu/netbill/CompCon.html. </note>
Reference-contexts: Privacy, anonymity, and low overhead cost, on the other hand, are desirable features. While many protocols exist for electronic commerce, none has all the five features listed above. Some of them emphasize anonymity and privacy at the cost of atomicity [8], others emphasize atom-icity, but do not provide anonymity <ref> [21] </ref>. Although, these protocols are suitable for specific situations in the commerce, there is a need for a general protocol that is suitable for most situations. In addition, many proposed protocols have not been formally analyzed for protocol correctness. <p> The only time anyone (including the bank) knows the identity of a customer is when the customer spends the same coin more than once. This protocol ensures anonymity, privacy, and security. It, however, fails to be atomic in the event of a message loss <ref> [21] </ref>. The overhead cost involved in withdrawing ecash from the bank is fairly high [21]. There is also a small probability that a customer charged with double spending is not guilty of the crime. NetBill: NetBill, a protocol designed at the Carnegie Melon University [21], mainly emphasizes on atomicity [26]. <p> This protocol ensures anonymity, privacy, and security. It, however, fails to be atomic in the event of a message loss <ref> [21] </ref>. The overhead cost involved in withdrawing ecash from the bank is fairly high [21]. There is also a small probability that a customer charged with double spending is not guilty of the crime. NetBill: NetBill, a protocol designed at the Carnegie Melon University [21], mainly emphasizes on atomicity [26]. <p> the event of a message loss <ref> [21] </ref>. The overhead cost involved in withdrawing ecash from the bank is fairly high [21]. There is also a small probability that a customer charged with double spending is not guilty of the crime. NetBill: NetBill, a protocol designed at the Carnegie Melon University [21], mainly emphasizes on atomicity [26]. The protocol works as follows: the customer asks the merchant for the price of a product. The merchant responds with a price and the customer accepts it. Now, the merchant sends the customer goods encrypted by some key K.
Reference: [22] <author> E. Snekkenes. </author> <title> Exploring the BAN Approach to Protocol Analysis. </title> <booktitle> In Proceedings of IEEE Symposium on Research in Security and Privacy, </booktitle> <year> 1991. </year>
Reference-contexts: The use of formal methods to analyze the correctness of cryptographic protocols became prevalent with the development of the BAN logic in 1989 [5]. Since then several papers have been published reporting problems with the BAN logic <ref> [17, 22, 24] </ref> and several others proposing BAN-style logics that overcome many of these limitations [12, 25]. In analysis using BAN logic, a set of participant's final beliefs is generated from a set of initial assumptions and the protocol steps.
Reference: [23] <author> L. H. Stein, E. A. Stefferud, N. S. Borenstein, and M. T. Rose. </author> <title> The Green Commerce Model. </title> <note> 1994. Available at http://www.fv.com/tech/green-model.html. </note>
Reference-contexts: Appendix B describes a protocol for auction over electronic networks. 2 Previous Work In this section we briefly discuss some electronic commerce protocols and methods of formal verification proposed in recent literature. 2.1 Protocols for Electronic Commerce A number of systems <ref> [2, 4, 7, 8, 13, 16, 23] </ref> have been developed that implement some of the important features listed in Section 1. A representative set of such systems is described below. Ecash: Ecash, a system designed by DigiCash [8], emphasizes on privacy and anonymity [6] of the customer.
Reference: [24] <author> P. Syverson. </author> <title> Adding Time to a Logic of Authentication. </title> <booktitle> In Proceedings of First ACM Conference on Computer and Communications Security, </booktitle> <year> 1993. </year>
Reference-contexts: The use of formal methods to analyze the correctness of cryptographic protocols became prevalent with the development of the BAN logic in 1989 [5]. Since then several papers have been published reporting problems with the BAN logic <ref> [17, 22, 24] </ref> and several others proposing BAN-style logics that overcome many of these limitations [12, 25]. In analysis using BAN logic, a set of participant's final beliefs is generated from a set of initial assumptions and the protocol steps.
Reference: [25] <author> P. Syverson and P. van Oorschot. </author> <title> On Unifying some Cryptographic Protocol Logics. </title> <booktitle> In Proceedings of IEEE Symposium on Research in Security and Privacy, </booktitle> <year> 1994. </year>
Reference-contexts: Since then several papers have been published reporting problems with the BAN logic [17, 22, 24] and several others proposing BAN-style logics that overcome many of these limitations <ref> [12, 25] </ref>. In analysis using BAN logic, a set of participant's final beliefs is generated from a set of initial assumptions and the protocol steps. If these beliefs satisfy the goal of the protocol, then the protocol is validated.
Reference: [26] <author> J. D. Tygar. </author> <title> Atomicity in Electronic Commerce. </title> <booktitle> In PODC, </booktitle> <year> 1996. </year> <month> 17 </month>
Reference-contexts: The overhead cost involved in withdrawing ecash from the bank is fairly high [21]. There is also a small probability that a customer charged with double spending is not guilty of the crime. NetBill: NetBill, a protocol designed at the Carnegie Melon University [21], mainly emphasizes on atomicity <ref> [26] </ref>. The protocol works as follows: the customer asks the merchant for the price of a product. The merchant responds with a price and the customer accepts it. Now, the merchant sends the customer goods encrypted by some key K.
References-found: 26

