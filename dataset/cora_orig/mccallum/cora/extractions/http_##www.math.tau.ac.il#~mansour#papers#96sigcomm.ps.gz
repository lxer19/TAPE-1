URL: http://www.math.tau.ac.il/~mansour/papers/96sigcomm.ps.gz
Refering-URL: 
Root-URL: 
Email: fafek,mansour,ostfeldg@math.tau.ac.il  
Title: Phantom: A Simple and Effective Flow Control Scheme  
Author: Yehuda Afek Yishay Mansour Zvi Ostfeld 
Date: November 28, 1996  
Address: Tel-Aviv University, Israel 69978.  
Affiliation: Computer Science Department,  
Abstract: This paper presents Phantom, a simple constant space algorithm for rate based flow control. As shown by our simulations, it converges fast to a fair rate allocation while generating a moderate queue length. While our approach can be easily implemented in ATM switches for managing ABR traffic, it is also suitable for flow control in TCP router based networks. Both the introduced overhead and the required modifications in TCP flow control systems are minimal. The implementation of this approach in TCP guarantees fairness and provides a unifying interconnection between TCP routers and ATM networks. The new algorithm easily inter-operates with current TCP flow control mechanisms and thus can be gradually introduced into installed based TCP networks.
Abstract-found: 1
Intro-found: 1
Reference: [ALT94] <author> ALTAGROUP. </author> <title> Bones designer core library reference. </title> <type> Technical report, </type> <month> December </month> <year> 1994. </year>
Reference-contexts: Before we proceed let us describe the ATM simulation configuration used to test our scheme: All simulations are done in BONeS <ref> [ALT94] </ref>. The ATM end systems are as specified in [Sat96], Appendix I. <p> An additional motivation to implement the newly suggested flow control mechanism in TCP is that TCP traffic might traverse ATM networks. The use of a consistent flow control mechanism in both TCP and ABR over ATM may improve the network utilization. 4.3 Simulations of Selective Discard We use BONES <ref> [ALT94] </ref> for our simulations. The TCP end systems implement Reno according to the pseudo code specified in Section 21 in [Ste94]. We assume greedy sources where size of packets is 512 bytes.
Reference: [Bar94] <author> A. W. Barnhart. </author> <title> Explicit rate performance evaluation. </title> <type> Technical Report ATM-FORUM/94-0983R1, </type> <month> October </month> <year> 1994. </year>
Reference-contexts: One way of partitioning the different proposals is by their space requirements: (1) Flow control algorithms with constant space, i.e., the number of variables used by the algorithm is constant independent of the number of sessions passing through a port <ref> [Rob94, ST94, JKV94, Bar94, Bar95] </ref>, and (2) unbounded space algorithms, i.e., algorithms in which the space depends (usually linearly) on the number of connections [CCJ95, KVR95, CR96, TW96, JKG + 95]. The Phantom algorithm presented here is a constant space algorithm. <p> is implemented. in this configuration. 5 Comparison with other ATM rate based algorithms We compare Phantom to three other constant space rate-based flow control algorithms that have been proposed in the ATM forum, EPRCA, suggested by Roberts [Rob94], APRC, suggested by Siu and Tzeng [ST94] and CAPC, suggested by Barnhart <ref> [Bar94] </ref>. We give a brief description of each algorithm and compare it to Phantom. Another well known constant space rate-based flow control algorithm is OSU, suggested by Jain et. al. ([JKV94]). <p> Therefore, in some scenarios the queue length might often exceed the very congested threshold. Queue length MACR Sessions' allowed rate threshold is 300 cells, values of other parameters are as recommended in [ST94]. 5.2 CAPC CAPC (Congestion Avoidance using Proportional Control) was proposed by Barnhart <ref> [Bar94] </ref>. It uses the fraction of unused capacity to control the algorithm actions. In this respect it is analogous to Phantom that uses the absolute amount of unused bandwidth to control the algorithm. <p> Fig. 22 illustrates the behavior of CAPC in an environment with on/off sessions where the algorithm parameters are as recommended in <ref> [Bar94] </ref>. The configuration is analogous to that in Fig. 4, Section 2. As can be seen CAPC has longer convergence time while its queue is relatively smaller during that time. The larger value of the queue length in Phantom stems from the faster reaction of Phantom.
Reference: [Bar95] <author> A. W. Barnhart. </author> <title> Example switch algorithm for section 5.4 of tm spec. </title> <type> Technical Report ATM-FORUM/95-0195, </type> <institution> Hughes Network Systems, </institution> <month> February </month> <year> 1995. </year>
Reference-contexts: One way of partitioning the different proposals is by their space requirements: (1) Flow control algorithms with constant space, i.e., the number of variables used by the algorithm is constant independent of the number of sessions passing through a port <ref> [Rob94, ST94, JKV94, Bar94, Bar95] </ref>, and (2) unbounded space algorithms, i.e., algorithms in which the space depends (usually linearly) on the number of connections [CCJ95, KVR95, CR96, TW96, JKG + 95]. The Phantom algorithm presented here is a constant space algorithm. <p> The parameters used in Phantom are specified in the sequel. Measuring : The amount of residual bandwidth, , is measured in fixed time intervals of length t and is accumulated in a parameter called Maximum Allowed Cell Rate (MACR) <ref> [Rob94, Bar95] </ref>. M ACR, is updated at the end of each time interval by the weighted sum of its previous value and the measured .
Reference: [BdJ94] <author> J. C. R. Bennett and G. T. </author> <title> des Jardins. Comments on the july prca rate control baseline. </title> <type> Technical Report ATM-FORUM/94-0682, </type> <month> July </month> <year> 1994. </year>
Reference-contexts: The current mechanisms would either increase both or decrease both. Another source for unfairness in allocation is the bias against sessions that pass through many routers (analogous to the "beat down" phenomena in ATM, <ref> [BdJ94] </ref>). An unfair behavior of Reno in an environment of drop tail routers is depicted in the left hand side of Fig. 14 and Fig. 17. Congestion detection: Some of the above mechanisms base their estimate of the queuing delay on the knowledge of the round trip delay (RTT). <p> Queue length ERS (MACR) Greedy sessions' Bursty Sessions' allowed rate allowed rate negligible RTT. Since CAPC uses the binary indication bit in very congested states, it is prone to the unfair behaviors indicated in <ref> [BdJ94] </ref>. Sessions that cross many switches are more likely to be "beaten down" and to get a smaller allocation than sessions that cross only a few switches.
Reference: [BF95] <author> F. Bonomi and K. Fendick. </author> <title> The rate based flow control for available bit rate atm service. </title> <journal> IEEE Networks, </journal> <volume> 9(2) </volume> <pages> 24-39, </pages> <month> March/April </month> <year> 1995. </year>
Reference-contexts: However, the source may not increase its rate too fast, the amount of increase is limited by a parameter, AIR (Additive Increase Rate) per RM cell received [Sat96]. Since the ATM Forum has adopted the rate based scheme as a standard for flow control, <ref> [BF95] </ref>, several proposals for its implementation in a switch have been proposed.
Reference: [BG87] <author> D. P. Bertsekas and R. G. Gallager. </author> <title> Data Networks. </title> <publisher> Prentice Hall, </publisher> <year> 1987. </year>
Reference-contexts: A widely acceptable measure of fairness is the fl A preliminary version of this paper was presented in Sigcomm 96 1 max-min fairness <ref> [BG87, Jaf81, GB84, Gaf82, Hay81, Mos84, Cha94] </ref>. A bandwidth allocation is max-min fair if for every session, one cannot increase its bandwidth without decreasing the bandwidth of sessions of equal or lower bandwidth [BG87]. <p> A bandwidth allocation is max-min fair if for every session, one cannot increase its bandwidth without decreasing the bandwidth of sessions of equal or lower bandwidth <ref> [BG87] </ref>. This paper presents an efficient, fair and simple scheme for flow control, called Phantom, which is suitable for both TCP router based networks and ATM networks. <p> Max-min fairness is then achieved if F S = C ls #s#ls <ref> [BG87, Jaf81, GB84, Cha94, Jai95] </ref>. Note that a set of flows is max-min fair if the flow of each session equals the minimum fair share along its path.
Reference: [BP87] <author> R. Braden and J. Postel. </author> <title> Requirements for internet gateways. </title> <type> Technical Report RFC 1009, </type> <institution> IETF, </institution> <month> June </month> <year> 1987. </year>
Reference-contexts: Router mechanisms: Obviously when the router buffer overflows some packets are dropped. Another option for the router is to send an ICMP Source Quench message <ref> [Ste94, BP87] </ref>, which causes the source to decrease its window size. This option however, is rarely used as the Source Quench message may overload an already congested network. Furthermore, this mechanism is biased against certain kinds of traffic as shown in [FJ92]. <p> Selective Source Quench: A slight modification of the previous approach, where the router sends Source Quench messages to sources whose connection rate is above utilization f actor M ACR. The source reacts to the receipt of a Source Quench message as if a packet was dropped <ref> [BP87] </ref>, and hence reduces its window size. Note that these messages might consume scarce network bandwidth at time of congestion. Alternatively, if an EF CI (Explicit Forward Congestion Indication) bit is used on the IP header, the router can set this bit.
Reference: [BP95] <author> L. S. Brakmo and L. L. Paterson. </author> <title> Tcp vegas: End to end congestion avoidance on a global internet. </title> <journal> IEEE JSAC, </journal> <volume> 13,8:1465-1480, </volume> <month> October </month> <year> 1995. </year>
Reference-contexts: This method may produce in an indirect way a flow control mechanism. However, its performances as a flow control algorithm were not explored. Several flow control mechanisms have been suggested in recent years for TCP router based networks <ref> [Jac88, BP95, Zha89, FJ93] </ref>. In [Jac88, BP95] the flow control operates at the source ends of the sessions by adjusting the window size according to the detection of packet loss or the round trip delay. <p> This method may produce in an indirect way a flow control mechanism. However, its performances as a flow control algorithm were not explored. Several flow control mechanisms have been suggested in recent years for TCP router based networks [Jac88, BP95, Zha89, FJ93]. In <ref> [Jac88, BP95] </ref> the flow control operates at the source ends of the sessions by adjusting the window size according to the detection of packet loss or the round trip delay. <p> Source end stations mechanisms: Two such algorithms are currently proposed, Reno, suggested by Jacobson [Jac88], and Vegas, by Brakmo and Paterson <ref> [BP95] </ref>. Both algorithms operate by dynamically adjusting the TCP window size. If the network is observed not congested the window size is increased while if the network is observed congested, the window size is decreased. The basic idea is to consider the network congested if packet loss is detected. <p> Three problems are likely to occur in TCP traffic flow control that does not use explicit rate 15 indication: Unfair allocation: With the exception of [Kes91] the above mechanisms do not guarantee fairness. For example when two sources that use Vegas <ref> [BP95] </ref>, get different window sizes, and both have the same delay thresholds (ff; fi) then, there is no mechanism that would balance them. The current mechanisms would either increase both or decrease both. <p> Sensitivity to parameters: Some of the above schemes are sensitive to variations in parameters values. For example, out of tune time threshold parameters may cause network un-derutilization (see the discussion in <ref> [BP95] </ref> for example). Alternatively, distinct parameters for different sessions may cause severe unfairness. E.g., two sessions using Vegas and sharing one router such that the lower time threshold (ff) of the one is larger than the upper time threshold (fi) of the other. <p> This approach is simple, however it consumes additional network resources and may suffer from delay problems. Modifying the routers: In this approach the source employs either Reno or Vegas <ref> [Jac88, BP95] </ref> and in addition it indicates its current rate (CR) in the IP (or TCP) header. Thus requiring (1) a modification of the TCP/IP header and (2) simple modifications in the routers.
Reference: [CCJ95] <author> A. Charny, D.D. Clark, and R. Jain. </author> <title> Congestion control with explicit rate indication. </title> <booktitle> In Proc. </booktitle> <address> ICC, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: control algorithms with constant space, i.e., the number of variables used by the algorithm is constant independent of the number of sessions passing through a port [Rob94, ST94, JKV94, Bar94, Bar95], and (2) unbounded space algorithms, i.e., algorithms in which the space depends (usually linearly) on the number of connections <ref> [CCJ95, KVR95, CR96, TW96, JKG + 95] </ref>. The Phantom algorithm presented here is a constant space algorithm. In Section 5 it is compared to three other constant space algorithms that have been presented in the ATM Forum. We believe it overcomes some of the weaknesses of these algorithms.
Reference: [CGBS94] <author> Y. Chang, N. Golmie, L. Benmohamed, and D. Su. </author> <title> Simulation study of the new rate-based eprca traffic management mechanism. </title> <type> Technical Report ATM-FORUM/94-0809, </type> <month> September </month> <year> 1994. </year>
Reference-contexts: Aside from the oscillations, the extra delay in the control loop may cause an unfair sharing of the bandwidth between sessions with vastly different round trip delays <ref> [CGBS94, JKVG94, CRBdJ94] </ref>. In a modification of EPRCA, proposed by Siu and Tzeng called APRC (Adaptive Proportional Rate Control with intelligent congestion indication) [ST94] the definition of congested state is changed.
Reference: [CH96] <author> Abhijit K. Choudhury and Ellen L. Hahne. </author> <title> Dynamic queue length thresholds in a shared memory atm switch. </title> <booktitle> In Proc. 15th IEEE INFOCOMM, </booktitle> <pages> pages 679-687, </pages> <month> March </month> <year> 1996. </year> <month> 24 </month>
Reference-contexts: Jaffe [Jaf81] was first to use the idea in order to study the convergence of flow control algorithms, however, that algorithm, as well as other related works along this lines [GB84, Hay81, Mos84], may not be effectively used in a distributed environment in which the traffic frequently changes. In <ref> [CH96] </ref> Choudhury and Hahne employ the same principle of "using the spare resources to control the resource consumption" as suggested by Jaffe and as we do. However, Choudhury and Hahne use it to control the buffer allocation to different sessions while we employ it on the bandwidth allocation.
Reference: [Cha94] <author> A. Charny. </author> <title> An algorithm for rate allocation in a packet-switching network with feed-back. </title> <type> Technical Report MIT/LCS/TR-601, </type> <institution> MIT Laboratory for Computer Science, </institution> <month> April </month> <year> 1994. </year>
Reference-contexts: A widely acceptable measure of fairness is the fl A preliminary version of this paper was presented in Sigcomm 96 1 max-min fairness <ref> [BG87, Jaf81, GB84, Gaf82, Hay81, Mos84, Cha94] </ref>. A bandwidth allocation is max-min fair if for every session, one cannot increase its bandwidth without decreasing the bandwidth of sessions of equal or lower bandwidth [BG87]. <p> Max-min fairness is then achieved if F S = C ls #s#ls <ref> [BG87, Jaf81, GB84, Cha94, Jai95] </ref>. Note that a set of flows is max-min fair if the flow of each session equals the minimum fair share along its path.
Reference: [CR96] <author> A. Charny and K.K. Ramakrishnan. </author> <title> Scalability issues for distributed explicit rate allocation in atm. </title> <booktitle> In Proc. 15th IEEE INFOCOMM, </booktitle> <pages> pages 1182-1189, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: control algorithms with constant space, i.e., the number of variables used by the algorithm is constant independent of the number of sessions passing through a port [Rob94, ST94, JKV94, Bar94, Bar95], and (2) unbounded space algorithms, i.e., algorithms in which the space depends (usually linearly) on the number of connections <ref> [CCJ95, KVR95, CR96, TW96, JKG + 95] </ref>. The Phantom algorithm presented here is a constant space algorithm. In Section 5 it is compared to three other constant space algorithms that have been presented in the ATM Forum. We believe it overcomes some of the weaknesses of these algorithms.
Reference: [CRBdJ94] <author> A. Charny, K.K. Ramakrishnan, J. C. R. Bennett, and G. T. </author> <title> des Jardins. Some preliminary results on the eprca rate-control scheme. </title> <type> Technical Report ATM-FORUM/95-0941, </type> <month> September </month> <year> 1994. </year>
Reference-contexts: Aside from the oscillations, the extra delay in the control loop may cause an unfair sharing of the bandwidth between sessions with vastly different round trip delays <ref> [CGBS94, JKVG94, CRBdJ94] </ref>. In a modification of EPRCA, proposed by Siu and Tzeng called APRC (Adaptive Proportional Rate Control with intelligent congestion indication) [ST94] the definition of congested state is changed.
Reference: [FJ92] <author> S. Floyd and V. Jacobson. </author> <title> On traffic phase effects in packet-switches gateways. </title> <journal> Internetw.: Res. and Exper., </journal> <volume> 3(3) </volume> <pages> 115-156, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: This option however, is rarely used as the Source Quench message may overload an already congested network. Furthermore, this mechanism is biased against certain kinds of traffic as shown in <ref> [FJ92] </ref>. A more sophisticated strategy, called RED (Random Early Detection) was presented by Floyd and Jacobson [FJ93], where either packets are dropped or Source Quench messages are sent when the router's queue length exceeds a certain threshold. <p> The packet to be dropped (or the source to which a Source Quench message is sent) is selected according to some probability distribution on the packets. The RED approach reduces the queue lengths at the router and overcomes some of the bias described in <ref> [FJ92] </ref>. Yet, the resulting mechanism still does not always guarantee fairness (as discussed in the sequel). For networks in which each router sends packets in a round robin order between the sessions, another router mechanism was presented by Keshav [Kes91]. <p> Selective Discard: The router discards any packet for which the indicated rate (CR) is larger than utilization factor M ACR. The pseudo code of this mechanism is presented 17 in Fig. 18. This mechanism avoids congestion even in drop tail routers while reducing both the bias discussed in <ref> [FJ92] </ref> and the "beat down" problem. The right hand sides of Fig. 14 and Fig. 17 illustrate the behavior of this mechanism. 3.
Reference: [FJ93] <author> S. Floyd and V. Jacobson. </author> <title> Random early detection gateways for congestion avoidance. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 1(4) </volume> <pages> 397-413, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: This method may produce in an indirect way a flow control mechanism. However, its performances as a flow control algorithm were not explored. Several flow control mechanisms have been suggested in recent years for TCP router based networks <ref> [Jac88, BP95, Zha89, FJ93] </ref>. In [Jac88, BP95] the flow control operates at the source ends of the sessions by adjusting the window size according to the detection of packet loss or the round trip delay. <p> In [Jac88, BP95] the flow control operates at the source ends of the sessions by adjusting the window size according to the detection of packet loss or the round trip delay. Other mechanisms that operate at the routers (gateways) are Random Early Detection <ref> [Zha89, FJ93] </ref> and Early Packet Discard [RF94], which in case of congestion drop new incoming packets in an intelligent approach. Different ways of applying the Phantom scheme to flow control in TCP routers based networks are presented in Section 4. <p> This option however, is rarely used as the Source Quench message may overload an already congested network. Furthermore, this mechanism is biased against certain kinds of traffic as shown in [FJ92]. A more sophisticated strategy, called RED (Random Early Detection) was presented by Floyd and Jacobson <ref> [FJ93] </ref>, where either packets are dropped or Source Quench messages are sent when the router's queue length exceeds a certain threshold. The packet to be dropped (or the source to which a Source Quench message is sent) is selected according to some probability distribution on the packets.
Reference: [Flo94] <author> S. Floyd. </author> <title> Tcp and explicit congestion notification. </title> <journal> ACM Computer Communication Review, </journal> <volume> 24,5:10-23, </volume> <month> August </month> <year> 1994. </year>
Reference-contexts: Note that these messages might consume scarce network bandwidth at time of congestion. Alternatively, if an EF CI (Explicit Forward Congestion Indication) bit is used on the IP header, the router can set this bit. See <ref> [Flo94] </ref> for discussion of the use of a Source Quench mechanism and the addition of a new EFCI bit. 4. Selective RED: Here the router applies the RED mechanism (Random Early Detection). However, only packets whose rate is larger than utilization factorM ACR may be dropped.
Reference: [Gaf82] <author> E. Gafni. </author> <title> The Integration of Routing and Flow Control for Voice and Data in a Computer Communication Network. </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, Dept. of Elec. Eng. and Comp. Science, </institution> <address> Cambridge, MA, </address> <month> August </month> <year> 1982. </year>
Reference-contexts: A widely acceptable measure of fairness is the fl A preliminary version of this paper was presented in Sigcomm 96 1 max-min fairness <ref> [BG87, Jaf81, GB84, Gaf82, Hay81, Mos84, Cha94] </ref>. A bandwidth allocation is max-min fair if for every session, one cannot increase its bandwidth without decreasing the bandwidth of sessions of equal or lower bandwidth [BG87].
Reference: [GB84] <author> E. Gafni and D. P. Bertsekas. </author> <title> Dynamic control of session input rates in communication networks. </title> <journal> IEEE Trans. on Automatic Control, </journal> <volume> AC-29(11):804-823, </volume> <month> November </month> <year> 1984. </year>
Reference-contexts: A widely acceptable measure of fairness is the fl A preliminary version of this paper was presented in Sigcomm 96 1 max-min fairness <ref> [BG87, Jaf81, GB84, Gaf82, Hay81, Mos84, Cha94] </ref>. A bandwidth allocation is max-min fair if for every session, one cannot increase its bandwidth without decreasing the bandwidth of sessions of equal or lower bandwidth [BG87]. <p> The idea of adding another imaginary session to every link is not new. Jaffe [Jaf81] was first to use the idea in order to study the convergence of flow control algorithms, however, that algorithm, as well as other related works along this lines <ref> [GB84, Hay81, Mos84] </ref>, may not be effectively used in a distributed environment in which the traffic frequently changes. In [CH96] Choudhury and Hahne employ the same principle of "using the spare resources to control the resource consumption" as suggested by Jaffe and as we do. <p> Max-min fairness is then achieved if F S = C ls #s#ls <ref> [BG87, Jaf81, GB84, Cha94, Jai95] </ref>. Note that a set of flows is max-min fair if the flow of each session equals the minimum fair share along its path.
Reference: [Hay81] <author> H. Hayden. </author> <title> Voice flow control in integrated packet networks. </title> <type> Master's thesis, </type> <institution> Massachusetts Institute of Technology, Dept. of Electrical Engineering, </institution> <address> Cambridge, MA, </address> <year> 1981. </year>
Reference-contexts: A widely acceptable measure of fairness is the fl A preliminary version of this paper was presented in Sigcomm 96 1 max-min fairness <ref> [BG87, Jaf81, GB84, Gaf82, Hay81, Mos84, Cha94] </ref>. A bandwidth allocation is max-min fair if for every session, one cannot increase its bandwidth without decreasing the bandwidth of sessions of equal or lower bandwidth [BG87]. <p> The idea of adding another imaginary session to every link is not new. Jaffe [Jaf81] was first to use the idea in order to study the convergence of flow control algorithms, however, that algorithm, as well as other related works along this lines <ref> [GB84, Hay81, Mos84] </ref>, may not be effectively used in a distributed environment in which the traffic frequently changes. In [CH96] Choudhury and Hahne employ the same principle of "using the spare resources to control the resource consumption" as suggested by Jaffe and as we do.
Reference: [Jac88] <author> V. Jacobson. </author> <title> Congestion avoidance and control. </title> <booktitle> In Proc. SIGCOMM, </booktitle> <pages> pages 314-329, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: This method may produce in an indirect way a flow control mechanism. However, its performances as a flow control algorithm were not explored. Several flow control mechanisms have been suggested in recent years for TCP router based networks <ref> [Jac88, BP95, Zha89, FJ93] </ref>. In [Jac88, BP95] the flow control operates at the source ends of the sessions by adjusting the window size according to the detection of packet loss or the round trip delay. <p> This method may produce in an indirect way a flow control mechanism. However, its performances as a flow control algorithm were not explored. Several flow control mechanisms have been suggested in recent years for TCP router based networks [Jac88, BP95, Zha89, FJ93]. In <ref> [Jac88, BP95] </ref> the flow control operates at the source ends of the sessions by adjusting the window size according to the detection of packet loss or the round trip delay. <p> To eliminate this phenomena we first approximate the standard deviation in , and then take it into consideration in the calculation of ff inc and ff dec . Following <ref> [Jac88] </ref> the standard deviation is approximated by the mean deviation (which is easier, as it does not require a square root computation) as follows: ERR := M ACR Queue length MACR Sessions' allowed rate between M ACR and the link restriction is 5. <p> Source end stations mechanisms: Two such algorithms are currently proposed, Reno, suggested by Jacobson <ref> [Jac88] </ref>, and Vegas, by Brakmo and Paterson [BP95]. Both algorithms operate by dynamically adjusting the TCP window size. If the network is observed not congested the window size is increased while if the network is observed congested, the window size is decreased. <p> This approach is simple, however it consumes additional network resources and may suffer from delay problems. Modifying the routers: In this approach the source employs either Reno or Vegas <ref> [Jac88, BP95] </ref> and in addition it indicates its current rate (CR) in the IP (or TCP) header. Thus requiring (1) a modification of the TCP/IP header and (2) simple modifications in the routers.
Reference: [Jaf81] <author> J. M. Jaffe. </author> <title> Bottleneck flow control. </title> <journal> IEEE Trans on Communication, </journal> <volume> COM-29,1(7):954-962, </volume> <month> July </month> <year> 1981. </year>
Reference-contexts: A widely acceptable measure of fairness is the fl A preliminary version of this paper was presented in Sigcomm 96 1 max-min fairness <ref> [BG87, Jaf81, GB84, Gaf82, Hay81, Mos84, Cha94] </ref>. A bandwidth allocation is max-min fair if for every session, one cannot increase its bandwidth without decreasing the bandwidth of sessions of equal or lower bandwidth [BG87]. <p> The idea of adding another imaginary session to every link is not new. Jaffe <ref> [Jaf81] </ref> was first to use the idea in order to study the convergence of flow control algorithms, however, that algorithm, as well as other related works along this lines [GB84, Hay81, Mos84], may not be effectively used in a distributed environment in which the traffic frequently changes. <p> Max-min fairness is then achieved if F S = C ls #s#ls <ref> [BG87, Jaf81, GB84, Cha94, Jai95] </ref>. Note that a set of flows is max-min fair if the flow of each session equals the minimum fair share along its path.
Reference: [Jai95] <author> R. Jain. </author> <title> Congestion control and traffic management in atm networks: Recent advances and a survey. </title> <booktitle> Computer Networks and ISDN Systems, </booktitle> <month> February </month> <year> 1995. </year>
Reference-contexts: Max-min fairness is then achieved if F S = C ls #s#ls <ref> [BG87, Jaf81, GB84, Cha94, Jai95] </ref>. Note that a set of flows is max-min fair if the flow of each session equals the minimum fair share along its path. <p> Another well known constant space rate-based flow control algorithm is OSU, suggested by Jain et. al. ([JKV94]). However, its advanced versions - 20 ERICA/ERICA+ ([JKVG95, JKG + 95]) maintain a counter per session. (The interested reader should look at a more complete survey by Jain <ref> [Jai95] </ref>.) All three algorithms compute for each output port in each switch a fair share parameter, (called MACR in EPRCA and APRC and ERS in CAPC). This parameter is used to delimit the rate of sessions passing through the output port.
Reference: [JKG + 95] <author> R Jain, S. Kalyanaraman, R. Goyal, Sonia Fahmy, and Fang Lu. ERICA+: </author> <title> Extensions to the ERICA switch algorithm. </title> <type> Technical Report ATM-FORUM/95-1346, </type> <institution> The Ohio State University, </institution> <month> October </month> <year> 1995. </year>
Reference-contexts: control algorithms with constant space, i.e., the number of variables used by the algorithm is constant independent of the number of sessions passing through a port [Rob94, ST94, JKV94, Bar94, Bar95], and (2) unbounded space algorithms, i.e., algorithms in which the space depends (usually linearly) on the number of connections <ref> [CCJ95, KVR95, CR96, TW96, JKG + 95] </ref>. The Phantom algorithm presented here is a constant space algorithm. In Section 5 it is compared to three other constant space algorithms that have been presented in the ATM Forum. We believe it overcomes some of the weaknesses of these algorithms.
Reference: [JKV94] <author> R. Jain, S. Kalyanaraman, and R. Viswanathan. </author> <title> The OSU scheme for congestion avoidance using explicit rate indication. </title> <type> Technical Report ATM-FORUM/95-0883, </type> <institution> The Ohio State University, </institution> <month> September </month> <year> 1994. </year> <month> 25 </month>
Reference-contexts: One way of partitioning the different proposals is by their space requirements: (1) Flow control algorithms with constant space, i.e., the number of variables used by the algorithm is constant independent of the number of sessions passing through a port <ref> [Rob94, ST94, JKV94, Bar94, Bar95] </ref>, and (2) unbounded space algorithms, i.e., algorithms in which the space depends (usually linearly) on the number of connections [CCJ95, KVR95, CR96, TW96, JKG + 95]. The Phantom algorithm presented here is a constant space algorithm.
Reference: [JKVG94] <author> R Jain, S. Kalyanaraman, R. Viswanathan, and R. Goyal. </author> <title> Rate based schemes: Mistakes to avoid. </title> <type> Technical Report ATM-FORUM/94-0882, </type> <institution> The Ohio State University, </institution> <month> September </month> <year> 1994. </year>
Reference-contexts: Aside from the oscillations, the extra delay in the control loop may cause an unfair sharing of the bandwidth between sessions with vastly different round trip delays <ref> [CGBS94, JKVG94, CRBdJ94] </ref>. In a modification of EPRCA, proposed by Siu and Tzeng called APRC (Adaptive Proportional Rate Control with intelligent congestion indication) [ST94] the definition of congested state is changed.
Reference: [JKVG95] <author> R Jain, S. Kalyanaraman, R. Viswanathan, and R. Goyal. </author> <title> A sample switch algorithm. </title> <type> Technical Report ATM-FORUM/95-0178R1, </type> <institution> The Ohio State University, </institution> <month> February </month> <year> 1995. </year>
Reference: [Kes91] <author> S. Keshav. </author> <title> A control-theoretic approach to flow control. </title> <booktitle> In Proc. SIGCOMM, </booktitle> <pages> pages 3-16, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: While the main advantage of these applications is in achieving fairness, it does require some modification of either the source end, or the routers, and the TCP packet format. However, it seems that fairness may not be achieved without some modifications either at the routers <ref> [Kes91] </ref> or at the TCP (or IP) header. Applying the Phantom scheme to ATM networks is somewhat easier due to the handles provided by the ATM Forum. <p> Yet, the resulting mechanism still does not always guarantee fairness (as discussed in the sequel). For networks in which each router sends packets in a round robin order between the sessions, another router mechanism was presented by Keshav <ref> [Kes91] </ref>. In this method the source measures the maximum queuing delay by sending two consecutive packets and measuring the time difference at which they return to the source. <p> For further discussion on routers congestion control see the survey of Mankin and Ramakr-ishnan [MR91]. Three problems are likely to occur in TCP traffic flow control that does not use explicit rate 15 indication: Unfair allocation: With the exception of <ref> [Kes91] </ref> the above mechanisms do not guarantee fairness. For example when two sources that use Vegas [BP95], get different window sizes, and both have the same delay thresholds (ff; fi) then, there is no mechanism that would balance them. The current mechanisms would either increase both or decrease both. <p> To the best of our knowledge this is the first scheme that achieves this degree of fairness in an environment that is based on implicit indication, without employing specialized hardware mechanism (such as <ref> [Kes91] </ref>). Selective Discard does not interfere with the dynamic adjustment of the TCP window and hence, it can be gradually implemented together with current TCP equipment.
Reference: [KVR95] <author> L. Kalampoukas, A. Varma, and K. K. Ramakrishnan. </author> <title> An efficient rate allocation algorithm for atm networks providing max-min fairness. </title> <booktitle> In Proc. </booktitle> <address> HPN, </address> <month> September </month> <year> 1995. </year>
Reference-contexts: control algorithms with constant space, i.e., the number of variables used by the algorithm is constant independent of the number of sessions passing through a port [Rob94, ST94, JKV94, Bar94, Bar95], and (2) unbounded space algorithms, i.e., algorithms in which the space depends (usually linearly) on the number of connections <ref> [CCJ95, KVR95, CR96, TW96, JKG + 95] </ref>. The Phantom algorithm presented here is a constant space algorithm. In Section 5 it is compared to three other constant space algorithms that have been presented in the ATM Forum. We believe it overcomes some of the weaknesses of these algorithms.
Reference: [Mos84] <author> J. Mosley. </author> <title> Asynchronous Distributed Flow Control Algorithms. </title> <type> PhD thesis, </type> <institution> MIT, </institution> <month> June </month> <year> 1984. </year>
Reference-contexts: A widely acceptable measure of fairness is the fl A preliminary version of this paper was presented in Sigcomm 96 1 max-min fairness <ref> [BG87, Jaf81, GB84, Gaf82, Hay81, Mos84, Cha94] </ref>. A bandwidth allocation is max-min fair if for every session, one cannot increase its bandwidth without decreasing the bandwidth of sessions of equal or lower bandwidth [BG87]. <p> The idea of adding another imaginary session to every link is not new. Jaffe [Jaf81] was first to use the idea in order to study the convergence of flow control algorithms, however, that algorithm, as well as other related works along this lines <ref> [GB84, Hay81, Mos84] </ref>, may not be effectively used in a distributed environment in which the traffic frequently changes. In [CH96] Choudhury and Hahne employ the same principle of "using the spare resources to control the resource consumption" as suggested by Jaffe and as we do.
Reference: [MR91] <author> A. Mankin and K. K. Ramakrishnan. </author> <title> Gateway congestion control survey. </title> <type> Technical Report RFC 1254, </type> <institution> IETF, </institution> <month> August </month> <year> 1991. </year>
Reference-contexts: For further discussion on routers congestion control see the survey of Mankin and Ramakr-ishnan <ref> [MR91] </ref>. Three problems are likely to occur in TCP traffic flow control that does not use explicit rate 15 indication: Unfair allocation: With the exception of [Kes91] the above mechanisms do not guarantee fairness.
Reference: [RF94] <author> A. Romanow and S. Floyd. </author> <title> Dynamics of tcp traffic over atm networks. </title> <booktitle> In Proc. SIGCOMM, </booktitle> <pages> pages 79-88, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: In [Jac88, BP95] the flow control operates at the source ends of the sessions by adjusting the window size according to the detection of packet loss or the round trip delay. Other mechanisms that operate at the routers (gateways) are Random Early Detection [Zha89, FJ93] and Early Packet Discard <ref> [RF94] </ref>, which in case of congestion drop new incoming packets in an intelligent approach. Different ways of applying the Phantom scheme to flow control in TCP routers based networks are presented in Section 4.
Reference: [RJ90] <author> K. K. Ramakrishnan and R. Jain. </author> <title> A binary feedback scheme for congestion avoidance in computer networks. </title> <journal> ACM Trans. Comput System., </journal> <volume> 8(2) </volume> <pages> 158-181, </pages> <year> 1990. </year>
Reference-contexts: The ATM Forum on Traffic Management has adopted rate based as the basic mechanism for flow control of ABR traffic. The basic principle of the rate based flow control is as follows 1 : A control message (Resource Management cell, RM cell) 1 Following the DECbit <ref> [RJ90] </ref>, the ATM flow control supports another mechanism using the CI (Congestion 2 is looping around the virtual circuit of each session.
Reference: [Rob94] <author> L. Roberts. </author> <title> Enhanced PRCA (proportional rate-control algorithm). </title> <type> Technical Report ATM-FORUM/94-0735R1, </type> <institution> ATM Systems, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: One way of partitioning the different proposals is by their space requirements: (1) Flow control algorithms with constant space, i.e., the number of variables used by the algorithm is constant independent of the number of sessions passing through a port <ref> [Rob94, ST94, JKV94, Bar94, Bar95] </ref>, and (2) unbounded space algorithms, i.e., algorithms in which the space depends (usually linearly) on the number of connections [CCJ95, KVR95, CR96, TW96, JKG + 95]. The Phantom algorithm presented here is a constant space algorithm. <p> The parameters used in Phantom are specified in the sequel. Measuring : The amount of residual bandwidth, , is measured in fixed time intervals of length t and is accumulated in a parameter called Maximum Allowed Cell Rate (MACR) <ref> [Rob94, Bar95] </ref>. M ACR, is updated at the end of each time interval by the weighted sum of its previous value and the measured . <p> ACR and the rate of an arbitrary session when the selective discard mechanism is implemented. in this configuration. 5 Comparison with other ATM rate based algorithms We compare Phantom to three other constant space rate-based flow control algorithms that have been proposed in the ATM forum, EPRCA, suggested by Roberts <ref> [Rob94] </ref>, APRC, suggested by Siu and Tzeng [ST94] and CAPC, suggested by Barnhart [Bar94]. We give a brief description of each algorithm and compare it to Phantom. Another well known constant space rate-based flow control algorithm is OSU, suggested by Jain et. al. ([JKV94]). <p> Values of other parameters are as recommended in <ref> [Rob94] </ref>. 5.1 EPRCA and APRC The EPRCA (Enhanced Proportional Rate Control Algorithm) [Rob94] was proposed by Roberts at the July 1994 ATM Forum meeting. <p> Values of other parameters are as recommended in <ref> [Rob94] </ref>. 5.1 EPRCA and APRC The EPRCA (Enhanced Proportional Rate Control Algorithm) [Rob94] was proposed by Roberts at the July 1994 ATM Forum meeting. In this algorithm the fair share parameter (MACR) is computed for each output port from the information received on the forward RM cells generated by the session's source end system.
Reference: [Sat96] <author> S. Sathaye. </author> <title> Atm forum traffic management specification version 4.0. </title> <type> Technical Report ATM-FORUM/95-0013R10, </type> <month> February </month> <year> 1996. </year>
Reference-contexts: However, the source may not increase its rate too fast, the amount of increase is limited by a parameter, AIR (Additive Increase Rate) per RM cell received <ref> [Sat96] </ref>. Since the ATM Forum has adopted the rate based scheme as a standard for flow control, [BF95], several proposals for its implementation in a switch have been proposed. <p> The filtered value of is called M ACR (details are given in the sequel). 2 Assuming that the rate of the two sessions does not instantly jump to a very high value, that is, in ATM terms <ref> [Sat96] </ref>, AIR (Additive Increase Rate) N rm is much smaller than 30 Mbs. 4 Queue length MACR Sessions' allowed rate 0.01 ms) sharing a 150 Mbs link. <p> Before we proceed let us describe the ATM simulation configuration used to test our scheme: All simulations are done in BONeS [ALT94]. The ATM end systems are as specified in <ref> [Sat96] </ref>, Appendix I. The major parameters of the end systems are as follows (unless specified otherwise): N rm = 32, AIR N rm = 42:5M bs, RDF = 256, P CR = 150M bs, T OF = 2, T CR = 10cells=sec (4:24Kbs) and ICR = 8:5M bs. <p> Any source that observes this bit set, may not increase its rate (on top of all the other restrictions, <ref> [Sat96] </ref>). Fig. 11 illustrates the effect of this method on the same scenario as in Fig. 9. Queue length 5 M ACR and rate of an arbitrary session utilization f actor = 5.
Reference: [ST94] <author> K. Y. Siu and H. Y. Tzeng. </author> <title> Adaptive proportional rate control (APRC) with intelligent congestion indication. </title> <type> Technical Report ATM FORUM/94-0888, </type> <institution> University of California, Irvine, </institution> <month> September </month> <year> 1994. </year>
Reference-contexts: One way of partitioning the different proposals is by their space requirements: (1) Flow control algorithms with constant space, i.e., the number of variables used by the algorithm is constant independent of the number of sessions passing through a port <ref> [Rob94, ST94, JKV94, Bar94, Bar95] </ref>, and (2) unbounded space algorithms, i.e., algorithms in which the space depends (usually linearly) on the number of connections [CCJ95, KVR95, CR96, TW96, JKG + 95]. The Phantom algorithm presented here is a constant space algorithm. <p> session when the selective discard mechanism is implemented. in this configuration. 5 Comparison with other ATM rate based algorithms We compare Phantom to three other constant space rate-based flow control algorithms that have been proposed in the ATM forum, EPRCA, suggested by Roberts [Rob94], APRC, suggested by Siu and Tzeng <ref> [ST94] </ref> and CAPC, suggested by Barnhart [Bar94]. We give a brief description of each algorithm and compare it to Phantom. Another well known constant space rate-based flow control algorithm is OSU, suggested by Jain et. al. ([JKV94]). <p> In a modification of EPRCA, proposed by Siu and Tzeng called APRC (Adaptive Proportional Rate Control with intelligent congestion indication) <ref> [ST94] </ref> the definition of congested state is changed. Rather than being a function of the queue length it is now a function of the rate at which the queue length is changing. <p> Therefore, in some scenarios the queue length might often exceed the very congested threshold. Queue length MACR Sessions' allowed rate threshold is 300 cells, values of other parameters are as recommended in <ref> [ST94] </ref>. 5.2 CAPC CAPC (Congestion Avoidance using Proportional Control) was proposed by Barnhart [Bar94]. It uses the fraction of unused capacity to control the algorithm actions. In this respect it is analogous to Phantom that uses the absolute amount of unused bandwidth to control the algorithm.
Reference: [Ste94] <author> W. Stevens. </author> <title> TCP/IP Illustrated. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: Router mechanisms: Obviously when the router buffer overflows some packets are dropped. Another option for the router is to send an ICMP Source Quench message <ref> [Ste94, BP87] </ref>, which causes the source to decrease its window size. This option however, is rarely used as the Source Quench message may overload an already congested network. Furthermore, this mechanism is biased against certain kinds of traffic as shown in [FJ92]. <p> The use of a consistent flow control mechanism in both TCP and ABR over ATM may improve the network utilization. 4.3 Simulations of Selective Discard We use BONES [ALT94] for our simulations. The TCP end systems implement Reno according to the pseudo code specified in Section 21 in <ref> [Ste94] </ref>. We assume greedy sources where size of packets is 512 bytes. Each source computes its rate as the ratio between the size of payload transmitted and acknowledged by the destination in a time interval, and the length of the time interval.
Reference: [TW96] <author> D. H. K. Tsang and W. K. F. Wong. </author> <title> A new rate-based switch algorithm for ABR traffic to achieve max-min fairness with analytical approximation and delay adjustment. </title> <booktitle> In Proc. 15th IEEE INFOCOMM, </booktitle> <pages> pages 1174-1181, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: control algorithms with constant space, i.e., the number of variables used by the algorithm is constant independent of the number of sessions passing through a port [Rob94, ST94, JKV94, Bar94, Bar95], and (2) unbounded space algorithms, i.e., algorithms in which the space depends (usually linearly) on the number of connections <ref> [CCJ95, KVR95, CR96, TW96, JKG + 95] </ref>. The Phantom algorithm presented here is a constant space algorithm. In Section 5 it is compared to three other constant space algorithms that have been presented in the ATM Forum. We believe it overcomes some of the weaknesses of these algorithms.
Reference: [Woj94] <author> Lou Wojnaroski. </author> <title> Baseline text for traffic management sub-working group. </title> <type> Technical Report ATM-FORUM/94-0394R5, </type> <month> October </month> <year> 1994. </year>
Reference: [Zha89] <author> L. Zhang. </author> <title> A new architecture for packet switching network protocols. </title> <type> Technical Report MIT/LCS/TR-455, </type> <institution> MIT Laboratory for Computer Science, </institution> <month> August </month> <year> 1989. </year> <month> 26 </month>
Reference-contexts: This method may produce in an indirect way a flow control mechanism. However, its performances as a flow control algorithm were not explored. Several flow control mechanisms have been suggested in recent years for TCP router based networks <ref> [Jac88, BP95, Zha89, FJ93] </ref>. In [Jac88, BP95] the flow control operates at the source ends of the sessions by adjusting the window size according to the detection of packet loss or the round trip delay. <p> In [Jac88, BP95] the flow control operates at the source ends of the sessions by adjusting the window size according to the detection of packet loss or the round trip delay. Other mechanisms that operate at the routers (gateways) are Random Early Detection <ref> [Zha89, FJ93] </ref> and Early Packet Discard [RF94], which in case of congestion drop new incoming packets in an intelligent approach. Different ways of applying the Phantom scheme to flow control in TCP routers based networks are presented in Section 4.
References-found: 40

