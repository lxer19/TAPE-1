URL: ftp://graphics.lcs.mit.edu/pub/people/dorsey/papers/framework/anim.ps.gz
Refering-URL: http://graphics.lcs.mit.edu/publications.html
Root-URL: 
Phone: 2  3  
Title: A Framework for Global Illumination in Animated Environments  
Author: Jeffry Nimeroff Julie Dorsey Holly Rushmeier 
Address: Philadelphia PA 19104, USA  Cambridge MA 02139, USA  Gaithersburg MD 20899, USA  
Affiliation: 1 University of Pennsylvania,  Massachusetts Institute of Technology,  National Institute of Standards and Technology,  
Abstract: We describe a new framework for efficiently computing and storing global illumination effects for complex, animated environments. The new framework allows the rapid generation of sequences representing any arbitrary path in a view space within an environment in which both the viewer and objects move. The global illumination is stored as time sequences of range-images at base locations that span the view space. We present algorithms for determining locations for these base images and the time steps required to adequately capture the effects of object motion. We also present algorithms for computing the global illumination in the base images that exploit spatial and temporal coherence by considering direct and indirect illumination separately. We discuss an initial implementation using the new framework. Results from our implementation demonstrate the efficient generation of multiple tours through a complex space and a tour of an environment in which objects move.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> J. Arvo. </author> <title> The irradiance jacobian for partially occluded polyhedral sources. </title> <booktitle> Computer Graphics (SIGGRAPH '94 Proceedings), </booktitle> <volume> 28(4) </volume> <pages> 343-350, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: Indirect illumination is computed in object space. In general, illumination is a continuous field, with sharp discontinuities occurring only when point light sources are instantaneously obscured <ref> [1] </ref>. Since indirect illumination is the result of multiple reflections, giving rise to many extended secondary light sources, indirect illumination is generally a smoother function than direct illumination. As a result, indirect illumination can be sampled relatively sparsely in space, and intermediate values found by interpolation.
Reference: 2. <author> D. Baum, J. Wallace, and M. Cohen. </author> <title> The back-buffer algorithm: an extension of the radiosity method to dynamic environments. </title> <journal> The Visual Computer, </journal> <volume> 2(5) </volume> <pages> 298-306, </pages> <year> 1986. </year>
Reference-contexts: Considerable effort has been put in to develop radiosity methods that exploit temporal coherence in lighting. Baum et al. <ref> [2] </ref> developed a method for identifying geometric form factors that would not need to be recomputed for a full matrix radiosity solution as an object moved through a prescribed path.
Reference: 3. <author> K. Blanton. </author> <title> A new approach for flight simulator visual systems. </title> <booktitle> In Simulators IV, Proceedings of the SCCS Simulators Conference, </booktitle> <pages> pages 229-233, </pages> <year> 1987. </year>
Reference-contexts: Since accurate, detailed images must be precomputed, very little user interaction with complex scenes is allowed. In this paper, we present a range-image based approach to computing and storing the results of global illumination for an animated, complex environment. Range-image based systems have been used previously in flight simulators <ref> [3] </ref> and in computer graphics [7]. Range-images store the distance to the visible object for each pixel, as well as the radiance. <p> A small amount of freedom of movement can be allowed by recording a network or tree of paths for the viewer to tour. Range-Image Interpolation. Range-image interpolation has been employed in flight simulators <ref> [3] </ref> and has been applied to more general graphics applications by Chen and Williams [7].
Reference: 4. <author> K.R. Boff and J.E. Lincoln. </author> <title> Engineering Data Compendium: </title> <journal> Human Perception and Perfor mance, </journal> <volume> Vol. </volume> <pages> 1. </pages> <institution> Wright-Patterson Air Force Base, </institution> <year> 1988. </year>
Reference-contexts: In a radiosity solution, a high degree of accuracy is required, because the view of the object is unknown. The worst case must be assumed. Perceptual error metrics are inherently image based, since the accuracy required for a particular radiance depends on the radiance distribution in the visual field <ref> [4] </ref>. In an image-based system, much better estimates can be made of allowable error in the radiance solution, and the solution can be computed much more efficiently.
Reference: 5. <author> S. E. Chen. </author> <title> Incremental radiosity: An extension of progressive radiosity to an interactive image synthesis system. </title> <booktitle> Computer Graphics (SIGGRAPH '90 Proceedings), </booktitle> <volume> 24(4) </volume> <pages> 135-144, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: Baum et al. [2] developed a method for identifying geometric form factors that would not need to be recomputed for a full matrix radiosity solution as an object moved through a prescribed path. Chen <ref> [5] </ref>, George et al. [10], Muller and Schoffel [15] and Forsyth et al. [9] have developed progressive refinement radiosity solutions that are updated incrementally for temporal changes in object locations.
Reference: 6. <author> S. E. Chen, H. Rushmeier, G. Miller, and D. Turner. </author> <title> A progressive multi-pass method for global illumination. </title> <booktitle> Computer Graphics (SIGGRAPH '91 Proceedings), </booktitle> <volume> 25(4) </volume> <pages> 165-174, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: Further, we consider how global illumination can be efficiently computed to generate each of the range-images. Previous global illumination methods have successfully exploited spatial coherence by separating the calculation of direct and indirect illumination <ref> [6, 21] </ref>. We build on this idea and exploit temporal coherence as well by separating the calculation of temporal variations in direct and indirect illumination. <p> Detailed radiance is only computed for objects which appear in the image. Spatial coherence is exploited by calculating multiple reflections in object space. Examples of hybrid methods are the Radiance system and the multi-pass progressive refinement methods <ref> [6, 16] </ref>. Specifically, in hybrid methods, visibility and direct illumination calculations, for which the level of detail is limited by the pixel resolution, are computed in image space. Indirect illumination is computed in object space.
Reference: 7. <author> S. E. Chen and L. Williams. </author> <title> View interpolation for image synthesis. </title> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <volume> 27(4) </volume> <pages> 279-288, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: In this paper, we present a range-image based approach to computing and storing the results of global illumination for an animated, complex environment. Range-image based systems have been used previously in flight simulators [3] and in computer graphics <ref> [7] </ref>. Range-images store the distance to the visible object for each pixel, as well as the radiance. <p> A small amount of freedom of movement can be allowed by recording a network or tree of paths for the viewer to tour. Range-Image Interpolation. Range-image interpolation has been employed in flight simulators [3] and has been applied to more general graphics applications by Chen and Williams <ref> [7] </ref>. In this approach, the three dimensional scene is replaced by a set of images for which the view point and the radiances and ranges (i.e. the distance to nearest visible object) for each pixel are stored.
Reference: 8. <author> J. Dorsey, J. Arvo, and D. Greenberg. </author> <title> Interactive design of complex time-dependent lighting. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 15(2) </volume> <pages> 26-36, </pages> <month> March </month> <year> 1995. </year>
Reference: 9. <author> D. Forsyth, C. Yang, and K. Teo. </author> <title> Efficient radiosity in dynamic environments. </title> <booktitle> Fifth Eurograph ics Workshop on Rendering, </booktitle> <pages> pages 313-324, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Baum et al. [2] developed a method for identifying geometric form factors that would not need to be recomputed for a full matrix radiosity solution as an object moved through a prescribed path. Chen [5], George et al. [10], Muller and Schoffel [15] and Forsyth et al. <ref> [9] </ref> have developed progressive refinement radiosity solutions that are updated incrementally for temporal changes in object locations. Each method essentially starts with the solution for the previous time step, undoes the effect of the object that has moved, and then computes the effect of the object in its new position.
Reference: 10. <author> D. George, F. Sillion, and D. Greenberg. </author> <title> Radiosity redistribution for dynamic environments. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 10(4) </volume> <pages> 26-34, </pages> <month> July </month> <year> 1990. </year>
Reference-contexts: Baum et al. [2] developed a method for identifying geometric form factors that would not need to be recomputed for a full matrix radiosity solution as an object moved through a prescribed path. Chen [5], George et al. <ref> [10] </ref>, Muller and Schoffel [15] and Forsyth et al. [9] have developed progressive refinement radiosity solutions that are updated incrementally for temporal changes in object locations.
Reference: 11. <author> A. Glassner. </author> <title> Spacetime ray tracing for animation. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 8(2) </volume> <pages> 60-70, </pages> <month> March </month> <year> 1988. </year>
Reference: 12. <author> C. Goral, K. Torrance, D. Greenberg, and B. Battaile. </author> <title> Modelling the interaction of light between diffuse surfaces. </title> <booktitle> Computer Graphics (SIGGRAPH '84 Proceedings), </booktitle> <volume> 18(3) </volume> <pages> 212-22, </pages> <month> July </month> <year> 1984. </year>
Reference-contexts: Radiosity. In contrast, radiosity techniques explicitly model the physical interreflection of light in a scene to compute the radiance L (energy per unit time, projected area and solid angle) leaving each object <ref> [12, 18] </ref>. A radiosity solution is a set of radiance values at locations distributed over surfaces in an environment. Given a solution, walkthroughs can be performed by converting the radiances to RGB values, which can be used in place of hardware lighting.
Reference: 13. <author> P. Hanrahan, D. Salzman, and L. Aupperle. </author> <title> A rapid hierarchical radiosity algorithm. </title> <booktitle> Computer Graphics (SIGGRAPH '91 Proceedings), </booktitle> <volume> 25(4) </volume> <pages> 197-206, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: For any global illumination solution, the computation time can be drastically reduced by allowing some known error level in the results, rather than attempting to compute results to machine precision <ref> [13] </ref>. But what is an allowable error level? The allowable error depends on viewer perception, not on the characteristics of the object. In a radiosity solution, a high degree of accuracy is required, because the view of the object is unknown. The worst case must be assumed. <p> To do the base view time refinement, the procedure is the same as just described, but the list of base view locations is used in place of the light source locations. 4.3 Indirect Illumination To compute indirect illumination, we use a hierarchical radiosity solver <ref> [13] </ref> on a simplified environment [16]. The time steps used for recomputing the indirect illumination are found by recursive subdivision. Alternatively, a static set of points could have been chosen to compute indirect illumination with the Radiance package [20].
Reference: 14. <author> J. Kajiya. </author> <title> The rendering equation. </title> <booktitle> Computer Graphics (SIGGRAPH '86 Proceedings), </booktitle> <volume> 20(4) </volume> <pages> 143-150, </pages> <month> August </month> <year> 1986. </year>
Reference-contexts: In all of the temporal radiosity methods, full illumination, rather than just direct or indirect, is computed. None of the methods have examined whether the temporal sampling rate for new radiosity solutions can be different from the frame generation rate. Image Space. Monte Carlo path tracing (MCPT) <ref> [14] </ref> is an image space method. In MCPT stochastic methods are used to compute the radiance L (i; j) which will be seen through a pixel at location (i; j) on the screen.
Reference: 15. <author> Stefan Muller and Frank Schoffel. </author> <title> Fast radiosity repropagation for interactive virtual environ ments using a shadow-form-factor list. </title> <booktitle> In 5th Annual Eurographics Workshop on Rendering, </booktitle> <pages> pages 325-342, </pages> <month> June 13-15 </month> <year> 1994. </year>
Reference-contexts: Baum et al. [2] developed a method for identifying geometric form factors that would not need to be recomputed for a full matrix radiosity solution as an object moved through a prescribed path. Chen [5], George et al. [10], Muller and Schoffel <ref> [15] </ref> and Forsyth et al. [9] have developed progressive refinement radiosity solutions that are updated incrementally for temporal changes in object locations.
Reference: 16. <author> H. Rushmeier, C. Patterson, and A. Veerasamy. </author> <title> Geometric simplification for indirect illumina tion calculations. </title> <booktitle> In Proceedings of Graphics Interface '93. Canadian Information Processing Society, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: Detailed radiance is only computed for objects which appear in the image. Spatial coherence is exploited by calculating multiple reflections in object space. Examples of hybrid methods are the Radiance system and the multi-pass progressive refinement methods <ref> [6, 16] </ref>. Specifically, in hybrid methods, visibility and direct illumination calculations, for which the level of detail is limited by the pixel resolution, are computed in image space. Indirect illumination is computed in object space. <p> To do the base view time refinement, the procedure is the same as just described, but the list of base view locations is used in place of the light source locations. 4.3 Indirect Illumination To compute indirect illumination, we use a hierarchical radiosity solver [13] on a simplified environment <ref> [16] </ref>. The time steps used for recomputing the indirect illumination are found by recursive subdivision. Alternatively, a static set of points could have been chosen to compute indirect illumination with the Radiance package [20].
Reference: 17. <author> F. Sillion, J. Arvo, S. Westin, and D. Greenberg. </author> <title> A global illumination solution for general reflectance distributions. </title> <booktitle> Computer Graphics (SIGGRAPH '91 Proceedings), </booktitle> <volume> 25(4) </volume> <pages> 187-196, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: Extensions of the radiosity method have been developed to account for the full range of bidirectional reflectance distribution functions (BRDF's) that occur in real life <ref> [17] </ref>. Such methods however substantially increase the pre-computation time, storage requirements, and time to traverse the complex scene. Pre-Recorded Animations. To date, the most realistic animations are created by using algorithms which are capable of taking diffuse interreflection and nondiffuse reflection into account [20]. These algorithms are often termed photorealistic.
Reference: 18. <author> F. Sillion and C. Puech. </author> <title> Radiosity and Global Illumination. </title> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <address> San Francisco, CA, </address> <year> 1994. </year>
Reference-contexts: Radiosity. In contrast, radiosity techniques explicitly model the physical interreflection of light in a scene to compute the radiance L (energy per unit time, projected area and solid angle) leaving each object <ref> [12, 18] </ref>. A radiosity solution is a set of radiance values at locations distributed over surfaces in an environment. Given a solution, walkthroughs can be performed by converting the radiances to RGB values, which can be used in place of hardware lighting.
Reference: 19. <author> B. Smits, J. Arvo, and D. Salesin. </author> <title> An importance-driven radiosity algorithm. </title> <booktitle> Computer Graph ics (SIGGRAPH '92 Proceedings), </booktitle> <volume> 26(4) </volume> <pages> 273-282, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: It has the disadvantage that many radiances have to be computed that never appear in any images. The exception to this is the importance driven radiosity algorithm proposed by Smits et al. <ref> [19] </ref>. Another major drawback of the original radiosity method was that although it allowed walkthroughs of static environments, a costly new radiosity solution was required for each frame if any object moved. Considerable effort has been put in to develop radiosity methods that exploit temporal coherence in lighting.
Reference: 20. <author> G. Ward. </author> <title> The radiance lighting simulation and rendering system. </title> <booktitle> Computer Graphics (SIG GRAPH '94 Proceedings), </booktitle> <volume> 28(4), </volume> <month> July </month> <year> 1994. </year>
Reference-contexts: Such methods however substantially increase the pre-computation time, storage requirements, and time to traverse the complex scene. Pre-Recorded Animations. To date, the most realistic animations are created by using algorithms which are capable of taking diffuse interreflection and nondiffuse reflection into account <ref> [20] </ref>. These algorithms are often termed photorealistic. While these algorithms are capable of depicting very accurate illumination effects, it is at the cost of interactivity. Creating an animated sequence with these algorithms is very time consuming when compared to the algorithms discussed above. <p> The time steps used for recomputing the indirect illumination are found by recursive subdivision. Alternatively, a static set of points could have been chosen to compute indirect illumination with the Radiance package <ref> [20] </ref>. The points could have been chosen by doing a set of overture calculations for random views within the view space. The advantage of the radiosity preprocess however is that the resulting values are associated with objects.
Reference: 21. <author> G. Ward, F. Rubinstein, and R. </author> <title> Clear. A ray tracing solution for diffuse interreflection. </title> <booktitle> Computer Graphics (SIGGRAPH '88 Proceedings), </booktitle> <volume> 22(4) </volume> <pages> 85-92, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: Further, we consider how global illumination can be efficiently computed to generate each of the range-images. Previous global illumination methods have successfully exploited spatial coherence by separating the calculation of direct and indirect illumination <ref> [6, 21] </ref>. We build on this idea and exploit temporal coherence as well by separating the calculation of temporal variations in direct and indirect illumination.
References-found: 21

