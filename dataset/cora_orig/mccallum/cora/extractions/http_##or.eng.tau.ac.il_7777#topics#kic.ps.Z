URL: http://or.eng.tau.ac.il:7777/topics/kic.ps.Z
Refering-URL: http://or.eng.tau.ac.il:7777/quality.html
Root-URL: 
Title: Computational Quality Function Deployment is Knowledge Intensive Engineering  
Author: Yoram Reich 
Keyword: Quality Function Deployment, TQM, design practice, 7 management tools, graph representation, n-dim, collaborative design, design rational  
Note: To appear in The Proceedings of KIC-1 (Knowledge Intensive CAD), IFIP WG 5.2, Helsinki,  
Address: Ramat Aviv 69978, Israel,  
Affiliation: Department of Solid Mechanics, Materials, and Structures, Faculty of Engineering, Tel Aviv University,  
Email: E-mail: yoram@eng.tau.ac.il  
Phone: Phone: +1 972 3 640 7385, Fax: +1 972 3 640 7617,  
Date: September, 1995.  
Abstract: This paper describes the development of computational support tools for practically successful engineering techniques. The paper reviews the requirements for manual Quality Function Deployment techniques, presents them, and discusses their limitations. It argues that computational support tools can alleviate most of these limitations and that a graph-based information representation for such techniques is an excellent choice for supporting both QFD techniques and their integration with other external CAD-related computational services. The paper presents an architecture for a computational QFD (CQFD) tool based on the graph-based modeling environment n-dim. It shows how this architecture supports most of the requirements for QFD techniques, in addition to providing many additional functionalities, and briefly illustrates how the CQFD tool will be used. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Akao, Y., </author> <title> editor (1990). Quality Function Deployment, </title> <publisher> Productivity Press, </publisher> <address> Cambridge, MA. </address> <note> Original Japanese version from 1988. </note>
Reference: <author> Bradley, S. R. and Agogino, A. M. </author> <year> (1991). </year> <title> "Design capture and information management for concurrent design." </title> <journal> International Journal of Systems Automation: Research & Applications, </journal> <volume> 1(2) </volume> <pages> 117-141. </pages>
Reference-contexts: Several studies have dealt with this issue to a limited extent. One system, called Design Scribe <ref> (Bradley and Agogino, 1991) </ref>, is a connected collection of several graphical models including: a simple form of QFD, functional diagrams, form-function decomposition diagrams, morphological matrices, concept evolution diagrams, and parts of methodical design diagrams.
Reference: <author> Brecka, J. </author> <year> (1995). </year> <title> "Software packages: </title> <booktitle> Quality Progress' 12th annual QA/QC software directory." Quality Progress, </booktitle> <volume> 28(3) </volume> <pages> 25-119. </pages>
Reference-contexts: This paper focuses on the role of computational support for QFD techniques. Such support received significant attention in the last few years as displayed in a recent survey of software tools for quality assurance or control, documenting 526 software packages <ref> (Brecka, 1995) </ref>. By and large, these software tools provide means for data input, storage, manipulation, and presentation which are of practical importance.
Reference: <author> Chu, P. C. and Elam, J. J. </author> <year> (1990). </year> <title> "Induced system restrictiveness: An experimental demonstration." </title> <journal> IEEE Transaction on Systems, Man, and Cybernetics, </journal> <volume> 20(1) </volume> <pages> 195-201. </pages>
Reference-contexts: The key issue is which tools to use and how to build them such that they maintain the usefulness of the original QFD tools and do not induce restrictiveness over users <ref> (Chu and Elam, 1990) </ref>. As a guideline, any computational QFD tool must as least satisfy QFD requirements and, moreover, demonstrate an advantage over manual techniques with respect to satisfying them. Let us address the provision of computational support for each of the difficulties in turn. Size.
Reference: <author> Claussing, D. </author> <year> (1993). </year> <title> Total Quality Development, </title> <publisher> ASME Press, </publisher> <address> New York, NY. </address>
Reference: <author> Conklin, J. and Begeman, M. L. </author> <year> (1988). </year> <title> "gIBIS: A hypertext tool for exploratory policy discussion." </title> <journal> ACM Transaction on Office Information Systems, </journal> <volume> 6(4) </volume> <pages> 303-331. </pages>
Reference-contexts: Rational. Computational tools based on hypertext models can be introduced to attach information to parts of graphical models. This information can be simple or arbitrary complex such as complete rational models developed in IBIS-like languages (e.g., GIBIS <ref> (Conklin and Begeman, 1988) </ref>). Adaptability. In discussing the limitations of adapting paper methods and in the revisions item above we have already mentioned that computational tools significantly ease the adaptation of QFD tools.
Reference: <author> Deming, W. E. </author> <year> (1993). </year> <institution> The New Economics, MIT Center for Advanced Engineering Study, </institution> <address> Cambridge, MA. </address>
Reference-contexts: For American executives, machines performance start degrading immediately after they are manufactured. They will invest in new technology without thinking about the overhead of buying and assimilating it into their organizations. Often, this strategy will result in poor quality performance <ref> (Deming, 1993) </ref>. These evidences dispute a more general hypothesis that high-end technology is necessary for competitive advantage. In contrast, often, high-end technology is used as a pill: An initial hype about the technology is followed by quick use that may have some immediate benefits or lucky side-effects.
Reference: <author> Ealey, L. A. </author> <year> (1994). </year> <title> Quality by Design: Taguchi Methods and US Industry, </title> <publisher> The American Supplier Institute Press, </publisher> <address> Burr Ridge, IL, 2nd edition. </address>
Reference-contexts: Thus the difference in practice was not due to the availability of better CAD tools but due to different attitudes towards tools that led to their effective use. Similar observations have been made about other industries or technologies <ref> (Ealey, 1994) </ref>. During a visit to Japan in 1984, a journalist found 20-years-old American-made equipment in one of the most efficient Toyota's car engine plants. When he asked about it, the answer was that when the plant was built, this machinery was the best available. <p> When he asked about it, the answer was that when the plant was built, this machinery was the best available. Years later, this equipment worked more efficiently and produced better quality products than comparable American plants equipped with recent high technology <ref> (Ealey, 1994) </ref>. It seems that for Toyota's engineers, machines start their life performing poorly and thereafter improve with the experience engineers gain with them; technology becomes "mature" as it becomes older and its users become familiar with its "behavior". <p> In contrast, often, high-end technology is used as a pill: An initial hype about the technology is followed by quick use that may have some immediate benefits or lucky side-effects. Unfortunately, these consequences may disappear quickly <ref> (Ealey, 1994) </ref>. The reason behind competitive advantage is clearly not high-end versus low-end technology, which anyway transfers easily, but the attitude towards or the "relationships" with the technology.
Reference: <author> Fenves, S. J., Garrett, J. H. J., and Hakim, M. M. </author> <year> (1994). </year> <title> "Representation and processing of design standards: A bifurcation between research and practice." </title> <booktitle> In Proceedings April, 10 1995 16 Reich (1995) Proc. of KIC-1, IFIP WG 5.2 of the 1994 Structures Congress (Atlanta, </booktitle> <address> GA), New York, NY, </address> <publisher> American Society of Civil Engineers. </publisher>
Reference: <author> Gevirtz, C. D. </author> <year> (1994). </year> <title> Developing New Products with TQM, </title> <publisher> McGraw-Hill, </publisher> <address> New York, NY. </address>
Reference: <author> Howard, R. A. and Matheson, J. E., </author> <title> editors (1983). Readings on The Principles and Applications of Decision Analysis, Strategic Decisions Group, </title> <address> Menlo Park, CA. </address>
Reference-contexts: Second, there are various kinds of graph representations associated with computer tools that may become readily available for users of graph-based computational techniques. Two particular types of graph-based models we refer to are: conceptual structures (Sowa, 1984) and influence diagrams <ref> (Howard and Matheson, 1983) </ref>. Conceptual structures are a graphic system for representing concepts and relations that is general as predicate calculus.
Reference: <author> Ishikawa, K. </author> <year> (1982). </year> <title> Guide to Quality Control, Asian Productivity Organization, </title> <address> White Plains, NY, </address> <note> 2nd rev. edition. Original Japanese edition by JUSE from 1968. </note>
Reference-contexts: QFD tools are built to represent information in simple graphical models that are very easy to comprehend. An early set of tools, referred to as the seven (old) quality control tools, assisted in statistical quality control (SQC). It includes <ref> (Ishikawa, 1982) </ref>: check sheets, Pareto charts, histograms, cause-and-effect diagrams, scatter charts, control charts and bar graphs. They all have proved useful for their intended tasks. As it became apparent over the years, SQC could control the production process but not improve design quality.
Reference: <author> King, B. </author> <year> (1989). </year> <title> Better Designs in Half the Time: Implementing QFD Quality Function Deployment in America, </title> <publisher> GOAL/QPC, Methuen, </publisher> <address> MA, </address> <note> 3rd edition. </note>
Reference-contexts: In this way the model serves as a prototype while the tool itself remain intact. QFD tools have been adapted significantly in this way considering, for example, the diversity of ways in which Japanese have used them (e.g., more that 80 types of matrices <ref> (King, 1989) </ref>). Observing this diversity and considering that some tools are "too" flexible for novices (Mizuno, 1988), it becomes useful to include guidelines or templates that users can retrieve and adapt based on past uses of a tool that are similar to the design case at hand.
Reference: <author> Konda, S., Monarch, I., Sargent, P., and Subrahmanian, E. </author> <year> (1992). </year> <title> "Shared memory in design: A unifying theme for research and practice." </title> <booktitle> Research in Engineering Design, </booktitle> <volume> 4(1) </volume> <pages> 23-42. </pages>
Reference: <author> Levy, S., Subrahmanian, E., Konda, S. L., Coyne, R. F., Westerberg, A. W., and Reich, Y. </author> <year> (1993). </year> <title> "An overview of the n-dim environment." </title> <type> Technical Report EDRC-05-65-93, </type> <institution> Engineering Design Research Center, Carnegie Mellon University, </institution> <address> Pittsburgh, PA. </address>
Reference-contexts: In essence, previous cases of using QFD tools serve as prototypes for new usage and the new guidelines or templates provide a language for writing new graphical models specific to a particular kind of problems. These two roles, a prototype and a language, are borrowed from n-dim <ref> (Levy et al, 1993) </ref> and will be elaborated later. 4) Communication. The use of QFD techniques forces having good face-to-face (synchronous) communication practices because most of the tools are used in group settings. <p> Thus, the set of models is a set of multiple potentially overlapping classifications over the universe of objects. As this set grows, it better approximates the topological structure of knowledge hypothesized by GDT (Reich, 1995). 4 IMPLEMENTATION In the previous section we mentioned n-dim <ref> (Levy et al, 1993) </ref> as a project whose underlying ideas have influenced the present work. <p> All the above leaves (3f ) as the only requirement that n-dim does not currently address. This can be improved by incorporating groupware (Nunamaker et al, 1988) or other creativity-fostering tools developed specifically for these purposes. 4.2 An architecture of a CQFD tool are n-dim layers <ref> (Levy et al, 1993) </ref> demonstrating the great advantage of using n-dim as the implementation vehicle.
Reference: <author> Liker, J. K., Fleischer, M., Nagamachi, M., and Zonnevylle, M. S. </author> <year> (1992). </year> <title> "Designers and their machines: CAD use and support in the US and Japan." </title> <journal> Communications of The ACM, </journal> <volume> 35(2) </volume> <pages> 77-95. </pages>
Reference-contexts: study comparing the CAD practices of American and Japanese engineers, the working hypothesis was that one explanation of Japanese economical success compared to American industries (and beside management style superiority) would be that Japanese Reich (1995) Proc. of KIC-1, IFIP WG 5.2 CAD practices are more "advanced" than American practices <ref> (Liker et al, 1992) </ref>. The results of this study did not support this hypothesis.
Reference: <author> Mizuno, S., </author> <title> editor (1988). Management for Quality Improvement: The Seven New QC Tools, </title> <publisher> Produtivity Press, </publisher> <address> Cambridge, MA. </address> <note> Original Japanese edition by JUSE from 1979. </note>
Reference-contexts: They all have proved useful for their intended tasks. As it became apparent over the years, SQC could control the production process but not improve design quality. Consequently, new requirements for QFD tools were formulated to include three categories of provisions <ref> (Mizuno, 1988) </ref>. 1. Expressiveness. a) Supporting the processing, representation, and communication of verbal informa tion. b) Providing a structured way to organize information. 2. Adaptability. a) Being flexible to accommodate the diversity of ways people may wish to use the tools. 3. <p> QFD tools have been adapted significantly in this way considering, for example, the diversity of ways in which Japanese have used them (e.g., more that 80 types of matrices (King, 1989)). Observing this diversity and considering that some tools are "too" flexible for novices <ref> (Mizuno, 1988) </ref>, it becomes useful to include guidelines or templates that users can retrieve and adapt based on past uses of a tool that are similar to the design case at hand.
Reference: <editor> Nunamaker, J. F., Applegate, L. M., and Konsynski, B. R. </editor> <year> (1988). </year> <title> "Computer-aided deliberation: Model management and group decision support." </title> <journal> Operations Research, </journal> <volume> 36(6) </volume> <pages> 826-848. </pages>
Reference-contexts: All the above leaves (3f ) as the only requirement that n-dim does not currently address. This can be improved by incorporating groupware <ref> (Nunamaker et al, 1988) </ref> or other creativity-fostering tools developed specifically for these purposes. 4.2 An architecture of a CQFD tool are n-dim layers (Levy et al, 1993) demonstrating the great advantage of using n-dim as the implementation vehicle.
Reference: <author> Oakland, J. S. </author> <year> (1989). </year> <title> Total Quality Management, Butterworth, </title> <publisher> Oxford, </publisher> <address> England. </address>
Reference-contexts: Nevertheless, this paper emphasizes opportunities for computational services beyond computerizing the manual work on QFD; services whose potential contribution to QFD are recognized but presently unavailable <ref> (Oakland, 1989) </ref>. This emphasis is analogous to 3D CAD systems with visualization, interference checking, volume calculation, and other facilities that went beyond the mechanization of 2D drafting.
Reference: <author> Ohno, T. and Mito, S. </author> <year> (1988). </year> <title> Just-in-Time for Today and Tomorrow, </title> <publisher> Productivity Press, </publisher> <address> Cambridge, MA. </address> <note> Original Japanese edition by Diamond Inc. from 1986. </note>
Reference: <author> Pugh, S. </author> <year> (1981). </year> <title> "Concept selection- a method that works." </title> <booktitle> In Proceedings of the International Conference on Engineering Design (ICED-81), </booktitle> <pages> pages 497-506, </pages> <address> Heurista, Zurich. </address>
Reference-contexts: The first two tools are used in the planning stage where information is elicited from various sources, the next three are used for searching for solutions, and the last two for controlling the implementation of the plans. Clearly, other tools, such as Pugh's concept selection method <ref> (Pugh, 1981) </ref>, can join this group and the existing tools may evolve to support new practical demands. The tools are very simple and not necessarily new. Their strength lies in their usability and understandability. As seen from Figure 1, the tools are best used as a group. <p> When improving existing products, empirical knowledge is critical and when designing new products, the role of technical knowledge increases. One of the changes to Japanese practices that was introduced by several QFD consultants (King, 1989; Claussing, 1993) is Pugh's concept selection method <ref> (Pugh, 1981) </ref> for creating preliminary designs. While the regular QFD methods are geared towards improving design reliability and reducing cost, Pugh's method is geared towards encouraging alternative perspectives. 2.3 Limitations of QFD tools By and large, most QFD implementations use paper and pencil as tools.
Reference: <author> Ramaswamy, R. and Ulrich, K. </author> <year> (1993). </year> <title> "Augmenting the house of quality with engineering models." </title> <booktitle> Research in Engineering Design, </booktitle> <volume> 5 </volume> <pages> 70-79. </pages>
Reference-contexts: Another hypertext implementation merely provides a usable interface to the technique (Wolfe, 1994), although its developer discussed attaching several other computational services. A third study deals with incorporating mathematical models in the roof of the HoQ <ref> (Ramaswamy and Ulrich, 1993) </ref>. Much more complex models can be incorporated such as qualitative physics knowledge and simulations. The critical issue is whether such techniques restrict the way users currently use the HoQ; thus, the utility of these computational techniques is an empirical question.
Reference: <author> Reich, Y., Konda, S., Monarch, I., and Subrahmanian, E. </author> <year> (1992). </year> <title> "Participation and design: An extended view." </title> <editor> In Muller, M. J., Kuhn, S., and Meskill, J. A., editors, PDC'92: </editor> <booktitle> Proceedings of the Participatory Design Conference (Cambridge, </booktitle> <address> MA), </address> <pages> pages 63-71, </pages> <address> Palo Alto, CA, </address> <publisher> Computer Professionals for Social Responsibility. </publisher>
Reference-contexts: However, what, for example, are the requirements of a design that is completely new? or, who are the customers of new designs from whom requirements are to be solicited. These questions and others critical issues pertaining to design processes <ref> (Reich et al, 1992) </ref> are outside the scope of this paper.
Reference: <author> Reich, Y., Konda, S., Levy, S. N., Monarch, I., and Subrahmanian, E. </author> <year> (1993). </year> <title> "New roles for machine learning in design." </title> <journal> Artificial Intelligence in Engineering, </journal> <volume> 8(3) </volume> <pages> 165-181. </pages>
Reference-contexts: External tool encapsulation. n-dim allows to encapsulate external tools written in diverse programming languages and use them in models. One such tool is a natural language processing (NLP) tool that can build terminological structures from a corpora of text (1a, 3c) <ref> (Reich et al, 1993) </ref>. This tool can be of significant help for operating the affinity diagram tool.
Reference: <author> Reich, Y. </author> <year> (1994). </year> <title> "What is wrong with CAE and can it be fixed." In Preprints of Bridging the Generations: </title> <booktitle> An International Workshop on the Future Directions of Computer-Aided Engineering, </booktitle> <address> Pittsburgh, PA, </address> <institution> Department of Civil Engineering, Carnegie Mellon University. </institution>
Reference: <author> Reich, Y. </author> <year> (1995). </year> <title> "A critical review of General Design Theory." </title> <booktitle> Research in Engineering Design, </booktitle> <volume> 7(1) </volume> <pages> 1-18. </pages> <month> April, </month> <note> 10 1995 17 Reich (1995) Proc. of KIC-1, IFIP WG 5.2 Salomons, </note> <author> O. W., van Slooten, F., de Koning, G. W. F., van Houten, F. J. A. M., and Kals, H. J. J. </author> <year> (1994). </year> <title> "Conceptual graphs in CAD." </title> <journal> Annals of the CIRP, </journal> 43(1):125-128. 
Reference-contexts: Thus, the set of models is a set of multiple potentially overlapping classifications over the universe of objects. As this set grows, it better approximates the topological structure of knowledge hypothesized by GDT <ref> (Reich, 1995) </ref>. 4 IMPLEMENTATION In the previous section we mentioned n-dim (Levy et al, 1993) as a project whose underlying ideas have influenced the present work.
Reference: <author> Sowa, J. F. </author> <year> (1984). </year> <title> Conceptual Structures: Information Processing in Mind and Machine, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA. </address>
Reference-contexts: This supports an evolutionary adjustment of users from the manual to the computational tools. Second, there are various kinds of graph representations associated with computer tools that may become readily available for users of graph-based computational techniques. Two particular types of graph-based models we refer to are: conceptual structures <ref> (Sowa, 1984) </ref> and influence diagrams (Howard and Matheson, 1983). Conceptual structures are a graphic system for representing concepts and relations that is general as predicate calculus.
Reference: <author> Sowa, J. F. </author> <year> (1993). </year> <title> "Relating diagrams to logic." </title> <editor> In Mineau, G. W., Moulin, B., and Sowa, J. F., editors, </editor> <title> Conceptual Graphs for Knowledge Representation, </title> <booktitle> Proceedings of the First International Conference on Conceptual Structures (ICCS'93), </booktitle> <address> (Quebec City, Canada), </address> <pages> pages 1-35, </pages> <address> Berlin, </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: There have been studies on the use of conceptual graphs for various CAD-related topics such as: mapping the enterprise information language EXPRESS (Wermelinger and Bejan, 1993), modeling object features and constraints for CAD (Salomons et al, 1994), and modeling the knowledge interchange format KIF <ref> (Sowa, 1993) </ref>. In contrast to these and other capabilities, conceptual graphs do not represent uncertainties well. On the other hand, influence diagrams are graph-based models for representing probabilistic knowledge for probabilistic inference. They are extensions of Bayesian networks and have been used in artificial intelligence, decision analysis and statistics.
Reference: <author> Subrahmanian, E., Coyne, R., Konda, S. L., Levy, S. N., Martin, R., Monarch, I. A., Reich, Y., and Westerberg, A. W. </author> <year> (1993). </year> <title> "Support system for different-time different-place collaboration for concurrent engineering." </title> <booktitle> In Proceedings of the 2nd IEEE Workshop on Enabling Technologies Infrastructure for Collaborative Enterprises (WET ICE), </booktitle> <pages> pages 187-191, </pages> <address> Los Alamitos, CA, </address> <publisher> IEEE Computer Society Press. </publisher>
Reference: <author> Subrahmanian, E., Konda, S. L., Levy, S. N., Reich, Y., Westerberg, A. W., and Monarch, I. A. </author> <year> (1993). </year> <title> "Equations aren't enough: </title> <booktitle> Informal modeling in design." Artificial Intelligence in Engineering Design, Analysis, and Manufacturing, </booktitle> <volume> 7(4) </volume> <pages> 257-274. </pages>
Reference: <author> Subrahmanian, E. </author> <year> (1992). </year> <title> "Notes on empirical studies of engineering tasks and environments, invited position paper." In NSF Workshop on Information Capture and Access in Engineering Design Environments (Ithaca, </title> <publisher> NY), </publisher> <pages> pages 567-578. </pages>
Reference: <author> Tomiyama, T. </author> <year> (1994). </year> <title> "From General Design Theory to knowledge intensive engineering." </title> <booktitle> Artificial Intelligence for Engineering Design, Analysis, and Manufacturing, </booktitle> <volume> 8(4) </volume> <pages> 319-333. </pages>
Reference: <author> Umeda, Y., Tomiyama, T., and Yoshikawa, H. </author> <year> (1991). </year> <title> "A design methodology for a self-maintained machine." In Design Theory and Methodology-DTM'91 (Miami, </title> <address> FL), </address> <pages> pages 143-150, </pages> <address> New York, NY, </address> <publisher> The American Society of Mechanical Engineers. </publisher>
Reference: <author> Wermelinger, M. and Bejan, A. </author> <year> (1993). </year> <title> "Conceptual structures for modeling in CIM." </title> <editor> In Mineau, G. W., Moulin, B., and Sowa, J. F., editors, </editor> <title> Conceptual Graphs for Knowledge Representation, </title> <booktitle> Proceedings of the First International Conference on Conceptual Structures (ICCS'93), </booktitle> <address> (Quebec City, Canada), </address> <pages> pages 345-360, </pages> <address> Berlin, </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Conceptual structures are a graphic system for representing concepts and relations that is general as predicate calculus. There have been studies on the use of conceptual graphs for various CAD-related topics such as: mapping the enterprise information language EXPRESS <ref> (Wermelinger and Bejan, 1993) </ref>, modeling object features and constraints for CAD (Salomons et al, 1994), and modeling the knowledge interchange format KIF (Sowa, 1993). In contrast to these and other capabilities, conceptual graphs do not represent uncertainties well.
Reference: <author> Wolfe, M. </author> <year> (1994). </year> <title> "Development of the city of quality: a hypertext-based group decision support system for quality function deployment." </title> <booktitle> Decision Support Systems, </booktitle> <volume> 11(3) </volume> <pages> 299-318. </pages>
Reference-contexts: The system is implemented as a hypercard and is directed towards recording these models as a form of design history. Another hypertext implementation merely provides a usable interface to the technique <ref> (Wolfe, 1994) </ref>, although its developer discussed attaching several other computational services. A third study deals with incorporating mathematical models in the roof of the HoQ (Ramaswamy and Ulrich, 1993). Much more complex models can be incorporated such as qualitative physics knowledge and simulations.
Reference: <author> Yoshikawa, H., Tomiyama, T., Kiriyama, T., and Umeda, Y. </author> <year> (1994). </year> <title> "An integrated modelling environment using the metamodel." </title> <journal> Annals of the CIRP, </journal> <volume> 43(1) </volume> <pages> 121-124. </pages>

References-found: 36

