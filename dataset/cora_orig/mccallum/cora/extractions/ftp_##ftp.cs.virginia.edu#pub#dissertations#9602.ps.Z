URL: ftp://ftp.cs.virginia.edu/pub/dissertations/9602.ps.Z
Refering-URL: ftp://ftp.cs.virginia.edu/pub/dissertations/README.html
Root-URL: http://www.cs.virginia.edu
Title: A Dissertation  A FORMAL SEMANTICS FOR EVALUATING CRYPTOGRAPHIC PROTOCOLS  
Author: Alec F. Yasinsac 
Degree: Presented to the Faculty of the School of Engineering and Applied Science at the University of Virginia In Partial Fulfillment of the Requirements for the Degree Doctor of Philosophy (Computer Science)  
Date: Jaunary, 1996  
Note: by  
Abstract-found: 0
Intro-found: 1
Reference: [AN94] <author> Martin Abadi and Roger Needham, </author> <title> "Prudent Engineering Practice for Cryptographic Protocols", </title> <booktitle> From the 1994 IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <pages> pp. 122-136 </pages>
Reference-contexts: Interestingly, it is the syntactic addition of Kailar and Gligor's verification mechanism that forces the specification of additional information used to do the verification. In <ref> [AN94] </ref> Abadi and Needham give principles for improving security of cryptographic protocols. In that paper, they recommend including information within each message that identifies the intended message round and protocol session. 2.2 - Use of specification and verification tools developed for software evaluation. <p> The significance of the problem of dynamic evaluation of cryptographic protocols is emphasized in research into the nature of attacks on cryptographic protocols such as in <ref> [AN94] </ref>, [BIRD92], [BIRD93], [MOORE88], [SYV93a], [SYV93b]. By detailing the simple attack given above and other various attacks, these works highlight the variety and subtle nature of active attacks. <p> Since we illustrated the size and complexity of the original verification condition with the Otway and Rees protocol and because of the complex nature of these verification conditions, we will omit large, original verification conditions from subsequent examples. 6.3.2.3 Abadi and Needham's Modification to Otway and Rees In <ref> [AN94] </ref>, Abadi and Needham suggest modifications to the Otway and Rees protocol that result in a protocol that requires less encryption than the original version. They use the convention of attaching names to messages to produce this efficiency. <p> Simplified predicate follows.****** TRUE Chapter 6: Verifying Protocols Using the CPAL Evaluation System 119 6.4.5. Abadi and Needham Attack on the Woo and Lam Protocol. In <ref> [AN94] </ref> Abadi and Needham give an attack on the Woo and Lam protocol given earlier in Figure 6.3. The focus of their attack is the connection between the messages in the protocol.
Reference: [AT91] <author> Martin Abadi and Mark R. Tuttle, </author> <title> "A Semantics for a Logic of Authentication", </title> <booktitle> Tenth Annual ACM Symp on Princ of Dist Computing, </booktitle> <address> Montreal, Canada, </address> <month> August, </month> <year> 1991 </year>
Reference-contexts: For this purpose, we selected the model described in <ref> [AT91] </ref>, where every message sent by a valid principal is intercepted by a powerful intruder. <p> We identified secure, local address spaces for each prin Chapter 8: Summary 161 cipal with input and output queues representing the communications medium for transmission of information between principals. We borrowed concepts from Abadi and Tuttle <ref> [AT91] </ref> and placed an all powerful intruder at the center of the communications hub, thus requiring the cryptographic system to provide all elements of security.
Reference: [BAN88] <author> Burrows, M., Abadi, M., and Needham, R. M. </author> <title> "A Practical Study in Belief and Action", </title> <booktitle> In Proceedings of the 2nd Conference on Theoretical Aspects of Reasoning about Knowledge (Asilomar, </booktitle> <address> Ca., </address> <month> Feb. </month> <editor> 1988) M. Vardi, Ed. </editor> <publisher> Morgan Kauf-mann, </publisher> <address> Los Altos, Calif., </address> <year> 1988, </year> <pages> pp. 325-342 </pages>
Reference: [BAN89] <author> Burrows, M., Abadi, M., and Needham, R. M. </author> <title> "A Logic of Authentication", </title> <type> Technical Report 39, </type> <institution> Digital Systems Research Center, 130 Lytton Avenue, Palo Alto, Cal, </institution> <month> 94301, February </month> <year> 1989 </year>
Reference-contexts: TRUE The CCITT protocol [CCITT], <ref> [BAN89] </ref>, [GS91] exercises CPAL-ES against another mix of cryptographic techniques used to establish a secure communication ses Chapter 6: Verifying Protocols Using the CPAL Evaluation System 126 sion. Timestamps are used to ensure message freshness and nonces to connect messages in the session. <p> Simplified predicate follows*** (A.time_ok (B.Tb) and B.time_ok (A.Ta)) Chapter 6: Verifying Protocols Using the CPAL Evaluation System 127 In <ref> [BAN89] </ref> Burrows, Abadi and Needham construct an attack on the CCITT protocol. We give the CPAL-ES evaluation of that attack in Figure 6.19. The attack the authors construct is a sophisticated oracle attack using a both a replay session and parallel session. <p> In statement 15, the ASSUME statement is expressing the fact that principal B can see the value that resulted from encrypting the catenation of the values Na and kab.Protocol goals are expressed as CPAL ASSERT statements. The logical goals described by Burrows, Abadi, and Needham <ref> [BAN89] </ref> are given as predicates. <p> These cryptographic protocols, designed to ensure the security of encrypted messages or for authentication, may be themselves vulnerable to compromise by persistent intruders, even if the cryptographic algorithm they use is strong. Based on the seminal papers by Needham and Schroeder [NS78] and Burrows, Abadi, and Needham <ref> [BAN89] </ref> a new research area emerged focused on providing mechanisms to evaluate the ability of cryptographic protocols to meet their stated goals. 8.1 Review of the Research The research presented in this dissertation represents a new approach to cryptographic protocol verification.
Reference: [BAN90] <author> Burrows, M., Abadi, M., and Needham, R. M. </author> <title> "A Logic of Authentication", </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> Vol. 8, No. 1, </volume> <month> Feb </month> <year> 1990, </year> <pages> pp. 18-36. </pages>
Reference-contexts: TRUE 6.2.3 The Andrew Secure Remote Procedure Call Protocol Another interesting protocol is the Andrew Secure Remote Procedure Call protocol given in <ref> [BAN90] </ref> and shown in Figure 6.4. The intent of this protocol is for two principals to utilize an existing shared, secret key in order to establish a new, shared, secret, session key. The fundamental differences between this protocol and the ISO protocol are that: 1.
Reference: [BAN90b] <author> Burrows, M., Abadi, M., and Needham, R. M., </author> <title> "Rejoinder to Nessett", </title> <journal> ACM Operating Systems Review, </journal> <volume> vol. 24, no. 2, </volume> <month> April </month> <year> 1990, </year> <pages> pp. 39-40 </pages>
Reference-contexts: Clearly, accomplishment of static evaluation of protocols by a formal method is very important, since any protocol that does not meet its goals under static evaluation is useless in practice. As Burrows, et. al. point out in their rejoinder to Nessett <ref> [BAN90b] </ref>, static evaluation is just one step in evaluating a cryptographic protocol. BAN Logic accomplishments aside, the weakness remains, i.e., the evaluation makes no provision to consider active attacks by persistent intruders.
Reference: [BELMER90] <author> Steven M. Bellovin & Michael Merritt, </author> <title> "Limitations of the Kerberos Authentication System", </title> <journal> Computer Communications Review, </journal> <month> Oct </month> <year> 1990 </year>
Reference: [BIEB90] <author> P. Bieber, </author> <title> "A Logic of Communication in a Hostile Environment", </title> <booktitle> in Proceedings of the ComputereSecurity Foundations Workshop III, </booktitle> <address> Washington (IEEE), </address> <year> 1990, </year> <month> pp.14-22 </month>
Reference-contexts: These issues lead to development of temporally enhanced logical systems containing operators to deal with freshness and with the sequencing problems of BAN Logic identified by Snekkenes [SNEK91]. The methods described below are examples of these logical systems. 2.1.3.1 A Logic of Knowledge and Time In <ref> [BIEB90] </ref>, Bieber describes his Logic of Knowledge, Time and Communication, CKT5. The foundation for CKT5 is a simple language based on the AND, OR, and NOT connectors and a set of propositional variables.
Reference: [BIRD92] <author> Ray Bird, Inder Gopal, Amir Herzberg, Phil Janson, Shay Kutten, Refik Molva, and Moti Yung. </author> <title> "Systematic Design of Two-Party Authentication Protocols." </title> <editor> In Joan Fegenbaum, editor, </editor> <booktitle> Advances in Cryptography - CRYPTO `91, volume 576 of Lecture Notes in Comuter Science. </booktitle> <publisher> Springer Verlag, </publisher> <address> Berlin, </address> <year> 1992 </year>
Reference-contexts: It was shown that unless protocol messages are selected very carefully, active intruders may be able to extract parts of previous messages in the current run that will trick a participant into an invalid belief <ref> [BIRD92] </ref>. Neither of these issues is directly concerned with time, but rather they are a matter of sequencing. One method of dealing with sequencing is to use time to distinguish which message did, or should have, occurred first. <p> The significance of the problem of dynamic evaluation of cryptographic protocols is emphasized in research into the nature of attacks on cryptographic protocols such as in [AN94], <ref> [BIRD92] </ref>, [BIRD93], [MOORE88], [SYV93a], [SYV93b]. By detailing the simple attack given above and other various attacks, these works highlight the variety and subtle nature of active attacks. <p> We then consider other protocols that illustrate the characteristics and features of CPAL-ES, progressively moving to more complex protocols with broader goals and different cryptographic environments. Finally, we illustrate how CPAL-ES reveals active attacks on protocols. 6.1 A Simple Cryptographic Protocol Verified. In <ref> [BIRD92] </ref> the authors illustrate several attacks on protocols. The trivial one-way protocol they use, given in Figure 6.1, part (a), is convenient for illustrating output from CPAL-ES. In this simple protocol, the two principals use the knowledge of a common key to authenticate the communication session. <p> ISO Protocol Attack from [BIRD93] (((TRUE and (unique.v0 == d [&lt;e [unique.v1]A.k,e [unique.v0]A.k&gt;.2]A.k)) and (unique.v0 == d [&lt;e [unique.v1]A.k,e [unique.v0]A.k&gt;.2]A.k)) and (unique.v1 == d [&lt;e [unique.v1]A.k,e [unique.v0]A.k&gt;.1]A.k)) ****** Simplified predicate follows. TRUE 6.4.4 The Trivial Two-way Protocol Attack In <ref> [BIRD92] </ref>, the authors give a trivial two-way authentication protocol and an attack against that protocol. The protocol itself is given in Appendix D. <p> Na); End of Appendix C 175 Appendix D BAN Logic Canonical Proof Tree believes (A,X) believes (A,controls (S,(X)) and believes (A,believes (S,(X)) |- believes (A,said (S,X) and believes (A,fresh (X)) |- sees (A,e [X]kas) and believes (A,goodkey (A,kas,S)) | |- 176 Appendix E Attack on a trivial 2 way protocol <ref> [BIRD92] </ref> X: assume (B.k == A.k); A: -&gt;B (e [&lt;A,e [N1]k>]k); I: =&gt;B (msg1); B: (src,msg2) := d [msg1]k; B: N2 := new; B: -&gt;src (&lt;N1,msg3>); I: (N1,msg3) := msg3a; A: &lt;-(msg3); A: N'1 := d [msg4]k; A: -&gt;dst (&lt;N'1,msg5>); I: (N2,msg5) := msg6; B: &lt;-(N'2); B: assert (N'2 == N2);
Reference: [BIRD93] <author> Ray Bird, Inder Gopal, Amir Herzberg, Phil Janson, Shay Kutten, Refik Molva, and Moti Yung. </author> <title> "Systematic Design of a Family of Attack Resistant Authentication Protocols", </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol 11, No. 5, </volume> <month> June </month> <year> 1993 </year>
Reference-contexts: The significance of the problem of dynamic evaluation of cryptographic protocols is emphasized in research into the nature of attacks on cryptographic protocols such as in [AN94], [BIRD92], <ref> [BIRD93] </ref>, [MOORE88], [SYV93a], [SYV93b]. By detailing the simple attack given above and other various attacks, these works highlight the variety and subtle nature of active attacks. <p> We begin with the proposed ISO protocol given in <ref> [BIRD93] </ref> and shown in Figure 6.2. In the manually generated weakest precondition shown in Figure 6.1, we showed the predicate at each step in the evaluation. The evaluation in Figure 6.2 was taken directly from the CPAL-ES evaluation. As you see, CPAL-ES provides three components to the evaluation: 1. <p> The Chapter 6: Verifying Protocols Using the CPAL Evaluation System 96 creators of this protocol may have believed that satisfaction of the given goals allowed each principal to believe they had established a secure communication session with the other, but Bird et. al. <ref> [BIRD93] </ref> showed how an active intruder can trick a principal using this protocol into believing a session is established with another valid principal when the session is actually with the intruder. <p> The intruder is now in a possession to intercept all messages originating from principal A and conduct the session with principal B as though the intruder were A himself. 6.4.2 Parallel Session Attacks Bird, et. al. illustrated another method active attackers may use in <ref> [BIRD93] </ref>. They showed how an intruder may use the parallel nature of systems in order to acquire an encrypted value they can use in a protocol attack. <p> We use the convention of indenting actions in the attack session for readability. 6.4.3 Bird et. al Attack on the ISO Protocol We briey mentioned earlier that Bird et. al, constructed an attack on the proposed ISO protocol in <ref> [BIRD93] </ref>. The attack they constructed is a parallel session attack. The complete sequence of that attack is given in Figure 6.12. In this attack, the intruder uses principal A to get an encrypted value to be used later to spoof A. <p> Since we know the steps violate the desired results, the TRUE result indicates we have found an attack on the protocol. ISO Protocol Attack from <ref> [BIRD93] </ref> (((TRUE and (unique.v0 == d [&lt;e [unique.v1]A.k,e [unique.v0]A.k&gt;.2]A.k)) and (unique.v0 == d [&lt;e [unique.v1]A.k,e [unique.v0]A.k&gt;.2]A.k)) and (unique.v1 == d [&lt;e [unique.v1]A.k,e [unique.v0]A.k&gt;.1]A.k)) ****** Simplified predicate follows. TRUE 6.4.4 The Trivial Two-way Protocol Attack In [BIRD92], the authors give a trivial two-way authentication protocol and an attack against that protocol. <p> B.good (I.Na,I.A) In <ref> [BIRD93] </ref>, the authors give two protocols that utilize an xor function to help ensure the freshness of a message. The simple protocol from their Figure 8 is given along with its CPAL-ES evaluation in Figure 6.27.
Reference: [BM79] <author> Robert S. Boyer and J. Strother Moore, </author> <title> "A Computational Logic", </title> <publisher> Academic Press 1979, From the ACM Monographic Series </publisher>
Reference-contexts: Standard proof techniques can be applied to prove the verification condition in this form. Secondly, because of its ability to reect assumptions and goals as arbitrary predicates, CPAL-ES may be used with automated theorem proving systems. The Boyer-Moore Theorem Prover <ref> [BM79] </ref>, [BM88] and the Prototype Verification System [OSR93a], [OSR93b-, [SOR93a], [SOR93b] are two operating theorem proving systems. <p> Fortunately, many people devote their main research to developing theorem proving techniques and mechanical theorem proof systems. There are several such systems available for accomplishing this final proof. Boyer and Moore <ref> [BM79] </ref> and [BM88] developed what is now Chapter 7: CPAL-ES and BAN Logic 148 the ad hoc standard theorem proof system known appropriately as the Boyer/Moore Theorem Prover.
Reference: [BM88] <author> Robert S. Boyer and J. Strother Moore, </author> <title> "A Computational Logic Handbook", Academic Press 1988, </title> <booktitle> From the series "Perspectives in Computing", </booktitle> <address> v23 Bibliography 187 </address>
Reference-contexts: Standard proof techniques can be applied to prove the verification condition in this form. Secondly, because of its ability to reect assumptions and goals as arbitrary predicates, CPAL-ES may be used with automated theorem proving systems. The Boyer-Moore Theorem Prover [BM79], <ref> [BM88] </ref> and the Prototype Verification System [OSR93a], [OSR93b-, [SOR93a], [SOR93b] are two operating theorem proving systems. <p> Fortunately, many people devote their main research to developing theorem proving techniques and mechanical theorem proof systems. There are several such systems available for accomplishing this final proof. Boyer and Moore [BM79] and <ref> [BM88] </ref> developed what is now Chapter 7: CPAL-ES and BAN Logic 148 the ad hoc standard theorem proof system known appropriately as the Boyer/Moore Theorem Prover.
Reference: [CARL94] <author> Ulf Carlsen, </author> <title> "Generating Formal Cryptographic Protocol Specifications", </title> <booktitle> From the 1994 IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <pages> pp 137-145 </pages>
Reference-contexts: Earlier, we discussed some features of these pseudocodes and utilized them to give the Needham and Schroeder and the Otway and Reese protocols in Figures 1.1 and 1.2. Carlson considered these pseudocode notations in <ref> [CARL94] </ref> naming one version Standard Notation (SN), and suggested that the syntax for SN is well defined, but that no semantics is associated with it. Figures 1.1 and 1.2 utilize the pseudocode form of SN. <p> TRUE The CPAL-ES evaluation of the protocol attributed to Yahalom in <ref> [CARL94] </ref> is given in Figure 6.22. The Yahalom Protocol is a three party, symmetric key protocol Chapter 6: Verifying Protocols Using the CPAL Evaluation System 132 whose goal is to provide two communicating principals with a symmetric key suitable for a secure session. The protocol requires four transmissions.
Reference: [CCITT] <editor> CCITT draft recommendation X.509. </editor> <title> The directory-authentication framework, </title> <type> version 7. CCITT, </type> <institution> Gloucester, </institution> <month> Nov. </month> <year> 1987 </year>
Reference-contexts: TRUE The CCITT protocol <ref> [CCITT] </ref>, [BAN89], [GS91] exercises CPAL-ES against another mix of cryptographic techniques used to establish a secure communication ses Chapter 6: Verifying Protocols Using the CPAL Evaluation System 126 sion. Timestamps are used to ensure message freshness and nonces to connect messages in the session.
Reference: [CHEN90] <author> Cheng, Pau-Chen and Gligor, Virgil D. </author> <title> "On the formal specification and verification of a Multiparty Session Protocol". </title> <booktitle> From 1990 IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <pages> pp. 216-233 </pages>
Reference-contexts: It may also be useful to provide an interface from this tool to other existing tools for protocol evaluation. Potentially, this tool could one day be part of a protocol evaluation workbench which includes our specification/verification system, a testing system (such as Interrogator [MCF87]), a BAN implementation (such as <ref> [CHEN90] </ref>), etc. Another sub-component of such a system would be a language translator to take a protocol specified in CPAL and convert it to the language used by Interrogator to provide a fully integrated environment.
Reference: [CM81] <author> Clockson, W. F., and Mellish, C. S., </author> <title> "Programming in Prolog", </title> <publisher> Springer-Verlag 1981 </publisher>
Reference-contexts: We offer two methods to deal with these more complex verification conditions. First, all final verification conditions are transformed into canonical normal form using the algorithm described in <ref> [CM81] </ref>. Standard proof techniques can be applied to prove the verification condition in this form. Secondly, because of its ability to reect assumptions and goals as arbitrary predicates, CPAL-ES may be used with automated theorem proving systems.
Reference: [CORSS] <author> Judy Crow, Sam Owre, John Rushby, Natarajan Shankar, Mandayam Srivas, </author> <title> "A Tutorial Introduction to PVS", </title> <institution> Computer Science Laboratory, SRI International, </institution> <address> Menlo Park, Ca 94025 </address>
Reference: [DES77] <author> National Bureau of Standards (NBS). </author> <title> Data Encryption Standard. Dederal Information Processing Standard, Publication 46, NBS, </title> <address> Washington, D.C., </address> <month> January </month> <year> 1977 </year>
Reference: [DH76] <author> W. DIffie, M. Hellman, </author> <title> New Directions in Cryptography, </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> Vol. it-22, no 6, </volume> <month> Nov </month> <year> 1976, </year> <pages> pp. 644-654 </pages>
Reference: [DIFF79] <author> Diffie, W., Hellman, </author> <title> M.E. 'Privacy and Authentication: an Introduction to Cryptography' Proceedings of the IEEE, </title> <booktitle> v67 n3, </booktitle> <month> March </month> <year> 1979, </year> <pages> pp 397-427. </pages>
Reference: [DIFF88] <author> Diffie, W., </author> <title> "The First Ten Years of Public Key Cryptography", </title> <booktitle> Proceedings of The IEEE, </booktitle> <volume> Vol 76, No. 5, </volume> <month> May </month> <year> 1988, </year> <pages> pp 560-577 </pages>
Reference-contexts: Other conventions evolved with the intent of reducing confusion of pseudocodes. Alice and Bob, the "first couple of cryptography" <ref> [DIFF88] </ref>, [GORD84], also known as A and B respectively, represent the canonical communicating principals. Alice is routinely the session originator and Bob the responder to the prompt.
Reference: [DIJK76] <author> Edsger W. Dijkstra, </author> <title> "A Discipline of Programming", Prentice Hall Series in Automatic Computation, </title> <publisher> Prentice-Hall Inc. </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1976 </year>
Reference-contexts: The predicate: ((y==16) and (z==4)) also satisfies the equations. The difference is that the derived precondition (y/z==4) is more general, and in fact satisfies the precondition ((y==16) and (z==4)). Generality of preconditions was the focus of Dijkstra in <ref> [DIJK76] </ref> as we will see in the next section. 4.2 Weakest Preconditions In [DIJK76] Dijkstra describes an extension of Hoare's precondition/postcondition mechanism called the weakest precondition for a program statement or segment. <p> The difference is that the derived precondition (y/z==4) is more general, and in fact satisfies the precondition ((y==16) and (z==4)). Generality of preconditions was the focus of Dijkstra in <ref> [DIJK76] </ref> as we will see in the next section. 4.2 Weakest Preconditions In [DIJK76] Dijkstra describes an extension of Hoare's precondition/postcondition mechanism called the weakest precondition for a program statement or segment. <p> CPAL statement and operator definitions are expressed as operations on the predicate, either modifying variables within the predicate or adding conjunctions and disjunctions to the predicate. We developed the definitions for CPAL statements similarly to those of programming constructs described in <ref> [DIJK76] </ref> and [WULF81]. Chapter 4: A Formal Semantics for CPAL 71 In this section, we give the weakest precondition definition of CPAL statements. There are only twelve statement types in the CPAL language. Each statement type has a weakest precondition definition. <p> It is this definition that allows us to force sequencing upon the steps in a cryptographic protocol during analysis. The definition we use is similar to that described in <ref> [DIJK76] </ref> and [WULF81]. For statements S1 and S2 and postcondition P, in order for predicate P to be true after S1;S2; is executed, the weakest precondition of S2 for P must be true after execution of [i.e., be a post condition for] S1 for P. <p> When SEND is executed in this instance, the verification condition generator must be able to determine which queue should receive the value, since src is a variable. We handle this condition in the same way that Dijkstra <ref> [DIJK76] </ref> defines assignment to an element of an array, i.e. to mean that S will send the message to the principal whose name is aliased at the time of the send. Formally, wp ("A:=&gt;X (msg);",P (Bq.msg)) = (X!=A)-&gt;P (msg)) and (X!=B)-&gt;P (msg)) ... for all principals in the protocol. <p> Because of the similarity between cryptographic protocols and computer programs, we were lead to research surrounding developing formal methods for program verification. We were particularly interested in the precondition/postcondi-tion reasoning of C. A. R. Hoare [HOAR69] and the weakest precondition predicate transformer of Edsger Dijkstra <ref> [DIJK76] </ref>. The first task was to develop a formal language that was sufficiently simple to allow a compact formal semantics, yet expressive enough to allow specification of most cryptographic protocols. We developed the language CPAL for this purpose and wrote a supporting syntax checker.
Reference: [DOL83] <author> Dolev, D., and Yao, </author> <title> A.C. "On the security of public key protocols". </title> <journal> IEEE Trans. Inf. Theory IT-29, </journal> <volume> 2(Mar. </volume> <year> 1983), </year> <pages> pp. 198-208 </pages>
Reference: [DS81] <author> D. E. Denning and G. M. Sacco, </author> <title> "Timestamps in key distribution protocols," </title> <journal> Communications of the ACM, </journal> <volume> vol. 24, no. 8, </volume> <month> Aug </month> <year> 1981, </year> <pages> pp. 533-536 </pages>
Reference-contexts: [<A.A,A.B,A.N1&gt;]S.kas]S.kas.3,d [e [<A.A,A.B,A.N1>]S.kas]S.kas.2,S.kab B,A.N1&gt;]S.kas]S.kas.3,d [e [&lt;A.A,A.B,A.N1>]S.kas]S.kas.2,S.kab,e [<S.kab,d [e [<A.A,A. .3,d [e [&lt;A.A,A.B,A.N1&gt;]S.kas]S.kas.2,S.kab,e [<S.kab,d [e [<A.A,A.B,A.N1>]S.kas]S.kas .1&gt;]S.kbs>]S.kas]S.kas.4]S.kbs.1)) andc (A.N1 == d [e [&lt;d [e [<A.A,A.B,A.N1&gt;]S.kas]S.kas.3,d [e [<A.A,A.B,A.N1>]S.kas]S.kas.2,S.kab,e [<S c ****** Simplified predicate follows. (B.f (B.N2) == A.f (B.N2)) Chapter 6: Verifying Protocols Using the CPAL Evaluation System 103 Denning and Sacco <ref> [DS81] </ref> devised an attack on the Needham and Schroeder protocol by creating an alternative trace that satisfies the message based goal of the protocol in a way the authors had not considered. <p> In this section, we evaluate some of the variations on the Needham and Schroeder protocol using CPAL-ES. 6.3.2.1 Denning and Sacco In <ref> [DS81] </ref> the authors go beyond pointing out the problem with the Needham and Schroeder protocol; they also propose their own private key protocol. As with the Needham and Schroeder protocol, their protocol begins with the first message going to the authentication server. <p> Current verification methods center on detecting known types of spoofs, such as the classic replay attack given by Denning and Sacco in <ref> [DS81] </ref>. The idea of a replay attack is to record a valid protocol session in order to use one or more messages or message components in a later session. <p> d [msg3]kas; A: (N'a,B,kab,ticket) := temp2; A: assert (N'a==Na); A: =&gt;B (ticket); B: &lt;-(ticket); B: (kab,A) := d [ticket]kbs; B: =&gt;A (e [Nb]kab); A: Nb := d [msg4]kab; B: &lt;-(msg5); B: assert (N'b == f (Nb)); Appendix C: Cryptographic Protocols Expressed in CPAL 173 DENNING & SACCO PRIVATE KEY PROTOCOL <ref> [DS81] </ref> S: =&gt;A (S.kas); S: =&gt;B (S.kbs); A: =&gt;S (&lt;A,B>); S: (A,B) := msg; S: T1 := new; A: &lt;-(Msg1); A: (dst,kab,T1,Ticket) := tmp; A: assert (dst == B); --A: assert (sent (S,kab)); A: =&gt;B (Ticket); B: &lt;-(Ticket); B: tmp1 := d [Ticket]kbs; B: (T1,kab,A) := tmp1; B: gassert (B.T1 ==
Reference: [ELGAM88] <author> T. ElGamal, </author> <title> "A Public Key Cryptosystem and a Signature Scheme Based on Discrete Logarithms", </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-31 </volume> (4):469-472 
Reference: [GLAS88] <author> Janice I. Glasgow and Glenn H. MacEwen, </author> <title> "Reasoning About Knowledge in Multilevel secure Distributed Systems", </title> <booktitle> in Proceedings of the 1988 IEEE Sypo-sium on Security and Privacy, </booktitle> <address> Washington (IEEE), </address> <year> 1988, </year> <pages> pp. 122-128 </pages>
Reference: [GMW86] <author> O. Goldreich, S. Micali, and A. Wigderson, </author> <title> "Proofs That Yield Nothing but Their Validity and a Methodology of Cryptographic Protocol Design", </title> <booktitle> Proceed Bibliography 188 ings of the 27th IEEE Symposium on foundations of Computer Science, </booktitle> <year> 1986, </year> <pages> pp. 174-187 </pages>
Reference: [GNY90] <author> Gong, L., Needham, R., and Yahalom, R. </author> <title> "Reasoning about Belief in Cryptographic protocols". </title> <booktitle> From 1990 IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <pages> pp. 234-248 </pages>
Reference-contexts: GNY. In their logic (called GNY) <ref> [GNY90] </ref>, Gong, Needham and Yahalom extended and Chapter 2: Previous Research Regarding Cryptographic Protocol Verification 44 enhanced BAN Logic.
Reference: [GOLD85] <author> Shafi Goldwasser, Silvio Micali, and Charles Rackoff, </author> <title> "The Knowledge Complexity of Interactive Proof Systems," </title> <booktitle> Proc. 27th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1985, </year> <pages> pp. 291-304 </pages>
Reference: [GOLD89] <author> Goldwasser, Shafi, Micali, Silvio, and Rackoff, Charles, </author> <title> "The Knowledge Complexity of Interactive Proof Systems," </title> <journal> Siam Jrnl of Comp, </journal> <volume> Vol 18, No 1, </volume> <month> Feb </month> <year> 1989, </year> <pages> pp. 186-208. </pages>
Reference: [GONG93] <author> Li Gong, </author> <title> "Increasing Availability and Security of an Authentication Service", </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol 5, No. 11, </volume> <month> 5 June </month> <year> 1993, </year> <month> pp657-662 </month>
Reference: [GOOD78] <author> D I. Good et. al. </author> <title> Report on the language Gypsy - version 2.0, </title> <institution> Univ. of Texas at Austin, Certifiable Minicomputer Project, Report ICSCA-CMP-10, </institution> <year> 1978 </year>
Reference: [GORD84] <editor> J. Gordon, </editor> <booktitle> speech at the Zurich Seminar, </booktitle> <year> 1984. </year> <note> In this lecture, which has unfortunately never been published [but was reported by Whitfield Diffie], Gordon assembled the facts of Alice and Bob's precarious lives, which had previously been available only as scattered references in the literature. </note>
Reference-contexts: Other conventions evolved with the intent of reducing confusion of pseudocodes. Alice and Bob, the "first couple of cryptography" [DIFF88], <ref> [GORD84] </ref>, also known as A and B respectively, represent the canonical communicating principals. Alice is routinely the session originator and Bob the responder to the prompt. When a centralized authentication server is utilized in a protocol, it is routinely named AS or S, though occasionally KDC (for key distribution center).
Reference: [GS91] <author> Klaus Gaarder and Einar Snekkenes, </author> <title> "Applying a Formal Analysis Technique to the CCITT X.509 Strong Two-Way Authentication Protocol", </title> <journal> Journal Of Cryptology, </journal> <volume> 3 </volume> <pages> 81-98, </pages> <year> 1991. </year>
Reference-contexts: TRUE The CCITT protocol [CCITT], [BAN89], <ref> [GS91] </ref> exercises CPAL-ES against another mix of cryptographic techniques used to establish a secure communication ses Chapter 6: Verifying Protocols Using the CPAL Evaluation System 126 sion. Timestamps are used to ensure message freshness and nonces to connect messages in the session.
Reference: [GUMB82] <author> Raymond D. Gumb, </author> <title> "On the Underlying Logics of Specification Languages", </title> <booktitle> ACM Sigsoft, Software Engineering Notes, </booktitle> <volume> Vol 7, No 4, Oct 82, </volume> <pages> pp 21-23 </pages>
Reference: [HAL88] <author> Halpern, J.Y., and Moses, Y.O. </author> <title> "A Knowledge-based analysis of zero knowledge" (preliminary report). </title> <booktitle> In Proceedings of the 20th ACM symposium on Theory of Computing (CHicago, </booktitle> <address> Ill, </address> <month> May </month> <year> 1988), </year> <booktitle> ACM, </booktitle> <address> New York, </address> <year> 1988, </year> <pages> pp. 132-147 </pages>
Reference: [HOAR69] <author> C.A.R. Hoare, </author> <title> "An Axiomatic Basis for Computer Programming", </title> <journal> Communications of the ACM, </journal> <volume> Vol 12, Number 10, </volume> <month> Oct </month> <year> 1969 </year>
Reference-contexts: To achieve the necessary level of formality, we selected a classic approach to program verification based on work by C.A.R. Hoare <ref> [HOAR69] </ref>. In this paper Hoare describes precondition/postcondition reasoning about programs and/or program segments. <p> Because of the similarity between cryptographic protocols and computer programs, we were lead to research surrounding developing formal methods for program verification. We were particularly interested in the precondition/postcondi-tion reasoning of C. A. R. Hoare <ref> [HOAR69] </ref> and the weakest precondition predicate transformer of Edsger Dijkstra [DIJK76]. The first task was to develop a formal language that was sufficiently simple to allow a compact formal semantics, yet expressive enough to allow specification of most cryptographic protocols.
Reference: [HOAR73] <author> Hoare, C. A. R., and N. Wirth: </author> <title> "An Axiomatic Definition of the Programming Language Pascal," </title> <journal> Acta Informatica, </journal> <volume> 2, </volume> <year> 1973 </year>
Reference: [HOAR78] <author> C. A. R. Hoare, </author> <title> "Communicating Sequential Processes", </title> <journal> Communications of the ACM, </journal> <volume> Vol 21, Number 8, </volume> <month> Aug </month> <year> 1978, </year> <pages> pp 666-677 </pages>
Reference: [HOAR85] <author> C. A. R. Hoare, </author> <title> "Communicating Sequential Processes", </title> <publisher> Prentice Hall, </publisher> <address> 1985 Bibliography 189 </address>
Reference: [KAHN67] <author> D. Kahn, </author> <title> "The Codebreakers, The Story of Secret Writing", </title> <address> New York: Mac-Millan, </address> <year> 1967 </year>
Reference: [KEM89] <author> R. A. Kemmerer, </author> <title> "Using Formal Methods to Analyze Encryption Protocols," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 7, mo. 4, </volume> <pages> pp. 448-457, </pages> <month> May </month> <year> 1989 </year>
Reference-contexts: In [AN94] Abadi and Needham give principles for improving security of cryptographic protocols. In that paper, they recommend including information within each message that identifies the intended message round and protocol session. 2.2 - Use of specification and verification tools developed for software evaluation. In <ref> [KEM89] </ref> Kemmerer describes a mechanism for cryptographic verification based on specification and verification tools developed for software evaluation. The idea of Kemmerer's approach is to formally specify the components of the cryptographic network and the associated cryptographic protocol actions. <p> The system does not search through scenarios to find vulnerabilities, but rather leaves selection of a scenario up to the protocol specifier. Kemmerer's system then tests the formal specification of the scenario against attack. If the analyst does not test the appropriate scenario, no aws will be revealed. In <ref> [KEM89] </ref>, Kemmerer showed how his method was used to reveal a previously known aw in a protocol, though the method has not successfully detected a previously unknown aw in a protocol. 2.3 Testing tools based on expert systems which evaluate different scenarios.
Reference: [KG91] <author> Rajashekar Kailar and Virgil D. Gligor. </author> <title> "On Belief Evolution n Authentication Protocols", </title> <booktitle> In Proceedings og the Computer Security Foundations Workshop IV, </booktitle> <pages> pp. 103-116, </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> Ca. </address> <year> 1991 </year>
Reference-contexts: The public key belief of GNY reects the same understanding of the public key as with BAN Logic. 2.1.3.3. Kailar and Gligor Another example of a logic that attempts to deal with the step sequencing problem of logical evaluation of cryptographic protocols is given by Kailar and Gligor <ref> [KG91] </ref>. Chapter 2: Previous Research Regarding Cryptographic Protocol Verification 45 The system they call Ordered Knowledge Sets is an extension to BAN Logic.
Reference: [KMM93] <author> R. Kemmerer, C. Meadows, and J. Millen, </author> <title> "Three Systems for Cryptographic Protocol Analysis", </title> <note> To appear in The Journal of Cryptography </note>
Reference-contexts: To begin the test, the user submits the formal specification to the Ina Jo testing tool Inatest, which allows the user to interactively monitor and control the test. A sample of the Inatest commands taken from <ref> [KMM93] </ref> is given in Figure 2.3. FDM employs an inductive approach to generate the necessary proof obligations to assure that the critical requirements are preserved. <p> That is, the initial state is the basis case and the induction is on the transforms. Kemmerer utilizes his system to analyze a protocol given by Tatebayeshi, Mat-suzaki, and Newman [TMN91] in <ref> [KMM93] </ref>. <p> TRUE In [SIMM85], Simmons reports that there are aws in the TMN protocol. In <ref> [KMM93] </ref> Kemmerer, Meadows, and Millen illustrate their respective cryptographic protocol analysis tools by demonstrating how their respective methods would detect one of the aws that Simmons already discovered. We give one attack on the TMN protocol in intruder has of the important data. <p> We then reviewed the literature regarding cryptographic protocols, gave and dissected the classic replay aw detected in the Needham and Schroeder Private Key Protocol [NS78], and reviewed the current research in cryptographic protocol verification. We discussed the differences in the methods of Kemmerer, Meadows, and Millen <ref> [KMM93] </ref> and reviewed a number of different logics developed to pinpoint weakness in protocols. Chapter 8: Summary 162 As the focus of the dissertation, we describe CPAL-ES as a new tool for analyzing cryptographic protocols based on previous research regarding formal methods of computer program verification.
Reference: [LAMP91] <author> B. Lampson, M. Abadi, M. Burrows, and E. Wobber, </author> <title> "Authentication in Distributed Systems: </title> <journal> Theory and Practice", ASM OS Review, </journal> <volume> Vol 25, No. 5, </volume> <booktitle> Special Issue, Proceedings of the 13th Symposium on Operating System Principles, </booktitle> <month> 13-16 Oct </month> <year> 1991, </year> <pages> pp 165-182 </pages>
Reference: [LGS89] <author> Mark Lomas, Li Gong, Jerome H. Saltzer, Roger Needham, </author> <title> "Reducing Risks from Poorly Chosen Keys", Operating Systems Review, </title> <booktitle> 12th ACM Symposium on Operating Sstems Principles, </booktitle> <volume> Vol 23, Number 5, </volume> <month> 3-6 Dec </month> <year> 1989, </year> <pages> p 14-18 </pages>
Reference: [MB93] <author> Wenbo Mao and Colin Boyd, </author> <title> "Towards a Formal Analysis of Security Protocols", </title> <booktitle> In Proceedings of the Computer Security Foundations Workshop VI, </booktitle> <pages> pp 147-158, </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> California, </address> <year> 1993 </year>
Reference: [MCF87] <author> Millen, J.K., Clark, S. C., and Freedman, S. B. </author> <title> "The interrogator: Protocol security analysis". </title> <journal> IEEE Trans. Sofw. eng. </journal> <volume> SE-13, 2(Feb. </volume> <year> 1987), </year> <pages> pp. 274-288 </pages>
Reference-contexts: Tatebayashi, Matsuzaki, and Newman Protocol in SN and Ina Jo SN Ina Jo Transform Declaration A-&gt;S: (A,B,e-ka-pks) Request_Key (A,B:User, ka:Key) S-&gt;B: (A) Process_Request (A,S:User, A:Text) B-&gt;S: (e-kab-pks) Respond_To_Server (A,B:User,kab:Key) S-&gt;A: (e-kab-ka) Return_Key (A,S:User, C:Text) A-&gt;B: (e-important_data-kab); Get_Key (A,B:User,important_data:Text) Chapter 2: Previous Research Regarding Cryptographic Protocol Verification 49 In <ref> [MCF87] </ref> Millen, Clark and Freedman offer a testing tool designed to be used for verification of the subset of cryptographic protocols called Key Distribution Protocols. Their tool is called Interrogator. Interrogator is a series of Prolog programs which take a black box view of the Key Distribution System. <p> It may also be useful to provide an interface from this tool to other existing tools for protocol evaluation. Potentially, this tool could one day be part of a protocol evaluation workbench which includes our specification/verification system, a testing system (such as Interrogator <ref> [MCF87] </ref>), a BAN implementation (such as [CHEN90]), etc. Another sub-component of such a system would be a language translator to take a protocol specified in CPAL and convert it to the language used by Interrogator to provide a fully integrated environment.
Reference: [MEAD89] <author> Meadows, C., </author> <title> "Using Narrowing in the Analysis of Key Management Protocols". </title> <booktitle> From 1989 IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <pages> pp. 138-147. </pages>
Reference: [MEAD91] <author> Meadows, C., </author> <title> "A System for the Specification and Analysis of Key Management Protocols". </title> <booktitle> From 1991 IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <pages> pp. 182-195. </pages>
Reference-contexts: The system is also limited by its selection of only key distribution protocols for evaluation. 2.4 Term rewriting systems The NRL Protocol Analyzer <ref> [MEAD91] </ref> is an interactive Prolog program which was successfully used to identify aws in existing protocols [MEAD92]. The tool is based on the algebraic term-rewriting method proposed by Dolev and Yao [DY83]. The NRL Protocol Analyzer makes use of protocol specifications as communicating state machines.
Reference: [MEAD92] <author> Meadows, C., </author> <title> "Applying Formal Methods to the Analysis of Key Management Protocols", </title> <journal> Journal of Computer Security, </journal> <volume> Vol. 1, No. 1, </volume> <year> 1992 </year>
Reference-contexts: The system is also limited by its selection of only key distribution protocols for evaluation. 2.4 Term rewriting systems The NRL Protocol Analyzer [MEAD91] is an interactive Prolog program which was successfully used to identify aws in existing protocols <ref> [MEAD92] </ref>. The tool is based on the algebraic term-rewriting method proposed by Dolev and Yao [DY83]. The NRL Protocol Analyzer makes use of protocol specifications as communicating state machines. Analysis is performed by showing that undesirable states are unreachable.
Reference: [MER78] <author> Merkle, R. C., </author> <title> 'Secure Communications over Insecure Channels', </title> <journal> Communications of the ACM, v21 n4, </journal> <month> April </month> <year> 1978, </year> <pages> pp 294-300. </pages>
Reference: [MNSS87] <author> Miller,S.P., Neuman, C., Schiller, J.I., and Saltzer, J.H., </author> <title> Kerberos Authentication and Authorization System. In Project Athena Technical Plan, </title> <publisher> MIT, </publisher> <address> Cam-bridge, Mass., </address> <month> July </month> <year> 1987 </year>
Reference-contexts: Once again, it is fair to assume this equivalence and the protocol meets its stated goals. 6.3 Evaluating the Classic Protocols 6.3.1. The Needham and Schroeder private key protocol, given above in Figure 1, is often referenced in literature and is the foundation for the Kerberos <ref> [MNSS87] </ref> authentication system. The Needham and Schroeder Private Key Protocol is a three party protocol, that attempts two-way authentication. A significant contribution when it was introduced, it is now famous primarily for the potential aw that it contains. <p> TRUE 6.3.2.4 Kerberos The Kerberos Authentication System <ref> [MNSS87] </ref> is a broadly implemented appli cation using a variation of the Needham and Schroeder Private Key Protocol as its primary authentication protocol. The CPAL-ES evaluation of the Kerberos protocol is given in fig ure 6.10.
Reference: [MOORE88] <author> Judy H. Moore, </author> <title> "Protocol Failures in Cryptosystems", </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> Vol. 76, No. 5, </volume> <month> May </month> <year> 1988 </year> <month> Bibliography 190 </month>
Reference-contexts: The significance of the problem of dynamic evaluation of cryptographic protocols is emphasized in research into the nature of attacks on cryptographic protocols such as in [AN94], [BIRD92], [BIRD93], <ref> [MOORE88] </ref>, [SYV93a], [SYV93b]. By detailing the simple attack given above and other various attacks, these works highlight the variety and subtle nature of active attacks.
Reference: [MOS89] <author> L. Moser, </author> <title> "A Logic of Knowledge and Belief for Reasoning about Computer Security" in Proceedings of the Computer Security Foundations Workshop II, </title> <publisher> Washington (IEEE), </publisher> <year> 1989, </year> <pages> pp. 57-63 </pages>
Reference: [NEED78] <author> Needham, R. M., and Schroeder, M. D. </author> <title> "Using encryption for authentication in large networks of computers". </title> <journal> Commun. ACM 21, </journal> <month> 12 (Dec. </month> <year> 1978), </year> <pages> pp. 993-999 </pages>
Reference-contexts: Simplified predicate follows. *** TRUE Chapter 6: Verifying Protocols Using the CPAL Evaluation System 129 6.6 Other protocols In [SNEK92], Snekkenes gives a straitforward variation on the Needham and Schroeder Private Key Protocol <ref> [NEED78] </ref> that he calls KP. KP is not vulnerable to replay attack due to the nonce in each transmission. As the CPAL-ES evaluation in Figure 6.20 shows, the nonces transfer as desired. Nonetheless, the protocol is vulnerable to attack, as we see in the Figure 6.21. <p> ; gid: ID '.' ID; gparameters: | '(' gparms ')'; gparms : gparm | gparms ',' gparm; gparm : gcond; oper : AND | OR neg : NOT ; comp : EQ | NE | GT; 172 Appendix C Cryptographic Protocols Expressed in CPAL Needham and Schroeder Private Key Protocol <ref> [NEED78] </ref> S: =&gt;A (S.kas); S: =&gt;B (S.kbs); A: =&gt;S (e [&lt;A,B,Na>]kas); S: (A,B,Na) := d [msg]kas; A: &lt;-(msg3); A: temp2 := d [msg3]kas; A: (N'a,B,kab,ticket) := temp2; A: assert (N'a==Na); A: =&gt;B (ticket); B: &lt;-(ticket); B: (kab,A) := d [ticket]kbs; B: =&gt;A (e [Nb]kab); A: Nb := d [msg4]kab; B: &lt;-(msg5);
Reference: [NEED87] <author> Needham, R.M. & Schroeder, </author> <title> M.D., "Authentication Revisited", </title> <journal> ACM Operating Systems Review, </journal> <volume> Vol. 21, No. 1, </volume> <month> January </month> <year> 1987. </year>
Reference: [NESS87] <author> D. M. Nessett, </author> <title> "Factors Affecting Distributed System Security", </title> <journal> IEEE Trans On SWE, </journal> <volume> Vol. SE-13, No 2, </volume> <month> Feb </month> <year> 1987, </year> <pages> pp. 204-222 </pages>
Reference: [NESS89] <author> D. M. Nessett, </author> <title> "Layering Central Authentication on Existing Distributed System Terminal Services", </title> <booktitle> From 1989 IEEE Computer Society Symposium on Security and Privacy, </booktitle> <pages> pp. 290-299. </pages>
Reference: [NESS90] <author> D. Nessett, </author> <title> "A Critique of the Burrows, Abadi, and Needham Logic", </title> <journal> ACM Operating Systems Review, </journal> <volume> vol. 24, no. 2, </volume> <month> April </month> <year> 1990, </year> <pages> pp. 35-38 </pages>
Reference-contexts: The characteristic of BAN Logic that Nessett identified in his criticism in <ref> [NESS90] </ref> was that BAN Logic provides only a static evaluation of any protocol.
Reference: [NS93] <author> B. Clifford Neuman and StuartG. Stubblebine. </author> <title> A Note on the Use of Timestamps as Nonces. </title> <journal> Operating Systems Review, </journal> <volume> 27(2) </volume> <pages> 10-14, </pages> <month> April </month> <year> 1993 </year>
Reference-contexts: TRUE Chapter 6: Verifying Protocols Using the CPAL Evaluation System 136 We present the Neuman and Stubblebine protocol from <ref> [NS93] </ref> in Figure 6.25 and its attack formulated by Syverson in [SYV93b] in Figure 6.26. The protocol is a symmetric key protocol that utilizes nonces to ensure message freshness.
Reference: [OSR93a] <author> S. Owre, N. Shankar, and J. M. Rushby. </author> <title> "The PVS Specification Language (Draft). </title> <institution> Computer Science Laboratory, SRI International, </institution> <address> Menlo Park, CA, </address> <month> Febru-ary </month> <year> 1993 </year>
Reference-contexts: Standard proof techniques can be applied to prove the verification condition in this form. Secondly, because of its ability to reect assumptions and goals as arbitrary predicates, CPAL-ES may be used with automated theorem proving systems. The Boyer-Moore Theorem Prover [BM79], [BM88] and the Prototype Verification System <ref> [OSR93a] </ref>, [OSR93b-, [SOR93a], [SOR93b] are two operating theorem proving systems. <p> The power and effectiveness of the Boyer/Moore Theorem Prover notwithstanding, we chose to utilize a simpler proof system, developed by Owre, Shankar, and Rushby <ref> [OSR93a] </ref>, [OSR93b] to prove final verification conditions produced by CPAL-ES. The proof system the authors call The Prototype Verification System or PVS, mechanizes proof steps such as the application of a rule of inference. <p> In PVS, the proof is completed by an analyst interacting with the system to derive a set of steps that prove the theorem or theorems that represent the protocol goals. The Chapter 7: CPAL-ES and BAN Logic 153 PVS commands to accomplish these proofs are documented in <ref> [OSR93a] </ref>, [OSR93b], [SOR93b] and illustrated in [SOR93a], and [CORSS95]. The technique required for the two proofs we accomplished involves simple deductive reasoning.
Reference: [OSR93b] <author> S. Owre, N. Shankar, and J. M. Rushby. </author> <title> "User Guide for the PVS Specification and Verification System (Draft). </title> <institution> Computer Science Laboratory, SRI International, </institution> <address> Menlo Park, CA, March 1, </address> <year> 1993 </year>
Reference-contexts: The power and effectiveness of the Boyer/Moore Theorem Prover notwithstanding, we chose to utilize a simpler proof system, developed by Owre, Shankar, and Rushby [OSR93a], <ref> [OSR93b] </ref> to prove final verification conditions produced by CPAL-ES. The proof system the authors call The Prototype Verification System or PVS, mechanizes proof steps such as the application of a rule of inference. <p> In PVS, the proof is completed by an analyst interacting with the system to derive a set of steps that prove the theorem or theorems that represent the protocol goals. The Chapter 7: CPAL-ES and BAN Logic 153 PVS commands to accomplish these proofs are documented in [OSR93a], <ref> [OSR93b] </ref>, [SOR93b] and illustrated in [SOR93a], and [CORSS95]. The technique required for the two proofs we accomplished involves simple deductive reasoning. Utilizing the conjecture statement in the proof file, PVS automatically produces a sub-goal to be proven, in our case, representing the message-based and BAN Logic goals for the protocol.
Reference: [OTWY87] <author> Otwy, D., and Rees, O. </author> <title> "Efficient and timely mutual authentication". </title> <booktitle> Operating Systems Review 21, </booktitle> <address> 1(Jan. </address> <year> 1987), </year> <pages> pp. 8-10 </pages>
Reference-contexts: A: =&gt;B (Ticket); B: &lt;-(Ticket); B: tmp1 := d [Ticket]kbs; B: (T1,kab,A) := tmp1; B: gassert (B.T1 == S.T1); B: =&gt;A (e [N1]kab); A: N1 := d [Msg2]kab; B: &lt;-(Msg3); B: assert (N1' == f (N1)); Appendix C: Cryptographic Protocols Expressed in CPAL 174 OTWAY AND REES PRIVATE KEY PROTOCOL <ref> [OTWY87] </ref> S: =&gt;A (S.kas); S: =&gt;B (S.kbs); A: =&gt;B (&lt;C,A,B,e [<Na,C,A,B>]kas>); B: (C,src,dst,Ticket1) := msg1; B: Ticket2 := e [&lt;Nb,C,A,B&gt;]kbs; B: =&gt;S (&lt;C,src,dst,Ticket1,Ticket2&gt;); S: &lt;-(msg2); S: (C,src,dst,Ticket1,Ticket2) := msg2; S: (Na,Ca,srca,dstA) := d [Ticket1]kas; S: assert (C == Ca); S: (Nb,Cb,srcb,dstB) := d [Ticket2]kbs; S: assert (C == Cb); S: passa
Reference: [RANG88] <author> P. Venkat Rangan, </author> <title> "An Axiomatic Basis for Trust in Distributed Systems", </title> <booktitle> in Proceedings of the 1988 IEEE Symposium on Security and Privacy, </booktitle> <pages> pp. 204-211, </pages> <publisher> IEEE Computer Society Press, </publisher> <address> Washington, DC, </address> <year> 1988 </year>
Reference: [RSA78] <author> R. L. Rivest, A. Shamir, and L. Adleman, </author> " <title> A Method for Obtaining Digital Signatttures and Public-key Cryptosystems", </title> <journal> Communications of the ACM, </journal> <volume> 21, 2, </volume> <month> Feb </month> <year> 1978, </year> <pages> 120-126 </pages>
Reference: [SIMM85] <author> Simmons, G.J., </author> <title> "How to (Selectively) Broadcast a Secret," </title> <booktitle> in Proceedings of the 1985 IEEE Symposium on Security and Privacy, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1985, </year> <pages> pp. 108-113 </pages>
Reference-contexts: TRUE In <ref> [SIMM85] </ref>, Simmons reports that there are aws in the TMN protocol. In [KMM93] Kemmerer, Meadows, and Millen illustrate their respective cryptographic protocol analysis tools by demonstrating how their respective methods would detect one of the aws that Simmons already discovered.
Reference: [SNEK91] <author> Snekkenes, E., </author> <title> "Exploring the BAN Approach to Protocol Analysis". </title> <booktitle> From 1991 IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <pages> pp. 171-181. Bibliography 191 </pages>
Reference-contexts: One method of dealing with sequencing is to use time to distinguish which message did, or should have, occurred first. These issues lead to development of temporally enhanced logical systems containing operators to deal with freshness and with the sequencing problems of BAN Logic identified by Snekkenes <ref> [SNEK91] </ref>. The methods described below are examples of these logical systems. 2.1.3.1 A Logic of Knowledge and Time In [BIEB90], Bieber describes his Logic of Knowledge, Time and Communication, CKT5. <p> The WP definition of statement catenation allows CPAL-ES to force sequencing on the steps in each protocol, resolving the step permutation problem of BAN Logic <ref> [SNEK91] </ref>. Moreover, CPAL-ES does not attempt to replace BAN Logic, but complements BAN Logic by analyzing protocols using BAN Logic constructs Chapter 8: Summary 164 and rules of inference. CPAL-ES provides a formal definition for any combination of protocol steps.
Reference: [SNEK92] <author> Einar Snekkenes, </author> <title> "Roles in Cryptographic Protocols", </title> <booktitle> Proceedings of the IEEE Symposium on Research in Security and Privacy, </booktitle> <address> Oakland, </address> <year> 1992, </year> <pages> pp 105-118 </pages>
Reference-contexts: Simplified predicate follows. *** TRUE Chapter 6: Verifying Protocols Using the CPAL Evaluation System 129 6.6 Other protocols In <ref> [SNEK92] </ref>, Snekkenes gives a straitforward variation on the Needham and Schroeder Private Key Protocol [NEED78] that he calls KP. KP is not vulnerable to replay attack due to the nonce in each transmission. As the CPAL-ES evaluation in Figure 6.20 shows, the nonces transfer as desired. <p> (("1" (FLATTEN) (("1" (PROPAX) NIL))) ("2" (LEMMA "freshness1" ("P" "A_A" "X" "A_Na" "Y" "S_kab")) (("2" (SPLIT -1) (("1" (PROPAX) NIL) ("2" (PROPAX) NIL))))))))))))) ("3" (PROPAX) NIL))))))))) ("3" (POSTPONE) NIL))))) ("2" (POSTPONE) NIL)))))))))))) Chapter 7: CPAL-ES and BAN Logic 156 For emphasis and illustration we also evaluated Snekkenes KP protocol from <ref> [SNEK92] </ref> using CPAL-ES, BAN Logic and PVS. The CPAL-ES evaluation of the KP protocol without BAN Logic constructs was given in Figure 6.19.
Reference: [SOR93a] <author> S. Owre, N. Shankar, and J. M. Rushby. </author> <title> "PVS Tutorial. </title> <institution> Computer Science Laboratory, SRI International, </institution> <address> Menlo Park, CA, </address> <month> February </month> <year> 1993 </year>
Reference-contexts: Standard proof techniques can be applied to prove the verification condition in this form. Secondly, because of its ability to reect assumptions and goals as arbitrary predicates, CPAL-ES may be used with automated theorem proving systems. The Boyer-Moore Theorem Prover [BM79], [BM88] and the Prototype Verification System [OSR93a], [OSR93b-, <ref> [SOR93a] </ref>, [SOR93b] are two operating theorem proving systems. <p> The Chapter 7: CPAL-ES and BAN Logic 153 PVS commands to accomplish these proofs are documented in [OSR93a], [OSR93b], [SOR93b] and illustrated in <ref> [SOR93a] </ref>, and [CORSS95]. The technique required for the two proofs we accomplished involves simple deductive reasoning. Utilizing the conjecture statement in the proof file, PVS automatically produces a sub-goal to be proven, in our case, representing the message-based and BAN Logic goals for the protocol.
Reference: [SOR93b] <author> S. Owre, N. Shankar, and J. M. Rushby. </author> <title> "The PVS Proof Checker: A Reference Manual". </title> <institution> Computer Science Laboratory, SRI International, </institution> <address> Menlo Park, CA, March 1, </address> <year> 1993 </year>
Reference-contexts: Secondly, because of its ability to reect assumptions and goals as arbitrary predicates, CPAL-ES may be used with automated theorem proving systems. The Boyer-Moore Theorem Prover [BM79], [BM88] and the Prototype Verification System [OSR93a], [OSR93b-, [SOR93a], <ref> [SOR93b] </ref> are two operating theorem proving systems. <p> In PVS, the proof is completed by an analyst interacting with the system to derive a set of steps that prove the theorem or theorems that represent the protocol goals. The Chapter 7: CPAL-ES and BAN Logic 153 PVS commands to accomplish these proofs are documented in [OSR93a], [OSR93b], <ref> [SOR93b] </ref> and illustrated in [SOR93a], and [CORSS95]. The technique required for the two proofs we accomplished involves simple deductive reasoning. Utilizing the conjecture statement in the proof file, PVS automatically produces a sub-goal to be proven, in our case, representing the message-based and BAN Logic goals for the protocol.
Reference: [SYV90] <author> P. Syverson, </author> <title> "A Logic for Cryptographic Protocol Analysis", </title> <type> NRL Formal Report 9305, </type> <month> December </month> <year> 1990 </year>
Reference: [SYV91] <author> Syverson, P., </author> <title> "The Use of Logic in the Analysis of Cryptographic Protocols", </title> <booktitle> From 1991 IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <pages> 156-170 </pages>
Reference-contexts: However, once evidence is provided indicting the falsity of p, p becomes false in the formula and cannot be "reconfirmed" as true. Propositions are considered to be universally true or false. If p is false, it will never become true and vice versa. In <ref> [SYV91] </ref> Syverson argues that the non-monotonic features of reasoning about cryptographic protocols should be accomplished outside the logical system because of the "tremendous increase in difficulty of reasoning..." that are required to incorporate these features into the logic.
Reference: [SYV92] <author> Syverson, P., </author> <title> "Knowledge, Belief, and Semantics in the Analysis of Cryptographic Protocols", </title> <booktitle> Journal of Computer Security 1 (1992), </booktitle> <pages> pp 317-334 </pages>
Reference: [SYV93a] <author> Syverson, P., </author> <title> "Adding Time to a Logic of Authentication", </title> <booktitle> in Proceedings of the First ACM Conference on Computer and Communications Security (Fairfax VA, </booktitle> <month> Nov 3-5). </month>
Reference-contexts: The significance of the problem of dynamic evaluation of cryptographic protocols is emphasized in research into the nature of attacks on cryptographic protocols such as in [AN94], [BIRD92], [BIRD93], [MOORE88], <ref> [SYV93a] </ref>, [SYV93b]. By detailing the simple attack given above and other various attacks, these works highlight the variety and subtle nature of active attacks. <p> Once again, by assuming the equivalence of the principals private keys with the authentication server, the protocol meets its goals of nonce equivalence. Syverson gives a two way authentication protocol (Figure 6.23) and an attack on the protocol (Figure 6.24) in <ref> [SYV93a] </ref>.
Reference: [SYV93b] <author> Syverson, P., </author> <title> "On Key Distribution Protocols for Repeated Authentication" ACM Operating Systems Review vol 27, </title> <type> no 4, </type> <month> October </month> <year> 1993, </year> <pages> pp. 24-30. </pages>
Reference-contexts: The significance of the problem of dynamic evaluation of cryptographic protocols is emphasized in research into the nature of attacks on cryptographic protocols such as in [AN94], [BIRD92], [BIRD93], [MOORE88], [SYV93a], <ref> [SYV93b] </ref>. By detailing the simple attack given above and other various attacks, these works highlight the variety and subtle nature of active attacks. Bird, Gopal, et al. and Abadi and Needham extend this research to offer guidelines for creating protocols which are not vulnerable to several of the known attacks. <p> TRUE Chapter 6: Verifying Protocols Using the CPAL Evaluation System 136 We present the Neuman and Stubblebine protocol from [NS93] in Figure 6.25 and its attack formulated by Syverson in <ref> [SYV93b] </ref> in Figure 6.26. The protocol is a symmetric key protocol that utilizes nonces to ensure message freshness. The protocol is structured so that several message components are forwarded between participants, complicating the protocol and making the tracking of the components more difficult.
Reference: [SYVOOR94] <author> Syverson, P., and van Oorschot, </author> <title> P.C., "On Unifying Some Cryptographic Protocol Logics", </title> <booktitle> in Proceedings of the 1994 IEEE Computer Societ Symposium on Research in Security and Privacy, </booktitle> <address> May 16-18, 1994 Oakland, California </address>
Reference: [TMN91] <author> Tatebayashi, M., N. Mattsuzaki, D. B. Newman, </author> <title> "Key Distribution Protocol for Digital Mobile Communication Systems," </title> <booktitle> in Advances in Cryptology - CRYPTO 89, </booktitle> <volume> LNCS 435, </volume> <editor> G. Brassard, ed. </editor> <publisher> Springer-Verlag, </publisher> <year> 1991, </year> <pages> pp. 324-333 </pages>
Reference-contexts: That is, the initial state is the basis case and the induction is on the transforms. Kemmerer utilizes his system to analyze a protocol given by Tatebayeshi, Mat-suzaki, and Newman <ref> [TMN91] </ref> in [KMM93]. <p> The resulting predicate illuminates the additional relationships that must hold in order for the protocol to work as desired. By adding the ASSUME statements: S: assume (global.decrypt (B.kb-,S.kb+)); S: assume (global.decrypt (A.ka-,S.ka+)); the verification condition simplifies to TRUE. The Tatebashi, Matsuzaki, and Newman (TMN) protocol <ref> [TMN91] </ref> is another cryptographic protocol that utilizes asymmetric key cryptography. It is particularly interesting because it uses a combination of symmetric and asymmetric key methods in order to pass a key to be used in a symmetric key secure communication session.
Reference: [vO93] <author> Paul C. van Oorschot, </author> <title> "Extending Cryptographic Logics of Belief to Key Agreement Protocols (Extended Abstract), </title> <booktitle> In Proceedings of the First ACM Conference on Computer and Communications Security, </booktitle> <pages> pp 232-243, </pages> <month> Nov </month> <year> 1993 </year>
Reference: [VOY83] <author> Voydoc, V.L., Kent, S.T., </author> <title> 'Security Mechanisms in High-Level Protocols', </title> <journal> Computing Surveys, v15 n2, </journal> <month> June </month> <year> 1983. </year>
Reference: [WL92] <author> T.Y.C. Woo and S.S. Lam. </author> <title> Authentication for Distributed Systems. </title> <journal> Computer Vol. </journal> <volume> 25, No. 1, </volume> <month> January </month> <year> 1992, </year> <pages> pp. 39-52 </pages>
Reference-contexts: We consider active attacks on cryptographic protocols in Section 6.4. 6.2.2 Woo and Lam In <ref> [WL92] </ref>, Woo and Lam offer a two-way authentication protocol similar to the ISO Protocol. The Woo and Lam protocol is a three party protocol that requires five transmissions to complete the authentication. No private key is assumed to be preexisting between the principals.
Reference: [WULF81] <author> Wm. A. Wulf, Mary Shaw, Paul N. Hilfinger, and Lawrence Flon, </author> <title> "Fundamental Structures of Computer Science" Addison-Wesley, </title> <year> 1981 </year>
Reference-contexts: CPAL statement and operator definitions are expressed as operations on the predicate, either modifying variables within the predicate or adding conjunctions and disjunctions to the predicate. We developed the definitions for CPAL statements similarly to those of programming constructs described in [DIJK76] and <ref> [WULF81] </ref>. Chapter 4: A Formal Semantics for CPAL 71 In this section, we give the weakest precondition definition of CPAL statements. There are only twelve statement types in the CPAL language. Each statement type has a weakest precondition definition. <p> It is this definition that allows us to force sequencing upon the steps in a cryptographic protocol during analysis. The definition we use is similar to that described in [DIJK76] and <ref> [WULF81] </ref>. For statements S1 and S2 and postcondition P, in order for predicate P to be true after S1;S2; is executed, the weakest precondition of S2 for P must be true after execution of [i.e., be a post condition for] S1 for P.
Reference: [WULF93] <author> Wm. A. Wulf, Alec Yasinsac, Katie S. Oliver, and Ramesh Peri, </author> <title> "Remote Bibliography 192 Authentication Without Prior Shared Knowledge", </title> <booktitle> Proceedings of the Internet Society Symposium on Network and Distributed System Security, </booktitle> <address> Feb 2-4, 1994, San Diego, Ca., </address> <pages> pp. 159-164 </pages>
Reference: [YW93] <author> Alec Yasinsac and Wm. A. Wulf, </author> <title> "A Formal Semantics for Evaluating Cryptographic Protocols", </title> <institution> University of Virginia, </institution> <type> Technical Report # CS-93-53, </type> <month> August </month> <year> 1993 </year>
References-found: 84

