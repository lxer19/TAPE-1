URL: http://www.cs.utexas.edu/users/diz/expander.ps
Refering-URL: http://www.cs.utexas.edu/users/diz/pubs.html
Root-URL: 
Title: Expanders that Beat the Eigenvalue Bound: Explicit Construction and Applications  
Author: Avi Wigderson David Zuckerman 
Abstract: For every n and 0 &lt; ffi &lt; 1, we construct graphs on n nodes such that every two sets of size n ffi share an edge, having essentially optimal maximum degree n 1ffi+o(1) . We use them to explicitly construct: 
Abstract-found: 1
Intro-found: 1
Reference: [AKS1] <author> M. Ajtai, J. Komlos, and E. Szemeredi, </author> <title> "Sorting in c log n Parallel Steps," </title> <booktitle> Combinatorica 3 (1983), </booktitle> <pages> pp. 1-19. </pages>
Reference-contexts: Varying the meaning of "certain size" and "many neighbors" give different notions of expansion, as we will see below. Expander graphs have had numerous applications in a wide range of areas of computer science (e.g. <ref> [AKS1, AKS2, FFP, GIL+, Tom, Val2] </ref>). It is not hard to show that a random graph is an expander. Yet the problem of deterministically constructing expanders has proved to be difficult; the construction of constant-degree expanders was considered a breakthrough [Mar, GG].
Reference: [AKS2] <author> M. Ajtai, J. Komlos, and E. Szemeredi, </author> <title> "Deterministic Simulation of Logspace," </title> <booktitle> 19th STOC, </booktitle> <year> 1987, </year> <pages> pp. 132-140. </pages>
Reference-contexts: Varying the meaning of "certain size" and "many neighbors" give different notions of expansion, as we will see below. Expander graphs have had numerous applications in a wide range of areas of computer science (e.g. <ref> [AKS1, AKS2, FFP, GIL+, Tom, Val2] </ref>). It is not hard to show that a random graph is an expander. Yet the problem of deterministically constructing expanders has proved to be difficult; the construction of constant-degree expanders was considered a breakthrough [Mar, GG].
Reference: [AKSS] <author> M. Ajtai, J. Komlos, W. Steiger, and E. Szemeredi, </author> <title> "Almost Sorting in One Round," </title> <booktitle> Advances in Computing Research, </booktitle> <volume> Vol. 5, </volume> <year> 1989, </year> <pages> pp. 117-125. </pages>
Reference-contexts: A related problem is "almost-sorting" in 1 round: how many comparisons are necessary to find the relations of all but r of the pairs of elements. Several papers have analyzed the case r = o (n 2 ) (e.g. <ref> [AKSS, AA] </ref>), but it is natural to study the question for general r, such as r = n 2* , 0 &lt; * &lt; 1. For such r, the non-constructive upper bound of O (n 1+* log 2 n) comparisons [AKSS, AA] is close to the lower bound of (n 1+* <p> analyzed the case r = o (n 2 ) (e.g. <ref> [AKSS, AA] </ref>), but it is natural to study the question for general r, such as r = n 2* , 0 &lt; * &lt; 1. For such r, the non-constructive upper bound of O (n 1+* log 2 n) comparisons [AKSS, AA] is close to the lower bound of (n 1+* log n) [AA]. Here we give the first nearly optimal constructive upper bound of O fl (n 1+* ), improving the previous best of O (n 1+2* log n) [AKSS, AA]. <p> upper bound of O (n 1+* log 2 n) comparisons <ref> [AKSS, AA] </ref> is close to the lower bound of (n 1+* log n) [AA]. Here we give the first nearly optimal constructive upper bound of O fl (n 1+* ), improving the previous best of O (n 1+2* log n) [AKSS, AA]. Superconcentrators and Nonblocking Networks Our graphs are also useful in explicitly constructing various networks. An (n; m)-network is a directed acyclic graph with n distinguished vertices called inputs and m other distinguished nodes called outputs. An (n; n)- network is also called an n-network. <p> Proof: Use Lemma 3.1 with the graphs constructed in Theorem 1.2. 2 The following lemma about almost-sorting in 1 round appears in <ref> [AKSS] </ref>: Lemma 3.3 [AKSS] If G is an a-expanding graph, then after performing the comparisons according to G, all relations will be known except for O (an log n). <p> Proof: Use Lemma 3.1 with the graphs constructed in Theorem 1.2. 2 The following lemma about almost-sorting in 1 round appears in <ref> [AKSS] </ref>: Lemma 3.3 [AKSS] If G is an a-expanding graph, then after performing the comparisons according to G, all relations will be known except for O (an log n).
Reference: [Alo1] <author> N. Alon, "Expanders, </author> <title> Sorting in Rounds, and Superconcentrators of Limited Depth," </title> <booktitle> 17th STOC, </booktitle> <year> 1985, </year> <pages> pp. 98-102. </pages>
Reference-contexts: While linear-sized superconcentrators have been explicitly constructed (e.g. [GG]), these all have logarithmic depth. The best known explicit constructions for depth 2 is O (n 3=2 ) [Mes], and for depth 2k + 1 are of size O (n (k+3)=(k+2) ) <ref> [Alo1] </ref>. On the other hand, non-explicit constructions were known of size O (n log 2 n) for depth 2 [Pip2], and O (n (k; n)) for depth 2k, k 2, for an extremely slowly growing (k; n) (e.g. (2; n) = log fl n) [DDPW].
Reference: [Alo2] <author> N. Alon, </author> <title> "Eigenvalues and Expanders," </title> <booktitle> Combinatorica 6 (1986), </booktitle> <pages> pp. 83-96. </pages>
Reference-contexts: To simplify matters for the moment, suppose that G is d-regular, so A has d as its largest eigenvalue. Then G is an expander if and only if the other eigenvalues of A are bounded away from d <ref> [Alo2, Tan, AM] </ref>. fl A preliminary version of this paper appeared in the 25th ACM Symposium on Theory of Computing, 1993, pp. 245-251. y Institute of Computer Science, Hebrew University of Jerusalem, Israel, 91904. avi@cs.huji.ac.il.
Reference: [AA] <author> N. Alon and Y. Azar, </author> <title> "Sorting, Approximate Sorting, and Searching in Rounds," </title> <journal> SIAM J. Disc. Math. </journal> <volume> 1 (1988), </volume> <pages> pp. 269-280. </pages>
Reference-contexts: Sorting and Selecting in Rounds Sorting and selecting in rounds has been an area of intensive study. This is the worst-case complexity in Valiant's comparison-tree model [Val1] using a constant number k of rounds. For sorting, (n 1+1=k (log n) 1=k ) comparisons are necessary <ref> [AA] </ref>, and O (n 1+1=k log n) comparisons are sufficient [BT]. This last result, however, is non-constructive. <p> The situation for selecting is very similar. The non-constructive upper bound of O (n 1+1=(2 k 1) (log n) 2 2 comparisons [Pip3] is close to the lower bound of (n 1+1=(2 k 1) (log n) 2 2 k 1 ) <ref> [AA] </ref>. Again we obtain a nearly optimal constructive upper bound of O fl (n 1+1=(2 k 1) ), improving the previous best of O fl (n 1+2 k2 =(3 k1 2 k2 ) ) [Pip3]. <p> A related problem is "almost-sorting" in 1 round: how many comparisons are necessary to find the relations of all but r of the pairs of elements. Several papers have analyzed the case r = o (n 2 ) (e.g. <ref> [AKSS, AA] </ref>), but it is natural to study the question for general r, such as r = n 2* , 0 &lt; * &lt; 1. For such r, the non-constructive upper bound of O (n 1+* log 2 n) comparisons [AKSS, AA] is close to the lower bound of (n 1+* <p> analyzed the case r = o (n 2 ) (e.g. <ref> [AKSS, AA] </ref>), but it is natural to study the question for general r, such as r = n 2* , 0 &lt; * &lt; 1. For such r, the non-constructive upper bound of O (n 1+* log 2 n) comparisons [AKSS, AA] is close to the lower bound of (n 1+* log n) [AA]. Here we give the first nearly optimal constructive upper bound of O fl (n 1+* ), improving the previous best of O (n 1+2* log n) [AKSS, AA]. <p> For such r, the non-constructive upper bound of O (n 1+* log 2 n) comparisons [AKSS, AA] is close to the lower bound of (n 1+* log n) <ref> [AA] </ref>. Here we give the first nearly optimal constructive upper bound of O fl (n 1+* ), improving the previous best of O (n 1+2* log n) [AKSS, AA]. Superconcentrators and Nonblocking Networks Our graphs are also useful in explicitly constructing various networks. <p> upper bound of O (n 1+* log 2 n) comparisons <ref> [AKSS, AA] </ref> is close to the lower bound of (n 1+* log n) [AA]. Here we give the first nearly optimal constructive upper bound of O fl (n 1+* ), improving the previous best of O (n 1+2* log n) [AKSS, AA]. Superconcentrators and Nonblocking Networks Our graphs are also useful in explicitly constructing various networks. An (n; m)-network is a directed acyclic graph with n distinguished vertices called inputs and m other distinguished nodes called outputs. An (n; n)- network is also called an n-network.
Reference: [AM] <author> N. Alon and V.D. Milman, </author> " <title> 1 , Isoperimetric Inequalities for Graphs and Superconcentrators," </title> <journal> J. Combinatorial Theory Ser. </journal> <volume> B 38 (1985), </volume> <pages> pp. 73-88. </pages>
Reference-contexts: To simplify matters for the moment, suppose that G is d-regular, so A has d as its largest eigenvalue. Then G is an expander if and only if the other eigenvalues of A are bounded away from d <ref> [Alo2, Tan, AM] </ref>. fl A preliminary version of this paper appeared in the 25th ACM Symposium on Theory of Computing, 1993, pp. 245-251. y Institute of Computer Science, Hebrew University of Jerusalem, Israel, 91904. avi@cs.huji.ac.il.
Reference: [AP] <author> Y. Azar and N. Pippenger, </author> <title> "Parallel Selection," </title> <journal> Discrete Appl. Math. </journal> <volume> 27 (1990), </volume> <pages> pp. 49-58. </pages>
Reference: [BT] <author> B. Bollobas and A. Thomason, </author> <title> "Parallel Sorting," </title> <journal> Discrete Appl. Math. </journal> <volume> 6 (1983), </volume> <pages> pp. 1-11. </pages>
Reference-contexts: This is the worst-case complexity in Valiant's comparison-tree model [Val1] using a constant number k of rounds. For sorting, (n 1+1=k (log n) 1=k ) comparisons are necessary [AA], and O (n 1+1=k log n) comparisons are sufficient <ref> [BT] </ref>. This last result, however, is non-constructive. Pippenger [Pip3] showed a slightly worse non-explicit construction of O (n 1+1=k (log n) 22=k ), but his construction depends only on the existence of n ffi -expanding graphs with an optimal number of edges.
Reference: [DDPW] <author> D. Dolev, C. Dwork, N. Pippenger, and A. Wigderson, "Superconcentrators, Generalizers, </author> <title> and Generalized Connectors with Limited Depth," </title> <booktitle> 15th STOC, </booktitle> <year> 1983, </year> <pages> pp. 42-51. </pages>
Reference-contexts: On the other hand, non-explicit constructions were known of size O (n log 2 n) for depth 2 [Pip2], and O (n (k; n)) for depth 2k, k 2, for an extremely slowly growing (k; n) (e.g. (2; n) = log fl n) <ref> [DDPW] </ref>. Here, we give an explicit construction for depth 2 of size O fl (n). <p> Proof: Use the non-explicit analog of Lemma 4.7 and the superconcentrators given in <ref> [DDPW] </ref>. 2 6 5 Concentrators and Non-Blocking Networks In this section we show how similar ideas can be used to explicitly construct non-blocking networks. Before we do this, we define wide-sense nonblocking generalized connectors, following [FFP].
Reference: [FFP] <author> P. Feldman, J. Friedman, and N. Pippenger, </author> <title> "Wide-Sense Nonblocking Networks," </title> <journal> SIAM J. Disc. Math., </journal> <volume> 1 (1988), </volume> <pages> pp. 158-173. </pages>
Reference-contexts: Varying the meaning of "certain size" and "many neighbors" give different notions of expansion, as we will see below. Expander graphs have had numerous applications in a wide range of areas of computer science (e.g. <ref> [AKS1, AKS2, FFP, GIL+, Tom, Val2] </ref>). It is not hard to show that a random graph is an expander. Yet the problem of deterministically constructing expanders has proved to be difficult; the construction of constant-degree expanders was considered a breakthrough [Mar, GG]. <p> Concentrators of depth 1 are usually built with expanders, with the exception of [Mor]. The best previous construction of depth 1 (n; n ffi ; (n ffi )) concentrators has size O (n 1+minfffi=2;(1ffi)g ) (see e.g. <ref> [FFP] </ref>). Here we construct a generalization of these concentrators with size O fl (n). We use this generalized construction to give a construction of wide-sense nonblocking generalized connectors. <p> A wide-sense nonblocking generalized connector, roughly speaking, is one where the router need never be stuck (we define it precisely later). Feldman, et.al. <ref> [FFP] </ref> gave non-explicit constructions for depth k wide-sense nonblocking generalized connectors of size O (n 1+1=k (log n) 11=k ), essentially matching the (n 1+1=k ) lower bound [PY]. <p> Proof: Use the non-explicit analog of Lemma 4.7 and the superconcentrators given in [DDPW]. 2 6 5 Concentrators and Non-Blocking Networks In this section we show how similar ideas can be used to explicitly construct non-blocking networks. Before we do this, we define wide-sense nonblocking generalized connectors, following <ref> [FFP] </ref>. A route in a network is a directed path from an input to an output. A state of a network is a set of vertex-disjoint routes. The states of a network are partially ordered by inclusion; above and below refer to this partial order. <p> The key to our result is to construct a certain generalization of concentrators, and then apply a lemma of <ref> [FFP] </ref>. Definition 5.1 An (n; m; l)-concentrator with expansion e is an (n; m)-network such that every set of t l inputs expands to at least et outputs. Note that a concentrator with expansion 1 is a concentrator in the usual sense. <p> Suppose we have a set of t inputs, and say t 2 [2 i ; 2 i+1 ]. Then in C i this set must expand to (4e 1)2 i &gt; et. 2 The following lemma is implicit in <ref> [FFP] </ref>: Lemma 5.3 [FFP] If for all 1=2 ffi &lt; 1 there are explicitly-constructible (n; 4n ffi ; n ffi )-concentrators with expansion 2 and size O fl (n), then there are efficiently constructible wide-sense nonblocking generalized n-connectors of size O fl (n 1+1=k ) and depth k. <p> Suppose we have a set of t inputs, and say t 2 [2 i ; 2 i+1 ]. Then in C i this set must expand to (4e 1)2 i &gt; et. 2 The following lemma is implicit in <ref> [FFP] </ref>: Lemma 5.3 [FFP] If for all 1=2 ffi &lt; 1 there are explicitly-constructible (n; 4n ffi ; n ffi )-concentrators with expansion 2 and size O fl (n), then there are efficiently constructible wide-sense nonblocking generalized n-connectors of size O fl (n 1+1=k ) and depth k.
Reference: [GG] <author> O. Gabber and Z. Galil, </author> <title> "Explicit Construction of Linear Sized Superconcentrators," </title> <journal> J. Comp. and Sys. Sci 22 (1981), </journal> <pages> pp. 407-420. </pages>
Reference-contexts: It is not hard to show that a random graph is an expander. Yet the problem of deterministically constructing expanders has proved to be difficult; the construction of constant-degree expanders was considered a breakthrough <ref> [Mar, GG] </ref>. The eigenvalue method has proved particularly useful in designing expander graphs. This method works by looking at the adjacency matrix A of an undirected graph G = (V; E). To simplify matters for the moment, suppose that G is d-regular, so A has d as its largest eigenvalue. <p> Superconcentrators have proved very useful in complexity theory (e.g [Tom, Val2]). Indeed, superconcentrators were the original motivation for constructing expander graphs. While linear-sized superconcentrators have been explicitly constructed (e.g. <ref> [GG] </ref>), these all have logarithmic depth. The best known explicit constructions for depth 2 is O (n 3=2 ) [Mes], and for depth 2k + 1 are of size O (n (k+3)=(k+2) ) [Alo1].
Reference: [GIL+] <author> O. Goldreich, R. Impagliazzo, L. Levin, R. Venkatesan, and D. Zuckerman, </author> <title> "Security Preserving Amplification of Hardness," </title> <booktitle> 31st FOCS, </booktitle> <year> 1990, </year> <pages> pp. 318-326. </pages>
Reference-contexts: Varying the meaning of "certain size" and "many neighbors" give different notions of expansion, as we will see below. Expander graphs have had numerous applications in a wide range of areas of computer science (e.g. <ref> [AKS1, AKS2, FFP, GIL+, Tom, Val2] </ref>). It is not hard to show that a random graph is an expander. Yet the problem of deterministically constructing expanders has proved to be difficult; the construction of constant-degree expanders was considered a breakthrough [Mar, GG].
Reference: [Kah] <author> N. Kahale, </author> <title> "On the Second Eigenvalue and Linear Expansion of Regular Graphs," </title> <booktitle> 33rd FOCS, </booktitle> <year> 1992, </year> <pages> pp. 296-303. </pages>
Reference-contexts: For a random d-regular graph, small sets S have roughly (d1)jSj neighbors, yet bounding the second eigenvalue can only be used to show the existence of roughly (d=2)jSj neighbors <ref> [Kah] </ref>. The situation gets much worse for larger degree and stronger expansion. A definition that captures such strong expansion is: Definition 1.1 [Pip3] An undirected graph is a-expanding if any two disjoint sets of vertices, each containing at least a vertices, are joined by an edge.
Reference: [LPS] <author> A. Lubotzky, R. Philips, P. Sarnak, </author> <title> "Ramanujan Graphs," </title> <booktitle> Combinatorica 8 (1988), </booktitle> <pages> pp. 261-277. </pages>
Reference: [Mar] <author> G.A. Margulis, </author> <title> "Explicit Construction of Concentrators," Problems of Inform. </title> <booktitle> Transmission, </booktitle> <pages> pp. 325-332. </pages>
Reference-contexts: It is not hard to show that a random graph is an expander. Yet the problem of deterministically constructing expanders has proved to be difficult; the construction of constant-degree expanders was considered a breakthrough <ref> [Mar, GG] </ref>. The eigenvalue method has proved particularly useful in designing expander graphs. This method works by looking at the adjacency matrix A of an undirected graph G = (V; E). To simplify matters for the moment, suppose that G is d-regular, so A has d as its largest eigenvalue.
Reference: [Mes] <author> R. Meshulam, </author> <title> "A Geometric Construction of a Superconcentrator of Depth 2," </title> <booktitle> Theoretical Computer Science 32 (1984), </booktitle> <pages> pp. 215-219. </pages>
Reference-contexts: Superconcentrators have proved very useful in complexity theory (e.g [Tom, Val2]). Indeed, superconcentrators were the original motivation for constructing expander graphs. While linear-sized superconcentrators have been explicitly constructed (e.g. [GG]), these all have logarithmic depth. The best known explicit constructions for depth 2 is O (n 3=2 ) <ref> [Mes] </ref>, and for depth 2k + 1 are of size O (n (k+3)=(k+2) ) [Alo1]. <p> Since G is n ffi expanding, H is an n ffi -expanding weak (n; rn ffi )- concentrator. Moreover, jEj rn ffi O fl (n 1ffi ) = O fl (rn). 2 It is convenient to use the following characterization of depth 2 superconcentrators, due to <ref> [Mes] </ref>. Let N = (I [ M [ O; F ) be an n-network of depth 2 with inputs I, middle layer M , and outputs O. <p> For X I and Y O, define + (X) = fz 2 M : (x; z) 2 F for some x 2 Xg; (Y ) = fz 2 M : (z; y) 2 F for some y 2 Y g: Lemma 4.3 <ref> [Mes] </ref> N is a superconcentrator if and only if for any 1 k n and X I, Y O such that jXj = jY j = k, j + (X) " (Y )j k. This motivates the following definition.
Reference: [Mor] <author> M. Morgenstern, </author> <title> "Explicit Construction of Natural Bounded Concentrators," </title> <booktitle> 32nd FOCS, </booktitle> <year> 1991, </year> <pages> pp. 392-397. </pages>
Reference-contexts: We also give non-explicit constructions of linear-sized superconcentrators with depth log (k; n). The main tool in most superconcentrator constructions is the concentrator, which is interesting in its own right (e.g. <ref> [Mor] </ref>). An (n; m; l)-concentrator is an (n; m)-network such that every set of at most l inputs is connected by 3 vertex-disjoint paths to outputs. Concentrators of depth 1 are usually built with expanders, with the exception of [Mor]. <p> is the concentrator, which is interesting in its own right (e.g. <ref> [Mor] </ref>). An (n; m; l)-concentrator is an (n; m)-network such that every set of at most l inputs is connected by 3 vertex-disjoint paths to outputs. Concentrators of depth 1 are usually built with expanders, with the exception of [Mor]. The best previous construction of depth 1 (n; n ffi ; (n ffi )) concentrators has size O (n 1+minfffi=2;(1ffi)g ) (see e.g. [FFP]). Here we construct a generalization of these concentrators with size O fl (n).
Reference: [NZ] <author> N. Nisan and D. Zuckerman, </author> <title> "Randomness is Linear in Space," </title> <journal> J. Comp. and Sys. </journal> <note> Sci., to appear. Preliminary version appeared as "More Deterministic Simulation in Logspace," 25th ACM Symposium on Theory of Computing, </note> <year> 1993, </year> <pages> pp. 235-244. </pages>
Reference-contexts: Remark: In fact, our n o (1) factors will be bounded by exp ((log n) 2=3+o (1) ). 2 Our result is obtained by improving the extractor construction of <ref> [NZ] </ref>. The motivation for extractors is that there are many fast and useful randomized algorithms. <p> The extractor allows us to compute efficiently if the random source is defective, as long as we have a small number of truly random bits available. (In fact, even if we don't have any truly random bits, we can cycle through all possibilities see <ref> [NZ, Zuc2] </ref> for more details.) Our model for defective random source will essentially be the most general: Definition 1.3 [Zuc1] A distribution D on f0; 1g n is called a ffi-source if for all x 2 f0; 1g n , D (x) 2 ffin . <p> Note that a particular type of ffi-source is the uniform distribution on a subset A f0; 1g n , jAj 2 ffin . We can now define: Definition 1.4 <ref> [NZ] </ref> E : f0; 1g n fi f0; 1g t ! f0; 1g m is called an (n; ffi; t; m; *)-extractor if for every ffi-source D, the distribution of E (x; y) ffi y induced by choosing x from D and y uniformly in f0; 1g t is within statistical <p> For now, think of ffi 1=2 as a fixed constant and * = 1=n c for some constant c. In <ref> [NZ] </ref> an efficient extractor was described requiring t = (log n) O (1) additional random bits and outputting m = (n) nearly-random bits. <p> This near-optimal output length is necessary for our graphs to have near-optimal expansion. We do pay a price, however, in that our t is larger than in <ref> [NZ] </ref>. The only tools we use are hash functions and k-wise independence. Our construction builds heavily on the one in [NZ], which in turn builds upon ideas in [Zuc1, Zuc2]. <p> This near-optimal output length is necessary for our graphs to have near-optimal expansion. We do pay a price, however, in that our t is larger than in <ref> [NZ] </ref>. The only tools we use are hash functions and k-wise independence. Our construction builds heavily on the one in [NZ], which in turn builds upon ideas in [Zuc1, Zuc2]. <p> Here D (X) denotes the probability of the set X according to distribution D. From the definition of extractor, it is clear that the smaller ffi and * are, the harder it is to define an extractor. In <ref> [NZ] </ref> (see the final version for slightly improved parameter dependence), an extractor is constructed for essentially all reasonable ffi and * (although upper bounds are placed to make the expressions simpler): Lemma 2.2 [NZ] For any parameters ffi = ffi (n) and * = *(n) with 1=n ffi 1=2 and 2 <p> In <ref> [NZ] </ref> (see the final version for slightly improved parameter dependence), an extractor is constructed for essentially all reasonable ffi and * (although upper bounds are placed to make the expressions simpler): Lemma 2.2 [NZ] For any parameters ffi = ffi (n) and * = *(n) with 1=n ffi 1=2 and 2 ffin * 1=n, there exists a polynomial-time, linear-space computable (and explicitly given) (n; ffi; t; m; *)-extractor E : f0; 1g n fi f0; 1g t ! f0; 1g m , where t <p> Moreover, any two subsets of V of size N ffi have at least M=4 common neighbors. Thus the graph G 2 is the one we seek. 2 Substituting in the extractor of <ref> [NZ] </ref> gives a construction which beats the eigenvalue bound, but is not near-optimal. To get a near-optimal construction, we need to make m close to ffin, while keeping t small. The following is a method for doing this. <p> Then Lemma 2.3 gives an N ffi -expanding graph with maximum degree N 1ffi+O () = N 1ffi+(log N) 1=3+o (1) We remark that the paper [SZ] improves the extractor of <ref> [NZ] </ref>, giving a somewhat better N o (1) factor of exp ((log N ) 1=2+o (1) ). 3 Sorting and Selecting in Rounds The following is implicit in Pippenger's work: Lemma 3.1 [Pip3] Suppose that for all 1=2 ffi &lt; 1 there are explicitly-constructible n ffi -expanding graphs with maximum degree
Reference: [Pip1] <author> N. </author> <title> Pippenger, </title> <journal> "Superconcentrators," SIAM J. Comput. </journal> <volume> 6 (1977), </volume> <pages> pp. 298-304. </pages>
Reference-contexts: Lemma 4.7 If there are explicitly-constructible n-superconcentrators of size an and depth k, then there are explicitly-constructible n-superconcentrators of linear size and depth k + O (log a). Proof: (Sketch) Use the recursive superconcentrator construction developed by Pippenger <ref> [Pip1] </ref>. After O (log a) levels, we need an n=a-superconcentrator. Assuming a = a (n) is a non-decreasing function of n, we use the n=a-superconcentrator of size at most n. 2 Theorem 4.8 For all n, there are explicitly-constructible n-superconcentrators of linear size and depth (log n) 2=3+o (1) .
Reference: [Pip2] <author> N. Pippenger, </author> <title> "Superconcentrators of Depth 2," </title> <journal> J. Comp. and Sys. Sci. </journal> <volume> 24 (1982), </volume> <pages> pp. 82-90. </pages>
Reference-contexts: The best known explicit constructions for depth 2 is O (n 3=2 ) [Mes], and for depth 2k + 1 are of size O (n (k+3)=(k+2) ) [Alo1]. On the other hand, non-explicit constructions were known of size O (n log 2 n) for depth 2 <ref> [Pip2] </ref>, and O (n (k; n)) for depth 2k, k 2, for an extremely slowly growing (k; n) (e.g. (2; n) = log fl n) [DDPW]. Here, we give an explicit construction for depth 2 of size O fl (n).
Reference: [Pip3] <author> N. Pippenger, </author> <title> "Sorting and Selecting in Rounds," </title> <journal> SIAM J. Comput. </journal> <volume> 16 (1987), </volume> <pages> pp. 1032-1038. </pages>
Reference-contexts: The situation gets much worse for larger degree and stronger expansion. A definition that captures such strong expansion is: Definition 1.1 <ref> [Pip3] </ref> An undirected graph is a-expanding if any two disjoint sets of vertices, each containing at least a vertices, are joined by an edge. Equivalently, every set with a vertices has more than n a neighbors. <p> This is the worst-case complexity in Valiant's comparison-tree model [Val1] using a constant number k of rounds. For sorting, (n 1+1=k (log n) 1=k ) comparisons are necessary [AA], and O (n 1+1=k log n) comparisons are sufficient [BT]. This last result, however, is non-constructive. Pippenger <ref> [Pip3] </ref> showed a slightly worse non-explicit construction of O (n 1+1=k (log n) 22=k ), but his construction depends only on the existence of n ffi -expanding graphs with an optimal number of edges. <p> Thus, applying our construction, we obtain a near-optimal explicit algorithm using O fl (n 1+1=k ) comparisons. The best known previously was O fl (n 1+2=(k+1) ) <ref> [Pip3] </ref>. The situation for selecting is very similar. The non-constructive upper bound of O (n 1+1=(2 k 1) (log n) 2 2 comparisons [Pip3] is close to the lower bound of (n 1+1=(2 k 1) (log n) 2 2 k 1 ) [AA]. <p> The best known previously was O fl (n 1+2=(k+1) ) <ref> [Pip3] </ref>. The situation for selecting is very similar. The non-constructive upper bound of O (n 1+1=(2 k 1) (log n) 2 2 comparisons [Pip3] is close to the lower bound of (n 1+1=(2 k 1) (log n) 2 2 k 1 ) [AA]. <p> Again we obtain a nearly optimal constructive upper bound of O fl (n 1+1=(2 k 1) ), improving the previous best of O fl (n 1+2 k2 =(3 k1 2 k2 ) ) <ref> [Pip3] </ref>. A related problem is "almost-sorting" in 1 round: how many comparisons are necessary to find the relations of all but r of the pairs of elements. <p> 1ffi+O () = N 1ffi+(log N) 1=3+o (1) We remark that the paper [SZ] improves the extractor of [NZ], giving a somewhat better N o (1) factor of exp ((log N ) 1=2+o (1) ). 3 Sorting and Selecting in Rounds The following is implicit in Pippenger's work: Lemma 3.1 <ref> [Pip3] </ref> Suppose that for all 1=2 ffi &lt; 1 there are explicitly-constructible n ffi -expanding graphs with maximum degree n 1ffi f (n).
Reference: [PY] <author> N. Pippenger and A.C. Yao, </author> <title> "Rearrangeable Networks with Limited Depth," </title> <booktitle> SIAM J. Algebraic and Discrete Methods 3 (1982), </booktitle> <pages> pp. 411-417. </pages>
Reference-contexts: Feldman, et.al. [FFP] gave non-explicit constructions for depth k wide-sense nonblocking generalized connectors of size O (n 1+1=k (log n) 11=k ), essentially matching the (n 1+1=k ) lower bound <ref> [PY] </ref>. They also gave explicit constructions for depth 2 of size O (n 5=3 ), for depth 3 of size O (n 11=7 ), and for depth k of size O (n 1+2=k ).
Reference: [SZ] <author> A. Srinivasan and D. Zuckerman, </author> <title> "Computing with Very Weak Random Sources," </title> <booktitle> FOCS 94, </booktitle> <pages> pp. 264-275. </pages>
Reference-contexts: Indeed, the explicit construction of expanders that beat the eigenvalue bound in a different scenario were first obtained in [Zuc1]. 1 Actually, using Tanner's inequality [Tan], it suffices to have the degree slightly less: da n=(1 + =d). 2 The recent improved extractor construction of <ref> [SZ] </ref> improves these factors to exp ((log n) 1=2+o (1) ). 2 1.2 Applications Our graphs improve many explicit constructions. In all cases, our results improve upon previous constructions by factors of n (1) , and are optimal to within factors of n o (1) . <p> biggest improvement: a factor of O fl ( p We use this construction of a depth 2 superconcentrator to give the first explicit construction of a linear-sized superconcentrator with sublogarithmic depth (namely, depth (log n) 2=3+o (1) , or (log n) 1=2+o (1) using the recent improved extractor construction in <ref> [SZ] </ref>). We also give non-explicit constructions of linear-sized superconcentrators with depth log (k; n). The main tool in most superconcentrator constructions is the concentrator, which is interesting in its own right (e.g. [Mor]). <p> Then Lemma 2.3 gives an N ffi -expanding graph with maximum degree N 1ffi+O () = N 1ffi+(log N) 1=3+o (1) We remark that the paper <ref> [SZ] </ref> improves the extractor of [NZ], giving a somewhat better N o (1) factor of exp ((log N ) 1=2+o (1) ). 3 Sorting and Selecting in Rounds The following is implicit in Pippenger's work: Lemma 3.1 [Pip3] Suppose that for all 1=2 ffi &lt; 1 there are explicitly-constructible n ffi <p> Proof: Use Lemma 4.7 and Theorem 4.6. 2 Remark: The depth can be improved to (log n) 1=2+o (1) by using improved extractor of <ref> [SZ] </ref>. Our construction also improves the best known non-explicit constructions: Theorem 4.9 There exist linear-sized n-superconcentrators with depth log (k; n) for any constant k, where (k; n) is the inverse of Ackermann's function (so e.g. (2; n) = log fl n).
Reference: [Tan] <author> R.M. Tanner, </author> <title> "Explicit Construction of Concentrators from Generalized N -gons," </title> <journal> SIAM J. Alg. Discr. Meth. </journal> <volume> 5 (1984), </volume> <pages> pp. 287-293. </pages>
Reference-contexts: To simplify matters for the moment, suppose that G is d-regular, so A has d as its largest eigenvalue. Then G is an expander if and only if the other eigenvalues of A are bounded away from d <ref> [Alo2, Tan, AM] </ref>. fl A preliminary version of this paper appeared in the 25th ACM Symposium on Theory of Computing, 1993, pp. 245-251. y Institute of Computer Science, Hebrew University of Jerusalem, Israel, 91904. avi@cs.huji.ac.il. <p> Our construction builds heavily on the one in [NZ], which in turn builds upon ideas in [Zuc1, Zuc2]. Indeed, the explicit construction of expanders that beat the eigenvalue bound in a different scenario were first obtained in [Zuc1]. 1 Actually, using Tanner's inequality <ref> [Tan] </ref>, it suffices to have the degree slightly less: da n=(1 + =d). 2 The recent improved extractor construction of [SZ] improves these factors to exp ((log n) 1=2+o (1) ). 2 1.2 Applications Our graphs improve many explicit constructions.
Reference: [Tom] <author> M. Tompa, </author> <title> "Time Space Tradeoffs for Computing Functions, Using Connectivity Properties of Their Circuits," </title> <journal> J. Comp. and Sys. Sci, </journal> <volume> 20 (1980), </volume> <pages> pp. 118-132. </pages>
Reference-contexts: Varying the meaning of "certain size" and "many neighbors" give different notions of expansion, as we will see below. Expander graphs have had numerous applications in a wide range of areas of computer science (e.g. <ref> [AKS1, AKS2, FFP, GIL+, Tom, Val2] </ref>). It is not hard to show that a random graph is an expander. Yet the problem of deterministically constructing expanders has proved to be difficult; the construction of constant-degree expanders was considered a breakthrough [Mar, GG]. <p> An n-superconcentrator is an n-network such that for every subset A of the inputs and B of the outputs such that jAj = jBj, there exist vertex-disjoint paths joining the vertices in A to the vertices in B. Superconcentrators have proved very useful in complexity theory (e.g <ref> [Tom, Val2] </ref>). Indeed, superconcentrators were the original motivation for constructing expander graphs. While linear-sized superconcentrators have been explicitly constructed (e.g. [GG]), these all have logarithmic depth.
Reference: [Val1] <author> L.G. Valiant, </author> <title> "Parallelism in Comparison Problems," </title> <journal> SIAM J. Comput. </journal> <volume> 4 (1975), </volume> <pages> pp. 348-355. </pages>
Reference-contexts: In the probabilistic and optimal bounds they are at most log 2 n, so there is still a gap to close. Sorting and Selecting in Rounds Sorting and selecting in rounds has been an area of intensive study. This is the worst-case complexity in Valiant's comparison-tree model <ref> [Val1] </ref> using a constant number k of rounds. For sorting, (n 1+1=k (log n) 1=k ) comparisons are necessary [AA], and O (n 1+1=k log n) comparisons are sufficient [BT]. This last result, however, is non-constructive.
Reference: [Val2] <author> L.G. Valiant, </author> <title> "Graph Theoretic Properties in Computational Complexity," </title> <journal> J. Comp. and Sys. Sci. </journal> <volume> 13 (1976), </volume> <pages> pp. 278-285. </pages>
Reference-contexts: Varying the meaning of "certain size" and "many neighbors" give different notions of expansion, as we will see below. Expander graphs have had numerous applications in a wide range of areas of computer science (e.g. <ref> [AKS1, AKS2, FFP, GIL+, Tom, Val2] </ref>). It is not hard to show that a random graph is an expander. Yet the problem of deterministically constructing expanders has proved to be difficult; the construction of constant-degree expanders was considered a breakthrough [Mar, GG]. <p> An n-superconcentrator is an n-network such that for every subset A of the inputs and B of the outputs such that jAj = jBj, there exist vertex-disjoint paths joining the vertices in A to the vertices in B. Superconcentrators have proved very useful in complexity theory (e.g <ref> [Tom, Val2] </ref>). Indeed, superconcentrators were the original motivation for constructing expander graphs. While linear-sized superconcentrators have been explicitly constructed (e.g. [GG]), these all have logarithmic depth.
Reference: [Zuc1] <author> D. Zuckerman, </author> <title> "General Weak Random Sources," </title> <booktitle> 31st FOCS, </booktitle> <year> 1990, </year> <pages> pp. 534-543. </pages>
Reference-contexts: as long as we have a small number of truly random bits available. (In fact, even if we don't have any truly random bits, we can cycle through all possibilities see [NZ, Zuc2] for more details.) Our model for defective random source will essentially be the most general: Definition 1.3 <ref> [Zuc1] </ref> A distribution D on f0; 1g n is called a ffi-source if for all x 2 f0; 1g n , D (x) 2 ffin . Note that a particular type of ffi-source is the uniform distribution on a subset A f0; 1g n , jAj 2 ffin . <p> We do pay a price, however, in that our t is larger than in [NZ]. The only tools we use are hash functions and k-wise independence. Our construction builds heavily on the one in [NZ], which in turn builds upon ideas in <ref> [Zuc1, Zuc2] </ref>. <p> The only tools we use are hash functions and k-wise independence. Our construction builds heavily on the one in [NZ], which in turn builds upon ideas in [Zuc1, Zuc2]. Indeed, the explicit construction of expanders that beat the eigenvalue bound in a different scenario were first obtained in <ref> [Zuc1] </ref>. 1 Actually, using Tanner's inequality [Tan], it suffices to have the degree slightly less: da n=(1 + =d). 2 The recent improved extractor construction of [SZ] improves these factors to exp ((log n) 1=2+o (1) ). 2 1.2 Applications Our graphs improve many explicit constructions.
Reference: [Zuc2] <author> D. Zuckerman, </author> <title> "Simulating BPP Using a General Weak Random Source," </title> <journal> Algorithmica, </journal> <note> to appear. Preliminary version in 32nd FOCS, </note> <year> 1991, </year> <pages> pp. 79-89. 9 </pages>
Reference-contexts: The extractor allows us to compute efficiently if the random source is defective, as long as we have a small number of truly random bits available. (In fact, even if we don't have any truly random bits, we can cycle through all possibilities see <ref> [NZ, Zuc2] </ref> for more details.) Our model for defective random source will essentially be the most general: Definition 1.3 [Zuc1] A distribution D on f0; 1g n is called a ffi-source if for all x 2 f0; 1g n , D (x) 2 ffin . <p> We do pay a price, however, in that our t is larger than in [NZ]. The only tools we use are hash functions and k-wise independence. Our construction builds heavily on the one in [NZ], which in turn builds upon ideas in <ref> [Zuc1, Zuc2] </ref>.
References-found: 30

