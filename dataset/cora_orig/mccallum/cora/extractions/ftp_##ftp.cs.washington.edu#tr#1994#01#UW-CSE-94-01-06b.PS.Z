URL: ftp://ftp.cs.washington.edu/tr/1994/01/UW-CSE-94-01-06b.PS.Z
Refering-URL: http://www.cs.washington.edu/homes/salesin/cv.html
Root-URL: 
Title: Multiresolution Curves  
Author: Adam Finkelstein and David H. Salesin 
Date: April 1994  
Address: Seattle, Washington 98195  
Affiliation: Department of Computer Science and Engineering University of Washington  
Pubnum: Technical Report 94-01-06b  
Abstract-found: 0
Intro-found: 1
Reference: [1] <editor> PostScript Language Reference Manual. </editor> <publisher> Addison-Wesley Publishing Company, Inc., </publisher> <year> 1985. </year>
Reference-contexts: In this paper, we look at the very practical concern of producing a small number of Bezier segments that approximate the curve well, since these segments are the standard representation for curves in PostScript <ref> [1] </ref>, the most common page description language. Our requirements are also somewhat different than those of most previous curve-fitting methods. In particular, for our application of scan conversion we do not require any particular continuity constraints for the approximating curve. <p> To see how to construct these filters, we associate with each signal C n a function f n (u) with u 2 <ref> [0; 1] </ref> given by f n (u) = n (u) C n (4) where n (u) is a row matrix of basis functions [ n 1 (u); : : : ; n m (u)], called scaling functions. <p> In our application, for example, the scaling functions are the endpoint-interpolating B-splines basis functions, in which case the function f n (u) would be an endpoint-interpolating B-spline curve. 2 The scaling functions are required to be refinable; that is, for all j in <ref> [1; n] </ref> there must exist a matrix P j such that j1 = j P j (5) In other words, each scaling function at level j 1 must be expressible as a linear combination of "finer" scaling functions at level j. <p> The approximate curve e f (u) is described by a set of Bezier segments, which we use to generate a PostScript file <ref> [1] </ref>. Note that the scan-conversion algorithm, as described, produces approximate curves e f (u) that are not even C 0 continuous where two segments of different levels abut.
Reference: [2] <author> M. J. Banks and E. Cohen. </author> <title> Realtime spline curves from interactively sketched data. </title> <journal> Computer Graphics, </journal> <volume> 24(2) </volume> <pages> 99-107, </pages> <year> 1990. </year>
Reference-contexts: The method we describe is really a least-squares type of smoothing, which is much simpler but supports continuous levels of smoothing that behaves quite reasonably and intuitively in practice. Many schemes for approximating curves within specified error tolerances have also been explored <ref> [2, 20, 23, 27] </ref>. Most of this research has centered on various forms of knot removal for representing curves efficiently with non-uniform B-splines.
Reference: [3] <author> R. Bartels and J. Beatty. </author> <title> A technique for the direct manipulation of spline curves. </title> <booktitle> In Proceedings of the 1989 Graphics Interface Conference, </booktitle> <pages> pages 33-39, </pages> <address> London, Ontario, Canada, </address> <month> June </month> <year> 1989. </year>
Reference-contexts: is easily performed at in teractive rates, even for curves with hundreds of control points. 4.1.1 Editing with direct manipulation The fractional-level editing described above can be easily extended to accommodate direct manipulation, in which the user tugs on the smoothed curve directly rather than on its defining control points <ref> [3, 13, 15, 18] </ref>. To use direct manipulation when editing at level j + t, we make use of the pseudo-inverse of the scaling functions at levels j and j + 1.
Reference: [4] <author> R. Bartels, J. Beatty, and B. Barsky. </author> <title> An Introduction to Splines for Use in Computer Graphics and Geometric Modeling. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1987. </year>
Reference-contexts: Such B-splines are commonly referred to as endpoint-interpolating cubic B-splines. These curves are discussed in detail in many texts on computer-aided design <ref> [4, 12, 16] </ref>. The multiresolution framework described in Section 2.1 is very general. To construct our multiresolution curves from endpoint-interpolating cubic B-splines, we need to make several choices, as enumerated below: 1. Choose the scaling functions j (u) for all j in [0; n]. <p> DrawSegment (s j if ErrBound (s j i ) &lt; * then Output segment s j i as a portion of e f (u) else DrawSegment (s j+1 2i ); DrawSegment (s j+1 end if end procedure To construct the ErrBound routine, let M j be the B-spline-to-Bezier-basis conversion matrix <ref> [4] </ref> for curves with 2 j + 3 control points, and let E j be a column vector with entries e j i defined by E j := M j Q j D j1 (18) The vector E j provides a measure of the distance that the Bezier control points migrate <p> Surfaces. Another obvious extension of these techniques is to surfaces. As a test of multiresolution surface editing, we built a surface editor that allows a user to modify a bicubic tensor-product B-spline surface <ref> [4, 12, 16] </ref> at different levels of detail. Figure 11 shows several manipulations applied to a surface over 1225 control points modeling a human face. It is worth noting that tensor-product surfaces are limited in the kinds of shapes they can model seamlessly.
Reference: [5] <author> D. Berman, J. Bartell, and D. Salesin. </author> <title> Multiresolution painting and compositing. </title> <booktitle> Proceedings of SIGGRAPH 94. In Computer Graphics, Annual Conference Series, </booktitle> <year> 1994. </year>
Reference-contexts: One such sparse representation might use pruned binary trees to keep track of the various wavelet coefficients at different levels of refinement, in a manner very similar to the one used by Berman et al. for representing multiresolution images <ref> [5] </ref>. Textured strokes. For illustrations, it is useful to associate other properties with curves, such as color, thickness, texture, and transparency, as demon strated by Hsu and Lee [17]. These quantities may be considered extra dimensions in the data associated with each control point. <p> The thickness along the curve is governed by the thick nesses defined at the control points. It is possible to modify this param-eter at any level of resolution, just as one edits the position of the curve. to combine stroke editing with multiresolution image editing <ref> [5] </ref>, perhaps providing a unified framework for object-oriented ("MacDraw-like") and image-oriented ("MacPaint-like") interactive design programs. Surfaces. Another obvious extension of these techniques is to surfaces.
Reference: [6] <author> G. Beylkin, R. Coifman, and V. Rokhlin. </author> <title> Fast wavelet transforms and numerical algorithms I. </title> <journal> Communications on Pure and Applied Mathematics, </journal> <volume> 44 </volume> <pages> 141-183, </pages> <year> 1991. </year>
Reference-contexts: of wavelets and multiresolution analysis, and we show how it can be applied to representing endpoint-interpolating B-spline curves. 2.1 Wavelets and multiresolution analysis Wavelets are a simple mathematical tool that have found a wide variety of applications in recent years, including signal analysis [22], image processing [11], and numerical analysis <ref> [6] </ref>. In this section, we sketch the basic ideas behind wavelets and multiresolution analysis.
Reference: [7] <author> G. Celniker and D. Gossard. </author> <title> Deformable curve and surface finite elements for free-form shape design. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 257-265, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: Curve and surface smoothing algorithms that minimize various energy norms have also been studied; these are surveyed in Hoschek and Lasser [16]. One example is the work of Celniker and Gossard <ref> [7] </ref>, in which a fairness functional is applied to hand-drawn curves, as well as to surfaces. The method we describe is really a least-squares type of smoothing, which is much simpler but supports continuous levels of smoothing that behaves quite reasonably and intuitively in practice.
Reference: [8] <author> C. K. Chui. </author> <title> An Introduction to Wavelets. </title> <publisher> Academic Press, Inc., </publisher> <address> Boston, </address> <year> 1992. </year>
Reference-contexts: Appendix A contains more details on the specific wavelets we use and their derivation. A similar construction has also been independently proposed by Chui and Quak [9]. Note that multiresolution constructions can be built for other types of splines as well, such as uniform B-splines <ref> [8] </ref>, and nonuniform B-splines with arbitrary knot sequences [21]. A recent construction applicable to subdivision surfaces is discussed by Lounsbery et al. [19].
Reference: [9] <author> C. K. Chui and E. Quak. </author> <title> Wavelets on a bounded interval. </title> <editor> In D. Braess and L. L. Schumaker, editors, </editor> <booktitle> Numerical Methods in Approximation Theory, </booktitle> <volume> volume 9, </volume> <pages> pages 53-75. </pages> <publisher> Birkhauser Verlag, </publisher> <address> Basel, </address> <year> 1992. </year>
Reference-contexts: We use the set of 2 j minimally-supported functions that span W j . Appendix A contains more details on the specific wavelets we use and their derivation. A similar construction has also been independently proposed by Chui and Quak <ref> [9] </ref>. Note that multiresolution constructions can be built for other types of splines as well, such as uniform B-splines [8], and nonuniform B-splines with arbitrary knot sequences [21]. A recent construction applicable to subdivision surfaces is discussed by Lounsbery et al. [19].
Reference: [10] <author> M. Dhlen and T. Lyche. </author> <title> Decomposition of splines. </title> <editor> In T. Lyche and L. L. Schumaker, editors, </editor> <booktitle> Mathematical Methods in Computer Aided Geometric Design II, </booktitle> <pages> pages 135-160. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: This extension would allow the techniques to be applied more readily to font design, among other applications. One approach is to try using the multiresolution analysis defined on non-uniform B-splines by Dhlen and Lyche <ref> [10] </ref>. Sparse representations. Our algorithms have so far used only complete wavelet decompositions of the curve's original control points.
Reference: [11] <author> R. DeVore, B. Jawerth, and B. Lucier. </author> <title> Image compression through wavelet transform coding. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 38(2) </volume> <pages> 719-746, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: we discuss the theory of wavelets and multiresolution analysis, and we show how it can be applied to representing endpoint-interpolating B-spline curves. 2.1 Wavelets and multiresolution analysis Wavelets are a simple mathematical tool that have found a wide variety of applications in recent years, including signal analysis [22], image processing <ref> [11] </ref>, and numerical analysis [6]. In this section, we sketch the basic ideas behind wavelets and multiresolution analysis. <p> Wavelet compression methods can therefore approximate the original set of samples in C n by storing only the significant coefficients of the wavelet transform. Impressive compression ratios have been reported for univariate signals as well as for images <ref> [11] </ref>. As suggested by the treatment above, all that is needed for performing a wavelet transform is an appropriate set of analysis and synthesis filters A j , B j , P j , and Q j .
Reference: [12] <author> G. Farin. </author> <title> Curves and Surfaces for Computer Aided Geometric Design. </title> <publisher> Academic Press, </publisher> <address> third edition, </address> <year> 1992. </year>
Reference-contexts: Such B-splines are commonly referred to as endpoint-interpolating cubic B-splines. These curves are discussed in detail in many texts on computer-aided design <ref> [4, 12, 16] </ref>. The multiresolution framework described in Section 2.1 is very general. To construct our multiresolution curves from endpoint-interpolating cubic B-splines, we need to make several choices, as enumerated below: 1. Choose the scaling functions j (u) for all j in [0; n]. <p> Surfaces. Another obvious extension of these techniques is to surfaces. As a test of multiresolution surface editing, we built a surface editor that allows a user to modify a bicubic tensor-product B-spline surface <ref> [4, 12, 16] </ref> at different levels of detail. Figure 11 shows several manipulations applied to a surface over 1225 control points modeling a human face. It is worth noting that tensor-product surfaces are limited in the kinds of shapes they can model seamlessly.
Reference: [13] <author> D. Forsey and R. Bartels. </author> <title> Hierarchical B-spline refinement. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 205-212, </pages> <year> 1988. </year>
Reference-contexts: Although the algorithms we describe compare favorably, in and of themselves, with most of this previous work, it is the convenience with which the multiresolution representation supports such a wide variety of operations that makes it so useful. Here we survey some of these previous techniques. Forsey and Bartels <ref> [13] </ref> employ hierarchical B-splines to address the problem of editing the overall form of a surface while maintaining its details. Their original formulation requires the user to design an explicit hierarchy into the model. <p> is easily performed at in teractive rates, even for curves with hundreds of control points. 4.1.1 Editing with direct manipulation The fractional-level editing described above can be easily extended to accommodate direct manipulation, in which the user tugs on the smoothed curve directly rather than on its defining control points <ref> [3, 13, 15, 18] </ref>. To use direct manipulation when editing at level j + t, we make use of the pseudo-inverse of the scaling functions at levels j and j + 1. <p> Original curve.Fixed xy-orientation.Detail relative to the tangent. versus orientation relative to the tangent of the curve. As an alternative, we employ a method similar to that of Forsey and Bar-tels <ref> [13] </ref> for representing detail with respect to the tangent and normal to the curve at a coarser level.
Reference: [14] <author> D. Forsey and R. Bartels. </author> <title> Tensor products and hierarchical fitting. In Curves and Surfaces in Computer Vision and Graphics II, </title> <booktitle> SPIE Proceedings Vol. </booktitle> <volume> 1610, </volume> <pages> pages 88-96, </pages> <year> 1991. </year>
Reference-contexts: Here we survey some of these previous techniques. Forsey and Bartels [13] employ hierarchical B-splines to address the problem of editing the overall form of a surface while maintaining its details. Their original formulation requires the user to design an explicit hierarchy into the model. In later work <ref> [14] </ref>, they describe a method for recursively fitting a hierarchical surface to a set of data by first fitting a coarse approximation and then refining in areas where the residual is large.
Reference: [15] <author> B. Fowler. </author> <title> Geometric manipulation of tensor product surfaces. </title> <booktitle> In Proceedings of the 1992 Symposium on Interactive 3D Graphics, </booktitle> <month> March </month> <year> 1992. </year> <note> Available as Computer Graphics, Vol. 26, No. 2. </note>
Reference-contexts: One significant difference is that in their formulation there are an infinite number of possible representations for the same surface, whereas the multiresolution curve representation is unique for a given shape. Fowler <ref> [15] </ref> and Witkin and Welch [28] also describe methods in which editing can be performed over narrower or broader regions of a surface; however, in neither of these works is there an attempt to preserve the higher-resolution detail beneath the edited region. <p> is easily performed at in teractive rates, even for curves with hundreds of control points. 4.1.1 Editing with direct manipulation The fractional-level editing described above can be easily extended to accommodate direct manipulation, in which the user tugs on the smoothed curve directly rather than on its defining control points <ref> [3, 13, 15, 18] </ref>. To use direct manipulation when editing at level j + t, we make use of the pseudo-inverse of the scaling functions at levels j and j + 1.
Reference: [16] <author> J. Hoschek and D. </author> <title> Lasser. Fundamentals of Computer Aided Geometric Design. A K Peters, </title> <publisher> Ltd., </publisher> <address> Wellesley, Massachusetts, third edition, </address> <year> 1992. </year>
Reference-contexts: Curve and surface smoothing algorithms that minimize various energy norms have also been studied; these are surveyed in Hoschek and Lasser <ref> [16] </ref>. One example is the work of Celniker and Gossard [7], in which a fairness functional is applied to hand-drawn curves, as well as to surfaces. <p> Such B-splines are commonly referred to as endpoint-interpolating cubic B-splines. These curves are discussed in detail in many texts on computer-aided design <ref> [4, 12, 16] </ref>. The multiresolution framework described in Section 2.1 is very general. To construct our multiresolution curves from endpoint-interpolating cubic B-splines, we need to make several choices, as enumerated below: 1. Choose the scaling functions j (u) for all j in [0; n]. <p> Surfaces. Another obvious extension of these techniques is to surfaces. As a test of multiresolution surface editing, we built a surface editor that allows a user to modify a bicubic tensor-product B-spline surface <ref> [4, 12, 16] </ref> at different levels of detail. Figure 11 shows several manipulations applied to a surface over 1225 control points modeling a human face. It is worth noting that tensor-product surfaces are limited in the kinds of shapes they can model seamlessly.
Reference: [17] <author> S. Hsu and I. Lee. </author> <title> Skeletal strokes. </title> <booktitle> Proceedings of SIGGRAPH 94. In Computer Graphics, Annual Conference Series, </booktitle> <year> 1994. </year>
Reference-contexts: Textured strokes. For illustrations, it is useful to associate other properties with curves, such as color, thickness, texture, and transparency, as demon strated by Hsu and Lee <ref> [17] </ref>. These quantities may be considered extra dimensions in the data associated with each control point. Much of the machinery for multiresolution editing should be applicable to such curves. As a preliminary test of this idea, we have extended our curve editor with a thickness dimension.
Reference: [18] <author> W. M. Hsu, J. F. Hughes, and H. Kaufman. </author> <title> Direct manipulation of free-form deformations. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 177-184, </pages> <year> 1992. </year>
Reference-contexts: is easily performed at in teractive rates, even for curves with hundreds of control points. 4.1.1 Editing with direct manipulation The fractional-level editing described above can be easily extended to accommodate direct manipulation, in which the user tugs on the smoothed curve directly rather than on its defining control points <ref> [3, 13, 15, 18] </ref>. To use direct manipulation when editing at level j + t, we make use of the pseudo-inverse of the scaling functions at levels j and j + 1.
Reference: [19] <author> M. Lounsbery, T. DeRose, and J. Warren. </author> <title> Multiresolution surfaces of arbitrary topological type. </title> <type> Technical Report 93-10-05B, </type> <institution> University of Washington, Department of Computer Science and Engineering, </institution> <month> Jan-uary </month> <year> 1994. </year>
Reference-contexts: In this section, we sketch the basic ideas behind wavelets and multiresolution analysis. Rather than presenting the classical multiresolution analysis developed by Mallat [22], we present here a slightly generalized version of the theory, following Lounsbery et al. <ref> [19] </ref>, that is more convenient for our application of representing open curves. 1 Consider a discrete signal C n , expressed as a column vector of samples [c n m ] . <p> Note that multiresolution constructions can be built for other types of splines as well, such as uniform B-splines [8], and nonuniform B-splines with arbitrary knot sequences [21]. A recent construction applicable to subdivision surfaces is discussed by Lounsbery et al. <ref> [19] </ref>. Note that because both the scaling functions and wavelets in our construction have compact support, the synthesis filters P j and Q j have a banded structure, allowing reconstruction in O (m) time. <p> Figure 11 shows several manipulations applied to a surface over 1225 control points modeling a human face. It is worth noting that tensor-product surfaces are limited in the kinds of shapes they can model seamlessly. Lounsbery et al. <ref> [19] </ref> discuss a multiresolution representation for subdivision surfaces of arbitrary topology. Many of the techniques described in this paper should extend directly to their surfaces as well. In particular, fractional-level display and editing are applicable in the same way as for curves and tensor-product surfaces.
Reference: [20] <author> T. Lyche and K. Mtrken. </author> <title> Knot removal for parametric B-spline curves and surfaces. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <volume> 4(3) </volume> <pages> 217-230, </pages> <year> 1987. </year>
Reference-contexts: The method we describe is really a least-squares type of smoothing, which is much simpler but supports continuous levels of smoothing that behaves quite reasonably and intuitively in practice. Many schemes for approximating curves within specified error tolerances have also been explored <ref> [2, 20, 23, 27] </ref>. Most of this research has centered on various forms of knot removal for representing curves efficiently with non-uniform B-splines.
Reference: [21] <author> T. Lyche and K. Mtrken. </author> <title> Spline-wavelets of minimal support. </title> <editor> In D. Braess and L. L. Schumaker, editors, </editor> <booktitle> Numerical Methods in Approximation Theory, </booktitle> <volume> volume 9, </volume> <pages> pages 177-194. </pages> <publisher> Birkhauser Verlag, </publisher> <address> Basel, </address> <year> 1992. </year>
Reference-contexts: A similar construction has also been independently proposed by Chui and Quak [9]. Note that multiresolution constructions can be built for other types of splines as well, such as uniform B-splines [8], and nonuniform B-splines with arbitrary knot sequences <ref> [21] </ref>. A recent construction applicable to subdivision surfaces is discussed by Lounsbery et al. [19]. Note that because both the scaling functions and wavelets in our construction have compact support, the synthesis filters P j and Q j have a banded structure, allowing reconstruction in O (m) time.
Reference: [22] <author> S. Mallat. </author> <title> A theory for multiresolution signal decomposition: The wavelet representation. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 11(7) </volume> <pages> 674-693, </pages> <month> July </month> <year> 1989. </year>
Reference-contexts: In this section, we discuss the theory of wavelets and multiresolution analysis, and we show how it can be applied to representing endpoint-interpolating B-spline curves. 2.1 Wavelets and multiresolution analysis Wavelets are a simple mathematical tool that have found a wide variety of applications in recent years, including signal analysis <ref> [22] </ref>, image processing [11], and numerical analysis [6]. In this section, we sketch the basic ideas behind wavelets and multiresolution analysis. Rather than presenting the classical multiresolution analysis developed by Mallat [22], we present here a slightly generalized version of the theory, following Lounsbery et al. [19], that is more convenient <p> are a simple mathematical tool that have found a wide variety of applications in recent years, including signal analysis <ref> [22] </ref>, image processing [11], and numerical analysis [6]. In this section, we sketch the basic ideas behind wavelets and multiresolution analysis. Rather than presenting the classical multiresolution analysis developed by Mallat [22], we present here a slightly generalized version of the theory, following Lounsbery et al. [19], that is more convenient for our application of representing open curves. 1 Consider a discrete signal C n , expressed as a column vector of samples [c n m ] .
Reference: [23] <author> M. Plass and M. Stone. </author> <title> Curve-fitting with piecewise parametric cubics. </title> <journal> Computer Graphics, </journal> <volume> 17(3) </volume> <pages> 229-239, </pages> <month> July </month> <year> 1983. </year>
Reference-contexts: The method we describe is really a least-squares type of smoothing, which is much simpler but supports continuous levels of smoothing that behaves quite reasonably and intuitively in practice. Many schemes for approximating curves within specified error tolerances have also been explored <ref> [2, 20, 23, 27] </ref>. Most of this research has centered on various forms of knot removal for representing curves efficiently with non-uniform B-splines.
Reference: [24] <author> W. H. Press, B. P. Flannery, S. A. Teukolsky, and W. T. Fetterling. </author> <title> Numerical Recipes. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <note> second edition, </note> <year> 1992. </year>
Reference: [25] <author> E. Quak and N. Weyrich. </author> <title> Decomposition and reconstruction algorithms for spline wavelets on a bounded interval. </title> <type> CAT Report 294, </type> <institution> Center for Approximation Theory, Texas A&M University, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: However, a potential weakness of our construction is that the analysis filters A j and B j are dense, which would seem to imply an O (m 2 )-time decomposition algorithm. Fortunately, there is a clever trick, due to Quak and Weyrich <ref> [25] </ref>, for performing the decomposition in linear time.
Reference: [26] <author> M. P. Salisbury, S. E. Anderson, R. Barzel, and D. H. Salesin. </author> <title> Interactive pen-and-ink illustration. </title> <booktitle> Proceedings of SIGGRAPH 94. In Computer Graphics, Annual Conference Series, </booktitle> <year> 1994. </year>
Reference-contexts: Figure 6 demonstrates how the character of curves in an illustration can be modified with the same (or different) detail styles. The interactive illustration system used to create this figure is described in a separate paper <ref> [26] </ref>. 4.3 Orientation of detail A parametric curve in two dimensions is most naturally represented as two separate functions, one in x and one in y: f (u) = (f x (u); f y (u)).
Reference: [27] <author> P. J. Schneider. </author> <title> Phoenix: An interactive curve design system based on the automatic fitting of hand-sketched curves. </title> <type> Master's thesis, </type> <institution> Department of Computer Science and Engineering, University of Washing-ton, </institution> <year> 1988. </year>
Reference-contexts: The method we describe is really a least-squares type of smoothing, which is much simpler but supports continuous levels of smoothing that behaves quite reasonably and intuitively in practice. Many schemes for approximating curves within specified error tolerances have also been explored <ref> [2, 20, 23, 27] </ref>. Most of this research has centered on various forms of knot removal for representing curves efficiently with non-uniform B-splines. <p> The issue of finding the parameter value u 0 at which the curve passes closest to the selection point is a well-studied problem in root-finding, which can be handled in a number of ways <ref> [27] </ref>. In our implementation, we scan-convert the curve once to find its parameter value at every illuminated pixel. This approach is easy to implement, and appears to provide a good trade-off between speed and accuracy for an interactive system.
Reference: [28] <author> W. Welch and A. Witkin. </author> <title> Variational surface modeling. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 157-166, </pages> <year> 1992. </year>
Reference-contexts: One significant difference is that in their formulation there are an infinite number of possible representations for the same surface, whereas the multiresolution curve representation is unique for a given shape. Fowler [15] and Witkin and Welch <ref> [28] </ref> also describe methods in which editing can be performed over narrower or broader regions of a surface; however, in neither of these works is there an attempt to preserve the higher-resolution detail beneath the edited region.
References-found: 28

