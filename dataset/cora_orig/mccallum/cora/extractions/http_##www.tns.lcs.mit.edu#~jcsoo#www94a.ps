URL: http://www.tns.lcs.mit.edu/~jcsoo/www94a.ps
Refering-URL: http://www.tns.lcs.mit.edu/~jcsoo/bio.html
Root-URL: 
Title: Live Multimedia over HTTP  
Author: Jonathan C. Soo 
Address: Cambridge, MA 02139  
Affiliation: Telemedia, Networks and Systems Group MIT Laboratory for Computer Science  
Abstract: The World Wide Web is currently not well oriented towards distributing stream-oriented media such as audio and video. The limitation is not in HTTP [2] itself, but in currently existing browsers. After opening an HTTP connection to a server, most browsers write all data to a local file before passing it to an external viewer. While this works well for text and graphics, it makes viewing stream-oriented media impractical because of the long delay before start of playback, and because the entire file must be stored on the local host. In addition, it is not possible to send "live" streams of data. This paper describes a prototype browser designed to solve some of these problems. It supports a subset of HTTP 1.0. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Rob McCool, </author> <title> "The Common Gateway Interface", National Center for Supercomputer Applications. </title>
Reference-contexts: For live media, however, some scripts are neccesary to run the live media capture applications. 3.3.1 The Common Gateway Interface Both the NCSA and CERN HTTP servers have a sub-application interface known as the Common Gateway Interface (CGI) <ref> [1] </ref>. This interface provides a standard way of passing details of HTTP transactions to sub-applications. Two slightly different variants exist on each server. A regular CGI script needs only to write a short content-type header before sending data to the client.
Reference: [2] <author> Tim Berners-Lee, </author> <title> "HyperText Transfer Protocol Requirements", European Laboratory for Particle Physics. </title>
Reference: [3] <author> Tennenhouse, David L. et al., </author> <title> "A Software Oriented Approach to the Design of Media Processing Environments", </title> <booktitle> Proceedings of the International Conference on Multimedia Computing and Systems, </booktitle> <pages> pp. </pages> <month> 435-444,May </month> <year> 1994. </year>
Reference-contexts: The browser currently supports most of the common content-types typically found on the Web, including text/plain and text/html, image/tiff, image/jpeg and image/gif, audio/basic, and video/mpeg. In addition, it supports VuSystem <ref> [3] </ref> streams, which are interleaved audio, video, and text streams used in the MIT TNS VuSystem project. 3.3 Server At the server side, no modifications are needed for sending existing files.
Reference: [4] <author> J. K. Ousterhout, </author> <title> "Tcl: An Embedded Command Language,", </title> <institution> Computer Science Division (EECS), University of California, Berkeley, </institution> <address> CA, </address> <month> January </month> <year> 1990. </year> <title> About the Author Jonathan Soo is a M.Eng. student in the Telemedia, Networks, and Systems Group at the MIT Laboratory for Computer Science. He is interested in the applications of distributed systems, and the of the tools that enable them. He was an undergraduate at MIT, and is a vice president and founder of Agora Technology Group, </title> <institution> Inc. </institution> <note> He is reachable at jcsoo@mit.edu </note>
Reference-contexts: The HTTP library implements a subset of HTTP, and the browser supports several of the common data types found on the Web, and several common sub-applications used to view those types. The language platform that was chosen was TCL 7.3b <ref> [4] </ref>, with the TCL-DP networking extensions and some C extensions to handle HTTP header parsing. The computing platform was a DEC Alpha running OSF/1 1.2.
References-found: 4

