URL: http://http.icsi.berkeley.edu/~luby/PAPERS/speedup.ps
Refering-URL: http://http.icsi.berkeley.edu/~luby/optsim.html
Root-URL: http://http.icsi.berkeley.edu
Email: sin-clair@icsi.berkeley.edu.  diz@theory.lcs.mit.edu.  
Title: Optimal Speedup of Las Vegas Algorithms  
Author: Michael Luby Alistair Sinclair David Zuckerman 
Keyword: Design of algorithms, randomized algorithms, Las Ve-gas algorithms, expected running time, optimal strategy, proof search, theorem-proving.  
Note: Research supported in part by grant GR/F 90363 of the UK Science and Engineering Research Council and by Esprit Working  Research supported by an NSF Postdoctoral Fellowship.  
Address: Edinburgh, Scotland. Current address:  1947 Center Street, Berkeley CA 94704,  Current address:  545 Technology Square, Cambridge MA 02139,  
Affiliation: ICSI, Berkeley and University of  International Computer Science Institute,  Group "RAND." Laboratory for Computer Science, MIT.  MIT Laboratory for Computer Science,  
Date: February 1993 (revised June 1993)  
Abstract: Let A be a Las Vegas algorithm, i.e., A is a randomized algorithm that always produces the correct answer when it stops but whose running time is a random variable. We consider the problem of minimizing the expected time required to obtain an answer from A using strategies which simulate A as follows: run A for a fixed amount of time t 1 , then run A independently for a fixed amount of time t 2 , etc. The simulation stops if A completes its execution during any of the runs. Let S = (t 1 ; t 2 ; : : :) be a strategy, and let ` A = inf S T (A; S), where T (A; S) is the expected value of the running time of the simulation of A under strategy S . We describe a simple universal strategy S univ , with the property that, for any algorithm A , T (A; S univ ) = O(` A log(` A )) . Furthermore, we show that this is the best performance that can be achieved, up to a constant factor, by any universal strategy. y A preliminary version of this paper appeared in Proceedings of the 2nd Israel Symposium on Theory of Computing and Systems, Jerusalem, June 1993. z ICSI and UC Berkeley. Current address: International Computer Science Institute, 1947 Center Street, Berkeley CA 94704, luby@icsi.berkeley.edu. Research supported in part by NSF Grant CCR-9016468 and grant No. 89-00312 from the United States-Israel Binational Science Foundation (BSF), Jerusalem, Israel. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Helmut Alt, Leo Guibas, Kurt Mehlhorn, Richard Karp, and Avi Wigderson. </author> <title> A method for obtaining randomized algorithms with small tail probabilities. </title> <type> Technical Report TR-91-057, </type> <institution> International Computer Science Institute, Berkeley, </institution> <month> September </month> <year> 1991. </year>
Reference-contexts: Of course, our results apply equally to any Las Vegas algorithm. This paper is similar in spirit to recent work of Alt et al <ref> [1] </ref>, who consider simulation strategies for Las Vegas algorithms with the goal of minimizing the tail probability of the simulation, i.e., the probability that the simulation runs for more than t steps. <p> Although tail probabilities are not the main focus of this paper, it turns out that our universal strategy achieves tail probabilities that are in many cases stronger than those obtained in <ref> [1] </ref>, and in no case qualitatively weaker. In both papers, the tail probability is essentially of the form exp (t=ff) , but in [1] ff is given in terms of the expectation E [T A (x)] , whereas in our paper it is given in terms of the quantity ` A <p> not the main focus of this paper, it turns out that our universal strategy achieves tail probabilities that are in many cases stronger than those obtained in <ref> [1] </ref>, and in no case qualitatively weaker. In both papers, the tail probability is essentially of the form exp (t=ff) , but in [1] ff is given in terms of the expectation E [T A (x)] , whereas in our paper it is given in terms of the quantity ` A (x) , which is never larger than E [T A (x)] . (For the precise bounds, see Theorem 6 in Section 3.) In <p> From the above proof, we also immediately obtain the following exponential tail bound on the running time of S univ . Theorem 6 The probability that S univ runs for more than t steps is at most expft=64` p log (t)g: (13) Remark: In a recent paper <ref> [1] </ref>, Alt et al study strategies for minimizing the tail probability in simulations of Las Vegas algorithms.
Reference: [2] <author> Wolfgang Ertel. </author> <title> OR-Parallel Theorem Proving with Random Competition. </title> <booktitle> Proceedings of Logic Programming and Automated Reasoning, </booktitle> <address> St. Petersburg, </address> <month> July </month> <year> 1992, </year> <booktitle> Springer Lecture Notes in AI Vol. </booktitle> <volume> 624, </volume> <pages> pp. 226-237. 12 </pages>
Reference-contexts: Our interest in these questions was stimulated by the practical application to theorem proving described in <ref> [2] </ref>. In this case, the Las Vegas algorithm A (x) consists of random search of a (highly unbalanced) tree to find a proof of a conjectured theorem x . [2] describes some real-life examples of such searches, in which the distribution of the running time of A (x) is wildly erratic. <p> Our interest in these questions was stimulated by the practical application to theorem proving described in <ref> [2] </ref>. In this case, the Las Vegas algorithm A (x) consists of random search of a (highly unbalanced) tree to find a proof of a conjectured theorem x . [2] describes some real-life examples of such searches, in which the distribution of the running time of A (x) is wildly erratic.
References-found: 2

