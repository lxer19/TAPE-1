URL: ftp://ftp.cs.man.ac.uk/pub/cbj/esopsem.ps.gz
Refering-URL: http://www.cs.man.ac.uk/fmethods/projects/pobl-development-method.html
Root-URL: http://www.cs.man.ac.uk
Title: Some practical problems and their influence on semantics  assessment  
Author: Cliff B Jones preach COOLs 
Note: other challenges conclusions ESOP'96 1996-04-22  
Affiliation: Manchester University  
Abstract-found: 0
Intro-found: 0
Reference: [Bes93] <editor> E. Best, editor. CONCUR'93: </editor> <booktitle> 4th International Conference on Concurrency Theory, volume 715 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference: [GJ96] <author> J. R. Gurd and C. B. Jones. </author> <title> The global-yet-personalinformationsystem. In Computing Tomorrow. </title> <publisher> Cambridge University Press, </publisher> <year> 1996. </year>
Reference-contexts: : [ [ p ()] = ! r ! ( x ) : t ( n ] ( ) ( ff n ( b ) Other challenges for semantics * (ofi deepens understanding of concurrency) * fault-tolerant systems * database transaction scheduling * cache memory * `interfaces' * GyPsIS (cf. <ref> [GJ96] </ref>) * Java * scene description languages * languages for robot control * VRML * multi-media systems (Premo) * evolutionary systems * No! not just any old mess: but let's try to influence before it's too late! * models of the mind! * ... * take own medicine 43 Conclusions: point
Reference: [HT91] <author> K. Honda and M. Tokoro. </author> <title> A small calculus for concurrent objects. </title> <journal> ACM, OOPS Messenger, </journal> <volume> 2(2) </volume> <pages> 50-54, </pages> <year> 1991. </year>
Reference-contexts: confluence of S k return (e) fails to extend to delegate 36 Mapping ofi to the -calculus * polyadic (first-order) -calculus * map values (B ) * composite statements * simple classes ) * reference values * values (N ) * informal proofs of ofi equivalences (cf. [Jon94]) * compare: <ref> [Wal91, Jon93, HT91, Wal93] </ref> 37 Simple classes For example Bit class vars v false w : ) method v x return r method return v Bit ] ] ! ( ) ( bit I e ff I e ff ( ) ( V B ) = t ) ( t f
Reference: [IM91] <editor> T. Ito and A. R. Meyer, editors. </editor> <booktitle> TACS'91 Proceedings of the International Conference on Theoretical Aspects of Computer Science, Sendai, Japan, volume 526 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference: [Jon93] <author> C. B. Jones. </author> <title> A pi-calculus semantics for an object-based design notation. </title> <booktitle> In [Bes93], </booktitle> <pages> pages 158-172, </pages> <year> 1993. </year>
Reference-contexts: confluence of S k return (e) fails to extend to delegate 36 Mapping ofi to the -calculus * polyadic (first-order) -calculus * map values (B ) * composite statements * simple classes ) * reference values * values (N ) * informal proofs of ofi equivalences (cf. [Jon94]) * compare: <ref> [Wal91, Jon93, HT91, Wal93] </ref> 37 Simple classes For example Bit class vars v false w : ) method v x return r method return v Bit ] ] ! ( ) ( bit I e ff I e ff ( ) ( V B ) = t ) ( t f
Reference: [Jon94] <author> C. B. Jones. </author> <title> Process algebra arguments about an object-based design notation. </title> <booktitle> In [Ros94], chapter 14, </booktitle> <pages> pages 231-246. </pages> <year> 1994. </year>
Reference-contexts: domains * alternative confluence of S k return (e) fails to extend to delegate 36 Mapping ofi to the -calculus * polyadic (first-order) -calculus * map values (B ) * composite statements * simple classes ) * reference values * values (N ) * informal proofs of ofi equivalences (cf. <ref> [Jon94] </ref>) * compare: [Wal91, Jon93, HT91, Wal93] 37 Simple classes For example Bit class vars v false w : ) method v x return r method return v Bit ] ] ! ( ) ( bit I e ff I e ff ( ) ( V B ) = t )
Reference: [Jon96] <author> C. B. Jones. </author> <title> Accommodating interference in the formal design of concurrent object-based programs. </title> <booktitle> Formal Methods in System Design, </booktitle> <volume> 8(2) </volume> <pages> 105-122, </pages> <year> 1996. </year>
Reference-contexts: * `reward structure' encourages new theories * undervalue establishing usefulness few second generation FM books - cf. other applied maths (e.g. fluid dynamics)! * we are defining the structure of a science let it be Computer Science * foils available: ftp.cs.man.ac.uk under: pub/cbj/esopsem.ps.Z * papers available: ftp.cs.man.ac.uk - pub/cbj/kluwer.ps.Z (for <ref> [Jon96] </ref>) - pub/cbj/esop96.ps.Z (for paper covering this seminar) - pub/cbj/hojo.ps.Z (for a draft of the SOS proof)
Reference: [Ros94] <editor> A. W. Roscoe, editor. </editor> <title> A Classical Mind: Essays in Honour of C. </title> <editor> A. R. Hoare. </editor> <publisher> Prentice-Hall, </publisher> <year> 1994. </year>
Reference: [Wal91] <author> D. Walker. </author> <title> -calculus semantics for object-oriented programming languages. </title> <booktitle> In [IM91], </booktitle> <pages> pages 532-547, </pages> <year> 1991. </year>
Reference-contexts: confluence of S k return (e) fails to extend to delegate 36 Mapping ofi to the -calculus * polyadic (first-order) -calculus * map values (B ) * composite statements * simple classes ) * reference values * values (N ) * informal proofs of ofi equivalences (cf. [Jon94]) * compare: <ref> [Wal91, Jon93, HT91, Wal93] </ref> 37 Simple classes For example Bit class vars v false w : ) method v x return r method return v Bit ] ] ! ( ) ( bit I e ff I e ff ( ) ( V B ) = t ) ( t f
Reference: [Wal93] <author> D. Walker. </author> <title> Process calculus and parallel object-oriented programming languages. </title> <editor> In In T. Casavant (ed), </editor> <title> Parallel Computers: </title> <journal> Theory and Practice. Computer Society Press, </journal> <note> to appear, </note> <year> 1993. </year>
Reference-contexts: confluence of S k return (e) fails to extend to delegate 36 Mapping ofi to the -calculus * polyadic (first-order) -calculus * map values (B ) * composite statements * simple classes ) * reference values * values (N ) * informal proofs of ofi equivalences (cf. [Jon94]) * compare: <ref> [Wal91, Jon93, HT91, Wal93] </ref> 37 Simple classes For example Bit class vars v false w : ) method v x return r method return v Bit ] ] ! ( ) ( bit I e ff I e ff ( ) ( V B ) = t ) ( t f
References-found: 10

