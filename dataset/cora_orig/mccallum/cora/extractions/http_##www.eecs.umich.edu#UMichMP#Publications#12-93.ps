URL: http://www.eecs.umich.edu/UMichMP/Publications/12-93.ps
Refering-URL: http://www.eecs.umich.edu/UMichMP/abstracts.html
Root-URL: http://www.cs.umich.edu
Title: Gallium Arsenide Process Evaluation Based on a RISC Microprocessor Example  
Author: R. B. Brown, Senior Member, M. Upton Student Member, A. Chandna Student Member, T. R. Huff Student Member, T. N. Mudge Senior Member, and R. E. Oettel Member 
Address: Michigan, Ann Arbor, Michigan 48109-2122.  
Affiliation: Department of Electrical Engineering and Computer Science, University of  
Note: R. E. Oettel is with Cascade Design Automation, Bellevue, Washington 98006. The other authors are with the  
Abstract: This work evaluates the features of a gallium arsenide E/D MESFET process in which a 32-bit RISC microprocessor was implemented. The design methodology and architecture of this prototype CPU are described. The performance sensitivity of the microprocessor and other large circuit blocks to different process parameters is analyzed, and recommendations for future process features, circuit approaches, and layout styles are made. These recommendations are reflected in the design of a second microprocessor using a more advanced process that achieves much higher density and performance. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> "The GaAs Supercomputer Challenge," Electronic Engineering Times, </institution> <month> Jan 20, </month> <year> 1992, </year> <pages> pp. 39-44. </pages>
Reference-contexts: Early fabrication challenges, limited integration levels, and poor load-driving capability compared to bipolar technologies also hindered the acceptance of GaAs. Only recently has the promise for high-speed VLSI in gallium arsenide begun to be fulfilled, with direct-coupled FET logic (DCFL) circuits now being delivered in supercomputers <ref> [1, 2, 3, 4] </ref>, signal processors [5, 6], and telecommunication systems [7]. In terms of circuit density, flexibility, and compatibility with other system components, silicon logic families definitely have advantages over DCFL.
Reference: [2] <institution> VPP500 Vector Parallel Processor (BP0009-1M), Fujitsu Limited, </institution> <address> Tokyo, Japan, </address> <month> Sept. </month> <year> 1992. </year>
Reference-contexts: Early fabrication challenges, limited integration levels, and poor load-driving capability compared to bipolar technologies also hindered the acceptance of GaAs. Only recently has the promise for high-speed VLSI in gallium arsenide begun to be fulfilled, with direct-coupled FET logic (DCFL) circuits now being delivered in supercomputers <ref> [1, 2, 3, 4] </ref>, signal processors [5, 6], and telecommunication systems [7]. In terms of circuit density, flexibility, and compatibility with other system components, silicon logic families definitely have advantages over DCFL.
Reference: [3] <author> Dave Kiefer and John Heightley, "CRAY3: </author> <title> A GaAs Implemented Supercomputer System," </title> <booktitle> Proc. 1987 IEEE GaAs IC Symp., </booktitle> <pages> pp. 3-6. </pages>
Reference-contexts: Early fabrication challenges, limited integration levels, and poor load-driving capability compared to bipolar technologies also hindered the acceptance of GaAs. Only recently has the promise for high-speed VLSI in gallium arsenide begun to be fulfilled, with direct-coupled FET logic (DCFL) circuits now being delivered in supercomputers <ref> [1, 2, 3, 4] </ref>, signal processors [5, 6], and telecommunication systems [7]. In terms of circuit density, flexibility, and compatibility with other system components, silicon logic families definitely have advantages over DCFL.
Reference: [4] <author> R. Alverson, D. Callahan, D. Cummings, B. Koblenz, A. Porterfield, and B. Smith, </author> <title> "The Tera Computer System," </title> <booktitle> 1990 ACM International Conference on Supercomputing, </booktitle> <month> June 11-15, </month> <year> 1990. </year>
Reference-contexts: Early fabrication challenges, limited integration levels, and poor load-driving capability compared to bipolar technologies also hindered the acceptance of GaAs. Only recently has the promise for high-speed VLSI in gallium arsenide begun to be fulfilled, with direct-coupled FET logic (DCFL) circuits now being delivered in supercomputers <ref> [1, 2, 3, 4] </ref>, signal processors [5, 6], and telecommunication systems [7]. In terms of circuit density, flexibility, and compatibility with other system components, silicon logic families definitely have advantages over DCFL.
Reference: [5] <author> Marc Rocchi, </author> <title> High-Speed Digital IC Technologies, </title> <publisher> Artech House Inc., </publisher> <address> Norwood, MA, </address> <year> 1990. </year>
Reference-contexts: Only recently has the promise for high-speed VLSI in gallium arsenide begun to be fulfilled, with direct-coupled FET logic (DCFL) circuits now being delivered in supercomputers [1, 2, 3, 4], signal processors <ref> [5, 6] </ref>, and telecommunication systems [7]. In terms of circuit density, flexibility, and compatibility with other system components, silicon logic families definitely have advantages over DCFL.
Reference: [6] <author> Val Peterson, </author> <title> "Applications of GaAs IC's in Instruments," </title> <booktitle> GaAs IC Symposium Technical Digest, </booktitle> <pages> pp. 191-194, </pages> <month> November 6-9, </month> <year> 1988. </year> <title> [7] 1992 Product Data Book, </title> <institution> Vitesse Semiconductor Corporation, </institution> <address> Camarillo, CA, </address> <year> 1992. </year>
Reference-contexts: Only recently has the promise for high-speed VLSI in gallium arsenide begun to be fulfilled, with direct-coupled FET logic (DCFL) circuits now being delivered in supercomputers [1, 2, 3, 4], signal processors <ref> [5, 6] </ref>, and telecommunication systems [7]. In terms of circuit density, flexibility, and compatibility with other system components, silicon logic families definitely have advantages over DCFL.
Reference: [8] <editor> EPOCH Designer's Handbook, Bellevue, </editor> <booktitle> WA, Cascade Design Automation, </booktitle> <year> 1992. </year>
Reference-contexts: These recommendations are reflected in the design of a second microprocessor using a more advanced E/D MESFET process that achieves much higher density and performance. 2 Design Methodology Our microprocessors have been designed with a GaAs circuit compiler <ref> [8] </ref> which produces layouts that have physical datapaths organized as one would in a handcrafted design, minimizing chip area and total interconnect length compared to standard cellor array-based methodologies. <p> Such an adder has 10 levels of logic, compared to 14 levels in a conventional 4-bit CLA approach. The control consists of separate blocks for each of the five pipeline stages. A behavioral description for each of these blocks was translated into the CAD tools for logic synthesis <ref> [8] </ref>. The tools create an optimized multilevel gate representation using a technology-specific library [17] to generate the corresponding layout. <p> The control blocks are different circuits (bypass logic in one case and stall logic in the other), but they are about the same size, and both are implemented in standard cells using the same logic synthesis tool <ref> [8] </ref>. The register files in Table 3 are both 32-wordfi32-bit, three-port, tree-decoded, pass-gate latch implementations, which differ only in buffering. The density numbers for the CPUs include all of the unoccupied space in the pad frame | there is actually more of it in the 4-metal version.
Reference: [9] <author> D. E. Thomas and P. Moorby, </author> <title> The Verilog Hardware Description Language, </title> <address> Dordrecht, The Nether-lands, Klewer, </address> <year> 1991. </year>
Reference-contexts: We enter the design in a mixed behavioral/structural hardware description language (HDL) <ref> [9] </ref>, which is one of several input formats available for the CAD tools. An interface package converts the HDL description into an internal netlist and partitions the design into structural and behavioral blocks. The structural blocks are implemented as datapaths and the behavioral blocks are synthesized and implemented as standard-cells.
Reference: [10] <author> O. A. Olukotun, R. B. Brown, R. J. Lomax, T. N. Mudge and K. A. Sakallah, </author> <title> "Multilevel Optimization in the Design of a High-Performance GaAs Microcomputer," </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> Vol. 26, No. 5, </volume> <pages> pp. 763-767, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: In the design of this CPU, we considered the strengths and limitations of DCFL technology not only in circuit design, but also at the architectural level <ref> [10] </ref>. The architecture was based on a commercial instruction set architecture [11], but many changes were made to better fit GaAs DCFL [12]. For example: 3 Fig. 2: : Microprocessor pipeline representation, showing (shaded area) activity of pipeline during 1 clock. * Shared memory data and address buses were separated.
Reference: [11] <author> Gerry Kane, </author> <title> MIPS RISC Architecture, </title> <address> Englewood Cliffs, NJ., </address> <publisher> Prentice-Hall Inc., </publisher> <year> 1988. </year>
Reference-contexts: of Fig. 1 shows that this processor is a minimal RISC implementation, consisting of a 3-port register file, an arithmetic-logic unit, an instruction-decode/control section, a program counter section, and the necessary latches and multiplexors to implement a 5-stage pipeline, such as is used in several of the common RISC architectures <ref> [11] </ref>. The pipeline stages (see Fig. 2) are instruction fetch (I), register file access (R), ALU (A), data cache read / write (D), and register file write-back (W). <p> In the design of this CPU, we considered the strengths and limitations of DCFL technology not only in circuit design, but also at the architectural level [10]. The architecture was based on a commercial instruction set architecture <ref> [11] </ref>, but many changes were made to better fit GaAs DCFL [12]. For example: 3 Fig. 2: : Microprocessor pipeline representation, showing (shaded area) activity of pipeline during 1 clock. * Shared memory data and address buses were separated.
Reference: [12] <author> T. N. Mudge, R. B. Brown, W. P. Birmingham, J. A. Dykstra, A. I. Kayssi, R. J. Lomax, O. A. Oluko-tun, K. A. Sakallah, and R. Milano, </author> <title> "The Design of a Micro-Supercomputer," </title> <journal> IEEE Computer, </journal> <volume> Vol. 24, No. 1, </volume> <pages> pp. 57-64, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: In the design of this CPU, we considered the strengths and limitations of DCFL technology not only in circuit design, but also at the architectural level [10]. The architecture was based on a commercial instruction set architecture [11], but many changes were made to better fit GaAs DCFL <ref> [12] </ref>. For example: 3 Fig. 2: : Microprocessor pipeline representation, showing (shaded area) activity of pipeline during 1 clock. * Shared memory data and address buses were separated.
Reference: [13] <author> O. A. Olukotun, T. N. Mudge, and R. B. Brown, </author> <title> "Cache Architectures for a High-Performance GaAs Microprocessor," </title> <booktitle> Proceedings of the 18th International Symposium on Computer Architecture, Toronto, </booktitle> <pages> pp. 138-147, </pages> <month> May 27-30, </month> <year> 1991. </year>
Reference-contexts: A GaAs CPU needs all of the bus bandwidth for just the instruction cache. * The single-level cache was changed to a two-level system with a direct-mapped primary cache <ref> [13, 14] </ref>. * Integer multiply and divide functions were pushed into the floating-point accelerator (which has a parallel multiplier) to better utilize transistor resources; this improves performance. * Byte operations were not implemented; this allows the use of simple word-based SRAMs without requiring a read-modify-write operation. * And the data format
Reference: [14] <author> Kunle Olukotun, Trevor Mudge, and Richard Brown, </author> <title> "Performance Optimization of Pipelined Primary Caches," </title> <booktitle> Proceedings of the 19th International Symposium on Computer Architecture, </booktitle> <address> Gold Coast, Australia, </address> <pages> pp. 181-190, </pages> <month> May 19-21, </month> <year> 1992. </year>
Reference-contexts: A GaAs CPU needs all of the bus bandwidth for just the instruction cache. * The single-level cache was changed to a two-level system with a direct-mapped primary cache <ref> [13, 14] </ref>. * Integer multiply and divide functions were pushed into the floating-point accelerator (which has a parallel multiplier) to better utilize transistor resources; this improves performance. * Byte operations were not implemented; this allows the use of simple word-based SRAMs without requiring a read-modify-write operation. * And the data format
Reference: [15] <author> H. Ling, </author> <title> "High Speed Binary Adder," </title> <journal> IBM Journal of Research and Development, </journal> <volume> 25(3), pp.156-166, </volume> <month> May </month> <year> 1981. </year>
Reference-contexts: A register file write is performed by decoding the write address into 31 write lines, one for each address. Register 0 is hardwired to always contain 0. The adder design is based on the approach developed by Ling <ref> [15] </ref> to take advantage of the wire-OR capability of ECL. The Ling adder carry signal is easier to generate and simpler to propagate than that of conventional adders [16]; this benefit also accrues in a GaAs DCFL implementation.
Reference: [16] <author> N. Quach and M. Flynn, </author> <title> "High-Speed Addition in CMOS," </title> <type> Technical Report CSL-TR-90-415, </type> <institution> Stanford University, </institution> <month> February </month> <year> 1990. </year>
Reference-contexts: Register 0 is hardwired to always contain 0. The adder design is based on the approach developed by Ling [15] to take advantage of the wire-OR capability of ECL. The Ling adder carry signal is easier to generate and simpler to propagate than that of conventional adders <ref> [16] </ref>; this benefit also accrues in a GaAs DCFL implementation. The simpler carry is not without cost, however; the sum logic becomes more complicated. The added complexity in the sum generation can be hidden using a carry select method.
Reference: [17] <institution> Foundry Design Manual Version 5.0, Vitesse Semiconductor Corporation, </institution> <address> Camarillo, CA, </address> <year> 1991. </year>
Reference-contexts: The control consists of separate blocks for each of the five pipeline stages. A behavioral description for each of these blocks was translated into the CAD tools for logic synthesis [8]. The tools create an optimized multilevel gate representation using a technology-specific library <ref> [17] </ref> to generate the corresponding layout. In this case, the circuit is implemented in NOR-only DCFL logic, with fan-in typically limited to 4 (in one case it was as high as 7), and a maximum fan-out of 10.
Reference: [18] <author> R. B. Brown, P. Barker, A. Chandna, T. R. Huff, A. I. Kayssi, R. J. Lomax, T. N. Mudge, D. Nagle, K. A. Sakallah, P. J. Sherhart, R. Uhlig, and M. Upton, </author> <title> "GaAs RISC Processors," </title> <booktitle> GaAs IC Symposium Technical Digest, </booktitle> <pages> pp. 81-84, </pages> <month> October 4-7, </month> <year> 1992. </year>
Reference-contexts: There was also a bonding problem which made the scan chain invaluable. The chip was otherwise fully functional, and had a packaged yield on 24 prototypes of 16.7%. Extensive functional testing was done on the register file <ref> [18] </ref>. Table 1 summarizes the results of these tests. Using asymmetrical clocks, the four fully functional register files had cycle times (a write followed by a read) of 6.4 to 6.7 nS.
Reference: [19] <author> A. I. Kayssi, K. A. Sakallah, R. B. Brown, R. J. Lomax, T. N. Mudge, and T. R. Huff, </author> <title> "Impact of MCM's on system performance optimization," </title> <booktitle> Proc. of the 1992 IEEE Int. Symp. on Circuits and Systems, </booktitle> <volume> Vol. </volume> <pages> 2, </pages> <address> San Diego, CA, </address> <pages> pp. 919-922, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: The `package delay' associated with getting signals through an output buffer, off-chip interconnect, and an input buffer can account for a large percentage of the clock cycle time in high-performance systems, even when the most advanced packaging is used. For example, Kayssi's <ref> [19] </ref> simulations of our microprocessor, flip-chip mounted on a multichip-module (MCM) with a 4-K word instruction cache, show that the MCM delay is 45% of the total clock cycle.
Reference: [20] <author> R. B. Brown, A. Chandna, T. R. Huff, R. J. Lomax, T. N. Mudge, R. Oettel fl , and M. Upton, </author> <title> "Compound Semiconductor Device Requirements for VLSI," </title> <booktitle> Proceedings of the 19th International Symposium on Gallium Arsenide and Related Compounds, </booktitle> <address> Karuizawa, Japan, </address> <month> September 28 - October 2, </month> <year> 1992. </year>
Reference-contexts: Realistic cell utilization in the array would amplify this difference significantly. Using the microprocessor design as a benchmark, we were able to evaluate the features of DCFL processes <ref> [20] </ref>. The importance of minimizing interconnect capacitance is illustrated by Figs. 7, 8 and 9, which show the effects of reducing unloaded gate delay or capacitive loading on three critical paths in our microprocessor. The logic paths in these plots are from the branch logic, adder, and register file.
Reference: [21] <author> Michael Upton, Thomas Huff, Patrick Sherhart, Phillip Barker, Robert McVay, Tim Stanley, Richard Brown, Ron Lomax, Trevor Mudge, and Karem Sakallah, </author> <title> "A 160,000 Transistor GaAs Microprocessor," </title> <type> ISSCC Technical Digest, </type> <address> San Francisco, </address> <pages> pp. 92-93, </pages> <month> February 24-26, </month> <year> 1993. </year>
Reference-contexts: The CPU described above was implemented in a 3-metal process. A second version of the CPU has been implemented in a process having four levels of metal and 0.6-m effective channel-length; this CPU includes more functionality than the first version, and more effort was expended optimizing it for speed <ref> [21] </ref>. Table 3 shows the improvement in density which we have achieved in moving from the 3-metal to 4-metal process.
Reference: [22] <author> Ajay Chandna and Richard B. Brown, </author> <title> "A 32kb GaAs SRAM With Electronically Programmable Redundancy, </title> <booktitle> Proceedings of the 1993 Symposium on Research on Integrated Systems, </booktitle> <address> Seattle, WA, </address> <pages> pp. 155-167, </pages> <month> March 15-16, </month> <year> 1993. </year> <month> 15 </month>
Reference-contexts: This constraint requires that a significant portion of the total RAM area be devoted to sense amplifiers and write circuitry <ref> [22] </ref>. Table 4 shows how SRAM area would decrease if leakage currents could be reduced to allow more memory cells per column, thereby amortizing the column support circuitry over more bits.
References-found: 21

