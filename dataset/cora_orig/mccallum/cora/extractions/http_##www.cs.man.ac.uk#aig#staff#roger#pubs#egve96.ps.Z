URL: http://www.cs.man.ac.uk/aig/staff/roger/pubs/egve96.ps.Z
Refering-URL: http://aig.cs.man.ac.uk/publications/publications.html
Root-URL: http://www.cs.man.ac.uk
Email: email: roger@cs.man.ac.uk  
Title: MAVERIK the Manchester Virtual Environment Interface Kernel  
Author: Roger J. Hubbold, Xiao Dongbo, Simon Gibson 
Date: February 1996  
Note: Presented at the 3rd Eurographics Workshop on Virtual Environments  
Web: url: http://www.cs.man.ac.uk/aig/staff/roger/roger.html  
Address: Oxford Road, Manchester M13 9PL  
Affiliation: Advanced Interfaces Group Department of Computer Science University of Manchester  
Abstract-found: 0
Intro-found: 1
Reference: [BPW93] <author> Norman I. Badler, Cary B. Phillips, and Bonnie Lynn Webber. </author> <title> Simulating Humans: Computer Graphics Animation and Control. </title> <publisher> Oxford University Press, </publisher> <address> New York, </address> <year> 1993. </year> <note> ISBN 0-19-507359-2. </note>
Reference-contexts: There are systems where this kind of behaviour can be provided, but again the data must usually be imported and restructured into the internal form required by the system itself. An example is the Jack software <ref> [BPW93] </ref> which provides extensive support for simulation of human activities in virtual environments. Similarly, object-oriented systems with suitable class libraries provide a rich environment for rapid prototyping [ZCW + 91].
Reference: [CH93] <author> Christer Carlsson and Olaf Hagsand. </author> <title> The MultiG Distributed Interactive Virtual Environment. </title> <editor> In Lennart E. Fahlen and Kai-Mikael Jaa-Aro, editors, </editor> <booktitle> Proceedings of the 5th MultiG Workshop, </booktitle> <institution> Swedish Institute of Computer Science, </institution> <address> Box 1263, 164 28 Kista, Sweden, </address> <year> 1993. </year>
Reference-contexts: a framework for research into a variety of VR issues. 1 In most VR and related graphics systems, the modus operandi is to import a model into the system, which stores the geometry and other data in a form optimised for the system's own purposes; examples include dvS [Gri91], DIVE <ref> [CH93] </ref>, AVIARY, BrickNet [SSPN94], IRIS Performer [RH94], Inventor, VRML viewers, Superscape. With these kinds of system it is relatively simple to implement a parser to import data and to produce a walk-through of the resulting model.
Reference: [GH95] <author> S. Gibson and R.J. Hubbold. </author> <title> Efficient hierarchical refinement and clustering for radiosity in complex environments. </title> <note> Submitted for journal publication, </note> <month> November </month> <year> 1995. </year> <month> 7 </month>
Reference-contexts: In this application MAVERIK is being used to explore customised navigation, and interactive model building. The second application is the modelling of buildings, and incorporates work on parallel, interactive ra-diosity solutions <ref> [Gib95, GH95] </ref>. The ability to link application data structures directly into MAVERIK means that the hierarchical data structures used for the radiosity refinement can also be used to display the results, and can be integrated into LOD selection. Figure 4 shows two examples.
Reference: [Gib95] <author> Simon Gibson. </author> <title> Efficient radiosity for complex environments. </title> <type> Master's thesis, </type> <institution> University of Manch--ester Department of Computer Science, </institution> <month> September </month> <year> 1995. </year>
Reference-contexts: In this application MAVERIK is being used to explore customised navigation, and interactive model building. The second application is the modelling of buildings, and incorporates work on parallel, interactive ra-diosity solutions <ref> [Gib95, GH95] </ref>. The ability to link application data structures directly into MAVERIK means that the hierarchical data structures used for the radiosity refinement can also be used to display the results, and can be integrated into LOD selection. Figure 4 shows two examples.
Reference: [GPH93] <author> Neil Gatenby, Martin Preston, and W.T. Hewitt. </author> <title> The Manchester Scene Description Language (MSDL). </title> <institution> University of Manchester, Manchester Computing, </institution> <address> 1.0 edition, </address> <month> November </month> <year> 1993. </year> <note> Available at http://info.mcc.ac.uk/CGU/MSDL/MSDL-intro.html. </note>
Reference-contexts: Parsing external file formats: generally, we regard the parsing of external file formats as an application-specific function. However, we are gradually increasing the range of parsers we support. Currently, we can read file formats associated with the CAD applications we are researching, and the Manch-ester Scene Description Language (MSDL) <ref> [GPH93] </ref>. Filters allow us to convert between MSDL and other formats such as VRML, Inventor, Radiance, DXF. Callbacks must be provided for populating the SMS with different types of primitives, but a range of these is already supported (see below).
Reference: [Gri91] <author> Charles Grimsdale. </author> <title> dVS Distributed Virtual environment System. </title> <institution> Division Ltd, Bristol, UK, </institution> <year> 1991. </year>
Reference-contexts: us with a framework for research into a variety of VR issues. 1 In most VR and related graphics systems, the modus operandi is to import a model into the system, which stores the geometry and other data in a form optimised for the system's own purposes; examples include dvS <ref> [Gri91] </ref>, DIVE [CH93], AVIARY, BrickNet [SSPN94], IRIS Performer [RH94], Inventor, VRML viewers, Superscape. With these kinds of system it is relatively simple to implement a parser to import data and to produce a walk-through of the resulting model.
Reference: [HH91] <author> R.J. Hubbold and W.T. Hewitt. </author> <title> GKS3D and PHIGS theory and practice. </title> <editor> In W.T. Hewitt, M. Grave, and M. Roch, editors, </editor> <booktitle> Advances in Computer Graphics IV, chapter 3, </booktitle> <pages> pages 62-106. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: As an aside, it is worth commenting that we prefer to use OpenGL to Inventor, because the latter forces too many decisions upon us about how to structure our data, akin to our earlier experiences with the PHIGS system <ref> [HH91] </ref>.
Reference: [HM94] <author> R.J. </author> <title> Hubbold and N.P. McPhater. The use of virtual reality for training process plant operatives. </title> <booktitle> In Proc. CG Expo '94 Conference, </booktitle> <address> London, </address> <month> November </month> <year> 1994. </year> <institution> Computer Graphics Suppliers' Association, Worcester, </institution> <address> England. </address>
Reference-contexts: Preliminary results from this work have been reported elsewhere <ref> [HM94] </ref>. An early finding was that these models were so complicated that neither AVIARY, nor typical off-the-shelf or public-domain VR systems, would be capable of handling them with anything approaching an acceptable frame rate.
Reference: [HMWH95] <author> Roger Hubbold, Alan Murta, Adrian West, and Toby Howard. </author> <title> Design Issues for Virtual Reality Systems. </title> <booktitle> In Virtual Environments '95, </booktitle> <pages> pages 224-236. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year> <note> ISBN 3-211-82737-4. </note>
Reference-contexts: In developing MAVERIK we are also investigating architectural issues for VR software systems for large-scale applications. 2 Background In an earlier workshop paper <ref> [HMWH95] </ref>, we set out a number of issues we regarded as important in VR system design. Some of these were investigated in the AVIARY system [WHH + 93, SW94], and work on these is continuing.
Reference: [KH95] <author> M.J. Keates and R.J. Hubbold. </author> <title> Interactive ray tracing on a virtual shared-memory parallel computer. </title> <journal> Computer Graphics Forum, </journal> <volume> 14(4), </volume> <month> October </month> <year> 1995. </year>
Reference-contexts: Spatial management lies at the heart of any VR system. It is required for tasks such as culling and level-of-detail processing, navigation, and collision detection. We have been working for some time on a range of different SMSs, including regular voxel (gridcell) structures <ref> [KH95] </ref>, hierarchical grid-cells (which include the subsets of K-d trees and octrees), and hierarchical bounding volumes.
Reference: [RH94] <author> John Rohlf and James Helman. IRIS performer: </author> <title> A high performance multiprocessing toolkit for real-time 3D graphics. </title> <editor> In Andrew Glassner, editor, </editor> <booktitle> Proceedings of SIGGRAPH '94 (Orlando, </booktitle> <address> Florida, </address> <month> July 24-29, </month> <year> 1994), </year> <booktitle> Computer Graphics Proceedings, Annual Conference Series, </booktitle> <pages> pages 381-395. </pages> <publisher> ACM SIGGRAPH, ACM Press, </publisher> <month> July </month> <year> 1994. </year> <note> ISBN 0-89791-667-0. </note>
Reference-contexts: variety of VR issues. 1 In most VR and related graphics systems, the modus operandi is to import a model into the system, which stores the geometry and other data in a form optimised for the system's own purposes; examples include dvS [Gri91], DIVE [CH93], AVIARY, BrickNet [SSPN94], IRIS Performer <ref> [RH94] </ref>, Inventor, VRML viewers, Superscape. With these kinds of system it is relatively simple to implement a parser to import data and to produce a walk-through of the resulting model. They also have programming interfaces which permit applications to create and modify objects at run time.
Reference: [SM93] <author> C. Shaw and M.Green. </author> <title> The MR toolkit peers package and experiment. </title> <booktitle> In Proc. IEEE Virtual Reality Annual International Symposium VRAIS '93, </booktitle> <pages> pages 463-469. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> Septem-ber </month> <year> 1993. </year>
Reference-contexts: Performing such tasks efficiently requires customised algorithms which can directly access the data structures associated with the specific application a CAD database for example. On the other hand, merely using a VR library, such as the MR Toolkit <ref> [SM93] </ref>, gives insufficient support for a range of common features, such as picking, manipulation, navigation, and collision detection, so that too much work must be performed each time a new application is to be written.
Reference: [SSPN94] <author> G. Singh, L. Serra, W. Png, and H. Ng. Bricknet: </author> <title> A software toolkit for network-based virtual worlds. </title> <journal> Presence, </journal> <volume> 3(1) </volume> <pages> 19-34, </pages> <year> 1994. </year>
Reference-contexts: research into a variety of VR issues. 1 In most VR and related graphics systems, the modus operandi is to import a model into the system, which stores the geometry and other data in a form optimised for the system's own purposes; examples include dvS [Gri91], DIVE [CH93], AVIARY, BrickNet <ref> [SSPN94] </ref>, IRIS Performer [RH94], Inventor, VRML viewers, Superscape. With these kinds of system it is relatively simple to implement a parser to import data and to produce a walk-through of the resulting model. They also have programming interfaces which permit applications to create and modify objects at run time.
Reference: [SW94] <author> D.N. Snowdon and A.J. West. AVIARY: </author> <title> Design Issues for Future Large-Scale Virtual Environments. </title> <journal> Presence, </journal> <volume> 3(4) </volume> <pages> 288-308, </pages> <year> 1994. </year>
Reference-contexts: In developing MAVERIK we are also investigating architectural issues for VR software systems for large-scale applications. 2 Background In an earlier workshop paper [HMWH95], we set out a number of issues we regarded as important in VR system design. Some of these were investigated in the AVIARY system <ref> [WHH + 93, SW94] </ref>, and work on these is continuing.
Reference: [WHH + 93] <author> A.J. West, T.L.J. Howard, R.J. Hubbold, A.D. Murta, D.N. Snowdon, and D.A. Butler. </author> <month> AVIARY </month>
Reference-contexts: In developing MAVERIK we are also investigating architectural issues for VR software systems for large-scale applications. 2 Background In an earlier workshop paper [HMWH95], we set out a number of issues we regarded as important in VR system design. Some of these were investigated in the AVIARY system <ref> [WHH + 93, SW94] </ref>, and work on these is continuing.
References-found: 15

