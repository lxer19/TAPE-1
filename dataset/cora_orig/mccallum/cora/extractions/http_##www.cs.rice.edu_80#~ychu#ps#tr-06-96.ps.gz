URL: http://www.cs.rice.edu:80/~ychu/ps/tr-06-96.ps.gz
Refering-URL: http://www.cs.rice.edu:80/~ychu/papers.html
Root-URL: 
Title: On the Accuracy of Poisson's Formula Based Fast N -Body Algorithms  
Author: Y. Charlie Hu S. Lennart Johnsson 
Note: Submitted to SIAM Journal on Scientific Computing.  
Address: Cambridge, Massachusetts  
Affiliation: Parallel Computing Research Group Center for Research in Computing Technology Harvard University  
Date: January 1996  
Pubnum: TR-06-96  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> C. R. Anderson. </author> <title> An implementation of the fast multipole method without multipoles. </title> <journal> SIAM J. Sci. Stat. Comput., </journal> <volume> 13(4) </volume> <pages> 923-947, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: 1. Introduction. Although O (N ) N -body methods <ref> [1, 8, 7, 6, 21, 20] </ref> are superior to the direct O (N 2 ) methods in terms of arithmetic complexity for large scale simulations, they have yet to gain widespread acceptance. There are several reasons for this. <p> Green-gard and Rokhlin (GR) [6, 7], and Zhao [21] give error bounds on truncated multipole expansions for individual computational elements as a function of the number of terms in the expansions. Similarly, Anderson <ref> [1] </ref> provides some insights into the error characteristics of methods based on Poisson's formula, but no rigorous bounds. Clearly, the degree of approximation directly affects the arithmetic complexity in evaluating element interactions, and therefore that of the complete methods. 2. <p> Thus, varying the hierarchy depth changes the proportion of particles in the near-field and in the far-field, and therefore may affect the error of the hierarchical methods. The hierarchy depth also directly affects the total number of arithmetic operations. In using the Poisson's formula based method introduced by Anderson <ref> [1] </ref>, sphere integration introduces one more source of error. The main contribution of this paper are empirical models for the error as a function of the approximation parameters of the Poisson's formula based nonadaptive method by Anderson. <p> Limited by the memory, he performed simulations for up to 92,762 particles with hierarchy depths two, three, and four. 2. Parameters in multipole-like hierarchical N -body methods. Multipole-like hierarchical methods <ref> [1, 2, 6] </ref> for the N -body problem partition the potentials 4 Y. C. HU AND S. L. JOHNSSON Table 1.1 Characteristics of some previous implementations of multipole-like O (N) N -body methods. <p> This element approximates the potential field in a "local" domain due to particles in the far domain. Table 2.1 summarizes the computational elements in Barnes-Hut's [2] O (N log 2 N ) method, and the O (N ) methods by GR [6], Zhao [21], and Anderson <ref> [1] </ref>, and the coordinate systems used. The relationship between the truncation error, or error decay rate, p in the methods by GR and by Zhao, and the integration order and number of integration points K in Anderson's method is discussed in Section 2.4. <p> The error bounds of the three translations given below for multipole-based methods are proved by Greengard-Rokhlin [8, 7], and Zhao [21], and are summarized in Table 2.2. The errors of the translations in Anderson's method are expected to have similar form <ref> [1] </ref>, and is described in detail in Section 3. * T F 2F : shifting a far-field potential representation centered at o with radius to a new center o 0 at a distance a away, as shown in Figure 2.1 (b). <p> Using the two types of computational elements and the three types of translations, the multipole-like hierarchical methods transform the interactions among particles that are well separated into interactions among particles and computational elements (in the BH method) [2] or among computational elements (in the multipole-like methods) <ref> [1, 7] </ref>. 2.2. Parameters in computational structure. The second key idea in the hierarchical methods is hierarchical formation and evaluation of the computational elements. Hierarchical methods divides the computational domain into a hierarchy of sub-domains (meshes) (see Figure 2.2). Mesh level 0 represents the entire domain (box). <p> In an adaptive method, only subdomains with sufficiently many particles are further subdivided. Boxes that are not further subdivided are leaves. Hierarchical methods can be easily extended to rectangular domains in two dimensions and parallelepipedic domains in three dimensions <ref> [1] </ref>. The multipole-like O (N ) methods distinguish between three regions with respect to each subdomain (box) in the hierarchy. The definition of the three regions has a significant impact on the constant in the asymptotic arithmetic complexity. <p> Assuming the same base constant and p = D=2 + 2 as suggested by Anderson does not seem to be sensible. 3. Computational elements in Anderson's method. Anderson <ref> [1] </ref> uses Poisson's formula for representing solutions of Laplace equation, which results in computational elements that are simple to translate. Another advantage is that the computations in two and three dimensions are very similar. <p> Distribution Anderson, D = 14 GR, p = 8 Zhao, p = 9 1-Sep 2-Sep/superd4 1-Sep 2-Sep/superd3 N=1000, uniformly dist. & 1.2e-05 6.1e-06 9.7e-05 charged, RMS force [21] N=40000, uniformly dist., 5.4e-5 1.6e-05 1.2e-04 random charges in [-1,1], RMS potential [16] <ref> [1] </ref>) 1 Z " n=0 a ) n+1 P n (~s ~x p ) g (a~s)ds;(3.1) where the integration is carried out over S 2 , the surface of the unit sphere, and P n is the nth Legendre function. <p> Given a numerical formula for integrating functions on the surface of the sphere with K integration points ~s i and weights w i , the following formula (equation (15) of 12 Y. C. HU AND S. L. JOHNSSON Fig. 3.1. Translations as evaluations of the approximations <ref> [1] </ref>) is used to approximate the potential at ~x: (~x) i=1 M X (2n + 1)( r # This approximation is called an outer-sphere approximation. <p> Note that in this approximation, two approximations are made compared to Equation (3.1): the series is truncated, and the integral is evaluated with a finite number of terms. The approximation used to represent potentials inside a given region is (equation (16) of <ref> [1] </ref>) K X " n=0 r ) n+1 P n (~s i ~x p ) g (a~s i )w i (3.3) and is called an inner-sphere approximation. The outer-sphere and the inner-sphere approximations define the computational elements in Anderson's hierarchical method. <p> Table 3.1 lists the relationships among the parameters and the expected error decay rate in the approximation of a single element in Anderson's method, as given in <ref> [1] </ref>. A suitable value for K depends upon the choice of integration method, and required accuracy. The traditional integration methods based on a product grid, which typically use trapezoidal integration in the direction and Gaussian quadrature in the direction, are inefficient since the integration points are crowded near the poles. <p> error in evaluating an outer-sphere approximation (equation (3.2)) with the series expansion truncated after M terms is O ( ff r ) M+2 , where ff is the radius of the sphere containing the particles and r is the distance of the evaluation point from the center of the sphere <ref> [1] </ref>. Therefore, it is desirable to perform the conversion from a small sphere to a large sphere. <p> Both the decay rate and the base constant thus determined differ significantly from the values from single outer-sphere approximations verified by Anderson <ref> [1] </ref>. The rather large base constants in Table 5.2 suggests that for computational elements of similar decay rates, Anderson's method is more accurate than GR's or Zhao's methods, for which the base constants are about two [21]. <p> Later, the issue of using an optimal hierarchy depth to minimize the total number of arithmetic operations and hopefully also the execution time of the code was raised [22]. In <ref> [1] </ref>, Anderson proposed a performance model based on the FLOP count for predicting the absolute execution time of different stages of the method on uniprocessors for any given particle distribution and hierarchy depth. <p> A close look at the two methods tells us that the tradeoffs between them is mainly determined by the cost-accuracy tradeoffs of the integration formulas used in the outer/inner approximations in Anderson's method. As described in <ref> [1] </ref>, the integration formulas, taken from [15], are highly efficient in the sense that they use minimum number of integration points to achieve a certain degree of integration accuracy. (The exact definition of the efficiency of an integration formula is defined in [15].) To achieve a given error, 1-Sep often requires <p> All particle charges are assumed the same. 26 Y. C. HU AND S. L. JOHNSSON Fig. 6.1. The RMS error of the potential for different outer sphere radii, N=256K. Fig. 6.2. The RMS error of the potential for different inner sphere radii, N=256K. 6.1. Uniform particle distribution. Anderson <ref> [1] </ref> suggested the radii of outer sphere and inner sphere listed in Table 3.1, and verified the parameters through evaluating a single sphere approximation. We verify the optimality of the parameters with respect to the accuracy of the complete method. <p> The range of optimal outer and inner sphere radii cover the values suggested in <ref> [1] </ref>. The unique behavior for integration order 14 could be attributed to limited floating-point precision. However, the same behavior is exhibited in 128-bit precision, which was experimentally verified using a Fortran-90 version of the code on DEC alphastations. 6.2. Error sensitivity to particle distributions.
Reference: [2] <author> J. Barnes and P. Hut. </author> <title> A hierarchical O(N log N ) force calculation algorithm. </title> <journal> Nature, </journal> <volume> 324 </volume> <pages> 446-449, </pages> <year> 1986. </year>
Reference-contexts: Limited by the memory, he performed simulations for up to 92,762 particles with hierarchy depths two, three, and four. 2. Parameters in multipole-like hierarchical N -body methods. Multipole-like hierarchical methods <ref> [1, 2, 6] </ref> for the N -body problem partition the potentials 4 Y. C. HU AND S. L. JOHNSSON Table 1.1 Characteristics of some previous implementations of multipole-like O (N) N -body methods. <p> The O (N ) methods also introduces a local-field potential representation a second kind of computational element. This element approximates the potential field in a "local" domain due to particles in the far domain. Table 2.1 summarizes the computational elements in Barnes-Hut's <ref> [2] </ref> O (N log 2 N ) method, and the O (N ) methods by GR [6], Zhao [21], and Anderson [1], and the coordinate systems used. <p> Using the two types of computational elements and the three types of translations, the multipole-like hierarchical methods transform the interactions among particles that are well separated into interactions among particles and computational elements (in the BH method) <ref> [2] </ref> or among computational elements (in the multipole-like methods) [1, 7]. 2.2. Parameters in computational structure. The second key idea in the hierarchical methods is hierarchical formation and evaluation of the computational elements. Hierarchical methods divides the computational domain into a hierarchy of sub-domains (meshes) (see Figure 2.2).
Reference: [3] <author> A. Brandt. </author> <title> Multilevel computations: Review and recent developments. </title> <editor> In S. McCormick, editor, </editor> <booktitle> Proc. Third Copper Mountain Conference on Multigrid Method, </booktitle> <address> Copper Mountain, Colorado, </address> <month> April </month> <year> 1987. </year>
Reference-contexts: A third limiting factor is that further algorithmic development is necessary to cover the range of boundary conditions encountered in applications. Most algorithmic developments and parallel computer implementations have focused on applications with free space boundary conditions. Like the multi-grid methods <ref> [3] </ref>, the multipole-based N -body methods, or their variations, are approximation methods. For all these methods higher accuracy can be achieved at increased computational effort.
Reference: [4] <author> J. Carrier, L. Greengard, and V. Rokhlin. </author> <title> A fast adaptive multipole algorithm for particle simulations. </title> <journal> SIAM J. Sci. Statist. Comput., </journal> <month> July </month> <year> 1988. </year>
Reference-contexts: Timing models. In the early papers on the fast multipole method, the hierarchy depth is chosen such that there is roughly one particle in each leaf-level box (for example, see [6, 7, 9, 16, 21]), or there are a predetermined number of particles per leaf-level box <ref> [4] </ref>. Later, the issue of using an optimal hierarchy depth to minimize the total number of arithmetic operations and hopefully also the execution time of the code was raised [22]. <p> On the other hand, the more clustered in the center of a leaf-level box the particles are, the more accurate the approximation offered by the computational element will be. The same arguments are true for GR' and Zhao's methods. In <ref> [4] </ref>, Carrier et. al. found that with the same number of terms in the multipole expansions, the accuracy for different nonuniform distributions may vary up to an order of magnitude.
Reference: [5] <author> K. Esselink. </author> <title> A comparison of algorithms for long range interactions. </title> <type> Technical Report 500.90.200GRA204-IN73916 AMER.94.006, </type> <address> Koninklijke/Shell-Laboratorium, Amsterdam, </address> <month> August </month> <year> 1994. </year>
Reference-contexts: One-separation with supernodes gave significantly worse execution time than the other approximations for a wide range of errors. Esselink <ref> [5] </ref> studied the arithmetic complexity, accuracy and execution times on uniprocessors for the GR method, Appel's method, a combinations of the two, and Ewald's summation method. Limited by the memory, he performed simulations for up to 92,762 particles with hierarchy depths two, three, and four. 2. <p> Greengard-Rokhlin [7, 9] GR 2 No blog N 8 c Zhao [21] Zhao 2 Yes blog N 8 c Schmidt-Lee [16] GR 1 No 3,4,5 Shimada et al. [17] GR 1,2 No log N 8 Leathrum [13] GR 1,2,mixed 1 and 2 Yes and No blog N 8 c Esselink <ref> [5] </ref> GR 2 Yes 2,3,4 into two parts: total = nearfield + farfield ;(2.1) where nearfield is the potential due to nearby particles and farfield is the potential due to faraway particles.
Reference: [6] <author> L. Greengard and W. D. Gropp. </author> <title> A parallel version of the fast multipole method. </title> <booktitle> In Parallel Processing for Scientific Computing, </booktitle> <pages> pages 213-222. </pages> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1989. </year>
Reference-contexts: 1. Introduction. Although O (N ) N -body methods <ref> [1, 8, 7, 6, 21, 20] </ref> are superior to the direct O (N 2 ) methods in terms of arithmetic complexity for large scale simulations, they have yet to gain widespread acceptance. There are several reasons for this. <p> C. HU AND S. L. JOHNSSON There are four sources of errors common to all the multi-pole like O (N ) N -body methods: 1. Approximation errors in representing computational elements that represent the aggregate effect of clusters of particles by finite series expansion. Green-gard and Rokhlin (GR) <ref> [6, 7] </ref>, and Zhao [21] give error bounds on truncated multipole expansions for individual computational elements as a function of the number of terms in the expansions. Similarly, Anderson [1] provides some insights into the error characteristics of methods based on Poisson's formula, but no rigorous bounds. <p> Section 7 summarizes the paper. Previous work. Table 1.1 lists the parameter choices used in some previous implementations of multipole-like methods. All simulations but the ones by Greengard-Rokhlin used uniform distributions. Greengard and Rokhlin <ref> [6] </ref>, and Zhao [21] numerically examined the accuracy of their respective methods as a function of the number of terms retained in the multipole expansions, and the number of particles. <p> Limited by the memory, he performed simulations for up to 92,762 particles with hierarchy depths two, three, and four. 2. Parameters in multipole-like hierarchical N -body methods. Multipole-like hierarchical methods <ref> [1, 2, 6] </ref> for the N -body problem partition the potentials 4 Y. C. HU AND S. L. JOHNSSON Table 1.1 Characteristics of some previous implementations of multipole-like O (N) N -body methods. <p> This element approximates the potential field in a "local" domain due to particles in the far domain. Table 2.1 summarizes the computational elements in Barnes-Hut's [2] O (N log 2 N ) method, and the O (N ) methods by GR <ref> [6] </ref>, Zhao [21], and Anderson [1], and the coordinate systems used. The relationship between the truncation error, or error decay rate, p in the methods by GR and by Zhao, and the integration order and number of integration points K in Anderson's method is discussed in Section 2.4. <p> Timing models. In the early papers on the fast multipole method, the hierarchy depth is chosen such that there is roughly one particle in each leaf-level box (for example, see <ref> [6, 7, 9, 16, 21] </ref>), or there are a predetermined number of particles per leaf-level box [4]. Later, the issue of using an optimal hierarchy depth to minimize the total number of arithmetic operations and hopefully also the execution time of the code was raised [22].
Reference: [7] <author> L. Greengard and V. Rokhlin. </author> <title> A fast algorithm for particle simulation. </title> <journal> Journal of Computational Physics, </journal> <volume> 73 </volume> <pages> 325-348, </pages> <year> 1987. </year>
Reference-contexts: 1. Introduction. Although O (N ) N -body methods <ref> [1, 8, 7, 6, 21, 20] </ref> are superior to the direct O (N 2 ) methods in terms of arithmetic complexity for large scale simulations, they have yet to gain widespread acceptance. There are several reasons for this. <p> C. HU AND S. L. JOHNSSON There are four sources of errors common to all the multi-pole like O (N ) N -body methods: 1. Approximation errors in representing computational elements that represent the aggregate effect of clusters of particles by finite series expansion. Green-gard and Rokhlin (GR) <ref> [6, 7] </ref>, and Zhao [21] give error bounds on truncated multipole expansions for individual computational elements as a function of the number of terms in the expansions. Similarly, Anderson [1] provides some insights into the error characteristics of methods based on Poisson's formula, but no rigorous bounds. <p> Multipole-like hierarchical methods [1, 2, 6] for the N -body problem partition the potentials 4 Y. C. HU AND S. L. JOHNSSON Table 1.1 Characteristics of some previous implementations of multipole-like O (N) N -body methods. Author Method Degree of Use of Hierarchy separation supernodes depth Greengard-Rokhlin <ref> [7, 9] </ref> GR 2 No blog N 8 c Zhao [21] Zhao 2 Yes blog N 8 c Schmidt-Lee [16] GR 1 No 3,4,5 Shimada et al. [17] GR 1,2 No log N 8 Leathrum [13] GR 1,2,mixed 1 and 2 Yes and No blog N 8 c Esselink [5] GR <p> In all implementations so far, the translations are between far-field potentials or local-field potentials with the same truncation order. The error bounds of the three translations given below for multipole-based methods are proved by Greengard-Rokhlin <ref> [8, 7] </ref>, and Zhao [21], and are summarized in Table 2.2. <p> Using the two types of computational elements and the three types of translations, the multipole-like hierarchical methods transform the interactions among particles that are well separated into interactions among particles and computational elements (in the BH method) [2] or among computational elements (in the multipole-like methods) <ref> [1, 7] </ref>. 2.2. Parameters in computational structure. The second key idea in the hierarchical methods is hierarchical formation and evaluation of the computational elements. Hierarchical methods divides the computational domain into a hierarchy of sub-domains (meshes) (see Figure 2.2). Mesh level 0 represents the entire domain (box). <p> The multipole-like O (N ) methods distinguish between three regions with respect to each subdomain (box) in the hierarchy. The definition of the three regions has a significant impact on the constant in the asymptotic arithmetic complexity. In the original formulation of multipole-based methods <ref> [8, 7] </ref>, the near-field is defined as those subdomains that share a boundary point with the considered subdomain in two dimensions, and those subdomains which share a boundary point with the considered subdomain and second nearest neighbor subdomains which share a boundary point with the nearest neighbor subdomains in three dimensions. <p> Timing models. In the early papers on the fast multipole method, the hierarchy depth is chosen such that there is roughly one particle in each leaf-level box (for example, see <ref> [6, 7, 9, 16, 21] </ref>), or there are a predetermined number of particles per leaf-level box [4]. Later, the issue of using an optimal hierarchy depth to minimize the total number of arithmetic operations and hopefully also the execution time of the code was raised [22].
Reference: [8] <author> L. F. Greengard and V. Rokhlin. </author> <title> Rapid evaluation of potential fields in three dimensions. </title> <type> Technical Report YALEU/DCS/RR-515, </type> <institution> Dept. of Computer Science, Yale Univ., </institution> <month> February </month> <year> 1987. </year>
Reference-contexts: 1. Introduction. Although O (N ) N -body methods <ref> [1, 8, 7, 6, 21, 20] </ref> are superior to the direct O (N 2 ) methods in terms of arithmetic complexity for large scale simulations, they have yet to gain widespread acceptance. There are several reasons for this. <p> In all implementations so far, the translations are between far-field potentials or local-field potentials with the same truncation order. The error bounds of the three translations given below for multipole-based methods are proved by Greengard-Rokhlin <ref> [8, 7] </ref>, and Zhao [21], and are summarized in Table 2.2. <p> The multipole-like O (N ) methods distinguish between three regions with respect to each subdomain (box) in the hierarchy. The definition of the three regions has a significant impact on the constant in the asymptotic arithmetic complexity. In the original formulation of multipole-based methods <ref> [8, 7] </ref>, the near-field is defined as those subdomains that share a boundary point with the considered subdomain in two dimensions, and those subdomains which share a boundary point with the considered subdomain and second nearest neighbor subdomains which share a boundary point with the nearest neighbor subdomains in three dimensions.
Reference: [9] <author> L. F. Greengard and V. Rokhlin. </author> <title> On the efficient implementation of the fast multipole algorithm. </title> <type> Technical Report YALEU/DCS/RR-602, </type> <institution> Dept. of Computer Science, Yale Univ., </institution> <month> February </month> <year> 1988. </year>
Reference-contexts: Multipole-like hierarchical methods [1, 2, 6] for the N -body problem partition the potentials 4 Y. C. HU AND S. L. JOHNSSON Table 1.1 Characteristics of some previous implementations of multipole-like O (N) N -body methods. Author Method Degree of Use of Hierarchy separation supernodes depth Greengard-Rokhlin <ref> [7, 9] </ref> GR 2 No blog N 8 c Zhao [21] Zhao 2 Yes blog N 8 c Schmidt-Lee [16] GR 1 No 3,4,5 Shimada et al. [17] GR 1,2 No log N 8 Leathrum [13] GR 1,2,mixed 1 and 2 Yes and No blog N 8 c Esselink [5] GR <p> The reduced separation will lower the base in the error estimate ((2d + 2)= p and therefore increase the error for a fixed p. 2.3. Supernodes. The use of supernodes <ref> [9, 21] </ref> reduces the effective value of N int for a given separation, which brings about a dramatic improvement in the overall performance. <p> Timing models. In the early papers on the fast multipole method, the hierarchy depth is chosen such that there is roughly one particle in each leaf-level box (for example, see <ref> [6, 7, 9, 16, 21] </ref>), or there are a predetermined number of particles per leaf-level box [4]. Later, the issue of using an optimal hierarchy depth to minimize the total number of arithmetic operations and hopefully also the execution time of the code was raised [22].
Reference: [10] <author> Y. Hu and S. L. Johnsson. </author> <title> A data parallel implementation of hierarchical N-body methods. </title> <journal> International Journal of Supercomputing Applications and High Performance Computing, </journal> <volume> 10(1):3 - 40, </volume> <year> 1996. </year>
Reference-contexts: The empirical study reported in this paper was performed on the Connection Machine system CM-5E using a data-parallel implementation of Anderson's method <ref> [10] </ref>. Using an efficient implementation of the direct method, we are able to verify the accuracy and the accuracy-cost tradeoffs of Anderson's method via simulations of systems of up to one million particles within reasonable execution time. <p> Hence, they can be precomputed. Each translation can be performed as a matrix-vector multiplication requiring 2K 2 operations. Furthermore, translations for boxes at the same level can be aggregated and performed as collections of matrix-matrix multiplications (multiple-instance matrix-matrix multiplication) for higher efficiency (see <ref> [10] </ref> for details.) 3.3. Supernodes in Anderson's method. The fact that translations in An-derson's method, e.g., T F 2L , are evaluations of the sphere approximations leads to a different way of using supernodes. <p> Simulation environment and error definitions. The empirical evaluation in this paper were performed on the Connection Machine system CM-5E using our data-parallel implementation of a nonadaptive version of Anderson's method <ref> [10] </ref>. The code is written in Connection Machine Fortran (CMF) [18] with subroutine calls to the Connection Machine Scientific Software Library (CMSSL) [19] for nodal BLAS ACCURACY OF POISSON'S FORMULA BASED N-BODY ALGORITHMS 15 operations. Detailed descriptions of the performance of the implementation can be found in [10]. <p> of Anderson's method <ref> [10] </ref>. The code is written in Connection Machine Fortran (CMF) [18] with subroutine calls to the Connection Machine Scientific Software Library (CMSSL) [19] for nodal BLAS ACCURACY OF POISSON'S FORMULA BASED N-BODY ALGORITHMS 15 operations. Detailed descriptions of the performance of the implementation can be found in [10]. We measure the error of Anderson's method relative to a parallel implementation of the direct method. This code is also written in CMF and uses cyclic shift operations to perform all-to-all communication. It exploits symmetry in the potential/force evaluation from Newton's third law. <p> For our implementation of Anderson's method on the CM-5/5E, the FLOP count gives rather accurate prediction on the relative execution time. First, the optimal hierarchy depth balances the two computation-dominant stages the downward pass and the direct evaluation in the near-field (see Table 2.3.) As reported in <ref> [10] </ref>, for problems with reasonably large sizes relative to the machine size, the two time-dominant stages achieve similar efficiencies, and therefore the FLOP count is a good predictor of the optimal hierarchy depth with respect to execution time for both methods.
Reference: [11] <author> Y. Hu and S. L. Johnsson. </author> <title> Implementing O(N) N-body algorithms efficiently in data-parallel languages. </title> <journal> Journal of Scientific Programming, </journal> <volume> 5(4):337 - 364, </volume> <year> 1996. </year>
Reference-contexts: Since our code only exploits parallelism among same-pair boxes at the same level, and sequentialize the interactive-field neighbor interactions <ref> [11] </ref>, each neighbor interaction at levels close to the root where there are fewer boxes than processing nodes take about the same time.
Reference: [12] <author> J. Katzenelson. </author> <title> Computational structure of the N-body problem. </title> <journal> SIAM J. Sci. Statist. Com-put., </journal> <volume> 10(4) </volume> <pages> 787-815, </pages> <year> 1989. </year>
Reference-contexts: We assume all l i and l i are computed using computational elements of the same approximation order. The computational structure is described as follows by Katzenelson <ref> [12] </ref>: Algorithm: (A generic hierarchical method) 1. Compute h i for all boxes i at the leaf level h. 2. Upward pass: for l = h 1; h 2; :::; 2, compute l X i2fchildren (n)g T F 2F ( l+1 3.
Reference: [13] <author> J. F. Leathrum. </author> <title> The parallel fast multipole method in three dimensions. </title> <type> PhD thesis, </type> <institution> Duke University, </institution> <year> 1992. </year>
Reference-contexts: Shimada et al. [17] examined a few combinations of hierarchy depth, one-separation and two-separation (i.e., the near-field consists of nearest neighbor elements and their nearest neighbors as well). Using a shared-memory implementation of the GR method, Leathrum <ref> [13] </ref> numerically examined the tradeoffs between the accuracy and the execution time for six combinations of the degree of separation and the use of supernodes, namely, one-separation, two-separation, one-two-separation (two-separation for the leaf-level and one-separation for the rest of the hierarchy), and the same simulations using supernodes. <p> Author Method Degree of Use of Hierarchy separation supernodes depth Greengard-Rokhlin [7, 9] GR 2 No blog N 8 c Zhao [21] Zhao 2 Yes blog N 8 c Schmidt-Lee [16] GR 1 No 3,4,5 Shimada et al. [17] GR 1,2 No log N 8 Leathrum <ref> [13] </ref> GR 1,2,mixed 1 and 2 Yes and No blog N 8 c Esselink [5] GR 2 Yes 2,3,4 into two parts: total = nearfield + farfield ;(2.1) where nearfield is the potential due to nearby particles and farfield is the potential due to faraway particles.
Reference: [14] <author> A. McKenney. </author> <title> Implementation issues for fast multipole implementations for molecular dynamics simulations. </title> <type> manuscript, </type> <year> 1996. </year>
Reference-contexts: The error in the force field is very sensitive to the normalization used. We use a local normalization whereas several other studies reporting smaller force field errors use a global normalization (for example, see <ref> [14] </ref>). Assuming the error in the potential can be modeled by c 1 c p , we can determine either the decay rate or the base constant from our simulations assuming the other is known.
Reference: [15] <author> A. D. McLaren. </author> <title> Optimal numerical integration on a sphere. </title> <journal> Math. Comput., </journal> <volume> 17:361 - 383, </volume> <year> 1963. </year>
Reference-contexts: ff a inner Expected error Avg. error integration D ( D/2) decay rate (M+2) decay rate 5 12 2 10 2 4 3.95 9 32 4 5 2 6 8.85 14 72 7 2 2 9 8.90 Anderson chose to use integration formulas from a non-product family, as described in <ref> [15] </ref>. The 5th, 7th, 9th, 11th, and 14th order integration formulas require 12, 24, 32, 50, 72 integration points, respectively. A suitable choice of M is related to the choice of the order of the integration method. <p> A close look at the two methods tells us that the tradeoffs between them is mainly determined by the cost-accuracy tradeoffs of the integration formulas used in the outer/inner approximations in Anderson's method. As described in [1], the integration formulas, taken from <ref> [15] </ref>, are highly efficient in the sense that they use minimum number of integration points to achieve a certain degree of integration accuracy. (The exact definition of the efficiency of an integration formula is defined in [15].) To achieve a given error, 1-Sep often requires one order higher integration order than <p> As described in [1], the integration formulas, taken from <ref> [15] </ref>, are highly efficient in the sense that they use minimum number of integration points to achieve a certain degree of integration accuracy. (The exact definition of the efficiency of an integration formula is defined in [15].) To achieve a given error, 1-Sep often requires one order higher integration order than that required by 2-Sep/superd4 and 2-Sep/superd5, i.e.
Reference: [16] <author> K. E. Schmidt and M. A. Lee. </author> <title> Implementing the fast multipole method in three dimensions. </title> <journal> J. Stat. Phy., </journal> <volume> 63(5/6), </volume> <year> 1991. </year>
Reference-contexts: All simulations but the ones by Greengard-Rokhlin used uniform distributions. Greengard and Rokhlin [6], and Zhao [21] numerically examined the accuracy of their respective methods as a function of the number of terms retained in the multipole expansions, and the number of particles. Schmidt and Lee <ref> [16] </ref> examined the accuracy and the execution time for a few combinations of hierarchy depth and number of terms in the multipole expansions for a 3-D GR method with one-separation (i.e., the near-field consists of only nearest neighbor elements). <p> HU AND S. L. JOHNSSON Table 1.1 Characteristics of some previous implementations of multipole-like O (N) N -body methods. Author Method Degree of Use of Hierarchy separation supernodes depth Greengard-Rokhlin [7, 9] GR 2 No blog N 8 c Zhao [21] Zhao 2 Yes blog N 8 c Schmidt-Lee <ref> [16] </ref> GR 1 No 3,4,5 Shimada et al. [17] GR 1,2 No log N 8 Leathrum [13] GR 1,2,mixed 1 and 2 Yes and No blog N 8 c Esselink [5] GR 2 Yes 2,3,4 into two parts: total = nearfield + farfield ;(2.1) where nearfield is the potential due to <p> The potential value at ~x is (equation (14) of ACCURACY OF POISSON'S FORMULA BASED N-BODY ALGORITHMS 11 Table 2.5 The optimum number of arithmetic operations per particle for 3-D hierarchical N -body methods for uniform particle distributions. SQRT and DIV are normalized as four floating-point operations <ref> [16] </ref>. m is the number of particles per leaf-level box that minimizes the total number of arithmetic operations. The optimal hierarchy depth h is either blog 8 N m c or dlog 8 N m e, whichever yields a smaller arithmetic operation count. Only high order terms are included. <p> Distribution Anderson, D = 14 GR, p = 8 Zhao, p = 9 1-Sep 2-Sep/superd4 1-Sep 2-Sep/superd3 N=1000, uniformly dist. & 1.2e-05 6.1e-06 9.7e-05 charged, RMS force [21] N=40000, uniformly dist., 5.4e-5 1.6e-05 1.2e-04 random charges in [-1,1], RMS potential <ref> [16] </ref> [1]) 1 Z " n=0 a ) n+1 P n (~s ~x p ) g (a~s)ds;(3.1) where the integration is carried out over S 2 , the surface of the unit sphere, and P n is the nth Legendre function. <p> Timing models. In the early papers on the fast multipole method, the hierarchy depth is chosen such that there is roughly one particle in each leaf-level box (for example, see <ref> [6, 7, 9, 16, 21] </ref>), or there are a predetermined number of particles per leaf-level box [4]. Later, the issue of using an optimal hierarchy depth to minimize the total number of arithmetic operations and hopefully also the execution time of the code was raised [22].
Reference: [17] <author> J. Shimada, H. Kaneko, and T. Takada. </author> <title> Performance of fast multipole methods for calculating electrostatic interactions in biomacromolecular simulations. </title> <journal> Journal of Computational Chemistry, </journal> <volume> 15(1) </volume> <pages> 28-43, </pages> <year> 1994. </year>
Reference-contexts: Schmidt and Lee [16] examined the accuracy and the execution time for a few combinations of hierarchy depth and number of terms in the multipole expansions for a 3-D GR method with one-separation (i.e., the near-field consists of only nearest neighbor elements). Shimada et al. <ref> [17] </ref> examined a few combinations of hierarchy depth, one-separation and two-separation (i.e., the near-field consists of nearest neighbor elements and their nearest neighbors as well). <p> Author Method Degree of Use of Hierarchy separation supernodes depth Greengard-Rokhlin [7, 9] GR 2 No blog N 8 c Zhao [21] Zhao 2 Yes blog N 8 c Schmidt-Lee [16] GR 1 No 3,4,5 Shimada et al. <ref> [17] </ref> GR 1,2 No log N 8 Leathrum [13] GR 1,2,mixed 1 and 2 Yes and No blog N 8 c Esselink [5] GR 2 Yes 2,3,4 into two parts: total = nearfield + farfield ;(2.1) where nearfield is the potential due to nearby particles and farfield is the potential due
Reference: [18] <institution> Thinking Machines Corp. </institution> <note> CM Fortran Reference Manual, Version 2.1, </note> <year> 1993. </year>
Reference-contexts: Simulation environment and error definitions. The empirical evaluation in this paper were performed on the Connection Machine system CM-5E using our data-parallel implementation of a nonadaptive version of Anderson's method [10]. The code is written in Connection Machine Fortran (CMF) <ref> [18] </ref> with subroutine calls to the Connection Machine Scientific Software Library (CMSSL) [19] for nodal BLAS ACCURACY OF POISSON'S FORMULA BASED N-BODY ALGORITHMS 15 operations. Detailed descriptions of the performance of the implementation can be found in [10].
Reference: [19] <institution> Thinking Machines Corp. CMSSL for CM Fortran, </institution> <note> Version 3.1, </note> <year> 1993. </year> <title> ACCURACY OF POISSON'S FORMULA BASED N-BODY ALGORITHMS 31 </title>
Reference-contexts: The empirical evaluation in this paper were performed on the Connection Machine system CM-5E using our data-parallel implementation of a nonadaptive version of Anderson's method [10]. The code is written in Connection Machine Fortran (CMF) [18] with subroutine calls to the Connection Machine Scientific Software Library (CMSSL) <ref> [19] </ref> for nodal BLAS ACCURACY OF POISSON'S FORMULA BASED N-BODY ALGORITHMS 15 operations. Detailed descriptions of the performance of the implementation can be found in [10]. We measure the error of Anderson's method relative to a parallel implementation of the direct method.
Reference: [20] <author> M. S. Warren and J. K. Salmon. </author> <title> A portable parallel particle program. </title> <journal> Computer Physics Communications, </journal> <volume> 87, </volume> <year> 1995. </year>
Reference-contexts: 1. Introduction. Although O (N ) N -body methods <ref> [1, 8, 7, 6, 21, 20] </ref> are superior to the direct O (N 2 ) methods in terms of arithmetic complexity for large scale simulations, they have yet to gain widespread acceptance. There are several reasons for this.
Reference: [21] <author> F. Zhao. </author> <title> An O(N ) algorithm for 3-dimensional N-body simulations. </title> <type> Technical Report AI-TR-995, </type> <institution> AI Lab, MIT, </institution> <year> 1987. </year>
Reference-contexts: 1. Introduction. Although O (N ) N -body methods <ref> [1, 8, 7, 6, 21, 20] </ref> are superior to the direct O (N 2 ) methods in terms of arithmetic complexity for large scale simulations, they have yet to gain widespread acceptance. There are several reasons for this. <p> L. JOHNSSON There are four sources of errors common to all the multi-pole like O (N ) N -body methods: 1. Approximation errors in representing computational elements that represent the aggregate effect of clusters of particles by finite series expansion. Green-gard and Rokhlin (GR) [6, 7], and Zhao <ref> [21] </ref> give error bounds on truncated multipole expansions for individual computational elements as a function of the number of terms in the expansions. Similarly, Anderson [1] provides some insights into the error characteristics of methods based on Poisson's formula, but no rigorous bounds. <p> Section 7 summarizes the paper. Previous work. Table 1.1 lists the parameter choices used in some previous implementations of multipole-like methods. All simulations but the ones by Greengard-Rokhlin used uniform distributions. Greengard and Rokhlin [6], and Zhao <ref> [21] </ref> numerically examined the accuracy of their respective methods as a function of the number of terms retained in the multipole expansions, and the number of particles. <p> C. HU AND S. L. JOHNSSON Table 1.1 Characteristics of some previous implementations of multipole-like O (N) N -body methods. Author Method Degree of Use of Hierarchy separation supernodes depth Greengard-Rokhlin [7, 9] GR 2 No blog N 8 c Zhao <ref> [21] </ref> Zhao 2 Yes blog N 8 c Schmidt-Lee [16] GR 1 No 3,4,5 Shimada et al. [17] GR 1,2 No log N 8 Leathrum [13] GR 1,2,mixed 1 and 2 Yes and No blog N 8 c Esselink [5] GR 2 Yes 2,3,4 into two parts: total = nearfield + <p> This element approximates the potential field in a "local" domain due to particles in the far domain. Table 2.1 summarizes the computational elements in Barnes-Hut's [2] O (N log 2 N ) method, and the O (N ) methods by GR [6], Zhao <ref> [21] </ref>, and Anderson [1], and the coordinate systems used. The relationship between the truncation error, or error decay rate, p in the methods by GR and by Zhao, and the integration order and number of integration points K in Anderson's method is discussed in Section 2.4. <p> In all implementations so far, the translations are between far-field potentials or local-field potentials with the same truncation order. The error bounds of the three translations given below for multipole-based methods are proved by Greengard-Rokhlin [8, 7], and Zhao <ref> [21] </ref>, and are summarized in Table 2.2. <p> In three dimensions, these definitions yield 7 (2d + 1) 3 interactive-field subdomains (a 2 (2d + 1) fi 2 (2d + 1) fi 2 (2d + 1) subdomain excluding the near-field and the box itself). In <ref> [21] </ref>, Zhao defines the near-field according to the distance between individual boxes and the box under consideration. The interactive-field and far-field are defined accordingly. Under this definition, there are only 81 near-field and 567 interactive-field boxes in three dimensions. <p> The reduced separation will lower the base in the error estimate ((2d + 2)= p and therefore increase the error for a fixed p. 2.3. Supernodes. The use of supernodes <ref> [9, 21] </ref> reduces the effective value of N int for a given separation, which brings about a dramatic improvement in the overall performance. <p> Supernodes. The use of supernodes [9, 21] reduces the effective value of N int for a given separation, which brings about a dramatic improvement in the overall performance. In <ref> [21] </ref>, Zhao observes that for two-separations in three dimensions, there are many groups of eight sibling nodes of common parents in the the 567 interactive-field boxes of a destination box for the far-field to local-field conversion. <p> Distribution Anderson, D = 14 GR, p = 8 Zhao, p = 9 1-Sep 2-Sep/superd4 1-Sep 2-Sep/superd3 N=1000, uniformly dist. & 1.2e-05 6.1e-06 9.7e-05 charged, RMS force <ref> [21] </ref> N=40000, uniformly dist., 5.4e-5 1.6e-05 1.2e-04 random charges in [-1,1], RMS potential [16] [1]) 1 Z " n=0 a ) n+1 P n (~s ~x p ) g (a~s)ds;(3.1) where the integration is carried out over S 2 , the surface of the unit sphere, and P n is the <p> The rather large base constants in Table 5.2 suggests that for computational elements of similar decay rates, Anderson's method is more accurate than GR's or Zhao's methods, for which the base constants are about two <ref> [21] </ref>. Attempting to verify the base constant and error decay rate from our simulations 20 Y. C. HU AND S. L. JOHNSSON Fig. 5.7. The RMS error of the potential for 1M particles and optimal hierarchy depth for each of the five integration orders. Fig. 5.8. <p> Timing models. In the early papers on the fast multipole method, the hierarchy depth is chosen such that there is roughly one particle in each leaf-level box (for example, see <ref> [6, 7, 9, 16, 21] </ref>), or there are a predetermined number of particles per leaf-level box [4]. Later, the issue of using an optimal hierarchy depth to minimize the total number of arithmetic operations and hopefully also the execution time of the code was raised [22].
Reference: [22] <author> F. Zhao and S. L. Johnsson. </author> <title> The parallel multipole method on the Connection Machine. </title> <journal> SIAM J. Sci. Statist. Comput., </journal> <volume> 12(6) </volume> <pages> 1420-1437, </pages> <month> Nov. </month> <year> 1991. </year>
Reference-contexts: Later, the issue of using an optimal hierarchy depth to minimize the total number of arithmetic operations and hopefully also the execution time of the code was raised <ref> [22] </ref>. In [1], Anderson proposed a performance model based on the FLOP count for predicting the absolute execution time of different stages of the method on uniprocessors for any given particle distribution and hierarchy depth.
References-found: 22

