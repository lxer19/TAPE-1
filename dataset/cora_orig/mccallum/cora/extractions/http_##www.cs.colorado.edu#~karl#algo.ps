URL: http://www.cs.colorado.edu/~karl/algo.ps
Refering-URL: http://www.cs.colorado.edu/~karl/
Root-URL: http://www.cs.colorado.edu
Title: Algorithms of a "standard flavor" cannot solve NP-complete problems (Detailed Abstract) limitations of classes of
Author: Karl Winklmann 
Note: It also illustrates that  
Date: May 3, 1994  
Abstract: Many standard discrete optimization algorithms share a certain combinatorial property which provably cannot be shared by any algorithm that solves SAT. This result provides a new form of evidence for the instrinsic complexity of NP-complete problems. 
Abstract-found: 1
Intro-found: 1
Reference: [CLR90] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> The MIT Press, McGraw Hill. </publisher> <year> 1990. </year>
Reference-contexts: A cost is associated with each triangle and the sum of the costs is to be minimized. It is a standard example of a problem solvable by dynamic programming and is closely related to matrix chain multiplication, which is another standard example. (See e.g. <ref> [CLR90, 320-323] </ref>.) An algorithmic cut can be effected by cutting the polygon in two, giving each processor one piece, disallowing chords that connect points of the polygon that are not visible to a single processor, and | much like with traveling salesman | supplying a-priori knowledge about the overall ignorance of
Reference: [GJ79] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <publisher> Prentice Hall, </publisher> <address> Engle-wood Cliffs, </address> <year> 1979. </year>
Reference: [Joh84] <author> D. S. Johnson. </author> <title> The NP-completeess column: An ongoing guide. </title> <journal> J. Algorithms, </journal> <volume> 5, </volume> <month> December </month> <year> 1984. </year>
Reference: [LW86] <author> N. Lakshmipathy and K. Winklmann. </author> <title> `Global' graph problems tend to be intractable. </title> <journal> J. Comput. System Sci., </journal> <volume> 32 </volume> <pages> 407-428, </pages> <year> 1986. </year> <title> "Standard" algorithms 11 </title>
Reference-contexts: Relationship to existing work The next section, Section 3 on "natural" cuts, describes existing work. That work <ref> [LW86, SW91] </ref> appeared to be limited to certain types of problems | graph problems (and problems naturally cast as graph problems) where cutting the graph along a vertex or edge cutset did result in two essentially unrelated subproblems. <p> Other problems and algorithms <ref> [LW86] </ref> and [SW91] proved analogous results for a variety of problems, always showing a polynomial -index for polynomial-time restrictions or counterparts of NP-complete problems, and an exponential -index for the NP-complete versions. <p> The present paper extends this approach to problems where the seemingly "natural" way of cutting the problem instance does not lead to results, and to problems that involve numerical data, thus covering many more algorithms and problems than the existing work reported in <ref> [LW86, SW91] </ref>. ([Joh84] provided a brief discussion of the limitations of the work reported in a tech report version of [LW86].) 4. <p> of cutting the problem instance does not lead to results, and to problems that involve numerical data, thus covering many more algorithms and problems than the existing work reported in [LW86, SW91]. ([Joh84] provided a brief discussion of the limitations of the work reported in a tech report version of <ref> [LW86] </ref>.) 4. The rules of the game: ways of cutting The problem with clique If we divide a graph between two processors along a vertex cutset, then any clique is entirely visible to one processor or the other (or both, if it lies entirely within the cutset).
Reference: [PS84] <author> C. H. Papadimitriou and M. Sipser. </author> <title> Communication complexity. </title> <journal> J. Comput. System Sci., </journal> <volume> 28 </volume> <pages> 260-269, </pages> <year> 1984. </year>
Reference-contexts: Lemma 3. 2-SAT is bounded from above by a polynomial. 3-SAT is bounded from below by an exponential function. The proof involves a greedy algorithm for 2-sat and an adversary argument for 3-sat, the latter borrowed from <ref> [PS84] </ref> where it was used to prove that the "set intersection" problem of size n | deciding if two bitstrings of length n have a 1 in common | required n (= 2 s in the present context) bits of communication.
Reference: [SW91] <author> W. A. Slough and K. Winklmann. </author> <title> On limitations of transformations between combinatorial problems. </title> <journal> Math. Systems Theory, </journal> <volume> 24 </volume> <pages> 149-168, </pages> <year> 1991. </year>
Reference-contexts: Relationship to existing work The next section, Section 3 on "natural" cuts, describes existing work. That work <ref> [LW86, SW91] </ref> appeared to be limited to certain types of problems | graph problems (and problems naturally cast as graph problems) where cutting the graph along a vertex or edge cutset did result in two essentially unrelated subproblems. <p> Other problems and algorithms [LW86] and <ref> [SW91] </ref> proved analogous results for a variety of problems, always showing a polynomial -index for polynomial-time restrictions or counterparts of NP-complete problems, and an exponential -index for the NP-complete versions. <p> The present paper extends this approach to problems where the seemingly "natural" way of cutting the problem instance does not lead to results, and to problems that involve numerical data, thus covering many more algorithms and problems than the existing work reported in <ref> [LW86, SW91] </ref>. ([Joh84] provided a brief discussion of the limitations of the work reported in a tech report version of [LW86].) 4.
Reference: [Win85] <author> K. Winklmann. </author> <title> A technique for proving intrinsic limitations of algorithm designs. </title> <type> Technical Report CU-CS-315-85, </type> <institution> Computer Science Department, University of Colorado at Boulder, </institution> <year> 1985. </year>
References-found: 7

