URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/jkr/www/papers/IROS_95.ps.gz
Refering-URL: http://www.ri.cmu.edu/afs/cs/project/alv/member/www/projects/DAMN.html
Root-URL: 
Email: -jkr,cet-@cmu.edu  
Title: Combining Multiple Goals in a Behavior-Based Architecture Distributed Architecture for Mobile Navigation (DAMN) has been
Author: Julio K. Rosenblatt Charles E. Thorpe 
Note: The  
Address: Pittsburgh PA 15213  
Affiliation: Robotics Institute Carnegie Mellon University  
Abstract: Our experience over the years with different architectures and planning systems for mobile robots has led us to a distributed approach where an arbiter receives votes for and against commands from each subsystem and decides upon the course of action which best satisfies the current goals and constraints of the system. Centralized arbitration of votes from distributed, independent decision-making processes provides coherent, rational, goal-directed behavior while preserving real-time responsiveness to its immediate physical environment. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Albus, H. McCain, R. Lumia, </author> <title> NASA/NBS Standard Reference Model for Telerobot Control System Architecture (NASREM), </title> <type> NBS Tech. Note 1235, </type> <address> Gaithersburg, MD, </address> <year> 1987. </year>
Reference-contexts: Hierarchical approaches allow slower abstract reasoning at the higher levels and faster numerical computations at the lower levels, thus allowing varying trade-offs between responsiveness and optimality as appropriate at each level [11] <ref> [1] </ref>. While such an approach provides aspects of both deliberative planning and reactive control, the top-down nature of hierarchical structures tends to overly restrict the lower levels [13].
Reference: [2] <author> R. Arkin, </author> <title> Motor Schema Based Navigation for a Mobile Robot: An Approach to Programming by Behavior, </title> <month> ICRA </month> <year> 1987. </year>
Reference-contexts: In order to allow multiple considerations to affect vehicle actions concurrently, DAMN instead uses a scheme where each behavior votes for or against each of a set of possible vehicle actions [17]. An arbiter then performs command fusion to select the most appropriate action. While the Motor Schema framework <ref> [2] </ref> also offers a means of fusing commands from multiple behaviors, it suffers from the well known problem of local minima in potential fields. Another, perhaps more serious problem, is that arbitration via vector addition can result in a command which is not satisfactory to any of the contributing behaviors.
Reference: [3] <author> R. Brooks, </author> <title> A Robust Layered Control System for a Mobile Robot, </title> <journal> IEEE Journal of Robotics and Automation vol. RA-2, </journal> <volume> no. 1, </volume> <pages> pp. 14-23, </pages> <month> April </month> <year> 1986. </year>
Reference-contexts: While all votes must pass through the command arbiter before an action is taken, the function provided by the arbiter is fairly simple and does not represent the centralized bottleneck of more traditional systems. However, unlike reactive systems such as the Subsumption Architecture <ref> [3] </ref>, the perception and planning components of a behavior are not prohibited from maintaining complex internal representations of the world. <p> In some architectures, this is achieved by having priorities assigned to each behavior; of all the behaviors issuing commands, the one with the highest priority is in control and the rest are ignored <ref> [3] </ref> [18]. In order to allow multiple considerations to affect vehicle actions concurrently, DAMN instead uses a scheme where each behavior votes for or against each of a set of possible vehicle actions [17]. An arbiter then performs command fusion to select the most appropriate action. <p> Safety Behaviors. A basic need for any mobile robot system is the ability to avoid situations hazardous to itself or to other objects in its environment. Therefore, an important part of DAMN is its first level of competence <ref> [3] </ref>, which consists of behaviors designed to provide vehicle safety.
Reference: [4] <author> R. Brooks, </author> <title> Intelligence Without Reason. </title> <booktitle> Proc. IJCAI93. </booktitle> <year> 1993. </year>
Reference-contexts: However, unlike reactive systems such as the Subsumption Architecture [3], the perception and planning components of a behavior are not prohibited from maintaining complex internal representations of the world. It has been argued that the world is its own best model <ref> [4] </ref>, but this assumes that the vehicles sensors and the algorithms which process them are essentially free of harmful noise and that they can not benefit from evidence combination between consecutive scenes.
Reference: [5] <author> M. Daily, Harris, J., Keirsey, D., Olin, K., Payton, D., Reiser, K., Rosenblatt, J., Tseng, D. and Wong, V., </author> <title> Autonomous Cross-Country Navigation with the ALV, </title> <booktitle> in IEEE Conference on Robotics and Automation, </booktitle> <address> Philadelphia, PA, </address> <month> April, </month> <year> 1988. </year> <note> (Also appears in DARPA Knowledge Based Planning Workshop, December, 1987 pp 20-1 to 20-10). </note>
Reference: [6] <author> J.S. Kay, C.E. Thorpe. </author> <title> STRIPE Supervised Telerobotics Using Incremental Polygonal Earth Geometry. </title> <booktitle> In Proc. Intelligent Autonomous Systems Conference, </booktitle> <year> 1993. </year>
Reference-contexts: The output units of a neural network represent evaluations of particular turn commands; these units are simply resampled to the DAMN turn vote space, using a Gaussian of the appropriate width. This process is illustrated in Figure 5. Teleoperation. The STRIPE teleoperation system <ref> [6] </ref> allows an operator to designate waypoints for the vehicle; STRIPE determines an appropriate steering commands and sends a set of votes representing a Gaussian centered on the desired command.
Reference: [7] <author> Keirsey, D.M., Payton, D.W. and Rosenblatt, J.K., </author> <title> Autonomous Navigation in Cross-Country Terrain, </title> <booktitle> in Proceedings of Image Understanding Workshop, </booktitle> <address> Cambridge, MA, </address> <month> April, </month> <year> 1988. </year>
Reference-contexts: The Goal Seeking behavior is one way to provide this capability. This simple behavior directs the vehicle toward a series of goal points specified in global coordinates either by the user [8] or by a map-based planner <ref> [7] </ref>. The desired turn radius is transformed into a series of votes by applying a Gaussian whose peak is at the desired turn radius and which tapers off as the difference between this turn radius and a prospective turn command increases. <p> The third level of competence is comprised of the various map-based goal-seeking behaviors. Cross-country behaviors have been combined with goal-oriented behaviors to produce directed off-road navigation <ref> [7] </ref> [13] [21]. 2.4 Future Work DAMN has proven to be very effective as an architecture which greatly facilitates the integration of a wide variety of different vehicle navigation subsystems; however, as DAMN is used for increasingly complex tasks where many behaviors may be issuing votes concurrently, there will be a
Reference: [8] <author> D. Langer, J.K. Rosenblatt, and M. Hebert, </author> <title> A Behavior-Based System For Off-Road Navigation, </title> <journal> in IEEE Journal of Robotics and Automation, </journal> <volume> vol. 10, no. 6, </volume> <pages> pp. </pages> <month> 776-782, </month> <title> December 1994; and An Integrated System For Autonomous Off-Road Navigation, </title> <booktitle> in the Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <address> San Diego, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: The Goal Seeking behavior is one way to provide this capability. This simple behavior directs the vehicle toward a series of goal points specified in global coordinates either by the user <ref> [8] </ref> or by a map-based planner [7]. The desired turn radius is transformed into a series of votes by applying a Gaussian whose peak is at the desired turn radius and which tapers off as the difference between this turn radius and a prospective turn command increases. <p> A detailed description of an implemented system and the experimental results achieved can be found in <ref> [8] </ref>. The voting strengths, or weights, of each behavior are specified by the user or by a mission planning module. DAMN is fairly insensitive to the values of these weights and the system performs well without a need to tweak these parameters.

References-found: 8

