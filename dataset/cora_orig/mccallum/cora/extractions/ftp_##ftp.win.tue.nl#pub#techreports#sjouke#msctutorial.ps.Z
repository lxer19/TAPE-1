URL: ftp://ftp.win.tue.nl/pub/techreports/sjouke/msctutorial.ps.Z
Refering-URL: http://www.win.tue.nl/win/cs/fm/sjouke/msc.html
Root-URL: http://www.win.tue.nl
Email: eMail: rudolphe@informatik.tu-muenchen.de  eMail: gr@zfe.siemens.de  eMail: jens@itm.mu-luebeck.de  
Title: Tutorial on Message Sequence Charts  
Author: Ekkart Rudolph a Peter Graubmann b and Jens Grabowski c 
Keyword: MSC, SDL, object oriented modelling, composition techniques, system engineering, requirement specification.  
Address: D-80290 Munchen, Germany,  SE, Otto-Hahn-Ring 6, D-81739 Munchen, Germany,  D-23538 Lubeck, Germany,  
Affiliation: a Technical University of Munich, Institute for Informatics, Arcisstrasse 21,  b Siemens AG, ZFE T  c Medical University of Lubeck, Institute for Telematics, Ratzeburger Allee 160,  
Abstract: An introduction to the ITU standard language Message Sequence Chart (MSC) is provided. It is pointed out that MSC in many respects is complementary to the ITU specification and design language SDL. MSC in combination with SDL or other languages, now plays a role in nearly all stages of the system development process. Since MSC has been standardized in the same study group as SDL, the language form is quite analogous, e.g. it has a graphical (MSC/GR) and a textual (MSC/PR) syntax form. The MSC language in the present recommendation Z.120 (MSC'92), comprises basic language elements instance, message, environment, action, timer, process creation and termination, condition and structural language elements - coregion and submsc. It is demonstrated how global and non-global conditions may be used for the composition of MSCs. Whereas in MSC'92 main emphasis is put on the elaboration of basic concepts and a corresponding formal semanrics, in the new MSC version (MSC'96) structural language constructs, essentially composition and object oriented concepts, will play a dominant role. With these new concepts, the power of MSC is enhanced considerably in order to overcome the traditional restriction of MSC to the specification of few selected system runs. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> B. Algayres, Y. Lejeune, F. Hugonnet, F. Hantz. </author> <title> The AVALON-Project A VALidatiON Environment for SDL/MSC Descriptions. In: SDL'93 Using Objects (O. </title> <editor> Faergemand and A. Sarma, editors). </editor> <publisher> North-Holland, </publisher> <month> Oct. </month> <year> 1993. </year>
Reference: 2. <author> A. Ek. </author> <title> Verifying Message Sequence Charts with the SDT Validator. In: SDL'93 Using Objects (O. </title> <editor> Faergemand and A. Sarma, editors). </editor> <publisher> North-Holland, </publisher> <month> Oct. </month> <year> 1993. </year>
Reference: 3. <author> A. Ek. </author> <title> Event-Oriented Textual Syntax. TD44 (Question 9/10), ITU-T Study Group 10 Meeting in Geneva, </title> <address> Oct. </address> <year> 1994. </year>
Reference: 4. <author> J. Grabowski, P. Graubmann, E. Rudolph. </author> <title> The Standardization of Message Sequence Charts. </title> <booktitle> In: Proceedings of the IEEE Software Engineering Standards Symposium 1993. </booktitle> <month> Sept. </month> <year> 1993. </year>
Reference-contexts: MSCs have been used informally for a long time by ITU (former CCITT) Study Groups in their recommendations and in industry. Their standardization was suggested at the 4.th SDL Forum October 1989 in Lisbon [7] and 2 agreed upon at the ITU-meeting Helsinki, June 1990 <ref> [4] </ref>. At the closing session of the ITU study period 1989-1992 in Geneva, May 1992, the new MSC recommendation Z.120 [19] was approved. Within the present study period, as a major achievement, a formal semantics for MSCs based on process algebra has been standardized [20].
Reference: 5. <author> J. Grabowski, D. Hogrefe, R. Nahm. </author> <title> A Method for the Generation of Test Cases Based on SDL and MSCs. </title> <type> Technical Report IAM-93-010, </type> <institution> University of Berne, Institute for Informatics, </institution> <month> April </month> <year> 1993. </year>
Reference: 6. <author> J. Grabowski, D. Hogrefe, R. Nahm. </author> <title> Test Case Generation with Test Purpose Specification by MSCs. In: SDL'93 Using Objects (O. </title> <editor> Faergemand and A. Sarma, editors). </editor> <publisher> North-Holland, </publisher> <month> Oct. </month> <year> 1993. </year>
Reference: 7. <author> J. Grabowski, E. Rudolph. </author> <title> Putting Extended Sequence Charts to Practice. In: SDL'89 - The Language at Work (O. </title> <editor> Faergemand and M. M. Marques, editors). </editor> <publisher> North-Holland, </publisher> <month> Oct. </month> <year> 1989. </year>
Reference-contexts: MSCs have been used informally for a long time by ITU (former CCITT) Study Groups in their recommendations and in industry. Their standardization was suggested at the 4.th SDL Forum October 1989 in Lisbon <ref> [7] </ref> and 2 agreed upon at the ITU-meeting Helsinki, June 1990 [4]. At the closing session of the ITU study period 1989-1992 in Geneva, May 1992, the new MSC recommendation Z.120 [19] was approved. <p> Due to the standardization, the importance of MSCs for system engineering has increased considerably. Accordingly, MSCs are used * for requirement definition [7,18], * as an overview specification of process communication [18], * as an interface specification [18], * as a basis for automatic generation of skeleton SDL specifications <ref> [7] </ref>, * for simulation and consistency check of SDL specifications [1,2,13,14], * as a basis for selection and specification of test cases [5,6], * for documentation [7], * for object oriented design and analysis (object interaction) [12]. 2. <p> an overview specification of process communication [18], * as an interface specification [18], * as a basis for automatic generation of skeleton SDL specifications <ref> [7] </ref>, * for simulation and consistency check of SDL specifications [1,2,13,14], * as a basis for selection and specification of test cases [5,6], * for documentation [7], * for object oriented design and analysis (object interaction) [12]. 2. Why yet another Specification Language? One way to understand the meaning and the usefulness of MSCs may be by relating them to other specification languages like SDL, LOTOS or Petri Nets.
Reference: 8. <author> O. Haugen. </author> <title> Case Studies: MSC and Structural Concepts. TD17 (Question 9/10), ITU-T Study Group 10 Meeting in Geneva, </title> <address> Oct. </address> <year> 1994. </year>
Reference: 9. <author> O. Haugen. </author> <title> Structural Concepts in MSC. Report from Associate Rapporteur. TD18 (Question 9/10), ITU-T Study Group 10 Meeting in Geneva, </title> <address> Oct. </address> <year> 1994. </year>
Reference: 10. <author> D. Hogrefe. </author> <title> OSI Formal Specification Case Study: The Inres Protocol and Service (revised). </title> <type> Technical Report IAM-91-012, </type> <institution> University of Berne, Institute for Informatics, </institution> <month> May </month> <year> 1991, </year> <month> Update May </month> <year> 1992. </year>
Reference-contexts: For an illustration of the relation between SDL and MSC, in the following, we use the Inres service specification as a standard example <ref> [10] </ref>. Let us consider the MSC conreq in Figure 1 which describes a selected trace piece of the connection set-up in the Inres service specification: An Initiator-user sends a connection request (ICONreq) to the Initiator.
Reference: 11. <author> ITU-T SG 10 Q.9 (Rapporteur). </author> <title> Correction List for Z.120 (I): Extensions and Modifications of Basic Concepts. TD31 (Question 9/10), ITU-T Study Group 10 Meeting in Geneva, </title> <address> Oct. </address> <year> 1994. </year>
Reference-contexts: The corresponding MSC/GR constructs are shown in Figure 5. The new timer symbols, differing from the graphical symbols defined in Z.120, have been requested and elaborated within the present study period. They will be part of MSC'96 <ref> [11] </ref>. The individual timer constructs (timer setting, reset/timeout) may be split between different MSCs in cases where the whole scenario is obtained from the composition of several 7 MSCs (cf. Section 3.4).
Reference: 12. <author> I. Jacobson. </author> <title> Object-Oriented Software Engineering A Use Case Driven Approach. </title> <publisher> Addison-Wesley, </publisher> <year> 1992. </year>
Reference-contexts: interface specification [18], * as a basis for automatic generation of skeleton SDL specifications [7], * for simulation and consistency check of SDL specifications [1,2,13,14], * as a basis for selection and specification of test cases [5,6], * for documentation [7], * for object oriented design and analysis (object interaction) <ref> [12] </ref>. 2. Why yet another Specification Language? One way to understand the meaning and the usefulness of MSCs may be by relating them to other specification languages like SDL, LOTOS or Petri Nets. <p> So, candidates for MSCs are primarily the standard cases. These standard cases may be supplemented by MSCs describing exceptional behaviour altogether providing a use case like representation <ref> [12] </ref>. Recently, attempts have been made to enhance the language and to make a fairly comprehensive system description feasible by using composition and object oriented techniques.
Reference: 13. <author> F. Kristoffersen. </author> <title> Message Sequence Chart and SDL Specification Consistency Check. In: SDL'91 Evolving Methods (O. </title> <editor> Faergemand and R. Reed, editors). </editor> <publisher> North-Holland, </publisher> <year> 1991. </year>
Reference: 14. <author> R. Nahm. </author> <title> Consistency Analysis of Message Sequence Charts and SDL-Systems. In: SDL'91 Evolving Methods (O. </title> <editor> Faergemand and R. Reed, editors). </editor> <publisher> North-Holland, </publisher> <year> 1991. </year>
Reference: 15. <author> M. A. Reniers. </author> <title> Syntax Requirements of Message Sequence Charts. TD59 (Question 9/10), ITU-T Study Group 10 Meeting in Geneva, </title> <address> Oct. </address> <year> 1994. </year>
Reference-contexts: Within the present study period, as a major achievement, a formal semantics for MSCs based on process algebra has been standardized [20]. A standard document on static syntax requirements is in preparation <ref> [15] </ref>. Besides formal semantics main emphasis is put on structural concepts [8,9]. The reason to standardize MSCs was to allow systematic tool support, to facilitate the exchange between different tools, and to ease the mapping to and from SDL specifications.
Reference: 16. <author> E. Rudolph, P. Graubmann, J Grabowski. </author> <title> Message Sequence Chart: Composition Techniques versus OO-Techniques - 'Tema con Variazioni'. </title> <booktitle> In: SDL'95 Proceedings of the 7.th SDL Forum in Oslo, </booktitle> <editor> Norway (R. Braek and A. Sarma, editors). </editor> <publisher> North-Holland, </publisher> <month> Sep. </month> <year> 1995. </year> <month> 15 </month>
Reference-contexts: The environmental merge may be understood as a horizontal merge operation. A special application could be the horizontal paging. Some other parallel merge operations, called synchronization merge and synchronization condition merge, are under consideration but not discussed here (cf. <ref> [16] </ref>). The environmental merge operator k env (Figure 11) identifies every message sent to or received from a gate in the environment of the first MSC MSC1 with the message received from, respectively sent to, the equally named gate in the environment of the second MSC 12 MSC2.
Reference: 17. <author> Z.100 (1993). </author> <title> CCITT Specification and Description Language (SDL). </title> <type> ITU-T, </type> <month> June </month> <year> 1994. </year>
Reference-contexts: The MSC Language 3.1. MSC/PR and MSC/GR In analogy to the SDL recommendation Z.100 <ref> [17] </ref> the new MSC recommendation Z.120 [19] includes two syntactical forms, MSC/PR as a pure textual and MSC/GR as a graphical representation. An MSC in MSC/GR representation can be transformed automatically into a corresponding MSC/PR representation.
Reference: 18. <author> Z.100 I (1993). </author> <title> SDL Methodology Guidelines. Appendix I to Z.100. </title> <type> ITU-T, </type> <month> July </month> <year> 1993. </year>
Reference-contexts: Due to the standardization, the importance of MSCs for system engineering has increased considerably. Accordingly, MSCs are used * for requirement definition [7,18], * as an overview specification of process communication <ref> [18] </ref>, * as an interface specification [18], * as a basis for automatic generation of skeleton SDL specifications [7], * for simulation and consistency check of SDL specifications [1,2,13,14], * as a basis for selection and specification of test cases [5,6], * for documentation [7], * for object oriented design and <p> Due to the standardization, the importance of MSCs for system engineering has increased considerably. Accordingly, MSCs are used * for requirement definition [7,18], * as an overview specification of process communication <ref> [18] </ref>, * as an interface specification [18], * as a basis for automatic generation of skeleton SDL specifications [7], * for simulation and consistency check of SDL specifications [1,2,13,14], * as a basis for selection and specification of test cases [5,6], * for documentation [7], * for object oriented design and analysis (object interaction) [12]. 2. <p> To determine possible combinations the already introduced (global and non-global) conditions may be used employing certain composition and decomposition rules which presently are part of the methodology guidelines <ref> [18] </ref>. According to the recent ITU-T work this composition may be defined within roadmaps (cf. Section 4). MSCs can be composed by name identification of final and initial (global or non-global) conditions.
Reference: 19. <author> Z.120 (1993). </author> <title> Message Sequence Chart (MSC). </title> <type> ITU-T, </type> <month> Sep. </month> <year> 1994. </year>
Reference-contexts: Their standardization was suggested at the 4.th SDL Forum October 1989 in Lisbon [7] and 2 agreed upon at the ITU-meeting Helsinki, June 1990 [4]. At the closing session of the ITU study period 1989-1992 in Geneva, May 1992, the new MSC recommendation Z.120 <ref> [19] </ref> was approved. Within the present study period, as a major achievement, a formal semantics for MSCs based on process algebra has been standardized [20]. A standard document on static syntax requirements is in preparation [15]. Besides formal semantics main emphasis is put on structural concepts [8,9]. <p> The MSC Language 3.1. MSC/PR and MSC/GR In analogy to the SDL recommendation Z.100 [17] the new MSC recommendation Z.120 <ref> [19] </ref> includes two syntactical forms, MSC/PR as a pure textual and MSC/GR as a graphical representation. An MSC in MSC/GR representation can be transformed automatically into a corresponding MSC/PR representation.
Reference: 20. <author> Z.120 B (1995). </author> <title> Message Sequence Chart Algebraic Semantics. </title> <publisher> ITU-T Publ. </publisher> <address> sched., </address> <month> May </month> <year> 1995. </year>
Reference-contexts: At the closing session of the ITU study period 1989-1992 in Geneva, May 1992, the new MSC recommendation Z.120 [19] was approved. Within the present study period, as a major achievement, a formal semantics for MSCs based on process algebra has been standardized <ref> [20] </ref>. A standard document on static syntax requirements is in preparation [15]. Besides formal semantics main emphasis is put on structural concepts [8,9].
References-found: 20

