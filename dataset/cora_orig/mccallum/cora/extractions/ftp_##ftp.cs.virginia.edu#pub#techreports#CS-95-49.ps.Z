URL: ftp://ftp.cs.virginia.edu/pub/techreports/CS-95-49.ps.Z
Refering-URL: ftp://ftp.cs.virginia.edu/pub/techreports/README.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: An Implementation of a Parallel Object Oriented Database System  
Author: Russell F. Haddleton 
Note: This research was supported in part by DOE Grant 95ER25254  
Address: Charlottesville, VA 22901  
Affiliation: Computer Science Department School of Engineering and Applied Science University of Virginia  
Date: December 20, 1995  
Pubnum: CS-95-49  
Abstract-found: 0
Intro-found: 1
Reference: [BeDe90] <author> Veronique Benzaken and Claude Delobel, </author> <title> Enhancing Performance in a Persistent Object Store: Clustering Strategies in O 2 , Implementing Persistent Object Bases: </title> <booktitle> Principles and Practice, Proceedings of the Fourth International Workshop on Persistent Object Systems, </booktitle> <address> Marthas Vineyard, </address> <year> 1990. </year> <pages> pp. 403-412. </pages>
Reference-contexts: This would lead us away from maintaining ADAMS as configuration independent, which is undesirable. The problem would be to determine when such drastic changes would yield a significant benefit. Papers on object clustering include (disk clustering) <ref> [BeDe90] </ref> and (partition placement) [GWLZ94]. 5.6 Skew Management It would be a simple task to modify the uid generation algorithm to favor object identifier assignments to or away from a particular partition.
Reference: [Broo75] <author> Frederick P. Brooks, Jr., </author> <title> The Mythical Man-Month, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass. </address> <year> 1975. </year>
Reference: [CaDN94] <author> Michael J. Carey, David J. DeWitt, and Jeffrey F. Naughton, </author> <title> The 007 Benchmark, </title> <type> Technical Report, </type> <institution> Computer Sciences Department, University of Wisconsin-Madison, file://ftp.cs.wisc.edu/oo7/. </institution>
Reference: [CDFH94] <author> Michael J. Carey, David J. DeWitt, Michael J. Franklin, Nancy E. Hall, Mark L. McAuliffe, Jeffrey F. Naughton, et al., </author> <booktitle> Shoring Up Persistent Applications,Proceedings of the 1994 ACM SIGMOD International Conference on Management of Data, </booktitle> <address> Minneapolis, Minnesota, </address> <month> May </month> <year> 1994. </year> <booktitle> SIGMOD Record, </booktitle> <volume> Volume 23, Issue 2, </volume> <month> June </month> <year> 1994, </year> <pages> pp. 383-394. </pages>
Reference-contexts: The language addition would require careful design, as would any changes to the ADAMS Server interface. An approach similar to that used by SHORE <ref> [CDFH94] </ref>, which apparently allows a value added server residing on the SHORE servers processor to handle custom methods, could be implemented using Mentat without great difficulty (and with little risk to the ADAMS Servers). But we would prefer to do something radically different if a reasonable alternative could be found.
Reference: [CoKh85] <author> George P. Copeland and Setrag N. </author> <title> Khoshafian, </title> <booktitle> A Decomposition Storage Model,Proceedings of the 1985 ACM SIGMOD International Conference on Management of Data, </booktitle> <address> Austin, Texas, </address> <month> May, </month> <pages> 1985 pp. 268-279. </pages>
Reference-contexts: ADAMS data structures include sets, maps (inter-object references), and attributes. Our storage model is similar to the Decomposition Storage Model discussed by Copeland and Khoshafian <ref> [CoKh85] </ref>. Rather than store an objects attribute and map values contiguously, all values for an attribute or map are stored in a (parallel) tree structure associated with the name of the attribute or map. These tree structures are indexed by object identifier.
Reference: [DNSV94] <author> David J. DeWitt, Jeffrey F. Naughton, John C. Shafer, and Shivakumar Venkataraman, </author> <title> ParSets for Pallelizing OODBMS Traversals: Implementation and Performance, </title> <address> http://www.cs.wisc.edu/shore/ shore.papers.html. </address>
Reference: [GCDM94] <author> Goetz Graefe,Richard L. Cole, Diane L. Davison, William J. McKenna, and Richard H. Wolniewicz, </author> <title> Extensible Query Optimization and Parallel Execution in Volcano, Query Processing For Advanced Database Systems, Johann Freytag, </title> <editor> David Maier, and Gottfried Vossen, editors, </editor> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo 1994. </address>
Reference-contexts: Of particular interest in the optimization area is work by Graefe and others <ref> [GCDM94, Grae94, Grae93] </ref>. It should be noted that while there are a number of papers on parallel relational query processing and optimization, and some on object oriented query optimization, there is very little published work on parallel object oriented (non navigational) query processing.
Reference: [GWLZ94] <author> Shahram Ghandeharizadeh, David Wilhite, Kaming Lin, and Xiaoming Zao, </author> <title> Object placement in Parallel Object-Oriented Database Systems, </title> <booktitle> Proceedings of the 10th International Conference on Data Engineering, </booktitle> <address> Houston, Texas 1994, </address> <pages> pp. 253-262. </pages>
Reference-contexts: This would lead us away from maintaining ADAMS as configuration independent, which is undesirable. The problem would be to determine when such drastic changes would yield a significant benefit. Papers on object clustering include (disk clustering) [BeDe90] and (partition placement) <ref> [GWLZ94] </ref>. 5.6 Skew Management It would be a simple task to modify the uid generation algorithm to favor object identifier assignments to or away from a particular partition.
Reference: [Grae93] <author> Goetz Graefe, </author> <title> Query Evaluation Techniques for Large Databases, </title> <journal> ACM Computing Surveys, </journal> <volume> Volume 25, Number 2. </volume> <month> June, </month> <year> 1993 </year>
Reference-contexts: Of particular interest in the optimization area is work by Graefe and others <ref> [GCDM94, Grae94, Grae93] </ref>. It should be noted that while there are a number of papers on parallel relational query processing and optimization, and some on object oriented query optimization, there is very little published work on parallel object oriented (non navigational) query processing.
Reference: [Grae94] <editor> Goetz Graefe,Volcano - An Extensible and Parallel Query Evaluation System, </editor> <booktitle> IEEE Transactions on Knowledge and Data Engineering, </booktitle> <volume> Volume 6, No. 1, </volume> <month> February </month> <year> 1994 </year> <month> 31 </month>
Reference-contexts: Of particular interest in the optimization area is work by Graefe and others <ref> [GCDM94, Grae94, Grae93] </ref>. It should be noted that while there are a number of papers on parallel relational query processing and optimization, and some on object oriented query optimization, there is very little published work on parallel object oriented (non navigational) query processing.
Reference: [HaPf96] <author> Russell F. Haddleton and John L. Pfaltz, </author> <title> Parallelism in Scientific Database Queries, </title> <booktitle> Proceedings of the Eighth International Working Conference on Scientific and Statistical Database Management, </booktitle> <address> Stockholm 1996. </address> <note> Submitted. </note>
Reference-contexts: We see these application environments as write once/read many, where providing an ADAMS user with the means to quickly isolate data of interest from a vast collection is of primary importance. Our query processing goals and ADAMS query processing methods are discussed further in <ref> [HaPf96] </ref>. This paper focuses on ADAMS parallel features. Other documents discuss the ADAMS language [Pfal95] and the theory behind O-trees [OrPf88]. Future documents may discuss the O-tree implementation, the ADAMS storage manager, and stream processing within ADAMS.
Reference: [HaSS88] <author> T. Harder, H. Schoning, and A. Sikeler, </author> <title> Parallelism in Processing Queries on Complex Objects, </title> <booktitle> Proceedings of the International Symposium on Databases in Parallel and Distributed Systems, </booktitle> <address> Austin, </address> <year> 1988, </year> <pages> pp. 131-143. </pages>
Reference-contexts: When results have been presented, they have generally been from simulations. A paper of particular interest is by Khoshafian, Valduriez, and Copeland [KhVC88], which discusses the decomposed storage model (similar to that employed by ADAMS, although we specify partitioning by object identifier). Other papers of interest include [LeTa95], [JWKL90], <ref> [HaSS88] </ref> and [ThSu94]. 5.2 Navigational Query Support Khoshafian defines navigational access as follows: In this type of access various reachable objects are accessed through attribute values or elements of referencing or parent objects.
Reference: [JiGr91] <author> Zhuoan Jiao and Peter M. D. Gray, </author> <title> Optimisation of Methods in a Navigational Query Language,Proceedings of the Second International Conference on Deductive and Object-Oriented Databases, </title> <type> DOOD 91. </type> <institution> Munich, </institution> <year> 1991, </year> <pages> pp. 22-42. </pages>
Reference-contexts: Relevant work in this area includes research related to the University of Wisconsins SHORE project ([DNSV94]), Michael Kilians work with parallel sets ([Kili92]), and query optimization work by Zhuoan Jiao and Peter Gray <ref> [JiGr91] </ref>. 24 5.3 Support for User Supplied Methods All the commercial object oriented database systems that we know of support user defined object methods.
Reference: [JWKL90] <author> B. Paul Jenq, Darrell Woelk, Won Kim, and Wan-Lik Lee, </author> <title> Query Processing in Distributed ORION, </title> <booktitle> Proceedings of the International Conference on Extending Database Technology, </booktitle> <address> EDBT 90, Venice, </address> <year> 1990, </year> <pages> pp. 169-187. </pages>
Reference-contexts: When results have been presented, they have generally been from simulations. A paper of particular interest is by Khoshafian, Valduriez, and Copeland [KhVC88], which discusses the decomposed storage model (similar to that employed by ADAMS, although we specify partitioning by object identifier). Other papers of interest include [LeTa95], <ref> [JWKL90] </ref>, [HaSS88] and [ThSu94]. 5.2 Navigational Query Support Khoshafian defines navigational access as follows: In this type of access various reachable objects are accessed through attribute values or elements of referencing or parent objects.
Reference: [Khos93] <author> Setrag Khoshafian, </author> <title> Object Oriented Databases, </title> <publisher> John Wiley & Sons, </publisher> <address> New York, </address> <year> 1993. </year>
Reference: [KhVC88] <author> Setrag Khoshafian, Patrick Valduriez, and George Copeland, </author> <title> Parallel Query Processing for Complex Objects, </title> <booktitle> Proceedings of the 4th International Conference on Data Engineering, </booktitle> <address> Los Angeles, </address> <year> 1988, </year> <pages> pp. 202-209. </pages>
Reference-contexts: And these rely on data models, partitionings, or algorithms very different from ours. When results have been presented, they have generally been from simulations. A paper of particular interest is by Khoshafian, Valduriez, and Copeland <ref> [KhVC88] </ref>, which discusses the decomposed storage model (similar to that employed by ADAMS, although we specify partitioning by object identifier).
Reference: [Kili92] <author> Michael Francis Kilian, </author> <title> Parallel Sets: An Object-Oriented Methodology for Massively Parallel Programming,The Division of Applied Sciences, </title> <publisher> Harvard University, </publisher> <address> Cambridge, MA, </address> <note> 1992 (Ph.D Dissertation) </note>
Reference: [LaYu88] <author> M. Seetha Lakshmi and Philip S. Yu, </author> <title> Effect of Skew on Join Performance in Parallel Architectures, </title> <booktitle> Proceedings of the International Symposium on Databases in Parallel and Distributed Systems. </booktitle> <address> Austin, Texas. </address> <month> December 5-7, </month> <year> 1988. </year> <pages> pp. 107-120. </pages>
Reference-contexts: Determining when such modifications should be made or employed should also be simple, involving measuring response times for various actions over all partitions. Whether there is already too much literature on skew in parallel databases is not clear. One paper regarding skew is <ref> [LaYu88] </ref>. 5.7 Repartitioning Support If an ADAMS user wishes to create a database and expects that more processors will be available at a later date it is easy to assign multiple servers to a single processor and then, when more processors become available, move a partitions files and processor assignment to
Reference: [LeTa95] <author> Leung, C.H.C, and Taniar, D., </author> <title> Parallel Query Processing in Object-Oriented Databases Systems, </title> <booktitle> Proceedings of the Sixth Australasian Database Conference (ADC95), Adelaide, Australia, (Australian Computer Science Communications, </booktitle> <volume> vol 17, no 2, </volume> <year> 1995), </year> <month> January </month> <year> 1995, </year> <pages> pp. 119-131. </pages>
Reference-contexts: When results have been presented, they have generally been from simulations. A paper of particular interest is by Khoshafian, Valduriez, and Copeland [KhVC88], which discusses the decomposed storage model (similar to that employed by ADAMS, although we specify partitioning by object identifier). Other papers of interest include <ref> [LeTa95] </ref>, [JWKL90], [HaSS88] and [ThSu94]. 5.2 Navigational Query Support Khoshafian defines navigational access as follows: In this type of access various reachable objects are accessed through attribute values or elements of referencing or parent objects.
Reference: [McEl91] <author> McElrath, Rodney, </author> <title> A Look at Two Persistant Storage Models, </title> <type> Technical Report IPC-91-11, </type> <institution> Department of Computer Science, University of Virginia, </institution> <year> 1991. </year> <month> 32 </month>
Reference-contexts: The loop of processing thus results in parallel execution at the ADAMS Servers (although at a low granularity). Iterating through sets (with first/next operations) is done similarly. See <ref> [McEl91] </ref> for a different form of loop parallelism explored by the ADAMS research group. 12 4.0 Running ADAMS It would be ideal if the ADAMS programmer could be kept completely away from the parallel details of ADAMS. This is nearly the case. But not quite.
Reference: [Ment95] <institution> The Mentat Research Group,Mentat 2.8 System Reference, Department of Computer Science,University of Virginia. </institution> <note> http://www.cs.virginia.edu/~mentat/. </note>
Reference-contexts: There are other tools of interest as well. These include the ADAMS preprocessor, the Mentat/C++ compiler and linker (dcci), a set of programs to display and manipulate dictionary information, and a utility to observe the running ADAMS configuration. 4.1 Mentat The current version of ADAMS relies upon Mentat <ref> [Ment95] </ref> for inter-process communication. The use of Mentat in parallel ADAMS is an interesting choice. Mentat is very good at compiling computationally intensive programs, creating (with some help from the programmer) a dependency graph using Mentat class instances, and then efficiently scheduling these objects based on current processor loads.
Reference: [ONei93] <author> Patrick E. ONeil, </author> <title> The Set Query Benchmark, The Benchmark Handbook For Database and Transaction Processing Systems, </title> <editor> Jim Gray, editor, </editor> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo 1993. pp.359-395. </address>
Reference-contexts: The status of navigational access is such that traversals and navigational-type queries are featured in current object oriented database benchmarks such as 007 [CaDN93], while complex conjunctive and disjunctive set queries such as those found in the relational set query benchmark <ref> [ONei93] </ref> are not well represented. An example of a navigational query from 007 is: Find all base assemblies that use a composite part with a build date later than the build date of the base assembly. Also, report 23 the number of qualifying base assemblies found ([CaDN94], p.26).
Reference: [OrPf88] <author> Ratko Orlandic and John L. Pfaltz, </author> <title> Compact 0-Complete Trees, </title> <booktitle> Proceedings of the 14th VLDB Conference, </booktitle> <address> Los Angeles, CA 1988, </address> <pages> pp. 372-381. </pages>
Reference-contexts: Our query processing goals and ADAMS query processing methods are discussed further in [HaPf96]. This paper focuses on ADAMS parallel features. Other documents discuss the ADAMS language [Pfal95] and the theory behind O-trees <ref> [OrPf88] </ref>. Future documents may discuss the O-tree implementation, the ADAMS storage manager, and stream processing within ADAMS. Recent work has centered on the exploitation of large grained data parallelism in set operations over a partitioned database.
Reference: [Pfal95] <author> John L. Pfaltz, </author> <title> The ADAMS Language: A Tutorial and Reference Manual, </title> <type> Technical Report IPC-93-003, </type> <institution> Department of Computer Science, University of Virginia, </institution> <year> 1995. </year>
Reference-contexts: Our query processing goals and ADAMS query processing methods are discussed further in [HaPf96]. This paper focuses on ADAMS parallel features. Other documents discuss the ADAMS language <ref> [Pfal95] </ref> and the theory behind O-trees [OrPf88]. Future documents may discuss the O-tree implementation, the ADAMS storage manager, and stream processing within ADAMS. Recent work has centered on the exploitation of large grained data parallelism in set operations over a partitioned database. <p> It generates C++ code, including calls into the ADAMS Interface Layer (see figure 1). In addition to converting an ADAMS program into a C++ program, an important function of the preprocessor is error checking. With such a complex object oriented language <ref> [Pfal95] </ref> there are opportunities for mistakes. As a parallel application, the ADAMS preprocessor is not very efficient. For example, many singleton sets are created and manipulated. <p> The terms have to do with specifying how the information in the database is shared and viewed and how the scope of any data element or name is determined. The terms are discussed in a more complete way in <ref> [Pfal95] </ref>. <p> The interested reader is strongly encouraged to review the ADAMS language <ref> [Pfal95] </ref> to gain a broader view of what the ADAMS system has to offer. In section five we have discussed features not yet part of ADAMS. This section may have been overly stressed.
Reference: [ThSu94] <author> Arun K. Thakore and Stanley Y. W. Su, </author> <title> Performance Analysis of Parallel Object-Oriented Query Processing Algorithms, Distributed and Parallel Databases 2 (1994). </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston. </address> <year> 1994. </year> <pages> pp. 59-100. </pages>
Reference-contexts: A paper of particular interest is by Khoshafian, Valduriez, and Copeland [KhVC88], which discusses the decomposed storage model (similar to that employed by ADAMS, although we specify partitioning by object identifier). Other papers of interest include [LeTa95], [JWKL90], [HaSS88] and <ref> [ThSu94] </ref>. 5.2 Navigational Query Support Khoshafian defines navigational access as follows: In this type of access various reachable objects are accessed through attribute values or elements of referencing or parent objects.
Reference: [Vers93] <author> Versant ODBMS, </author> <title> A Technical Overview for Software Developers Versant Object Technology Menlo Park, </title> <address> CA 1993 </address>
Reference-contexts: Query servers are a further step up, they can be asked to perform complex queries over collections of objects. Useful references in this area include [DFMV90], [ChWi93], and <ref> [Vers93] </ref> (which describes one of the few object oriented query server systems). The bottleneck limiting database system performance has traditionally been disk I/O. The main purpose of parallel server systems has been to address this problem.
Reference: [Wilc94] <author> Jonathan Wilcox, </author> <title> Object Databases, Object methods in distributed computing, </title> <journal> Dr. Dobbs Journal, </journal> <volume> Volume 19, Issue 13, </volume> <month> November, </month> <year> 1994, </year> <pages> pp. 26-34. 33 </pages>
Reference-contexts: But we would prefer to do something radically different if a reasonable alternative could be found. Other relevant references (aside from those in the previous section) including a very detailed article by Jonathan Wilcox <ref> [Wilc94] </ref>. 5.4 Object Clustering In page server database systems multiple objects are often stored on a single page.
References-found: 27

