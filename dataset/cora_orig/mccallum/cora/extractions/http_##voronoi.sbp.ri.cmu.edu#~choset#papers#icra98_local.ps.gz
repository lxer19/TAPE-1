URL: http://voronoi.sbp.ri.cmu.edu/~choset/papers/icra98_local.ps.gz
Refering-URL: http://voronoi.sbp.ri.cmu.edu/paper.turkish.html
Root-URL: 
Title: Towards Exact Localization without Explicit Localization with the Generalized Voronoi Graph  
Author: Keiji Nagatani Howie Choset Sebastian Thrun 
Affiliation: Carnegie Mellon University  
Abstract: Sensor based exploration is a task which enables a robot to explore and map an unknown environment, using sensor information. The map used in this paper is the generalized Voronoi graph (GVG). The robot explores an unknown environment using an already developed incremental construction procedure to generate the GVG using sensor information. This paper presents some initial results which uses the GVG for robot localization, while mitigating the need to update encoder values. Experimental results verify the described work. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Borenstein, B. Everett, and L. Feng. </author> <title> Navigating Mobile Robots: Systems and Techniques. </title> <editor> A. K. Peters, </editor> <publisher> Ltd., </publisher> <address> Welles-ley, MA, </address> <year> 1996. </year>
Reference-contexts: Again, the literature in this field is vast, so only work which has influenced this paper's results are mention. See Borenstein et. al. <ref> [1] </ref> for a complete overview of current localization techniques. Lu, Shatkay and Kaelbling, and Thrun et. al. have supplied some localization techniques which do not make overly restrictive assumptions, such all walls are orthogonal and there are no cycles in the environment.
Reference: [2] <author> J. Borenstein and J. Koren. </author> <title> Real-time Onstacle Avoidance for Fast Mobile Robots in Cluttered Environments. </title> <booktitle> In IEEE Conference of Robotics and Automation, </booktitle> <pages> pages 572-577, </pages> <address> Cincinnati, Ohio, </address> <month> May </month> <year> 1990. </year>
Reference-contexts: Another heuristic approach involves discretizing a planar world into pixels of some resolution. Typically, this approach handles errors in sonar sensing readings quite well by assigning each pixel a value indicating the likelihood that it overlaps an obstacle <ref> [2] </ref>. Strong experimental results indicate the utility of these approaches, and thus these algorithms may provide a future basis for complete sensor based planners. Unfortunately, these approaches neither afford proofs of correctness that guarantee a path can be found, nor offer well established thresholds for when these heuristic algorithms fail.
Reference: [3] <author> R.A. Brooks. </author> <title> A Robust Layered Control System for a Mobile Robot. </title> <journal> IEEE Journal on Robotics and Automation, </journal> <volume> RA-2, </volume> <month> March </month> <year> 1986. </year>
Reference-contexts: One class of heuristic algorithms employs a behavioral based approach in which the robot is armed with a simple set of behaviors (e.g., following a wall) <ref> [3] </ref>. Another heuristic approach involves discretizing a planar world into pixels of some resolution. Typically, this approach handles errors in sonar sensing readings quite well by assigning each pixel a value indicating the likelihood that it overlaps an obstacle [2].
Reference: [4] <author> J.F. Canny. </author> <title> The Complexity of Robot Motion Planning. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1988. </year>
Reference-contexts: There are many non-heuristic sensor based algorithms for which provably correct solutions exist in the plane (see [16] for an overview). Our approach is to adapt the structure of a provably correct classical motion planning scheme to a sensor based implementation. One such approach is based on a roadmap <ref> [4] </ref>, a one-dimensional subset of a robot's free space which captures all of its important topological properties. A roadmap has the following properties: accessibility, connectivity, and departability.
Reference: [5] <author> H. Choset and J.W. Burdick. </author> <title> Sensor Based Planning, Part II: Incremental Construction of the Generalized Voronoi Graph. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation, </booktitle> <address> Nagoya, Japan, </address> <year> 1995. </year>
Reference-contexts: In R 3 , the GVG is the one-dimensional set of points equidistant to three obstacles. The GVG method is useful in higher dimensions because the bulk of the motion planning is done in a one-dimensional space. The GVG's incremental construction procedure <ref> [5] </ref> gives the GVG its primary strength. This incremental construction procedure only requires line of sight information and this procedure places no restrictions on the type of obstacles; obstacles need not be polygonal, polyhedral, nor convex, which are assumptions most motion planners require. <p> This section reviews the edge tracing procedure for the GVG which has been reported in <ref> [5] </ref>, [6]. Unfortunately, robots have dead-reckoning error, and the incremental construction procedure must accommodate this error, as well. 3.1 Edge Tracing The GVG edges are traced in an incremental manner using an adaptation of numerical continuation techniques [11].
Reference: [6] <author> H. Choset and J.W. Burdick. </author> <title> Sensor Based Planning: The Hierarhical Generalized Voronoi Graph. </title> <booktitle> In Proc. Workshop on Algorithmic Foundations of Robotics, </booktitle> <address> Toulouse, France, </address> <year> 1996. </year>
Reference-contexts: This section reviews the edge tracing procedure for the GVG which has been reported in [5], <ref> [6] </ref>. Unfortunately, robots have dead-reckoning error, and the incremental construction procedure must accommodate this error, as well. 3.1 Edge Tracing The GVG edges are traced in an incremental manner using an adaptation of numerical continuation techniques [11].
Reference: [7] <author> H Choset, I Konuksven, </author> <title> and A Rizzi. Sensor Based Planning: A Control Law for Generating the Generalized Voronoi Graph. </title> <booktitle> In Proc. of IEEE Int. Conf. on Autonomous Robots, </booktitle> <address> Monterey, CA, </address> <year> 1997. </year>
Reference-contexts: For some environments, this algorithm has been successfully implemented on a mobile robot with a ring of sonar sensors <ref> [7] </ref>. <p> The stability of this control law was derived <ref> [7] </ref>. Edge tracing has been implemented on a mobile robot with a ring of sonar sensors radially pointing outward from the center. A local minimum in the sensor ring corresponds to the distance to the nearest obstacle. <p> Therefore, the robot makes the following correction step to hone in on the meet point _x = fi rd 1 (x) rd 2 (x) y d 1 (x) d 3 (x) which can be shown to be stable using the previous analysis <ref> [7] </ref>. (Note that Null (rG (x)) = 0.) Geometrically, what is going on is that when the robot is in the vicinity of the meet point, it draws a circle through the three closest points on the three closest obstacles.
Reference: [8] <author> H. Choset, K. Nagatani, and A. Rizzi. </author> <title> Sensor Based Planning: Using a Honing Strategy and Local Map Method to Implement the Generalized Voronoi Graph. </title> <booktitle> In SPIE Conference on Systems and Manufacturing, </booktitle> <address> Pittsburgh, PA, </address> <year> 1997. </year>
Reference-contexts: While generating the GVG, it is significant that the robot determine a precise location of the meet point and thus a meet point honing algorithm was introduced to trace a path that stably converges onto a meet point location <ref> [8] </ref>.
Reference: [9] <author> G. Dudeck, M. Jenkin, E. Milios, and D. Wilkes. </author> <title> Robotic exploration as graph construction. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 7 </volume> <pages> 859-865, </pages> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: Others such as Dudek <ref> [9] </ref> and Kuipers et. al [12] have reported localizations results with the same philosophy. In [9], an agent locates itself on a graph by matching up nodes and the adjacency relationship between them. This approach assumes the agent can label each node by depositing a marker at the nodes. <p> Others such as Dudek <ref> [9] </ref> and Kuipers et. al [12] have reported localizations results with the same philosophy. In [9], an agent locates itself on a graph by matching up nodes and the adjacency relationship between them. This approach assumes the agent can label each node by depositing a marker at the nodes.
Reference: [10] <author> J.-S. Gutmann. </author> <title> Vergleich von algorithmen zur selbst-lokalisierung eines mobil en roboters. </title> <type> Master's thesis, </type> <institution> University of Ulm, Ulm, Germany, </institution> <year> 1996. </year> <note> (in German). </note>
Reference-contexts: Lu, Shatkay and Kaelbling, and Thrun et. al. have supplied some localization techniques which do not make overly restrictive assumptions, such all walls are orthogonal and there are no cycles in the environment. Lu, Milios and Gutmann [13], [14], <ref> [10] </ref> use gradient ascent to update various location estimates forwards and backwards in time. As a result, this approach has led to significantly larger maps that are more accurate, but is still limited to situations with bounded odometric error.
Reference: [11] <author> H.B. Keller. </author> <title> Lectures on Numerical Methods in Bifurcation Problems. </title> <institution> Tata Institute of Fundamental Research, Bombay, India, </institution> <year> 1987. </year>
Reference-contexts: Unfortunately, robots have dead-reckoning error, and the incremental construction procedure must accommodate this error, as well. 3.1 Edge Tracing The GVG edges are traced in an incremental manner using an adaptation of numerical continuation techniques <ref> [11] </ref>.
Reference: [12] <author> B. Kuipers and Y.T. Byan. </author> <title> A Robot Exploration and Mapping Strategy Based on a Semantic Hierarchy of Spatial Representations. </title> <journal> Journal of Robotics and Autonomous Systems, </journal> <volume> 8 </volume> <pages> 47-63, </pages> <year> 1991. </year>
Reference-contexts: Others such as Dudek [9] and Kuipers et. al <ref> [12] </ref> have reported localizations results with the same philosophy. In [9], an agent locates itself on a graph by matching up nodes and the adjacency relationship between them. This approach assumes the agent can label each node by depositing a marker at the nodes. <p> In [9], an agent locates itself on a graph by matching up nodes and the adjacency relationship between them. This approach assumes the agent can label each node by depositing a marker at the nodes. The approach in this paper and in <ref> [12] </ref> has the robot automatically identify nodes in the topological graph from geometric environmental information. The basic thrust of the this paper's work is quite similar to Kuiper's. In [12], the robot essentially traces double equidistance until a sensor threshold is met, at which point the robot follows the obstacle boundaries. <p> The approach in this paper and in <ref> [12] </ref> has the robot automatically identify nodes in the topological graph from geometric environmental information. The basic thrust of the this paper's work is quite similar to Kuiper's. In [12], the robot essentially traces double equidistance until a sensor threshold is met, at which point the robot follows the obstacle boundaries. The nodes in this graph are termed distinct places which are local maxima of the distance to nearby obstacles.
Reference: [13] <author> F. Lu and E. Milios. </author> <title> Globally consistent range scan alignment for environment mapp ing. </title> <booktitle> Autonomous Robots, </booktitle> <volume> 4 </volume> <pages> 333-349, </pages> <year> 1997. </year>
Reference-contexts: Lu, Shatkay and Kaelbling, and Thrun et. al. have supplied some localization techniques which do not make overly restrictive assumptions, such all walls are orthogonal and there are no cycles in the environment. Lu, Milios and Gutmann <ref> [13] </ref>, [14], [10] use gradient ascent to update various location estimates forwards and backwards in time. As a result, this approach has led to significantly larger maps that are more accurate, but is still limited to situations with bounded odometric error.
Reference: [14] <author> F. Lu and E. Milios. </author> <title> Robot pose estimation in unknown environments by matching 2d range scans. </title> <journal> Journal of Intelligent and Robotic Systems, </journal> <note> to appear. </note>
Reference-contexts: Lu, Shatkay and Kaelbling, and Thrun et. al. have supplied some localization techniques which do not make overly restrictive assumptions, such all walls are orthogonal and there are no cycles in the environment. Lu, Milios and Gutmann [13], <ref> [14] </ref>, [10] use gradient ascent to update various location estimates forwards and backwards in time. As a result, this approach has led to significantly larger maps that are more accurate, but is still limited to situations with bounded odometric error.
Reference: [15] <author> C. O'Dunlaing and C.K. Yap. </author> <title> A "Retraction" Method for Planning the Motion of a Disc. </title> <journal> Algorithmica, </journal> <volume> 6 </volume> <pages> 104-111, </pages> <year> 1985. </year>
Reference-contexts: The roadmap used in this work is the generalized Voronoi graph (GVG), which is the set of points equidistant to m obstacles in m dimensions. In the plane, the GVG is simply the generalized Voronoi diagram <ref> [15] </ref>, the set of points equidistant to two obstacles. In R 3 , the GVG is the one-dimensional set of points equidistant to three obstacles. The GVG method is useful in higher dimensions because the bulk of the motion planning is done in a one-dimensional space.
Reference: [16] <author> N.S.V. Rao, S. Kareti, W. Shi, and S.S. Iyenagar. </author> <title> Robot Navigation in Unknown Terrains: Introductory Survey of Non-Heuristic Algorithms. </title> <institution> Oak Ridge National Laboratory Technical Report, ORNL/TM-12410:1-58, </institution> <month> July </month> <year> 1993. </year>
Reference-contexts: Finally, these approaches do not typically generalize into higher dimensions. There are many non-heuristic sensor based algorithms for which provably correct solutions exist in the plane (see <ref> [16] </ref> for an overview). Our approach is to adapt the structure of a provably correct classical motion planning scheme to a sensor based implementation. One such approach is based on a roadmap [4], a one-dimensional subset of a robot's free space which captures all of its important topological properties.
Reference: [17] <author> H Shatkay and L. Kaelbling. </author> <title> Learning topological maps with weak local odometric informati on. </title> <booktitle> In Proceedings of IJCAI-97. IJCAI, </booktitle> <publisher> Inc., </publisher> <year> 1997. 1997. </year>
Reference-contexts: Lu, Milios and Gutmann [13], [14], [10] use gradient ascent to update various location estimates forwards and backwards in time. As a result, this approach has led to significantly larger maps that are more accurate, but is still limited to situations with bounded odometric error. Shatkay and Kaelbling <ref> [17] </ref> proposed an approach that uses probabilistic representations, along with the well-known Baum-Welch algorithm for efficient estimation. Their approach is similar in nature to the one described by Thrun [18], in that they both employ probabilistic representations and both use the Baum-Welch algorithm. However, the method in [17] does not consider <p> Shatkay and Kaelbling <ref> [17] </ref> proposed an approach that uses probabilistic representations, along with the well-known Baum-Welch algorithm for efficient estimation. Their approach is similar in nature to the one described by Thrun [18], in that they both employ probabilistic representations and both use the Baum-Welch algorithm. However, the method in [17] does not consider orientation dead-reckoning error. Thrun has recently completed a localization approach that has been successfully verified in very large environments on a mobile robot where a map is known a priori or the robot is driven (currently by an external agent) to acquire environmental information [18].
Reference: [18] <author> S. Thrun, D. D. Fox, and W. Burgard. </author> <title> Probabilistic mobile robot localization and mapping. </title> <note> In submitted to IEEE ICRA, </note> <year> 1998. </year>
Reference-contexts: Shatkay and Kaelbling [17] proposed an approach that uses probabilistic representations, along with the well-known Baum-Welch algorithm for efficient estimation. Their approach is similar in nature to the one described by Thrun <ref> [18] </ref>, in that they both employ probabilistic representations and both use the Baum-Welch algorithm. However, the method in [17] does not consider orientation dead-reckoning error. <p> Thrun has recently completed a localization approach that has been successfully verified in very large environments on a mobile robot where a map is known a priori or the robot is driven (currently by an external agent) to acquire environmental information <ref> [18] </ref>. This approach poses a maximum likelihood estimation problem, where both the location of landmarks and the robot's position have to be estimated. Likelihood is maximized under probabilistic constraints that arise from the physics of robot motion and perception. Just like in [18], they use a Baum-Welch (or alpha-beta) algorithm. <p> by an external agent) to acquire environmental information <ref> [18] </ref>. This approach poses a maximum likelihood estimation problem, where both the location of landmarks and the robot's position have to be estimated. Likelihood is maximized under probabilistic constraints that arise from the physics of robot motion and perception. Just like in [18], they use a Baum-Welch (or alpha-beta) algorithm. Unfortunately, this approach requires a user to specify the landmarks, as opposed to the robot self-selecting them. Also, their approach, does not include an exploration strategy. <p> In one pass, the robot may perceive them as sep-arate meet points, but in another, it may merge them into one meet point. Again, the map will have to be updated to reflect the robot's perception of the world. Future work will incorporate the probabilistic method of Thrun <ref> [18] </ref> to allow for meet points that appear and disappear. This will lead to an implementation of this approach in dynamic environments. 10 Conclusion Traditional localization procedures require detailed sensor processing and an a priori detailed map for robot localization.
References-found: 18

