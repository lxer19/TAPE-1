URL: http://ftp.eecs.umich.edu/people/rounds/YoungRounds.ACL93.ps.gz
Refering-URL: http://ftp.eecs.umich.edu/people/rounds/
Root-URL: http://www.eecs.umich.edu
Email: marky,rounds@engin.umich.edu  
Title: A LOGICAL SEMANTICS FOR NONMONOTONIC SORTS  
Author: Mark A. Young Bill Rounds 
Address: 1101 Beal Ave. Ann Arbor, MI 48109  
Affiliation: Artificial Intelligence Laboratory The University of Michigan  
Abstract: Suppose we have a feature system, and we wish to add default values in a well-defined way. We might start with Kasper-Rounds logic, and use Reiter's example to form it into a default logic. Giving a node a default value would be equivalent to saying "if it is consistent for this node to have that value, then it does." Then we could use default theories to describe feature structures. The particular feature structure described would be the structure that supports the extension of the default theory. This is, in effect, what the theory of nonmonotonic sorts gives you. This paper describes how that theory derives from what is described above. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Bouma, </author> <month> Gosse </month> <year> 1990. </year> <title> Defaults in unification grammar. </title> <booktitle> In Proceedings of the 1990 Conference of the Association for Computational Linguistics. </booktitle> <pages> 165-172. </pages> <address> Bouma, </address> <month> Gosse </month> <year> 1992. </year> <title> Feature structures and nonmonotonicity. </title> <booktitle> Computational Linguistics 18(2) </booktitle> <pages> 183-203. </pages>
Reference: <author> Carpenter, </author> <title> Bob 1991. Skeptical and credulous default unification with applications to templates and inheritance. In Default Inheritance Within Unification-Based Approaches to the Lexicon. </title>
Reference: <author> Carpenter, </author> <title> Bob 1992. The Logic of Typed Feature Structures. </title> <publisher> Cambridge University Press. </publisher>
Reference-contexts: More restricted versions of FSs may require more care. For instance, if sorts are not allowed on internal nodes, then defining an attribute for a node will eliminate any default sorts assigned to that node. Another example where care must be taken is with typed feature structures <ref> (Carpenter 1992) </ref>. Here the application of a default at one node can add strict information at another (possibly making a default at the other node inconsistent).
Reference: <author> Delgrande, James P and Jackson, </author> <title> W Ken 1991. Default logic revisited. </title> <booktitle> In Proceedings of the Second International Conference on the Principles of Knowledge Representation and Reasoning. </booktitle> <pages> 118-127. </pages>
Reference-contexts: The first part deals with strict sort unification, and is a simple consequence of the fact that (D; W ) has the same exten sions as (D; W ). The next two deal with inconsistent and redundant default sorts. They are similar to theorems proved in <ref> (Delgrande and Jackson 1991) </ref>: inconsistent defaults are never applicable; while necessary ones are always applicable. The last part allows for strengthening of default sorts. It follows from the previous three. Together they show that nonmonotonic unification preserves the information present in the NSFSs being unified.
Reference: <author> Kaplan, </author> <title> Ronald 1987. Three seductions of computational linguistics. In Linguistic Theory and Computer Applications. </title> <publisher> Academic Press, London. </publisher> <pages> 149-188. </pages>
Reference: <author> Kasper, </author> <title> Bob 1988. Feature Structures: A Logical Theory with Applications to Language Analysis. </title> <type> Ph.D. Dissertation, </type> <institution> University of Michigan, </institution> <address> Ann Arbor. </address>
Reference-contexts: This allows us to define the most general unifier of two sorts as their greatest lower bound, which write as a^ S b. We also assume that there is a most general sort, &gt;, called top. The structure hS; OEi is called the sort hierarchy . KASPER-ROUNDS LOGIC <ref> (Kasper 1988) </ref> provides a logic for describing feature structures. Fig. 2 shows the domain of these logical formulas. We use the standard notion of satisfaction. Let A = hQ; r; ffi; fii. 1. A j= T RU E always; 2. A j= F ALSE never; 3.
Reference: <author> Reiter, </author> <title> Ray 1980. A logic for default reasoning. </title> <booktitle> Artificial Intelligence 13 </booktitle> <pages> 81-132. </pages>
Reference-contexts: The original presentation of nonmonotonic sorts provided only a description of their operation and an informal description of their meaning. In this paper, we present a logical basis for NSs and non-monotonically sorted feature structures (NSFSs). NSFSs are shown to be equivalent to default theories of default logic <ref> (Reiter 1980) </ref>. In particular, we show how nonmonotonic sort unification is equivalent to finding the smallest default theory that describes both NSFSs; and also how taking a solution for a NSFS is the same as finding an extension for that theory. <p> If the lexicon were queried for the lexical entry for mahl, then, it would collect the information from all appropriate templates using NSFS unification, and return the solution of that NSFS as the result. DEFAULT LOGIC The semantics for nonmonotonic sorts is motivated by default logic <ref> (Reiter 1980) </ref>. What we want a default sort to mean is: "if it is consistent for this node to have that sort, then it does." But where Reiter based his DL on a first order language, we want to base ours on Kasper-Rounds logic.
Reference: <author> Russell, Graham; Ballim, Afzal; Carroll, John; and Warwick-Armstrong, </author> <title> Susan 1992. A practical approach to multiple default inheritance for unification-based lexicons. </title> <booktitle> Computational Linguistics 18(3) </booktitle> <pages> 311-337. </pages>
Reference-contexts: Theorem 3 Let D 1 and D 2 be NSFSs. Then DT (D 1 u N D 2 )= DT (D 1 ) [ DT (D 2 ) (using pairwise set union). DISCUSSION Most treatments of default unification to date have been presented very informally. (Bouma 1992) and <ref> (Russell et al. 1992) </ref>, however, provide very thorough treatments of their respective methods. Bouma's is more traditional in that it relies on "subtracting" inconsistent information from the default side of the unification. <p> At the next level in the hierarchy, what was strict becomes default. Thus "defaultness" is not a property of the information itself, as it is with NSs, but rather a relation one piece of information has to another. The method described in <ref> (Russell et al. 1992) </ref> also divides templates into strict and default parts 1 . Here, though, the definitions of strict and default are closer to our own. Each lexical entry inherits from a list of templates, which are scanned in order.
Reference: <author> Scott, </author> <title> Dana 1982. Domains for Denotational Semantics, </title> <booktitle> volume 140 of Lecture Notes in Computer Science. </booktitle>
Reference-contexts: Fortunately, we have do have our own natural notion of consistency|a set of formu-las is consistent if it is satisfiable. Testing a set of Kasper-Rounds formulas for consistency thus simply reduces to finding a satisfier for that set. Formally, we encode our logic as an information system <ref> (Scott 1982) </ref>. An information system (IS) is a triple hA; C; `i where A is a countable set of "atoms," C is a class of finite subsets of A, and ` is a binary relation between subsets of A and elements of A.
Reference: <author> Shieber, </author> <title> Stuart 1986. An Introduction to Unification-Based Approaches to Grammar, </title> <booktitle> volume 4 of CSLI Lecture Notes. </booktitle> <publisher> University of Chicago Press, Chicago. </publisher>
Reference: <author> Shieber, </author> <title> Stuart 1987. Separating linguistic anal-yses from linguistic theories. In Linguistic Theory and Computer Applications. </title> <publisher> Academic Press, London. </publisher> <pages> 1-36. </pages>
Reference: <author> Young, </author> <title> Mark 1992. Nonmonotonic sorts for feature structures. </title> <booktitle> In National Conference on Artificial Intelligence, </booktitle> <address> San Jose, California. </address> <pages> 596-601. </pages>
Reference-contexts: This runs very much against the unification tradition, in which any set has a unique most general satisfier (if a satisfier exists at all). A method that is free of these ordering effects was presented in <ref> (Young 1992) </ref>. The method of nonmonotonic sorts (NSs) allows default labels to be assigned at any time, and used only in the absence of conflicting information. NSs replace the more traditional labels on feature structures to give nonmonotonically sorted feature structures (NS-FSs).
References-found: 12

