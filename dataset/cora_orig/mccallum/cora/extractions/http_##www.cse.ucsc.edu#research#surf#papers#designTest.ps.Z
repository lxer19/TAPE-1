URL: http://www.cse.ucsc.edu/research/surf/papers/designTest.ps.Z
Refering-URL: http://www.cse.ucsc.edu/research/surf/bib.html
Root-URL: http://www.cse.ucsc.edu
Title: SURF: Rubber-band Routing System for Multichip Modules  
Author: David Staepelaere Jeffrey Jue Tal Dayan Wayne Dai 
Address: Santa Cruz, CA 95064  
Affiliation: Board of Studies in Computer Engineering University of California, Santa Cruz  
Abstract: Current PCB-based routing tools are rapidly running out of steam when it comes to meeting the performance and cost challenges presented by today's packaging technologies, including thin-film multichip modules. This paper describes SURF|a new routing system designed specifically to meet these challenges. The strength of the SURF system is derived from its extremely flexible rubber-band data representation. The rubber-band model is an ideal framework for performance-driven and cost-driven routing and naturally supports: rectilinear, octilinear, and "all-angle" wiring patterns; one-and-a-half-layer routing; even wiring distribution; and powerful manual editing. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Yizhi Lu and Wayne Wei-Ming Dai. </author> <title> A numerical stable algorithm for constructing constrained Delaunay triangulation and application to multichip module layout. </title> <booktitle> In Proceedings of the China 1991 International Conference on Circuits and Systems, </booktitle> <pages> pages 644-647. </pages> <booktitle> IEEE Circuits & Systems Society, </booktitle> <year> 1991. </year>
Reference-contexts: This mesh is maintained using an incremental constrained Delaunay triangulation algorithm. In addition to providing incremental triangulation modifications, it supports efficient geometrical queries such as point location, nearest neighbor, and range search <ref> [1, 2] </ref>. Since the size of the triangulation is linear to the size of the sketch, this data structure is more space efficient that a traditional grid-graph. 2.
Reference: [2] <author> Yizhi Lu. </author> <title> Dynamic constrained Delaunay triangulation and application to multichip module layout. </title> <type> Master's thesis, </type> <institution> University of California, Santa Cruz, </institution> <month> December </month> <year> 1991. </year>
Reference-contexts: This mesh is maintained using an incremental constrained Delaunay triangulation algorithm. In addition to providing incremental triangulation modifications, it supports efficient geometrical queries such as point location, nearest neighbor, and range search <ref> [1, 2] </ref>. Since the size of the triangulation is linear to the size of the sketch, this data structure is more space efficient that a traditional grid-graph. 2.
Reference: [3] <author> Wayne Wei-Ming Dai, Tal Dayan, and David Staepelaere. </author> <title> Topological routing in SURF: Generating a rubber-band sketch. </title> <booktitle> In Proceedings of the 28th Design Automation Conference, </booktitle> <pages> pages 39-44, </pages> <address> Los Alamitos, CA, 1991. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: SURF 4 2.1 Layout Refinement Strategy The SURF routing approach is divided into two major steps: (1) transforming the netlist into a topological wire description (rubber-band sketch) and (2) transforming the sketch into precise geometrical layout <ref> [3, 4, 5] </ref>. See Figure 2. The rubber-band sketch is generated in three steps: global routing, layer and via assignment, and single-layer local routing (Figure 3). The global router uses hierarchical partitioning to divide the original problem into a number of smaller subproblems [6, 7, 3]. See Figure 4. <p> See Figure 2. The rubber-band sketch is generated in three steps: global routing, layer and via assignment, and single-layer local routing (Figure 3). The global router uses hierarchical partitioning to divide the original problem into a number of smaller subproblems <ref> [6, 7, 3] </ref>. See Figure 4. The purpose of the global routing is to produce an initial rough routing that loosely specifies the route of each net. When processing a partition, the global router analyzes all nets simultaneously.
Reference: [4] <author> Wayne Wei-Ming Dai, Raymond Kong, and Masao Sato. </author> <title> Routability of a rubber-band sketch. </title> <booktitle> In Proceedings of the 28th Design Automation Conference, </booktitle> <pages> pages 45-48, </pages> <address> Los Alamitos, CA, 1991. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: SURF 4 2.1 Layout Refinement Strategy The SURF routing approach is divided into two major steps: (1) transforming the netlist into a topological wire description (rubber-band sketch) and (2) transforming the sketch into precise geometrical layout <ref> [3, 4, 5] </ref>. See Figure 2. The rubber-band sketch is generated in three steps: global routing, layer and via assignment, and single-layer local routing (Figure 3). The global router uses hierarchical partitioning to divide the original problem into a number of smaller subproblems [6, 7, 3]. See Figure 4. <p> Cost-driven routing 7 a topologically equivalent form that maintains the proper spacings and obeys the proper geometry (Figure 3). An efficient process called spoke creation checks the routability of a sketch and satisfies the width and spacing constraints <ref> [8, 4] </ref>. This process pushes wires away from fixed objects with open-ended line segments called spokes (Figure 1 (b)). The number of spokes required at each point is related to the final geometry (Figure 7). Rectilinear wiring uses up to four spokes and octilinear uses up to eight. <p> However, the spoke-based design rule enforcement strategy used by SURF is incremental, topology-preserving, and can tolerate overflow areas <ref> [13, 4] </ref>. The length of a given spoke reflects the size of the object, the spacing requirement, and the width of the wire being pushed. This model very naturally supports flexible design rules that can be modified to take advantage of unused space.
Reference: [5] <author> Wayne Wei-Ming Dai. </author> <title> Performance driven layout for thin-film multichip modules. </title> <journal> International Journal of High Speed Electronics, </journal> <volume> 2(4) </volume> <pages> 287-317, </pages> <year> 1991. </year>
Reference-contexts: SURF 4 2.1 Layout Refinement Strategy The SURF routing approach is divided into two major steps: (1) transforming the netlist into a topological wire description (rubber-band sketch) and (2) transforming the sketch into precise geometrical layout <ref> [3, 4, 5] </ref>. See Figure 2. The rubber-band sketch is generated in three steps: global routing, layer and via assignment, and single-layer local routing (Figure 3). The global router uses hierarchical partitioning to divide the original problem into a number of smaller subproblems [6, 7, 3]. See Figure 4.
Reference: [6] <author> Ulrich Lauther. </author> <title> Top down hierarchical routing for channelless gate arrays based on linear assignment. </title> <booktitle> In VLSI 87: VLSI Design of Digital Systems, </booktitle> <pages> pages 141-151, </pages> <address> Amsterdam, 1987. </address> <publisher> Elsevier Science Publishers B.V. </publisher>
Reference-contexts: See Figure 2. The rubber-band sketch is generated in three steps: global routing, layer and via assignment, and single-layer local routing (Figure 3). The global router uses hierarchical partitioning to divide the original problem into a number of smaller subproblems <ref> [6, 7, 3] </ref>. See Figure 4. The purpose of the global routing is to produce an initial rough routing that loosely specifies the route of each net. When processing a partition, the global router analyzes all nets simultaneously.
Reference: [7] <author> Malgorzata Marek-Sadowska. </author> <title> Route planner for custom chip design. </title> <booktitle> In IEEE International Conference Computer Aided Design, </booktitle> <pages> pages 246-249, </pages> <address> Los Alamitos, CA, 1986. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: See Figure 2. The rubber-band sketch is generated in three steps: global routing, layer and via assignment, and single-layer local routing (Figure 3). The global router uses hierarchical partitioning to divide the original problem into a number of smaller subproblems <ref> [6, 7, 3] </ref>. See Figure 4. The purpose of the global routing is to produce an initial rough routing that loosely specifies the route of each net. When processing a partition, the global router analyzes all nets simultaneously.
Reference: [8] <author> C.E. Leiserson and F.M. Maley. </author> <title> Algorithms for routing and testing routability of planar VLSI layouts. </title> <booktitle> In Proceedings of the 17th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 69-78, </pages> <address> New York, </address> <year> 1985. </year> <journal> Association of Computing Machinery. </journal> <volume> References 17 </volume>
Reference-contexts: Cost-driven routing 7 a topologically equivalent form that maintains the proper spacings and obeys the proper geometry (Figure 3). An efficient process called spoke creation checks the routability of a sketch and satisfies the width and spacing constraints <ref> [8, 4] </ref>. This process pushes wires away from fixed objects with open-ended line segments called spokes (Figure 1 (b)). The number of spokes required at each point is related to the final geometry (Figure 7). Rectilinear wiring uses up to four spokes and octilinear uses up to eight.
Reference: [9] <author> David Staepelaere. </author> <title> Geometric transformations for a rubber-band sketch. </title> <type> Master's thesis, </type> <institution> University of California, Santa Cruz, </institution> <month> September </month> <year> 1992. </year>
Reference-contexts: This conversion can be done with two plane sweeps. The first sweep transforms the sketch to the proper geometry and the second removes unnecessary jogs (Figure 1 (c)) <ref> [9] </ref>. 3 Cost-driven routing The performance advantages of using multichip modules (MCMs) to provide another level of packaging hierarchy are widely known. However, in high-end systems, the performance target is continually increasing.
Reference: [10] <author> King L. </author> <title> Tai. </title> <journal> Si-on-Si MCM technology and its applications. International Journal of High Speed Electronics, </journal> <volume> 2(4) </volume> <pages> 43-53, </pages> <year> 1991. </year>
Reference-contexts: By careful selection of the MCM technology and application, consumer electronics may be able to reap many of the benefits of MCM packaging including increased performance, low power consumption, and compact size at a cost that is competitive with printed wiring 3. Cost-driven routing 8 board technology <ref> [10, 11] </ref>. However, if MCMs are to be used to reduce cost, the CAD tools must also understand how various decisions affect cost.
Reference: [11] <author> Robert C. Frye, King L. Tai, Maureen Y. Lau, and Albert W.C. Lin. </author> <title> Silicon-on-silicon MCMs with integrated passive components. </title> <booktitle> In Proceedings of the IEEE Multi-Chip Module Conference, </booktitle> <pages> pages 155-158, </pages> <address> Los Alamitos, CA, March 1992. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: By careful selection of the MCM technology and application, consumer electronics may be able to reap many of the benefits of MCM packaging including increased performance, low power consumption, and compact size at a cost that is competitive with printed wiring 3. Cost-driven routing 8 board technology <ref> [10, 11] </ref>. However, if MCMs are to be used to reduce cost, the CAD tools must also understand how various decisions affect cost.
Reference: [12] <author> Tal Dayan and Wayne Wei-Ming Dai. </author> <title> Layer assignment for a rubber-band router. </title> <type> Technical Report UCSC-CRL-92-50, </type> <institution> University of California, Santa Cruz, </institution> <year> 1992. </year>
Reference-contexts: First, it is a true all-angle router|it has no directional bias. This allows it to efficiently use the resources of a single routing layer. Another advantage is the unconstrained layer assignment technique at the heart of SURF's local router <ref> [12] </ref>. The cost of the overall layer assignment, A, is formulated as follows: Cost (A) = Length (A) + V ia (A) + Layer (A) The first term represents the wire length associated with the given assignment.
Reference: [13] <author> Raymond Kong. </author> <title> Incremental routability test for planar topological routing. </title> <type> Master's thesis, </type> <institution> University of California, Santa Cruz, </institution> <month> December </month> <year> 1992. </year>
Reference-contexts: However, the spoke-based design rule enforcement strategy used by SURF is incremental, topology-preserving, and can tolerate overflow areas <ref> [13, 4] </ref>. The length of a given spoke reflects the size of the object, the spacing requirement, and the width of the wire being pushed. This model very naturally supports flexible design rules that can be modified to take advantage of unused space.
Reference: [14] <author> R. Cole and A. Siegel. </author> <title> River routing every which way, but loose. </title> <booktitle> In Proceeding of 25th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 65-73, </pages> <address> Los Alamitos, CA, 1984. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Two steps are used to produce evenly distributed wiring: (1) identifying unused areas of the layout, and (2) taking advantage of them by spreading nearby wiring into them. The spoke design rule checking strategy is based on cut flow and capacity analysis <ref> [14] </ref>. A cut is an imaginary line segment between two features in the layout. The number of wires crossing a cut is called its flow. The capacity of a cut is the maximum number of wires that can cross it without creating a design rule violation.
References-found: 14

