URL: http://www.cs.kuleuven.ac.be/~kristof/papers/naicpaper.ps
Refering-URL: http://www.cs.kuleuven.ac.be/~kristof/publications.html
Root-URL: 
Email: email: fkristof, marcdg@cs.kuleuven.ac.be, dtd@di.unito.it  
Title: Ramifications in an Event-based Language  
Author: Kristof Van Belleghem Marc Denecker Daniele Theseider Dupre 
Address: Celestijnenlaan 200A, B-3001 Heverlee, Belgium.  Corso Svizzera 185, 10149 Torino, Italy.  
Affiliation: Department of Computer Science, K.U.Leuven,  Department of Computer Science, University of Torino,  
Abstract: In the last couple of years, several high-level languages have been proposed for modeling actions and change, following the example of Gelfond and Lifschitz's A language and tackling increasingly complex issues. In this paper we present a narrative-based language ER with a linear time structure, which is designed to deal correctly with simultaneous actions as well as with general fluent and change dependencies, in particular ramifications. We argue that a combination of state constraints, causal laws and action preconditions is necessary to correctly represent all such dependencies. In particular, we introduce causal laws stating that a change is triggered by a change in truth value of a complex fluent formula; we show such laws to be useful for a compact representation of ramifications, in particular those of simultaneous actions. A semantics for such complex causal laws is provided based on the principle of inductive definitions. Moreover ER is able to deal in a very flexible way with complete and incomplete knowledge on action occurrences, action ordering and the initial state of the world.
Abstract-found: 1
Intro-found: 1
Reference: [BG93] <author> C. Baral and M. Gelfond. </author> <title> Representing concurrent actions in extended logic programming. </title> <booktitle> In Proc. 13th IJCAI, </booktitle> <pages> pages 866-871, </pages> <address> Chambery, </address> <year> 1993. </year>
Reference-contexts: Note that when I D init contains any truth value u, the second condition is unsatisfiable. 4 Interesting Contributions of E R We can only briefly discuss some of the more interesting contributions of ER. As mentioned before, ER deals naturally with simultaneous actions. A nice example is from <ref> [BG93] </ref>: a glass on a table spills its contents as soon as the table is in a non-horizontal position : initiating :(up l $ up r ) causes wet if true where up l , up r represent that the left resp. right side of the table are lifted from the
Reference: [BFPS81] <author> W. Buchholz, S. Feferman, W. Pohlers, and W. Sieg. </author> <title> Iterated Inductive Definitions and Subsystems of Analysis: Recent Proof-Theoretical Studies. Springer-Verlag, </title> <booktitle> Lecture Notes in Mathematics 897, </booktitle> <year> 1981. </year>
Reference-contexts: We interpret this truth value as an error indication. The above intuitions are formalised by the principle of inductive definition. 3.1 Principle of Inductive Definition The semantics and expressivity of inductive definitions are studied in a subarea of mathematical logic, the area of Iterated Inductive Definitions (IID) <ref> [BFPS81, Mos74] </ref>. Here we are only interested in the semantics. We need the following concepts. Given an atom set P, the set of (3-valued) valuations on P is defined as V P , the set of all functions P ! ft; u; fg.
Reference: [Cla78] <author> K. Clark. </author> <title> Negation as failure. </title> <editor> In H. Gallaire and J. Minker, editors, </editor> <booktitle> Logic and databases, </booktitle> <pages> pages 293-322. </pages> <publisher> Plenum Press, </publisher> <year> 1978. </year>
Reference: [Den96] <author> M. Denecker. </author> <title> Inductive Definitions, Logic Programming, Knowledge Representation. </title> <type> Technical report, K.U. </type> <institution> Leuven, </institution> <year> 1996. </year>
Reference-contexts: Given P and a definition D on P, we need to characterise a valuation I D which defines the truth values of all atoms according to D. In IID this involves stratifying the definition, but it has been argued in <ref> [Den96] </ref> that techniques inspired by logic programming semantics formalise the same intuitions in a more general and syntax independent way. We present this technique.
Reference: [GL92] <author> M. Gelfond and V. Lifschitz. </author> <title> Describing Action and Change by Logic Programs. </title> <booktitle> In Proc. of the 9th Int. Joint Conf. and Symp. on Logic Programming, </booktitle> <year> 1992. </year>
Reference: [HM87] <author> S. Hanks and D. McDermott. </author> <title> Nonmonotonic logic and temporal projection. </title> <journal> Artificial Intelligence, </journal> <volume> 33 </volume> <pages> 379-412, </pages> <year> 1987. </year>
Reference: [KM97] <author> A. Kakas and R. Miller. </author> <title> A simple declarative language for describing narratives with actions. </title> <note> to appear in : Journal of Logic Programming, Special Issue on Reasoning about Actions, </note> <year> 1997. </year>
Reference-contexts: In ER, derived effect rules are independent change propagation rules. Their semantics is independent of the state constraints in the theory (as opposed to [1]), and does not include an implicit state constraint itself (as opposed to <ref> [MT95, KM97] </ref>). Thanks to this uncoupling, a finer-grained representation of temporal domains can be achieved, as illustrated above. In ER then the resulting state after an action occurrence is uniquely determined by the previous state and the direct and derived effect rules in the theory.
Reference: [KS96] <author> R. A. Kowalski and M. Sergot. </author> <title> A logic-based calculus of events. </title> <journal> New Generation Computing, </journal> <volume> 4(4) </volume> <pages> 319-340, </pages> <year> 1986. </year>
Reference: [Lin95] <author> F. Lin. </author> <title> Embracing causality in specifying the indirect effects of actions. </title> <editor> In C. Mellish, editor, </editor> <booktitle> Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1985-1991, </pages> <year> 1995. </year>
Reference-contexts: Moreover this approach proves to be successful, without any modification, in modeling the effects of simultaneous actions, as will be discussed in section 4. As an example we present the suitcase domain from <ref> [Lin95] </ref>. A suitcase is equipped with a spring mechanism which opens the suitcase when its two latches are open at the same time.
Reference: [LR94] <author> F. Lin and R. Reiter. </author> <title> State constraints revisited. </title> <journal> J. of Logic and computation, special issue on actions and processes, </journal> <volume> 4 </volume> <pages> 655-678, </pages> <year> 1994. </year>
Reference-contexts: * Well-founded event topology: the set E = ftj9a : Ha (a; t)g has a least element, denoted e start and 8t t 0 : [t; t 0 ] " E is a finite set. 7 7 This condition plays the same role as the induction axiom in for example <ref> [LR94] </ref> * Consistency: 8t; 8f : :Initiates (t; f ) _ :Initiates (t; :f ) 8f : Initially (f ) $ :Initially (:f ) * Definition of initial state: 8t e start : Ho (l f ; t) $ Initially (l f ); * Inertia: 8t 1 ; t 2 ;
Reference: [MT95] <author> N. McCain and H. Turner. </author> <title> A causal theory of ramifications and qualifications. </title> <editor> In C. Mellish, editor, </editor> <booktitle> Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1978-1984, </pages> <year> 1995. </year>
Reference-contexts: If an action's direct effect results in a violation of a state constraint, there will either be indirect effects restoring the validity of the constraint, or the action is impossible. It has been argued convincingly in for example <ref> [MT95] </ref> that state constraints are insufficient to convey all of the information required to determine possible state changes: it is unclear in general if an action violating a state constraint will give rise to indirect effects or if it is simply impossible. <p> In ER, derived effect rules are independent change propagation rules. Their semantics is independent of the state constraints in the theory (as opposed to [1]), and does not include an implicit state constraint itself (as opposed to <ref> [MT95, KM97] </ref>). Thanks to this uncoupling, a finer-grained representation of temporal domains can be achieved, as illustrated above. In ER then the resulting state after an action occurrence is uniquely determined by the previous state and the direct and derived effect rules in the theory.
Reference: [Mos74] <author> Y. N. Moschovakis. </author> <title> Elementary Induction on Abstract Structures. </title> <publisher> North-Holland Publishing Company, </publisher> <address> Amsterdam- New York, </address> <year> 1974. </year>
Reference-contexts: We interpret this truth value as an error indication. The above intuitions are formalised by the principle of inductive definition. 3.1 Principle of Inductive Definition The semantics and expressivity of inductive definitions are studied in a subarea of mathematical logic, the area of Iterated Inductive Definitions (IID) <ref> [BFPS81, Mos74] </ref>. Here we are only interested in the semantics. We need the following concepts. Given an atom set P, the set of (3-valued) valuations on P is defined as V P , the set of all functions P ! ft; u; fg.
Reference: [Pin94] <author> J. A. Pinto. </author> <title> Temporal reasoning in the situation calculus. </title> <type> Technical Report KRR-TR-94-1, </type> <institution> Computer Science Dept., University of Toronto, </institution> <year> 1994. </year>
Reference-contexts: Also, as argued in <ref> [Pin94] </ref>, there can be multiple sets of indirect effects able to restore the state constraint, and the intended set can not be determined without additional information. For this reason, causal laws have been proposed ([MT95, KM97, 1]) to represent ramifications.
Reference: [Sho90] <author> Y. Shoham. </author> <title> Nonmonotonic reasoning and causation. </title> <journal> Cognitive Science, </journal> <volume> 214 </volume> <pages> 213-252, </pages> <year> 1990. </year>
Reference: [1] <author> M. Thielscher. </author> <title> Ramification and causality. </title> <journal> Artificial Intelligence, </journal> <volume> 89(1-2):317-364, </volume> <year> 1997. </year>
Reference-contexts: So there is no state constraint related to this indirect effect, it is simply the result of a change propagation. In ER, derived effect rules are independent change propagation rules. Their semantics is independent of the state constraints in the theory (as opposed to <ref> [1] </ref>), and does not include an implicit state constraint itself (as opposed to [MT95, KM97]). Thanks to this uncoupling, a finer-grained representation of temporal domains can be achieved, as illustrated above. <p> of an indirect effect rule relating the alarm bell to someone's presence in the building can not be circumvented by adding new direct effect rules for each action able to bring someone inside (which would clearly be an undesirable approach in a decent knowledge representation system in any case). 4 <ref> [1] </ref> describes an automatic way of deriving the intended causal rules related to a state constraint, using additional influence information. <p> The mapping deals with basic ER theories as well as with the aforementioned extensions of ER. Finally, using nondeterministic ramifications, we have improved and adapted to ER the method presented in <ref> [1] </ref> for using influence information to automatically generate derived effect rules. 8 Extensions of ER, in particular for dealing with delayed ramifications, will incorporate stronger principles than explicit completion; in particular an inductive definition semantics will be applied to the then arising theory of actions.
Reference: [VDT98] <author> K. Van Belleghem, M. Denecker and D. Theseider Dupre. </author> <title> Ramifications and dependencies in an event-based language. </title> <note> Preliminary version of long paper, K.U.Leuven. </note>
Reference-contexts: The fourth section sketches the more interesting contributions of the language and several extensions. Due to space considerations, most issues in this paper have not been discussed in as much depth as they deserve. For more details we refer the reader to <ref> [VDT98] </ref>, where we add more examples, motivations and in-depth discussions, several results concerning the semantics, detailed comparisons with related work, a mapping to open logic programming, extensions for dealing with nondeterminism and delayed effects, and discussions of various other related issues. 2 The syntax of E R Basically, an ER theory
References-found: 16

