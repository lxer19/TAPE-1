URL: http://www.cs.tamu.edu/faculty/vaidya/papers/mobile-computing/99-003.ps.Z
Refering-URL: http://www.cs.tamu.edu/faculty/vaidya/mobile.html
Root-URL: http://www.cs.tamu.edu
Title: Delayed Duplicate Acknowledgements: A TCP-Unaware Approach to Improve Performance of TCP over Wireless  
Author: Nitin Vaidya Miten Mehta Charles Perkins Gabriel Montenegro 
Abstract: Technical Report 99-003 February 1999 Abstract Since TCP cannot distinguish between packet losses due to transmission errors from those due to congestion, TCP tends to perform poorly on wireless links that are prone to transmission errors. Several techniques have previously been proposed to improve TCP performance over wireless links. Existing schemes typically require an intermediate node (typically, a base station) to be TCP-aware. For instance, the Snoop scheme requires the base station to interpret TCP headers and take appropriate actions to help improve TCP performance. This paper proposes an alternative TCP-unaware technique that attempts to mimic the behavior of the Snoop protocol. Performance evaluation shows that the proposed Delayed Dupacks scheme performs quite well. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Atkinson, </author> <title> "Security architecture for the internet protocol," </title> <type> Tech. Rep. RFC 2401, </type> <institution> IPSEC working group, Internet Engineering Task Force, </institution> <month> November </month> <year> 1998. </year>
Reference-contexts: The proposed scheme may be preferred over Snoop when encryption is used. To provide security, packets may be encrypted by the sender, as specified by IPSEC <ref> [1] </ref> or some other standard. With encryption, the base station may not be able to view the TCP headers. In such cases, the Snoop scheme is not useful. Proposed Delayed Duplicate Acknowledgements (or, Delayed Dupacks) scheme attempts to approximate the behavior of Snoop.
Reference: [2] <author> A. Bakre and B. Badrinath, "I-TCP: </author> <title> Indirect TCP for mobile hosts," </title> <booktitle> in Proc. 15th International Conf. on Distributed Computing Systems (ICDCS), </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: Wireless links are often prone to a higher transmission error rate, when compared to wired links. Because of its inability to distinguish between packet losses due to congestion and due to transmission errors, TCP performs poorly on wireless links <ref> [2, 3] </ref>. Several interesting approaches have already been proposed to improve TCP performance over wireless [2, 4, 3, 5, 8, 10, 15, 17, 19, 21, 25, 26, 27]. <p> When a packet loss is detected, the TCP congestion control mechanism drastically reduces the congestion window size, effectively reducing the amount of data sent by the sender in one round-trip time (RTT). Performance of TCP Over Wireless: TCP can perform poorly over wireless links <ref> [2, 3, 13] </ref> due to the assumption that primary cause of packet losses is congestion. On wireless links, packet losses due to transmission errors may be non-negligible. However, the TCP sender, on detecting such a packet loss, reduces its congestion window, unnecessarily degrading throughput [2, 3]. <p> On wireless links, packet losses due to transmission errors may be non-negligible. However, the TCP sender, on detecting such a packet loss, reduces its congestion window, unnecessarily degrading throughput <ref> [2, 3] </ref>. <p> In the split connection approach, a TCP connection is broken into two TCP connections one from the sender to the base station, and another from the base station to the receiver <ref> [2, 26] </ref>. Thus, wireless errors can be handled locally, by means of retransmissions from the base station. This approach, however, violates the end-to-end reliability semantics of TCP. <p> To our knowledge, Caceres et al. [6] were the first to consider the impact of mobility on TCP performance, and suggest a mechanism to improve the throughput. Several other researchers have also considered techniques designed to take mobility into account <ref> [2, 6, 5, 17, 25] </ref>. 4 The Snoop Scheme Because the proposed TCP-unaware scheme attempts to imitate the TCP-aware Snoop scheme [4], we first describe Snoop briefly. For the discussion below, consider the system shown in Figure 1.
Reference: [3] <author> H. Balakrishnan, V. Padmanabhan, S. Seshan, and R. Katz, </author> <title> "A comparison of mechanisms for improving TCP performance over wireless links," </title> <booktitle> in ACM SIGCOMM, </booktitle> <address> Stanford, CA, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: Wireless links are often prone to a higher transmission error rate, when compared to wired links. Because of its inability to distinguish between packet losses due to congestion and due to transmission errors, TCP performs poorly on wireless links <ref> [2, 3] </ref>. Several interesting approaches have already been proposed to improve TCP performance over wireless [2, 4, 3, 5, 8, 10, 15, 17, 19, 21, 25, 26, 27]. <p> However, many of these schemes require TCP-specific actions on the part of intermediate nodes on the path from TCP sender to TCP receiver. Such schemes are sometimes referred as being TCP-aware <ref> [3] </ref>. The objective of this paper is to investigate an alternative "TCP-unaware" technique that can improve TCP performance without taking TCP-specific actions at intermediate nodes. <p> When a packet loss is detected, the TCP congestion control mechanism drastically reduces the congestion window size, effectively reducing the amount of data sent by the sender in one round-trip time (RTT). Performance of TCP Over Wireless: TCP can perform poorly over wireless links <ref> [2, 3, 13] </ref> due to the assumption that primary cause of packet losses is congestion. On wireless links, packet losses due to transmission errors may be non-negligible. However, the TCP sender, on detecting such a packet loss, reduces its congestion window, unnecessarily degrading throughput [2, 3]. <p> On wireless links, packet losses due to transmission errors may be non-negligible. However, the TCP sender, on detecting such a packet loss, reduces its congestion window, unnecessarily degrading throughput <ref> [2, 3] </ref>. <p> WTCP [21] modifies the Snoop protocol by time-stamping packets. The time-stamps are used to provide the sender with a more accurate estimate of round-trip times, despite retransmissions on the wireless link. The explicit loss notification (ELN) scheme <ref> [3] </ref> assumes that the receiver can determine the cause of a packet loss, and send a notification to the sender. Other explicit notification schemes have also been proposed [14, 7, 10]. <p> Therefore, protocols such as Snoop (and the proposed scheme) cannot perform well in these environments, and alternative techniques need to be used. Similar to <ref> [4, 3] </ref>, in our simulation study, we choose the wireless bandwidth such that a wireless link level retransmission can potentially be performed before the TCP sender may timeout. <p> Our measurements indicate that, when the error rate is high, Snoop often performs somewhat worse than Delayed Dupacks. This occurs because the link layer retransmission scheme is able to recover from multiple packet losses better than Snoop. As noted in <ref> [3] </ref>, in such situations, Snoop performance can be improved by using selective acknowledgements (SACK). In Figures 5 (a) through 5 (d), observe that as the congestion loss rate increases, the difference between throughput for the best and worst values of d plotted increases.
Reference: [4] <author> H. Balakrishnan, S. Seshan, and R. Katz, </author> <title> "Improving reliable transport and handoff performance in cellular wireless networks," </title> <journal> ACM Wireless Networks, </journal> <volume> vol. 1, </volume> <month> December </month> <year> 1995. </year>
Reference-contexts: The objective of this paper is to investigate an alternative "TCP-unaware" technique that can improve TCP performance without taking TCP-specific actions at intermediate nodes. In particular, the TCP-unaware scheme proposed here attempts to imitate a previously proposed TCP-aware scheme named Snoop <ref> [4] </ref>. fl This research is supported in part by the Texas Advanced Technology Program grant 010115-248, National Science Foundation grant 32525-46600, and Sun Microsystems. y Nitin Vaidya is the contact author. <p> If the TCP sender receives three duplicate acknowledgements, the fast retransmit mechanism will be triggered <ref> [4] </ref>. In each of the above cases, the TCP sender would retransmit the lost packet, leading to the so-called "interference" between TCP and link level retransmissions. This interference wastes wireless bandwidth by duplicating retransmissions [13]. <p> Thus, wireless errors can be handled locally, by means of retransmissions from the base station. This approach, however, violates the end-to-end reliability semantics of TCP. The Snoop protocol <ref> [4] </ref>, described later in the paper, also performs local recovery, but improves on the split connection approach by retaining the end-to-end reliability semantics. WTCP [21] modifies the Snoop protocol by time-stamping packets. <p> Several other researchers have also considered techniques designed to take mobility into account [2, 6, 5, 17, 25]. 4 The Snoop Scheme Because the proposed TCP-unaware scheme attempts to imitate the TCP-aware Snoop scheme <ref> [4] </ref>, we first describe Snoop briefly. For the discussion below, consider the system shown in Figure 1. Consider TCP data transfer from node S to the wireless host WH, through the base station BS. <p> Consider TCP data transfer from node S to the wireless host WH, through the base station BS. The link between S and BS is wired, whereas the link between BS and WH is wireless. The essential elements of the Snoop scheme <ref> [4] </ref> may be summarized as follows: * Link level retransmissions: Snoop uses a link level retransmission mechanism that allows the base station to retransmit packets lost due to transmission errors on the wireless link. <p> Snoop is designed for environments where the likelihood of a timeout at the TCP sender is small (this is often true, since TCP retransmission timeouts typically use coarse granularity <ref> [4] </ref>). However, out-of-order packet delivery over the wireless link can trigger a fast retransmit from the TCP sender. <p> Therefore, protocols such as Snoop (and the proposed scheme) cannot perform well in these environments, and alternative techniques need to be used. Similar to <ref> [4, 3] </ref>, in our simulation study, we choose the wireless bandwidth such that a wireless link level retransmission can potentially be performed before the TCP sender may timeout. <p> Also, it is possible to achieve good performance using the same value of d over a reasonable range of congestion loss rates (we simulated 0 to 5% congestion loss rates). 7 Conclusions and Further Work Snoop <ref> [4] </ref> uses a TCP-aware link layer scheme to improve performance of TCP over wireless links prone to transmission errors. This paper presents a TCP-unaware scheme, named Delayed Duplicate Acknowledgements, that attempts to imitate the behavior of Snoop.
Reference: [5] <author> K. Brown and S. Singh, "M-TCP: </author> <title> TCP for mobile cellular networks," </title> <journal> ACM Computer Communications Review, </journal> <volume> vol. 27, no. 5, </volume> <year> 1997. </year> <month> 14 </month>
Reference-contexts: To our knowledge, Caceres et al. [6] were the first to consider the impact of mobility on TCP performance, and suggest a mechanism to improve the throughput. Several other researchers have also considered techniques designed to take mobility into account <ref> [2, 6, 5, 17, 25] </ref>. 4 The Snoop Scheme Because the proposed TCP-unaware scheme attempts to imitate the TCP-aware Snoop scheme [4], we first describe Snoop briefly. For the discussion below, consider the system shown in Figure 1.
Reference: [6] <author> R. Caceres and L. Iftode, </author> <title> "Improving the performance of reliable transport protocols in mobile computing environments," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 13, </volume> <month> June </month> <year> 1995. </year>
Reference-contexts: Host mobility is an issue related to the problem considered here, since wireless hosts are often mobile. To our knowledge, Caceres et al. <ref> [6] </ref> were the first to consider the impact of mobility on TCP performance, and suggest a mechanism to improve the throughput. <p> To our knowledge, Caceres et al. [6] were the first to consider the impact of mobility on TCP performance, and suggest a mechanism to improve the throughput. Several other researchers have also considered techniques designed to take mobility into account <ref> [2, 6, 5, 17, 25] </ref>. 4 The Snoop Scheme Because the proposed TCP-unaware scheme attempts to imitate the TCP-aware Snoop scheme [4], we first describe Snoop briefly. For the discussion below, consider the system shown in Figure 1.
Reference: [7] <author> K. Chandran, S. Raghunathan, S. Venkatesan, and R. Prakash, </author> <title> "A feedback based scheme for improving TCP performance in ad-hoc wireless networks," </title> <type> tech. rep., </type> <institution> Computer Science, University of Texas-Dallas, </institution> <month> October </month> <year> 1997. </year>
Reference-contexts: The explicit loss notification (ELN) scheme [3] assumes that the receiver can determine the cause of a packet loss, and send a notification to the sender. Other explicit notification schemes have also been proposed <ref> [14, 7, 10] </ref>. Although earlier research on TCP over wireless often focussed on ways to modify TCP, some recent research has focussed on tuning the link layer implementation to allow TCP to achieve better throughput [20, 15, 19, 18, 9].
Reference: [8] <author> H. Chaskar, T. V. Lakshman, and U. Madhow, </author> <title> "On the design of interfaces for TCP/IP over wireless," </title> <booktitle> in MILCOM, </booktitle> <year> 1996. </year>
Reference: [9] <author> A. Chockalingam, M. Zorzi, and R. R. Rao, </author> <title> "Performance of TCP on wireless fading links with memory," </title> <booktitle> in Proc. of IEEE ICC '98, </booktitle> <month> June </month> <year> 1998. </year>
Reference-contexts: Other explicit notification schemes have also been proposed [14, 7, 10]. Although earlier research on TCP over wireless often focussed on ways to modify TCP, some recent research has focussed on tuning the link layer implementation to allow TCP to achieve better throughput <ref> [20, 15, 19, 18, 9] </ref>. Host mobility is an issue related to the problem considered here, since wireless hosts are often mobile. To our knowledge, Caceres et al. [6] were the first to consider the impact of mobility on TCP performance, and suggest a mechanism to improve the throughput.
Reference: [10] <author> J. A. Cobb and P. Agrawal, </author> <title> "Congestion or corruption? a strategy for efficient wireless TCP sessions," </title> <booktitle> in IEEE Symposium on Computers and Communications, Alexandria, Egypt, </booktitle> <pages> pp. 262-268, </pages> <year> 1995. </year>
Reference-contexts: The explicit loss notification (ELN) scheme [3] assumes that the receiver can determine the cause of a packet loss, and send a notification to the sender. Other explicit notification schemes have also been proposed <ref> [14, 7, 10] </ref>. Although earlier research on TCP over wireless often focussed on ways to modify TCP, some recent research has focussed on tuning the link layer implementation to allow TCP to achieve better throughput [20, 15, 19, 18, 9].
Reference: [11] <author> D. C. Cox, </author> <title> "Wireless personal communication: What is it?," </title> <journal> IEEE Personal Communication, </journal> <pages> pp. 20-35, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: 1 Introduction Wireless networking has gained widespread acceptance in recent years <ref> [11, 12, 23, 24] </ref>. The increasing use of wireless communication makes it interesting to consider issues related to the performance of transport protocols over wireless links.
Reference: [12] <author> R. A. Dayem, </author> <title> Mobile Data and Wireless LAN Technologies. </title> <publisher> Prentice Hall, </publisher> <year> 1997. </year>
Reference-contexts: 1 Introduction Wireless networking has gained widespread acceptance in recent years <ref> [11, 12, 23, 24] </ref>. The increasing use of wireless communication makes it interesting to consider issues related to the performance of transport protocols over wireless links.
Reference: [13] <author> A. DeSimone, M. Chuah, and O. Yue, </author> <title> "Throughput performance of transport-layer protocols over wireless LANs," </title> <booktitle> in Proc. Globecom '93, </booktitle> <month> December </month> <year> 1993. </year>
Reference-contexts: When a packet loss is detected, the TCP congestion control mechanism drastically reduces the congestion window size, effectively reducing the amount of data sent by the sender in one round-trip time (RTT). Performance of TCP Over Wireless: TCP can perform poorly over wireless links <ref> [2, 3, 13] </ref> due to the assumption that primary cause of packet losses is congestion. On wireless links, packet losses due to transmission errors may be non-negligible. However, the TCP sender, on detecting such a packet loss, reduces its congestion window, unnecessarily degrading throughput [2, 3]. <p> In wireless links, using link level retransmission to remedy transmission errors may result in adverse interaction with TCP: * If the wireless link level retransmissions take too long, the TCP sender may time out before the retransmitted packet could be delivered to, and acknowledged by, the TCP receiver <ref> [13] </ref>. * If the wireless link level retransmission scheme delivers packets out-of-order (OOO), then the OOO packets would result in duplicate acknowledgements from the receiver. If the TCP sender receives three duplicate acknowledgements, the fast retransmit mechanism will be triggered [4]. <p> If the TCP sender receives three duplicate acknowledgements, the fast retransmit mechanism will be triggered [4]. In each of the above cases, the TCP sender would retransmit the lost packet, leading to the so-called "interference" between TCP and link level retransmissions. This interference wastes wireless bandwidth by duplicating retransmissions <ref> [13] </ref>. In addition, since the TCP sender detects that a packet is lost, it reduces its congestion window. 2 3 Related Work Several approaches to improve performance of TCP over wireless links have been proposed.
Reference: [14] <author> R. Durst, G. Miller, and E. Travis, </author> <title> "TCP extensions for space communications," </title> <booktitle> in Proceedings of MOBICOM '96, </booktitle> <pages> pp. 15-26, </pages> <month> November </month> <year> 1996. </year>
Reference-contexts: The explicit loss notification (ELN) scheme [3] assumes that the receiver can determine the cause of a packet loss, and send a notification to the sender. Other explicit notification schemes have also been proposed <ref> [14, 7, 10] </ref>. Although earlier research on TCP over wireless often focussed on ways to modify TCP, some recent research has focussed on tuning the link layer implementation to allow TCP to achieve better throughput [20, 15, 19, 18, 9].
Reference: [15] <author> D. A. Eckhardt and P. Steenkiste, </author> <title> "Improving wireless LAN performance via adaptive local error control," </title> <booktitle> in Int. Conf. Network Protocols, </booktitle> <pages> pp. 327-338, </pages> <year> 1998. </year>
Reference-contexts: Other explicit notification schemes have also been proposed [14, 7, 10]. Although earlier research on TCP over wireless often focussed on ways to modify TCP, some recent research has focussed on tuning the link layer implementation to allow TCP to achieve better throughput <ref> [20, 15, 19, 18, 9] </ref>. Host mobility is an issue related to the problem considered here, since wireless hosts are often mobile. To our knowledge, Caceres et al. [6] were the first to consider the impact of mobility on TCP performance, and suggest a mechanism to improve the throughput.
Reference: [16] <author> K. Fall and K. Varadhan, </author> <title> "ns Notes and documentation," </title> <type> tech. rep., </type> <institution> VINT Project, UC-Berkeley and LBNL, </institution> <year> 1997. </year>
Reference-contexts: However, we show that despite the use of a simple link level retransmission scheme, the Delayed Dupacks scheme can perform quite well. An Example schemes. 6 Simulation Results We evaluated performance of the Delayed Dupacks scheme using the ns-2 simulator <ref> [16] </ref>. Figure 1 illustrates the network topology used in our evaluation. A one-way TCP transfer is established from node S to node WH. The link between the sender node S and base station BS is wired and full-duplex. <p> Erroneous packets are dropped on receipt. We simulate congestion elsewhere in the network by dropping TCP data packets on the wired links (when sent from TCP sender to BS). The uniform error model from ns-2 <ref> [16] </ref> is used for this purpose. Congestion loss rates of 0.0, 0.01, 0.03 and 0.05 per packet are used in the simulations. All TCP transfers begin somewhere between 0 and 1 seconds from start of the simulation. <p> Each measurement reported in the graphs in this section is averaged over 12 simulation runs. For the simulations, "base TCP" is implemented using ns-2's TCP/Reno agent for the sender, and TCPSink agent for the receiver <ref> [16] </ref>.
Reference: [17] <author> Z. Haas and P. Agrawal, "Mobile-TCP: </author> <title> An asymmetric transport protocol design for mobile systems," </title> <booktitle> in ICC'97, </booktitle> <address> Montreal, Canada, </address> <month> June </month> <year> 1997. </year>
Reference-contexts: To our knowledge, Caceres et al. [6] were the first to consider the impact of mobility on TCP performance, and suggest a mechanism to improve the throughput. Several other researchers have also considered techniques designed to take mobility into account <ref> [2, 6, 5, 17, 25] </ref>. 4 The Snoop Scheme Because the proposed TCP-unaware scheme attempts to imitate the TCP-aware Snoop scheme [4], we first describe Snoop briefly. For the discussion below, consider the system shown in Figure 1.
Reference: [18] <author> P. Lettieri, C. Schurgers, and M. B. Srivastava, </author> <title> "Adaptive link layer strategies for energy efficient networking." </title> <note> submitted for publication. </note>
Reference-contexts: Other explicit notification schemes have also been proposed [14, 7, 10]. Although earlier research on TCP over wireless often focussed on ways to modify TCP, some recent research has focussed on tuning the link layer implementation to allow TCP to achieve better throughput <ref> [20, 15, 19, 18, 9] </ref>. Host mobility is an issue related to the problem considered here, since wireless hosts are often mobile. To our knowledge, Caceres et al. [6] were the first to consider the impact of mobility on TCP performance, and suggest a mechanism to improve the throughput.
Reference: [19] <author> P. Lettieri and M. B. Srivastava, </author> <title> "Adaptive frame length control for improving wireless link throughput, range, and efficiency," </title> <booktitle> in INFOCOM, </booktitle> <pages> pp. 564-565, </pages> <year> 1998. </year>
Reference-contexts: Other explicit notification schemes have also been proposed [14, 7, 10]. Although earlier research on TCP over wireless often focussed on ways to modify TCP, some recent research has focussed on tuning the link layer implementation to allow TCP to achieve better throughput <ref> [20, 15, 19, 18, 9] </ref>. Host mobility is an issue related to the problem considered here, since wireless hosts are often mobile. To our knowledge, Caceres et al. [6] were the first to consider the impact of mobility on TCP performance, and suggest a mechanism to improve the throughput.
Reference: [20] <author> U. Madhow, </author> <title> "Dynamic congestion control and error recovery over a heterogeneous internet (invited paper)," </title> <booktitle> in IEEE CDC, </booktitle> <year> 1997. </year>
Reference-contexts: Other explicit notification schemes have also been proposed [14, 7, 10]. Although earlier research on TCP over wireless often focussed on ways to modify TCP, some recent research has focussed on tuning the link layer implementation to allow TCP to achieve better throughput <ref> [20, 15, 19, 18, 9] </ref>. Host mobility is an issue related to the problem considered here, since wireless hosts are often mobile. To our knowledge, Caceres et al. [6] were the first to consider the impact of mobility on TCP performance, and suggest a mechanism to improve the throughput.
Reference: [21] <author> K. Ratnam and I. Matta, "WTCP: </author> <title> An efficient transmission control protocol for networks with wireless links," </title> <type> Tech. Rep. </type> <institution> NU-CCS-97-11, Northeastern University, </institution> <month> July </month> <year> 1997. </year>
Reference-contexts: This approach, however, violates the end-to-end reliability semantics of TCP. The Snoop protocol [4], described later in the paper, also performs local recovery, but improves on the split connection approach by retaining the end-to-end reliability semantics. WTCP <ref> [21] </ref> modifies the Snoop protocol by time-stamping packets. The time-stamps are used to provide the sender with a more accurate estimate of round-trip times, despite retransmissions on the wireless link.
Reference: [22] <author> W. R. Stevens, </author> <title> TCP/IP Illustrated. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: The increasing use of wireless communication makes it interesting to consider issues related to the performance of transport protocols over wireless links. In particular, this paper considers performance of TCP, the Transmission Control Protocol for connection-oriented reliable in-order data delivery <ref> [22] </ref>, commonly used in the present-day Internet. Wireless links are often prone to a higher transmission error rate, when compared to wired links. Because of its inability to distinguish between packet losses due to congestion and due to transmission errors, TCP performs poorly on wireless links [2, 3]. <p> Mehta performed a part of this work at the Texas A&M University. x Sun Microsystems Laboratories, Palo Alto Sun Microsystems Laboratories, Palo Alto 1 2 Performance of TCP over Wireless Links We begin with a brief summary of relevant TCP features. TCP Overview <ref> [22] </ref>: TCP achieves reliability by requiring that the TCP sender retransmit lost packets. For this purpose, the TCP receiver acknowledges receipt of data packets from the sender. An acknowledgement (or ack) sent by the TCP receiver is cumulative. <p> On receiving this out-of-order packet, the receiver sends a duplicate acknowledgement (or dupack), acknowledging all the in-sequence bytes received so far. The TCP sender determines that a packet is lost using one of the following two mechanisms <ref> [22] </ref>: * Retransmission timeout: If a timer, set when a packet is transmitted, expires before acknowl edgement of the packet is received, the packet is presumed lost. * Fast retransmit: If three dupacks containing sequence number P are received, then the packet that includes sequence number P is presumed lost, and
Reference: [23] <author> Telxon Corporation, </author> <title> "Wireless LAN products," </title> <month> November </month> <year> 1998. </year> <month> 15 </month>
Reference-contexts: 1 Introduction Wireless networking has gained widespread acceptance in recent years <ref> [11, 12, 23, 24] </ref>. The increasing use of wireless communication makes it interesting to consider issues related to the performance of transport protocols over wireless links.
Reference: [24] <author> B. Tuch, </author> <title> "Development of WaveLAN, an ISM band wireless LAN," </title> <journal> AT&T Technical Journal, </journal> <pages> pp. 27-37, </pages> <month> July/August </month> <year> 1993. </year>
Reference-contexts: 1 Introduction Wireless networking has gained widespread acceptance in recent years <ref> [11, 12, 23, 24] </ref>. The increasing use of wireless communication makes it interesting to consider issues related to the performance of transport protocols over wireless links.
Reference: [25] <author> K. Wang and S. K. Tripathi, </author> <title> "Mobile-end transport protocol: An alternative to TCP/IP over wireless links," </title> <booktitle> in IEEE Infocom, </booktitle> <pages> pp. 1046-1053, </pages> <month> March </month> <year> 1998. </year>
Reference-contexts: To our knowledge, Caceres et al. [6] were the first to consider the impact of mobility on TCP performance, and suggest a mechanism to improve the throughput. Several other researchers have also considered techniques designed to take mobility into account <ref> [2, 6, 5, 17, 25] </ref>. 4 The Snoop Scheme Because the proposed TCP-unaware scheme attempts to imitate the TCP-aware Snoop scheme [4], we first describe Snoop briefly. For the discussion below, consider the system shown in Figure 1.
Reference: [26] <author> R. Yavatkar and N. Bhagwat, </author> <title> "Improving end-to-end performance of TCP over mobile inter-networks," </title> <booktitle> in Workshop on Mobile Computing Systems and Applications, </booktitle> <month> December </month> <year> 1994. </year>
Reference-contexts: In the split connection approach, a TCP connection is broken into two TCP connections one from the sender to the base station, and another from the base station to the receiver <ref> [2, 26] </ref>. Thus, wireless errors can be handled locally, by means of retransmissions from the base station. This approach, however, violates the end-to-end reliability semantics of TCP.
Reference: [27] <author> M. Zorzi and R. R. Rao, </author> <title> "Error control in multi-layered stacks," </title> <booktitle> in GLOBECOM, </booktitle> <month> November </month> <year> 1997. </year>
References-found: 27

