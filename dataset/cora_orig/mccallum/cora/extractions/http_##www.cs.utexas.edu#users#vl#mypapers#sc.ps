URL: http://www.cs.utexas.edu/users/vl/mypapers/sc.ps
Refering-URL: http://www.cs.utexas.edu/users/vl/papers.html
Root-URL: 
Email: vl@cs.utexas.edu  
Title: Situation Calculus and Causal Logic  
Author: Vladimir Lifschitz 
Address: Austin, TX 78712, USA  
Affiliation: Department of Computer Sciences University of Texas at Austin  
Abstract: In the AAAI-97 paper by McCain and Turner, the frame problem is solved using a nonmonotonic causal logic. In this note we show how their method can be adapted to the language of the situation calculus. The "causal situation calculus" is applied to action domains involving ramifications and nondeterminism, and related to the causal formalization of actions proposed by Lin.
Abstract-found: 1
Intro-found: 1
Reference: [ Baker, 1991 ] <author> Andrew Baker. </author> <title> Nonmonotonic reasoning in the framework of situation calculus. </title> <journal> Artificial Intelligence, </journal> <volume> 49 </volume> <pages> 5-23, </pages> <year> 1991. </year>
Reference-contexts: The presence of indirect effects makes the frame problem more difficult. (This aspect of the frame problem is known as the "ramification problem.") In [ Lifschitz, 1991 ] , this difficulty is addressed using circumscription in the style of <ref> [ Baker, 1991 ] </ref> . The logical machinery that is employed there is rather complicated. It includes a second-order formulation of the existence of situation axioms and conjoining three circumscriptions with carefully selected lists of varied constants.
Reference: [ Clark, 1978 ] <author> Keith Clark. </author> <title> Negation as failure. </title> <editor> In Herve Gallaire and Jack Minker, editors, </editor> <booktitle> Logic and Data Bases, </booktitle> <pages> pages 293-322. </pages> <publisher> Plenum Press, </publisher> <address> New York, </address> <year> 1978. </year>
Reference-contexts: Applying literal completion is all that needs to be done to eliminate the second-order quantifiers from the sentence representing CBW . Literal completion is similar to the process of completion familiar from logic programming ( <ref> [ Clark, 1978 ] </ref> , [ Lloyd and Topor, 1984 ] ).
Reference: [ Geffner, 1990 ] <author> Hector Geffner. </author> <title> Causal theories for nonmonotonic reasoning. </title> <booktitle> In Proc. AAAI-90, </booktitle> <pages> pages 524-530, </pages> <year> 1990. </year>
Reference-contexts: 1 Introduction In this note, a nonmonotonic causal logic is used for describing actions in the situation calculus. This logic was defined for the propositional case in [ McCain and Turner, 1997 ] on the basis of earlier work by several authors, including <ref> [ Geffner, 1990 ] </ref> , [ Lin, 1995 ] and [ Mc-Cain and Turner, 1995 ] . In [ Lifschitz, 1997 ] , it is extended to languages with variables.
Reference: [ Giunchiglia and Lifschitz, 1998 ] <author> Enrico Giunchiglia and Vladimir Lifschitz. </author> <title> An action language based on causal explanation: </title> <note> Preliminary report. In Proc. AAAI-98, 1998. To appear. </note>
Reference-contexts: Methodologies for representing actions can be compared in a precise and general way by proving embedding theorems, such as the results presented in [ Kartha, 1993 ] . Our plans for future work include relating the causal situation calculus to the action language C from <ref> [ Giunchiglia and Lifschitz, 1998 ] </ref> . Acknowledgements I am grateful to Enrico Giunchiglia, Fangzhen Lin, Norman McCain and Hudson Turner for useful com ments. This work was partially supported by National Science Foundation under grant IRI-9306751.
Reference: [ Kartha, 1993 ] <author> Neelakantan Kartha. </author> <title> Soundness and completeness theorems for three formalizations of action. </title> <booktitle> In Proc. IJCAI-93, </booktitle> <pages> pages 724-729, </pages> <year> 1993. </year>
Reference-contexts: One particularly interesting issue is the treatment of qualification constraints in the sense of [ Lin and Reiter, 1994 ] . Methodologies for representing actions can be compared in a precise and general way by proving embedding theorems, such as the results presented in <ref> [ Kartha, 1993 ] </ref> . Our plans for future work include relating the causal situation calculus to the action language C from [ Giunchiglia and Lifschitz, 1998 ] . Acknowledgements I am grateful to Enrico Giunchiglia, Fangzhen Lin, Norman McCain and Hudson Turner for useful com ments.
Reference: [ Lifschitz, 1991 ] <author> Vladimir Lifschitz. </author> <title> Towards a metatheory of action. </title> <editor> In James Allen, Richard Fikes, and Erik Sandewall, editors, </editor> <booktitle> Proc. Second Int'l Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 376-386, </pages> <year> 1991. </year>
Reference-contexts: To facilitate the comparison of the causal version of the situation calculus with earlier work, we apply it here to a formalization of the blocks world which is similar to the one presented in <ref> [ Lifschitz, 1991 ] </ref> . This formalization involves actions with indirect effects. Then we discuss an enhancement of the basic example in which the effects of actions can be nondeterministic. The description of the blocks world used in [ Lifschitz, 1991 ] is outlined in Section 2. <p> of the blocks world which is similar to the one presented in <ref> [ Lifschitz, 1991 ] </ref> . This formalization involves actions with indirect effects. Then we discuss an enhancement of the basic example in which the effects of actions can be nondeterministic. The description of the blocks world used in [ Lifschitz, 1991 ] is outlined in Section 2. In Sections 3 and 4 we turn this description into a causal theory and show how this theory can be converted into a set of first-order axioms. The relationship between our method and Lin's is discussed in Section 5. <p> Fluent expressions of the form Clear (x) will be characterized by relating them to On, and they will not be inertial. The effect of placing a block x on top of block y is described in <ref> [ Lifschitz, 1991 ] </ref> by the axiom 1 Poss (Move (x; y); s) Holds (On (x; y); Result (Move (x; y); s)): (1) On the other hand, a block cannot be in two places at once: Holds (On (x; y); s) ^ Holds (On (x; z); s) y = z; :(Holds <p> The presence of indirect effects makes the frame problem more difficult. (This aspect of the frame problem is known as the "ramification problem.") In <ref> [ Lifschitz, 1991 ] </ref> , this difficulty is addressed using circumscription in the style of [ Baker, 1991 ] . The logical machinery that is employed there is rather complicated.
Reference: [ Lifschitz, 1994 ] <author> Vladimir Lifschitz. </author> <title> Circumscription. In D.M. </title> <editor> Gabbay, C.J. Hogger, and J.A. Robinson, editors, </editor> <booktitle> The Handbook of Logic in AI and Logic Programming, </booktitle> <volume> volume 3, </volume> <pages> pages 298-352. </pages> <publisher> Oxford University Press, </publisher> <year> 1994. </year>
Reference-contexts: Proof of Lemma 6. Recall that LBW is the parallel circumscription of Caused + , Caused and Inertial in the conjunction of the universal closures of formulas (20)-(22). All occurrences of these predicate constants in (20)-(22) are positive. According to Proposition 7.1.1 from <ref> [ Lifschitz, 1994 ] </ref> , it follows that LBW is equivalent to the conjunction of the circumscriptions of each of the three constants in the same sentence. Each of these circumscriptions can be computed using the completion method (see [ Lifschitz, 1994 ] , Section 3.1), and the result of the <p> According to Proposition 7.1.1 from <ref> [ Lifschitz, 1994 ] </ref> , it follows that LBW is equivalent to the conjunction of the circumscriptions of each of the three constants in the same sentence. Each of these circumscriptions can be computed using the completion method (see [ Lifschitz, 1994 ] , Section 3.1), and the result of the computation is represented by formulas (16), (26) and (27). B.5 Proof of Proposition 3 Proposition 3. CBW 0 is equivalent to the conjunction of the universal closures of formulas (1), (2), (11)-(15), (18), and (30)-(32).
Reference: [ Lifschitz, 1997 ] <author> Vladimir Lifschitz. </author> <title> On the logic of causal explanation. </title> <journal> Artificial Intelligence, </journal> <volume> 96 </volume> <pages> 451-465, </pages> <year> 1997. </year>
Reference-contexts: This logic was defined for the propositional case in [ McCain and Turner, 1997 ] on the basis of earlier work by several authors, including [ Geffner, 1990 ] , [ Lin, 1995 ] and [ Mc-Cain and Turner, 1995 ] . In <ref> [ Lifschitz, 1997 ] </ref> , it is extended to languages with variables. <p> For instance, the atom Closed 5 would express that the fluent Closed holds at time 5. Actions are treated in a similar way: the atom Close 5 would express that the action Close was performed between time instants 5 and 6. Action descriptions in <ref> [ Lifschitz, 1997 ] </ref> follow the same pattern, except that when variables are available in the language, a fluent can be represented by a predicate symbol that takes time as the argument, or as one of several arguments. <p> It is clear that at least in simple cases the language of the situation calculus is very attractive. The purpose of this note is to show that the version of the nonmonotonic causal logic presented in <ref> [ Lifschitz, 1997 ] </ref> is applicable in the framework of the situation calculus as well, that the elegant solution to the frame problem proposed in [ McCain and Turner, 1997 ] can be easily expressed in the language of the situation calculus, and that the process of "literal completion" described in <p> The semantics of causal theories is defined in <ref> [ Lifschitz, 1997 ] </ref> by a translation into classical logic; a causal theory is viewed as shorthand for the sentence obtained as the result of this translation. <p> Proposition 1 from <ref> [ Lifschitz, 1997 ] </ref> shows that including this rule has the same effect as circumscribing Inertial . <p> The second conjunctive term of (34) is what makes a causal rule stronger than the corresponding implication, and what makes the formalism nonmonotonic. Appendix B: Proofs of Theorems B.1 Literal Completion As defined in <ref> [ Lifschitz, 1997 ] </ref> , a causal theory T is definite if every explainable symbol of T is a predicate constant, and the head of every rule of T * is a literal that does not contain explainable sym bols in argument positions, or * contains no explainable symbols. <p> It is clear that CBW is definite. The process of "literal completion" described in [ Mc-Cain and Turner, 1997 ] for the propositional case and generalized in <ref> [ Lifschitz, 1997 ] </ref> , turns any definite causal theory into an equivalent set of sentences of classical logic, called its completion sentences. If the heads and the bodies of all rules of the theory are first-order formulas, as in CBW , then the completion sentences are first-order also.
Reference: [ Lin and Reiter, 1994 ] <author> Fangzhen Lin and Raymond Reiter. </author> <title> State constraints revisited. </title> <journal> Journal of Logic and Computation, </journal> <volume> 4 </volume> <pages> 655-678, </pages> <year> 1994. </year>
Reference-contexts: Otherwise, the expressive possibilities of this formalism remain unexplored. One particularly interesting issue is the treatment of qualification constraints in the sense of <ref> [ Lin and Reiter, 1994 ] </ref> . Methodologies for representing actions can be compared in a precise and general way by proving embedding theorems, such as the results presented in [ Kartha, 1993 ] .
Reference: [ Lin, 1995 ] <author> Fangzhen Lin. </author> <title> Embracing causality in specifying the indirect effects of actions. </title> <booktitle> In Proc. IJCAI-95, </booktitle> <pages> pages 1985-1991, </pages> <year> 1995. </year>
Reference-contexts: 1 Introduction In this note, a nonmonotonic causal logic is used for describing actions in the situation calculus. This logic was defined for the propositional case in [ McCain and Turner, 1997 ] on the basis of earlier work by several authors, including [ Geffner, 1990 ] , <ref> [ Lin, 1995 ] </ref> and [ Mc-Cain and Turner, 1995 ] . In [ Lifschitz, 1997 ] , it is extended to languages with variables. <p> On the other hand, these formalizations differ from each other in their approach to inertia. Formula (24), similar to the formalization of the commonsense law of inertia in <ref> [ Lin, 1995 ] </ref> , treats it monotonically: this formula is included as an additional constraint on top of a circumscriptive formalization of causality. By dropping (24) from the list of axioms we would make the theory weaker.
Reference: [ Lloyd and Topor, 1984 ] <author> John Lloyd and Rodney Topor. </author> <title> Making Prolog more expressive. </title> <journal> Journal of Logic Programming, </journal> <volume> 3 </volume> <pages> 225-240, </pages> <year> 1984. </year>
Reference-contexts: Applying literal completion is all that needs to be done to eliminate the second-order quantifiers from the sentence representing CBW . Literal completion is similar to the process of completion familiar from logic programming ( [ Clark, 1978 ] , <ref> [ Lloyd and Topor, 1984 ] </ref> ). <p> Its main new feature is that the "completed definition" of an explainable predicate constant P consists of two equivalences, one "positive" and one "negative." Positive completion sentences are obtained from the rules whose heads are positive literals in exactly the same way as in <ref> [ Lloyd and Topor, 1984 ] </ref> . Negative completion sentences are generated in a similar way from the rules whose heads are negative literals.
Reference: [ McCain and Turner, 1995 ] <author> Norman McCain and Hudson Turner. </author> <title> A causal theory of ramifications and qualifications. </title> <booktitle> In Proc. IJCAI-95, </booktitle> <pages> pages 1978-1984, </pages> <year> 1995. </year>
Reference: [ McCain and Turner, 1997 ] <author> Norman McCain and Hudson Turner. </author> <title> Causal theories of action and change. </title> <booktitle> In Proc. AAAI-97, </booktitle> <pages> pages 460-465, </pages> <year> 1997. </year>
Reference-contexts: 1 Introduction In this note, a nonmonotonic causal logic is used for describing actions in the situation calculus. This logic was defined for the propositional case in <ref> [ McCain and Turner, 1997 ] </ref> on the basis of earlier work by several authors, including [ Geffner, 1990 ] , [ Lin, 1995 ] and [ Mc-Cain and Turner, 1995 ] . In [ Lifschitz, 1997 ] , it is extended to languages with variables. <p> It is closely related to special cases of "general purpose" nonmono-tonic formalisms such as logic programming, default logic and circumscription [ Turner, 1998 ] , and appears to be particularly well suited for the task of describing the effects of actions. In <ref> [ McCain and Turner, 1997 ] </ref> , values of fluents are represented by propositional atoms indexed by time. For instance, the atom Closed 5 would express that the fluent Closed holds at time 5. <p> The purpose of this note is to show that the version of the nonmonotonic causal logic presented in [ Lifschitz, 1997 ] is applicable in the framework of the situation calculus as well, that the elegant solution to the frame problem proposed in <ref> [ McCain and Turner, 1997 ] </ref> can be easily expressed in the language of the situation calculus, and that the process of "literal completion" described in these papers may allow us to translate this solution into first-order logic. <p> Proposition 1 from [ Lifschitz, 1997 ] shows that including this rule has the same effect as circumscribing Inertial . In accordance with a proposal from <ref> [ McCain and Turner, 1997 ] </ref> , the commonsense law of inertia is understood as the assertion that if an inertial fluent does not change its value after an action is executed then there is a cause for this: Holds (f; Result (a; s)) Inertial (f ) ^ Poss (a; s) <p> By dropping (24) from the list of axioms we would make the theory weaker. Rules (9), which express inertia in CBW and are inspired by <ref> [ McCain and Turner, 1997 ] </ref> , operate nonmonotonically. By dropping them from the list of rules we would make the theory stronger| it would become inconsistent. 6 Nondeterministic Actions Imagine that a block can be damaged when it is moved to a new location. <p> To express that a block is always damaged when it is moved to a new location, we would write the rule Holds (Damaged (x); Result (Move (x; y); s)) Poss (Move (x; y); s)); similar to rule (6). In accordance with the approach to nondeterministic actions proposed in <ref> [ McCain and Turner, 1997 ] </ref> , to express that a block may be damaged after performing this action, we append a copy of the head of this rule to the body as another conjunctive term: Holds (Damaged (x); Result (Move (x; y); s)) Poss (Move (x; y); s) ^Holds (Damaged
Reference: [ McCarthy and Hayes, 1969 ] <author> John McCarthy and Patrick Hayes. </author> <title> Some philosophical problems from the standpoint of artificial intelligence. </title> <editor> In B. Meltzer and D. Michie, editors, </editor> <booktitle> Machine Intelligence, </booktitle> <volume> volume 4, </volume> <pages> pages 463-502. </pages> <publisher> Edinburgh University Press, Edinburgh, </publisher> <year> 1969. </year> <editor> Reproduced in [ McCarthy, </editor> <year> 1990 </year> ] . 
Reference-contexts: We can express, for instance, that the action of moving an object x to a location l was performed between times t and t + 1 by the atomic formula Move (x; l; t). This "time-based" representation is different from the situation calculus approach <ref> [ McCarthy and Hayes, 1969 ] </ref> , which represents actions by terms and would use an expression like Result (Move (x; l); s) to denote the situation that results from moving x to location l in situation s.
Reference: [ McCarthy, 1990 ] <author> John McCarthy. </author> <title> Formalizing Common Sense: Papers by John McCarthy. </title> <publisher> Ablex, </publisher> <address> Nor-wood, NJ, </address> <year> 1990. </year>
Reference: [ Reiter, 1991 ] <author> Raymond Reiter. </author> <title> The frame problem in the situation calculus: a simple solution (sometimes) and a completeness result for goal regression. </title> <editor> In Vladimir Lifschitz, editor, </editor> <booktitle> Artificial Intelligence and Mathematical Theory of Computation: Papers in Honor of John McCarthy, </booktitle> <pages> pages 359-380. </pages> <publisher> Academic Press, </publisher> <year> 1991. </year>
Reference-contexts: Formula (17) is an explanation closure axiom in the sense of [ Schubert, 1990 ] and <ref> [ Reiter, 1991 ] </ref> : it tells us under what condition a fluent f can change its value from false to true after executing an action.
Reference: [ Schubert, 1990 ] <author> Lenhart Schubert. </author> <title> Monotonic solution of the frame problem in the situation calculus: an efficient method for worlds with fully specified actions. In H.E. </title> <editor> Kyburg, R. Loui, and G. Carl-son, editors, </editor> <booktitle> Knowledge Representation and Defea-sible Reasoning, </booktitle> <pages> pages 23-67. </pages> <publisher> Kluwer, </publisher> <year> 1990. </year>
Reference-contexts: Formula (17) is an explanation closure axiom in the sense of <ref> [ Schubert, 1990 ] </ref> and [ Reiter, 1991 ] : it tells us under what condition a fluent f can change its value from false to true after executing an action.
Reference: [ Turner, 1998 ] <author> Hudson Turner. </author> <title> A logic of universal causation. </title> <journal> Artificial Intelligence, </journal> <note> 1998. To appear. </note>
Reference-contexts: In [ Lifschitz, 1997 ] , it is extended to languages with variables. It is closely related to special cases of "general purpose" nonmono-tonic formalisms such as logic programming, default logic and circumscription <ref> [ Turner, 1998 ] </ref> , and appears to be particularly well suited for the task of describing the effects of actions. In [ McCain and Turner, 1997 ] , values of fluents are represented by propositional atoms indexed by time.
References-found: 18

