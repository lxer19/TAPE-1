URL: http://caesar.me.jhu.edu/publications/FwdKinematics.ps
Refering-URL: http://caesar.me.jhu.edu/publications.html
Root-URL: 
Title: An Efficient Method for Computing the Forward Kinematics of Binary Manipulators  
Author: David S. Lees Gregory S. Chirikjian 
Address: Baltimore, MD 21218  
Affiliation: Department of Mechanical Engineering, Johns Hopkins University,  
Abstract: Binary actuators have only two discrete states (denoted `0' and `1'), both of which are stable without feedback. As a result, manipulators built with binary actuators have a finite number of states. Compared to a manipulator built with continuous actuators, a binary manipulator provides good performance, and is also relatively inexpensive. However, the number of states of a binary manipulator grows exponentially with the number of actuators. While this makes the calculation of its inverse kinematics quite difficult, the discrete nature of a binary manipulator makes it possible to compute its forward kinematics more efficiently than for a continuously actuated manipulator. By pre-computing all possible configurations of each module of a binary manipulator (a finite and usually small number) it is possible to compute the forward kinematics from a set of joint parameters without using any transcendental functions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. L. Bergstrom, T. Tamagawa, and D.L. Polla, </author> <booktitle> "Design and fabrication of micromechanical logic elements", in Proceedings of the IEEE Micro Electro Mechanical Systems Workshop, </booktitle> <address> Napa, CA, </address> <month> February </month> <year> 1990, </year> <pages> pp. 15-20. </pages>
Reference-contexts: For example, they could be used in a laproscope, or as an element of a catheter. For applications on such a small scale, it is much easier to build discrete actuators (e.g. actuators operated by electrostatic forces <ref> [1] </ref>) than to build continuous actuators. <p> More recent efforts to develop binary robots include a project to use silicon micro-machining techniques to build small actuators <ref> [1] </ref>. Also, an effective algorithm has been devised to compute the workspace of hyper-redundant binary robots [11].
Reference: [2] <author> G. S. Chirikjian, </author> <title> "A binary paradigm for robotic manipulators", </title> <booktitle> in Proceedings of the 1994 IEEE International Conference on Robotics and Automation, </booktitle> <year> 1994, </year> <pages> pp. 3063-3069. </pages>
Reference-contexts: Then, a brief history of the development of binary robots is presented. 2.1 Kinematics of Redundant Manipula tors A number of efforts have been made to study the kinematics and control of hyper-redundant manipulators with continuous actuators. Chirikjian presents the forward kinematics of a truss based manipulator in <ref> [2] </ref>. Also, Hughes [3], has analyzed the characteristics of VGT based manipulators, including finding estimates of their stiffness using finite element methods. The kinematics of hyper-redundant VGT truss manipulators embody elements of the kinematics of both serial and parallel mechanisms. <p> module in a particular state are described by: b i = (l i cos ( i ); l i sin ( i )) (3) i if s i = 0 i if s i = 1 The forward kinematics for a planar VGT based manipulator are described in detail in <ref> [2] </ref>. The kinematics for a single truss are presented here for convenience.
Reference: [3] <author> P.C. Hughes, </author> <title> "Trussarm a variable-geometry-truss manipulator", </title> <journal> J. of Intelligent Materials, Systems and Structures, </journal> <volume> vol. 2, </volume> <pages> pp. 148-160, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: Chirikjian presents the forward kinematics of a truss based manipulator in [2]. Also, Hughes <ref> [3] </ref>, has analyzed the characteristics of VGT based manipulators, including finding estimates of their stiffness using finite element methods. The kinematics of hyper-redundant VGT truss manipulators embody elements of the kinematics of both serial and parallel mechanisms.
Reference: [4] <author> J. Canny and K. Goldberg, </author> <title> "A risc paradigm for industrial robotics", </title> <type> Tech. Rep. </type> <institution> ESRC 93-4/RAMP 93-2, Engineering Systems Research Center, University of California at Berkeley, </institution> <year> 1993. </year>
Reference-contexts: For example, Canny and Goldberg <ref> [4] </ref> have proposed an architecture for robotic manipulation that is analogous to the RISC approach to computation. There have also been several efforts to develop reliable sensorless manipulation [5, 6].
Reference: [5] <institution> M.T. Mason, "Kicking the sensing habit", AI Magazine, </institution> <month> Spring </month> <year> 1993. </year>
Reference-contexts: For example, Canny and Goldberg [4] have proposed an architecture for robotic manipulation that is analogous to the RISC approach to computation. There have also been several efforts to develop reliable sensorless manipulation <ref> [5, 6] </ref>. In sensorless manipulation, the geometric constraints of a task are exploited to create a manipulation strategy that is guaranteed to succeed even variable geometry trusses. without feedback, within certain broad limits.
Reference: [6] <author> K. Goldberg, </author> <title> "Orienting polygonal parts without sensors", </title> <journal> Algorithmica, 1992, Special robotics issue. </journal>
Reference-contexts: For example, Canny and Goldberg [4] have proposed an architecture for robotic manipulation that is analogous to the RISC approach to computation. There have also been several efforts to develop reliable sensorless manipulation <ref> [5, 6] </ref>. In sensorless manipulation, the geometric constraints of a task are exploited to create a manipulation strategy that is guaranteed to succeed even variable geometry trusses. without feedback, within certain broad limits.
Reference: [7] <author> M. A. Erdmann and M. T. Mason, </author> <title> "Exploration of sensorless manipulation", </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> vol. 4, </volume> <pages> pp. 369-379, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: There have also been several efforts to develop reliable sensorless manipulation [5, 6]. In sensorless manipulation, the geometric constraints of a task are exploited to create a manipulation strategy that is guaranteed to succeed even variable geometry trusses. without feedback, within certain broad limits. For example, Erdmann and Mason <ref> [7] </ref> have demonstrated an algorithm that can force an "L" shaped bracket into a known orientation by placing it on a tray and moving the tray through a pre-determined sequence of motions. Binary robots are a natural extension to sensor-less manipulation.
Reference: [8] <author> V.C. Anderson and R.C. Horn, </author> <title> "Tensor arm manipulator design", </title> <type> Tech. Rep., ASME paper 67-DE-57, </type> <year> 1967. </year>
Reference-contexts: Sensorless manipulation reduces the need to sense a robot's environment, while binary actuators allow us to build a robot without joint-level sensing of position and velocity. There have been a number of efforts in the past to build robots with binary actuators <ref> [8, 9, 10] </ref>. However, at the time these projects were undertaken, effective algorithms for controlling hyper-redundant manipulators had not yet been developed, nor were computers sufficiently powerful to control robots with many degrees of freedom, even if they could have used the control algorithms that are currently available.
Reference: [9] <author> D.L. Pieper, </author> <title> The Kinematics of Manipulators under Computer Control, </title> <type> PhD thesis, </type> <institution> Stanford University, Stanford, </institution> <address> CA, </address> <year> 1968. </year>
Reference-contexts: Sensorless manipulation reduces the need to sense a robot's environment, while binary actuators allow us to build a robot without joint-level sensing of position and velocity. There have been a number of efforts in the past to build robots with binary actuators <ref> [8, 9, 10] </ref>. However, at the time these projects were undertaken, effective algorithms for controlling hyper-redundant manipulators had not yet been developed, nor were computers sufficiently powerful to control robots with many degrees of freedom, even if they could have used the control algorithms that are currently available.
Reference: [10] <author> B Roth, J. Rastegar, and V. Scheinman, </author> <title> "On the design of computer controlled manipulators", </title> <booktitle> First CISM-IFTMM Symp. on Theory and Practice of Robots and Manipulators, </booktitle> <pages> pp. 93-113, </pages> <year> 1973, </year> <pages> (see pp. 106-108). </pages>
Reference-contexts: Sensorless manipulation reduces the need to sense a robot's environment, while binary actuators allow us to build a robot without joint-level sensing of position and velocity. There have been a number of efforts in the past to build robots with binary actuators <ref> [8, 9, 10] </ref>. However, at the time these projects were undertaken, effective algorithms for controlling hyper-redundant manipulators had not yet been developed, nor were computers sufficiently powerful to control robots with many degrees of freedom, even if they could have used the control algorithms that are currently available.
Reference: [11] <author> I. Ebert-Uphoff and G. S. Chirikjian, </author> <title> "Efficient workspace generation for binary manipulators with many actuators", </title> <journal> Journal of Robotic Systems, </journal> <month> June </month> <year> 1995. </year>
Reference-contexts: More recent efforts to develop binary robots include a project to use silicon micro-machining techniques to build small actuators [1]. Also, an effective algorithm has been devised to compute the workspace of hyper-redundant binary robots <ref> [11] </ref>. <p> manipulator adhere to a specified curve [13]. 3 An Efficient Forward Kinematics Al gorithm This section defines the elements of the algorithm and then presents its implementation. 3.1 Definition of Terms To understand the forward kinematics algorithm, it is important to understand the following definitions, which were originally defined in <ref> [11] </ref>: 2 110. Module A module is a kinematically independent element of a manipulator. For example, an individual truss of the variable geometry truss (VGT) manipulator shown in Figure 1 is a module for a truss manipulator.
Reference: [12] <author> G.S. Chirikjian, </author> <title> "Kinematic synthesis of mechanisms and robotic manipulators with binary actuators", </title> <booktitle> in 1994 ASME Mechanisms Conference, </booktitle> <address> Minneapolis, MN, </address> <month> Sept </month> <year> 1994. </year>
Reference-contexts: Also, an effective algorithm has been devised to compute the workspace of hyper-redundant binary robots [11]. Finally, methods have been presented to synthesize a binary manipulator to reach a specific set of points exactly <ref> [12] </ref>, and to make a binary manipulator adhere to a specified curve [13]. 3 An Efficient Forward Kinematics Al gorithm This section defines the elements of the algorithm and then presents its implementation. 3.1 Definition of Terms To understand the forward kinematics algorithm, it is important to understand the following definitions,
Reference: [13] <author> G. S. Chirikjian and D. Lees, </author> <title> "Inverse kinematics of binary manipulators with applications to service robotics", </title> <booktitle> in IROS 95, </booktitle> <month> August </month> <year> 1995. </year> <month> 6 </month>
Reference-contexts: Also, an effective algorithm has been devised to compute the workspace of hyper-redundant binary robots [11]. Finally, methods have been presented to synthesize a binary manipulator to reach a specific set of points exactly [12], and to make a binary manipulator adhere to a specified curve <ref> [13] </ref>. 3 An Efficient Forward Kinematics Al gorithm This section defines the elements of the algorithm and then presents its implementation. 3.1 Definition of Terms To understand the forward kinematics algorithm, it is important to understand the following definitions, which were originally defined in [11]: 2 110.
References-found: 13

