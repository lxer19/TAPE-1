URL: http://sal.cs.uiuc.edu/~ortega-b/cs411/paper/paper.ps
Refering-URL: http://sal.cs.uiuc.edu/~ortega-b/cs411/cs411.html
Root-URL: http://www.cs.uiuc.edu
Author: Xu Baochun Li Adolfo Grego Michael Ortega-Binderberger 
Keyword: Workflow  
Date: May 8, 1996  
Note: Dongyan  
Abstract: CS411 Term Report 
Abstract-found: 1
Intro-found: 1
Reference: [AAA + 96] <author> G. Alonso, D. Agarwal, A. E. Abbadi, M. Kamath, and R. Gunthor. </author> <title> Advanced transaction models in workflow contexts. </title> <booktitle> In Proceedings of the 12th IEEE Intl. Conference on Data Engineering, </booktitle> <month> February </month> <year> 1996. </year>
Reference-contexts: Two extensions of chained transaction concept: * It defines a chain of transactions as a unit of control a saga. * It uses the compensation idea from multi-level transactions to make the entire chain atomic. Flexible transactions work in the context of heterogeneous multidatabase environments <ref> [AAA + 96, Elm92] </ref>. Since each local database acts independently from the other, when one of them abort a transaction, it is impossible to enforce the commit semantics of global transaction.
Reference: [ARS95] <author> M. Ansari, M. Rusinkiewicz, and A. Sheth. </author> <title> Overview of uga's workflow project. </title> <note> http://optimus.cs.uga.edu:5080/workflow/cat-ext.ps, September 1995. </note>
Reference-contexts: analyze the entities involved in a Workflow and their interactions and finally, we will present the current challenges brought up by Workflow management paradigms. 1 2 Workflow concepts The introduction motivated the need for Workflow , but what is it and how is it composed? Workflow can be defined as <ref> [ARS95] </ref>: Workflow is a process by which individual tasks come together to complete a "transaction" a clearly defined business process within an enterprise.
Reference: [BMR95] <author> Daniel Barbara, Sharad Mehrotra, and Marek Rusinkiewicz. Incas: </author> <title> Managing dynamic workflows in distributed environments. </title> <journal> Journal of Databse Management, </journal> <pages> pages 5-15, </pages> <month> Winter </month> <year> 1995. </year>
Reference-contexts: description language and this is in fact the usual approach [MSKX95]. features of these languages will be described in later sections of this paper. 4.2 Workflow textual description Describing a Workflow through a textual representation in the form of a script or a programming language is the most extended approach <ref> [MSKX95, Kim95, WR70, BMR95] </ref>. This probably is due to the ease of parsing the textual description and of the extensive support offered in the form of programming language development tools.
Reference: [Elm92] <editor> A. Elmagarmid, editor. </editor> <title> Database Transaction Models for Advanced Applications. </title> <publisher> Morgan Kauf-mann Publishers, </publisher> <address> San Mateo, CA, </address> <year> 1992. </year>
Reference-contexts: Two extensions of chained transaction concept: * It defines a chain of transactions as a unit of control a saga. * It uses the compensation idea from multi-level transactions to make the entire chain atomic. Flexible transactions work in the context of heterogeneous multidatabase environments <ref> [AAA + 96, Elm92] </ref>. Since each local database acts independently from the other, when one of them abort a transaction, it is impossible to enforce the commit semantics of global transaction.
Reference: [GMS87] <author> H. Garcia-Molina and K. Salem. Sagas. </author> <booktitle> Proceedings of ACM-SIGMOD Conference on Management of Data, </booktitle> <year> 1987. </year>
Reference-contexts: Which is the best way of specifying the task sequence? Garcia-Molina <ref> [GMS87] </ref> uses the concept of sagas as a linear sequence of tasks, if a task fails, the previous tasks are undone semantically in reverse completion order. While this is a useful model, in general a more powerful control flow model is required.
Reference: [GR93] <author> J. Gray and A. Reuter. </author> <title> Transaction Processing: Concepts and Techniques. </title> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Mateo, CA, </address> <year> 1993. </year>
Reference-contexts: But a flexible transaction provides alternative execution paths, if a sub transaction is aborted, then a different sub transaction can be committed in the hope that it will be successful <ref> [GR93] </ref>. A flexible transaction commits if either the main sub transactions or their alternatives commits. 2.5.3 Cooperative Models Cooperative Models relaxes the DB consistency requirements to allow transactions to view each others' partial results under certain conditions. One mechanism to support cooperative work is a check-in/check-out system.
Reference: [Kim95] <author> Won Kim. </author> <title> Modern Database Systems: The Object Model, Interoperability, and Beyond. </title> <publisher> ACM Press, </publisher> <year> 1995. </year>
Reference-contexts: description language and this is in fact the usual approach [MSKX95]. features of these languages will be described in later sections of this paper. 4.2 Workflow textual description Describing a Workflow through a textual representation in the form of a script or a programming language is the most extended approach <ref> [MSKX95, Kim95, WR70, BMR95] </ref>. This probably is due to the ease of parsing the textual description and of the extensive support offered in the form of programming language development tools.
Reference: [Mal00] <author> Armando Maldonado. </author> <booktitle> Tipps ??? Jornal of Database Management, </booktitle> <volume> 1 0000. </volume>
Reference-contexts: This functionality has not been implemented yet to our knowledge although there is ongoing research in this area of automated business process re-engineering <ref> [Mal00] </ref>.
Reference: [MSKX95] <author> J.A. Miller, A.P. Sheth, K.J. Kochut, and X.Wang. </author> <title> Corba-based run-time architecture for workflow management systems. </title> <booktitle> Jornal of Database Management, </booktitle> <pages> pages 16-27, </pages> <month> Winter </month> <year> 1995. </year>
Reference-contexts: After modeling the business process, this description must be translated into some textual description 4.1 Workflow modeling Modeling a business process can probably best be accomplished with a graphics based user interface <ref> [MSKX95] </ref>. The reasons for this are multiple: * provides visual aid to better comprehend the control flow 7 * allows non-expert users (MIS managers, etc.) to understand the control flow and possibly define it themselves * could potentially be independent of the underlying product. <p> This functionality has not been implemented yet to our knowledge although there is ongoing research in this area of automated business process re-engineering [Mal00]. Another way to model Workflow is through a description language and this is in fact the usual approach <ref> [MSKX95] </ref>. features of these languages will be described in later sections of this paper. 4.2 Workflow textual description Describing a Workflow through a textual representation in the form of a script or a programming language is the most extended approach [MSKX95, Kim95, WR70, BMR95]. <p> description language and this is in fact the usual approach [MSKX95]. features of these languages will be described in later sections of this paper. 4.2 Workflow textual description Describing a Workflow through a textual representation in the form of a script or a programming language is the most extended approach <ref> [MSKX95, Kim95, WR70, BMR95] </ref>. This probably is due to the ease of parsing the textual description and of the extensive support offered in the form of programming language development tools. <p> On the one hand, there are physical entities that have to be located and on the other hand the execution can be dynamic or static. 4.4.1 The distributed dimension Five general architectures to support Workflow execution are identified in <ref> [MSKX95] </ref> and range from completely centralized to fully distributed.
Reference: [Tra96] <author> Kelly Trammell. </author> <title> Work flow without fear. </title> <journal> BYTE, </journal> <month> April </month> <year> 1996. </year>
Reference-contexts: Then as a little modification is needed, the system can not accommodate such a change without being modified <ref> [Tra96] </ref>. Another issue in scalability is the number of users and their geographical locations. Users in Chicago might want to access the services that are available to users in Miami. The number of users increases dramatically while the performance of the system degrades badly.
Reference: [WR70] <author> Helmut Waecheter and Andreas Reuter. </author> <title> The contract model. </title> <booktitle> Unknown, </booktitle> <pages> pages 220-263, </pages> <year> 1970. </year> <month> 14 </month>
Reference-contexts: Workflow can be thought of being composed by * Tasks * Processing Entities * Task coordination * Some Correctness Criteria These are in turn explained in more detail below. 2.1 Tasks The unit of work in a Workflow is some kind of logical activity, different researchers call it differently, steps <ref> [WR70] </ref>, activities and other words have been used. What is called for is the notion of a task, a logical activity that is performed as part of a (business) process. As such, tasks can be any activity that can be thought of being a unit. <p> description language and this is in fact the usual approach [MSKX95]. features of these languages will be described in later sections of this paper. 4.2 Workflow textual description Describing a Workflow through a textual representation in the form of a script or a programming language is the most extended approach <ref> [MSKX95, Kim95, WR70, BMR95] </ref>. This probably is due to the ease of parsing the textual description and of the extensive support offered in the form of programming language development tools. <p> Those available now usually run on top of some virtual machine that takes care of the persistence, but definitely adding persistence to a workflow specification language makes workflow programming easier <ref> [WR70] </ref>. Additionally, support for linking to tasks is important, some specification languages provide poor support for specifying the task contents and this is perhaps the most challenging aspect, how to keep a contained view of a Workflow in a textual specification.
References-found: 11

