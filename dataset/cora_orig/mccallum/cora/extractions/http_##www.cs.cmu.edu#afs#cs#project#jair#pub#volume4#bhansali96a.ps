URL: http://www.cs.cmu.edu/afs/cs/project/jair/pub/volume4/bhansali96a.ps
Refering-URL: http://www.cs.washington.edu/research/jair/abstracts/bhansali96a.html
Root-URL: 
Email: BHANSALI@EECS.WSU.EDU  GAK@EIT.COM  TIMHOAR@MICROSOFT.COM  
Title: A Principled Approach Towards Symbolic Geometric Constraint Satisfaction  
Author: Sanjay Bhansali Glenn A. Kramer Tim J. Hoar 
Address: Pullman, WA 99164-2752  Menlo Park, CA 94025  One Microsoft Way, 2/2069 Redmond, WA 98052  
Affiliation: School of EECS, Washington State University  Enterprise Integration Technologies, 800 El Camino Real  Microsoft Corporation  
Note: Journal of Artificial Intelligence Research 4 (1996) 419-443 Submitted 2/96; published 6 /96 1996 AI Access Foundation and Morgan Kaufmann Publishers. All rights reserved.  
Abstract: An important problem in geometric reasoning is to find the configuration of a collection of geometric bodies so as to satisfy a set of given constraints. Recently, it has been suggested that this problem can be solved efficiently by symbolically reasoning about geometry. This approach, called degrees of freedom analysis, employs a set of specialized routines called plan fragments that specify how to change the configuration of a set of bodies to satisfy a new constraint while preserving existing constraints. A potential drawback, which limits the scalability of this approach, is concerned with the difficulty of writing plan fragments. In this paper we address this limitation by showing how these plan fragments can be automatically synthesized using first principles about geometric bodies, actions, and topology.
Abstract-found: 1
Intro-found: 1
Reference: <author> Anantha, R., Kramer, G., & Crawford, R. </author> <year> (1992). </year> <title> An architecture to represent over, under, and fully constrained assemblies. </title> <booktitle> In Proceedings of ASME Winter Annual Meeting, </booktitle> <pages> 233-244. </pages>
Reference-contexts: The GCE has subsequently been integrated in a commercial system called Bravo TM by Applicon where it is used to drive the 2D sketcher (Brown-Associates, 1993). Several academic systems are currently using the degrees of freedom analysis for other applications like assembly modeling <ref> (Anantha, Kramer & Crawford, 1992) </ref>, editing and animating planar linkages (Brunkhart, 1994), and feature-based design (Salomons, 1994; Shah & Rogers, 1993). GCE employs a set of specialized routines called plan fragments to create the assembly plan.
Reference: <author> Borgida, A., Mylopoulos, J., & Reiter, R. </author> <year> (1993). </year> ... <title> and nothing else changes: the frame problem in procedure specifications. </title> <booktitle> In Proceedings of the 15th International Conference on Software Engineering, </booktitle> <address> Baltimore, MD. Brown-Associates. </address> <year> (1993). </year> <title> Applicon's GCE: A Strong Technical Framework. </title> <publisher> Brown Associates Inc. </publisher>
Reference: <author> Brunkhart, M. W. </author> <year> (1994). </year> <title> Interactive geometric constraint systems. </title> <type> Master's thesis, TR No. </type> <institution> CSD-94-808, Department of EE&CS, University of California, Berkeley. </institution>
Reference-contexts: Several academic systems are currently using the degrees of freedom analysis for other applications like assembly modeling (Anantha, Kramer & Crawford, 1992), editing and animating planar linkages <ref> (Brunkhart, 1994) </ref>, and feature-based design (Salomons, 1994; Shah & Rogers, 1993). GCE employs a set of specialized routines called plan fragments to create the assembly plan.
Reference: <author> Fikes, R. E., & Nilsson, N. J. </author> <year> (1971). </year> <title> STRIPS: A new approach to the applicatiion of theorem proving to problem solving. </title> <journal> Artificial Intelligence, </journal> <volume> 2, </volume> <pages> 198-208. </pages>
Reference-contexts: A plan is a sequence of actions that when applied to the initial state achieves the final state. With this formulation, one could presumably use a classical planner, such as STRIPS <ref> (Fikes & Nilsson, 1971) </ref>, to automatically generate a plan-fragment. However, the operators in this domain are parametric operators with a real-valued domain. Thus, the search space consists of an infinite number of states.
Reference: <author> Friedland, P. E. </author> <year> (1979). </year> <title> Knowledge-based experiment design in molecular genetics. </title> <type> Tech. report CSD-79-771, </type> <institution> Department of Computer Science, Stanford University. </institution>
Reference-contexts: In the first phase a skeletal plan is generated that works in the normal case and in the second phase, this skeletal plan is refined to take care of singularities and degeneracies. The approach is similar to the idea of refining skeletal plans in MOLGEN <ref> (Friedland, 1979) </ref> and the idea of critics in HACKER (Sussman, 1975) to fix known bugs in a plan.
Reference: <author> Hartenberg, R. S., & Denavit, J. </author> <year> (1964). </year> <title> Kinematic Synthesis of Linkages. </title> <address> New York: </address> <publisher> McGraw Hill. </publisher>
Reference-contexts: Solving this problem is an integral task for many applications like constraint-based sketching and design, geometric modeling for computer-aided design, kinematics analysis of robots and other mechanisms <ref> (Hartenberg & Denavit, 1964) </ref>, and describing mechanical assemblies. General purpose constraint satisfaction techniques are not well suited for solving constraint problems involving complicated geometry. Such techniques represent geoms and constraints as algebraic equations, whose real solutions yield the numerical values describing the desired configuration of the geoms.
Reference: <author> Heydon, A., & Nelson, G. </author> <year> (1994). </year> <title> The Juno-2 constraint-based drawing editor. </title> <note> SRC Research report 131a, </note> <institution> Digital Systems Research Center, </institution> <address> Palo Alto, CA. </address>
Reference-contexts: Although these approaches are in principle robust, they have several shortcomings that make them inappropriate for real-time applications. Among noncommercial systems, a notable new approach to constraint based sketching is PRINCIPLED SYMBOLIC GEOMETRIC CONSTRAINT SATISFACTION 441 the Juno-2 being developed at DEC-SRC <ref> (Heydon & Nelson, 1994) </ref>. Constraints in Juno-2 are specified using an expressive, declarative constraint language which seems powerful enough to express most constraints that arise in practice. Juno-2 uses a combination of symbolic and numerical techniques to solve geometric constraints efficiently.
Reference: <author> Hoar, T. </author> <year> (1995). </year> <title> Automatic program synthesis for geometric constraint satisfaction. </title> <type> Master's Thesis, </type> <institution> School of EECS, Washington State University. </institution>
Reference-contexts: The strategy is implemented as a lookup table that assigns weights to the various plan fragments. The plan fragments with the maximal weights are selected for elaboration by Phase 2. Readers interested in the implementation details are referred to <ref> (Hoar, 1995) </ref>. 3.3.2 PLAN FRAGMENT ELABORATION Plan fragment elaboration refines a skeletal plan fragment in two ways. <p> Although this algorithm does not guarantee finding a global or even a local minima, it is very efficient and yields good results in practice. The implemented algorithm is somewhat more complex than the simple description above; further details can be found elsewhere <ref> (Hoar, 1995) </ref>. Exception conditions can be handled using the same technique as above. Exception conditions are identified when a service routine returns a set of solutions or no solution (e.g., a routine to compute the intersection of two 1-dimensional loci returns a 1-dimensional locus or nil).
Reference: <author> Kramer, G. A. </author> <year> (1992). </year> <title> Solving Geometric Constraint Systems: A Case Study in Kinematics. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference-contexts: The GCE system was used to analyze problems in the domain of kinematics and was shown to perform kinematics simulation of complex mechanisms (including a Stirling engine, an elevator door mechanism, and a sofabed mechanism) much more efficiently than pure numerical solvers <ref> (Kramer, 1992) </ref>. The GCE has subsequently been integrated in a commercial system called Bravo TM by Applicon where it is used to drive the 2D sketcher (Brown-Associates, 1993). <p> The GCE has subsequently been integrated in a commercial system called Bravo TM by Applicon where it is used to drive the 2D sketcher (Brown-Associates, 1993). Several academic systems are currently using the degrees of freedom analysis for other applications like assembly modeling <ref> (Anantha, Kramer & Crawford, 1992) </ref>, editing and animating planar linkages (Brunkhart, 1994), and feature-based design (Salomons, 1994; Shah & Rogers, 1993). GCE employs a set of specialized routines called plan fragments to create the assembly plan. <p> The assembly plan is completed when all constraints have been satisfied or the degrees of freedom is reduced to zero. This approach is canonical: the constraints may be satisfied in any order; the final status of the geom in terms of remaining degrees of freedom is the same <ref> (p. 80-81, Kramer, 1992) </ref>. The algorithm for finding the assembly procedure has a time complexity of O (cg) where c is the number of constraints and g is the number of geoms (p. 139, Kramer, 1992). <p> The algorithm for finding the assembly procedure has a time complexity of O (cg) where c is the number of constraints and g is the number of geoms <ref> (p. 139, Kramer, 1992) </ref>. Since the crux of problemsolving is taken care of by the plan fragments, the success of the approach depends on one's ability to construct a complete set of plan fragments meeting the canonical specification. <p> The primary contribution of this research is not a novel geometric constraint satisfaction approach. From the perspective of constraint satisfaction techniques, the novel feature of our approach - degrees of freedom analysis - has already been described in earlier works by the second author <ref> (Kramer, 1992, 1993) </ref>. The goal of this research was to develop automated techniques that will enable the degrees of freedom approach to scale up by reducing the amount of effort needed in creating plan fragment libraries.
Reference: <author> Kramer, G. A. </author> <year> (1993). </year> <title> A geometric constraint engine. </title> <booktitle> Artificial Intelligence, </booktitle> <pages> 58(1-3), 327-360. </pages>
Reference: <author> Liu, Y., & Popplestone, R. J. </author> <year> (1990, </year> ). <title> Symmetry constraint inference in assembly planning: automatic assembly configuration specification. </title> <booktitle> In Proceedings of AAAI-90, </booktitle> <address> Boston, MA, </address> <pages> 1038-1044. </pages>
Reference: <author> Lozano-Perez, T. </author> <year> (1983). </year> <title> Spatial planning: A configuration space approach. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-32, </volume> <pages> 108-120. </pages> <note> PRINCIPLED SYMBOLIC GEOMETRIC CONSTRAINT SATISFACTION 443 Press, </note> <author> W. H., Flannery, B. P., Teukolsky, S. A., & Vetterling, W. T. </author> <year> (1986). </year> <title> Numerical Recipes: </title> <booktitle> The Art of Scientific Computing. </booktitle> <address> Cambridge, England: </address> <publisher> Cambridge University Press. </publisher>
Reference: <author> Salomons, O. </author> <year> (1994). </year> <title> Computer support in the design of mechanical products. </title> <type> Ph.D. Thesis, </type> <institution> Universiteit Twente, Netherlands. </institution>
Reference: <author> Serrano, D. </author> <year> (1987). </year> <title> Constraints in conceptual design. </title> <type> Ph.D. thesis, </type> <institution> Massachusetts Institute of Technology. </institution>
Reference: <author> Shah, J. J., & Rogers, M. T. </author> <year> (1993). </year> <title> Assembly modeling as an extension of feature-based design. </title> <booktitle> Research in Engineering Design, </booktitle> <volume> 5, </volume> <pages> 218-237. </pages>
Reference: <author> Sussman, G. J. </author> <year> (1975). </year> <title> A Computer Model of Skill Acquisition. </title> <address> New York: </address> <publisher> American Elsevier. </publisher>
Reference-contexts: The approach is similar to the idea of refining skeletal plans in MOLGEN (Friedland, 1979) and the idea of critics in HACKER <ref> (Sussman, 1975) </ref> to fix known bugs in a plan.
Reference: <author> Sutherland, I. E. </author> <year> (1963). </year> <title> Sketchpad, a man-machine graphical communication system. </title> <type> Ph.D. Thesis, </type> <institution> Massachusetts Institute of Technology. </institution>
References-found: 17

