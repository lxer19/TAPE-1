URL: http://www.cs.dartmouth.edu/~zhangq/papers/techreport.ps.gz
Refering-URL: http://www.cs.dartmouth.edu/~zhangq/homepage.html
Root-URL: http://www.cs.dartmouth.edu
Email: fzhangq, jmdg@cs.dartmouth.edu  
Phone: (603) 646-1639  
Title: A Pattern-Based Lossy Compression Scheme for Document Images  
Author: Qin Zhang John M. Danskin 
Address: 6211 Sudikoff Laboratory Hanover, NH 03755, USA  
Affiliation: Dartmouth College  
Abstract: CDIS is a pattern based, nearly lossless compression system for scanned document images. In this paper, we introduce a hierarchical lossy pattern instance position coding technique which results in a significant improvement in compression with no visible artifacts. CDIS codes text positions by automatically formatting blocks of text, then transmitting the position errors for each pattern. Lossy coding is achieved by coding errors in reduced precision, subject to quality guarantees.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Ascher, R. N. and Nagy, </author> <title> "A means for achieving a high degree of compaction on scan-digitized printed text," </title> <journal> IEEE Transactions on Computers, </journal> <volume> c-23(11):1174-1179, </volume> <year> 1974. </year>
Reference-contexts: Document images contain patterns such as characters and lines, and a pattern may appear many times in the image. Pattern matching coding techniques exploit these macroscopic properties of document images. These techniques were originally proposed in <ref> [1] </ref> and further studied in [3], [8], and [10]. [10] and [8] discuss lossless compression based on pattern matching. Our Compression for Document Image System (CDIS) is also pattern-matching based. Exploiting the knowledge of document images one step further, CDIS takes advantage of the structural layout of document images. <p> This compression scheme is lossy: a reconstructed document image is slightly different from the original image due to the pattern matching and substitution process. This algorithm can be made lossless by coding the difference between the original image and the reconstructed image. Ascher and Nagy <ref> [1] </ref> first proposed document image compression based on pattern matching. Their system uses fixed-length codes to represent pattern sequences and positions, achieving about 16:1 compression. Pratt et al.'s combined symbol matching (CSM)[9] combines exact coding and pattern-matching within the same document.
Reference: [2] <author> Bell, Timothy C., John G. Cleary, and Ian H. Witten, </author> <title> "Text Compression," </title> <publisher> Prentice Hall, </publisher> <address> Engle-wood Cliffs, NJ, </address> <year> 1990 </year>
Reference-contexts: The error between the predicted x position and the actual position is usually close to zero. CDIS then transmits the errors at some predefined resolution. CDIS uses an adaptive arithmetic coder <ref> [2] </ref> to code x position errors and y positions relative to each block. A block is a pattern sequence terminated by the new block pattern. Within a block, patterns are placed in a horizontal line with a small amount of space between them.
Reference: [3] <author> Holt, M. J. J. and C. S. Xydeas, </author> <title> "Recent developments in image data compression for digital facsimile," </title> <journal> ICL Technical Journal, </journal> <pages> pp. 123-146, </pages> <year> 1986. </year>
Reference-contexts: Document images contain patterns such as characters and lines, and a pattern may appear many times in the image. Pattern matching coding techniques exploit these macroscopic properties of document images. These techniques were originally proposed in [1] and further studied in <ref> [3] </ref>, [8], and [10]. [10] and [8] discuss lossless compression based on pattern matching. Our Compression for Document Image System (CDIS) is also pattern-matching based. Exploiting the knowledge of document images one step further, CDIS takes advantage of the structural layout of document images. <p> Symbols are removed from the document image and coded by pattern-matching. The remainder of the image is termed the residue and encoded exactly using a traditional binary image compression scheme. CSM compresses symbol positions using a variable-length static coding scheme. [6] and <ref> [3] </ref> also used variable-length codes to represent the pattern positions. Mohiuddin [8] studied pattern matching algorithms and developed a lossy/lossless compression system. His lossless compression scheme uses the matching pattern in the library as part of the context to code each new pattern bitmap.
Reference: [4] <author> Holt, M. J., </author> <title> "A fast binary template matching algorithm for document image data compression," </title> <booktitle> Proc. 4th International Conference on Pattern Recognition, </booktitle> <address> Cambridge, England, </address> <pages> pp. 230-239. </pages> <address> Berlin, </address> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference: [5] <author> Inglis, S. and I. H. Witten, </author> <title> "Compression-based template matching," </title> <booktitle> Proc. IEEE Data Compression Conference, </booktitle> <address> pp.106-115, </address> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> CA, </address> <year> 1994. </year>
Reference: [6] <author> Johnsen, O., J. Segen, and G. L. Cash, </author> <title> "Coding of two-level pictures by pattern matching and substitution," </title> <journal> Bell Systems Technical Journal, </journal> <volume> 62(8) </volume> <pages> 2513-2545, </pages> <year> 1983. </year>
Reference-contexts: Symbols are removed from the document image and coded by pattern-matching. The remainder of the image is termed the residue and encoded exactly using a traditional binary image compression scheme. CSM compresses symbol positions using a variable-length static coding scheme. <ref> [6] </ref> and [3] also used variable-length codes to represent the pattern positions. Mohiuddin [8] studied pattern matching algorithms and developed a lossy/lossless compression system. His lossless compression scheme uses the matching pattern in the library as part of the context to code each new pattern bitmap. <p> First, it merges two separate parts of a pattern into one pattern; second, it inserts two special patterns, space and new block, to represent the spaces between words and the line breaks. CDIS uses Johnsen et al.'s mark boundary tracing method <ref> [6] </ref> to isolate and extract the patterns from an image, as does TIC. In TIC, if a pattern has two disconnected parts, as i does, it is extracted as two separate patterns.
Reference: [7] <author> Mohiuddin, K. M, </author> <title> "Pattern matching with application to binary image compression," </title> <type> Ph.D. thesis, </type> <institution> Stanford University, Stanford, </institution> <address> CA, </address> <year> 1982. </year>
Reference: [8] <author> Mohiuddin, K. M, </author> <title> "Lossless binary image compression based on pattern matching," </title> <booktitle> Proc. International Conference on Computers, System and Signal Processing, </booktitle> <address> pp.447-451, </address> <year> 1984. </year>
Reference-contexts: Document images contain patterns such as characters and lines, and a pattern may appear many times in the image. Pattern matching coding techniques exploit these macroscopic properties of document images. These techniques were originally proposed in [1] and further studied in [3], <ref> [8] </ref>, and [10]. [10] and [8] discuss lossless compression based on pattern matching. Our Compression for Document Image System (CDIS) is also pattern-matching based. Exploiting the knowledge of document images one step further, CDIS takes advantage of the structural layout of document images. <p> Document images contain patterns such as characters and lines, and a pattern may appear many times in the image. Pattern matching coding techniques exploit these macroscopic properties of document images. These techniques were originally proposed in [1] and further studied in [3], <ref> [8] </ref>, and [10]. [10] and [8] discuss lossless compression based on pattern matching. Our Compression for Document Image System (CDIS) is also pattern-matching based. Exploiting the knowledge of document images one step further, CDIS takes advantage of the structural layout of document images. <p> The remainder of the image is termed the residue and encoded exactly using a traditional binary image compression scheme. CSM compresses symbol positions using a variable-length static coding scheme. [6] and [3] also used variable-length codes to represent the pattern positions. Mohiuddin <ref> [8] </ref> studied pattern matching algorithms and developed a lossy/lossless compression system. His lossless compression scheme uses the matching pattern in the library as part of the context to code each new pattern bitmap. This scheme compresses images much better than conventional context-based predictive coding schemes, such as JBIG.
Reference: [9] <author> Pratt, W. K., P. J. Captitant, W. H. Chen, E. R. Hamilton, and R.H. Wallis, </author> <title> "Combing symbol matching facsimile data compression system," </title> <journal> Proc. IEEE, </journal> <volume> 68(7) </volume> <pages> 786-796, </pages> <year> 1980. </year>
Reference: [10] <author> Witten, I. H., Bell, T. C., Emberson, H., and S. Inglis, </author> <title> "Textual image compression: two-stage lossy/lossless encoding of textual images," </title> <booktitle> Proceedings of the IEEE, v. </booktitle> <volume> 86, No. 6, </volume> <pages> pp. 878-888, </pages> <year> 1994. </year>
Reference-contexts: Document images contain patterns such as characters and lines, and a pattern may appear many times in the image. Pattern matching coding techniques exploit these macroscopic properties of document images. These techniques were originally proposed in [1] and further studied in [3], [8], and <ref> [10] </ref>. [10] and [8] discuss lossless compression based on pattern matching. Our Compression for Document Image System (CDIS) is also pattern-matching based. Exploiting the knowledge of document images one step further, CDIS takes advantage of the structural layout of document images. <p> Document images contain patterns such as characters and lines, and a pattern may appear many times in the image. Pattern matching coding techniques exploit these macroscopic properties of document images. These techniques were originally proposed in [1] and further studied in [3], [8], and <ref> [10] </ref>. [10] and [8] discuss lossless compression based on pattern matching. Our Compression for Document Image System (CDIS) is also pattern-matching based. Exploiting the knowledge of document images one step further, CDIS takes advantage of the structural layout of document images. <p> This scheme compresses images much better than conventional context-based predictive coding schemes, such as JBIG. Witten et al. described a two-stage lossy/lossless compression system (TIC) for document images <ref> [10] </ref>. TIC uses the PPM text compression method to code pattern sequences. TIC codes the offset between one pattern and the next, instead of the absolute positions. The offsets are coded using a first-order predictive model based on the pattern index.
Reference: [11] <author> Witten, I. H., Alistair Moffat, and I. C. Bell, </author> <title> "Managing Gigabytes: compressing and indexing documents and images," </title> <publisher> Van Nostrand Reinhold, </publisher> <address> New York, </address> <year> 1994. </year> <title> 10 reconstructed images at 87:1 compression are almost indistinguishable from the originals. </title>
Reference: [12] <author> Zhang, Q., and J. M. Danskin, </author> <title> "Entropy-based template matching for document image compression," </title> <note> submitted to ICCIP, </note> <year> 1996. </year> <title> 11 reconstructed images at 87:1 compression actually look better than the originals because isolated black pixels, an artifact of poor scanning, have been dropped. </title> <type> 12 </type>
Reference-contexts: A better pattern matching technique would alleviate this problem. We are also working on pattern matching aspects of document image compression. We recently investigated an entropy based pattern matching algorithm derived from a scanner's registration based error model <ref> [12] </ref>.
References-found: 12

