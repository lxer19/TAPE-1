URL: ftp://ftp.cs.cmu.edu/project/mach/doc/published/mapfiles87.ps
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs/project/mach/public/www/doc/publications.html
Root-URL: 
Title: A Unix Interface for Shared Memory and Memory Mapped Files Under Mach  
Author: Avadis Tevanian, Jr., Richard F. Rashid, Michael W. Young, David B. Golub, Mary R. Thompson, William Bolosky and Richard Sanzi 
Address: Pittsburgh, PA 15213  
Affiliation: Department of Computer Science Carnegie-Mellon University  
Abstract: This paper describes an approach to Unix shared memory and memory mapped files currently in use at CMU under the Mach Operating System. It describes the rationale for Mach's memory sharing and file mapping primitives as well as their impact on other system components and on overall performance. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Mike Accetta, Robert Baron, William Bolosky, David Golub, Richard Rashid, Avadis Tevanian, Michael Young. </author> <title> Mach: A New Kernel Foundation for UNIX Development. </title> <booktitle> In Proceedings of Summer Usenix. </booktitle> <month> July, </month> <year> 1986. </year>
Reference-contexts: Multiple Access File I/O Performance Test program user system elapsed I/O old_read <ref> [1] </ref> 25.4u 1.8s 1:23 217io old_read [2] 25.3u 2.0s 1:26 326io old_read [3] 25.1u 2.2s 1:26 439io new_read [1] 24.0u 1.6s 1:17 89io new_read [2] 24.0u 1.8s 1:18 194io new_read [3] 24.2u 1.6s 1:18 197io Table 6-2: Time to read a 1970176 byte file using standard I/O. (Mach, 4K file system, <p> Multiple Access File I/O Performance Test program user system elapsed I/O old_read <ref> [1] </ref> 25.4u 1.8s 1:23 217io old_read [2] 25.3u 2.0s 1:26 326io old_read [3] 25.1u 2.2s 1:26 439io new_read [1] 24.0u 1.6s 1:17 89io new_read [2] 24.0u 1.8s 1:18 194io new_read [3] 24.2u 1.6s 1:18 197io Table 6-2: Time to read a 1970176 byte file using standard I/O. (Mach, 4K file system, MicroVAX II) Each program is run 3 times in parallel and times are listed.
Reference: [2] <institution> Sequent Computer Systems, Inc. Dynix Programmer's Manual Sequent Computer Systems, Inc., </institution> <year> 1986. </year>
Reference-contexts: Multiple Access File I/O Performance Test program user system elapsed I/O old_read [1] 25.4u 1.8s 1:23 217io old_read <ref> [2] </ref> 25.3u 2.0s 1:26 326io old_read [3] 25.1u 2.2s 1:26 439io new_read [1] 24.0u 1.6s 1:17 89io new_read [2] 24.0u 1.8s 1:18 194io new_read [3] 24.2u 1.6s 1:18 197io Table 6-2: Time to read a 1970176 byte file using standard I/O. (Mach, 4K file system, MicroVAX II) Each program is run <p> Multiple Access File I/O Performance Test program user system elapsed I/O old_read [1] 25.4u 1.8s 1:23 217io old_read <ref> [2] </ref> 25.3u 2.0s 1:26 326io old_read [3] 25.1u 2.2s 1:26 439io new_read [1] 24.0u 1.6s 1:17 89io new_read [2] 24.0u 1.8s 1:18 194io new_read [3] 24.2u 1.6s 1:18 197io Table 6-2: Time to read a 1970176 byte file using standard I/O. (Mach, 4K file system, MicroVAX II) Each program is run 3 times in parallel and times are listed. Instance numbers for each invocation are in brackets.
Reference: [3] <institution> Encore Computer Corporation. UMAX 4.2 Programmer's Reference Manual Encore Computer Corporation, </institution> <year> 1986. </year>
Reference-contexts: Multiple Access File I/O Performance Test program user system elapsed I/O old_read [1] 25.4u 1.8s 1:23 217io old_read [2] 25.3u 2.0s 1:26 326io old_read <ref> [3] </ref> 25.1u 2.2s 1:26 439io new_read [1] 24.0u 1.6s 1:17 89io new_read [2] 24.0u 1.8s 1:18 194io new_read [3] 24.2u 1.6s 1:18 197io Table 6-2: Time to read a 1970176 byte file using standard I/O. (Mach, 4K file system, MicroVAX II) Each program is run 3 times in parallel and times <p> Multiple Access File I/O Performance Test program user system elapsed I/O old_read [1] 25.4u 1.8s 1:23 217io old_read [2] 25.3u 2.0s 1:26 326io old_read <ref> [3] </ref> 25.1u 2.2s 1:26 439io new_read [1] 24.0u 1.6s 1:17 89io new_read [2] 24.0u 1.8s 1:18 194io new_read [3] 24.2u 1.6s 1:18 197io Table 6-2: Time to read a 1970176 byte file using standard I/O. (Mach, 4K file system, MicroVAX II) Each program is run 3 times in parallel and times are listed. Instance numbers for each invocation are in brackets.
Reference: [4] <author> Leach, P.L., P.H. Levine, B.P. Douros, J.A. Hamilton, D.L. Nelson and B.L. Stumpf. </author> <title> The Architecture of an Integrated Local Network. </title> <journal> IEEE Journal on Selected Areas in Communications SAC-1(5):842-857, </journal> <month> November, </month> <year> 1983. </year>
Reference: [5] <author> Rashid, R., Tevanian, A., Young, M., Golub, D., Baron, R., Black, D., Bolosksy, W. and Chew, J. </author> <title> Machine-Independent Virtual Memory Management for Paged Uniprocessor and Multiprocessor Architectures. </title> <type> Technical Report , Carnegie-Mellon University, </type> <month> February, </month> <year> 1987. </year>
Reference: [6] <author> Satyanarayanan, M., et.al. </author> <title> The ITC Distributed File System: </title> <booktitle> Principles and Design. In Proc. 10th Symposium on Operating Systems Principles, </booktitle> <pages> pages 35-50. </pages> <publisher> ACM, </publisher> <month> December, </month> <year> 1985. </year>
Reference: [7] <author> Alfred Z. Spector, Dean S. Daniels, Daniel J. Duchamp, Jeffrey L. Eppinger, Randy Pausch. </author> <title> Distributed Transactions for Reliable Systems. </title> <booktitle> In Proceedings of the Tenth Symposium on Operating System Principles, </booktitle> <pages> pages 127-146. </pages> <publisher> ACM, </publisher> <month> December, </month> <year> 1985. </year> <title> Also available in Concurrency Control and Reliability in Distributed Systems, </title> <publisher> Van Nostrand Reinhold Company, </publisher> <address> New York, </address> <note> and as Technical Report CMU-CS-85-117, </note> <institution> Carnegie-Mellon University, </institution> <month> September </month> <year> 1985. </year>
Reference: [8] <author> Young, M., Tevanian, A., Rashid, R., Golub, D., Eppinger, J., Chew, J., Bolosky, W., Black, D. and Baron, R. </author> <title> The Duality of Memory and Communication in the Implementation of a Multiprocessor Operating System. </title> <type> Technical Report , Carnegie-Mellon University, </type> <month> February, </month> <year> 1987. </year>

References-found: 8

