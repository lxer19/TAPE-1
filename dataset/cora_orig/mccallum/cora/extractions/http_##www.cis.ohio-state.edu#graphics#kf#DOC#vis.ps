URL: http://www.cis.ohio-state.edu/graphics/kf/DOC/vis.ps
Refering-URL: http://www.cis.ohio-state.edu/graphics/kf/DOC/
Root-URL: 
Email: E-mail: fujimura@cis.ohio-state.edu  
Phone: Phone: 614-292-6730 Fax: 614-292-2911  
Title: Visibility Computation on Reconfigurable Meshes  
Author: Kikuo Fujimura 
Keyword: visibility, hidden line and surface elimination, reconfigurable meshes, parallel algo rithms.  
Address: 2015 Neil Avenue, Columbus, Ohio 43210-1277  
Affiliation: Department of Computer and Information Science The Ohio State University  
Abstract: Visibility problems are investigated using reconfigurable meshes. A number of algorithms are proposed on the architecture for visibility computation in two and three dimensions. We show that visibility of a total of n disjoint edges in the plane can be computed in O(1) time on an n fi n mesh. The result is optimal in the word model of VLSI. For the case that the edges are not disjoint, the problem is shown to be solvable in O(1) time by using a mesh of slightly larger size or in slightly more time on an n fi n mesh. We also present hidden line and hidden surface elimination algorithms that run on an n fi n fi n mesh for a set of disjoint triangles in 3-space containing a total of n vertices in O(1) time and O(k) time, respectively, where 0 k &lt; n is an input-dependent constant. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Bhagavathi and V.V. Bokka, H. Gurla and S. Olariu, J.L. Schwing, I. Stojmenovic, and J. Zhang. </author> <title> Time-optimal visibility-related algorithms on meshes with multiple broadcasting. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 6 </volume> <pages> 687-703, </pages> <year> 1995. </year>
Reference-contexts: The visibility problem for n disjoint edges in the plane has been solved in O (log n) time on a PRAM model using O (n) processors [2, 3]. Concerning visibility problems on mesh-connected computers, Bhagavathi et al <ref> [1] </ref> have considered visibility-related problems on a related but different 2 architecture called a mesh with broadcasting. Kim and Cho [14] have addressed the problem of visibility of a simple polygon on reconfigurable meshes. They have reported O (1) time algorithm on an n by n mesh.
Reference: [2] <author> M. Atallah, M. Cole, and M. Goodrich. </author> <title> Cascading divide-and-conquer: A technique for designing parallel algorithms. </title> <journal> SIAM Journal on Computing, </journal> <volume> 18(3) </volume> <pages> 499-532, </pages> <year> 1989. </year>
Reference-contexts: The visibility problem for n disjoint edges in the plane has been solved in O (log n) time on a PRAM model using O (n) processors <ref> [2, 3] </ref>. Concerning visibility problems on mesh-connected computers, Bhagavathi et al [1] have considered visibility-related problems on a related but different 2 architecture called a mesh with broadcasting. Kim and Cho [14] have addressed the problem of visibility of a simple polygon on reconfigurable meshes.
Reference: [3] <author> P. Bertolazzi and S. Salza. </author> <title> A parallel algorithm for the visibility problem. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 9 </volume> <pages> 11-14, </pages> <year> 1990. </year> <month> 24 </month>
Reference-contexts: The visibility problem for n disjoint edges in the plane has been solved in O (log n) time on a PRAM model using O (n) processors <ref> [2, 3] </ref>. Concerning visibility problems on mesh-connected computers, Bhagavathi et al [1] have considered visibility-related problems on a related but different 2 architecture called a mesh with broadcasting. Kim and Cho [14] have addressed the problem of visibility of a simple polygon on reconfigurable meshes.
Reference: [4] <author> V. Bokka, H. Gurla, S. Olariu, and J.L. Schwing. </author> <title> Constant time convexity problems on dense reconfigurable meshes. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <note> 1995. (to appear). </note>
Reference-contexts: Instructions consist of an arithmetic or boolean 3 operation, broadcasting a data on a bus and receiving a data from a bus. Reconfigurable meshes have been used to design efficient algorithms in various areas including computational geometry <ref> [4, 16] </ref>, image processing and computer vision [21, 13, 5, 11]. Experimental systems have also begun to be implemented [10, 19]. Reconfigurable meshes using optical fibers provide a reasonable support for constant time data transmission over buses in the mesh [25].
Reference: [5] <author> K. Chung and H. Lin. </author> <title> Hough transform on reconfigurable meshes. </title> <booktitle> Computer Vision and Image Understanding, </booktitle> <volume> 61(2) </volume> <pages> 278-284, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: Instructions consist of an arithmetic or boolean 3 operation, broadcasting a data on a bus and receiving a data from a bus. Reconfigurable meshes have been used to design efficient algorithms in various areas including computational geometry [4, 16], image processing and computer vision <ref> [21, 13, 5, 11] </ref>. Experimental systems have also begun to be implemented [10, 19]. Reconfigurable meshes using optical fibers provide a reasonable support for constant time data transmission over buses in the mesh [25].
Reference: [6] <author> J. Foley, A. van Dam, S. Feiner, and J. Hughes. </author> <title> Computer Graphics: </title> <booktitle> Principles and Practice. </booktitle> <publisher> Addison Wesley, </publisher> <year> 1990. </year>
Reference-contexts: Hidden line and surface elimination problems can also be solved in a manner dependent on k, where k is the number of intersections between projected edges [7, 23, 9, 24]. Besides object-space algorithms as above, many image-space algorithms for raster graphics are known <ref> [6] </ref>. The organization of this paper is as follows. In the next section, we briefly review the reconfigurable mesh model and some basic operations on it. Visibility problems in the plane are discussed in Section 3 and algorithms for hidden-line and surface elimination are presented in Section 4.
Reference: [7] <author> M.T. Goodrich. </author> <title> A polygonal approach to hidden-line and hidden-surface elimination. </title> <booktitle> CVGIP:Graphical Models and Image Processing, </booktitle> <volume> 54(1) </volume> <pages> 1-12, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: Hidden surface and line elimination problems can be solved in O (n 2 ) worst-case optimal time [20]. Hidden line and surface elimination problems can also be solved in a manner dependent on k, where k is the number of intersections between projected edges <ref> [7, 23, 9, 24] </ref>. Besides object-space algorithms as above, many image-space algorithms for raster graphics are known [6]. The organization of this paper is as follows. In the next section, we briefly review the reconfigurable mesh model and some basic operations on it.
Reference: [8] <author> L. Guibas and M. Sharir. </author> <title> Combinatorics and algorithms of arrangements. </title> <editor> In J. Pack, editor, </editor> <booktitle> New Trends in Discrete and Computational Geometry, </booktitle> <pages> pages 10-36. </pages> <publisher> Springer, </publisher> <year> 1993. </year>
Reference-contexts: On a sequential computer, the visibility problem for a simple polygon with n vertices is solvable optimally in O (n) time [17], while visibility for n disjoint and nondisjoint edges in the plane can be determined in O (n log n) time and O (ff (n) log n) time, respectively <ref> [8] </ref>, where ff (n) is an inverse of the Ackermann's function. Hidden surface and line elimination problems can be solved in O (n 2 ) worst-case optimal time [20]. <p> the complexity of the lower envelope of n curve segments any two of which may intersect at most in s points (i.e., the total number n LE of visible segments produced by n curve segments) is s+2 (n), where s (n) is the maximum length of an (n; s)-Davenport-Schinzel sequence <ref> [8] </ref>. In our case, s = 1 and it is known that 3 (n) = O (nff (n)), where ff (n) is the extremely slowly growing functional inverse of Ackermann's function. In fact, ff (n) &lt; 4 for most practical n. <p> Since ff (n) &lt; 4 for virtually all practical applications <ref> [8] </ref>, the above theorem indicates that for all practical values for n, visibility of n edges can be computed in O (1) time on an nfin R-mesh.
Reference: [9] <author> R.H. Guting and T. Ottmann. </author> <title> New algorithms for special cases of the hidden line elimnation problem. Computer Vision, </title> <journal> Graphics, and Image Processing, </journal> <volume> 40 </volume> <pages> 188-204, </pages> <year> 1987. </year>
Reference-contexts: Hidden surface and line elimination problems can be solved in O (n 2 ) worst-case optimal time [20]. Hidden line and surface elimination problems can also be solved in a manner dependent on k, where k is the number of intersections between projected edges <ref> [7, 23, 9, 24] </ref>. Besides object-space algorithms as above, many image-space algorithms for raster graphics are known [6]. The organization of this paper is as follows. In the next section, we briefly review the reconfigurable mesh model and some basic operations on it.
Reference: [10] <author> W.B. Ligon III and U. Ramachandran. </author> <title> An empirical methodology for exploring reconfigurable architectures. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <pages> pages 323-337, </pages> <year> 1993. </year>
Reference-contexts: Reconfigurable meshes have been used to design efficient algorithms in various areas including computational geometry [4, 16], image processing and computer vision [21, 13, 5, 11]. Experimental systems have also begun to be implemented <ref> [10, 19] </ref>. Reconfigurable meshes using optical fibers provide a reasonable support for constant time data transmission over buses in the mesh [25].
Reference: [11] <author> J. Jang, H. Park, and V. Prasanna. </author> <title> A fast algorithm for computing a histogram on reconfigurable mesh. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 17(2) </volume> <pages> 97-106, </pages> <year> 1995. </year>
Reference-contexts: Instructions consist of an arithmetic or boolean 3 operation, broadcasting a data on a bus and receiving a data from a bus. Reconfigurable meshes have been used to design efficient algorithms in various areas including computational geometry [4, 16], image processing and computer vision <ref> [21, 13, 5, 11] </ref>. Experimental systems have also begun to be implemented [10, 19]. Reconfigurable meshes using optical fibers provide a reasonable support for constant time data transmission over buses in the mesh [25].
Reference: [12] <author> J. Jang and V. Prasanna. </author> <title> An optimal sorting algorithm on reconfigurable meshes. </title> <booktitle> In International Parallel Processing Symposium, </booktitle> <pages> pages 130-137. </pages> <publisher> IEEE Computer Society, Los Alamitos, </publisher> <address> CA, </address> <year> 1992. </year>
Reference-contexts: Some sorting algorithms 4 are scalable, in the sense that n numbers can be sorted in a mesh of size smaller than n fi n. Let us cite their result as below. Theorem (Scalable sorting <ref> [12, 15] </ref>) Sorting n numbers can be performed in O (c) time on an n c R-mesh for 1 c p In the above theorem, if we let m = n c , then n = cm and the constraint 1 c p be replaced by 1 c p cm, which
Reference: [13] <author> J. Jenq and S. Sahni. </author> <title> Reconfigurable mesh algorithms for the Hough transform. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 20(1) </volume> <pages> 69-77, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: Instructions consist of an arithmetic or boolean 3 operation, broadcasting a data on a bus and receiving a data from a bus. Reconfigurable meshes have been used to design efficient algorithms in various areas including computational geometry [4, 16], image processing and computer vision <ref> [21, 13, 5, 11] </ref>. Experimental systems have also begun to be implemented [10, 19]. Reconfigurable meshes using optical fibers provide a reasonable support for constant time data transmission over buses in the mesh [25].
Reference: [14] <author> H. Kim and Y. Cho. </author> <title> Point visibility of a simple polygon on reconfigurable mesh. </title> <booktitle> In The Proceedings of the IEEE International Symposium on Parallel and Distributed Processing, </booktitle> <pages> pages 748-751, </pages> <year> 1993. </year>
Reference-contexts: Concerning visibility problems on mesh-connected computers, Bhagavathi et al [1] have considered visibility-related problems on a related but different 2 architecture called a mesh with broadcasting. Kim and Cho <ref> [14] </ref> have addressed the problem of visibility of a simple polygon on reconfigurable meshes. They have reported O (1) time algorithm on an n by n mesh.
Reference: [15] <author> T.H. Lai and M.J. Sheng. </author> <title> An irregular decomposition scheme for designing fast sorting algorithms on reconfigurable meshes. </title> <type> Technical report, </type> <institution> Ohio State University, </institution> <year> 1994. </year> <month> 25 </month>
Reference-contexts: Another basic operation which we need is sorting of n numbers. A few researchers have discovered sorting algorithms which run in constant steps on an nfin R-mesh <ref> [15, 22] </ref>. Some sorting algorithms 4 are scalable, in the sense that n numbers can be sorted in a mesh of size smaller than n fi n. Let us cite their result as below. <p> Some sorting algorithms 4 are scalable, in the sense that n numbers can be sorted in a mesh of size smaller than n fi n. Let us cite their result as below. Theorem (Scalable sorting <ref> [12, 15] </ref>) Sorting n numbers can be performed in O (c) time on an n c R-mesh for 1 c p In the above theorem, if we let m = n c , then n = cm and the constraint 1 c p be replaced by 1 c p cm, which
Reference: [16] <author> T.H. Lai and M.J. Sheng. </author> <title> Computations on reconfigurable meshes: an irregular approach. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <note> 1995. (to appear). </note>
Reference-contexts: Instructions consist of an arithmetic or boolean 3 operation, broadcasting a data on a bus and receiving a data from a bus. Reconfigurable meshes have been used to design efficient algorithms in various areas including computational geometry <ref> [4, 16] </ref>, image processing and computer vision [21, 13, 5, 11]. Experimental systems have also begun to be implemented [10, 19]. Reconfigurable meshes using optical fibers provide a reasonable support for constant time data transmission over buses in the mesh [25]. <p> At this point, let us show how to compute the minimum of n numbers on an n fi c p n R-mesh to give a flavor of how algorithms are designed on a reconfigurable mesh. The following procedure FindMin adopted from <ref> [16] </ref> is often used in our visibility algorithms. Procedure FindMin Input: n numbers are initially stored in the topmost n processors each holding one number. Output: PE (0; 0) holds the minimum number. 1. Divide n numbers into n 1 1 c groups each containing n 1 c numbers. <p> Note that a simple polygon with n edges can be triangulated in constant steps on an n fi n R-mesh <ref> [16] </ref>, which may be used as a preprossing step to this algorithm. Now we summarize the result as follows. Theorem 3 Suppose that we are given a scene consisting of disjoint triangles in 3-space with a total of n edges.
Reference: [17] <author> D. T. Lee. </author> <title> Visibility of a simple polygon. Computer Vision, </title> <journal> Graphics and Image Processing, </journal> <volume> 22 </volume> <pages> 207-221, </pages> <year> 1983. </year>
Reference-contexts: We also consider a more general case that edges are permitted to cross with each other. On a sequential computer, the visibility problem for a simple polygon with n vertices is solvable optimally in O (n) time <ref> [17] </ref>, while visibility for n disjoint and nondisjoint edges in the plane can be determined in O (n log n) time and O (ff (n) log n) time, respectively [8], where ff (n) is an inverse of the Ackermann's function.
Reference: [18] <author> T. Leighton. </author> <title> Tight bounds on the complexity of parallel sorting. </title> <journal> IEEE Transactions on Computers, </journal> <pages> pages 344-354, </pages> <year> 1985. </year>
Reference-contexts: The sorting algorithm is optimal in the word model of VLSI, since the area time square (AT 2 ) lower bound for sorting n numbers is O (n 2 ) <ref> [18] </ref>. One other basic operation that we make use of is count, i.e., counting the number of bits that are 1, given n bits.
Reference: [19] <author> M. Maresca, H.W. Li, and P. Baglietto. </author> <title> Hardware support for fast reconfigurability in processor arrays. </title> <booktitle> In International Conference on Parallel Processing, </booktitle> <pages> pages 282-289, </pages> <year> 1993. </year>
Reference-contexts: Reconfigurable meshes have been used to design efficient algorithms in various areas including computational geometry [4, 16], image processing and computer vision [21, 13, 5, 11]. Experimental systems have also begun to be implemented <ref> [10, 19] </ref>. Reconfigurable meshes using optical fibers provide a reasonable support for constant time data transmission over buses in the mesh [25].
Reference: [20] <author> M. Mckenna. </author> <title> Worst-case optimal hidden-surface removal. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 6(1) </volume> <pages> 19-28, </pages> <month> January </month> <year> 1987. </year>
Reference-contexts: Hidden surface and line elimination problems can be solved in O (n 2 ) worst-case optimal time <ref> [20] </ref>. Hidden line and surface elimination problems can also be solved in a manner dependent on k, where k is the number of intersections between projected edges [7, 23, 9, 24]. Besides object-space algorithms as above, many image-space algorithms for raster graphics are known [6]. <p> In fact, our hidden line elimination algorithm, visible segments are not ordered in a left-to-right manner (although they are ordered within a single edge). In other words, our algorithm divides the projection plane finer compared to the partition generated by a method using an arrangement for a sequential algorithm <ref> [20] </ref>.
Reference: [21] <author> R. Miller, V.K. Prasanna Kumar, D. Reisis, and Q.F. Sout. </author> <title> Parallel computations on reconfigurable meshes. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 42(6) </volume> <pages> 678-692, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Instructions consist of an arithmetic or boolean 3 operation, broadcasting a data on a bus and receiving a data from a bus. Reconfigurable meshes have been used to design efficient algorithms in various areas including computational geometry [4, 16], image processing and computer vision <ref> [21, 13, 5, 11] </ref>. Experimental systems have also begun to be implemented [10, 19]. Reconfigurable meshes using optical fibers provide a reasonable support for constant time data transmission over buses in the mesh [25]. <p> Assign each group of n 1 c numbers to each n 1 1 c submesh. 2. In each submesh, find the min of n 1 c numbers by using the method in <ref> [21] </ref>. As a result, we have a minimum from each of the n 1 1 c groups. 3. Divide the resulting numbers into groups again each containing n 1 c numbers and find their minimums in each group.
Reference: [22] <author> M. Nigam and S. Sahni. </author> <title> Sorting n numbers on n x n reconfigurable meshes with buses. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 23(1) </volume> <pages> 37-48, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: Another basic operation which we need is sorting of n numbers. A few researchers have discovered sorting algorithms which run in constant steps on an nfin R-mesh <ref> [15, 22] </ref>. Some sorting algorithms 4 are scalable, in the sense that n numbers can be sorted in a mesh of size smaller than n fi n. Let us cite their result as below.
Reference: [23] <author> O. Nurmi. </author> <title> A fast line-sweep algorithm for hidden line elimination. </title> <journal> BIT, </journal> <volume> 25 </volume> <pages> 466-472, </pages> <year> 1985. </year>
Reference-contexts: Hidden surface and line elimination problems can be solved in O (n 2 ) worst-case optimal time [20]. Hidden line and surface elimination problems can also be solved in a manner dependent on k, where k is the number of intersections between projected edges <ref> [7, 23, 9, 24] </ref>. Besides object-space algorithms as above, many image-space algorithms for raster graphics are known [6]. The organization of this paper is as follows. In the next section, we briefly review the reconfigurable mesh model and some basic operations on it.
Reference: [24] <author> M. Overmars and M. Sharir. </author> <title> A simple output-sensitive algorithm for hidden surface removal. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 11 </volume> <pages> 1-11, </pages> <year> 1992. </year>
Reference-contexts: Hidden surface and line elimination problems can be solved in O (n 2 ) worst-case optimal time [20]. Hidden line and surface elimination problems can also be solved in a manner dependent on k, where k is the number of intersections between projected edges <ref> [7, 23, 9, 24] </ref>. Besides object-space algorithms as above, many image-space algorithms for raster graphics are known [6]. The organization of this paper is as follows. In the next section, we briefly review the reconfigurable mesh model and some basic operations on it.
Reference: [25] <author> A. Schuster and Y. Ben-Asher. </author> <title> Algorithms and optic implementation for reconfigurable networks. </title> <booktitle> In Proceedings of 5th Jerusalem Conference on Information Technology, </booktitle> <year> 1990. </year> <month> 26 </month>
Reference-contexts: Experimental systems have also begun to be implemented [10, 19]. Reconfigurable meshes using optical fibers provide a reasonable support for constant time data transmission over buses in the mesh <ref> [25] </ref>. At this point, let us show how to compute the minimum of n numbers on an n fi c p n R-mesh to give a flavor of how algorithms are designed on a reconfigurable mesh. The following procedure FindMin adopted from [16] is often used in our visibility algorithms.
References-found: 25

