URL: http://www.cs.columbia.edu/~hgs/papers/Chou9505_Copyright.ps.gz
Refering-URL: http://www.cs.columbia.edu/~hgs/research/epublish/
Root-URL: http://www.cs.columbia.edu
Email: fakc,nfm,sanjoyg@research.att.com  hgs@fokus.gmd.de  
Title: Copyright Protection for Electronic Publishing over Computer Networks  
Author: A. K. Choudhury, N. F. Maxemchuk, and S. Paul H. G. Schulzrinne 
Address: Murray Hill, NJ 07974  Berlin, Germany  
Affiliation: AT&T Bell Laboratories  GMD-Fokus  
Abstract: The increased availability of computers, printers and high-speed networks could make electronic publishing a reality. One of the major technical and economic challenges faced by electronic publishing is that of preventing individuals from easily copying and illegally distributing electronic documents. In this paper, we explore the use of cryptographic protocols to discourage the distribution of illicit electronic copies. We propose an architecture and two separate schemes for making electronic document distribution secure. The first strategy requires special-purpose firmware in the printers and displays to decrypt encrypted documents. In the second strategy, encrypted documents are decrypted in software in the recipient's computer.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Adie, </author> <title> "Network access to multimedia information," </title> <type> Internet Draft, </type> <institution> Edinburgh University Computing Service, </institution> <month> Nov. </month> <year> 1993. </year> <title> Work in progress. </title>
Reference-contexts: In the second mode, the one of interest to this paper, the document is stored (or generated on the fly) at a remote site and accessed through a computer network. Network access is particularly appropriate if the data changes frequently, or if the document storage exceeds that available locally <ref> [1] </ref>. Distribution through networks makes it easy to avoid the traditional update cycles of physical media, such as the periodic publication of journals or the updates of CD ROMs. A journal article, for example, could be "published" as soon as it has completed the editorial process. <p> The World-Wide Web [18] is an example of a networked multimedia hypertext retrieval system using, for text, a particular form of SGML called Hyper-text Markup Language (HTML) [19]; other systems are described by Adie <ref> [1] </ref>.
Reference: [2] <author> J. R. Garrett, </author> <title> "Text to screen revisited: copyright in the electronic age," </title> <journal> Online, </journal> <volume> vol. 15, </volume> <pages> pp. 22-24, </pages> <month> Mar. </month> <year> 1991. </year>
Reference: [3] <author> A. E. Luchsinger, </author> <title> "The future of scientific communications: more questions than answers," </title> <journal> Annals Missouri Botanical Garden Society, </journal> <volume> vol. 80, </volume> <pages> pp. 297-303, </pages> <year> 1993. </year>
Reference: [4] <author> S. C. Loken, R. J. Beach, K. T. McDonald, T. D. Schultz, H. Thacker, and J. </author> <title> Worth, "Report of the APS task force on electronic information systems," </title> <journal> Bulletin of the American Physical Society, </journal> <volume> vol. 36, </volume> <pages> pp. 1119-1151, </pages> <month> Apr. </month> <year> 1991. </year>
Reference: [5] <author> N. R. Wagner, </author> <title> "Fingerprinting," </title> <booktitle> in Proceedings of the 1983 Symposium on Security and Privacy, </booktitle> <address> (Oakland, California), </address> <pages> pp. 18-22, </pages> <publisher> IEEE, </publisher> <month> Apr. </month> <year> 1983. </year>
Reference: [6] <author> J. T. Brassil, S. Low, N. F. Maxemchuk and L. O'Gorman, </author> <title> "Electronic Marking and Identification Techniques to Discourage Document Copying", </title> <booktitle> in Proceedings of IEEE INFOCOM '94, </booktitle> <address> (Toronto, Canada), </address> <pages> pp. 1278-1287, </pages> <publisher> IEEE, </publisher> <month> June </month> <year> 1994. </year>
Reference-contexts: Only with sophisticated hardware could the instruction sequence be reconstructed without delaying execution. 4.5 Origin Tracing for Documents and Programs As described by Brassil et al. <ref> [6] </ref>, bitmaps can be marked differently for each recipient. The marking can be done in such a way that it is difficult for a dishonest user to discover the unique marking pattern used in the user's document by direct comparison of two legitimate copies.
Reference: [7] <author> J. H. Coombs, A. H. Renear, and S. J. DeRose, </author> <title> "Markup systems and the future of scholarly text processing," </title> <journal> Communications ACM, </journal> <volume> vol. 30, </volume> <pages> pp. 933-947, </pages> <month> Nov. </month> <year> 1987. </year>
Reference-contexts: We conclude with our view of the viability of electronic publishing. 2 Document Types and Document Value Unlike traditional media like paper and even video tape, for true electronic documents, the same basic content can be delivered, roughly speaking, in three different basic formats (see <ref> [7] </ref> for a slightly different taxonomy). structural: Documents in structural form contain information describing the content of the document, rather than prescribing the presentation of the information.
Reference: [8] <author> International Standards Organization, </author> <title> Standard Generalized Markup Language (SGML). </title> <institution> Geneva, Switzerland: International Standards Organization, </institution> <year> 1986. </year>
Reference-contexts: For example, a document might be viewed as a scroll rather than distinct pages or with larger fonts on a video terminal. Examples of a structural format include SGML (Standard Generalized Markup Language) <ref> [8] </ref> and L a T E X [9] for text, input format for processors like pic, dot, and dag for graphics, HyTime [10] for multimedia documents with timing dependencies, or staff notation for sheet music. (Coombs et al. refer to this format as descriptive markup.) The typical storage requirements for text
Reference: [9] <author> L. Lamport, </author> <title> LaTeX: A Document Preparation System. </title> <address> Reading, Massachusetts: </address> <publisher> Addison-Wesley, </publisher> <year> 1986. </year>
Reference-contexts: For example, a document might be viewed as a scroll rather than distinct pages or with larger fonts on a video terminal. Examples of a structural format include SGML (Standard Generalized Markup Language) [8] and L a T E X <ref> [9] </ref> for text, input format for processors like pic, dot, and dag for graphics, HyTime [10] for multimedia documents with timing dependencies, or staff notation for sheet music. (Coombs et al. refer to this format as descriptive markup.) The typical storage requirements for text are about 2 to 5 kBytes per
Reference: [10] <author> International Standards Organization, </author> <title> ISO 10744: Hypermedia/Time-based Structuring Language. </title> <institution> Geneva, Switzerland: International Standards Organization, </institution> <year> 1993. </year>
Reference-contexts: Examples of a structural format include SGML (Standard Generalized Markup Language) [8] and L a T E X [9] for text, input format for processors like pic, dot, and dag for graphics, HyTime <ref> [10] </ref> for multimedia documents with timing dependencies, or staff notation for sheet music. (Coombs et al. refer to this format as descriptive markup.) The typical storage requirements for text are about 2 to 5 kBytes per page, uncompressed, and less than half of that with Huffmann or Lempel-Ziv compression. presentational: In
Reference: [11] <author> Adobe, </author> <title> PostScript language reference manual. </title> <address> Reading, Massachusetts: </address> <publisher> Addison-Wesley, </publisher> <editor> 2nd ed., </editor> <year> 1990. </year>
Reference-contexts: Presentational format has the advantage that it can abstract from the details of the device used for presentation. For text and graphics, page description languages (PDL) are examples of this format, e.g., PostScript <ref> [11] </ref> or Acrobat [12, 13]. At a slightly higher level of abstraction, procedural markup languages like troff or T E X can be considered part of this group. MIDI and Apple QuickTime [14] could be considered the equivalents for music and movies, respectively.
Reference: [12] <author> Anonymous, </author> <title> "Carousel becomes Acrobat," </title> <journal> Electronic Documents, </journal> <volume> vol. 1, </volume> <pages> pp. 7-8, </pages> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: Presentational format has the advantage that it can abstract from the details of the device used for presentation. For text and graphics, page description languages (PDL) are examples of this format, e.g., PostScript [11] or Acrobat <ref> [12, 13] </ref>. At a slightly higher level of abstraction, procedural markup languages like troff or T E X can be considered part of this group. MIDI and Apple QuickTime [14] could be considered the equivalents for music and movies, respectively.
Reference: [13] <author> Adobe, </author> <title> The Portable Document Format Reference Manual. </title> <address> Reading, Massachusetts: </address> <publisher> Addison-Wesley, </publisher> <year> 1993. </year> <note> 17 Submitted to IEEE Network Magazine June 1994 </note>
Reference-contexts: Presentational format has the advantage that it can abstract from the details of the device used for presentation. For text and graphics, page description languages (PDL) are examples of this format, e.g., PostScript [11] or Acrobat <ref> [12, 13] </ref>. At a slightly higher level of abstraction, procedural markup languages like troff or T E X can be considered part of this group. MIDI and Apple QuickTime [14] could be considered the equivalents for music and movies, respectively.
Reference: [14] <institution> Apple Computer, Inside Macintosh: QuickTime. Apple Computer, Cupertino, California, 1.5 ed., </institution> <month> Oct. </month> <year> 1992. </year>
Reference-contexts: For text and graphics, page description languages (PDL) are examples of this format, e.g., PostScript [11] or Acrobat [12, 13]. At a slightly higher level of abstraction, procedural markup languages like troff or T E X can be considered part of this group. MIDI and Apple QuickTime <ref> [14] </ref> could be considered the equivalents for music and movies, respectively. These types of documents are usually not directly editable, but some global manipulation such as scaling in time and space or font substitution may be possible.
Reference: [15] <author> H. H. Katseff and T. B. </author> <title> London, "The Ferret document browser," </title> <booktitle> in Proceedings of USENIX Summer 1993 Technical Conference, </booktitle> <address> (Cincinnati, </address> <publisher> Ohio), </publisher> <pages> pp. 101-110, </pages> <publisher> USENIX, </publisher> <month> June </month> <year> 1993. </year>
Reference-contexts: Uncompressed bilevel (black-and-white) images at 300 dpi require about 713 kByte of storage, reduced by a factor of ten or more through standard facsimile (Group 3 or 4) compression. For example, G4 compression reduces a typical technical report page to 15 kBytes <ref> [15] </ref>. Example applications include the AT&T RightPages [16, 17] and Ferret [15] systems which deliver bitmap images of scientific journals and AT&T internal technical reports, respectively, to networked workstations. Both structural and presentational documents and, with a bit more difficulty, bitmap documents can contain links to other documents ("hypertext"). <p> For example, G4 compression reduces a typical technical report page to 15 kBytes <ref> [15] </ref>. Example applications include the AT&T RightPages [16, 17] and Ferret [15] systems which deliver bitmap images of scientific journals and AT&T internal technical reports, respectively, to networked workstations. Both structural and presentational documents and, with a bit more difficulty, bitmap documents can contain links to other documents ("hypertext").
Reference: [16] <author> G. A. Story, L. O'Gorman, D. Fox, L. Schaper, and H. V. Jagadish, </author> <title> "The RightPages image-based electronic library for alerting and browsing," </title> <journal> IEEE Computer, </journal> <volume> vol. 25, </volume> <pages> pp. 17-26, </pages> <month> Sept. </month> <year> 1992. </year>
Reference-contexts: Uncompressed bilevel (black-and-white) images at 300 dpi require about 713 kByte of storage, reduced by a factor of ten or more through standard facsimile (Group 3 or 4) compression. For example, G4 compression reduces a typical technical report page to 15 kBytes [15]. Example applications include the AT&T RightPages <ref> [16, 17] </ref> and Ferret [15] systems which deliver bitmap images of scientific journals and AT&T internal technical reports, respectively, to networked workstations. Both structural and presentational documents and, with a bit more difficulty, bitmap documents can contain links to other documents ("hypertext").
Reference: [17] <author> L. O'Gorman, </author> <title> "Image and document processing techniques for the RightPages electronic library system," </title> <booktitle> in International Conference on Pattern Recognition (ICPR), (The Hague, Netherlands), </booktitle> <pages> pp. 260-263, </pages> <month> Sept. </month> <year> 1992. </year>
Reference-contexts: Uncompressed bilevel (black-and-white) images at 300 dpi require about 713 kByte of storage, reduced by a factor of ten or more through standard facsimile (Group 3 or 4) compression. For example, G4 compression reduces a typical technical report page to 15 kBytes [15]. Example applications include the AT&T RightPages <ref> [16, 17] </ref> and Ferret [15] systems which deliver bitmap images of scientific journals and AT&T internal technical reports, respectively, to networked workstations. Both structural and presentational documents and, with a bit more difficulty, bitmap documents can contain links to other documents ("hypertext").
Reference: [18] <author> T. Berners-Lee, R. Caillian, and J.-F. Groff, </author> <title> "The world-wide web," </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 25, </volume> <pages> pp. 454-459, </pages> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: Both structural and presentational documents and, with a bit more difficulty, bitmap documents can contain links to other documents ("hypertext"). The World-Wide Web <ref> [18] </ref> is an example of a networked multimedia hypertext retrieval system using, for text, a particular form of SGML called Hyper-text Markup Language (HTML) [19]; other systems are described by Adie [1].
Reference: [19] <author> T. Berners-Lee and D. Connolly, </author> <title> "Hypertext markup language," Internet Draft, </title> <publisher> CERN, </publisher> <month> June </month> <year> 1993. </year> <title> Work in progress. </title>
Reference-contexts: Both structural and presentational documents and, with a bit more difficulty, bitmap documents can contain links to other documents ("hypertext"). The World-Wide Web [18] is an example of a networked multimedia hypertext retrieval system using, for text, a particular form of SGML called Hyper-text Markup Language (HTML) <ref> [19] </ref>; other systems are described by Adie [1].
Reference: [20] <author> C. Weider and P. Deutsch, </author> <title> "Uniform resource names," Internet Draft, Merit Network, </title> <booktitle> Oct. 1993. Work in progress. </booktitle>
Reference-contexts: A document could be identified by a universal resource name (URN) such as the international standard book or serial number (ISBN or ISSN) <ref> [20] </ref>, which is then translated to the location of the document server and a file name, a universal resource locator (URL) [21], by a directory service such as X.500 [22] or whois++ [23]. 2. The user requests the document by its URL and authenticates herself as described below.
Reference: [21] <author> T. Berners-Lee, </author> <title> "Uniform resource locators," Internet Draft, </title> <publisher> CERN, </publisher> <month> July </month> <year> 1993. </year> <title> Work in progress. </title>
Reference-contexts: A document could be identified by a universal resource name (URN) such as the international standard book or serial number (ISBN or ISSN) [20], which is then translated to the location of the document server and a file name, a universal resource locator (URL) <ref> [21] </ref>, by a directory service such as X.500 [22] or whois++ [23]. 2. The user requests the document by its URL and authenticates herself as described below. The request is encrypted to protect the user's privacy and signed to assure non-repudiation of the order.
Reference: [22] <author> M. T. Rose, </author> <title> The Little Black Book: Mail-Bonding with OSI Directory Services. </title> <address> Englewood Cliffs, New Jersey: </address> <publisher> Prentice-Hall, </publisher> <year> 1991. </year>
Reference-contexts: could be identified by a universal resource name (URN) such as the international standard book or serial number (ISBN or ISSN) [20], which is then translated to the location of the document server and a file name, a universal resource locator (URL) [21], by a directory service such as X.500 <ref> [22] </ref> or whois++ [23]. 2. The user requests the document by its URL and authenticates herself as described below. The request is encrypted to protect the user's privacy and signed to assure non-repudiation of the order. Alternatives for this step are described in Section 4.1. 3.
Reference: [23] <author> C. Weider, J. Fullton, and S. Spero, </author> <title> "Architecture of the whois++ index service," Internet Draft, Merit Network, </title> <booktitle> Oct. 1993. Work in progress. </booktitle>
Reference-contexts: by a universal resource name (URN) such as the international standard book or serial number (ISBN or ISSN) [20], which is then translated to the location of the document server and a file name, a universal resource locator (URL) [21], by a directory service such as X.500 [22] or whois++ <ref> [23] </ref>. 2. The user requests the document by its URL and authenticates herself as described below. The request is encrypted to protect the user's privacy and signed to assure non-repudiation of the order. Alternatives for this step are described in Section 4.1. 3.
Reference: [24] <author> S. Kent, </author> <title> "Privacy enhancement for internet electronic mail: Part II: Certificate-based key management," Network Working Group Request for Comments RFC 1422, </title> <type> IETF, </type> <month> Feb. </month> <year> 1993. </year>
Reference-contexts: The details are described by Kent <ref> [24, p. 21] </ref>. anonymous: Analogous to anonymous ftp, the user does not establish an identity; payment is through some form of electronic cash or an anonymous credit card. We briefly describe a number of alternatives for the case of authentication and personas, without distinguishing further between the two.
Reference: [25] <author> W. R. Stevens, </author> <title> UNIX Network Programming. </title> <address> Englewood Cliffs, New Jersey: </address> <publisher> Prentice-Hall, </publisher> <year> 1990. </year>
Reference-contexts: Challenge/response: The server issues a challenge, typically some number, to the client, which responds with the result of computing a function of that number, where the function is known to both client and server. Kerberos: Kerberos offers password-based authentication using an authentication server <ref> [25, p. 430f] </ref>. No passwords travel across the network in plain text; time-stamps protect against replay attacks. Public key: The client encrypts requests and the user's password with the server's public key.
Reference: [26] <author> J. Linn, </author> <title> "Privacy enhancement for internet electronic mail: part I: message encryption and authentication procedures," Network Working Group Request for Comments RFC 1421, </title> <institution> IAB IRTF PSRG, IETF PEM WG, </institution> <month> Feb. </month> <year> 1993. </year>
Reference-contexts: Public key: The client encrypts requests and the user's password with the server's public key. Since the number of servers is likely to be smaller than the number of users, the key distribution problem is somewhat simplified. Public key certificates: The same algorithm as in privacy enhanced mail (PEM) <ref> [26] </ref> can be used. In that algorithm, the user encrypts a message digest of the request with his private key and includes a public-key certificate signed by a certification authority which includes the user's distinguished name and his public key.
Reference: [27] <author> R. Ostrovsky, </author> <title> "An efficient software protection scheme," </title> <booktitle> in Advances in Cryptology | CRYPTO '89 (G. </booktitle> <editor> Brassard, ed.), </editor> <volume> vol. </volume> <pages> 435, </pages> <address> (Santa Barbara, California), </address> <pages> pp. 610-611, </pages> <booktitle> International Association for Cryptologic Research, </booktitle> <publisher> Springer Verlag, </publisher> <month> Aug. </month> <year> 1989. </year> <note> Lecture Notes in Computer Science. 18 Submitted to IEEE Network Magazine June 1994 </note>
Reference-contexts: optimize certain sections of code; * sections of the code can be replaced by functionally equivalent, but different algorithms * the compiler can change the register allocation sequence Note that more elaborate schemes for protecting RAM access patterns and contents may be added, at the cost of reduced execution efficiency <ref> [27] </ref>. In addition, standard techniques of hiding tell-tale code sequences (such as replacing system calls to constant addresses by computed calls) should be used. Also, it may be helpful to use a slight variation on a standard encryption method so that the whole decryption engine has to be disassembled.
References-found: 27

