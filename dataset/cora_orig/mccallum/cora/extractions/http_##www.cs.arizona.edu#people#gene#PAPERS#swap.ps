URL: http://www.cs.arizona.edu/people/gene/PAPERS/swap.ps
Refering-URL: http://www.cs.arizona.edu/people/gene/vita.html
Root-URL: http://www.cs.arizona.edu
Title: GOING AGAINST THE GRAIN  
Author: Gene Myers Mudita Jain 
Note: 2 Partially supported by NLM Grant LM-04960.  
Address: Tucson, AZ 85721  
Affiliation: 1 Dept. of Computer Science, University of Arizona,  
Abstract: We review a general, space and time efficient technique for delivering a sequence of values computable by a recurrence relation, in the order opposing the data-dependencies of the recurrence. The technique provides a series of time/space tradeoffs we characterize by parameter K &gt; 0. Namely, N values can be delivered against the grain in O(KN ) time and O(KN 1=K ) space. This basic idea is not new, but here we present it in a framework exposing its essential nature and we give a concise yet easily understood explanation of it in terms of counting in a radix-N 1=K number system. We then show how to apply this paradigm to a couple of problems in sequence comparison, a domain where it has here to fore not been used. We show that in the limiting case of K = log 2 N , the method coincides with the well-known divide-and-conquer algorithm of Hirschberg. Thus, our observation provides a continuum of time/space tradeoffs for all comparison problems that have appealed to the Hirschberg paradigm for greater space efficiency, e.g., sequence comparison with concave weights, approximate matching of regular expressions, etc. In particular, an O(M N + (M + N )W log(M + N )) algorithm for computing a representation of all suboptimal alignments is a corollary of our technique with the important property that only O(M + N + W log(M + N )) working storage is required versus the O(M + N + F ) space of an earlier result by Chao. Here F is the size of a graph modeling all of the suboptimal alignments, and W is its width. Since F may be O(M N ) this savings can be important in contexts where only summaries of the suboptimal region is required, e.g., the number of suboptimal paths with score greater than some threshold. Another application to computing locally optimal alignments as defined by Sellers illustrates the broad utility of the technique. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Bentley, J., and H. Maurer, </author> <title> "Efficient worst-case data structures for range searching," </title> <journal> Acta Informatica 13 (1980), </journal> <pages> 155-168. </pages>
Reference-contexts: One might characterize the approach as a K-level geometric partitioning of a problem. This paradigm has appeared several times in the context of specific problem domains. For example, we believe it was first used by Bentley and Maurer in "dynamizing" static search problems <ref> [1] </ref>, later by Myers in realizing persistent arrays [7], and by Kannan and Myers in finding twins [5]. However the paradigm has never been presented as one of going against the grain and has not been applied in a general way to sequence comparison.
Reference: 2. <author> Chao, K.M., </author> <title> "Computing all suboptimal alignments in linear space," </title> <booktitle> Proc. 5th Symp. on Combinatorial Pattern Matching (Asilomar, CA 1994), </booktitle> <pages> 31-42. </pages>
Reference-contexts: A series of results in the literature concern enumerating all suboptimal paths that score within some threshold t , typically near the optimum <ref> [13, 9, 2] </ref>. Since the number of such alignments grows very rapidly as t moves away from the optimum, investigators have found it superior to depict the subgraph of the edit graph containing the paths representing the alignments [9]. <p> Especially note that since G t is delivered in column order one can accumulate order-dependent information such as the number of suboptimal paths, the invariant alignment segments, or suboptimal alignments matching a pattern as in <ref> [2] </ref>.
Reference: 3. <author> Grice, J.A., Hughey, R. and D. Speck, </author> <title> "Parallel Sequence Alignment in Limited Space," </title> <booktitle> Proc. 3rd Conf. on Intelligent Systems for Molecular Biology (Cambridge, England 1995), </booktitle> <pages> 145-153. </pages>
Reference-contexts: So what's important about the grain-based algorithm, is that for different choices of K one gets a tradeoff in space and time, thus generalizing the divide-and-conquer approach. Indeed, in a recent independent discovery Grice et al. <ref> [3] </ref> also arrived at an algorithm like the recursive formulation given in Figure 1.
Reference: 4. <author> Hirschberg, </author> <title> D.S., "A linear space algorithm for computing longest common subsequences," </title> <journal> Comm. Assoc. Comput. Mach. </journal> <volume> 18 (1975), </volume> <pages> 341-343. </pages>
Reference-contexts: By contrast the grain-based algorithm delivers columns in order and requires only O (M log N ) space when K is chosen to be log 2 N . At this juncture we digress to make the observation that our approach generalizes the basic divide and conquer algorithm of Hirschberg <ref> [4] </ref>. To see this observe that in the case that K = log 2 N , the set of S-vectors cached at any moment is exactly the set of mid-point vectors that would be on the recursion stack of the divide-and-conquer algorithm.
Reference: 5. <author> Kannan, S. and E. Myers, </author> <title> "An algorithm for locating non-overlapping regions of maximum alignment score," </title> <booktitle> Proc. 4th Symp. on Combinatorial Pattern Matching (Padova, Italy 1994), </booktitle> <pages> 74-86. </pages> <note> Also to appear in SIAM J. on Computing. </note>
Reference-contexts: This paradigm has appeared several times in the context of specific problem domains. For example, we believe it was first used by Bentley and Maurer in "dynamizing" static search problems [1], later by Myers in realizing persistent arrays [7], and by Kannan and Myers in finding twins <ref> [5] </ref>. However the paradigm has never been presented as one of going against the grain and has not been applied in a general way to sequence comparison.
Reference: 6. <author> Miller, W. and E. Myers, </author> <title> "Sequence Comparison with Concave Weighting Functions," Bull. </title> <booktitle> of Mathematical Biology 50 (1988), </booktitle> <pages> 97-120. </pages>
Reference-contexts: Since many sequence comparison results appeal to variations of Hirschberg's divide-and-conquer algorithm to deliver alignment in an efficient amount of space (e.g., <ref> [6, 8] </ref>), it follows that our central idea is immediately applicable and gives one the flexibility of a series of time/space tradeoffs parameterized by K.
Reference: 7. <author> Myers, E., </author> <title> "Efficient applicative data types," </title> <booktitle> Proc. 11th ACM Symp. on Principles of Prog. </booktitle> <address> Lang. </address> <year> (1984), </year> <pages> 66-75. </pages>
Reference-contexts: This paradigm has appeared several times in the context of specific problem domains. For example, we believe it was first used by Bentley and Maurer in "dynamizing" static search problems [1], later by Myers in realizing persistent arrays <ref> [7] </ref>, and by Kannan and Myers in finding twins [5]. However the paradigm has never been presented as one of going against the grain and has not been applied in a general way to sequence comparison.
Reference: 8. <author> Myers, E., and W. Miller, </author> <title> "Approximate Matching of Regular Expressions," Bull. </title> <booktitle> of Mathematical BiologyP 51 (1989), </booktitle> <pages> 5-37. </pages>
Reference-contexts: Since many sequence comparison results appeal to variations of Hirschberg's divide-and-conquer algorithm to deliver alignment in an efficient amount of space (e.g., <ref> [6, 8] </ref>), it follows that our central idea is immediately applicable and gives one the flexibility of a series of time/space tradeoffs parameterized by K.
Reference: 9. <author> Naor, Dalit and D. Brutlag, </author> <title> "On suboptimal alignments of biological sequences," </title> <booktitle> Proc. 4th Symp. on Combinatorial Pattern Matching (Padova, Italy 1994), </booktitle> <pages> 179-196. </pages>
Reference-contexts: A series of results in the literature concern enumerating all suboptimal paths that score within some threshold t , typically near the optimum <ref> [13, 9, 2] </ref>. Since the number of such alignments grows very rapidly as t moves away from the optimum, investigators have found it superior to depict the subgraph of the edit graph containing the paths representing the alignments [9]. <p> Since the number of such alignments grows very rapidly as t moves away from the optimum, investigators have found it superior to depict the subgraph of the edit graph containing the paths representing the alignments <ref> [9] </ref>. Such depictions reveal invariant aligned segments common to all or many of the subpaths and give an interesting characterization of the similarity between two sequences.
Reference: 10. <author> Sellers, P.H., </author> <title> "Pattern recognition in genetic sequences by mismatch density," </title> <journal> Bull. Math. Biol. </journal> <volume> 46 (1984), </volume> <pages> 501-514. </pages>
Reference-contexts: While conceptually simple, this approach does have the disadvantages of requiring repeated recomputation of regions of the dynamic programming matrix and of requiring the space to store all previously reported local alignments. Another unpublished proposal was made by Sellers in 1987 <ref> [10, 11] </ref> that is interesting and involves only a single pass. Let G P be the graph whose edges give rise to the P -values at each vertex, i.e., v ! w 2 G P iff P (v)+ffi (v ! w) = P (w).
Reference: 11. <author> Sellers, P.H., </author> <type> personal communication. </type>
Reference-contexts: While conceptually simple, this approach does have the disadvantages of requiring repeated recomputation of regions of the dynamic programming matrix and of requiring the space to store all previously reported local alignments. Another unpublished proposal was made by Sellers in 1987 <ref> [10, 11] </ref> that is interesting and involves only a single pass. Let G P be the graph whose edges give rise to the P -values at each vertex, i.e., v ! w 2 G P iff P (v)+ffi (v ! w) = P (w).
Reference: 12. <author> Smith, T.F. </author> <title> and M.S. Waterman, "Identification of common molecular sequences," </title> <journal> J. Mol. Biol 147 (1981), </journal> <pages> 195-197. </pages>
Reference-contexts: In terms of the edit graph, this local alignments problem requires finding paths in the graph of unusually high score. In the basic approach of Smith and Waterman <ref> [12] </ref>, the underlying scoring scheme is assumed to be negatively biased so that the expected value of any path is negative. One then asks for subpaths of maximum (positive) score.
Reference: 13. <author> Waterman, M., and T. Byers, </author> <title> "A dynamic programming algorithm to find all solutions in a neighborhood of the optimum," </title> <journal> Math. </journal> <volume> Biosciences 77 (1985), </volume> <pages> 179-185. </pages>
Reference-contexts: A series of results in the literature concern enumerating all suboptimal paths that score within some threshold t , typically near the optimum <ref> [13, 9, 2] </ref>. Since the number of such alignments grows very rapidly as t moves away from the optimum, investigators have found it superior to depict the subgraph of the edit graph containing the paths representing the alignments [9].
Reference: 14. <author> Waterman, M.S. and M. Eggert, </author> <title> "A new algorithm for best subsequence alignments with application to tRNA-rRNA comparisons," </title> <journal> J. Mol. Biol. </journal> <volume> 197 (1987), </volume> <pages> 723-728. </pages>
Reference-contexts: This is easily accomplished by adding a 0 term to the recurrence for either P (i; j) and/or S (i; j). The one potential difficulty of such an approach is that there may be many "interesting" local alignments. In the approach of Waterman and Eggert <ref> [14] </ref>, this problem is resolved by finding the highest scoring path, removing it, finding the next highest path, removing it, and so on.
References-found: 14

