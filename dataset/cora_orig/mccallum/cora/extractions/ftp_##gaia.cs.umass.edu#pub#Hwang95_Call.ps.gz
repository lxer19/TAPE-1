URL: ftp://gaia.cs.umass.edu/pub/Hwang95:Call.ps.gz
Refering-URL: http://www-net.cs.umass.edu/papers/papers.html
Root-URL: 
Title: On Call Processing Delay in High Speed Networks  
Author: Ren-Hung Hwang and James F. Kurose and Don Towsley 
Abstract: In future BISDN networks, significant burdens will be placed on the processing elements in the network since call routing and admission policies will be more com-putationally intensive than those in present day networks. Thus, the bottleneck in future networks is likely to shift from the communication links to the processing elements. The delays at these elements are influenced by their processing capacity and factors such as routing algorithms, propagation delays, admission control functions, and network topology. The goal of this paper is to characterize the behavior of these factors on the call setup time and accepted call throughput. This behavior is examined for three sequential routing schemes and two flooding routing schemes under various network parameters and different forms of admission control. The results of our study indicate that processing capacity and the admission control function can affect the call setup time and accepted call throughput significantly while propagation delay does not affect these performance measures significantly. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> CCITT SG. </author> <title> XVIII, "Draft Recommendation I.311: B-ISDN General Network Aspects." </title> <address> Geneva, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: ISDN (BISDN) networks, significant burdens will be placed on the processing elements in the network as call routing and admission policies become more computationally intensive than those in present day networks (due to the need to ensure that accepted calls will be provided with a guaranteed quality of service (QOS) <ref> [1, 2] </ref>). In this paper, we study the computational delays associated with call admission, routing and call setup in BISDN networks. Routing in future BISDN networks will contain elements from both traditional packet-switched and circuit-switched networks.
Reference: [2] <author> CCITT SG. </author> <note> XVIII, "Draft Recommendation I.350." </note>
Reference-contexts: ISDN (BISDN) networks, significant burdens will be placed on the processing elements in the network as call routing and admission policies become more computationally intensive than those in present day networks (due to the need to ensure that accepted calls will be provided with a guaranteed quality of service (QOS) <ref> [1, 2] </ref>). In this paper, we study the computational delays associated with call admission, routing and call setup in BISDN networks. Routing in future BISDN networks will contain elements from both traditional packet-switched and circuit-switched networks.
Reference: [3] <author> CCITT SG. </author> <note> XVIII, "I-Series Recommendations." </note>
Reference-contexts: In this paper, we study the computational delays associated with call admission, routing and call setup in BISDN networks. Routing in future BISDN networks will contain elements from both traditional packet-switched and circuit-switched networks. The CCITT specifications on ATM <ref> [3] </ref> specify a cell-based, packet-like transport mode within the network. However, the need to provide a guaranteed QOS has resulted in the need for a call-level admission control mechanism and the reservation of resources (e.g., bandwidth [4]) by a call on a link-by-link basis.
Reference: [4] <author> H. Ahmadi, J. Chen, and R. Guerin, </author> <title> "Dynamic Routing and Call Control in High-Speed Integrated Networks," </title> <booktitle> in 13th International Teletraffic Congress, </booktitle> <month> June </month> <year> 1991. </year>
Reference-contexts: The CCITT specifications on ATM [3] specify a cell-based, packet-like transport mode within the network. However, the need to provide a guaranteed QOS has resulted in the need for a call-level admission control mechanism and the reservation of resources (e.g., bandwidth <ref> [4] </ref>) by a call on a link-by-link basis. In this latter case, when a call is "offered" to a route, computation is required to determine whether the selected route can indeed support the additional call while continuing to meet the QOS guarantees of existing calls.
Reference: [5] <author> R.-H. Hwang, J. F. Kurose, and D. Towsley, </author> <title> "The Effect of Processing Delay and QOS Requirements in High Speed Networks," </title> <booktitle> INFOCOM'92, </booktitle> <pages> pp. 160-169, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: We also find that the form of the admission control function (to be defined precisely later) has a significant influence on the call setup time and the processing loads at processing elements. The influence of propagation delay is examined in <ref> [5] </ref> and shown to not affect the call setup delay significantly as long as it is relatively small as compared to the call holding time. The focus of this paper is rather different from previous works on routing in the literature. <p> The results of our investigation on the influence of processing delay, admission control function, and routing algorithms on the average call setup delay and accepted call throughput are presented in section 5. The influence of propagation delay on routing, presented in <ref> [5] </ref>, is summarized in section 6. Section 6 also discusses the issue of whether it is important to model resources held by blocked calls. <p> average call setup time approaches infinity, the connections that are in the process of being setup will hold the resources that have already being reserved for an infinite time and thus the blocking probability will approach unity.) This observation is slightly different from what we observed in an earlier study <ref> [5] </ref>. In [5], we studied a 8-node hypercube network and observed that the SOC algorithm yielded a slightly lower maximum achievable throughput than the crankback algorithm. <p> setup time approaches infinity, the connections that are in the process of being setup will hold the resources that have already being reserved for an infinite time and thus the blocking probability will approach unity.) This observation is slightly different from what we observed in an earlier study <ref> [5] </ref>. In [5], we studied a 8-node hypercube network and observed that the SOC algorithm yielded a slightly lower maximum achievable throughput than the crankback algorithm. <p> compute the processing delay at each node, average call setup delay and call blocking probability for each O-D pair in the same manner as in section 4. 6.2 The Effect of Propagation Delay The effect of propagation delay on call setup delay and accepted call throughput has been studied in <ref> [5] </ref>. The influence of propagation delay is twofold. First, given the processing delays at the nodes of a path, increasing the propagation delay of this path will also increase the mean call setup delay by the same amount.
Reference: [6] <author> A. Girard, </author> <title> Routing and Dimensioning in Circuit-Switched Networks. </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: The focus of this paper is rather different from previous works on routing in the literature. The analytical models we have developed are based on the link-decomposition method <ref> [6] </ref>, a commonly-used technique in evaluating network performance in the circuit-switching literature. Based on this method, a number of methods have been proposed for computing the end-to-end blocking probability in the circuit-switching literature, e.g. [7, 8, 9, 10, 11, 12]. <p> We assume that, for each source-destination pair, there is a predefined routing tree available at the source node <ref> [6] </ref>. A routing tree can be viewed as a predefined set of possible paths connecting the source and destination node. These paths are tried in some order defined by a routing algorithm when a new call setup arrives. <p> However, given the offered traffic to an individual link and node, we generally can have quite simple but accurate models for computing performance measures for the individual links and nodes. An approximation technique, the so-called link-decomposition method <ref> [6] </ref>, from circuit-switched networks will be used to evaluate the network performance metrics in which we are interested. The original link-decomposition method decomposes the overall network problem into a set of independent link problems.
Reference: [7] <author> M. Butto, G. Colombo, and A. Tonietti, </author> <title> "On Point to Point Losses in Communication Networks," </title> <booktitle> in Eighth International Teletraffic Congress, </booktitle> <year> 1976. </year>
Reference-contexts: The analytical models we have developed are based on the link-decomposition method [6], a commonly-used technique in evaluating network performance in the circuit-switching literature. Based on this method, a number of methods have been proposed for computing the end-to-end blocking probability in the circuit-switching literature, e.g. <ref> [7, 8, 9, 10, 11, 12] </ref>. Whitt [13] also presents a model for calculating the blocking probability in setting up virtual circuits with fixed-path routing in packet-switched networks. All of these works, however, have focussed on computing the blocking probability and ignore the call set up delay. <p> This blocked-call-clear time includes the downstream call processing delays and propagation delays. Unlike <ref> [7, 8, 9, 10, 11, 12] </ref>, we do not assume that call setup time and the blocked-call-clear time are negligible. Indeed, modeling these non-negligible delays and determining their effect on call setup times is one of the goals of this research. <p> After the performance of each link is computed, the overall network performance such as mean end-to-end call setup delay and call blocking probability can be recovered from the individual link-performance measures such as nodal processing delay and link blocking probability. It has been shown in the literature <ref> [7, 8, 9, 10, 11, 12] </ref> that this decomposition method yields reasonable estimates of performance metrics in circuit-switched networks. <p> Additional assumptions required for the link-decomposition method include: * Call set-up requests (either originating at the node or being received from "upstream" nodes) to a node are assumed to arrive according to a Poisson process. * Calls are blocked independently at all links <ref> [7, 8, 13] </ref>. The difficulty with the link-decomposition method arises from the fact that the link-offered traffic and node-offered traffic are unknown and coupled with the individual link and node performance measures. <p> In addition to assuming that exogenous call arrivals are Poisson, we further assume that the arrival process of call setup requests to each node (NCU) is a Poisson process <ref> [7, 8, 13] </ref>. Define X to be the time required by an NCU to process a call request (hereafter, we refer this as the call processing time). Recall that X is an exponential random variable.
Reference: [8] <author> W. S. Chan, </author> <title> "Recursive Algorithms for Computing End-to-End Blocking in a Network with Arbitrary Routing Plan," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-28, </volume> <pages> pp. 153-164, </pages> <month> February </month> <year> 1980. </year>
Reference-contexts: The analytical models we have developed are based on the link-decomposition method [6], a commonly-used technique in evaluating network performance in the circuit-switching literature. Based on this method, a number of methods have been proposed for computing the end-to-end blocking probability in the circuit-switching literature, e.g. <ref> [7, 8, 9, 10, 11, 12] </ref>. Whitt [13] also presents a model for calculating the blocking probability in setting up virtual circuits with fixed-path routing in packet-switched networks. All of these works, however, have focussed on computing the blocking probability and ignore the call set up delay. <p> This blocked-call-clear time includes the downstream call processing delays and propagation delays. Unlike <ref> [7, 8, 9, 10, 11, 12] </ref>, we do not assume that call setup time and the blocked-call-clear time are negligible. Indeed, modeling these non-negligible delays and determining their effect on call setup times is one of the goals of this research. <p> After the performance of each link is computed, the overall network performance such as mean end-to-end call setup delay and call blocking probability can be recovered from the individual link-performance measures such as nodal processing delay and link blocking probability. It has been shown in the literature <ref> [7, 8, 9, 10, 11, 12] </ref> that this decomposition method yields reasonable estimates of performance metrics in circuit-switched networks. <p> Additional assumptions required for the link-decomposition method include: * Call set-up requests (either originating at the node or being received from "upstream" nodes) to a node are assumed to arrive according to a Poisson process. * Calls are blocked independently at all links <ref> [7, 8, 13] </ref>. The difficulty with the link-decomposition method arises from the fact that the link-offered traffic and node-offered traffic are unknown and coupled with the individual link and node performance measures. <p> In addition to assuming that exogenous call arrivals are Poisson, we further assume that the arrival process of call setup requests to each node (NCU) is a Poisson process <ref> [7, 8, 13] </ref>. Define X to be the time required by an NCU to process a call request (hereafter, we refer this as the call processing time). Recall that X is an exponential random variable.
Reference: [9] <author> M. D. Gaudreau, </author> <title> "Recursive Formulas for the Calcu 9 lation of Point-to-Point Congestion," </title> <journal> IEEE Transac--tions on Communications, </journal> <volume> vol. COM-28, </volume> <pages> pp. 313-316, </pages> <month> March </month> <year> 1980. </year>
Reference-contexts: The analytical models we have developed are based on the link-decomposition method [6], a commonly-used technique in evaluating network performance in the circuit-switching literature. Based on this method, a number of methods have been proposed for computing the end-to-end blocking probability in the circuit-switching literature, e.g. <ref> [7, 8, 9, 10, 11, 12] </ref>. Whitt [13] also presents a model for calculating the blocking probability in setting up virtual circuits with fixed-path routing in packet-switched networks. All of these works, however, have focussed on computing the blocking probability and ignore the call set up delay. <p> This blocked-call-clear time includes the downstream call processing delays and propagation delays. Unlike <ref> [7, 8, 9, 10, 11, 12] </ref>, we do not assume that call setup time and the blocked-call-clear time are negligible. Indeed, modeling these non-negligible delays and determining their effect on call setup times is one of the goals of this research. <p> After the performance of each link is computed, the overall network performance such as mean end-to-end call setup delay and call blocking probability can be recovered from the individual link-performance measures such as nodal processing delay and link blocking probability. It has been shown in the literature <ref> [7, 8, 9, 10, 11, 12] </ref> that this decomposition method yields reasonable estimates of performance metrics in circuit-switched networks.
Reference: [10] <author> A. Girard and Y. Ouimet, </author> <title> "End-to-End Blocking for Circuit-Switched Networks: Polynomial Algorithms for Some Special Cases," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-31, </volume> <pages> pp. 1269-1273, </pages> <month> December </month> <year> 1983. </year>
Reference-contexts: The analytical models we have developed are based on the link-decomposition method [6], a commonly-used technique in evaluating network performance in the circuit-switching literature. Based on this method, a number of methods have been proposed for computing the end-to-end blocking probability in the circuit-switching literature, e.g. <ref> [7, 8, 9, 10, 11, 12] </ref>. Whitt [13] also presents a model for calculating the blocking probability in setting up virtual circuits with fixed-path routing in packet-switched networks. All of these works, however, have focussed on computing the blocking probability and ignore the call set up delay. <p> This blocked-call-clear time includes the downstream call processing delays and propagation delays. Unlike <ref> [7, 8, 9, 10, 11, 12] </ref>, we do not assume that call setup time and the blocked-call-clear time are negligible. Indeed, modeling these non-negligible delays and determining their effect on call setup times is one of the goals of this research. <p> After the performance of each link is computed, the overall network performance such as mean end-to-end call setup delay and call blocking probability can be recovered from the individual link-performance measures such as nodal processing delay and link blocking probability. It has been shown in the literature <ref> [7, 8, 9, 10, 11, 12] </ref> that this decomposition method yields reasonable estimates of performance metrics in circuit-switched networks.
Reference: [11] <author> P. M. Lin, B. J. Leon, and C. R. Stewart, </author> <title> "Analysis of Circuit-Switched Networks Employing Originating-Office Control with Spill-Forward," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-26, </volume> <pages> pp. 754-765, </pages> <month> June </month> <year> 1978. </year>
Reference-contexts: The analytical models we have developed are based on the link-decomposition method [6], a commonly-used technique in evaluating network performance in the circuit-switching literature. Based on this method, a number of methods have been proposed for computing the end-to-end blocking probability in the circuit-switching literature, e.g. <ref> [7, 8, 9, 10, 11, 12] </ref>. Whitt [13] also presents a model for calculating the blocking probability in setting up virtual circuits with fixed-path routing in packet-switched networks. All of these works, however, have focussed on computing the blocking probability and ignore the call set up delay. <p> This blocked-call-clear time includes the downstream call processing delays and propagation delays. Unlike <ref> [7, 8, 9, 10, 11, 12] </ref>, we do not assume that call setup time and the blocked-call-clear time are negligible. Indeed, modeling these non-negligible delays and determining their effect on call setup times is one of the goals of this research. <p> After the performance of each link is computed, the overall network performance such as mean end-to-end call setup delay and call blocking probability can be recovered from the individual link-performance measures such as nodal processing delay and link blocking probability. It has been shown in the literature <ref> [7, 8, 9, 10, 11, 12] </ref> that this decomposition method yields reasonable estimates of performance metrics in circuit-switched networks.
Reference: [12] <author> J. R. Yee, </author> <title> Distributed Routing and Flow Control Algorithms for Communications Networks. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering and Computer Sicence, MIT, </institution> <year> 1985. </year>
Reference-contexts: The analytical models we have developed are based on the link-decomposition method [6], a commonly-used technique in evaluating network performance in the circuit-switching literature. Based on this method, a number of methods have been proposed for computing the end-to-end blocking probability in the circuit-switching literature, e.g. <ref> [7, 8, 9, 10, 11, 12] </ref>. Whitt [13] also presents a model for calculating the blocking probability in setting up virtual circuits with fixed-path routing in packet-switched networks. All of these works, however, have focussed on computing the blocking probability and ignore the call set up delay. <p> This blocked-call-clear time includes the downstream call processing delays and propagation delays. Unlike <ref> [7, 8, 9, 10, 11, 12] </ref>, we do not assume that call setup time and the blocked-call-clear time are negligible. Indeed, modeling these non-negligible delays and determining their effect on call setup times is one of the goals of this research. <p> After the performance of each link is computed, the overall network performance such as mean end-to-end call setup delay and call blocking probability can be recovered from the individual link-performance measures such as nodal processing delay and link blocking probability. It has been shown in the literature <ref> [7, 8, 9, 10, 11, 12] </ref> that this decomposition method yields reasonable estimates of performance metrics in circuit-switched networks.
Reference: [13] <author> W. Whitt, </author> <title> "Blocking When Service Is Required From Several Facilities Simultaneously," </title> <journal> AT&T Technical Journal, </journal> <volume> vol. vol. 64, </volume> <pages> pp. 1807-1856, </pages> <month> October, </month> <year> 1985. </year>
Reference-contexts: Based on this method, a number of methods have been proposed for computing the end-to-end blocking probability in the circuit-switching literature, e.g. [7, 8, 9, 10, 11, 12]. Whitt <ref> [13] </ref> also presents a model for calculating the blocking probability in setting up virtual circuits with fixed-path routing in packet-switched networks. All of these works, however, have focussed on computing the blocking probability and ignore the call set up delay. <p> Additional assumptions required for the link-decomposition method include: * Call set-up requests (either originating at the node or being received from "upstream" nodes) to a node are assumed to arrive according to a Poisson process. * Calls are blocked independently at all links <ref> [7, 8, 13] </ref>. The difficulty with the link-decomposition method arises from the fact that the link-offered traffic and node-offered traffic are unknown and coupled with the individual link and node performance measures. <p> In addition to assuming that exogenous call arrivals are Poisson, we further assume that the arrival process of call setup requests to each node (NCU) is a Poisson process <ref> [7, 8, 13] </ref>. Define X to be the time required by an NCU to process a call request (hereafter, we refer this as the call processing time). Recall that X is an exponential random variable.
Reference: [14] <author> M. Gerla and L. Fratta, </author> <title> "Design and Control in Processor Limited Packet Networks," </title> <booktitle> in Twelfth International Teletraffic Congress, </booktitle> <year> 1989. </year>
Reference-contexts: One recent work which has examined the processing aspects of design and control in future BISDN networks is <ref> [14] </ref>. In [14], the authors identify the impact of limited processor capacity on the design and control of high-speed packet-switched networks. General guidelines for processor-limited routing and congestion control algorithms for such networks are discussed. <p> One recent work which has examined the processing aspects of design and control in future BISDN networks is <ref> [14] </ref>. In [14], the authors identify the impact of limited processor capacity on the design and control of high-speed packet-switched networks. General guidelines for processor-limited routing and congestion control algorithms for such networks are discussed.
Reference: [15] <author> I. Cidon and I. Gopal, "PARIS: </author> <title> An Approach to Integrated High-speed Private Networks," </title> <journal> International Journal of Digital & Analog Cabled Systems, </journal> <pages> pp. 77-86, </pages> <month> April-June </month> <year> 1988. </year>
Reference-contexts: Finally, section 7 summarizes this chapter. 2 Network Models We consider a connection-oriented high-speed network consisting of N nodes with each node having some number of incoming and outgoing links. We adopt the network node structure described in <ref> [15, 16] </ref>, in which a node consists of two components: the switching subsystem (SS) and the network control unit (NCU). The SS is a fast hardware switch with relatively limited functionality. The NCU is a slower, but more sophisticated, processor.
Reference: [16] <author> I. Cidon, I. Gopal, and A. Segall, </author> <title> "Fast Connection Establishment in High Speed Networks," </title> <booktitle> ACM SIG-COMM, </booktitle> <pages> pp. 287-296, </pages> <month> September </month> <year> 1990. </year>
Reference-contexts: Finally, section 7 summarizes this chapter. 2 Network Models We consider a connection-oriented high-speed network consisting of N nodes with each node having some number of incoming and outgoing links. We adopt the network node structure described in <ref> [15, 16] </ref>, in which a node consists of two components: the switching subsystem (SS) and the network control unit (NCU). The SS is a fast hardware switch with relatively limited functionality. The NCU is a slower, but more sophisticated, processor.
Reference: [17] <author> R.-H. Hwang, J. F. Kurose, and D. Towsley, </author> <title> "The Effect of Processing Delay and QOS requirements in High Speed Networks," </title> <type> Technical Report 91-52, </type> <institution> Dept. of Computer Science, University of Massachusetts at Amherst, </institution> <year> 1991. </year>
Reference-contexts: The influence of network characteristics on these performance met-rics will be examined through analytical models. In this section, we present the analytical model for the sequential OOC routing algorithm for general network topologies. The reader is referred to <ref> [17] </ref> for the analytical models for the other four routing algorithms. In our analytical models, we make the following assumptions and notations. 1. The network is modeled as a directed graph G = (V; E). 2.
Reference: [18] <author> R.-H. Hwang, J. F. Kurose, and D. Towsley, </author> <title> "State Dependent Routing for Multirate Loss Networks," </title> <booktitle> GLOBECOM'92, </booktitle> <pages> pp. 565-570, </pages> <month> December </month> <year> 1992. </year>
Reference-contexts: The computation of B ` (x) might well require a more detailed state structure (e.g., recording the bandwidth requirements of accepted call), although we note that work on blocking approximations in multirate circuit-switched networks <ref> [18, 19] </ref> suggest that this need not be the case. An exact analytical model for evaluating the performance of the system is too complicated to be of practical use.
Reference: [19] <author> S.-P. Chung and K. W. Ross, </author> <title> "Reduced Load Approximations for Multirate Loss Networks," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 8, </volume> <pages> pp. 1222-1231, </pages> <note> Vol Com-41. </note>
Reference-contexts: The computation of B ` (x) might well require a more detailed state structure (e.g., recording the bandwidth requirements of accepted call), although we note that work on blocking approximations in multirate circuit-switched networks <ref> [18, 19] </ref> suggest that this need not be the case. An exact analytical model for evaluating the performance of the system is too complicated to be of practical use.
Reference: [20] <author> L. Kleinrock, </author> <title> Queueing Systems. </title> <address> New York: </address> <publisher> Wiley-Interscience, </publisher> <year> 1975. </year>
Reference-contexts: Define X to be the time required by an NCU to process a call request (hereafter, we refer this as the call processing time). Recall that X is an exponential random variable. Therefore, the average call processing delay (queueing delay plus service time), T , is given by <ref> [20] </ref>, T = 1 X where is the arrival rate and X is the mean call processing (service) time at a node. (The notation Y will be used to represent the mean of a random variable Y throughout this paper.) Besides the average processing delay, the average end-to-end call set up
Reference: [21] <author> D. Gross and C. M. Harris, </author> <title> Fundamentals of Queueing Theory, </title> <editor> ch. 5.2.2, p. </editor> <volume> 295. </volume> <publisher> John Wiley & Sons, Inc., </publisher> <year> 1985. </year>
Reference-contexts: service rate, we can compute the steady state distribution of the number of calls currently allocated bandwidth at this link, = ( 0 ; 1 ; :::; C ) where x is the steady state probability that there are x calls holding resources at this link and is given by <ref> [21] </ref> x = i=0 ( ~ (i)=)=x! j=0 i=0 ( ~ (i)=)=j! Once is known, the probability that an arriving call is blocked at this link due to admission control is given by L ` = =0 4.3 Offered Call Requests, Mean Call Setup Delay, and Call Blocking Probability The computation
Reference: [22] <institution> Merit Network Information Center Services, </institution> <note> Statistical Reports Pertaining to the NSFNET Backbone Networks. accessible via anonynmous FTP NIS.NSF.NET. </note>
Reference-contexts: Thus, the network topology we study consists of 12 nodes, 30 T3-links and 132 source/destination pairs. Each node is assumed to have the same processing capacity. We assume the exogenous call arrival rate for each source/destination pair is proportional to the traffic load at each node reported in NSFNET <ref> [22] </ref>. The reader is referred to [23] for the detailed traffic model setup. In the following sections, we first validate our analytical models by simulation results.
Reference: [23] <author> R.-H. Hwang, </author> <title> "Routing in High-Speed Networks," </title> <type> Technical Report 93-43, </type> <institution> Dept. of Computer Science, University of Massachusetts at Amherst, </institution> <year> 1993. </year> <month> 10 </month>
Reference-contexts: Each node is assumed to have the same processing capacity. We assume the exogenous call arrival rate for each source/destination pair is proportional to the traffic load at each node reported in NSFNET [22]. The reader is referred to <ref> [23] </ref> for the detailed traffic model setup. In the following sections, we first validate our analytical models by simulation results.
References-found: 23

