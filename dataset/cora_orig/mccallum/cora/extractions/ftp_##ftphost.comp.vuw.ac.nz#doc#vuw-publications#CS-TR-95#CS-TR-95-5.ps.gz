URL: ftp://ftphost.comp.vuw.ac.nz/doc/vuw-publications/CS-TR-95/CS-TR-95-5.ps.gz
Refering-URL: http://www.progsoc.uts.edu.au/~geldridg/cpp/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: C++  
Author: Robert Biddle and Ewan Tempero 
Note: What every manager should know about  
Affiliation: VICTORIA UNIVERSITY OF WELLINGTON VUW Department of Computer Science  
Abstract: PO Box 600 Wellington New Zealand Tel: +64 4 471 5328 Fax: +64 4 495 5232 Internet: Tech.Reports@comp.vuw.ac.nz Technical Report CS-TR-95/5 May 8, 1995 Abstract C++ is the most commonly used object-oriented software development tool in New Zealand. Like any tool, C++ works best when it is used properly. This requires understanding what its intended use is, how to use it effectively, and what its benefits are. In this paper we explain the philosophy of C++ and discuss its costs and benefits. Our intended audience is people who have not had much exposure to object technology and C++, however we expect that more experienced readers will find some points of interest. Publishing Information This paper appeared in the proceedings to Uniforum '95, May 1995. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Grady Booch. </author> <title> Object-Oriented Analysis and Design with Applications. </title> <journal> Ben-jamin/Cummings, </journal> <note> second edition, </note> <year> 1994. </year>
Reference-contexts: The novices can then better appreciate what their mentors are doing, meaning they can learn by watching the experienced people do their jobs. There are costs associated with adopting object technology There are two main costs associated with adopting object technology: run-time performance and start-up costs <ref> [1] </ref>. 8 The run-time costs are due such things as the dynamic lookup required for polymorphism and the fact that object-oriented design tends to require a large number of function calls. A language that does static type-checking (such as C++) can reduce the dynamic lookups to just the necessary ones.
Reference: [2] <author> Marshall P. Cline and Greg A. Lomow. C++ FAQs: </author> <title> Frequently Asked Questions. </title> <publisher> Addison-Wesley, </publisher> <year> 1995. </year>
Reference-contexts: Furthermore, there is more C++ experience in New Zealand than there is experience with any other object-oriented language. Finally, there are books that will help the transition from novice to experienced C++ programmer (for example, [6] and <ref> [2] </ref>). The best way to learn C++ is to learn C++ Because C++ is an object-oriented language, it is sometimes suggested that the best way to learn it is to first learn some other "purer" object-oriented language.
Reference: [3] <author> Richard P. </author> <title> Feynman. QED: The strange theory of light and matter. </title> <publisher> Princeton University Press, </publisher> <year> 1985. </year> <month> 9 </month>
Reference-contexts: Deciding what the analogy is requires the developer and the customer agreeing on a good description of the problem. 2 For example, according to Richard Feynman, light doesn't travel in straight lines! <ref> [3] </ref> 2 Even a good description of the problem can be misleading as it will usually contain concepts that must be present to provide the context of the problem, but do not need to appear in the application. (The application is "Manage boats for rent on a lake".
Reference: [4] <author> Brian W. Kernighan and Dennis M. Ritchie. </author> <title> The C Programming Language. </title> <publisher> Prentice Hall, </publisher> <address> 2nd edition, </address> <year> 1988. </year>
Reference: [5] <author> Andrew Koenig and Bjarne Stroustrup. </author> <title> C++: As close to C as possible | but no closer. The C++ Report, </title> <month> July </month> <year> 1989. </year>
Reference: [6] <author> Scott Meyers. </author> <title> Effective C++: 50 Specific Ways to Improve Your Programs and Designs. Addison-Wesley, </title> <booktitle> Professional Computing Series, </booktitle> <year> 1992. </year>
Reference-contexts: Furthermore, there is more C++ experience in New Zealand than there is experience with any other object-oriented language. Finally, there are books that will help the transition from novice to experienced C++ programmer (for example, <ref> [6] </ref> and [2]). The best way to learn C++ is to learn C++ Because C++ is an object-oriented language, it is sometimes suggested that the best way to learn it is to first learn some other "purer" object-oriented language.
Reference: [7] <author> Bjarne Stroustrup. </author> <title> The C++ Programming Language. </title> <publisher> Addison-Wesley, </publisher> <address> 2nd edition, </address> <year> 1991. </year>
Reference-contexts: Another problem is the lack of training material for beginners. There are a huge number of books that claim to teach C++, however they generally tend to concentrate on the syntax and obvious points. At the moment, the best bet is probably Stroustrup's book <ref> [7] </ref>. It is not the greatest teaching book in the world, but it is relatively complete and so makes a useful reference to have available. 7 There are benefits associated with changing to C++ Although there are differences between compilers, at least they exist.
Reference: [8] <author> Bjarne Stroustrup. </author> <title> The Design and Evolution of C++. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year> <month> 10 </month>
References-found: 8

