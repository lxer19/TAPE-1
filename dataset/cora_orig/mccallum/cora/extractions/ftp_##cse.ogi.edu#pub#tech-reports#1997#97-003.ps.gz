URL: ftp://cse.ogi.edu/pub/tech-reports/1997/97-003.ps.gz
Refering-URL: ftp://cse.ogi.edu/pub/tech-reports/README.html
Root-URL: http://www.cse.ogi.edu
Email: walpole@cse.ogi.edu  
Title: Flow and Congestion Control for Internet Media Streaming Applications  
Author: Shanwei Cen, Calton Pu and Jonathan Walpole scen, calton, 
Affiliation: Department of Computer Science and Engineering Oregon Graduate Institute of Science and Technology  
Abstract: This paper proposes a new flow and congestion control scheme, SCP (Streaming Control Protocol), for real-time streaming of continuous multimedia data across the Internet. The design of SCP arose from our long-time experience in building and using an adaptive real-time streaming video player. The proposed scheme is designed to allow SCP-based streaming traffic to live in harmony with each other, and with TCP-based traffic. At the same time, it improves smoothness in streaming, and ensures low, predictable latency and effective use of network bandwidth. SCP also incorporates mobility awareness and supports limited data rates and possible pauses in streaming. In this paper, we present a description and analysis of SCP, and an evaluation of it through Internet-based experiments. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Berners-Lee, T., Fielding, R., and Nielsen, H. </author> <title> Hypertext transfer protocol - HTTP/1.0. Internet RFC 1945, </title> <month> May </month> <year> 1996. </year>
Reference-contexts: Without this behavior, their potential to generate very high data rates could cause serious congestion in the Internet, and perhaps another Internet congestion collapse [9, 6]. Consequently, such mechanisms must operate in harmony with TCP [9], which is the base for the currently dominant FTP [13] and Web/HTTP <ref> [1] </ref> traffic. They should ensure that multiple streaming sessions share the network among themselves and with other non-streaming traffic in a fair manner. Finally, they should attempt to minimize latency and maximize the smoothness of the streaming data.
Reference: [2] <author> Busse, I., Deffner, B., and Schulzrinne, H. </author> <title> Dynamic QoS control of multimedia applications based on RTP. </title> <booktitle> Computer Communications 19 (Jan-uary 1996), </booktitle> <pages> 49-58. </pages>
Reference-contexts: Rate-based feedback can be found in the Berkeley MPEG player [15], the Vosaic player [5], etc. Rate-based flow control based on RTP [16] as proposed in <ref> [2] </ref> works with multicast as well as unicast streaming applications. <p> We have observed virtually no packet loss for connections between OGI and Georgia Institute of Technology in quiet evenings and weekends, but more than 10% during rush hours. For example, <ref> [2] </ref> proposed fix packet drop rate thresholds, such as 2% for data rate increase, and 4% for decrease. These thresholds would make a streaming session more aggressive than TCP in quiet hours, and prevents the streaming sessions from sending any data during rush hours.
Reference: [3] <author> Cen, S. </author> <title> A Software Feedback Toolkit and Its Applications in Adaptive Multimedia Systems. </title> <type> PhD thesis, </type> <institution> Oregon Graduate Institute of Science and Technology, </institution> <year> 1997. </year> <note> In preparation. </note>
Reference-contexts: Because of this fundamental difference, unicast and multicast streaming need to be treated differently in flow and con 1 scheme that has the properties described above. SCP has been incorporated into our adaptive streaming video player <ref> [3] </ref>. Similar to the congestion control in TCP, SCP employs sender-initiated congestion detection through positive acknowledgement, and uses a congestion-window based policy to back-off exponentially. During the startup phase, SCP uses TCP-style slow-start policy to quickly discover the available network bandwidth. <p> Removing the retransmission part from TCP eliminates the resultant problems of latency unpredictability and wasted network bandwidth. But due to TCP's congestion control algorithm, the streaming remains inherently bursty. 3 SCP Architecture This section presents the design of SCP following a hierarchical method for adaptive system construction <ref> [3] </ref>. SCP is composed of a set of policies for congestion window size adjustment, each of which has a domain (network and session condition) in which it is applicable. <p> E 2 , we have ^r 1 = ^r 2 = ^r l 2 , indicating that the two sessions split the network bandwidth evenly. 5 Implementation of SCP An SCP package has been implemented as a layer on top of UDP, based on a toolkit for developing adaptive systems <ref> [3] </ref>, which is also being developed at OGI. This SCP package has also been incorporated into the OGI adaptive streaming video player [4, 3]. In this section, we briefly discuss the the parameter estimators and various imple mentation issues. More details can be found in [3]. 5.1 Estimation of the Parameters <p> This SCP package has also been incorporated into the OGI adaptive streaming video player <ref> [4, 3] </ref>. In this section, we briefly discuss the the parameter estimators and various imple mentation issues. <p> toolkit for developing adaptive systems <ref> [3] </ref>, which is also being developed at OGI. This SCP package has also been incorporated into the OGI adaptive streaming video player [4, 3]. In this section, we briefly discuss the the parameter estimators and various imple mentation issues. More details can be found in [3]. 5.1 Estimation of the Parameters Base RTT ^ T brtt , average RTT ^ T rtt , RTT standard deviation ^ D rtt , and timer duration ^ rto are estimated based on the history of the raw RTT measurements of the current session. ^ T brtt is estimated as <p> SCP streams are also able to share the network bandwidth with TCP streams across the same network links. These properties of SCP makes it a promising protocol for real-time multimedia streaming across the Internet. SCP has been incorporated into the OGI adaptive streaming video player <ref> [3] </ref>. Based on the available network bandwidth discovered by SCP, the player adapts the video presentation quality in multiple dimensions, including spatial resolution, frame rate, end-end latency, etc. The experimental results in [4] show the robustness and adaptability of the streaming player.
Reference: [4] <author> Cen, S., Pu, C., Staehli, R., Cowan, C., and Walpole, J. </author> <title> A distributed real-time MPEG video audio player. </title> <booktitle> NOSSDAV'95, Lecture Notes in Computer Science 1018 (1995), </booktitle> <pages> 151-162. </pages>
Reference-contexts: 1 Introduction The real-time distribution of continuous audio and video data via streaming multimedia applications accounts for a significant, and expanding, portion of the Internet traffic. Many research prototype media players have been produced, including the Berkeley MPEG player [15], the OGI (Oregon Graduate Institute) distributed video player <ref> [4] </ref>, the Vosaic player [5], and the Mbone tools [11]. Over the past year, many industrial streaming media players have also been released, such as the Netscape streaming video plug-ins [12], RealAudio [14] and Vxtreme [17]. <p> This SCP package has also been incorporated into the OGI adaptive streaming video player <ref> [4, 3] </ref>. In this section, we briefly discuss the the parameter estimators and various imple mentation issues. <p> SCP has been incorporated into the OGI adaptive streaming video player [3]. Based on the available network bandwidth discovered by SCP, the player adapts the video presentation quality in multiple dimensions, including spatial resolution, frame rate, end-end latency, etc. The experimental results in <ref> [4] </ref> show the robustness and adaptability of the streaming player. Acknowledgments Discussions in the Quasar Group at CSE, OGI greatly motivated this work. Special thanks to Jon Inouye for his insights to TCP and other network protocols, and discussions on the ideas in this work. We are grateful to Prof.
Reference: [5] <author> Chen, Z., Tan, S.-M., Campbell, R. H., and Li, Y. </author> <title> Real time video and audio in the World Wide Web. </title> <booktitle> In Fourth International World Wide Web Conference (Boston, </booktitle> <address> Massachussetts, </address> <month> December </month> <year> 1995). </year>
Reference-contexts: Many research prototype media players have been produced, including the Berkeley MPEG player [15], the OGI (Oregon Graduate Institute) distributed video player [4], the Vosaic player <ref> [5] </ref>, and the Mbone tools [11]. Over the past year, many industrial streaming media players have also been released, such as the Netscape streaming video plug-ins [12], RealAudio [14] and Vxtreme [17]. <p> In a rate-based feedback scheme, the receiver continuously monitors the quality of streaming, such as receiving data rate or loss rate/ratio, and sends feedback messages to the sender to adjust the data rate accordingly. Rate-based feedback can be found in the Berkeley MPEG player [15], the Vosaic player <ref> [5] </ref>, etc. Rate-based flow control based on RTP [16] as proposed in [2] works with multicast as well as unicast streaming applications.
Reference: [6] <author> Floyd, S., and Fall, K. </author> <title> Router mechanisms to support end-to-end congestion control. </title> <type> Tech. Rep. 97, </type> <institution> Network Research Group, Lawrence Berkeley National Laboratory, </institution> <month> February </month> <year> 1997. </year> <month> ftp://ftp.ee.lbl.gov/papers/collapse.ps. </month>
Reference-contexts: Similarly, they should be sensitive to increases in network congestion, and should respond to them by backing-off. Without this behavior, their potential to generate very high data rates could cause serious congestion in the Internet, and perhaps another Internet congestion collapse <ref> [9, 6] </ref>. Consequently, such mechanisms must operate in harmony with TCP [9], which is the base for the currently dominant FTP [13] and Web/HTTP [1] traffic. They should ensure that multiple streaming sessions share the network among themselves and with other non-streaming traffic in a fair manner.
Reference: [7] <author> Inouye, J., Cen, S., Pu, C., and Walpole, J. </author> <title> System support for mobile multimedia applications. </title> <note> In NOSSDAV'97 (May 19-21 1997), pp. 143-154. To appear. </note>
Reference-contexts: SCP is designed to handle these characteristics properly. SCP also has mobile awareness <ref> [7] </ref>. Its internal states and parameter estimators can be reset upon mobility events such as switching between different network interfaces (e.g Ethernet and wireless PPP), the slow-start policy is then invoked to quickly discover the capacity of the new network connection. This paper is organized as follows.
Reference: [8] <author> Jacobs, S., and Eleftheriadis, A. </author> <title> Real-time dynamic rate shaping and control for Internet video application. </title> <booktitle> In Workshop on Multimedia Signal Processing (Princeton, </booktitle> <address> New Jersey, </address> <month> June </month> <year> 1997). </year>
Reference-contexts: It wastes network band-width by retransmitting late data. TCP is also inherently bursty even in steady-state, due to its repeated process of increasing its congestion window size until packets are lost, then backing off exponentially. As discussed in <ref> [8] </ref>, it is also possible to use TCP minus retransmission for streaming application. Removing the retransmission part from TCP eliminates the resultant problems of latency unpredictability and wasted network bandwidth.
Reference: [9] <author> Jacobson, V. </author> <title> Congestion avoidance and control. </title> <booktitle> In SIGCOMM'88 (August 1988), </booktitle> <pages> pp. 79-88. 10 </pages>
Reference-contexts: Similarly, they should be sensitive to increases in network congestion, and should respond to them by backing-off. Without this behavior, their potential to generate very high data rates could cause serious congestion in the Internet, and perhaps another Internet congestion collapse <ref> [9, 6] </ref>. Consequently, such mechanisms must operate in harmony with TCP [9], which is the base for the currently dominant FTP [13] and Web/HTTP [1] traffic. They should ensure that multiple streaming sessions share the network among themselves and with other non-streaming traffic in a fair manner. <p> Without this behavior, their potential to generate very high data rates could cause serious congestion in the Internet, and perhaps another Internet congestion collapse [9, 6]. Consequently, such mechanisms must operate in harmony with TCP <ref> [9] </ref>, which is the base for the currently dominant FTP [13] and Web/HTTP [1] traffic. They should ensure that multiple streaming sessions share the network among themselves and with other non-streaming traffic in a fair manner. <p> We would expect the same threshold selection problem mentioned above to show up in this scheme. Another choice for streaming flow and congestion control is HTTP [1]/TCP <ref> [9] </ref>. The Internet has proved its robustness, and its ability to share the bandwidth between multiple sessions. TCP has been used by many media streaming players (mostly as an option instead of as default), including RealAudio [14], Vxtreme [17], several Netscape plug-ins [12], etc. <p> The ^ T rtt and ^ D rtt estimations are done in a way similar to that in TCP <ref> [9] </ref>. <p> T rtt is the result of applying a lowpass filter 3 to the sequence of raw RTT measurements. ^ D rtt is a lowpass filtering of the difference between ^ T rtt and the raw RTT measurements. ^ rto is also estimated in a way similar to that in TCP <ref> [9] </ref>, which proposed ^ rto = ^ T rtt + 4 ^ D rtt . Unfortunately, in our implementation with 10ms clock resolution, the above ^ rto estimator results in timers being too sensitive to jitter in RTT.
Reference: [10] <author> Mahdavi, J., and Floyd, S. </author> <title> TCP-friendly uni--cast rate-based flow control. end2end mailing list, </title> <address> ftp://ftp.isi.edu/end2end, </address> <month> January </month> <year> 1997. </year>
Reference-contexts: If two sessions competing the same set of bottleneck links, it is inevitable that one session come up with higher thresholds than the other, and eventually force the latter to bail out completely. In <ref> [10] </ref>, a TCP-friendly unicast rate-based flow control scheme is proposed. By having the the sender (instead of the receiver) to monitor the overall packet loss ratio based on the acknowledgements from the receiver.
Reference: [11] <author> McCanne, S., and Jacobson, V. </author> <title> vic: A Flexible Framework for Packet Video. </title> <booktitle> In Proceedings of the Third ACM Conference and Exhibition (Multimedia '95) (San Francisco, </booktitle> <address> California, </address> <month> November </month> <year> 1995), </year> <pages> pp. 511-522. </pages>
Reference-contexts: Many research prototype media players have been produced, including the Berkeley MPEG player [15], the OGI (Oregon Graduate Institute) distributed video player [4], the Vosaic player [5], and the Mbone tools <ref> [11] </ref>. Over the past year, many industrial streaming media players have also been released, such as the Netscape streaming video plug-ins [12], RealAudio [14] and Vxtreme [17].
Reference: [12] <author> Netscape Communications Corporation. </author> <title> Netscape plug-ins: Audio/video. http:// home. netscape. com /comprod /products /navigator /version 2.0 /plugins /audio-video.html, </title> <year> 1997. </year>
Reference-contexts: Over the past year, many industrial streaming media players have also been released, such as the Netscape streaming video plug-ins <ref> [12] </ref>, RealAudio [14] and Vxtreme [17]. It is expected that real-time media streaming traffic will increase rapidly, and will soon make up a significant portion of the total Internet bandwidth. <p> The Internet has proved its robustness, and its ability to share the bandwidth between multiple sessions. TCP has been used by many media streaming players (mostly as an option instead of as default), including RealAudio [14], Vxtreme [17], several Netscape plug-ins <ref> [12] </ref>, etc. However, TCP is designed for reliable distribution of non-real-time data. When used for media streaming, it has the drawbacks of unpredictable latency, wasted network bandwidth, and bursty data flow. TCP implements reliability through infinite retransmission, causing unpredictable and unbounded latency, es 2 pecially in congested networks.
Reference: [13] <author> Postel, J., and Reynolds, J. </author> <title> File transfer protocol. Internet RFC 0959, </title> <month> October </month> <year> 1985. </year>
Reference-contexts: Without this behavior, their potential to generate very high data rates could cause serious congestion in the Internet, and perhaps another Internet congestion collapse [9, 6]. Consequently, such mechanisms must operate in harmony with TCP [9], which is the base for the currently dominant FTP <ref> [13] </ref> and Web/HTTP [1] traffic. They should ensure that multiple streaming sessions share the network among themselves and with other non-streaming traffic in a fair manner. Finally, they should attempt to minimize latency and maximize the smoothness of the streaming data.
Reference: [14] <institution> Progressive Networks. </institution> <note> HTTP versus RealAudio client-server streaming. http:// www. realaudio. com /help /content /http vs ra.html, </note> <year> 1996. </year>
Reference-contexts: Over the past year, many industrial streaming media players have also been released, such as the Netscape streaming video plug-ins [12], RealAudio <ref> [14] </ref> and Vxtreme [17]. It is expected that real-time media streaming traffic will increase rapidly, and will soon make up a significant portion of the total Internet bandwidth. <p> Another choice for streaming flow and congestion control is HTTP [1]/TCP [9]. The Internet has proved its robustness, and its ability to share the bandwidth between multiple sessions. TCP has been used by many media streaming players (mostly as an option instead of as default), including RealAudio <ref> [14] </ref>, Vxtreme [17], several Netscape plug-ins [12], etc. However, TCP is designed for reliable distribution of non-real-time data. When used for media streaming, it has the drawbacks of unpredictable latency, wasted network bandwidth, and bursty data flow.
Reference: [15] <author> Rowe, L. A., et al. </author> <title> MPEG video in software: Representation, transmission and playback. </title> <booktitle> In Symposium on Elec. </booktitle> <institution> Imaging Sci. and Tech. </institution> <address> (San Jose, California, USA, </address> <month> February </month> <year> 1994). </year>
Reference-contexts: 1 Introduction The real-time distribution of continuous audio and video data via streaming multimedia applications accounts for a significant, and expanding, portion of the Internet traffic. Many research prototype media players have been produced, including the Berkeley MPEG player <ref> [15] </ref>, the OGI (Oregon Graduate Institute) distributed video player [4], the Vosaic player [5], and the Mbone tools [11]. Over the past year, many industrial streaming media players have also been released, such as the Netscape streaming video plug-ins [12], RealAudio [14] and Vxtreme [17]. <p> In a rate-based feedback scheme, the receiver continuously monitors the quality of streaming, such as receiving data rate or loss rate/ratio, and sends feedback messages to the sender to adjust the data rate accordingly. Rate-based feedback can be found in the Berkeley MPEG player <ref> [15] </ref>, the Vosaic player [5], etc. Rate-based flow control based on RTP [16] as proposed in [2] works with multicast as well as unicast streaming applications.
Reference: [16] <author> Schulzrinne, H., Casner, S., Frederick, R., and Jacobson, V. RTP: </author> <title> A transport protocol for real-time applications. </title> <type> Internet Draft, </type> <month> March </month> <year> 1995. </year>
Reference-contexts: Rate-based feedback can be found in the Berkeley MPEG player [15], the Vosaic player [5], etc. Rate-based flow control based on RTP <ref> [16] </ref> as proposed in [2] works with multicast as well as unicast streaming applications.
Reference: [17] <author> Vxtreme, Inc. </author> <title> Vxtreme streaming video player. </title> <address> http:// www. vxtreme. com, </address> <year> 1997. </year> <month> 11 </month>
Reference-contexts: Over the past year, many industrial streaming media players have also been released, such as the Netscape streaming video plug-ins [12], RealAudio [14] and Vxtreme <ref> [17] </ref>. It is expected that real-time media streaming traffic will increase rapidly, and will soon make up a significant portion of the total Internet bandwidth. <p> Another choice for streaming flow and congestion control is HTTP [1]/TCP [9]. The Internet has proved its robustness, and its ability to share the bandwidth between multiple sessions. TCP has been used by many media streaming players (mostly as an option instead of as default), including RealAudio [14], Vxtreme <ref> [17] </ref>, several Netscape plug-ins [12], etc. However, TCP is designed for reliable distribution of non-real-time data. When used for media streaming, it has the drawbacks of unpredictable latency, wasted network bandwidth, and bursty data flow.
References-found: 17

