URL: http://www.iscs.nus.sg/~plong/papers/eff_mot.ps
Refering-URL: 
Root-URL: 
Title: Efficient Cost Measures for Motion Compensation at Low Bit Rates (extended abstract)  
Author: Dzung T. Hoang Philip M. Long Jeffrey Scott Vitter 
Address: Box 90129 Durham, NC 27708-0129  
Affiliation: Department of Computer Science Duke University  
Abstract: We make a case that, even with severe efficiency constraints, taking the number of bits to code each motion vector into account when estimating motion for video compression results in significantly better performance at low bit rates, using simulation studies on established benchmark image sequences. In particular, we examine an algorithm that differs from a "vanilla" implementation of the H.261 standard by choosing motion vectors to minimize a cost function of prediction error and the number of bits to code a particular motion vector, where the coefficients of the cost function are adapted on-line using the Widrow-Hoff rule. We show that this algorithm performs comparably to a variety of more idealized, computationally intensive methods we examined in earlier papers and substantially better than the original "vanilla" method, which ignores the number of bits to code the motion vector when choosing it.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. R. Jain and A. K. Jain, </author> <title> "Displacement measurement and its application in interframe coding", </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-29, no. 12, </volume> <pages> pp. 1799-1808, </pages> <year> 1981. </year>
Reference-contexts: 1 Introduction Hybrid video coding that combines block-matching motion compensation (BMMC) <ref> [1] </ref> with transform coding of the residual is a popular scheme for video compression adopted by international standards such as H.261 [2, 3] and MPEG [4].
Reference: [2] <author> CCITT, </author> <title> "Video codec for audiovisual services at p fi 64 kbit/s", </title> <month> Aug. </month> <year> 1990, </year> <title> Study Group XV|Report R 37. </title>
Reference-contexts: 1 Introduction Hybrid video coding that combines block-matching motion compensation (BMMC) [1] with transform coding of the residual is a popular scheme for video compression adopted by international standards such as H.261 <ref> [2, 3] </ref> and MPEG [4]. Motion compensation is a technique that exploits the typically strong correlation between successive frames of a video sequence by coding motion vectors that tell the decoder where to look on the previous frame for predictions of the intensity of each pixel in the current frame.
Reference: [3] <author> M. Liou, </author> <title> "Overview of the pfi64 kbit/s video coding standard", </title> <journal> Communications of the ACM, </journal> <volume> vol. 34, no. 4, </volume> <pages> pp. 60-63, </pages> <month> Apr. </month> <year> 1991. </year>
Reference-contexts: 1 Introduction Hybrid video coding that combines block-matching motion compensation (BMMC) [1] with transform coding of the residual is a popular scheme for video compression adopted by international standards such as H.261 <ref> [2, 3] </ref> and MPEG [4]. Motion compensation is a technique that exploits the typically strong correlation between successive frames of a video sequence by coding motion vectors that tell the decoder where to look on the previous frame for predictions of the intensity of each pixel in the current frame.
Reference: [4] <author> D. Le Gall, </author> <title> "MPEG: A video compression standard for multimedia applications", </title> <journal> Communications of the ACM, </journal> <volume> vol. 34, no. 4, </volume> <pages> pp. 46-58, </pages> <month> Apr. </month> <year> 1991. </year>
Reference-contexts: 1 Introduction Hybrid video coding that combines block-matching motion compensation (BMMC) [1] with transform coding of the residual is a popular scheme for video compression adopted by international standards such as H.261 [2, 3] and MPEG <ref> [4] </ref>. Motion compensation is a technique that exploits the typically strong correlation between successive frames of a video sequence by coding motion vectors that tell the decoder where to look on the previous frame for predictions of the intensity of each pixel in the current frame.
Reference: [5] <author> H. Li, A. Lundmark, and R. Forchheimer, </author> <title> "Image sequence coding at very low bitrates: A review", </title> <journal> IEEE Transactions on Image Processing, </journal> <volume> vol. 3, no. 5, </volume> <pages> pp. 589-609, </pages> <month> Sept. </month> <year> 1994. </year>
Reference-contexts: At such low bit rates, the coding of motion vectors and side information takes up a significant portion of the bandwidth. This observation had been previously made in <ref> [5] </ref>, but much of the work on block-matching motion compensation remained focused on speeding up the motion search until [6], where we described techniques that explicitly minimize rate (which includes coding of residuals, motion vector, and side information) when choosing motion vectors.
Reference: [6] <author> D. T. Hoang, P. M. Long, and J. S. Vitter, </author> <title> "Explicit bit-minimization for motion-compensated video coding", </title> <booktitle> in Proceedings of the 1994 Data Compression Conference, </booktitle> <address> Snowbird, UT, </address> <month> Mar. </month> <year> 1994, </year> <pages> pp. 175-184, </pages> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: At such low bit rates, the coding of motion vectors and side information takes up a significant portion of the bandwidth. This observation had been previously made in [5], but much of the work on block-matching motion compensation remained focused on speeding up the motion search until <ref> [6] </ref>, where we described techniques that explicitly minimize rate (which includes coding of residuals, motion vector, and side information) when choosing motion vectors. In [7] we extended this work by performing motion estimation to minimize a combination of rate and distortion. <p> In [7] we extended this work by performing motion estimation to minimize a combination of rate and distortion. In related work, Chung, Kossentini and Smith [8] considered rate-distortion optimizations for motion estimation in a video coder based on subband coding and vector quantization. The explicit minimization algorithms described in <ref> [6, 7] </ref> are computationally intensive and therefore not practical for use in real-time, cost-effective solutions for desktop video-conferencing and video-phone. However, they serve to demonstrate that by taking the coding of motion vectors into consideration when performing motion estimation, we can get appreciably better results. <p> We provide experimental results for coding benchmark videos typically encountered in video-phone and video-conferencing applications. In the next section, we provide a brief overview of the pfi64 standard. In Section 3, we review the explicit minimization coders described in <ref> [6, 7] </ref>. We then describe heuristic cost functions based on the prediction error and motion vector code-length in Section 4. <p> The PVRG coder implements many, but not all, of the RM8 heuristics. Most notably, full-search motion estimation is used instead of the three-step process. Details about the PVRG implementation can be found in [10]. 3 Explicit Minimization Algorithms In this section, we briefly describe the explicit minimization algorithms of <ref> [6, 7] </ref>. The first two algorithms, M1 and M2, minimize code-length and the third, RD, minimizes a combination of code-length and distortion. The RM8 simulation model and the PVRG coder both perform motion estimation to minimize prediction error. Algorithm M1 applies bit-minimization to estimate motion.
Reference: [7] <author> D. T. Hoang, P. M. Long, and J. S. Vitter, </author> <title> "Rate-distortion optimizations for motion estimation in low-bit-rate video coding", </title> <booktitle> in Proceedings SPIE 1996 Digital Video Compression Conference, </booktitle> <address> San Jose, CA, </address> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: In <ref> [7] </ref> we extended this work by performing motion estimation to minimize a combination of rate and distortion. In related work, Chung, Kossentini and Smith [8] considered rate-distortion optimizations for motion estimation in a video coder based on subband coding and vector quantization. <p> In [7] we extended this work by performing motion estimation to minimize a combination of rate and distortion. In related work, Chung, Kossentini and Smith [8] considered rate-distortion optimizations for motion estimation in a video coder based on subband coding and vector quantization. The explicit minimization algorithms described in <ref> [6, 7] </ref> are computationally intensive and therefore not practical for use in real-time, cost-effective solutions for desktop video-conferencing and video-phone. However, they serve to demonstrate that by taking the coding of motion vectors into consideration when performing motion estimation, we can get appreciably better results. <p> However, they serve to demonstrate that by taking the coding of motion vectors into consideration when performing motion estimation, we can get appreciably better results. In <ref> [7] </ref>, we reported on preliminary experiments regarding the use of efficiently computed cost measures for motion estimation that take into account the coding of motion vectors as well as the prediction error energy. <p> We provide experimental results for coding benchmark videos typically encountered in video-phone and video-conferencing applications. In the next section, we provide a brief overview of the pfi64 standard. In Section 3, we review the explicit minimization coders described in <ref> [6, 7] </ref>. We then describe heuristic cost functions based on the prediction error and motion vector code-length in Section 4. <p> The PVRG coder implements many, but not all, of the RM8 heuristics. Most notably, full-search motion estimation is used instead of the three-step process. Details about the PVRG implementation can be found in [10]. 3 Explicit Minimization Algorithms In this section, we briefly describe the explicit minimization algorithms of <ref> [6, 7] </ref>. The first two algorithms, M1 and M2, minimize code-length and the third, RD, minimizes a combination of code-length and distortion. The RM8 simulation model and the PVRG coder both perform motion estimation to minimize prediction error. Algorithm M1 applies bit-minimization to estimate motion. <p> Since H2 has to try out three coding control choices, it will be about three times slower than H1. However, H2 gives us an indication of the performance that is achievable under H1 by improving the coding control. Algorithms H1 and H2 were presented in <ref> [7] </ref>. 4.1 Heuristic Cost Function Let ~ E (~v) denote a measure of the prediction error that results from using motion vector ~v to code the current macroblock.
Reference: [8] <author> W. C. Chung, F. Kossentini, and M. J. T. Smith, </author> <title> "A new approach to scalable video coding", </title> <booktitle> in Proceedings of the 1995 Data Compression Conference, </booktitle> <address> Snowbird, UT, </address> <month> Mar. </month> <year> 1995, </year> <pages> pp. 381-390, </pages> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: In [7] we extended this work by performing motion estimation to minimize a combination of rate and distortion. In related work, Chung, Kossentini and Smith <ref> [8] </ref> considered rate-distortion optimizations for motion estimation in a video coder based on subband coding and vector quantization. The explicit minimization algorithms described in [6, 7] are computationally intensive and therefore not practical for use in real-time, cost-effective solutions for desktop video-conferencing and video-phone.
Reference: [9] <author> CCITT, </author> <title> "Description of reference model 8 (RM8)", </title> <month> June </month> <year> 1989, </year> <title> Study Group XV|Document 525. </title>
Reference-contexts: The p fi 64 standard does not specify how to make coding decisions. However, to aid in the evaluation of different coding techniques, the CCITT provides an encoder simulation model called Reference Model 8 (RM8) <ref> [9] </ref>. A fast three-step search is used for motion estimation. RM8 specifies several heuristics used to make the coding decisions.
Reference: [10] <author> A. C. Hung, "PVRG-p64 codec 1.1", </author> <year> 1993, </year> <note> Available from Stanford University by anonymous ftp. </note>
Reference-contexts: The PVRG coder implements many, but not all, of the RM8 heuristics. Most notably, full-search motion estimation is used instead of the three-step process. Details about the PVRG implementation can be found in <ref> [10] </ref>. 3 Explicit Minimization Algorithms In this section, we briefly describe the explicit minimization algorithms of [6, 7]. The first two algorithms, M1 and M2, minimize code-length and the third, RD, minimizes a combination of code-length and distortion.
Reference: [11] <author> Y. Shoham and A. Gersho, </author> <title> "Efficient bit allocation for an arbitrary set of quantizers", </title> <journal> IEEE Transactions on Acoustics, Speech, and Signal Processing, </journal> <volume> vol. 36, no. 9, </volume> <pages> pp. 1445-1453, </pages> <month> Sept. </month> <year> 1988. </year>
Reference-contexts: The choice of the parameter depends on the operational rate-distortion curve for the particular input video. The parameter could be determined either by preprocessing a portion of the input video to estimate the rate-distortion curve or through an online iterative search method <ref> [11] </ref>. 4 Heuristic Algorithms While Algorithms M1, M2, and RD generally exhibit better rate-distortion performance than the base PVRG coder, they are computationally expensive.
Reference: [12] <author> B. Widrow and M. E. Hoff, </author> <title> "Adaptive switching circuits", </title> <booktitle> in 1960 IRE WESCON Convention Record, 1960, </booktitle> <volume> vol. 4, </volume> <pages> pp. 96-104. </pages>
Reference-contexts: This is a tedious and time-consuming operation. Instead, we can use an adaptive on-line technique, such as the Widrow-Hoff learning rule <ref> [12, 13] </ref>, to train the model parameters. The training examples could be generated each time we encode a macroblock using motion compensation mode. However, we cannot possibly hope to train one model for each value of Q simply because there would not be enough training examples.
Reference: [13] <author> J. Hertz, A. Krogh, and R. G. Palmer, </author> <title> Introduction to the Theory of Neural Computation, </title> <publisher> Addison-Wesley, </publisher> <address> Redwood City, CA, </address> <year> 1991. </year>
Reference-contexts: This is a tedious and time-consuming operation. Instead, we can use an adaptive on-line technique, such as the Widrow-Hoff learning rule <ref> [12, 13] </ref>, to train the model parameters. The training examples could be generated each time we encode a macroblock using motion compensation mode. However, we cannot possibly hope to train one model for each value of Q simply because there would not be enough training examples.
Reference: [14] <author> W. Ding and B. Liu, </author> <title> "Rate-quantization modeling for rate control of MPEG video coding and recording", </title> <booktitle> in Proceedings SPIE Electronic Imaging Digital Video Compression, </booktitle> <address> San Jose, CA, </address> <month> Feb. </month> <year> 1995, </year> <note> vol. 2419. </note>
Reference-contexts: This agrees well with previous work on rate-quantization modeling <ref> [14] </ref>. Therefore we propose the following form for the cost function: H (~; Q) = c 1 Q Since the previous sections showed that the simple linear model performs relatively well, we do not consider more complex models here.
References-found: 14

