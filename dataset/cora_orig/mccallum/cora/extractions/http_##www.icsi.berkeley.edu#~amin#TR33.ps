URL: http://www.icsi.berkeley.edu/~amin/TR33.ps
Refering-URL: http://www.icsi.berkeley.edu/~amin/RES.html
Root-URL: http://www.icsi.berkeley.edu
Title: Approximation of Complex Numbers by Cyclotomic Integers  
Phone: (510) 643-9153 FAX (510) 643-7684  
Author: M.A. Shokrollahi and V. Stemann 
Date: September 1996  
Address: I 1947 Center St. Suite 600 Berkeley, California 94704-1198  
Affiliation: INTERNATIONAL COMPUTER SCIENCE INSTITUTE  
Pubnum: TR-96-033  
Abstract: We present a new method of approximating complex numbers by cyclotomic integers in Z[e 2i=2 n ] whose coefficients with respect to the basis given by powers of e 2i=2 n are bounded in absolute value by a given integer M. It has been suggested by Cozzens and Finkelstein [5] that such approximations reduce the dynamic range requirements of the discrete Fourier transform. For fixed n our algorithm gives approximations with an error of O(1=M 2 n2 1 ). This proves a heuristic formula of Cozzens and Finkel-stein. We will also prove a matching lower bound for the worst case error of any approximation algorithm and hence show that our algorithm is essentially optimal. Further, we derive a slightly different and more efficient algorithm for approximation by 16th roots of unity. The basic ingredients of our algorithm are the explicit Ga-lois theory of cyclotomic fields as well as cyclotomic units. We use a deep number theoretic property of these units related to the class number of the field. Various examples and running times for this case and that of approximation by 32nd roots of unity are included. Finally, we derive the algebraic and analytic foundations for the generalization of our results to arbitrary algebraic number fields. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Batut, D. Bernardi, H. Cohen, and M. Olivier. </author> <title> User's Guide to PARI-GP. </title> <institution> Universite Bordeaux, 351 Cours de la Liberation, </institution> <month> May </month> <year> 1995. </year> <note> Obtainable via anonymous ftp from megrez.math.u-bordeaux.fr. </note>
Reference-contexts: Due to its simple structure, our algorithm is also suitable for real time computations. In a first step we reduce the complex approximation problem to the approximation problem of real numbers in the interval <ref> [0; 1] </ref>. This is done by separately approximating the real and imaginary part. This only gives an additional factor of two in the bound on the coefficients, and a factor of p 2 on the absolute error of the final approximation. <p> Stated in terms of this function, our problem is to approximate a given real number in <ref> [0; 1] </ref> by an element a 2 Z [ n ] + with L 1 (a) M . L 1 (a) is related to the different conjugates of a in the following way. Lemma 5. <p> is clear once noting that if a j = P ` ff j;` ` , then a 0 +ia 1 = ff 0;0 + j=1 (ff 0;j +ff 1;2 n2 j ) j n + j=1 (ff 1;j ff 0;2 n2 j ) 2 n2 +j 2 Given ! 2 <ref> [0; 1] </ref> and some M 2 N, our aim is to find a = P i ff i i 2 Z [ n ] + such that L 1 (a) M and j! aj c M m1 for some constant c (possibly depending on n). <p> k+m1 ) = " (k) (b) 8" 2 E: i=0 j" (i) j 2 maxconj ("), (c) max 2m2 l=1 maxconj (" l ) M , We first show that if E has the above properties, then for an arbitrary element a in Z [ n ] + M " <ref> [0; 1] </ref> there always exists " 2 E such that a + " 2 Z [ n ] + M . Roughly speaking, one has to choose from E an element " that has its maximum conjugate at the same position as a, but with a different sign. <p> The General Approximation Algorithm (GAA) is given in pseudocode in 9 Precomputation: Sets E 2 k for 0 k blog (L)c as described above. Input: ! 2 <ref> [0; 1] </ref>, M L, M 2 N. <p> Let n be an integer, m = 2 n2 . For any M 2 N one can construct in time O (m 3 log (M )) an approximation algorithm with the following properties: for fixed m it computes in time O (log (M )) on input ! 2 <ref> [0; 1] </ref> an element a 2 Z [ n ] + M such that L 1 (a) M and j! aj = O (M (m1) ). Proof. We first compute the sets E 0 2 k for k = 0; : : : ; blog (M )c. <p> It should be noted that restriction to ! 2 <ref> [0; 1] </ref> is not essential. Actually, for any ! 2 [0; M=2] we can compute an approximation a 2 Z [ n ] + M in the following way. <p> Hence wt (1 3 ) = f3; 2; 1g. The following properties of the sgn-function can be easily verified. Remark 22. Let a = P 3 i=0 ff i i 2 Z [] + " <ref> [0; 1] </ref>. <p> Input: ! 2 <ref> [0; 1] </ref>, M L, M 2 N. <p> The resulting ILP's were solved by the Integer Linear Programming Package lp_solve [2]. All the computations in the field Q (e 2i=32 ) including those of the units were done with the package PARI <ref> [1] </ref>. For each element found in this way, we also computed and stored all the conjugates. This data is used by the approximation algorithm to reduce computing the conjugates of the approximations to table-lookups and additions/subtractions. <p> The theoretical upper bounds for the worst case running time (obtained via Theorem 15) for different M are compared in Table 1 with the maximum number of iterations performed for 1000 random numbers in the interval <ref> [0; 1] </ref>. 7.2 16th roots of unity The units giving rise to the sets E 2 k were computed by solving the Integer Linear Programming problems of Section 6. <p> The results are summarized in Table 2. The entry in the third column in that table gives the maximum number of iterations performed for 1000 random numbers in the interval <ref> [0; 1] </ref>. For the implementation of ABS we deviated a little from the algorithm given in Section 6 by replacing the single addition steps by multisteps obtained from multiplying the current unit by an appropriate multiple. <p> Note that it consists of 22000 approximations of real numbers in <ref> [0; 1] </ref>. Table 2 which accounts for 13000 approximations took 0.7 seconds on the same machine. Table 3 used 0.04 seconds, and Table 4 used under 0.01 seconds of CPU time on the same machine.
Reference: [2] <author> M. Berkelaar. </author> <note> lp_solve 2.0 release. michel@es.ele.tue.nl. </note>
Reference-contexts: The resulting ILP's were solved by the Integer Linear Programming Package lp_solve <ref> [2] </ref>. All the computations in the field Q (e 2i=32 ) including those of the units were done with the package PARI [1]. For each element found in this way, we also computed and stored all the conjugates.
Reference: [3] <author> M. Clausen and M. A. Shokrollahi. </author> <title> Dense Z-modules in C . Unpublished manuscript, </title> <year> 1988. </year>
Reference-contexts: In Section 7 we report on the implementation of our algorithms, on their running times, and on strategies to enhance their performance. Finally, Section 8 prepares the ground for a far reaching generalization of the results of this paper. We have included a theorem obtained by Clausen and Shokrollahi <ref> [3] </ref> on the characterization of complex numbers w such that Z [w] is dense in C . <p> We will start with the characterization of those complex numbers w such that Z [w] is dense in C , see Theorem 30. This theorem has been taken from Clausen and Shokrollahi <ref> [3] </ref>. It turns out that the necessary conditions for this to hold are also sufficient: if w is neither real nor an algebraic integer of degree 2 (in which case Z [w] is a lattice), then Z [w] is dense. Theorem 30.
Reference: [4] <author> J.W. Cooley and J.W. Tukey. </author> <title> An algorithm for the machine calculation of complex Fourier series. </title> <journal> Math. Comp., </journal> <volume> 19 </volume> <pages> 297-301, </pages> <year> 1965. </year>
Reference-contexts: If the approximation errors are not too large, this procedure yields outputs of guaranteed good precision. An important class of computations for which this approach has been developed in detail is the fast Fourier transform <ref> [4] </ref>, FFT for short. The basic idea is as follows (see [5, 6, 7] and the references therein): the input vector as well as the roots of unity involved are approximated by Gaussian integers, i.e., elements of the ring Z [i].
Reference: [5] <author> J. H. Cozzens and L. A. Finkelstein. </author> <title> Computing the discrete Fourier transform using residue number systems in a ring of algebraic integers. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 31(5) </volume> <pages> 580-588, </pages> <year> 1985. </year>
Reference-contexts: If the approximation errors are not too large, this procedure yields outputs of guaranteed good precision. An important class of computations for which this approach has been developed in detail is the fast Fourier transform [4], FFT for short. The basic idea is as follows (see <ref> [5, 6, 7] </ref> and the references therein): the input vector as well as the roots of unity involved are approximated by Gaussian integers, i.e., elements of the ring Z [i]. <p> For example, approximation by Gaussian integers up to an error of 1=n would require integer coefficients in the range [n= 2; : : :; n= 2], see [8]. In a pioneering paper Cozzens and Finkelstein <ref> [5] </ref> suggested to replace the fourth root of unity i by a 2 n th root = e 2i=2 n . <p> Cozzens and Finkelstein give in <ref> [5] </ref> a heuristic argument which suggests that obtaining an approximation 1 error of order O (1=M 2 n2 1 ) for fixed n might be possible. <p> Finally he gives an explicit algorithm, based on continued fractions, to find an " of smallest absolute value. The final result is an algorithm with worst case approximation error of O (1=M ), which compares favorably with the heuristic formula in <ref> [5] </ref>. However, no attempt has been made to justify the algorithm for the case of sixteenth roots. Furthermore, due to the large amount of computations involved, this algorithm is not well suited for real time applications.
Reference: [6] <author> R. A. </author> <title> Games. Complex approximations using algebraic integers. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 31(5) </volume> <pages> 565-579, </pages> <year> 1985. </year>
Reference-contexts: If the approximation errors are not too large, this procedure yields outputs of guaranteed good precision. An important class of computations for which this approach has been developed in detail is the fast Fourier transform [4], FFT for short. The basic idea is as follows (see <ref> [5, 6, 7] </ref> and the references therein): the input vector as well as the roots of unity involved are approximated by Gaussian integers, i.e., elements of the ring Z [i]. <p> As this algorithm has a precomputation phase whose basic ingredient is exhaustive search, it is impractical for larger values of M and n. Games <ref> [6, 7] </ref> develops a greedy algorithm for the special case of the 8th roots of unity. A rough sketch of the algorithm is as follows: in a first step a small element " of Z [] M is found.
Reference: [7] <author> R. A. </author> <title> Games. An algorithm for complex approximation in Z[e 2i=8 ]. IEEE Transactions on Information Theory, </title> <booktitle> 32(4) </booktitle> <pages> 603-607, </pages> <year> 1986. </year>
Reference-contexts: If the approximation errors are not too large, this procedure yields outputs of guaranteed good precision. An important class of computations for which this approach has been developed in detail is the fast Fourier transform [4], FFT for short. The basic idea is as follows (see <ref> [5, 6, 7] </ref> and the references therein): the input vector as well as the roots of unity involved are approximated by Gaussian integers, i.e., elements of the ring Z [i]. <p> As this algorithm has a precomputation phase whose basic ingredient is exhaustive search, it is impractical for larger values of M and n. Games <ref> [6, 7] </ref> develops a greedy algorithm for the special case of the 8th roots of unity. A rough sketch of the algorithm is as follows: in a first step a small element " of Z [] M is found. <p> E has the property that for all real a 2 Z [] M there exists an " 2 E such that a + " is still in Z [] M , i.e., the sum does not violate the bound on the coefficients. Games' algorithm <ref> [7] </ref> for finding the elements of smallest absolute value in the set Z [e 2i=8 ] M shows that these always have absolute norm 1 or 2. Recall that the absolute norm of an algebraic number is the product of its Galois-conjugates.
Reference: [8] <author> M. W. Marcellin and Th. R. Fischer. </author> <title> Encoding algorithms for complex approximation in Z[e 2i=8] . IEEE Transactions on Information Theory, </title> <booktitle> 35(5) </booktitle> <pages> 1133-1136, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: Hence, there is a fundamental tradeoff between the so-called dynamic range requirements, and the precision of the quantization. For example, approximation by Gaussian integers up to an error of 1=n would require integer coefficients in the range [n= 2; : : :; n= 2], see <ref> [8] </ref>. In a pioneering paper Cozzens and Finkelstein [5] suggested to replace the fourth root of unity i by a 2 n th root = e 2i=2 n .
Reference: [9] <author> M. A. Shokrollahi and V. Stemann. </author> <title> Approximation of complex numbers in Z[e 2i=8 ]. Technical Report TR-96-032, </title> <booktitle> International Computer Science Institute, </booktitle> <year> 1996. </year>
Reference-contexts: This modified algorithm uses a signature technique. It is asymptotically comparable to the general method, but is much more efficient in practice. The algorithm is inspired by a simple approximation algorithm in Z [e 2i=8 ] found by the authors <ref> [9] </ref>. In Section 7 we report on the implementation of our algorithms, on their running times, and on strategies to enhance their performance. Finally, Section 8 prepares the ground for a far reaching generalization of the results of this paper. <p> In this special case we use a slightly different algorithm based on the signature of an element. It is inspired by the approximation algorithm in Z [e 2i=8 ] found by the authors in <ref> [9] </ref>. Since we will not deal with the conjugates of the elements explicitly, this algorithm runs faster in practice than the general one. We adopt the notation of the previous sections.
Reference: [10] <author> L. C. </author> <title> Washington. Introduction to Cyclotomic Fields. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1982. </year>
Reference-contexts: This means that the matrix whose (i; j)-entry is the logarithm of the absolute value of the ith conjugate of the jth unit is nonsingular. This is a deep property which follows from the nonvanishing of the Dirichlet L-series at s = 1. The interested reader is referred to <ref> [10, Chapter 8] </ref>. To construct the sets E we start in Section 2 with establishing a fundamental relationship between the size of the coefficients of an algebraic integer and the size of its conjugates. <p> We will later use the results stated here to derive our approximation algorithms in Sections 5 and 6. Proofs of the classic results not explicitly proved here can be found in, e.g., Washington's book <ref> [10] </ref>. 3.1 Explicit Galois Theory Let n := e 2 n , and K n := Q ( n ) be the cyclotomic field generated over Q by n . <p> The following important fact holds for the matrix ffi := (log j (i) 6 Theorem 8. The matrix ffi is invertible. A proof of this classic result can be found in <ref> [10, Chap. 8.1] </ref>. <p> This result suggests the following generalization of the general approximation algorithm GAA: suppose that Q (w) is a CM-field <ref> [10, pp. 38] </ref>, i.e., Q (w) = Q (ff)(i), where ff is a totally real element. Suppose further that we already know a set of units of the ring Z [w i + w i j i 0] with nonvanishing regulator, where bar means complex conjugation. <p> By Dirichlet's Unit Theorem <ref> [10] </ref> the number n equals [Q (w): Q]=2. Abelian number fields satisfy the above assumptions. Hence, our algorithm is readily extendable to all these fields.
References-found: 10

