URL: ftp://ftp.cs.umass.edu/pub/lesser/neiman-AIPS-96.ps
Refering-URL: http://dis.cs.umass.edu/~dann/dann-pubs.html
Root-URL: 
Email: dann@cs.umass.edu  
Title: A Cooperative Repair Method for a Distributed Scheduling System  
Author: Daniel E. Neiman and Victor R. Lesser 
Address: Amherst, MA 01003  
Affiliation: Computer Science Department University of Massachusetts  
Abstract: For some time, we have been studying the issues involved in job-shop scheduling in an environment of cooperative distributed agents, none of which has a complete view of the resources available, or of the tasks to be scheduled. Schedules produced cooperatively by such distributed agents using constraint satisfaction methods are often not optimal because of the inherent asyn-chronicity of the distributed scheduling process, the bounded rationality of the scheduling agents, and the difficulty in completely integrating meta-level heuristics into an agent's local scheduling processes. This paper describes a modification to distributed scheduling in which the loosely coupled distributed processing methods are supplemented with a tightly coupled parallel repair process. We explore the implications on the repair process of a distributed environment in which the designer of the repair algorithm must address issues of agent communication and organization. We describe a search algorithm and a set of heuristics for guiding the repair process and present some experimental results in the context of the Distributed ARM, an airline resource scheduling system. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Berry, P. M.; Choueiry, B. Y.; and Friha, L. </author> <year> 1993. </year> <title> A distributed approach based on temporal abstractions fr planning scheduling and resource allocation. </title> <booktitle> In Workshop Notes of the IJCAI-93 Workshop on Knowledge-based Production Planning, Scheduling, and Control, </booktitle> <pages> pp 23-31. </pages>
Reference: <author> Burke, P., and Prosser, P. </author> <year> 1994. </year> <title> The distributed asynchronous scheduler. In Zweben, </title> <editor> M., and Fox, M. S., eds., </editor> <title> Intelligent Scheduling. </title> <publisher> Morgan Kaufmann. </publisher> <address> chapter 11. </address>
Reference: <author> Hildum, D. W. </author> <year> 1994. </year> <title> Flexibility in a Knowledge-Based System for Solving Dynamic Resource-Constrained Scheduling Problems. </title> <type> Ph.D. Dissertation, </type> <institution> Computer Science Dept., University of Mas-sachusetts, </institution> <address> Amherst, MA 01003. </address>
Reference-contexts: Overview: The Distributed Dynamic Scheduling System In order to test our approach to solving distributed resource-constrained scheduling problems, we have designed a distributed version of a reactive, knowledge-based scheduling system called DSS (the Dynamic Scheduling System) <ref> (Hildum 1994) </ref>. DSS provides a foundation for representing a wide variety of real-world scheduling problems. Its flexible scheduling approach is capable of reactively producing quality schedules within dynamic environments that exhibit unpredictable resource and order behavior.
Reference: <author> Johnston, M. D., and Minton, S. </author> <year> 1994. </year> <title> Analyzing a heuristic strategy for constraint-satisfaction and scheduling. In Zweben, </title> <editor> M., and Fox, M. S., eds., </editor> <title> Intelligent Scheduling. </title> <publisher> Morgan Kaufmann. </publisher> <address> chapter 9. </address>
Reference: <author> Minton, S.; Johnston, M. D.; Philips, A. B.; and Laird, P. </author> <year> 1990. </year> <title> Solving large-scale constraint satisfaction and scheduling problems using a heuristic repair method. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence, </booktitle> <pages> 17-24. </pages>
Reference: <author> Miyashita, K., and Sycara, K. </author> <year> 1994. </year> <title> Adaptive case-based control of schedule revision. In Zweben, </title> <editor> M., and Fox, M. S., eds., </editor> <title> Intelligent Scheduling. </title> <publisher> Morgan Kaufmann. </publisher> <address> chapter 10. </address>
Reference: <author> Neiman, D.; Hildum, D.; Lesser, V.; and Sand-holm, T. </author> <year> 1994. </year> <title> Exploiting meta-level information in a distributed scheduling system. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, </booktitle> <pages> 394-400. </pages>
Reference-contexts: The focus of this paper is the development of tools for examining the trade-offs between a loosely-coupled distributed scheduling process and a more tightly-coupled parallel search method for constructing multi-step repair plans for situations that would otherwise require costly constraint relaxations. In a previous work <ref> (Neiman et al. 1994) </ref>, we reported on heuristics for coordinating the scheduling processes of multiple cooperative agents. During scheduling, agents regularly transmit abstractions (texture measures) of their current resource capabilities and anticipated resource requirements to remote agents. <p> The second heuristic, favoring plans that can be developed locally, reduces the communication overhead. Experimental Results The distributed schedule repair method was tested using several order sets developed for a three agent configuration of the DIS-ARM distributed scheduler as reported in <ref> (Neiman et al. 1994) </ref>. We chose three order sets displaying considerable tardiness under distributed scheduling despite the use of texture-based scheduling heuristics. For each order set, we generated ten test cases by randomly assigning resources and orders to each of the three agents.
Reference: <author> Sadeh, N. </author> <year> 1991. </year> <title> Look-Ahead Techniques for Micro-Opportunistic Job Shop Scheduling. </title> <type> Ph.D. Dissertation, </type> <institution> Carnegie Mellon University, </institution> <address> Pittsburgh PA. </address>
Reference-contexts: Agents performing a scheduling action must determine whether their actions will affect other agents, and which agents would be affected, and transmit information accordingly. Agents must also frequently integrate newly received abstractions into their local planning process. In our micro-opportunistic scheduling architecture <ref> (Sadeh 1991) </ref>, new information requires an agent to continually rerate its scheduling goals in order to focus on the most critical scheduling tasks.
Reference: <author> Sycara, K.; Roth, S.; Sadeh, N.; and Fox, M. </author> <year> 1991. </year> <title> Distributed constrained heuristic search. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics 21(6) </journal> <pages> 1446-1461. </pages>
Reference: <author> Yokoo, M.; Ishida, T.; and Kuwabara, K. </author> <year> 1990. </year> <title> Distributed constraint satisfaction for DAI problems. </title> <booktitle> In Proceedings of the 10th International Workshop on Distributed Artificial Intelligence. </booktitle>
Reference: <author> Zweben, M.; Daun, B.; Davis, E.; and Deale, M. </author> <year> 1994. </year> <title> Scheduling and rescheduling with iterative repair. In Zweben, </title> <editor> M., and Fox, M. S., eds., </editor> <title> Intelligent Scheduling. </title> <publisher> Morgan Kaufmann. </publisher> <address> chapter 8. </address>
References-found: 11

